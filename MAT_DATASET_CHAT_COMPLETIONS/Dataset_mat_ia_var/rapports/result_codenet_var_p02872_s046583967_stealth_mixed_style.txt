================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from random import randint as _randint
import numpy as np
from scipy.sparse import csr_matrix
from scipy.sparse.csgraph import floyd_warshall

input = sys.stdin.buffer.readline

# 問題AとB両方同じコードだと嬉しいね
PROBLEM_B = True

def parse_graph():
    V, E = map(int, input().split())
    src = []; dst = []; weights = []
    for __ in range(E):
        usp = list(map(int, input().split()))
        src.append(usp[0]); dst.append(usp[1]); weights.append(usp[2])
    return V, E, src, dst, weights

V, E, v_from, v_to, cost = parse_graph()
graph = csr_matrix((cost, (v_from, v_to)), shape=(V+1, V+1))
_dist, _pred = floyd_warshall(csgraph=graph, directed=False, return_predecessors=True)
_dist[_dist == 0] = float('inf')
min_nodes = [np.argmin(row) for row in _dist]

if PROBLEM_B:
    input()
T_MAX = int(input())

T = 0; delivering = 0; returning = None
last_return = 0
destination, vnext = 1, 1
all_orders = []
delivered_here = set()
def order_in():
    nonlocal_orders = globals().get('all_orders', [])
    count = int(input())
    xs = []
    for _ in range(count):
        xs.append(int(input().split()[1]))
    nonlocal_orders.append(xs)
    if PROBLEM_B:
        [input() for _ in range(int(input()))]
    globals()['all_orders'] = nonlocal_orders

def step_time():
    global T
    T += 1
    if T < T_MAX:
        order_in()

def PF(x):
    print(x, flush=True)
    if PROBLEM_B:
        input()
        [input() for _ in range(int(input()))]

order_in()

while T < T_MAX:
    # State: delivering
    if delivering:
        PF(vnext)
        remaining_next -= 1
        if remaining_next == 0:
            if vnext == 1:
                last_return = max(last_return, T - _randint(0,200))
            delivered_here.add(vnext)
            tmp = _pred[destination, vnext]
            if tmp != -9999:
                remaining_next = _dist[vnext, tmp]
                vnext = tmp
        remaining_last -= 1
        if remaining_last == 0:
            if destination == 1:
                returning = False
                delivering = False
            elif not returning:
                i_j = [-1, -1]; mn1, mn2 = 10**18, 10**18
                idx, jdx = i_j
                for i, O in enumerate(all_orders):
                    if not O:
                        continue
                    if i <= last_return:
                        for j, d in enumerate(O):
                            if d in delivered_here:
                                O[j] = 0
                            else:
                                dval = _dist[vnext, d]
                                if dval < mn1:
                                    mn1, idx, jdx = dval, i, j
                delivered_here = set()
                if mn1 < mn2:
                    destination = all_orders[idx].pop(jdx)
                    remaining_last = _dist[vnext, destination]
                    tmp = _pred[destination, vnext]
                    remaining_next = _dist[vnext, tmp]
                    vnext = tmp
                else:
                    returning = True
                    remaining_last = _dist[destination, 1]
                    vnext = _pred[1, destination]
                    remaining_next = _dist[destination, vnext]
                    destination = 1
            step_time()
        else:
            step_time()
    # State: idle
    else:
        last_return = T
        idx = jdx = -1
        remaining_last = 0
        dmin = 10**18
        for i, lst in enumerate(all_orders):
            if not lst:
                continue
            for j, u in enumerate(lst):
                val = _dist[1, u] + abs(T-i)**2
                if val < dmin:
                    dmin=val
                    idx, jdx = i, j
        if idx == -1:
            PF(-1)
            step_time()
            continue
        destination = all_orders[idx].pop(jdx)
        remaining_last = _dist[1, destination]
        vnext = _pred[destination, 1]
        remaining_next = _dist[1, vnext]
        delivering = True
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6418636441230774
    2. '.' → logprob: -0.8918636441230774
    3. 'import' → logprob: -4.016863822937012
    4. 'newline' → logprob: -4.266863822937012
    5. '\' → logprob: -4.766863822937012
    6. '<|end|>' → logprob: -4.891863822937012
    7. '```' → logprob: -5.391863822937012
    8. '
' → logprob: -5.641863822937012
    9. '<|end|>' → logprob: -6.516863822937012
    10. '' → logprob: -6.516863822937012

Token 4: ' random' (ID: 7526)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.623258113861084
    2. 'import' → logprob: -0.873258113861084
    3. '.' → logprob: -3.123258113861084
    4. ' ' → logprob: -6.623258113861084
    5. '_' → logprob: -8.248258590698242
    6. '_import' → logprob: -8.623258590698242
    7. 'space' → logprob: -8.998258590698242
    8. '<|end|>' → logprob: -9.873258590698242
    9. '```' → logprob: -9.873258590698242
    10. ' im' → logprob: -10.623258590698242

Token 6: ' randint' (ID: 135439)
  Prédit: ' randint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' randint' → logprob: -0.013448438607156277
    2. ' choice' → logprob: -4.638448238372803
    3. ' random' → logprob: -5.763448238372803
    4. ' rand' → logprob: -8.263448715209961
    5. ' ' → logprob: -8.888448715209961
    6. 'choice' → logprob: -9.138448715209961
    7. 'rand' → logprob: -10.638448715209961
    8. ' choices' → logprob: -11.638448715209961
    9. 'random' → logprob: -12.638448715209961
    10. ' sample' → logprob: -13.138448715209961

Token 7: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9794301986694336
    2. '\n' → logprob: -1.2294301986694336
    3. '

' → logprob: -2.4794301986694336
    4. '' → logprob: -2.4794301986694336
    5. '```' → logprob: -2.8544301986694336
    6. '(' → logprob: -3.6044301986694336
    7. 'import' → logprob: -3.6044301986694336
    8. '<|end|>' → logprob: -4.479430198669434
    9. '\' → logprob: -4.604430198669434
    10. 'newline' → logprob: -5.104430198669434

Token 8: ' _' (ID: 1175)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.6163281202316284
    2. 'r' → logprob: -0.8663281202316284
    3. 'rand' → logprob: -3.991328239440918
    4. ' ri' → logprob: -4.241328239440918
    5. ' r' → logprob: -5.366328239440918
    6. 'rd' → logprob: -7.491328239440918
    7. 'rnd' → logprob: -7.866328239440918
    8. 'random' → logprob: -8.616328239440918
    9. 'rie' → logprob: -8.866328239440918
    10. ' rand' → logprob: -8.991328239440918

Token 9: 'rand' (ID: 21785)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09763053804636002
    2. 'rand' → logprob: -2.847630500793457
    3. '_' → logprob: -4.097630500793457
    4. '_r' → logprob: -4.722630500793457
    5. 'ra' → logprob: -5.097630500793457
    6. 'ran' → logprob: -6.847630500793457
    7. 'ri' → logprob: -7.472630500793457
    8. 'random' → logprob: -7.972630500793457
    9. '_rand' → logprob: -8.347630500793457
    10. 'a' → logprob: -8.972630500793457

Token 10: 'int' (ID: 491)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7932652235031128
    2. '(' → logprob: -0.9182652235031128
    3. ',' → logprob: -2.9182653427124023
    4. ' ' → logprob: -3.6682653427124023
    5. '.' → logprob: -3.9182653427124023
    6. '
' → logprob: -4.168265342712402
    7. '' → logprob: -4.543265342712402
    8. '\' → logprob: -5.293265342712402
    9. ' (' → logprob: -5.918265342712402
    10. ')' → logprob: -6.043265342712402

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9776332974433899
    2. '(' → logprob: -1.7276332378387451
    3. '

' → logprob: -1.7276332378387451
    4. ',' → logprob: -2.852633237838745
    5. '' → logprob: -3.227633237838745
    6. '\n' → logprob: -3.352633237838745
    7. '(
' → logprob: -3.477633237838745
    8. '\' → logprob: -3.602633237838745
    9. '```' → logprob: -3.977633237838745
    10. 'import' → logprob: -4.852633476257324

Token 12: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0520132780075073
    2. '
' → logprob: -1.4270132780075073
    3. '(' → logprob: -2.052013397216797
    4. ',' → logprob: -2.427013397216797
    5. 'import' → logprob: -2.677013397216797
    6. '\n' → logprob: -3.552013397216797
    7. '' → logprob: -3.802013397216797
    8. '(
' → logprob: -4.552013397216797
    9. '```' → logprob: -5.052013397216797
    10. ' ' → logprob: -5.177013397216797

Token 13: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0028129592537879944
    2. ' sys' → logprob: -6.62781286239624
    3. ' ' → logprob: -7.25281286239624
    4. ' math' → logprob: -8.002813339233398
    5. ' random' → logprob: -8.127813339233398
    6. '_' → logprob: -9.377813339233398
    7. ' _' → logprob: -11.002813339233398
    8. ' string' → logprob: -12.127813339233398
    9. ' numpy' → logprob: -12.127813339233398
    10. 'os' → logprob: -12.252813339233398

Token 14: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.22983992099761963
    2. 'as' → logprob: -1.9798399209976196
    3. '<|end|>' → logprob: -3.35483980178833
    4. '.' → logprob: -3.47983980178833
    5. ' ' → logprob: -7.22983980178833
    6. '.as' → logprob: -8.229840278625488
    7. '<|end|>' → logprob: -8.729840278625488
    8. '.ndarray' → logprob: -9.354840278625488
    9. '_' → logprob: -9.854840278625488
    10. ' .' → logprob: -10.354840278625488

Token 15: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.003729060757905245
    2. 'np' → logprob: -5.628728866577148
    3. ' ' → logprob: -9.753728866577148
    4. '_np' → logprob: -10.503728866577148
    5. ' ' → logprob: -11.128728866577148
    6. '_' → logprob: -11.753728866577148
    7. ' numpy' → logprob: -12.003728866577148
    8. '_numpy' → logprob: -12.753728866577148
    9. ' _' → logprob: -13.003728866577148
    10. ' array' → logprob: -13.128728866577148

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5896724462509155
    2. '\n' → logprob: -1.9646724462509155
    3. '<|end|>' → logprob: -2.214672565460205
    4. 'import' → logprob: -2.339672565460205
    5. '

' → logprob: -3.339672565460205
    6. 'newline' → logprob: -4.714672565460205
    7. '' → logprob: -4.714672565460205
    8. '```' → logprob: -4.714672565460205
    9. '\' → logprob: -4.839672565460205
    10. ',' → logprob: -4.964672565460205

Token 17: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0838735103607178
    2. '<|end|>' → logprob: -1.0838735103607178
    3. '```' → logprob: -2.2088735103607178
    4. '\n' → logprob: -2.5838735103607178
    5. 'import' → logprob: -3.0838735103607178
    6. '\' → logprob: -3.5838735103607178
    7. ',' → logprob: -4.333873748779297
    8. '

' → logprob: -4.458873748779297
    9. '#' → logprob: -4.833873748779297
    10. '[' → logprob: -5.208873748779297

Token 18: ' scipy' (ID: 68933)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.9206150770187378
    2. ' scipy' → logprob: -1.2956150770187378
    3. ' math' → logprob: -1.6706150770187378
    4. ' collections' → logprob: -3.6706151962280273
    5. ' random' → logprob: -3.7956151962280273
    6. 'sk' → logprob: -4.295615196228027
    7. ' numpy' → logprob: -4.295615196228027
    8. ' pandas' → logprob: -4.670615196228027
    9. ' tensorflow' → logprob: -5.045615196228027
    10. ' torch' → logprob: -5.045615196228027

Token 19: '.s' (ID: 640)
  Prédit: '.stats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stats' → logprob: -0.5366833209991455
    2. '.' → logprob: -1.5366833209991455
    3. '.linalg' → logprob: -1.9116833209991455
    4. ' import' → logprob: -4.036683082580566
    5. '.optimize' → logprob: -4.536683082580566
    6. '.special' → logprob: -5.036683082580566
    7. '.s' → logprob: -5.161683082580566
    8. '.interpolate' → logprob: -5.536683082580566
    9. 'import' → logprob: -5.911683082580566
    10. ' .' → logprob: -6.286683082580566

Token 20: 'parse' (ID: 4841)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5191903114318848
    2. 'parse' → logprob: -1.1441903114318848
    3. 'patial' → logprob: -3.0191903114318848
    4. 'tat' → logprob: -4.019190311431885
    5. 'pecial' → logprob: -4.269190311431885
    6. 'ignal' → logprob: -6.519190311431885
    7. 'p' → logprob: -6.769190311431885
    8. 'pare' → logprob: -7.269190311431885
    9. 'tar' → logprob: -8.019189834594727
    10. 'pat' → logprob: -8.269189834594727

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6510220766067505
    2. 'import' → logprob: -0.7760220766067505
    3. '<|end|>' → logprob: -4.651021957397461
    4. '.linalg' → logprob: -5.276021957397461
    5. '.' → logprob: -6.651021957397461
    6. ' ' → logprob: -6.901021957397461
    7. '	import' → logprob: -7.901021957397461
    8. '.c' → logprob: -8.151021957397461
    9. '._' → logprob: -9.276021957397461
    10. '<|end|>' → logprob: -9.401021957397461

Token 22: ' csr' (ID: 162927)
  Prédit: ' csr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' csr' → logprob: -0.4130556583404541
    2. ' co' → logprob: -1.913055658340454
    3. 'csr' → logprob: -2.288055658340454
    4. ' c' → logprob: -3.288055658340454
    5. 'c' → logprob: -4.538055419921875
    6. 'co' → logprob: -4.663055419921875
    7. ' random' → logprob: -4.663055419921875
    8. ' lil' → logprob: -5.288055419921875
    9. ' b' → logprob: -5.913055419921875
    10. ' di' → logprob: -5.913055419921875

Token 23: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.00939076766371727
    2. 'matrix' → logprob: -4.759390830993652
    3. 'atrix' → logprob: -7.384390830993652
    4. ' matrix' → logprob: -9.759390830993652
    5. 'mat' → logprob: -10.134390830993652
    6. 'Matrix' → logprob: -10.259390830993652
    7. 'import' → logprob: -12.009390830993652
    8. '_MATRIX' → logprob: -12.384390830993652
    9. '_mat' → logprob: -12.509390830993652
    10. 'pm' → logprob: -13.134390830993652

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7739732265472412
    2. '
' → logprob: -1.1489732265472412
    3. '\n' → logprob: -2.648973226547241
    4. 'import' → logprob: -3.023973226547241
    5. '```' → logprob: -3.273973226547241
    6. '' → logprob: -4.39897346496582
    7. '<|end|>' → logprob: -4.39897346496582
    8. ',' → logprob: -4.64897346496582
    9. '[' → logprob: -4.89897346496582
    10. 'def' → logprob: -5.27397346496582

Token 26: ' scipy' (ID: 68933)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.4847812354564667
    2. ' scipy' → logprob: -0.9847812652587891
    3. ' collections' → logprob: -5.359781265258789
    4. 'sk' → logprob: -6.359781265258789
    5. ' numpy' → logprob: -6.484781265258789
    6. ' itertools' → logprob: -7.484781265258789
    7. ' math' → logprob: -7.609781265258789
    8. 'sc' → logprob: -8.109781265258789
    9. ' copy' → logprob: -8.734781265258789
    10. ' network' → logprob: -8.984781265258789

Token 27: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.053680676966905594
    2. '.' → logprob: -3.178680658340454
    3. '.linalg' → logprob: -5.428680896759033
    4. 's' → logprob: -6.428680896759033
    5. '.optimize' → logprob: -6.553680896759033
    6. '_sparse' → logprob: -7.303680896759033
    7. ' .' → logprob: -7.553680896759033
    8. '.stats' → logprob: -7.803680896759033
    9. ' import' → logprob: -7.928680896759033
    10. 'import' → logprob: -7.928680896759033

Token 28: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.005475651938468218
    2. 'patial' → logprob: -5.2554755210876465
    3. 'par' → logprob: -9.380475997924805
    4. 'p' → logprob: -9.505475997924805
    5. 'pecial' → logprob: -10.005475997924805
    6. 'pare' → logprob: -11.255475997924805
    7. 'pa' → logprob: -11.630475997924805
    8. 'pars' → logprob: -12.380475997924805
    9. 'pm' → logprob: -12.630475997924805
    10. 'ignal' → logprob: -13.130475997924805

Token 29: '.cs' (ID: 37596)
  Prédit: '.linalg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.10139340162277222
    2. '._' → logprob: -3.101393461227417
    3. '.' → logprob: -4.101393222808838
    4. ' import' → logprob: -4.351393222808838
    5. 'import' → logprob: -4.601393222808838
    6. ' .' → logprob: -5.101393222808838
    7. '.c' → logprob: -5.726393222808838
    8. '<|end|>' → logprob: -6.601393222808838
    9. '.data' → logprob: -8.226393699645996
    10. '_' → logprob: -9.226393699645996

Token 30: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.44457149505615234
    2. 'r' → logprob: -1.0695714950561523
    3. 'raph' → logprob: -4.569571495056152
    4. 'ring' → logprob: -6.069571495056152
    5. 'c' → logprob: -7.319571495056152
    6. 'parse' → logprob: -8.194571495056152
    7. 'rg' → logprob: -8.444571495056152
    8. 'rt' → logprob: -8.569571495056152
    9. '```' → logprob: -8.694571495056152
    10. 'rtype' → logprob: -8.944571495056152

Token 31: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0189096350222826
    2. 'import' → logprob: -4.018909454345703
    3. '.' → logprob: -7.768909454345703
    4. '_import' → logprob: -9.018909454345703
    5. ' ' → logprob: -9.643909454345703
    6. ' .' → logprob: -10.018909454345703
    7. '_' → logprob: -10.143909454345703
    8. ' _' → logprob: -11.143909454345703
    9. '._' → logprob: -11.268909454345703
    10. ' as' → logprob: -12.143909454345703

Token 32: ' flo' (ID: 15037)
  Prédit: '_connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_connected' → logprob: -1.3244339227676392
    2. ' connected' → logprob: -1.4494339227676392
    3. 'connected' → logprob: -1.8244339227676392
    4. '_short' → logprob: -1.8244339227676392
    5. ' shortest' → logprob: -2.1994338035583496
    6. 'short' → logprob: -3.8244338035583496
    7. '_d' → logprob: -4.44943380355835
    8. ' d' → logprob: -4.44943380355835
    9. '_' → logprob: -4.82443380355835
    10. 'd' → logprob: -6.19943380355835

Token 33: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.0021835691295564175
    2. 'y' → logprob: -6.252183437347412
    3. 'yed' → logprob: -8.37718391418457
    4. 'yer' → logprob: -11.75218391418457
    5. 'od' → logprob: -11.75218391418457
    6. 'ydd' → logprob: -12.50218391418457
    7. '```' → logprob: -14.00218391418457
    8. 'yt' → logprob: -14.25218391418457
    9. 'yard' → logprob: -14.50218391418457
    10. ' yd' → logprob: -14.50218391418457

Token 34: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.652451464906335e-05
    2. 'war' → logprob: -11.750016212463379
    3. 'War' → logprob: -12.625016212463379
    4. '-war' → logprob: -14.000016212463379
    5. '_h' → logprob: -14.125016212463379
    6. '```' → logprob: -14.125016212463379
    7. '\' → logprob: -14.375016212463379
    8. '_W' → logprob: -14.625016212463379
    9. '<|end|>' → logprob: -14.875016212463379
    10. '_cycle' → logprob: -15.250016212463379

Token 35: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0002096197713399306
    2. 'arshal' → logprob: -8.50020980834961
    3. 'arst' → logprob: -13.12520980834961
    4. '_ar' → logprob: -13.50020980834961
    5. '(ar' → logprob: -14.00020980834961
    6. 'ars' → logprob: -14.62520980834961
    7. ' ar' → logprob: -14.62520980834961
    8. '$ar' → logprob: -15.00020980834961
    9. '	ar' → logprob: -15.37520980834961
    10. 'ар' → logprob: -15.87520980834961

Token 36: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.025651467964053154
    2. 'all' → logprob: -3.775651454925537
    3. 'hall' → logprob: -7.775651454925537
    4. 'ar' → logprob: -7.775651454925537
    5. 'shal' → logprob: -7.775651454925537
    6. '```' → logprob: -8.150651931762695
    7. 'arshal' → logprob: -8.275651931762695
    8. '_all' → logprob: -8.525651931762695
    9. 's' → logprob: -9.775651931762695
    10. '``' → logprob: -9.775651931762695

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7841924428939819
    2. '

' → logprob: -1.159192442893982
    3. '(' → logprob: -2.4091925621032715
    4. '\n' → logprob: -3.4091925621032715
    5. 'def' → logprob: -3.6591925621032715
    6. 'import' → logprob: -4.2841925621032715
    7. '<|end|>' → logprob: -4.4091925621032715
    8. '(
' → logprob: -4.7841925621032715
    9. '' → logprob: -4.9091925621032715
    10. '```' → logprob: -5.2841925621032715

Token 38: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2005399763584137
    2. '
' → logprob: -2.700540065765381
    3. '\n' → logprob: -3.575540065765381
    4. '<|end|>' → logprob: -3.950540065765381
    5. 'import' → logprob: -4.325540065765381
    6. '

' → logprob: -4.325540065765381
    7. '#' → logprob: -4.700540065765381
    8. 'class' → logprob: -4.950540065765381
    9. '' → logprob: -5.075540065765381
    10. '(' → logprob: -5.825540065765381

Token 39: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06232134997844696
    2. '=' → logprob: -3.687321424484253
    3. '()' → logprob: -4.437321186065674
    4. ' =' → logprob: -4.812321186065674
    5. '_' → logprob: -5.062321186065674
    6. ')' → logprob: -5.437321186065674
    7. '.' → logprob: -6.687321186065674
    8. '_data' → logprob: -6.937321186065674
    9. '```' → logprob: -8.062321662902832
    10. '(
' → logprob: -8.187321662902832

Token 40: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6279261112213135
    2. ' sys' → logprob: -0.8779261112213135
    3. 'input' → logprob: -3.1279261112213135
    4. ' input' → logprob: -5.002925872802734
    5. 'lambda' → logprob: -10.127925872802734
    6. '(sys' → logprob: -10.627925872802734
    7. ' lambda' → logprob: -11.127925872802734
    8. '=sys' → logprob: -11.127925872802734
    9. '	sys' → logprob: -11.252925872802734
    10. '_sys' → logprob: -11.877925872802734

Token 41: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0029482210520654917
    2. '.input' → logprob: -6.50294828414917
    3. '.' → logprob: -7.25294828414917
    4. '.stdout' → logprob: -8.252947807312012
    5. ' .' → logprob: -8.752947807312012
    6. '.std' → logprob: -9.127947807312012
    7. '.readline' → logprob: -9.377947807312012
    8. '.argv' → logprob: -10.127947807312012
    9. '.path' → logprob: -11.002947807312012
    10. '._' → logprob: -11.252947807312012

Token 42: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005697573069483042
    2. '.' → logprob: -5.380697727203369
    3. '.read' → logprob: -6.880697727203369
    4. '.readlines' → logprob: -10.130697250366211
    5. 'read' → logprob: -12.005697250366211
    6. '.buffer' → logprob: -14.005697250366211
    7. ' readline' → logprob: -14.255697250366211
    8. '.write' → logprob: -14.630697250366211
    9. '.Read' → logprob: -14.880697250366211
    10. '```' → logprob: -15.380697250366211

Token 43: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03408384323120117
    2. '.read' → logprob: -3.534083843231201
    3. '.' → logprob: -6.034083843231201
    4. 'read' → logprob: -6.284083843231201
    5. '.readlines' → logprob: -9.90908432006836
    6. '_read' → logprob: -12.78408432006836
    7. ' readline' → logprob: -12.78408432006836
    8. '<|end|>' → logprob: -14.03408432006836
    9. 'def' → logprob: -14.53408432006836
    10. '.peek' → logprob: -14.78408432006836

Token 44: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1844911575317383
    2. '
' → logprob: -1.3094911575317383
    3. 'def' → logprob: -1.3094911575317383
    4. '

' → logprob: -2.8094911575317383
    5. '\n' → logprob: -3.6844911575317383
    6. '(
' → logprob: -3.8094911575317383
    7. '#' → logprob: -4.809491157531738
    8. '\' → logprob: -5.559491157531738
    9. '()' → logprob: -5.559491157531738
    10. '' → logprob: -5.684491157531738

Token 45: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0870632603764534
    2. 'n' → logprob: -2.7120633125305176
    3. 'class' → logprob: -4.587063312530518
    4. '\n' → logprob: -6.587063312530518
    5. '(n' → logprob: -6.587063312530518
    6. '
' → logprob: -6.712063312530518
    7. '#' → logprob: -7.587063312530518
    8. '\' → logprob: -7.837063312530518
    9. 'd' → logprob: -7.962063312530518
    10. 'ndef' → logprob: -8.71206283569336

Token 46: ' �' (ID: 41851)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3961361348628998
    2. ' n' → logprob: -2.5211360454559326
    3. ' def' → logprob: -2.8961360454559326
    4. 'n' → logprob: -2.8961360454559326
    5. 'class' → logprob: -3.2711360454559326
    6. ' class' → logprob: -3.8961360454559326
    7. '#' → logprob: -4.396136283874512
    8. 'N' → logprob: -5.021136283874512
    9. 'graph' → logprob: -5.021136283874512
    10. ' graph' → logprob: -5.271136283874512

Token 47: '�' (ID: 237)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03392748907208443
    2. 'd' → logprob: -4.7839274406433105
    3. 'def' → logprob: -5.0339274406433105
    4. '_' → logprob: -5.6589274406433105
    5. 'n' → logprob: -5.9089274406433105
    6. '=' → logprob: -5.9089274406433105
    7. 'D' → logprob: -6.7839274406433105
    8. 'N' → logprob: -7.0339274406433105
    9. '-' → logprob: -7.6589274406433105
    10. '#
' → logprob: -8.033927917480469

Token 48: '題' (ID: 50871)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7184717655181885
    2. ' ' → logprob: -0.8434717655181885
    3. '_' → logprob: -3.2184717655181885
    4. '=' → logprob: -3.7184717655181885
    5. 'def' → logprob: -5.218471527099609
    6. ' =' → logprob: -5.718471527099609
    7. ' #' → logprob: -6.593471527099609
    8. ')' → logprob: -6.718471527099609
    9. 'n' → logprob: -7.093471527099609
    10. ',' → logprob: -7.343471527099609

Token 49: 'A' (ID: 32)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.014405947178602219
    2. 'def' → logprob: -4.514405727386475
    3. 'n' → logprob: -7.139405727386475
    4. ':' → logprob: -7.889405727386475
    5. '=' → logprob: -8.014406204223633
    6. '_' → logprob: -8.139406204223633
    7. ',' → logprob: -8.764406204223633
    8. 's' → logprob: -8.889406204223633
    9. '<|end|>' → logprob: -8.889406204223633
    10. '<|end|>' → logprob: -9.264406204223633

Token 50: 'と' (ID: 5330)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2580312490463257
    2. 'def' → logprob: -1.7580312490463257
    3. ':' → logprob: -4.258031368255615
    4. '<|end|>' → logprob: -4.383031368255615
    5. '<|end|>' → logprob: -5.133031368255615
    6. '
' → logprob: -5.383031368255615
    7. '\n' → logprob: -5.883031368255615
    8. 'class' → logprob: -6.258031368255615
    9. 'a' → logprob: -6.508031368255615
    10. ',' → logprob: -6.758031368255615

Token 51: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03248893469572067
    2. '#' → logprob: -4.157488822937012
    3. '題' → logprob: -5.282488822937012
    4. ' B' → logprob: -6.157488822937012
    5. '続きを' → logprob: -6.782488822937012
    6. ':' → logprob: -6.907488822937012
    7. '問題' → logprob: -7.032488822937012
    8. '続' → logprob: -7.282488822937012
    9. '```' → logprob: -7.657488822937012
    10. '解' → logprob: -7.782488822937012

Token 52: '�' (ID: 624)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1368350386619568
    2. 'def' → logprob: -2.8868350982666016
    3. 'の' → logprob: -4.136835098266602
    4. '
' → logprob: -4.386835098266602
    5. ',' → logprob: -4.511835098266602
    6. ':' → logprob: -5.011835098266602
    7. '<|end|>' → logprob: -5.136835098266602
    8. 'class' → logprob: -5.511835098266602
    9. '<|end|>' → logprob: -6.386835098266602
    10. '=' → logprob: -6.386835098266602

Token 53: '�' (ID: 94)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8835601806640625
    2. 'の' → logprob: -1.2585601806640625
    3. '�' → logprob: -1.6335601806640625
    4. 'に' → logprob: -3.7585601806640625
    5. '��' → logprob: -4.6335601806640625
    6. 'が' → logprob: -4.8835601806640625
    7. 'を' → logprob: -4.8835601806640625
    8. ':' → logprob: -5.1335601806640625
    9. ' ' → logprob: -5.4460601806640625
    10. '���' → logprob: -5.8210601806640625

Token 54: '方' (ID: 4983)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.42308205366134644
    2. 'def' → logprob: -1.1730821132659912
    3. '
' → logprob: -4.548081874847412
    4. ':' → logprob: -5.173081874847412
    5. ',' → logprob: -5.923081874847412
    6. '<|end|>' → logprob: -6.048081874847412
    7. '<|end|>' → logprob: -6.673081874847412
    8. '=' → logprob: -6.798081874847412
    9. 'class' → logprob: -6.798081874847412
    10. '(' → logprob: -6.923081874847412

Token 55: '同' (ID: 9553)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38276639580726624
    2. 'def' → logprob: -1.7577663660049438
    3. '```' → logprob: -3.1327664852142334
    4. 'の' → logprob: -3.8827664852142334
    5. '=' → logprob: -4.882766246795654
    6. '
' → logprob: -4.882766246795654
    7. ')' → logprob: -5.257766246795654
    8. 'に' → logprob: -5.320266246795654
    9. '�' → logprob: -5.382766246795654
    10. '法' → logprob: -5.382766246795654

Token 56: 'じ' (ID: 29884)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005968611687421799
    2. 'def' → logprob: -6.2559685707092285
    3. '
' → logprob: -7.0059685707092285
    4. '=' → logprob: -7.7559685707092285
    5. ',' → logprob: -8.005969047546387
    6. '#
' → logprob: -8.255969047546387
    7. ')' → logprob: -8.255969047546387
    8. '<|end|>' → logprob: -8.380969047546387
    9. ' ' → logprob: -8.505969047546387
    10. ':' → logprob: -8.880969047546387

Token 57: 'コード' (ID: 126128)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.022333435714244843
    2. 'def' → logprob: -3.8973333835601807
    3. '
' → logprob: -7.77233362197876
    4. ',' → logprob: -8.397333145141602
    5. '_' → logprob: -8.647333145141602
    6. ' ' → logprob: -9.022333145141602
    7. 'd' → logprob: -9.772333145141602
    8. 'de' → logprob: -9.772333145141602
    9. '=' → logprob: -9.897333145141602
    10. '' → logprob: -9.897333145141602

Token 58: 'だ' (ID: 11792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009493387304246426
    2. 'def' → logprob: -6.009493350982666
    3. '
' → logprob: -6.384493350982666
    4. ',' → logprob: -6.884493350982666
    5. '_' → logprob: -7.259493350982666
    6. '=' → logprob: -7.634493350982666
    7. ' ' → logprob: -7.884493350982666
    8. '' → logprob: -7.884493350982666
    9. ':' → logprob: -8.259493827819824
    10. '<|end|>' → logprob: -8.509493827819824

Token 59: 'と' (ID: 5330)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.013669287785887718
    2. 'def' → logprob: -5.138669490814209
    3. '
' → logprob: -6.388669490814209
    4. ',' → logprob: -6.513669490814209
    5. '<|end|>' → logprob: -7.513669490814209
    6. '=' → logprob: -7.638669490814209
    7. '<|end|>' → logprob: -7.888669490814209
    8. ' #' → logprob: -7.888669490814209
    9. '.' → logprob: -8.01366901397705
    10. ':' → logprob: -8.38866901397705

Token 60: '嬉' (ID: 184267)
  Prédit: '思'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '思' → logprob: -0.054823607206344604
    2. 'と' → logprob: -3.804823637008667
    3. '```' → logprob: -4.929823398590088
    4. 'と思' → logprob: -5.054823398590088
    5. 'す' → logprob: -5.554823398590088
    6. 'め' → logprob: -5.679823398590088
    7. 'け' → logprob: -6.304823398590088
    8. 'せ' → logprob: -7.554823398590088
    9. 'も' → logprob: -7.804823398590088
    10. 'し' → logprob: -7.804823398590088

Token 61: 'しい' (ID: 63386)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -0.10750093311071396
    2. 'しい' → logprob: -3.6075010299682617
    3. '```' → logprob: -3.8575010299682617
    4. 'い' → logprob: -3.9825010299682617
    5. 'った' → logprob: -4.482501029968262
    6. 'け' → logprob: -5.107501029968262
    7. 'う' → logprob: -5.732501029968262
    8. '``' → logprob: -6.107501029968262
    9. 'が' → logprob: -6.607501029968262
    10. 'っ' → logprob: -6.732501029968262

Token 62: 'ね' (ID: 28144)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10851448774337769
    2. '_' → logprob: -3.1085145473480225
    3. '
' → logprob: -3.7335145473480225
    4. 'def' → logprob: -4.108514308929443
    5. '' → logprob: -5.233514308929443
    6. ',' → logprob: -5.983514308929443
    7. '\' → logprob: -6.483514308929443
    8. ' ' → logprob: -7.108514308929443
    9. '

' → logprob: -7.108514308929443
    10. 'import' → logprob: -7.358514308929443

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4619012773036957
    2. '#' → logprob: -1.211901307106018
    3. 'def' → logprob: -3.7119011878967285
    4. '' → logprob: -4.3369011878967285
    5. '

' → logprob: -5.0869011878967285
    6. ',' → logprob: -5.7119011878967285
    7. '<|end|>' → logprob: -5.9619011878967285
    8. ' 
' → logprob: -6.0869011878967285
    9. '
' → logprob: -6.0869011878967285
    10. '\' → logprob: -6.2119011878967285

Token 64: 'PRO' (ID: 15513)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11565138399600983
    2. '_' → logprob: -3.2406513690948486
    3. '
' → logprob: -3.4906513690948486
    4. 'def' → logprob: -3.8656513690948486
    5. ' ' → logprob: -5.365651607513428
    6. '' → logprob: -5.990651607513428
    7. ',' → logprob: -6.115651607513428
    8. '<|end|>' → logprob: -6.865651607513428
    9. 'x' → logprob: -6.990651607513428
    10. ':' → logprob: -7.240651607513428

Token 65: 'BLEM' (ID: 134327)
  Prédit: 'BLEM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLEM' → logprob: -0.1219143196940422
    2. 'B' → logprob: -2.6219143867492676
    3. 'CESS' → logprob: -4.871914386749268
    4. 'G' → logprob: -4.871914386749268
    5. 'C' → logprob: -5.371914386749268
    6. 'BS' → logprob: -5.746914386749268
    7. 'DUCT' → logprob: -6.121914386749268
    8. 'M' → logprob: -6.371914386749268
    9. 'CON' → logprob: -6.371914386749268
    10. 'D' → logprob: -6.371914386749268

Token 66: '_B' (ID: 3201)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.7825728058815002
    2. 'S' → logprob: -1.6575727462768555
    3. ' =' → logprob: -1.6575727462768555
    4. '_' → logprob: -2.2825727462768555
    5. '_AB' → logprob: -3.6575727462768555
    6. 'A' → logprob: -3.9075727462768555
    7. 'AB' → logprob: -4.9075727462768555
    8. '=' → logprob: -5.7825727462768555
    9. '_NAME' → logprob: -7.5325727462768555
    10. '_ID' → logprob: -7.6575727462768555

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05713683366775513
    2. '=' → logprob: -3.3071367740631104
    3. '_' → logprob: -4.0571370124816895
    4. '=True' → logprob: -8.432136535644531
    5. '_SUFFIX' → logprob: -8.932136535644531
    6. ' ' → logprob: -9.182136535644531
    7. 'S' → logprob: -9.182136535644531
    8. '_FLAG' → logprob: -9.432136535644531
    9. '_=' → logprob: -9.432136535644531
    10. ',' → logprob: -9.557136535644531

Token 68: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.25779518485069275
    2. 'False' → logprob: -2.1327950954437256
    3. ' True' → logprob: -2.2577950954437256
    4. 'True' → logprob: -5.507795333862305
    5. ' ' → logprob: -10.007795333862305
    6. '0' → logprob: -10.132795333862305
    7. ' None' → logprob: -11.632795333862305
    8. '1' → logprob: -12.007795333862305
    9. '(False' → logprob: -13.257795333862305
    10. '2' → logprob: -14.382795333862305

Token 69: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022486956790089607
    2. '

' → logprob: -4.147487163543701
    3. '
' → logprob: -5.772487163543701
    4. '#' → logprob: -7.147487163543701
    5. '\n' → logprob: -7.397487163543701
    6. '<|end|>' → logprob: -7.397487163543701
    7. '' → logprob: -7.522487163543701
    8. 'newline' → logprob: -8.022486686706543
    9. ' ' → logprob: -9.022486686706543
    10. '<|end|>' → logprob: -10.022486686706543

Token 70: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28163599967956543
    2. '
' → logprob: -2.0316359996795654
    3. 'def' → logprob: -3.2816359996795654
    4. 'newline' → logprob: -4.0316362380981445
    5. '\n' → logprob: -4.5316362380981445
    6. 'n' → logprob: -4.9066362380981445
    7. '' → logprob: -5.0316362380981445
    8. '\' → logprob: -5.2816362380981445
    9. '_' → logprob: -5.2816362380981445
    10. '

' → logprob: -5.4066362380981445

Token 71: ' parse' (ID: 8420)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.45490193367004395
    2. ' main' → logprob: -1.454901933670044
    3. ' shortest' → logprob: -2.829901933670044
    4. ' generate' → logprob: -4.579901695251465
    5. ' parse' → logprob: -4.704901695251465
    6. ' read' → logprob: -4.829901695251465
    7. ' compute' → logprob: -4.954901695251465
    8. ' bfs' → logprob: -5.079901695251465
    9. ' ' → logprob: -5.204901695251465
    10. ' dfs' → logprob: -5.329901695251465

Token 72: '_graph' (ID: 33441)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8314653038978577
    2. '_input' → logprob: -1.456465244293213
    3. '():' → logprob: -1.706465244293213
    4. '_args' → logprob: -3.081465244293213
    5. '(' → logprob: -3.206465244293213
    6. '_' → logprob: -3.331465244293213
    7. '_tokens' → logprob: -5.081465244293213
    8. '_token' → logprob: -5.206465244293213
    9. '(line' → logprob: -5.456465244293213
    10. '_arguments' → logprob: -6.706465244293213

Token 73: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9041184186935425
    2. '(line' → logprob: -1.0291184186935425
    3. '():' → logprob: -1.5291184186935425
    4. '(input' → logprob: -4.904118537902832
    5. '(path' → logprob: -5.779118537902832
    6. '(s' → logprob: -6.154118537902832
    7. '(file' → logprob: -6.154118537902832
    8. '(lines' → logprob: -6.404118537902832
    9. '_line' → logprob: -7.404118537902832
    10. '(data' → logprob: -7.404118537902832

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007662701420485973
    2. '()' → logprob: -6.007662773132324
    3. '():' → logprob: -6.507662773132324
    4. '(' → logprob: -6.882662773132324
    5. ':' → logprob: -7.132662773132324
    6. '(n' → logprob: -7.507662773132324
    7. '<|end|>' → logprob: -8.007662773132324
    8. '    
' → logprob: -8.757662773132324
    9. '
' → logprob: -8.757662773132324
    10. '<|end|>' → logprob: -8.882662773132324

Token 75: ' V' (ID: 631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10079315304756165
    2. 'n' → logprob: -2.3507931232452393
    3. '   ' → logprob: -8.10079288482666
    4. '    ' → logprob: -9.47579288482666
    5. '	n' → logprob: -9.47579288482666
    6. ' N' → logprob: -10.97579288482666
    7. '(n' → logprob: -11.35079288482666
    8. ' graph' → logprob: -11.47579288482666
    9. ' return' → logprob: -11.60079288482666
    10. ' ' → logprob: -11.60079288482666

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018486743792891502
    2. ' ,' → logprob: -7.1268486976623535
    3. ' =' → logprob: -7.1268486976623535
    4. '=' → logprob: -8.376848220825195
    5. '=int' → logprob: -13.376848220825195
    6. ',N' → logprob: -13.501848220825195
    7. ',int' → logprob: -13.501848220825195
    8. '   ' → logprob: -13.751848220825195
    9. '_,' → logprob: -14.126848220825195
    10. ' ' → logprob: -14.126848220825195

Token 77: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.04336053878068924
    2. ' E' → logprob: -3.168360471725464
    3. ' ' → logprob: -8.293360710144043
    4. '   ' → logprob: -10.043360710144043
    5. '  ' → logprob: -10.668360710144043
    6. '	E' → logprob: -11.543360710144043
    7. '    ' → logprob: -11.918360710144043
    8. '```' → logprob: -12.293360710144043
    9. '_E' → logprob: -12.918360710144043
    10. '`' → logprob: -13.355860710144043

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994087994098663
    2. '=' → logprob: -2.6949408054351807
    3. ' ' → logprob: -13.069940567016602
    4. ',' → logprob: -13.319940567016602
    5. '＝' → logprob: -15.069940567016602
    6. '=input' → logprob: -16.3199405670166
    7. '   ' → logprob: -16.4449405670166
    8. ')' → logprob: -16.4449405670166
    9. '=line' → logprob: -16.5699405670166
    10. ' ' → logprob: -16.6949405670166

Token 79: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0017130204942077398
    2. 'map' → logprob: -6.876712799072266
    3. ' input' → logprob: -7.376712799072266
    4. ' list' → logprob: -10.251712799072266
    5. 'input' → logprob: -11.626712799072266
    6. ' ' → logprob: -12.876712799072266
    7. ' [' → logprob: -13.001712799072266
    8. '	map' → logprob: -13.376712799072266
    9. ' tuple' → logprob: -13.626712799072266
    10. '   ' → logprob: -14.751712799072266

Token 80: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00877954438328743
    2. '(' → logprob: -4.883779525756836
    3. '(input' → logprob: -6.758779525756836
    4. 'int' → logprob: -12.633779525756836
    5. '(list' → logprob: -12.758779525756836
    6. '(map' → logprob: -13.758779525756836
    7. 'input' → logprob: -13.758779525756836
    8. '(str' → logprob: -13.883779525756836
    9. '(
' → logprob: -14.383779525756836
    10. '<int' → logprob: -14.508779525756836

Token 81: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.41062232851982117
    2. ',input' → logprob: -1.2856223583221436
    3. 'input' → logprob: -3.4106223583221436
    4. ',' → logprob: -3.7856223583221436
    5. '(' → logprob: -5.9106221199035645
    6. ')' → logprob: -6.9106221199035645
    7. ' input' → logprob: -7.1606221199035645
    8. '=input' → logprob: -10.160622596740723
    9. ' (' → logprob: -11.035622596740723
    10. ' ,' → logprob: -12.285622596740723

Token 82: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931508183479309
    2. ' input' → logprob: -0.6931508183479309
    3. ')' → logprob: -13.693150520324707
    4. ' ' → logprob: -13.818150520324707
    5. '	input' → logprob: -14.693150520324707
    6. '(input' → logprob: -14.818150520324707
    7. ',input' → logprob: -15.568150520324707
    8. '<input' → logprob: -16.443151473999023
    9. '=input' → logprob: -16.693151473999023
    10. 'in' → logprob: -16.818151473999023

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.522638169466518e-05
    2. '()' → logprob: -10.625024795532227
    3. '())' → logprob: -14.625024795532227
    4. ' ().' → logprob: -14.875024795532227
    5. '(' → logprob: -17.750024795532227
    6. '()
' → logprob: -18.000024795532227
    7. '.readline' → logprob: -18.375024795532227
    8. ')' → logprob: -18.500024795532227
    9. ' ()' → logprob: -19.875024795532227
    10. '（）' → logprob: -20.000024795532227

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3927859961986542
    2. 'strip' → logprob: -1.8927860260009766
    3. 'rstrip' → logprob: -2.6427860260009766
    4. 'decode' → logprob: -2.7677860260009766
    5. ')' → logprob: -3.7677860260009766
    6. 'read' → logprob: -4.142786026000977
    7. '())' → logprob: -7.017786026000977
    8. '().' → logprob: -9.142786026000977
    9. '()' → logprob: -9.267786026000977
    10. '.readline' → logprob: -10.017786026000977

Token 85: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015176335349678993
    2. ')' → logprob: -4.515176296234131
    3. '()' → logprob: -5.515176296234131
    4. '(' → logprob: -10.140176773071289
    5. '()))' → logprob: -10.515176773071289
    6. '())
' → logprob: -11.015176773071289
    7. '))' → logprob: -12.265176773071289
    8. ' ())' → logprob: -12.640176773071289
    9. '().' → logprob: -13.515176773071289
    10. '()]' → logprob: -15.015176773071289

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' src' (ID: 4537)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.3594690561294556
    2. ' graph' → logprob: -1.3594690561294556
    3. ' edges' → logprob: -1.3594690561294556
    4. 'edges' → logprob: -2.609468936920166
    5. '   ' → logprob: -3.359468936920166
    6. ' 
' → logprob: -3.734468936920166
    7. '    
' → logprob: -3.984468936920166
    8. '
' → logprob: -4.234468936920166
    9. 'u' → logprob: -4.234468936920166
    10. 'g' → logprob: -5.109468936920166

Token 88: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13016216456890106
    2. ',' → logprob: -2.130162239074707
    3. '_nodes' → logprob: -6.130162239074707
    4. '_edges' → logprob: -7.755162239074707
    5. ' ,' → logprob: -8.380162239074707
    6. '_,' → logprob: -9.005162239074707
    7. '_vertices' → logprob: -9.880162239074707
    8. ' =' → logprob: -9.880162239074707
    9. '_list' → logprob: -10.380162239074707
    10. ',s' → logprob: -10.630162239074707

Token 89: ' [];' (ID: 103967)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.841830849647522
    2. ' []' → logprob: -0.966830849647522
    3. ' []
' → logprob: -2.8418307304382324
    4. ' np' → logprob: -3.2168307304382324
    5. 'np' → logprob: -3.2168307304382324
    6. ' [' → logprob: -3.9668307304382324
    7. '[]
' → logprob: -4.091830730438232
    8. '[' → logprob: -4.716830730438232
    9. '[np' → logprob: -5.466830730438232
    10. ' [];' → logprob: -7.466830730438232

Token 90: ' dst' (ID: 23480)
  Prédit: ' dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -0.3865123987197876
    2. 'dst' → logprob: -1.3865123987197876
    3. ' tgt' → logprob: -2.761512279510498
    4. 't' → logprob: -5.636512279510498
    5. ' trg' → logprob: -6.636512279510498
    6. 'dest' → logprob: -7.011512279510498
    7. ' dest' → logprob: -7.386512279510498
    8. ' tar' → logprob: -7.886512279510498
    9. '	dst' → logprob: -8.386512756347656
    10. 'tar' → logprob: -9.136512756347656

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3500393331050873
    2. '=' → logprob: -1.2250393629074097
    3. ',' → logprob: -6.475039482116699
    4. '=[]' → logprob: -10.2250394821167
    5. 's' → logprob: -11.8500394821167
    6. ' ,' → logprob: -12.8500394821167
    7. '＝' → logprob: -13.7250394821167
    8. ' ' → logprob: -14.4750394821167
    9. '<|end|>' → logprob: -14.4750394821167
    10. ')' → logprob: -14.8500394821167

Token 92: ' [];' (ID: 103967)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02127819135785103
    2. ' []' → logprob: -3.896278142929077
    3. ' [];' → logprob: -8.021278381347656
    4. '=[]' → logprob: -8.271278381347656
    5. '[]
' → logprob: -9.271278381347656
    6. '[]}' → logprob: -10.646278381347656
    7. '[]=' → logprob: -11.771278381347656
    8. ' []
' → logprob: -12.146278381347656
    9. ' ' → logprob: -12.271278381347656
    10. '[' → logprob: -12.896278381347656

Token 93: ' weights' (ID: 28460)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9635941982269287
    2. ' w' → logprob: -1.0885941982269287
    3. 'weight' → logprob: -1.7135941982269287
    4. ' weight' → logprob: -2.8385941982269287
    5. 'dist' → logprob: -4.713594436645508
    6. 'weights' → logprob: -4.713594436645508
    7. 'cost' → logprob: -5.338594436645508
    8. ' cost' → logprob: -5.588594436645508
    9. 'wei' → logprob: -5.588594436645508
    10. ' weights' → logprob: -5.713594436645508

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742182791233063
    2. '=' → logprob: -0.9742182493209839
    3. '<|end|>' → logprob: -9.349218368530273
    4. '=[]' → logprob: -10.474218368530273
    5. ' ' → logprob: -11.474218368530273
    6. '<|end|>' → logprob: -11.599218368530273
    7. '＝' → logprob: -13.599218368530273
    8. ' =
' → logprob: -14.349218368530273
    9. ',' → logprob: -14.599218368530273
    10. 's' → logprob: -14.724218368530273

Token 95: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002496706321835518
    2. ' []' → logprob: -6.002496719360352
    3. '[]
' → logprob: -11.252496719360352
    4. '=[]' → logprob: -12.377496719360352
    5. '[]=' → logprob: -13.752496719360352
    6. '[]}' → logprob: -14.002496719360352
    7. '[' → logprob: -14.502496719360352
    8. '[]

' → logprob: -14.877496719360352
    9. '[]>' → logprob: -15.002496719360352
    10. ' [];' → logprob: -15.752496719360352

Token 96: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6653105616569519
    2. ' for' → logprob: -0.9153105616569519
    3. '   ' → logprob: -2.5403106212615967
    4. '
' → logprob: -6.290310382843018
    5. '	for' → logprob: -6.415310382843018
    6. '    
' → logprob: -6.665310382843018
    7. ' ' → logprob: -6.790310382843018
    8. ' 
' → logprob: -8.165310859680176
    9. '    ' → logprob: -9.040310859680176
    10. '  ' → logprob: -9.165310859680176

Token 98: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5760413408279419
    2. '_' → logprob: -0.8260413408279419
    3. ' i' → logprob: -10.201041221618652
    4. ' ' → logprob: -10.576041221618652
    5. 'i' → logprob: -11.326041221618652
    6. ' ' → logprob: -11.326041221618652
    7. '_i' → logprob: -11.951041221618652
    8. '＿' → logprob: -12.326041221618652
    9. '	' → logprob: -13.576041221618652
    10. '__' → logprob: -14.576041221618652

Token 99: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35065755248069763
    2. ' in' → logprob: -1.22565758228302
    3. ' _' → logprob: -6.7256574630737305
    4. 'in' → logprob: -7.1006574630737305
    5. ' ' → logprob: -8.72565746307373
    6. ' i' → logprob: -11.85065746307373
    7. '0' → logprob: -12.47565746307373
    8. 'i' → logprob: -12.60065746307373
    9. 'range' → logprob: -13.10065746307373
    10. ' ' → logprob: -13.35065746307373

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002810105914250016
    2. ' range' → logprob: -5.877810001373291
    3. '	range' → logprob: -12.87781047821045
    4. '_' → logprob: -14.37781047821045
    5. 'rang' → logprob: -15.00281047821045
    6. ' ' → logprob: -15.12781047821045
    7. '(range' → logprob: -15.12781047821045
    8. 'r' → logprob: -15.37781047821045
    9. '```' → logprob: -15.62781047821045
    10. 'ran' → logprob: -15.87781047821045

Token 101: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.00014287306112237275
    2. '(' → logprob: -9.000143051147461
    3. ' (' → logprob: -11.625143051147461
    4. 'E' → logprob: -12.000143051147461
    5. ' E' → logprob: -12.750143051147461
    6. '	E' → logprob: -14.250143051147461
    7. ' ' → logprob: -15.125143051147461
    8. '(
' → logprob: -16.37514305114746
    9. '   ' → logprob: -16.50014305114746
    10. '\E' → logprob: -16.87514305114746

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011310471221804619
    2. '):
' → logprob: -4.511310577392578
    3. ')' → logprob: -8.761310577392578
    4. ' ):' → logprob: -9.386310577392578
    5. '):
' → logprob: -11.261310577392578
    6. '   ' → logprob: -12.636310577392578
    7. ':' → logprob: -13.136310577392578
    8. ' ' → logprob: -13.386310577392578
    9. ' ):
' → logprob: -14.136310577392578
    10. '）：' → logprob: -14.511310577392578

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02173265442252159
    2. '<|end|>' → logprob: -4.021732807159424
    3. '<|end|>' → logprob: -6.521732807159424
    4. '   ' → logprob: -6.521732807159424
    5. '
' → logprob: -8.771732330322266
    6. ',' → logprob: -9.271732330322266
    7. ' ' → logprob: -9.396732330322266
    8. '        
' → logprob: -9.646732330322266
    9. '    
' → logprob: -9.896732330322266
    10. ' 
' → logprob: -10.771732330322266

Token 104: ' usp' (ID: 82270)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5669445991516113
    2. 's' → logprob: -1.6919445991516113
    3. ' u' → logprob: -1.6919445991516113
    4. ' s' → logprob: -2.8169445991516113
    5. '   ' → logprob: -6.191944599151611
    6. 'a' → logprob: -6.816944599151611
    7. 'v' → logprob: -7.191944599151611
    8. ' v' → logprob: -8.316944122314453
    9. ' a' → logprob: -8.816944122314453
    10. 'x' → logprob: -9.191944122314453

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.218899130821228
    2. ',' → logprob: -1.343899130821228
    3. ' =' → logprob: -1.968899130821228
    4. 'src' → logprob: -2.5938992500305176
    5. 'r' → logprob: -3.0938992500305176
    6. 'ut' → logprob: -3.5938992500305176
    7. 't' → logprob: -3.5938992500305176
    8. 'er' → logprob: -3.7188992500305176
    9. 's' → logprob: -4.468899250030518
    10. '_src' → logprob: -4.593899250030518

Token 106: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.015291271731257439
    2. 'input' → logprob: -4.765291213989258
    3. ' list' → logprob: -5.390291213989258
    4. 'tuple' → logprob: -6.890291213989258
    5. 'map' → logprob: -7.390291213989258
    6. ' input' → logprob: -8.265291213989258
    7. ' tuple' → logprob: -8.890291213989258
    8. 'np' → logprob: -9.890291213989258
    9. ' map' → logprob: -12.015291213989258
    10. ' np' → logprob: -13.640291213989258

Token 107: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002319071936653927
    2. '(' → logprob: -8.375231742858887
    3. '(int' → logprob: -14.625231742858887
    4. '(
' → logprob: -15.250231742858887
    5. '	map' → logprob: -15.500231742858887
    6. 'map' → logprob: -16.375232696533203
    7. '(input' → logprob: -16.500232696533203
    8. ' map' → logprob: -16.500232696533203
    9. '   ' → logprob: -17.125232696533203
    10. ' (' → logprob: -17.375232696533203

Token 108: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00031508569372817874
    2. ',int' → logprob: -8.875314712524414
    3. '(' → logprob: -9.000314712524414
    4. 'int' → logprob: -10.250314712524414
    5. ' (' → logprob: -12.500314712524414
    6. '[int' → logprob: -13.000314712524414
    7. '=int' → logprob: -13.250314712524414
    8. '<int' → logprob: -13.375314712524414
    9. ']int' → logprob: -13.375314712524414
    10. ')' → logprob: -13.500314712524414

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47485634684562683
    2. ',input' → logprob: -0.9748563766479492
    3. '(input' → logprob: -7.224856376647949
    4. 'input' → logprob: -11.09985637664795
    5. '(' → logprob: -11.22485637664795
    6. ' ,' → logprob: -11.34985637664795
    7. '(),' → logprob: -11.97485637664795
    8. '，' → logprob: -13.59985637664795
    9. ' input' → logprob: -13.59985637664795
    10. ',int' → logprob: -14.59985637664795

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804183006286621
    2. ' input' → logprob: -3.288041830062866
    3. '(input' → logprob: -15.038042068481445
    4. '	input' → logprob: -16.788042068481445
    5. ',input' → logprob: -17.038042068481445
    6. '_input' → logprob: -17.413042068481445
    7. ' ' → logprob: -18.288042068481445
    8. '=input' → logprob: -18.788042068481445
    9. 'output' → logprob: -19.413042068481445
    10. '   ' → logprob: -19.788042068481445

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.531315314830863e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -16.375003814697266
    4. '.readline' → logprob: -17.625003814697266
    5. '.' → logprob: -18.375003814697266
    6. '()))' → logprob: -18.625003814697266
    7. ')' → logprob: -18.875003814697266
    8. '.split' → logprob: -19.000003814697266
    9. '(' → logprob: -19.375003814697266
    10. 'split' → logprob: -19.500003814697266

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.583550642360933e-05
    2. 'strip' → logprob: -10.500036239624023
    3. 'rstrip' → logprob: -12.250036239624023
    4. 'read' → logprob: -13.375036239624023
    5. ' split' → logprob: -13.625036239624023
    6. 'decode' → logprob: -15.250036239624023
    7. 'spl' → logprob: -15.250036239624023
    8. '(split' → logprob: -15.375036239624023
    9. '.split' → logprob: -18.750036239624023
    10. '_split' → logprob: -19.625036239624023

Token 113: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06364729255437851
    2. '()' → logprob: -3.4386472702026367
    3. '))' → logprob: -3.6886472702026367
    4. '()))
' → logprob: -5.438647270202637
    5. '()));' → logprob: -9.188647270202637
    6. '())' → logprob: -10.188647270202637
    7. '(' → logprob: -10.813647270202637
    8. '()))

' → logprob: -11.188647270202637
    9. '))
' → logprob: -11.563647270202637
    10. '()))
' → logprob: -12.313647270202637

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035137145314365625
    2. ')' → logprob: -6.253513813018799
    3. '<|end|>' → logprob: -6.753513813018799
    4. '
' → logprob: -8.37851333618164
    5. ',' → logprob: -10.12851333618164
    6. '   ' → logprob: -10.50351333618164
    7. '<|end|>' → logprob: -10.50351333618164
    8. ' ' → logprob: -10.62851333618164
    9. '        
' → logprob: -10.87851333618164
    10. '()' → logprob: -11.75351333618164

Token 115: ' src' (ID: 4537)
  Prédit: ' src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' src' → logprob: -0.6912077069282532
    2. 'src' (adapté à ' src') → logprob: -1.3162076473236084
    3. '       ' → logprob: -1.5662076473236084
    4. '   ' → logprob: -4.0662078857421875
    5. '[src' → logprob: -6.1912078857421875
    6. '	src' → logprob: -6.9412078857421875
    7. ' if' → logprob: -7.0662078857421875
    8. '
' → logprob: -8.691207885742188
    9. ' ' → logprob: -8.691207885742188
    10. ' s' → logprob: -9.566207885742188

Token 116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000530871853698045
    2. '.' → logprob: -7.62553071975708
    3. '.extend' → logprob: -10.125531196594238
    4. '.app' → logprob: -13.500531196594238
    5. ' .' → logprob: -14.375531196594238
    6. '.ap' → logprob: -14.875531196594238
    7. 'append' → logprob: -15.375531196594238
    8. ',' → logprob: -15.500531196594238
    9. ').' → logprob: -17.250530242919922
    10. ' +=' → logprob: -17.250530242919922

Token 117: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(_' → logprob: -16.625
    3. '((' → logprob: -18.0
    4. '(
' → logprob: -18.25
    5. 'usp' → logprob: -18.375
    6. ' (' → logprob: -19.625
    7. '(

' → logprob: -20.375
    8. '(int' → logprob: -20.625
    9. '	' → logprob: -21.375
    10. '(us' → logprob: -21.75

Token 118: 'usp' (ID: 35966)
  Prédit: 'usp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usp' → logprob: -0.00020795092859771103
    2. ' usp' → logprob: -8.500207901000977
    3. 'usb' → logprob: -13.750207901000977
    4. 'usr' → logprob: -14.375207901000977
    5. '(' → logprob: -14.625207901000977
    6. 'asp' → logprob: -15.000207901000977
    7. 'ush' → logprob: -15.000207901000977
    8. 'ust' → logprob: -15.000207901000977
    9. 'us' → logprob: -15.125207901000977
    10. '  ' → logprob: -15.625207901000977

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.610702363715973e-06
    2. '0' → logprob: -11.625009536743164
    3. '[
' → logprob: -15.125009536743164
    4. '-' → logprob: -16.500009536743164
    5. ' [' → logprob: -16.625009536743164
    6. '```' → logprob: -16.875009536743164
    7. ')' → logprob: -17.125009536743164
    8. '(' → logprob: -17.125009536743164
    9. '[-' → logprob: -17.125009536743164
    10. '   ' → logprob: -17.750009536743164

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. '[' → logprob: -14.625005722045898
    4. '1' → logprob: -14.625005722045898
    5. '０' → logprob: -16.3750057220459
    6. '   ' → logprob: -16.8750057220459
    7. '```' → logprob: -17.5625057220459
    8. '       ' → logprob: -17.9375057220459
    9. '۰' → logprob: -18.1875057220459
    10. '00' → logprob: -18.3750057220459

Token 121: ']);' (ID: 34389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1841992735862732
    2. ' )' → logprob: -2.684199333190918
    3. '])' → logprob: -2.934199333190918
    4. '-' → logprob: -3.434199333190918
    5. ' -' → logprob: -4.559199333190918
    6. ' ])' → logprob: -5.934199333190918
    7. '-)' → logprob: -8.059199333190918
    8. ')
' → logprob: -8.434199333190918
    9. '))' → logprob: -8.684199333190918
    10. ' ' → logprob: -9.184199333190918

Token 122: ' dst' (ID: 23480)
  Prédit: ' dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -0.07264751940965652
    2. 'dst' → logprob: -2.6976475715637207
    3. 'src' → logprob: -6.697647571563721
    4. ' src' → logprob: -7.197647571563721
    5. '	dst' → logprob: -8.322647094726562
    6. '<|end|>' → logprob: -8.822647094726562
    7. '_dst' → logprob: -9.072647094726562
    8. '(dst' → logprob: -9.947647094726562
    9. ' weights' → logprob: -9.947647094726562
    10. '.dst' → logprob: -10.572647094726562

Token 123: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003696516389027238
    2. '.' → logprob: -5.628696441650391
    3. ' .' → logprob: -9.50369644165039
    4. ').' → logprob: -11.87869644165039
    5. '].' → logprob: -12.12869644165039
    6. '.extend' → logprob: -13.12869644165039
    7. '().' → logprob: -13.25369644165039
    8. '<|end|>' → logprob: -13.37869644165039
    9. '.setdefault' → logprob: -13.50369644165039
    10. '​.' → logprob: -14.50369644165039

Token 124: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -16.25
    3. '(
' → logprob: -16.25
    4. '((' → logprob: -18.25
    5. '(

' → logprob: -19.875
    6. '<|end|>' → logprob: -21.0
    7. '(s' → logprob: -21.125
    8. '(
' → logprob: -21.625
    9. '('' → logprob: -21.75
    10. '(os' → logprob: -21.875

Token 125: 'usp' (ID: 35966)
  Prédit: 'usp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usp' → logprob: -0.00019936825265176594
    2. ' usp' → logprob: -8.750199317932129
    3. '(' → logprob: -10.125199317932129
    4. 'usr' → logprob: -15.375199317932129
    5. 'osp' → logprob: -15.375199317932129
    6. 'sp' → logprob: -16.875200271606445
    7. 'asp' → logprob: -16.875200271606445
    8. ' ' → logprob: -17.125200271606445
    9. '  ' → logprob: -17.250200271606445
    10. '   ' → logprob: -17.375200271606445

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002905085450038314
    2. '1' → logprob: -5.877904891967773
    3. '0' → logprob: -10.502904891967773
    4. ' [' → logprob: -11.002904891967773
    5. '][' → logprob: -11.252904891967773
    6. '(' → logprob: -12.252904891967773
    7. '
' → logprob: -12.377904891967773
    8. ')' → logprob: -12.502904891967773
    9. ')[' → logprob: -12.502904891967773
    10. '```' → logprob: -12.502904891967773

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039825684507377446
    2. '0' → logprob: -8.000398635864258
    3. ' ' → logprob: -9.875398635864258
    4. '[' → logprob: -13.187898635864258
    5. '2' → logprob: -13.375398635864258
    6. '   ' → logprob: -13.375398635864258
    7. '```' → logprob: -14.000398635864258
    8. '])' → logprob: -14.125398635864258
    9. '-' → logprob: -14.187898635864258
    10. '
' → logprob: -14.312898635864258

Token 128: ']);' (ID: 34389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4752701222896576
    2. ');' → logprob: -0.97527015209198
    3. ')
' → logprob: -7.6002702713012695
    4. ' );' → logprob: -8.22527027130127
    5. ' )' → logprob: -8.97527027130127
    6. ');
' → logprob: -9.35027027130127
    7. '),' → logprob: -9.72527027130127
    8. ']);' → logprob: -10.22527027130127
    9. '])' → logprob: -10.85027027130127
    10. ');}' → logprob: -11.22527027130127

Token 129: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.08917643129825592
    2. 'weights' → logprob: -2.4641764163970947
    3. '       ' → logprob: -8.589176177978516
    4. '(weights' → logprob: -11.339176177978516
    5. '_weights' → logprob: -11.589176177978516
    6. 'Weights' → logprob: -11.589176177978516
    7. '   ' → logprob: -11.964176177978516
    8. '.weights' → logprob: -12.339176177978516
    9. '           ' → logprob: -12.839176177978516
    10. 'weight' → logprob: -13.839176177978516

Token 130: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003062646137550473
    2. '.' → logprob: -8.125306129455566
    3. ').' → logprob: -12.125306129455566
    4. ' .' → logprob: -13.750306129455566
    5. 'append' → logprob: -13.750306129455566
    6. '.app' → logprob: -14.000306129455566
    7. '].' → logprob: -14.500306129455566
    8. '.extend' → logprob: -14.750306129455566
    9. '.Append' → logprob: -14.875306129455566
    10. '().' → logprob: -15.750306129455566

Token 131: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -13.875000953674316
    3. '((' → logprob: -16.000001907348633
    4. '(
' → logprob: -16.125001907348633
    5. '(int' → logprob: -16.125001907348633
    6. '(

' → logprob: -19.000001907348633
    7. '(abs' → logprob: -19.375001907348633
    8. '(
' → logprob: -19.375001907348633
    9. '(_' → logprob: -19.750001907348633
    10. '	' → logprob: -20.500001907348633

Token 132: 'usp' (ID: 35966)
  Prédit: 'usp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usp' → logprob: -0.023608578369021416
    2. ' usp' → logprob: -3.773608684539795
    3. ' ' → logprob: -9.148608207702637
    4. '   ' → logprob: -10.148608207702637
    5. '  ' → logprob: -10.273608207702637
    6. '(' → logprob: -10.523608207702637
    7. '       ' → logprob: -10.773608207702637
    8. '    ' → logprob: -11.398608207702637
    9. 'usr' → logprob: -11.711108207702637
    10. 'us' → logprob: -11.898608207702637

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000760553521104157
    2. '2' → logprob: -8.250760078430176
    3. '-' → logprob: -9.000760078430176
    4. ')' → logprob: -9.375760078430176
    5. '[-' → logprob: -9.625760078430176
    6. '1' → logprob: -9.875760078430176
    7. '])' → logprob: -10.250760078430176
    8. ' [' → logprob: -10.625760078430176
    9. ')])' → logprob: -11.375760078430176
    10. '][' → logprob: -11.500760078430176

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013011827832087874
    2. ' ' → logprob: -9.500129699707031
    3. '-' → logprob: -10.125129699707031
    4. '0' → logprob: -12.875129699707031
    5. '1' → logprob: -13.125129699707031
    6. '```' → logprob: -13.125129699707031
    7. ']' → logprob: -13.500129699707031
    8. '   ' → logprob: -13.687629699707031
    9. '
' → logprob: -13.937629699707031
    10. '3' → logprob: -14.500129699707031

Token 135: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03267597034573555
    2. '])' → logprob: -3.5326759815216064
    3. '))' → logprob: -6.032675743103027
    4. ' )' → logprob: -8.032675743103027
    5. ')])' → logprob: -9.782675743103027
    6. ' ])' → logprob: -10.157675743103027
    7. ')
' → logprob: -10.532675743103027
    8. ']' → logprob: -10.657675743103027
    9. '）' → logprob: -11.407675743103027
    10. ''])' → logprob: -11.782675743103027

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003952424507588148
    2. 'return' → logprob: -6.378952503204346
    3. '
' → logprob: -6.753952503204346
    4. '<|end|>' → logprob: -7.628952503204346
    5. ' return' → logprob: -8.378952026367188
    6. ')' → logprob: -9.128952026367188
    7. '    
' → logprob: -9.128952026367188
    8. '	return' → logprob: -9.253952026367188
    9. '<|end|>' → logprob: -11.503952026367188
    10. ')return' → logprob: -11.753952026367188

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013930420391261578
    2. 'return' (adapté à ' return') → logprob: -5.138930320739746
    3. ' return' → logprob: -5.513930320739746
    4. '<|end|>' → logprob: -6.638930320739746
    5. '	return' → logprob: -6.763930320739746
    6. '
' → logprob: -7.263930320739746
    7. ')' → logprob: -8.013930320739746
    8. '    
' → logprob: -8.263930320739746
    9. ' ' → logprob: -10.138930320739746
    10. '<|end|>' → logprob: -10.763930320739746

Token 138: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.008564340882003307
    2. '(V' → logprob: -4.883564472198486
    3. 'np' → logprob: -7.508564472198486
    4. ' V' → logprob: -8.133563995361328
    5. '(np' → logprob: -10.008563995361328
    6. 'src' → logprob: -10.258563995361328
    7. ' (' → logprob: -11.133563995361328
    8. 'csr' → logprob: -12.008563995361328
    9. '(' → logprob: -12.508563995361328
    10. '   ' → logprob: -12.883563995361328

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. 'src' → logprob: -10.375046730041504
    3. ' ,' → logprob: -11.250046730041504
    4. '[src' → logprob: -13.500046730041504
    5. '<src' → logprob: -15.250046730041504
    6. ' src' → logprob: -15.875046730041504
    7. ',s' → logprob: -16.375045776367188
    8. '(src' → logprob: -17.750045776367188
    9. ',V' → logprob: -17.750045776367188
    10. ',len' → logprob: -18.125045776367188

Token 140: ' E' (ID: 457)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.4458540976047516
    2. 'E' → logprob: -1.0708540678024292
    3. ' src' → logprob: -4.570854187011719
    4. ' E' → logprob: -5.070854187011719
    5. 'np' → logprob: -8.570854187011719
    6. 'dst' → logprob: -9.945854187011719
    7. ' np' → logprob: -10.445854187011719
    8. '[src' → logprob: -10.445854187011719
    9. 'csr' → logprob: -10.570854187011719
    10. 'source' → logprob: -11.320854187011719

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.750032424926758
    3. 'src' → logprob: -11.625032424926758
    4. '[src' → logprob: -14.000032424926758
    5. ' src' → logprob: -15.000032424926758
    6. '<src' → logprob: -15.375032424926758
    7. ',
' → logprob: -15.750032424926758
    8. '   ' → logprob: -16.125032424926758
    9. '	src' → logprob: -16.625032424926758
    10. ',s' → logprob: -16.750032424926758

Token 142: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.0007045681122690439
    2. 'np' → logprob: -7.500704765319824
    3. ' src' → logprob: -9.250704765319824
    4. 'csr' → logprob: -10.250704765319824
    5. '(src' → logprob: -11.500704765319824
    6. 'sr' → logprob: -12.750704765319824
    7. '[src' → logprob: -12.750704765319824
    8. ' np' → logprob: -13.375704765319824
    9. 'source' → logprob: -14.500704765319824
    10. '	src' → logprob: -14.500704765319824

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010628487507347018
    2. ',d' → logprob: -9.500105857849121
    3. ' ,' → logprob: -10.375105857849121
    4. 'dst' → logprob: -17.125106811523438
    5. ',
' → logprob: -17.250106811523438
    6. ' dst' → logprob: -18.125106811523438
    7. '_,' → logprob: -19.000106811523438
    8. '‌,' → logprob: -19.000106811523438
    9. ',s' → logprob: -19.125106811523438
    10. ',c' → logprob: -19.250106811523438

Token 144: ' dst' (ID: 23480)
  Prédit: ' dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dst' → logprob: -0.31326842308044434
    2. 'dst' → logprob: -1.3132684230804443
    3. '	dst' → logprob: -12.938268661499023
    4. '_dst' → logprob: -13.438268661499023
    5. '(dst' → logprob: -13.813268661499023
    6. ' ' → logprob: -14.188268661499023
    7. 'Dst' → logprob: -14.938268661499023
    8. 'weights' → logprob: -15.438268661499023
    9. '.dst' → logprob: -15.688268661499023
    10. ' weights' → logprob: -15.938268661499023

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.37501335144043
    3. 'weights' → logprob: -13.25001335144043
    4. ' weights' → logprob: -15.50001335144043
    5. ',
' → logprob: -17.12501335144043
    6. 'Weights' → logprob: -17.12501335144043
    7. ',w' → logprob: -17.62501335144043
    8. 'weight' → logprob: -18.00001335144043
    9. '(weights' → logprob: -18.50001335144043
    10. '```' → logprob: -18.62501335144043

Token 146: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.038047224283218384
    2. ' weights' → logprob: -3.2880473136901855
    3. 'weight' → logprob: -12.538046836853027
    4. '(weights' → logprob: -14.288046836853027
    5. '_weights' → logprob: -14.288046836853027
    6. 'Weights' → logprob: -14.538046836853027
    7. '.weights' → logprob: -15.788046836853027
    8. 'weig' → logprob: -16.163047790527344
    9. '   ' → logprob: -16.663047790527344
    10. ' ' → logprob: -17.038047790527344

Token 147: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: 'V' (ID: 53)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5103024840354919
    2. '
' → logprob: -1.0103025436401367
    3. '<|end|>' → logprob: -3.3853025436401367
    4. '<|end|>' → logprob: -7.635302543640137
    5. '#' → logprob: -8.010302543640137
    6. '```' → logprob: -8.385302543640137
    7. '

' → logprob: -8.885302543640137
    8. '  
' → logprob: -9.260302543640137
    9. '
' → logprob: -9.385302543640137
    10. '' → logprob: -9.760302543640137

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0077340384013950825
    2. ',E' → logprob: -4.8827338218688965
    3. ' ,' → logprob: -9.007734298706055
    4. 'E' → logprob: -13.507734298706055
    5. ',V' → logprob: -13.882734298706055
    6. ',e' → logprob: -14.382734298706055
    7. '，' → logprob: -14.882734298706055
    8. ',
' → logprob: -15.132734298706055
    9. ',C' → logprob: -15.257734298706055
    10. ' E' → logprob: -15.382734298706055

Token 150: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6931567788124084
    2. ' E' → logprob: -0.6931567788124084
    3. ' ' → logprob: -12.193157196044922
    4. '_E' → logprob: -14.130657196044922
    5. '	E' → logprob: -14.318157196044922
    6. ',E' → logprob: -14.818157196044922
    7. '_' → logprob: -14.818157196044922
    8. '  ' → logprob: -15.318157196044922
    9. ' _' → logprob: -15.380657196044922
    10. 'PRO' → logprob: -15.755657196044922

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.250019073486328
    3. '=' → logprob: -12.250019073486328
    4. ' =' → logprob: -14.500019073486328
    5. ',V' → logprob: -15.375019073486328
    6. ',,' → logprob: -15.750019073486328
    7. ',...' → logprob: -16.125019073486328
    8. ',,,' → logprob: -16.125019073486328
    9. '...' → logprob: -16.500019073486328
    10. ',E' → logprob: -16.750019073486328

Token 152: ' v' (ID: 323)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.31326761841773987
    2. ' src' → logprob: -1.3132675886154175
    3. '[src' → logprob: -13.188267707824707
    4. '_src' → logprob: -13.688267707824707
    5. '	src' → logprob: -14.188267707824707
    6. 's' → logprob: -14.313267707824707
    7. ' ' → logprob: -14.563267707824707
    8. '(src' → logprob: -15.063267707824707
    9. ' s' → logprob: -15.438267707824707
    10. '<src' → logprob: -15.563267707824707

Token 153: '_from' (ID: 12526)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01630813255906105
    2. 's' → logprob: -4.891308307647705
    3. 'src' → logprob: -4.891308307647705
    4. '_,' → logprob: -7.891308307647705
    5. '_src' → logprob: -8.016307830810547
    6. ',s' → logprob: -8.641307830810547
    7. ' ,' → logprob: -9.641307830810547
    8. 'al' → logprob: -10.016307830810547
    9. ',v' → logprob: -10.766307830810547
    10. 'als' → logprob: -10.766307830810547

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. 's' → logprob: -11.87501049041748
    3. ' ,' → logprob: -12.75001049041748
    4. ',s' → logprob: -14.37501049041748
    5. ',v' → logprob: -16.250011444091797
    6. ',d' → logprob: -17.125011444091797
    7. 'src' → logprob: -17.625011444091797
    8. '_,' → logprob: -18.000011444091797
    9. ',m' → logprob: -19.000011444091797
    10. ',
' → logprob: -19.500011444091797

Token 155: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03812503069639206
    2. ' v' → logprob: -3.2881250381469727
    3. 'w' → logprob: -10.288125038146973
    4. '<|end|>' → logprob: -10.663125038146973
    5. 'V' → logprob: -11.913125038146973
    6. 's' → logprob: -12.788125038146973
    7. 'weights' → logprob: -13.038125038146973
    8. 'd' → logprob: -13.163125038146973
    9. ' ' → logprob: -13.225625038146973
    10. '	v' → logprob: -13.913125038146973

Token 156: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3133803904056549
    2. 'to' → logprob: -1.3133803606033325
    3. 'To' → logprob: -9.938380241394043
    4. '<|end|>' → logprob: -10.813380241394043
    5. '_' → logprob: -11.063380241394043
    6. ' to' → logprob: -11.313380241394043
    7. 's' → logprob: -12.688380241394043
    8. ',to' → logprob: -13.188380241394043
    9. 'o' → logprob: -13.313380241394043
    10. 'toa' → logprob: -13.688380241394043

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',v' → logprob: -14.125004768371582
    4. 'v' → logprob: -14.750004768371582
    5. 's' → logprob: -16.2500057220459
    6. '_,' → logprob: -16.7500057220459
    7. 'weights' → logprob: -17.0000057220459
    8. 'weight' → logprob: -17.3750057220459
    9. '<|end|>' → logprob: -17.5000057220459
    10. '‌,' → logprob: -17.7500057220459

Token 158: ' cost' (ID: 3097)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.2531394362449646
    2. 'w' → logprob: -1.6281394958496094
    3. ' weights' → logprob: -4.003139495849609
    4. ' w' → logprob: -5.253139495849609
    5. 'weight' → logprob: -5.628139495849609
    6. 'v' → logprob: -9.37813949584961
    7. ' weight' → logprob: -10.00313949584961
    8. 'weig' → logprob: -10.37813949584961
    9. 'wt' → logprob: -10.87813949584961
    10. 'W' → logprob: -11.12813949584961

Token 159: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06051914766430855
    2. '=' → logprob: -3.060519218444824
    3. ' =' → logprob: -4.435519218444824
    4. ')' → logprob: -12.685519218444824
    5. 'ts' → logprob: -13.685519218444824
    6. 'w' → logprob: -13.810519218444824
    7. 'weights' → logprob: -14.185519218444824
    8. '<|end|>' → logprob: -14.185519218444824
    9. ' s' → logprob: -14.310519218444824
    10. '_' → logprob: -14.810519218444824

Token 160: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.2014143168926239
    2. ' parse' → logprob: -1.7014143466949463
    3. '(parse' → logprob: -14.451414108276367
    4. '	parse' → logprob: -15.326414108276367
    5. '=parse' → logprob: -15.576414108276367
    6. ' ' → logprob: -16.951414108276367
    7. '_parse' → logprob: -17.701414108276367
    8. '.parse' → logprob: -17.826414108276367
    9. '   ' → logprob: -18.576414108276367
    10. 'par' → logprob: -19.076414108276367

Token 161: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.6240566083070007e-06
    2. 'graph' → logprob: -13.500001907348633
    3. '_' → logprob: -16.375001907348633
    4. '_gr' → logprob: -17.250001907348633
    5. '_GRAPH' → logprob: -17.625001907348633
    6. '(graph' → logprob: -17.875001907348633
    7. ' graph' → logprob: -19.000001907348633
    8. '_g' → logprob: -19.625001907348633
    9. 'Graph' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 162: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8556314706802368
    2. 'matrix' → logprob: -2.1056313514709473
    3. '<|end|>' → logprob: -2.2306313514709473
    4. '#' → logprob: -2.6056313514709473
    5. 'def' → logprob: -2.7306313514709473
    6. 'csr' → logprob: -3.3556313514709473
    7. 'V' → logprob: -3.4806313514709473
    8. ')' → logprob: -3.6056313514709473
    9. 'weights' → logprob: -3.7306313514709473
    10. 'v' → logprob: -4.105631351470947

Token 163: 'graph' (ID: 7978)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8104685544967651
    2. 'graph' → logprob: -1.0604685544967651
    3. 'adj' → logprob: -2.8104686737060547
    4. 'distance' → logprob: -3.0604686737060547
    5. 'inf' → logprob: -3.8104686737060547
    6. 'G' → logprob: -3.9354686737060547
    7. 'matrix' → logprob: -4.685468673706055
    8. 'V' → logprob: -4.935468673706055
    9. 'g' → logprob: -5.060468673706055
    10. 'INF' → logprob: -5.185468673706055

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025590896606445
    2. '=' → logprob: -1.9102559089660645
    3. 's' → logprob: -11.660255432128906
    4. '_' → logprob: -11.910255432128906
    5. '=np' → logprob: -12.660255432128906
    6. '<|end|>' → logprob: -13.160255432128906
    7. ')' → logprob: -13.410255432128906
    8. ' ' → logprob: -13.410255432128906
    9. '=[]' → logprob: -13.660255432128906
    10. '_matrix' → logprob: -13.785255432128906

Token 165: ' csr' (ID: 162927)
  Prédit: 'csr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'csr' → logprob: -0.509919285774231
    2. ' csr' → logprob: -1.009919285774231
    3. 'np' → logprob: -3.5099191665649414
    4. ' np' → logprob: -5.259919166564941
    5. '[[' → logprob: -9.884919166564941
    6. '[' → logprob: -11.134919166564941
    7. ' ' → logprob: -12.009919166564941
    8. 'c' → logprob: -12.134919166564941
    9. '-' → logprob: -12.384919166564941
    10. '```' → logprob: -12.884919166564941

Token 166: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -8.77627644513268e-06
    2. '_graph' → logprob: -12.250008583068848
    3. 'matrix' → logprob: -12.500008583068848
    4. '_m' → logprob: -16.500009536743164
    5. '_mat' → logprob: -17.375009536743164
    6. '_MATRIX' → logprob: -17.750009536743164
    7. '_' → logprob: -17.875009536743164
    8. '_vector' → logprob: -18.000009536743164
    9. ' matrix' → logprob: -18.500009536743164
    10. 'Matrix' → logprob: -18.625009536743164

Token 167: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014809236861765385
    2. '(' → logprob: -4.2648091316223145
    3. '(([' → logprob: -7.3898091316223145
    4. '(
' → logprob: -11.139809608459473
    5. '([' → logprob: -11.514809608459473
    6. '(('' → logprob: -13.764809608459473
    7. '(({' → logprob: -14.139809608459473
    8. '>((' → logprob: -14.639809608459473
    9. '<|end|>' → logprob: -15.514809608459473
    10. '__((' → logprob: -15.764809608459473

Token 168: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0024908799678087234
    2. ' cost' → logprob: -6.002490997314453
    3. '(cost' → logprob: -11.377490997314453
    4. 'np' → logprob: -12.627490997314453
    5. ' np' → logprob: -15.752490997314453
    6. '
' → logprob: -16.252490997314453
    7. '   ' → logprob: -16.752490997314453
    8. 'weight' → logprob: -17.127490997314453
    9. ')' → logprob: -17.252490997314453
    10. '-cost' → logprob: -18.377490997314453

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08298292011022568
    2. ',(' → logprob: -2.5829830169677734
    3. ' ,' → logprob: -5.707983016967773
    4. '(' → logprob: -8.332983016967773
    5. ' (' → logprob: -8.332983016967773
    6. '),(' → logprob: -8.832983016967773
    7. ',V' → logprob: -10.082983016967773
    8. '(V' → logprob: -10.582983016967773
    9. ',v' → logprob: -10.707983016967773
    10. '),' → logprob: -11.082983016967773

Token 170: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5763295888900757
    2. ' (' → logprob: -0.8263295888900757
    3. '(' → logprob: -8.451329231262207
    4. '(V' → logprob: -8.701329231262207
    5. '(np' → logprob: -12.201329231262207
    6. ')' → logprob: -13.201329231262207
    7. ' ' → logprob: -13.951329231262207
    8. '(vc' → logprob: -14.951329231262207
    9. '<|end|>' → logprob: -15.076329231262207
    10. '   ' → logprob: -15.326329231262207

Token 171: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006286979652941227
    2. '(v' → logprob: -5.506287097930908
    3. ' v' → logprob: -6.131287097930908
    4. ' (' → logprob: -11.00628662109375
    5. '(' → logprob: -11.75628662109375
    6. 'np' → logprob: -12.75628662109375
    7. '(np' → logprob: -13.38128662109375
    8. '	v' → logprob: -13.63128662109375
    9. '[v' → logprob: -14.13128662109375
    10. '   ' → logprob: -14.63128662109375

Token 172: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00023178798437584192
    2. 'from' → logprob: -8.375231742858887
    3. '_to' → logprob: -14.500231742858887
    4. 'From' → logprob: -15.500231742858887
    5. '_f' → logprob: -16.375232696533203
    6. ' from' → logprob: -16.750232696533203
    7. '_for' → logprob: -16.875232696533203
    8. '(from' → logprob: -17.000232696533203
    9. '-from' → logprob: -17.125232696533203
    10. '_From' → logprob: -17.125232696533203

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009230116847902536
    2. ' ,' → logprob: -7.375923156738281
    3. ',v' → logprob: -8.125923156738281
    4. ',
' → logprob: -14.375923156738281
    5. '<|end|>' → logprob: -17.00092315673828
    6. ',d' → logprob: -17.12592315673828
    7. '
' → logprob: -17.62592315673828
    8. 'v' → logprob: -17.62592315673828
    9. ' ' → logprob: -17.87592315673828
    10. ' ,
' → logprob: -18.37592315673828

Token 174: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20141908526420593
    2. ' v' → logprob: -1.7014191150665283
    3. ')v' → logprob: -13.57641887664795
    4. '	v' → logprob: -13.95141887664795
    5. ')' → logprob: -14.07641887664795
    6. ' ' → logprob: -14.32641887664795
    7. '_v' → logprob: -14.82641887664795
    8. '<|end|>' → logprob: -14.82641887664795
    9. ',v' → logprob: -15.51391887664795
    10. ' ' → logprob: -16.013919830322266

Token 175: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.2127087504486553e-05
    2. 'to' → logprob: -10.750021934509277
    3. '_' → logprob: -15.875021934509277
    4. '_from' → logprob: -15.875021934509277
    5. 'To' → logprob: -16.125022888183594
    6. '_t' → logprob: -16.500022888183594
    7. '))' → logprob: -18.000022888183594
    8. '-to' → logprob: -18.000022888183594
    9. ')' → logprob: -18.125022888183594
    10. 't' → logprob: -18.250022888183594

Token 176: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.6227558255195618
    2. '))' → logprob: -1.122755765914917
    3. '),' → logprob: -1.997755765914917
    4. ')' → logprob: -6.122756004333496
    5. ')))' → logprob: -8.122756004333496
    6. ')),
' → logprob: -12.247756004333496
    7. ' ),' → logprob: -12.372756004333496
    8. ' ))' → logprob: -12.622756004333496
    9. '))
' → logprob: -12.997756004333496
    10. ' ' → logprob: -13.122756004333496

Token 177: ' shape' (ID: 9591)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.392743855714798
    2. '(V' → logprob: -1.7677438259124756
    3. ' (' → logprob: -2.0177438259124756
    4. 'shape' → logprob: -4.142744064331055
    5. '(shape' → logprob: -6.017744064331055
    6. ' shape' → logprob: -6.392744064331055
    7. ')' → logprob: -7.767744064331055
    8. '(n' → logprob: -8.767744064331055
    9. '<|end|>' → logprob: -8.767744064331055
    10. '(v' → logprob: -9.017744064331055

Token 178: '=(' (ID: 9893)
  Prédit: '=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.0045817880891263485
    2. '(V' → logprob: -5.504581928253174
    3. '(' → logprob: -7.629581928253174
    4. '=' → logprob: -11.254581451416016
    5. ' (' → logprob: -12.754581451416016
    6. ')' → logprob: -14.379581451416016
    7. '(v' → logprob: -15.504581451416016
    8. '(I' → logprob: -15.754581451416016
    9. '(View' → logprob: -15.754581451416016
    10. '((' → logprob: -16.004581451416016

Token 179: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00072851701406762
    2. '(V' → logprob: -7.750728607177734
    3. ' V' → logprob: -8.125728607177734
    4. ' (' → logprob: -13.625728607177734
    5. ' ' → logprob: -15.250728607177734
    6. '(' → logprob: -15.625728607177734
    7. '	V' → logprob: -15.750728607177734
    8. ')V' → logprob: -16.375728607177734
    9. '[V' → logprob: -16.500728607177734
    10. ',V' → logprob: -17.125728607177734

Token 180: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028410006780177355
    2. ',V' → logprob: -8.375284194946289
    3. ' ,' → logprob: -9.875284194946289
    4. 'V' → logprob: -14.750284194946289
    5. ' ' → logprob: -15.000284194946289
    6. ',
' → logprob: -15.000284194946289
    7. ' V' → logprob: -15.500284194946289
    8. '<|end|>' → logprob: -15.625284194946289
    9. '<|end|>' → logprob: -15.750284194946289
    10. ',E' → logprob: -15.875284194946289

Token 181: '1' (ID: 16)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.5975396633148193
    2. 'V' → logprob: -0.9725396633148193
    3. '1' → logprob: -3.0975396633148193
    4. ',' → logprob: -4.347539901733398
    5. ' ' → logprob: -4.472539901733398
    6. ' ,' → logprob: -6.972539901733398
    7. ',V' → logprob: -7.597539901733398
    8. '0' → logprob: -8.597539901733398
    9. '   ' → logprob: -9.472539901733398
    10. '2' → logprob: -9.722539901733398

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013875007862225175
    2. ')' → logprob: -7.001387596130371
    3. '))' → logprob: -8.501387596130371
    4. ',)' → logprob: -9.251387596130371
    5. ' ,' → logprob: -9.376387596130371
    6. '<|end|>' → logprob: -9.876387596130371
    7. ',V' → logprob: -11.001387596130371
    8. '),' → logprob: -11.751387596130371
    9. ',v' → logprob: -13.001387596130371
    10. ',),' → logprob: -13.001387596130371

Token 183: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0028062984347343445
    2. ' V' → logprob: -5.877806186676025
    3. ' ' → logprob: -14.502806663513184
    4. '	V' → logprob: -15.127806663513184
    5. '   ' → logprob: -15.377806663513184
    6. ')' → logprob: -15.877806663513184
    7. ')V' → logprob: -16.002805709838867
    8. '  ' → logprob: -16.752805709838867
    9. '
' → logprob: -16.752805709838867
    10. '(V' → logprob: -17.252805709838867

Token 184: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.0100624169572257e-05
    2. ' +' → logprob: -10.875020027160645
    3. '))' → logprob: -14.625020027160645
    4. '+
' → logprob: -14.750020027160645
    5. '1' → logprob: -16.62502098083496
    6. ')' → logprob: -17.75002098083496
    7. '<|end|>' → logprob: -17.75002098083496
    8. '
' → logprob: -17.87502098083496
    9. '+A' → logprob: -17.87502098083496
    10. '<|end|>' → logprob: -18.12502098083496

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.250005722045898
    3. '0' → logprob: -14.125005722045898
    4. '```' → logprob: -16.8750057220459
    5. ')' → logprob: -17.1250057220459
    6. '2' → logprob: -17.6250057220459
    7. 'V' → logprob: -17.8750057220459
    8. '   ' → logprob: -17.8750057220459
    9. '<|end|>' → logprob: -17.8750057220459
    10. '<|end|>' → logprob: -18.5000057220459

Token 186: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932070851325989
    2. '))' → logprob: -0.6932070851325989
    3. '),' → logprob: -9.818206787109375
    4. ')))' → logprob: -13.318206787109375
    5. ')
' → logprob: -13.443206787109375
    6. '))
' → logprob: -13.693206787109375
    7. ' ))' → logprob: -14.943206787109375
    8. ' )' → logprob: -15.068206787109375
    9. ').' → logprob: -16.318206787109375
    10. '))

' → logprob: -16.443206787109375

Token 187: '_dist' (ID: 37968)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6270601153373718
    2. '<|end|>' → logprob: -1.6270601749420166
    3. 'distance' → logprob: -2.1270601749420166
    4. 'dist' → logprob: -2.6270601749420166
    5. ')' → logprob: -3.7520601749420166
    6. '#' → logprob: -4.1270599365234375
    7. 'd' → logprob: -4.8770599365234375
    8. 'print' → logprob: -5.2520599365234375
    9. 'f' → logprob: -5.6270599365234375
    10. 'n' → logprob: -6.1270599365234375

Token 188: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18216867744922638
    2. 'ance' → logprob: -2.80716872215271
    3. ' =' → logprob: -3.05716872215271
    4. 'ances' → logprob: -3.18216872215271
    5. '_matrix' → logprob: -4.307168483734131
    6. 'matrix' → logprob: -5.807168483734131
    7. 's' → logprob: -8.182168960571289
    8. ',' → logprob: -8.432168960571289
    9. 'mat' → logprob: -9.557168960571289
    10. '=np' → logprob: -9.807168960571289

Token 189: ' _' (ID: 1175)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.11963435262441635
    2. ' predecessors' → logprob: -2.2446343898773193
    3. '_pre' → logprob: -5.49463415145874
    4. ' predecessor' → logprob: -6.61963415145874
    5. 'pred' → logprob: -7.36963415145874
    6. '_' → logprob: -8.369634628295898
    7. 'path' → logprob: -9.369634628295898
    8. 'preced' → logprob: -9.369634628295898
    9. ' pre' → logprob: -9.869634628295898
    10. ' pred' → logprob: -10.119634628295898

Token 190: 'pred' (ID: 32189)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.20047657191753387
    2. 'pred' → logprob: -2.32547664642334
    3. 'path' → logprob: -2.95047664642334
    4. 'paths' → logprob: -4.95047664642334
    5. ' predecessors' → logprob: -5.07547664642334
    6. '_path' → logprob: -5.32547664642334
    7. '_pre' → logprob: -5.45047664642334
    8. '=' → logprob: -5.82547664642334
    9. '_=' → logprob: -6.95047664642334
    10. 'preced' → logprob: -6.95047664642334

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6344051957130432
    2. '=' → logprob: -0.7594051957130432
    3. '<|end|>' → logprob: -6.634405136108398
    4. 's' → logprob: -7.759405136108398
    5. '<|end|>' → logprob: -11.134405136108398
    6. ')' → logprob: -11.759405136108398
    7. ' ' → logprob: -11.884405136108398
    8. ',' → logprob: -12.384405136108398
    9. '```' → logprob: -12.509405136108398
    10. '=
' → logprob: -13.071905136108398

Token 192: ' flo' (ID: 15037)
  Prédit: ' flo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flo' → logprob: -0.4748489260673523
    2. 'f' → logprob: -0.9748489260673523
    3. 'flo' → logprob: -7.974848747253418
    4. ' ' → logprob: -9.099848747253418
    5. ' Floyd' → logprob: -9.224848747253418
    6. ' ' → logprob: -10.349848747253418
    7. ' fle' → logprob: -10.787348747253418
    8. '   ' → logprob: -10.849848747253418
    9. '```' → logprob: -11.099848747253418
    10. ' f' → logprob: -11.162348747253418

Token 193: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -3.309382373117842e-05
    2. 'y' → logprob: -10.375033378601074
    3. 'd' → logprob: -14.500033378601074
    4. 'w' → logprob: -15.000033378601074
    5. 'yed' → logprob: -15.000033378601074
    6. 'loyd' → logprob: -15.875033378601074
    7. 'yw' → logprob: -15.875033378601074
    8. 'ydro' → logprob: -16.000032424926758
    9. 'oy' → logprob: -16.250032424926758
    10. 'ydd' → logprob: -16.875032424926758

Token 194: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -2.534558552724775e-05
    2. '_f' → logprob: -11.500025749206543
    3. '_' → logprob: -11.625025749206543
    4. 'w' → logprob: -13.375025749206543
    5. '_wall' → logprob: -14.000025749206543
    6. '_walk' → logprob: -14.375025749206543
    7. 'f' → logprob: -14.500025749206543
    8. '_graph' → logprob: -14.625025749206543
    9. '_aw' → logprob: -15.000025749206543
    10. '_fw' → logprob: -15.125025749206543

Token 195: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0022055702283978462
    2. 'arshal' → logprob: -6.1272053718566895
    3. 'shall' → logprob: -11.627205848693848
    4. 'ars' → logprob: -12.252205848693848
    5. '```' → logprob: -12.877205848693848
    6. 'arsch' → logprob: -14.377205848693848
    7. 'all' → logprob: -14.627205848693848
    8. 'ар' → logprob: -14.877205848693848
    9. 'war' → logprob: -15.002205848693848
    10. 'ash' → logprob: -15.127205848693848

Token 196: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0009582702768966556
    2. 'all' → logprob: -7.750958442687988
    3. 's' → logprob: -8.750958442687988
    4. 'sh' → logprob: -8.875958442687988
    5. 'shal' → logprob: -9.625958442687988
    6. 'shaw' → logprob: -9.625958442687988
    7. '_sh' → logprob: -10.250958442687988
    8. '_all' → logprob: -11.375958442687988
    9. 'hall' → logprob: -11.500958442687988
    10. 'wall' → logprob: -12.000958442687988

Token 197: '(cs' (ID: 89621)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.22357520461082458
    2. '(cs' → logprob: -1.723575234413147
    3. '(' → logprob: -3.9735751152038574
    4. '(c' → logprob: -6.473575115203857
    5. '(matrix' → logprob: -7.348575115203857
    6. '(s' → logprob: -8.723575592041016
    7. '(Graph' → logprob: -8.723575592041016
    8. '(A' → logprob: -9.223575592041016
    9. '(
' → logprob: -9.223575592041016
    10. '(C' → logprob: -9.848575592041016

Token 198: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0005693563143722713
    2. 'r' → logprob: -7.6255693435668945
    3. 'raph' → logprob: -9.750569343566895
    4. '_graph' → logprob: -11.625569343566895
    5. 'rg' → logprob: -12.000569343566895
    6. 'matrix' → logprob: -12.625569343566895
    7. 'gr' → logprob: -13.625569343566895
    8. ' graph' → logprob: -14.250569343566895
    9. '_matrix' → logprob: -14.875569343566895
    10. 'rc' → logprob: -14.875569343566895

Token 199: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014036978245712817
    2. '(graph' → logprob: -9.000140190124512
    3. 'graph' → logprob: -12.125140190124512
    4. ')' → logprob: -13.000140190124512
    5. ' =' → logprob: -13.500140190124512
    6. '=edge' → logprob: -13.875140190124512
    7. '=s' → logprob: -14.250140190124512
    8. '=g' → logprob: -14.750140190124512
    9. '=df' → logprob: -14.750140190124512
    10. '=f' → logprob: -14.875140190124512

Token 200: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00324842007830739
    2. ' graph' → logprob: -6.00324821472168
    3. '(graph' → logprob: -7.25324821472168
    4. '	graph' → logprob: -9.87824821472168
    5. 'raph' → logprob: -12.87824821472168
    6. ')' → logprob: -13.00324821472168
    7. '_graph' → logprob: -13.12824821472168
    8. 'graphql' → logprob: -13.25324821472168
    9. '.graph' → logprob: -13.87824821472168
    10. 'agraph' → logprob: -14.25324821472168

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002003218833124265
    2. ' ,' → logprob: -8.625200271606445
    3. ',d' → logprob: -12.000200271606445
    4. '_,' → logprob: -12.875200271606445
    5. ',to' → logprob: -13.375200271606445
    6. '   ' → logprob: -13.500200271606445
    7. ',use' → logprob: -13.625200271606445
    8. ',
' → logprob: -14.000200271606445
    9. ',n' → logprob: -14.000200271606445
    10. ',is' → logprob: -14.125200271606445

Token 202: ' directed' (ID: 23699)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.43591293692588806
    2. 'return' → logprob: -1.0609129667282104
    3. ' directed' → logprob: -5.1859130859375
    4. 'indices' → logprob: -7.1859130859375
    5. ' return' → logprob: -8.1859130859375
    6. '   ' → logprob: -8.9359130859375
    7. '

' → logprob: -9.9359130859375
    8. 'dense' → logprob: -10.1859130859375
    9. '     ' → logprob: -10.3109130859375
    10. '       ' → logprob: -10.4359130859375

Token 203: '=False' (ID: 12148)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.007608755491673946
    2. '=' → logprob: -4.882608890533447
    3. '=False' → logprob: -13.257608413696289
    4. 'True' → logprob: -14.257608413696289
    5. '=_' → logprob: -16.25760841369629
    6. '=T' → logprob: -17.25760841369629
    7. ' =' → logprob: -17.38260841369629
    8. '```' → logprob: -17.63260841369629
    9. '=sys' → logprob: -17.88260841369629
    10. '=A' → logprob: -18.00760841369629

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004237627435941249
    2. ')' → logprob: -7.875423908233643
    3. ' ,' → logprob: -10.250423431396484
    4. ',use' → logprob: -12.875423431396484
    5. '),' → logprob: -14.000423431396484
    6. '   ' → logprob: -14.500423431396484
    7. 'return' → logprob: -14.625423431396484
    8. '‌,' → logprob: -14.750423431396484
    9. ',)' → logprob: -14.875423431396484
    10. ',true' → logprob: -15.625423431396484

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16122235357761383
    2. ' return' → logprob: -1.9112223386764526
    3. 'indices' → logprob: -8.161222457885742
    4. ' ' → logprob: -8.536222457885742
    5. '   ' → logprob: -8.786222457885742
    6. '```' → logprob: -9.661222457885742
    7. '  ' → logprob: -9.786222457885742
    8. '    ' → logprob: -10.036222457885742
    9. '(return' → logprob: -10.411222457885742
    10. '

' → logprob: -10.661222457885742

Token 206: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.0008732284768484533
    2. '_pred' → logprob: -7.12587308883667
    3. 'pre' → logprob: -10.250873565673828
    4. '_' → logprob: -11.375873565673828
    5. '_distance' → logprob: -12.250873565673828
    6. '_predictions' → logprob: -12.625873565673828
    7. '_Pre' → logprob: -12.750873565673828
    8. '_path' → logprob: -13.625873565673828
    9. '_p' → logprob: -13.750873565673828
    10. '_paths' → logprob: -13.875873565673828

Token 207: 'decess' (ID: 54010)
  Prédit: 'decess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decess' → logprob: -0.2840617597103119
    2. 'd' → logprob: -1.4090617895126343
    3. 'dict' → logprob: -6.534061908721924
    4. 'dtype' → logprob: -6.909061908721924
    5. 'dis' → logprob: -9.034061431884766
    6. 'dense' → logprob: -9.034061431884766
    7. 'de' → logprob: -9.534061431884766
    8. '```' → logprob: -11.034061431884766
    9. 'dc' → logprob: -11.159061431884766
    10. 'dec' → logprob: -11.284061431884766

Token 208: 'ors' (ID: 914)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.012648206204175949
    2. 'cess' → logprob: -5.012648105621338
    3. 'sses' → logprob: -5.637648105621338
    4. 's' → logprob: -6.512648105621338
    5. 'css' → logprob: -8.262648582458496
    6. 'essor' → logprob: -8.637648582458496
    7. 'cors' → logprob: -9.137648582458496
    8. '```' → logprob: -9.387648582458496
    9. 'ccess' → logprob: -10.137648582458496
    10. 'sss' → logprob: -10.137648582458496

Token 209: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -4.668304245569743e-05
    2. '=' → logprob: -10.125046730041504
    3. 'True' → logprob: -12.000046730041504
    4. ' =' → logprob: -16.250045776367188
    5. '(True' → logprob: -16.625045776367188
    6. 's' → logprob: -17.125045776367188
    7. '_=' → logprob: -17.375045776367188
    8. ')' → logprob: -17.500045776367188
    9. '=T' → logprob: -17.625045776367188
    10. '=False' → logprob: -18.000045776367188

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ',' → logprob: -15.50000286102295
    5. '))' → logprob: -16.250003814697266
    6. '),' → logprob: -16.500003814697266
    7. ')

' → logprob: -16.875003814697266
    8. ',)' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.250003814697266
    10. ')`' → logprob: -17.875003814697266

Token 211: '_dist' (ID: 37968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: '[_' (ID: 24002)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04429405927658081
    2. 'pred' → logprob: -3.1692941188812256
    3. '_dist' → logprob: -7.1692938804626465
    4. '==' → logprob: -8.044294357299805
    5. ' ==' → logprob: -9.544294357299805
    6. '_pred' → logprob: -9.919294357299805
    7. '0' → logprob: -10.919294357299805
    8. '>' → logprob: -11.419294357299805
    9. '.dist' → logprob: -11.669294357299805
    10. 'cost' → logprob: -12.169294357299805

Token 214: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6948323249816895
    2. ' ==' → logprob: -0.6948323249816895
    3. ' <' → logprob: -7.9448323249816895
    4. '>' → logprob: -8.069831848144531
    5. ' >' → logprob: -8.069831848144531
    6. '<' → logprob: -8.444831848144531
    7. '==-' → logprob: -8.569831848144531
    8. ' ' → logprob: -9.569831848144531
    9. ' >=' → logprob: -9.694831848144531
    10. '>=' → logprob: -9.819831848144531

Token 215: ' ' (ID: 220)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.007732742466032505
    2. 'float' → logprob: -5.00773286819458
    3. ' np' → logprob: -7.50773286819458
    4. '0' → logprob: -7.88273286819458
    5. 'inf' → logprob: -9.382732391357422
    6. 'sys' → logprob: -13.132732391357422
    7. ' ' → logprob: -13.757732391357422
    8. '    ' → logprob: -14.382732391357422
    9. ' float' → logprob: -14.507732391357422
    10. '   ' → logprob: -14.507732391357422

Token 216: '0' (ID: 15)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.003382199676707387
    2. 'float' → logprob: -6.128382205963135
    3. '0' → logprob: -7.253382205963135
    4. 'inf' → logprob: -7.753382205963135
    5. ' np' → logprob: -9.878381729125977
    6. '-' → logprob: -13.003381729125977
    7. 'sys' → logprob: -13.503381729125977
    8. '999' → logprob: -13.878381729125977
    9. 'numpy' → logprob: -14.003381729125977
    10. '-inf' → logprob: -14.628381729125977

Token 217: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038493594620376825
    2. ']=' → logprob: -5.878849506378174
    3. ' ]' → logprob: -6.878849506378174
    4. '[np' → logprob: -12.253849029541016
    5. '[' → logprob: -13.378849029541016
    6. ',' → logprob: -13.378849029541016
    7. '.' → logprob: -13.753849029541016
    8. ']=-' → logprob: -14.003849029541016
    9. ' ' → logprob: -14.378849029541016
    10. '&' → logprob: -14.378849029541016

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007122868672013283
    2. '[np' → logprob: -5.382122993469238
    3. ' =' → logprob: -6.757122993469238
    4. '=np' → logprob: -7.007122993469238
    5. '[' → logprob: -8.882122993469238
    6. ']=' → logprob: -9.132122993469238
    7. ']' → logprob: -9.132122993469238
    8. ',' → logprob: -11.257122993469238
    9. ')' → logprob: -11.632122993469238
    10. '=in' → logprob: -11.882122993469238

Token 219: ' float' (ID: 4428)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.04335346445441246
    2. 'float' → logprob: -3.16835355758667
    3. 'int' → logprob: -9.043353080749512
    4. '999' → logprob: -9.293353080749512
    5. '1' → logprob: -9.543353080749512
    6. ' np' → logprob: -9.918353080749512
    7. '0' → logprob: -11.668353080749512
    8. '10' → logprob: -12.168353080749512
    9. '(np' → logprob: -12.793353080749512
    10. '[np' → logprob: -13.293353080749512

Token 220: '('' (ID: 706)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0036804676055908
    2. '('' → logprob: -1.2536804676055908
    3. 'inf' → logprob: -1.3786804676055908
    4. '"' → logprob: -2.878680467605591
    5. ''in' → logprob: -3.378680467605591
    6. '32' → logprob: -7.003680229187012
    7. 'np' → logprob: -7.003680229187012
    8. '.inf' → logprob: -7.253680229187012
    9. ''s' → logprob: -7.378680229187012
    10. 'Inf' → logprob: -7.753680229187012

Token 221: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -8.208653162000701e-05
    2. 'np' → logprob: -9.875082015991211
    3. ''' → logprob: -10.625082015991211
    4. '.inf' → logprob: -13.250082015991211
    5. '0' → logprob: -14.125082015991211
    6. '_inf' → logprob: -14.125082015991211
    7. '32' → logprob: -14.250082015991211
    8. '9' → logprob: -14.625082015991211
    9. 'Inf' → logprob: -14.625082015991211
    10. '"' → logprob: -14.750082015991211

Token 222: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.547789674485102e-05
    2. ' )' → logprob: -10.750035285949707
    3. '')' → logprob: -11.875035285949707
    4. ')
' → logprob: -13.250035285949707
    5. '[' → logprob: -13.625035285949707
    6. '),' → logprob: -14.125035285949707
    7. '_)' → logprob: -14.625035285949707
    8. '<|end|>' → logprob: -14.750035285949707
    9. '）' → logprob: -15.375035285949707
    10. '))' → logprob: -15.375035285949707

Token 223: 'min' (ID: 1493)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.016520380973815918
    2. 'for' → logprob: -5.0165205001831055
    3. '<|end|>' → logprob: -6.5165205001831055
    4. 'dist' → logprob: -6.6415205001831055
    5. '0' → logprob: -6.7665205001831055
    6. '_dst' → logprob: -6.7665205001831055
    7. ')' → logprob: -6.8915205001831055
    8. 'print' → logprob: -7.0165205001831055
    9. ' for' → logprob: -7.6415205001831055
    10. ' _' → logprob: -8.016520500183105

Token 224: '_nodes' (ID: 34593)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5671271681785583
    2. '_' → logprob: -1.0671272277832031
    3. '_cost' → logprob: -3.192127227783203
    4. '_distance' → logprob: -3.442127227783203
    5. '_val' → logprob: -4.692127227783203
    6. '_path' → logprob: -5.817127227783203
    7. 'dist' → logprob: -7.067127227783203
    8. '_value' → logprob: -7.192127227783203
    9. '_d' → logprob: -7.567127227783203
    10. '_idx' → logprob: -7.692127227783203

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07118594646453857
    2. '=' → logprob: -2.696186065673828
    3. ',' → logprob: -7.446186065673828
    4. '_' → logprob: -7.946186065673828
    5. ' ' → logprob: -9.446186065673828
    6. '=[]' → logprob: -9.821186065673828
    7. '_idx' → logprob: -10.196186065673828
    8. ')' → logprob: -10.946186065673828
    9. '_count' → logprob: -11.196186065673828
    10. '[:]' → logprob: -11.446186065673828

Token 226: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.41747307777404785
    2. 'np' → logprob: -1.5424730777740479
    3. '[V' → logprob: -3.792473077774048
    4. 'set' → logprob: -3.917473077774048
    5. 'V' → logprob: -3.917473077774048
    6. '[np' → logprob: -4.167472839355469
    7. '_' → logprob: -4.667472839355469
    8. '[_' → logprob: -5.042472839355469
    9. '[' → logprob: -5.167472839355469
    10. 'range' → logprob: -5.417472839355469

Token 227: 'np' (ID: 12766)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4624251127243042
    2. '0' → logprob: -1.2124251127243042
    3. 'np' → logprob: -3.9624252319335938
    4. '_]' → logprob: -3.9624252319335938
    5. '_' → logprob: -4.712425231933594
    6. '(i' → logprob: -5.337425231933594
    7. 'V' → logprob: -5.837425231933594
    8. '_i' → logprob: -5.837425231933594
    9. 'v' → logprob: -6.087425231933594
    10. 'float' → logprob: -6.337425231933594

Token 228: '.arg' (ID: 47493)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.6753285527229309
    2. '.arg' → logprob: -0.8003285527229309
    3. '.argmax' → logprob: -3.550328493118286
    4. '.inf' → logprob: -5.925328731536865
    5. 'inf' → logprob: -6.050328731536865
    6. '.where' → logprob: -6.300328731536865
    7. 'is' → logprob: -6.300328731536865
    8. 'min' → logprob: -7.050328731536865
    9. 'where' → logprob: -7.175328731536865
    10. '.nan' → logprob: -7.300328731536865

Token 229: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.2603901015827432e-05
    2. 'max' → logprob: -11.375022888183594
    3. 'where' → logprob: -12.000022888183594
    4. 'partition' → logprob: -12.250022888183594
    5. 'minimum' → logprob: -17.750022888183594
    6. '_min' → logprob: -17.875022888183594
    7. ' min' → logprob: -19.500022888183594
    8. 'sort' → logprob: -19.625022888183594
    9. '
' → logprob: -20.125022888183594
    10. 'mine' → logprob: -20.250022888183594

Token 230: '(row' (ID: 15945)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0032452051527798176
    2. '_dist' → logprob: -5.7532453536987305
    3. ' (_' → logprob: -10.25324535369873
    4. '(row' → logprob: -11.50324535369873
    5. '(dist' → logprob: -11.62824535369873
    6. '(' → logprob: -12.25324535369873
    7. ']' → logprob: -13.12824535369873
    8. '((_' → logprob: -13.37824535369873
    9. '(_)' → logprob: -14.12824535369873
    10. ' _' → logprob: -14.12824535369873

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005751936114393175
    2. '[' → logprob: -7.875575065612793
    3. ')+' → logprob: -8.875575065612793
    4. ' )' → logprob: -10.250575065612793
    5. ')]' → logprob: -11.375575065612793
    6. '.tolist' → logprob: -12.875575065612793
    7. ').' → logprob: -13.000575065612793
    8. ' +' → logprob: -13.375575065612793
    9. ')
' → logprob: -14.250575065612793
    10. '+' → logprob: -14.750575065612793

Token 232: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20307525992393494
    2. ' for' → logprob: -2.4530751705169678
    3. 'for' → logprob: -2.5780751705169678
    4. '()' → logprob: -3.9530751705169678
    5. '.tolist' → logprob: -7.328075408935547
    6. '[' → logprob: -7.828075408935547
    7. '   ' → logprob: -7.953075408935547
    8. ' )' → logprob: -7.953075408935547
    9. '	for' → logprob: -7.953075408935547
    10. ')]' → logprob: -9.203075408935547

Token 233: ' row' (ID: 5225)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.011185871437191963
    2. ' _' → logprob: -5.511185646057129
    3. 'row' → logprob: -5.761185646057129
    4. ' row' → logprob: -6.136185646057129
    5. ' range' → logprob: -6.636185646057129
    6. 'range' → logprob: -7.886185646057129
    7. ' ' → logprob: -10.886185646057129
    8. '_range' → logprob: -11.261185646057129
    9. '_row' → logprob: -11.261185646057129
    10. ' Dist' → logprob: -11.886185646057129

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004207826859783381
    2. 'in' → logprob: -7.875420570373535
    3. ' _' → logprob: -10.875420570373535
    4. '_dist' → logprob: -11.875420570373535
    5. ' ' → logprob: -12.500420570373535
    6. 's' → logprob: -12.750420570373535
    7. ',_' → logprob: -12.875420570373535
    8. ',' → logprob: -13.125420570373535
    9. '_in' → logprob: -14.000420570373535
    10. '  ' → logprob: -14.625420570373535

Token 235: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.008129963040119e-06
    2. ' _' → logprob: -12.625003814697266
    3. '_div' → logprob: -15.625003814697266
    4. '_pred' → logprob: -16.375003814697266
    5. 'np' → logprob: -16.500003814697266
    6. '_DIST' → logprob: -16.875003814697266
    7. '_abs' → logprob: -16.875003814697266
    8. '_distance' → logprob: -17.625003814697266
    9. '_grad' → logprob: -17.750003814697266
    10. '_dis' → logprob: -17.750003814697266

Token 236: 'dist' (ID: 24126)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.002940144157037139
    2. 'dist' → logprob: -5.8779401779174805
    3. '_pred' → logprob: -9.00294017791748
    4. 'pred' → logprob: -11.37794017791748
    5. ' dist' → logprob: -15.12794017791748
    6. '	dist' → logprob: -16.127939224243164
    7. 'Dist' → logprob: -16.752939224243164
    8. '_DIST' → logprob: -17.252939224243164
    9. ' _' → logprob: -17.377939224243164
    10. '_diff' → logprob: -17.502939224243164

Token 237: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003765166737139225
    2. ' ]' → logprob: -5.628765106201172
    3. ' if' → logprob: -9.878765106201172
    4. ')]' → logprob: -10.003765106201172
    5. ']
' → logprob: -10.378765106201172
    6. '()]' → logprob: -11.503765106201172
    7. '[' → logprob: -12.503765106201172
    8. ' ' → logprob: -12.628765106201172
    9. '[:-' → logprob: -12.628765106201172
    10. '   ' → logprob: -12.878765106201172

Token 238: 'if' (ID: 366)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0141130685806274
    2. ')' → logprob: -1.5141130685806274
    3. '[' → logprob: -1.6391130685806274
    4. '<|end|>' → logprob: -2.389112949371338
    5. ' ' → logprob: -2.889112949371338
    6. '
' → logprob: -3.264112949371338
    7. '(' → logprob: -5.514112949371338
    8. '#' → logprob: -5.639112949371338
    9. '```' → logprob: -5.639112949371338
    10. '_' → logprob: -5.764112949371338

Token 239: ' PRO' (ID: 8369)
  Prédit: ' PRO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' PRO' → logprob: -0.0366351380944252
    2. ' __' → logprob: -4.036634922027588
    3. ' not' → logprob: -4.536634922027588
    4. 'PRO' → logprob: -5.536634922027588
    5. ' len' → logprob: -6.036634922027588
    6. '__' → logprob: -7.286634922027588
    7. ' ' → logprob: -8.286635398864746
    8. ' True' → logprob: -9.161635398864746
    9. 'not' → logprob: -9.286635398864746
    10. '_PRO' → logprob: -10.286635398864746

Token 240: 'BLEM' (ID: 134327)
  Prédit: 'BLEM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLEM' → logprob: -0.2756436765193939
    2. '_B' → logprob: -1.5256437063217163
    3. 'LEM' → logprob: -4.900643825531006
    4. 'PRO' → logprob: -5.275643825531006
    5. '_PRO' → logprob: -5.650643825531006
    6. 'OB' → logprob: -5.775643825531006
    7. 'ROB' → logprob: -6.650643825531006
    8. 'RO' → logprob: -6.900643825531006
    9. '_problem' → logprob: -8.025643348693848
    10. 'ROM' → logprob: -8.275643348693848

Token 241: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.00020461321400944144
    2. '_A' → logprob: -8.500205039978027
    3. '_' → logprob: -14.625205039978027
    4. 'B' → logprob: -15.125205039978027
    5. ' _' → logprob: -15.875205039978027
    6. '_BGR' → logprob: -16.37520408630371
    7. '==' → logprob: -16.75020408630371
    8. '=_' → logprob: -17.75020408630371
    9. '_b' → logprob: -18.25020408630371
    10. '##_' → logprob: -18.37520408630371

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001256303396075964
    2. ':
' → logprob: -6.876256465911865
    3. ' :' → logprob: -8.501255989074707
    4. ' ==' → logprob: -11.376255989074707
    5. '==' → logprob: -12.126255989074707
    6. ':
' → logprob: -14.376255989074707
    7. ' and' → logprob: -14.501255989074707
    8. ' :
' → logprob: -14.626255989074707
    9. ':

' → logprob: -14.751255989074707
    10. '():' → logprob: -15.251255989074707

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6723220348358154
    2. ' for' → logprob: -0.9223220348358154
    3. 'for' → logprob: -3.6723220348358154
    4. ' print' → logprob: -3.7973220348358154
    5. '
' → logprob: -4.4223222732543945
    6. ' answer' → logprob: -4.7973222732543945
    7. ' min' → logprob: -5.1723222732543945
    8. ' result' → logprob: -5.9223222732543945
    9. ' ans' → logprob: -6.1723222732543945
    10. 'print' → logprob: -6.2973222732543945

Token 244: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2239089012145996
    2. ' for' → logprob: -1.7239089012145996
    3. 'ans' → logprob: -2.4739089012145996
    4. 'print' → logprob: -2.9739089012145996
    5. 'min' → logprob: -3.3489089012145996
    6. 'answer' → logprob: -3.4739089012145996
    7. 'result' → logprob: -3.7239089012145996
    8. ' ans' → logprob: -3.8489089012145996
    9. 'dist' → logprob: -3.9739089012145996
    10. ' min' → logprob: -4.0989089012146

Token 245: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1551603525876999
    2. '_line' → logprob: -2.155160427093506
    3. '_data' → logprob: -4.530160427093506
    4. ' =' → logprob: -5.030160427093506
    5. '()
' → logprob: -5.780160427093506
    6. '=' → logprob: -6.280160427093506
    7. '_lines' → logprob: -6.780160427093506
    8. '().' → logprob: -7.280160427093506
    9. 'data' → logprob: -7.530160427093506
    10. '_buffer' → logprob: -7.780160427093506

Token 246: 'T' (ID: 51)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '_MAX' (ID: 15267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.048994541168213
    2. 'arget' → logprob: -2.423994541168213
    3. '=' → logprob: -2.548994541168213
    4. 'otal' → logprob: -3.048994541168213
    5. 'ime' → logprob: -3.423994541168213
    6. '_nodes' → logprob: -3.486494541168213
    7. ',' → logprob: -3.486494541168213
    8. '_query' → logprob: -4.173994541168213
    9. 'r' → logprob: -4.236494541168213
    10. '_count' → logprob: -4.486494541168213

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05699281021952629
    2. '=' → logprob: -2.931992769241333
    3. ',' → logprob: -6.806993007659912
    4. 'IME' → logprob: -8.181992530822754
    5. '=int' → logprob: -8.306992530822754
    6. 'ime' → logprob: -8.306992530822754
    7. ' ' → logprob: -9.181992530822754
    8. ' ,' → logprob: -10.931992530822754
    9. '  ' → logprob: -11.431992530822754
    10. 'imes' → logprob: -11.619492530822754

Token 249: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0868077278137207
    2. '100' → logprob: -1.4618077278137207
    3. '10' → logprob: -1.9618077278137207
    4. ' int' → logprob: -2.2118077278137207
    5. ' ' → logprob: -2.4618077278137207
    6. '20' → logprob: -2.8368077278137207
    7. '200' → logprob: -5.086807727813721
    8. '50' → logprob: -5.336807727813721
    9. '5' → logprob: -5.586807727813721
    10. '1' → logprob: -5.711807727813721

Token 250: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010754420654848218
    2. 'input' → logprob: -7.376075267791748
    3. '(' → logprob: -7.751075267791748
    4. ' input' → logprob: -11.001075744628906
    5. ' (' → logprob: -13.876075744628906
    6. ',input' → logprob: -15.751075744628906
    7. '(
' → logprob: -16.001075744628906
    8. '=input' → logprob: -16.126075744628906
    9. '	input' → logprob: -16.251075744628906
    10. '((' → logprob: -16.501075744628906

Token 251: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17231810092926025
    2. '()' → logprob: -1.9223181009292603
    3. '().' → logprob: -4.422317981719971
    4. ' ())' → logprob: -12.297318458557129
    5. ')' → logprob: -13.297318458557129
    6. ' ()' → logprob: -13.547318458557129
    7. '(),' → logprob: -13.547318458557129
    8. '()
' → logprob: -13.922318458557129
    9. '();)' → logprob: -13.922318458557129
    10. '（）' → logprob: -14.047318458557129

Token 252: 'T' (ID: 51)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19348889589309692
    2. '
' → logprob: -2.693488836288452
    3. ' for' → logprob: -3.193488836288452
    4. '_' → logprob: -4.068489074707031
    5. ' ' → logprob: -4.193489074707031
    6. ')' → logprob: -5.693489074707031
    7. ' 
' → logprob: -5.818489074707031
    8. '#' → logprob: -6.068489074707031
    9. 'max' → logprob: -6.068489074707031
    10. 'while' → logprob: -6.068489074707031

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0485807657241821
    2. '=' → logprob: -1.4235807657241821
    3. '_' → logprob: -1.4235807657241821
    4. '_MAX' → logprob: -2.4235806465148926
    5. '_max' → logprob: -2.9235806465148926
    6. ')' → logprob: -5.673580646514893
    7. '.' → logprob: -6.048580646514893
    8. ' ' → logprob: -6.173580646514893
    9. 'MAX' → logprob: -6.298580646514893
    10. ',' → logprob: -6.673580646514893

Token 254: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14478793740272522
    2. ' int' → logprob: -2.5197880268096924
    3. 'T' → logprob: -3.1447880268096924
    4. ' T' → logprob: -4.519787788391113
    5. '[int' → logprob: -8.894787788391113
    6. '0' → logprob: -9.894787788391113
    7. '_T' → logprob: -10.269787788391113
    8. ' ' → logprob: -10.519787788391113
    9. 'np' → logprob: -11.144787788391113
    10. '1' → logprob: -11.644787788391113

Token 255: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.032599713653326035
    2. 'T' → logprob: -3.532599687576294
    3. '[int' → logprob: -7.157599925994873
    4. '0' → logprob: -7.407599925994873
    5. '[]' → logprob: -8.157599449157715
    6. '1' → logprob: -8.532599449157715
    7. 'input' → logprob: -8.907599449157715
    8. 'rand' → logprob: -8.907599449157715
    9. '[T' → logprob: -9.282599449157715
    10. '_T' → logprob: -9.282599449157715

Token 256: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2130691111087799
    2. '<|end|>' → logprob: -1.8380690813064575
    3. 'while' → logprob: -4.838068962097168
    4. '+' → logprob: -5.338068962097168
    5. ' 
' → logprob: -5.338068962097168
    6. '<|end|>' → logprob: -5.338068962097168
    7. ' ' → logprob: -5.588068962097168
    8. ' while' → logprob: -6.463068962097168
    9. 'for' → logprob: -6.713068962097168
    10. ',' → logprob: -6.838068962097168

Token 257: ' delivering' (ID: 28556)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5643273591995239
    2. ' while' → logprob: -0.9393273591995239
    3. ' queries' → logprob: -5.064327239990234
    4. 'for' → logprob: -5.189327239990234
    5. 'result' → logprob: -5.814327239990234
    6. 'results' → logprob: -6.439327239990234
    7. 'queries' → logprob: -6.439327239990234
    8. ' for' → logprob: -6.439327239990234
    9. ' results' → logprob: -6.564327239990234
    10. ' answers' → logprob: -6.939327239990234

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20442761480808258
    2. '=' → logprob: -2.454427719116211
    3. '_nodes' → logprob: -3.954427719116211
    4. '_' → logprob: -4.204427719116211
    5. '_count' → logprob: -4.329427719116211
    6. '_times' → logprob: -4.954427719116211
    7. '_time' → logprob: -5.079427719116211
    8. '_items' → logprob: -5.079427719116211
    9. '_points' → logprob: -5.579427719116211
    10. ',' → logprob: -6.204427719116211

Token 259: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7694911956787109
    2. 'False' → logprob: -1.144491195678711
    3. '{}' → logprob: -1.894491195678711
    4. 'set' → logprob: -2.769491195678711
    5. '0' → logprob: -6.269491195678711
    6. ' False' → logprob: -7.019491195678711
    7. ' []' → logprob: -7.269491195678711
    8. 'None' → logprob: -8.144491195678711
    9. '[]}' → logprob: -8.269491195678711
    10. ' set' → logprob: -8.394491195678711

Token 260: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.34730011224746704
    2. '[]' → logprob: -1.3473000526428223
    3. '{}' → logprob: -3.8473000526428223
    4. 'set' → logprob: -4.972300052642822
    5. '0' → logprob: -6.222300052642822
    6. 'None' → logprob: -6.222300052642822
    7. 'True' → logprob: -7.972300052642822
    8. '{' → logprob: -8.72230052947998
    9. '[]}' → logprob: -8.72230052947998
    10. '[]
' → logprob: -8.84730052947998

Token 261: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' returning' (ID: 22968)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12709009647369385
    2. ' while' → logprob: -3.0020899772644043
    3. 'while' → logprob: -4.627089977264404
    4. ' 
' → logprob: -4.752089977264404
    5. '<|end|>' → logprob: -5.002089977264404
    6. '_' → logprob: -5.127089977264404
    7. ' for' → logprob: -5.502089977264404
    8. ' delivery' → logprob: -5.502089977264404
    9. ' _' → logprob: -5.627089977264404
    10. ' current' → logprob: -5.752089977264404

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014227956533432
    2. '=' → logprob: -1.7014228105545044
    3. ' ' → logprob: -11.951422691345215
    4. '0' → logprob: -13.326422691345215
    5. ',' → logprob: -14.951422691345215
    6. '=False' → logprob: -15.076422691345215
    7. '_' → logprob: -15.201422691345215
    8. '＝' → logprob: -16.45142364501953
    9. '  ' → logprob: -16.63892364501953
    10. '=True' → logprob: -16.70142364501953

Token 264: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0047251260839402676
    2. ' ' → logprob: -5.504724979400635
    3. 'False' → logprob: -7.629724979400635
    4. '-' → logprob: -9.379725456237793
    5. ' False' → logprob: -10.629725456237793
    6. 'None' → logprob: -11.254725456237793
    7. '1' → logprob: -11.629725456237793
    8. ' -' → logprob: -11.754725456237793
    9. '[]' → logprob: -12.004725456237793
    10. 'True' → logprob: -12.629725456237793

Token 265: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: 'last' (ID: 6684)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '_return' (ID: 29287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8041120767593384
    2. '_' → logprob: -1.9291120767593384
    3. '_node' → logprob: -2.054111957550049
    4. '_destination' → logprob: -2.429111957550049
    5. '=' → logprob: -2.929111957550049
    6. '_token' → logprob: -3.679111957550049
    7. '_dest' → logprob: -4.179111957550049
    8. '_time' → logprob: -4.429111957550049
    9. '_space' → logprob: -4.429111957550049
    10. '_target' → logprob: -5.179111957550049

Token 268: ' =' (ID: 314)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5493281483650208
    2. '=' → logprob: -1.174328088760376
    3. '_' → logprob: -3.049328088760376
    4. '_time' → logprob: -3.299328088760376
    5. ' =' → logprob: -4.299328327178955
    6. 'ing' → logprob: -4.799328327178955
    7. '_to' → logprob: -7.049328327178955
    8. '_=' → logprob: -7.049328327178955
    9. '_point' → logprob: -7.299328327178955
    10. 's' → logprob: -7.299328327178955

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6423403024673462
    2. 'None' → logprob: -1.3923403024673462
    3. '-' → logprob: -1.5173403024673462
    4. 'False' → logprob: -6.017340183258057
    5. ' None' → logprob: -6.642340183258057
    6. ' ' → logprob: -7.392340183258057
    7. 'float' → logprob: -7.642340183258057
    8. '[]' → logprob: -7.892340183258057
    9. ' -' → logprob: -8.017340660095215
    10. 'True' → logprob: -8.517340660095215

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8360049724578857
    2. '-' → logprob: -1.2110049724578857
    3. 'None' → logprob: -1.3360049724578857
    4. 'False' → logprob: -6.461005210876465
    5. '[]' → logprob: -7.086005210876465
    6. 'float' → logprob: -7.086005210876465
    7. 'T' → logprob: -7.211005210876465
    8. ' None' → logprob: -7.711005210876465
    9. ' ' → logprob: -8.086005210876465
    10. ' -' → logprob: -8.336005210876465

Token 271: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: 'destination' (ID: 51810)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30528444051742554
    2. '<|end|>' → logprob: -1.6802845001220703
    3. ' while' → logprob: -3.8052845001220703
    4. 'while' → logprob: -4.43028450012207
    5. ' ' → logprob: -4.55528450012207
    6. ' 
' → logprob: -4.80528450012207
    7. ',' → logprob: -5.30528450012207
    8. ':' → logprob: -5.68028450012207
    9. 'for' → logprob: -5.68028450012207
    10. ')' → logprob: -6.30528450012207

Token 273: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12699006497859955
    2. '=' → logprob: -2.1269900798797607
    3. ',' → logprob: -9.87699031829834
    4. '=None' → logprob: -12.25199031829834
    5. ' ' → logprob: -12.62699031829834
    6. ' ,' → logprob: -14.50199031829834
    7. 's' → logprob: -15.12699031829834
    8. ':' → logprob: -15.37699031829834
    9. ')' → logprob: -15.62699031829834
    10. '=[]' → logprob: -15.62699031829834

Token 274: ' v' (ID: 323)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6555283069610596
    2. '=' → logprob: -2.2805283069610596
    3. 'None' → logprob: -2.4055283069610596
    4. ' =' → logprob: -2.4055283069610596
    5. ' current' → logprob: -3.0305283069610596
    6. ' source' → logprob: -3.9055283069610596
    7. 'current' → logprob: -4.0305280685424805
    8. 'time' → logprob: -4.2805280685424805
    9. '=None' → logprob: -4.4055280685424805
    10. ' time' → logprob: -4.5305280685424805

Token 275: 'next' (ID: 7311)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43008479475975037
    2. ' =' → logprob: -1.0550848245620728
    3. ',' → logprob: -6.805084705352783
    4. '=None' → logprob: -9.180085182189941
    5. '_' → logprob: -9.680085182189941
    6. '_from' → logprob: -9.930085182189941
    7. 'from' → logprob: -10.805085182189941
    8. ' ' → logprob: -11.305085182189941
    9. ')' → logprob: -12.055085182189941
    10. '=[]' → logprob: -12.680085182189941

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232393741607666
    2. '=' → logprob: -0.8982393741607666
    3. ',' → logprob: -9.398239135742188
    4. '=None' → logprob: -10.648239135742188
    5. ' ' → logprob: -12.023239135742188
    6. 'None' → logprob: -14.398239135742188
    7. ')' → logprob: -14.648239135742188
    8. ' ,' → logprob: -14.648239135742188
    9. ' None' → logprob: -14.648239135742188
    10. '  ' → logprob: -15.898239135742188

Token 277: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1131909117102623
    2. '0' → logprob: -2.9881908893585205
    3. ' None' → logprob: -2.9881908893585205
    4. '(None' → logprob: -5.9881911277771
    5. '[]' → logprob: -6.6131911277771
    6. '[' → logprob: -6.9881911277771
    7. '-' → logprob: -8.488190650939941
    8. '=None' → logprob: -8.488190650939941
    9. 'last' → logprob: -8.738190650939941
    10. ' ' → logprob: -8.738190650939941

Token 278: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03042648173868656
    2. '0' → logprob: -3.905426502227783
    3. ' None' → logprob: -5.405426502227783
    4. '[]' → logprob: -5.905426502227783
    5. '[' → logprob: -7.155426502227783
    6. '(None' → logprob: -7.280426502227783
    7. '-' → logprob: -8.280426025390625
    8. 'last' → logprob: -8.280426025390625
    9. '_None' → logprob: -9.155426025390625
    10. ' ' → logprob: -9.530426025390625

Token 279: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 280: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.34739595651626587
    2. '1' → logprob: -1.722395896911621
    3. '-' → logprob: -2.972395896911621
    4. '0' → logprob: -3.097395896911621
    5. ' None' → logprob: -4.347395896911621
    6. '2' → logprob: -6.222395896911621
    7. ' ' → logprob: -6.347395896911621
    8. 'v' → logprob: -7.347395896911621
    9. ' -' → logprob: -7.972395896911621
    10. '-v' → logprob: -9.097395896911621

Token 281: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06407226622104645
    2. '1' → logprob: -3.189072370529175
    3. '0' → logprob: -4.689072132110596
    4. '-' → logprob: -5.314072132110596
    5. 'min' → logprob: -5.439072132110596
    6. '2' → logprob: -7.314072132110596
    7. ' None' → logprob: -7.564072132110596
    8. 'v' → logprob: -8.439072608947754
    9. 'np' → logprob: -8.439072608947754
    10. '_None' → logprob: -8.439072608947754

Token 282: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: 'all' (ID: 586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: '_orders' (ID: 88420)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.5302382707595825
    2. '_nodes' → logprob: -1.9052382707595825
    3. ' =' → logprob: -2.155238151550293
    4. '_' → logprob: -2.405238151550293
    5. '_cost' → logprob: -2.405238151550293
    6. '_del' → logprob: -2.905238151550293
    7. '_times' → logprob: -3.155238151550293
    8. '_v' → logprob: -3.530238151550293
    9. '_dist' → logprob: -3.780238151550293
    10. '_delivery' → logprob: -4.155238151550293

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6935698986053467
    2. ' =' → logprob: -0.6935698986053467
    3. '=[]' → logprob: -7.818570137023926
    4. ',' → logprob: -11.193570137023926
    5. ':' → logprob: -13.318570137023926
    6. ' ' → logprob: -13.443570137023926
    7. '=[]
' → logprob: -14.818570137023926
    8. '＝' → logprob: -14.818570137023926
    9. '[]' → logprob: -14.818570137023926
    10. '=[' → logprob: -14.943570137023926

Token 286: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00341001246124506
    2. ' []' → logprob: -5.7534098625183105
    3. '[]
' → logprob: -8.628410339355469
    4. '{}' → logprob: -10.253410339355469
    5. '0' → logprob: -11.878410339355469
    6. '[' → logprob: -13.003410339355469
    7. '[]}' → logprob: -13.003410339355469
    8. '[]

' → logprob: -13.253410339355469
    9. 'set' → logprob: -13.503410339355469
    10. 'list' → logprob: -13.753410339355469

Token 287: 'del' (ID: 9145)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15914875268936157
    2. 'for' → logprob: -2.659148693084717
    3. ' while' → logprob: -3.409148693084717
    4. 'current' → logprob: -4.534148693084717
    5. '<|end|>' → logprob: -4.534148693084717
    6. 'orders' → logprob: -5.409148693084717
    7. 'all' → logprob: -5.409148693084717
    8. ')' → logprob: -5.909148693084717
    9. ' for' → logprob: -6.284148693084717
    10. 'def' → logprob: -6.659148693084717

Token 288: 'ivered' (ID: 62076)
  Prédit: 'ivering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivering' → logprob: -0.00036275613820180297
    2. 'ivered' → logprob: -8.125362396240234
    3. 'ivery' → logprob: -9.750362396240234
    4. 'iver' → logprob: -11.750362396240234
    5. '_' → logprob: -15.500362396240234
    6. 'iving' → logprob: -15.875362396240234
    7. ' ' → logprob: -17.250362396240234
    8. '   ' → logprob: -17.375362396240234
    9. 'ver' → logprob: -18.250362396240234
    10. '(' → logprob: -18.375362396240234

Token 289: '_here' (ID: 192915)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47460564970970154
    2. ' =' → logprob: -0.9746056795120239
    3. ',' → logprob: -8.099605560302734
    4. '=[]' → logprob: -8.474605560302734
    5. ' ' → logprob: -12.599605560302734
    6. '={}' → logprob: -12.724605560302734
    7. '=[]
' → logprob: -13.974605560302734
    8. ' ,' → logprob: -14.099605560302734
    9. '＝' → logprob: -14.224605560302734
    10. 's' → logprob: -14.224605560302734

Token 290: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6332675814628601
    2. ' =' → logprob: -0.7582675814628601
    3. '=[]' → logprob: -7.633267402648926
    4. ',' → logprob: -8.883267402648926
    5. ' ' → logprob: -10.758267402648926
    6. '=[' → logprob: -12.758267402648926
    7. '={}' → logprob: -12.883267402648926
    8. '=[]
' → logprob: -13.258267402648926
    9. '[:]' → logprob: -13.258267402648926
    10. '[' → logprob: -13.383267402648926

Token 291: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3405373990535736
    2. '0' → logprob: -1.965537428855896
    3. '{}' → logprob: -2.4655373096466064
    4. '[' → logprob: -2.9655373096466064
    5. 'set' → logprob: -4.5905375480651855
    6. '[]
' → logprob: -7.4655375480651855
    7. '{' → logprob: -8.090537071228027
    8. 'np' → logprob: -8.840537071228027
    9. ' []' → logprob: -8.840537071228027
    10. 'default' → logprob: -8.840537071228027

Token 292: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010270876373397186
    2. '()
' → logprob: -9.250102996826172
    3. '()

' → logprob: -13.500102996826172
    4. '()\' → logprob: -13.500102996826172
    5. '(' → logprob: -13.875102996826172
    6. '()]' → logprob: -14.500102996826172
    7. '();' → logprob: -14.625102996826172
    8. '()
' → logprob: -14.750102996826172
    9. '(),' → logprob: -15.000102996826172
    10. '()}' → logprob: -15.250102996826172

Token 293: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' order' (ID: 2569)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.050014853477478
    2. ' simulate' → logprob: -1.300014853477478
    3. ' update' → logprob: -2.8000149726867676
    4. ' solve' → logprob: -2.8000149726867676
    5. ' next' → logprob: -3.4250149726867676
    6. ' run' → logprob: -3.6750149726867676
    7. ' dfs' → logprob: -3.8000149726867676
    8. ' all' → logprob: -4.300014972686768
    9. ' plan' → logprob: -4.425014972686768
    10. ' deliver' → logprob: -4.550014972686768

Token 295: '_in' (ID: 2267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5165282487869263
    2. '():' → logprob: -1.6415282487869263
    3. '(' → logprob: -2.3915281295776367
    4. '_list' → logprob: -3.5165281295776367
    5. '(s' → logprob: -4.016528129577637
    6. '_' → logprob: -4.516528129577637
    7. '(id' → logprob: -4.641528129577637
    8. '(order' → logprob: -5.016528129577637
    9. '):' → logprob: -5.391528129577637
    10. '(_' → logprob: -5.516528129577637

Token 296: '():
' (ID: 8595)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -1.361759066581726
    2. 'def' → logprob: -1.361759066581726
    3. '_queue' → logprob: -2.4867591857910156
    4. 'dex' → logprob: -2.7367591857910156
    5. 'coming' → logprob: -3.3617591857910156
    6. '():
' → logprob: -3.3617591857910156
    7. '(i' → logprob: -3.4867591857910156
    8. '(x' → logprob: -3.6117591857910156
    9. '_' → logprob: -3.8617591857910156
    10. 's' → logprob: -4.111759185791016

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005168531555682421
    2. '    ' → logprob: -6.880168437957764
    3. '    
' → logprob: -7.130168437957764
    4. ' line' → logprob: -7.130168437957764
    5. ' while' → logprob: -8.255168914794922
    6. ' input' → logprob: -8.380168914794922
    7. ' if' → logprob: -8.505168914794922
    8. ' all' → logprob: -8.630168914794922
    9. ' try' → logprob: -9.130168914794922
    10. '   ' → logprob: -9.130168914794922

Token 298: ' non' (ID: 2893)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.6152100563049316
    2. 'line' → logprob: -1.7402100563049316
    3. '   ' → logprob: -1.8652100563049316
    4. 'non' (adapté à ' non') → logprob: -2.7402100563049316
    5. ' global' → logprob: -4.490210056304932
    6. 'return' → logprob: -4.865210056304932
    7. ' line' → logprob: -4.990210056304932
    8. 'try' → logprob: -4.990210056304932
    9. 'order' → logprob: -5.615210056304932
    10. ' non' → logprob: -5.615210056304932

Token 299: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.010354911908507347
    2. 'def' → logprob: -4.635354995727539
    3. 'e' → logprob: -8.135354995727539
    4. 'de' → logprob: -8.260354995727539
    5. 'space' → logprob: -10.510354995727539
    6. '   ' → logprob: -12.635354995727539
    7. 'd' → logprob: -12.760354995727539
    8. 'locals' → logprob: -12.760354995727539
    9. 'empty' → logprob: -13.385354995727539
    10. '_local' → logprob: -13.635354995727539

Token 300: '_orders' (ID: 88420)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.24153926968574524
    2. ' T' → logprob: -1.7415392398834229
    3. 'del' → logprob: -3.616539239883423
    4. 'destination' → logprob: -5.116539478302002
    5. ' destination' → logprob: -6.116539478302002
    6. 'all' → logprob: -7.116539478302002
    7. 'v' → logprob: -7.366539478302002
    8. 'last' → logprob: -7.366539478302002
    9. ' delivering' → logprob: -7.616539478302002
    10. ' ' → logprob: -7.991539478302002

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4584786295890808
    2. '=' → logprob: -1.5834786891937256
    3. '_' → logprob: -2.8334786891937256
    4. ',' → logprob: -3.7084786891937256
    5. '()' → logprob: -4.0834784507751465
    6. 's' → logprob: -4.2084784507751465
    7. '   ' → logprob: -4.3334784507751465
    8. '_in' → logprob: -4.4584784507751465
    9. '  ' → logprob: -5.5834784507751465
    10. '.setdefault' → logprob: -6.0834784507751465

Token 302: ' globals' (ID: 87840)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.602425217628479
    2. '[]' → logprob: -1.727425217628479
    3. ' []' → logprob: -3.6024250984191895
    4. ' ' → logprob: -3.6024250984191895
    5. '['' → logprob: -3.6024250984191895
    6. '{' → logprob: -4.1024250984191895
    7. 'True' → logprob: -4.2274250984191895
    8. ' True' → logprob: -4.2274250984191895
    9. 'locals' → logprob: -4.3524250984191895
    10. 'False' → logprob: -4.4774250984191895

Token 303: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014898981899023056
    2. '().' → logprob: -4.764898777008057
    3. '()['' → logprob: -5.264898777008057
    4. '()[' → logprob: -7.514898777008057
    5. '()["' → logprob: -8.014899253845215
    6. '()
' → logprob: -10.139899253845215
    7. '().__' → logprob: -10.139899253845215
    8. 'def' → logprob: -10.514899253845215
    9. '_' → logprob: -11.139899253845215
    10. ' ()' → logprob: -11.639899253845215

Token 304: 'get' (ID: 522)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3397422134876251
    2. 'get' → logprob: -2.4647421836853027
    3. '_' → logprob: -2.8397421836853027
    4. 'update' → logprob: -3.4647421836853027
    5. 'def' → logprob: -3.8397421836853027
    6. 'items' → logprob: -3.9647421836853027
    7. '()['' → logprob: -4.464742183685303
    8. '_items' → logprob: -4.839742183685303
    9. ' ' → logprob: -4.964742183685303
    10. '().' → logprob: -5.214742183685303

Token 305: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04181810840964317
    2. '('_' → logprob: -3.916818141937256
    3. '(' → logprob: -4.416818141937256
    4. '("' → logprob: -5.541818141937256
    5. '('__' → logprob: -5.791818141937256
    6. ''' → logprob: -6.916818141937256
    7. '"' → logprob: -8.041817665100098
    8. '("_' → logprob: -9.041817665100098
    9. '("")' → logprob: -9.416817665100098
    10. '(
' → logprob: -9.416817665100098

Token 306: 'all' (ID: 586)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.7297707796096802
    2. 'locals' → logprob: -0.9797707796096802
    3. '['' → logprob: -3.1047706604003906
    4. ')' → logprob: -4.104770660400391
    5. 'del' → logprob: -4.354770660400391
    6. '{'' → logprob: -4.479770660400391
    7. 'order' → logprob: -4.729770660400391
    8. ''' → logprob: -4.854770660400391
    9. '{})' → logprob: -5.104770660400391
    10. ' T' → logprob: -5.729770660400391

Token 307: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -9.491498531133402e-06
    2. '_order' → logprob: -12.125009536743164
    3. 'orders' → logprob: -13.125009536743164
    4. '_' → logprob: -14.250009536743164
    5. ')' → logprob: -15.000009536743164
    6. 'Orders' → logprob: -15.125009536743164
    7. '
' → logprob: -15.750009536743164
    8. '```' → logprob: -16.000009536743164
    9. '_
' → logprob: -16.125009536743164
    10. '_all' → logprob: -16.500009536743164

Token 308: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.026959629729390144
    2. '()' → logprob: -4.401959419250488
    3. ')' → logprob: -5.151959419250488
    4. '')[' → logprob: -6.026959419250488
    5. '')
' → logprob: -6.401959419250488
    6. '',' → logprob: -6.776959419250488
    7. '').' → logprob: -6.776959419250488
    8. '   ' → logprob: -7.526959419250488
    9. ',' → logprob: -8.151959419250488
    10. '  ' → logprob: -8.776959419250488

Token 309: ' [])
' (ID: 64395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8102878332138062
    2. '[])' → logprob: -0.8102878332138062
    3. '[]' → logprob: -3.4352879524230957
    4. 'None' → logprob: -3.6852879524230957
    5. ' [])' → logprob: -3.8102879524230957
    6. '[])
' → logprob: -4.685287952423096
    7. ')
' → logprob: -5.435287952423096
    8. ' None' → logprob: -5.685287952423096
    9. ' )' → logprob: -5.935287952423096
    10. '())' → logprob: -6.310287952423096

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7721390724182129
    2. '()' → logprob: -1.522139072418213
    3. '
' → logprob: -2.147139072418213
    4. '[]' → logprob: -3.272139072418213
    5. 'def' → logprob: -3.397139072418213
    6. '[' → logprob: -3.522139072418213
    7. '<|end|>' → logprob: -3.897139072418213
    8. ':' → logprob: -4.022139072418213
    9. '()
' → logprob: -4.522139072418213
    10. ' =' → logprob: -4.647139072418213

Token 311: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02293083816766739
    2. '    ' → logprob: -5.02293062210083
    3. '[]' → logprob: -5.64793062210083
    4. '<|end|>' → logprob: -5.64793062210083
    5. '()' → logprob: -6.52293062210083
    6. 'def' → logprob: -6.64793062210083
    7. ' ' → logprob: -6.77293062210083
    8. '
' → logprob: -6.89793062210083
    9. '    
' → logprob: -7.02293062210083
    10. '_' → logprob: -7.77293062210083

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35652852058410645
    2. '=' → logprob: -1.2315285205841064
    3. ' +=' → logprob: -5.106528282165527
    4. '+=' → logprob: -7.106528282165527
    5. '_' → logprob: -8.106528282165527
    6. '   ' → logprob: -8.231528282165527
    7. ')' → logprob: -8.981528282165527
    8. ',' → logprob: -9.231528282165527
    9. '  ' → logprob: -9.356528282165527
    10. '(' → logprob: -9.856528282165527

Token 313: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6768537163734436
    2. '0' → logprob: -1.3018536567687988
    3. 'len' → logprob: -1.6768536567687988
    4. 'next' → logprob: -4.426853656768799
    5. ' int' → logprob: -4.926853656768799
    6. ' ' → logprob: -5.051853656768799
    7. 'non' → logprob: -5.801853656768799
    8. ' len' → logprob: -6.426853656768799
    9. '1' → logprob: -7.426853656768799
    10. ' next' → logprob: -7.551853656768799

Token 314: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010958091355860233
    2. 'input' → logprob: -4.635958194732666
    3. '(' → logprob: -6.760958194732666
    4. ' input' → logprob: -11.010957717895508
    5. ' (' → logprob: -11.510957717895508
    6. '()' → logprob: -11.885957717895508
    7. '(_' → logprob: -13.135957717895508
    8. '(
' → logprob: -13.385957717895508
    9. ' ' → logprob: -13.510957717895508
    10. '(order' → logprob: -13.760957717895508

Token 315: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023200631141662598
    2. '())
' → logprob: -4.148200511932373
    3. '()' → logprob: -5.023200511932373
    4. '().' → logprob: -7.773200511932373
    5. '()
' → logprob: -9.523200988769531
    6. '())

' → logprob: -10.523200988769531
    7. '())
' → logprob: -11.148200988769531
    8. ' ())' → logprob: -12.023200988769531
    9. '();)' → logprob: -12.398200988769531
    10. '(' → logprob: -12.398200988769531

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6612197160720825
    2. '<|end|>' → logprob: -1.0362197160720825
    3. '
' → logprob: -2.286219596862793
    4. ')' → logprob: -4.411219596862793
    5. '<|end|>' → logprob: -5.536219596862793
    6. ' ' → logprob: -6.036219596862793
    7. '    
' → logprob: -6.286219596862793
    8. '    ' → logprob: -6.411219596862793
    9. '()' → logprob: -7.161219596862793
    10. 'def' → logprob: -7.286219596862793

Token 317: ' xs' (ID: 26642)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8220920562744141
    2. 'for' → logprob: -1.197092056274414
    3. '
' → logprob: -2.447092056274414
    4. '<|end|>' → logprob: -2.447092056274414
    5. '   ' → logprob: -2.947092056274414
    6. '	for' → logprob: -4.572092056274414
    7. '    
' → logprob: -5.822092056274414
    8. ' ' → logprob: -5.822092056274414
    9. '<|end|>' → logprob: -5.947092056274414
    10. ' 
' → logprob: -6.072092056274414

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17206913232803345
    2. '=' → logprob: -1.9220690727233887
    3. '.extend' → logprob: -4.547069072723389
    4. ',' → logprob: -7.672069072723389
    5. '=[]' → logprob: -8.047069549560547
    6. '.append' → logprob: -8.922069549560547
    7. '=[]
' → logprob: -9.547069549560547
    8. '_' → logprob: -9.547069549560547
    9. '.' → logprob: -10.422069549560547
    10. ')' → logprob: -11.422069549560547

Token 319: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03406805917620659
    2. '[]' → logprob: -3.5340681076049805
    3. '[]
' → logprob: -6.4090681076049805
    4. '[' → logprob: -6.7840681076049805
    5. ' list' → logprob: -6.9090681076049805
    6. '[list' → logprob: -7.7840681076049805
    7. ' []' → logprob: -10.03406810760498
    8. '[]

' → logprob: -11.03406810760498
    9. 'non' → logprob: -11.90906810760498
    10. 'map' → logprob: -12.15906810760498

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.363437682390213
    2. '<|end|>' → logprob: -1.8634376525878906
    3. ' for' → logprob: -2.4884376525878906
    4. 'for' → logprob: -3.3634376525878906
    5. '	for' → logprob: -4.238437652587891
    6. '
' → logprob: -4.738437652587891
    7. '<|end|>' → logprob: -6.238437652587891
    8. ' ' → logprob: -6.613437652587891
    9. '    
' → logprob: -6.738437652587891
    10. '    ' → logprob: -7.238437652587891

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4663785398006439
    2. 'for' (adapté à ' for') → logprob: -1.0913785696029663
    3. '   ' → logprob: -3.3413784503936768
    4. '	for' → logprob: -6.591378688812256
    5. ' while' → logprob: -10.591378211975098
    6. 'while' → logprob: -10.841378211975098
    7. '  ' → logprob: -11.091378211975098
    8. 'x' → logprob: -11.216378211975098
    9. ' ' → logprob: -11.466378211975098
    10. '    ' → logprob: -11.466378211975098

Token 322: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009574636816978455
    2. ' _' → logprob: -4.8845744132995605
    3. '_i' → logprob: -6.3845744132995605
    4. 'i' → logprob: -9.259574890136719
    5. '_x' → logprob: -10.009574890136719
    6. '__' → logprob: -10.384574890136719
    7. '_in' → logprob: -11.259574890136719
    8. '_order' → logprob: -11.259574890136719
    9. ' i' → logprob: -11.384574890136719
    10. '_=' → logprob: -11.509574890136719

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00023214559769257903
    2. 'in' → logprob: -9.000231742858887
    3. ' ' → logprob: -10.000231742858887
    4. 'i' → logprob: -10.750231742858887
    5. 'x' → logprob: -11.125231742858887
    6. 'range' → logprob: -11.875231742858887
    7. 's' → logprob: -12.500231742858887
    8. 'order' → logprob: -12.625231742858887
    9. '  ' → logprob: -13.000231742858887
    10. '_' → logprob: -13.750231742858887

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00893433764576912
    2. ' range' → logprob: -4.758934497833252
    3. 'input' → logprob: -8.633934020996094
    4. 'count' → logprob: -9.383934020996094
    5. '_' → logprob: -10.633934020996094
    6. 'all' → logprob: -11.383934020996094
    7. 'order' → logprob: -12.133934020996094
    8. '
' → logprob: -12.508934020996094
    9. 'non' → logprob: -12.508934020996094
    10. '[' → logprob: -13.383934020996094

Token 325: '(count' (ID: 25892)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006617907900363207
    2. '(count' → logprob: -5.131618022918701
    3. ' count' → logprob: -7.381618022918701
    4. '   ' → logprob: -10.381617546081543
    5. '	count' → logprob: -11.006617546081543
    6. ' ' → logprob: -12.506617546081543
    7. 'int' → logprob: -12.506617546081543
    8. '<count' → logprob: -12.506617546081543
    9. '[count' → logprob: -12.756617546081543
    10. '=count' → logprob: -13.631617546081543

Token 326: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5354734659194946
    2. '):' → logprob: -0.9104734659194946
    3. '   ' → logprob: -4.785473346710205
    4. ')' → logprob: -6.535473346710205
    5. '       ' → logprob: -6.785473346710205
    6. ',' → logprob: -6.910473346710205
    7. ':' → logprob: -9.285473823547363
    8. '):
' → logprob: -9.285473823547363
    9. ':
' → logprob: -10.535473823547363
    10. '	' → logprob: -11.035473823547363

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005024425219744444
    2. '   ' → logprob: -6.130024433135986
    3. '<|end|>' → logprob: -6.130024433135986
    4. '    ' → logprob: -8.630023956298828
    5. ',' → logprob: -8.880023956298828
    6. ' ' → logprob: -9.755023956298828
    7. '<|end|>' → logprob: -10.255023956298828
    8. '        
' → logprob: -10.255023956298828
    9. '	   ' → logprob: -10.380023956298828
    10. ' s' → logprob: -10.630023956298828

Token 328: ' xs' (ID: 26642)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10039547085762024
    2. '   ' → logprob: -2.850395441055298
    3. ' x' → logprob: -3.600395441055298
    4. 'xs' (adapté à ' xs') → logprob: -4.975395679473877
    5. 'order' → logprob: -7.475395679473877
    6. '	x' → logprob: -7.850395679473877
    7. '_x' → logprob: -8.225395202636719
    8. ' ' → logprob: -8.725395202636719
    9. '       ' → logprob: -8.850395202636719
    10. 's' → logprob: -8.850395202636719

Token 329: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.24952498078346252
    2. '=' → logprob: -2.2495250701904297
    3. ' =' → logprob: -2.7495250701904297
    4. '.' → logprob: -2.9995250701904297
    5. '.extend' → logprob: -7.49952507019043
    6. ' .' → logprob: -7.74952507019043
    7. '.=' → logprob: -8.49952507019043
    8. ' ' → logprob: -9.24952507019043
    9. ',' → logprob: -9.74952507019043
    10. '   ' → logprob: -9.87452507019043

Token 330: '(int' (ID: 2742)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.08839357644319534
    2. '(list' → logprob: -2.9633936882019043
    3. '(int' → logprob: -3.4633936882019043
    4. '(' → logprob: -6.713393688201904
    5. 'tuple' → logprob: -8.463393211364746
    6. '(*' → logprob: -9.838393211364746
    7. 'list' → logprob: -10.713393211364746
    8. '(map' → logprob: -10.963393211364746
    9. '(input' → logprob: -10.963393211364746
    10. '([' → logprob: -11.338393211364746

Token 331: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008496518130414188
    2. 'input' → logprob: -7.500849723815918
    3. '())' → logprob: -9.000849723815918
    4. '(' → logprob: -9.250849723815918
    5. '()' → logprob: -10.125849723815918
    6. '()))' → logprob: -12.500849723815918
    7. ' (' → logprob: -12.500849723815918
    8. '(),' → logprob: -12.500849723815918
    9. ',input' → logprob: -12.500849723815918
    10. ')' → logprob: -12.625849723815918

Token 332: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009306328371167183
    2. '()))
' → logprob: -5.13430643081665
    3. '())' → logprob: -6.25930643081665
    4. '))' → logprob: -7.25930643081665
    5. '()' → logprob: -7.63430643081665
    6. '().' → logprob: -9.634305953979492
    7. '   ' → logprob: -10.134305953979492
    8. '()))

' → logprob: -10.259305953979492
    9. '()));' → logprob: -10.634305953979492
    10. '(' → logprob: -10.634305953979492

Token 333: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0023323555942624807
    2. 'rstrip' → logprob: -6.2523322105407715
    3. 'split' → logprob: -8.00233268737793
    4. '))' → logprob: -10.12733268737793
    5. 'replace' → logprob: -11.25233268737793
    6. ' strip' → logprob: -12.25233268737793
    7. '()))' → logprob: -12.37733268737793
    8. '))
' → logprob: -13.25233268737793
    9. 'pop' → logprob: -13.75233268737793
    10. '()))
' → logprob: -14.12733268737793

Token 334: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.000988626852631569
    2. '()' → logprob: -7.000988483428955
    3. '()))' → logprob: -9.750988960266113
    4. '[' → logprob: -11.875988960266113
    5. '()))
' → logprob: -12.625988960266113
    6. '())[' → logprob: -13.375988960266113
    7. '())' → logprob: -13.500988960266113
    8. '(' → logprob: -13.500988960266113
    9. '().' → logprob: -14.000988960266113
    10. '()
' → logprob: -14.500988960266113

Token 335: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008651299867779016
    2. '-' → logprob: -8.25086498260498
    3. ' ' → logprob: -8.50086498260498
    4. '1' → logprob: -9.12586498260498
    5. '()[' → logprob: -9.37586498260498
    6. '][' → logprob: -9.75086498260498
    7. '()' → logprob: -10.12586498260498
    8. ']))' → logprob: -10.25086498260498
    9. '])[' → logprob: -11.37586498260498
    10. '[' → logprob: -11.62586498260498

Token 336: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.020093442872166634
    2. '[' → logprob: -4.2700934410095215
    3. '))' → logprob: -5.8950934410095215
    4. '][' → logprob: -7.1450934410095215
    5. ']' → logprob: -7.2700934410095215
    6. '])' → logprob: -7.6450934410095215
    7. ')' → logprob: -7.7700934410095215
    8. ']))
' → logprob: -8.02009391784668
    9. ')[' → logprob: -9.39509391784668
    10. ')))' → logprob: -9.77009391784668

Token 337: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' non' (ID: 2893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.006333529949188232
    2. '_orders' → logprob: -5.131333351135254
    3. 'ocal' → logprob: -8.506333351135254
    4. '_local' → logprob: -9.381333351135254
    5. '_order' → logprob: -10.006333351135254
    6. 'orders' → logprob: -10.506333351135254
    7. ' local' → logprob: -10.506333351135254
    8. '_' → logprob: -12.756333351135254
    9. 'l' → logprob: -12.756333351135254
    10. 'def' → logprob: -13.006333351135254

Token 340: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -0.009116863831877708
    2. '_order' → logprob: -6.1341166496276855
    3. 'orders' → logprob: -6.2591166496276855
    4. 'all' → logprob: -6.6341166496276855
    5. ' orders' → logprob: -6.7591166496276855
    6. ' all' → logprob: -7.7591166496276855
    7. 'xs' → logprob: -7.7591166496276855
    8. '_all' → logprob: -7.8841166496276855
    9. ' xs' → logprob: -8.259117126464844
    10. '_' → logprob: -8.634117126464844

Token 341: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.01916777342557907
    2. '=' → logprob: -4.769167900085449
    3. ' =' → logprob: -4.769167900085449
    4. '.' → logprob: -6.394167900085449
    5. ' +=' → logprob: -8.64416790008545
    6. '.append' → logprob: -9.64416790008545
    7. '+=' → logprob: -10.14416790008545
    8. '.clear' → logprob: -10.76916790008545
    9. '.=' → logprob: -11.14416790008545
    10. ' .' → logprob: -11.51916790008545

Token 342: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.007852195762097836
    2. '(tuple' → logprob: -5.382852077484131
    3. '((' → logprob: -6.007852077484131
    4. '(' → logprob: -8.007852554321289
    5. '(*' → logprob: -9.132852554321289
    6. '(x' → logprob: -9.257852554321289
    7. 'xs' → logprob: -9.257852554321289
    8. '(list' → logprob: -9.382852554321289
    9. '([' → logprob: -11.632852554321289
    10. 'tuple' → logprob: -11.632852554321289

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020413640595506877
    2. ')
' → logprob: -8.875204086303711
    3. '   ' → logprob: -10.375204086303711
    4. ' )' → logprob: -10.750204086303711
    5. ')return' → logprob: -12.375204086303711
    6. '<|end|>' → logprob: -13.125204086303711
    7. '
' → logprob: -13.250204086303711
    8. '())' → logprob: -13.625204086303711
    9. '))' → logprob: -15.000204086303711
    10. '[' → logprob: -15.250204086303711

Token 344: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 346: ' PRO' (ID: 8369)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45955994725227356
    2. 'len' → logprob: -1.3345599174499512
    3. 'PRO' → logprob: -3.209559917449951
    4. 'False' → logprob: -3.959559917449951
    5. 'not' → logprob: -4.334559917449951
    6. 'xs' → logprob: -4.834559917449951
    7. 'non' → logprob: -5.334559917449951
    8. ' PRO' → logprob: -5.459559917449951
    9. 'del' → logprob: -5.584559917449951
    10. ' count' → logprob: -5.959559917449951

Token 347: 'BLEM' (ID: 134327)
  Prédit: 'BLEM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLEM' → logprob: -0.0030176378786563873
    2. 'B' → logprob: -5.878017425537109
    3. 'blem' → logprob: -9.37801742553711
    4. 'BL' → logprob: -9.87801742553711
    5. '_B' → logprob: -10.37801742553711
    6. 'BLE' → logprob: -10.50301742553711
    7. 'LEM' → logprob: -11.62801742553711
    8. '_' → logprob: -12.75301742553711
    9. 'OB' → logprob: -13.75301742553711
    10. '_problem' → logprob: -13.75301742553711

Token 348: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -3.5358694731257856e-05
    2. '_' → logprob: -10.500035285949707
    3. '_b' → logprob: -13.125035285949707
    4. 'B' → logprob: -13.250035285949707
    5. '_A' → logprob: -13.250035285949707
    6. ')' → logprob: -13.875035285949707
    7. ' _' → logprob: -14.875035285949707
    8. '_)' → logprob: -15.875035285949707
    9. ')_' → logprob: -16.500036239624023
    10. '```' → logprob: -16.500036239624023

Token 349: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004216589964926243
    2. ':
' → logprob: -6.12921667098999
    3. '   ' → logprob: -7.12921667098999
    4. ' and' → logprob: -8.004216194152832
    5. '       ' → logprob: -8.254216194152832
    6. ' :' → logprob: -8.504216194152832
    7. '==' → logprob: -8.754216194152832
    8. ' ==' → logprob: -9.379216194152832
    9. '):' → logprob: -9.504216194152832
    10. ':return' → logprob: -9.879216194152832

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030327325221151114
    2. '   ' → logprob: -6.128032684326172
    3. '    ' → logprob: -8.378032684326172
    4. ' for' → logprob: -8.878032684326172
    5. ' pass' → logprob: -8.878032684326172
    6. ' return' → logprob: -9.003032684326172
    7. '     ' → logprob: -10.503032684326172
    8. '        ' → logprob: -10.628032684326172
    9. '      ' → logprob: -10.753032684326172
    10. ' input' → logprob: -11.128032684326172

Token 351: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6560080647468567
    2. '   ' → logprob: -1.531008005142212
    3. 'pass' → logprob: -2.406008005142212
    4. 'return' → logprob: -2.781008005142212
    5. '_' → logprob: -2.906008005142212
    6. 'for' → logprob: -3.906008005142212
    7. ' input' → logprob: -4.406008243560791
    8. ' pass' → logprob: -4.781008243560791
    9. 'all' → logprob: -5.906008243560791
    10. 'del' → logprob: -6.031008243560791

Token 352: 'input' (ID: 2586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6406642198562622
    2. ' for' → logprob: -1.7656642198562622
    3. ' pass' → logprob: -2.1406641006469727
    4. ']' → logprob: -2.2656641006469727
    5. 'pass' → logprob: -2.3906641006469727
    6. 'all' → logprob: -2.8906641006469727
    7. '   ' → logprob: -3.0156641006469727
    8. 'del' → logprob: -3.1406641006469727
    9. ' all' → logprob: -3.3906641006469727
    10. 'return' → logprob: -3.6406641006469727

Token 353: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008789707906544209
    2. '()' → logprob: -4.758789539337158
    3. ']()' → logprob: -8.883790016174316
    4. '()]
' → logprob: -11.258790016174316
    5. ' ()' → logprob: -11.758790016174316
    6. '()
' → logprob: -11.883790016174316
    7. '().' → logprob: -12.758790016174316
    8. ']' → logprob: -13.258790016174316
    9. '(' → logprob: -13.508790016174316
    10. '()].' → logprob: -14.383790016174316

Token 354: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.16894814372062683
    2. ']' → logprob: -1.9189481735229492
    3. '()' → logprob: -5.168948173522949
    4. ')]' → logprob: -7.043948173522949
    5. ']()' → logprob: -7.293948173522949
    6. ' ]' → logprob: -7.543948173522949
    7. '   ' → logprob: -8.16894817352295
    8. '()]
' → logprob: -9.04394817352295
    9. ']
' → logprob: -9.16894817352295
    10. '       ' → logprob: -9.29394817352295

Token 355: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03307659924030304
    2. ' range' → logprob: -3.658076524734497
    3. 'range' → logprob: -5.158076763153076
    4. ' _' → logprob: -7.158076763153076
    5. '__' → logprob: -8.783076286315918
    6. ' ' → logprob: -11.158076286315918
    7. '_]' → logprob: -11.783076286315918
    8. ' in' → logprob: -11.908076286315918
    9. '""' → logprob: -11.908076286315918
    10. '_=' → logprob: -12.033076286315918

Token 356: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7057105302810669
    2. 'range' → logprob: -0.7057105302810669
    3. ' range' → logprob: -4.580710411071777
    4. 'in' → logprob: -6.705710411071777
    5. ']' → logprob: -7.830710411071777
    6. ' in' → logprob: -8.330710411071777
    7. '_]' → logprob: -8.580710411071777
    8. ' _' → logprob: -10.205710411071777
    9. ' ' → logprob: -10.580710411071777
    10. '_range' → logprob: -10.705710411071777

Token 357: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1654689460992813
    2. ' range' → logprob: -1.9154689311981201
    3. '_' → logprob: -5.290469169616699
    4. ']' → logprob: -10.4154691696167
    5. ' ' → logprob: -10.5404691696167
    6. 'xs' → logprob: -10.5404691696167
    7. ' xs' → logprob: -11.2904691696167
    8. '_range' → logprob: -11.5404691696167
    9. '
' → logprob: -11.7904691696167
    10. '_]' → logprob: -11.9154691696167

Token 358: '(int' (ID: 2742)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.10372725129127502
    2. '(' → logprob: -2.978727340698242
    3. 'count' → logprob: -3.478727340698242
    4. '(int' → logprob: -4.728727340698242
    5. '(T' → logprob: -5.353727340698242
    6. '(len' → logprob: -7.728727340698242
    7. 'int' → logprob: -7.853727340698242
    8. '3' → logprob: -8.103727340698242
    9. '(del' → logprob: -8.103727340698242
    10. '(PRO' → logprob: -8.478727340698242

Token 359: '(input' (ID: 10054)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.4464350640773773
    2. '(input' → logprob: -1.0714350938796997
    3. '(' → logprob: -4.44643497467041
    4. '(int' → logprob: -5.94643497467041
    5. '(T' → logprob: -7.44643497467041
    6. '(xs' → logprob: -7.57143497467041
    7. '(PRO' → logprob: -8.07143497467041
    8. '(del' → logprob: -8.32143497467041
    9. '()]' → logprob: -8.44643497467041
    10. '(order' → logprob: -8.57143497467041

Token 360: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28553617000579834
    2. '()))' → logprob: -1.4105361700057983
    3. '()' → logprob: -5.535536289215088
    4. ' ())' → logprob: -9.41053581237793
    5. '(' → logprob: -9.66053581237793
    6. '())
' → logprob: -9.78553581237793
    7. ')])' → logprob: -10.16053581237793
    8. '().' → logprob: -10.16053581237793
    9. ')]' → logprob: -10.53553581237793
    10. '))' → logprob: -10.78553581237793

Token 361: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.6374427676200867
    2. ']' → logprob: -1.0124428272247314
    3. ')' → logprob: -2.3874428272247314
    4. '<|end|>' → logprob: -5.262442588806152
    5. '   ' → logprob: -5.762442588806152
    6. ' ]' → logprob: -5.887442588806152
    7. '       ' → logprob: -7.012442588806152
    8. ')])' → logprob: -7.012442588806152
    9. ']
' → logprob: -7.137442588806152
    10. ' )' → logprob: -7.637442588806152

Token 362: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' globals' (ID: 87840)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: '()['' (ID: 96829)
  Prédit: '()[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()['' → logprob: -0.06687625497579575
    2. '()' → logprob: -3.191876173019409
    3. '().' → logprob: -3.816876173019409
    4. '()["' → logprob: -6.691876411437988
    5. '()[' → logprob: -8.191876411437988
    6. '().__' → logprob: -10.441876411437988
    7. '['' → logprob: -11.066876411437988
    8. '().'' → logprob: -12.191876411437988
    9. '.update' → logprob: -12.691876411437988
    10. '()='' → logprob: -12.816876411437988

Token 365: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -6.170270353322849e-05
    2. ' all' → logprob: -10.000061988830566
    3. ' ' → logprob: -12.125061988830566
    4. 'del' → logprob: -12.375061988830566
    5. 'order' → logprob: -13.375061988830566
    6. 'T' → logprob: -14.000061988830566
    7. ''all' → logprob: -14.125061988830566
    8. '
' → logprob: -14.625061988830566
    9. '	all' → logprob: -15.000061988830566
    10. 'last' → logprob: -15.000061988830566

Token 366: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -15.125001907348633
    3. '_order' → logprob: -15.375001907348633
    4. 'orders' → logprob: -15.625001907348633
    5. '_answers' → logprob: -15.750001907348633
    6. '_requests' → logprob: -15.875001907348633
    7. '_scores' → logprob: -16.375001907348633
    8. '_options' → logprob: -16.625001907348633
    9. '_rewards' → logprob: -17.000001907348633
    10. '```' → logprob: -17.500001907348633

Token 367: '']' (ID: 1089)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.35232222080230713
    2. '.append' → logprob: -1.9773222208023071
    3. ']' → logprob: -2.2273221015930176
    4. '=' → logprob: -3.9773221015930176
    5. ''].' → logprob: -4.477322101593018
    6. ']=' → logprob: -4.602322101593018
    7. '.extend' → logprob: -5.102322101593018
    8. ' =' → logprob: -6.602322101593018
    9. '']' → logprob: -6.977322101593018
    10. ']+=' → logprob: -7.102322101593018

Token 368: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02185779996216297
    2. '<|end|>' → logprob: -4.646857738494873
    3. '.extend' → logprob: -5.021857738494873
    4. '.setdefault' → logprob: -5.771857738494873
    5. '=' → logprob: -7.396857738494873
    6. '[-' → logprob: -7.646857738494873
    7. ' =' → logprob: -8.021858215332031
    8. '.update' → logprob: -8.396858215332031
    9. '.' → logprob: -8.771858215332031
    10. '.clear' → logprob: -9.146858215332031

Token 369: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.00029506313148885965
    2. ' non' → logprob: -8.25029468536377
    3. 'all' → logprob: -10.37529468536377
    4. '   ' → logprob: -14.37529468536377
    5. 'nonnull' → logprob: -15.12529468536377
    6. '(non' → logprob: -15.25029468536377
    7. '_non' → logprob: -15.62529468536377
    8. ' all' → logprob: -15.75029468536377
    9. ' ' → logprob: -15.87529468536377
    10. '```' → logprob: -16.125295639038086

Token 370: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.01434284821152687
    2. '_orders' → logprob: -4.264342784881592
    3. 'orders' → logprob: -9.51434326171875
    4. 'l' → logprob: -10.38934326171875
    5. 'al' → logprob: -10.88934326171875
    6. 'ocal' → logprob: -11.01434326171875
    7. 'loc' → logprob: -11.01434326171875
    8. '_local' → logprob: -11.76434326171875
    9. 'localized' → logprob: -13.01434326171875
    10. 'locals' → logprob: -13.26434326171875

Token 371: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -7.660315895918757e-05
    2. 'orders' → logprob: -9.500076293945312
    3. '_order' → logprob: -14.000076293945312
    4. 'Orders' → logprob: -14.500076293945312
    5. 's' → logprob: -15.625076293945312
    6. '_' → logprob: -16.500076293945312
    7. ' orders' → logprob: -17.500076293945312
    8. '_scores' → logprob: -17.875076293945312
    9. '.orders' → logprob: -18.125076293945312
    10. '```' → logprob: -18.125076293945312

Token 372: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.100597620010376
    2. 'def' → logprob: -1.350597620010376
    3. '
' → logprob: -2.225597620010376
    4. ':' → logprob: -2.225597620010376
    5. '<|end|>' → logprob: -2.475597620010376
    6. ' ' → logprob: -3.600597620010376
    7. '(' → logprob: -3.975597620010376
    8. '(
' → logprob: -4.475597381591797
    9. '_' → logprob: -4.850597381591797
    10. '[' → logprob: -4.975597381591797

Token 374: ' step' (ID: 5983)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.8362237811088562
    2. ' order' → logprob: -1.461223840713501
    3. 'main' → logprob: -2.086223840713501
    4. ' main' → logprob: -2.336223840713501
    5. 'update' → logprob: -3.586223840713501
    6. ' update' → logprob: -4.211223602294922
    7. 'simulate' → logprob: -4.336223602294922
    8. ' simulate' → logprob: -4.961223602294922
    9. 'run' → logprob: -5.086223602294922
    10. ' run' → logprob: -5.211223602294922

Token 375: '_time' (ID: 6425)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -6.897412822581828e-05
    2. ' ():' → logprob: -10.375068664550781
    3. '():
' → logprob: -10.500068664550781
    4. '()' → logprob: -12.250068664550781
    5. '_' → logprob: -12.875068664550781
    6. '(' → logprob: -13.125068664550781
    7. '():
' → logprob: -16.00006866455078
    8. '(":' → logprob: -16.37506866455078
    9. '(time' → logprob: -16.87506866455078
    10. '(_' → logprob: -17.00006866455078

Token 376: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.813969957875088e-05
    2. ' ():' → logprob: -10.000067710876465
    3. '():
' → logprob: -11.500067710876465
    4. '()' → logprob: -11.625067710876465
    5. '(' → logprob: -12.625067710876465
    6. '(:' → logprob: -15.875067710876465
    7. ':' → logprob: -16.62506866455078
    8. '(":' → logprob: -16.87506866455078
    9. '():
' → logprob: -17.12506866455078
    10. '_' → logprob: -17.12506866455078

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02040278911590576
    2. ' global' → logprob: -4.145402908325195
    3. 'global' → logprob: -5.770402908325195
    4. ' if' → logprob: -8.145402908325195
    5. '<|end|>' → logprob: -8.270402908325195
    6. '	global' → logprob: -8.895402908325195
    7. '    ' → logprob: -9.020402908325195
    8. 'def' → logprob: -9.270402908325195
    9. ' pass' → logprob: -9.645402908325195
    10. ' T' → logprob: -9.645402908325195

Token 378: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.016742436215281487
    2. '   ' → logprob: -4.26674222946167
    3. ' global' → logprob: -7.01674222946167
    4. 'def' → logprob: -7.39174222946167
    5. 'pass' → logprob: -7.39174222946167
    6. 'non' → logprob: -8.391742706298828
    7. 'if' → logprob: -8.766742706298828
    8. '	global' → logprob: -10.516742706298828
    9. 'return' → logprob: -11.891742706298828
    10. 'globals' → logprob: -12.641742706298828

Token 379: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.348646342754364
    2. ' T' → logprob: -1.2236464023590088
    3. ' ' → logprob: -9.22364616394043
    4. 'del' → logprob: -9.97364616394043
    5. '	T' → logprob: -11.09864616394043
    6. ' delivering' → logprob: -11.97364616394043
    7. 'all' → logprob: -12.09864616394043
    8. 'last' → logprob: -12.47364616394043
    9. 'delivery' → logprob: -12.72364616394043
    10. '   ' → logprob: -12.84864616394043

Token 380: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03315858542919159
    2. '
' → logprob: -3.908158540725708
    3. '<|end|>' → logprob: -4.658158779144287
    4. '<|end|>' → logprob: -7.283158779144287
    5. ',' → logprob: -7.408158779144287
    6. '    
' → logprob: -7.533158779144287
    7. 'def' → logprob: -8.408158302307129
    8. ')' → logprob: -8.783158302307129
    9. ' =' → logprob: -8.908158302307129
    10. ' +=' → logprob: -9.533158302307129

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006048485636711121
    2. 'T' → logprob: -5.506048679351807
    3. ' T' → logprob: -6.506048679351807
    4. '<|end|>' → logprob: -8.631048202514648
    5. '	T' → logprob: -9.881048202514648
    6. '    ' → logprob: -10.006048202514648
    7. '    
' → logprob: -10.631048202514648
    8. ',' → logprob: -10.881048202514648
    9. ' ' → logprob: -10.881048202514648
    10. ')' → logprob: -11.131048202514648

Token 382: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.004578819032758474
    2. 'if' → logprob: -5.504578590393066
    3. '   ' → logprob: -8.004578590393066
    4. ' T' → logprob: -9.629578590393066
    5. 'def' → logprob: -9.754578590393066
    6. 'while' → logprob: -11.004578590393066
    7. 'global' → logprob: -11.754578590393066
    8. ' if' → logprob: -12.254578590393066
    9. '```' → logprob: -13.004578590393066
    10. 'pass' → logprob: -13.254578590393066

Token 383: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12693093717098236
    2. ' +=' → logprob: -2.1269309520721436
    3. '=' → logprob: -12.876931190490723
    4. '+' → logprob: -15.626931190490723
    5. ']+=' → logprob: -16.126930236816406
    6. ' =' → logprob: -18.126930236816406
    7. '+=(' → logprob: -18.251930236816406
    8. ' ' → logprob: -18.376930236816406
    9. '+='' → logprob: -19.876930236816406
    10. ')' → logprob: -20.001930236816406

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.377185821533203
    4. '  ' → logprob: -16.877185821533203
    5. 'int' → logprob: -17.127185821533203
    6. '10' → logprob: -18.002185821533203
    7. '0' → logprob: -18.002185821533203
    8. ' ' → logprob: -18.252185821533203
    9. '100' → logprob: -18.939685821533203
    10. '```' → logprob: -19.002185821533203

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'int' → logprob: -17.6250057220459
    4. '   ' → logprob: -18.0625057220459
    5. '１' → logprob: -18.3750057220459
    6. '-' → logprob: -18.7500057220459
    7. 'return' → logprob: -18.7500057220459
    8. '0' → logprob: -18.8750057220459
    9. '```' → logprob: -18.9375057220459
    10. '2' → logprob: -19.3125057220459

Token 386: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1538751870393753
    2. 'if' (adapté à ' if') → logprob: -2.2788751125335693
    3. '   ' → logprob: -4.778875350952148
    4. 'pass' → logprob: -4.903875350952148
    5. '#' → logprob: -5.028875350952148
    6. '<|end|>' → logprob: -5.153875350952148
    7. '```' → logprob: -5.528875350952148
    8. 'def' → logprob: -5.903875350952148
    9. 'del' → logprob: -7.028875350952148
    10. ' return' → logprob: -7.028875350952148

Token 389: ' T' (ID: 353)
  Prédit: ' delivering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delivering' → logprob: -0.26766398549079895
    2. ' returning' → logprob: -1.6426639556884766
    3. 'del' → logprob: -4.017663955688477
    4. ' destination' → logprob: -4.892663955688477
    5. ' T' → logprob: -5.517663955688477
    6. 'destination' → logprob: -5.892663955688477
    7. 'return' → logprob: -6.142663955688477
    8. ' PRO' → logprob: -6.517663955688477
    9. 'T' → logprob: -6.767663955688477
    10. 'PRO' → logprob: -6.892663955688477

Token 390: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.41381993889808655
    2. ' >=' → logprob: -2.1638200283050537
    3. ' <=' → logprob: -2.2888200283050537
    4. ' ==' → logprob: -2.6638200283050537
    5. '>' → logprob: -3.4138200283050537
    6. '==' → logprob: -5.038819789886475
    7. ' <' → logprob: -5.288819789886475
    8. '>=' → logprob: -5.538819789886475
    9. '<=' → logprob: -5.788819789886475
    10. ' in' → logprob: -7.538819789886475

Token 391: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.003927845042198896
    2. ' T' → logprob: -5.628927707672119
    3. '=' → logprob: -8.503928184509277
    4. ' ' → logprob: -10.753928184509277
    5. '10' → logprob: -11.003928184509277
    6. '=T' → logprob: -11.003928184509277
    7. '0' → logprob: -11.128928184509277
    8. 'last' → logprob: -11.628928184509277
    9. 'len' → logprob: -11.753928184509277
    10. 'int' → logprob: -12.503928184509277

Token 392: '_MAX' (ID: 15267)
  Prédit: '_MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.00038479414070025086
    2. 'MAX' → logprob: -7.87538480758667
    3. 'max' → logprob: -13.875384330749512
    4. '_NEXT' → logprob: -14.000384330749512
    5. '_' → logprob: -14.375384330749512
    6. '_MIN' → logprob: -15.125384330749512
    7. '_max' → logprob: -15.125384330749512
    8. ')' → logprob: -15.500384330749512
    9. ' _' → logprob: -15.750384330749512
    10. '+' → logprob: -16.000385284423828

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16861775517463684
    2. ' and' → logprob: -2.7936177253723145
    3. ':
' → logprob: -2.9186177253723145
    4. ':return' → logprob: -3.4186177253723145
    5. '   ' → logprob: -6.0436177253723145
    6. ' or' → logprob: -6.6686177253723145
    7. 'and' → logprob: -6.6686177253723145
    8. '<|end|>' → logprob: -7.0436177253723145
    9. '       ' → logprob: -7.1686177253723145
    10. ' :' → logprob: -8.418618202209473

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14738304913043976
    2. '<|end|>' → logprob: -2.147382974624634
    3. ' return' → logprob: -4.897383213043213
    4. '   ' → logprob: -5.272383213043213
    5. '	' → logprob: -6.022383213043213
    6. 'return' → logprob: -6.522383213043213
    7. '	return' → logprob: -7.022383213043213
    8. '
' → logprob: -8.022382736206055
    9. '        
' → logprob: -8.022382736206055
    10. ',' → logprob: -8.022382736206055

Token 395: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.15797461569309235
    2. 'return' → logprob: -2.6579747200012207
    3. ' order' → logprob: -3.2829747200012207
    4. '   ' → logprob: -3.5329747200012207
    5. 'pass' → logprob: -5.407974720001221
    6. ' return' → logprob: -5.782974720001221
    7. 'step' → logprob: -7.657974720001221
    8. ' pass' → logprob: -7.782974720001221
    9. 'input' → logprob: -8.157974243164062
    10. 'if' → logprob: -8.282974243164062

Token 396: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.25000286102295
    3. 'in' → logprob: -13.75000286102295
    4. '_input' → logprob: -17.500003814697266
    5. ' in' → logprob: -17.625003814697266
    6. '_int' → logprob: -18.125003814697266
    7. '_i' → logprob: -18.250003814697266
    8. 's' → logprob: -18.250003814697266
    9. 'In' → logprob: -19.250003814697266
    10. '_out' → logprob: -19.750003814697266

Token 397: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008083211723715067
    2. '()
' → logprob: -7.125808238983154
    3. '()

' → logprob: -13.500808715820312
    4. '()\' → logprob: -14.125808715820312
    5. '();' → logprob: -14.875808715820312
    6. '(' → logprob: -15.000808715820312
    7. '<|end|>' → logprob: -15.250808715820312
    8. ' ()' → logprob: -15.250808715820312
    9. '())' → logprob: -16.000808715820312
    10. ')' → logprob: -16.125808715820312

Token 398: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' PF' (ID: 52605)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3025280237197876
    2. 'step' → logprob: -2.427527904510498
    3. ' step' → logprob: -2.427527904510498
    4. ' def' → logprob: -2.927527904510498
    5. 'main' → logprob: -5.427527904510498
    6. 'print' → logprob: -5.552527904510498
    7. '(step' → logprob: -5.677527904510498
    8. 'None' → logprob: -5.802527904510498
    9. ' None' → logprob: -6.052527904510498
    10. '<|end|>' → logprob: -6.177527904510498

Token 400: '(x' (ID: 4061)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11656270176172256
    2. '():' → logprob: -3.116562604904175
    3. '_' → logprob: -3.741562604904175
    4. '(' → logprob: -4.866562843322754
    5. 'L' → logprob: -4.991562843322754
    6. 'def' → logprob: -5.866562843322754
    7. '_step' → logprob: -5.991562843322754
    8. '=' → logprob: -6.241562843322754
    9. ' =' → logprob: -6.241562843322754
    10. 'F' → logprob: -6.991562843322754

Token 401: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05200003460049629
    2. ')' → logprob: -3.552000045776367
    3. '):
' → logprob: -4.677000045776367
    4. ',' → logprob: -5.677000045776367
    5. '[' → logprob: -5.802000045776367
    6. ':' → logprob: -6.677000045776367
    7. '_' → logprob: -6.927000045776367
    8. ' ):' → logprob: -7.052000045776367
    9. '(' → logprob: -7.302000045776367
    10. '=' → logprob: -8.427000045776367

Token 402: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7121201157569885
    2. 'return' → logprob: -1.0871200561523438
    3. '   ' → logprob: -2.3371200561523438
    4. ' x' → logprob: -3.2121200561523438
    5. ' if' → logprob: -4.587120056152344
    6. 'x' → logprob: -4.587120056152344
    7. 'if' → logprob: -5.837120056152344
    8. '    ' → logprob: -6.212120056152344
    9. ' ' → logprob: -6.462120056152344
    10. ' np' → logprob: -6.587120056152344

Token 403: ' print' (ID: 2123)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8577200174331665
    2. 'return' → logprob: -1.2327200174331665
    3. ' x' → logprob: -2.232719898223877
    4. ' return' → logprob: -2.232719898223877
    5. '(' → logprob: -4.232719898223877
    6. 'np' → logprob: -4.232719898223877
    7. '1' → logprob: -5.232719898223877
    8. 'max' → logprob: -5.482719898223877
    9. ' np' → logprob: -5.482719898223877
    10. ' (' → logprob: -5.607719898223877

Token 404: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2324746549129486
    2. '(' → logprob: -1.607474684715271
    3. '(f' → logprob: -4.9824748039245605
    4. '('' → logprob: -9.732474327087402
    5. '()' → logprob: -10.607474327087402
    6. 'x' → logprob: -10.732474327087402
    7. '(
' → logprob: -10.732474327087402
    8. '((' → logprob: -10.857474327087402
    9. '("' → logprob: -11.482474327087402
    10. '(int' → logprob: -12.482474327087402

Token 405: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13143031299114227
    2. ',' → logprob: -2.1314303874969482
    3. ',end' → logprob: -5.506430149078369
    4. ' ,' → logprob: -9.256430625915527
    5. ' )' → logprob: -9.256430625915527
    6. '+' → logprob: -9.631430625915527
    7. ');' → logprob: -9.756430625915527
    8. ')#' → logprob: -10.881430625915527
    9. ',)' → logprob: -11.381430625915527
    10. ')
' → logprob: -11.506430625915527

Token 406: ' flush' (ID: 37790)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.019473886117339134
    2. ' flush' → logprob: -4.019474029541016
    3. 'end' → logprob: -6.644474029541016
    4. ' end' → logprob: -11.144474029541016
    5. 'fl' → logprob: -12.769474029541016
    6. 'file' → logprob: -13.019474029541016
    7. ' ' → logprob: -13.394474029541016
    8. ')' → logprob: -14.894474029541016
    9. '.flush' → logprob: -15.394474029541016
    10. '  ' → logprob: -16.144474029541016

Token 407: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.002475777640938759
    2. '=' → logprob: -6.002475738525391
    3. '=False' → logprob: -15.62747573852539
    4. ')' → logprob: -18.75247573852539
    5. ')=' → logprob: -19.50247573852539
    6. '=
' → logprob: -19.50247573852539
    7. ' =' → logprob: -20.75247573852539
    8. '(True' → logprob: -20.87747573852539
    9. '=sys' → logprob: -21.12747573852539
    10. '=}' → logprob: -21.62747573852539

Token 408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.250001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ')`' → logprob: -15.875001907348633
    5. '))' → logprob: -16.125001907348633
    6. '')' → logprob: -17.375001907348633
    7. ');' → logprob: -17.375001907348633
    8. '),' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.125001907348633
    10. '())' → logprob: -18.375001907348633

Token 409: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6412355899810791
    2. '_' → logprob: -1.141235589981079
    3. '<|end|>' → logprob: -2.391235589981079
    4. '(' → logprob: -4.0162353515625
    5. '
' → logprob: -4.5162353515625
    6. '#' → logprob: -4.6412353515625
    7. '\' → logprob: -5.1412353515625
    8. '\n' → logprob: -5.6412353515625
    9. ' ' → logprob: -5.7662353515625
    10. '(
' → logprob: -6.7662353515625

Token 411: ' PRO' (ID: 8369)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5048415660858154
    2. 'x' → logprob: -2.3798415660858154
    3. ' PRO' → logprob: -2.5048415660858154
    4. ' input' → logprob: -2.7548415660858154
    5. ' not' → logprob: -3.0048415660858154
    6. ' int' → logprob: -3.2548415660858154
    7. 'PRO' → logprob: -4.2548418045043945
    8. 'input' → logprob: -4.6298418045043945
    9. ' False' → logprob: -4.7548418045043945
    10. ' PF' → logprob: -4.8798418045043945

Token 412: 'BLEM' (ID: 134327)
  Prédit: 'BLEM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BLEM' → logprob: -0.06396223604679108
    2. 'B' → logprob: -2.81396222114563
    3. 'BL' → logprob: -7.063962459564209
    4. 'F' → logprob: -7.563962459564209
    5. 'blem' → logprob: -7.938962459564209
    6. 'BLE' → logprob: -9.56396198272705
    7. 'T' → logprob: -9.68896198272705
    8. 'BEL' → logprob: -10.43896198272705
    9. ' B' → logprob: -11.43896198272705
    10. 'L' → logprob: -11.43896198272705

Token 413: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -7.839121826691553e-05
    2. 'B' → logprob: -9.750078201293945
    3. '_A' → logprob: -11.750078201293945
    4. '_' → logprob: -11.875078201293945
    5. ')' → logprob: -14.250078201293945
    6. ' _' → logprob: -14.250078201293945
    7. '```' → logprob: -14.250078201293945
    8. '=' → logprob: -14.375078201293945
    9. '   ' → logprob: -14.750078201293945
    10. '_b' → logprob: -15.000078201293945

Token 414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036638472229242325
    2. ':
' → logprob: -3.6616384983062744
    3. '   ' → logprob: -5.286638259887695
    4. ' :' → logprob: -6.036638259887695
    5. ' and' → logprob: -6.786638259887695
    6. '       ' → logprob: -7.286638259887695
    7. '==' → logprob: -8.286638259887695
    8. '    ' → logprob: -8.536638259887695
    9. ' ==' → logprob: -8.536638259887695
    10. '():' → logprob: -9.411638259887695

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017555780708789825
    2. '   ' → logprob: -4.1425557136535645
    3. ' input' → logprob: -7.0175557136535645
    4. 'input' → logprob: -9.142556190490723
    5. '    ' → logprob: -9.267556190490723
    6. ',' → logprob: -9.267556190490723
    7. ' _' → logprob: -9.642556190490723
    8. '_' → logprob: -10.392556190490723
    9. '           ' → logprob: -10.455056190490723
    10. '```' → logprob: -10.642556190490723

Token 416: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.61956787109375
    2. '_' → logprob: -1.61956787109375
    3. ' input' → logprob: -2.36956787109375
    4. 'assert' → logprob: -2.74456787109375
    5. 'print' → logprob: -3.24456787109375
    6. '   ' → logprob: -3.24456787109375
    7. ' _' → logprob: -4.99456787109375
    8. 'ans' → logprob: -5.99456787109375
    9. ' assert' → logprob: -5.99456787109375
    10. 'return' → logprob: -6.24456787109375

Token 417: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2603901015827432e-05
    2. '()
' → logprob: -10.875022888183594
    3. '(' → logprob: -13.875022888183594
    4. '();' → logprob: -14.375022888183594
    5. '()]' → logprob: -14.500022888183594
    6. '()

' → logprob: -15.000022888183594
    7. '())' → logprob: -15.250022888183594
    8. '()\' → logprob: -15.500022888183594
    9. '()`' → logprob: -16.125022888183594
    10. '()<' → logprob: -16.250022888183594

Token 418: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2058902978897095
    2. '<|end|>' → logprob: -1.4558902978897095
    3. '#' → logprob: -1.7058902978897095
    4. ')' → logprob: -1.8308902978897095
    5. '_' → logprob: -2.83089017868042
    6. '
' → logprob: -4.08089017868042
    7. '[' → logprob: -4.70589017868042
    8. '<|end|>' → logprob: -5.33089017868042
    9. '```' → logprob: -5.45589017868042
    10. ';' → logprob: -5.83089017868042

Token 419: ' [' (ID: 723)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05870798975229263
    2. '_' → logprob: -3.4337079524993896
    3. 'int' → logprob: -3.8087079524993896
    4. 'print' → logprob: -6.433708190917969
    5. '_input' → logprob: -8.433708190917969
    6. ' input' → logprob: -8.683708190917969
    7. '(input' → logprob: -9.433708190917969
    8. '_]' → logprob: -9.433708190917969
    9. 'x' → logprob: -9.558708190917969
    10. '_=' → logprob: -9.933708190917969

Token 421: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.822646693966817e-06
    2. '()]' → logprob: -12.750007629394531
    3. ' ()' → logprob: -12.750007629394531
    4. '()
' → logprob: -13.375007629394531
    5. 'for' → logprob: -16.00000762939453
    6. ' for' → logprob: -16.62500762939453
    7. '()
' → logprob: -16.75000762939453
    8. '()[' → logprob: -16.87500762939453
    9. '(' → logprob: -17.25000762939453
    10. '().' → logprob: -17.37500762939453

Token 422: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16923624277114868
    2. 'for' → logprob: -1.919236183166504
    3. '()' → logprob: -4.794236183166504
    4. '       ' → logprob: -8.419236183166504
    5. '	for' → logprob: -8.544236183166504
    6. '   ' → logprob: -8.919236183166504
    7. ']' → logprob: -10.044236183166504
    8. '        ' → logprob: -10.794236183166504
    9. '    ' → logprob: -11.169236183166504
    10. ' ' → logprob: -11.169236183166504

Token 423: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06601466238498688
    2. ' _' → logprob: -2.8160147666931152
    3. ' range' → logprob: -5.566014766693115
    4. 'range' → logprob: -8.691014289855957
    5. '_range' → logprob: -11.191014289855957
    6. ' in' → logprob: -11.816014289855957
    7. ' ' → logprob: -12.191014289855957
    8. ' ' → logprob: -12.316014289855957
    9. '__' → logprob: -12.441014289855957
    10. '_=' → logprob: -12.816014289855957

Token 424: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3688013255596161
    2. 'range' → logprob: -1.7438013553619385
    3. ' range' → logprob: -2.1188013553619385
    4. ' in' → logprob: -4.493801116943359
    5. 'in' → logprob: -6.493801116943359
    6. '_range' → logprob: -7.743801116943359
    7. ' _' → logprob: -8.49380111694336
    8. '_in' → logprob: -9.74380111694336
    9. '(range' → logprob: -12.24380111694336
    10. '	range' → logprob: -12.61880111694336

Token 425: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6354823708534241
    2. 'range' → logprob: -0.7604823708534241
    3. '_' → logprob: -5.885482311248779
    4. '_range' → logprob: -9.885482788085938
    5. ' _' → logprob: -11.135482788085938
    6. ' ' → logprob: -11.885482788085938
    7. '(range' → logprob: -12.260482788085938
    8. ' in' → logprob: -12.385482788085938
    9. '	range' → logprob: -12.635482788085938
    10. ' ' → logprob: -12.760482788085938

Token 426: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.24494044482707977
    2. '(' → logprob: -2.1199405193328857
    3. 'int' → logprob: -2.9949405193328857
    4. '(T' → logprob: -3.9949405193328857
    5. '(x' → logprob: -4.494940280914307
    6. '(PRO' → logprob: -5.494940280914307
    7. '3' → logprob: -6.494940280914307
    8. 'x' → logprob: -6.744940280914307
    9. '(min' → logprob: -6.744940280914307
    10. '(del' → logprob: -6.744940280914307

Token 427: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005585195031017065
    2. 'input' → logprob: -5.255585193634033
    3. '(' → logprob: -8.005585670471191
    4. '((' → logprob: -12.630585670471191
    5. '(x' → logprob: -13.130585670471191
    6. ' input' → logprob: -13.255585670471191
    7. '(int' → logprob: -13.505585670471191
    8. ' ' → logprob: -14.005585670471191
    9. 'x' → logprob: -14.005585670471191
    10. '<input' → logprob: -14.380585670471191

Token 428: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004160672426223755
    2. '())' → logprob: -5.7541608810424805
    3. '()' → logprob: -7.2541608810424805
    4. '))' → logprob: -8.62916088104248
    5. '()))
' → logprob: -10.62916088104248
    6. '(' → logprob: -10.75416088104248
    7. '))]
' → logprob: -11.62916088104248
    8. '())))' → logprob: -11.87916088104248
    9. '().' → logprob: -12.00416088104248
    10. '()
' → logprob: -12.62916088104248

Token 429: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0365697480738163
    2. ')]' → logprob: -4.161569595336914
    3. '   ' → logprob: -4.411569595336914
    4. '()]' → logprob: -5.161569595336914
    5. '       ' → logprob: -6.661569595336914
    6. ' ]' → logprob: -7.786569595336914
    7. ']
' → logprob: -8.161569595336914
    8. ')' → logprob: -8.536569595336914
    9. '])' → logprob: -9.036569595336914
    10. '])]' → logprob: -10.286569595336914

Token 430: 'order' (ID: 2143)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.01824921742081642
    2. '(' → logprob: -4.393249034881592
    3. '_' → logprob: -6.893249034881592
    4. '=' → logprob: -7.143249034881592
    5. ' =' → logprob: -7.143249034881592
    6. 'in' → logprob: -7.393249034881592
    7. '()' → logprob: -7.768249034881592
    8. '_out' → logprob: -8.01824951171875
    9. ' in' → logprob: -8.39324951171875
    10. 's' → logprob: -8.39324951171875

Token 432: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013375049456954002
    2. '(' → logprob: -6.75133752822876
    3. '()
' → logprob: -9.376337051391602
    4. '<|end|>' → logprob: -10.376337051391602
    5. ')' → logprob: -11.001337051391602
    6. '();' → logprob: -12.001337051391602
    7. '()[' → logprob: -12.126337051391602
    8. '[]' → logprob: -12.501337051391602
    9. '(
' → logprob: -12.626337051391602
    10. '[' → logprob: -12.626337051391602

Token 433: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16107086837291718
    2. '<|end|>' → logprob: -2.6610708236694336
    3. 'for' → logprob: -3.1610708236694336
    4. ' while' → logprob: -4.286070823669434
    5. 'def' → logprob: -4.786070823669434
    6. ')' → logprob: -5.161070823669434
    7. 'T' → logprob: -5.911070823669434
    8. '<|end|>' → logprob: -6.161070823669434
    9. '#' → logprob: -6.661070823669434
    10. '```' → logprob: -6.661070823669434

Token 434: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.13251812756061554
    2. ' True' → logprob: -2.1325180530548096
    3. ' not' → logprob: -6.382518291473389
    4. 'T' → logprob: -6.882518291473389
    5. 'True' → logprob: -6.882518291473389
    6. ' ' → logprob: -7.507518291473389
    7. '(T' → logprob: -8.00751781463623
    8. '(True' → logprob: -8.13251781463623
    9. ' delivering' → logprob: -8.38251781463623
    10. ' (' → logprob: -9.38251781463623

Token 435: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.025062546133995056
    2. '<' → logprob: -3.7750625610351562
    3. '<T' → logprob: -6.525062561035156
    4. ' <=' → logprob: -8.025062561035156
    5. '<=' → logprob: -11.525062561035156
    6. ' ' → logprob: -11.650062561035156
    7. '+' → logprob: -13.150062561035156
    8. ' +=' → logprob: -14.650062561035156
    9. ' +' → logprob: -15.650062561035156
    10. '   ' → logprob: -16.025062561035156

Token 436: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0181704293936491
    2. ' T' → logprob: -4.018170356750488
    3. ' ' → logprob: -11.268170356750488
    4. '=' → logprob: -13.893170356750488
    5. '   ' → logprob: -14.143170356750488
    6. '10' → logprob: -14.143170356750488
    7. '  ' → logprob: -14.143170356750488
    8. '=T' → logprob: -14.143170356750488
    9. 'int' → logprob: -14.393170356750488
    10. '	T' → logprob: -14.455670356750488

Token 437: '_MAX' (ID: 15267)
  Prédit: '_MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.0077275303192436695
    2. 'MAX' → logprob: -4.88272762298584
    3. ':
' → logprob: -9.88272762298584
    4. ':' → logprob: -10.63272762298584
    5. '_' → logprob: -11.38272762298584
    6. 'max' → logprob: -11.63272762298584
    7. '+' → logprob: -11.63272762298584
    8. '
' → logprob: -12.75772762298584
    9. 'Max' → logprob: -13.00772762298584
    10. '_max' → logprob: -13.13272762298584

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002182738156989217
    2. ':
' → logprob: -6.252182960510254
    3. ' :' → logprob: -8.502182960510254
    4. '   ' → logprob: -10.877182960510254
    5. ' and' → logprob: -11.002182960510254
    6. ',' → logprob: -11.877182960510254
    7. ' :
' → logprob: -12.752182960510254
    8. '):' → logprob: -13.252182960510254
    9. '.' → logprob: -14.252182960510254
    10. '():' → logprob: -14.502182960510254

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004941989202052355
    2. ' step' → logprob: -5.629941940307617
    3. '<|end|>' → logprob: -7.629941940307617
    4. ' if' → logprob: -8.004941940307617
    5. '    
' → logprob: -8.504941940307617
    6. 'step' → logprob: -9.754941940307617
    7. ' PF' → logprob: -9.754941940307617
    8. '   ' → logprob: -9.879941940307617
    9. '    ' → logprob: -10.129941940307617
    10. '<|end|>' → logprob: -11.004941940307617

Token 440: ' #' (ID: 1069)
  Prédit: 'PF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PF' → logprob: -0.11028862744569778
    2. 'if' → logprob: -2.610288619995117
    3. ' PF' → logprob: -4.485288619995117
    4. ' if' → logprob: -5.360288619995117
    5. 'v' → logprob: -5.485288619995117
    6. '   ' → logprob: -5.610288619995117
    7. 'destination' → logprob: -5.985288619995117
    8. 'step' → logprob: -5.985288619995117
    9. '#' (adapté à ' #') → logprob: -7.110288619995117
    10. 'T' → logprob: -8.485288619995117

Token 441: ' State' (ID: 5388)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9401018619537354
    2. 'PF' → logprob: -1.1901018619537354
    3. 'v' → logprob: -2.3151018619537354
    4. 'destination' → logprob: -2.6901018619537354
    5. '#' → logprob: -3.1901018619537354
    6. 'pass' → logprob: -3.3151018619537354
    7. 'next' → logprob: -4.190101623535156
    8. 'step' → logprob: -4.315101623535156
    9. 'distance' → logprob: -5.315101623535156
    10. ' if' → logprob: -5.565101623535156

Token 442: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5799163579940796
    2. ' =' → logprob: -1.3299163579940796
    3. 'ments' → logprob: -2.704916477203369
    4. 'ment' → logprob: -3.204916477203369
    5. 's' → logprob: -4.579916477203369
    6. '   ' → logprob: -4.704916477203369
    7. '#' → logprob: -4.829916477203369
    8. ')' → logprob: -5.079916477203369
    9. '<|end|>' → logprob: -5.454916477203369
    10. ':' → logprob: -5.454916477203369

Token 443: ' delivering' (ID: 28556)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10974741727113724
    2. 'if' → logprob: -2.3597474098205566
    3. '   ' → logprob: -5.609747409820557
    4. '<|end|>' → logprob: -5.734747409820557
    5. '    ' → logprob: -7.109747409820557
    6. 'destination' → logprob: -7.734747409820557
    7. ' delivery' → logprob: -7.859747409820557
    8. 'delivery' → logprob: -8.734747886657715
    9. ' destination' → logprob: -8.859747886657715
    10. ' step' → logprob: -8.984747886657715

Token 444: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28770866990089417
    2. ' if' → logprob: -1.5377086400985718
    3. '<|end|>' → logprob: -4.037708759307861
    4. 'if' → logprob: -4.412708759307861
    5. 'v' → logprob: -6.912708759307861
    6. ')' → logprob: -7.037708759307861
    7. ',' → logprob: -7.162708759307861
    8. '    ' → logprob: -7.412708759307861
    9. '<|end|>' → logprob: -8.287708282470703
    10. ' and' → logprob: -8.662708282470703

Token 446: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15827332437038422
    2. 'PF' → logprob: -2.033273220062256
    3. 'v' → logprob: -4.783273220062256
    4. '   ' → logprob: -6.533273220062256
    5. 'next' → logprob: -6.908273220062256
    6. ' if' → logprob: -6.908273220062256
    7. '#' → logprob: -7.158273220062256
    8. 'destination' → logprob: -7.158273220062256
    9. 'pass' → logprob: -7.533273220062256
    10. 'print' → logprob: -8.408273696899414

Token 447: ' delivering' (ID: 28556)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.6567636132240295
    2. ' delivering' → logprob: -1.0317635536193848
    3. ' returning' → logprob: -2.5317635536193848
    4. 'return' → logprob: -3.1567635536193848
    5. 'destination' → logprob: -6.906763553619385
    6. ' destination' → logprob: -7.531763553619385
    7. 'v' → logprob: -7.656763553619385
    8. ' v' → logprob: -8.531764030456543
    9. 'dest' → logprob: -9.031764030456543
    10. 'deliver' → logprob: -9.031764030456543

Token 448: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8192413449287415
    2. ':' → logprob: -1.3192412853240967
    3. ' ==' → logprob: -1.4442412853240967
    4. ' and' → logprob: -3.1942412853240967
    5. '>' → logprob: -4.819241523742676
    6. ' >' → logprob: -5.569241523742676
    7. 'and' → logprob: -6.194241523742676
    8. ' is' → logprob: -8.194241523742676
    9. ':
' → logprob: -8.444241523742676
    10. ' :' → logprob: -9.194241523742676

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06304106116294861
    2. '   ' → logprob: -3.1880409717559814
    3. ' if' → logprob: -4.1880412101745605
    4. ' and' → logprob: -6.1880412101745605
    5. 'if' → logprob: -7.0630412101745605
    6. ':' → logprob: -7.5630412101745605
    7. '<|end|>' → logprob: -8.563040733337402
    8. ':
' → logprob: -8.813040733337402
    9. ',' → logprob: -8.813040733337402
    10. '    ' → logprob: -9.438040733337402

Token 450: ' PF' (ID: 52605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14221912622451782
    2. '   ' → logprob: -2.892219066619873
    3. 'v' → logprob: -3.392219066619873
    4. '       ' → logprob: -4.017219066619873
    5. ' if' → logprob: -4.642219066619873
    6. 'print' → logprob: -5.017219066619873
    7. 'pass' → logprob: -5.142219066619873
    8. '#' → logprob: -6.767219066619873
    9. 'PF' (adapté à ' PF') → logprob: -7.142219066619873
    10. ' pass' → logprob: -8.392219543457031

Token 451: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.21715416014194489
    2. 'v' → logprob: -1.9671541452407837
    3. '(destination' → logprob: -3.4671542644500732
    4. 'destination' → logprob: -4.217154026031494
    5. '(' → logprob: -5.967154026031494
    6. '("' → logprob: -6.342154026031494
    7. '('' → logprob: -6.342154026031494
    8. '(del' → logprob: -6.842154026031494
    9. '(str' → logprob: -7.592154026031494
    10. 'str' → logprob: -7.967154026031494

Token 452: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003312937042210251
    2. '_next' → logprob: -8.125330924987793
    3. ')' → logprob: -11.375330924987793
    4. ' next' → logprob: -12.000330924987793
    5. '[next' → logprob: -12.125330924987793
    6. '_to' → logprob: -12.500330924987793
    7. '(next' → logprob: -13.250330924987793
    8. '	next' → logprob: -13.250330924987793
    9. '
' → logprob: -14.625330924987793
    10. 'now' → logprob: -15.000330924987793

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14348576962947845
    2. ')
' → logprob: -2.0184857845306396
    3. ' )' → logprob: -7.6434855461120605
    4. ')
' → logprob: -8.643486022949219
    5. ' )
' → logprob: -9.143486022949219
    6. ');' → logprob: -11.018486022949219
    7. '   ' → logprob: -11.393486022949219
    8. ')

' → logprob: -11.768486022949219
    9. ')`
' → logprob: -13.518486022949219
    10. ')`' → logprob: -13.643486022949219

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4985828101634979
    2. '<|end|>' → logprob: -1.2485828399658203
    3. '   ' → logprob: -2.6235828399658203
    4. '
' → logprob: -3.8735828399658203
    5. ' if' → logprob: -5.49858283996582
    6. ')' → logprob: -6.24858283996582
    7. 'v' → logprob: -6.24858283996582
    8. '<|end|>' → logprob: -6.74858283996582
    9. 'if' → logprob: -7.24858283996582
    10. 'elif' → logprob: -7.99858283996582

Token 455: ' remaining' (ID: 15448)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.5970038175582886
    2. 'if' → logprob: -1.2220038175582886
    3. 'T' → logprob: -2.472003936767578
    4. 'v' → logprob: -2.847003936767578
    5. 'return' → logprob: -4.722003936767578
    6. '   ' → logprob: -6.222003936767578
    7. '       ' → logprob: -7.472003936767578
    8. ' if' → logprob: -8.222003936767578
    9. 'deliver' → logprob: -8.597003936767578
    10. ' T' → logprob: -8.847003936767578

Token 456: '_next' (ID: 25436)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5462128520011902
    2. ' -=' → logprob: -0.9212128520011902
    3. '-' → logprob: -4.671212673187256
    4. '_nodes' → logprob: -5.171212673187256
    5. '=' → logprob: -5.546212673187256
    6. '_' → logprob: -6.796212673187256
    7. ' =' → logprob: -6.796212673187256
    8. '_distance' → logprob: -8.171213150024414
    9. '_cost' → logprob: -8.671213150024414
    10. '_tokens' → logprob: -9.171213150024414

Token 457: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.5726233720779419
    2. '-=' → logprob: -0.9476233720779419
    3. ' =' → logprob: -3.6976232528686523
    4. '=' → logprob: -3.9476232528686523
    5. '-' → logprob: -5.697623252868652
    6. ' -' → logprob: -9.072623252868652
    7. ',' → logprob: -9.322623252868652
    8. '+=' → logprob: -9.322623252868652
    9. '```' → logprob: -9.947623252868652
    10. ' ' → logprob: -9.947623252868652

Token 458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026419671485200524
    2. ' ' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.250264167785645
    4. '       ' → logprob: -15.437764167785645
    5. '           ' → logprob: -15.812764167785645
    6. '```' → logprob: -15.875264167785645
    7. ' ' → logprob: -15.875264167785645
    8. '0' → logprob: -16.06276512145996
    9. '
' → logprob: -16.75026512145996
    10. '  ' → logprob: -17.31276512145996

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043579499470070004
    2. ' ' → logprob: -7.750435829162598
    3. 'remaining' → logprob: -13.875435829162598
    4. '   ' → logprob: -14.000435829162598
    5. '0' → logprob: -14.812935829162598
    6. '```' → logprob: -15.312935829162598
    7. '
' → logprob: -15.375435829162598
    8. 'step' → logprob: -15.625435829162598
    9. 'int' → logprob: -15.687935829162598
    10. '  ' → logprob: -15.750435829162598

Token 460: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10233145207166672
    2. '       ' → logprob: -2.4773313999176025
    3. ' if' → logprob: -4.352331638336182
    4. '```' → logprob: -8.852331161499023
    5. 'continue' → logprob: -9.602331161499023
    6. '	if' → logprob: -9.852331161499023
    7. '   ' → logprob: -9.852331161499023
    8. '<|end|>' → logprob: -10.352331161499023
    9. 'v' → logprob: -10.852331161499023
    10. 'remaining' → logprob: -11.477331161499023

Token 463: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.016148388385772705
    2. ' remaining' → logprob: -4.141148567199707
    3. 'not' → logprob: -9.641148567199707
    4. '   ' → logprob: -11.141148567199707
    5. ' not' → logprob: -11.266148567199707
    6. '_remaining' → logprob: -12.266148567199707
    7. ' ' → logprob: -12.516148567199707
    8. '.remaining' → logprob: -13.016148567199707
    9. '  ' → logprob: -13.266148567199707
    10. ' ' → logprob: -13.516148567199707

Token 464: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -4.894790981779806e-05
    2. 'next' → logprob: -10.875048637390137
    3. '_' → logprob: -11.625048637390137
    4. '==' → logprob: -11.625048637390137
    5. '```' → logprob: -11.750048637390137
    6. '_tokens' → logprob: -13.875048637390137
    7. ' ==' → logprob: -14.875048637390137
    8. ')' → logprob: -15.125048637390137
    9. '
' → logprob: -15.125048637390137
    10. '_here' → logprob: -15.250048637390137

Token 465: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23732683062553406
    2. '==' → logprob: -1.7373268604278564
    3. ' <=' → logprob: -3.4873268604278564
    4. '<=' → logprob: -5.362326622009277
    5. ' ' → logprob: -13.862326622009277
    6. '0' → logprob: -14.237326622009277
    7. '=' → logprob: -14.737326622009277
    8. ':' → logprob: -15.112326622009277
    9. '[' → logprob: -15.487326622009277
    10. ')' → logprob: -15.612326622009277

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014165272004902363
    2. ' ' → logprob: -4.26416540145874
    3. '   ' → logprob: -14.264164924621582
    4. ' ' → logprob: -14.764164924621582
    5. '=' → logprob: -15.139164924621582
    6. '1' → logprob: -16.1391658782959
    7. '```' → logprob: -16.7016658782959
    8. '۰' → logprob: -16.8891658782959
    9. '  ' → logprob: -16.9516658782959
    10. ' ' → logprob: -17.4516658782959

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006274910410866141
    2. ' ' → logprob: -7.375627517700195
    3. '   ' → logprob: -15.250627517700195
    4. ' ' → logprob: -15.875627517700195
    5. '```' → logprob: -16.313127517700195
    6. '=' → logprob: -16.438127517700195
    7. '1' → logprob: -16.500627517700195
    8. '۰' → logprob: -17.125627517700195
    9. '  ' → logprob: -17.250627517700195
    10. '00' → logprob: -17.438127517700195

Token 468: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21427775919437408
    2. ':' → logprob: -1.714277744293213
    3. ' and' → logprob: -5.089277744293213
    4. '       ' → logprob: -5.464277744293213
    5. ' or' → logprob: -6.839277744293213
    6. '           ' → logprob: -6.839277744293213
    7. ',' → logprob: -9.214278221130371
    8. '):
' → logprob: -9.839278221130371
    9. ':

' → logprob: -10.214278221130371
    10. ':
' → logprob: -11.339278221130371

Token 469: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.69472336769104
    2. '           ' → logprob: -0.69472336769104
    3. ' and' → logprob: -7.569723129272461
    4. '   ' → logprob: -7.694723129272461
    5. ',' → logprob: -8.694723129272461
    6. ' or' → logprob: -9.694723129272461
    7. ' if' → logprob: -9.944723129272461
    8. '#' → logprob: -9.944723129272461
    9. 'return' → logprob: -10.194723129272461
    10. 'del' → logprob: -10.194723129272461

Token 470: ' if' (ID: 538)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.6180568337440491
    2. '           ' → logprob: -0.8680568337440491
    3. 'if' (adapté à ' if') → logprob: -3.8680567741394043
    4. 'v' → logprob: -5.118056774139404
    5. '       ' → logprob: -5.243056774139404
    6. '   ' → logprob: -6.243056774139404
    7. 'deliver' → logprob: -6.368056774139404
    8. 'destination' → logprob: -6.493056774139404
    9. ' delivered' → logprob: -6.743056774139404
    10. 'return' → logprob: -7.118056774139404

Token 471: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.45693284273147583
    2. 'destination' → logprob: -1.331932783126831
    3. 'del' → logprob: -2.456932783126831
    4. ' destination' → logprob: -5.33193302154541
    5. ' v' → logprob: -5.70693302154541
    6. 'return' → logprob: -5.95693302154541
    7. '   ' → logprob: -6.45693302154541
    8. 'delivery' → logprob: -7.33193302154541
    9. 'dest' → logprob: -7.45693302154541
    10. 'all' → logprob: -7.58193302154541

Token 472: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0001999642699956894
    2. '_next' → logprob: -9.125200271606445
    3. '==' → logprob: -10.750200271606445
    4. '_to' → logprob: -11.125200271606445
    5. ' next' → logprob: -11.250200271606445
    6. 'from' → logprob: -11.875200271606445
    7. '[next' → logprob: -12.000200271606445
    8. ' ==' → logprob: -12.125200271606445
    9. '_from' → logprob: -12.375200271606445
    10. '	next' → logprob: -12.875200271606445

Token 473: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47568410634994507
    2. '==' → logprob: -0.9756841063499451
    3. ' in' → logprob: -6.72568416595459
    4. ' not' → logprob: -8.97568416595459
    5. ' !=' → logprob: -9.22568416595459
    6. '!=' → logprob: -10.10068416595459
    7. 'in' → logprob: -10.35068416595459
    8. ' ' → logprob: -10.85068416595459
    9. 'not' → logprob: -10.97568416595459
    10. ')' → logprob: -11.47568416595459

Token 474: ' ' (ID: 220)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.00018697108316700906
    2. ' destination' → logprob: -9.000186920166016
    3. 'last' → logprob: -9.875186920166016
    4. '0' → logprob: -12.750186920166016
    5. 'v' → logprob: -13.250186920166016
    6. '(destination' → logprob: -13.500186920166016
    7. '1' → logprob: -13.750186920166016
    8. '   ' → logprob: -13.875186920166016
    9. 'dest' → logprob: -15.000186920166016
    10. 'V' → logprob: -15.000186920166016

Token 475: '1' (ID: 16)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.0001227276516146958
    2. 'last' → logprob: -9.750123023986816
    3. ' destination' → logprob: -10.125123023986816
    4. '0' → logprob: -12.250123023986816
    5. '1' → logprob: -12.250123023986816
    6. 'v' → logprob: -12.750123023986816
    7. 'min' → logprob: -13.000123023986816
    8. 'len' → logprob: -13.375123023986816
    9. '(destination' → logprob: -13.875123023986816
    10. 'dest' → logprob: -14.125123023986816

Token 476: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3695996105670929
    2. ':' → logprob: -1.2445995807647705
    3. ' and' → logprob: -4.11959981918335
    4. ' or' → logprob: -5.86959981918335
    5. '               ' → logprob: -6.86959981918335
    6. '           ' → logprob: -8.369599342346191
    7. ':

' → logprob: -8.744599342346191
    8. 'and' → logprob: -8.744599342346191
    9. '):
' → logprob: -9.744599342346191
    10. ':
' → logprob: -9.869599342346191

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019380348967388272
    2. '           ' → logprob: -6.5019378662109375
    3. 'deliver' → logprob: -8.876937866210938
    4. 'return' → logprob: -9.126937866210938
    5. '       ' → logprob: -10.126937866210938
    6. ',' → logprob: -10.126937866210938
    7. 'del' → logprob: -10.376937866210938
    8. '<|end|>' → logprob: -11.501937866210938
    9. ' returning' → logprob: -11.876937866210938
    10. 'delivery' → logprob: -11.876937866210938

Token 478: ' last' (ID: 2174)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.06551939994096756
    2. '               ' → logprob: -3.065519332885742
    3. 'return' → logprob: -4.565519332885742
    4. 'deliver' → logprob: -6.065519332885742
    5. '           ' → logprob: -6.190519332885742
    6. '   ' → logprob: -6.815519332885742
    7. ' delivering' → logprob: -7.315519332885742
    8. 'delivery' → logprob: -9.440519332885742
    9. '                   ' → logprob: -9.815519332885742
    10. '              ' → logprob: -10.440519332885742

Token 479: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.0003876550472341478
    2. 'return' → logprob: -7.875387668609619
    3. 'Return' → logprob: -12.875387191772461
    4. '=' → logprob: -14.250387191772461
    5. '_' → logprob: -14.250387191772461
    6. '_RETURN' → logprob: -14.500387191772461
    7. ')return' → logprob: -14.750387191772461
    8. '
' → logprob: -15.000387191772461
    9. ':return' → logprob: -15.375387191772461
    10. '	return' → logprob: -15.625387191772461

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.315104603767395
    2. ' =' → logprob: -1.315104603767395
    3. '+=' → logprob: -6.8151044845581055
    4. ' +=' → logprob: -7.3151044845581055
    5. ',' → logprob: -9.690104484558105
    6. '=True' → logprob: -12.440104484558105
    7. '=None' → logprob: -12.690104484558105
    8. '   ' → logprob: -12.690104484558105
    9. ' ' → logprob: -13.440104484558105
    10. '+' → logprob: -14.190104484558105

Token 481: ' max' (ID: 2999)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -6.217951886355877e-05
    2. ' T' → logprob: -9.875061988830566
    3. '0' → logprob: -12.250061988830566
    4. '   ' → logprob: -13.750061988830566
    5. ' ' → logprob: -13.875061988830566
    6. '	T' → logprob: -13.875061988830566
    7. '1' → logprob: -14.250061988830566
    8. 'max' → logprob: -14.750061988830566
    9. '
' → logprob: -15.125061988830566
    10. 'v' → logprob: -15.375061988830566

Token 482: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.8846722841262817
    2. '(T' → logprob: -1.5096722841262817
    3. 'T' → logprob: -2.009672164916992
    4. '(' → logprob: -2.009672164916992
    5. 'last' → logprob: -2.384672164916992
    6. '0' → logprob: -5.384672164916992
    7. '_T' → logprob: -8.509672164916992
    8. '(P' → logprob: -9.009672164916992
    9. '(v' → logprob: -9.009672164916992
    10. 'v' → logprob: -9.009672164916992

Token 483: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.1146535575389862
    2. 'return' → logprob: -2.2396535873413086
    3. 'T' → logprob: -6.989653587341309
    4. '_time' → logprob: -8.614653587341309
    5. 'Return' → logprob: -8.739653587341309
    6. 'last' → logprob: -8.989653587341309
    7. 'time' → logprob: -8.989653587341309
    8. '0' → logprob: -9.489653587341309
    9. '```' → logprob: -10.614653587341309
    10. '_T' → logprob: -10.739653587341309

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022637197747826576
    2. ',last' → logprob: -4.147637367248535
    3. ' ,' → logprob: -6.022637367248535
    4. 'last' → logprob: -6.272637367248535
    5. '(last' → logprob: -7.022637367248535
    6. '+' → logprob: -7.772637367248535
    7. ')' → logprob: -8.147637367248535
    8. ',T' → logprob: -8.647637367248535
    9. ',v' → logprob: -9.522637367248535
    10. ' +' → logprob: -9.897637367248535

Token 485: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0005532711511477828
    2. ' T' → logprob: -7.625553131103516
    3. 'PF' → logprob: -10.750553131103516
    4. '0' → logprob: -11.125553131103516
    5. 'step' → logprob: -12.625553131103516
    6. '	T' → logprob: -12.750553131103516
    7. ' ' → logprob: -12.875553131103516
    8. ')' → logprob: -12.875553131103516
    9. '   ' → logprob: -13.375553131103516
    10. '_T' → logprob: -13.375553131103516

Token 486: ' -' (ID: 533)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3217564523220062
    2. ')' → logprob: -1.3217564821243286
    3. '               ' → logprob: -5.446756362915039
    4. '           ' → logprob: -5.696756362915039
    5. ')
' → logprob: -8.071756362915039
    6. ' )
' → logprob: -8.696756362915039
    7. '+' → logprob: -9.321756362915039
    8. ')

' → logprob: -9.321756362915039
    9. '-' → logprob: -10.446756362915039
    10. ');' → logprob: -10.946756362915039

Token 487: ' _' (ID: 1175)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.856478750705719
    2. 'return' → logprob: -1.3564786911010742
    3. 'del' → logprob: -1.4814786911010742
    4. 'remaining' → logprob: -3.231478691101074
    5. 'destination' → logprob: -3.856478691101074
    6. ' ' → logprob: -5.231478691101074
    7. 'v' → logprob: -5.481478691101074
    8. ' returning' → logprob: -5.731478691101074
    9. 'last' → logprob: -6.106478691101074
    10. 'deliver' → logprob: -6.356478691101074

Token 488: 'rand' (ID: 21785)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19569945335388184
    2. '_dist' → logprob: -1.9456994533538818
    3. 'pred' → logprob: -3.445699453353882
    4. '_pred' → logprob: -7.195699691772461
    5. 'return' → logprob: -7.445699691772461
    6. 'del' → logprob: -8.195699691772461
    7. 'start' → logprob: -8.320699691772461
    8. '1' → logprob: -8.820699691772461
    9. 'Dist' → logprob: -8.820699691772461
    10. 'last' → logprob: -8.945699691772461

Token 489: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00042686203960329294
    2. ' randint' → logprob: -8.25042724609375
    3. 'rand' → logprob: -9.87542724609375
    4. '.randint' → logprob: -10.12542724609375
    5. ')' → logprob: -10.37542724609375
    6. '1' → logprob: -11.87542724609375
    7. '(' → logprob: -12.00042724609375
    8. '(int' → logprob: -12.50042724609375
    9. '```' → logprob: -12.62542724609375
    10. ' int' → logprob: -12.75042724609375

Token 490: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.093241810798645
    2. '5' → logprob: -1.718241810798645
    3. '3' → logprob: -1.718241810798645
    4. '10' → logprob: -2.3432416915893555
    5. '2' → logprob: -2.5932416915893555
    6. '(' → logprob: -3.5932416915893555
    7. '4' → logprob: -3.7182416915893555
    8. '0' → logprob: -3.9682416915893555
    9. '20' → logprob: -4.2182416915893555
    10. '30' → logprob: -4.7182416915893555

Token 491: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.332316279411316
    2. '5' → logprob: -1.832316279411316
    3. '3' → logprob: -1.957316279411316
    4. '10' → logprob: -2.2073163986206055
    5. '0' → logprob: -2.4573163986206055
    6. '2' → logprob: -2.4573163986206055
    7. '4' → logprob: -3.4573163986206055
    8. '20' → logprob: -3.7073163986206055
    9. '30' → logprob: -4.2073163986206055
    10. '50' → logprob: -4.3323163986206055

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8153073191642761
    2. '2' → logprob: -1.940307378768921
    3. '3' → logprob: -2.440307378768921
    4. '1' → logprob: -2.440307378768921
    5. '5' → logprob: -2.815307378768921
    6. '4' → logprob: -3.065307378768921
    7. '10' → logprob: -3.065307378768921
    8. '20' → logprob: -4.440307140350342
    9. '100' → logprob: -4.690307140350342
    10. '0' → logprob: -4.815307140350342

Token 493: '200' (ID: 1179)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6015101671218872
    2. '5' → logprob: -1.6015101671218872
    3. '2' → logprob: -1.8515101671218872
    4. '10' → logprob: -1.8515101671218872
    5. '1' → logprob: -2.3515100479125977
    6. '4' → logprob: -2.6015100479125977
    7. '9' → logprob: -3.7265100479125977
    8. '20' → logprob: -4.101510047912598
    9. '100' → logprob: -4.476510047912598
    10. '30' → logprob: -4.601510047912598

Token 494: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1275286227464676
    2. '))' → logprob: -2.377528667449951
    3. ')
' → logprob: -4.252528667449951
    4. ' )' → logprob: -5.502528667449951
    5. '))
' → logprob: -5.877528667449951
    6. '+' → logprob: -6.127528667449951
    7. '0' → logprob: -7.502528667449951
    8. '   ' → logprob: -8.127528190612793
    9. ' +' → logprob: -8.127528190612793
    10. '       ' → logprob: -8.252528190612793

Token 495: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11012250185012817
    2. '               ' → logprob: -2.4851224422454834
    3. '<|end|>' → logprob: -4.3601226806640625
    4. '
' → logprob: -5.3601226806640625
    5. ')' → logprob: -7.3601226806640625
    6. 'else' → logprob: -7.6101226806640625
    7. ' else' → logprob: -7.9851226806640625
    8. '            
' → logprob: -8.235122680664062
    9. '                
' → logprob: -8.485122680664062
    10. '       ' → logprob: -8.610122680664062

Token 496: ' delivered' (ID: 14942)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006573499646037817
    2. 'del' → logprob: -5.506573677062988
    3. 'return' → logprob: -7.131573677062988
    4. '               ' → logprob: -7.506573677062988
    5. '       ' → logprob: -8.256573677062988
    6. 'if' → logprob: -8.631573677062988
    7. 'destination' → logprob: -8.631573677062988
    8. 'deliver' → logprob: -8.881573677062988
    9. ' if' → logprob: -9.381573677062988
    10. 'v' → logprob: -9.756573677062988

Token 497: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -0.0017729965038597584
    2. 'here' → logprob: -6.626772880554199
    3. 'Here' → logprob: -8.3767728805542
    4. '=' → logprob: -9.7517728805542
    5. '+=' → logprob: -10.2517728805542
    6. '<|end|>' → logprob: -10.3767728805542
    7. '_' → logprob: -11.3767728805542
    8. '```' → logprob: -11.3767728805542
    9. '.add' → logprob: -11.8767728805542
    10. ' here' → logprob: -12.0017728805542

Token 498: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.001994300866499543
    2. '.' → logprob: -6.2519941329956055
    3. ' .' → logprob: -10.626994132995605
    4. '.clear' → logprob: -10.626994132995605
    5. '.update' → logprob: -11.876994132995605
    6. 'add' → logprob: -12.751994132995605
    7. '.remove' → logprob: -13.626994132995605
    8. '=' → logprob: -13.626994132995605
    9. ' =' → logprob: -13.626994132995605
    10. '   ' → logprob: -13.876994132995605

Token 499: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0010653206845745444
    2. '(destination' → logprob: -7.626065254211426
    3. '(' → logprob: -7.751065254211426
    4. '((' → logprob: -10.376065254211426
    5. '(len' → logprob: -11.001065254211426
    6. '(del' → logprob: -11.251065254211426
    7. 'v' → logprob: -11.376065254211426
    8. '(_' → logprob: -11.376065254211426
    9. '(dest' → logprob: -11.376065254211426
    10. '(T' → logprob: -11.501065254211426

Token 500: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0001438266917830333
    2. 'v' → logprob: -10.625144004821777
    3. '(next' → logprob: -10.625144004821777
    4. 'ext' → logprob: -10.750144004821777
    5. '_next' → logprob: -10.875144004821777
    6. ' next' → logprob: -11.375144004821777
    7. ')' → logprob: -11.625144004821777
    8. '(v' → logprob: -11.625144004821777
    9. 'ex' → logprob: -12.625144004821777
    10. '[next' → logprob: -12.625144004821777

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0382840633392334
    2. ')
' → logprob: -3.2882840633392334
    3. '           ' → logprob: -8.663284301757812
    4. ')
' → logprob: -10.663284301757812
    5. '       ' → logprob: -10.913284301757812
    6. ' )' → logprob: -11.538284301757812
    7. '               ' → logprob: -12.413284301757812
    8. '   ' → logprob: -12.913284301757812
    9. ')

' → logprob: -12.913284301757812
    10. ');' → logprob: -13.038284301757812

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08563367277383804
    2. '<|end|>' → logprob: -2.5856337547302246
    3. '            
' → logprob: -6.085633754730225
    4. '       ' → logprob: -6.710633754730225
    5. '<|end|>' → logprob: -7.085633754730225
    6. '
' → logprob: -7.460633754730225
    7. ')' → logprob: -8.085633277893066
    8. '            ' → logprob: -8.460633277893066
    9. ' if' → logprob: -8.710633277893066
    10. 'v' → logprob: -8.835633277893066

Token 503: ' tmp' (ID: 8919)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12853024899959564
    2. 'del' → logprob: -2.878530263900757
    3. '       ' → logprob: -3.003530263900757
    4. 'v' → logprob: -5.128530025482178
    5. 'return' → logprob: -5.128530025482178
    6. 'if' → logprob: -6.753530025482178
    7. '   ' → logprob: -7.503530025482178
    8. 'destination' → logprob: -8.503530502319336
    9. 'delivery' → logprob: -8.503530502319336
    10. ' v' → logprob: -8.628530502319336

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0658402219414711
    2. '=' → logprob: -4.190840244293213
    3. 'next' → logprob: -4.940840244293213
    4. '_' → logprob: -5.190840244293213
    5. ',' → logprob: -5.315840244293213
    6. '_next' → logprob: -5.440840244293213
    7. '_nodes' → logprob: -5.690840244293213
    8. '_v' → logprob: -5.690840244293213
    9. '_destination' → logprob: -5.690840244293213
    10. 'v' → logprob: -5.940840244293213

Token 505: ' _' (ID: 1175)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3528687655925751
    2. 'v' → logprob: -1.8528687953948975
    3. 'all' → logprob: -3.7278687953948975
    4. '(v' → logprob: -3.9778687953948975
    5. 'destination' → logprob: -3.9778687953948975
    6. ' min' → logprob: -4.477868556976318
    7. '_v' → logprob: -4.602868556976318
    8. 'del' → logprob: -4.727868556976318
    9. 'None' → logprob: -4.852868556976318
    10. ' v' → logprob: -5.102868556976318

Token 506: 'pred' (ID: 32189)
  Prédit: 'pred'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pred' → logprob: -0.45535606145858765
    2. 'dist' → logprob: -1.2053561210632324
    3. 'rand' → logprob: -3.3303561210632324
    4. 'min' → logprob: -4.080356121063232
    5. '_dist' → logprob: -5.080356121063232
    6. '_pred' → logprob: -5.705356121063232
    7. 'del' → logprob: -6.705356121063232
    8. 'next' → logprob: -7.080356121063232
    9. 'np' → logprob: -7.830356121063232
    10. 'arg' → logprob: -8.580355644226074

Token 507: '[d' (ID: 48377)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.011336165480315685
    2. '[T' → logprob: -5.261336326599121
    3. '[' → logprob: -5.886336326599121
    4. '[min' → logprob: -6.511336326599121
    5. '[tmp' → logprob: -7.761336326599121
    6. '[_' → logprob: -7.761336326599121
    7. '[last' → logprob: -8.136336326599121
    8. '[d' → logprob: -8.261336326599121
    9. 'v' → logprob: -9.511336326599121
    10. '[:,' → logprob: -9.511336326599121

Token 508: 'estination' (ID: 15822)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.8163276314735413
    2. 'ist' → logprob: -1.0663275718688965
    3. 'next' → logprob: -2.9413275718688965
    4. 'estination' → logprob: -3.1913275718688965
    5. '_from' → logprob: -3.1913275718688965
    6. 'st' → logprob: -3.4413275718688965
    7. '[next' → logprob: -4.3163275718688965
    8. 'from' → logprob: -5.5663275718688965
    9. 'istance' → logprob: -5.6913275718688965
    10. 'est' → logprob: -5.6913275718688965

Token 509: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.29645997285842896
    2. ',' → logprob: -1.9214599132537842
    3. ',v' → logprob: -2.421459913253784
    4. ',tmp' → logprob: -4.671460151672363
    5. 'v' → logprob: -5.046460151672363
    6. '][_' → logprob: -6.421460151672363
    7. '[tmp' → logprob: -6.671460151672363
    8. '[v' → logprob: -7.046460151672363
    9. ']' → logprob: -7.296460151672363
    10. ' ][' → logprob: -8.296460151672363

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004719784017652273
    2. 'destination' → logprob: -5.5047197341918945
    3. ' v' → logprob: -7.8797197341918945
    4. ' destination' → logprob: -9.879719734191895
    5. ']' → logprob: -10.129719734191895
    6. 'tmp' → logprob: -10.754719734191895
    7. '   ' → logprob: -10.754719734191895
    8. 'min' → logprob: -10.754719734191895
    9. '1' → logprob: -10.879719734191895
    10. '
' → logprob: -11.504719734191895

Token 511: 'next' (ID: 7311)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.47742190957069397
    2. 'next' → logprob: -0.9774218797683716
    3. '_next' → logprob: -6.227421760559082
    4. 'xt' → logprob: -6.977421760559082
    5. ']' → logprob: -8.352421760559082
    6. 'from' → logprob: -10.102421760559082
    7. '_from' → logprob: -10.352421760559082
    8. 'ex' → logprob: -10.352421760559082
    9. 'ert' → logprob: -11.477421760559082
    10. ' next' → logprob: -11.602421760559082

Token 512: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.102667897939682
    2. ']' → logprob: -2.352667808532715
    3. ']
' → logprob: -6.602667808532715
    4. '           ' → logprob: -7.227667808532715
    5. ' ]
' → logprob: -9.352667808532715
    6. '       ' → logprob: -9.602667808532715
    7. ']

' → logprob: -9.852667808532715
    8. '];' → logprob: -10.102667808532715
    9. ']+' → logprob: -10.477667808532715
    10. '].' → logprob: -10.727667808532715

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06437768042087555
    2. 'destination' → logprob: -3.564377784729004
    3. 'if' → logprob: -3.939377784729004
    4. ' if' → logprob: -4.689377784729004
    5. 'v' → logprob: -5.314377784729004
    6. ' destination' → logprob: -8.439377784729004
    7. 'while' → logprob: -10.064377784729004
    8. '       ' → logprob: -10.314377784729004
    9. ' v' → logprob: -10.564377784729004
    10. '
' → logprob: -10.564377784729004

Token 514: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22303147614002228
    2. 'destination' → logprob: -2.348031520843506
    3. 'v' → logprob: -2.723031520843506
    4. '           ' → logprob: -3.348031520843506
    5. '       ' → logprob: -6.348031520843506
    6. 'while' → logprob: -6.848031520843506
    7. '   ' → logprob: -7.723031520843506
    8. ' if' → logprob: -9.223031044006348
    9. '               ' → logprob: -10.098031044006348
    10. '                   ' → logprob: -10.973031044006348

Token 515: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.004186909645795822
    2. ' tmp' → logprob: -5.504187107086182
    3. 'v' → logprob: -10.254186630249023
    4. 'destination' → logprob: -10.754186630249023
    5. 'np' → logprob: -11.004186630249023
    6. '(tmp' → logprob: -11.254186630249023
    7. '	tmp' → logprob: -12.254186630249023
    8. ' ' → logprob: -12.754186630249023
    9. 'not' → logprob: -12.879186630249023
    10. 'pred' → logprob: -12.879186630249023

Token 516: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31742343306541443
    2. '==' → logprob: -1.3174234628677368
    3. '==-' → logprob: -6.067423343658447
    4. ' !=' → logprob: -7.192423343658447
    5. '!=' → logprob: -7.817423343658447
    6. '<' → logprob: -7.942423343658447
    7. ' <' → logprob: -8.567423820495605
    8. '>=' → logprob: -10.942423820495605
    9. '!=-' → logprob: -11.067423820495605
    10. ' is' → logprob: -11.067423820495605

Token 517: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031750984489917755
    2. '-v' → logprob: -6.503175258636475
    3. 'v' → logprob: -6.878175258636475
    4. ' -' → logprob: -7.878175258636475
    5. 'destination' → logprob: -8.753174781799316
    6. '0' → logprob: -10.628174781799316
    7. '-n' → logprob: -10.628174781799316
    8. '-d' → logprob: -11.128174781799316
    9. '1' → logprob: -11.128174781799316
    10. 'None' → logprob: -11.378174781799316

Token 518: '999' (ID: 9130)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001598652801476419
    2. '-' → logprob: -6.501598834991455
    3. 'destination' → logprob: -10.126598358154297
    4. ' ' → logprob: -10.501598358154297
    5. '0' → logprob: -11.751598358154297
    6. ' -' → logprob: -12.126598358154297
    7. 'v' → logprob: -12.376598358154297
    8. '2' → logprob: -13.001598358154297
    9. 'tmp' → logprob: -13.251598358154297
    10. ' destination' → logprob: -13.939098358154297

Token 519: '9' (ID: 24)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07336880266666412
    2. ':
' → logprob: -3.198368787765503
    3. 'and' → logprob: -4.073369026184082
    4. ':' → logprob: -4.448369026184082
    5. ' :
' → logprob: -7.573369026184082
    6. ' :' → logprob: -8.448369026184082
    7. ' ' → logprob: -8.698369026184082
    8. '           ' → logprob: -8.948369026184082
    9. '               ' → logprob: -9.698369026184082
    10. '   ' → logprob: -11.323369026184082

Token 520: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2514955401420593
    2. ':
' → logprob: -1.751495599746704
    3. ':' → logprob: -3.126495599746704
    4. 'and' → logprob: -5.751495361328125
    5. ' :
' → logprob: -7.001495361328125
    6. '               ' → logprob: -8.376495361328125
    7. '           ' → logprob: -8.376495361328125
    8. ' :' → logprob: -8.501495361328125
    9. '):
' → logprob: -10.001495361328125
    10. ':

' → logprob: -10.501495361328125

Token 521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01473794411867857
    2. 'v' → logprob: -5.014738082885742
    3. ' v' → logprob: -5.264738082885742
    4. ' and' → logprob: -6.889738082885742
    5. ' next' → logprob: -7.139738082885742
    6. 'destination' → logprob: -8.264738082885742
    7. 'next' → logprob: -8.639738082885742
    8. '           ' → logprob: -8.889738082885742
    9. ' destination' → logprob: -8.889738082885742
    10. ':' → logprob: -9.764738082885742

Token 522: ' remaining' (ID: 15448)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012945028021931648
    2. '               ' → logprob: -5.262945175170898
    3. '                   ' → logprob: -6.137945175170898
    4. '   ' → logprob: -6.262945175170898
    5. 'destination' → logprob: -6.512945175170898
    6. ' v' → logprob: -6.887945175170898
    7. '           ' → logprob: -7.137945175170898
    8. '       ' → logprob: -9.012945175170898
    9. ' ' → logprob: -9.762945175170898
    10. '	v' → logprob: -10.262945175170898

Token 523: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.08816231787204742
    2. '-=' → logprob: -3.713162422180176
    3. 'next' → logprob: -3.838162422180176
    4. '=' → logprob: -3.838162422180176
    5. '_path' → logprob: -5.963162422180176
    6. '_tmp' → logprob: -6.088162422180176
    7. ' -=' → logprob: -6.213162422180176
    8. '_nodes' → logprob: -6.588162422180176
    9. ' =' → logprob: -6.588162422180176
    10. '_distance' → logprob: -6.713162422180176

Token 524: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8751842975616455
    2. ' =' → logprob: -1.1251842975616455
    3. ' -=' → logprob: -1.7501842975616455
    4. '-=' → logprob: -2.5001842975616455
    5. ' +=' → logprob: -6.750184059143066
    6. '+=' → logprob: -7.250184059143066
    7. '   ' → logprob: -7.500184059143066
    8. '-' → logprob: -9.250184059143066
    9. ',' → logprob: -9.250184059143066
    10. ' ' → logprob: -9.500184059143066

Token 525: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.15097950398921967
    2. '1' → logprob: -2.525979518890381
    3. '_pred' → logprob: -3.650979518890381
    4. 'np' → logprob: -3.900979518890381
    5. 'int' → logprob: -5.275979518890381
    6. ' ' → logprob: -5.400979518890381
    7. 'len' → logprob: -7.275979518890381
    8. '_dst' → logprob: -8.025979042053223
    9. 'max' → logprob: -8.275979042053223
    10. 'sum' → logprob: -8.400979042053223

Token 526: 'dist' (ID: 24126)
  Prédit: 'pred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pred' → logprob: -0.43797826766967773
    2. 'dist' → logprob: -1.0629782676696777
    3. '_dist' → logprob: -5.312978267669678
    4. 'rand' → logprob: -5.687978267669678
    5. '_pred' → logprob: -7.437978267669678
    6. 'next' → logprob: -9.812978744506836
    7. 'len' → logprob: -10.187978744506836
    8. ' pred' → logprob: -10.437978744506836
    9. 'int' → logprob: -10.562978744506836
    10. 'max' → logprob: -11.312978744506836

Token 527: '[v' (ID: 36561)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.3425087630748749
    2. '[tmp' → logprob: -1.3425087928771973
    3. '[v' → logprob: -3.7175087928771973
    4. '[' → logprob: -6.092508792877197
    5. 'tmp' → logprob: -7.342508792877197
    6. '[temp' → logprob: -8.217508316040039
    7. 'v' → logprob: -8.467508316040039
    8. '[x' → logprob: -8.592508316040039
    9. ',d' → logprob: -8.717508316040039
    10. ',' → logprob: -9.092508316040039

Token 528: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04576408863067627
    2. '[next' → logprob: -3.6707639694213867
    3. 'ext' → logprob: -5.045763969421387
    4. '_next' → logprob: -6.045763969421387
    5. ',next' → logprob: -6.420763969421387
    6. 'from' → logprob: -6.420763969421387
    7. '_to' → logprob: -6.670763969421387
    8. 'destination' → logprob: -6.920763969421387
    9. 'pred' → logprob: -7.670763969421387
    10. 'to' → logprob: -7.670763969421387

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05320955067873001
    2. ',tmp' → logprob: -3.0532095432281494
    3. ' ,' → logprob: -6.1782097816467285
    4. '][' → logprob: -6.6782097816467285
    5. '[tmp' → logprob: -6.8032097816467285
    6. '   ' → logprob: -10.30320930480957
    7. 'tmp' → logprob: -10.67820930480957
    8. ']' → logprob: -10.67820930480957
    9. ',v' → logprob: -10.80320930480957
    10. ',temp' → logprob: -11.55320930480957

Token 530: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.001365116098895669
    2. ' tmp' → logprob: -6.7513651847839355
    3. 'destination' → logprob: -9.501364707946777
    4. '_tmp' → logprob: -10.251364707946777
    5. '[tmp' → logprob: -10.876364707946777
    6. 'v' → logprob: -11.251364707946777
    7. 'temp' → logprob: -11.501364707946777
    8. '   ' → logprob: -11.751364707946777
    9. 'min' → logprob: -12.001364707946777
    10. 'pred' → logprob: -12.251364707946777

Token 531: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10660336911678314
    2. ']+' → logprob: -2.8566033840179443
    3. ']-' → logprob: -3.6066033840179443
    4. ']
' → logprob: -4.356603145599365
    5. '-' → logprob: -6.356603145599365
    6. ' -' → logprob: -7.356603145599365
    7. '+' → logprob: -7.731603145599365
    8. ' ]' → logprob: -8.106603622436523
    9. '];' → logprob: -9.606603622436523
    10. '].' → logprob: -9.606603622436523

Token 532: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.012843120843172073
    2. '               ' → logprob: -4.387843132019043
    3. ' v' → logprob: -8.262843132019043
    4. '           ' → logprob: -9.762843132019043
    5. '   ' → logprob: -12.387843132019043
    6. '       ' → logprob: -12.637843132019043
    7. '	v' → logprob: -12.637843132019043
    8. '              ' → logprob: -13.512843132019043
    9. '                ' → logprob: -13.762843132019043
    10. '                   ' → logprob: -14.012843132019043

Token 534: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00018816311785485595
    2. '_next' → logprob: -8.875187873840332
    3. ' next' → logprob: -11.125187873840332
    4. '=' → logprob: -11.250187873840332
    5. '	next' → logprob: -12.375187873840332
    6. '[next' → logprob: -12.375187873840332
    7. ' =' → logprob: -13.000187873840332
    8. '(next' → logprob: -13.375187873840332
    9. 'ext' → logprob: -13.375187873840332
    10. 'v' → logprob: -13.500187873840332

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254156768321991
    2. ' =' → logprob: -1.6004157066345215
    3. '+=' → logprob: -14.600415229797363
    4. ',' → logprob: -14.725415229797363
    5. '.=' → logprob: -14.725415229797363
    6. ' +=' → logprob: -14.725415229797363
    7. '=}' → logprob: -14.850415229797363
    8. '＝' → logprob: -15.350415229797363
    9. ' ' → logprob: -15.350415229797363
    10. '   ' → logprob: -16.72541618347168

Token 536: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0033829149324446917
    2. ' tmp' → logprob: -5.878382682800293
    3. 'int' → logprob: -7.503382682800293
    4. ' int' → logprob: -11.503382682800293
    5. '_tmp' → logprob: -12.003382682800293
    6. '   ' → logprob: -12.878382682800293
    7. '	tmp' → logprob: -12.878382682800293
    8. ' ' → logprob: -13.253382682800293
    9. 'pred' → logprob: -14.003382682800293
    10. 'np' → logprob: -14.753382682800293

Token 537: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: ' remaining' (ID: 15448)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6260323524475098
    2. 'else' → logprob: -2.3760323524475098
    3. '<|end|>' → logprob: -2.5010323524475098
    4. '       ' → logprob: -2.6260323524475098
    5. '   ' → logprob: -2.7510323524475098
    6. ':' → logprob: -2.8760323524475098
    7. ')' → logprob: -3.3760323524475098
    8. '           ' → logprob: -4.37603235244751
    9. '    ' → logprob: -4.87603235244751
    10. '```' → logprob: -5.25103235244751

Token 540: '_last' (ID: 26359)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0039403135888278484
    2. '_' → logprob: -5.628940105438232
    3. '=' → logprob: -8.87894058227539
    4. '-=' → logprob: -9.50394058227539
    5. 'next' → logprob: -10.12894058227539
    6. '_=' → logprob: -10.50394058227539
    7. ' -=' → logprob: -10.87894058227539
    8. '_tokens' → logprob: -11.37894058227539
    9. ' next' → logprob: -12.25394058227539
    10. 'Next' → logprob: -12.25394058227539

Token 541: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.09519797563552856
    2. '-=' → logprob: -2.470197916030884
    3. '-' → logprob: -6.345198154449463
    4. '=' → logprob: -6.470198154449463
    5. ' =' → logprob: -7.095198154449463
    6. '   ' → logprob: -7.345198154449463
    7. ' +=' → logprob: -8.095197677612305
    8. ' ' → logprob: -8.845197677612305
    9. '_' → logprob: -8.970197677612305
    10. '  ' → logprob: -8.970197677612305

Token 542: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16023336350917816
    2. ' ' → logprob: -1.9102333784103394
    3. ' ' → logprob: -12.160233497619629
    4. '   ' → logprob: -13.160233497619629
    5. '0' → logprob: -14.285233497619629
    6. '           ' → logprob: -15.535233497619629
    7. '<|end|>' → logprob: -15.660233497619629
    8. '	' → logprob: -15.785233497619629
    9. '       ' → logprob: -16.035232543945312
    10. '  ' → logprob: -16.285232543945312

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004898841143585742
    2. ' ' → logprob: -7.625489711761475
    3. '0' → logprob: -13.625490188598633
    4. '   ' → logprob: -14.875490188598633
    5. '```' → logprob: -15.875490188598633
    6. '       ' → logprob: -16.750490188598633
    7. '           ' → logprob: -17.250490188598633
    8. ' ' → logprob: -17.312990188598633
    9. '=' → logprob: -17.375490188598633
    10. '<|end|>' → logprob: -17.812990188598633

Token 544: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29678666591644287
    2. '       ' → logprob: -1.6717866659164429
    3. 'Trace' → logprob: -3.9217867851257324
    4. 'else' → logprob: -4.171786785125732
    5. '<|end|>' → logprob: -4.171786785125732
    6. ')' → logprob: -5.796786785125732
    7. '           ' → logprob: -5.921786785125732
    8. ' else' → logprob: -6.046786785125732
    9. 'elif' → logprob: -6.421786785125732
    10. '[' → logprob: -7.046786785125732

Token 546: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22758027911186218
    2. '<|end|>' → logprob: -1.7275803089141846
    3. '   ' → logprob: -4.3525800704956055
    4. ' if' → logprob: -4.8525800704956055
    5. 'if' (adapté à ' if') → logprob: -5.9775800704956055
    6. 'else' → logprob: -6.9775800704956055
    7. ')' → logprob: -7.6025800704956055
    8. '```' → logprob: -7.8525800704956055
    9. ' else' → logprob: -8.602580070495605
    10. '<|end|>' → logprob: -8.852580070495605

Token 547: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.016282333061099052
    2. ' remaining' → logprob: -4.141282558441162
    3. 'return' → logprob: -8.391282081604004
    4. ' returning' → logprob: -11.766282081604004
    5. '   ' → logprob: -12.141282081604004
    6. '0' → logprob: -12.516282081604004
    7. ' ' → logprob: -13.891282081604004
    8. 'last' → logprob: -14.391282081604004
    9. '  ' → logprob: -14.766282081604004
    10. 'not' → logprob: -15.016282081604004

Token 548: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.000283265660982579
    2. '_next' → logprob: -8.250283241271973
    3. '_' → logprob: -11.375283241271973
    4. 'last' → logprob: -12.000283241271973
    5. '==' → logprob: -13.500283241271973
    6. '```' → logprob: -13.500283241271973
    7. '_remaining' → logprob: -15.625283241271973
    8. '_now' → logprob: -15.625283241271973
    9. '_LAST' → logprob: -15.750283241271973
    10. '_first' → logprob: -15.875283241271973

Token 549: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16281935572624207
    2. '==' → logprob: -1.9128193855285645
    3. ' <=' → logprob: -6.0378193855285645
    4. '<=' → logprob: -8.537818908691406
    5. ' >' → logprob: -12.537818908691406
    6. '>' → logprob: -13.037818908691406
    7. ' ' → logprob: -13.912818908691406
    8. '   ' → logprob: -14.287818908691406
    9. '=' → logprob: -14.662818908691406
    10. '<|end|>' → logprob: -15.537818908691406

Token 550: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16026170551776886
    2. ' ' → logprob: -1.9102617502212524
    3. '=' → logprob: -10.535262107849121
    4. '   ' → logprob: -12.035262107849121
    5. '1' → logprob: -13.285262107849121
    6. ' ' → logprob: -13.785262107849121
    7. '>' → logprob: -14.410262107849121
    8. '	' → logprob: -15.410262107849121
    9. '  ' → logprob: -15.472762107849121
    10. '    ' → logprob: -15.722762107849121

Token 551: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001967531396076083
    2. ' ' → logprob: -6.251967430114746
    3. '=' → logprob: -11.501967430114746
    4. '1' → logprob: -11.626967430114746
    5. '   ' → logprob: -11.751967430114746
    6. '-' → logprob: -12.626967430114746
    7. '>' → logprob: -13.126967430114746
    8. '==' → logprob: -13.501967430114746
    9. '  ' → logprob: -14.376967430114746
    10. '	' → logprob: -14.439467430114746

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7544034719467163
    2. ':
' → logprob: -1.3794034719467163
    3. '           ' → logprob: -1.5044034719467163
    4. '       ' → logprob: -3.754403591156006
    5. ' and' → logprob: -4.129403591156006
    6. '=' → logprob: -5.254403591156006
    7. ' or' → logprob: -5.504403591156006
    8. '==' → logprob: -5.629403591156006
    9. 'and' → logprob: -7.254403591156006
    10. '<|end|>' → logprob: -7.629403591156006

Token 553: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15031401813030243
    2. '           ' → logprob: -2.0253140926361084
    3. 'return' → logprob: -5.150313854217529
    4. '   ' → logprob: -7.150313854217529
    5. ' returning' → logprob: -8.275314331054688
    6. 'del' → logprob: -8.275314331054688
    7. '<|end|>' → logprob: -8.650314331054688
    8. '               ' → logprob: -9.275314331054688
    9. ':' → logprob: -10.025314331054688
    10. 'if' → logprob: -10.525314331054688

Token 554: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7512671947479248
    2. 'del' → logprob: -1.0012671947479248
    3. 'return' → logprob: -3.001267194747925
    4. ' delivering' → logprob: -3.501267194747925
    5. 'PF' → logprob: -3.751267194747925
    6. ' PF' → logprob: -3.876267194747925
    7. '           ' → logprob: -4.376267433166504
    8. '   ' → logprob: -5.376267433166504
    9. 'if' (adapté à ' if') → logprob: -5.501267433166504
    10. ' returning' → logprob: -5.626267433166504

Token 555: ' destination' (ID: 13330)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.5938406586647034
    2. 'return' → logprob: -1.3438405990600586
    3. 'destination' → logprob: -2.5938405990600586
    4. 'v' → logprob: -2.5938405990600586
    5. 'not' → logprob: -3.8438405990600586
    6. ' destination' → logprob: -5.718840599060059
    7. ' v' → logprob: -6.468840599060059
    8. 'T' → logprob: -6.593840599060059
    9. ' returning' → logprob: -6.593840599060059
    10. ' not' → logprob: -6.593840599060059

Token 556: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28153273463249207
    2. '==' → logprob: -1.4065327644348145
    3. ' !=' → logprob: -8.156532287597656
    4. '!=' → logprob: -9.531532287597656
    5. ' ' → logprob: -12.156532287597656
    6. '==-' → logprob: -13.156532287597656
    7. '==
' → logprob: -13.156532287597656
    8. ' in' → logprob: -13.281532287597656
    9. ')' → logprob: -13.406532287597656
    10. '=' → logprob: -13.531532287597656

Token 557: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03108450211584568
    2. '0' → logprob: -4.1560845375061035
    3. ' ' → logprob: -4.5310845375061035
    4. 'v' → logprob: -5.7810845375061035
    5. 'last' → logprob: -7.2810845375061035
    6. 'return' → logprob: -8.781084060668945
    7. 'T' → logprob: -9.906084060668945
    8. 'None' → logprob: -10.281084060668945
    9. ' v' → logprob: -10.406084060668945
    10. '-' → logprob: -10.968584060668945

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01352535281330347
    2. '0' → logprob: -4.763525485992432
    3. 'v' → logprob: -5.638525485992432
    4. 'return' → logprob: -7.513525485992432
    5. ' ' → logprob: -8.013525009155273
    6. 'last' → logprob: -8.263525009155273
    7. 'None' → logprob: -9.138525009155273
    8. 'next' → logprob: -10.263525009155273
    9. 'T' → logprob: -11.763525009155273
    10. '-' → logprob: -12.013525009155273

Token 559: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5471262335777283
    2. ':
' → logprob: -0.9221262335777283
    3. ' and' → logprob: -4.047126293182373
    4. '=' → logprob: -6.797126293182373
    5. '               ' → logprob: -6.797126293182373
    6. '           ' → logprob: -7.172126293182373
    7. '       ' → logprob: -7.547126293182373
    8. ' or' → logprob: -7.547126293182373
    9. '==' → logprob: -7.547126293182373
    10. ',' → logprob: -7.797126293182373

Token 560: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33882611989974976
    2. '           ' → logprob: -2.0888261795043945
    3. '               ' → logprob: -2.3388261795043945
    4. ' delivering' → logprob: -3.9638261795043945
    5. 'return' → logprob: -4.2138261795043945
    6. ' return' → logprob: -4.8388261795043945
    7. '   ' → logprob: -5.0888261795043945
    8. ' returning' → logprob: -5.0888261795043945
    9. 'deliver' → logprob: -6.2138261795043945
    10. ' delivery' → logprob: -6.4638261795043945

Token 561: ' returning' (ID: 22968)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.10594908893108368
    2. 'return' → logprob: -2.6059491634368896
    3. '               ' → logprob: -3.9809491634368896
    4. '           ' → logprob: -5.3559489250183105
    5. ' delivering' → logprob: -6.1059489250183105
    6. 'deliver' → logprob: -7.3559489250183105
    7. '   ' → logprob: -8.855949401855469
    8. 'delivery' → logprob: -9.730949401855469
    9. ' returning' → logprob: -9.980949401855469
    10. '       ' → logprob: -10.105949401855469

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387116014957428
    2. ' =' → logprob: -1.1371159553527832
    3. '=False' → logprob: -9.012116432189941
    4. '=True' → logprob: -9.512116432189941
    5. ',' → logprob: -10.887116432189941
    6. '   ' → logprob: -11.512116432189941
    7. '       ' → logprob: -12.262116432189941
    8. '           ' → logprob: -12.262116432189941
    9. '               ' → logprob: -13.137116432189941
    10. ')' → logprob: -13.262116432189941

Token 563: ' False' (ID: 7983)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07957743108272552
    2. 'False' → logprob: -2.5795774459838867
    3. '0' → logprob: -7.579577445983887
    4. 'True' → logprob: -9.454577445983887
    5. ' None' → logprob: -9.579577445983887
    6. 'T' → logprob: -11.204577445983887
    7. '1' → logprob: -12.079577445983887
    8. ' False' → logprob: -12.454577445983887
    9. 'v' → logprob: -13.329577445983887
    10. 'none' → logprob: -13.829577445983887

Token 564: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' delivering' (ID: 28556)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.6106720566749573
    2. '               ' → logprob: -0.8606720566749573
    3. '           ' → logprob: -3.4856719970703125
    4. 'deliver' → logprob: -6.3606719970703125
    5. '       ' → logprob: -7.6106719970703125
    6. 'else' → logprob: -7.8606719970703125
    7. 'delivery' → logprob: -7.9856719970703125
    8. '   ' → logprob: -8.360671997070312
    9. ' delivering' → logprob: -8.610671997070312
    10. '                   ' → logprob: -10.235671997070312

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16103139519691467
    2. ' =' → logprob: -1.9110313653945923
    3. '=False' → logprob: -7.161031246185303
    4. ',' → logprob: -11.161031723022461
    5. '=True' → logprob: -11.661031723022461
    6. '<|end|>' → logprob: -12.536031723022461
    7. ' ' → logprob: -14.036031723022461
    8. ')' → logprob: -14.411031723022461
    9. '   ' → logprob: -14.411031723022461
    10. '==' → logprob: -14.786031723022461

Token 568: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1604665219783783
    2. '0' → logprob: -1.9104665517807007
    3. ' False' → logprob: -8.410466194152832
    4. 'True' → logprob: -11.535466194152832
    5. ' ' → logprob: -12.160466194152832
    6. 'None' → logprob: -12.535466194152832
    7. '   ' → logprob: -14.410466194152832
    8. '(False' → logprob: -15.660466194152832
    9. '1' → logprob: -15.785466194152832
    10. 'false' → logprob: -16.66046714782715

Token 569: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3678428530693054
    2. 'else' → logprob: -1.3678429126739502
    3. '<|end|>' → logprob: -3.49284291267395
    4. ' else' → logprob: -4.492842674255371
    5. '       ' → logprob: -5.992842674255371
    6. 'remaining' → logprob: -6.242842674255371
    7. 'elif' (adapté à ' elif') → logprob: -6.242842674255371
    8. '               ' → logprob: -6.492842674255371
    9. ')' → logprob: -7.367842674255371
    10. 'v' → logprob: -7.367842674255371

Token 572: ' not' (ID: 625)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.391157329082489
    2. 'v' → logprob: -1.8911573886871338
    3. ' destination' → logprob: -2.516157388687134
    4. 'last' → logprob: -3.891157388687134
    5. 'remaining' → logprob: -3.891157388687134
    6. ' v' → logprob: -4.016157150268555
    7. 'return' → logprob: -4.891157150268555
    8. ' returning' → logprob: -5.391157150268555
    9. 'not' → logprob: -5.891157150268555
    10. ' remaining' → logprob: -6.016157150268555

Token 573: ' returning' (ID: 22968)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.022466203197836876
    2. 'del' → logprob: -4.02246618270874
    3. ' returning' → logprob: -5.77246618270874
    4. 'destination' → logprob: -7.89746618270874
    5. 'returned' → logprob: -8.647466659545898
    6. ' return' → logprob: -8.897466659545898
    7. 'remaining' → logprob: -9.272466659545898
    8. 'delivery' → logprob: -9.397466659545898
    9. 'last' → logprob: -10.147466659545898
    10. 'v' → logprob: -10.147466659545898

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05504228547215462
    2. ':
' → logprob: -3.055042266845703
    3. ' and' → logprob: -5.180042266845703
    4. ' or' → logprob: -8.305042266845703
    5. 'and' → logprob: -8.555042266845703
    6. ' :' → logprob: -9.555042266845703
    7. '   ' → logprob: -9.805042266845703
    8. '       ' → logprob: -9.805042266845703
    9. ':

' → logprob: -10.180042266845703
    10. '):
' → logprob: -10.680042266845703

Token 575: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023793347645550966
    2. 'remaining' → logprob: -7.252379417419434
    3. 'return' → logprob: -7.377379417419434
    4. ':
' → logprob: -7.752379417419434
    5. '):
' → logprob: -9.252379417419434
    6. ':' → logprob: -9.377379417419434
    7. '           ' → logprob: -9.627379417419434
    8. 'last' → logprob: -9.877379417419434
    9. ':return' → logprob: -9.877379417419434
    10. ' remaining' → logprob: -10.502379417419434

Token 576: ' i' (ID: 575)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.5682191252708435
    2. 'remaining' → logprob: -1.4432191848754883
    3. '               ' → logprob: -2.3182191848754883
    4. 'return' → logprob: -3.1932191848754883
    5. '                   ' → logprob: -3.6932191848754883
    6. 'v' → logprob: -4.443219184875488
    7. 'PF' → logprob: -4.443219184875488
    8. 'tmp' → logprob: -6.068219184875488
    9. ' destination' → logprob: -6.193219184875488
    10. '   ' → logprob: -6.193219184875488

Token 577: '_j' (ID: 12021)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0669745206832886
    2. 'f' → logprob: -1.6919745206832886
    3. '+=' → logprob: -1.6919745206832886
    4. 'destination' → logprob: -2.066974639892578
    5. ' +=' → logprob: -2.816974639892578
    6. ' =' → logprob: -3.316974639892578
    7. ' destination' → logprob: -4.191974639892578
    8. 'return' → logprob: -4.691974639892578
    9. ' returning' → logprob: -4.816974639892578
    10. 'remaining' → logprob: -4.941974639892578

Token 578: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25552695989608765
    2. ' =' → logprob: -2.3805270195007324
    3. '=' → logprob: -2.6305270195007324
    4. 'nd' → logprob: -3.3805270195007324
    5. 'n' → logprob: -4.755527019500732
    6. 'm' → logprob: -5.505527019500732
    7. 'd' → logprob: -6.380527019500732
    8. 'dx' → logprob: -6.505527019500732
    9. '+=' → logprob: -6.505527019500732
    10. 't' → logprob: -6.630527019500732

Token 579: ' [-' (ID: 20191)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.9870500564575195
    2. 'min' → logprob: -1.6120500564575195
    3. '(_' → logprob: -2.3620500564575195
    4. '(np' → logprob: -2.4870500564575195
    5. '(v' → logprob: -2.7370500564575195
    6. '_dist' → logprob: -3.1120500564575195
    7. '_min' → logprob: -3.1120500564575195
    8. '_del' → logprob: -4.2370500564575195
    9. '_pred' → logprob: -4.7370500564575195
    10. '(min' → logprob: -4.7370500564575195

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22095613181591034
    2. 'min' → logprob: -2.8459560871124268
    3. 'v' → logprob: -3.3459560871124268
    4. '_dist' → logprob: -3.4709560871124268
    5. 'dist' → logprob: -3.7209560871124268
    6. 'np' → logprob: -4.595956325531006
    7. '999' → logprob: -4.720956325531006
    8. '_dest' → logprob: -5.595956325531006
    9. '_pred' → logprob: -6.095956325531006
    10. '_min' → logprob: -6.470956325531006

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06517422944307327
    2. ' ,' → logprob: -3.4401743412017822
    3. '1' → logprob: -4.065174102783203
    4. ']' → logprob: -5.315174102783203
    5. ',v' → logprob: -5.940174102783203
    6. ' for' → logprob: -7.190174102783203
    7. ',-' → logprob: -7.315174102783203
    8. ',d' → logprob: -7.315174102783203
    9. 'destination' → logprob: -7.440174102783203
    10. '0' → logprob: -7.565174102783203

Token 582: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6081990599632263
    2. '1' → logprob: -1.608199119567871
    3. '0' → logprob: -1.983199119567871
    4. 'v' → logprob: -2.983199119567871
    5. 'destination' → logprob: -3.858199119567871
    6. 'min' → logprob: -4.483199119567871
    7. ' ' → logprob: -5.233199119567871
    8. 'i' → logprob: -5.858199119567871
    9. ' -' → logprob: -6.108199119567871
    10. 'remaining' → logprob: -6.108199119567871

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03137589618563652
    2. '2' → logprob: -3.6563758850097656
    3. '999' → logprob: -6.406375885009766
    4. 'i' → logprob: -7.281375885009766
    5. '100' → logprob: -7.906375885009766
    6. 'v' → logprob: -8.031375885009766
    7. '-' → logprob: -8.156375885009766
    8. ' ' → logprob: -8.156375885009766
    9. '0' → logprob: -8.531375885009766
    10. 'T' → logprob: -9.218875885009766

Token 584: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4005263149738312
    2. ',' → logprob: -1.1505262851715088
    3. ']
' → logprob: -5.275526523590088
    4. '               ' → logprob: -6.025526523590088
    5. ' ,' → logprob: -6.525526523590088
    6. '][' → logprob: -6.525526523590088
    7. ' ]' → logprob: -7.900526523590088
    8. '<|end|>' → logprob: -7.900526523590088
    9. ',-' → logprob: -8.02552604675293
    10. '                   ' → logprob: -8.27552604675293

Token 585: ' mn' (ID: 34208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.389412522315979
    2. 'remaining' → logprob: -1.514412522315979
    3. 'i' → logprob: -2.2644124031066895
    4. 'for' → logprob: -2.6394124031066895
    5. 'destination' → logprob: -3.0144124031066895
    6. ' for' → logprob: -3.1394124031066895
    7. ' i' → logprob: -3.1394124031066895
    8. 'v' → logprob: -3.3894124031066895
    9. '                   ' → logprob: -3.8894124031066895
    10. ' remaining' → logprob: -4.1394124031066895

Token 586: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6052966117858887
    2. '=' → logprob: -0.9802966117858887
    3. ']' → logprob: -4.730296611785889
    4. '_' → logprob: -4.855296611785889
    5. ')' → logprob: -5.105296611785889
    6. '=[]' → logprob: -5.105296611785889
    7. '[' → logprob: -5.230296611785889
    8. ',' → logprob: -5.355296611785889
    9. '<|end|>' → logprob: -5.855296611785889
    10. '=np' → logprob: -5.980296611785889

Token 587: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19970853626728058
    2. '=' → logprob: -2.3247084617614746
    3. ',' → logprob: -2.8247084617614746
    4. '<|end|>' → logprob: -5.074708461761475
    5. '=[]' → logprob: -5.699708461761475
    6. '[' → logprob: -6.074708461761475
    7. ')' → logprob: -6.449708461761475
    8. ']' → logprob: -7.074708461761475
    9. '[]' → logprob: -7.574708461761475
    10. ':' → logprob: -7.574708461761475

Token 588: ' mn' (ID: 34208)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.031256079673767
    2. '999' → logprob: -1.781256079673767
    3. 'mn' → logprob: -2.1562561988830566
    4. '-' → logprob: -2.6562561988830566
    5. ' float' → logprob: -2.6562561988830566
    6. 'np' → logprob: -2.9062561988830566
    7. '1' → logprob: -3.2812561988830566
    8. ' mn' → logprob: -3.5312561988830566
    9. ' ' → logprob: -4.031256198883057
    10. 'inf' → logprob: -4.281256198883057

Token 589: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13637739419937134
    2. ' =' → logprob: -2.6363773345947266
    3. '1' → logprob: -3.5113773345947266
    4. '=float' → logprob: -4.386377334594727
    5. '=np' → logprob: -4.636377334594727
    6. '2' → logprob: -6.261377334594727
    7. 'inf' → logprob: -8.386377334594727
    8. '=int' → logprob: -8.386377334594727
    9. ',' → logprob: -8.636377334594727
    10. '=sys' → logprob: -9.136377334594727

Token 590: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523613691329956
    2. '=' → logprob: -0.898613691329956
    3. ',' → logprob: -7.898613929748535
    4. '=-' → logprob: -10.648613929748535
    5. '=None' → logprob: -11.023613929748535
    6. '<|end|>' → logprob: -11.273613929748535
    7. '=int' → logprob: -11.398613929748535
    8. '=[]' → logprob: -11.648613929748535
    9. '=np' → logprob: -11.648613929748535
    10. ')' → logprob: -12.023613929748535

Token 591: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.014453292824327946
    2. ' float' → logprob: -5.389453411102295
    3. '999' → logprob: -5.639453411102295
    4. '1' → logprob: -6.139453411102295
    5. '100' → logprob: -6.764453411102295
    6. 'int' → logprob: -6.889453411102295
    7. '10' → logprob: -8.014452934265137
    8. 'np' → logprob: -8.014452934265137
    9. '0' → logprob: -8.389452934265137
    10. '-' → logprob: -8.389452934265137

Token 592: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.026996280997991562
    2. '999' → logprob: -4.77699613571167
    3. 'int' → logprob: -5.27699613571167
    4. '10' → logprob: -5.40199613571167
    5. '1' → logprob: -5.52699613571167
    6. '100' → logprob: -6.27699613571167
    7. 'np' → logprob: -7.15199613571167
    8. '0' → logprob: -8.026996612548828
    9. '(float' → logprob: -8.026996612548828
    10. '-' → logprob: -8.026996612548828

Token 593: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7043868899345398
    2. '000' → logprob: -1.2043869495391846
    3. '00' → logprob: -2.3293869495391846
    4. '**' → logprob: -2.5793869495391846
    5. ',' → logprob: -3.5793869495391846
    6. '[' → logprob: -6.5793867111206055
    7. '=' → logprob: -7.4543867111206055
    8. ' ' → logprob: -8.079386711120605
    9. ' **' → logprob: -8.329386711120605
    10. ' ,' → logprob: -8.579386711120605

Token 594: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.19375713169574738
    2. '10' → logprob: -2.6937570571899414
    3. '6' → logprob: -3.1937570571899414
    4. '7' → logprob: -3.6937570571899414
    5. '8' → logprob: -4.193757057189941
    6. '15' → logprob: -4.443757057189941
    7. '12' → logprob: -5.068757057189941
    8. '5' → logprob: -5.943757057189941
    9. '18' → logprob: -5.943757057189941
    10. '20' → logprob: -6.693757057189941

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07402314990758896
    2. '<|end|>' → logprob: -2.8240232467651367
    3. '<|end|>' → logprob: -5.699023246765137
    4. ',
' → logprob: -6.074023246765137
    5. ' ,' → logprob: -6.824023246765137
    6. '[' → logprob: -6.824023246765137
    7. '
' → logprob: -6.949023246765137
    8. ')' → logprob: -7.699023246765137
    9. '=' → logprob: -7.949023246765137
    10. '   ' → logprob: -8.074023246765137

Token 596: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08494656533002853
    2. '-' → logprob: -2.834946632385254
    3. ' ' → logprob: -4.959946632385254
    4. 'None' → logprob: -5.209946632385254
    5. '1' → logprob: -5.709946632385254
    6. ' -' → logprob: -6.334946632385254
    7. '0' → logprob: -6.834946632385254
    8. 'float' → logprob: -6.834946632385254
    9. 'int' → logprob: -7.459946632385254
    10. '[int' → logprob: -7.459946632385254

Token 597: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007623780518770218
    2. '-' → logprob: -6.257623672485352
    3. '1' → logprob: -6.382623672485352
    4. 'None' → logprob: -6.757623672485352
    5. 'int' → logprob: -7.382623672485352
    6. 'np' → logprob: -7.507623672485352
    7. '0' → logprob: -7.757623672485352
    8. '[]' → logprob: -8.007623672485352
    9. 'float' → logprob: -8.507623672485352
    10. '[int' → logprob: -8.632623672485352

Token 598: '**' (ID: 410)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.11785051226615906
    2. '9' → logprob: -2.2428505420684814
    3. '15' → logprob: -5.992850303649902
    4. '12' → logprob: -6.742850303649902
    5. '```' → logprob: -7.617850303649902
    6. '10' → logprob: -8.492850303649902
    7. '6' → logprob: -8.617850303649902
    8. '**' → logprob: -8.742850303649902
    9. '8' → logprob: -9.742850303649902
    10. '7' → logprob: -9.867850303649902

Token 599: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.31204748153686523
    2. '15' → logprob: -2.0620474815368652
    3. '9' → logprob: -3.1870474815368652
    4. '12' → logprob: -3.1870474815368652
    5. '10' → logprob: -3.6870474815368652
    6. '16' → logprob: -5.312047481536865
    7. '14' → logprob: -5.437047481536865
    8. '6' → logprob: -5.562047481536865
    9. '20' → logprob: -5.562047481536865
    10. '8' → logprob: -5.562047481536865

Token 600: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0884037017822266
    2. '           ' → logprob: -1.5884037017822266
    3. '       ' → logprob: -1.9634037017822266
    4. '<|end|>' → logprob: -2.2134037017822266
    5. ' i' → logprob: -2.5884037017822266
    6. ' ' → logprob: -3.7134037017822266
    7. '   ' → logprob: -3.8384037017822266
    8. '                   ' → logprob: -4.463403701782227
    9. 'i' → logprob: -4.588403701782227
    10. '[' → logprob: -4.838403701782227

Token 602: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5362076759338379
    2. 'for' → logprob: -1.036207675933838
    3. '               ' → logprob: -3.161207675933838
    4. '<|end|>' → logprob: -4.661207675933838
    5. '           ' → logprob: -6.036207675933838
    6. '       ' → logprob: -6.286207675933838
    7. '                   ' → logprob: -6.786207675933838
    8. '   ' → logprob: -7.786207675933838
    9. 'v' → logprob: -7.786207675933838
    10. '                ' → logprob: -8.28620719909668

Token 603: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24436642229557037
    2. '=' → logprob: -1.7443664073944092
    3. ',' → logprob: -3.869366407394409
    4. 'for' → logprob: -4.244366645812988
    5. 's' → logprob: -6.994366645812988
    6. '_' → logprob: -7.869366645812988
    7. 'in' → logprob: -7.994366645812988
    8. 'd' → logprob: -8.244366645812988
    9. ' for' → logprob: -8.369366645812988
    10. 'next' → logprob: -8.369366645812988

Token 604: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.0816259384155273
    2. 'idx' → logprob: -2.0816259384155273
    3. ' idx' → logprob: -2.8316259384155273
    4. 'min' → logprob: -2.8316259384155273
    5. ' for' → logprob: -3.0816259384155273
    6. 'v' → logprob: -3.5816259384155273
    7. ' v' → logprob: -3.9566259384155273
    8. 'best' → logprob: -3.9566259384155273
    9. 'dist' → logprob: -4.019125938415527
    10. ' nxt' → logprob: -4.019125938415527

Token 605: 'dx' (ID: 22100)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1614874303340912
    2. ' =' → logprob: -1.9114874601364136
    3. ',' → logprob: -7.036487579345703
    4. ')' → logprob: -9.411487579345703
    5. '<|end|>' → logprob: -9.661487579345703
    6. '<|end|>' → logprob: -10.411487579345703
    7. 'dx' → logprob: -10.661487579345703
    8. '   ' → logprob: -10.786487579345703
    9. ']' → logprob: -10.786487579345703
    10. ' ' → logprob: -10.911487579345703

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.643997073173523
    2. '=' → logprob: -0.768997073173523
    3. ',' → logprob: -4.6439971923828125
    4. '<|end|>' → logprob: -7.2689971923828125
    5. 'for' → logprob: -8.143997192382812
    6. ' for' → logprob: -9.268997192382812
    7. ')' → logprob: -9.268997192382812
    8. '   ' → logprob: -9.268997192382812
    9. ' ' → logprob: -9.393997192382812
    10. 'import' → logprob: -9.768997192382812

Token 607: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23735448718070984
    2. '-' → logprob: -1.9873545169830322
    3. 'None' → logprob: -3.3623545169830322
    4. 'min' → logprob: -4.112354278564453
    5. ' ' → logprob: -4.987354278564453
    6. '1' → logprob: -5.612354278564453
    7. 'np' → logprob: -6.112354278564453
    8. ' -' → logprob: -6.362354278564453
    9. ' None' → logprob: -6.612354278564453
    10. 'v' → logprob: -6.612354278564453

Token 608: '_j' (ID: 12021)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.563296914100647
    2. '=' → logprob: -1.438296914100647
    3. ' =' → logprob: -1.938296914100647
    4. '-' → logprob: -4.438296794891357
    5. ',j' → logprob: -4.813296794891357
    6. '0' → logprob: -5.063296794891357
    7. 'dx' → logprob: -5.313296794891357
    8. '=-' → logprob: -5.313296794891357
    9. '1' → logprob: -5.563296794891357
    10. '_j' → logprob: -5.688296794891357

Token 609: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0989886000752449
    2. ' =' → logprob: -2.4739885330200195
    3. ',' → logprob: -4.8489885330200195
    4. '[' → logprob: -6.8489885330200195
    5. '0' → logprob: -7.2239885330200195
    6. ']' → logprob: -9.84898853302002
    7. '<|end|>' → logprob: -10.22398853302002
    8. ')' → logprob: -10.34898853302002
    9. '=[' → logprob: -10.47398853302002
    10. 'for' → logprob: -10.72398853302002

Token 610: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5922821760177612
    2. '<|end|>' → logprob: -1.0922821760177612
    3. '                ' → logprob: -3.467282295227051
    4. ',' → logprob: -4.342282295227051
    5. ' ' → logprob: -4.842282295227051
    6. '<|end|>' → logprob: -4.967282295227051
    7. ' for' → logprob: -5.342282295227051
    8. '                   ' → logprob: -5.467282295227051
    9. ' =' → logprob: -5.467282295227051
    10. '           ' → logprob: -5.467282295227051

Token 611: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2577846944332123
    2. ' for' → logprob: -1.7577847242355347
    3. '               ' → logprob: -3.257784605026245
    4. 'if' → logprob: -6.007784843444824
    5. '                   ' → logprob: -6.007784843444824
    6. 'while' → logprob: -6.132784843444824
    7. 'min' → logprob: -6.257784843444824
    8. '           ' → logprob: -6.757784843444824
    9. 'idx' → logprob: -7.132784843444824
    10. '   ' → logprob: -7.257784843444824

Token 612: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30181705951690674
    2. 'k' → logprob: -1.8018170595169067
    3. ' i' → logprob: -3.426816940307617
    4. 'j' → logprob: -4.051816940307617
    5. 'idx' → logprob: -4.801816940307617
    6. 'v' → logprob: -5.051816940307617
    7. 'x' → logprob: -5.301816940307617
    8. 'u' → logprob: -5.426816940307617
    9. ' k' → logprob: -5.426816940307617
    10. ' j' → logprob: -6.551816940307617

Token 613: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7609557509422302
    2. ' in' → logprob: -0.8859557509422302
    3. ',' → logprob: -2.135955810546875
    4. 'i' → logprob: -7.385955810546875
    5. ',v' → logprob: -8.385955810546875
    6. 'idx' → logprob: -8.885955810546875
    7. '_,' → logprob: -8.885955810546875
    8. 'dx' → logprob: -8.885955810546875
    9. ' ,' → logprob: -9.135955810546875
    10. 'v' → logprob: -9.260955810546875

Token 614: ' O' (ID: 532)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5446860790252686
    2. 'node' → logprob: -2.6696860790252686
    3. 'x' → logprob: -2.6696860790252686
    4. 'v' → logprob: -2.9196860790252686
    5. 'd' → logprob: -3.0446860790252686
    6. 'order' → logprob: -3.6696860790252686
    7. ' j' → logprob: -4.044686317443848
    8. 'dest' → logprob: -4.044686317443848
    9. 'k' → logprob: -4.669686317443848
    10. 'dst' → logprob: -4.794686317443848

Token 615: ' in' (ID: 306)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40046700835227966
    2. ' in' → logprob: -1.900467038154602
    3. 'rd' → logprob: -2.1504669189453125
    4. ',' → logprob: -3.5254669189453125
    5. 'in' → logprob: -4.5254669189453125
    6. 's' → logprob: -5.0254669189453125
    7. 'b' → logprob: -5.2754669189453125
    8. 'order' → logprob: -6.6504669189453125
    9. 'idx' → logprob: -7.0254669189453125
    10. 'i' → logprob: -7.1504669189453125

Token 616: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.05282685533165932
    2. ' enumerate' → logprob: -3.0528268814086914
    3. 'all' → logprob: -5.552826881408691
    4. 'range' → logprob: -8.302826881408691
    5. ' all' → logprob: -10.052826881408691
    6. '[(' → logprob: -11.552826881408691
    7. 'del' → logprob: -11.677826881408691
    8. ' range' → logprob: -11.802826881408691
    9. 'min' → logprob: -12.427826881408691
    10. 'v' → logprob: -12.677826881408691

Token 617: '(all' (ID: 34727)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005650628358125687
    2. ' all' → logprob: -5.880650520324707
    3. 'del' → logprob: -6.130650520324707
    4. '(all' → logprob: -8.130650520324707
    5. 'range' → logprob: -8.630650520324707
    6. 'enumer' → logprob: -10.380650520324707
    7. '	all' → logprob: -10.880650520324707
    8. '   ' → logprob: -10.943150520324707
    9. ' ' → logprob: -11.380650520324707
    10. ' range' → logprob: -11.380650520324707

Token 618: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -9.253090865968261e-06
    2. 'orders' → logprob: -12.375009536743164
    3. '_order' → logprob: -12.875009536743164
    4. 'Orders' → logprob: -13.375009536743164
    5. '_' → logprob: -15.125009536743164
    6. ')' → logprob: -16.750009536743164
    7. '_nodes' → logprob: -16.875009536743164
    8. 'O' → logprob: -17.125009536743164
    9. '_requests' → logprob: -17.125009536743164
    10. '_ord' → logprob: -17.250009536743164

Token 619: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31589561700820923
    2. '):
' → logprob: -1.3158955574035645
    3. '[i' → logprob: -6.9408955574035645
    4. '):
' → logprob: -7.9408955574035645
    5. '       ' → logprob: -8.065896034240723
    6. '()):
' → logprob: -8.690896034240723
    7. '   ' → logprob: -9.190896034240723
    8. '[' → logprob: -9.190896034240723
    9. '[::-' → logprob: -9.315896034240723
    10. '                   ' → logprob: -9.565896034240723

Token 620: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015612791292369366
    2. '           ' → logprob: -4.890612602233887
    3. '<|end|>' → logprob: -5.640612602233887
    4. '               ' → logprob: -6.640612602233887
    5. '<|end|>' → logprob: -7.265612602233887
    6. '                       ' → logprob: -7.390612602233887
    7. ',' → logprob: -7.640612602233887
    8. ' for' → logprob: -8.015612602233887
    9. '   ' → logprob: -8.640612602233887
    10. ':' → logprob: -9.390612602233887

Token 621: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8242233395576477
    2. '<|end|>' → logprob: -1.449223279953003
    3. '                   ' → logprob: -1.824223279953003
    4. ' if' → logprob: -2.949223279953003
    5. ' ' → logprob: -3.324223279953003
    6. '                        ' → logprob: -4.574223518371582
    7. ' for' → logprob: -5.199223518371582
    8. '                    ' → logprob: -5.324223518371582
    9. '               ' → logprob: -5.324223518371582
    10. '    ' → logprob: -5.699223518371582

Token 622: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4953523278236389
    2. 'O' → logprob: -1.3703522682189941
    3. 'i' → logprob: -2.745352268218994
    4. 'not' → logprob: -3.120352268218994
    5. 'del' → logprob: -4.870352268218994
    6. ' len' → logprob: -4.995352268218994
    7. ' not' → logprob: -5.745352268218994
    8. ' O' → logprob: -6.245352268218994
    9. 'all' → logprob: -6.870352268218994
    10. 'v' → logprob: -6.995352268218994

Token 623: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.34561291337013245
    2. 'del' → logprob: -1.47061288356781
    3. 'len' → logprob: -3.9706130027770996
    4. 'set' → logprob: -4.4706130027771
    5. ' O' → logprob: -4.5956130027771
    6. 'all' → logprob: -5.3456130027771
    7. 'i' → logprob: -5.9706130027771
    8. 'any' → logprob: -6.2206130027771
    9. ' delivered' → logprob: -6.3456130027771
    10. ' set' → logprob: -6.5956130027771

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29814615845680237
    2. '[i' → logprob: -2.4231462478637695
    3. 'and' → logprob: -2.9231462478637695
    4. ' or' → logprob: -3.1731462478637695
    5. ' and' → logprob: -3.2981462478637695
    6. '<|end|>' → logprob: -3.7981462478637695
    7. 'or' → logprob: -5.0481462478637695
    8. '[' → logprob: -6.5481462478637695
    9. ':
' → logprob: -6.6731462478637695
    10. ':return' → logprob: -6.9231462478637695

Token 625: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.056290365755558014
    2. ' and' → logprob: -3.4312903881073
    3. '                   ' → logprob: -4.931290149688721
    4. ' continue' → logprob: -5.806290149688721
    5. '<|end|>' → logprob: -5.806290149688721
    6. '                           ' → logprob: -6.306290149688721
    7. '                        ' → logprob: -6.931290149688721
    8. '       ' → logprob: -7.181290149688721
    9. 'continue' → logprob: -7.181290149688721
    10. '                        
' → logprob: -7.181290149688721

Token 626: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15590910613536835
    2. '                       ' → logprob: -2.4059090614318848
    3. 'continue' (adapté à ' continue') → logprob: -3.0309090614318848
    4. '                   ' → logprob: -5.655909061431885
    5. '                           ' → logprob: -6.655909061431885
    6. '	continue' → logprob: -7.905909061431885
    7. '   ' → logprob: -8.530909538269043
    8. ' for' → logprob: -8.655909538269043
    9. '               ' → logprob: -10.030909538269043
    10. ' break' → logprob: -10.155909538269043

Token 627: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01382765918970108
    2. '<|end|>' → logprob: -5.263827800750732
    3. '                       ' → logprob: -6.138827800750732
    4. ' for' → logprob: -6.513827800750732
    5. '               ' → logprob: -7.138827800750732
    6. ' if' → logprob: -7.263827800750732
    7. '   ' → logprob: -7.263827800750732
    8. '           ' → logprob: -7.388827800750732
    9. '       ' → logprob: -8.263827323913574
    10. ',' → logprob: -8.513827323913574

Token 628: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17628757655620575
    2. '                       ' → logprob: -3.0512876510620117
    3. '<|end|>' → logprob: -3.1762876510620117
    4. ' for' → logprob: -3.8012876510620117
    5. ' if' → logprob: -4.301287651062012
    6. '               ' → logprob: -4.676287651062012
    7. '           ' → logprob: -5.426287651062012
    8. '                           ' → logprob: -5.676287651062012
    9. ' ' → logprob: -6.051287651062012
    10. 'for' → logprob: -6.051287651062012

Token 629: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09666585922241211
    2. 'for' → logprob: -3.346665859222412
    3. ' for' → logprob: -3.721665859222412
    4. '                       ' → logprob: -4.846665859222412
    5. ' if' → logprob: -5.096665859222412
    6. 'if' (adapté à ' if') → logprob: -5.096665859222412
    7. '<|end|>' → logprob: -5.596665859222412
    8. 'min' → logprob: -6.221665859222412
    9. '               ' → logprob: -6.596665859222412
    10. '           ' → logprob: -6.721665859222412

Token 630: ' i' (ID: 575)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4061877727508545
    2. '_dist' → logprob: -1.9061877727508545
    3. 'len' → logprob: -2.0311877727508545
    4. 'v' → logprob: -2.5311877727508545
    5. 'i' → logprob: -2.9061877727508545
    6. ' min' → logprob: -3.4061877727508545
    7. ' len' → logprob: -3.5311877727508545
    8. 'destination' → logprob: -3.6561877727508545
    9. ' v' → logprob: -3.9061877727508545
    10. 'dist' → logprob: -3.9061877727508545

Token 631: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2978566288948059
    2. '==' → logprob: -1.9228565692901611
    3. ',' → logprob: -2.922856569290161
    4. '<|end|>' → logprob: -3.422856569290161
    5. ' ' → logprob: -5.79785680770874
    6. '0' → logprob: -5.79785680770874
    7. ' >=' → logprob: -6.17285680770874
    8. ' >' → logprob: -6.17285680770874
    9. ' in' → logprob: -6.67285680770874
    10. ' ,' → logprob: -6.92285680770874

Token 632: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.26513218879699707
    2. 'T' → logprob: -2.765132188796997
    3. ' last' → logprob: -3.015132188796997
    4. 'idx' → logprob: -3.140132188796997
    5. 'destination' → logprob: -3.765132188796997
    6. 'j' → logprob: -4.265131950378418
    7. 'min' → logprob: -4.640131950378418
    8. '0' → logprob: -5.265131950378418
    9. ' idx' → logprob: -5.390131950378418
    10. ' destination' → logprob: -5.640131950378418

Token 633: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.02114701457321644
    2. 'return' → logprob: -3.8961470127105713
    3. 'i' → logprob: -9.396146774291992
    4. 'j' → logprob: -9.521146774291992
    5. 'Return' → logprob: -9.646146774291992
    6. '_RETURN' → logprob: -9.771146774291992
    7. 'T' → logprob: -10.146146774291992
    8. ')return' → logprob: -10.271146774291992
    9. '_j' → logprob: -10.771146774291992
    10. 'last' → logprob: -10.771146774291992

Token 634: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6809782981872559
    2. ' and' → logprob: -0.8059782981872559
    3. '                       ' → logprob: -4.180978298187256
    4. 'and' → logprob: -4.305978298187256
    5. ':
' → logprob: -5.055978298187256
    6. ' or' → logprob: -5.305978298187256
    7. '<|end|>' → logprob: -5.680978298187256
    8. '       ' → logprob: -6.930978298187256
    9. ' continue' → logprob: -7.555978298187256
    10. '                   ' → logprob: -7.805978298187256

Token 635: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03825194388628006
    2. ' and' → logprob: -3.4132518768310547
    3. '<|end|>' → logprob: -7.038251876831055
    4. ' continue' → logprob: -7.288251876831055
    5. ':' → logprob: -7.413251876831055
    6. ' or' → logprob: -7.663251876831055
    7. '                   ' → logprob: -7.788251876831055
    8. 'continue' → logprob: -8.538251876831055
    9. 'and' → logprob: -8.663251876831055
    10. ',' → logprob: -8.663251876831055

Token 636: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7945496439933777
    2. ' continue' → logprob: -1.7945497035980225
    3. ' if' → logprob: -1.9195497035980225
    4. '                           ' → logprob: -2.0445497035980225
    5. 'continue' → logprob: -3.4195497035980225
    6. ' for' → logprob: -3.6695497035980225
    7. '                   ' → logprob: -3.7945497035980225
    8. 'if' → logprob: -4.919549465179443
    9. '                               ' → logprob: -5.419549465179443
    10. 'for' (adapté à ' for') → logprob: -6.294549465179443

Token 637: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2715401351451874
    2. 'o' → logprob: -2.5215401649475098
    3. 'x' → logprob: -3.0215401649475098
    4. 'v' → logprob: -3.5215401649475098
    5. ' j' → logprob: -3.5215401649475098
    6. 'order' → logprob: -4.52154016494751
    7. 'd' → logprob: -4.64654016494751
    8. 'k' → logprob: -5.39654016494751
    9. ' o' → logprob: -5.64654016494751
    10. 'idx' → logprob: -6.52154016494751

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005324597004801035
    2. ' in' → logprob: -5.505324363708496
    3. ',O' → logprob: -7.130324363708496
    4. ' ,' → logprob: -9.005324363708496
    5. 'in' → logprob: -9.380324363708496
    6. ',o' → logprob: -10.380324363708496
    7. ',x' → logprob: -10.630324363708496
    8. '_,' → logprob: -10.755324363708496
    9. ',i' → logprob: -10.880324363708496
    10. ',j' → logprob: -11.005324363708496

Token 639: ' d' (ID: 272)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0797175168991089
    2. 'x' → logprob: -1.2047175168991089
    3. 'v' → logprob: -2.2047176361083984
    4. 'd' → logprob: -2.5797176361083984
    5. ' o' → logprob: -3.4547176361083984
    6. 'k' → logprob: -3.7047176361083984
    7. ' x' → logprob: -4.329717636108398
    8. ' v' → logprob: -4.829717636108398
    9. 'p' → logprob: -4.954717636108398
    10. 'order' → logprob: -4.954717636108398

Token 640: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.236441969871521
    2. 'estination' → logprob: -1.736441969871521
    3. 'st' → logprob: -4.3614420890808105
    4. 'est' → logprob: -4.7364420890808105
    5. 'emand' → logprob: -5.8614420890808105
    6. 'elivery' → logprob: -5.9864420890808105
    7. 'istance' → logprob: -6.1114420890808105
    8. 'el' → logprob: -6.1114420890808105
    9. 'estion' → logprob: -7.1114420890808105
    10. 'ist' → logprob: -7.7364420890808105

Token 641: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.021328609436750412
    2. ' enumerate' → logprob: -3.8963286876678467
    3. ' ' → logprob: -8.771328926086426
    4. '   ' → logprob: -9.021328926086426
    5. 'O' → logprob: -9.396328926086426
    6. '
' → logprob: -10.021328926086426
    7. '                       ' → logprob: -10.146328926086426
    8. 'zip' → logprob: -10.146328926086426
    9. '                   ' → logprob: -10.271328926086426
    10. '[(' → logprob: -10.271328926086426

Token 642: '(O' (ID: 49357)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0021968833170831203
    2. 'all' → logprob: -7.002196788787842
    3. ' O' → logprob: -7.002196788787842
    4. 'range' → logprob: -9.377197265625
    5. '_O' → logprob: -9.752197265625
    6. 'min' → logprob: -9.877197265625
    7. ' ' → logprob: -10.627197265625
    8. '_' → logprob: -10.627197265625
    9. '[' → logprob: -10.877197265625
    10. '   ' → logprob: -11.377197265625

Token 643: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.40037432312965393
    2. '):' → logprob: -1.1503742933273315
    3. '                       ' → logprob: -4.900374412536621
    4. '                           ' → logprob: -5.775374412536621
    5. '()):
' → logprob: -7.650374412536621
    6. '                   ' → logprob: -7.900374412536621
    7. '):
' → logprob: -8.150374412536621
    8. '[' → logprob: -8.525374412536621
    9. 'd' → logprob: -8.525374412536621
    10. '):

' → logprob: -8.650374412536621

Token 644: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.014441780745983124
    2. '<|end|>' → logprob: -4.764441967010498
    3. '                            ' → logprob: -6.389441967010498
    4. '                               ' → logprob: -6.514441967010498
    5. ':' → logprob: -7.389441967010498
    6. '                       ' → logprob: -7.889441967010498
    7. ',' → logprob: -8.01444149017334
    8. '                          ' → logprob: -8.51444149017334
    9. '<|end|>' → logprob: -8.76444149017334
    10. ')' → logprob: -9.38944149017334

Token 645: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.001469153561629355
    2. '                           ' → logprob: -7.126469135284424
    3. ' if' → logprob: -7.751469135284424
    4. '<|end|>' → logprob: -9.376469612121582
    5. '                                ' → logprob: -10.626469612121582
    6. '                                   ' → logprob: -10.751469612121582
    7. '                              ' → logprob: -11.126469612121582
    8. '                            ' → logprob: -11.501469612121582
    9. '                       ' → logprob: -11.501469612121582
    10. ' ' → logprob: -11.626469612121582

Token 646: ' d' (ID: 272)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.9285277128219604
    2. 'd' → logprob: -1.5535277128219604
    3. ' d' → logprob: -1.5535277128219604
    4. ' _' → logprob: -3.42852783203125
    5. '_pred' → logprob: -3.80352783203125
    6. 'v' → logprob: -3.92852783203125
    7. 'min' → logprob: -4.17852783203125
    8. ' min' → logprob: -4.30352783203125
    9. ' v' → logprob: -5.05352783203125
    10. 'np' → logprob: -5.05352783203125

Token 647: ' in' (ID: 306)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17495374381542206
    2. ' ==' → logprob: -2.4249536991119385
    3. '<' → logprob: -3.4249536991119385
    4. '==' → logprob: -3.7999536991119385
    5. ' <=' → logprob: -5.424953937530518
    6. ' !=' → logprob: -5.549953937530518
    7. ' >=' → logprob: -6.674953937530518
    8. '[' → logprob: -6.924953937530518
    9. '<=' → logprob: -7.174953937530518
    10. '                           ' → logprob: -7.299953937530518

Token 648: ' delivered' (ID: 14942)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.007538129575550556
    2. ' delivered' → logprob: -5.132538318634033
    3. 'all' → logprob: -7.757538318634033
    4. '_del' → logprob: -8.007537841796875
    5. 'min' → logprob: -8.507537841796875
    6. '	del' → logprob: -9.007537841796875
    7. 'v' → logprob: -9.882537841796875
    8. 'dest' → logprob: -9.882537841796875
    9. ' del' → logprob: -10.132537841796875
    10. 'destination' → logprob: -10.132537841796875

Token 649: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -0.0010909239063039422
    2. 'here' → logprob: -7.251091003417969
    3. 'Here' → logprob: -9.501091003417969
    4. ')' → logprob: -9.876091003417969
    5. '```' → logprob: -10.376091003417969
    6. '   ' → logprob: -10.501091003417969
    7. '):
' → logprob: -10.751091003417969
    8. '):' → logprob: -11.501091003417969
    9. '                       ' → logprob: -11.688591003417969
    10. '_before' → logprob: -11.813591003417969

Token 650: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2301923632621765
    2. '                               ' → logprob: -1.9801924228668213
    3. ':' → logprob: -3.2301924228668213
    4. '                           ' → logprob: -4.355192184448242
    5. 'and' → logprob: -4.730192184448242
    6. ':
' → logprob: -5.480192184448242
    7. '<|end|>' → logprob: -7.105192184448242
    8. ',' → logprob: -7.730192184448242
    9. ' or' → logprob: -9.105192184448242
    10. '                       ' → logprob: -9.230192184448242

Token 651: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.36609330773353577
    2. ' and' → logprob: -1.2410932779312134
    3. ':' → logprob: -4.616093158721924
    4. '                           ' → logprob: -5.741093158721924
    5. ':
' → logprob: -6.616093158721924
    6. ',' → logprob: -7.116093158721924
    7. ' or' → logprob: -7.366093158721924
    8. '<|end|>' → logprob: -7.866093158721924
    9. 'and' → logprob: -7.991093158721924
    10. '                                ' → logprob: -8.741093635559082

Token 652: ' O' (ID: 532)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.028896503150463104
    2. ' continue' → logprob: -4.903896331787109
    3. '                                   ' → logprob: -5.028896331787109
    4. '<|end|>' → logprob: -5.278896331787109
    5. '                           ' → logprob: -5.528896331787109
    6. 'continue' → logprob: -5.903896331787109
    7. '                                ' → logprob: -7.403896331787109
    8. '                              ' → logprob: -7.778896331787109
    9. ' ' → logprob: -8.15389633178711
    10. '                                       ' → logprob: -8.40389633178711

Token 653: '[j' (ID: 7895)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.24375209212303162
    2. '                               ' → logprob: -2.3687520027160645
    3. '.pop' → logprob: -2.6187520027160645
    4. '[j' → logprob: -4.3687520027160645
    5. '.' → logprob: -4.8687520027160645
    6. '=' → logprob: -4.8687520027160645
    7. '                           ' → logprob: -4.9937520027160645
    8. ' =' → logprob: -5.6187520027160645
    9. '                                   ' → logprob: -5.6187520027160645
    10. '.clear' → logprob: -5.9937520027160645

Token 654: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2630499005317688
    2. ']' → logprob: -1.888049840927124
    3. ']=' → logprob: -2.763049840927124
    4. ' =' → logprob: -4.138050079345703
    5. ']=-' → logprob: -8.013050079345703
    6. '                               ' → logprob: -9.388050079345703
    7. ']==' → logprob: -9.638050079345703
    8. '=-' → logprob: -10.013050079345703
    9. '==' → logprob: -10.013050079345703
    10. '                                   ' → logprob: -10.138050079345703

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004152006935328245
    2. ' =' → logprob: -5.504151821136475
    3. '                               ' → logprob: -10.004152297973633
    4. '                                   ' → logprob: -11.004152297973633
    5. '=None' → logprob: -12.629152297973633
    6. '=-' → logprob: -12.629152297973633
    7. '=False' → logprob: -13.879152297973633
    8. '+=' → logprob: -14.754152297973633
    9. '=
' → logprob: -14.754152297973633
    10. ',' → logprob: -14.879152297973633

Token 656: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018856844399124384
    2. '0' → logprob: -7.751885890960693
    3. 'd' → logprob: -7.876885890960693
    4. 'None' → logprob: -8.251885414123535
    5. ' -' → logprob: -8.376885414123535
    6. '1' → logprob: -8.751885414123535
    7. 'max' → logprob: -9.251885414123535
    8. 'min' → logprob: -9.501885414123535
    9. '999' → logprob: -10.251885414123535
    10. 'v' → logprob: -10.251885414123535

Token 657: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0018021537689492106
    2. '0' → logprob: -8.126802444458008
    3. '1' → logprob: -8.126802444458008
    4. 'None' → logprob: -8.126802444458008
    5. 'min' → logprob: -8.626802444458008
    6. 'float' → logprob: -9.251802444458008
    7. 'max' → logprob: -9.251802444458008
    8. 'd' → logprob: -9.501802444458008
    9. '999' → logprob: -9.501802444458008
    10. 'del' → logprob: -9.501802444458008

Token 658: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: '                           ' (ID: 1686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ' else' (ID: 1203)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6992937326431274
    2. '<|end|>' → logprob: -1.1992937326431274
    3. '                            ' → logprob: -2.574293613433838
    4. '                               ' → logprob: -2.824293613433838
    5. ' ' → logprob: -2.949293613433838
    6. '<|end|>' → logprob: -6.699293613433838
    7. '                                ' → logprob: -6.824293613433838
    8. '                                   ' → logprob: -6.949293613433838
    9. '                              ' → logprob: -6.949293613433838
    10. '                          ' → logprob: -6.949293613433838

Token 661: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.017482571303844452
    2. '<|end|>' → logprob: -4.517482757568359
    3. ':' → logprob: -5.892482757568359
    4. '                           ' → logprob: -6.767482757568359
    5. '                                   ' → logprob: -7.767482757568359
    6. '                                ' → logprob: -7.767482757568359
    7. ' and' → logprob: -8.26748275756836
    8. '                              ' → logprob: -8.64248275756836
    9. ' continue' → logprob: -8.64248275756836
    10. ':
' → logprob: -8.76748275756836

Token 662: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.009052365086972713
    2. ' continue' → logprob: -5.259052276611328
    3. '                           ' → logprob: -7.259052276611328
    4. '<|end|>' → logprob: -7.259052276611328
    5. 'continue' → logprob: -8.009052276611328
    6. '                                   ' → logprob: -8.009052276611328
    7. '                                ' → logprob: -8.009052276611328
    8. '                              ' → logprob: -8.634052276611328
    9. '                                
' → logprob: -8.759052276611328
    10. ' else' → logprob: -9.009052276611328

Token 663: ' d' (ID: 272)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.42226213216781616
    2. ' if' → logprob: -1.172262191772461
    3. ' d' → logprob: -4.797262191772461
    4. ' continue' → logprob: -4.922262191772461
    5. '                                ' → logprob: -5.672262191772461
    6. '                                   ' → logprob: -5.672262191772461
    7. 'if' → logprob: -6.297262191772461
    8. ' ' → logprob: -6.297262191772461
    9. ' n' → logprob: -6.547262191772461
    10. ' return' → logprob: -6.922262191772461

Token 664: 'val' (ID: 1105)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.038535714149475
    2. ' <' → logprob: -1.288535714149475
    3. '=' → logprob: -1.538535714149475
    4. '<' → logprob: -3.0385355949401855
    5. '                               ' → logprob: -3.4135355949401855
    6. ',' → logprob: -4.1635355949401855
    7. '                                   ' → logprob: -5.4135355949401855
    8. '>' → logprob: -5.4135355949401855
    9. ' ' → logprob: -5.6635355949401855
    10. '==' → logprob: -5.6635355949401855

Token 665: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2412741482257843
    2. '=' → logprob: -1.741274118423462
    3. '                               ' → logprob: -4.616274356842041
    4. ',' → logprob: -4.741274356842041
    5. ' <' → logprob: -4.991274356842041
    6. ' >' → logprob: -5.741274356842041
    7. '<|end|>' → logprob: -6.491274356842041
    8. '                                   ' → logprob: -6.616274356842041
    9. '>' → logprob: -7.241274356842041
    10. '                           ' → logprob: -7.491274356842041

Token 666: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02878556214272976
    2. '_pred' → logprob: -5.028785705566406
    3. 'np' → logprob: -5.153785705566406
    4. ' _' → logprob: -5.528785705566406
    5. '_min' → logprob: -5.528785705566406
    6. 'min' → logprob: -5.778785705566406
    7. '_cost' → logprob: -7.028785705566406
    8. '_del' → logprob: -7.403785705566406
    9. ' min' → logprob: -7.903785705566406
    10. '_dst' → logprob: -8.153785705566406

Token 667: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005413403734564781
    2. '_dist' → logprob: -5.25541353225708
    3. 'pred' → logprob: -8.880413055419922
    4. 'cost' → logprob: -11.005413055419922
    5. 'rand' → logprob: -11.630413055419922
    6. 'min' → logprob: -12.505413055419922
    7. 'Dist' → logprob: -12.755413055419922
    8. '_pred' → logprob: -13.005413055419922
    9. '	dist' → logprob: -14.130413055419922
    10. ' dist' → logprob: -14.630413055419922

Token 668: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.7134175300598145
    2. '[i' → logprob: -1.3384175300598145
    3. '[d' → logprob: -1.7134175300598145
    4. '[' → logprob: -3.3384175300598145
    5. '[j' → logprob: -4.5884175300598145
    6. '[min' → logprob: -4.5884175300598145
    7. '[idx' → logprob: -5.8384175300598145
    8. '[last' → logprob: -6.2134175300598145
    9. '[tmp' → logprob: -6.8384175300598145
    10. '[_' → logprob: -7.0884175300598145

Token 669: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.1985718011856079
    2. '_to' → logprob: -2.3235716819763184
    3. '[next' → logprob: -3.1985716819763184
    4. 'to' → logprob: -4.448571681976318
    5. '_from' → logprob: -5.073571681976318
    6. 'from' → logprob: -5.448571681976318
    7. 'd' → logprob: -5.823571681976318
    8. '_next' → logprob: -5.948571681976318
    9. ',' → logprob: -6.198571681976318
    10. ',next' → logprob: -6.573571681976318

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05507082864642143
    2. ',d' → logprob: -3.0550708770751953
    3. ',j' → logprob: -5.555070877075195
    4. '[d' → logprob: -7.055070877075195
    5. ' ,' → logprob: -7.305070877075195
    6. '][' → logprob: -7.680070877075195
    7. 'd' → logprob: -8.305070877075195
    8. ',v' → logprob: -9.055070877075195
    9. '[' → logprob: -9.555070877075195
    10. '[j' → logprob: -10.055070877075195

Token 671: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0028662122786045074
    2. ' d' → logprob: -6.502866268157959
    3. 'destination' → logprob: -7.127866268157959
    4. 'v' → logprob: -8.6278657913208
    5. 'min' → logprob: -9.0028657913208
    6. '1' → logprob: -9.7528657913208
    7. ' destination' → logprob: -11.0028657913208
    8. 'i' → logprob: -11.2528657913208
    9. 'dest' → logprob: -11.2528657913208
    10. '   ' → logprob: -11.3778657913208

Token 672: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026636164635419846
    2. ']
' → logprob: -4.151636123657227
    3. ' ]' → logprob: -5.276636123657227
    4. '+' → logprob: -5.901636123657227
    5. '                               ' → logprob: -7.151636123657227
    6. ']+' → logprob: -7.526636123657227
    7. ' +' → logprob: -7.776636123657227
    8. ']>' → logprob: -7.901636123657227
    9. ' ]
' → logprob: -8.901636123657227
    10. '                           ' → logprob: -9.026636123657227

Token 673: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0002867225557565689
    2. ' if' → logprob: -9.875287055969238
    3. '                           ' → logprob: -9.875287055969238
    4. '                                ' → logprob: -10.000287055969238
    5. '<|end|>' → logprob: -10.125287055969238
    6. '                                   ' → logprob: -10.500287055969238
    7. '```' → logprob: -10.500287055969238
    8. '                                
' → logprob: -11.625287055969238
    9. '                              ' → logprob: -12.250287055969238
    10. '               ' → logprob: -12.375287055969238

Token 674: ' if' (ID: 538)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.06231462582945824
    2. ' if' → logprob: -2.937314510345459
    3. '                                ' → logprob: -5.437314510345459
    4. 'if' (adapté à ' if') → logprob: -6.937314510345459
    5. '                                   ' → logprob: -7.562314510345459
    6. '<|end|>' → logprob: -7.562314510345459
    7. ' ' → logprob: -7.687314510345459
    8. ' d' → logprob: -9.312314987182617
    9. '                              ' → logprob: -9.562314987182617
    10. ' ' → logprob: -9.937314987182617

Token 675: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.043560050427913666
    2. ' d' → logprob: -3.168560028076172
    3. '(d' → logprob: -8.668560028076172
    4. 'v' → logprob: -9.043560028076172
    5. '0' → logprob: -10.293560028076172
    6. ' ' → logprob: -10.543560028076172
    7. '                               ' → logprob: -10.981060028076172
    8. '                           ' → logprob: -10.981060028076172
    9. '(v' → logprob: -11.418560028076172
    10. 'del' → logprob: -11.418560028076172

Token 676: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0008354776655323803
    2. ' <' → logprob: -9.000835418701172
    3. '_val' → logprob: -9.250835418701172
    4. '<' → logprob: -9.250835418701172
    5. ' val' → logprob: -9.625835418701172
    6. '[val' → logprob: -9.625835418701172
    7. '   ' → logprob: -10.250835418701172
    8. '                               ' → logprob: -10.563335418701172
    9. '                                   ' → logprob: -10.625835418701172
    10. '                           ' → logprob: -10.688335418701172

Token 677: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.28231561183929443
    2. '<' → logprob: -1.4073156118392944
    3. '                               ' → logprob: -8.407315254211426
    4. ' <=' → logprob: -8.782315254211426
    5. '<size' → logprob: -8.782315254211426
    6. '<v' → logprob: -8.782315254211426
    7. '<=' → logprob: -9.157315254211426
    8. '<n' → logprob: -9.782315254211426
    9. '                                   ' → logprob: -10.282315254211426
    10. '<class' → logprob: -10.282315254211426

Token 678: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.002251603174954653
    2. ' mn' → logprob: -6.252251625061035
    3. 'min' → logprob: -8.502251625061035
    4. '   ' → logprob: -10.127251625061035
    5. '10' → logprob: -11.502251625061035
    6. 'm' → logprob: -11.752251625061035
    7. ' ' → logprob: -11.752251625061035
    8. 'mx' → logprob: -11.877251625061035
    9. '  ' → logprob: -12.252251625061035
    10. 'nm' → logprob: -12.627251625061035

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5246846675872803
    2. '2' → logprob: -0.8996846675872803
    3. 'val' → logprob: -6.649684906005859
    4. 'd' → logprob: -9.64968490600586
    5. 'mn' → logprob: -10.27468490600586
    6. 'j' → logprob: -10.39968490600586
    7. 'min' → logprob: -10.64968490600586
    8. '```' → logprob: -11.14968490600586
    9. '0' → logprob: -11.39968490600586
    10. '                               ' → logprob: -11.39968490600586

Token 680: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41046056151390076
    2. '                                   ' → logprob: -1.7854605913162231
    3. '                               ' → logprob: -2.5354604721069336
    4. ':' → logprob: -3.1604604721069336
    5. ':
' → logprob: -3.5354604721069336
    6. ' or' → logprob: -4.410460472106934
    7. '```' → logprob: -6.785460472106934
    8. 'and' → logprob: -6.910460472106934
    9. '                                ' → logprob: -7.285460472106934
    10. '                                       ' → logprob: -7.285460472106934

Token 681: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.1684914529323578
    2. '                               ' → logprob: -2.1684913635253906
    3. '                                ' → logprob: -4.418491363525391
    4. '```' → logprob: -4.668491363525391
    5. '                                       ' → logprob: -4.918491363525391
    6. '                                    ' → logprob: -5.168491363525391
    7. ' ' → logprob: -6.043491363525391
    8. '                                           ' → logprob: -7.543491363525391
    9. '<|end|>' → logprob: -7.543491363525391
    10. ' ' → logprob: -7.918491363525391

Token 682: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' (adapté à ' mn') → logprob: -0.37240585684776306
    2. '                                   ' → logprob: -1.7474058866500854
    3. '                               ' → logprob: -2.497405767440796
    4. ' mn' → logprob: -3.122405767440796
    5. '                                       ' → logprob: -5.372406005859375
    6. 'i' → logprob: -5.997406005859375
    7. '               ' → logprob: -7.872406005859375
    8. '           ' → logprob: -7.997406005859375
    9. ' i' → logprob: -8.497406005859375
    10. '                                    ' → logprob: -8.622406005859375

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0097878472879529
    2. '2' → logprob: -4.6347880363464355
    3. 'val' → logprob: -11.634787559509277
    4. '```' → logprob: -12.259787559509277
    5. ',' → logprob: -12.634787559509277
    6. '_val' → logprob: -13.697287559509277
    7. '=i' → logprob: -13.822287559509277
    8. 'i' → logprob: -13.822287559509277
    9. '=' → logprob: -13.884787559509277
    10. '           ' → logprob: -14.009787559509277

Token 684: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10818256437778473
    2. ',' → logprob: -2.358182668685913
    3. ' =' → logprob: -4.983182430267334
    4. '                               ' → logprob: -8.358182907104492
    5. '                                   ' → logprob: -8.608182907104492
    6. ',d' → logprob: -8.858182907104492
    7. '=d' → logprob: -9.233182907104492
    8. ',m' → logprob: -9.233182907104492
    9. ',j' → logprob: -9.858182907104492
    10. '=m' → logprob: -10.733182907104492

Token 685: ' idx' (ID: 14016)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.16083785891532898
    2. 'idx' → logprob: -2.2858378887176514
    3. 'i' → logprob: -3.1608378887176514
    4. 'd' → logprob: -5.910837650299072
    5. 'mx' → logprob: -7.535837650299072
    6. 'j' → logprob: -7.785837650299072
    7. 'm' → logprob: -8.91083812713623
    8. 'min' → logprob: -8.91083812713623
    9. ' mn' → logprob: -9.66083812713623
    10. 'ij' → logprob: -9.78583812713623

Token 686: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08102738857269287
    2. ' =' → logprob: -2.5810275077819824
    3. ',' → logprob: -6.206027507781982
    4. '=j' → logprob: -9.206027030944824
    5. ' ' → logprob: -12.331027030944824
    6. '=i' → logprob: -12.706027030944824
    7. '<|end|>' → logprob: -13.206027030944824
    8. ' ,' → logprob: -13.456027030944824
    9. '=d' → logprob: -13.581027030944824
    10. ',j' → logprob: -13.706027030944824

Token 687: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07934489101171494
    2. 'mn' → logprob: -2.9543449878692627
    3. 'i' → logprob: -4.204344749450684
    4. 'd' → logprob: -5.329344749450684
    5. 'idx' → logprob: -6.579344749450684
    6. ' j' → logprob: -6.704344749450684
    7. 'mx' → logprob: -7.454344749450684
    8. 'jd' → logprob: -8.454344749450684
    9. 'jx' → logprob: -8.454344749450684
    10. 'v' → logprob: -8.954344749450684

Token 688: 'dx' (ID: 22100)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21740713715553284
    2. ' =' → logprob: -1.7174071073532104
    3. 'dx' → logprob: -4.5924072265625
    4. ',' → logprob: -5.4674072265625
    5. 'd' → logprob: -6.8424072265625
    6. '<|end|>' → logprob: -9.0924072265625
    7. '=j' → logprob: -9.5924072265625
    8. '=i' → logprob: -9.8424072265625
    9. '=d' → logprob: -9.9674072265625
    10. 'x' → logprob: -10.3424072265625

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34885016083717346
    2. ' =' → logprob: -1.223850131034851
    3. ',' → logprob: -7.973850250244141
    4. '=d' → logprob: -10.22385025024414
    5. '=i' → logprob: -11.84885025024414
    6. ' ' → logprob: -12.34885025024414
    7. '=j' → logprob: -12.72385025024414
    8. '                               ' → logprob: -13.22385025024414
    9. 'd' → logprob: -13.72385025024414
    10. '                                   ' → logprob: -13.72385025024414

Token 690: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002202593954280019
    2. ' d' → logprob: -6.12720251083374
    3. 'v' → logprob: -12.127202987670898
    4. ' ' → logprob: -12.877202987670898
    5. '   ' → logprob: -13.377202987670898
    6. 'i' → logprob: -13.377202987670898
    7. '  ' → logprob: -13.752202987670898
    8. '           ' → logprob: -14.377202987670898
    9. '	d' → logprob: -14.502202987670898
    10. '          ' → logprob: -15.064702987670898

Token 691: 'val' (ID: 1105)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024183575063943863
    2. ' i' → logprob: -3.774183511734009
    3. ',' → logprob: -7.274183750152588
    4. ',i' → logprob: -8.64918327331543
    5. 'val' → logprob: -10.89918327331543
    6. '[i' → logprob: -11.89918327331543
    7. '=i' → logprob: -12.02418327331543
    8. 'ist' → logprob: -12.02418327331543
    9. '	i' → logprob: -12.52418327331543
    10. 'el' → logprob: -12.77418327331543

Token 692: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020330946892499924
    2. ' ,' → logprob: -4.520330905914307
    3. '<|end|>' → logprob: -5.270330905914307
    4. '                               ' → logprob: -6.145330905914307
    5. '                                   ' → logprob: -7.395330905914307
    6. ',d' → logprob: -8.770331382751465
    7. ',
' → logprob: -9.020331382751465
    8. '```' → logprob: -9.145331382751465
    9. '                                ' → logprob: -9.395331382751465
    10. '                           ' → logprob: -9.520331382751465

Token 693: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001434993464499712
    2. ' i' → logprob: -6.626434803009033
    3. 'j' → logprob: -9.376435279846191
    4. 'd' → logprob: -11.376435279846191
    5. '   ' → logprob: -12.501435279846191
    6. ' ' → logprob: -12.751435279846191
    7. 'v' → logprob: -13.626435279846191
    8. '  ' → logprob: -14.126435279846191
    9. ' j' → logprob: -14.376435279846191
    10. '    ' → logprob: -15.251435279846191

Token 694: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05601245537400246
    2. ',j' → logprob: -2.9310123920440674
    3. ' ,' → logprob: -7.3060126304626465
    4. 'j' → logprob: -8.556012153625488
    5. ',d' → logprob: -9.306012153625488
    6. 'd' → logprob: -9.556012153625488
    7. ' j' → logprob: -9.931012153625488
    8. '0' → logprob: -12.181012153625488
    9. ' ' → logprob: -12.181012153625488
    10. ',
' → logprob: -12.306012153625488

Token 695: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005657802103087306
    2. ' j' → logprob: -7.500566005706787
    3. '   ' → logprob: -11.875565528869629
    4. '                           ' → logprob: -13.375565528869629
    5. ' ' → logprob: -13.500565528869629
    6. '  ' → logprob: -14.125565528869629
    7. '                   ' → logprob: -14.250565528869629
    8. '    ' → logprob: -14.875565528869629
    9. '	j' → logprob: -15.375565528869629
    10. '                       ' → logprob: -15.500565528869629

Token 696: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 697: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 698: ' delivered' (ID: 14942)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.29076898097991943
    2. '                                   ' → logprob: -2.665769100189209
    3. '                                ' → logprob: -3.415769100189209
    4. '                           ' → logprob: -3.915769100189209
    5. '                ' → logprob: -4.165769100189209
    6. '           ' → logprob: -4.290769100189209
    7. '               ' → logprob: -4.415769100189209
    8. '<|end|>' → logprob: -4.790769100189209
    9. '                                    ' → logprob: -4.790769100189209
    10. ')' → logprob: -4.915769100189209

Token 699: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -8.661626634420827e-05
    2. 'here' → logprob: -10.000086784362793
    3. 'Here' → logprob: -10.250086784362793
    4. '_' → logprob: -13.500086784362793
    5. '<|end|>' → logprob: -13.500086784362793
    6. '_else' → logprob: -14.500086784362793
    7. '```' → logprob: -15.000086784362793
    8. '_this' → logprob: -15.125086784362793
    9. '   ' → logprob: -15.375086784362793
    10. '=' → logprob: -15.750086784362793

Token 700: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.0389114618301392
    2. '                   ' → logprob: -1.5389114618301392
    3. '.' → logprob: -1.7889114618301392
    4. '.remove' → logprob: -2.6639113426208496
    5. '               ' → logprob: -3.0389113426208496
    6. '.clear' → logprob: -3.0389113426208496
    7. '           ' → logprob: -3.9139113426208496
    8. '                       ' → logprob: -4.03891134262085
    9. '.pop' → logprob: -4.41391134262085
    10. '<|end|>' → logprob: -4.66391134262085

Token 701: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.003159184008836746
    2. '{' → logprob: -5.878159046173096
    3. ' set' → logprob: -8.378159523010254
    4. '{}' → logprob: -9.253159523010254
    5. '	set' → logprob: -11.753159523010254
    6. '=set' → logprob: -12.378159523010254
    7. ')set' → logprob: -12.878159523010254
    8. 'del' → logprob: -12.878159523010254
    9. '(set' → logprob: -13.253159523010254
    10. '   ' → logprob: -13.378159523010254

Token 702: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6941694617271423
    2. '<|end|>' → logprob: -0.8191694617271423
    3. '           ' → logprob: -2.944169521331787
    4. '                               ' → logprob: -6.319169521331787
    5. ')' → logprob: -6.569169521331787
    6. '       ' → logprob: -6.819169521331787
    7. '<|end|>' → logprob: -6.944169521331787
    8. '                   ' → logprob: -7.694169521331787
    9. '                           ' → logprob: -8.319169044494629
    10. 'else' → logprob: -8.569169044494629

Token 703: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2417338788509369
    2. '                               ' → logprob: -2.3667337894439697
    3. 'return' → logprob: -3.3667337894439697
    4. '           ' → logprob: -3.6167337894439697
    5. '                   ' → logprob: -3.8667337894439697
    6. '                ' → logprob: -4.616734027862549
    7. ' return' → logprob: -5.366734027862549
    8. '<|end|>' → logprob: -5.616734027862549
    9. 'remaining' → logprob: -5.866734027862549
    10. '              ' → logprob: -5.991734027862549

Token 705: ' mn' (ID: 34208)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.15809594094753265
    2. ' idx' → logprob: -2.4080958366394043
    3. 'mn' → logprob: -3.6580958366394043
    4. 'min' → logprob: -5.158095836639404
    5. 'j' → logprob: -5.408095836639404
    6. 'all' → logprob: -5.533095836639404
    7. 'not' → logprob: -5.783095836639404
    8. ' not' → logprob: -6.283095836639404
    9. ' mn' → logprob: -6.408095836639404
    10. 'len' → logprob: -6.408095836639404

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010568885772954673
    2. '2' → logprob: -10.000105857849121
    3. '_' → logprob: -11.687605857849121
    4. '<' → logprob: -12.250105857849121
    5. '0' → logprob: -12.312605857849121
    6. ' ' → logprob: -12.375105857849121
    7. '[' → logprob: -12.562605857849121
    8. '_nodes' → logprob: -12.812605857849121
    9. '```' → logprob: -13.125105857849121
    10. '==' → logprob: -13.312605857849121

Token 707: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.220555067062378
    2. ' <' → logprob: -1.345555067062378
    3. '<' → logprob: -1.470555067062378
    4. '==' → logprob: -1.595555067062378
    5. ' !=' → logprob: -4.970555305480957
    6. '!=' → logprob: -5.595555305480957
    7. ' >=' → logprob: -7.970555305480957
    8. '>=' → logprob: -8.470555305480957
    9. '   ' → logprob: -8.595555305480957
    10. '>' → logprob: -9.595555305480957

Token 708: ' mn' (ID: 34208)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04637527093291283
    2. '10' → logprob: -3.171375274658203
    3. '1' → logprob: -6.671375274658203
    4. '100' → logprob: -7.546375274658203
    5. ' float' → logprob: -7.671375274658203
    6. 'np' → logprob: -8.171375274658203
    7. '999' → logprob: -8.421375274658203
    8. 'int' → logprob: -8.671375274658203
    9. 'T' → logprob: -8.671375274658203
    10. ' ' → logprob: -10.046375274658203

Token 709: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4373123049736023
    2. '1' → logprob: -1.812312364578247
    3. '18' → logprob: -2.687312364578247
    4. 'float' → logprob: -3.187312364578247
    5. '999' → logprob: -3.437312364578247
    6. '100' → logprob: -4.062312126159668
    7. '**' → logprob: -5.062312126159668
    8. '9' → logprob: -5.187312126159668
    9. '2' → logprob: -5.687312126159668
    10. 'int' → logprob: -5.937312126159668

Token 710: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22931213676929474
    2. '                   ' → logprob: -2.2293121814727783
    3. ':
' → logprob: -2.6043121814727783
    4. ' and' → logprob: -4.104311943054199
    5. '               ' → logprob: -6.229311943054199
    6. '                       ' → logprob: -6.729311943054199
    7. '<|end|>' → logprob: -7.229311943054199
    8. '                           ' → logprob: -7.729311943054199
    9. '):' → logprob: -8.1043119430542
    10. ' :' → logprob: -8.1043119430542

Token 711: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001221774611622095
    2. '                       ' → logprob: -8.126221656799316
    3. 'remaining' → logprob: -8.376221656799316
    4. '               ' → logprob: -8.626221656799316
    5. 'next' → logprob: -9.251221656799316
    6. 'v' → logprob: -9.251221656799316
    7. '                           ' → logprob: -9.501221656799316
    8. ' remaining' → logprob: -10.376221656799316
    9. '<|end|>' → logprob: -10.626221656799316
    10. 'destination' → logprob: -10.626221656799316

Token 712: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' (adapté à ' destination') → logprob: -0.7163852453231812
    2. '                   ' → logprob: -0.9663852453231812
    3. 'return' → logprob: -3.3413853645324707
    4. ' destination' → logprob: -3.4663853645324707
    5. 'remaining' → logprob: -3.8413853645324707
    6. 'del' → logprob: -4.341385364532471
    7. '               ' → logprob: -4.716385364532471
    8. '   ' → logprob: -5.466385364532471
    9. '                       ' → logprob: -5.466385364532471
    10. 'delivery' → logprob: -5.966385364532471

Token 713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763472318649292
    2. ' =' → logprob: -0.8263472318649292
    3. ',' → logprob: -7.826347351074219
    4. '=j' → logprob: -12.701347351074219
    5. '=v' → logprob: -13.201347351074219
    6. ' ,' → logprob: -13.826347351074219
    7. '=d' → logprob: -14.701347351074219
    8. '=index' → logprob: -14.826347351074219
    9. '=i' → logprob: -15.076347351074219
    10. ' ' → logprob: -15.201347351074219

Token 714: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.023446958512067795
    2. ' all' → logprob: -4.023447036743164
    3. 'idx' → logprob: -5.648447036743164
    4. 'min' → logprob: -7.398447036743164
    5. 'd' → logprob: -7.523447036743164
    6. ' idx' → logprob: -8.273447036743164
    7. 'v' → logprob: -9.148447036743164
    8. 'j' → logprob: -9.773447036743164
    9. '_all' → logprob: -9.773447036743164
    10. ' d' → logprob: -10.523447036743164

Token 715: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -1.1279553291387856e-05
    2. 'orders' → logprob: -12.250011444091797
    3. 'Orders' → logprob: -12.250011444091797
    4. '_order' → logprob: -13.625011444091797
    5. '_nodes' → logprob: -14.875011444091797
    6. '```' → logprob: -17.375011444091797
    7. '[idx' → logprob: -17.750011444091797
    8. 'order' → logprob: -18.250011444091797
    9. '_requests' → logprob: -18.375011444091797
    10. 'O' → logprob: -18.375011444091797

Token 716: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. '[min' → logprob: -15.750001907348633
    5. 'idx' → logprob: -16.000001907348633
    6. '[i' → logprob: -17.125001907348633
    7. '[index' → logprob: -17.625001907348633
    8. '[ix' → logprob: -17.875001907348633
    9. '[next' → logprob: -18.500001907348633
    10. '[m' → logprob: -18.625001907348633

Token 717: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.043147966265678406
    2. '][' → logprob: -3.4181480407714844
    3. '[d' → logprob: -5.293148040771484
    4. '[' → logprob: -5.918148040771484
    5. '[j' → logprob: -7.043148040771484
    6. '[m' → logprob: -7.418148040771484
    7. '                   ' → logprob: -9.293148040771484
    8. ']' → logprob: -10.043148040771484
    9. '                       ' → logprob: -10.793148040771484
    10. 'idx' → logprob: -11.293148040771484

Token 718: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0013552368618547916
    2. '.pop' → logprob: -7.001355171203613
    3. 'j' → logprob: -8.251355171203613
    4. '[j' → logprob: -8.626355171203613
    5. '__' → logprob: -13.626355171203613
    6. ' pop' → logprob: -14.251355171203613
    7. '	pop' → logprob: -15.001355171203613
    8. 'p' → logprob: -15.126355171203613
    9. '_pop' → logprob: -15.126355171203613
    10. '[' → logprob: -15.626355171203613

Token 719: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.01083333883434534
    2. '()' → logprob: -5.010833263397217
    3. '(idx' → logprob: -5.635833263397217
    4. 'j' → logprob: -8.010833740234375
    5. '()
' → logprob: -9.135833740234375
    6. '(' → logprob: -9.385833740234375
    7. 'idx' → logprob: -11.885833740234375
    8. '(m' → logprob: -12.260833740234375
    9. '[j' → logprob: -13.760833740234375
    10. '()`' → logprob: -14.385833740234375

Token 720: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -14.75000286102295
    3. 'd' → logprob: -14.87500286102295
    4. 'dex' → logprob: -15.12500286102295
    5. 'dz' → logprob: -15.25000286102295
    6. 'idx' → logprob: -15.25000286102295
    7. 'adx' → logprob: -15.50000286102295
    8. 'j' → logprob: -15.62500286102295
    9. 'DX' → logprob: -16.250001907348633
    10. '_dx' → logprob: -16.375001907348633

Token 721: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3973546624183655
    2. ')' → logprob: -1.1473546028137207
    3. '                   ' → logprob: -4.647354602813721
    4. '               ' → logprob: -8.272355079650879
    5. ')
' → logprob: -8.522355079650879
    6. ');' → logprob: -9.647355079650879
    7. '           ' → logprob: -9.897355079650879
    8. '                       ' → logprob: -10.022355079650879
    9. ' )
' → logprob: -10.147355079650879
    10. '<|end|>' → logprob: -10.272355079650879

Token 722: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 723: ' remaining' (ID: 15448)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.705568790435791
    2. 'remaining' (adapté à ' remaining') → logprob: -0.955568790435791
    3. '                   ' → logprob: -2.955568790435791
    4. 'v' → logprob: -3.455568790435791
    5. '               ' → logprob: -3.705568790435791
    6. 'destination' → logprob: -5.455568790435791
    7. 'del' → logprob: -5.830568790435791
    8. '           ' → logprob: -6.330568790435791
    9. 'PF' → logprob: -7.080568790435791
    10. ' remaining' → logprob: -7.455568790435791

Token 724: '_last' (ID: 26359)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.3600960373878479
    2. '_last' → logprob: -1.2350959777832031
    3. 'next' → logprob: -4.985095977783203
    4. 'last' → logprob: -5.360095977783203
    5. '_first' → logprob: -11.860095977783203
    6. 'Next' → logprob: -11.985095977783203
    7. '=' → logprob: -12.235095977783203
    8. '```' → logprob: -12.360095977783203
    9. '_dist' → logprob: -12.735095977783203
    10. '_prev' → logprob: -12.985095977783203

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026337916031479836
    2. ' =' → logprob: -3.6513378620147705
    3. '=_' → logprob: -11.026337623596191
    4. ',' → logprob: -11.526337623596191
    5. '   ' → logprob: -12.276337623596191
    6. '-=' → logprob: -12.901337623596191
    7. ' ' → logprob: -13.526337623596191
    8. '+=' → logprob: -14.276337623596191
    9. '  ' → logprob: -15.026337623596191
    10. ' -=' → logprob: -15.276337623596191

Token 726: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0007341049495153129
    2. 'int' → logprob: -8.250734329223633
    3. '_min' → logprob: -8.375734329223633
    4. '1' → logprob: -9.500734329223633
    5. 'np' → logprob: -10.625734329223633
    6. 'dist' → logprob: -10.875734329223633
    7. '_int' → logprob: -10.875734329223633
    8. '_dst' → logprob: -10.875734329223633
    9. '_m' → logprob: -11.000734329223633
    10. '   ' → logprob: -11.500734329223633

Token 727: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0014280942268669605
    2. '_dist' → logprob: -6.626428127288818
    3. 'rand' → logprob: -9.25142765045166
    4. 'pred' → logprob: -12.75142765045166
    5. 'int' → logprob: -13.50142765045166
    6. 'Dist' → logprob: -14.25142765045166
    7. '	dist' → logprob: -14.75142765045166
    8. '_rand' → logprob: -15.75142765045166
    9. '-dist' → logprob: -15.87642765045166
    10. ' dist' → logprob: -16.251428604125977

Token 728: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.13924963772296906
    2. 'v' → logprob: -2.139249563217163
    3. '[' → logprob: -5.014249801635742
    4. 'destination' → logprob: -6.889249801635742
    5. 'last' → logprob: -7.139249801635742
    6. '[d' → logprob: -7.139249801635742
    7. '[last' → logprob: -7.264249801635742
    8. '[_' → logprob: -7.639249801635742
    9. '1' → logprob: -8.264249801635742
    10. '[tmp' → logprob: -8.389249801635742

Token 729: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0005736440070904791
    2. 'v' → logprob: -7.750573635101318
    3. 'from' → logprob: -10.375574111938477
    4. '_next' → logprob: -10.500574111938477
    5. '[next' → logprob: -10.750574111938477
    6. '1' → logprob: -11.500574111938477
    7. '(next' → logprob: -11.500574111938477
    8. 'destination' → logprob: -11.750574111938477
    9. 'return' → logprob: -12.500574111938477
    10. 'ext' → logprob: -12.625574111938477

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5245384573936462
    2. ',d' → logprob: -1.024538516998291
    3. '[d' → logprob: -3.524538516998291
    4. ',v' → logprob: -4.524538516998291
    5. '[v' → logprob: -5.149538516998291
    6. '[' → logprob: -6.274538516998291
    7. ',[' → logprob: -7.649538516998291
    8. ' ,' → logprob: -8.649538040161133
    9. 'destination' → logprob: -9.524538040161133
    10. '```' → logprob: -9.524538040161133

Token 731: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.0003448792558629066
    2. ' destination' → logprob: -8.000345230102539
    3. '(destination' → logprob: -12.750345230102539
    4. '                   ' → logprob: -13.000345230102539
    5. '           ' → logprob: -13.625345230102539
    6. '   ' → logprob: -14.000345230102539
    7. 'd' → logprob: -14.500345230102539
    8. '               ' → logprob: -14.625345230102539
    9. '       ' → logprob: -15.625345230102539
    10. '                       ' → logprob: -15.750345230102539

Token 732: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36793503165245056
    2. '-' → logprob: -1.617935061454773
    3. ' -' → logprob: -3.1179349422454834
    4. '+' → logprob: -3.3679349422454834
    5. ')
' → logprob: -3.9929349422454834
    6. '<|end|>' → logprob: -5.2429351806640625
    7. ' +' → logprob: -5.8679351806640625
    8. '   ' → logprob: -6.4929351806640625
    9. ']' → logprob: -6.9929351806640625
    10. ')-' → logprob: -7.9929351806640625

Token 733: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14824329316616058
    2. 'return' → logprob: -3.0232431888580322
    3. '           ' → logprob: -3.2732431888580322
    4. '               ' → logprob: -3.5232431888580322
    5. '       ' → logprob: -4.523243427276611
    6. '   ' → logprob: -5.023243427276611
    7. '<|end|>' → logprob: -6.398243427276611
    8. ' return' → logprob: -7.148243427276611
    9. '```' → logprob: -7.773243427276611
    10. ')' → logprob: -8.398242950439453

Token 734: ' tmp' (ID: 8919)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.043218184262514114
    2. 'remaining' → logprob: -3.9182181358337402
    3. '           ' → logprob: -4.41821813583374
    4. '               ' → logprob: -4.79321813583374
    5. '                   ' → logprob: -7.04321813583374
    6. 'v' → logprob: -7.16821813583374
    7. 'del' → logprob: -8.418218612670898
    8. 'else' → logprob: -9.543218612670898
    9. ' returning' → logprob: -9.918218612670898
    10. '       ' → logprob: -10.668218612670898

Token 735: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117337822914124
    2. '=' → logprob: -1.4061733484268188
    3. '=_' → logprob: -11.531173706054688
    4. ' ' → logprob: -12.906173706054688
    5. 'd' → logprob: -13.281173706054688
    6. '   ' → logprob: -13.781173706054688
    7. ',' → logprob: -14.281173706054688
    8. '```' → logprob: -14.468673706054688
    9. 'v' → logprob: -14.531173706054688
    10. 'tmp' → logprob: -14.718673706054688

Token 736: ' _' (ID: 1175)
  Prédit: '_pred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pred' → logprob: -6.802049756515771e-05
    2. '_dest' → logprob: -10.750067710876465
    3. ' _' → logprob: -11.000067710876465
    4. '_dist' → logprob: -12.375067710876465
    5. '_preds' → logprob: -12.500067710876465
    6. 'np' → logprob: -12.625067710876465
    7. '   ' → logprob: -12.750067710876465
    8. '_min' → logprob: -12.750067710876465
    9. ' ' → logprob: -13.000067710876465
    10. '_p' → logprob: -13.625067710876465

Token 737: 'pred' (ID: 32189)
  Prédit: 'pred'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pred' → logprob: -0.0001537169300718233
    2. 'dist' → logprob: -8.875153541564941
    3. '_pred' → logprob: -11.500153541564941
    4. '_dist' → logprob: -14.125153541564941
    5. 'pf' → logprob: -14.250153541564941
    6. 'next' → logprob: -14.375153541564941
    7. ' pred' → logprob: -15.000153541564941
    8. 'dest' → logprob: -15.000153541564941
    9. 'prev' → logprob: -15.625153541564941
    10. 'pref' → logprob: -15.625153541564941

Token 738: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.004941393155604601
    2. '[v' → logprob: -5.379941463470459
    3. '[' → logprob: -8.6299409866333
    4. 'destination' → logprob: -10.0049409866333
    5. '(destination' → logprob: -10.1299409866333
    6. 'v' → logprob: -11.0049409866333
    7. 'd' → logprob: -11.8799409866333
    8. '[[' → logprob: -12.3799409866333
    9. '[last' → logprob: -12.8799409866333
    10. ',d' → logprob: -13.0049409866333

Token 739: 'estination' (ID: 15822)
  Prédit: 'estination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estination' → logprob: -0.003664206713438034
    2. 'destination' → logprob: -5.628664016723633
    3. 'next' → logprob: -10.253664016723633
    4. '(destination' → logprob: -11.628664016723633
    5. 'v' → logprob: -12.253664016723633
    6. 'estion' → logprob: -12.378664016723633
    7. 'istance' → logprob: -12.753664016723633
    8. 'est' → logprob: -13.003664016723633
    9. '_destination' → logprob: -13.753664016723633
    10. '[next' → logprob: -14.503664016723633

Token 740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035057533532381058
    2. ',v' → logprob: -5.753505706787109
    3. 'v' → logprob: -8.25350570678711
    4. '[v' → logprob: -10.25350570678711
    5. ',d' → logprob: -11.37850570678711
    6. '[' → logprob: -11.75350570678711
    7. ' ,' → logprob: -12.50350570678711
    8. 'destination' → logprob: -13.00350570678711
    9. ',x' → logprob: -13.37850570678711
    10. '][' → logprob: -14.12850570678711

Token 741: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001036383560858667
    2. ' v' → logprob: -6.876036167144775
    3. '   ' → logprob: -13.251036643981934
    4. ' ' → logprob: -14.626036643981934
    5. '	v' → logprob: -15.001036643981934
    6. '    ' → logprob: -15.626036643981934
    7. '  ' → logprob: -16.126035690307617
    8. 'last' → logprob: -16.376035690307617
    9. 'destination' → logprob: -16.501035690307617
    10. '_v' → logprob: -16.626035690307617

Token 742: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -4.000763510703109e-05
    2. '_next' → logprob: -10.500040054321289
    3. '[next' → logprob: -12.750040054321289
    4. 'ext' → logprob: -13.000040054321289
    5. ' next' → logprob: -13.125040054321289
    6. '(next' → logprob: -14.000040054321289
    7. 'Next' → logprob: -14.000040054321289
    8. 'v' → logprob: -14.000040054321289
    9. ',next' → logprob: -14.000040054321289
    10. '   ' → logprob: -14.750040054321289

Token 743: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10074044018983841
    2. ']' → logprob: -2.350740432739258
    3. ']
' → logprob: -7.600740432739258
    4. '                   ' → logprob: -11.225740432739258
    5. ']

' → logprob: -12.350740432739258
    6. '               ' → logprob: -12.725740432739258
    7. '-' → logprob: -13.100740432739258
    8. '];' → logprob: -13.225740432739258
    9. ' ]
' → logprob: -13.850740432739258
    10. '']
' → logprob: -13.850740432739258

Token 744: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004983389284461737
    2. '               ' → logprob: -5.629983425140381
    3. '           ' → logprob: -7.504983425140381
    4. 'v' → logprob: -7.754983425140381
    5. '<|end|>' → logprob: -8.629982948303223
    6. '                       ' → logprob: -9.504982948303223
    7. '       ' → logprob: -10.129982948303223
    8. ')' → logprob: -10.504982948303223
    9. '                           ' → logprob: -10.754982948303223
    10. '   ' → logprob: -11.504982948303223

Token 745: ' remaining' (ID: 15448)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15059205889701843
    2. 'remaining' (adapté à ' remaining') → logprob: -2.150592088699341
    3. '                   ' → logprob: -3.900592088699341
    4. 'v' → logprob: -5.900591850280762
    5. '               ' → logprob: -8.400591850280762
    6. '           ' → logprob: -9.775591850280762
    7. 'while' → logprob: -10.275591850280762
    8. ' if' → logprob: -10.275591850280762
    9. '                       ' → logprob: -11.025591850280762
    10. '                           ' → logprob: -11.900591850280762

Token 746: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.00599823659285903
    2. 'next' → logprob: -5.755998134613037
    3. '_last' → logprob: -5.880998134613037
    4. '_tmp' → logprob: -11.755998611450195
    5. 'last' → logprob: -11.880998611450195
    6. 'tmp' → logprob: -12.630998611450195
    7. '[next' → logprob: -13.755998611450195
    8. 'Next' → logprob: -13.880998611450195
    9. '_first' → logprob: -14.005998611450195
    10. '=' → logprob: -14.255998611450195

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05488916486501694
    2. ' =' → logprob: -2.92988920211792
    3. ',' → logprob: -12.304888725280762
    4. '=_' → logprob: -13.679888725280762
    5. '   ' → logprob: -14.304888725280762
    6. ' ' → logprob: -15.304888725280762
    7. '  ' → logprob: -16.554889678955078
    8. '＝' → logprob: -16.804889678955078
    9. ')' → logprob: -17.304889678955078
    10. '```' → logprob: -17.304889678955078

Token 748: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.2664456789934775e-06
    2. ' _' → logprob: -15.000000953674316
    3. '_DIST' → logprob: -15.375000953674316
    4. ' ' → logprob: -16.000001907348633
    5. 'dist' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '1' → logprob: -16.500001907348633
    8. 'Dist' → logprob: -16.625001907348633
    9. '-dist' → logprob: -17.125001907348633
    10. '_dst' → logprob: -17.250001907348633

Token 749: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12718836963176727
    2. '_dist' → logprob: -2.1271884441375732
    3. 'int' → logprob: -8.752188682556152
    4. 'pred' → logprob: -10.252188682556152
    5. '_pred' → logprob: -10.252188682556152
    6. 'Dist' → logprob: -12.627188682556152
    7. '-dist' → logprob: -12.627188682556152
    8. '1' → logprob: -12.752188682556152
    9. '	dist' → logprob: -12.752188682556152
    10. '0' → logprob: -13.127188682556152

Token 750: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.002898547565564513
    2. 'v' → logprob: -6.002898693084717
    3. '[tmp' → logprob: -8.002898216247559
    4. '[' → logprob: -10.377898216247559
    5. 'tmp' → logprob: -11.002898216247559
    6. '[next' → logprob: -12.002898216247559
    7. '(v' → logprob: -12.252898216247559
    8. '[d' → logprob: -12.252898216247559
    9. '```' → logprob: -12.877898216247559
    10. '[x' → logprob: -12.877898216247559

Token 751: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0006883674650453031
    2. '[next' → logprob: -7.625688552856445
    3. 'ext' → logprob: -9.000688552856445
    4. ',next' → logprob: -10.750688552856445
    5. ',' → logprob: -11.125688552856445
    6. '_next' → logprob: -11.250688552856445
    7. '(next' → logprob: -12.000688552856445
    8. '[' → logprob: -12.375688552856445
    9. '```' → logprob: -12.875688552856445
    10. 'v' → logprob: -13.000688552856445

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006365400739014149
    2. '[tmp' → logprob: -5.5063652992248535
    3. ',tmp' → logprob: -6.1313652992248535
    4. '[' → logprob: -10.006365776062012
    5. ' ,' → logprob: -10.006365776062012
    6. ',
' → logprob: -12.006365776062012
    7. 'tmp' → logprob: -12.506365776062012
    8. ',[' → logprob: -13.131365776062012
    9. '][' → logprob: -14.006365776062012
    10. '/tmp' → logprob: -14.256365776062012

Token 753: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.005974180996417999
    2. ' tmp' → logprob: -5.130974292755127
    3. '[tmp' → logprob: -10.380973815917969
    4. ',tmp' → logprob: -13.255973815917969
    5. '	tmp' → logprob: -13.380973815917969
    6. '$tmp' → logprob: -13.505973815917969
    7. '(tmp' → logprob: -13.630973815917969
    8. '/tmp' → logprob: -13.755973815917969
    9. '           ' → logprob: -13.880973815917969
    10. '_tmp' → logprob: -13.880973815917969

Token 754: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25223222374916077
    2. '<|end|>' → logprob: -2.377232313156128
    3. ',' → logprob: -3.252232313156128
    4. 'tmp' → logprob: -3.502232313156128
    5. '
' → logprob: -3.877232313156128
    6. '               ' → logprob: -4.627232074737549
    7. '           ' → logprob: -5.002232074737549
    8. ']' → logprob: -5.377232074737549
    9. '[tmp' → logprob: -5.877232074737549
    10. 'v' → logprob: -6.502232074737549

Token 755: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0681294202804565
    2. '<|end|>' → logprob: -1.4431294202804565
    3. '               ' → logprob: -1.6931294202804565
    4. '           ' → logprob: -2.443129539489746
    5. '   ' → logprob: -3.693129539489746
    6. ')' → logprob: -3.693129539489746
    7. 'else' → logprob: -3.818129539489746
    8. '       ' → logprob: -4.068129539489746
    9. 'return' → logprob: -4.818129539489746
    10. ' else' → logprob: -4.943129539489746

Token 756: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0036845204886049032
    2. '                   ' → logprob: -5.6286845207214355
    3. '               ' → logprob: -10.253684043884277
    4. '           ' → logprob: -10.628684043884277
    5. ' v' → logprob: -12.003684043884277
    6. '                       ' → logprob: -12.128684043884277
    7. '   ' → logprob: -12.253684043884277
    8. 'if' → logprob: -12.878684043884277
    9. '                           ' → logprob: -13.253684043884277
    10. 'return' → logprob: -13.628684043884277

Token 757: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.963691804325208e-05
    2. '_next' → logprob: -11.000029563903809
    3. 'ext' → logprob: -11.500029563903809
    4. ' next' → logprob: -13.875029563903809
    5. '	next' → logprob: -14.000029563903809
    6. '=' → logprob: -15.000029563903809
    7. '(next' → logprob: -15.625029563903809
    8. 'Next' → logprob: -15.875029563903809
    9. '[next' → logprob: -16.125030517578125
    10. '.next' → logprob: -16.500030517578125

Token 758: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018878262490034103
    2. ' =' → logprob: -6.501887798309326
    3. ',' → logprob: -7.876887798309326
    4. '=
' → logprob: -13.376888275146484
    5. '=

' → logprob: -14.626888275146484
    6. ' ' → logprob: -15.001888275146484
    7. '.=' → logprob: -15.001888275146484
    8. '   ' → logprob: -15.126888275146484
    9. '!=' → logprob: -15.126888275146484
    10. ')' → logprob: -15.251888275146484

Token 759: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0005537479883059859
    2. ' tmp' → logprob: -7.500553607940674
    3. '	tmp' → logprob: -15.125554084777832
    4. '(tmp' → logprob: -16.125553131103516
    5. ' ' → logprob: -16.250553131103516
    6. '/tmp' → logprob: -16.500553131103516
    7. '   ' → logprob: -16.750553131103516
    8. '_tmp' → logprob: -16.875553131103516
    9. '[tmp' → logprob: -17.000553131103516
    10. '$tmp' → logprob: -17.250553131103516

Token 760: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.088494896888733
    2. '           ' → logprob: -1.338494896888733
    3. '               ' → logprob: -1.713494896888733
    4. ' else' → logprob: -2.5884947776794434
    5. '                ' → logprob: -3.2134947776794434
    6. '<|end|>' → logprob: -3.5884947776794434
    7. '            ' → logprob: -3.9634947776794434
    8. '       ' → logprob: -4.338494777679443
    9. 'return' → logprob: -4.963494777679443
    10. '   ' → logprob: -5.088494777679443

Token 763: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003954678773880005
    2. '               ' → logprob: -6.253954887390137
    3. '           ' → logprob: -6.378954887390137
    4. 'return' → logprob: -8.878954887390137
    5. '   ' → logprob: -9.753954887390137
    6. '                       ' → logprob: -10.253954887390137
    7. '       ' → logprob: -11.128954887390137
    8. 'PF' → logprob: -11.503954887390137
    9. ',' → logprob: -11.628954887390137
    10. '#' → logprob: -11.753954887390137

Token 764: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0317794531583786
    2. '           ' → logprob: -4.4067792892456055
    3. '               ' → logprob: -4.4067792892456055
    4. 'PF' → logprob: -5.7817792892456055
    5. '   ' → logprob: -6.0317792892456055
    6. 'return' → logprob: -7.2817792892456055
    7. '       ' → logprob: -7.7817792892456055
    8. '                       ' → logprob: -9.031779289245605
    9. '```' → logprob: -10.531779289245605
    10. 'print' → logprob: -10.656779289245605

Token 765: ' returning' (ID: 22968)
  Prédit: 'PF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PF' → logprob: -0.11890865117311478
    2. 'return' → logprob: -3.118908643722534
    3. 'destination' → logprob: -3.243908643722534
    4. 'remaining' → logprob: -4.243908882141113
    5. ' PF' → logprob: -5.618908882141113
    6. '   ' → logprob: -5.868908882141113
    7. 'del' → logprob: -6.118908882141113
    8. '                   ' → logprob: -6.743908882141113
    9. '               ' → logprob: -6.868908882141113
    10. '           ' → logprob: -7.618908882141113

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16029520332813263
    2. '=' → logprob: -1.9102952480316162
    3. '=True' → logprob: -10.160295486450195
    4. '=False' → logprob: -10.660295486450195
    5. ')' → logprob: -12.910295486450195
    6. '   ' → logprob: -13.785295486450195
    7. ',' → logprob: -13.910295486450195
    8. '               ' → logprob: -14.035295486450195
    9. ' ' → logprob: -14.160295486450195
    10. '                   ' → logprob: -14.160295486450195

Token 767: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0033761460799723864
    2. 'False' → logprob: -6.128376007080078
    3. ' True' → logprob: -6.753376007080078
    4. 'None' → logprob: -11.378376007080078
    5. '1' → logprob: -12.378376007080078
    6. 'not' → logprob: -12.628376007080078
    7. ' False' → logprob: -13.253376007080078
    8. '   ' → logprob: -14.503376007080078
    9. ' ' → logprob: -14.628376007080078
    10. '(True' → logprob: -14.753376007080078

Token 768: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8556934595108032
    2. '<|end|>' → logprob: -1.3556934595108032
    3. '                   ' → logprob: -2.1056933403015137
    4. '       ' → logprob: -2.6056933403015137
    5. '               ' → logprob: -2.8556933403015137
    6. '           ' → logprob: -2.9806933403015137
    7. 'else' → logprob: -6.230693340301514
    8. ')' → logprob: -6.355693340301514
    9. 'elif' → logprob: -6.855693340301514
    10. '```' → logprob: -7.105693340301514

Token 769: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18138174712657928
    2. 'else' → logprob: -2.4313817024230957
    3. '       ' → logprob: -3.9313817024230957
    4. '                   ' → logprob: -3.9313817024230957
    5. ' else' → logprob: -4.181381702423096
    6. '<|end|>' → logprob: -5.056381702423096
    7. '               ' → logprob: -5.431381702423096
    8. '           ' → logprob: -6.056381702423096
    9. ')' → logprob: -6.306381702423096
    10. 'elif' → logprob: -6.931381702423096

Token 770: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -0.1582048237323761
    2. 'PF' → logprob: -2.1582047939300537
    3. 'destination' → logprob: -3.5332047939300537
    4. 'v' → logprob: -6.783205032348633
    5. 'tmp' → logprob: -9.283205032348633
    6. '   ' → logprob: -9.408205032348633
    7. ' remaining' → logprob: -9.783205032348633
    8. ' PF' → logprob: -10.033205032348633
    9. 'pf' → logprob: -10.408205032348633
    10. 'del' → logprob: -11.033205032348633

Token 771: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.0046628303825855255
    2. '_next' → logprob: -5.379662990570068
    3. 'last' → logprob: -10.12966251373291
    4. 'next' → logprob: -14.37966251373291
    5. '_first' → logprob: -15.12966251373291
    6. '```' → logprob: -15.12966251373291
    7. '_' → logprob: -15.25466251373291
    8. 'Last' → logprob: -15.50466251373291
    9. '_max' → logprob: -15.62966251373291
    10. '_here' → logprob: -15.75466251373291

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018235396593809128
    2. ' =' → logprob: -4.018235206604004
    3. '-=' → logprob: -10.018235206604004
    4. ' -=' → logprob: -10.143235206604004
    5. '+=' → logprob: -14.268235206604004
    6. ' +=' → logprob: -14.393235206604004
    7. ' ' → logprob: -16.64323616027832
    8. '=int' → logprob: -16.89323616027832
    9. '```' → logprob: -16.89323616027832
    10. '   ' → logprob: -17.26823616027832

Token 773: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0004942946252413094
    2. '1' → logprob: -8.375494003295898
    3. '_dest' → logprob: -9.375494003295898
    4. ' ' → logprob: -9.875494003295898
    5. '0' → logprob: -10.000494003295898
    6. ' _' → logprob: -10.625494003295898
    7. '_dst' → logprob: -11.125494003295898
    8. 'v' → logprob: -11.875494003295898
    9. '_min' → logprob: -12.125494003295898
    10. '   ' → logprob: -12.875494003295898

Token 774: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.020862536504864693
    2. '_dist' → logprob: -3.895862579345703
    3. 'rand' → logprob: -8.145862579345703
    4. 'int' → logprob: -11.645862579345703
    5. '_rand' → logprob: -11.770862579345703
    6. 'Dist' → logprob: -12.520862579345703
    7. '0' → logprob: -13.270862579345703
    8. '	dist' → logprob: -13.895862579345703
    9. 'last' → logprob: -14.020862579345703
    10. 'v' → logprob: -14.395862579345703

Token 775: '[d' (ID: 48377)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20960305631160736
    2. '[v' → logprob: -1.8346030712127686
    3. '[' → logprob: -3.5846030712127686
    4. '1' → logprob: -6.5846028327941895
    5. 'destination' → logprob: -9.334603309631348
    6. '```' → logprob: -9.959603309631348
    7. '(v' → logprob: -10.084603309631348
    8. ' v' → logprob: -10.209603309631348
    9. ',v' → logprob: -11.709603309631348
    10. '[x' → logprob: -12.459603309631348

Token 776: 'estination' (ID: 15822)
  Prédit: 'estination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estination' → logprob: -0.1515987515449524
    2. 'next' → logprob: -2.0265986919403076
    3. 'el' → logprob: -5.401598930358887
    4. 'destination' → logprob: -6.526598930358887
    5. 'elivery' → logprob: -7.276598930358887
    6. 'v' → logprob: -8.026598930358887
    7. 'istance' → logprob: -8.026598930358887
    8. 'return' → logprob: -8.151598930358887
    9. '_next' → logprob: -9.151598930358887
    10. 'est' → logprob: -9.151598930358887

Token 777: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -10.250068664550781
    3. '[' → logprob: -11.750068664550781
    4. '1' → logprob: -11.750068664550781
    5. '```' → logprob: -12.250068664550781
    6. ',
' → logprob: -12.750068664550781
    7. ',v' → logprob: -13.125068664550781
    8. ']' → logprob: -13.625068664550781
    9. ',next' → logprob: -14.250068664550781
    10. 'v' → logprob: -14.250068664550781

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056119974702596664
    2. 'v' → logprob: -2.931119918823242
    3. '0' → logprob: -6.806119918823242
    4. ' ' → logprob: -10.056119918823242
    5. 'destination' → logprob: -10.056119918823242
    6. ' v' → logprob: -11.306119918823242
    7. 'last' → logprob: -11.556119918823242
    8. '```' → logprob: -12.056119918823242
    9. 'return' → logprob: -13.056119918823242
    10. '
' → logprob: -13.056119918823242

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08946849405765533
    2. 'v' → logprob: -2.464468479156494
    3. '0' → logprob: -7.714468479156494
    4. 'last' → logprob: -10.089468955993652
    5. 'destination' → logprob: -10.839468955993652
    6. 'return' → logprob: -11.839468955993652
    7. '```' → logprob: -12.464468955993652
    8. 'next' → logprob: -12.714468955993652
    9. 'tmp' → logprob: -13.089468955993652
    10. ' v' → logprob: -13.839468955993652

Token 780: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10771095752716064
    2. ')' → logprob: -2.482710838317871
    3. ']
' → logprob: -4.232710838317871
    4. ')
' → logprob: -6.482710838317871
    5. '                   ' → logprob: -6.607710838317871
    6. '           ' → logprob: -7.982710838317871
    7. '               ' → logprob: -7.982710838317871
    8. ')]' → logprob: -8.607710838317871
    9. '   ' → logprob: -10.232710838317871
    10. '       ' → logprob: -10.232710838317871

Token 781: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.114003986120224
    2. '<|end|>' → logprob: -2.739003896713257
    3. '       ' → logprob: -3.864003896713257
    4. 'else' → logprob: -4.614004135131836
    5. '                   ' → logprob: -5.864004135131836
    6. '           ' → logprob: -6.114004135131836
    7. '               ' → logprob: -6.364004135131836
    8. 'continue' → logprob: -6.489004135131836
    9. 'elif' → logprob: -6.489004135131836
    10. ')' → logprob: -7.489004135131836

Token 782: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.00043639098294079304
    2. 'remaining' → logprob: -8.375436782836914
    3. ' v' → logprob: -9.125436782836914
    4. 'destination' → logprob: -9.500436782836914
    5. '           ' → logprob: -12.000436782836914
    6. '   ' → logprob: -12.375436782836914
    7. '       ' → logprob: -12.625436782836914
    8. 'del' → logprob: -13.000436782836914
    9. '                   ' → logprob: -13.375436782836914
    10. '               ' → logprob: -13.500436782836914

Token 783: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.292907877039397e-06
    2. '_next' → logprob: -12.75000286102295
    3. ' next' → logprob: -16.000003814697266
    4. '	next' → logprob: -16.000003814697266
    5. 'Next' → logprob: -17.375003814697266
    6. 'ext' → logprob: -17.500003814697266
    7. '(next' → logprob: -17.750003814697266
    8. '[next' → logprob: -18.625003814697266
    9. '.next' → logprob: -19.250003814697266
    10. '```' → logprob: -20.375003814697266

Token 784: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231491327285767
    2. ' =' → logprob: -0.8981491327285767
    3. ',' → logprob: -11.648149490356445
    4. ' +=' → logprob: -11.648149490356445
    5. '+=' → logprob: -12.148149490356445
    6. ' ' → logprob: -13.898149490356445
    7. '<|end|>' → logprob: -15.273149490356445
    8. '[' → logprob: -15.648149490356445
    9. '.=' → logprob: -15.898149490356445
    10. '```' → logprob: -16.148149490356445

Token 785: ' _' (ID: 1175)
  Prédit: '_pred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pred' → logprob: -0.043598853051662445
    2. '1' → logprob: -3.5435988903045654
    3. 'destination' → logprob: -4.793598651885986
    4. ' ' → logprob: -6.543598651885986
    5. 'tmp' → logprob: -6.543598651885986
    6. ' _' → logprob: -7.168598651885986
    7. '_' → logprob: -7.668598651885986
    8. '_tmp' → logprob: -8.168599128723145
    9. '_dest' → logprob: -8.168599128723145
    10. '_min' → logprob: -8.918599128723145

Token 786: 'pred' (ID: 32189)
  Prédit: 'pred'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pred' → logprob: -0.0013470192207023501
    2. 'dist' → logprob: -7.126347064971924
    3. '_dist' → logprob: -8.126346588134766
    4. '_pred' → logprob: -8.501346588134766
    5. '1' → logprob: -11.001346588134766
    6. 'next' → logprob: -11.001346588134766
    7. 'rand' → logprob: -13.376346588134766
    8. 'prec' → logprob: -13.751346588134766
    9. 'prev' → logprob: -13.751346588134766
    10. 'pr' → logprob: -13.876346588134766

Token 787: '[' (ID: 58)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.26448720693588257
    2. 'destination' → logprob: -1.5144872665405273
    3. '[' → logprob: -4.514487266540527
    4. 'd' → logprob: -7.264487266540527
    5. '[v' → logprob: -7.764487266540527
    6. '1' → logprob: -8.264487266540527
    7. '(destination' → logprob: -9.764487266540527
    8. 'v' → logprob: -10.264487266540527
    9. 'return' → logprob: -10.514487266540527
    10. ' destination' → logprob: -11.764487266540527

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6328290104866028
    2. 'destination' → logprob: -0.7578290104866028
    3. ' destination' → logprob: -9.757828712463379
    4. '(destination' → logprob: -9.882828712463379
    5. 'return' → logprob: -10.507828712463379
    6. '(' → logprob: -11.007828712463379
    7. '```' → logprob: -11.007828712463379
    8. ' ' → logprob: -11.382828712463379
    9. 'dest' → logprob: -11.632828712463379
    10. '[' → logprob: -11.757828712463379

Token 789: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.16259314119815826
    2. '[d' → logprob: -2.037593126296997
    3. ',' → logprob: -4.162593364715576
    4. 'destination' → logprob: -5.537593364715576
    5. '[' → logprob: -9.037592887878418
    6. 'd' → logprob: -10.537592887878418
    7. ',[' → logprob: -11.037592887878418
    8. '	d' → logprob: -11.287592887878418
    9. ' ,' → logprob: -11.787592887878418
    10. '(destination' → logprob: -11.787592887878418

Token 790: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.00011224505578866228
    2. 'v' → logprob: -9.750112533569336
    3. ' destination' → logprob: -10.000112533569336
    4. '1' → logprob: -12.500112533569336
    5. '   ' → logprob: -13.625112533569336
    6. 'return' → logprob: -14.125112533569336
    7. '(destination' → logprob: -14.375112533569336
    8. 'last' → logprob: -14.500112533569336
    9. '_destination' → logprob: -15.000112533569336
    10. '0' → logprob: -15.375112533569336

Token 791: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004671376198530197
    2. ']
' → logprob: -5.379671573638916
    3. ']
' → logprob: -11.004671096801758
    4. ']

' → logprob: -11.629671096801758
    5. ' ]' → logprob: -12.254671096801758
    6. ']+' → logprob: -12.379671096801758
    7. ')]' → logprob: -12.879671096801758
    8. ']-' → logprob: -13.004671096801758
    9. '<|end|>' → logprob: -13.129671096801758
    10. ']]' → logprob: -13.379671096801758

Token 792: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: ' remaining' (ID: 15448)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.47868967056274414
    2. 'else' → logprob: -1.7286896705627441
    3. '<|end|>' → logprob: -1.9786896705627441
    4. 'elif' → logprob: -3.853689670562744
    5. '   ' → logprob: -3.978689670562744
    6. '```' → logprob: -4.978689670562744
    7. ' continue' → logprob: -5.103689670562744
    8. '	continue' → logprob: -5.728689670562744
    9. '       ' → logprob: -6.228689670562744
    10. '           ' → logprob: -6.353689670562744

Token 794: '_next' (ID: 25436)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.002817597473040223
    2. '_next' → logprob: -6.002817630767822
    3. 'last' → logprob: -8.002817153930664
    4. 'next' → logprob: -13.377817153930664
    5. '```' → logprob: -13.752817153930664
    6. 'Last' → logprob: -14.377817153930664
    7. '	last' → logprob: -14.377817153930664
    8. '_return' → logprob: -14.502817153930664
    9. '_first' → logprob: -14.752817153930664
    10. '=' → logprob: -14.877817153930664

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09027020633220673
    2. ' =' → logprob: -2.4652702808380127
    3. ' -=' → logprob: -7.340270042419434
    4. '-=' → logprob: -7.340270042419434
    5. '+=' → logprob: -11.215270042419434
    6. ' +=' → logprob: -11.340270042419434
    7. '-' → logprob: -13.090270042419434
    8. '   ' → logprob: -13.590270042419434
    9. ',' → logprob: -13.715270042419434
    10. '=
' → logprob: -14.465270042419434

Token 796: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -9.782141569303349e-05
    2. '0' → logprob: -10.12509822845459
    3. '_inf' → logprob: -11.12509822845459
    4. '1' → logprob: -11.25009822845459
    5. 'float' → logprob: -12.00009822845459
    6. '-' → logprob: -12.00009822845459
    7. ' ' → logprob: -12.50009822845459
    8. 'remaining' → logprob: -12.87509822845459
    9. ' _' → logprob: -13.12509822845459
    10. 'dist' → logprob: -13.37509822845459

Token 797: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004098346922546625
    2. '_dist' → logprob: -5.504098415374756
    3. 'pred' → logprob: -11.504097938537598
    4. 'rand' → logprob: -12.004097938537598
    5. 'int' → logprob: -14.004097938537598
    6. '	dist' → logprob: -14.129097938537598
    7. '_pred' → logprob: -14.504097938537598
    8. 'Dist' → logprob: -15.254097938537598
    9. ' dist' → logprob: -15.504097938537598
    10. 'v' → logprob: -15.504097938537598

Token 798: '[d' (ID: 48377)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.7616248726844788
    2. 'v' → logprob: -1.261624813079834
    3. '[d' → logprob: -1.886624813079834
    4. 'destination' → logprob: -2.386624813079834
    5. 'd' → logprob: -5.386624813079834
    6. '[' → logprob: -7.261624813079834
    7. 'return' → logprob: -7.886624813079834
    8. 'remaining' → logprob: -9.136625289916992
    9. ' v' → logprob: -9.386625289916992
    10. '1' → logprob: -9.636625289916992

Token 799: 'estination' (ID: 15822)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.055646732449531555
    2. 'ext' → logprob: -2.9306466579437256
    3. '[next' → logprob: -8.180646896362305
    4. 'v' → logprob: -8.805646896362305
    5. '_next' → logprob: -9.305646896362305
    6. ',' → logprob: -9.555646896362305
    7. 'xt' → logprob: -10.180646896362305
    8. 'destination' → logprob: -10.305646896362305
    9. 'estination' → logprob: -10.555646896362305
    10. ',next' → logprob: -10.680646896362305

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045617512660101056
    2. '1' → logprob: -8.375455856323242
    3. ',v' → logprob: -8.875455856323242
    4. 'v' → logprob: -9.625455856323242
    5. '[' → logprob: -11.250455856323242
    6. ' ,' → logprob: -13.750455856323242
    7. ',
' → logprob: -13.875455856323242
    8. '-' → logprob: -14.125455856323242
    9. '0' → logprob: -14.500455856323242
    10. '2' → logprob: -14.500455856323242

Token 801: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002820736262947321
    2. ' v' → logprob: -8.625282287597656
    3. '1' → logprob: -9.625282287597656
    4. '_v' → logprob: -11.125282287597656
    5. 'last' → logprob: -11.250282287597656
    6. 'destination' → logprob: -12.000282287597656
    7. '	v' → logprob: -14.500282287597656
    8. ' ' → logprob: -14.625282287597656
    9. '   ' → logprob: -14.750282287597656
    10. '_' → logprob: -15.375282287597656

Token 802: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0009683952084742486
    2. '_next' → logprob: -7.6259684562683105
    3. 'ext' → logprob: -7.7509684562683105
    4. 'return' → logprob: -10.750967979431152
    5. 'prev' → logprob: -11.375967979431152
    6. 'last' → logprob: -12.625967979431152
    7. ' next' → logprob: -12.875967979431152
    8. '[next' → logprob: -12.875967979431152
    9. 'Next' → logprob: -13.500967979431152
    10. ',next' → logprob: -14.250967979431152

Token 803: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005187151022255421
    2. ']' → logprob: -5.380187034606934
    3. ')
' → logprob: -8.505187034606934
    4. '   ' → logprob: -8.755187034606934
    5. '                   ' → logprob: -9.380187034606934
    6. '               ' → logprob: -9.630187034606934
    7. ')]' → logprob: -11.380187034606934
    8. '])' → logprob: -11.755187034606934
    9. '}' → logprob: -11.880187034606934
    10. ' )' → logprob: -12.130187034606934

Token 804: '                   ' (ID: 699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07775057852268219
    2. '<|end|>' → logprob: -3.3277506828308105
    3. 'else' → logprob: -4.5777506828308105
    4. '       ' → logprob: -4.7027506828308105
    5. ')' → logprob: -4.9527506828308105
    6. 'elif' → logprob: -5.2027506828308105
    7. '```' → logprob: -6.5777506828308105
    8. 'continue' → logprob: -7.3277506828308105
    9. '           ' → logprob: -7.3277506828308105
    10. ']' → logprob: -7.5777506828308105

Token 805: ' destination' (ID: 13330)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.41504737734794617
    2. '   ' → logprob: -1.6650474071502686
    3. 'else' → logprob: -3.4150474071502686
    4. 'elif' → logprob: -3.7900474071502686
    5. '           ' → logprob: -4.0400471687316895
    6. '       ' → logprob: -4.2900471687316895
    7. '                   ' → logprob: -4.5400471687316895
    8. 'return' → logprob: -4.5400471687316895
    9. '<|end|>' → logprob: -4.5400471687316895
    10. '               ' → logprob: -4.9150471687316895

Token 806: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008400033228099346
    2. ',' → logprob: -5.508399963378906
    3. ' =' → logprob: -5.508399963378906
    4. '+=' → logprob: -8.758399963378906
    5. ' +=' → logprob: -10.133399963378906
    6. '<|end|>' → logprob: -10.633399963378906
    7. '==' → logprob: -11.258399963378906
    8. ')' → logprob: -11.508399963378906
    9. '.=' → logprob: -12.633399963378906
    10. '   ' → logprob: -13.258399963378906

Token 807: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009691067971289158
    2. 'v' → logprob: -7.125968933105469
    3. ' ' → logprob: -9.750968933105469
    4. 'None' → logprob: -10.500968933105469
    5. '0' → logprob: -10.750968933105469
    6. 'return' → logprob: -10.875968933105469
    7. 'last' → logprob: -11.375968933105469
    8. 'next' → logprob: -11.500968933105469
    9. '-' → logprob: -11.875968933105469
    10. 'destination' → logprob: -13.375968933105469

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.579495235811919e-05
    2. 'v' → logprob: -9.87509536743164
    3. ' ' → logprob: -11.00009536743164
    4. 'last' → logprob: -11.62509536743164
    5. 'return' → logprob: -12.00009536743164
    6. '0' → logprob: -12.00009536743164
    7. 'None' → logprob: -13.62509536743164
    8. '-' → logprob: -13.87509536743164
    9. 'all' → logprob: -14.25009536743164
    10. 'destination' → logprob: -14.50009536743164

Token 809: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 810: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09967939555644989
    2. '<|end|>' → logprob: -2.974679470062256
    3. ')' → logprob: -4.099679470062256
    4. '       ' → logprob: -4.349679470062256
    5. 'else' → logprob: -5.974679470062256
    6. 'elif' → logprob: -6.224679470062256
    7. '...' → logprob: -6.474679470062256
    8. '           ' → logprob: -6.724679470062256
    9. '                   ' → logprob: -7.349679470062256
    10. '               ' → logprob: -7.349679470062256

Token 811: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028040051460266113
    2. 'else' → logprob: -4.653039932250977
    3. '       ' → logprob: -4.778039932250977
    4. 'continue' → logprob: -5.153039932250977
    5. '           ' → logprob: -6.653039932250977
    6. '<|end|>' → logprob: -7.403039932250977
    7. '	continue' → logprob: -8.028039932250977
    8. ' continue' → logprob: -8.028039932250977
    9. ' else' → logprob: -8.153039932250977
    10. 'elif' → logprob: -8.153039932250977

Token 812: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.2233183042553719e-05
    2. '()' → logprob: -11.625012397766113
    3. 'time' → logprob: -13.625012397766113
    4. '_' → logprob: -14.125012397766113
    5. 'Time' → logprob: -14.250012397766113
    6. '_TIME' → logprob: -15.250012397766113
    7. '   ' → logprob: -16.375011444091797
    8. ')' → logprob: -16.500011444091797
    9. '();' → logprob: -17.375011444091797
    10. '()
' → logprob: -17.750011444091797

Token 813: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03259602189064026
    2. '<|end|>' → logprob: -4.407596111297607
    3. '       ' → logprob: -5.032596111297607
    4. '```' → logprob: -5.282596111297607
    5. 'else' → logprob: -5.407596111297607
    6. 'elif' → logprob: -6.782596111297607
    7. 'continue' → logprob: -7.157596111297607
    8. '...' → logprob: -7.157596111297607
    9. ')' → logprob: -8.78259563446045
    10. '<|end|>' → logprob: -9.15759563446045

Token 815: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5821962952613831
    2. 'else' (adapté à ' else') → logprob: -0.9571962952613831
    3. '       ' → logprob: -4.082196235656738
    4. ' else' → logprob: -4.207196235656738
    5. '```' → logprob: -4.707196235656738
    6. 'elif' → logprob: -5.082196235656738
    7. 'continue' → logprob: -6.332196235656738
    8. '<|end|>' → logprob: -6.332196235656738
    9. ')' → logprob: -6.582196235656738
    10. '           ' → logprob: -6.832196235656738

Token 816: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4194088876247406
    2. ':' → logprob: -1.544408917427063
    3. '       ' → logprob: -2.7944087982177734
    4. '           ' → logprob: -2.9194087982177734
    5. '   ' → logprob: -4.919408798217773
    6. '```' → logprob: -5.169408798217773
    7. 'else' → logprob: -8.544408798217773
    8. '{' → logprob: -9.044408798217773
    9. 'continue' → logprob: -9.419408798217773
    10. '{
' → logprob: -9.544408798217773

Token 817: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07740078121423721
    2. '       ' → logprob: -2.7024006843566895
    3. '   ' → logprob: -5.0774006843566895
    4. 'else' → logprob: -7.8274006843566895
    5. '```' → logprob: -8.827401161193848
    6. 'continue' → logprob: -8.952401161193848
    7. '               ' → logprob: -8.952401161193848
    8. ' else' → logprob: -9.077401161193848
    9. '		' → logprob: -9.952401161193848
    10. 'step' → logprob: -10.452401161193848

Token 818: ' step' (ID: 5983)
  Prédit: 'PF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PF' → logprob: -0.11725173890590668
    2. '           ' → logprob: -2.6172516345977783
    3. '       ' → logprob: -3.9922516345977783
    4. '   ' → logprob: -4.367251873016357
    5. 'step' (adapté à ' step') → logprob: -5.617251873016357
    6. ' PF' → logprob: -6.742251873016357
    7. 'else' → logprob: -7.742251873016357
    8. 'remaining' → logprob: -7.742251873016357
    9. '               ' → logprob: -7.992251873016357
    10. 'print' → logprob: -8.7422513961792

Token 819: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.7530574849806726e-05
    2. '_' → logprob: -9.875057220458984
    3. '()' → logprob: -12.875057220458984
    4. 'time' → logprob: -13.875057220458984
    5. '_t' → logprob: -14.125057220458984
    6. '   ' → logprob: -14.875057220458984
    7. '_code' → logprob: -15.625057220458984
    8. 'Time' → logprob: -15.875057220458984
    9. '_tim' → logprob: -16.125057220458984
    10. '_TIME' → logprob: -16.250057220458984

Token 820: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6493522524833679
    2. '   ' → logprob: -1.5243523120880127
    3. '<|end|>' → logprob: -2.0243523120880127
    4. ' else' → logprob: -3.2743523120880127
    5. '```' → logprob: -3.5243523120880127
    6. ')' → logprob: -3.5243523120880127
    7. 'elif' → logprob: -4.149352073669434
    8. '       ' → logprob: -5.399352073669434
    9. ']' → logprob: -6.274352073669434
    10. '[' → logprob: -6.649352073669434

Token 822: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08740607649087906
    2. '   ' → logprob: -2.7124061584472656
    3. '```' → logprob: -5.087406158447266
    4. ' else' → logprob: -5.212406158447266
    5. 'elif' → logprob: -5.962406158447266
    6. '       ' → logprob: -6.587406158447266
    7. '<|end|>' → logprob: -7.462406158447266
    8. '...' → logprob: -7.962406158447266
    9. ')' → logprob: -8.462406158447266
    10. 'return' → logprob: -8.837406158447266

Token 823: ' State' (ID: 5388)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.015507158823311329
    2. '   ' → logprob: -5.515507221221924
    3. ' else' → logprob: -5.765507221221924
    4. 'False' → logprob: -6.015507221221924
    5. 'elif' → logprob: -6.390507221221924
    6. '```' → logprob: -6.390507221221924
    7. '       ' → logprob: -7.640507221221924
    8. 'del' → logprob: -7.765507221221924
    9. 'PF' → logprob: -8.140506744384766
    10. '
' → logprob: -8.765506744384766

Token 824: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17360199987888336
    2. 'else' → logprob: -2.5486021041870117
    3. '   ' → logprob: -3.2986021041870117
    4. '=' → logprob: -4.298602104187012
    5. ' else' → logprob: -4.423602104187012
    6. 'elif' → logprob: -4.548602104187012
    7. ' delivering' → logprob: -6.173602104187012
    8. 'del' → logprob: -6.298602104187012
    9. ' elif' → logprob: -7.048602104187012
    10. ' =' → logprob: -7.048602104187012

Token 825: ' idle' (ID: 54644)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.12490692734718323
    2. 'not' → logprob: -2.4999070167541504
    3. 'return' → logprob: -3.4999070167541504
    4. 'else' → logprob: -5.99990701675415
    5. ' not' → logprob: -6.99990701675415
    6. 'deliver' → logprob: -7.24990701675415
    7. ' delivering' → logprob: -7.49990701675415
    8. '   ' → logprob: -8.749906539916992
    9. 'waiting' → logprob: -9.874906539916992
    10. ' returning' → logprob: -10.124906539916992

Token 826: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6191375255584717
    2. ':' → logprob: -1.4941375255584717
    3. 'else' → logprob: -1.6191375255584717
    4. ':
' → logprob: -3.6191375255584717
    5. 'elif' → logprob: -5.119137763977051
    6. ' else' → logprob: -5.244137763977051
    7. '[' → logprob: -8.49413776397705
    8. '```' → logprob: -8.74413776397705
    9. '=' → logprob: -9.11913776397705
    10. '{' → logprob: -9.36913776397705

Token 827: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.37158071994781494
    2. '   ' → logprob: -1.246580719947815
    3. 'elif' → logprob: -4.121580600738525
    4. ' else' → logprob: -5.246580600738525
    5. ':' → logprob: -7.371580600738525
    6. '```' → logprob: -7.621580600738525
    7. ':
' → logprob: -9.871581077575684
    8. ' elif' → logprob: -10.121581077575684
    9. '       ' → logprob: -10.121581077575684
    10. '	else' → logprob: -10.246581077575684

Token 828: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13606175780296326
    2. '   ' → logprob: -2.136061668395996
    3. ' else' → logprob: -5.136061668395996
    4. 'PF' → logprob: -6.511061668395996
    5. 'elif' → logprob: -6.636061668395996
    6. '```' → logprob: -8.261061668395996
    7. ':' → logprob: -9.886061668395996
    8. '	else' → logprob: -11.011061668395996
    9. '       ' → logprob: -11.136061668395996
    10. ' PF' → logprob: -11.386061668395996

Token 829: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29769188165664673
    2. ':
' → logprob: -1.672691822052002
    3. ':' → logprob: -2.922691822052002
    4. '       ' → logprob: -4.297691822052002
    5. ',' → logprob: -7.547691822052002
    6. '):
' → logprob: -7.797691822052002
    7. '<|end|>' → logprob: -8.29769229888916
    8. ' :
' → logprob: -9.04769229888916
    9. '{' → logprob: -9.23519229888916
    10. '    
' → logprob: -9.36019229888916

Token 830: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48338472843170166
    2. 'PF' → logprob: -0.9833847284317017
    3. ' PF' → logprob: -4.733384609222412
    4. '```' → logprob: -8.60838508605957
    5. 'v' → logprob: -9.10838508605957
    6. 'if' → logprob: -10.10838508605957
    7. '       ' → logprob: -10.10838508605957
    8. ' ' → logprob: -11.10838508605957
    9. '   ' → logprob: -11.10838508605957
    10. '``' → logprob: -11.48338508605957

Token 831: ' last' (ID: 2174)
  Prédit: 'PF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PF' → logprob: -0.020723707973957062
    2. 'if' → logprob: -4.270723819732666
    3. 'print' → logprob: -6.145723819732666
    4. 'v' → logprob: -6.645723819732666
    5. 'destination' → logprob: -7.520723819732666
    6. 'idx' → logprob: -7.645723819732666
    7. 'import' → logprob: -8.145723342895508
    8. '#' → logprob: -8.395723342895508
    9. 'remaining' → logprob: -8.395723342895508
    10. 'T' → logprob: -9.020723342895508

Token 832: '_return' (ID: 29287)
  Prédit: '_return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_return' → logprob: -0.0008959780680015683
    2. 'return' → logprob: -7.750895977020264
    3. '_order' → logprob: -8.625896453857422
    4. '_step' → logprob: -9.500896453857422
    5. '_line' → logprob: -9.875896453857422
    6. '_input' → logprob: -10.625896453857422
    7. '_' → logprob: -11.250896453857422
    8. '_destination' → logprob: -11.250896453857422
    9. '_command' → logprob: -11.375896453857422
    10. 'Return' → logprob: -11.375896453857422

Token 833: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3030284345149994
    2. '=' → logprob: -2.0530283451080322
    3. ' +=' → logprob: -2.0530283451080322
    4. ' =' → logprob: -5.428028583526611
    5. '   ' → logprob: -8.803028106689453
    6. ',' → logprob: -9.553028106689453
    7. '+' → logprob: -10.053028106689453
    8. '==' → logprob: -10.553028106689453
    9. '```' → logprob: -11.803028106689453
    10. ']+=' → logprob: -12.178028106689453

Token 834: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.06931309401988983
    2. 'max' → logprob: -3.1943130493164062
    3. '0' → logprob: -4.194313049316406
    4. '-' → logprob: -4.694313049316406
    5. 'min' → logprob: -6.819313049316406
    6. 'V' → logprob: -9.069313049316406
    7. '_T' → logprob: -9.319313049316406
    8. 'int' → logprob: -9.569313049316406
    9. 'len' → logprob: -9.569313049316406
    10. ' T' → logprob: -9.819313049316406

Token 835: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07382597029209137
    2. '<|end|>' → logprob: -3.4488260746002197
    3. 'PF' → logprob: -4.198825836181641
    4. ' if' → logprob: -5.573825836181641
    5. ' PF' → logprob: -5.698825836181641
    6. 'if' → logprob: -5.823825836181641
    7. '
' → logprob: -5.948825836181641
    8. '       ' → logprob: -6.073825836181641
    9. '    
' → logprob: -6.573825836181641
    10. '```' → logprob: -6.573825836181641

Token 836: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09353972226381302
    2. 'PF' → logprob: -2.5935397148132324
    3. '       ' → logprob: -4.343539714813232
    4. ' PF' → logprob: -7.343539714813232
    5. 'if' → logprob: -7.468539714813232
    6. '```' → logprob: -9.09354019165039
    7. 'v' → logprob: -10.34354019165039
    8. 'print' → logprob: -10.71854019165039
    9. 'import' → logprob: -10.84354019165039
    10. '           ' → logprob: -10.96854019165039

Token 837: ' idx' (ID: 14016)
  Prédit: 'PF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PF' → logprob: -0.0035784533247351646
    2. 'if' → logprob: -6.1285786628723145
    3. 'v' → logprob: -7.5035786628723145
    4. 'destination' → logprob: -8.128578186035156
    5. 'print' → logprob: -8.753578186035156
    6. 'remaining' → logprob: -8.878578186035156
    7. 'T' → logprob: -10.253578186035156
    8. 'del' → logprob: -10.753578186035156
    9. 'pf' → logprob: -11.003578186035156
    10. 'dest' → logprob: -11.003578186035156

Token 838: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7214963436126709
    2. ' =' → logprob: -1.096496343612671
    3. '=' → logprob: -1.721496343612671
    4. ' ,' → logprob: -7.47149658203125
    5. ',j' → logprob: -8.22149658203125
    6. ' +=' → logprob: -10.09649658203125
    7. '+=' → logprob: -10.09649658203125
    8. '+' → logprob: -10.72149658203125
    9. '   ' → logprob: -10.97149658203125
    10. 'for' → logprob: -10.97149658203125

Token 839: ' j' (ID: 441)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21523888409137726
    2. '0' → logprob: -2.2152388095855713
    3. 'min' → logprob: -3.2152388095855713
    4. 'None' → logprob: -3.8402388095855713
    5. 'np' → logprob: -4.96523904800415
    6. 'next' → logprob: -5.21523904800415
    7. 'max' → logprob: -5.46523904800415
    8. 'len' → logprob: -5.59023904800415
    9. 'i' → logprob: -6.59023904800415
    10. ' -' → logprob: -8.465238571166992

Token 840: 'dx' (ID: 22100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25655239820480347
    2. '-' → logprob: -2.7565524578094482
    3. '=' → logprob: -3.1315524578094482
    4. 'None' → logprob: -3.1315524578094482
    5. 'dx' → logprob: -3.1315524578094482
    6. ' None' → logprob: -4.881552219390869
    7. '+' → logprob: -5.506552219390869
    8. ' -' → logprob: -5.506552219390869
    9. ' ' → logprob: -5.881552219390869
    10. '1' → logprob: -6.006552219390869

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2139240801334381
    2. ' =' → logprob: -1.9639240503311157
    3. ',' → logprob: -2.9639241695404053
    4. '=-' → logprob: -8.088924407958984
    5. ',n' → logprob: -9.463924407958984
    6. '0' → logprob: -9.838924407958984
    7. 'for' → logprob: -9.963924407958984
    8. '=None' → logprob: -10.213924407958984
    9. ',j' → logprob: -11.088924407958984
    10. '   ' → logprob: -11.338924407958984

Token 842: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09137696772813797
    2. '0' → logprob: -2.466377019882202
    3. ' -' → logprob: -6.716376781463623
    4. 'None' → logprob: -6.966376781463623
    5. ' ' → logprob: -8.716377258300781
    6. 'i' → logprob: -9.841377258300781
    7. '10' → logprob: -10.716377258300781
    8. ' None' → logprob: -10.841377258300781
    9. '-i' → logprob: -12.716377258300781
    10. 'len' → logprob: -13.341377258300781

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. '999' → logprob: -10.625031471252441
    3. ' ' → logprob: -12.125031471252441
    4. '99' → logprob: -15.125031471252441
    5. '```' → logprob: -15.187531471252441
    6. '9' → logprob: -15.250031471252441
    7. '-' → logprob: -15.500031471252441
    8. '2' → logprob: -15.625031471252441
    9. ' -' → logprob: -15.812531471252441
    10. '１' → logprob: -16.187532424926758

Token 844: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08675780892372131
    2. ' for' → logprob: -3.4617578983306885
    3. 'min' → logprob: -3.5867578983306885
    4. '       ' → logprob: -4.336757659912109
    5. 'if' → logprob: -5.336757659912109
    6. '<|end|>' → logprob: -6.211757659912109
    7. 'while' → logprob: -6.961757659912109
    8. '
' → logprob: -7.211757659912109
    9. 'mn' → logprob: -7.961757659912109
    10. '           ' → logprob: -8.08675765991211

Token 845: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11319730430841446
    2. ' for' → logprob: -2.4881973266601562
    3. 'while' → logprob: -4.863197326660156
    4. 'if' → logprob: -5.238197326660156
    5. 'min' → logprob: -5.738197326660156
    6. 'remaining' → logprob: -6.238197326660156
    7. '       ' → logprob: -6.863197326660156
    8. 'i' → logprob: -7.113197326660156
    9. '   ' → logprob: -7.238197326660156
    10. 'mn' → logprob: -7.863197326660156

Token 846: ' remaining' (ID: 15448)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03116619773209095
    2. 'mn' → logprob: -3.5311663150787354
    3. 'min' → logprob: -7.406166076660156
    4. 'found' → logprob: -7.781166076660156
    5. 'if' → logprob: -8.656166076660156
    6. 'i' → logprob: -9.156166076660156
    7. '       ' → logprob: -10.906166076660156
    8. 'idx' → logprob: -10.906166076660156
    9. '           ' → logprob: -11.531166076660156
    10. 'while' → logprob: -11.656166076660156

Token 847: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.022187473252415657
    2. '_next' → logprob: -4.27218770980835
    3. '=' → logprob: -5.27218770980835
    4. '_' → logprob: -6.77218770980835
    5. '_first' → logprob: -7.14718770980835
    6. 'last' → logprob: -7.64718770980835
    7. ' =' → logprob: -8.772187232971191
    8. '_=' → logprob: -9.522187232971191
    9. '```' → logprob: -10.147187232971191
    10. '0' → logprob: -10.397187232971191

Token 848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04315332695841789
    2. ' =' → logprob: -3.1681532859802246
    3. ',' → logprob: -8.793153762817383
    4. '=None' → logprob: -14.418153762817383
    5. '+=' → logprob: -14.668153762817383
    6. ' +=' → logprob: -15.043153762817383
    7. '   ' → logprob: -15.168153762817383
    8. ' ' → logprob: -15.418153762817383
    9. '=-' → logprob: -15.793153762817383
    10. ' ,' → logprob: -16.418153762817383

Token 849: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4551365375518799
    2. '0' → logprob: -1.7051365375518799
    3. 'float' → logprob: -2.08013653755188
    4. '-' → logprob: -3.45513653755188
    5. '1' → logprob: -4.205136299133301
    6. 'None' → logprob: -4.580136299133301
    7. ' ' → logprob: -7.205136299133301
    8. 'int' → logprob: -7.830136299133301
    9. ' float' → logprob: -7.830136299133301
    10. '999' → logprob: -8.3301362991333

Token 850: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5408129096031189
    2. '10' → logprob: -1.7908129692077637
    3. '-' → logprob: -2.1658129692077637
    4. 'float' → logprob: -2.5408129692077637
    5. '1' → logprob: -3.0408129692077637
    6. 'None' → logprob: -5.290812969207764
    7. 'int' → logprob: -6.165812969207764
    8. '_' → logprob: -7.040812969207764
    9. '999' → logprob: -7.165812969207764
    10. '100' → logprob: -8.290812492370605

Token 851: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05826105922460556
    2. ' for' → logprob: -3.9332611560821533
    3. 'min' → logprob: -4.433260917663574
    4. 'while' → logprob: -4.683260917663574
    5. '       ' → logprob: -5.308260917663574
    6. 'remaining' → logprob: -5.558260917663574
    7. 'if' → logprob: -6.433260917663574
    8. '           ' → logprob: -6.808260917663574
    9. 'i' → logprob: -7.183260917663574
    10. '
' → logprob: -7.683260917663574

Token 852: '       ' (ID: 309)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.244783878326416
    2. 'for' → logprob: -1.244783878326416
    3. 'remaining' → logprob: -1.369783878326416
    4. 'while' → logprob: -1.994783878326416
    5. '       ' → logprob: -4.619783878326416
    6. 'if' → logprob: -5.119783878326416
    7. 'mn' → logprob: -5.119783878326416
    8. '           ' → logprob: -6.119783878326416
    9. 'return' → logprob: -6.869783878326416
    10. 'idx' → logprob: -6.994783878326416

Token 853: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6652498245239258
    2. 'mn' → logprob: -0.7902498245239258
    3. 'remaining' → logprob: -4.040249824523926
    4. 'min' → logprob: -5.040249824523926
    5. 'idx' → logprob: -5.540249824523926
    6. 'if' → logprob: -6.540249824523926
    7. 'found' → logprob: -7.415249824523926
    8. 'return' → logprob: -8.040249824523926
    9. 'while' → logprob: -8.040249824523926
    10. 'i' → logprob: -8.165249824523926

Token 854: 'min' (ID: 1493)
  Prédit: 'estination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'estination' → logprob: -0.009977415204048157
    2. 'for' → logprob: -5.009977340698242
    3. 'istance' → logprob: -7.634977340698242
    4. 'el' → logprob: -7.884977340698242
    5. 'est' → logprob: -7.884977340698242
    6. 'x' → logprob: -8.009977340698242
    7. 'st' → logprob: -8.009977340698242
    8. '=' → logprob: -8.509977340698242
    9. 'elivery' → logprob: -8.509977340698242
    10. ' =' → logprob: -9.134977340698242

Token 855: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14692546427249908
    2. ' =' → logprob: -2.021925449371338
    3. ',' → logprob: -5.521925449371338
    4. 'ist' → logprob: -8.521925926208496
    5. 'istance' → logprob: -11.521925926208496
    6. ' ' → logprob: -11.771925926208496
    7. '   ' → logprob: -12.021925926208496
    8. 'x' → logprob: -13.021925926208496
    9. 'ef' → logprob: -13.146925926208496
    10. '  ' → logprob: -13.146925926208496

Token 856: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1165822222828865
    2. 'float' → logprob: -2.366582155227661
    3. ' ' → logprob: -4.49158239364624
    4. ' float' → logprob: -5.49158239364624
    5. '1' → logprob: -7.61658239364624
    6. '100' → logprob: -9.116581916809082
    7. 'np' → logprob: -9.116581916809082
    8. '999' → logprob: -9.616581916809082
    9. '0' → logprob: -10.116581916809082
    10. 'int' → logprob: -10.241581916809082

Token 857: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06242237240076065
    2. 'float' → logprob: -2.812422275543213
    3. '1' → logprob: -8.687422752380371
    4. '100' → logprob: -9.687422752380371
    5. 'int' → logprob: -9.812422752380371
    6. '999' → logprob: -10.187422752380371
    7. '0' → logprob: -10.187422752380371
    8. ' float' → logprob: -10.312422752380371
    9. ' ' → logprob: -10.562422752380371
    10. 'np' → logprob: -11.187422752380371

Token 858: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3139948844909668
    2. '18' → logprob: -1.3139948844909668
    3. '```' → logprob: -7.313994884490967
    4. '9' → logprob: -9.938995361328125
    5. '8' → logprob: -12.313995361328125
    6. '6' → logprob: -12.688995361328125
    7. '15' → logprob: -13.188995361328125
    8. '^' → logprob: -13.688995361328125
    9. '7' → logprob: -13.938995361328125
    10. ' **' → logprob: -13.938995361328125

Token 859: '18' (ID: 1157)
  Prédit: '18'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.012887831777334213
    2. '9' → logprob: -5.137887954711914
    3. '15' → logprob: -5.887887954711914
    4. '10' → logprob: -6.512887954711914
    5. '12' → logprob: -6.637887954711914
    6. '8' → logprob: -7.387887954711914
    7. '6' → logprob: -8.512887954711914
    8. '7' → logprob: -8.637887954711914
    9. '14' → logprob: -9.012887954711914
    10. '16' → logprob: -9.512887954711914

Token 860: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2900373041629791
    2. ' for' → logprob: -1.4150372743606567
    3. '
' → logprob: -5.790037155151367
    4. 'next' → logprob: -6.665037155151367
    5. 'if' → logprob: -7.165037155151367
    6. ';' → logprob: -7.540037155151367
    7. 'idx' → logprob: -7.540037155151367
    8. 'found' → logprob: -7.665037155151367
    9. '       ' → logprob: -7.790037155151367
    10. '   ' → logprob: -8.165037155151367

Token 861: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014956955565139651
    2. ' for' → logprob: -7.626495838165283
    3. '   ' → logprob: -7.876495838165283
    4. 'if' → logprob: -8.001495361328125
    5. '       ' → logprob: -9.876495361328125
    6. 'found' → logprob: -9.876495361328125
    7. 'while' → logprob: -10.501495361328125
    8. 'order' → logprob: -10.751495361328125
    9. 'i' → logprob: -10.876495361328125
    10. 'all' → logprob: -10.876495361328125

Token 862: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.719917630311102e-05
    2. 'if' → logprob: -10.125077247619629
    3. ' for' → logprob: -11.000077247619629
    4. 'i' → logprob: -11.625077247619629
    5. '```' → logprob: -13.000077247619629
    6. '   ' → logprob: -13.250077247619629
    7. '       ' → logprob: -13.375077247619629
    8. 'found' → logprob: -13.500077247619629
    9. 'while' → logprob: -14.000077247619629
    10. 'all' → logprob: -14.000077247619629

Token 863: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006186736281961203
    2. ' i' → logprob: -7.6256184577941895
    3. 'O' → logprob: -10.375618934631348
    4. 'k' → logprob: -10.625618934631348
    5. 'idx' → logprob: -10.750618934631348
    6. 't' → logprob: -11.000618934631348
    7. '   ' → logprob: -12.125618934631348
    8. 'order' → logprob: -12.250618934631348
    9. 'o' → logprob: -12.750618934631348
    10. ' ' → logprob: -13.125618934631348

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004726314451545477
    2. ' in' → logprob: -5.629726409912109
    3. 'in' → logprob: -7.004726409912109
    4. ' ,' → logprob: -9.00472640991211
    5. 'all' → logprob: -9.75472640991211
    6. ' all' → logprob: -11.62972640991211
    7. '_,' → logprob: -11.87972640991211
    8. ',v' → logprob: -13.12972640991211
    9. ',in' → logprob: -13.12972640991211
    10. '   ' → logprob: -13.75472640991211

Token 865: ' lst' (ID: 33384)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.02917291224002838
    2. ' O' → logprob: -3.654172897338867
    3. 'orders' → logprob: -6.654172897338867
    4. 'order' → logprob: -7.279172897338867
    5. 'all' → logprob: -7.904172897338867
    6. ' orders' → logprob: -8.654172897338867
    7. 'o' → logprob: -8.779172897338867
    8. ' order' → logprob: -9.779172897338867
    9. 'x' → logprob: -10.279172897338867
    10. ' all' → logprob: -10.654172897338867

Token 866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.111358143389225
    2. ',' → logprob: -2.361358165740967
    3. 'in' → logprob: -4.611358165740967
    4. 's' → logprob: -7.111358165740967
    5. ' ,' → logprob: -8.486357688903809
    6. '_in' → logprob: -10.486357688903809
    7. ' ' → logprob: -10.611357688903809
    8. '   ' → logprob: -10.736357688903809
    9. ',in' → logprob: -11.611357688903809
    10. '  ' → logprob: -12.486357688903809

Token 867: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -8.280175097752362e-05
    2. 'all' → logprob: -9.750082969665527
    3. ' enumerate' → logprob: -10.625082969665527
    4. 'en' → logprob: -16.62508201599121
    5. 'enum' → logprob: -17.37508201599121
    6. 'range' → logprob: -18.87508201599121
    7. '```' → logprob: -19.12508201599121
    8. 'enqueue' → logprob: -19.37508201599121
    9. '(en' → logprob: -20.00008201599121
    10. 'Enumer' → logprob: -20.37508201599121

Token 868: '(all' (ID: 34727)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005587329622358084
    2. '(all' → logprob: -5.505587100982666
    3. ' all' → logprob: -6.505587100982666
    4. 'enumer' → logprob: -12.005587577819824
    5. '(' → logprob: -12.755587577819824
    6. '	all' → logprob: -12.880587577819824
    7. 'range' → logprob: -15.380587577819824
    8. ' (' → logprob: -15.380587577819824
    9. '   ' → logprob: -15.880587577819824
    10. '_all' → logprob: -16.255586624145508

Token 869: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -0.0016267409082502127
    2. 'lst' → logprob: -7.626626968383789
    3. '_' → logprob: -8.126626968383789
    4. 'Orders' → logprob: -9.126626968383789
    5. '_order' → logprob: -9.251626968383789
    6. ')' → logprob: -9.626626968383789
    7. 'orders' → logprob: -9.626626968383789
    8. '_lst' → logprob: -9.626626968383789
    9. '```' → logprob: -9.751626968383789
    10. '_ord' → logprob: -9.751626968383789

Token 870: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010771547444164753
    2. '):' → logprob: -4.635771751403809
    3. '       ' → logprob: -7.510771751403809
    4. ':
' → logprob: -8.635771751403809
    5. '   ' → logprob: -9.010771751403809
    6. ':' → logprob: -9.385771751403809
    7. '):
' → logprob: -10.385771751403809
    8. '():
' → logprob: -11.010771751403809
    9. '[' → logprob: -11.385771751403809
    10. ')' → logprob: -12.635771751403809

Token 871: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015798315405845642
    2. '       ' → logprob: -4.265798091888428
    3. ' for' → logprob: -6.765798091888428
    4. '           ' → logprob: -8.265798568725586
    5. ' if' → logprob: -8.890798568725586
    6. 'for' → logprob: -10.015798568725586
    7. '   ' → logprob: -11.265798568725586
    8. '<|end|>' → logprob: -11.765798568725586
    9. 'if' → logprob: -11.890798568725586
    10. ',' → logprob: -12.140798568725586

Token 872: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40568724274635315
    2. 'if' (adapté à ' if') → logprob: -1.7806872129440308
    3. 'for' → logprob: -2.1556873321533203
    4. ' if' → logprob: -4.28068733215332
    5. '       ' → logprob: -4.40568733215332
    6. '           ' → logprob: -4.40568733215332
    7. ' for' → logprob: -4.53068733215332
    8. ' ' → logprob: -10.15568733215332
    9. '               ' → logprob: -10.15568733215332
    10. '	for' → logprob: -11.40568733215332

Token 873: ' not' (ID: 625)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.3072781264781952
    2. 'not' → logprob: -1.4322781562805176
    3. ' not' → logprob: -4.307278156280518
    4. 'len' → logprob: -4.932278156280518
    5. ' lst' → logprob: -5.307278156280518
    6. '(lst' → logprob: -9.93227767944336
    7. ' len' → logprob: -10.55727767944336
    8. ' ' → logprob: -10.68227767944336
    9. '   ' → logprob: -11.18227767944336
    10. '	not' → logprob: -11.93227767944336

Token 874: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.043221615254879
    2. ' lst' → logprob: -3.1682217121124268
    3. 'len' → logprob: -9.043221473693848
    4. 'not' → logprob: -9.918221473693848
    5. ' not' → logprob: -10.168221473693848
    6. '(lst' → logprob: -11.418221473693848
    7. ' ' → logprob: -13.418221473693848
    8. ' len' → logprob: -14.043221473693848
    9. 'l' → logprob: -14.168221473693848
    10. 'list' → logprob: -14.668221473693848

Token 875: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5045621991157532
    2. ':' → logprob: -1.1295621395111084
    3. '               ' → logprob: -2.6295621395111084
    4. ' or' → logprob: -8.379562377929688
    5. '           ' → logprob: -8.629562377929688
    6. 'continue' → logprob: -8.629562377929688
    7. '[' → logprob: -9.004562377929688
    8. ':return' → logprob: -9.754562377929688
    9. '       ' → logprob: -10.004562377929688
    10. 'or' → logprob: -10.879562377929688

Token 876: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025396158918738365
    2. ':' → logprob: -4.525396347045898
    3. ':
' → logprob: -5.275396347045898
    4. '           ' → logprob: -5.525396347045898
    5. ' and' → logprob: -6.025396347045898
    6. ' continue' → logprob: -6.275396347045898
    7. 'continue' → logprob: -8.275396347045898
    8. ',' → logprob: -9.275396347045898
    9. '<|end|>' → logprob: -9.275396347045898
    10. '       ' → logprob: -9.400396347045898

Token 877: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0037549480330199003
    2. ' continue' → logprob: -6.25375509262085
    3. '   ' → logprob: -7.00375509262085
    4. 'for' → logprob: -7.12875509262085
    5. '       ' → logprob: -9.628754615783691
    6. '           ' → logprob: -11.003754615783691
    7. '	continue' → logprob: -11.003754615783691
    8. '               ' → logprob: -12.003754615783691
    9. ' ' → logprob: -13.128754615783691
    10. 'contin' → logprob: -13.378754615783691

Token 878: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004317841492593288
    2. '       ' → logprob: -5.754317760467529
    3. ' for' → logprob: -7.879317760467529
    4. 'for' → logprob: -7.879317760467529
    5. '               ' → logprob: -8.754318237304688
    6. '   ' → logprob: -8.879318237304688
    7. '```' → logprob: -9.629318237304688
    8. ' ' → logprob: -12.379318237304688
    9. '                   ' → logprob: -12.754318237304688
    10. ',' → logprob: -13.129318237304688

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2671268582344055
    2. '       ' → logprob: -2.2671267986297607
    3. ' for' → logprob: -2.7671267986297607
    4. 'for' → logprob: -2.8921267986297607
    5. '   ' → logprob: -5.26712703704834
    6. '```' → logprob: -5.64212703704834
    7. 'd' → logprob: -6.64212703704834
    8. '<|end|>' → logprob: -6.89212703704834
    9. '               ' → logprob: -7.26712703704834
    10. ' ' → logprob: -8.51712703704834

Token 880: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10941514372825623
    2. '           ' → logprob: -2.859415054321289
    3. ' for' → logprob: -3.234415054321289
    4. '       ' → logprob: -5.734415054321289
    5. '   ' → logprob: -6.109415054321289
    6. 'd' → logprob: -7.484415054321289
    7. '```' → logprob: -7.484415054321289
    8. '               ' → logprob: -8.484415054321289
    9. ' ' → logprob: -10.484415054321289
    10. '	for' → logprob: -10.609415054321289

Token 881: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004699972458183765
    2. ' j' → logprob: -5.379700183868408
    3. 'd' → logprob: -9.62969970703125
    4. '   ' → logprob: -12.00469970703125
    5. ' ' → logprob: -13.25469970703125
    6. ' d' → logprob: -13.50469970703125
    7. '	j' → logprob: -13.50469970703125
    8. '  ' → logprob: -13.75469970703125
    9. 'v' → logprob: -14.50469970703125
    10. ',j' → logprob: -15.25469970703125

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008502478594891727
    2. ',d' → logprob: -8.250850677490234
    3. ',j' → logprob: -8.375850677490234
    4. ' ,' → logprob: -8.750850677490234
    5. ' in' → logprob: -8.750850677490234
    6. 'in' → logprob: -11.000850677490234
    7. 'd' → logprob: -11.750850677490234
    8. '```' → logprob: -12.750850677490234
    9. ',l' → logprob: -12.750850677490234
    10. '0' → logprob: -13.750850677490234

Token 883: ' u' (ID: 337)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011192118749022484
    2. ' d' → logprob: -4.511192321777344
    3. 'v' → logprob: -10.136192321777344
    4. 'x' → logprob: -10.261192321777344
    5. 'k' → logprob: -11.011192321777344
    6. 'delivery' → logprob: -11.636192321777344
    7. 'dest' → logprob: -11.761192321777344
    8. 'dst' → logprob: -12.011192321777344
    9. 'node' → logprob: -12.511192321777344
    10. 'order' → logprob: -12.761192321777344

Token 884: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7873484492301941
    2. ',' → logprob: -1.1623485088348389
    3. 'in' → logprob: -1.7873485088348389
    4. 's' → logprob: -3.287348508834839
    5. 'd' → logprob: -4.28734827041626
    6. 'n' → logprob: -4.91234827041626
    7. ',d' → logprob: -5.53734827041626
    8. 'dx' → logprob: -7.41234827041626
    9. ' ,' → logprob: -8.162348747253418
    10. 'k' → logprob: -8.287348747253418

Token 885: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.534597635269165
    2. ' enumerate' → logprob: -0.909597635269165
    3. 'lst' → logprob: -5.284597396850586
    4. 'range' → logprob: -5.284597396850586
    5. ' range' → logprob: -7.159597396850586
    6. ' lst' → logprob: -8.034597396850586
    7. 'list' → logprob: -9.409597396850586
    8. 'in' → logprob: -10.784597396850586
    9. ' in' → logprob: -10.784597396850586
    10. 'u' → logprob: -11.284597396850586

Token 886: '(lst' (ID: 95688)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.029771320521831512
    2. ' lst' → logprob: -3.529771327972412
    3. 'all' → logprob: -11.404770851135254
    4. '(lst' → logprob: -11.904770851135254
    5. 'list' → logprob: -13.779770851135254
    6. ' ' → logprob: -14.904770851135254
    7. ' all' → logprob: -15.029770851135254
    8. 'l' → logprob: -15.154770851135254
    9. '_lst' → logprob: -15.654770851135254
    10. '.lst' → logprob: -15.779770851135254

Token 887: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4009014666080475
    2. '):
' → logprob: -1.650901436805725
    3. ':
' → logprob: -2.5259015560150146
    4. ':' → logprob: -2.9009015560150146
    5. '):' → logprob: -6.2759013175964355
    6. '():
' → logprob: -7.2759013175964355
    7. '           ' → logprob: -9.150901794433594
    8. '[' → logprob: -9.400901794433594
    9. ',' → logprob: -9.525901794433594
    10. '<|end|>' → logprob: -9.525901794433594

Token 888: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038925919216126204
    2. '           ' → logprob: -5.878892421722412
    3. '                               ' → logprob: -8.00389289855957
    4. '                   ' → logprob: -8.50389289855957
    5. ' if' → logprob: -8.75389289855957
    6. ' ' → logprob: -9.37889289855957
    7. '   ' → logprob: -9.37889289855957
    8. '              ' → logprob: -10.00389289855957
    9. '             ' → logprob: -10.12889289855957
    10. '<|end|>' → logprob: -10.62889289855957

Token 889: ' val' (ID: 1459)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010548158548772335
    2. '                   ' → logprob: -5.010548114776611
    3. ' if' → logprob: -6.385548114776611
    4. '                ' → logprob: -7.385548114776611
    5. '   ' → logprob: -7.510548114776611
    6. '                               ' → logprob: -7.635548114776611
    7. ' d' → logprob: -8.38554859161377
    8. ' ' → logprob: -9.51054859161377
    9. '           ' → logprob: -10.13554859161377
    10. '                       ' → logprob: -10.26054859161377

Token 890: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011322603560984135
    2. '               ' → logprob: -5.261322498321533
    3. '                ' → logprob: -5.636322498321533
    4. '=' → logprob: -6.386322498321533
    5. '                   ' → logprob: -7.761322498321533
    6. ' if' → logprob: -9.511322975158691
    7. '   ' → logprob: -10.136322975158691
    8. ' <' → logprob: -10.386322975158691
    9. ' ' → logprob: -10.636322975158691
    10. '                    ' → logprob: -10.636322975158691

Token 891: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00013798571308143437
    2. ' _' → logprob: -9.000138282775879
    3. 'dist' → logprob: -12.500138282775879
    4. 'np' → logprob: -13.625138282775879
    5. '_pred' → logprob: -13.875138282775879
    6. '_min' → logprob: -14.000138282775879
    7. '_cost' → logprob: -14.000138282775879
    8. '_dst' → logprob: -14.000138282775879
    9. '_DIST' → logprob: -14.250138282775879
    10. '_distance' → logprob: -14.250138282775879

Token 892: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0022395893465727568
    2. '_dist' → logprob: -6.12723970413208
    3. 'rand' → logprob: -9.877239227294922
    4. 'np' → logprob: -14.127239227294922
    5. 'pred' → logprob: -14.627239227294922
    6. '	dist' → logprob: -14.752239227294922
    7. ' dist' → logprob: -14.877239227294922
    8. 'Dist' → logprob: -15.127239227294922
    9. 'min' → logprob: -15.627239227294922
    10. '_rand' → logprob: -16.127239227294922

Token 893: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7817113995552063
    2. '[v' → logprob: -0.7817113995552063
    3. 'v' → logprob: -3.0317113399505615
    4. '1' → logprob: -4.406711578369141
    5. '[u' → logprob: -4.406711578369141
    6. '0' → logprob: -5.281711578369141
    7. '[i' → logprob: -5.281711578369141
    8. 'u' → logprob: -7.781711578369141
    9. '[j' → logprob: -8.28171157836914
    10. 'destination' → logprob: -8.53171157836914

Token 894: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09845896065235138
    2. '1' → logprob: -2.598459005355835
    3. '0' → logprob: -4.098458766937256
    4. 'u' → logprob: -7.098458766937256
    5. ' v' → logprob: -7.223458766937256
    6. 'destination' → logprob: -7.473458766937256
    7. 'min' → logprob: -8.973459243774414
    8. 'i' → logprob: -8.973459243774414
    9. ' ' → logprob: -9.348459243774414
    10. 'last' → logprob: -9.473459243774414

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038234271109104156
    2. ',u' → logprob: -3.288234233856201
    3. ' ,' → logprob: -9.03823471069336
    4. ',v' → logprob: -10.53823471069336
    5. '[u' → logprob: -10.66323471069336
    6. '][' → logprob: -12.03823471069336
    7. ',
' → logprob: -12.53823471069336
    8. 'u' → logprob: -12.66323471069336
    9. ',user' → logprob: -12.66323471069336
    10. '[' → logprob: -13.03823471069336

Token 896: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -9.615255839889869e-05
    2. ' u' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.12509536743164
    4. '[u' → logprob: -18.12509536743164
    5. '	u' → logprob: -18.62509536743164
    6. 'user' → logprob: -19.00009536743164
    7. '       ' → logprob: -19.75009536743164
    8. '           ' → logprob: -19.87509536743164
    9. '
' → logprob: -20.00009536743164
    10. '               ' → logprob: -20.25009536743164

Token 897: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45318520069122314
    2. ']
' → logprob: -1.0781852006912231
    3. '               ' → logprob: -3.9531850814819336
    4. ']<' → logprob: -5.953185081481934
    5. ']>' → logprob: -6.828185081481934
    6. ']
' → logprob: -8.078185081481934
    7. ' ]' → logprob: -8.578185081481934
    8. ' ]
' → logprob: -8.828185081481934
    9. '[u' → logprob: -9.203185081481934
    10. 'if' → logprob: -9.578185081481934

Token 898: ' +' (ID: 659)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006939971353858709
    2. '<|end|>' → logprob: -5.256939888000488
    3. ' if' → logprob: -7.506939888000488
    4. '                ' → logprob: -7.756939888000488
    5. ' ' → logprob: -9.006939888000488
    6. '              ' → logprob: -9.131939888000488
    7. '
' → logprob: -9.381939888000488
    8. '                
' → logprob: -9.506939888000488
    9. '                               ' → logprob: -9.631939888000488
    10. ' 
' → logprob: -10.006939888000488

Token 899: ' abs' (ID: 8443)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00020187153131701052
    2. ' _' → logprob: -9.875202178955078
    3. '_cost' → logprob: -10.125202178955078
    4. '_dst' → logprob: -10.625202178955078
    5. 'np' → logprob: -11.000202178955078
    6. 'u' → logprob: -11.125202178955078
    7. '_min' → logprob: -11.625202178955078
    8. '1' → logprob: -11.875202178955078
    9. '_pred' → logprob: -12.250202178955078
    10. '_dest' → logprob: -12.375202178955078

Token 900: '(T' (ID: 7014)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.6155659556388855
    2. '(u' → logprob: -1.4905660152435303
    3. '_dist' → logprob: -2.6155660152435303
    4. '(' → logprob: -2.8655660152435303
    5. '_val' → logprob: -3.3655660152435303
    6. 'u' → logprob: -3.9905660152435303
    7. '1' → logprob: -4.615565776824951
    8. '(T' → logprob: -4.865565776824951
    9. 'v' → logprob: -5.240565776824951
    10. 'val' → logprob: -5.365565776824951

Token 901: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38894781470298767
    2. '-' → logprob: -1.13894784450531
    3. '-val' → logprob: -7.0139479637146
    4. '-u' → logprob: -7.1389479637146
    5. '-j' → logprob: -9.513947486877441
    6. ')' → logprob: -9.638947486877441
    7. '-last' → logprob: -9.763947486877441
    8. ' ' → logprob: -9.763947486877441
    9. '-user' → logprob: -11.263947486877441
    10. '-prev' → logprob: -11.513947486877441

Token 902: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002204855205491185
    2. ' )' → logprob: -6.627204895019531
    3. ')
' → logprob: -7.377204895019531
    4. ')+' → logprob: -9.377204895019531
    5. '+' → logprob: -9.627204895019531
    6. ')*' → logprob: -10.627204895019531
    7. ')>' → logprob: -11.502204895019531
    8. ')**' → logprob: -11.627204895019531
    9. '])' → logprob: -11.877204895019531
    10. '))' → logprob: -12.127204895019531

Token 903: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07139064371585846
    2. '0' → logprob: -3.0713906288146973
    3. '2' → logprob: -4.446390628814697
    4. '-' → logprob: -4.946390628814697
    5. ' ' → logprob: -6.821390628814697
    6. '3' → logprob: -6.946390628814697
    7. '100' → logprob: -8.821391105651855
    8. '9' → logprob: -8.946391105651855
    9. '```' → logprob: -8.946391105651855
    10. '+' → logprob: -9.133891105651855

Token 904: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20476531982421875
    2. ' if' → logprob: -1.7047653198242188
    3. '<|end|>' → logprob: -6.954765319824219
    4. 'if' → logprob: -7.079765319824219
    5. ' and' → logprob: -7.704765319824219
    6. '                               ' → logprob: -8.454765319824219
    7. '                ' → logprob: -8.579765319824219
    8. ' ' → logprob: -8.579765319824219
    9. '              ' → logprob: -9.204765319824219
    10. '                   ' → logprob: -9.329765319824219

Token 906: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20308002829551697
    2. ' if' → logprob: -2.32807993888855
    3. 'if' (adapté à ' if') → logprob: -2.45307993888855
    4. '	if' → logprob: -9.328080177307129
    5. ' ' → logprob: -9.828080177307129
    6. '                   ' → logprob: -9.953080177307129
    7. '   ' → logprob: -10.828080177307129
    8. 'If' → logprob: -10.953080177307129
    9. '           ' → logprob: -11.328080177307129
    10. '			' → logprob: -11.703080177307129

Token 907: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1602463573217392
    2. ' val' → logprob: -1.9102463722229004
    3. '(val' → logprob: -11.535245895385742
    4. '	val' → logprob: -12.660245895385742
    5. '_val' → logprob: -13.660245895385742
    6. '   ' → logprob: -13.910245895385742
    7. 'v' → logprob: -14.160245895385742
    8. '```' → logprob: -14.160245895385742
    9. 'vall' → logprob: -14.472745895385742
    10. '0' → logprob: -14.472745895385742

Token 908: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05491872876882553
    2. '<' → logprob: -2.9299187660217285
    3. ' >' → logprob: -10.92991828918457
    4. '>' → logprob: -11.92991828918457
    5. '<v' → logprob: -13.17991828918457
    6. '<u' → logprob: -13.42991828918457
    7. '<int' → logprob: -13.55491828918457
    8. '[' → logprob: -13.92991828918457
    9. '<class' → logprob: -14.30491828918457
    10. '   ' → logprob: -14.30491828918457

Token 909: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.042156681418418884
    2. '10' → logprob: -3.66715669631958
    3. ' d' → logprob: -4.54215669631958
    4. 'val' → logprob: -6.41715669631958
    5. '_d' → logprob: -6.79215669631958
    6. ' ' → logprob: -7.04215669631958
    7. 'min' → logprob: -7.79215669631958
    8. ' val' → logprob: -8.417156219482422
    9. '0' → logprob: -8.542156219482422
    10. '_val' → logprob: -9.042156219482422

Token 910: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0009713716572150588
    2. 'val' → logprob: -7.00097131729126
    3. 'd' → logprob: -11.000971794128418
    4. '10' → logprob: -11.000971794128418
    5. 'dist' → logprob: -12.000971794128418
    6. ' val' → logprob: -12.250971794128418
    7. ' min' → logprob: -12.375971794128418
    8. ' d' → logprob: -12.750971794128418
    9. 'u' → logprob: -13.250971794128418
    10. '**' → logprob: -13.375971794128418

Token 911: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27004534006118774
    2. ':
' → logprob: -2.020045280456543
    3. ' and' → logprob: -3.145045280456543
    4. '                   ' → logprob: -3.770045280456543
    5. '               ' → logprob: -3.895045280456543
    6. ' :' → logprob: -5.520045280456543
    7. '<|end|>' → logprob: -6.020045280456543
    8. ' :
' → logprob: -6.395045280456543
    9. '                       ' → logprob: -6.645045280456543
    10. 'and' → logprob: -6.895045280456543

Token 912: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22466979920864105
    2. '                       ' → logprob: -3.0996696949005127
    3. '               ' → logprob: -3.0996696949005127
    4. ':' → logprob: -4.099669933319092
    5. '                           ' → logprob: -4.224669933319092
    6. ',' → logprob: -4.849669933319092
    7. '   ' → logprob: -4.974669933319092
    8. ' ' → logprob: -5.224669933319092
    9. ' d' → logprob: -5.224669933319092
    10. '                               ' → logprob: -5.224669933319092

Token 913: ' d' (ID: 272)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.18113602697849274
    2. ' idx' → logprob: -1.8061360120773315
    3. 'i' → logprob: -6.806136131286621
    4. ' i' → logprob: -8.806136131286621
    5. 'index' → logprob: -9.556136131286621
    6. '(idx' → logprob: -11.056136131286621
    7. '_idx' → logprob: -11.431136131286621
    8. '	idx' → logprob: -11.806136131286621
    9. '```' → logprob: -12.181136131286621
    10. ' index' → logprob: -12.681136131286621

Token 914: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.5491004129871726e-05
    2. 'j' → logprob: -10.875045776367188
    3. 'max' → logprob: -11.125045776367188
    4. ' min' → logprob: -12.625045776367188
    5. ',' → logprob: -12.750045776367188
    6. 'i' → logprob: -13.500045776367188
    7. ' j' → logprob: -14.375045776367188
    8. '=' → logprob: -15.125045776367188
    9. '   ' → logprob: -15.125045776367188
    10. 'x' → logprob: -15.250045776367188

Token 915: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002451161155477166
    2. '=' → logprob: -6.502450942993164
    3. ',i' → logprob: -7.002450942993164
    4. ' ,' → logprob: -11.502450942993164
    5. ' =' → logprob: -11.752450942993164
    6. '=i' → logprob: -12.002450942993164
    7. 'i' → logprob: -12.627450942993164
    8. ',j' → logprob: -12.752450942993164
    9. ',u' → logprob: -13.252450942993164
    10. ',user' → logprob: -13.627450942993164

Token 916: 'val' (ID: 1105)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2813529074192047
    2. 'i' → logprob: -1.4063528776168823
    3. ',' → logprob: -9.406352996826172
    4. 'val' → logprob: -10.281352996826172
    5. ',i' → logprob: -10.781352996826172
    6. ' val' → logprob: -11.156352996826172
    7. '(i' → logprob: -11.281352996826172
    8. '                   ' → logprob: -11.781352996826172
    9. '10' → logprob: -11.906352996826172
    10. '	i' → logprob: -12.406352996826172

Token 917: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003190666902810335
    2. '                   ' → logprob: -6.378190517425537
    3. ' ,' → logprob: -6.878190517425537
    4. '<|end|>' → logprob: -8.628190994262695
    5. ',i' → logprob: -9.378190994262695
    6. ',
' → logprob: -9.878190994262695
    7. ',index' → logprob: -10.003190994262695
    8. ',j' → logprob: -11.503190994262695
    9. '<|end|>' → logprob: -11.503190994262695
    10. ',\
' → logprob: -12.128190994262695

Token 918: '                   ' (ID: 699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010398367885500193
    2. ' ,' → logprob: -7.251039981842041
    3. '                   ' → logprob: -8.501039505004883
    4. '<|end|>' → logprob: -10.126039505004883
    5. ',i' → logprob: -10.501039505004883
    6. ',
' → logprob: -11.001039505004883
    7. ',index' → logprob: -11.376039505004883
    8. ',user' → logprob: -11.751039505004883
    9. ',u' → logprob: -13.001039505004883
    10. ',x' → logprob: -13.376039505004883

Token 919: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0007227989844977856
    2. ' idx' → logprob: -7.250722885131836
    3. '                   ' → logprob: -12.250722885131836
    4. 'i' → logprob: -12.500722885131836
    5. 'index' → logprob: -12.500722885131836
    6. '                       ' → logprob: -16.000722885131836
    7. '	idx' → logprob: -16.250722885131836
    8. '(idx' → logprob: -16.375722885131836
    9. '               ' → logprob: -16.625722885131836
    10. 'destination' → logprob: -17.000722885131836

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2110190987586975
    2. '=' → logprob: -2.4610190391540527
    3. ',j' → logprob: -2.5860190391540527
    4. '=j' → logprob: -3.7110190391540527
    5. 'j' → logprob: -6.211019039154053
    6. ' j' → logprob: -6.211019039154053
    7. ' =' → logprob: -6.961019039154053
    8. ' ,' → logprob: -9.836019515991211
    9. '<|end|>' → logprob: -10.086019515991211
    10. '	j' → logprob: -10.461019515991211

Token 921: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1888679839321412e-05
    2. ' j' → logprob: -10.750021934509277
    3. '	j' → logprob: -16.50002098083496
    4. 'jx' → logprob: -16.62502098083496
    5. 'jax' → logprob: -17.00002098083496
    6. '<|end|>' → logprob: -17.25002098083496
    7. 'u' → logprob: -17.75002098083496
    8. '   ' → logprob: -18.62502098083496
    9. 'i' → logprob: -18.62502098083496
    10. '$j' → logprob: -18.87502098083496

Token 922: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.01865319535136223
    2. '=' → logprob: -4.018653392791748
    3. ' =' → logprob: -7.768653392791748
    4. 'x' → logprob: -9.76865291595459
    5. 'idx' → logprob: -12.14365291595459
    6. '<|end|>' → logprob: -12.64365291595459
    7. 'dex' → logprob: -12.76865291595459
    8. '=j' → logprob: -12.76865291595459
    9. ' dx' → logprob: -13.14365291595459
    10. ',' → logprob: -13.39365291595459

Token 923: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09374858438968658
    2. ' =' → logprob: -2.5937485694885254
    3. '=i' → logprob: -4.218748569488525
    4. '=u' → logprob: -11.718749046325684
    5. ' i' → logprob: -11.843749046325684
    6. '=j' → logprob: -11.968749046325684
    7. 'i' → logprob: -12.343749046325684
    8. ',i' → logprob: -13.218749046325684
    9. ',' → logprob: -13.468749046325684
    10. '   ' → logprob: -14.468749046325684

Token 924: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002476135268807411
    2. ' i' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.75247573852539
    4. ' ' → logprob: -17.37747573852539
    5. '(i' → logprob: -18.00247573852539
    6. '	i' → logprob: -18.12747573852539
    7. '  ' → logprob: -18.25247573852539
    8. '       ' → logprob: -19.00247573852539
    9. '    ' → logprob: -19.00247573852539
    10. '
' → logprob: -19.12747573852539

Token 925: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00993032194674015
    2. ',j' → logprob: -4.63493013381958
    3. ' ,' → logprob: -8.884930610656738
    4. ' j' → logprob: -11.509930610656738
    5. 'j' → logprob: -11.759930610656738
    6. '<|end|>' → logprob: -11.759930610656738
    7. ',u' → logprob: -12.759930610656738
    8. ',user' → logprob: -13.134930610656738
    9. '<|end|>' → logprob: -14.009930610656738
    10. ',
' → logprob: -14.134930610656738

Token 926: ' j' (ID: 441)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0038957991637289524
    2. ' u' → logprob: -6.1288957595825195
    3. 'j' → logprob: -6.3788957595825195
    4. '   ' → logprob: -12.25389575958252
    5. 'user' → logprob: -13.37889575958252
    6. ' j' → logprob: -13.37889575958252
    7. ' ' → logprob: -13.50389575958252
    8. '    ' → logprob: -14.12889575958252
    9. '	u' → logprob: -14.37889575958252
    10. '0' → logprob: -14.62889575958252

Token 927: '
' (ID: 198)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.6312288641929626
    2. '       ' → logprob: -1.7562289237976074
    3. '<|end|>' → logprob: -1.8812289237976074
    4. '
' → logprob: -2.5062289237976074
    5. ' destination' → logprob: -3.7562289237976074
    6. '               ' → logprob: -4.381228923797607
    7. '                   ' → logprob: -4.881228923797607
    8. '           ' → logprob: -6.006228923797607
    9. '```' → logprob: -6.131228923797607
    10. ' if' → logprob: -6.256228923797607

Token 928: '       ' (ID: 309)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.07610800117254257
    2. '                   ' → logprob: -3.201107978820801
    3. '               ' → logprob: -4.701107978820801
    4. '       ' → logprob: -5.076107978820801
    5. '```' → logprob: -5.201107978820801
    6. '           ' → logprob: -5.826107978820801
    7. ' destination' → logprob: -6.076107978820801
    8. 'if' → logprob: -6.326107978820801
    9. 'delivery' → logprob: -6.826107978820801
    10. '
' → logprob: -7.201107978820801

Token 929: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.479857474565506
    2. 'destination' → logprob: -0.9798574447631836
    3. 'del' → logprob: -6.604857444763184
    4. 'delivery' → logprob: -6.729857444763184
    5. 'remaining' → logprob: -7.104857444763184
    6. '           ' → logprob: -7.604857444763184
    7. '```' → logprob: -7.854857444763184
    8. '   ' → logprob: -8.229857444763184
    9. '       ' → logprob: -8.354857444763184
    10. 'all' → logprob: -8.479857444763184

Token 930: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.023392226547002792
    2. ' idx' → logprob: -3.7733922004699707
    3. 'd' → logprob: -9.773392677307129
    4. '(idx' → logprob: -10.023392677307129
    5. '	idx' → logprob: -11.273392677307129
    6. 'not' → logprob: -11.398392677307129
    7. ' d' → logprob: -12.273392677307129
    8. ' not' → logprob: -12.898392677307129
    9. 'del' → logprob: -13.148392677307129
    10. 'remaining' → logprob: -13.398392677307129

Token 931: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6736696362495422
    2. '!=' → logprob: -1.1736695766448975
    3. '==' → logprob: -2.5486695766448975
    4. ' ==' → logprob: -2.7986695766448975
    5. '!=-' → logprob: -3.6736695766448975
    6. '>=' → logprob: -4.548669815063477
    7. ' >=' → logprob: -6.298669815063477
    8. '==-' → logprob: -6.423669815063477
    9. '=' → logprob: -7.423669815063477
    10. '>' → logprob: -7.923669815063477

Token 932: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005538671393878758
    2. ' -' → logprob: -7.625554084777832
    3. '0' → logprob: -9.875554084777832
    4. 'j' → logprob: -11.750554084777832
    5. '-j' → logprob: -12.625554084777832
    6. '!=-' → logprob: -13.875554084777832
    7. '   ' → logprob: -14.625554084777832
    8. '=' → logprob: -14.750554084777832
    9. ' ' → logprob: -14.750554084777832
    10. '>-' → logprob: -15.250554084777832

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.500005722045898
    3. '```' → logprob: -13.375005722045898
    4. '<|end|>' → logprob: -16.0625057220459
    5. '   ' → logprob: -16.4375057220459
    6. '2' → logprob: -16.5625057220459
    7. '0' → logprob: -16.6250057220459
    8. ',' → logprob: -16.9375057220459
    9. '`' → logprob: -17.5625057220459
    10. '۱' → logprob: -17.6250057220459

Token 934: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26140296459198
    2. ':
' → logprob: -1.51140296459198
    3. '           ' → logprob: -4.8864030838012695
    4. ' and' → logprob: -7.5114030838012695
    5. ' or' → logprob: -7.5114030838012695
    6. '       ' → logprob: -7.8864030838012695
    7. ':return' → logprob: -8.63640308380127
    8. '   ' → logprob: -8.76140308380127
    9. '==' → logprob: -10.51140308380127
    10. 'and' → logprob: -11.26140308380127

Token 935: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36406052112579346
    2. '       ' → logprob: -1.2390605211257935
    3. ' step' → logprob: -4.864060401916504
    4. 'step' → logprob: -5.864060401916504
    5. ' break' → logprob: -6.364060401916504
    6. 'PF' → logprob: -6.989060401916504
    7. ' PF' → logprob: -7.114060401916504
    8. 'break' → logprob: -7.114060401916504
    9. '```' → logprob: -8.489060401916504
    10. '           ' → logprob: -8.739060401916504

Token 936: ' PF' (ID: 52605)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3665114939212799
    2. '   ' → logprob: -2.116511583328247
    3. 'PF' (adapté à ' PF') → logprob: -2.116511583328247
    4. '       ' → logprob: -3.616511583328247
    5. '           ' → logprob: -3.741511583328247
    6. ' step' → logprob: -5.116511344909668
    7. ' PF' → logprob: -5.241511344909668
    8. 'break' → logprob: -6.241511344909668
    9. '               ' → logprob: -6.616511344909668
    10. 'T' → logprob: -8.366511344909668

Token 937: '(-' (ID: 8087)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48677363991737366
    2. '-' → logprob: -1.2367736101150513
    3. '1' → logprob: -2.861773729324341
    4. '(' → logprob: -3.611773729324341
    5. '(-' → logprob: -4.611773490905762
    6. '()' → logprob: -8.361773490905762
    7. '("' → logprob: -8.486773490905762
    8. '"' → logprob: -9.236773490905762
    9. '('' → logprob: -9.486773490905762
    10. 'v' → logprob: -9.986773490905762

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3954463510308415e-05
    2. '2' → logprob: -10.125054359436035
    3. ' ' → logprob: -12.125054359436035
    4. '999' → logprob: -13.000054359436035
    5. '99' → logprob: -13.125054359436035
    6. '100' → logprob: -13.875054359436035
    7. '3' → logprob: -14.437554359436035
    8. '10' → logprob: -14.562554359436035
    9. '9' → logprob: -15.250054359436035
    10. '   ' → logprob: -15.312554359436035

Token 939: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133910298347473
    2. ')
' → logprob: -1.3133909702301025
    3. ')
' → logprob: -9.563390731811523
    4. ')

' → logprob: -10.688390731811523
    5. ')return' → logprob: -11.063390731811523
    6. ' )' → logprob: -12.188390731811523
    7. ' )
' → logprob: -12.438390731811523
    8. '   ' → logprob: -12.563390731811523
    9. '```' → logprob: -13.063390731811523
    10. ')\' → logprob: -13.938390731811523

Token 940: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.034589171409607
    2. '       ' → logprob: -1.534589171409607
    3. 'continue' → logprob: -1.909589171409607
    4. '   ' → logprob: -2.4095892906188965
    5. ' else' → logprob: -3.1595892906188965
    6. 'else' → logprob: -3.5345892906188965
    7. ' step' → logprob: -3.6595892906188965
    8. '           ' → logprob: -3.7845892906188965
    9. '<|end|>' → logprob: -3.9095892906188965
    10. ')' → logprob: -4.4095892906188965

Token 941: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.011190356686711311
    2. 'else' → logprob: -5.261190414428711
    3. 'break' → logprob: -5.761190414428711
    4. '   ' → logprob: -7.261190414428711
    5. 'T' → logprob: -7.386190414428711
    6. 'order' → logprob: -7.511190414428711
    7. 'continue' → logprob: -7.636190414428711
    8. '           ' → logprob: -8.261190414428711
    9. ' step' → logprob: -9.386190414428711
    10. '       ' → logprob: -10.136190414428711

Token 942: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. 'time' → logprob: -15.25
    3. '_' → logprob: -17.5
    4. 'Time' → logprob: -18.875
    5. '_TIME' → logprob: -20.375
    6. '_Time' → logprob: -21.375
    7. '_in' → logprob: -21.5
    8. '_type' → logprob: -21.5
    9. '_size' → logprob: -22.625
    10. '1' → logprob: -22.75

Token 943: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.19264525175094604
    2. 'continue' → logprob: -2.567645311355591
    3. ' else' → logprob: -3.067645311355591
    4. '```' → logprob: -4.192645072937012
    5. 'elif' → logprob: -4.442645072937012
    6. '       ' → logprob: -4.442645072937012
    7. ' continue' → logprob: -5.317645072937012
    8. '   ' → logprob: -5.317645072937012
    9. ')' → logprob: -6.942645072937012
    10. '           ' → logprob: -8.317645072937012

Token 945: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0019618207588791847
    2. '   ' → logprob: -6.376961708068848
    3. 'else' → logprob: -8.626961708068848
    4. '           ' → logprob: -10.376961708068848
    5. '       ' → logprob: -10.876961708068848
    6. ' continue' → logprob: -10.876961708068848
    7. '	continue' → logprob: -12.001961708068848
    8. '```' → logprob: -12.876961708068848
    9. 'contin' → logprob: -14.251961708068848
    10. 'continued' → logprob: -14.376961708068848

Token 946: '
' (ID: 198)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.009387578815221786
    2. 'else' → logprob: -6.384387493133545
    3. 'remaining' → logprob: -6.384387493133545
    4. 'delivery' → logprob: -6.509387493133545
    5. '```' → logprob: -6.634387493133545
    6. '       ' → logprob: -7.009387493133545
    7. 'del' → logprob: -7.134387493133545
    8. 'all' → logprob: -8.134387969970703
    9. 'deliver' → logprob: -8.384387969970703
    10. ' destination' → logprob: -8.634387969970703

Token 947: '       ' (ID: 309)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.6350069642066956
    2. 'destination' → logprob: -0.8850069642066956
    3. 'else' → logprob: -3.635006904602051
    4. 'delivery' → logprob: -4.510006904602051
    5. 'deliver' → logprob: -4.760006904602051
    6. 'remaining' → logprob: -5.385006904602051
    7. '```' → logprob: -6.135006904602051
    8. 'if' → logprob: -7.260006904602051
    9. 'PF' → logprob: -7.385006904602051
    10. 'dest' → logprob: -7.385006904602051

Token 948: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' (adapté à ' destination') → logprob: -0.33364561200141907
    2. 'del' → logprob: -1.3336455821990967
    3. '       ' → logprob: -4.458645820617676
    4. 'deliver' → logprob: -5.583645820617676
    5. 'delivery' → logprob: -5.708645820617676
    6. '   ' → logprob: -7.083645820617676
    7. '           ' → logprob: -8.083645820617676
    8. 'remaining' → logprob: -8.333645820617676
    9. '```' → logprob: -10.083645820617676
    10. 'dest' → logprob: -10.458645820617676

Token 949: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751762747764587
    2. ' =' → logprob: -3.529751777648926
    3. ',' → logprob: -14.154751777648926
    4. '=
' → logprob: -16.27975082397461
    5. '=user' → logprob: -16.40475082397461
    6. '＝' → logprob: -16.65475082397461
    7. '=d' → logprob: -16.77975082397461
    8. '=end' → logprob: -17.52975082397461
    9. '   ' → logprob: -17.65475082397461
    10. '=

' → logprob: -17.65475082397461

Token 950: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00975679699331522
    2. ' all' → logprob: -4.634756565093994
    3. '	all' → logprob: -14.759757041931152
    4. '(all' → logprob: -15.884757041931152
    5. '   ' → logprob: -16.134756088256836
    6. ' ' → logprob: -17.259756088256836
    7. 'All' → logprob: -17.384756088256836
    8. '_all' → logprob: -17.759756088256836
    9. ''all' → logprob: -17.759756088256836
    10. '       ' → logprob: -18.259756088256836

Token 951: '_orders' (ID: 88420)
  Prédit: '_orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orders' → logprob: -2.534558552724775e-05
    2. 'orders' → logprob: -10.750025749206543
    3. '_order' → logprob: -13.375025749206543
    4. 'Orders' → logprob: -13.625025749206543
    5. '_nodes' → logprob: -15.250025749206543
    6. '```' → logprob: -15.250025749206543
    7. '[_' → logprob: -16.625024795532227
    8. '_codes' → logprob: -16.625024795532227
    9. '_requests' → logprob: -16.750024795532227
    10. '_indexes' → logprob: -16.750024795532227

Token 952: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.1160349458805285e-05
    2. 'idx' → logprob: -11.500011444091797
    3. '```' → logprob: -14.875011444091797
    4. '[' → logprob: -15.625011444091797
    5. '[min' → logprob: -16.000011444091797
    6. '[index' → logprob: -16.375011444091797
    7. '[src' → logprob: -17.125011444091797
    8. '[next' → logprob: -17.125011444091797
    9. ' idx' → logprob: -17.750011444091797
    10. '[int' → logprob: -18.125011444091797

Token 953: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0006807420286349952
    2. '][' → logprob: -8.000680923461914
    3. '.pop' → logprob: -8.375680923461914
    4. ']' → logprob: -9.250680923461914
    5. '}.' → logprob: -12.125680923461914
    6. ' ].' → logprob: -12.500680923461914
    7. '[' → logprob: -12.625680923461914
    8. '.' → logprob: -13.250680923461914
    9. ''].' → logprob: -13.875680923461914
    10. '.remove' → logprob: -14.500680923461914

Token 954: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -4.320199877838604e-07
    2. '.pop' → logprob: -14.875
    3. '	pop' → logprob: -18.125
    4. ' pop' → logprob: -18.625
    5. '```' → logprob: -20.5
    6. '(pop' → logprob: -20.75
    7. '_pop' → logprob: -21.125
    8. '   ' → logprob: -22.75
    9. '__' → logprob: -23.0
    10. 'p' → logprob: -23.375

Token 955: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -9.376848902320489e-05
    2. 'j' → logprob: -9.375093460083008
    3. '(' → logprob: -11.875093460083008
    4. '[j' → logprob: -13.875093460083008
    5. ',j' → logprob: -15.250093460083008
    6. '(
' → logprob: -15.750093460083008
    7. ':j' → logprob: -16.000093460083008
    8. '(idx' → logprob: -16.125093460083008
    9. ' j' → logprob: -16.500093460083008
    10. ';j' → logprob: -16.625093460083008

Token 956: 'dx' (ID: 22100)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0016123391687870026
    2. '(j' → logprob: -7.126612186431885
    3. ' j' → logprob: -7.626612186431885
    4. 'dx' → logprob: -8.626612663269043
    5. 'jx' → logprob: -10.126612663269043
    6. '```' → logprob: -10.876612663269043
    7. '   ' → logprob: -11.001612663269043
    8. 'jax' → logprob: -11.376612663269043
    9. ')' → logprob: -11.626612663269043
    10. '[j' → logprob: -11.751612663269043

Token 957: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47429677844047546
    2. ')' → logprob: -0.9742968082427979
    3. '       ' → logprob: -8.474296569824219
    4. ')
' → logprob: -11.974296569824219
    5. ')

' → logprob: -13.724296569824219
    6. ')`
' → logprob: -13.974296569824219
    7. '           ' → logprob: -14.599296569824219
    8. '   ' → logprob: -14.849296569824219
    9. ' )
' → logprob: -15.099296569824219
    10. ')return' → logprob: -15.474296569824219

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0761239156126976
    2. 'del' → logprob: -3.0761239528656006
    3. 'remaining' → logprob: -3.9511239528656006
    4. '   ' → logprob: -6.2011237144470215
    5. 'return' → logprob: -6.7011237144470215
    6. ' delivering' → logprob: -6.8261237144470215
    7. '```' → logprob: -7.2011237144470215
    8. 'destination' → logprob: -7.3261237144470215
    9. ' remaining' → logprob: -7.7011237144470215
    10. '           ' → logprob: -7.7011237144470215

Token 959: ' remaining' (ID: 15448)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.2712351679801941
    2. 'remaining' (adapté à ' remaining') → logprob: -1.8962352275848389
    3. 'return' → logprob: -2.521235227584839
    4. '       ' → logprob: -5.52123498916626
    5. 'deliver' → logprob: -6.89623498916626
    6. '   ' → logprob: -7.39623498916626
    7. ' delivering' → logprob: -7.64623498916626
    8. ' remaining' → logprob: -8.021235466003418
    9. 'destination' → logprob: -8.646235466003418
    10. 'delivery' → logprob: -8.771235466003418

Token 960: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.05629081651568413
    2. '_next' → logprob: -2.931290864944458
    3. 'last' → logprob: -6.806290626525879
    4. 'next' → logprob: -9.056290626525879
    5. 'destination' → logprob: -10.181290626525879
    6. '_dest' → logprob: -10.556290626525879
    7. '_destination' → logprob: -10.556290626525879
    8. '_val' → logprob: -11.306290626525879
    9. 'distance' → logprob: -11.306290626525879
    10. '_remaining' → logprob: -11.556290626525879

Token 961: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687863945961
    2. ' =' → logprob: -1.1368786096572876
    3. '=_' → logprob: -11.886878967285156
    4. '+=' → logprob: -15.761878967285156
    5. ' +=' → logprob: -15.886878967285156
    6. ',' → logprob: -16.136878967285156
    7. '＝' → logprob: -16.636878967285156
    8. '   ' → logprob: -16.761878967285156
    9. ' ' → logprob: -16.886878967285156
    10. '_=' → logprob: -17.011878967285156

Token 962: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.842555426876061e-06
    2. 'int' → logprob: -12.625004768371582
    3. '_int' → logprob: -15.000004768371582
    4. 'dist' → logprob: -15.375004768371582
    5. '_DIST' → logprob: -15.500004768371582
    6. '   ' → logprob: -15.750004768371582
    7. '_dst' → logprob: -16.1250057220459
    8. '_distance' → logprob: -16.3750057220459
    9. 'Dist' → logprob: -16.6250057220459
    10. '_dest' → logprob: -16.6250057220459

Token 963: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25201916694641113
    2. '_dist' → logprob: -1.5020191669464111
    3. 'int' → logprob: -10.252018928527832
    4. 'ist' → logprob: -10.377018928527832
    5. ' dist' → logprob: -12.127018928527832
    6. 'Dist' → logprob: -12.377018928527832
    7. '	dist' → logprob: -12.627018928527832
    8. 'np' → logprob: -13.877018928527832
    9. '.dist' → logprob: -14.252018928527832
    10. 'arg' → logprob: -14.252018928527832

Token 964: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07255550473928452
    2. '1' → logprob: -2.6975555419921875
    3. 'v' → logprob: -6.3225555419921875
    4. '[v' → logprob: -7.1975555419921875
    5. '(' → logprob: -9.947555541992188
    6. '   ' → logprob: -12.322555541992188
    7. '```' → logprob: -12.572555541992188
    8. '(v' → logprob: -12.697555541992188
    9. ' ' → logprob: -13.072555541992188
    10. '[next' → logprob: -13.072555541992188

Token 965: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001872094871941954
    2. '0' → logprob: -8.625186920166016
    3. ' ' → logprob: -12.250186920166016
    4. '```' → logprob: -14.875186920166016
    5. 'np' → logprob: -15.062686920166016
    6. 'destination' → logprob: -15.125186920166016
    7. '(' → logprob: -15.125186920166016
    8. 'v' → logprob: -15.187686920166016
    9. '[' → logprob: -15.750186920166016
    10. '
' → logprob: -15.812686920166016

Token 966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007634196896106005
    2. ',d' → logprob: -4.882634162902832
    3. ',v' → logprob: -11.757634162902832
    4. '[' → logprob: -11.882634162902832
    5. ' ,' → logprob: -12.007634162902832
    6. 'destination' → logprob: -13.007634162902832
    7. ',[' → logprob: -13.507634162902832
    8. ',
' → logprob: -13.882634162902832
    9. '[d' → logprob: -13.882634162902832
    10. '```' → logprob: -14.882634162902832

Token 967: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.00023166877508629113
    2. ' destination' → logprob: -8.500231742858887
    3. 'v' → logprob: -10.500231742858887
    4. 'dest' → logprob: -15.125231742858887
    5. '(destination' → logprob: -15.625231742858887
    6. '   ' → logprob: -15.875231742858887
    7. '_destination' → logprob: -17.25023078918457
    8. 'd' → logprob: -17.37523078918457
    9. ' v' → logprob: -17.37523078918457
    10. '.destination' → logprob: -18.12523078918457

Token 968: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08107751607894897
    2. '-' → logprob: -3.5810775756835938
    3. '
' → logprob: -3.5810775756835938
    4. ')' → logprob: -5.456077575683594
    5. ' -' → logprob: -5.456077575683594
    6. '   ' → logprob: -5.831077575683594
    7. ']' → logprob: -6.081077575683594
    8. 'v' → logprob: -6.331077575683594
    9. ')
' → logprob: -6.331077575683594
    10. ';' → logprob: -6.706077575683594

Token 969: '       ' (ID: 309)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5940764546394348
    2. 'return' → logprob: -1.59407639503479
    3. 'tmp' → logprob: -1.71907639503479
    4. 'v' → logprob: -3.21907639503479
    5. '       ' → logprob: -4.094076633453369
    6. '   ' → logprob: -5.469076633453369
    7. 'del' → logprob: -6.344076633453369
    8. '           ' → logprob: -7.094076633453369
    9. 'destination' → logprob: -7.094076633453369
    10. 'if' → logprob: -8.469076156616211

Token 970: ' v' (ID: 323)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0885964184999466
    2. 'remaining' → logprob: -2.7135963439941406
    3. 'v' (adapté à ' v') → logprob: -4.463596343994141
    4. '_tmp' → logprob: -5.088596343994141
    5. 'if' → logprob: -8.83859634399414
    6. 'destination' → logprob: -8.96359634399414
    7. '_remaining' → logprob: -8.96359634399414
    8. 'temp' → logprob: -9.21359634399414
    9. '_pred' → logprob: -9.33859634399414
    10. '   ' → logprob: -10.08859634399414

Token 971: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.054500666621607e-06
    2. '_next' → logprob: -13.00000286102295
    3. ' next' → logprob: -14.50000286102295
    4. '	next' → logprob: -16.750003814697266
    5. '[next' → logprob: -16.875003814697266
    6. '(next' → logprob: -17.250003814697266
    7. 'from' → logprob: -17.500003814697266
    8. '=' → logprob: -18.250003814697266
    9. '.next' → logprob: -18.500003814697266
    10. ' =' → logprob: -19.000003814697266

Token 972: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890135049819946
    2. ' =' → logprob: -2.5789012908935547
    3. ',' → logprob: -12.078901290893555
    4. '=v' → logprob: -12.578901290893555
    5. '=_' → logprob: -13.328901290893555
    6. '_=' → logprob: -14.578901290893555
    7. '＝' → logprob: -16.328901290893555
    8. '_' → logprob: -16.828901290893555
    9. '<|end|>' → logprob: -16.953901290893555
    10. 'v' → logprob: -16.953901290893555

Token 973: ' _' (ID: 1175)
  Prédit: '_pred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pred' → logprob: -2.47495681833243e-05
    2. '_preds' → logprob: -11.625024795532227
    3. ' _' → logprob: -11.875024795532227
    4. '_p' → logprob: -13.500024795532227
    5. ' ' → logprob: -13.625024795532227
    6. 'np' → logprob: -14.250024795532227
    7. '1' → logprob: -14.375024795532227
    8. '_predict' → logprob: -14.375024795532227
    9. '_prec' → logprob: -14.500024795532227
    10. '_pat' → logprob: -14.625024795532227

Token 974: 'pred' (ID: 32189)
  Prédit: '_pred'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pred' → logprob: -0.0036707334220409393
    2. 'pred' → logprob: -5.628670692443848
    3. 'v' → logprob: -11.003670692443848
    4. 'next' → logprob: -11.128670692443848
    5. '1' → logprob: -11.628670692443848
    6. '_preds' → logprob: -12.378670692443848
    7. 'np' → logprob: -12.753670692443848
    8. '_dist' → logprob: -12.753670692443848
    9. '_pro' → logprob: -12.878670692443848
    10. '0' → logprob: -13.128670692443848

Token 975: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0009697027853690088
    2. 'destination' → logprob: -7.375969886779785
    3. '[' → logprob: -8.250969886779785
    4. '(destination' → logprob: -10.000969886779785
    5. '1' → logprob: -11.000969886779785
    6. 'd' → logprob: -11.375969886779785
    7. ' destination' → logprob: -13.375969886779785
    8. '[v' → logprob: -13.500969886779785
    9. '[source' → logprob: -13.500969886779785
    10. '(d' → logprob: -14.375969886779785

Token 976: 'estination' (ID: 15822)
  Prédit: 'estination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'estination' → logprob: -0.007129019591957331
    2. 'destination' → logprob: -5.507129192352295
    3. 'next' → logprob: -6.757129192352295
    4. '[' → logprob: -7.132129192352295
    5. '[next' → logprob: -7.257129192352295
    6. 'istance' → logprob: -9.132128715515137
    7. '(destination' → logprob: -9.757128715515137
    8. '_destination' → logprob: -10.757128715515137
    9. 'estion' → logprob: -11.382128715515137
    10. '[d' → logprob: -11.382128715515137

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. '[' → logprob: -9.875076293945312
    3. ' ,' → logprob: -11.875076293945312
    4. '1' → logprob: -12.000076293945312
    5. 'import' → logprob: -12.250076293945312
    6. 'v' → logprob: -13.750076293945312
    7. '```' → logprob: -13.750076293945312
    8. 's' → logprob: -14.625076293945312
    9. ']' → logprob: -14.625076293945312
    10. '][' → logprob: -14.687576293945312

Token 978: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001126026691053994
    2. ' ' → logprob: -9.125112533569336
    3. '0' → logprob: -13.500112533569336
    4. 'destination' → logprob: -13.875112533569336
    5. ',' → logprob: -14.500112533569336
    6. '   ' → logprob: -15.000112533569336
    7. '```' → logprob: -16.312612533569336
    8. '
' → logprob: -16.937612533569336
    9. 'v' → logprob: -17.000112533569336
    10. '  ' → logprob: -17.187612533569336

Token 979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.750011444091797
    3. '0' → logprob: -12.875011444091797
    4. 'v' → logprob: -14.125011444091797
    5. '   ' → logprob: -16.250011444091797
    6. 'last' → logprob: -16.625011444091797
    7. 'destination' → logprob: -16.687511444091797
    8. '```' → logprob: -16.812511444091797
    9. '-' → logprob: -17.062511444091797
    10. 'T' → logprob: -17.437511444091797

Token 980: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07891710847616196
    2. ']
' → logprob: -2.5789170265197754
    3. '       ' → logprob: -11.078917503356934
    4. ']
' → logprob: -12.078917503356934
    5. ' ]' → logprob: -13.328917503356934
    6. ']+' → logprob: -14.078917503356934
    7. ']

' → logprob: -14.453917503356934
    8. '   ' → logprob: -14.453917503356934
    9. ']-' → logprob: -14.828917503356934
    10. '<|end|>' → logprob: -14.828917503356934

Token 981: '       ' (ID: 309)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.4299395978450775
    2. '       ' → logprob: -1.0549396276474
    3. ' remaining' → logprob: -7.3049397468566895
    4. '   ' → logprob: -7.6799397468566895
    5. 'del' → logprob: -10.554939270019531
    6. '           ' → logprob: -10.804939270019531
    7. '	' → logprob: -11.679939270019531
    8. 'remain' → logprob: -11.679939270019531
    9. 'rest' → logprob: -12.054939270019531
    10. 'rem' → logprob: -12.679939270019531

Token 982: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -3.941161776310764e-05
    2. '       ' → logprob: -10.500039100646973
    3. ' remaining' → logprob: -12.375039100646973
    4. 'del' → logprob: -12.500039100646973
    5. '   ' → logprob: -13.250039100646973
    6. '           ' → logprob: -13.625039100646973
    7. 'destination' → logprob: -15.250039100646973
    8. 'return' → logprob: -15.625039100646973
    9. 'PF' → logprob: -15.875039100646973
    10. '               ' → logprob: -16.37504005432129

Token 983: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.06315118074417114
    2. '_last' → logprob: -2.8131511211395264
    3. 'next' → logprob: -6.8131513595581055
    4. 'last' → logprob: -9.438151359558105
    5. ' next' → logprob: -14.313151359558105
    6. '_prev' → logprob: -14.438151359558105
    7. '_first' → logprob: -14.438151359558105
    8. '=' → logprob: -14.563151359558105
    9. '_' → logprob: -15.188151359558105
    10. 'Next' → logprob: -15.563151359558105

Token 984: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026300642639398575
    2. ' =' → logprob: -3.6513006687164307
    3. '=_' → logprob: -15.776300430297852
    4. '   ' → logprob: -16.40130043029785
    5. '+=' → logprob: -17.40130043029785
    6. '       ' → logprob: -17.52630043029785
    7. '=
' → logprob: -17.90130043029785
    8. ' ' → logprob: -18.02630043029785
    9. '.=' → logprob: -18.52630043029785
    10. '＝' → logprob: -18.52630043029785

Token 985: ' _' (ID: 1175)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.4121114822482923e-06
    2. 'int' → logprob: -14.000003814697266
    3. ' _' → logprob: -14.125003814697266
    4. 'dist' → logprob: -14.625003814697266
    5. '   ' → logprob: -14.875003814697266
    6. ' ' → logprob: -15.375003814697266
    7. '_dst' → logprob: -16.000003814697266
    8. '_DIST' → logprob: -16.000003814697266
    9. 'Dist' → logprob: -16.125003814697266
    10. '_int' → logprob: -16.250003814697266

Token 986: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005946221761405468
    2. '_dist' → logprob: -5.130946159362793
    3. 'pred' → logprob: -11.255946159362793
    4. 'v' → logprob: -13.130946159362793
    5. 'int' → logprob: -14.255946159362793
    6. '	dist' → logprob: -14.380946159362793
    7. 'Dist' → logprob: -14.505946159362793
    8. 'cost' → logprob: -15.005946159362793
    9. ' dist' → logprob: -16.00594711303711
    10. '_pred' → logprob: -16.25594711303711

Token 987: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15249788761138916
    2. '[d' → logprob: -2.0274977684020996
    3. '[v' → logprob: -4.7774977684021
    4. '1' → logprob: -6.9024977684021
    5. 'destination' → logprob: -8.277498245239258
    6. 'v' → logprob: -10.027498245239258
    7. 'd' → logprob: -10.277498245239258
    8. '(destination' → logprob: -13.027498245239258
    9. '[p' → logprob: -13.277498245239258
    10. ' [' → logprob: -13.527498245239258

Token 988: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5054845213890076
    2. 'destination' → logprob: -1.1304845809936523
    3. 'v' → logprob: -2.6304845809936523
    4. '[v' → logprob: -7.130484580993652
    5. '[' → logprob: -8.005484580993652
    6. 'd' → logprob: -8.505484580993652
    7. '(destination' → logprob: -8.880484580993652
    8. ' destination' → logprob: -9.005484580993652
    9. 'dest' → logprob: -9.255484580993652
    10. '[d' → logprob: -10.817984580993652

Token 989: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06589580327272415
    2. ',v' → logprob: -2.8158957958221436
    3. 'v' → logprob: -5.565896034240723
    4. '[v' → logprob: -10.065896034240723
    5. ',d' → logprob: -10.190896034240723
    6. '[' → logprob: -11.690896034240723
    7. ' ,' → logprob: -12.690896034240723
    8. ',
' → logprob: -13.940896034240723
    9. 'destination' → logprob: -14.315896034240723
    10. ' v' → logprob: -14.940896034240723

Token 990: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.6934557505883276e-05
    2. ' v' → logprob: -10.250057220458984
    3. '   ' → logprob: -11.125057220458984
    4. 'destination' → logprob: -12.250057220458984
    5. '       ' → logprob: -14.125057220458984
    6. '	v' → logprob: -15.125057220458984
    7. '     ' → logprob: -15.250057220458984
    8. '      ' → logprob: -16.000057220458984
    9. '    ' → logprob: -16.000057220458984
    10. '  ' → logprob: -16.250057220458984

Token 991: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -7.612634362885728e-05
    2. 'ext' → logprob: -9.625076293945312
    3. '_next' → logprob: -11.625076293945312
    4. 'Next' → logprob: -15.250076293945312
    5. '(next' → logprob: -15.875076293945312
    6. ' next' → logprob: -15.875076293945312
    7. '[next' → logprob: -16.000076293945312
    8. 'ex' → logprob: -16.375076293945312
    9. 'to' → logprob: -16.375076293945312
    10. ',next' → logprob: -17.375076293945312

Token 992: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001578301889821887
    2. ']
' → logprob: -6.751578330993652
    3. ' ]' → logprob: -9.001578330993652
    4. ')' → logprob: -9.251578330993652
    5. '   ' → logprob: -9.251578330993652
    6. ',' → logprob: -10.876578330993652
    7. '       ' → logprob: -11.251578330993652
    8. '[' → logprob: -11.251578330993652
    9. ']-' → logprob: -11.501578330993652
    10. ')]' → logprob: -11.626578330993652

Token 993: '       ' (ID: 309)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.007652772590517998
    2. 'destination' → logprob: -6.007652759552002
    3. 'deliver' → logprob: -6.132652759552002
    4. 'return' → logprob: -6.257652759552002
    5. 'v' → logprob: -8.13265323638916
    6. 'remaining' → logprob: -8.63265323638916
    7. '```' → logprob: -8.75765323638916
    8. 'print' → logprob: -8.88265323638916
    9. '   ' → logprob: -9.00765323638916
    10. 'delivery' → logprob: -9.38265323638916

Token 994: ' delivering' (ID: 28556)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.0006111674592830241
    2. '       ' → logprob: -8.500611305236816
    3. 'deliver' → logprob: -8.625611305236816
    4. 'return' → logprob: -9.125611305236816
    5. 'destination' → logprob: -10.000611305236816
    6. '   ' → logprob: -10.000611305236816
    7. 'delivery' → logprob: -11.000611305236816
    8. '           ' → logprob: -11.750611305236816
    9. ' delivering' → logprob: -12.750611305236816
    10. '```' → logprob: -15.250611305236816

Token 995: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409239411354065
    2. '=' → logprob: -0.9740923643112183
    3. '=True' → logprob: -11.224092483520508
    4. ' +=' → logprob: -13.974092483520508
    5. ' |=' → logprob: -14.349092483520508
    6. ' ' → logprob: -15.599092483520508
    7. '   ' → logprob: -15.599092483520508
    8. '+=' → logprob: -15.724092483520508
    9. '	' → logprob: -16.974092483520508
    10. ',' → logprob: -17.474092483520508

Token 996: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0040970430709421635
    2. ' True' → logprob: -5.504096984863281
    3. '1' → logprob: -11.254096984863281
    4. '   ' → logprob: -13.004096984863281
    5. 'False' → logprob: -13.504096984863281
    6. '(True' → logprob: -13.879096984863281
    7. 'not' → logprob: -14.629096984863281
    8. 'true' → logprob: -15.254096984863281
    9. '       ' → logprob: -16.25409698486328
    10. '=True' → logprob: -16.62909698486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 994
Tokens correctement prédits (1ère position, stricte): 357
Tokens correctement prédits (1ère position, avec adaptation): 383
Tokens correctement prédits (top 10): 762
Précision stricte (1ère position): 35.92%
Précision adaptée (1ère position): 38.53%
Précision (top 10): 76.66%
================================================================================
