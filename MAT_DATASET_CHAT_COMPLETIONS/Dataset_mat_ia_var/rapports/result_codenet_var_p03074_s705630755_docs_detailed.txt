================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import sys
import math
from functools import lru_cache
from queue import Queue
from operator import mul
from functools import reduce

input = sys.stdin.readline

def main():
    """
    Reads input values and computes the maximum length of a substring containing at most k blocks of consecutive '1's.
    The function reads two integers n and k, where n is the length of the binary string s and k is the maximum allowed
    groups of '1's. It then reads the string s, processes it, and prints the maximum length substring containing at most
    k blocks of consecutive '1's.
    """
    # Read n (length of string) and k (max number of blocks of '1's) from input
    n, k = list(map(int, input().split()))
    # Read the binary string s and append a sentinel character '2' to mark the end of the string
    s = input().strip() + '2'
    ret = 0  # Initialize the result variable to store the maximum length found

    def next0(l: int) -> int:
        """
        Finds the index of the next occurrence of '0' or the string-ending sentinel '2' starting from index l + 1.

        Args:
            l (int): Index to start searching from.

        Returns:
            int: The index of the next '0' or '2', but not exceeding n (the length of the original string).
        """
        if l >= n:
            return l
        l += 1
        while s[l] != '2' and s[l] != '0':
            l += 1
        return min(l, n)

    def next1(l: int) -> int:
        """
        Finds the index of the next occurrence of '1' or the string-ending sentinel '2' starting from index l + 1.

        Args:
            l (int): Index to start searching from.

        Returns:
            int: The index of the next '1' or '2', but not exceeding n (the length of the original string).
        """
        if l >= n:
            return l
        l += 1
        while s[l] != '2' and s[l] != '1':
            l += 1
        return min(l, n)

    # Initialize window pointers
    start = 0  # Start index of the current substring window
    end = 0    # End index of the current substring window

    # Advance 'end' pointer so that the window contains at most k groups of consecutive '1's:
    # 1. Move to the first group of '0's (skipping leading '1's)
    end = next0(end)
    # 2. For each group, move to the next '1', then the next '0' to cover a group of '1's
    for _ in range(k):
        end = next1(end)
        end = next0(end)

    # Initialize the result with the initial window size
    ret = end - start

    # Slide the window: move start and end, maintaining at most k groups of '1's
    while end < n:
        # Move start to the next group of '1's past a block of zeros
        start = next1(next0(start))
        # Move end to the next group of '0's past a block of ones
        end = next0(next1(end))
        # Update the result if we've got a longer valid window
        ret = max(ret, end - start)

    # Output the maximum length found
    print(ret)

# Run the main function when the script is executed
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9862216504407115e-05
    2. '```' → logprob: -12.625020027160645
    3. 'import' → logprob: -13.250020027160645
    4. '."""' → logprob: -13.500020027160645
    5. '\' → logprob: -13.625020027160645
    6. ' .' → logprob: -13.750020027160645
    7. '.

' → logprob: -13.750020027160645
    8. '\.' → logprob: -13.875020027160645
    9. '​.' → logprob: -14.125020027160645
    10. '.`' → logprob: -14.125020027160645

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.8327421545982361
    2. ' math' → logprob: -1.3327422142028809
    3. ' os' → logprob: -2.082742214202881
    4. ' collections' → logprob: -2.332742214202881
    5. ' functools' → logprob: -2.832742214202881
    6. ' operator' → logprob: -5.082742214202881
    7. 'os' → logprob: -5.207742214202881
    8. 'collections' → logprob: -6.207742214202881
    9. 'sys' → logprob: -6.332742214202881
    10. 'math' → logprob: -6.707742214202881

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06805732846260071
    2. '\n' → logprob: -3.5680572986602783
    3. '\' → logprob: -3.9430572986602783
    4. '```' → logprob: -5.318057537078857
    5. '
' → logprob: -5.693057537078857
    6. 'import' → logprob: -5.818057537078857
    7. '

' → logprob: -6.443057537078857
    8. ',' → logprob: -6.693057537078857
    9. '<|end|>' → logprob: -7.318057537078857
    10. '[' → logprob: -7.443057537078857

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030675064772367477
    2. '\n' → logprob: -4.155674934387207
    3. '```' → logprob: -5.780674934387207
    4. '\' → logprob: -6.155674934387207
    5. '
' → logprob: -6.155674934387207
    6. '[' → logprob: -6.655674934387207
    7. '<|end|>' → logprob: -6.905674934387207
    8. 'import' → logprob: -7.030674934387207
    9. ',' → logprob: -7.280674934387207
    10. '.
' → logprob: -7.405674934387207

Token 7: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.023683782666921616
    2. 'os' → logprob: -3.773683786392212
    3. ' collections' → logprob: -8.023683547973633
    4. ' math' → logprob: -9.648683547973633
    5. 'collections' → logprob: -10.773683547973633
    6. ' io' → logprob: -11.648683547973633
    7. 'math' → logprob: -12.523683547973633
    8. ' re' → logprob: -12.898683547973633
    9. ' argparse' → logprob: -12.898683547973633
    10. ' functools' → logprob: -13.148683547973633

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2171285152435303
    2. '```' → logprob: -1.2171285152435303
    3. '\n' → logprob: -1.8421285152435303
    4. '\' → logprob: -2.0921285152435303
    5. '
' → logprob: -3.0921285152435303
    6. '<|end|>' → logprob: -3.8421285152435303
    7. '

' → logprob: -3.9671285152435303
    8. 'import' → logprob: -4.967128753662109
    9. '#' → logprob: -4.967128753662109
    10. 'def' → logprob: -5.217128753662109

Token 9: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9971296787261963
    2. '```' → logprob: -1.6221296787261963
    3. '\' → logprob: -1.9971296787261963
    4. '
' → logprob: -2.3721296787261963
    5. 'def' → logprob: -2.4971296787261963
    6. 'import' → logprob: -3.2471296787261963
    7. '

' → logprob: -3.6221296787261963
    8. '.' → logprob: -3.9971296787261963
    9. '#' → logprob: -4.622129440307617
    10. 'from' → logprob: -5.122129440307617

Token 10: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.17287564277648926
    2. 'collections' → logprob: -2.0478756427764893
    3. ' fractions' → logprob: -4.79787540435791
    4. ' functools' → logprob: -4.79787540435791
    5. ' typing' → logprob: -5.42287540435791
    6. ' operator' → logprob: -6.79787540435791
    7. ' statistics' → logprob: -6.79787540435791
    8. 'os' → logprob: -6.79787540435791
    9. ' itertools' → logprob: -6.79787540435791
    10. ' os' → logprob: -6.79787540435791

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03399881348013878
    2. 'import' → logprob: -3.408998727798462
    3. ' ' → logprob: -8.783998489379883
    4. '.' → logprob: -8.908998489379883
    5. '_import' → logprob: -10.783998489379883
    6. '_' → logprob: -11.283998489379883
    7. ' ' → logprob: -11.408998489379883
    8. '	import' → logprob: -11.658998489379883
    9. '<|end|>' → logprob: -12.783998489379883
    10. ' _' → logprob: -13.783998489379883

Token 12: ' l' (ID: 305)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.9466946721076965
    2. 'reduce' → logprob: -0.9466946721076965
    3. ' l' → logprob: -1.8216946125030518
    4. 'l' → logprob: -4.071694850921631
    5. ' partial' → logprob: -4.196694850921631
    6. 'partial' → logprob: -4.321694850921631
    7. ' wraps' → logprob: -4.446694850921631
    8. 'wrap' → logprob: -5.446694850921631
    9. ' cmp' → logprob: -8.696694374084473
    10. 'cmp' → logprob: -8.821694374084473

Token 13: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.249780638725497e-05
    2. 'u' → logprob: -12.000032424926758
    3. 'ambda' → logprob: -12.000032424926758
    4. 'r' → logprob: -12.125032424926758
    5. 'a' → logprob: -12.625032424926758
    6. 'amb' → logprob: -12.875032424926758
    7. 'ruz' → logprob: -12.875032424926758
    8. 'z' → logprob: -13.625032424926758
    9. 'reduce' → logprob: -13.875032424926758
    10. 'partial' → logprob: -14.500032424926758

Token 14: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.038986098021268845
    2. '_c' → logprob: -3.9139862060546875
    3. '_' → logprob: -4.2889862060546875
    4. 'c' → logprob: -5.9139862060546875
    5. '_ca' → logprob: -7.0389862060546875
    6. 'cache' → logprob: -7.1639862060546875
    7. '_cached' → logprob: -9.663986206054688
    8. 'ca' → logprob: -10.288986206054688
    9. '_

' → logprob: -11.038986206054688
    10. '_
' → logprob: -11.538986206054688

Token 15: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7390802502632141
    2. '\' → logprob: -1.2390801906585693
    3. '
' → logprob: -2.1140801906585693
    4. '

' → logprob: -3.2390801906585693
    5. '@' → logprob: -3.9890801906585693
    6. 'def' → logprob: -4.364080429077148
    7. 'import' → logprob: -4.614080429077148
    8. '```' → logprob: -4.739080429077148
    9. '' → logprob: -4.989080429077148
    10. '#' → logprob: -5.489080429077148

Token 16: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8724775910377502
    2. '

' → logprob: -1.2474775314331055
    3. '\n' → logprob: -1.9974775314331055
    4. '#' → logprob: -3.4974775314331055
    5. 'def' → logprob: -3.4974775314331055
    6. '@' → logprob: -3.4974775314331055
    7. '```' → logprob: -3.4974775314331055
    8. '\' → logprob: -4.3724775314331055
    9. '`' → logprob: -5.4974775314331055
    10. 'd' → logprob: -5.7474775314331055

Token 17: ' queue' (ID: 13661)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.8624229431152344
    2. ' operator' → logprob: -1.1124229431152344
    3. 'collections' → logprob: -1.9874229431152344
    4. ' typing' → logprob: -2.8624229431152344
    5. 'operator' → logprob: -3.2374229431152344
    6. ' ' → logprob: -4.737422943115234
    7. 'typing' → logprob: -5.737422943115234
    8. ' itertools' → logprob: -7.362422943115234
    9. ' heap' → logprob: -7.487422943115234
    10. 'os' → logprob: -7.612422943115234

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016610076650977135
    2. 'import' → logprob: -4.641610145568848
    3. '.' → logprob: -5.141610145568848
    4. ' ' → logprob: -7.016610145568848
    5. '<|end|>' → logprob: -10.266610145568848
    6. ' .' → logprob: -11.141610145568848
    7. '	import' → logprob: -11.266610145568848
    8. '.import' → logprob: -12.391610145568848
    9. ' im' → logprob: -12.891610145568848
    10. '_import' → logprob: -13.141610145568848

Token 19: ' Queue' (ID: 35581)
  Prédit: ' Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Priority' → logprob: -0.052415065467357635
    2. 'Priority' → logprob: -3.302415132522583
    3. ' Queue' → logprob: -4.302414894104004
    4. 'Queue' → logprob: -7.552414894104004
    5. ' deque' → logprob: -9.427414894104004
    6. '.Priority' → logprob: -9.552414894104004
    7. '```' → logprob: -10.427414894104004
    8. ' Simple' → logprob: -10.927414894104004
    9. ' priority' → logprob: -12.927414894104004
    10. ' ' → logprob: -13.052414894104004

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.595476508140564
    2. '

' → logprob: -0.970476508140564
    3. '\n' → logprob: -3.0954766273498535
    4. '#' → logprob: -4.8454766273498535
    5. 'import' → logprob: -5.0954766273498535
    6. '' → logprob: -6.3454766273498535
    7. '\' → logprob: -6.3454766273498535
    8. '<|end|>' → logprob: -6.3454766273498535
    9. '```' → logprob: -6.4704766273498535
    10. 'class' → logprob: -6.8454766273498535

Token 21: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24607045948505402
    2. '

' → logprob: -1.6210705041885376
    3. '#' → logprob: -5.371070384979248
    4. 'import' → logprob: -5.371070384979248
    5. '\n' → logprob: -5.496070384979248
    6. 'class' → logprob: -6.371070384979248
    7. '<|end|>' → logprob: -6.496070384979248
    8. '' → logprob: -7.371070384979248
    9. '
' → logprob: -7.496070384979248
    10. '```' → logprob: -7.621070384979248

Token 22: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3446770906448364
    2. ' threading' → logprob: -1.7196770906448364
    3. 'collections' → logprob: -2.344676971435547
    4. ' multiprocessing' → logprob: -4.594676971435547
    5. 'heap' → logprob: -5.969676971435547
    6. ' heap' → logprob: -6.344676971435547
    7. ' typing' → logprob: -6.969676971435547
    8. ' concurrent' → logprob: -7.969676971435547
    9. 'thread' → logprob: -8.094676971435547
    10. 'multip' → logprob: -8.344676971435547

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.029819458723068237
    2. 'import' → logprob: -3.5298194885253906
    3. '	import' → logprob: -10.52981948852539
    4. '<|end|>' → logprob: -10.90481948852539
    5. ' ' → logprob: -11.40481948852539
    6. '.' → logprob: -12.40481948852539
    7. '_import' → logprob: -12.65481948852539
    8. ' as' → logprob: -14.15481948852539
    9. ' Import' → logprob: -14.27981948852539
    10. ''import' → logprob: -14.40481948852539

Token 24: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.04444845765829086
    2. ' add' → logprob: -3.7944483757019043
    3. 'item' → logprob: -4.169448375701904
    4. ' mul' → logprob: -6.169448375701904
    5. ' attr' → logprob: -6.669448375701904
    6. ' is' → logprob: -7.169448375701904
    7. ' import' → logprob: -7.544448375701904
    8. 'add' → logprob: -8.294448852539062
    9. ' ' → logprob: -8.544448852539062
    10. ' method' → logprob: -9.169448852539062

Token 25: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2794735431671143
    2. 'import' → logprob: -1.4044735431671143
    3. '
' → logprob: -1.5294735431671143
    4. '\n' → logprob: -2.4044735431671143
    5. '<|end|>' → logprob: -3.1544735431671143
    6. '' → logprob: -3.5294735431671143
    7. 'from' → logprob: -3.9044735431671143
    8. '

' → logprob: -4.029473304748535
    9. '\' → logprob: -4.529473304748535
    10. '#' → logprob: -4.904473304748535

Token 26: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9461854100227356
    2. 'import' → logprob: -0.9461854100227356
    3. 'from' → logprob: -2.571185350418091
    4. '#' → logprob: -3.446185350418091
    5. '
' → logprob: -3.571185350418091
    6. '\n' → logprob: -3.696185350418091
    7. '<|end|>' → logprob: -4.19618558883667
    8. '

' → logprob: -4.69618558883667
    9. 'def' → logprob: -5.19618558883667
    10. '' → logprob: -5.44618558883667

Token 27: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8517788052558899
    2. ' functools' → logprob: -0.9767788052558899
    3. 'operator' → logprob: -2.101778745651245
    4. 'fun' → logprob: -4.101778984069824
    5. 'collections' → logprob: -4.101778984069824
    6. ' operator' → logprob: -4.601778984069824
    7. 'random' → logprob: -4.726778984069824
    8. 'math' → logprob: -5.226778984069824
    9. 'heap' → logprob: -5.726778984069824
    10. 'os' → logprob: -5.851778984069824

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16347354650497437
    2. 'import' → logprob: -1.9134736061096191
    3. '_import' → logprob: -6.538473606109619
    4. ' ' → logprob: -6.913473606109619
    5. '_' → logprob: -7.288473606109619
    6. ' _' → logprob: -9.788473129272461
    7. '	import' → logprob: -10.788473129272461
    8. '.' → logprob: -11.038473129272461
    9. '<|end|>' → logprob: -12.038473129272461
    10. ' ' → logprob: -12.163473129272461

Token 29: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0016843474004417658
    2. ' reduce' → logprob: -6.501684188842773
    3. 'partial' → logprob: -9.251684188842773
    4. 'redu' → logprob: -10.001684188842773
    5. 'wrap' → logprob: -10.751684188842773
    6. 'import' → logprob: -11.626684188842773
    7. 'cache' → logprob: -12.876684188842773
    8. '.reduce' → logprob: -13.251684188842773
    9. '_reduce' → logprob: -13.251684188842773
    10. 'red' → logprob: -14.126684188842773

Token 30: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1488606482744217
    2. '
' → logprob: -2.0238606929779053
    3. 'import' → logprob: -6.523860454559326
    4. '


' → logprob: -6.773860454559326
    5. '\n' → logprob: -7.273860454559326
    6. '#' → logprob: -7.398860454559326
    7. '<|end|>' → logprob: -7.398860454559326
    8. 'def' → logprob: -7.773860454559326
    9. '' → logprob: -8.398860931396484
    10. ' 

' → logprob: -8.648860931396484

Token 31: 'input' (ID: 2586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6723731160163879
    2. 'd' → logprob: -1.2973730564117432
    3. '
' → logprob: -2.547373056411743
    4. 'def' → logprob: -2.797373056411743
    5. '\' → logprob: -3.297373056411743
    6. 'n' → logprob: -4.922373294830322
    7. '\n' → logprob: -5.172373294830322
    8. '' → logprob: -5.297373294830322
    9. '@' → logprob: -5.422373294830322
    10. '

' → logprob: -5.422373294830322

Token 32: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003222342347726226
    2. '.' → logprob: -8.875322341918945
    3. ' (' → logprob: -9.750322341918945
    4. '('' → logprob: -10.500322341918945
    5. '()' → logprob: -10.625322341918945
    6. ')' → logprob: -10.875322341918945
    7. '(
' → logprob: -11.625322341918945
    8. '("("' → logprob: -12.125322341918945
    9. '(

' → logprob: -12.375322341918945
    10. ' ' → logprob: -12.500322341918945

Token 33: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3312806487083435
    2. 'sys' → logprob: -1.8312807083129883
    3. 'input' → logprob: -2.5812807083129883
    4. ' input' → logprob: -3.0812807083129883
    5. ' lambda' → logprob: -9.206280708312988
    6. 'lambda' → logprob: -9.581280708312988
    7. 'raw' → logprob: -11.706280708312988
    8. ' raw' → logprob: -11.706280708312988
    9. '	sys' → logprob: -11.956280708312988
    10. ' ' → logprob: -12.331280708312988

Token 34: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09436003118753433
    2. '.stdin' → logprob: -2.719360113143921
    3. '.readline' → logprob: -3.844360113143921
    4. ' .' → logprob: -6.969359874725342
    5. '.read' → logprob: -7.344359874725342
    6. '.input' → logprob: -7.969359874725342
    7. '.stdout' → logprob: -8.0943603515625
    8. '.argv' → logprob: -9.2193603515625
    9. '.import' → logprob: -9.3443603515625
    10. '.setdefault' → logprob: -9.5943603515625

Token 35: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16270215809345245
    2. '.' → logprob: -1.912702202796936
    3. '.read' → logprob: -6.0377020835876465
    4. 'read' → logprob: -9.787702560424805
    5. '.readlines' → logprob: -11.037702560424805
    6. '.Read' → logprob: -12.537702560424805
    7. ' readline' → logprob: -12.787702560424805
    8. '.\' → logprob: -13.162702560424805
    9. '<|end|>' → logprob: -13.912702560424805
    10. '.write' → logprob: -14.037702560424805

Token 36: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.716788649559021
    2. '

' → logprob: -1.966788649559021
    3. 'def' → logprob: -2.2167887687683105
    4. '()

' → logprob: -2.3417887687683105
    5. '()' → logprob: -2.5917887687683105
    6. '
' → logprob: -3.3417887687683105
    7. '(
' → logprob: -3.8417887687683105
    8. '(

' → logprob: -3.9667887687683105
    9. '()
' → logprob: -5.9667887687683105
    10. '\n' → logprob: -5.9667887687683105

Token 37: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07507588714361191
    2. 'class' → logprob: -3.32507586479187
    3. 'n' → logprob: -4.075076103210449
    4. '@' → logprob: -4.325076103210449
    5. '\' → logprob: -6.075076103210449
    6. 'd' → logprob: -7.450076103210449
    7. '\n' → logprob: -7.450076103210449
    8. '
' → logprob: -7.575076103210449
    9. '

' → logprob: -7.700076103210449
    10. '#' → logprob: -7.700076103210449

Token 38: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5498262643814087
    2. ' factorial' → logprob: -1.5498262643814087
    3. ' solve' → logprob: -1.9248262643814087
    4. ' count' → logprob: -4.174826145172119
    5. ' factor' → logprob: -4.299826145172119
    6. ' bfs' → logprob: -4.924826145172119
    7. ' f' → logprob: -5.549826145172119
    8. ' dfs' → logprob: -5.549826145172119
    9. ' calculate' → logprob: -5.674826145172119
    10. ' is' → logprob: -6.049826145172119

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10084401816129684
    2. '(' → logprob: -2.350843906402588
    3. '()' → logprob: -8.225844383239746
    4. ' ():' → logprob: -8.850844383239746
    5. '(:' → logprob: -9.100844383239746
    6. ':' → logprob: -9.850844383239746
    7. '():
' → logprob: -10.600844383239746
    8. '(
' → logprob: -11.350844383239746
    9. '(":' → logprob: -11.600844383239746
    10. '(**' → logprob: -12.600844383239746

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036007463932037354
    2. ':' → logprob: -4.286007404327393
    3. '(' → logprob: -4.411007404327393
    4. ' ' → logprob: -5.536007404327393
    5. 'n' → logprob: -6.661007404327393
    6. '    ' → logprob: -6.661007404327393
    7. '(n' → logprob: -7.161007404327393
    8. ')' → logprob: -7.536007404327393
    9. '    
' → logprob: -8.03600788116455
    10. '():' → logprob: -8.28600788116455

Token 41: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07364126294851303
    2. ' n' → logprob: -2.698641300201416
    3. ' ' → logprob: -6.448641300201416
    4. 't' → logprob: -6.823641300201416
    5. 'for' → logprob: -8.948640823364258
    6. '   ' → logprob: -9.073640823364258
    7. 'q' → logprob: -9.448640823364258
    8. 's' → logprob: -9.573640823364258
    9. ' t' → logprob: -9.698640823364258
    10. 'N' → logprob: -9.948640823364258

Token 42: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7431074976921082
    2. '   ' → logprob: -1.493107557296753
    3. '#' → logprob: -1.868107557296753
    4. ' ' → logprob: -2.743107557296753
    5. 'n' → logprob: -3.368107557296753
    6. ' )' → logprob: -4.618107318878174
    7. '    ' → logprob: -5.243107318878174
    8. '"""' → logprob: -5.368107318878174
    9. ' """' → logprob: -5.368107318878174
    10. ' #' → logprob: -5.993107318878174

Token 43: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7975184917449951
    2. ' """' → logprob: -2.422518491744995
    3. '#' → logprob: -2.672518491744995
    4. '"""' → logprob: -2.922518491744995
    5. 'Calculate' → logprob: -3.047518491744995
    6. 'n' → logprob: -3.547518491744995
    7. '    ' → logprob: -4.047518730163574
    8. ' pass' → logprob: -4.172518730163574
    9. ' Calculate' → logprob: -4.172518730163574
    10. 'def' → logprob: -4.297518730163574

Token 44: ' input' (ID: 3422)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3215746879577637
    2. ' ' → logprob: -1.4465746879577637
    3. ' the' → logprob: -1.5715746879577637
    4. ' input' → logprob: -1.9465746879577637
    5. ' an' → logprob: -2.6965746879577637
    6. '()' → logprob: -3.5715746879577637
    7. ' )' → logprob: -4.071574687957764
    8. ' and' → logprob: -4.946574687957764
    9. ' user' → logprob: -4.946574687957764
    10. '    ' → logprob: -5.446574687957764

Token 45: ' values' (ID: 4824)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11732912063598633
    2. '   ' → logprob: -2.4923291206359863
    3. '(' → logprob: -3.8673291206359863
    4. '():' → logprob: -6.492329120635986
    5. ',' → logprob: -6.992329120635986
    6. ' ' → logprob: -7.117329120635986
    7. ' and' → logprob: -7.492329120635986
    8. '.' → logprob: -7.617329120635986
    9. ')' → logprob: -7.742329120635986
    10. 'def' → logprob: -7.867329120635986

Token 46: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8271279335021973
    2. '   ' → logprob: -0.8271279335021973
    3. '():' → logprob: -3.2021279335021973
    4. ':' → logprob: -3.5771279335021973
    5. ',' → logprob: -4.327127933502197
    6. ' ' → logprob: -4.702127933502197
    7. '()' → logprob: -4.827127933502197
    8. '    ' → logprob: -5.327127933502197
    9. ' and' → logprob: -5.327127933502197
    10. '):' → logprob: -5.577127933502197

Token 47: ' computes' (ID: 144619)
  Prédit: ' processes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.17699013650417328
    2. ' calculates' → logprob: -2.051990032196045
    3. ' computes' → logprob: -4.551990032196045
    4. ' prints' → logprob: -5.301990032196045
    5. ' performs' → logprob: -5.551990032196045
    6. ' finds' → logprob: -5.551990032196045
    7. ' process' → logprob: -5.801990032196045
    8. ' solves' → logprob: -6.051990032196045
    9. 'process' → logprob: -6.801990032196045
    10. ' calls' → logprob: -7.301990032196045

Token 48: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02111819200217724
    2. 'the' → logprob: -4.5211181640625
    3. ' a' → logprob: -5.3961181640625
    4. ' factorial' → logprob: -6.7711181640625
    5. ' maximum' → logprob: -8.0211181640625
    6. ' an' → logprob: -8.1461181640625
    7. '   ' → logprob: -8.2711181640625
    8. '<|end|>' → logprob: -8.2711181640625
    9. ' number' → logprob: -8.3961181640625
    10. ' their' → logprob: -8.3961181640625

Token 49: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.6399034857749939
    2. ' number' → logprob: -2.5149035453796387
    3. ' sum' → logprob: -2.5149035453796387
    4. ' factorial' → logprob: -2.7649035453796387
    5. ' product' → logprob: -2.8899035453796387
    6. ' result' → logprob: -3.2649035453796387
    7. ' minimum' → logprob: -3.8899035453796387
    8. ' maximal' → logprob: -3.8899035453796387
    9. ' max' → logprob: -4.014903545379639
    10. ' total' → logprob: -4.389903545379639

Token 50: ' length' (ID: 5517)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3725322186946869
    2. ' ' → logprob: -1.8725322484970093
    3. ' _' → logprob: -2.3725321292877197
    4. ' space' → logprob: -4.122532367706299
    5. '<|end|>' → logprob: -4.497532367706299
    6. '_space' → logprob: -4.622532367706299
    7. 'space' → logprob: -4.872532367706299
    8. '_possible' → logprob: -5.747532367706299
    9. ' possible' → logprob: -6.247532367706299
    10. '<|end|>' → logprob: -6.372532367706299

Token 51: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5262013673782349
    2. ' ' → logprob: -1.0262013673782349
    3. '   ' → logprob: -4.526201248168945
    4. '(' → logprob: -4.526201248168945
    5. '<|end|>' → logprob: -4.526201248168945
    6. '_' → logprob: -5.526201248168945
    7. '    ' → logprob: -5.901201248168945
    8. 'of' → logprob: -6.026201248168945
    9. '<|end|>' → logprob: -6.026201248168945
    10. '  ' → logprob: -6.401201248168945

Token 52: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20241105556488037
    2. 'a' → logprob: -1.9524110555648804
    3. ' the' → logprob: -3.82741117477417
    4. ' contiguous' → logprob: -5.82741117477417
    5. ' consecutive' → logprob: -5.95241117477417
    6. ' an' → logprob: -5.95241117477417
    7. 'the' → logprob: -6.07741117477417
    8. ' pal' → logprob: -6.57741117477417
    9. '_' → logprob: -6.70241117477417
    10. ' palindrome' → logprob: -6.82741117477417

Token 53: ' substring' (ID: 89494)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.7067512273788452
    2. ' subse' → logprob: -1.8317512273788452
    3. ' contiguous' → logprob: -1.9567512273788452
    4. ' substring' → logprob: -2.2067513465881348
    5. ' sequence' → logprob: -2.5817513465881348
    6. ' palindrome' → logprob: -2.9567513465881348
    7. ' sub' → logprob: -2.9567513465881348
    8. ' continuous' → logprob: -3.4567513465881348
    9. ' string' → logprob: -3.8317513465881348
    10. ' pal' → logprob: -3.8317513465881348

Token 54: ' containing' (ID: 15683)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05457935854792595
    2. '_' → logprob: -3.929579257965088
    3. '(' → logprob: -4.429579257965088
    4. '<|end|>' → logprob: -5.054579257965088
    5. '    ' → logprob: -5.804579257965088
    6. ' that' → logprob: -5.804579257965088
    7. '   ' → logprob: -6.054579257965088
    8. ' of' → logprob: -6.304579257965088
    9. ' (' → logprob: -7.179579257965088
    10. '  ' → logprob: -7.179579257965088

Token 55: ' at' (ID: 540)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.498625248670578
    2. ' a' → logprob: -1.7486252784729004
    3. ' ' → logprob: -1.9986252784729004
    4. '<|end|>' → logprob: -3.7486252784729004
    5. ' contiguous' → logprob: -4.4986252784729
    6. 'a' → logprob: -4.8736252784729
    7. ' at' → logprob: -4.9986252784729
    8. ' spaces' → logprob: -5.2486252784729
    9. ' all' → logprob: -5.3736252784729
    10. ' the' → logprob: -5.6236252784729

Token 56: ' most' (ID: 1645)
  Prédit: ' most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' most' → logprob: -0.7286100387573242
    2. 'most' → logprob: -1.4786100387573242
    3. ' least' → logprob: -1.4786100387573242
    4. 'least' → logprob: -2.978610038757324
    5. 'at' → logprob: -5.728610038757324
    6. '```' → logprob: -6.478610038757324
    7. 'Most' → logprob: -6.978610038757324
    8. 'o' → logprob: -7.728610038757324
    9. 'he' → logprob: -7.728610038757324
    10. ' ' → logprob: -7.853610038757324

Token 57: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27387237548828125
    2. ' two' → logprob: -1.5238723754882812
    3. ' one' → logprob: -4.273872375488281
    4. ' a' → logprob: -5.773872375488281
    5. 'two' → logprob: -6.898872375488281
    6. '  ' → logprob: -7.023872375488281
    7. ' only' → logprob: -7.773872375488281
    8. ' spaces' → logprob: -8.023872375488281
    9. '1' → logprob: -8.148872375488281
    10. '2' → logprob: -8.273872375488281

Token 58: ' blocks' (ID: 18125)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3011831045150757
    2. ' distinct' → logprob: -1.9261831045150757
    3. '<|end|>' → logprob: -3.0511832237243652
    4. ' spaces' → logprob: -3.4261832237243652
    5. ' a' → logprob: -4.801183223724365
    6. 'distinct' → logprob: -5.426183223724365
    7. ' unique' → logprob: -5.426183223724365
    8. ' occurrences' → logprob: -5.551183223724365
    9. ' different' → logprob: -6.176183223724365
    10. ' '' → logprob: -6.301183223724365

Token 59: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8160104155540466
    2. ' ' → logprob: -1.3160104751586914
    3. '   ' → logprob: -1.6910104751586914
    4. '    ' → logprob: -3.0660104751586914
    5. ',' → logprob: -3.9410104751586914
    6. '.' → logprob: -4.316010475158691
    7. '_' → logprob: -4.816010475158691
    8. '  ' → logprob: -5.566010475158691
    9. ' with' → logprob: -6.066010475158691
    10. '<|end|>' → logprob: -6.316010475158691

Token 60: ' consecutive' (ID: 40840)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3189818859100342
    2. ' identical' → logprob: -1.6939818859100342
    3. ' equal' → logprob: -1.6939818859100342
    4. ' ' → logprob: -2.318981885910034
    5. ' the' → logprob: -2.443981885910034
    6. ''' → logprob: -3.943981885910034
    7. 'equal' → logprob: -4.193982124328613
    8. ' contiguous' → logprob: -4.193982124328613
    9. ' '' → logprob: -4.443982124328613
    10. 'con' → logprob: -4.443982124328613

Token 61: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6390013694763184
    2. ' identical' → logprob: -2.3890013694763184
    3. ' a' → logprob: -2.5140013694763184
    4. ' equal' → logprob: -2.7640013694763184
    5. ' '' → logprob: -2.8890013694763184
    6. ''' → logprob: -3.1390013694763184
    7. ' characters' → logprob: -3.2640013694763184
    8. ' spaces' → logprob: -3.3890013694763184
    9. '1' → logprob: -4.389001369476318
    10. 'a' → logprob: -4.514001369476318

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7034980058670044
    2. 'a' → logprob: -1.7034980058670044
    3. '0' → logprob: -1.9534980058670044
    4. ''' → logprob: -2.703497886657715
    5. 'A' → logprob: -3.578497886657715
    6. ' ' → logprob: -4.328497886657715
    7. 'B' → logprob: -4.453497886657715
    8. '.' → logprob: -4.578497886657715
    9. 'W' → logprob: -5.078497886657715
    10. '#' → logprob: -5.328497886657715

Token 63: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23825432360172272
    2. ''s' → logprob: -1.6132543087005615
    3. ''' → logprob: -4.363254547119141
    4. ' s' → logprob: -11.61325454711914
    5. '"s' → logprob: -13.11325454711914
    6. ''''' → logprob: -13.23825454711914
    7. '`s' → logprob: -13.36325454711914
    8. ''"' → logprob: -13.48825454711914
    9. '1' → logprob: -13.48825454711914
    10. '')' → logprob: -13.86325454711914

Token 64: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6618136167526245
    2. ':' → logprob: -0.7868136167526245
    3. '):' → logprob: -4.911813735961914
    4. '
' → logprob: -5.286813735961914
    5. ' :' → logprob: -5.536813735961914
    6. '    
' → logprob: -6.036813735961914
    7. ' ' → logprob: -6.161813735961914
    8. ',' → logprob: -6.661813735961914
    9. '    ' → logprob: -6.661813735961914
    10. ')' → logprob: -7.036813735961914

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015237970277667046
    2. '```' → logprob: -5.765237808227539
    3. '"""' → logprob: -5.890237808227539
    4. '    
' → logprob: -6.015237808227539
    5. ':' → logprob: -6.265237808227539
    6. '
' → logprob: -6.515237808227539
    7. 'def' → logprob: -6.515237808227539
    8. ')' → logprob: -7.640237808227539
    9. '\' → logprob: -8.640237808227539
    10. '.' → logprob: -8.890237808227539

Token 66: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01371655985713005
    2. '"""' → logprob: -4.763716697692871
    3. '```' → logprob: -5.638716697692871
    4. '    
' → logprob: -7.638716697692871
    5. ')' → logprob: -8.388716697692871
    6. '
' → logprob: -8.388716697692871
    7. '\' → logprob: -9.388716697692871
    8. 'def' → logprob: -9.513716697692871
    9. '    ' → logprob: -9.638716697692871
    10. '""' → logprob: -9.638716697692871

Token 67: ' function' (ID: 1114)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0143111944198608
    2. ' function' → logprob: -1.6393111944198608
    3. ' problem' → logprob: -2.2643113136291504
    4. ' rest' → logprob: -2.5143113136291504
    5. ' input' → logprob: -3.1393113136291504
    6. 'def' → logprob: -3.2643113136291504
    7. '   ' → logprob: -3.7643113136291504
    8. ' next' → logprob: -3.7643113136291504
    9. ' doc' → logprob: -3.7643113136291504
    10. ' n' → logprob: -4.13931131362915

Token 68: ' reads' (ID: 31523)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7163810729980469
    2. ' ' → logprob: -1.3413810729980469
    3. ' continues' → logprob: -2.591381072998047
    4. ' reads' → logprob: -2.841381072998047
    5. ':' → logprob: -3.466381072998047
    6. 'def' → logprob: -3.716381072998047
    7. ' def' → logprob: -4.591381072998047
    8. ' takes' → logprob: -4.966381072998047
    9. ' is' → logprob: -5.341381072998047
    10. ' :' → logprob: -5.966381072998047

Token 69: ' two' (ID: 1920)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17691920697689056
    2. ' a' → logprob: -2.8019192218780518
    3. ' an' → logprob: -3.0519192218780518
    4. ' ' → logprob: -4.051918983459473
    5. 'the' → logprob: -4.551918983459473
    6. ' input' → logprob: -4.676918983459473
    7. '   ' → logprob: -5.176918983459473
    8. ' two' → logprob: -5.801918983459473
    9. '  ' → logprob: -6.676918983459473
    10. '()' → logprob: -6.676918983459473

Token 70: ' integers' (ID: 54912)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04029834270477295
    2. ' lines' → logprob: -4.1652984619140625
    3. ' tokens' → logprob: -5.5402984619140625
    4. '  ' → logprob: -5.6652984619140625
    5. ' input' → logprob: -5.6652984619140625
    6. ' more' → logprob: -5.7902984619140625
    7. ' spaces' → logprob: -6.0402984619140625
    8. ' line' → logprob: -6.6652984619140625
    9. ' )' → logprob: -7.0402984619140625
    10. 'tokens' → logprob: -7.0402984619140625

Token 71: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055767375975847244
    2. '(' → logprob: -3.180767297744751
    3. ' (' → logprob: -5.18076753616333
    4. ',' → logprob: -5.80576753616333
    5. '<|end|>' → logprob: -6.55576753616333
    6. '  ' → logprob: -7.30576753616333
    7. ' ,' → logprob: -7.43076753616333
    8. ' )' → logprob: -8.555767059326172
    9. '()' → logprob: -8.930767059326172
    10. ' a' → logprob: -8.930767059326172

Token 72: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013063756749033928
    2. ' and' → logprob: -4.888063907623291
    3. ',k' → logprob: -5.763063907623291
    4. ' ,' → logprob: -6.138063907623291
    5. 'and' → logprob: -9.513063430786133
    6. ',n' → logprob: -10.638063430786133
    7. '   ' → logprob: -10.888063430786133
    8. ' ' → logprob: -12.013063430786133
    9. ',b' → logprob: -12.513063430786133
    10. ',m' → logprob: -12.888063430786133

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12693072855472565
    2. ' k' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.626931190490723
    4. ',' → logprob: -14.126931190490723
    5. ',k' → logprob: -15.376931190490723
    6. '   ' → logprob: -15.876931190490723
    7. '"k' → logprob: -15.876931190490723
    8. '"' → logprob: -16.501930236816406
    9. '	k' → logprob: -16.626930236816406
    10. ' ' → logprob: -17.251930236816406

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020542588084936142
    2. '   ' → logprob: -5.270542621612549
    3. ' ' → logprob: -5.270542621612549
    4. ' ,' → logprob: -5.645542621612549
    5. '<|end|>' → logprob: -6.020542621612549
    6. ')' → logprob: -6.770542621612549
    7. '  ' → logprob: -7.145542621612549
    8. ':' → logprob: -7.520542621612549
    9. ' and' → logprob: -7.645542621612549
    10. '<|end|>' → logprob: -7.770542621612549

Token 75: ' where' (ID: 1919)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.5393927097320557
    2. '    ' → logprob: -1.9143927097320557
    3. ' and' → logprob: -2.0393927097320557
    4. '   ' → logprob: -2.4143927097320557
    5. ',' → logprob: -4.164392471313477
    6. ' continues' → logprob: -5.039392471313477
    7. ' followed' → logprob: -5.289392471313477
    8. ' ' → logprob: -5.789392471313477
    9. 'def' → logprob: -6.164392471313477
    10. ' splits' → logprob: -6.164392471313477

Token 76: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023075424134731293
    2. ' the' → logprob: -4.398075580596924
    3. 'n' → logprob: -4.773075580596924
    4. ' ' → logprob: -7.023075580596924
    5. ' a' → logprob: -7.898075580596924
    6. ' k' → logprob: -8.273075103759766
    7. 'the' → logprob: -8.773075103759766
    8. ' there' → logprob: -9.273075103759766
    9. '    ' → logprob: -9.898075103759766
    10. '   ' → logprob: -10.023075103759766

Token 77: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43472862243652344
    2. '=' → logprob: -1.3097286224365234
    3. ' is' → logprob: -2.9347286224365234
    4. ',' → logprob: -4.684728622436523
    5. ' ' → logprob: -5.434728622436523
    6. '   ' → logprob: -5.559728622436523
    7. ')' → logprob: -5.934728622436523
    8. ' and' → logprob: -6.184728622436523
    9. ' <=' → logprob: -6.309728622436523
    10. ' represents' → logprob: -6.309728622436523

Token 78: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.016920020803809166
    2. 'the' → logprob: -4.14192008972168
    3. '<|end|>' → logprob: -7.26692008972168
    4. ' a' → logprob: -9.51692008972168
    5. '<|end|>' → logprob: -9.89192008972168
    6. ' ' → logprob: -10.51692008972168
    7. ',' → logprob: -11.26692008972168
    8. ' an' → logprob: -12.01692008972168
    9. '=' → logprob: -13.01692008972168
    10. ' not' → logprob: -13.26692008972168

Token 79: ' length' (ID: 5517)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.45144933462142944
    2. ' length' → logprob: -1.0764493942260742
    3. 'length' → logprob: -4.576449394226074
    4. 'number' → logprob: -5.201449394226074
    5. ' maximum' → logprob: -5.826449394226074
    6. ' total' → logprob: -6.076449394226074
    7. 'maximum' → logprob: -7.951449394226074
    8. ' ' → logprob: -8.451449394226074
    9. ' space' → logprob: -8.826449394226074
    10. ' string' → logprob: -8.826449394226074

Token 80: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0341038852930069
    2. '   ' → logprob: -3.9091038703918457
    3. '=' → logprob: -5.159103870391846
    4. ',' → logprob: -5.784103870391846
    5. 'of' → logprob: -6.034103870391846
    6. ' ' → logprob: -7.284103870391846
    7. ' and' → logprob: -7.409103870391846
    8. '    ' → logprob: -8.159104347229004
    9. ' =' → logprob: -8.534104347229004
    10. 'def' → logprob: -9.534104347229004

Token 81: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.016075778752565384
    2. 'the' → logprob: -4.266075611114502
    3. ' a' → logprob: -6.516075611114502
    4. ' ' → logprob: -9.01607608795166
    5. 's' → logprob: -9.39107608795166
    6. ' s' → logprob: -9.64107608795166
    7. ' input' → logprob: -9.76607608795166
    8. 'a' → logprob: -10.01607608795166
    9. ' an' → logprob: -11.89107608795166
    10. 'input' → logprob: -12.01607608795166

Token 82: ' binary' (ID: 15600)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.15504509210586548
    2. ' array' → logprob: -2.6550450325012207
    3. ' input' → logprob: -3.4050450325012207
    4. ' binary' → logprob: -4.155045032501221
    5. 'string' → logprob: -4.280045032501221
    6. ' sequence' → logprob: -5.280045032501221
    7. 'input' → logprob: -6.905045032501221
    8. ' substring' → logprob: -6.905045032501221
    9. 'binary' → logprob: -7.530045032501221
    10. 'array' → logprob: -7.530045032501221

Token 83: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.04654402658343315
    2. 'string' → logprob: -3.296544075012207
    3. ' ' → logprob: -5.046544075012207
    4. ' sequence' → logprob: -7.046544075012207
    5. ' input' → logprob: -7.671544075012207
    6. '_' → logprob: -7.796544075012207
    7. ' s' → logprob: -10.171544075012207
    8. ')' → logprob: -10.671544075012207
    9. 'sequence' → logprob: -10.796544075012207
    10. ' array' → logprob: -10.796544075012207

Token 84: ' s' (ID: 265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44973990321159363
    2. '   ' → logprob: -1.074739933013916
    3. ':' → logprob: -5.449739933013916
    4. ' ' → logprob: -5.574739933013916
    5. ')' → logprob: -5.949739933013916
    6. ' ,' → logprob: -6.324739933013916
    7. ' and' → logprob: -6.574739933013916
    8. '.' → logprob: -6.824739933013916
    9. ',
' → logprob: -6.949739933013916
    10. '\n' → logprob: -6.949739933013916

Token 85: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4886491000652313
    2. '   ' → logprob: -1.2386491298675537
    3. ',' → logprob: -3.2386491298675537
    4. '):' → logprob: -3.3636491298675537
    5. ')' → logprob: -4.363648891448975
    6. ' ' → logprob: -5.738648891448975
    7. '    
' → logprob: -6.363648891448975
    8. '.' → logprob: -7.238648891448975
    9. '  ' → logprob: -7.363648891448975
    10. '\' → logprob: -7.488648891448975

Token 86: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7411045432090759
    2. 'k' → logprob: -1.2411046028137207
    3. ' a' → logprob: -1.8661046028137207
    4. ' the' → logprob: -3.1161046028137207
    5. ' s' → logprob: -4.616104602813721
    6. 's' → logprob: -5.116104602813721
    7. ' ' → logprob: -5.366104602813721
    8. '   ' → logprob: -6.116104602813721
    9. '<|end|>' → logprob: -6.116104602813721
    10. ' then' → logprob: -6.241104602813721

Token 87: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05602642148733139
    2. ' =' → logprob: -3.1810264587402344
    3. ' is' → logprob: -5.056026458740234
    4. ')' → logprob: -5.806026458740234
    5. ',' → logprob: -6.556026458740234
    6. ' ' → logprob: -7.806026458740234
    7. ':' → logprob: -7.931026458740234
    8. '<|end|>' → logprob: -8.306026458740234
    9. ' can' → logprob: -8.431026458740234
    10. '):' → logprob: -9.056026458740234

Token 88: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10892734676599503
    2. '<|end|>' → logprob: -2.4839272499084473
    3. 'the' → logprob: -3.9839272499084473
    4. ' ' → logprob: -7.608927249908447
    5. '<|end|>' → logprob: -7.608927249908447
    6. ' a' → logprob: -9.608927726745605
    7. ' number' → logprob: -10.983927726745605
    8. ' how' → logprob: -11.108927726745605
    9. ' an' → logprob: -11.233927726745605
    10. '  ' → logprob: -11.608927726745605

Token 89: ' maximum' (ID: 10562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.4129340350627899
    2. ' maximum' → logprob: -1.4129340648651123
    3. 'maximum' → logprob: -2.9129340648651123
    4. 'number' → logprob: -3.2879340648651123
    5. 'max' → logprob: -6.287933826446533
    6. '<|end|>' → logprob: -8.162934303283691
    7. ' maximal' → logprob: -8.287934303283691
    8. ' max' → logprob: -8.412934303283691
    9. ' allowed' → logprob: -8.662934303283691
    10. 'allowed' → logprob: -8.912934303283691

Token 90: ' allowed' (ID: 9279)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.10396100580692291
    2. 'number' → logprob: -2.9789609909057617
    3. ' tokens' → logprob: -5.103960990905762
    4. ' allowable' → logprob: -5.103960990905762
    5. '<|end|>' → logprob: -5.228960990905762
    6. 'allowed' → logprob: -5.853960990905762
    7. 'tokens' → logprob: -5.853960990905762
    8. ' ' → logprob: -5.853960990905762
    9. ' allowed' → logprob: -5.978960990905762
    10. '<|end|>' → logprob: -6.353960990905762

Token 91: '
' (ID: 198)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.022555725648999214
    2. ' blocks' → logprob: -4.522555828094482
    3. ' consecutive' → logprob: -5.647555828094482
    4. 'number' → logprob: -5.897555828094482
    5. ' contiguous' → logprob: -6.147555828094482
    6. '_blocks' → logprob: -6.772555828094482
    7. '<|end|>' → logprob: -6.897555828094482
    8. '<|end|>' → logprob: -9.022555351257324
    9. ' ' → logprob: -9.147555351257324
    10. 'blocks' → logprob: -9.397555351257324

Token 92: '   ' (ID: 271)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.060672957450151443
    2. ' blocks' → logprob: -3.9356729984283447
    3. ' consecutive' → logprob: -3.9356729984283447
    4. ' of' → logprob: -5.310672760009766
    5. 'number' → logprob: -5.435672760009766
    6. '_blocks' → logprob: -5.685672760009766
    7. ' contiguous' → logprob: -6.310672760009766
    8. ' ' → logprob: -6.810672760009766
    9. ' block' → logprob: -7.435672760009766
    10. ' to' → logprob: -7.685672760009766

Token 93: ' groups' (ID: 8896)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.09703170508146286
    2. ' blocks' → logprob: -3.097031593322754
    3. 'number' → logprob: -3.722031593322754
    4. ' consecutive' → logprob: -5.097031593322754
    5. ' '' → logprob: -5.347031593322754
    6. '<|end|>' → logprob: -5.847031593322754
    7. ' contiguous' → logprob: -6.222031593322754
    8. 'con' → logprob: -6.597031593322754
    9. 'blocks' → logprob: -6.597031593322754
    10. '1' → logprob: -6.972031593322754

Token 94: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.005412453785538673
    2. 'of' → logprob: -5.630412578582764
    3. ' ' → logprob: -6.630412578582764
    4. '<|end|>' → logprob: -8.505412101745605
    5. '<|end|>' → logprob: -9.755412101745605
    6. ')' → logprob: -10.255412101745605
    7. 's' → logprob: -10.380412101745605
    8. '  ' → logprob: -10.380412101745605
    9. '	of' → logprob: -10.505412101745605
    10. '    ' → logprob: -10.880412101745605

Token 95: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.7629703283309937
    2. ' consecutive' → logprob: -1.6379703283309937
    3. ''' → logprob: -1.8879703283309937
    4. '1' → logprob: -2.012970447540283
    5. ' ones' → logprob: -3.512970447540283
    6. ' contiguous' → logprob: -4.387970447540283
    7. ' ' → logprob: -4.762970447540283
    8. ' one' → logprob: -7.012970447540283
    9. '<|end|>' → logprob: -7.512970447540283
    10. ''s' → logprob: -7.637970447540283

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8232690460281447e-05
    2. ' ' → logprob: -11.000048637390137
    3. ''s' → logprob: -11.375048637390137
    4. ' ones' → logprob: -11.750048637390137
    5. ''' → logprob: -12.000048637390137
    6. 'ones' → logprob: -13.250048637390137
    7. '```' → logprob: -13.750048637390137
    8. '`' → logprob: -14.375048637390137
    9. ' '' → logprob: -14.875048637390137
    10. '')' → logprob: -15.812548637390137

Token 97: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.4649903476238251
    2. 's' → logprob: -1.2149903774261475
    3. ''' → logprob: -2.5899903774261475
    4. '-block' → logprob: -9.964990615844727
    5. '"s' → logprob: -10.964990615844727
    6. '```' → logprob: -11.964990615844727
    7. ''''' → logprob: -12.089990615844727
    8. '''' → logprob: -12.339990615844727
    9. ''es' → logprob: -12.339990615844727
    10. '"' → logprob: -12.339990615844727

Token 98: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40625256299972534
    2. ':' → logprob: -2.65625262260437
    3. ',' → logprob: -2.78125262260437
    4. '.' → logprob: -2.90625262260437
    5. ' to' → logprob: -2.90625262260437
    6. '):' → logprob: -3.90625262260437
    7. ' that' → logprob: -4.031252384185791
    8. ' in' → logprob: -4.156252384185791
    9. ')' → logprob: -4.156252384185791
    10. 'def' → logprob: -5.781252384185791

Token 99: ' It' (ID: 1225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1529901772737503
    2. '
' → logprob: -2.2779901027679443
    3. '    
' → logprob: -4.402990341186523
    4. 'n' → logprob: -4.402990341186523
    5. '\n' → logprob: -5.402990341186523
    6. '```' → logprob: -5.527990341186523
    7. '\' → logprob: -5.777990341186523
    8. 'newline' → logprob: -7.277990341186523
    9. '  
' → logprob: -7.527990341186523
    10. ' 
' → logprob: -7.527990341186523

Token 100: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.488572895526886
    2. ' continues' → logprob: -1.9885728359222412
    3. ' reads' → logprob: -2.113572835922241
    4. ':' → logprob: -2.863572835922241
    5. 'contin' → logprob: -4.11357307434082
    6. 'def' → logprob: -4.86357307434082
    7. ' ' → logprob: -4.86357307434082
    8. ' processes' → logprob: -5.23857307434082
    9. ' then' → logprob: -5.61357307434082
    10. ' =' → logprob: -5.61357307434082

Token 101: ' reads' (ID: 31523)
  Prédit: ' reads'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reads' → logprob: -0.6486609578132629
    2. '   ' → logprob: -1.5236608982086182
    3. ' s' → logprob: -2.273660898208618
    4. 's' → logprob: -2.773660898208618
    5. ' continues' → logprob: -3.148660898208618
    6. ':' → logprob: -3.898660898208618
    7. 'reads' → logprob: -4.773661136627197
    8. 'contin' → logprob: -6.023661136627197
    9. 'def' → logprob: -6.148661136627197
    10. ' processes' → logprob: -6.148661136627197

Token 102: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.22368596494197845
    2. ' s' → logprob: -2.2236859798431396
    3. 's' → logprob: -3.0986859798431396
    4. ' a' → logprob: -3.0986859798431396
    5. 'the' → logprob: -6.5986857414245605
    6. ' an' → logprob: -8.098686218261719
    7. ' ' → logprob: -8.723686218261719
    8. '()' → logprob: -9.973686218261719
    9. 'a' → logprob: -10.098686218261719
    10. 'n' → logprob: -10.348686218261719

Token 103: ' string' (ID: 1621)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.2792826294898987
    2. 'binary' → logprob: -2.029282569885254
    3. 's' → logprob: -3.154282569885254
    4. ' string' → logprob: -3.279282569885254
    5. 'string' → logprob: -3.779282569885254
    6. ' s' → logprob: -5.029282569885254
    7. ' next' → logprob: -6.404282569885254
    8. ' input' → logprob: -8.279282569885254
    9. 'n' → logprob: -9.154282569885254
    10. 'next' → logprob: -9.279282569885254

Token 104: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06620524823665619
    2. 's' → logprob: -2.8162052631378174
    3. '   ' → logprob: -5.941205024719238
    4. '(s' → logprob: -7.066205024719238
    5. ' of' → logprob: -8.316205024719238
    6. '(' → logprob: -8.816205024719238
    7. ' (' → logprob: -9.441205024719238
    8. ' ' → logprob: -9.816205024719238
    9. '  ' → logprob: -10.066205024719238
    10. '    ' → logprob: -10.316205024719238

Token 105: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14684118330478668
    2. ':' → logprob: -2.271841287612915
    3. '):' → logprob: -4.396841049194336
    4. ',' → logprob: -4.521841049194336
    5. ')' → logprob: -5.021841049194336
    6. '.' → logprob: -6.146841049194336
    7. 'def' → logprob: -7.396841049194336
    8. ' and' → logprob: -8.771841049194336
    9. '):
' → logprob: -9.521841049194336
    10. ').' → logprob: -9.521841049194336

Token 106: ' processes' (ID: 14340)
  Prédit: ' splits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' splits' → logprob: -0.30743467807769775
    2. ' processes' → logprob: -2.557434558868408
    3. ' and' → logprob: -3.182434558868408
    4. 'spl' → logprob: -3.557434558868408
    5. ' counts' → logprob: -3.682434558868408
    6. ' strips' → logprob: -3.807434558868408
    7. ' which' → logprob: -3.932434558868408
    8. '   ' → logprob: -4.557434558868408
    9. ' calculates' → logprob: -4.932434558868408
    10. ' token' → logprob: -5.432434558868408

Token 107: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6068446040153503
    2. ' it' → logprob: -0.8568446040153503
    3. ' s' → logprob: -3.981844663619995
    4. 'the' → logprob: -5.231844425201416
    5. 's' → logprob: -5.356844425201416
    6. ')' → logprob: -8.356844902038574
    7. '<|end|>' → logprob: -8.356844902038574
    8. 'it' → logprob: -8.481844902038574
    9. ' ' → logprob: -8.606844902038574
    10. ' to' → logprob: -8.981844902038574

Token 108: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.807937741279602
    2. ',' → logprob: -1.307937741279602
    3. ' to' → logprob: -1.557937741279602
    4. ' =' → logprob: -3.1829376220703125
    5. ':' → logprob: -5.1829376220703125
    6. ' and' → logprob: -5.1829376220703125
    7. ' for' → logprob: -5.3079376220703125
    8. '=' → logprob: -5.5579376220703125
    9. '.' → logprob: -6.3079376220703125
    10. ' line' → logprob: -6.5579376220703125

Token 109: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20376120507717133
    2. 'and' → logprob: -2.328761100769043
    3. '   ' → logprob: -2.453761100769043
    4. 'def' → logprob: -8.203761100769043
    5. '    ' → logprob: -9.078761100769043
    6. ',' → logprob: -9.578761100769043
    7. 'tokens' → logprob: -9.828761100769043
    8. ' to' → logprob: -9.828761100769043
    9. 'to' → logprob: -10.203761100769043
    10. '```' → logprob: -10.578761100769043

Token 110: ' prints' (ID: 33767)
  Prédit: ' calculates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculates' → logprob: -0.4605197310447693
    2. ' prints' → logprob: -1.585519790649414
    3. ' computes' → logprob: -2.960519790649414
    4. ' returns' → logprob: -3.210519790649414
    5. ' outputs' → logprob: -3.585519790649414
    6. ' processes' → logprob: -4.210519790649414
    7. '<|end|>' → logprob: -5.085519790649414
    8. ' finds' → logprob: -5.085519790649414
    9. 'print' → logprob: -5.335519790649414
    10. 'outputs' → logprob: -6.085519790649414

Token 111: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2600988149642944
    2. ' the' → logprob: -1.2600988149642944
    3. 'the' → logprob: -1.7600988149642944
    4. '(len' → logprob: -1.8850988149642944
    5. '()' → logprob: -2.510098934173584
    6. '(max' → logprob: -4.010098934173584
    7. '(length' → logprob: -6.385098934173584
    8. '(n' → logprob: -6.635098934173584
    9. 'len' → logprob: -7.010098934173584
    10. '("' → logprob: -7.010098934173584

Token 112: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.4663991630077362
    2. ' result' → logprob: -1.3413991928100586
    3. ' length' → logprob: -2.3413991928100586
    4. 'maximum' → logprob: -5.091399192810059
    5. ' maximal' → logprob: -5.716399192810059
    6. 'result' → logprob: -6.341399192810059
    7. ' longest' → logprob: -6.716399192810059
    8. ' answer' → logprob: -7.091399192810059
    9. 'max' → logprob: -7.466399192810059
    10. ' max' → logprob: -7.591399192810059

Token 113: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.22118206322193146
    2. 'length' → logprob: -1.721182107925415
    3. '()' → logprob: -5.096181869506836
    4. '_length' → logprob: -5.221181869506836
    5. '(length' → logprob: -6.346181869506836
    6. '_' → logprob: -6.596181869506836
    7. ' possible' → logprob: -6.596181869506836
    8. '(' → logprob: -7.096181869506836
    9. '-length' → logprob: -7.971181869506836
    10. '<|end|>' → logprob: -7.971181869506836

Token 114: ' substring' (ID: 89494)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04005305469036102
    2. '()' → logprob: -4.040052890777588
    3. '   ' → logprob: -4.040052890777588
    4. '(
' → logprob: -5.915052890777588
    5. ' of' → logprob: -7.665052890777588
    6. ')' → logprob: -7.915052890777588
    7. ':' → logprob: -8.915053367614746
    8. '    ' → logprob: -9.540053367614746
    9. ' (' → logprob: -9.665053367614746
    10. 'def' → logprob: -9.665053367614746

Token 115: ' containing' (ID: 15683)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09485466778278351
    2. ':' → logprob: -2.7198545932769775
    3. '(' → logprob: -4.844854831695557
    4. ' that' → logprob: -5.469854831695557
    5. '.' → logprob: -5.969854831695557
    6. '):' → logprob: -6.094854831695557
    7. ')' → logprob: -6.344854831695557
    8. ' ' → logprob: -6.469854831695557
    9. ' with' → logprob: -7.344854831695557
    10. ',' → logprob: -7.594854831695557

Token 116: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.26629069447517395
    2. '<|end|>' → logprob: -1.5162906646728516
    3. 'at' → logprob: -5.641290664672852
    4. ' contiguous' → logprob: -6.141290664672852
    5. ' only' → logprob: -6.516290664672852
    6. '<|end|>' → logprob: -6.766290664672852
    7. ' the' → logprob: -6.891290664672852
    8. ' up' → logprob: -7.141290664672852
    9. ' ' → logprob: -7.266290664672852
    10. ' spaces' → logprob: -7.266290664672852

Token 117: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.1138717532157898
    2. ' most' → logprob: -2.2388718128204346
    3. 'Most' → logprob: -7.7388715744018555
    4. '   ' → logprob: -8.238871574401855
    5. '```' → logprob: -9.863871574401855
    6. 'm' → logprob: -9.863871574401855
    7. 'at' → logprob: -10.113871574401855
    8. '
' → logprob: -10.488871574401855
    9. ' ' → logprob: -10.488871574401855
    10. 'mo' → logprob: -10.613871574401855

Token 118: '
' (ID: 198)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20147940516471863
    2. 'k' → logprob: -1.701479434967041
    3. ' at' → logprob: -11.076478958129883
    4. ' ' → logprob: -11.201478958129883
    5. ' spaces' → logprob: -11.701478958129883
    6. '"k' → logprob: -11.826478958129883
    7. ' the' → logprob: -11.951478958129883
    8. ' a' → logprob: -13.451478958129883
    9. ' `' → logprob: -13.576478958129883
    10. '	k' → logprob: -13.701478958129883

Token 119: '   ' (ID: 271)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.01680785045027733
    2. 'k' → logprob: -4.141808032989502
    3. ' ' → logprob: -8.016807556152344
    4. ' a' → logprob: -9.016807556152344
    5. ' )' → logprob: -9.641807556152344
    6. ' space' → logprob: -10.516807556152344
    7. ')' → logprob: -10.641807556152344
    8. ' `' → logprob: -10.641807556152344
    9. ' up' → logprob: -10.891807556152344
    10. ' 
' → logprob: -11.266807556152344

Token 120: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2813444435596466
    2. 'k' (adapté à ' k') → logprob: -1.4063444137573242
    3. ' spaces' → logprob: -9.781344413757324
    4. ' `' → logprob: -10.281344413757324
    5. ' '' → logprob: -10.906344413757324
    6. ' groups' → logprob: -11.156344413757324
    7. ' blocks' → logprob: -11.406344413757324
    8. '```' → logprob: -11.531344413757324
    9. ' ' → logprob: -11.656344413757324
    10. ' one' → logprob: -11.781344413757324

Token 121: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.34492138028144836
    2. ' groups' → logprob: -1.594921350479126
    3. '<|end|>' → logprob: -2.969921350479126
    4. 'groups' → logprob: -4.719921588897705
    5. 'blocks' → logprob: -5.094921588897705
    6. ' "' → logprob: -5.469921588897705
    7. ' '' → logprob: -5.969921588897705
    8. ' more' → logprob: -5.969921588897705
    9. ' spaces' → logprob: -6.094921588897705
    10. ' contiguous' → logprob: -6.219921588897705

Token 122: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11885330080986023
    2. '   ' → logprob: -2.2438533306121826
    3. 'of' → logprob: -5.6188530921936035
    4. '    ' → logprob: -7.3688530921936035
    5. ' ' → logprob: -7.7438530921936035
    6. 'def' → logprob: -7.7438530921936035
    7. ')' → logprob: -8.493853569030762
    8. '  ' → logprob: -8.743853569030762
    9. '<|end|>' → logprob: -9.118853569030762
    10. '.' → logprob: -9.618853569030762

Token 123: ' consecutive' (ID: 40840)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43993422389030457
    2. ' '' → logprob: -1.564934253692627
    3. ' consecutive' → logprob: -2.814934253692627
    4. ' ones' → logprob: -3.189934253692627
    5. '1' → logprob: -3.689934253692627
    6. 'con' → logprob: -5.189934253692627
    7. ''s' → logprob: -5.314934253692627
    8. ' ' → logprob: -5.439934253692627
    9. ' contiguous' → logprob: -6.064934253692627
    10. 'ones' → logprob: -7.314934253692627

Token 124: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8485243320465088
    2. '1' → logprob: -1.4735243320465088
    3. ' '' → logprob: -1.4735243320465088
    4. ''s' → logprob: -2.723524332046509
    5. ' ones' → logprob: -3.223524332046509
    6. ' ' → logprob: -5.47352409362793
    7. '<|end|>' → logprob: -6.47352409362793
    8. '`' → logprob: -7.59852409362793
    9. 'ones' → logprob: -8.09852409362793
    10. '0' → logprob: -8.47352409362793

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020825639367103577
    2. ''' → logprob: -3.8958256244659424
    3. ''s' → logprob: -9.020825386047363
    4. 'ones' → logprob: -9.395825386047363
    5. ' ' → logprob: -10.770825386047363
    6. ' ones' → logprob: -11.145825386047363
    7. ' '' → logprob: -11.270825386047363
    8. '0' → logprob: -11.270825386047363
    9. '"' → logprob: -12.145825386047363
    10. '`' → logprob: -12.395825386047363

Token 126: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.006578354164958
    2. ''' → logprob: -5.13157844543457
    3. 's' → logprob: -7.50657844543457
    4. '1' → logprob: -9.50657844543457
    5. '')' → logprob: -11.13157844543457
    6. '’s' → logprob: -12.88157844543457
    7. '''' → logprob: -13.00657844543457
    8. ''''' → logprob: -13.63157844543457
    9. ''S' → logprob: -13.63157844543457
    10. ''"' → logprob: -14.50657844543457

Token 127: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20555870234966278
    2. '   ' → logprob: -1.9555586576461792
    3. '):' → logprob: -3.4555587768554688
    4. ')' → logprob: -4.705558776855469
    5. '():' → logprob: -6.955558776855469
    6. ',' → logprob: -7.455558776855469
    7. ':
' → logprob: -7.455558776855469
    8. ' ' → logprob: -7.955558776855469
    9. ' :' → logprob: -8.330558776855469
    10. '
' → logprob: -8.330558776855469

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008882703259587288
    2. '"""' → logprob: -5.383882522583008
    3. '    
' → logprob: -6.633882522583008
    4. '```' → logprob: -7.008882522583008
    5. '
' → logprob: -7.133882522583008
    6. 'def' → logprob: -7.633882522583008
    7. '\n' → logprob: -8.258882522583008
    8. ')' → logprob: -8.383882522583008
    9. '"""
' → logprob: -9.133882522583008
    10. '"' → logprob: -10.258882522583008

Token 129: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010162943974137306
    2. '"""' → logprob: -5.760162830352783
    3. '    
' → logprob: -6.135162830352783
    4. ')' → logprob: -6.635162830352783
    5. '```' → logprob: -6.760162830352783
    6. '
' → logprob: -7.385162830352783
    7. '\n' → logprob: -7.385162830352783
    8. 'def' → logprob: -7.635162830352783
    9. 'n' → logprob: -9.260163307189941
    10. '\' → logprob: -9.260163307189941

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25335457921028137
    2. 'n' → logprob: -1.503354549407959
    3. ' n' → logprob: -6.753354549407959
    4. 'def' → logprob: -9.003355026245117
    5. '
' → logprob: -9.878355026245117
    6. '	n' → logprob: -10.503355026245117
    7. '    
' → logprob: -10.753355026245117
    8. '#' → logprob: -11.378355026245117
    9. '    ' → logprob: -12.628355026245117
    10. '(n' → logprob: -12.753355026245117

Token 131: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.17420256882906e-05
    2. '   ' → logprob: -9.625091552734375
    3. ' n' → logprob: -10.875091552734375
    4. '#' (adapté à ' #') → logprob: -12.000091552734375
    5. '
' → logprob: -15.250091552734375
    6. '	n' → logprob: -15.500091552734375
    7. '    
' → logprob: -16.625091552734375
    8. '_n' → logprob: -17.500091552734375
    9. '```' → logprob: -18.000091552734375
    10. '

' → logprob: -18.125091552734375

Token 132: ' Read' (ID: 5405)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04925315082073212
    2. ' n' → logprob: -3.049253225326538
    3. '   ' → logprob: -7.549252986907959
    4. 'nk' → logprob: -10.049253463745117
    5. '	n' → logprob: -10.674253463745117
    6. '#' → logprob: -10.674253463745117
    7. 'line' → logprob: -11.674253463745117
    8. '```' → logprob: -11.799253463745117
    9. '(n' → logprob: -12.174253463745117
    10. ' nk' → logprob: -12.549253463745117

Token 133: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20180146396160126
    2. 'n' → logprob: -1.7018014192581177
    3. '	n' → logprob: -7.951801300048828
    4. '(n' → logprob: -10.451801300048828
    5. '   ' → logprob: -12.201801300048828
    6. '_n' → logprob: -14.451801300048828
    7. ',n' → logprob: -14.826801300048828
    8. 'line' → logprob: -14.826801300048828
    9. ')n' → logprob: -15.451801300048828
    10. ' ' → logprob: -16.201801300048828

Token 134: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004090274218469858
    2. ',k' → logprob: -5.504090309143066
    3. ' ,' → logprob: -11.504090309143066
    4. ',n' → logprob: -13.629090309143066
    5. 'k' → logprob: -15.254090309143066
    6. ',K' → logprob: -16.50408935546875
    7. '(),' → logprob: -16.62908935546875
    8. ',user' → logprob: -17.25408935546875
    9. '=' → logprob: -17.37908935546875
    10. '‌,' → logprob: -17.62908935546875

Token 135: 'length' (ID: 7914)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03896568343043327
    2. ',k' → logprob: -3.2889657020568848
    3. ',n' → logprob: -7.663965702056885
    4. ' ,' → logprob: -8.913965225219727
    5. ')' → logprob: -9.288965225219727
    6. 'n' → logprob: -9.413965225219727
    7. 'k' → logprob: -10.163965225219727
    8. 'and' → logprob: -10.288965225219727
    9. ',int' → logprob: -10.288965225219727
    10. ' k' → logprob: -11.913965225219727

Token 136: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05375049263238907
    2. ')' → logprob: -3.803750514984131
    3. ' ,' → logprob: -4.428750514984131
    4. '=' → logprob: -5.553750514984131
    5. ' and' → logprob: -5.553750514984131
    6. ',n' → logprob: -5.678750514984131
    7. '   ' → logprob: -6.178750514984131
    8. ' )' → logprob: -6.553750514984131
    9. 'and' → logprob: -7.303750514984131
    10. '(n' → logprob: -7.803750514984131

Token 137: ' string' (ID: 1621)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6827237010002136
    2. 'the' → logprob: -1.5577237606048584
    3. ' s' → logprob: -1.6827237606048584
    4. 's' → logprob: -3.1827237606048584
    5. ' input' → logprob: -3.5577237606048584
    6. 'input' → logprob: -3.9327237606048584
    7. 'string' → logprob: -5.682723522186279
    8. ')' → logprob: -6.557723522186279
    9. 'line' → logprob: -6.807723522186279
    10. ' string' → logprob: -7.057723522186279

Token 138: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009594622533768415
    2. ',k' → logprob: -7.625959396362305
    3. ',n' → logprob: -8.750959396362305
    4. ' ,' → logprob: -8.875959396362305
    5. ')' → logprob: -9.500959396362305
    6. ' and' → logprob: -10.375959396362305
    7. '),' → logprob: -10.375959396362305
    8. '   ' → logprob: -11.250959396362305
    9. 'and' → logprob: -11.375959396362305
    10. 'n' → logprob: -12.750959396362305

Token 139: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003058992326259613
    2. ',k' → logprob: -6.128058910369873
    3. ',n' → logprob: -7.503058910369873
    4. '   ' → logprob: -8.753059387207031
    5. 'n' → logprob: -8.878059387207031
    6. ' ,' → logprob: -11.253059387207031
    7. 'k' → logprob: -12.003059387207031
    8. ' n' → logprob: -13.628059387207031
    9. ',
' → logprob: -13.753059387207031
    10. ' and' → logprob: -13.878059387207031

Token 140: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16022838652133942
    2. ' k' → logprob: -1.9102283716201782
    3. ',k' → logprob: -12.785228729248047
    4. ' ' → logprob: -14.535228729248047
    5. '	k' → logprob: -14.910228729248047
    6. ',' → logprob: -15.410228729248047
    7. '_k' → logprob: -15.660228729248047
    8. '`' → logprob: -17.035228729248047
    9. '  ' → logprob: -17.160228729248047
    10. '=k' → logprob: -17.160228729248047

Token 141: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20100420713424683
    2. ' =' → logprob: -2.2010042667388916
    3. '=' → logprob: -3.2010042667388916
    4. ' ' → logprob: -4.0760040283203125
    5. ' ,' → logprob: -4.8260040283203125
    6. ',n' → logprob: -6.2010040283203125
    7. '   ' → logprob: -7.0760040283203125
    8. '(' → logprob: -7.2010040283203125
    9. '    ' → logprob: -7.5760040283203125
    10. '  ' → logprob: -8.076004028320312

Token 142: 'max' (ID: 3228)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31360065937042236
    2. ' k' → logprob: -1.3136006593704224
    3. ')' → logprob: -9.188600540161133
    4. ' the' → logprob: -9.313600540161133
    5. 'max' → logprob: -10.188600540161133
    6. ' max' → logprob: -10.563600540161133
    7. ' number' → logprob: -10.688600540161133
    8. 'int' → logprob: -11.313600540161133
    9. ' maximum' → logprob: -11.438600540161133
    10. ',k' → logprob: -11.938600540161133

Token 143: ' number' (ID: 2086)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.7783779501914978
    2. ')' → logprob: -2.1533780097961426
    3. ' )' → logprob: -2.4033780097961426
    4. '_groups' → logprob: -2.7783780097961426
    5. '<|end|>' → logprob: -3.0283780097961426
    6. ' k' → logprob: -3.1533780097961426
    7. ' groups' → logprob: -3.4033780097961426
    8. ' ' → logprob: -3.6533780097961426
    9. ' blocks' → logprob: -3.9033780097961426
    10. ' =' → logprob: -3.9033780097961426

Token 144: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.3269958198070526
    2. ' of' → logprob: -1.951995849609375
    3. 'of' → logprob: -2.451995849609375
    4. '=' → logprob: -3.701995849609375
    5. '_blocks' → logprob: -4.826995849609375
    6. ' =' → logprob: -5.076995849609375
    7. '_groups' → logprob: -5.701995849609375
    8. ')' → logprob: -5.951995849609375
    9. 's' → logprob: -7.076995849609375
    10. '   ' → logprob: -7.201995849609375

Token 145: ' blocks' (ID: 18125)
  Prédit: ' blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.5526109337806702
    2. ' groups' → logprob: -1.4276108741760254
    3. ' ' → logprob: -3.1776108741760254
    4. ' '' → logprob: -3.3026108741760254
    5. '1' → logprob: -3.6776108741760254
    6. 'blocks' → logprob: -3.8026108741760254
    7. ' ones' → logprob: -4.552610874176025
    8. ' allowed' → logprob: -4.677610874176025
    9. 'groups' → logprob: -4.802610874176025
    10. ')' → logprob: -4.927610874176025

Token 146: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46644195914268494
    2. ' of' → logprob: -1.3414419889450073
    3. ',' → logprob: -3.3414418697357178
    4. ' )' → logprob: -3.4664418697357178
    5. '   ' → logprob: -3.7164418697357178
    6. ' to' → logprob: -4.841442108154297
    7. 'of' → logprob: -5.216442108154297
    8. 'allowed' → logprob: -6.341442108154297
    9. ' =' → logprob: -6.716442108154297
    10. ' ' → logprob: -7.091442108154297

Token 147: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5934866070747375
    2. '1' → logprob: -1.8434865474700928
    3. ' ones' → logprob: -1.8434865474700928
    4. ' '' → logprob: -2.7184865474700928
    5. ' consecutive' → logprob: -3.5934865474700928
    6. ' ' → logprob: -3.7184865474700928
    7. 'con' → logprob: -5.218486785888672
    8. 'ones' → logprob: -5.718486785888672
    9. ''s' → logprob: -5.968486785888672
    10. ')' → logprob: -8.343486785888672

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007289938512258232
    2. ' ' → logprob: -7.750729084014893
    3. ' ones' → logprob: -8.875728607177734
    4. 'ones' → logprob: -9.125728607177734
    5. ''' → logprob: -10.625728607177734
    6. ''s' → logprob: -11.375728607177734
    7. ' '' → logprob: -12.375728607177734
    8. '')' → logprob: -12.875728607177734
    9. 'con' → logprob: -13.875728607177734
    10. ')' → logprob: -14.125728607177734

Token 149: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.23395796120166779
    2. 's' → logprob: -1.6089580059051514
    3. '')' → logprob: -4.858957767486572
    4. ''' → logprob: -7.358957767486572
    5. ')' → logprob: -10.23395824432373
    6. '`s' → logprob: -10.60895824432373
    7. '')
' → logprob: -11.85895824432373
    8. ' s' → logprob: -11.98395824432373
    9. ')s' → logprob: -12.10895824432373
    10. ''),' → logprob: -12.23395824432373

Token 150: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5828710794448853
    2. ')' → logprob: -1.0828710794448853
    3. '   ' → logprob: -2.3328709602355957
    4. '):' → logprob: -5.957870960235596
    5. ' )' → logprob: -6.832870960235596
    6. '),' → logprob: -6.957870960235596
    7. ' ' → logprob: -7.582870960235596
    8. ' ,' → logprob: -7.707870960235596
    9. ',n' → logprob: -9.332871437072754
    10. '  ' → logprob: -9.582871437072754

Token 151: ' from' (ID: 591)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3249165117740631
    2. '   ' → logprob: -1.3249164819717407
    3. '(n' → logprob: -5.449916362762451
    4. ' n' → logprob: -5.824916362762451
    5. '	n' → logprob: -6.199916362762451
    6. '[n' → logprob: -7.699916362762451
    7. '    
' → logprob: -7.824916362762451
    8. ',n' → logprob: -7.824916362762451
    9. '\n' → logprob: -8.07491683959961
    10. ',' → logprob: -8.32491683959961

Token 152: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25198447704315186
    2. 'input' → logprob: -1.5019844770431519
    3. ' the' → logprob: -11.251984596252441
    4. ' sys' → logprob: -11.501984596252441
    5. 'the' → logprob: -11.501984596252441
    6. '=input' → logprob: -11.876984596252441
    7. 'sys' → logprob: -12.501984596252441
    8. '(input' → logprob: -12.751984596252441
    9. ' ' → logprob: -13.251984596252441
    10. ')' → logprob: -13.876984596252441

Token 153: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22652727365493774
    2. '
' → logprob: -1.726527214050293
    3. '   ' → logprob: -4.351527214050293
    4. '(n' → logprob: -5.226527214050293
    5. ' n' → logprob: -5.476527214050293
    6. '    
' → logprob: -7.226527214050293
    7. '\n' → logprob: -7.351527214050293
    8. '	n' → logprob: -8.226527214050293
    9. ',n' → logprob: -8.476527214050293
    10. '

' → logprob: -9.226527214050293

Token 154: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09249294549226761
    2. '   ' → logprob: -2.5924930572509766
    3. ' n' → logprob: -4.592493057250977
    4. '
' → logprob: -6.592493057250977
    5. '    
' → logprob: -6.967493057250977
    6. '	n' → logprob: -7.717493057250977
    7. '\n' → logprob: -8.592493057250977
    8. ',n' → logprob: -8.842493057250977
    9. ',' → logprob: -9.467493057250977
    10. ' 
' → logprob: -9.467493057250977

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.12785932421684265
    2. ' n' → logprob: -2.127859354019165
    3. '   ' → logprob: -8.377859115600586
    4. '	n' → logprob: -8.377859115600586
    5. ' 
' → logprob: -8.502859115600586
    6. '    
' → logprob: -9.002859115600586
    7. '(n' → logprob: -9.627859115600586
    8. '\n' → logprob: -10.752859115600586
    9. ',n' → logprob: -11.377859115600586
    10. '    ' → logprob: -12.127859115600586

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001077110879123211
    2. ',k' → logprob: -6.876077175140381
    3. ' ,' → logprob: -10.376076698303223
    4. ',n' → logprob: -12.626076698303223
    5. ',
' → logprob: -12.751076698303223
    6. '=' → logprob: -12.876076698303223
    7. ')' → logprob: -13.876076698303223
    8. ',int' → logprob: -14.001076698303223
    9. ',#' → logprob: -15.251076698303223
    10. '<|end|>' → logprob: -15.251076698303223

Token 157: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5240271687507629
    2. 'k' → logprob: -0.8990271687507629
    3. ' ' → logprob: -7.149027347564697
    4. '<|end|>' → logprob: -9.524026870727539
    5. '_k' → logprob: -11.149026870727539
    6. '  ' → logprob: -12.024026870727539
    7. '	k' → logprob: -12.399026870727539
    8. 's' → logprob: -12.774026870727539
    9. ' ' → logprob: -12.899026870727539
    10. ' K' → logprob: -13.024026870727539

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132692873477936
    2. ' =' → logprob: -1.3132692575454712
    3. ',' → logprob: -12.68826961517334
    4. ')' → logprob: -13.18826961517334
    5. '=input' → logprob: -14.31326961517334
    6. '=

' → logprob: -14.68826961517334
    7. ' =
' → logprob: -15.06326961517334
    8. ' ' → logprob: -15.56326961517334
    9. ')=' → logprob: -15.56326961517334
    10. '=
' → logprob: -15.68826961517334

Token 159: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018153218552470207
    2. 'map' → logprob: -4.018153190612793
    3. ' input' → logprob: -13.143153190612793
    4. 'input' → logprob: -14.518153190612793
    5. ' list' → logprob: -14.643153190612793
    6. '	map' → logprob: -15.393153190612793
    7. ' ' → logprob: -16.01815414428711
    8. 'list' → logprob: -17.01815414428711
    9. '(map' → logprob: -17.64315414428711
    10. '   ' → logprob: -18.76815414428711

Token 160: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04880015552043915
    2. '(' → logprob: -3.048800230026245
    3. '(int' → logprob: -9.173800468444824
    4. '(input' → logprob: -9.423800468444824
    5. 'map' → logprob: -11.173800468444824
    6. '()' → logprob: -11.673800468444824
    7. ' map' → logprob: -12.548800468444824
    8. '(
' → logprob: -14.048800468444824
    9. ' (' → logprob: -14.798800468444824
    10. '_map' → logprob: -16.173799514770508

Token 161: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018983196059707552
    2. 'int' → logprob: -9.125189781188965
    3. '(' → logprob: -9.625189781188965
    4. '=int' → logprob: -11.875189781188965
    5. ',int' → logprob: -13.125189781188965
    6. '[int' → logprob: -13.250189781188965
    7. ' int' → logprob: -13.875189781188965
    8. '(str' → logprob: -13.875189781188965
    9. '<int' → logprob: -14.125189781188965
    10. ']int' → logprob: -14.875189781188965

Token 162: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10297044366598129
    2. '(' → logprob: -2.4779703617095947
    3. 'input' → logprob: -4.602970600128174
    4. ',input' → logprob: -6.102970600128174
    5. '(sys' → logprob: -7.227970600128174
    6. ')' → logprob: -7.477970600128174
    7. ',' → logprob: -8.852970123291016
    8. '))' → logprob: -9.602970123291016
    9. 'sys' → logprob: -9.727970123291016
    10. '(
' → logprob: -9.852970123291016

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28117457032203674
    2. ' input' → logprob: -1.4061745405197144
    3. '(input' → logprob: -11.656174659729004
    4. ',input' → logprob: -11.656174659729004
    5. '=input' → logprob: -12.781174659729004
    6. ')' → logprob: -12.906174659729004
    7. '	input' → logprob: -14.656174659729004
    8. '[input' → logprob: -15.031174659729004
    9. '   ' → logprob: -15.406174659729004
    10. ' ' → logprob: -15.531174659729004

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.060365608893335e-05
    2. '()' → logprob: -10.125041007995605
    3. '()))' → logprob: -15.500041007995605
    4. ' ().' → logprob: -16.00004005432129
    5. '()
' → logprob: -17.00004005432129
    6. '(' → logprob: -17.50004005432129
    7. '())' → logprob: -18.50004005432129
    8. '())))' → logprob: -19.37504005432129
    9. '()));' → logprob: -20.00004005432129
    10. '.strip' → logprob: -20.62504005432129

Token 165: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10195495933294296
    2. 'split' → logprob: -2.351954936981201
    3. 'rstrip' → logprob: -6.351954936981201
    4. ' strip' → logprob: -13.10195541381836
    5. 'read' → logprob: -13.85195541381836
    6. ' split' → logprob: -15.85195541381836
    7. '(strip' → logprob: -16.22695541381836
    8. '.strip' → logprob: -16.60195541381836
    9. '(split' → logprob: -16.97695541381836
    10. '-strip' → logprob: -16.97695541381836

Token 166: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.27861493825912476
    2. '))' → logprob: -1.5286149978637695
    3. '()' → logprob: -3.6536149978637695
    4. '(' → logprob: -8.27861499786377
    5. '()))
' → logprob: -9.40361499786377
    6. '())' → logprob: -10.02861499786377
    7. '()));' → logprob: -10.40361499786377
    8. ')' → logprob: -12.15361499786377
    9. '()))

' → logprob: -12.65361499786377
    10. '())).' → logprob: -12.77861499786377

Token 167: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5177281498908997
    2. '   ' → logprob: -1.1427280902862549
    3. '
' → logprob: -2.767728090286255
    4. '    
' → logprob: -5.017728328704834
    5. '<|end|>' → logprob: -5.017728328704834
    6. ' s' → logprob: -5.642728328704834
    7. 'n' → logprob: -6.392728328704834
    8. ')' → logprob: -7.017728328704834
    9. ' ' → logprob: -7.517728328704834
    10. '\n' → logprob: -7.767728328704834

Token 168: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02076948620378971
    2. '   ' → logprob: -4.0207695960998535
    3. ' s' → logprob: -6.6457695960998535
    4. '
' → logprob: -6.8957695960998535
    5. '    
' → logprob: -8.770769119262695
    6. 'n' → logprob: -10.645769119262695
    7. ' ' → logprob: -10.645769119262695
    8. '  ' → logprob: -10.895769119262695
    9. '	s' → logprob: -11.020769119262695
    10. ' 
' → logprob: -11.395769119262695

Token 169: ' Read' (ID: 5405)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010793721303343773
    2. ' s' → logprob: -6.876079559326172
    3. '#' → logprob: -11.126079559326172
    4. '   ' → logprob: -11.126079559326172
    5. 'if' → logprob: -12.501079559326172
    6. 'k' → logprob: -13.001079559326172
    7. '
' → logprob: -13.376079559326172
    8. '```' → logprob: -13.751079559326172
    9. 'def' → logprob: -14.063579559326172
    10. '_s' → logprob: -14.188579559326172

Token 170: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003337529255077243
    2. ' s' → logprob: -6.253337383270264
    3. '(s' → logprob: -6.753337383270264
    4. '()' → logprob: -8.753337860107422
    5. '(' → logprob: -10.003337860107422
    6. '   ' → logprob: -10.878337860107422
    7. '`s' → logprob: -11.628337860107422
    8. 'string' → logprob: -13.003337860107422
    9. '_s' → logprob: -13.878337860107422
    10. ')' → logprob: -14.128337860107422

Token 171: ' binary' (ID: 15600)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42881858348846436
    2. ' s' → logprob: -1.0538185834884644
    3. 'string' → logprob: -9.553818702697754
    4. ' string' → logprob: -10.803818702697754
    5. ' ' → logprob: -11.553818702697754
    6. '`s' → logprob: -12.178818702697754
    7. ''s' → logprob: -12.678818702697754
    8. '(s' → logprob: -13.553818702697754
    9. '   ' → logprob: -13.553818702697754
    10. '_s' → logprob: -14.303818702697754

Token 172: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6044701337814331
    2. 'string' → logprob: -0.8544701337814331
    3. ' s' → logprob: -4.104470252990723
    4. ' string' → logprob: -4.479470252990723
    5. '(s' → logprob: -8.979470252990723
    6. '_string' → logprob: -8.979470252990723
    7. 'str' → logprob: -11.104470252990723
    8. '(' → logprob: -11.729470252990723
    9. ' ' → logprob: -12.479470252990723
    10. 'String' → logprob: -13.104470252990723

Token 173: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3307558298110962
    2. ' s' → logprob: -1.5807558298110962
    3. '   ' → logprob: -2.5807557106018066
    4. '
' → logprob: -10.205756187438965
    5. '	s' → logprob: -11.330756187438965
    6. ' =' → logprob: -12.080756187438965
    7. '    
' → logprob: -12.080756187438965
    8. '(s' → logprob: -12.330756187438965
    9. ' ' → logprob: -12.580756187438965
    10. ',' → logprob: -12.830756187438965

Token 174: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3889918923377991
    2. '   ' → logprob: -1.1389918327331543
    3. ' s' → logprob: -6.513991832733154
    4. ' =' → logprob: -7.888991832733154
    5. '=s' → logprob: -9.388992309570312
    6. '    
' → logprob: -9.888992309570312
    7. '=' → logprob: -9.888992309570312
    8. '(s' → logprob: -10.638992309570312
    9. '	s' → logprob: -11.138992309570312
    10. '.s' → logprob: -11.638992309570312

Token 175: ' append' (ID: 17147)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.49073800444602966
    2. 's' → logprob: -2.2407379150390625
    3. 'input' → logprob: -2.6157379150390625
    4. 'strip' → logprob: -2.6157379150390625
    5. ' input' → logprob: -2.7407379150390625
    6. 'rstrip' → logprob: -3.2407379150390625
    7. ' strip' → logprob: -3.6157379150390625
    8. '.strip' → logprob: -5.9907379150390625
    9. ' ' → logprob: -7.8657379150390625
    10. '
' → logprob: -8.365737915039062

Token 176: ' a' (ID: 261)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28860822319984436
    2. '"' → logprob: -2.5386083126068115
    3. ' '' → logprob: -3.4136083126068115
    4. '0' → logprob: -3.5386083126068115
    5. ' a' → logprob: -3.6636083126068115
    6. ''s' → logprob: -3.9136083126068115
    7. ' ' → logprob: -4.163608074188232
    8. 'a' → logprob: -4.788608074188232
    9. 's' → logprob: -4.913608074188232
    10. '('' → logprob: -5.163608074188232

Token 177: ' sentinel' (ID: 180334)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7445679306983948
    2. '0' → logprob: -0.9945679306983948
    3. '"' → logprob: -1.99456787109375
    4. ' ' → logprob: -4.61956787109375
    5. ' '' → logprob: -5.24456787109375
    6. ' "' → logprob: -6.74456787109375
    7. '`' → logprob: -7.24456787109375
    8. '_' → logprob: -7.86956787109375
    9. ''s' → logprob: -8.24456787109375
    10. '1' → logprob: -8.74456787109375

Token 178: ' character' (ID: 5855)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3773773908615112
    2. ''' → logprob: -1.7523773908615112
    3. ''s' → logprob: -1.8773773908615112
    4. ' '' → logprob: -2.127377510070801
    5. ' ' → logprob: -2.752377510070801
    6. '"' → logprob: -2.877377510070801
    7. 's' → logprob: -2.877377510070801
    8. '('' → logprob: -3.002377510070801
    9. ''\' → logprob: -4.502377510070801
    10. ' "' → logprob: -4.752377510070801

Token 179: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22984455525875092
    2. '(s' → logprob: -2.729844570159912
    3. ' s' → logprob: -3.229844570159912
    4. '(' → logprob: -3.479844570159912
    5. '('' → logprob: -3.979844570159912
    6. '   ' → logprob: -4.104844570159912
    7. ''s' → logprob: -4.604844570159912
    8. '('\' → logprob: -4.854844570159912
    9. '(
' → logprob: -5.604844570159912
    10. ',' → logprob: -6.354844570159912

Token 180: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08431125432252884
    2. ' ' → logprob: -2.7093112468719482
    3. '$' → logprob: -4.959311485290527
    4. '1' → logprob: -6.334311485290527
    5. ''' → logprob: -6.709311485290527
    6. '_' → logprob: -6.709311485290527
    7. '#' → logprob: -6.709311485290527
    8. 'B' → logprob: -7.709311485290527
    9. ' '' → logprob: -8.209311485290527
    10. '.' → logprob: -8.959311485290527

Token 181: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21858946979045868
    2. '))' → logprob: -2.0935895442962646
    3. '')' → logprob: -3.0935895442962646
    4. ''))' → logprob: -3.9685895442962646
    5. '\n' → logprob: -5.9685893058776855
    6. '")' → logprob: -6.2185893058776855
    7. 's' → logprob: -6.8435893058776855
    8. ')
' → logprob: -7.2185893058776855
    9. '"))' → logprob: -7.8435893058776855
    10. '   ' → logprob: -7.8435893058776855

Token 182: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2048322558403015
    2. '(s' → logprob: -2.4548323154449463
    3. '   ' → logprob: -2.7048323154449463
    4. '(' → logprob: -4.204832077026367
    5. ')' → logprob: -5.204832077026367
    6. ' s' → logprob: -5.329832077026367
    7. '()' → logprob: -5.704832077026367
    8. ',' → logprob: -5.954832077026367
    9. ' =' → logprob: -7.454832077026367
    10. '=' → logprob: -9.079832077026367

Token 183: ' mark' (ID: 1983)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49461159110069275
    2. ' s' → logprob: -0.9946116209030151
    3. ' the' → logprob: -3.9946115016937256
    4. ' it' → logprob: -6.619611740112305
    5. 'the' → logprob: -7.619611740112305
    6. 'it' → logprob: -10.869611740112305
    7. ' prevent' → logprob: -10.869611740112305
    8. ' its' → logprob: -11.244611740112305
    9. ' ' → logprob: -11.744611740112305
    10. '   ' → logprob: -11.994611740112305

Token 184: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02122695930302143
    2. '<|end|>' → logprob: -4.39622688293457
    3. 's' → logprob: -5.52122688293457
    4. 'the' → logprob: -5.89622688293457
    5. ' its' → logprob: -6.52122688293457
    6. 'end' → logprob: -8.27122688293457
    7. ' s' → logprob: -9.27122688293457
    8. '<|end|>' → logprob: -9.89622688293457
    9. ''s' → logprob: -11.14622688293457
    10. ' ' → logprob: -11.14622688293457

Token 185: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.4742797315120697
    2. 'end' → logprob: -0.9742797613143921
    3. 's' → logprob: -9.349279403686523
    4. ' boundary' → logprob: -9.599279403686523
    5. 'boundary' → logprob: -10.474279403686523
    6. ' s' → logprob: -12.224279403686523
    7. '_end' → logprob: -12.599279403686523
    8. '	end' → logprob: -12.599279403686523
    9. 'string' → logprob: -13.224279403686523
    10. '\n' → logprob: -14.099279403686523

Token 186: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07014994323253632
    2. '   ' → logprob: -3.6951498985290527
    3. ')' → logprob: -4.195149898529053
    4. ' s' → logprob: -4.320149898529053
    5. '()' → logprob: -5.320149898529053
    6. '(' → logprob: -5.320149898529053
    7. '(s' → logprob: -5.820149898529053
    8. ' ' → logprob: -7.445149898529053
    9. ',' → logprob: -7.695149898529053
    10. '    
' → logprob: -8.445150375366211

Token 187: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014428269118070602
    2. ' s' → logprob: -4.26442813873291
    3. ' the' → logprob: -8.63942813873291
    4. 'the' → logprob: -9.38942813873291
    5. 'string' → logprob: -13.26442813873291
    6. 'line' → logprob: -14.26442813873291
    7. '<|end|>' → logprob: -14.76442813873291
    8. ' ' → logprob: -15.01442813873291
    9. ')' → logprob: -15.26442813873291
    10. '
' → logprob: -16.014429092407227

Token 188: ' string' (ID: 1621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33962786197662354
    2. 'string' → logprob: -1.4646278619766235
    3. ' string' → logprob: -3.464627742767334
    4. ' s' → logprob: -3.714627742767334
    5. 'input' → logprob: -7.339627742767334
    6. ' input' → logprob: -8.714628219604492
    7. 'line' → logprob: -8.714628219604492
    8. ' line' → logprob: -9.964628219604492
    9. 'sequence' → logprob: -10.589628219604492
    10. 'str' → logprob: -11.214628219604492

Token 189: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6106547713279724
    2. '   ' → logprob: -0.8606547713279724
    3. ' s' → logprob: -3.860654830932617
    4. ')' → logprob: -4.610654830932617
    5. ',' → logprob: -6.860654830932617
    6. ' ' → logprob: -7.360654830932617
    7. '(s' → logprob: -7.610654830932617
    8. '    
' → logprob: -8.860654830932617
    9. '  ' → logprob: -8.985654830932617
    10. '(' → logprob: -8.985654830932617

Token 190: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6382570266723633
    2. '   ' → logprob: -0.7632570266723633
    3. ' s' → logprob: -5.388257026672363
    4. ')' → logprob: -7.263257026672363
    5. '    
' → logprob: -8.763257026672363
    6. '	s' → logprob: -9.638257026672363
    7. ',' → logprob: -10.388257026672363
    8. ')s' → logprob: -10.638257026672363
    9. '(s' → logprob: -11.013257026672363
    10. ' ' → logprob: -11.013257026672363

Token 191: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.4782979488372803
    2. ' s' → logprob: -0.9782979488372803
    3. '   ' → logprob: -5.478298187255859
    4. '	s' → logprob: -11.22829818725586
    5. '
' → logprob: -11.85329818725586
    6. '    
' → logprob: -12.72829818725586
    7. ' ' → logprob: -12.85329818725586
    8. ' 
' → logprob: -13.22829818725586
    9. '  ' → logprob: -13.35329818725586
    10. ',' → logprob: -13.60329818725586

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26503169536590576
    2. ' =' → logprob: -1.5150316953659058
    3. '+=' → logprob: -4.890031814575195
    4. ' +=' → logprob: -5.765031814575195
    5. '+' → logprob: -6.140031814575195
    6. ' +' → logprob: -8.890031814575195
    7. '=s' → logprob: -10.515031814575195
    8. '=input' → logprob: -11.265031814575195
    9. '+s' → logprob: -11.765031814575195
    10. 's' → logprob: -12.140031814575195

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014761120080948
    2. ' input' → logprob: -1.7014760971069336
    3. '(input' → logprob: -9.951476097106934
    4. 'list' → logprob: -11.576476097106934
    5. ' list' → logprob: -13.076476097106934
    6. ' (' → logprob: -14.326476097106934
    7. ' ' → logprob: -14.451476097106934
    8. '	input' → logprob: -14.701476097106934
    9. '[input' → logprob: -14.701476097106934
    10. 'str' → logprob: -15.076476097106934

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008617646060883999
    2. '()' → logprob: -4.758617877960205
    3. ' ().' → logprob: -13.008617401123047
    4. ' ()' → logprob: -15.633617401123047
    5. '.rstrip' → logprob: -15.633617401123047
    6. '.strip' → logprob: -16.133617401123047
    7. '(' → logprob: -16.383617401123047
    8. '()+' → logprob: -16.383617401123047
    9. '()
' → logprob: -16.758617401123047
    10. '()<' → logprob: -17.758617401123047

Token 195: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0380416102707386
    2. 'rstrip' → logprob: -3.288041591644287
    3. 'read' → logprob: -16.538042068481445
    4. ' strip' → logprob: -17.663042068481445
    5. 'str' → logprob: -19.288042068481445
    6. '.rstrip' → logprob: -19.538042068481445
    7. '(strip' → logprob: -19.538042068481445
    8. 'replace' → logprob: -20.538042068481445
    9. '_strip' → logprob: -20.913042068481445
    10. 'rst' → logprob: -21.788042068481445

Token 196: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.48471328616142273
    2. '+' → logprob: -0.9847133159637451
    3. '()+' → logprob: -5.234713077545166
    4. ' +' → logprob: -5.859713077545166
    5. '2' → logprob: -6.859713077545166
    6. '+'' → logprob: -6.984713077545166
    7. '(' → logprob: -8.734713554382324
    8. ''' → logprob: -8.984713554382324
    9. '('' → logprob: -10.234713554382324
    10. '+"' → logprob: -10.734713554382324

Token 197: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.973961353302002
    2. ' +' → logprob: -1.098961353302002
    3. 's' → logprob: -1.598961353302002
    4. '2' → logprob: -3.098961353302002
    5. '+'' → logprob: -4.098961353302002
    6. '   ' → logprob: -4.473961353302002
    7. ' s' → logprob: -5.598961353302002
    8. '+
' → logprob: -6.098961353302002
    9. '+s' → logprob: -6.473961353302002
    10. ' ' → logprob: -6.848961353302002

Token 198: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14495140314102173
    2. '"' → logprob: -2.019951343536377
    3. ' '' → logprob: -6.519951343536377
    4. '2' → logprob: -7.519951343536377
    5. ' "' → logprob: -8.644951820373535
    6. ' ' → logprob: -9.519951820373535
    7. '`' → logprob: -12.019951820373535
    8. ' ' → logprob: -14.144951820373535
    9. '   ' → logprob: -15.019951820373535
    10. '```' → logprob: -15.269951820373535

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.2524021157296374e-05
    2. ' ' → logprob: -10.250052452087402
    3. ''' → logprob: -11.000052452087402
    4. '')' → logprob: -14.750052452087402
    5. '"' → logprob: -18.25005340576172
    6. '₂' → logprob: -18.75005340576172
    7. ')' → logprob: -18.87505340576172
    8. ''s' → logprob: -18.87505340576172
    9. '```' → logprob: -18.87505340576172
    10. ' '' → logprob: -19.00005340576172

Token 200: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.41866585687967e-06
    2. ''
' → logprob: -12.625008583068848
    3. '')' → logprob: -12.875008583068848
    4. ')'' → logprob: -14.000008583068848
    5. ' '' → logprob: -14.500008583068848
    6. '"' → logprob: -14.875008583068848
    7. ')' → logprob: -15.250008583068848
    8. ''''' → logprob: -15.375008583068848
    9. '   ' → logprob: -16.62500762939453
    10. ''"' → logprob: -17.00000762939453

Token 201: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23529474437236786
    2. '   ' → logprob: -1.8602946996688843
    3. '    
' → logprob: -3.485294818878174
    4. 'blocks' → logprob: -4.985294818878174
    5. 'groups' → logprob: -5.360294818878174
    6. '   
' → logprob: -6.485294818878174
    7. 'length' → logprob: -6.610294818878174
    8. 'idx' → logprob: -6.735294818878174
    9. 'count' → logprob: -7.360294818878174
    10. 'counts' → logprob: -7.485294818878174

Token 202: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3544946908950806
    2. 'blocks' → logprob: -1.3544946908950806
    3. 'length' → logprob: -2.354494571685791
    4. 'groups' → logprob: -2.479494571685791
    5. 'cnt' → logprob: -2.854494571685791
    6. 'count' → logprob: -3.229494571685791
    7. 'counts' → logprob: -3.354494571685791
    8. 'i' → logprob: -3.854494571685791
    9. 'ans' → logprob: -4.104494571685791
    10. 'block' → logprob: -4.229494571685791

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02637333609163761
    2. '=' → logprob: -3.9013733863830566
    3. 'u' → logprob: -5.901373386383057
    4. ' ' → logprob: -6.526373386383057
    5. 'urn' → logprob: -6.651373386383057
    6. ',' → logprob: -9.276372909545898
    7. 'ur' → logprob: -9.401372909545898
    8. '   ' → logprob: -10.276372909545898
    9. 'val' → logprob: -10.651372909545898
    10. 'max' → logprob: -11.026372909545898

Token 204: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3150234520435333
    2. '0' → logprob: -1.315023422241211
    3. ' [' → logprob: -7.315023422241211
    4. ' -' → logprob: -7.940023422241211
    5. '[]' → logprob: -8.815023422241211
    6. '1' → logprob: -8.940023422241211
    7. ' []' → logprob: -9.065023422241211
    8. '-' → logprob: -9.190023422241211
    9. '[' → logprob: -9.690023422241211
    10. ' n' → logprob: -10.065023422241211

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002829603850841522
    2. '[]' → logprob: -7.002829551696777
    3. '1' → logprob: -7.252829551696777
    4. '[' → logprob: -7.502829551696777
    5. '-' → logprob: -8.252829551696777
    6. 'max' → logprob: -9.377829551696777
    7. 'ans' → logprob: -9.627829551696777
    8. ' ' → logprob: -9.752829551696777
    9. 'n' → logprob: -10.127829551696777
    10. '[]
' → logprob: -10.252829551696777

Token 206: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5253590941429138
    2. ' i' → logprob: -2.0253591537475586
    3. ' l' → logprob: -2.6503591537475586
    4. ' length' → logprob: -3.4003591537475586
    5. ' cnt' → logprob: -3.5253591537475586
    6. ' count' → logprob: -3.9003591537475586
    7. 'i' → logprob: -4.275359153747559
    8. ' start' → logprob: -4.525359153747559
    9. ' left' → logprob: -4.775359153747559
    10. '
' → logprob: -4.900359153747559

Token 207: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1909334659576416
    2. ',' → logprob: -2.5659334659576416
    3. ' l' → logprob: -2.5659334659576416
    4. 'count' → logprob: -2.6909334659576416
    5. 'cnt' → logprob: -2.6909334659576416
    6. ' blocks' → logprob: -3.0659334659576416
    7. ' groups' → logprob: -3.1909334659576416
    8. 'blocks' → logprob: -3.3159334659576416
    9. ' cnt' → logprob: -3.5659334659576416
    10. 'l' → logprob: -3.6909334659576416

Token 208: ' Initialize' (ID: 19496)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3909837007522583
    2. ' l' → logprob: -1.6409837007522583
    3. ' length' → logprob: -2.2659835815429688
    4. 'left' → logprob: -2.8909835815429688
    5. 'cnt' → logprob: -3.0159835815429688
    6. 'length' → logprob: -3.2659835815429688
    7. 'count' → logprob: -3.3909835815429688
    8. '0' → logprob: -3.6409835815429688
    9. ' cnt' → logprob: -3.6409835815429688
    10. ' left' → logprob: -3.7659835815429688

Token 209: ' the' (ID: 290)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.320870280265808
    2. ' length' → logprob: -2.0708703994750977
    3. 'l' → logprob: -2.6958703994750977
    4. ' left' → logprob: -2.8208703994750977
    5. 'left' → logprob: -3.1958703994750977
    6. ' i' → logprob: -3.1958703994750977
    7. 'length' → logprob: -3.4458703994750977
    8. 'i' → logprob: -3.4458703994750977
    9. ' j' → logprob: -3.5708703994750977
    10. ' count' → logprob: -3.5708703994750977

Token 210: ' result' (ID: 1534)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1408765316009521
    2. 'count' → logprob: -1.2658765316009521
    3. 'l' → logprob: -2.390876531600952
    4. 'length' → logprob: -2.515876531600952
    5. 'current' → logprob: -3.265876531600952
    6. 'ans' → logprob: -3.265876531600952
    7. 'answer' → logprob: -3.265876531600952
    8. 'start' → logprob: -3.390876531600952
    9. 'cnt' → logprob: -3.890876531600952
    10. 'result' → logprob: -5.140876770019531

Token 211: ' variable' (ID: 11076)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1150038242340088
    2. ' i' → logprob: -1.9900038242340088
    3. ' length' → logprob: -2.365003824234009
    4. ' cnt' → logprob: -2.615003824234009
    5. 'l' → logprob: -2.990003824234009
    6. 'i' → logprob: -3.115003824234009
    7. 'cnt' → logprob: -3.365003824234009
    8. ',' → logprob: -3.490003824234009
    9. ' count' → logprob: -3.490003824234009
    10. '   ' → logprob: -4.11500358581543

Token 212: ' to' (ID: 316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.7622488737106323
    2. ' l' → logprob: -1.8872488737106323
    3. ' groups' → logprob: -2.262248992919922
    4. ' length' → logprob: -2.387248992919922
    5. '   ' → logprob: -2.637248992919922
    6. 'i' → logprob: -2.887248992919922
    7. '
' → logprob: -3.387248992919922
    8. ' blocks' → logprob: -3.387248992919922
    9. 'l' → logprob: -3.512248992919922
    10. ' count' → logprob: -3.637248992919922

Token 213: ' store' (ID: 4897)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05522921681404114
    2. ' ' → logprob: -2.9302291870117188
    3. '1' → logprob: -9.055229187011719
    4. 'max' → logprob: -9.680229187011719
    5. 'n' → logprob: -9.930229187011719
    6. ' n' → logprob: -10.555229187011719
    7. 'ret' → logprob: -10.555229187011719
    8. 'int' → logprob: -10.930229187011719
    9. ' max' → logprob: -11.180229187011719
    10. ' -' → logprob: -11.805229187011719

Token 214: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6031694412231445
    2. ' ' → logprob: -0.9781694412231445
    3. ' the' → logprob: -2.8531694412231445
    4. 'the' → logprob: -4.4781694412231445
    5. 'max' → logprob: -5.6031694412231445
    6. ' max' → logprob: -6.1031694412231445
    7. 'ret' → logprob: -6.9781694412231445
    8. ' ret' → logprob: -7.8531694412231445
    9. ' maximum' → logprob: -8.228169441223145
    10. 'maximum' → logprob: -8.728169441223145

Token 215: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.07440586388111115
    2. 'max' → logprob: -3.0744059085845947
    3. ' maximum' → logprob: -3.8244059085845947
    4. 'length' → logprob: -6.199405670166016
    5. 'answer' → logprob: -7.449405670166016
    6. 'current' → logprob: -8.699405670166016
    7. ' length' → logprob: -8.699405670166016
    8. '0' → logprob: -8.699405670166016
    9. ' max' → logprob: -8.699405670166016
    10. 'long' → logprob: -9.199405670166016

Token 216: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5843544006347656
    2. ' length' → logprob: -0.8343544006347656
    3. '_length' → logprob: -5.084354400634766
    4. 'len' → logprob: -6.834354400634766
    5. 'substring' → logprob: -8.334354400634766
    6. ' substring' → logprob: -8.584354400634766
    7. '-length' → logprob: -9.459354400634766
    8. '_' → logprob: -9.459354400634766
    9. '_len' → logprob: -9.584354400634766
    10. ' ' → logprob: -10.084354400634766

Token 217: ' found' (ID: 2491)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.6618837118148804
    2. 'l' → logprob: -2.03688383102417
    3. ' length' → logprob: -2.53688383102417
    4. 'cnt' → logprob: -2.53688383102417
    5. ',' → logprob: -3.03688383102417
    6. 'length' → logprob: -3.28688383102417
    7. ' cnt' → logprob: -3.28688383102417
    8. ' i' → logprob: -3.28688383102417
    9. '   ' → logprob: -3.41188383102417
    10. 'i' → logprob: -3.66188383102417

Token 218: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34102731943130493
    2. 'cnt' → logprob: -2.84102725982666
    3. 'count' → logprob: -3.59102725982666
    4. 'i' → logprob: -3.84102725982666
    5. 'l' → logprob: -4.09102725982666
    6. ' i' → logprob: -4.21602725982666
    7. ' cnt' → logprob: -4.34102725982666
    8. ' count' → logprob: -4.46602725982666
    9. ' groups' → logprob: -4.46602725982666
    10. ' length' → logprob: -4.59102725982666

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15239481627941132
    2. 'i' → logprob: -2.9023947715759277
    3. 'l' → logprob: -3.5273947715759277
    4. ' i' → logprob: -4.402394771575928
    5. ' l' → logprob: -4.527394771575928
    6. 'blocks' → logprob: -5.152394771575928
    7. 'cnt' → logprob: -5.277394771575928
    8. 'groups' → logprob: -5.777394771575928
    9. ' groups' → logprob: -6.152394771575928
    10. 'counts' → logprob: -6.652394771575928

Token 220: ' def' (ID: 1056)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7613807916641235
    2. 'l' → logprob: -1.8863807916641235
    3. 'cnt' → logprob: -2.011380672454834
    4. 'lst' → logprob: -2.886380672454834
    5. 'idx' → logprob: -3.136380672454834
    6. 'left' → logprob: -3.261380672454834
    7. 'groups' → logprob: -3.261380672454834
    8. 'arr' → logprob: -3.511380672454834
    9. 'blocks' → logprob: -3.511380672454834
    10. 'count' → logprob: -3.636380672454834

Token 221: ' next' (ID: 2613)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.487850546836853
    2. ' get' → logprob: -2.3628506660461426
    3. ' count' → logprob: -2.3628506660461426
    4. ' calc' → logprob: -2.6128506660461426
    5. 'count' → logprob: -2.8628506660461426
    6. ' check' → logprob: -3.6128506660461426
    7. 's' → logprob: -3.6753506660461426
    8. ' length' → logprob: -3.7378506660461426
    9. 'length' → logprob: -3.8003506660461426
    10. 'get' → logprob: -3.9253506660461426

Token 222: '0' (ID: 15)
  Prédit: '_block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_block' → logprob: -1.2105056047439575
    2. '_pos' → logprob: -1.4605056047439575
    3. '_idx' → logprob: -1.7105056047439575
    4. '():' → logprob: -2.335505485534668
    5. '_index' → logprob: -3.210505485534668
    6. '_char' → logprob: -3.335505485534668
    7. '_' → logprob: -3.835505485534668
    8. '_token' → logprob: -4.210505485534668
    9. 'pos' → logprob: -4.335505485534668
    10. 'idx' → logprob: -4.460505485534668

Token 223: '(l' (ID: 4179)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.4219554662704468
    2. '():' → logprob: -1.5469554662704468
    3. '(i' → logprob: -1.6719554662704468
    4. 'pos' → logprob: -2.2969555854797363
    5. 'idx' → logprob: -2.6719555854797363
    6. '_idx' → logprob: -2.7969555854797363
    7. '()' → logprob: -3.2969555854797363
    8. '_block' → logprob: -3.6719555854797363
    9. '_index' → logprob: -4.421955585479736
    10. '():
' → logprob: -5.296955585479736

Token 224: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20161905884742737
    2. '):
' → logprob: -1.951619029045105
    3. ',' → logprob: -3.8266191482543945
    4. ')' → logprob: -4.4516191482543945
    5. 'x' → logprob: -6.3266191482543945
    6. ' ):' → logprob: -7.0766191482543945
    7. 'ex' → logprob: -7.5766191482543945
    8. '_' → logprob: -7.8266191482543945
    9. '   ' → logprob: -8.326619148254395
    10. 'ef' → logprob: -8.451619148254395

Token 225: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014674274250864983
    2. ')' → logprob: -5.264674186706543
    3. ' int' → logprob: -5.514674186706543
    4. '):' → logprob: -5.639674186706543
    5. '   ' → logprob: -7.264674186706543
    6. '):
' → logprob: -7.264674186706543
    7. '  ' → logprob: -9.764674186706543
    8. ' ' → logprob: -10.014674186706543
    9. 'i' → logprob: -10.014674186706543
    10. ',' → logprob: -10.014674186706543

Token 226: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13721589744091034
    2. '):' → logprob: -2.1372158527374268
    3. ')' → logprob: -5.012216091156006
    4. '):
' → logprob: -6.137216091156006
    5. ' ,' → logprob: -6.887216091156006
    6. ' ):' → logprob: -8.637215614318848
    7. '   ' → logprob: -9.387215614318848
    8. ' )' → logprob: -10.637215614318848
    9. '):
' → logprob: -10.762215614318848
    10. ',
' → logprob: -11.137215614318848

Token 227: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028562448918819427
    2. '->' → logprob: -4.153562545776367
    3. '):' → logprob: -5.153562545776367
    4. ',' → logprob: -6.028562545776367
    5. ' ->' → logprob: -6.153562545776367
    6. ')' → logprob: -7.028562545776367
    7. '   ' → logprob: -7.653562545776367
    8. ':
' → logprob: -8.403562545776367
    9. ' :' → logprob: -8.403562545776367
    10. ')->' → logprob: -9.153562545776367

Token 228: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002127183834090829
    2. ' int' → logprob: -6.502127170562744
    3. 'list' → logprob: -8.377127647399902
    4. '[int' → logprob: -9.002127647399902
    5. 'None' → logprob: -9.377127647399902
    6. '(int' → logprob: -9.377127647399902
    7. 's' → logprob: -11.002127647399902
    8. 'range' → logprob: -11.002127647399902
    9. '   ' → logprob: -11.252127647399902
    10. 'tuple' → logprob: -11.377127647399902

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011896300129592419
    2. ':
' → logprob: -7.251189708709717
    3. '   ' → logprob: -8.751189231872559
    4. ',' → logprob: -8.876189231872559
    5. '):' → logprob: -9.126189231872559
    6. ' :' → logprob: -10.001189231872559
    7. '       ' → logprob: -12.001189231872559
    8. ':return' → logprob: -12.751189231872559
    9. ' ' → logprob: -12.876189231872559
    10. ':int' → logprob: -13.126189231872559

Token 230: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7431188225746155
    2. '       ' → logprob: -1.1181187629699707
    3. '    ' → logprob: -1.9931187629699707
    4. ' ' → logprob: -3.3681187629699707
    5. '    
' → logprob: -5.743118762969971
    6. ' s' → logprob: -6.118118762969971
    7. '0' → logprob: -6.243118762969971
    8. 'i' → logprob: -6.368118762969971
    9. '     ' → logprob: -6.368118762969971
    10. 's' → logprob: -6.368118762969971

Token 231: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46180856227874756
    2. ' while' → logprob: -1.5868085622787476
    3. 'while' → logprob: -2.211808681488037
    4. '       ' → logprob: -3.211808681488037
    5. ' for' → logprob: -5.086808681488037
    6. 'for' → logprob: -5.211808681488037
    7. '    ' → logprob: -6.836808681488037
    8. 'n' → logprob: -7.086808681488037
    9. 'i' → logprob: -7.586808681488037
    10. 'if' → logprob: -7.961808681488037

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3077549338340759
    2. 'while' → logprob: -2.5577549934387207
    3. '   ' → logprob: -2.6827549934387207
    4. 'for' → logprob: -3.0577549934387207
    5. ' while' → logprob: -3.1827549934387207
    6. ' for' → logprob: -3.6827549934387207
    7. ' s' → logprob: -6.057754993438721
    8. 's' → logprob: -6.307754993438721
    9. '    ' → logprob: -8.557754516601562
    10. 'n' → logprob: -8.557754516601562

Token 233: ' Finds' (ID: 113426)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.46840739250183105
    2. 'while' → logprob: -1.593407392501831
    3. '   ' → logprob: -1.968407392501831
    4. ' for' → logprob: -4.34340763092041
    5. 'for' → logprob: -5.59340763092041
    6. 'r' → logprob: -5.71840763092041
    7. ' i' → logprob: -5.96840763092041
    8. 'i' → logprob: -6.21840763092041
    9. '       ' → logprob: -6.34340763092041
    10. ' r' → logprob: -6.84340763092041

Token 234: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.764315128326416
    2. ' s' → logprob: -1.389315128326416
    3. 'l' → logprob: -1.889315128326416
    4. ' l' → logprob: -3.264315128326416
    5. '   ' → logprob: -3.764315128326416
    6. ' the' → logprob: -4.139315128326416
    7. 'n' → logprob: -4.389315128326416
    8. ' next' → logprob: -4.764315128326416
    9. '       ' → logprob: -4.889315128326416
    10. 'the' → logprob: -5.139315128326416

Token 235: ' index' (ID: 3472)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3703678548336029
    2. 'while' → logprob: -2.3703677654266357
    3. 'next' → logprob: -2.8703677654266357
    4. ' next' → logprob: -3.2453677654266357
    5. 's' → logprob: -3.2453677654266357
    6. 'n' → logprob: -3.3703677654266357
    7. 'for' → logprob: -4.495368003845215
    8. ' while' → logprob: -4.620368003845215
    9. ' l' → logprob: -5.495368003845215
    10. 'i' → logprob: -5.745368003845215

Token 236: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6201006770133972
    2. ' where' → logprob: -1.495100736618042
    3. '       ' → logprob: -2.870100736618042
    4. ' l' → logprob: -3.120100736618042
    5. 'of' → logprob: -3.495100736618042
    6. 'l' → logprob: -3.495100736618042
    7. ' while' → logprob: -4.370100498199463
    8. 's' → logprob: -4.620100498199463
    9. 'while' → logprob: -5.120100498199463
    10. ' at' → logprob: -5.370100498199463

Token 237: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7444785833358765
    2. ' the' → logprob: -1.1194785833358765
    3. 'l' → logprob: -1.9944785833358765
    4. 's' → logprob: -3.244478702545166
    5. ''' → logprob: -5.244478702545166
    6. ''s' → logprob: -5.494478702545166
    7. 'next' → logprob: -5.744478702545166
    8. 'n' → logprob: -5.869478702545166
    9. ' l' → logprob: -5.994478702545166
    10. ' s' → logprob: -6.244478702545166

Token 238: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.45097190141677856
    2. ' first' → logprob: -1.5759718418121338
    3. 'next' → logprob: -2.700971841812134
    4. ''' → logprob: -3.450971841812134
    5. 'first' → logprob: -3.450971841812134
    6. 'l' → logprob: -4.950972080230713
    7. '0' → logprob: -5.075972080230713
    8. 's' → logprob: -5.575972080230713
    9. ' s' → logprob: -6.075972080230713
    10. ' l' → logprob: -6.700972080230713

Token 239: ' occurrence' (ID: 55807)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34952718019485474
    2. '0' → logprob: -2.09952712059021
    3. ' '' → logprob: -2.59952712059021
    4. 'l' → logprob: -4.099527359008789
    5. ' ' → logprob: -4.599527359008789
    6. ' l' → logprob: -4.599527359008789
    7. ''s' → logprob: -4.849527359008789
    8. 's' → logprob: -4.849527359008789
    9. ' s' → logprob: -4.849527359008789
    10. ''l' → logprob: -4.974527359008789

Token 240: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1009116992354393
    2. ' ' → logprob: -2.7259116172790527
    3. 'of' → logprob: -3.9759116172790527
    4. '    ' → logprob: -6.100911617279053
    5. '   ' → logprob: -6.350911617279053
    6. ' in' → logprob: -6.850911617279053
    7. ' or' → logprob: -6.975911617279053
    8. '  ' → logprob: -7.350911617279053
    9. 's' → logprob: -7.350911617279053
    10. '(' → logprob: -7.475911617279053

Token 241: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0015218837652355433
    2. ' '' → logprob: -7.501522064208984
    3. '0' → logprob: -8.001522064208984
    4. ''s' → logprob: -8.376522064208984
    5. 's' → logprob: -8.376522064208984
    6. '"' → logprob: -9.751522064208984
    7. '`' → logprob: -10.251522064208984
    8. '   ' → logprob: -10.751522064208984
    9. ''l' → logprob: -11.376522064208984
    10. ' ' → logprob: -11.501522064208984

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043622471392154694
    2. ''' → logprob: -3.4186224937438965
    3. '1' → logprob: -4.6686224937438965
    4. 's' → logprob: -7.9186224937438965
    5. ''s' → logprob: -9.168622016906738
    6. '')' → logprob: -10.918622016906738
    7. ' ' → logprob: -11.293622016906738
    8. '2' → logprob: -11.418622016906738
    9. ' '' → logprob: -12.043622016906738
    10. '`' → logprob: -12.293622016906738

Token 243: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2457371950149536
    2. '',' → logprob: -2.370737075805664
    3. ',' → logprob: -3.620737075805664
    4. 'from' → logprob: -3.870737075805664
    5. ' in' → logprob: -3.995737075805664
    6. ' after' → logprob: -4.245737075805664
    7. ')' → logprob: -4.620737075805664
    8. '')' → logprob: -4.745737075805664
    9. '   ' → logprob: -4.995737075805664
    10. ' from' → logprob: -5.495737075805664

Token 244: ' or' (ID: 503)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -1.332782506942749
    2. ',' → logprob: -1.832782506942749
    3. ' or' → logprob: -1.832782506942749
    4. ' in' → logprob: -2.082782506942749
    5. ' starting' → logprob: -2.582782506942749
    6. ' from' → logprob: -2.707782506942749
    7. '   ' → logprob: -2.707782506942749
    8. 'from' → logprob: -3.082782506942749
    9. ' at' → logprob: -4.082782745361328
    10. 'starting' → logprob: -5.082782745361328

Token 245: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.031057342886924744
    2. ' '' → logprob: -4.406057357788086
    3. ''s' → logprob: -5.406057357788086
    4. ''l' → logprob: -5.531057357788086
    5. '   ' → logprob: -6.406057357788086
    6. 's' → logprob: -6.531057357788086
    7. ' l' → logprob: -6.656057357788086
    8. '2' → logprob: -6.906057357788086
    9. '1' → logprob: -6.906057357788086
    10. ' s' → logprob: -7.031057357788086

Token 246: ' string' (ID: 1621)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46738922595977783
    2. 'n' → logprob: -2.3423891067504883
    3. 'l' → logprob: -2.7173891067504883
    4. ' n' → logprob: -3.4673891067504883
    5. 's' → logprob: -3.5923891067504883
    6. 'len' → logprob: -3.5923891067504883
    7. ''s' → logprob: -3.9673891067504883
    8. ' l' → logprob: -4.342389106750488
    9. ' s' → logprob: -4.467389106750488
    10. ' '' → logprob: -4.717389106750488

Token 247: '-ending' (ID: 128767)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.5633132457733154
    2. '   ' → logprob: -1.6883132457733154
    3. 'length' → logprob: -1.6883132457733154
    4. '[l' → logprob: -1.8133132457733154
    5. ' length' → logprob: -2.6883132457733154
    6. ' end' → logprob: -3.4383132457733154
    7. 's' → logprob: -3.5633132457733154
    8. ',' → logprob: -3.8133132457733154
    9. 'end' → logprob: -3.8133132457733154
    10. '       ' → logprob: -3.9383132457733154

Token 248: ' sentinel' (ID: 180334)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.1243961900472641
    2. 'character' → logprob: -2.9993960857391357
    3. ' after' → logprob: -3.7493960857391357
    4. ' or' → logprob: -4.124396324157715
    5. ' in' → logprob: -4.749396324157715
    6. '   ' → logprob: -4.999396324157715
    7. ' from' → logprob: -5.499396324157715
    8. ' ' → logprob: -6.499396324157715
    9. 'or' → logprob: -6.749396324157715
    10. 'from' → logprob: -6.999396324157715

Token 249: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9386078715324402
    2. ' character' → logprob: -1.188607931137085
    3. '   ' → logprob: -2.063607931137085
    4. ' after' → logprob: -2.813607931137085
    5. 'character' → logprob: -3.938607931137085
    6. ',' → logprob: -4.188607692718506
    7. ' from' → logprob: -4.313607692718506
    8. ' ' → logprob: -4.313607692718506
    9. 'in' → logprob: -4.688607692718506
    10. ''' → logprob: -4.813607692718506

Token 250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0731668472290039
    2. ''' → logprob: -2.698166847229004
    3. '')' → logprob: -6.198166847229004
    4. ' ' → logprob: -7.198166847229004
    5. '   ' → logprob: -9.198166847229004
    6. ' '' → logprob: -9.323166847229004
    7. 's' → logprob: -9.323166847229004
    8. '
' → logprob: -10.323166847229004
    9. ''s' → logprob: -11.073166847229004
    10. '',' → logprob: -11.323166847229004

Token 251: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03841083124279976
    2. '',' → logprob: -3.6634109020233154
    3. ' '' → logprob: -5.538410663604736
    4. ',' → logprob: -6.038410663604736
    5. '   ' → logprob: -6.038410663604736
    6. ' after' → logprob: -7.288410663604736
    7. ' in' → logprob: -7.413410663604736
    8. ')' → logprob: -7.663410663604736
    9. ' ',' → logprob: -8.038411140441895
    10. ' from' → logprob: -8.288411140441895

Token 252: ' starting' (ID: 8601)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.32608795166015625
    2. ' starting' → logprob: -2.4510879516601562
    3. ' in' → logprob: -2.5760879516601562
    4. '   ' → logprob: -2.9510879516601562
    5. ' from' → logprob: -3.4510879516601562
    6. ',' → logprob: -3.8260879516601562
    7. 'from' → logprob: -5.701087951660156
    8. 'after' → logprob: -6.451087951660156
    9. 'starting' → logprob: -6.576087951660156
    10. ' ' → logprob: -7.701087951660156

Token 253: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.63319993019104
    2. ' from' → logprob: -0.75819993019104
    3. ' at' → logprob: -7.758199691772461
    4. '   ' → logprob: -9.508199691772461
    5. 'at' → logprob: -10.133199691772461
    6. ')' → logprob: -11.133199691772461
    7. '	from' → logprob: -11.133199691772461
    8. ' ' → logprob: -11.508199691772461
    9. 'l' → logprob: -11.633199691772461
    10. '_from' → logprob: -13.008199691772461

Token 254: ' index' (ID: 3472)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.054971203207969666
    2. ' l' → logprob: -2.929971218109131
    3. '   ' → logprob: -9.679970741271973
    4. '    ' → logprob: -11.679970741271973
    5. '	l' → logprob: -11.929970741271973
    6. ' ' → logprob: -13.179970741271973
    7. '
' → logprob: -13.554970741271973
    8. ' the' → logprob: -13.929970741271973
    9. ')' → logprob: -14.054970741271973
    10. '```' → logprob: -14.179970741271973

Token 255: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2762090563774109
    2. ' l' → logprob: -1.5262091159820557
    3. '   ' → logprob: -4.401208877563477
    4. '(l' → logprob: -4.776208877563477
    5. ')' → logprob: -6.526208877563477
    6. ' (' → logprob: -7.526208877563477
    7. '    ' → logprob: -7.901208877563477
    8. '	l' → logprob: -8.151208877563477
    9. '(' → logprob: -8.776208877563477
    10. ' ' → logprob: -9.151208877563477

Token 256: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7987349033355713
    2. ':' → logprob: -1.1737349033355713
    3. '):' → logprob: -1.6737349033355713
    4. ',' → logprob: -3.9237349033355713
    5. ' in' → logprob: -4.673734664916992
    6. ' :' → logprob: -4.798734664916992
    7. ')' → logprob: -5.048734664916992
    8. '):
' → logprob: -6.548734664916992
    9. ':
' → logprob: -6.673734664916992
    10. 'def' → logprob: -6.923734664916992

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004496346693485975
    2. ' ' → logprob: -5.5044965744018555
    3. 'l' → logprob: -7.8794965744018555
    4. ' l' → logprob: -10.504496574401855
    5. '```' → logprob: -11.879496574401855
    6. ')' → logprob: -13.879496574401855
    7. '   ' → logprob: -13.879496574401855
    8. '+' → logprob: -14.504496574401855
    9. '
' → logprob: -15.004496574401855
    10. '    ' → logprob: -15.004496574401855

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002096197713399306
    2. ' ' → logprob: -8.50020980834961
    3. 'l' → logprob: -13.12520980834961
    4. '   ' → logprob: -13.50020980834961
    5. '```' → logprob: -13.87520980834961
    6. '
' → logprob: -14.25020980834961
    7. '0' → logprob: -14.87520980834961
    8. ')' → logprob: -15.75020980834961
    9. '+' → logprob: -16.37520980834961
    10. '  ' → logprob: -16.50020980834961

Token 259: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7731703519821167
    2. ')' → logprob: -1.3981703519821167
    3. '   ' → logprob: -1.5231703519821167
    4. ':' → logprob: -2.7731704711914062
    5. '):
' → logprob: -6.023170471191406
    6. ',' → logprob: -6.148170471191406
    7. '
' → logprob: -6.773170471191406
    8. ' ' → logprob: -6.773170471191406
    9. '       ' → logprob: -6.898170471191406
    10. ':return' → logprob: -7.648170471191406

Token 260: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5323666334152222
    2. '   ' → logprob: -1.1573666334152222
    3. '       ' → logprob: -3.9073667526245117
    4. ' )' → logprob: -4.407366752624512
    5. '    ' → logprob: -4.532366752624512
    6. '):' → logprob: -4.532366752624512
    7. ':' → logprob: -4.782366752624512
    8. ' ' → logprob: -5.282366752624512
    9. ' return' → logprob: -5.532366752624512
    10. ' 
' → logprob: -5.657366752624512

Token 261: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10392727702856064
    2. 'l' → logprob: -3.2289273738861084
    3. '       ' → logprob: -4.103927135467529
    4. ' l' → logprob: -4.228927135467529
    5. '    ' → logprob: -4.853927135467529
    6. ')' → logprob: -5.478927135467529
    7. ' while' → logprob: -5.853927135467529
    8. '    
' → logprob: -6.353927135467529
    9. '):' → logprob: -6.978927135467529
    10. 'while' → logprob: -6.978927135467529

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7863783836364746
    2. '):' → logprob: -1.1613783836364746
    3. ',' → logprob: -1.9113783836364746
    4. '   ' → logprob: -3.1613783836364746
    5. ')' → logprob: -3.5363783836364746
    6. '):
' → logprob: -5.036378383636475
    7. ' :' → logprob: -6.411378383636475
    8. ':
' → logprob: -6.536378383636475
    9. '       ' → logprob: -7.536378383636475
    10. ',
' → logprob: -7.661378383636475

Token 263: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.745437502861023
    2. ')' → logprob: -1.745437502861023
    3. '       ' → logprob: -1.745437502861023
    4. 'l' → logprob: -2.7454376220703125
    5. '):' → logprob: -3.6204376220703125
    6. '    ' → logprob: -3.7454376220703125
    7. '   ' → logprob: -4.2454376220703125
    8. '           ' → logprob: -4.8704376220703125
    9. '):
' → logprob: -4.9954376220703125
    10. ' )' → logprob: -5.2454376220703125

Token 264: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.1022452563047409
    2. ' l' → logprob: -2.352245330810547
    3. '   ' → logprob: -7.227245330810547
    4. '       ' → logprob: -8.352245330810547
    5. 'self' → logprob: -8.477245330810547
    6. 's' → logprob: -8.477245330810547
    7. ' s' → logprob: -8.727245330810547
    8. '           ' → logprob: -8.727245330810547
    9. ' self' → logprob: -8.852245330810547
    10. ' index' → logprob: -10.352245330810547

Token 265: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4915564954280853
    2. '):' → logprob: -0.9915565252304077
    3. '):
' → logprob: -4.866556644439697
    4. ')' → logprob: -5.866556644439697
    5. ':int' → logprob: -5.866556644439697
    6. ' :' → logprob: -6.366556644439697
    7. ' ):' → logprob: -6.491556644439697
    8. '   ' → logprob: -7.616556644439697
    9. '+' → logprob: -9.116556167602539
    10. ' ):
' → logprob: -10.616556167602539

Token 266: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0059914859011769295
    2. ')' → logprob: -5.755991458892822
    3. '):' → logprob: -6.005991458892822
    4. ' int' → logprob: -8.88099193572998
    5. ':int' → logprob: -9.13099193572998
    6. '[int' → logprob: -10.25599193572998
    7. '):
' → logprob: -10.75599193572998
    8. 'l' → logprob: -11.13099193572998
    9. ':' → logprob: -11.25599193572998
    10. '   ' → logprob: -11.50599193572998

Token 267: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16069604456424713
    2. ')' → logprob: -2.160696029663086
    3. '+' → logprob: -3.910696029663086
    4. '):
' → logprob: -4.660696029663086
    5. ' +' → logprob: -6.535696029663086
    6. ' ):' → logprob: -6.785696029663086
    7. '   ' → logprob: -7.160696029663086
    8. ' )' → logprob: -8.910696029663086
    9. ')+' → logprob: -10.160696029663086
    10. ':' → logprob: -10.160696029663086

Token 268: ' Index' (ID: 14580)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06626192480325699
    2. 'l' → logprob: -2.8162620067596436
    3. ' The' → logprob: -6.8162617683410645
    4. '       ' → logprob: -7.4412617683410645
    5. ' index' → logprob: -7.4412617683410645
    6. 'The' → logprob: -7.9412617683410645
    7. ')' → logprob: -7.9412617683410645
    8. '           ' → logprob: -8.566262245178223
    9. ' start' → logprob: -8.691262245178223
    10. ' Next' → logprob: -8.816262245178223

Token 269: ' to' (ID: 316)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47761237621307373
    2. ' +' → logprob: -0.9776123762130737
    3. '):' → logprob: -6.352612495422363
    4. ')' → logprob: -7.352612495422363
    5. '   ' → logprob: -7.477612495422363
    6. '):
' → logprob: -9.602612495422363
    7. ':' → logprob: -9.727612495422363
    8. ' ' → logprob: -9.977612495422363
    9. '+l' → logprob: -9.977612495422363
    10. '=' → logprob: -10.102612495422363

Token 270: ' start' (ID: 1604)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.5827029347419739
    2. ' search' → logprob: -1.207702875137329
    3. ' start' → logprob: -2.582702875137329
    4. 'start' → logprob: -2.707702875137329
    5. ' check' → logprob: -8.83270263671875
    6. 'check' → logprob: -9.45770263671875
    7. '   ' → logprob: -10.58270263671875
    8. ')' → logprob: -10.70770263671875
    9. '```' → logprob: -10.70770263671875
    10. ' find' → logprob: -10.83270263671875

Token 271: ' searching' (ID: 17437)
  Prédit: ' searching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' searching' → logprob: -0.08422897011041641
    2. 'search' → logprob: -2.959228992462158
    3. ' search' → logprob: -4.209228992462158
    4. 'from' → logprob: -4.834228992462158
    5. ' from' → logprob: -5.584228992462158
    6. '+' → logprob: -6.584228992462158
    7. ')' → logprob: -7.709228992462158
    8. ' +' → logprob: -8.584228515625
    9. ' at' → logprob: -9.584228515625
    10. ' looking' → logprob: -9.709228515625

Token 272: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2320287823677063
    2. '):' → logprob: -2.7320287227630615
    3. 'from' → logprob: -3.1070287227630615
    4. '   ' → logprob: -3.3570287227630615
    5. '+' → logprob: -3.4820287227630615
    6. '):
' → logprob: -4.357028961181641
    7. ' +' → logprob: -5.857028961181641
    8. ' )' → logprob: -5.857028961181641
    9. '       ' → logprob: -6.107028961181641
    10. ' from' → logprob: -6.232028961181641

Token 273: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7783397436141968
    2. '):' → logprob: -0.9033397436141968
    3. '):
' → logprob: -2.4033398628234863
    4. ' )' → logprob: -4.153339862823486
    5. '   ' → logprob: -4.528339862823486
    6. ' ):' → logprob: -4.653339862823486
    7. ' ):
' → logprob: -5.778339862823486
    8. ')
' → logprob: -6.778339862823486
    9. '       ' → logprob: -7.153339862823486
    10. '
' → logprob: -7.278339862823486

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09275394678115845
    2. ')' → logprob: -3.5927538871765137
    3. '   ' → logprob: -3.5927538871765137
    4. ' 
' → logprob: -5.342753887176514
    5. '\n' → logprob: -5.342753887176514
    6. '    ' → logprob: -5.592753887176514
    7. '        
' → logprob: -5.967753887176514
    8. '    
' → logprob: -5.967753887176514
    9. ' )' → logprob: -6.092753887176514
    10. ' ' → logprob: -6.342753887176514

Token 275: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25047731399536133
    2. ')' → logprob: -2.3754773139953613
    3. '   ' → logprob: -2.7504773139953613
    4. ' if' → logprob: -4.375477313995361
    5. 'Returns' (adapté à ' Returns') → logprob: -4.625477313995361
    6. '           ' → logprob: -4.875477313995361
    7. 'if' → logprob: -5.000477313995361
    8. 'return' → logprob: -5.375477313995361
    9. ' for' → logprob: -6.000477313995361
    10. 'for' → logprob: -6.125477313995361

Token 276: ':
' (ID: 734)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.09847689419984818
    2. ' next' → logprob: -3.3484768867492676
    3. ' input' → logprob: -3.9734768867492676
    4. 's' → logprob: -4.098476886749268
    5. ')' → logprob: -4.973476886749268
    6. ' l' → logprob: -5.598476886749268
    7. 'next' → logprob: -6.098476886749268
    8. ' ' → logprob: -6.223476886749268
    9. '    ' → logprob: -6.473476886749268
    10. 'input' → logprob: -6.973476886749268

Token 277: '           ' (ID: 352)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.629746675491333
    2. ' l' → logprob: -1.379746675491333
    3. 's' → logprob: -2.129746675491333
    4. 'l' → logprob: -3.379746675491333
    5. ' n' → logprob: -3.754746675491333
    6. ' next' → logprob: -4.379746437072754
    7. '       ' → logprob: -5.004746437072754
    8. '0' → logprob: -5.129746437072754
    9. 'n' → logprob: -5.629746437072754
    10. 'next' → logprob: -6.254746437072754

Token 278: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.1663133203983307
    2. ' int' → logprob: -1.9163132905960083
    3. 's' → logprob: -6.166313171386719
    4. ' s' → logprob: -6.666313171386719
    5. 'l' → logprob: -7.041313171386719
    6. ' n' → logprob: -7.291313171386719
    7. 'n' → logprob: -7.416313171386719
    8. ' l' → logprob: -8.541313171386719
    9. ' next' → logprob: -8.541313171386719
    10. 'next' → logprob: -10.041313171386719

Token 279: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2089712619781494
    2. '):' → logprob: -1.3339712619781494
    3. ' s' → logprob: -1.9589712619781494
    4. ':' → logprob: -2.2089712619781494
    5. 's' → logprob: -2.9589712619781494
    6. ' next' → logprob: -3.0839712619781494
    7. ' -' → logprob: -3.8339712619781494
    8. 'next' → logprob: -3.8339712619781494
    9. '       ' → logprob: -4.33397102355957
    10. '   ' → logprob: -4.95897102355957

Token 280: ' The' (ID: 623)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6773456931114197
    2. ' l' → logprob: -1.5523457527160645
    3. ' s' → logprob: -2.0523457527160645
    4. 's' → logprob: -2.8023457527160645
    5. ' next' → logprob: -2.8023457527160645
    6. 'next' → logprob: -4.6773457527160645
    7. ' n' → logprob: -4.8023457527160645
    8. 'n' → logprob: -5.4273457527160645
    9. ' the' → logprob: -6.0523457527160645
    10. 'Next' → logprob: -6.1773457527160645

Token 281: ' index' (ID: 3472)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6403685212135315
    2. ' index' → logprob: -0.8903685212135315
    3. 'index' → logprob: -3.3903684616088867
    4. 'next' → logprob: -4.265368461608887
    5. ' first' → logprob: -4.390368461608887
    6. ' position' → logprob: -6.765368461608887
    7. 'first' → logprob: -8.015368461608887
    8. 's' → logprob: -8.765368461608887
    9. ' smallest' → logprob: -9.265368461608887
    10. ' s' → logprob: -9.515368461608887

Token 282: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3213071823120117
    2. ' +' → logprob: -1.4463071823120117
    3. ')' → logprob: -1.9463071823120117
    4. 's' → logprob: -2.1963071823120117
    5. '<|end|>' → logprob: -2.3213071823120117
    6. ' of' → logprob: -3.3213071823120117
    7. '(' → logprob: -3.8213071823120117
    8. '(s' → logprob: -3.8213071823120117
    9. ']' → logprob: -4.196307182312012
    10. 'of' → logprob: -4.821307182312012

Token 283: ' the' (ID: 290)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8223063349723816
    2. ' the' → logprob: -1.4473063945770264
    3. ' l' → logprob: -2.4473063945770264
    4. ' next' → logprob: -2.6973063945770264
    5. 'the' → logprob: -2.8223063945770264
    6. 'next' → logprob: -2.8223063945770264
    7. 's' → logprob: -3.1973063945770264
    8. ' s' → logprob: -4.572306156158447
    9. '0' → logprob: -7.572306156158447
    10. 'i' → logprob: -9.197306632995605

Token 284: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.489449679851532
    2. 'next' → logprob: -1.1144497394561768
    3. 'l' → logprob: -2.9894497394561768
    4. ' first' → logprob: -5.614449501037598
    5. 'first' → logprob: -5.989449501037598
    6. ' l' → logprob: -6.489449501037598
    7. 's' → logprob: -7.864449501037598
    8. '0' → logprob: -7.989449501037598
    9. ' s' → logprob: -9.864449501037598
    10. '_next' → logprob: -11.364449501037598

Token 285: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5260738134384155
    2. '0' → logprob: -1.5260738134384155
    3. '(s' → logprob: -2.151073932647705
    4. 's' → logprob: -4.026073932647705
    5. ' (' → logprob: -4.151073932647705
    6. '('' → logprob: -4.401073932647705
    7. '(
' → logprob: -4.776073932647705
    8. ' ' → logprob: -5.026073932647705
    9. ')' → logprob: -5.151073932647705
    10. 'space' → logprob: -5.776073932647705

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007648152764886618
    2. ''' → logprob: -5.00764799118042
    3. '')' → logprob: -7.63264799118042
    4. '1' → logprob: -9.132648468017578
    5. ''s' → logprob: -9.132648468017578
    6. ')' → logprob: -9.882648468017578
    7. 's' → logprob: -10.007648468017578
    8. '2' → logprob: -10.132648468017578
    9. ' ' → logprob: -10.132648468017578
    10. '"' → logprob: -11.507648468017578

Token 287: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04324033856391907
    2. '')' → logprob: -3.9182403087615967
    3. ']' → logprob: -4.543240547180176
    4. ' or' → logprob: -5.418240547180176
    5. ''' → logprob: -6.918240547180176
    6. ')+' → logprob: -7.043240547180176
    7. '   ' → logprob: -7.168240547180176
    8. '+' → logprob: -7.293240547180176
    9. ' )' → logprob: -7.418240547180176
    10. 'or' → logprob: -7.918240547180176

Token 288: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10872644186019897
    2. '<|end|>' → logprob: -2.8587265014648438
    3. ' if' → logprob: -3.8587265014648438
    4. 'or' → logprob: -4.358726501464844
    5. ')' → logprob: -5.483726501464844
    6. '<|end|>' → logprob: -6.233726501464844
    7. ' ' → logprob: -6.733726501464844
    8. ',' → logprob: -6.858726501464844
    9. 's' → logprob: -7.108726501464844
    10. 'if' → logprob: -7.858726501464844

Token 289: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05041315406560898
    2. '2' → logprob: -3.675413131713867
    3. ''s' → logprob: -4.675413131713867
    4. ' '' → logprob: -4.925413131713867
    5. ''l' → logprob: -5.550413131713867
    6. '"' → logprob: -7.050413131713867
    7. ' ' → logprob: -7.300413131713867
    8. 's' → logprob: -8.050413131713867
    9. '
' → logprob: -8.550413131713867
    10. '`' → logprob: -8.550413131713867

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006226678844541311
    2. ''' → logprob: -5.256226539611816
    3. '')' → logprob: -7.881226539611816
    4. ' ' → logprob: -8.381226539611816
    5. ''s' → logprob: -8.631226539611816
    6. 's' → logprob: -9.506226539611816
    7. '<|end|>' → logprob: -10.381226539611816
    8. '"' → logprob: -10.631226539611816
    9. ' '' → logprob: -11.256226539611816
    10. ''l' → logprob: -11.506226539611816

Token 291: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05023302137851715
    2. '')' → logprob: -3.0502331256866455
    3. ')'' → logprob: -7.175232887268066
    4. '',' → logprob: -8.300232887268066
    5. ''
' → logprob: -8.550232887268066
    6. ']'' → logprob: -9.050232887268066
    7. ')' → logprob: -9.175232887268066
    8. '')
' → logprob: -9.925232887268066
    9. '']' → logprob: -10.425232887268066
    10. ''or' → logprob: -10.925232887268066

Token 292: ' but' (ID: 889)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14338435232639313
    2. ' ' → logprob: -3.0183844566345215
    3. ' s' → logprob: -3.8933844566345215
    4. ')' → logprob: -3.8933844566345215
    5. 's' → logprob: -4.6433844566345215
    6. '    ' → logprob: -4.8933844566345215
    7. '   ' → logprob: -5.2683844566345215
    8. 'or' → logprob: -5.2683844566345215
    9. ' 
' → logprob: -5.3933844566345215
    10. '
' → logprob: -6.3933844566345215

Token 293: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9165970683097839
    2. ' not' → logprob: -1.5415971279144287
    3. '1' → logprob: -2.0415971279144287
    4. ' l' → logprob: -2.5415971279144287
    5. 'not' → logprob: -3.2915971279144287
    6. ' ' → logprob: -3.4165971279144287
    7. '+' → logprob: -4.04159688949585
    8. ' +' → logprob: -4.66659688949585
    9. 'l' → logprob: -4.79159688949585
    10. ' s' → logprob: -5.04159688949585

Token 294: ' exceeding' (ID: 85205)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5803889632225037
    2. ' less' → logprob: -2.3303890228271484
    3. 'l' → logprob: -2.5803890228271484
    4. '-' → logprob: -2.7053890228271484
    5. ' -' → logprob: -3.2053890228271484
    6. '-l' → logprob: -3.7053890228271484
    7. 'less' → logprob: -3.8303890228271484
    8. ' (' → logprob: -4.080389022827148
    9. ' None' → logprob: -4.455389022827148
    10. ' ' → logprob: -4.580389022827148

Token 295: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13236567378044128
    2. ' n' → logprob: -2.1323657035827637
    3. 'len' → logprob: -5.382365703582764
    4. ' len' → logprob: -7.632365703582764
    5. 'l' → logprob: -8.382365226745605
    6. '   ' → logprob: -9.757365226745605
    7. ' l' → logprob: -10.382365226745605
    8. ' ' → logprob: -12.757365226745605
    9. '(n' → logprob: -12.757365226745605
    10. ')' → logprob: -13.132365226745605

Token 296: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2951701283454895
    2. '+' → logprob: -1.7951700687408447
    3. ' +' → logprob: -2.7951700687408447
    4. '   ' → logprob: -4.170170307159424
    5. '
' → logprob: -5.545170307159424
    6. ')+' → logprob: -6.170170307159424
    7. ']' → logprob: -6.670170307159424
    8. '):' → logprob: -6.795170307159424
    9. ')
' → logprob: -7.170170307159424
    10. '+l' → logprob: -7.420170307159424

Token 297: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03753572329878807
    2. '):' → logprob: -4.662535667419434
    3. '+' → logprob: -5.037535667419434
    4. ').' → logprob: -5.287535667419434
    5. 'n' → logprob: -5.662535667419434
    6. ' )' → logprob: -5.912535667419434
    7. '   ' → logprob: -6.287535667419434
    8. '):
' → logprob: -6.537535667419434
    9. ')
' → logprob: -6.912535667419434
    10. 'l' → logprob: -7.287535667419434

Token 298: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0915162563323975
    2. 'n' → logprob: -1.3415162563323975
    3. 'len' → logprob: -1.8415162563323975
    4. ' n' → logprob: -2.0915162563323975
    5. ' length' → logprob: -2.8415162563323975
    6. ' len' → logprob: -4.091516494750977
    7. 'length' → logprob: -4.341516494750977
    8. ')n' → logprob: -4.466516494750977
    9. '+' → logprob: -5.591516494750977
    10. ' )' → logprob: -5.716516494750977

Token 299: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05688752606511116
    2. ' of' → logprob: -4.306887626647949
    3. '   ' → logprob: -4.306887626647949
    4. ' )' → logprob: -4.431887626647949
    5. ' +' → logprob: -5.306887626647949
    6. '+' → logprob: -5.431887626647949
    7. 'of' → logprob: -6.681887626647949
    8. 's' → logprob: -6.806887626647949
    9. ' -' → logprob: -7.181887626647949
    10. ' ' → logprob: -7.181887626647949

Token 300: ' the' (ID: 290)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025870230048894882
    2. ' s' → logprob: -3.7758703231811523
    3. 'the' → logprob: -6.525870323181152
    4. ' the' → logprob: -7.025870323181152
    5. ')' → logprob: -8.650870323181152
    6. 'input' → logprob: -9.650870323181152
    7. ' input' → logprob: -11.275870323181152
    8. ')s' → logprob: -11.900870323181152
    9. '```' → logprob: -12.900870323181152
    10. 'string' → logprob: -13.525870323181152

Token 301: ' original' (ID: 4756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14947699010372162
    2. 'string' → logprob: -3.024477005004883
    3. ' s' → logprob: -3.149477005004883
    4. ')' → logprob: -3.274477005004883
    5. ' string' → logprob: -5.399477005004883
    6. 'input' → logprob: -5.649477005004883
    7. ' input' → logprob: -7.024477005004883
    8. ')s' → logprob: -7.774477005004883
    9. ')
' → logprob: -10.274477005004883
    10. ' )' → logprob: -10.399477005004883

Token 302: ' string' (ID: 1621)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49318990111351013
    2. 's' → logprob: -1.7431899309158325
    3. 'string' → logprob: -1.8681899309158325
    4. ' string' → logprob: -3.118189811706543
    5. ' s' → logprob: -4.743189811706543
    6. '+' → logprob: -6.493189811706543
    7. ' )' → logprob: -6.743189811706543
    8. ')+' → logprob: -6.743189811706543
    9. ')s' → logprob: -7.493189811706543
    10. '   ' → logprob: -8.118189811706543

Token 303: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017125436570495367
    2. ').' → logprob: -7.376712322235107
    3. '   ' → logprob: -7.876712322235107
    4. ' )' → logprob: -8.126712799072266
    5. ')
' → logprob: -8.626712799072266
    6. '):' → logprob: -9.376712799072266
    7. ')+' → logprob: -9.376712799072266
    8. '+' → logprob: -11.126712799072266
    9. '),' → logprob: -11.876712799072266
    10. '):
' → logprob: -12.001712799072266

Token 304: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17764559388160706
    2. ')' → logprob: -2.552645683288574
    3. ':' → logprob: -3.302645683288574
    4. '
' → logprob: -4.177645683288574
    5. '):' → logprob: -4.927645683288574
    6. '       ' → logprob: -5.052645683288574
    7. '\n' → logprob: -5.427645683288574
    8. ' ' → logprob: -5.927645683288574
    9. '):
' → logprob: -6.177645683288574
    10. ' 
' → logprob: -6.677645683288574

Token 305: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08520057797431946
    2. '   ' → logprob: -2.585200548171997
    3. '        
' → logprob: -6.335200786590576
    4. '
' → logprob: -6.460200786590576
    5. '    
' → logprob: -6.710200786590576
    6. '    ' → logprob: -7.710200786590576
    7. '\n' → logprob: -8.085200309753418
    8. ')' → logprob: -8.335200309753418
    9. ':' → logprob: -9.335200309753418
    10. '   
' → logprob: -9.335200309753418

Token 306: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6097512245178223
    2. '       ' → logprob: -0.8597512245178223
    3. 'i' → logprob: -4.484751224517822
    4. 'l' → logprob: -5.109751224517822
    5. 'for' → logprob: -5.734751224517822
    6. 'if' → logprob: -5.859751224517822
    7. 'while' → logprob: -5.984751224517822
    8. ' for' → logprob: -6.234751224517822
    9. ' while' → logprob: -6.609751224517822
    10. ' i' → logprob: -6.859751224517822

Token 307: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9837015271186829
    2. 'for' → logprob: -0.9837015271186829
    3. 'while' → logprob: -2.733701467514038
    4. 'i' → logprob: -2.733701467514038
    5. 'l' → logprob: -3.108701467514038
    6. 'r' → logprob: -3.733701467514038
    7. '       ' → logprob: -3.858701467514038
    8. 'return' → logprob: -4.358701705932617
    9. 'if' (adapté à ' if') → logprob: -4.608701705932617
    10. 'try' → logprob: -6.108701705932617

Token 308: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5054029822349548
    2. ' l' → logprob: -1.1304030418395996
    3. 's' → logprob: -3.2554030418395996
    4. ' s' → logprob: -3.3804030418395996
    5. '   ' → logprob: -7.1304030418396
    6. ' ' → logprob: -9.130402565002441
    7. '	l' → logprob: -9.755402565002441
    8. '(l' → logprob: -10.130402565002441
    9. '(s' → logprob: -10.630402565002441
    10. '    ' → logprob: -10.692902565002441

Token 309: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5344898104667664
    2. ' +' → logprob: -1.2844898700714111
    3. ' ==' → logprob: -2.409489870071411
    4. '==' → logprob: -3.659489870071411
    5. ' <' → logprob: -4.159489631652832
    6. ' >=' → logprob: -5.909489631652832
    7. '>=' → logprob: -7.159489631652832
    8. '<' → logprob: -7.159489631652832
    9. '=' → logprob: -8.284489631652832
    10. '   ' → logprob: -8.409489631652832

Token 310: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012548385187983513
    2. ' n' → logprob: -4.387548446655273
    3. 'len' → logprob: -10.387548446655273
    4. '0' → logprob: -13.262548446655273
    5. ' len' → logprob: -13.512548446655273
    6. '	n' → logprob: -13.762548446655273
    7. ' ' → logprob: -14.262548446655273
    8. '   ' → logprob: -14.387548446655273
    9. 's' → logprob: -14.387548446655273
    10. '
' → logprob: -14.512548446655273

Token 311: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5043546557426453
    2. ':' → logprob: -1.00435471534729
    3. ' or' → logprob: -3.75435471534729
    4. ':return' → logprob: -5.254354476928711
    5. '       ' → logprob: -7.879354476928711
    6. '           ' → logprob: -8.254354476928711
    7. 'or' → logprob: -8.504354476928711
    8. '   ' → logprob: -8.754354476928711
    9. ' :
' → logprob: -10.004354476928711
    10. ' :' → logprob: -10.004354476928711

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0053138043731451035
    2. 'return' → logprob: -5.380313873291016
    3. ' return' → logprob: -7.755313873291016
    4. '	       ' → logprob: -9.130313873291016
    5. '       ' → logprob: -9.755313873291016
    6. '
' → logprob: -10.380313873291016
    7. '0' → logprob: -11.130313873291016
    8. ':return' → logprob: -12.005313873291016
    9. '		' → logprob: -12.255313873291016
    10. ':
' → logprob: -12.380313873291016

Token 313: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06139059737324715
    2. '           ' → logprob: -2.9363906383514404
    3. ' return' → logprob: -5.061390399932861
    4. '
' → logprob: -9.81139087677002
    5. 'n' → logprob: -10.56139087677002
    6. '       ' → logprob: -10.68639087677002
    7. ':return' → logprob: -11.31139087677002
    8. '{return' → logprob: -11.56139087677002
    9. '   ' → logprob: -11.68639087677002
    10. '               ' → logprob: -12.43639087677002

Token 314: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004203882534056902
    2. 'l' → logprob: -5.504203796386719
    3. '   ' → logprob: -10.504203796386719
    4. 'len' → logprob: -10.629203796386719
    5. ' n' → logprob: -10.754203796386719
    6. '       ' → logprob: -10.754203796386719
    7. 'float' → logprob: -12.004203796386719
    8. '2' → logprob: -12.004203796386719
    9. '           ' → logprob: -12.129203796386719
    10. '0' → logprob: -12.629203796386719

Token 315: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003181994194164872
    2. '
' → logprob: -5.8781819343566895
    3. '        
' → logprob: -8.878182411193848
    4. '0' → logprob: -9.753182411193848
    5. 'return' → logprob: -10.253182411193848
    6. '\n' → logprob: -10.503182411193848
    7. '1' → logprob: -11.378182411193848
    8. '2' → logprob: -11.628182411193848
    9. '   ' → logprob: -11.628182411193848
    10. '	' → logprob: -11.753182411193848

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027960877865552902
    2. '
' → logprob: -4.277960777282715
    3. '    
' → logprob: -5.402960777282715
    4. '        
' → logprob: -5.652960777282715
    5. '   ' → logprob: -6.027960777282715
    6. '\n' → logprob: -6.152960777282715
    7. '  
' → logprob: -8.027960777282715
    8. '	' → logprob: -8.402960777282715
    9. ' 
' → logprob: -9.402960777282715
    10. 'n' → logprob: -10.027960777282715

Token 317: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023122260347008705
    2. '   ' → logprob: -4.523122310638428
    3. 'if' → logprob: -5.148122310638428
    4. 'for' → logprob: -5.773122310638428
    5. 'while' → logprob: -6.648122310638428
    6. '
' → logprob: -7.773122310638428
    7. 'l' (adapté à ' l') → logprob: -8.14812183380127
    8. 'i' → logprob: -8.14812183380127
    9. ' for' → logprob: -9.02312183380127
    10. ' if' → logprob: -9.27312183380127

Token 318: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.48557841777801514
    2. ' +=' → logprob: -1.1105784177780151
    3. '=' → logprob: -3.2355785369873047
    4. ' =' → logprob: -4.235578536987305
    5. '+' → logprob: -6.860578536987305
    6. ' +' → logprob: -7.985578536987305
    7. '   ' → logprob: -10.110578536987305
    8. ' ' → logprob: -11.360578536987305
    9. ',' → logprob: -11.735578536987305
    10. ']+=' → logprob: -11.860578536987305

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.250295639038086
    4. '0' → logprob: -16.875295639038086
    5. '```' → logprob: -18.187795639038086
    6. '<|end|>' → logprob: -18.187795639038086
    7. '  ' → logprob: -18.312795639038086
    8. '2' → logprob: -19.000295639038086
    9. '`' → logprob: -19.125295639038086
    10. '１' → logprob: -19.375295639038086

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '0' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.875036239624023
    5. '-' → logprob: -18.500036239624023
    6. '2' → logprob: -18.750036239624023
    7. '  ' → logprob: -18.875036239624023
    8. '１' → logprob: -19.062536239624023
    9. '
' → logprob: -19.312536239624023
    10. '```' → logprob: -20.000036239624023

Token 321: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055515363812446594
    2. 'while' → logprob: -3.0555152893066406
    3. ' while' → logprob: -5.680515289306641
    4. '   ' → logprob: -5.680515289306641
    5. '	while' → logprob: -9.80551528930664
    6. '        
' → logprob: -11.68051528930664
    7. '<|end|>' → logprob: -12.30551528930664
    8. ' ' → logprob: -13.30551528930664
    9. '           ' → logprob: -13.43051528930664
    10. '    
' → logprob: -13.55551528930664

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16123858094215393
    2. 'while' → logprob: -2.036238670349121
    3. '   ' → logprob: -4.161238670349121
    4. ' while' → logprob: -5.911238670349121
    5. '	while' → logprob: -9.536238670349121
    6. 'if' → logprob: -12.161238670349121
    7. '        
' → logprob: -12.661238670349121
    8. ' ' → logprob: -12.661238670349121
    9. '    
' → logprob: -13.036238670349121
    10. '           ' → logprob: -13.411238670349121

Token 323: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0004574863996822387
    2. '       ' → logprob: -8.250457763671875
    3. ' while' → logprob: -9.125457763671875
    4. '   ' → logprob: -9.375457763671875
    5. '	while' → logprob: -13.000457763671875
    6. 'if' → logprob: -15.750457763671875
    7. 'for' → logprob: -15.750457763671875
    8. 'While' → logprob: -17.000457763671875
    9. '```' → logprob: -18.625457763671875
    10. ' ' → logprob: -19.125457763671875

Token 324: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.027002433314919472
    2. 's' → logprob: -3.6520023345947266
    3. ' l' → logprob: -7.402002334594727
    4. ' s' → logprob: -10.027002334594727
    5. '   ' → logprob: -10.277002334594727
    6. '	l' → logprob: -12.527002334594727
    7. '(l' → logprob: -13.152002334594727
    8. ' ' → logprob: -13.527002334594727
    9. 'True' → logprob: -13.652002334594727
    10. '(s' → logprob: -14.277002334594727

Token 325: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00018149138486478478
    2. 'l' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.125181198120117
    4. '[' → logprob: -14.625181198120117
    5. '	l' → logprob: -15.500181198120117
    6. '[s' → logprob: -16.250181198120117
    7. '       ' → logprob: -16.375181198120117
    8. ' l' → logprob: -16.375181198120117
    9. '```' → logprob: -16.625181198120117
    10. ' [' → logprob: -17.000181198120117

Token 326: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01940806582570076
    2. ']!=' → logprob: -4.394408226013184
    3. '!=' → logprob: -5.519408226013184
    4. ']!='' → logprob: -6.394408226013184
    5. ' !=' → logprob: -7.769408226013184
    6. '!='' → logprob: -8.519408226013184
    7. ' ]' → logprob: -8.644408226013184
    8. 'not' → logprob: -8.644408226013184
    9. ']==' → logprob: -9.394408226013184
    10. ' not' → logprob: -9.394408226013184

Token 327: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3806464374065399
    2. ' not' → logprob: -1.7556464672088623
    3. 'not' → logprob: -2.6306464672088623
    4. '==' → logprob: -3.3806464672088623
    5. ' !=' → logprob: -3.6306464672088623
    6. '!='' → logprob: -4.755646228790283
    7. '=='' → logprob: -6.880646228790283
    8. ' ==' → logprob: -7.380646228790283
    9. 'in' → logprob: -8.130646705627441
    10. ''' → logprob: -8.130646705627441

Token 328: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0040235454216599464
    2. '"' → logprob: -5.754023551940918
    3. '0' → logprob: -7.129023551940918
    4. ' '' → logprob: -10.504023551940918
    5. '`' → logprob: -11.879023551940918
    6. '   ' → logprob: -12.504023551940918
    7. '
' → logprob: -13.754023551940918
    8. ' ' → logprob: -14.004023551940918
    9. '('' → logprob: -14.504023551940918
    10. '‘' → logprob: -14.754023551940918

Token 329: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.897412822581828e-05
    2. ''' → logprob: -9.875068664550781
    3. '02' → logprob: -11.250068664550781
    4. '2' → logprob: -13.625068664550781
    5. '01' → logprob: -13.875068664550781
    6. ' ' → logprob: -14.625068664550781
    7. '012' → logprob: -14.625068664550781
    8. '1' → logprob: -14.875068664550781
    9. '"' → logprob: -15.125068664550781
    10. '00' → logprob: -16.12506866455078

Token 330: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029415445402264595
    2. 'and' → logprob: -3.6544153690338135
    3. ''' → logprob: -5.779415607452393
    4. ')' → logprob: -11.154415130615234
    5. '')' → logprob: -13.654415130615234
    6. '   ' → logprob: -13.904415130615234
    7. '`' → logprob: -14.029415130615234
    8. ' ' → logprob: -14.279415130615234
    9. ' '' → logprob: -14.779415130615234
    10. '"' → logprob: -14.904415130615234

Token 331: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3868733048439026
    2. ' and' → logprob: -1.1368732452392578
    3. '   ' → logprob: -13.761873245239258
    4. ' ' → logprob: -14.011873245239258
    5. '    ' → logprob: -15.886873245239258
    6. '  ' → logprob: -16.136873245239258
    7. '	and' → logprob: -16.511873245239258
    8. ')' → logprob: -17.011873245239258
    9. '```' → logprob: -18.136873245239258
    10. 'andr' → logprob: -18.261873245239258

Token 332: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004140141885727644
    2. ' s' → logprob: -5.504140377044678
    3. '   ' → logprob: -9.87913990020752
    4. ' ' → logprob: -13.00413990020752
    5. '	s' → logprob: -13.00413990020752
    6. '       ' → logprob: -13.12913990020752
    7. '  ' → logprob: -14.00413990020752
    8. '    ' → logprob: -14.12913990020752
    9. 'l' → logprob: -14.50413990020752
    10. '           ' → logprob: -14.62913990020752

Token 333: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.1789693385362625
    2. 'l' → logprob: -2.803969383239746
    3. 's' → logprob: -3.303969383239746
    4. ' !=' → logprob: -3.553969383239746
    5. '!=' → logprob: -4.053969383239746
    6. ' s' → logprob: -4.678969383239746
    7. '[' → logprob: -5.178969383239746
    8. '[s' → logprob: -5.928969383239746
    9. ' l' → logprob: -6.928969383239746
    10. '==' → logprob: -7.553969383239746

Token 334: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.580610454082489
    2. '!=' → logprob: -1.3306105136871338
    3. ']' → logprob: -1.9556105136871338
    4. ']!=' → logprob: -3.955610513687134
    5. '!='' → logprob: -4.830610275268555
    6. ' ]' → logprob: -5.205610275268555
    7. ']!='' → logprob: -7.205610275268555
    8. ' ' → logprob: -7.955610275268555
    9. '']' → logprob: -7.955610275268555
    10. '==' → logprob: -8.455610275268555

Token 335: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.22781334817409515
    2. ' !=' → logprob: -2.227813243865967
    3. '==' → logprob: -2.477813243865967
    4. ' ==' → logprob: -5.102813243865967
    5. '!='' → logprob: -5.227813243865967
    6. '=='' → logprob: -7.977813243865967
    7. ' ' → logprob: -9.102813720703125
    8. '=' → logprob: -9.977813720703125
    9. '!' → logprob: -10.852813720703125
    10. ''' → logprob: -10.977813720703125

Token 336: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013860702747479081
    2. '0' → logprob: -6.6263861656188965
    3. ' '' → logprob: -10.251385688781738
    4. '"' → logprob: -10.876385688781738
    5. '`' → logprob: -12.751385688781738
    6. '('' → logprob: -14.376385688781738
    7. ' ' → logprob: -14.751385688781738
    8. ''s' → logprob: -14.876385688781738
    9. '‘' → logprob: -15.501385688781738
    10. ''o' → logprob: -15.626385688781738

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013595925702247769
    2. ''' → logprob: -9.000136375427246
    3. '01' → logprob: -13.625136375427246
    4. '1' → logprob: -13.750136375427246
    5. '041' → logprob: -14.000136375427246
    6. '048' → logprob: -14.125136375427246
    7. '014' → logprob: -14.250136375427246
    8. '012' → logprob: -14.250136375427246
    9. ' ' → logprob: -14.375136375427246
    10. '047' → logprob: -14.500136375427246

Token 338: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6276697516441345
    2. '':' → logprob: -1.1276698112487793
    3. ''' → logprob: -2.6276698112487793
    4. '':
' → logprob: -3.0026698112487793
    5. ':' → logprob: -4.627669811248779
    6. 'and' → logprob: -4.877669811248779
    7. ':
' → logprob: -6.002669811248779
    8. '):
' → logprob: -9.002669334411621
    9. '):' → logprob: -9.127669334411621
    10. ')' → logprob: -9.877669334411621

Token 339: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.30356281995773315
    2. '           ' → logprob: -1.428562879562378
    3. '       ' → logprob: -4.553562641143799
    4. 'l' → logprob: -4.553562641143799
    5. '   ' → logprob: -7.803562641143799
    6. '1' → logprob: -8.803563117980957
    7. '```' → logprob: -8.803563117980957
    8. '
' → logprob: -9.678563117980957
    9. '               ' → logprob: -9.803563117980957
    10. ',l' → logprob: -10.053563117980957

Token 340: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.5765801668167114
    2. ' l' → logprob: -0.8265801668167114
    3. '           ' → logprob: -7.451580047607422
    4. '	l' → logprob: -10.326580047607422
    5. '   ' → logprob: -11.576580047607422
    6. '       ' → logprob: -11.826580047607422
    7. '
' → logprob: -12.701580047607422
    8. '               ' → logprob: -13.201580047607422
    9. '```' → logprob: -13.701580047607422
    10. '+l' → logprob: -13.826580047607422

Token 341: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04865493252873421
    2. ' +=' → logprob: -3.0486550331115723
    3. '+' → logprob: -9.798654556274414
    4. ']+=' → logprob: -11.923654556274414
    5. '=' → logprob: -12.798654556274414
    6. '<|end|>' → logprob: -13.548654556274414
    7. '+='' → logprob: -14.173654556274414
    8. ' +' → logprob: -15.798654556274414
    9. '+="' → logprob: -15.923654556274414
    10. '    ' → logprob: -16.798654556274414

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.500019073486328
    4. '  ' → logprob: -19.000019073486328
    5. '```' → logprob: -19.875019073486328
    6. '    ' → logprob: -20.500019073486328
    7. '       ' → logprob: -20.562519073486328
    8. '0' → logprob: -21.000019073486328
    9. '<|end|>' → logprob: -21.062519073486328
    10. '۱' → logprob: -21.375019073486328

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.5000057220459
    4. '```' → logprob: -19.1250057220459
    5. '<|end|>' → logprob: -20.3750057220459
    6. '  ' → logprob: -20.6875057220459
    7. '0' → logprob: -20.7500057220459
    8. '
' → logprob: -20.9375057220459
    9. '１' → logprob: -21.1250057220459
    10. '۱' → logprob: -21.1250057220459

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012937613762915134
    2. '<|end|>' → logprob: -5.012937545776367
    3. 'return' → logprob: -6.387937545776367
    4. '   ' → logprob: -6.387937545776367
    5. '
' → logprob: -6.512937545776367
    6. ' return' → logprob: -7.262937545776367
    7. '<|end|>' → logprob: -9.012937545776367
    8. '           ' → logprob: -9.637937545776367
    9. '\n' → logprob: -9.762937545776367
    10. '        
' → logprob: -9.762937545776367

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006326167494989932
    2. '   ' → logprob: -7.6256327629089355
    3. 'return' → logprob: -9.125632286071777
    4. ' return' → logprob: -10.500632286071777
    5. '           ' → logprob: -12.500632286071777
    6. '	return' → logprob: -13.750632286071777
    7. '```' → logprob: -14.000632286071777
    8. '<|end|>' → logprob: -14.125632286071777
    9. '	' → logprob: -14.250632286071777
    10. ',' → logprob: -14.875632286071777

Token 346: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2136448472738266
    2. 'return' (adapté à ' return') → logprob: -1.7136448621749878
    3. '   ' → logprob: -4.463644981384277
    4. ' return' → logprob: -7.463644981384277
    5. '	return' → logprob: -9.963644981384277
    6. '           ' → logprob: -11.588644981384277
    7. ' ' → logprob: -13.838644981384277
    8. '```' → logprob: -13.838644981384277
    9. '	' → logprob: -14.088644981384277
    10. 'l' → logprob: -14.088644981384277

Token 347: ' min' (ID: 1349)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.23324288427829742
    2. 'min' → logprob: -1.6082428693771362
    3. ' min' → logprob: -5.108242988586426
    4. ' l' → logprob: -6.358242988586426
    5. 'max' → logprob: -11.983242988586426
    6. '	l' → logprob: -12.358242988586426
    7. '(min' → logprob: -12.858242988586426
    8. '	min' → logprob: -13.358242988586426
    9. '   ' → logprob: -13.670742988586426
    10. '[min' → logprob: -14.358242988586426

Token 348: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.8219583075260743e-05
    2. '(n' → logprob: -10.250038146972656
    3. '(' → logprob: -12.875038146972656
    4. 'l' → logprob: -15.625038146972656
    5. '(len' → logprob: -17.000038146972656
    6. '	l' → logprob: -18.625038146972656
    7. '(s' → logprob: -18.875038146972656
    8. '(
' → logprob: -19.000038146972656
    9. '(length' → logprob: -19.625038146972656
    10. '((' → logprob: -19.625038146972656

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008442913531325758
    2. ',n' → logprob: -7.125844478607178
    3. ' ,' → logprob: -10.25084400177002
    4. ',
' → logprob: -12.62584400177002
    5. 'n' → logprob: -13.75084400177002
    6. '(n' → logprob: -16.875844955444336
    7. '   ' → logprob: -17.625844955444336
    8. ',len' → logprob: -18.250844955444336
    9. ')' → logprob: -19.250844955444336
    10. ' n' → logprob: -19.375844955444336

Token 350: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.493430894101039e-05
    2. ' n' → logprob: -9.500075340270996
    3. '	n' → logprob: -17.75007438659668
    4. '   ' → logprob: -18.00007438659668
    5. ')n' → logprob: -18.87507438659668
    6. 'len' → logprob: -20.00007438659668
    7. ')' → logprob: -20.87507438659668
    8. '```' → logprob: -21.37507438659668
    9. '[n' → logprob: -21.50007438659668
    10. ' ' → logprob: -21.75007438659668

Token 351: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.44443862256594e-05
    2. ')
' → logprob: -10.000064849853516
    3. ' )' → logprob: -11.375064849853516
    4. '<|end|>' → logprob: -12.500064849853516
    5. '   ' → logprob: -13.000064849853516
    6. ')

' → logprob: -14.750064849853516
    7. ')return' → logprob: -15.125064849853516
    8. ')}' → logprob: -15.500064849853516
    9. '```' → logprob: -16.250064849853516
    10. '),' → logprob: -16.250064849853516

Token 352: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04624541848897934
    2. 'def' (adapté à ' def') → logprob: -3.7962453365325928
    3. '    
' → logprob: -5.046245574951172
    4. 'for' → logprob: -5.421245574951172
    5. ')' → logprob: -5.546245574951172
    6. '#' → logprob: -6.171245574951172
    7. '
' → logprob: -6.921245574951172
    8. '    ' → logprob: -7.296245574951172
    9. 'l' → logprob: -7.296245574951172
    10. 'while' → logprob: -8.046245574951172

Token 354: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.13366328179836273
    2. ' next' → logprob: -2.8836631774902344
    3. 'prev' → logprob: -3.2586631774902344
    4. 'main' → logprob: -4.883663177490234
    5. 'previous' → logprob: -6.008663177490234
    6. ' prev' → logprob: -6.446163177490234
    7. 'get' → logprob: -6.633663177490234
    8. 'max' → logprob: -6.758663177490234
    9. 'solve' → logprob: -6.758663177490234
    10. ' main' → logprob: -7.258663177490234

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00817930232733488
    2. '0' → logprob: -5.383179187774658
    3. '_' → logprob: -5.883179187774658
    4. '(' → logprob: -7.883179187774658
    5. 'block' → logprob: -9.758179664611816
    6. '_block' → logprob: -9.883179664611816
    7. '_one' → logprob: -10.008179664611816
    8. '('' → logprob: -10.633179664611816
    9. 'one' → logprob: -11.133179664611816
    10. ' ' → logprob: -11.133179664611816

Token 356: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.038129959255456924
    2. '(' → logprob: -3.288130044937134
    3. '(n' → logprob: -11.038129806518555
    4. '(
' → logprob: -11.038129806518555
    5. ' (' → logprob: -11.163129806518555
    6. '(s' → logprob: -11.163129806518555
    7. '(L' → logprob: -12.288129806518555
    8. '(t' → logprob: -12.538129806518555
    9. '(i' → logprob: -12.788129806518555
    10. '(index' → logprob: -13.663129806518555

Token 357: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48801323771476746
    2. '(l' → logprob: -1.4880132675170898
    3. '):' → logprob: -2.23801326751709
    4. ',' → logprob: -3.73801326751709
    5. '):
' → logprob: -4.73801326751709
    6. ')' → logprob: -5.11301326751709
    7. ' (' → logprob: -5.86301326751709
    8. ' :' → logprob: -5.98801326751709
    9. '   ' → logprob: -6.23801326751709
    10. '+' → logprob: -6.23801326751709

Token 358: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005033440887928009
    2. 'l' → logprob: -5.505033493041992
    3. ' int' → logprob: -7.005033493041992
    4. ' l' → logprob: -10.255033493041992
    5. ')' → logprob: -11.880033493041992
    6. '(int' → logprob: -12.505033493041992
    7. '   ' → logprob: -14.630033493041992
    8. '[int' → logprob: -15.005033493041992
    9. ':int' → logprob: -15.505033493041992
    10. '1' → logprob: -15.755033493041992

Token 359: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040648187859915197
    2. '):' → logprob: -8.250406265258789
    3. ' )' → logprob: -9.250406265258789
    4. '):
' → logprob: -10.250406265258789
    5. '   ' → logprob: -12.000406265258789
    6. '(l' → logprob: -12.750406265258789
    7. ':' → logprob: -13.375406265258789
    8. 'l' → logprob: -14.125406265258789
    9. ')
' → logprob: -14.375406265258789
    10. '):

' → logprob: -15.000406265258789

Token 360: ' ->' (ID: 2747)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0006253490573726594
    2. '(' → logprob: -7.625625133514404
    3. ' (' → logprob: -9.000625610351562
    4. '   ' → logprob: -11.750625610351562
    5. ':' → logprob: -12.375625610351562
    6. '(
' → logprob: -14.250625610351562
    7. ')' → logprob: -15.250625610351562
    8. '(s' → logprob: -15.625625610351562
    9. ',' → logprob: -15.625625610351562
    10. ' ' → logprob: -15.750625610351562

Token 361: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004324573092162609
    2. ' int' → logprob: -7.75043249130249
    3. '(int' → logprob: -13.750432014465332
    4. '[int' → logprob: -14.625432014465332
    5. '   ' → logprob: -16.12543296813965
    6. 'l' → logprob: -16.75043296813965
    7. '<int' → logprob: -19.00043296813965
    8. ' ' → logprob: -19.12543296813965
    9. '=int' → logprob: -19.37543296813965
    10. '	int' → logprob: -19.50043296813965

Token 362: ':
' (ID: 734)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.020618733018636703
    2. '(' → logprob: -4.520618915557861
    3. '       ' → logprob: -5.645618915557861
    4. '   ' → logprob: -5.770618915557861
    5. ':' → logprob: -6.145618915557861
    6. '(s' → logprob: -8.020618438720703
    7. '(
' → logprob: -9.395618438720703
    8. '(n' → logprob: -9.645618438720703
    9. ':
' → logprob: -9.895618438720703
    10. ' (' → logprob: -10.020618438720703

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36460432410240173
    2. '(' → logprob: -1.6146043539047241
    3. '(l' → logprob: -2.7396042346954346
    4. ':' → logprob: -3.6146042346954346
    5. '   ' → logprob: -4.864604473114014
    6. '(n' → logprob: -6.739604473114014
    7. '(
' → logprob: -6.989604473114014
    8. '<|end|>' → logprob: -6.989604473114014
    9. '[' → logprob: -7.489604473114014
    10. ':
' → logprob: -7.739604473114014

Token 364: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0147384162992239
    2. '   ' → logprob: -4.2647385597229
    3. 'if' → logprob: -9.014738082885742
    4. '
' → logprob: -9.014738082885742
    5. '    ' → logprob: -9.139738082885742
    6. ' if' → logprob: -9.639738082885742
    7. '"""
' (adapté à ' """
') → logprob: -10.139738082885742
    8. '```' → logprob: -10.889738082885742
    9. '      ' → logprob: -11.139738082885742
    10. '        ' → logprob: -11.264738082885742

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00391727639362216
    2. '   ' → logprob: -5.753917217254639
    3. 'int' → logprob: -7.253917217254639
    4. 'if' → logprob: -11.253917694091797
    5. 'def' → logprob: -12.628917694091797
    6. '"""
' → logprob: -12.878917694091797
    7. '     ' → logprob: -13.128917694091797
    8. ' int' → logprob: -13.253917694091797
    9. '      ' → logprob: -13.378917694091797
    10. ' ' → logprob: -13.503917694091797

Token 366: ' Finds' (ID: 113426)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36515703797340393
    2. 'if' → logprob: -1.4901570081710815
    3. '   ' → logprob: -2.990157127380371
    4. ' if' → logprob: -3.865157127380371
    5. 'If' → logprob: -5.740157127380371
    6. 'l' → logprob: -6.490157127380371
    7. 'Find' → logprob: -6.740157127380371
    8. 'def' → logprob: -6.990157127380371
    9. ' finds' → logprob: -7.490157127380371
    10. ' l' → logprob: -7.865157127380371

Token 367: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6941287517547607
    2. 'the' → logprob: -0.6941287517547607
    3. '(l' → logprob: -7.06912899017334
    4. ' l' → logprob: -9.81912899017334
    5. 'l' → logprob: -10.19412899017334
    6. 'index' → logprob: -10.56912899017334
    7. '(' → logprob: -12.56912899017334
    8. 'next' → logprob: -13.31912899017334
    9. 'The' → logprob: -13.31912899017334
    10. ' index' → logprob: -13.44412899017334

Token 368: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.004153076093643904
    2. ' index' → logprob: -6.004153251647949
    3. 'l' → logprob: -6.629153251647949
    4. 'next' → logprob: -8.00415325164795
    5. ' next' → logprob: -11.62915325164795
    6. ' l' → logprob: -13.00415325164795
    7. 'first' → logprob: -13.50415325164795
    8. 'idx' → logprob: -13.50415325164795
    9. '   ' → logprob: -13.62915325164795
    10. '#index' → logprob: -13.75415325164795

Token 369: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.3787591755390167
    2. ' of' → logprob: -1.5037591457366943
    3. '       ' → logprob: -2.7537591457366943
    4. '<|end|>' → logprob: -3.7537591457366943
    5. '<|end|>' → logprob: -6.503759384155273
    6. '+' → logprob: -6.628759384155273
    7. '   ' → logprob: -7.628759384155273
    8. ')' → logprob: -7.753759384155273
    9. 'next' → logprob: -8.128759384155273
    10. '        ' → logprob: -8.503759384155273

Token 370: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.44078531861305237
    2. ' the' → logprob: -1.19078528881073
    3. 'l' → logprob: -3.0657854080200195
    4. 'next' → logprob: -5.8157854080200195
    5. ' l' → logprob: -6.4407854080200195
    6. ' next' → logprob: -6.6907854080200195
    7. 's' → logprob: -10.31578540802002
    8. '(l' → logprob: -11.56578540802002
    9. 'The' → logprob: -13.69078540802002
    10. '
' → logprob: -13.69078540802002

Token 371: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07916230708360672
    2. ' next' → logprob: -2.829162359237671
    3. 'l' → logprob: -4.079162120819092
    4. ' l' → logprob: -9.95416259765625
    5. '[next' → logprob: -11.20416259765625
    6. '	next' → logprob: -11.57916259765625
    7. '(next' → logprob: -11.82916259765625
    8. 'first' → logprob: -11.82916259765625
    9. '[l' → logprob: -12.07916259765625
    10. '1' → logprob: -12.20416259765625

Token 372: ' occurrence' (ID: 55807)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8873552680015564
    2. ''' → logprob: -1.3873553276062012
    3. '(l' → logprob: -1.5123553276062012
    4. '1' → logprob: -2.387355327606201
    5. '(' → logprob: -4.262355327606201
    6. '('' → logprob: -5.762355327606201
    7. ' ' → logprob: -6.012355327606201
    8. ' (' → logprob: -6.637355327606201
    9. ''l' → logprob: -7.012355327606201
    10. ' '' → logprob: -7.012355327606201

Token 373: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.054393891245126724
    2. 'of' → logprob: -3.179394006729126
    3. '       ' → logprob: -4.554393768310547
    4. '(' → logprob: -8.429393768310547
    5. '        ' → logprob: -8.554393768310547
    6. '   ' → logprob: -9.304393768310547
    7. 's' → logprob: -9.804393768310547
    8. '<|end|>' → logprob: -10.179393768310547
    9. ' ' → logprob: -10.429393768310547
    10. '	of' → logprob: -10.679393768310547

Token 374: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00047106825513765216
    2. ' '' → logprob: -7.875471115112305
    3. '`' → logprob: -10.625471115112305
    4. '1' → logprob: -10.750471115112305
    5. '"' → logprob: -10.750471115112305
    6. '0' → logprob: -11.500471115112305
    7. ' ' → logprob: -12.500471115112305
    8. '('' → logprob: -13.250471115112305
    9. ''l' → logprob: -13.500471115112305
    10. '
' → logprob: -13.750471115112305

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7116732597351074
    2. '0' → logprob: -0.8366732597351074
    3. ''' → logprob: -2.5866732597351074
    4. '2' → logprob: -7.711673259735107
    5. '"' → logprob: -9.086673736572266
    6. '`' → logprob: -9.836673736572266
    7. ' ' → logprob: -10.336673736572266
    8. '
' → logprob: -11.024173736572266
    9. '```' → logprob: -11.336673736572266
    10. ' '' → logprob: -11.586673736572266

Token 376: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' or' (ID: 503)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.7744839191436768
    2. '(' → logprob: -0.8994839191436768
    3. ' or' → logprob: -2.5244839191436768
    4. '<|end|>' → logprob: -3.3994839191436768
    5. ')' → logprob: -5.024483680725098
    6. 'or' → logprob: -5.649483680725098
    7. '   ' → logprob: -5.774483680725098
    8. ' (' → logprob: -6.399483680725098
    9. '(
' → logprob: -6.524483680725098
    10. '       ' → logprob: -6.899483680725098

Token 378: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03843916207551956
    2. ' '' → logprob: -3.6634392738342285
    3. '2' → logprob: -5.5384392738342285
    4. ''l' → logprob: -5.5384392738342285
    5. '('' → logprob: -6.7884392738342285
    6. ' l' → logprob: -6.9134392738342285
    7. '(l' → logprob: -7.2884392738342285
    8. ''s' → logprob: -7.7884392738342285
    9. '`' → logprob: -8.78843879699707
    10. '0' → logprob: -9.28843879699707

Token 379: ' string' (ID: 1621)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08746550977230072
    2. '2' → logprob: -2.837465524673462
    3. '`' → logprob: -4.337465286254883
    4. '0' → logprob: -5.587465286254883
    5. 's' → logprob: -6.337465286254883
    6. 'l' → logprob: -6.462465286254883
    7. ''s' → logprob: -6.962465286254883
    8. ' l' → logprob: -6.962465286254883
    9. 'n' → logprob: -7.212465286254883
    10. ''l' → logprob: -7.212465286254883

Token 380: '-ending' (ID: 128767)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.01628737337887287
    2. '2' → logprob: -5.266287326812744
    3. '[' → logprob: -5.391287326812744
    4. '   ' → logprob: -6.266287326812744
    5. '`' → logprob: -6.641287326812744
    6. '       ' → logprob: -7.016287326812744
    7. ''' → logprob: -7.516287326812744
    8. '(l' → logprob: -8.516287803649902
    9. '```' → logprob: -8.516287803649902
    10. ''l' → logprob: -8.891287803649902

Token 381: ' sentinel' (ID: 180334)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7653959393501282
    2. ' ' → logprob: -2.1403958797454834
    3. '2' → logprob: -2.2653958797454834
    4. '(l' → logprob: -2.5153958797454834
    5. '_' → logprob: -2.6403958797454834
    6. '<|end|>' → logprob: -3.1403958797454834
    7. '[l' → logprob: -3.5153958797454834
    8. ''' → logprob: -3.5153958797454834
    9. 'l' → logprob: -4.5153961181640625
    10. ')' → logprob: -5.0153961181640625

Token 382: ' '' (ID: 461)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.19169491529464722
    2. '(' → logprob: -2.691694974899292
    3. ' (' → logprob: -2.816694974899292
    4. ''' → logprob: -3.191694974899292
    5. '`' → logprob: -6.566694736480713
    6. ' l' → logprob: -6.566694736480713
    7. '('' → logprob: -7.066694736480713
    8. ' ' → logprob: -7.566694736480713
    9. '   ' → logprob: -7.941694736480713
    10. '(
' → logprob: -8.066695213317871

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19428038597106934
    2. ''' → logprob: -1.8192803859710693
    3. ' '' → logprob: -4.819280624389648
    4. '"' → logprob: -6.194280624389648
    5. ' ' → logprob: -6.194280624389648
    6. 'n' → logprob: -7.569280624389648
    7. 'l' → logprob: -7.944280624389648
    8. '0' → logprob: -8.069280624389648
    9. ''l' → logprob: -8.444280624389648
    10. '1' → logprob: -8.569280624389648

Token 384: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1616692543029785
    2. '',' → logprob: -1.1616692543029785
    3. ''' → logprob: -1.5366692543029785
    4. '(l' → logprob: -3.0366692543029785
    5. ')' → logprob: -3.7866692543029785
    6. '[l' → logprob: -3.9116692543029785
    7. '`' → logprob: -4.0366692543029785
    8. '```' → logprob: -4.4116692543029785
    9. '       ' → logprob: -4.5366692543029785
    10. ',l' → logprob: -5.0366692543029785

Token 385: ' starting' (ID: 8601)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4917176067829132
    2. '<|end|>' → logprob: -1.8667175769805908
    3. ' starting' → logprob: -1.9917175769805908
    4. '.' → logprob: -4.11671781539917
    5. 'starting' → logprob: -4.11671781539917
    6. ')' → logprob: -4.36671781539917
    7. ' or' → logprob: -4.49171781539917
    8. '   ' → logprob: -4.99171781539917
    9. ' l' → logprob: -5.11671781539917
    10. '<|end|>' → logprob: -5.36671781539917

Token 386: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20153865218162537
    2. ' from' → logprob: -1.7015386819839478
    3. '	from' → logprob: -10.201539039611816
    4. '<|end|>' → logprob: -10.201539039611816
    5. ' ' → logprob: -10.951539039611816
    6. '_from' → logprob: -11.826539039611816
    7. 'From' → logprob: -12.076539039611816
    8. ' at' → logprob: -12.451539039611816
    9. '    ' → logprob: -12.576539039611816
    10. 'at' → logprob: -13.076539039611816

Token 387: ' index' (ID: 3472)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5235555171966553
    2. ' l' → logprob: -0.8985555171966553
    3. ' index' → logprob: -8.523555755615234
    4. 'index' → logprob: -8.648555755615234
    5. '(l' → logprob: -11.273555755615234
    6. '	l' → logprob: -11.398555755615234
    7. '```' → logprob: -12.523555755615234
    8. ' ' → logprob: -12.648555755615234
    9. '
' → logprob: -12.773555755615234
    10. '   ' → logprob: -12.898555755615234

Token 388: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03934065252542496
    2. 'l' → logprob: -3.2893407344818115
    3. '(l' → logprob: -7.039340496063232
    4. ' (' → logprob: -8.28934097290039
    5. '+l' → logprob: -10.53934097290039
    6. '[l' → logprob: -10.78934097290039
    7. '	l' → logprob: -11.28934097290039
    8. ' ' → logprob: -11.41434097290039
    9. '+' → logprob: -11.66434097290039
    10. ',l' → logprob: -11.78934097290039

Token 389: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760462880134583
    2. ' +' → logprob: -0.8260462880134583
    3. '+l' → logprob: -9.826045989990234
    4. '   ' → logprob: -10.576045989990234
    5. '<|end|>' → logprob: -11.826045989990234
    6. '+
' → logprob: -12.326045989990234
    7. ' +
' → logprob: -12.701045989990234
    8. '       ' → logprob: -12.951045989990234
    9. '()+' → logprob: -13.326045989990234
    10. '```' → logprob: -13.576045989990234

Token 390: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011053244583308697
    2. ' ' → logprob: -4.511053085327148
    3. '```' → logprob: -12.261053085327148
    4. '   ' → logprob: -15.761053085327148
    5. '0' → logprob: -16.44855308532715
    6. '`' → logprob: -16.51105308532715
    7. '+' → logprob: -16.51105308532715
    8. '<|end|>' → logprob: -16.57355308532715
    9. '...' → logprob: -16.88605308532715
    10. ' ' → logprob: -17.07355308532715

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.875008583068848
    3. '```' → logprob: -13.375008583068848
    4. '0' → logprob: -15.375008583068848
    5. '+' → logprob: -16.875009536743164
    6. '`' → logprob: -17.875009536743164
    7. '-' → logprob: -18.000009536743164
    8. '   ' → logprob: -18.250009536743164
    9. '<|end|>' → logprob: -19.062509536743164
    10. '2' → logprob: -19.062509536743164

Token 392: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 393: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.015665054321289
    2. '       ' → logprob: -1.015665054321289
    3. '<|end|>' → logprob: -2.015665054321289
    4. '(l' → logprob: -2.640665054321289
    5. ')' → logprob: -3.640665054321289
    6. '```' → logprob: -3.890665054321289
    7. '(' → logprob: -4.890665054321289
    8. '
' → logprob: -5.515665054321289
    9. 'def' → logprob: -6.390665054321289
    10. '(
' → logprob: -6.515665054321289

Token 394: ' Args' (ID: 39185)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008868291974067688
    2. ':
' → logprob: -5.133868217468262
    3. '):' → logprob: -6.133868217468262
    4. '):
' → logprob: -7.508868217468262
    5. '   ' → logprob: -9.133868217468262
    6. ' :' → logprob: -10.008868217468262
    7. ':l' → logprob: -10.508868217468262
    8. ')' → logprob: -11.633868217468262
    9. '       ' → logprob: -11.758868217468262
    10. ',' → logprob: -12.008868217468262

Token 396: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10221942514181137
    2. ' l' → logprob: -2.477219343185425
    3. ' ' → logprob: -5.727219581604004
    4. 'l' → logprob: -5.977219581604004
    5. '	l' → logprob: -6.352219581604004
    6. '    ' → logprob: -6.477219581604004
    7. '           ' → logprob: -6.977219581604004
    8. ' ' → logprob: -7.102219581604004
    9. '       ' → logprob: -7.227219581604004
    10. '     ' → logprob: -7.727219581604004

Token 397: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.061968810856342316
    2. ' l' → logprob: -2.8119688034057617
    3. '(l' → logprob: -13.811968803405762
    4. '	l' → logprob: -16.811969757080078
    5. '   ' → logprob: -16.936969757080078
    6. '           ' → logprob: -18.061969757080078
    7. '       ' → logprob: -18.311969757080078
    8. '_l' → logprob: -18.561969757080078
    9. 'int' → logprob: -19.311969757080078
    10. 'n' → logprob: -19.436969757080078

Token 398: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2555994391441345
    2. ')' → logprob: -1.7555994987487793
    3. '<|end|>' → logprob: -3.6305994987487793
    4. '):' → logprob: -4.755599498748779
    5. '+' → logprob: -5.380599498748779
    6. ' +=' → logprob: -5.505599498748779
    7. '):
' → logprob: -5.880599498748779
    8. '<|end|>' → logprob: -6.755599498748779
    9. ' =' → logprob: -7.130599498748779
    10. ':int' → logprob: -7.380599498748779

Token 399: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.988221684878226e-06
    2. ' int' → logprob: -12.000006675720215
    3. ')' → logprob: -14.375006675720215
    4. '[int' → logprob: -16.50000762939453
    5. ':int' → logprob: -16.87500762939453
    6. '(int' → logprob: -17.25000762939453
    7. '
' → logprob: -17.50000762939453
    8. '   ' → logprob: -17.75000762939453
    9. '=int' → logprob: -18.87500762939453
    10. '```' → logprob: -19.00000762939453

Token 400: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.542229413986206
    2. '):' → logprob: -0.917229413986206
    3. '):
' → logprob: -4.792229652404785
    4. '+' → logprob: -5.667229652404785
    5. ')+' → logprob: -5.667229652404785
    6. ':' → logprob: -6.417229652404785
    7. '   ' → logprob: -6.667229652404785
    8. '+=' → logprob: -7.917229652404785
    9. '       ' → logprob: -9.292229652404785
    10. ' +=' → logprob: -9.667229652404785

Token 401: ' Index' (ID: 14580)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04882841929793358
    2. 'int' → logprob: -3.923828363418579
    3. ' int' → logprob: -4.173828601837158
    4. '<|end|>' → logprob: -4.548828601837158
    5. 'l' → logprob: -6.548828601837158
    6. ' ' → logprob: -8.798828125
    7. '<|end|>' → logprob: -9.548828125
    8. ' ' → logprob: -9.673828125
    9. ')' → logprob: -10.298828125
    10. ' 
' → logprob: -10.423828125

Token 402: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.283359169960022
    2. '<|end|>' → logprob: -1.408359169960022
    3. ')' → logprob: -1.783359169960022
    4. ' to' → logprob: -2.1583590507507324
    5. '+' → logprob: -3.0333590507507324
    6. ' +=' → logprob: -3.1583590507507324
    7. ' +' → logprob: -3.4083590507507324
    8. '=' → logprob: -4.033359050750732
    9. '+=' → logprob: -4.533359050750732
    10. '<|end|>' → logprob: -4.533359050750732

Token 403: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.08019034564495087
    2. ' start' → logprob: -2.580190420150757
    3. 'l' → logprob: -6.955190181732178
    4. 'continue' → logprob: -9.080190658569336
    5. ' l' → logprob: -10.205190658569336
    6. 'return' → logprob: -10.330190658569336
    7. '
' → logprob: -10.705190658569336
    8. 'find' → logprob: -10.830190658569336
    9. 'next' → logprob: -11.080190658569336
    10. ' continue' → logprob: -11.205190658569336

Token 404: ' searching' (ID: 17437)
  Prédit: ' searching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' searching' → logprob: -0.4199259281158447
    2. 'search' → logprob: -2.4199259281158447
    3. ')' → logprob: -2.5449259281158447
    4. '```' → logprob: -2.9199259281158447
    5. '+' → logprob: -3.1699259281158447
    6. ' l' → logprob: -3.4199259281158447
    7. 'l' → logprob: -3.6699259281158447
    8. 'from' → logprob: -5.669925689697266
    9. 'Searching' → logprob: -6.044925689697266
    10. '   ' → logprob: -6.044925689697266

Token 405: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05545299872756004
    2. ' from' → logprob: -2.930453062057495
    3. '<|end|>' → logprob: -8.055453300476074
    4. 'From' → logprob: -9.180453300476074
    5. ')' → logprob: -9.680453300476074
    6. '_from' → logprob: -10.180453300476074
    7. '+' → logprob: -11.055453300476074
    8. '<|end|>' → logprob: -11.805453300476074
    9. ' ' → logprob: -12.055453300476074
    10. '.from' → logprob: -12.805453300476074

Token 406: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18212932348251343
    2. ')' → logprob: -2.182129383087158
    3. '):' → logprob: -3.307129383087158
    4. '       ' → logprob: -4.432129383087158
    5. '   ' → logprob: -5.932129383087158
    6. '<|end|>' → logprob: -6.682129383087158
    7. '):

' → logprob: -7.807129383087158
    8. '```' → logprob: -8.93212890625
    9. '<|end|>' → logprob: -9.18212890625
    10. ' ):
' → logprob: -9.30712890625

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013780052773654461
    2. ' l' → logprob: -5.013780117034912
    3. '   ' → logprob: -5.888780117034912
    4. ')' → logprob: -6.013780117034912
    5. '```' → logprob: -6.888780117034912
    6. ' ' → logprob: -8.638779640197754
    7. '<|end|>' → logprob: -8.763779640197754
    8. '):
' → logprob: -9.013779640197754
    9. '        
' → logprob: -9.763779640197754
    10. ')
' → logprob: -10.138779640197754

Token 408: ' Returns' (ID: 9609)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.314454585313797
    2. '   ' → logprob: -2.1894545555114746
    3. 'l' → logprob: -2.3144545555114746
    4. '       ' → logprob: -3.0644545555114746
    5. ')' → logprob: -5.064454555511475
    6. '```' → logprob: -5.564454555511475
    7. '           ' → logprob: -7.064454555511475
    8. 'int' → logprob: -7.689454555511475
    9. '):
' → logprob: -8.814455032348633
    10. ' ' → logprob: -8.939455032348633

Token 409: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01950077712535858
    2. ':' → logprob: -4.644500732421875
    3. '           ' → logprob: -5.769500732421875
    4. '   ' → logprob: -6.019500732421875
    5. ':
' → logprob: -6.769500732421875
    6. ' l' → logprob: -7.644500732421875
    7. '        ' → logprob: -7.769500732421875
    8. '<|end|>' → logprob: -7.769500732421875
    9. '=' → logprob: -8.144500732421875
    10. '):
' → logprob: -8.519500732421875

Token 410: '           ' (ID: 352)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.011509295552968979
    2. ' int' → logprob: -5.261509418487549
    3. 'int' → logprob: -5.511509418487549
    4. ' ' → logprob: -7.511509418487549
    5. ' ' → logprob: -7.636509418487549
    6. 'l' → logprob: -8.01150894165039
    7. '    ' → logprob: -8.76150894165039
    8. ' 
' → logprob: -9.26150894165039
    9. '1' → logprob: -9.76150894165039
    10. 'n' → logprob: -9.88650894165039

Token 411: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.000553151941858232
    2. ' int' → logprob: -7.500553131103516
    3. 'l' → logprob: -16.875553131103516
    4. '(int' → logprob: -17.000553131103516
    5. '[int' → logprob: -18.000553131103516
    6. '   ' → logprob: -18.250553131103516
    7. '=int' → logprob: -19.375553131103516
    8. '       ' → logprob: -19.750553131103516
    9. ' l' → logprob: -19.750553131103516
    10. '
' → logprob: -19.750553131103516

Token 412: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002202120842412114
    2. ' :' → logprob: -7.127202033996582
    3. ':
' → logprob: -7.377202033996582
    4. '   ' → logprob: -8.627202033996582
    5. ':l' → logprob: -8.627202033996582
    6. '       ' → logprob: -9.002202033996582
    7. '):' → logprob: -9.502202033996582
    8. '=' → logprob: -9.752202033996582
    9. ')' → logprob: -10.127202033996582
    10. ' =' → logprob: -10.877202033996582

Token 413: ' The' (ID: 623)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.23794983327388763
    2. ' min' → logprob: -1.8629498481750488
    3. 'The' → logprob: -3.987949848175049
    4. 'min' → logprob: -4.237949848175049
    5. 'l' → logprob: -4.362949848175049
    6. ' next' → logprob: -5.737949848175049
    7. ' The' → logprob: -5.987949848175049
    8. ' max' → logprob: -6.237949848175049
    9. 'max' → logprob: -6.487949848175049
    10. ' the' → logprob: -7.237949848175049

Token 414: ' index' (ID: 3472)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8857101202011108
    2. ' index' → logprob: -1.3857101202011108
    3. ' l' → logprob: -2.0107102394104004
    4. 'index' → logprob: -2.1357102394104004
    5. ' next' → logprob: -2.6357102394104004
    6. 'next' → logprob: -4.5107102394104
    7. 'n' → logprob: -7.3857102394104
    8. 'min' → logprob: -7.3857102394104
    9. 's' → logprob: -7.8857102394104
    10. ' min' → logprob: -8.135709762573242

Token 415: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.11664321273565292
    2. 'of' → logprob: -2.241643190383911
    3. '       ' → logprob: -6.74164342880249
    4. '+' → logprob: -7.61664342880249
    5. ' l' → logprob: -7.99164342880249
    6. '<|end|>' → logprob: -8.491642951965332
    7. '        ' → logprob: -8.616642951965332
    8. ' ' → logprob: -8.741642951965332
    9. '(' → logprob: -8.741642951965332
    10. 's' → logprob: -8.991642951965332

Token 416: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4632966220378876
    2. 'next' → logprob: -1.46329665184021
    3. ' the' → logprob: -2.33829665184021
    4. ' next' → logprob: -3.46329665184021
    5. 's' → logprob: -4.838296413421631
    6. 'l' → logprob: -6.088296413421631
    7. ' l' → logprob: -7.463296413421631
    8. ' s' → logprob: -7.588296413421631
    9. 'min' → logprob: -9.338296890258789
    10. 'Next' → logprob: -10.838296890258789

Token 417: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.009728224948048592
    2. ' next' → logprob: -4.88472843170166
    3. 'l' → logprob: -6.50972843170166
    4. 's' → logprob: -7.75972843170166
    5. 'min' → logprob: -9.88472843170166
    6. '1' → logprob: -10.13472843170166
    7. 'n' → logprob: -10.50972843170166
    8. '[next' → logprob: -10.63472843170166
    9. '(next' → logprob: -10.88472843170166
    10. 'Next' → logprob: -11.25972843170166

Token 418: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17773011326789856
    2. '1' → logprob: -2.177730083465576
    3. '(' → logprob: -4.177730083465576
    4. ' l' → logprob: -4.427730083465576
    5. ''l' → logprob: -4.927730083465576
    6. ' ' → logprob: -5.552730083465576
    7. '(l' → logprob: -5.802730083465576
    8. '('' → logprob: -6.177730083465576
    9. 'l' → logprob: -6.802730083465576
    10. ')' → logprob: -7.052730083465576

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023512983694672585
    2. ''' → logprob: -3.773513078689575
    3. '2' → logprob: -9.898512840270996
    4. '0' → logprob: -10.148512840270996
    5. 'l' → logprob: -10.148512840270996
    6. '')' → logprob: -10.398512840270996
    7. '`' → logprob: -10.523512840270996
    8. ''l' → logprob: -10.648512840270996
    9. '"' → logprob: -11.023512840270996
    10. ' ' → logprob: -11.273512840270996

Token 420: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08485841751098633
    2. ''' → logprob: -3.4598584175109863
    3. '')' → logprob: -3.4598584175109863
    4. ' or' → logprob: -4.334858417510986
    5. '+' → logprob: -6.459858417510986
    6. '`' → logprob: -6.959858417510986
    7. ')+' → logprob: -7.459858417510986
    8. '```' → logprob: -7.459858417510986
    9. ']' → logprob: -7.584858417510986
    10. 'or' → logprob: -8.209857940673828

Token 421: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5382692813873291
    2. ' or' → logprob: -0.9132692813873291
    3. '<|end|>' → logprob: -4.91326904296875
    4. '       ' → logprob: -5.41326904296875
    5. 'or' → logprob: -6.78826904296875
    6. '```' → logprob: -7.28826904296875
    7. ',' → logprob: -7.53826904296875
    8. '   ' → logprob: -7.91326904296875
    9. '<|end|>' → logprob: -8.66326904296875
    10. ' )' → logprob: -9.53826904296875

Token 422: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03409847244620323
    2. ' '' → logprob: -3.9090983867645264
    3. ' l' → logprob: -5.5340986251831055
    4. 's' → logprob: -6.1590986251831055
    5. ' s' → logprob: -6.1590986251831055
    6. ''s' → logprob: -6.4090986251831055
    7. '2' → logprob: -6.7840986251831055
    8. '`' → logprob: -7.0340986251831055
    9. ' ' → logprob: -7.7840986251831055
    10. ''l' → logprob: -8.034098625183105

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.17420256882906e-05
    2. ''' → logprob: -9.375091552734375
    3. '')' → logprob: -12.250091552734375
    4. ' ' → logprob: -14.250091552734375
    5. ''s' → logprob: -15.500091552734375
    6. '```' → logprob: -15.500091552734375
    7. '1' → logprob: -15.875091552734375
    8. '`' → logprob: -15.875091552734375
    9. ''>' → logprob: -16.125091552734375
    10. ')' → logprob: -16.125091552734375

Token 424: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6175343990325928
    2. ',' → logprob: -1.3675343990325928
    3. ')' → logprob: -1.7425343990325928
    4. '')' → logprob: -4.367534637451172
    5. ''' → logprob: -5.242534637451172
    6. '       ' → logprob: -5.367534637451172
    7. ',l' → logprob: -5.992534637451172
    8. '),' → logprob: -6.367534637451172
    9. '`,' → logprob: -7.242534637451172
    10. '(l' → logprob: -7.367534637451172

Token 425: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.013784755021333694
    2. '       ' → logprob: -4.513784885406494
    3. 'but' → logprob: -6.263784885406494
    4. '```' → logprob: -8.513784408569336
    5. ' 
' → logprob: -8.638784408569336
    6. ' l' → logprob: -9.513784408569336
    7. ')' → logprob: -9.638784408569336
    8. '<|end|>' → logprob: -10.013784408569336
    9. '.' → logprob: -10.138784408569336
    10. ' ' → logprob: -10.263784408569336

Token 426: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00671584764495492
    2. 'not' → logprob: -5.006715774536133
    3. '           ' → logprob: -15.756715774536133
    4. 'Not' → logprob: -16.006715774536133
    5. 'n' → logprob: -16.381715774536133
    6. ' ' → logprob: -16.631715774536133
    7. '_not' → logprob: -17.006715774536133
    8. ' ' → logprob: -17.131715774536133
    9. '	not' → logprob: -17.131715774536133
    10. '(not' → logprob: -17.506715774536133

Token 427: ' exceeding' (ID: 85205)
  Prédit: ' exceeding'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exceeding' → logprob: -0.16034547984600067
    2. 'ex' → logprob: -1.910345435142517
    3. 'max' → logprob: -10.035345077514648
    4. '           ' → logprob: -10.160345077514648
    5. '       ' → logprob: -12.035345077514648
    6. '```' → logprob: -12.160345077514648
    7. '_ex' → logprob: -12.535345077514648
    8. '>' → logprob: -12.785345077514648
    9. 'to' → logprob: -12.910345077514648
    10. 'l' → logprob: -13.410345077514648

Token 428: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0788973867893219
    2. 'n' → logprob: -2.578897476196289
    3. ' ' → logprob: -11.953897476196289
    4. '```' → logprob: -15.328897476196289
    5. '(n' → logprob: -15.578897476196289
    6. '`' → logprob: -15.953897476196289
    7. ')n' → logprob: -15.953897476196289
    8. ' l' → logprob: -16.20389747619629
    9. ')' → logprob: -16.57889747619629
    10. 's' → logprob: -16.70389747619629

Token 429: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029880439396947622
    2. '):' → logprob: -6.877987861633301
    3. '):
' → logprob: -7.502987861633301
    4. '   ' → logprob: -7.502987861633301
    5. ')
' → logprob: -8.1279878616333
    6. '```' → logprob: -8.3779878616333
    7. '       ' → logprob: -8.6279878616333
    8. ').' → logprob: -9.5029878616333
    9. '<|end|>' → logprob: -11.1279878616333
    10. '.' → logprob: -11.3779878616333

Token 430: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08553683012723923
    2. 'n' → logprob: -3.0855367183685303
    3. ' n' → logprob: -4.335536956787109
    4. ' l' → logprob: -4.835536956787109
    5. ' )' → logprob: -4.960536956787109
    6. ')n' → logprob: -5.585536956787109
    7. 'l' → logprob: -5.710536956787109
    8. '<|end|>' → logprob: -7.460536956787109
    9. '```' → logprob: -8.58553695678711
    10. '   ' → logprob: -9.08553695678711

Token 431: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0816171169281006
    2. 'n' → logprob: -1.4566171169281006
    3. ' l' → logprob: -1.5816171169281006
    4. ' n' → logprob: -1.7066171169281006
    5. '```' → logprob: -4.33161735534668
    6. 'l' → logprob: -4.45661735534668
    7. ' )' → logprob: -4.45661735534668
    8. '<|end|>' → logprob: -6.83161735534668
    9. ' user' → logprob: -7.58161735534668
    10. ')n' → logprob: -7.83161735534668

Token 432: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.724308967590332
    2. ')' → logprob: -1.349308967590332
    3. '(l' → logprob: -1.849308967590332
    4. '   ' → logprob: -2.974308967590332
    5. 'of' → logprob: -3.724308967590332
    6. '       ' → logprob: -4.099308967590332
    7. '+' → logprob: -5.974308967590332
    8. ' +' → logprob: -7.349308967590332
    9. '(n' → logprob: -7.474308967590332
    10. '(' → logprob: -7.724308967590332

Token 433: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5162147879600525
    2. 'the' → logprob: -1.1412148475646973
    3. ' the' → logprob: -3.1412148475646973
    4. 'l' → logprob: -3.6412148475646973
    5. ' n' → logprob: -4.516214847564697
    6. ')' → logprob: -6.266214847564697
    7. ' l' → logprob: -6.641214847564697
    8. ')n' → logprob: -9.391214370727539
    9. '<|end|>' → logprob: -10.391214370727539
    10. '```' → logprob: -10.516214370727539

Token 434: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.474974662065506
    2. 'original' → logprob: -0.9749746322631836
    3. 'string' → logprob: -7.349974632263184
    4. 's' → logprob: -9.099974632263184
    5. ' string' → logprob: -9.724974632263184
    6. ')' → logprob: -10.224974632263184
    7. 'n' → logprob: -11.224974632263184
    8. '```' → logprob: -11.599974632263184
    9. ' s' → logprob: -12.099974632263184
    10. 'l' → logprob: -12.599974632263184

Token 435: ' string' (ID: 1621)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.001050434890203178
    2. ' string' → logprob: -7.5010504722595215
    3. ')' → logprob: -7.6260504722595215
    4. 'str' → logprob: -11.876049995422363
    5. '   ' → logprob: -14.126049995422363
    6. 'String' → logprob: -14.751049995422363
    7. 's' → logprob: -15.001049995422363
    8. '_string' → logprob: -15.001049995422363
    9. '```' → logprob: -15.126049995422363
    10. '
' → logprob: -15.501049995422363

Token 436: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015230757417157292
    2. '):' → logprob: -6.876523017883301
    3. ').' → logprob: -8.5015230178833
    4. ')
' → logprob: -9.3765230178833
    5. '):
' → logprob: -9.3765230178833
    6. '   ' → logprob: -9.6265230178833
    7. '       ' → logprob: -10.1265230178833
    8. '```' → logprob: -12.7515230178833
    9. '),' → logprob: -12.8765230178833
    10. ')`' → logprob: -13.8765230178833

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009924377081915736
    2. '   ' → logprob: -7.000992298126221
    3. '```' → logprob: -10.125992774963379
    4. ')' → logprob: -11.125992774963379
    5. '	' → logprob: -12.250992774963379
    6. '<|end|>' → logprob: -12.375992774963379
    7. 'n' → logprob: -13.250992774963379
    8. 's' → logprob: -13.250992774963379
    9. '           ' → logprob: -13.375992774963379
    10. '
' → logprob: -13.625992774963379

Token 438: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022022522171027958
    2. '   ' → logprob: -8.87522029876709
    3. ')' → logprob: -10.62522029876709
    4. '```' → logprob: -10.75022029876709
    5. ' if' → logprob: -12.00022029876709
    6. 'if' → logprob: -12.37522029876709
    7. '
' → logprob: -12.50022029876709
    8. '	' → logprob: -12.50022029876709
    9. 'def' → logprob: -12.87522029876709
    10. '           ' → logprob: -13.37522029876709

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03366183862090111
    2. '   ' → logprob: -3.4086618423461914
    3. ' if' → logprob: -11.908661842346191
    4. 'if' → logprob: -12.408661842346191
    5. '```' → logprob: -12.783661842346191
    6. '
' → logprob: -14.033661842346191
    7. '           ' → logprob: -14.908661842346191
    8. '     ' → logprob: -14.908661842346191
    9. '    ' → logprob: -15.158661842346191
    10. '    
' → logprob: -15.533661842346191

Token 440: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015220028581097722
    2. '       ' → logprob: -6.501522064208984
    3. ' if' → logprob: -11.251522064208984
    4. '   ' → logprob: -12.001522064208984
    5. '
' → logprob: -14.501522064208984
    6. '```' → logprob: -17.751522064208984
    7. '           ' → logprob: -18.251522064208984
    8. '     ' → logprob: -19.751522064208984
    9. '	if' → logprob: -20.376522064208984
    10. '      ' → logprob: -20.501522064208984

Token 441: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17975109815597534
    2. 'l' → logprob: -1.8047511577606201
    3. '   ' → logprob: -12.8047513961792
    4. '	l' → logprob: -13.4297513961792
    5. '    ' → logprob: -14.6797513961792
    6. '       ' → logprob: -15.0547513961792
    7. ' ' → logprob: -15.5547513961792
    8. 'n' → logprob: -15.8047513961792
    9. '(l' → logprob: -16.179750442504883
    10. '```' → logprob: -16.179750442504883

Token 442: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.01815064437687397
    2. '>=' → logprob: -4.018150806427002
    3. ' ' → logprob: -15.268150329589844
    4. ']>=' → logprob: -15.643150329589844
    5. ')>=' → logprob: -15.643150329589844
    6. ' >' → logprob: -17.268150329589844
    7. '>' → logprob: -17.518150329589844
    8. '   ' → logprob: -17.643150329589844
    9. ' ≥' → logprob: -18.143150329589844
    10. ' ' → logprob: -18.143150329589844

Token 443: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.65101717156358e-05
    2. ' n' → logprob: -9.250096321105957
    3. 'l' → logprob: -15.500096321105957
    4. '	n' → logprob: -17.500097274780273
    5. '   ' → logprob: -18.000097274780273
    6. '<|end|>' → logprob: -18.625097274780273
    7. ' ' → logprob: -19.500097274780273
    8. 'import' → logprob: -19.625097274780273
    9. '[n' → logprob: -19.750097274780273
    10. '0' → logprob: -19.750097274780273

Token 444: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4363613426685333
    2. ':' → logprob: -1.061361312866211
    3. '       ' → logprob: -4.936361312866211
    4. '):
' → logprob: -8.436361312866211
    5. '   ' → logprob: -9.686361312866211
    6. '           ' → logprob: -10.311361312866211
    7. ':l' → logprob: -10.436361312866211
    8. ':return' → logprob: -10.811361312866211
    9. '<|end|>' → logprob: -10.811361312866211
    10. ',' → logprob: -11.061361312866211

Token 445: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01856321468949318
    2. 'return' → logprob: -4.643563270568848
    3. '           ' → logprob: -4.768563270568848
    4. ' return' → logprob: -8.893563270568848
    5. '   ' → logprob: -9.518563270568848
    6. '	       ' → logprob: -10.643563270568848
    7. '	return' → logprob: -11.143563270568848
    8. '	   ' → logprob: -12.018563270568848
    9. '	' → logprob: -12.143563270568848
    10. 'l' → logprob: -12.893563270568848

Token 446: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00032962486147880554
    2. ' return' → logprob: -8.250329971313477
    3. 'l' → logprob: -10.250329971313477
    4. '       ' → logprob: -10.625329971313477
    5. '           ' → logprob: -11.750329971313477
    6. '   ' → logprob: -14.500329971313477
    7. '	return' → logprob: -16.500329971313477
    8. '{return' → logprob: -16.875329971313477
    9. ' l' → logprob: -17.750329971313477
    10. ':return' → logprob: -18.750329971313477

Token 447: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0003811025235336274
    2. ' l' → logprob: -7.875380992889404
    3. '	l' → logprob: -14.625381469726562
    4. '   ' → logprob: -15.000381469726562
    5. '       ' → logprob: -15.500381469726562
    6. 'n' → logprob: -17.625381469726562
    7. '    ' → logprob: -18.500381469726562
    8. '$l' → logprob: -19.250381469726562
    9. '           ' → logprob: -19.375381469726562
    10. '     ' → logprob: -19.500381469726562

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004761668387800455
    2. '<|end|>' → logprob: -5.754761695861816
    3. '   ' → logprob: -7.379761695861816
    4. ')' → logprob: -7.879761695861816
    5. ' ' → logprob: -9.504761695861816
    6. '        
' → logprob: -9.629761695861816
    7. '<|end|>' → logprob: -9.754761695861816
    8. '	' → logprob: -10.004761695861816
    9. '
' → logprob: -10.004761695861816
    10. '        ' → logprob: -10.129761695861816

Token 449: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29917770624160767
    2. '	l' → logprob: -1.674177646636963
    3. '       ' → logprob: -2.674177646636963
    4. 'l' → logprob: -6.924177646636963
    5. ' l' → logprob: -6.924177646636963
    6. '\t' → logprob: -10.424178123474121
    7. ',l' → logprob: -10.799178123474121
    8. '```' → logprob: -10.799178123474121
    9. '	' → logprob: -10.924178123474121
    10. '[l' → logprob: -11.049178123474121

Token 450: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5318973064422607
    2. 'l' (adapté à ' l') → logprob: -1.2818973064422607
    3. ' l' → logprob: -2.0318973064422607
    4. '	l' → logprob: -5.78189754486084
    5. '       ' → logprob: -7.15689754486084
    6. ' ' → logprob: -10.53189754486084
    7. '
' → logprob: -11.65689754486084
    8. '  ' → logprob: -12.15689754486084
    9. '```' → logprob: -12.78189754486084
    10. '    ' → logprob: -13.03189754486084

Token 451: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760030746459961
    2. ' +=' → logprob: -0.8260030746459961
    3. '+' → logprob: -10.201003074645996
    4. '=' → logprob: -11.451003074645996
    5. ']+=' → logprob: -11.951003074645996
    6. '   ' → logprob: -12.076003074645996
    7. ' +' → logprob: -13.576003074645996
    8. '+='' → logprob: -14.576003074645996
    9. '+="' → logprob: -14.701003074645996
    10. ' ' → logprob: -14.951003074645996

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '```' → logprob: -21.125001907348633
    5. '0' → logprob: -22.500001907348633
    6. '１' → logprob: -23.250001907348633
    7. '2' → logprob: -23.875001907348633
    8. '
' → logprob: -23.875001907348633
    9. '  ' → logprob: -24.375001907348633
    10. '۱' → logprob: -24.562501907348633

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -19.75
    4. '0' → logprob: -20.875
    5. '   ' → logprob: -21.25
    6. '2' → logprob: -21.625
    7. '１' → logprob: -21.75
    8. '۱' → logprob: -22.375
    9. '
' → logprob: -22.75
    10. '<|end|>' → logprob: -22.9375

Token 454: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013665172271430492
    2. '<|end|>' → logprob: -4.638665199279785
    3. '
' → logprob: -5.888665199279785
    4. 'while' → logprob: -8.138665199279785
    5. '        
' → logprob: -8.513665199279785
    6. '   ' → logprob: -8.763665199279785
    7. '<|end|>' → logprob: -8.763665199279785
    8. '```' → logprob: -9.388665199279785
    9. ' while' → logprob: -9.513665199279785
    10. ' 
' → logprob: -10.513665199279785

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017790136858820915
    2. 'while' → logprob: -4.2677903175354
    3. '
' → logprob: -6.3927903175354
    4. ' while' → logprob: -6.6427903175354
    5. '   ' → logprob: -7.5177903175354
    6. '        
' → logprob: -10.267789840698242
    7. '	while' → logprob: -10.642789840698242
    8. '```' → logprob: -11.017789840698242
    9. '           ' → logprob: -12.267789840698242
    10. '  
' → logprob: -12.392789840698242

Token 456: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -3.2020991056924686e-05
    2. ' while' → logprob: -11.000032424926758
    3. '       ' → logprob: -11.500032424926758
    4. '   ' → logprob: -12.250032424926758
    5. '	while' → logprob: -14.750032424926758
    6. 'While' → logprob: -18.625032424926758
    7. '```' → logprob: -18.750032424926758
    8. '
' → logprob: -20.250032424926758
    9. ' ' → logprob: -21.750032424926758
    10. '  ' → logprob: -22.500032424926758

Token 457: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06994910538196564
    2. ' s' → logprob: -2.694949150085449
    3. '   ' → logprob: -11.56994915008545
    4. '(s' → logprob: -13.69494915008545
    5. ' ' → logprob: -14.69494915008545
    6. '	s' → logprob: -14.81994915008545
    7. 'l' → logprob: -15.06994915008545
    8. '_s' → logprob: -15.44494915008545
    9. ' ' → logprob: -16.194948196411133
    10. '```' → logprob: -16.194948196411133

Token 458: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.15441757265944e-05
    2. 'l' → logprob: -10.375031471252441
    3. '[' → logprob: -15.250031471252441
    4. '```' → logprob: -17.750032424926758
    5. '[
' → logprob: -17.875032424926758
    6. '   ' → logprob: -17.875032424926758
    7. '	l' → logprob: -18.250032424926758
    8. '(l' → logprob: -18.750032424926758
    9. '[s' → logprob: -19.125032424926758
    10. 's' → logprob: -19.375032424926758

Token 459: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3488530218601227
    2. '!=' → logprob: -1.7238529920578003
    3. ' !=' → logprob: -2.22385311126709
    4. ']!=' → logprob: -4.97385311126709
    5. ' not' → logprob: -7.72385311126709
    6. '==' → logprob: -8.72385311126709
    7. 'not' → logprob: -8.84885311126709
    8. ' ]' → logprob: -9.22385311126709
    9. '!='' → logprob: -9.72385311126709
    10. ']!='' → logprob: -10.22385311126709

Token 460: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.035846348851919174
    2. ' !=' → logprob: -3.53584623336792
    3. ' not' → logprob: -5.28584623336792
    4. '==' → logprob: -7.41084623336792
    5. 'not' → logprob: -7.91084623336792
    6. '!='' → logprob: -10.410846710205078
    7. '```' → logprob: -12.285846710205078
    8. ' ==' → logprob: -12.410846710205078
    9. ' ' → logprob: -13.535846710205078
    10. '   ' → logprob: -13.910846710205078

Token 461: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013641661498695612
    2. '1' → logprob: -6.751364231109619
    3. ' '' → logprob: -8.751363754272461
    4. '2' → logprob: -10.501363754272461
    5. '"' → logprob: -12.251363754272461
    6. ' ' → logprob: -13.126363754272461
    7. '`' → logprob: -14.126363754272461
    8. '('' → logprob: -15.501363754272461
    9. ''s' → logprob: -16.00136375427246
    10. '['' → logprob: -16.87636375427246

Token 462: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03391468897461891
    2. '1' → logprob: -4.033914566040039
    3. ''' → logprob: -4.158914566040039
    4. '"' → logprob: -12.033914566040039
    5. '12' → logprob: -12.658914566040039
    6. ' ' → logprob: -13.533914566040039
    7. '`' → logprob: -13.658914566040039
    8. '0' → logprob: -13.783914566040039
    9. '21' → logprob: -13.908914566040039
    10. '')' → logprob: -15.658914566040039

Token 463: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10391201078891754
    2. 'and' → logprob: -2.353912115097046
    3. ''' → logprob: -5.603911876678467
    4. '`' → logprob: -11.728912353515625
    5. ')' → logprob: -12.853912353515625
    6. ' ' → logprob: -13.603912353515625
    7. '```' → logprob: -13.978912353515625
    8. '')' → logprob: -14.478912353515625
    9. 's' → logprob: -14.978912353515625
    10. ''s' → logprob: -15.853912353515625

Token 464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692873179912567
    2. 'and' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.751928329467773
    4. ',' → logprob: -16.501928329467773
    5. '```' → logprob: -17.001928329467773
    6. '<|end|>' → logprob: -17.126928329467773
    7. '
' → logprob: -17.251928329467773
    8. ' ' → logprob: -17.376928329467773
    9. ')' → logprob: -17.751928329467773
    10. ' 
' → logprob: -18.001928329467773

Token 465: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01604340225458145
    2. ' s' → logprob: -4.141043186187744
    3. '   ' → logprob: -12.141043663024902
    4. ' ' → logprob: -13.391043663024902
    5. ''s' → logprob: -14.516043663024902
    6. ' ' → logprob: -15.016043663024902
    7. '	s' → logprob: -15.266043663024902
    8. '(s' → logprob: -15.391043663024902
    9. '`s' → logprob: -15.641043663024902
    10. '  ' → logprob: -15.766043663024902

Token 466: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00017386233957950026
    2. '[s' → logprob: -9.750173568725586
    3. 'l' → logprob: -9.875173568725586
    4. '[' → logprob: -10.000173568725586
    5. 's' → logprob: -11.125173568725586
    6. '   ' → logprob: -13.500173568725586
    7. '!=' → logprob: -14.750173568725586
    8. ' s' → logprob: -15.000173568725586
    9. ' !=' → logprob: -15.250173568725586
    10. ' [' → logprob: -15.375173568725586

Token 467: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5791049599647522
    2. ']' → logprob: -1.4541049003601074
    3. ' !=' → logprob: -2.0791049003601074
    4. ']!=' → logprob: -3.4541049003601074
    5. ''' → logprob: -3.9541049003601074
    6. '!='' → logprob: -4.204104900360107
    7. '']' → logprob: -4.329104900360107
    8. ']!='' → logprob: -6.829104900360107
    9. ' ]' → logprob: -8.954105377197266
    10. '<|end|>' → logprob: -9.579105377197266

Token 468: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5761795043945312
    2. ' !=' → logprob: -0.8261795043945312
    3. '!='' → logprob: -8.451179504394531
    4. '==' → logprob: -11.701179504394531
    5. ' not' → logprob: -12.576179504394531
    6. '()!=' → logprob: -12.576179504394531
    7. ']!=' → logprob: -12.951179504394531
    8. ' ' → logprob: -12.951179504394531
    9. '!==' → logprob: -13.701179504394531
    10. '!="' → logprob: -13.951179504394531

Token 469: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00011868205183418468
    2. '1' → logprob: -9.250118255615234
    3. ' '' → logprob: -10.875118255615234
    4. '`' → logprob: -13.500118255615234
    5. '"' → logprob: -14.125118255615234
    6. ' ' → logprob: -14.375118255615234
    7. '('' → logprob: -14.750118255615234
    8. '
' → logprob: -16.250118255615234
    9. '['' → logprob: -16.375118255615234
    10. '   ' → logprob: -16.875118255615234

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178071230649948
    2. ''' → logprob: -5.753178119659424
    3. '"' → logprob: -15.253177642822266
    4. '`' → logprob: -17.503177642822266
    5. ' ' → logprob: -17.503177642822266
    6. ''s' → logprob: -17.503177642822266
    7. '0' → logprob: -18.003177642822266
    8. '('' → logprob: -18.003177642822266
    9. '
' → logprob: -18.253177642822266
    10. '['' → logprob: -18.628177642822266

Token 471: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -1.175675630569458
    2. '':
' → logprob: -1.175675630569458
    3. ':' → logprob: -1.925675630569458
    4. ':
' → logprob: -2.300675630569458
    5. '       ' → logprob: -3.300675630569458
    6. ''):
' → logprob: -3.300675630569458
    7. '           ' → logprob: -3.300675630569458
    8. '):
' → logprob: -4.175675392150879
    9. '):' → logprob: -6.050675392150879
    10. ''' → logprob: -6.550675392150879

Token 472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004638384096324444
    2. ' l' → logprob: -5.629638195037842
    3. ':
' → logprob: -8.254638671875
    4. 'l' → logprob: -8.379638671875
    5. '       ' → logprob: -8.754638671875
    6. ':' → logprob: -8.879638671875
    7. '   ' → logprob: -9.504638671875
    8. ':l' → logprob: -9.504638671875
    9. '```' → logprob: -10.254638671875
    10. ',l' → logprob: -11.129638671875

Token 473: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.014165983535349369
    2. ' l' → logprob: -4.264165878295898
    3. '           ' → logprob: -13.639165878295898
    4. '   ' → logprob: -14.264165878295898
    5. '	l' → logprob: -14.514165878295898
    6. '       ' → logprob: -15.889165878295898
    7. '
' → logprob: -18.7641658782959
    8. ' ' → logprob: -18.7641658782959
    9. '```' → logprob: -19.6391658782959
    10. '  ' → logprob: -20.1391658782959

Token 474: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16024819016456604
    2. '+=' → logprob: -1.9102481603622437
    3. '           ' → logprob: -11.660247802734375
    4. '          ' → logprob: -12.035247802734375
    5. '   ' → logprob: -12.785247802734375
    6. '+' → logprob: -13.285247802734375
    7. ']+=' → logprob: -13.285247802734375
    8. '       ' → logprob: -13.785247802734375
    9. ' ' → logprob: -14.535247802734375
    10. '    ' → logprob: -14.785247802734375

Token 475: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -16.500003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '           ' → logprob: -19.312503814697266
    6. '       ' → logprob: -19.375003814697266
    7. '0' → logprob: -19.437503814697266
    8. '<|end|>' → logprob: -20.187503814697266
    9. '=' → logprob: -20.562503814697266
    10. '۱' → logprob: -21.125003814697266

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.375
    4. '<|end|>' → logprob: -20.625
    5. '0' → logprob: -21.5625
    6. '۱' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. '
' → logprob: -22.375
    9. '１' → logprob: -22.6875
    10. '`' → logprob: -22.8125

Token 477: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010402000043541193
    2. '
' → logprob: -9.625103950500488
    3. ' return' → logprob: -11.250103950500488
    4. '   ' → logprob: -11.375103950500488
    5. 'return' → logprob: -11.625103950500488
    6. ',' → logprob: -13.375103950500488
    7. '<|end|>' → logprob: -14.125103950500488
    8. '```' → logprob: -14.500103950500488
    9. '           ' → logprob: -14.625103950500488
    10. '        
' → logprob: -15.375103950500488

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015050210640765727
    2. 'return' → logprob: -9.500150680541992
    3. ' return' → logprob: -9.625150680541992
    4. '   ' → logprob: -11.750150680541992
    5. '
' → logprob: -13.875150680541992
    6. '           ' → logprob: -15.125150680541992
    7. '```' → logprob: -15.500150680541992
    8. '      ' → logprob: -16.625150680541992
    9. '	return' → logprob: -17.250150680541992
    10. ',' → logprob: -17.500150680541992

Token 479: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.035986654460430145
    2. '       ' → logprob: -4.035986423492432
    3. ' return' → logprob: -4.035986423492432
    4. '   ' → logprob: -11.53598690032959
    5. '	return' → logprob: -15.66098690032959
    6. '
' → logprob: -15.91098690032959
    7. '```' → logprob: -16.535985946655273
    8. ' ' → logprob: -17.160985946655273
    9. 'eturn' → logprob: -17.785985946655273
    10. '           ' → logprob: -18.285985946655273

Token 480: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.575939416885376
    2. 'min' → logprob: -0.825939416885376
    3. '(min' → logprob: -17.450939178466797
    4. 'max' → logprob: -18.325939178466797
    5. '[min' → logprob: -19.075939178466797
    6. '	min' → logprob: -19.200939178466797
    7. ' max' → logprob: -20.200939178466797
    8. '=min' → logprob: -21.075939178466797
    9. ' ' → logprob: -21.200939178466797
    10. 'm' → logprob: -21.825939178466797

Token 481: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -17.750003814697266
    4. 'l' → logprob: -17.875003814697266
    5. '(n' → logprob: -20.000003814697266
    6. '(
' → logprob: -20.125003814697266
    7. '(len' → logprob: -21.750003814697266
    8. '(ll' → logprob: -21.750003814697266
    9. '(s' → logprob: -22.250003814697266
    10. '(L' → logprob: -22.375003814697266

Token 482: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0003424951864872128
    2. ',' → logprob: -8.25034236907959
    3. '(' → logprob: -9.87534236907959
    4. ',l' → logprob: -10.87534236907959
    5. '(n' → logprob: -11.87534236907959
    6. 'l' → logprob: -13.12534236907959
    7. ')' → logprob: -13.75034236907959
    8. ' (' → logprob: -15.00034236907959
    9. '(s' → logprob: -16.000343322753906
    10. '```' → logprob: -16.125343322753906

Token 483: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014133334159851
    2. ' n' → logprob: -1.7014133930206299
    3. '	n' → logprob: -17.076414108276367
    4. ' ' → logprob: -17.326414108276367
    5. ' ' → logprob: -17.826414108276367
    6. '
' → logprob: -17.826414108276367
    7. '(n' → logprob: -19.076414108276367
    8. '   ' → logprob: -19.076414108276367
    9. ')n' → logprob: -19.201414108276367
    10. '```' → logprob: -19.576414108276367

Token 484: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. ')
' → logprob: -11.75001049041748
    3. '<|end|>' → logprob: -14.00001049041748
    4. '   ' → logprob: -14.25001049041748
    5. ')return' → logprob: -14.62501049041748
    6. ' )' → logprob: -15.25001049041748
    7. ')

' → logprob: -16.000009536743164
    8. ')n' → logprob: -17.250009536743164
    9. '),' → logprob: -18.125009536743164
    10. '       ' → logprob: -18.250009536743164

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003294871188700199
    2. 'for' → logprob: -6.128294944763184
    3. 'l' → logprob: -8.503294944763184
    4. 'i' → logprob: -8.503294944763184
    5. 'if' → logprob: -8.628294944763184
    6. 'left' → logprob: -9.003294944763184
    7. 'def' → logprob: -9.878294944763184
    8. '```' → logprob: -9.878294944763184
    9. 'right' → logprob: -10.128294944763184
    10. 'start' → logprob: -10.253294944763184

Token 486: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8732578754425049
    2. 'left' → logprob: -1.7482578754425049
    3. 'r' → logprob: -2.498257875442505
    4. 'i' → logprob: -2.748257875442505
    5. '   ' → logprob: -2.998257875442505
    6. 'if' → logprob: -3.248257875442505
    7. 'right' → logprob: -3.498257875442505
    8. 'q' → logprob: -3.623257875442505
    9. 'j' → logprob: -3.998257875442505
    10. 'L' → logprob: -4.623257637023926

Token 487: ' Initialize' (ID: 19496)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8065187931060791
    2. 'q' → logprob: -2.181518793106079
    3. 'i' → logprob: -2.306518793106079
    4. 'left' → logprob: -2.556518793106079
    5. 'if' → logprob: -2.931518793106079
    6. 'pos' → logprob: -3.681518793106079
    7. 'idx' → logprob: -3.806518793106079
    8. 'for' → logprob: -4.4315185546875
    9. 'start' → logprob: -4.5565185546875
    10. 'r' → logprob: -4.9315185546875

Token 488: ' window' (ID: 5734)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6873624324798584
    2. 'left' → logprob: -1.8123624324798584
    3. 'i' → logprob: -2.3123624324798584
    4. 'zero' → logprob: -3.0623624324798584
    5. 'ret' → logprob: -3.6873624324798584
    6. 'ans' → logprob: -3.6873624324798584
    7. 'pos' → logprob: -4.0623626708984375
    8. 'idx' → logprob: -4.1873626708984375
    9. 'j' → logprob: -4.4373626708984375
    10. 'q' → logprob: -4.6873626708984375

Token 489: ' pointers' (ID: 58762)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.7884308099746704
    2. '_left' → logprob: -1.7884308099746704
    3. '_start' → logprob: -2.038430690765381
    4. ' =' → logprob: -2.163430690765381
    5. 'l' → logprob: -2.788430690765381
    6. 'left' → logprob: -3.538430690765381
    7. 'L' → logprob: -3.788430690765381
    8. 'start' → logprob: -4.413430690765381
    9. 's' → logprob: -5.788430690765381
    10. '=' → logprob: -7.038430690765381

Token 490: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07088138163089752
    2. ' l' → logprob: -3.8208813667297363
    3. 'i' → logprob: -4.195881366729736
    4. 'left' → logprob: -4.445881366729736
    5. 'L' → logprob: -4.945881366729736
    6. '   ' → logprob: -5.320881366729736
    7. ' left' → logprob: -6.070881366729736
    8. 'r' → logprob: -6.570881366729736
    9. ' L' → logprob: -7.320881366729736
    10. ' i' → logprob: -7.320881366729736

Token 491: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1325109302997589
    2. ' l' → logprob: -2.6325109004974365
    3. 'i' → logprob: -3.6325109004974365
    4. 'left' → logprob: -4.882511138916016
    5. ' left' → logprob: -5.382511138916016
    6. ' i' → logprob: -5.507511138916016
    7. '   ' → logprob: -5.757511138916016
    8. 'L' → logprob: -5.882511138916016
    9. ' L' → logprob: -7.007511138916016
    10. 'r' → logprob: -7.507511138916016

Token 492: ' start' (ID: 1604)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2943476140499115
    2. 'left' → logprob: -1.6693476438522339
    3. 'i' → logprob: -3.6693475246429443
    4. 'L' → logprob: -4.294347763061523
    5. 'r' → logprob: -5.544347763061523
    6. 'j' → logprob: -5.794347763061523
    7. 'start' (adapté à ' start') → logprob: -5.794347763061523
    8. ' left' → logprob: -6.419347763061523
    9. 'li' → logprob: -6.544347763061523
    10. 'lt' → logprob: -6.669347763061523

Token 493: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08678284287452698
    2. '=' → logprob: -2.836782932281494
    3. ',' → logprob: -3.711782932281494
    4. ' ,' → logprob: -10.211782455444336
    5. '   ' → logprob: -11.211782455444336
    6. '_' → logprob: -11.586782455444336
    7. ' ' → logprob: -12.461782455444336
    8. '_idx' → logprob: -12.836782455444336
    9. ' =
' → logprob: -13.086782455444336
    10. '```' → logprob: -14.211782455444336

Token 494: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025844585616141558
    2. '-' → logprob: -6.002584457397461
    3. ' ' → logprob: -9.252584457397461
    4. 'start' → logprob: -12.002584457397461
    5. ' -' → logprob: -12.502584457397461
    6. 'end' → logprob: -13.752584457397461
    7. '   ' → logprob: -14.002584457397461
    8. '1' → logprob: -15.127584457397461
    9. '=' → logprob: -15.252584457397461
    10. 'ret' → logprob: -15.627584457397461

Token 495: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.233804303221405e-05
    2. '-' → logprob: -9.375092506408691
    3. ' ' → logprob: -12.000092506408691
    4. 'start' → logprob: -14.625092506408691
    5. '1' → logprob: -15.500092506408691
    6. 'end' → logprob: -15.625092506408691
    7. '[' → logprob: -15.750092506408691
    8. ' -' → logprob: -16.000091552734375
    9. '   ' → logprob: -17.000091552734375
    10. '=' → logprob: -17.312591552734375

Token 496: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02701345644891262
    2. 'end' → logprob: -4.277013301849365
    3. '   ' → logprob: -4.652013301849365
    4. ',' → logprob: -7.027013301849365
    5. ',end' → logprob: -7.027013301849365
    6. ' end' → logprob: -8.027013778686523
    7. '<|end|>' → logprob: -8.152013778686523
    8. '    
' → logprob: -8.402013778686523
    9. '[end' → logprob: -9.027013778686523
    10. '```' → logprob: -9.402013778686523

Token 497: ' #' (ID: 1069)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2347915917634964
    2. '
' → logprob: -1.60979163646698
    3. '   ' → logprob: -4.8597917556762695
    4. ',end' → logprob: -7.7347917556762695
    5. ' end' → logprob: -7.8597917556762695
    6. ',' → logprob: -8.35979175567627
    7. '    
' → logprob: -9.23479175567627
    8. 'count' → logprob: -9.23479175567627
    9. '#' → logprob: -10.10979175567627
    10. 'window' → logprob: -10.23479175567627

Token 498: ' Start' (ID: 7972)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.012180077843368053
    2. ' end' → logprob: -4.637179851531982
    3. 'count' → logprob: -6.387179851531982
    4. '1' → logprob: -9.26218032836914
    5. '0' → logprob: -9.38718032836914
    6. 'for' → logprob: -9.38718032836914
    7. '   ' → logprob: -9.51218032836914
    8. 'cnt' → logprob: -9.63718032836914
    9. 'left' → logprob: -10.01218032836914
    10. 'l' → logprob: -10.51218032836914

Token 499: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21679462492465973
    2. 'end' → logprob: -2.341794729232788
    3. ',' → logprob: -3.591794729232788
    4. '<|end|>' → logprob: -3.591794729232788
    5. ',end' → logprob: -4.716794490814209
    6. ' end' → logprob: -4.841794490814209
    7. '[end' → logprob: -5.216794490814209
    8. ' =' → logprob: -5.341794490814209
    9. '=' → logprob: -5.716794490814209
    10. ')' → logprob: -6.091794490814209

Token 501: ' the' (ID: 290)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.5220034718513489
    2. 'the' → logprob: -1.397003412246704
    3. 'end' → logprob: -2.147003412246704
    4. '0' → logprob: -4.522003650665283
    5. ' the' → logprob: -4.647003650665283
    6. ' window' → logprob: -5.022003650665283
    7. 'current' → logprob: -5.522003650665283
    8. 'start' → logprob: -5.647003650665283
    9. ' end' → logprob: -6.022003650665283
    10. 'substring' → logprob: -6.147003650665283

Token 502: ' current' (ID: 2208)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.026308773085474968
    2. 'end' → logprob: -4.276308536529541
    3. 'current' → logprob: -4.776308536529541
    4. 'substring' → logprob: -6.276308536529541
    5. ' window' → logprob: -6.901308536529541
    6. 'right' → logprob: -8.6513090133667
    7. 'start' → logprob: -9.2763090133667
    8. '#' → logprob: -9.4013090133667
    9. 'while' → logprob: -9.4013090133667
    10. ' end' → logprob: -10.4013090133667

Token 503: ' substring' (ID: 89494)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.05520225688815117
    2. ' window' → logprob: -3.1802022457122803
    3. 'end' → logprob: -4.805202484130859
    4. 'substring' → logprob: -6.430202484130859
    5. ' end' → logprob: -7.305202484130859
    6. '
' → logprob: -7.805202484130859
    7. 'token' → logprob: -8.80520248413086
    8. ')' → logprob: -9.30520248413086
    9. '   ' → logprob: -9.30520248413086
    10. '_window' → logprob: -9.55520248413086

Token 504: ' window' (ID: 5734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: '
' (ID: 198)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.43557578325271606
    2. '
' → logprob: -1.0605757236480713
    3. ' end' → logprob: -5.18557596206665
    4. 'count' → logprob: -8.810575485229492
    5. ',' → logprob: -8.935575485229492
    6. '```' → logprob: -8.935575485229492
    7. ',end' → logprob: -8.935575485229492
    8. '   ' → logprob: -9.185575485229492
    9. 'right' → logprob: -9.435575485229492
    10. '[end' → logprob: -9.810575485229492

Token 506: '   ' (ID: 271)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.14445175230503082
    2. '   ' → logprob: -2.144451856613159
    3. ' end' → logprob: -4.14445161819458
    4. 'count' → logprob: -6.76945161819458
    5. 'right' → logprob: -9.894452095031738
    6. ' count' → logprob: -10.144452095031738
    7. 'cnt' → logprob: -10.394452095031738
    8. 'for' → logprob: -10.769452095031738
    9. 'block' → logprob: -10.769452095031738
    10. ',end' → logprob: -10.769452095031738

Token 507: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.002761606127023697
    2. 'count' → logprob: -6.1277618408203125
    3. 'ones' → logprob: -8.752761840820312
    4. 'one' → logprob: -8.877761840820312
    5. 'cnt' → logprob: -9.002761840820312
    6. '   ' → logprob: -10.377761840820312
    7. 'zero' → logprob: -10.752761840820312
    8. ' end' → logprob: -10.877761840820312
    9. 'zeros' → logprob: -11.002761840820312
    10. 'blocks' → logprob: -11.502761840820312

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.475208282470703
    4. ' ' → logprob: -15.975208282470703
    5. ' =
' → logprob: -17.475208282470703
    6. ')' → logprob: -17.600208282470703
    7. '  ' → logprob: -17.725208282470703
    8. '0' → logprob: -17.850208282470703
    9. '```' → logprob: -17.975208282470703
    10. ',' → logprob: -18.100208282470703

Token 509: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005697138840332627
    2. ' ' → logprob: -8.125569343566895
    3. '-' → logprob: -8.250569343566895
    4. ' -' → logprob: -12.000569343566895
    5. 'start' → logprob: -12.125569343566895
    6. '   ' → logprob: -14.375569343566895
    7. '  ' → logprob: -16.68807029724121
    8. '1' → logprob: -16.87557029724121
    9. '=' → logprob: -17.06307029724121
    10. '[' → logprob: -17.18807029724121

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006372620700858533
    2. '-' → logprob: -7.375637054443359
    3. 'start' → logprob: -11.87563705444336
    4. ' ' → logprob: -13.25063705444336
    5. ' -' → logprob: -14.50063705444336
    6. '1' → logprob: -15.06313705444336
    7. 'n' → logprob: -15.75063705444336
    8. '[' → logprob: -15.93813705444336
    9. '   ' → logprob: -16.18813705444336
    10. '```' → logprob: -16.37563705444336

Token 511: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8980001211166382
    2. '
' → logprob: -1.1480001211166382
    3. ' #' → logprob: -2.0230002403259277
    4. '#' (adapté à ' #') → logprob: -2.6480002403259277
    5. ' ' → logprob: -3.8980002403259277
    6. 'while' → logprob: -3.8980002403259277
    7. ' while' → logprob: -4.398000240325928
    8. 'count' → logprob: -5.273000240325928
    9. '  ' → logprob: -6.023000240325928
    10. ' count' → logprob: -6.398000240325928

Token 513: ' End' (ID: 6437)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.064002275466919
    2. '0' → logprob: -1.314002275466919
    3. ' count' → logprob: -1.814002275466919
    4. '1' → logprob: -2.314002275466919
    5. ' ' → logprob: -2.814002275466919
    6. 'k' → logprob: -4.43900203704834
    7. 'blocks' → logprob: -4.93900203704834
    8. 'block' → logprob: -5.31400203704834
    9. 'end' → logprob: -5.43900203704834
    10. ' k' → logprob: -5.56400203704834

Token 514: ' index' (ID: 3472)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46803104877471924
    2. ' +' → logprob: -1.0930310487747192
    3. ' +=' → logprob: -4.71803092956543
    4. '   ' → logprob: -4.71803092956543
    5. '=' → logprob: -5.46803092956543
    6. ')' → logprob: -5.71803092956543
    7. '#' → logprob: -6.09303092956543
    8. '<|end|>' → logprob: -6.09303092956543
    9. ' =' → logprob: -6.46803092956543
    10. '
' → logprob: -6.46803092956543

Token 515: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05453737452626228
    2. 's' → logprob: -3.804537296295166
    3. 'the' → logprob: -4.179537296295166
    4. ' the' → logprob: -4.929537296295166
    5. ' ' → logprob: -5.804537296295166
    6. ' s' → logprob: -6.054537296295166
    7. 'start' → logprob: -6.054537296295166
    8. 'end' → logprob: -7.929537296295166
    9. ' end' → logprob: -10.054537773132324
    10. 'n' → logprob: -10.054537773132324

Token 517: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.41400614380836487
    2. ' current' → logprob: -1.6640061140060425
    3. 'substring' → logprob: -2.664006233215332
    4. 'window' → logprob: -3.789006233215332
    5. 's' → logprob: -4.289006233215332
    6. '<|end|>' → logprob: -4.664006233215332
    7. ' substring' → logprob: -4.914006233215332
    8. ' window' → logprob: -5.039006233215332
    9. ' ' → logprob: -5.164006233215332
    10. 'end' → logprob: -5.539006233215332

Token 518: ' substring' (ID: 89494)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.925746500492096
    2. '+' → logprob: -1.6757464408874512
    3. ' window' → logprob: -1.8007464408874512
    4. 'substring' → logprob: -2.550746440887451
    5. '
' → logprob: -2.675746440887451
    6. ' +' → logprob: -2.925746440887451
    7. ' substring' → logprob: -4.425746440887451
    8. ' ' → logprob: -4.925746440887451
    9. ' 
' → logprob: -5.175746440887451
    10. 'token' → logprob: -5.800746440887451

Token 519: ' window' (ID: 5734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31854626536369324
    2. '
' → logprob: -2.0685462951660156
    3. 'count' → logprob: -2.0685462951660156
    4. '    
' → logprob: -5.318546295166016
    5. '1' → logprob: -5.818546295166016
    6. ' count' → logprob: -6.068546295166016
    7. '<|end|>' → logprob: -6.068546295166016
    8. '	count' → logprob: -6.818546295166016
    9. 'blocks' → logprob: -6.818546295166016
    10. 'num' → logprob: -7.443546295166016

Token 521: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6407148241996765
    2. '   ' → logprob: -0.8907148241996765
    3. 'one' → logprob: -3.7657148838043213
    4. 'ones' → logprob: -4.265714645385742
    5. 'blocks' → logprob: -4.765714645385742
    6. 'cnt' → logprob: -5.015714645385742
    7. 'num' → logprob: -5.765714645385742
    8. 'counts' → logprob: -6.265714645385742
    9. '1' → logprob: -6.390714645385742
    10. 'block' → logprob: -7.015714645385742

Token 522: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3052411377429962
    2. 'one' → logprob: -2.055241107940674
    3. 'ones' → logprob: -2.180241107940674
    4. 'cnt' → logprob: -4.180241107940674
    5. 'blocks' → logprob: -5.930241107940674
    6. 'block' → logprob: -6.305241107940674
    7. '   ' → logprob: -7.180241107940674
    8. 'counts' → logprob: -7.805241107940674
    9. 'num' → logprob: -8.180241584777832
    10. '#' (adapté à ' #') → logprob: -8.555241584777832

Token 523: ' Advance' (ID: 71813)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28095686435699463
    2. 'ones' → logprob: -2.280956745147705
    3. 'one' → logprob: -2.405956745147705
    4. 'cnt' → logprob: -3.405956745147705
    5. 'block' → logprob: -5.030956745147705
    6. 'blocks' → logprob: -5.530956745147705
    7. 'zero' → logprob: -6.030956745147705
    8. 'num' → logprob: -6.280956745147705
    9. 'while' → logprob: -7.030956745147705
    10. 'current' → logprob: -7.530956745147705

Token 524: ' '' (ID: 461)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.08327505737543106
    2. ' end' → logprob: -2.958275079727173
    3. 's' → logprob: -4.833274841308594
    4. 'while' → logprob: -4.833274841308594
    5. '0' → logprob: -5.833274841308594
    6. '   ' → logprob: -6.083274841308594
    7. 'start' → logprob: -6.583274841308594
    8. ' the' → logprob: -6.958274841308594
    9. ' while' → logprob: -7.083274841308594
    10. ' s' → logprob: -7.333274841308594

Token 525: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.008726375177502632
    2. 'start' → logprob: -5.008726596832275
    3. 'while' → logprob: -7.758726596832275
    4. 'count' → logprob: -8.258726119995117
    5. 's' → logprob: -8.508726119995117
    6. '1' → logprob: -8.508726119995117
    7. 'ones' → logprob: -8.633726119995117
    8. 'one' → logprob: -8.883726119995117
    9. '0' → logprob: -9.008726119995117
    10. ' end' → logprob: -9.258726119995117

Token 526: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5006012320518494
    2. ' =' → logprob: -1.6256012916564941
    3. '<|end|>' → logprob: -2.375601291656494
    4. 'to' → logprob: -3.125601291656494
    5. 'while' → logprob: -4.250601291656494
    6. ' to' → logprob: -4.750601291656494
    7. ' +=' → logprob: -4.875601291656494
    8. ')' → logprob: -5.375601291656494
    9. '<|end|>' → logprob: -5.500601291656494
    10. '+=' → logprob: -5.500601291656494

Token 527: ' pointer' (ID: 16233)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6330359578132629
    2. '<|end|>' → logprob: -1.6330358982086182
    3. '=' → logprob: -2.508035898208618
    4. 'to' → logprob: -2.633035898208618
    5. '+=' → logprob: -3.633035898208618
    6. '   ' → logprob: -4.258036136627197
    7. ',' → logprob: -4.258036136627197
    8. ' =' → logprob: -4.383036136627197
    9. ' +=' → logprob: -4.383036136627197
    10. ' while' → logprob: -4.383036136627197

Token 528: ' so' (ID: 813)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10033908486366272
    2. ' while' → logprob: -3.35033917427063
    3. 'to' → logprob: -3.60033917427063
    4. '   ' → logprob: -3.97533917427063
    5. ' to' → logprob: -5.225338935852051
    6. 'until' → logprob: -5.725338935852051
    7. ',' → logprob: -6.475338935852051
    8. ' until' → logprob: -7.100338935852051
    9. '<|end|>' → logprob: -7.350338935852051
    10. 'and' → logprob: -7.475338935852051

Token 529: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.09070121496915817
    2. 'that' → logprob: -2.465701103210449
    3. '   ' → logprob: -6.965701103210449
    4. 'while' → logprob: -7.715701103210449
    5. ' ' → logprob: -8.46570110321045
    6. ' while' → logprob: -10.09070110321045
    7. '    ' → logprob: -10.71570110321045
    8. ' long' → logprob: -10.84070110321045
    9. 'long' → logprob: -11.34070110321045
    10. 'That' → logprob: -11.84070110321045

Token 530: ' the' (ID: 290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6343700885772705
    2. 'end' → logprob: -1.2593700885772705
    3. 's' → logprob: -2.7593700885772705
    4. 'it' → logprob: -3.7593700885772705
    5. 'if' → logprob: -3.8843700885772705
    6. 'the' → logprob: -4.509369850158691
    7. '0' → logprob: -4.509369850158691
    8. 'count' → logprob: -4.634369850158691
    9. 'start' → logprob: -4.759369850158691
    10. '1' → logprob: -5.009369850158691

Token 531: ' window' (ID: 5734)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.364344835281372
    2. 'next' → logprob: -1.489344835281372
    3. 's' → logprob: -1.989344835281372
    4. 'end' → logprob: -1.989344835281372
    5. 'count' → logprob: -2.364344835281372
    6. 'first' → logprob: -3.114344835281372
    7. 'window' → logprob: -3.864344835281372
    8. ' next' → logprob: -4.239344596862793
    9. 'block' → logprob: -4.364344596862793
    10. '0' → logprob: -4.739344596862793

Token 532: ' contains' (ID: 8895)
  Prédit: 'includes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'includes' → logprob: -1.1582270860671997
    2. ' includes' → logprob: -1.4082270860671997
    3. 'can' → logprob: -2.15822696685791
    4. ' covers' → logprob: -2.28322696685791
    5. 'contains' → logprob: -2.78322696685791
    6. 'covers' → logprob: -2.78322696685791
    7. ' can' → logprob: -3.15822696685791
    8. ' contains' → logprob: -3.90822696685791
    9. 's' → logprob: -4.15822696685791
    10. 'does' → logprob: -5.15822696685791

Token 533: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7007925510406494
    2. 'at' → logprob: -0.8257925510406494
    3. 'k' → logprob: -3.7007925510406494
    4. 'end' → logprob: -4.32579231262207
    5. '0' → logprob: -5.07579231262207
    6. ' k' → logprob: -5.57579231262207
    7. 'a' → logprob: -6.32579231262207
    8. 'all' → logprob: -6.45079231262207
    9. ' up' → logprob: -6.57579231262207
    10. 'only' → logprob: -6.82579231262207

Token 534: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.003038558876141906
    2. 'least' → logprob: -6.12803840637207
    3. ' most' → logprob: -7.37803840637207
    4. 'Most' → logprob: -10.00303840637207
    5. '0' → logprob: -10.25303840637207
    6. '   ' → logprob: -10.50303840637207
    7. 'end' → logprob: -10.87803840637207
    8. '
' → logprob: -11.25303840637207
    9. '1' → logprob: -11.25303840637207
    10. ' least' → logprob: -11.50303840637207

Token 535: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3492993414402008
    2. ' k' → logprob: -1.2242993116378784
    3. 'end' → logprob: -8.224299430847168
    4. '0' → logprob: -8.599299430847168
    5. '1' → logprob: -9.224299430847168
    6. 'ret' → logprob: -9.724299430847168
    7. 'start' → logprob: -9.849299430847168
    8. '(k' → logprob: -10.599299430847168
    9. ' ' → logprob: -10.849299430847168
    10. ' end' → logprob: -11.099299430847168

Token 536: ' groups' (ID: 8896)
  Prédit: ' blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocks' → logprob: -0.3774264454841614
    2. 'blocks' → logprob: -1.6274263858795166
    3. '<|end|>' → logprob: -3.2524263858795166
    4. '1' → logprob: -3.8774263858795166
    5. '0' → logprob: -4.377426624298096
    6. 'groups' → logprob: -4.502426624298096
    7. ' groups' → logprob: -4.752426624298096
    8. '+' → logprob: -5.377426624298096
    9. ''' → logprob: -5.752426624298096
    10. ' '' → logprob: -6.002426624298096

Token 537: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6966087818145752
    2. 'of' → logprob: -0.6966087818145752
    3. '<|end|>' → logprob: -6.946608543395996
    4. '   ' → logprob: -7.071608543395996
    5. '_of' → logprob: -8.071608543395996
    6. '<|end|>' → logprob: -8.196608543395996
    7. '0' → logprob: -8.321608543395996
    8. ' ' → logprob: -8.821608543395996
    9. '	of' → logprob: -8.946608543395996
    10. 'end' → logprob: -9.446608543395996

Token 538: ' consecutive' (ID: 40840)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029177779331803322
    2. '1' → logprob: -4.404177665710449
    3. 'ones' → logprob: -4.779177665710449
    4. 'con' → logprob: -4.904177665710449
    5. 'one' → logprob: -8.27917766571045
    6. '`' → logprob: -8.90417766571045
    7. ' ones' → logprob: -9.40417766571045
    8. ' consecutive' → logprob: -9.90417766571045
    9. '0' → logprob: -10.02917766571045
    10. ' '' → logprob: -10.27917766571045

Token 539: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024742893874645233
    2. '1' → logprob: -3.774742841720581
    3. 'ones' → logprob: -7.02474308013916
    4. '0' → logprob: -8.39974308013916
    5. '`' → logprob: -8.89974308013916
    6. ' '' → logprob: -9.27474308013916
    7. '"' → logprob: -10.14974308013916
    8. ' ones' → logprob: -11.02474308013916
    9. 'end' → logprob: -11.14974308013916
    10. ''s' → logprob: -11.14974308013916

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018031037179753184
    2. ''' → logprob: -6.376802921295166
    3. 'ones' → logprob: -9.876803398132324
    4. ''s' → logprob: -10.501803398132324
    5. '0' → logprob: -11.501803398132324
    6. '')' → logprob: -12.251803398132324
    7. '`' → logprob: -13.126803398132324
    8. '"' → logprob: -13.751803398132324
    9. ' ones' → logprob: -14.376803398132324
    10. '```' → logprob: -14.501803398132324

Token 541: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1386638879776001
    2. ''s' → logprob: -2.1386637687683105
    3. '1' → logprob: -4.6386637687683105
    4. '0' → logprob: -6.8886637687683105
    5. ''' → logprob: -8.263664245605469
    6. '`s' → logprob: -8.513664245605469
    7. ')' → logprob: -8.638664245605469
    8. '')' → logprob: -9.263664245605469
    9. '   ' → logprob: -10.013664245605469
    10. '```' → logprob: -10.013664245605469

Token 542: ':
' (ID: 734)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15924644470214844
    2. ' while' → logprob: -2.6592464447021484
    3. '
' → logprob: -3.1592464447021484
    4. '   ' → logprob: -4.909246444702148
    5. '1' → logprob: -5.159246444702148
    6. 'count' → logprob: -5.159246444702148
    7. '0' → logprob: -5.284246444702148
    8. 'if' → logprob: -5.534246444702148
    9. '<|end|>' → logprob: -5.659246444702148
    10. ' if' → logprob: -7.284246444702148

Token 543: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5354690551757812
    2. 'while' → logprob: -1.2854690551757812
    3. '   ' → logprob: -2.4104690551757812
    4. 'cnt' → logprob: -4.660469055175781
    5. 'groups' → logprob: -4.785469055175781
    6. ' count' → logprob: -4.910469055175781
    7. 'ones' → logprob: -5.035469055175781
    8. ' while' → logprob: -5.160469055175781
    9. '1' → logprob: -6.160469055175781
    10. 'blocks' → logprob: -6.660469055175781

Token 544: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12491460889577866
    2. 'while' → logprob: -2.9999146461486816
    3. 'cnt' → logprob: -3.6249146461486816
    4. 'for' → logprob: -4.624914646148682
    5. 'ones' → logprob: -4.624914646148682
    6. 'groups' → logprob: -4.874914646148682
    7. 'one' → logprob: -5.124914646148682
    8. 'if' → logprob: -6.124914646148682
    9. '1' → logprob: -6.624914646148682
    10. '   ' → logprob: -6.874914646148682

Token 545: ' ' (ID: 220)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6204184293746948
    2. 'while' → logprob: -0.9954184293746948
    3. 'ones' → logprob: -3.6204185485839844
    4. 'cnt' → logprob: -3.7454185485839844
    5. 'for' → logprob: -3.8704185485839844
    6. 'one' → logprob: -4.745418548583984
    7. 'groups' → logprob: -5.495418548583984
    8. 'if' → logprob: -6.120418548583984
    9. '1' → logprob: -6.870418548583984
    10. 'blocks' → logprob: -6.995418548583984

Token 546: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3298857510089874
    2. 'while' → logprob: -2.204885721206665
    3. 'cnt' → logprob: -2.704885721206665
    4. 'ones' → logprob: -2.954885721206665
    5. 'for' → logprob: -3.829885721206665
    6. 'one' → logprob: -3.954885721206665
    7. 'groups' → logprob: -4.954885959625244
    8. 'if' → logprob: -6.829885959625244
    9. 'group' → logprob: -6.954885959625244
    10. 'block' → logprob: -8.079885482788086

Token 547: '.' (ID: 13)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.060594890266656876
    2. ' while' → logprob: -3.0605947971343994
    3. '0' → logprob: -5.6855950355529785
    4. '   ' → logprob: -6.0605950355529785
    5. 'if' → logprob: -6.4355950355529785
    6. ')' → logprob: -6.4355950355529785
    7. '
' → logprob: -7.9355950355529785
    8. 'count' → logprob: -7.9355950355529785
    9. 'for' → logprob: -8.18559455871582
    10. '#' → logprob: -8.31059455871582

Token 548: ' Move' (ID: 25485)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1818958818912506
    2. 'if' → logprob: -2.3068959712982178
    3. 'for' → logprob: -3.5568959712982178
    4. 'count' → logprob: -3.6818959712982178
    5. 'end' → logprob: -5.056895732879639
    6. 'cnt' → logprob: -6.181895732879639
    7. ' while' → logprob: -6.431895732879639
    8. 'While' → logprob: -8.056896209716797
    9. 'current' → logprob: -8.056896209716797
    10. '0' → logprob: -8.181896209716797

Token 549: ' to' (ID: 316)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005184543319046497
    2. ' end' → logprob: -5.505184650421143
    3. 'while' → logprob: -7.755184650421143
    4. 'to' → logprob: -8.255184173583984
    5. '   ' → logprob: -8.880184173583984
    6. ' to' → logprob: -9.630184173583984
    7. ' while' → logprob: -10.380184173583984
    8. 'start' → logprob: -10.755184173583984
    9. '0' → logprob: -10.880184173583984
    10. 'next' → logprob: -10.880184173583984

Token 550: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.11062732338905334
    2. 'end' → logprob: -3.3606274127960205
    3. ' next' → logprob: -3.4856274127960205
    4. 'the' → logprob: -3.8606274127960205
    5. 's' → logprob: -4.610627174377441
    6. ' the' → logprob: -5.110627174377441
    7. '0' → logprob: -7.360627174377441
    8. ' s' → logprob: -7.485627174377441
    9. ' end' → logprob: -7.610627174377441
    10. ''s' → logprob: -9.360627174377441

Token 551: ' first' (ID: 1577)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.19725401699543
    2. ' next' → logprob: -1.8222540616989136
    3. 'first' → logprob: -4.947254180908203
    4. '0' → logprob: -5.197254180908203
    5. 's' → logprob: -6.322254180908203
    6. ' first' → logprob: -6.697254180908203
    7. 'end' → logprob: -7.197254180908203
    8. '1' → logprob: -7.947254180908203
    9. ' s' → logprob: -9.072254180908203
    10. ''' → logprob: -9.322254180908203

Token 552: ' group' (ID: 3566)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3860725164413452
    2. '1' → logprob: -1.3860725164413452
    3. ''' → logprob: -3.5110726356506348
    4. 'end' → logprob: -4.011072635650635
    5. 'zero' → logprob: -5.511072635650635
    6. ' ' → logprob: -5.636072635650635
    7. 'next' → logprob: -5.761072635650635
    8. ' zero' → logprob: -6.136072635650635
    9. ' '' → logprob: -6.261072635650635
    10. ' end' → logprob: -6.511072635650635

Token 553: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.866830587387085
    2. '0' → logprob: -1.616830587387085
    3. 'end' → logprob: -1.741830587387085
    4. '1' → logprob: -2.991830587387085
    5. ' if' → logprob: -3.241830587387085
    6. 'of' → logprob: -3.491830587387085
    7. '   ' → logprob: -4.116830825805664
    8. 'if' → logprob: -4.241830825805664
    9. ' end' → logprob: -4.241830825805664
    10. ' or' → logprob: -4.991830825805664

Token 554: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16702653467655182
    2. '1' → logprob: -1.9170265197753906
    3. 'ones' → logprob: -6.167026519775391
    4. '0' → logprob: -6.417026519775391
    5. '`' → logprob: -7.167026519775391
    6. 'zeros' → logprob: -7.292026519775391
    7. 'end' → logprob: -7.792026519775391
    8. ''s' → logprob: -7.917026519775391
    9. ' '' → logprob: -8.41702651977539
    10. ''end' → logprob: -9.29202651977539

Token 555: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2922738194465637
    2. '0' → logprob: -1.417273759841919
    3. ''' → logprob: -4.542273998260498
    4. 'zero' → logprob: -9.41727352142334
    5. 'ones' → logprob: -9.79227352142334
    6. ''s' → logprob: -10.04227352142334
    7. '`' → logprob: -10.04227352142334
    8. 'zeros' → logprob: -10.22977352142334
    9. ' ' → logprob: -10.54227352142334
    10. '"' → logprob: -10.91727352142334

Token 556: ''s' (ID: 885)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24872539937496185
    2. 's' → logprob: -2.748725414276123
    3. '0' → logprob: -2.873725414276123
    4. ' or' → logprob: -3.123725414276123
    5. ''s' → logprob: -4.123725414276123
    6. ''
' → logprob: -4.248725414276123
    7. '')' → logprob: -4.748725414276123
    8. 'or' → logprob: -4.873725414276123
    9. '2' → logprob: -6.248725414276123
    10. '1' → logprob: -6.498725414276123

Token 557: ' (' (ID: 350)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7613805532455444
    2. '   ' → logprob: -1.5113805532455444
    3. 'if' → logprob: -1.5113805532455444
    4. ' while' → logprob: -2.886380672454834
    5. ' if' → logprob: -4.011380672454834
    6. 'end' → logprob: -4.636380672454834
    7. '
' → logprob: -5.886380672454834
    8. ',' → logprob: -6.636380672454834
    9. ' or' → logprob: -6.761380672454834
    10. 'or' → logprob: -7.761380672454834

Token 558: 'sk' (ID: 3817)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.33124178647994995
    2. 'if' → logprob: -2.4562418460845947
    3. ')' → logprob: -2.5812418460845947
    4. ' while' → logprob: -2.7062418460845947
    5. ')
' → logprob: -3.3312418460845947
    6. 'end' → logprob: -5.206241607666016
    7. '   ' → logprob: -5.331241607666016
    8. ' if' → logprob: -5.581241607666016
    9. 's' → logprob: -6.581241607666016
    10. '0' → logprob: -8.331241607666016

Token 559: 'ipping' (ID: 5792)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.017601115629076958
    2. 'ipped' → logprob: -4.517601013183594
    3. 'ips' → logprob: -5.267601013183594
    4. 'ipping' → logprob: -6.767601013183594
    5. '   ' → logprob: -9.642601013183594
    6. '#' → logprob: -10.517601013183594
    7. '1' → logprob: -10.892601013183594
    8. 'i' → logprob: -11.642601013183594
    9. '       ' → logprob: -11.642601013183594
    10. '0' → logprob: -11.767601013183594

Token 560: ' leading' (ID: 8117)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -2.079883575439453
    2. ' zeros' → logprob: -2.079883575439453
    3. '0' → logprob: -2.454883575439453
    4. 'all' → logprob: -2.954883575439453
    5. 'over' → logprob: -2.954883575439453
    6. '1' → logprob: -2.954883575439453
    7. 'zeros' → logprob: -2.954883575439453
    8. ' over' → logprob: -3.079883575439453
    9. ')' → logprob: -3.079883575439453
    10. ' ahead' → logprob: -3.204883575439453

Token 561: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8525874018669128
    2. 's' → logprob: -1.6025874614715576
    3. 'zeros' → logprob: -2.2275874614715576
    4. ' zeros' → logprob: -2.2275874614715576
    5. ' ones' → logprob: -2.9775874614715576
    6. '0' → logprob: -3.1025874614715576
    7. 'ones' → logprob: -3.8525874614715576
    8. ''s' → logprob: -4.1025872230529785
    9. ''' → logprob: -5.1025872230529785
    10. ')' → logprob: -5.7275872230529785

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015300784260034561
    2. '0' → logprob: -4.265300750732422
    3. ''' → logprob: -7.640300750732422
    4. 's' → logprob: -8.390300750732422
    5. 'ones' → logprob: -8.765300750732422
    6. ''s' → logprob: -9.515300750732422
    7. '')' → logprob: -10.265300750732422
    8. ' ' → logprob: -10.390300750732422
    9. 'end' → logprob: -10.515300750732422
    10. ' ones' → logprob: -10.765300750732422

Token 563: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.8265274167060852
    2. 's' → logprob: -1.2015273571014404
    3. '')' → logprob: -1.4515273571014404
    4. '0' → logprob: -4.0765275955200195
    5. ''' → logprob: -4.8265275955200195
    6. '')
' → logprob: -6.4515275955200195
    7. ')' → logprob: -8.32652759552002
    8. '`s' → logprob: -8.57652759552002
    9. '1' → logprob: -8.95152759552002
    10. '')

' → logprob: -9.20152759552002

Token 564: ')
' (ID: 446)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1588636636734009
    2. '   ' → logprob: -1.4088636636734009
    3. ')' → logprob: -1.6588636636734009
    4. ' while' → logprob: -2.0338635444641113
    5. 'if' → logprob: -2.7838635444641113
    6. ')
' → logprob: -3.4088635444641113
    7. ' if' → logprob: -3.9088635444641113
    8. ',' → logprob: -6.033863544464111
    9. ' or' → logprob: -7.533863544464111
    10. 's' → logprob: -7.783863544464111

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20717503130435944
    2. 'while' → logprob: -1.7071750164031982
    3. ' while' → logprob: -5.332175254821777
    4. 'if' → logprob: -7.332175254821777
    5. '    
' → logprob: -9.457175254821777
    6. '
' → logprob: -9.832175254821777
    7. 'end' → logprob: -10.082175254821777
    8. ',' → logprob: -10.957175254821777
    9. ' if' → logprob: -11.332175254821777
    10. '```' → logprob: -11.457175254821777

Token 566: ' end' (ID: 1268)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17803795635700226
    2. '   ' → logprob: -1.9280380010604858
    3. 'end' (adapté à ' end') → logprob: -4.803038120269775
    4. ' while' → logprob: -5.303038120269775
    5. 'if' → logprob: -5.428038120269775
    6. ' if' → logprob: -10.928037643432617
    7. '	while' → logprob: -11.678037643432617
    8. '
' → logprob: -11.803037643432617
    9. ' end' → logprob: -11.928037643432617
    10. '```' → logprob: -12.053037643432617

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11504369229078293
    2. '=' → logprob: -2.3650436401367188
    3. ' +=' → logprob: -4.365043640136719
    4. '+=' → logprob: -6.240043640136719
    5. ',' → logprob: -10.490043640136719
    6. '   ' → logprob: -11.865043640136719
    7. '+' → logprob: -11.865043640136719
    8. ' ' → logprob: -12.115043640136719
    9. ' +' → logprob: -13.115043640136719
    10. 'while' → logprob: -13.365043640136719

Token 568: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16161806881427765
    2. ' next' → logprob: -1.9116181135177612
    3. 's' → logprob: -7.036618232727051
    4. '0' → logprob: -8.41161823272705
    5. ' s' → logprob: -8.41161823272705
    6. 'n' → logprob: -10.16161823272705
    7. ' ' → logprob: -11.41161823272705
    8. '	next' → logprob: -12.16161823272705
    9. ' n' → logprob: -13.03661823272705
    10. '   ' → logprob: -13.28661823272705

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003819332632701844
    2. '1' → logprob: -7.875381946563721
    3. '۰' → logprob: -14.562881469726562
    4. '```' → logprob: -15.000381469726562
    5. ' ' → logprob: -15.562881469726562
    6. 'zero' → logprob: -15.812881469726562
    7. '٠' → logprob: -16.125381469726562
    8. '01' → logprob: -16.312881469726562
    9. '０' → logprob: -16.375381469726562
    10. '০' → logprob: -16.437881469726562

Token 570: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.03038543276488781
    2. '(' → logprob: -3.5303854942321777
    3. 'end' → logprob: -8.15538501739502
    4. '(start' → logprob: -8.53038501739502
    5. '(-' → logprob: -9.28038501739502
    6. '0' → logprob: -10.40538501739502
    7. ' (' → logprob: -10.78038501739502
    8. '(
' → logprob: -12.65538501739502
    9. '()' → logprob: -14.78038501739502
    10. ' end' → logprob: -15.03038501739502

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005724519141949713
    2. ')
' → logprob: -7.625572681427002
    3. '(end' → logprob: -10.375572204589844
    4. '(' → logprob: -10.625572204589844
    5. ' )' → logprob: -11.250572204589844
    6. '   ' → logprob: -12.250572204589844
    7. 'end' → logprob: -12.750572204589844
    8. ')

' → logprob: -13.375572204589844
    9. '())' → logprob: -13.375572204589844
    10. '0' → logprob: -13.500572204589844

Token 572: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03826937824487686
    2. '   ' → logprob: -3.413269281387329
    3. '    
' → logprob: -5.913269519805908
    4. 'while' → logprob: -7.163269519805908
    5. ')' → logprob: -7.413269519805908
    6. '<|end|>' → logprob: -9.03826904296875
    7. '```' → logprob: -9.16326904296875
    8. ' while' → logprob: -9.41326904296875
    9. '

' → logprob: -9.91326904296875
    10. '  
' → logprob: -10.28826904296875

Token 573: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7115834355354309
    2. '   ' → logprob: -1.2115833759307861
    3. 'while' → logprob: -1.8365833759307861
    4. ' while' → logprob: -3.836583375930786
    5. '    
' → logprob: -4.086583614349365
    6. '```' → logprob: -5.586583614349365
    7. ')' → logprob: -6.086583614349365
    8. 'end' → logprob: -6.336583614349365
    9. 'if' → logprob: -6.336583614349365
    10. ' 
' → logprob: -6.711583614349365

Token 574: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4428301155567169
    2. 'count' → logprob: -1.4428300857543945
    3. 'ones' → logprob: -3.4428300857543945
    4. 'if' → logprob: -4.0678300857543945
    5. 'cnt' → logprob: -4.1928300857543945
    6. 'one' → logprob: -4.3178300857543945
    7. 'groups' → logprob: -4.3178300857543945
    8. 'while' → logprob: -4.3178300857543945
    9. '   ' → logprob: -5.1928300857543945
    10. 'end' → logprob: -6.1928300857543945

Token 575: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2351701706647873
    2. 'count' → logprob: -2.2351701259613037
    3. 'while' → logprob: -3.2351701259613037
    4. 'if' → logprob: -3.9851701259613037
    5. 'cnt' → logprob: -4.235170364379883
    6. 'ones' → logprob: -4.610170364379883
    7. 'groups' → logprob: -4.985170364379883
    8. 'one' → logprob: -5.360170364379883
    9. 'end' → logprob: -5.985170364379883
    10. 'group' → logprob: -6.860170364379883

Token 576: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3871290683746338
    2. 'while' → logprob: -1.6371290683746338
    3. '
' → logprob: -2.762129068374634
    4. ' while' → logprob: -3.012129068374634
    5. 'for' → logprob: -5.012128829956055
    6. '    
' → logprob: -6.012128829956055
    7. ' for' → logprob: -6.137128829956055
    8. ')' → logprob: -7.387128829956055
    9. ':' → logprob: -7.762128829956055
    10. ' ' → logprob: -8.262128829956055

Token 577: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004551884718239307
    2. 'while' → logprob: -5.754551887512207
    3. 'if' → logprob: -6.754551887512207
    4. ' for' → logprob: -9.629551887512207
    5. '   ' → logprob: -9.879551887512207
    6. '
' → logprob: -10.754551887512207
    7. 'end' → logprob: -10.879551887512207
    8. 'For' → logprob: -11.379551887512207
    9. 'count' → logprob: -12.004551887512207
    10. 'from' → logprob: -12.004551887512207

Token 578: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03523797541856766
    2. '_i' → logprob: -3.910238027572632
    3. 'i' → logprob: -4.535237789154053
    4. '_k' → logprob: -6.160237789154053
    5. 'k' → logprob: -6.785237789154053
    6. ' _' → logprob: -8.160238265991211
    7. ' i' → logprob: -9.035238265991211
    8. '_j' → logprob: -9.535238265991211
    9. '_in' → logprob: -10.910238265991211
    10. '
' → logprob: -10.910238265991211

Token 579: ' group' (ID: 3566)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12370625883340836
    2. 'i' → logprob: -2.998706340789795
    3. ' _' → logprob: -2.998706340789795
    4. ' i' → logprob: -4.498706340789795
    5. '0' → logprob: -5.998706340789795
    6. '_i' → logprob: -7.623706340789795
    7. '1' → logprob: -7.748706340789795
    8. 'range' → logprob: -7.873706340789795
    9. 'k' → logprob: -8.248705863952637
    10. ' range' → logprob: -8.623705863952637

Token 580: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7236207127571106
    2. ' of' → logprob: -1.2236206531524658
    3. 'of' → logprob: -1.9736206531524658
    4. 'for' → logprob: -3.098620653152466
    5. 'while' → logprob: -4.098620891571045
    6. ' for' → logprob: -4.973620891571045
    7. 'end' → logprob: -5.723620891571045
    8. ' =' → logprob: -6.473620891571045
    9. '=' → logprob: -6.723620891571045
    10. '0' → logprob: -6.723620891571045

Token 581: ' move' (ID: 5275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7088258862495422
    2. ' for' → logprob: -0.8338258862495422
    3. '   ' → logprob: -2.7088258266448975
    4. '       ' → logprob: -5.583826065063477
    5. 'if' → logprob: -6.833826065063477
    6. '    ' → logprob: -7.083826065063477
    7. ' if' → logprob: -7.958826065063477
    8. ' i' → logprob: -8.708826065063477
    9. 'i' → logprob: -9.333826065063477
    10. 'while' → logprob: -9.333826065063477

Token 582: ' to' (ID: 316)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2894904613494873
    2. ' end' → logprob: -1.5394904613494873
    3. '   ' → logprob: -3.5394904613494873
    4. 'while' → logprob: -6.164490699768066
    5. ' while' → logprob: -6.914490699768066
    6. 'for' → logprob: -7.039490699768066
    7. ' for' → logprob: -7.039490699768066
    8. '1' → logprob: -7.164490699768066
    9. '(end' → logprob: -7.414490699768066
    10. ' to' → logprob: -8.289490699768066

Token 583: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03406103327870369
    2. ' next' → logprob: -3.4090609550476074
    3. 'end' → logprob: -8.409061431884766
    4. 'the' → logprob: -9.034061431884766
    5. ' the' → logprob: -10.034061431884766
    6. '   ' → logprob: -11.034061431884766
    7. '	next' → logprob: -12.909061431884766
    8. '(next' → logprob: -13.034061431884766
    9. ' ' → logprob: -13.159061431884766
    10. ' end' → logprob: -13.409061431884766

Token 584: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03827638179063797
    2. ' next' → logprob: -3.288276433944702
    3. 'end' → logprob: -9.288276672363281
    4. '1' → logprob: -9.788276672363281
    5. 'first' → logprob: -9.788276672363281
    6. '0' → logprob: -11.663276672363281
    7. '   ' → logprob: -12.288276672363281
    8. 'start' → logprob: -13.163276672363281
    9. ' ' → logprob: -13.288276672363281
    10. '(next' → logprob: -13.413276672363281

Token 585: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012675276957452297
    2. '0' → logprob: -4.3876752853393555
    3. 'end' → logprob: -9.262675285339355
    4. ' ' → logprob: -10.387675285339355
    5. 'one' → logprob: -11.387675285339355
    6. 'start' → logprob: -11.887675285339355
    7. 'zero' → logprob: -12.262675285339355
    8. 'next' → logprob: -12.887675285339355
    9. '   ' → logprob: -13.137675285339355
    10. '(' → logprob: -13.137675285339355

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011339050251990557
    2. '0' → logprob: -6.876133918762207
    3. 'end' → logprob: -9.876133918762207
    4. ' ' → logprob: -10.876133918762207
    5. 'start' → logprob: -11.251133918762207
    6. 'one' → logprob: -11.251133918762207
    7. 'zero' → logprob: -13.126133918762207
    8. '   ' → logprob: -14.126133918762207
    9. '`' → logprob: -14.626133918762207
    10. '```' → logprob: -15.251133918762207

Token 587: '',' (ID: 787)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6304262280464172
    2. ')' → logprob: -0.8804262280464172
    3. '(end' → logprob: -3.3804261684417725
    4. ',' → logprob: -5.005426406860352
    5. '0' → logprob: -6.255426406860352
    6. '   ' → logprob: -6.380426406860352
    7. ')
' → logprob: -6.380426406860352
    8. ',end' → logprob: -6.630426406860352
    9. '),' → logprob: -6.880426406860352
    10. ' end' → logprob: -6.880426406860352

Token 588: ' then' (ID: 1815)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5648882389068604
    2. '   ' → logprob: -1.4398882389068604
    3. ' end' → logprob: -2.6898882389068604
    4. ' then' → logprob: -3.0648882389068604
    5. 'then' → logprob: -3.3148882389068604
    6. 'and' → logprob: -3.8148882389068604
    7. ' and' → logprob: -4.314888000488281
    8. 'for' → logprob: -5.814888000488281
    9. '       ' → logprob: -6.314888000488281
    10. 'next' → logprob: -6.939888000488281

Token 589: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7065275311470032
    2. 'end' → logprob: -0.9565275311470032
    3. ' next' → logprob: -2.3315274715423584
    4. ' end' → logprob: -4.2065277099609375
    5. '   ' → logprob: -4.8315277099609375
    6. ' to' → logprob: -7.8315277099609375
    7. '
' → logprob: -8.331527709960938
    8. '       ' → logprob: -8.456527709960938
    9. 'to' → logprob: -8.456527709960938
    10. ' ' → logprob: -8.581527709960938

Token 590: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.25486472249031067
    2. ' next' → logprob: -1.5048646926879883
    3. '0' → logprob: -5.879864692687988
    4. 'end' → logprob: -9.879864692687988
    5. '[next' → logprob: -10.879864692687988
    6. '(next' → logprob: -11.004864692687988
    7. '	next' → logprob: -11.379864692687988
    8. ' ' → logprob: -11.504864692687988
    9. '.next' → logprob: -11.754864692687988
    10. '_next' → logprob: -12.629864692687988

Token 591: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011206917697563767
    2. '1' → logprob: -7.001120567321777
    3. 'end' → logprob: -9.376120567321777
    4. ' ' → logprob: -9.626120567321777
    5. 'zero' → logprob: -10.126120567321777
    6. 'next' → logprob: -12.501120567321777
    7. '```' → logprob: -12.751120567321777
    8. ' zero' → logprob: -13.001120567321777
    9. '`' → logprob: -13.251120567321777
    10. ' end' → logprob: -13.626120567321777

Token 592: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002600387902930379
    2. '1' → logprob: -6.002600193023682
    3. 'end' → logprob: -9.25260066986084
    4. ' ' → logprob: -11.50260066986084
    5. 'zero' → logprob: -11.87760066986084
    6. 'next' → logprob: -12.12760066986084
    7. '```' → logprob: -13.50260066986084
    8. ' end' → logprob: -13.50260066986084
    9. '`' → logprob: -14.37760066986084
    10. 'one' → logprob: -14.62760066986084

Token 593: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5433031916618347
    2. '',' → logprob: -1.6683032512664795
    3. ')' → logprob: -2.4183032512664795
    4. '')' → logprob: -2.9183032512664795
    5. ',' → logprob: -3.5433032512664795
    6. 'end' → logprob: -4.0433030128479
    7. ')'' → logprob: -4.6683030128479
    8. '(end' → logprob: -4.9183030128479
    9. ''
' → logprob: -5.0433030128479
    10. '   ' → logprob: -5.1683030128479

Token 594: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06840195506811142
    2. 'end' → logprob: -2.818402051925659
    3. 'for' → logprob: -5.44340181350708
    4. ',' → logprob: -7.06840181350708
    5. ' for' → logprob: -7.56840181350708
    6. 'while' → logprob: -8.568402290344238
    7. ' end' → logprob: -8.693402290344238
    8. '(end' → logprob: -9.193402290344238
    9. '
' → logprob: -9.568402290344238
    10. ',end' → logprob: -9.818402290344238

Token 595: ' cover' (ID: 4321)
  Prédit: 'expand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expand' → logprob: -0.3563653230667114
    2. 'extend' → logprob: -1.9813653230667114
    3. 'advance' → logprob: -2.731365203857422
    4. 'include' → logprob: -3.981365203857422
    5. 'complete' → logprob: -4.231365203857422
    6. 'continue' → logprob: -4.356365203857422
    7. ' advance' → logprob: -4.481365203857422
    8. ' expand' → logprob: -4.731365203857422
    9. ' complete' → logprob: -5.231365203857422
    10. 'end' → logprob: -5.606365203857422

Token 596: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3462231159210205
    2. 'each' → logprob: -1.5962231159210205
    3. ' the' → logprob: -1.7212231159210205
    4. ' each' → logprob: -2.4712231159210205
    5. 'end' → logprob: -2.4712231159210205
    6. ' k' → logprob: -2.7212231159210205
    7. 'k' → logprob: -3.0962231159210205
    8. ' end' → logprob: -3.8462231159210205
    9. ' all' → logprob: -3.9712231159210205
    10. 'all' → logprob: -4.346222877502441

Token 597: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.4235519170761108
    2. ' group' → logprob: -1.5485519170761108
    3. 'block' → logprob: -1.9235519170761108
    4. ' block' → logprob: -2.0485520362854004
    5. ' full' → logprob: -2.5485520362854004
    6. '1' → logprob: -2.7985520362854004
    7. 'full' → logprob: -3.2985520362854004
    8. ' complete' → logprob: -3.4235520362854004
    9. 'end' → logprob: -4.6735520362854
    10. 'complete' → logprob: -4.7985520362854

Token 598: ' of' (ID: 328)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.685114860534668
    2. '   ' → logprob: -0.810114860534668
    3. ' of' → logprob: -3.810114860534668
    4. 'of' → logprob: -4.185114860534668
    5. 'while' → logprob: -5.435114860534668
    6. ' end' → logprob: -5.560114860534668
    7. ',' → logprob: -6.560114860534668
    8. 'for' → logprob: -7.060114860534668
    9. '(end' → logprob: -7.185114860534668
    10. '[end' → logprob: -7.560114860534668

Token 599: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40826714038848877
    2. '1' → logprob: -2.033267021179199
    3. 'ones' → logprob: -2.033267021179199
    4. ' ones' → logprob: -3.408267021179199
    5. 'con' → logprob: -3.783267021179199
    6. ' '' → logprob: -5.283267021179199
    7. ''s' → logprob: -5.783267021179199
    8. '`' → logprob: -5.783267021179199
    9. 'one' → logprob: -6.658267021179199
    10. ' consecutive' → logprob: -6.908267021179199

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0101995300501585
    2. 'ones' → logprob: -5.260199546813965
    3. ''' → logprob: -5.635199546813965
    4. ' ones' → logprob: -7.635199546813965
    5. 'con' → logprob: -7.885199546813965
    6. 'one' → logprob: -8.635199546813965
    7. ' ' → logprob: -9.635199546813965
    8. 's' → logprob: -10.010199546813965
    9. ''s' → logprob: -10.135199546813965
    10. 'end' → logprob: -10.260199546813965

Token 601: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22802281379699707
    2. ''s' → logprob: -1.603022813796997
    3. ''' → logprob: -6.603022575378418
    4. '')' → logprob: -7.228022575378418
    5. ' s' → logprob: -9.228022575378418
    6. '1' → logprob: -9.728022575378418
    7. '0' → logprob: -9.853022575378418
    8. ')'' → logprob: -9.853022575378418
    9. ''''' → logprob: -9.978022575378418
    10. ')' → logprob: -10.103022575378418

Token 602: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17545489966869354
    2. 'for' → logprob: -1.92545485496521
    3. ' for' → logprob: -5.300455093383789
    4. 'end' → logprob: -5.425455093383789
    5. 'while' → logprob: -5.675455093383789
    6. ',' → logprob: -6.800455093383789
    7. '
' → logprob: -8.425455093383789
    8. '<|end|>' → logprob: -8.925455093383789
    9. ' while' → logprob: -9.300455093383789
    10. ')' → logprob: -9.300455093383789

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06031031534075737
    2. 'for' → logprob: -2.9353103637695312
    3. ' for' → logprob: -5.435310363769531
    4. '
' → logprob: -7.685310363769531
    5. '    
' → logprob: -7.810310363769531
    6. 'while' → logprob: -9.560310363769531
    7. '```' → logprob: -10.060310363769531
    8. 'end' → logprob: -10.685310363769531
    9. '       ' → logprob: -10.935310363769531
    10. ',' → logprob: -11.935310363769531

Token 604: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10038404911756516
    2. '   ' → logprob: -2.350383996963501
    3. ' for' → logprob: -8.850383758544922
    4. 'while' → logprob: -10.725383758544922
    5. '```' → logprob: -11.975383758544922
    6. '	for' → logprob: -13.600383758544922
    7. '    
' → logprob: -13.725383758544922
    8. '
' → logprob: -13.725383758544922
    9. 'i' → logprob: -14.225383758544922
    10. 'if' → logprob: -14.600383758544922

Token 605: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0435313954949379
    2. ' _' → logprob: -3.2935314178466797
    3. '_i' → logprob: -5.66853141784668
    4. 'i' → logprob: -6.41853141784668
    5. ' i' → logprob: -7.91853141784668
    6. '_j' → logprob: -12.04353141784668
    7. ' ' → logprob: -12.16853141784668
    8. ' in' → logprob: -12.66853141784668
    9. '`' → logprob: -13.16853141784668
    10. '__' → logprob: -13.79353141784668

Token 606: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06232874095439911
    2. 'in' → logprob: -2.812328815460205
    3. ' ' → logprob: -8.437328338623047
    4. '_' → logprob: -9.187328338623047
    5. ' _' → logprob: -10.562328338623047
    6. ' i' → logprob: -11.812328338623047
    7. 'range' → logprob: -13.062328338623047
    8. '   ' → logprob: -13.312328338623047
    9. ')' → logprob: -13.687328338623047
    10. 'i' → logprob: -13.937328338623047

Token 607: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006727564614266157
    2. ' range' → logprob: -5.006727695465088
    3. ' ' → logprob: -12.50672721862793
    4. '   ' → logprob: -12.88172721862793
    5. '(range' → logprob: -13.63172721862793
    6. '_' → logprob: -13.63172721862793
    7. '  ' → logprob: -14.00672721862793
    8. '	range' → logprob: -14.13172721862793
    9. ')' → logprob: -14.63172721862793
    10. '0' → logprob: -14.88172721862793

Token 608: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.005556266754865646
    2. 'k' → logprob: -5.630556106567383
    3. ' k' → logprob: -7.005556106567383
    4. '(' → logprob: -7.505556106567383
    5. ' (' → logprob: -7.630556106567383
    6. ')' → logprob: -12.380556106567383
    7. '(
' → logprob: -13.005556106567383
    8. '(end' → logprob: -13.005556106567383
    9. 'end' → logprob: -14.505556106567383
    10. ',' → logprob: -14.880556106567383

Token 609: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16277357935905457
    2. '):
' → logprob: -1.912773609161377
    3. '+' → logprob: -6.912773609161377
    4. '*' → logprob: -7.287773609161377
    5. ')' → logprob: -7.662773609161377
    6. ' ):' → logprob: -8.287773132324219
    7. ' +' → logprob: -9.912773132324219
    8. ' ):
' → logprob: -10.537773132324219
    9. ' *' → logprob: -10.787773132324219
    10. '   ' → logprob: -10.787773132324219

Token 610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013250932097434998
    2. 'end' → logprob: -4.638250827789307
    3. '   ' → logprob: -6.013250827789307
    4. ' end' → logprob: -7.138250827789307
    5. '```' → logprob: -9.513251304626465
    6. ',end' → logprob: -10.138251304626465
    7. ',' → logprob: -11.013251304626465
    8. '
' → logprob: -11.013251304626465
    9. '	end' → logprob: -11.388251304626465
    10. '[end' → logprob: -11.513251304626465

Token 611: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.021462105214595795
    2. '   ' → logprob: -4.1464619636535645
    3. '       ' → logprob: -5.6464619636535645
    4. 'if' → logprob: -6.8964619636535645
    5. 'start' → logprob: -7.8964619636535645
    6. '           ' → logprob: -8.271462440490723
    7. 'next' → logprob: -9.021462440490723
    8. ' end' → logprob: -10.396462440490723
    9. 'e' → logprob: -11.521462440490723
    10. 'tmp' → logprob: -11.896462440490723

Token 612: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132637143135071
    2. ' =' → logprob: -1.3132636547088623
    3. '   ' → logprob: -14.188263893127441
    4. '+=' → logprob: -14.563263893127441
    5. '=end' → logprob: -14.563263893127441
    6. ' +=' → logprob: -16.063262939453125
    7. ' ' → logprob: -16.688262939453125
    8. '＝' → logprob: -17.438262939453125
    9. '    ' → logprob: -17.563262939453125
    10. ')' → logprob: -18.063262939453125

Token 613: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3868737816810608
    2. ' next' → logprob: -1.136873722076416
    3. '	next' → logprob: -13.636874198913574
    4. '(next' → logprob: -14.261874198913574
    5. '   ' → logprob: -14.886874198913574
    6. '[next' → logprob: -15.136874198913574
    7. ',next' → logprob: -16.261873245239258
    8. '.next' → logprob: -16.511873245239258
    9. ' ' → logprob: -16.636873245239258
    10. '  ' → logprob: -17.261873245239258

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.12500286102295
    3. '(' → logprob: -15.00000286102295
    4. '('' → logprob: -15.12500286102295
    5. ' ' → logprob: -15.25000286102295
    6. '`' → logprob: -17.375003814697266
    7. '```' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.812503814697266
    9. 'end' → logprob: -18.062503814697266
    10. '[' → logprob: -18.062503814697266

Token 615: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.0003364158037584275
    2. 'end' → logprob: -8.000336647033691
    3. '(' → logprob: -14.500336647033691
    4. '(
' → logprob: -16.250335693359375
    5. '[end' → logprob: -16.375335693359375
    6. ' end' → logprob: -16.750335693359375
    7. ' (' → logprob: -16.875335693359375
    8. ',end' → logprob: -17.125335693359375
    9. '=end' → logprob: -17.750335693359375
    10. ':end' → logprob: -18.125335693359375

Token 616: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03850352019071579
    2. ')
' → logprob: -3.288503408432007
    3. '       ' → logprob: -8.163503646850586
    4. '   ' → logprob: -8.788503646850586
    5. ')
' → logprob: -12.038503646850586
    6. ' )' → logprob: -12.288503646850586
    7. ')

' → logprob: -12.663503646850586
    8. '(end' → logprob: -12.913503646850586
    9. 'end' → logprob: -13.163503646850586
    10. '           ' → logprob: -13.288503646850586

Token 617: '       ' (ID: 309)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4722249209880829
    2. '       ' → logprob: -1.3472249507904053
    3. '   ' → logprob: -3.0972249507904053
    4. '<|end|>' → logprob: -3.7222249507904053
    5. '
' → logprob: -3.8472249507904053
    6. ' end' → logprob: -4.472224712371826
    7. '```' → logprob: -5.347224712371826
    8. '(end' → logprob: -6.097224712371826
    9. ',end' → logprob: -6.347224712371826
    10. '	end' → logprob: -6.347224712371826

Token 618: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.0016359048895537853
    2. '       ' → logprob: -7.001636028289795
    3. ' end' → logprob: -7.251636028289795
    4. '   ' → logprob: -11.876635551452637
    5. '(end' → logprob: -13.376635551452637
    6. '[end' → logprob: -13.626635551452637
    7. '	end' → logprob: -13.751635551452637
    8. '```' → logprob: -14.001635551452637
    9. ',end' → logprob: -14.126635551452637
    10. '        
' → logprob: -14.626635551452637

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020893067121506
    2. ' =' → logprob: -2.3502089977264404
    3. '=end' → logprob: -13.22520923614502
    4. '   ' → logprob: -15.72520923614502
    5. ')' → logprob: -16.225208282470703
    6. '=
' → logprob: -17.225208282470703
    7. ' ' → logprob: -17.350208282470703
    8. 'end' → logprob: -17.725208282470703
    9. '<|end|>' → logprob: -17.975208282470703
    10. '.=' → logprob: -18.225208282470703

Token 620: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.002476604888215661
    2. ' next' → logprob: -6.002476692199707
    3. '(next' → logprob: -14.002476692199707
    4. '[next' → logprob: -16.75247573852539
    5. '	next' → logprob: -17.37747573852539
    6. '.next' → logprob: -18.87747573852539
    7. 'Next' → logprob: -20.62747573852539
    8. '   ' → logprob: -21.00247573852539
    9. ' ' → logprob: -21.25247573852539
    10. ',next' → logprob: -21.25247573852539

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -19.25
    3. '(' → logprob: -20.875
    4. '０' → logprob: -21.75
    5. '০' → logprob: -22.5
    6. '٠' → logprob: -23.375
    7. ' ' → logprob: -23.625
    8. '```' → logprob: -24.375
    9. '047' → logprob: -24.5
    10. '<|end|>' → logprob: -24.625

Token 622: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -2.4153549020411447e-05
    2. 'end' → logprob: -10.87502384185791
    3. '[end' → logprob: -12.37502384185791
    4. '(' → logprob: -14.87502384185791
    5. '=end' → logprob: -15.00002384185791
    6. ',end' → logprob: -16.000024795532227
    7. ' end' → logprob: -16.500024795532227
    8. ''end' → logprob: -17.250024795532227
    9. '```' → logprob: -17.250024795532227
    10. ':end' → logprob: -17.375024795532227

Token 623: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030900631099939346
    2. '   ' → logprob: -8.625308990478516
    3. ')
' → logprob: -9.625308990478516
    4. '<|end|>' → logprob: -10.000308990478516
    5. '())' → logprob: -12.375308990478516
    6. '<|end|>' → logprob: -12.500308990478516
    7. ')return' → logprob: -12.875308990478516
    8. ' )' → logprob: -13.000308990478516
    9. '       ' → logprob: -13.125308990478516
    10. '()' → logprob: -14.500308990478516

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3208927512168884
    2. '
' → logprob: -1.4458928108215332
    3. 'while' → logprob: -3.695892810821533
    4. '    
' → logprob: -5.195892810821533
    5. ' while' → logprob: -5.320892810821533
    6. '<|end|>' → logprob: -7.070892810821533
    7. 'ret' → logprob: -7.320892810821533
    8. '  
' → logprob: -8.070892333984375
    9. '```' → logprob: -8.070892333984375
    10. ')' → logprob: -8.195892333984375

Token 625: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.022306039929389954
    2. '   ' → logprob: -4.022305965423584
    3. 'ret' → logprob: -6.022305965423584
    4. 'for' → logprob: -7.397305965423584
    5. ' while' → logprob: -7.522305965423584
    6. 'if' → logprob: -8.147306442260742
    7. '
' → logprob: -9.272306442260742
    8. '```' → logprob: -9.397306442260742
    9. 'start' → logprob: -9.647306442260742
    10. 'max' → logprob: -11.772306442260742

Token 626: ' Initialize' (ID: 19496)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.6431888937950134
    2. 'while' → logprob: -0.7681888937950134
    3. 'if' → logprob: -4.768188953399658
    4. 'max' → logprob: -7.393188953399658
    5. 'from' → logprob: -8.0181884765625
    6. 'for' → logprob: -8.3931884765625
    7. '   ' → logprob: -8.5181884765625
    8. 'ans' → logprob: -9.0181884765625
    9. 'result' → logprob: -9.1431884765625
    10. 'While' → logprob: -9.2681884765625

Token 627: ' the' (ID: 290)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.30874764919281
    2. 'ret' → logprob: -1.43374764919281
    3. 'count' → logprob: -1.68374764919281
    4. 'max' → logprob: -2.1837477684020996
    5. 'while' → logprob: -2.8087477684020996
    6. 'ans' → logprob: -2.9337477684020996
    7. 'res' → logprob: -3.8087477684020996
    8. 'length' → logprob: -4.1837477684021
    9. 'result' → logprob: -4.6837477684021
    10. 'answer' → logprob: -4.9337477684021

Token 628: ' result' (ID: 1534)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06953085958957672
    2. 'ret' → logprob: -3.444530963897705
    3. 'start' → logprob: -3.694530963897705
    4. 'max' → logprob: -5.819530963897705
    5. 'for' → logprob: -6.819530963897705
    6. 'ans' → logprob: -6.819530963897705
    7. 'result' → logprob: -6.944530963897705
    8. ' while' → logprob: -6.944530963897705
    9. 'answer' → logprob: -7.194530963897705
    10. 'length' → logprob: -7.694530963897705

Token 629: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16068601608276367
    2. '=' → logprob: -1.9106860160827637
    3. '=max' → logprob: -8.660686492919922
    4. 'ret' → logprob: -8.910686492919922
    5. '   ' → logprob: -9.660686492919922
    6. 'max' → logprob: -11.035686492919922
    7. '<|end|>' → logprob: -11.285686492919922
    8. ',' → logprob: -11.660686492919922
    9. '+=' → logprob: -12.035686492919922
    10. ' ' → logprob: -12.035686492919922

Token 630: ' the' (ID: 290)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.3415272831916809
    2. 'max' → logprob: -1.3415272235870361
    3. 'ret' → logprob: -3.591527223587036
    4. 'min' → logprob: -8.716526985168457
    5. '0' → logprob: -9.591526985168457
    6. ' max' → logprob: -11.091526985168457
    7. 'n' → logprob: -11.341526985168457
    8. ' end' → logprob: -11.591526985168457
    9. 'len' → logprob: -11.716526985168457
    10. '   ' → logprob: -12.216526985168457

Token 631: ' initial' (ID: 4871)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10149195790290833
    2. 'max' → logprob: -2.601491928100586
    3. 'ret' → logprob: -4.101491928100586
    4. 'min' → logprob: -6.101491928100586
    5. '0' → logprob: -6.226491928100586
    6. 'start' → logprob: -6.601491928100586
    7. 'next' → logprob: -9.351491928100586
    8. ' end' → logprob: -10.351491928100586
    9. 'k' → logprob: -10.851491928100586
    10. 'len' → logprob: -10.976491928100586

Token 632: ' window' (ID: 5734)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.39504802227020264
    2. 'ret' → logprob: -1.2700480222702026
    3. 'max' → logprob: -3.770048141479492
    4. ' ret' → logprob: -4.770048141479492
    5. ' end' → logprob: -5.020048141479492
    6. 'window' → logprob: -5.270048141479492
    7. ' max' → logprob: -7.145048141479492
    8. ' window' → logprob: -7.395048141479492
    9. 'start' → logprob: -8.270048141479492
    10. '(end' → logprob: -9.145048141479492

Token 633: ' size' (ID: 2349)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.38746920228004456
    2. '   ' → logprob: -1.2624691724777222
    3. '
' → logprob: -3.3874692916870117
    4. ' ret' → logprob: -5.887469291687012
    5. '    
' → logprob: -7.012469291687012
    6. ' =' → logprob: -7.887469291687012
    7. '	ret' → logprob: -9.387469291687012
    8. '=' → logprob: -9.387469291687012
    9. '  
' → logprob: -9.512469291687012
    10. '$ret' → logprob: -10.137469291687012

Token 634: '
' (ID: 198)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.02995874732732773
    2. '   ' → logprob: -3.654958724975586
    3. ' ret' → logprob: -5.654958724975586
    4. '
' → logprob: -9.404958724975586
    5. '	ret' → logprob: -10.904958724975586
    6. '    
' → logprob: -11.029958724975586
    7. '(ret' → logprob: -11.154958724975586
    8. '$ret' → logprob: -11.529958724975586
    9. '```' → logprob: -12.779958724975586
    10. '.ret' → logprob: -13.529958724975586

Token 635: '   ' (ID: 271)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.023477233946323395
    2. '   ' → logprob: -3.77347731590271
    3. ' ret' → logprob: -8.648477554321289
    4. '
' → logprob: -10.273477554321289
    5. '	ret' → logprob: -11.148477554321289
    6. '$ret' → logprob: -13.023477554321289
    7. '    
' → logprob: -13.398477554321289
    8. '```' → logprob: -13.523477554321289
    9. '(ret' → logprob: -13.773477554321289
    10. 'rets' → logprob: -14.898477554321289

Token 636: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -1.7432603272027336e-06
    2. ' ret' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '	ret' → logprob: -17.875001907348633
    5. '$ret' → logprob: -19.500001907348633
    6. '    
' → logprob: -20.125001907348633
    7. '```' → logprob: -20.750001907348633
    8. '
' → logprob: -21.000001907348633
    9. 'rets' → logprob: -21.125001907348633
    10. 'while' → logprob: -21.375001907348633

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689079880714417
    2. '=' → logprob: -1.1368907690048218
    3. ' +=' → logprob: -11.761890411376953
    4. '=max' → logprob: -11.886890411376953
    5. '+=' → logprob: -13.136890411376953
    6. ',' → logprob: -13.261890411376953
    7. ' ' → logprob: -14.386890411376953
    8. '=end' → logprob: -16.011890411376953
    9. '  ' → logprob: -16.136890411376953
    10. ')' → logprob: -16.761890411376953

Token 638: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00024477019906044006
    2. 'max' → logprob: -9.000245094299316
    3. 'min' → logprob: -9.375245094299316
    4. ' end' → logprob: -10.250245094299316
    5. '(end' → logprob: -15.000245094299316
    6. 'n' → logprob: -15.500245094299316
    7. '   ' → logprob: -15.750245094299316
    8. 'next' → logprob: -15.875245094299316
    9. ' min' → logprob: -16.500244140625
    10. 'End' → logprob: -16.875244140625

Token 639: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1932673305273056
    2. '-' → logprob: -1.9432673454284668
    3. '-start' → logprob: -3.443267345428467
    4. '<|end|>' → logprob: -7.693267345428467
    5. '
' → logprob: -11.318266868591309
    6. 'start' → logprob: -11.443266868591309
    7. '+' → logprob: -11.443266868591309
    8. '-main' → logprob: -11.818266868591309
    9. '```' → logprob: -11.818266868591309
    10. '-length' → logprob: -12.318266868591309

Token 640: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.003381022484973073
    2. '0' → logprob: -5.753381252288818
    3. ' start' → logprob: -8.50338077545166
    4. ' ' → logprob: -15.00338077545166
    5. '   ' → logprob: -17.628381729125977
    6. '(start' → logprob: -17.628381729125977
    7. '  ' → logprob: -18.003381729125977
    8. '```' → logprob: -18.003381729125977
    9. '	start' → logprob: -18.378381729125977
    10. '[start' → logprob: -18.628381729125977

Token 641: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030071308836340904
    2. '   ' → logprob: -3.905071258544922
    3. '<|end|>' → logprob: -4.905071258544922
    4. '    
' → logprob: -6.655071258544922
    5. 'while' → logprob: -7.905071258544922
    6. '```' → logprob: -8.905071258544922
    7. ' while' → logprob: -9.780071258544922
    8. '<|end|>' → logprob: -9.905071258544922
    9. '\n' → logprob: -10.155071258544922
    10. '  
' → logprob: -10.530071258544922

Token 642: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04012005031108856
    2. '   ' → logprob: -3.4151201248168945
    3. 'print' → logprob: -6.0401201248168945
    4. ' while' → logprob: -6.4151201248168945
    5. '```' → logprob: -6.5401201248168945
    6. '
' → logprob: -7.2901201248168945
    7. 'for' → logprob: -8.415120124816895
    8. '    
' → logprob: -10.040120124816895
    9. '	while' → logprob: -10.915120124816895
    10. 'While' → logprob: -11.665120124816895

Token 643: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0011109242914244533
    2. 'for' → logprob: -7.126111030578613
    3. '   ' → logprob: -8.251111030578613
    4. '
' → logprob: -10.876111030578613
    5. ' while' → logprob: -12.001111030578613
    6. 'from' → logprob: -12.001111030578613
    7. 'import' → logprob: -12.376111030578613
    8. '#' (adapté à ' #') → logprob: -13.001111030578613
    9. 'print' → logprob: -13.001111030578613
    10. '```' → logprob: -13.501111030578613

Token 644: ' Slide' (ID: 66425)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0078867357224226
    2. 'for' → logprob: -4.88288688659668
    3. ' while' → logprob: -9.00788688659668
    4. 'from' → logprob: -9.38288688659668
    5. '   ' → logprob: -10.13288688659668
    6. 'import' → logprob: -11.63288688659668
    7. '#' → logprob: -11.88288688659668
    8. 'right' → logprob: -12.63288688659668
    9. '```' → logprob: -12.88288688659668
    10. 'i' → logprob: -12.88288688659668

Token 645: ' the' (ID: 290)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5186922550201416
    2. ' end' → logprob: -1.2686922550201416
    3. '   ' → logprob: -2.6436922550201416
    4. 'start' → logprob: -3.1436922550201416
    5. ' start' → logprob: -5.3936920166015625
    6. 'while' → logprob: -6.5186920166015625
    7. '```' → logprob: -7.2686920166015625
    8. ' ' → logprob: -7.5186920166015625
    9. '(end' → logprob: -7.8936920166015625
    10. ' while' → logprob: -8.643692016601562

Token 646: ' window' (ID: 5734)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22560404241085052
    2. 'start' → logprob: -2.3506040573120117
    3. ' while' → logprob: -2.4756040573120117
    4. 'end' → logprob: -4.600604057312012
    5. ' start' → logprob: -5.600604057312012
    6. 'for' → logprob: -5.850604057312012
    7. '   ' → logprob: -6.225604057312012
    8. 'window' → logprob: -6.350604057312012
    9. ' end' → logprob: -6.975604057312012
    10. ' for' → logprob: -7.600604057312012

Token 647: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7332598567008972
    2. 'while' → logprob: -0.8582598567008972
    3. ' while' → logprob: -2.608259916305542
    4. '
' → logprob: -4.108259677886963
    5. '    
' → logprob: -5.858259677886963
    6. 'end' → logprob: -7.358259677886963
    7. '<|end|>' → logprob: -7.733259677886963
    8. 'start' → logprob: -8.233260154724121
    9. ',' → logprob: -8.233260154724121
    10. '```' → logprob: -8.483260154724121

Token 648: ' move' (ID: 5275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6760811805725098
    2. ' while' → logprob: -0.8010811805725098
    3. '   ' → logprob: -3.1760811805725098
    4. '
' → logprob: -7.80108118057251
    5. ' for' → logprob: -8.801080703735352
    6. 'for' → logprob: -8.801080703735352
    7. '```' → logprob: -10.426080703735352
    8. '    
' → logprob: -10.926080703735352
    9. '	while' → logprob: -11.176080703735352
    10. '    ' → logprob: -11.676080703735352

Token 649: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.14336028695106506
    2. 'end' → logprob: -2.0183603763580322
    3. ' start' → logprob: -7.643360137939453
    4. ' end' → logprob: -9.268360137939453
    5. '   ' → logprob: -9.518360137939453
    6. '```' → logprob: -10.893360137939453
    7. 'forward' → logprob: -13.018360137939453
    8. 'while' → logprob: -13.518360137939453
    9. '0' → logprob: -13.518360137939453
    10. ' ' → logprob: -13.518360137939453

Token 650: ' and' (ID: 326)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1112744808197021
    2. '=' → logprob: -1.4862744808197021
    3. '+=' → logprob: -2.111274480819702
    4. 'while' → logprob: -2.361274480819702
    5. '<|end|>' → logprob: -2.486274480819702
    6. ' =' → logprob: -2.611274480819702
    7. ',' → logprob: -4.111274719238281
    8. '   ' → logprob: -4.611274719238281
    9. ' while' → logprob: -5.111274719238281
    10. 'to' → logprob: -5.111274719238281

Token 651: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0015034328680485487
    2. ' end' → logprob: -6.5015034675598145
    3. 'while' → logprob: -14.626502990722656
    4. '```' → logprob: -15.376502990722656
    5. '   ' → logprob: -15.876502990722656
    6. '
' → logprob: -16.126502990722656
    7. 'ret' → logprob: -16.626502990722656
    8. 'continue' → logprob: -17.751502990722656
    9. ' while' → logprob: -18.251502990722656
    10. '#' → logprob: -18.251502990722656

Token 652: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5593319535255432
    2. ' +=' → logprob: -1.8093318939208984
    3. '+=' → logprob: -2.0593318939208984
    4. '=' → logprob: -2.9343318939208984
    5. ' while' → logprob: -3.8093318939208984
    6. ' =' → logprob: -3.8093318939208984
    7. '   ' → logprob: -3.9343318939208984
    8. '
' → logprob: -4.809331893920898
    9. '+' → logprob: -5.934331893920898
    10. 'from' → logprob: -6.684331893920898

Token 653: ' maintaining' (ID: 26513)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.48437783122062683
    2. 'while' → logprob: -1.4843778610229492
    3. '   ' → logprob: -1.8593778610229492
    4. '
' → logprob: -7.234377861022949
    5. '    ' → logprob: -8.23437786102295
    6. ' 
' → logprob: -8.98437786102295
    7. ' and' → logprob: -9.10937786102295
    8. '```' → logprob: -9.60937786102295
    9. '    
' → logprob: -9.98437786102295
    10. '	while' → logprob: -10.60937786102295

Token 654: ' at' (ID: 540)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.40042176842689514
    2. 'at' → logprob: -1.1504217386245728
    3. 'ret' → logprob: -4.775421619415283
    4. ' at' → logprob: -6.525421619415283
    5. ' the' → logprob: -6.525421619415283
    6. '```' → logprob: -7.400421619415283
    7. 'k' → logprob: -8.400422096252441
    8. 'window' → logprob: -8.650422096252441
    9. 'valid' → logprob: -8.775422096252441
    10. 'that' → logprob: -8.900422096252441

Token 655: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0002582402084954083
    2. 'Most' → logprob: -9.250258445739746
    3. '-most' → logprob: -9.750258445739746
    4. ' most' → logprob: -9.875258445739746
    5. 'least' → logprob: -11.125258445739746
    6. 'ost' → logprob: -11.375258445739746
    7. '```' → logprob: -11.500258445739746
    8. 'max' → logprob: -12.500258445739746
    9. 'mos' → logprob: -12.750258445739746
    10. '   ' → logprob: -13.500258445739746

Token 656: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10347963124513626
    2. ' k' → logprob: -2.3534796237945557
    3. 'one' → logprob: -6.853479862213135
    4. '```' → logprob: -6.853479862213135
    5. 'end' → logprob: -8.228479385375977
    6. ' one' → logprob: -8.478479385375977
    7. ' ' → logprob: -8.728479385375977
    8. '1' → logprob: -9.228479385375977
    9. 'start' → logprob: -9.353479385375977
    10. '`' → logprob: -9.853479385375977

Token 657: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.19420813024044037
    2. ' groups' → logprob: -2.3192081451416016
    3. '1' → logprob: -3.4442081451416016
    4. 'blocks' → logprob: -3.4442081451416016
    5. ' blocks' → logprob: -4.694208145141602
    6. '+' → logprob: -6.069208145141602
    7. '0' → logprob: -7.569208145141602
    8. '
' → logprob: -7.694208145141602
    9. '   ' → logprob: -7.944208145141602
    10. '_groups' → logprob: -8.069208145141602

Token 658: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8622822761535645
    2. 'of' → logprob: -0.9872822761535645
    3. '   ' → logprob: -1.6122822761535645
    4. 'while' → logprob: -5.6122822761535645
    5. '
' → logprob: -7.2372822761535645
    6. ' while' → logprob: -7.4872822761535645
    7. '_of' → logprob: -8.612281799316406
    8. '    
' → logprob: -8.737281799316406
    9. '0' → logprob: -9.237281799316406
    10. '```' → logprob: -9.612281799316406

Token 659: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6520323753356934
    2. 'con' → logprob: -0.9020323753356934
    3. '1' → logprob: -2.9020323753356934
    4. 'ones' → logprob: -4.152032375335693
    5. 'one' → logprob: -7.152032375335693
    6. '`' → logprob: -7.402032375335693
    7. ' ones' → logprob: -7.652032375335693
    8. ' consecutive' → logprob: -7.777032375335693
    9. ' '' → logprob: -9.027032852172852
    10. '```' → logprob: -9.402032852172852

Token 660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013780406676232815
    2. ''' → logprob: -4.38878059387207
    3. 'con' → logprob: -7.01378059387207
    4. 'ones' → logprob: -9.26378059387207
    5. '')' → logprob: -9.26378059387207
    6. ' ' → logprob: -9.88878059387207
    7. ''s' → logprob: -10.51378059387207
    8. ')' → logprob: -10.88878059387207
    9. '   ' → logprob: -10.88878059387207
    10. '`' → logprob: -11.13878059387207

Token 661: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.26438993215560913
    2. 's' → logprob: -1.639389991760254
    3. '_s' → logprob: -3.514389991760254
    4. '_' → logprob: -5.639389991760254
    5. ''' → logprob: -5.889389991760254
    6. '`s' → logprob: -7.514389991760254
    7. ''_' → logprob: -7.639389991760254
    8. '1' → logprob: -8.264389991760254
    9. '')' → logprob: -8.639389991760254
    10. '0' → logprob: -8.889389991760254

Token 662: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4334616959095001
    2. '
' → logprob: -1.1834616661071777
    3. 'while' → logprob: -3.9334616661071777
    4. ' while' → logprob: -4.308461666107178
    5. '```' → logprob: -5.433461666107178
    6. '    
' → logprob: -5.558461666107178
    7. ':' → logprob: -7.183461666107178
    8. ',' → logprob: -7.308461666107178
    9. '  
' → logprob: -7.808461666107178
    10. '\n' → logprob: -7.808461666107178

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016005391255021095
    2. '
' → logprob: -4.641005516052246
    3. 'while' → logprob: -6.266005516052246
    4. '    
' → logprob: -6.391005516052246
    5. ' while' → logprob: -6.891005516052246
    6. ':' → logprob: -7.641005516052246
    7. '```' → logprob: -8.016005516052246
    8. ',' → logprob: -8.266005516052246
    9. '\n' → logprob: -9.141005516052246
    10. '  
' → logprob: -9.391005516052246

Token 664: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04459850490093231
    2. '   ' → logprob: -3.1695985794067383
    3. '```' → logprob: -6.919598579406738
    4. 'start' → logprob: -8.294598579406738
    5. ' while' → logprob: -8.419598579406738
    6. 'for' → logprob: -9.294598579406738
    7. '
' → logprob: -11.044598579406738
    8. '	while' → logprob: -11.794598579406738
    9. '    
' → logprob: -12.169598579406738
    10. 'end' → logprob: -12.169598579406738

Token 665: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004102504346519709
    2. ' end' → logprob: -5.75410270690918
    3. 'True' → logprob: -7.75410270690918
    4. 'start' → logprob: -7.75410270690918
    5. 'ret' → logprob: -10.00410270690918
    6. ' True' → logprob: -11.75410270690918
    7. 'next' → logprob: -12.12910270690918
    8. 's' → logprob: -12.75410270690918
    9. '   ' → logprob: -13.37910270690918
    10. ' start' → logprob: -13.62910270690918

Token 666: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.046765200793743134
    2. '<' → logprob: -3.171765089035034
    3. '<n' → logprob: -5.671765327453613
    4. '<len' → logprob: -8.796765327453613
    5. ' +' → logprob: -9.921765327453613
    6. ' !=' → logprob: -10.296765327453613
    7. '+' → logprob: -10.796765327453613
    8. '<size' → logprob: -11.046765327453613
    9. '<int' → logprob: -11.171765327453613
    10. ' <=' → logprob: -12.171765327453613

Token 667: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -12.75000286102295
    3. '	n' → logprob: -17.500003814697266
    4. '   ' → logprob: -18.500003814697266
    5. 'len' → logprob: -18.625003814697266
    6. 'n't' → logprob: -19.875003814697266
    7. '_n' → logprob: -19.875003814697266
    8. '```' → logprob: -20.125003814697266
    9. ')n' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.875003814697266

Token 668: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12412890046834946
    2. ':
' → logprob: -2.374128818511963
    3. ' and' → logprob: -4.124128818511963
    4. '   ' → logprob: -5.749128818511963
    5. '       ' → logprob: -5.874128818511963
    6. 'and' → logprob: -7.374128818511963
    7. ',' → logprob: -7.499128818511963
    8. '):
' → logprob: -9.999129295349121
    9. '<|end|>' → logprob: -9.999129295349121
    10. '):' → logprob: -10.374129295349121

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09883807599544525
    2. 'if' → logprob: -2.5988380908966064
    3. '   ' → logprob: -4.348837852478027
    4. ' if' → logprob: -5.598837852478027
    5. 'l' → logprob: -6.973837852478027
    6. 'start' → logprob: -7.098837852478027
    7. '```' → logprob: -7.098837852478027
    8. 'next' → logprob: -8.723837852478027
    9. '        
' → logprob: -9.223837852478027
    10. 's' → logprob: -9.723837852478027

Token 670: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41813090443611145
    2. 'start' → logprob: -1.168130874633789
    3. '#' (adapté à ' #') → logprob: -4.043130874633789
    4. 'next' → logprob: -5.293130874633789
    5. '       ' → logprob: -5.543130874633789
    6. 'end' → logprob: -6.543130874633789
    7. 's' → logprob: -6.793130874633789
    8. 'new' → logprob: -8.043130874633789
    9. 'l' → logprob: -8.293130874633789
    10. 'ns' → logprob: -8.543130874633789

Token 671: ' Move' (ID: 25485)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05247173830866814
    2. '#' → logprob: -3.80247163772583
    3. 'if' → logprob: -4.42747163772583
    4. 'next' → logprob: -4.80247163772583
    5. '       ' → logprob: -5.17747163772583
    6. 'end' → logprob: -7.17747163772583
    7. 's' → logprob: -7.67747163772583
    8. 'l' → logprob: -8.177472114562988
    9. 'prev' → logprob: -8.427472114562988
    10. 'new' → logprob: -8.677472114562988

Token 672: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.021752119064331055
    2. 'if' → logprob: -4.27175235748291
    3. 'next' → logprob: -5.52175235748291
    4. '       ' → logprob: -6.64675235748291
    5. '0' → logprob: -7.14675235748291
    6. '#' → logprob: -7.64675235748291
    7. 'end' → logprob: -8.27175235748291
    8. '   ' → logprob: -8.27175235748291
    9. 's' → logprob: -8.52175235748291
    10. '1' → logprob: -8.89675235748291

Token 673: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5974782109260559
    2. ' =' → logprob: -1.3474781513214111
    3. 'to' → logprob: -1.8474781513214111
    4. '=end' → logprob: -3.722478151321411
    5. '0' → logprob: -5.34747838973999
    6. '+=' → logprob: -7.09747838973999
    7. ' to' → logprob: -7.47247838973999
    8. 'end' → logprob: -7.47247838973999
    9. '=start' → logprob: -7.84747838973999
    10. '_to' → logprob: -8.847477912902832

Token 674: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -5.1093578804284334e-05
    2. ' next' → logprob: -10.500051498413086
    3. 'end' → logprob: -10.875051498413086
    4. 'the' → logprob: -12.750051498413086
    5. 's' → logprob: -14.500051498413086
    6. 'Next' → logprob: -15.000051498413086
    7. '[next' → logprob: -15.125051498413086
    8. 'n' → logprob: -15.875051498413086
    9. '(next' → logprob: -16.000051498413086
    10. '	next' → logprob: -16.125051498413086

Token 675: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00019829542725346982
    2. ' next' → logprob: -9.250198364257812
    3. '0' → logprob: -9.750198364257812
    4. 'end' → logprob: -10.750198364257812
    5. '1' → logprob: -11.875198364257812
    6. 'first' → logprob: -11.875198364257812
    7. '[next' → logprob: -13.250198364257812
    8. 'Next' → logprob: -13.500198364257812
    9. '(next' → logprob: -14.000198364257812
    10. 'n' → logprob: -14.250198364257812

Token 676: ' group' (ID: 3566)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4744429886341095
    2. '1' → logprob: -0.9744429588317871
    3. 'next' → logprob: -9.099443435668945
    4. 'zero' → logprob: -9.099443435668945
    5. 'end' → logprob: -9.599443435668945
    6. 'start' → logprob: -10.224443435668945
    7. '```' → logprob: -11.474443435668945
    8. '`' → logprob: -11.474443435668945
    9. ' ' → logprob: -12.724443435668945
    10. ''' → logprob: -13.224443435668945

Token 677: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1767251342535019
    2. '0' → logprob: -2.176725149154663
    3. '=' → logprob: -3.676725149154663
    4. ' =' → logprob: -4.426724910736084
    5. '1' → logprob: -5.301724910736084
    6. ' of' → logprob: -6.051724910736084
    7. '       ' → logprob: -6.676724910736084
    8. '_of' → logprob: -7.051724910736084
    9. 'end' → logprob: -7.551724910736084
    10. '   ' → logprob: -8.426725387573242

Token 678: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3885948956012726
    2. '1' → logprob: -1.1385948657989502
    3. '0' → logprob: -6.513595104217529
    4. '`' → logprob: -9.513594627380371
    5. '
' → logprob: -9.763594627380371
    6. '   ' → logprob: -10.263594627380371
    7. '"' → logprob: -11.013594627380371
    8. ' ' → logprob: -11.388594627380371
    9. 'next' → logprob: -11.888594627380371
    10. 'zero' → logprob: -12.388594627380371

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00862521305680275
    2. '0' → logprob: -4.758625030517578
    3. ''' → logprob: -12.633625030517578
    4. ' ' → logprob: -13.321125030517578
    5. '`' → logprob: -13.946125030517578
    6. 'zero' → logprob: -13.946125030517578
    7. '01' → logprob: -14.383625030517578
    8. '   ' → logprob: -14.508625030517578
    9. '```' → logprob: -14.696125030517578
    10. '"' → logprob: -15.196125030517578

Token 680: ''s' (ID: 885)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34027931094169617
    2. ''s' → logprob: -1.5902793407440186
    3. ''' → logprob: -3.0902793407440186
    4. '')' → logprob: -4.0902791023254395
    5. '1' → logprob: -4.5902791023254395
    6. '(s' → logprob: -5.2152791023254395
    7. '0' → logprob: -5.7152791023254395
    8. '`s' → logprob: -7.5902791023254395
    9. ''''' → logprob: -7.8402791023254395
    10. '('' → logprob: -7.8402791023254395

Token 681: ' past' (ID: 4241)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017200686037540436
    2. 'start' → logprob: -4.267200469970703
    3. '   ' → logprob: -6.517200469970703
    4. 'end' → logprob: -7.392200469970703
    5. ',' → logprob: -9.017200469970703
    6. ' start' → logprob: -9.142200469970703
    7. ' =' → logprob: -9.142200469970703
    8. '```' → logprob: -9.142200469970703
    9. '        
' → logprob: -9.392200469970703
    10. '=' → logprob: -9.392200469970703

Token 682: ' a' (ID: 261)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4298436641693115
    2. 'next' → logprob: -1.1798436641693115
    3. 'end' → logprob: -3.5548436641693115
    4. '0' → logprob: -4.804843902587891
    5. ' start' → logprob: -6.179843902587891
    6. ' next' → logprob: -6.179843902587891
    7. 's' → logprob: -7.554843902587891
    8. 'the' → logprob: -7.929843902587891
    9. ' end' → logprob: -8.80484390258789
    10. ' the' → logprob: -10.92984390258789

Token 683: ' block' (ID: 4355)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010391960851848125
    2. '1' → logprob: -4.635392189025879
    3. 'start' → logprob: -7.635392189025879
    4. 'next' → logprob: -9.260392189025879
    5. 'zero' → logprob: -10.260392189025879
    6. 'end' → logprob: -11.760392189025879
    7. '`' → logprob: -13.135392189025879
    8. ''' → logprob: -13.385392189025879
    9. '```' → logprob: -13.385392189025879
    10. 's' → logprob: -13.510392189025879

Token 684: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1933348178863525
    2. 'start' → logprob: -1.5683348178863525
    3. '0' → logprob: -1.8183348178863525
    4. 'of' → logprob: -2.4433348178863525
    5. ' =' → logprob: -2.5683348178863525
    6. '=' → logprob: -2.8183348178863525
    7. ' of' → logprob: -3.3183348178863525
    8. '   ' → logprob: -3.5683348178863525
    9. 'next' → logprob: -4.693334579467773
    10. '1' → logprob: -4.818334579467773

Token 685: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7149618268013
    2. ''' → logprob: -0.9649618268013
    3. 'zeros' → logprob: -2.0899617671966553
    4. '`' → logprob: -5.839962005615234
    5. 'zero' → logprob: -6.464962005615234
    6. '1' → logprob: -7.714962005615234
    7. ' zeros' → logprob: -7.714962005615234
    8. ''s' → logprob: -7.839962005615234
    9. 'ones' → logprob: -8.464962005615234
    10. '"' → logprob: -10.214962005615234

Token 686: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10428369790315628
    2. 'start' → logprob: -2.3542838096618652
    3. '   ' → logprob: -6.354283809661865
    4. ' start' → logprob: -6.854283809661865
    5. 'end' → logprob: -7.229283809661865
    6. '        
' → logprob: -9.354283332824707
    7. '=start' → logprob: -9.604283332824707
    8. ' =' → logprob: -9.729283332824707
    9. '=' → logprob: -9.854283332824707
    10. ',' → logprob: -9.979283332824707

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055886879563331604
    2. 'start' → logprob: -2.93088698387146
    3. 'end' → logprob: -7.680886745452881
    4. ' start' → logprob: -8.430887222290039
    5. '   ' → logprob: -8.680887222290039
    6. '```' → logprob: -10.555887222290039
    7. '        ' → logprob: -10.680887222290039
    8. '        
' → logprob: -10.680887222290039
    9. ' =' → logprob: -11.555887222290039
    10. '=' → logprob: -11.555887222290039

Token 688: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.00012439649435691535
    2. '       ' → logprob: -9.625123977661133
    3. 'end' → logprob: -10.375123977661133
    4. '   ' → logprob: -11.125123977661133
    5. ' start' → logprob: -11.625123977661133
    6. 'while' → logprob: -14.250123977661133
    7. 'next' → logprob: -14.250123977661133
    8. '```' → logprob: -14.625123977661133
    9. 'if' → logprob: -15.000123977661133
    10. '        
' → logprob: -15.375123977661133

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132667541503906
    2. ' =' → logprob: -1.3132667541503906
    3. '=end' → logprob: -12.56326675415039
    4. '   ' → logprob: -14.68826675415039
    5. '+=' → logprob: -14.93826675415039
    6. '=
' → logprob: -15.68826675415039
    7. ')' → logprob: -16.18826675415039
    8. ',' → logprob: -16.43826675415039
    9. ' +=' → logprob: -16.68826675415039
    10. '	' → logprob: -16.81326675415039

Token 690: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00012403888104017824
    2. ' next' → logprob: -9.000123977661133
    3. '[next' → logprob: -15.750123977661133
    4. '   ' → logprob: -16.000123977661133
    5. '	next' → logprob: -16.250123977661133
    6. '(next' → logprob: -16.750123977661133
    7. 's' → logprob: -17.250123977661133
    8. 'end' → logprob: -17.500123977661133
    9. 'Next' → logprob: -17.625123977661133
    10. ' ' → logprob: -18.000123977661133

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -12.125005722045898
    3. 'end' → logprob: -15.875005722045898
    4. 'start' → logprob: -17.0000057220459
    5. ' ' → logprob: -17.2500057220459
    6. '۱' → logprob: -17.5000057220459
    7. 'next' → logprob: -18.0000057220459
    8. '१' → logprob: -18.3750057220459
    9. '```' → logprob: -18.3750057220459
    10. 'one' → logprob: -18.4375057220459

Token 692: '(next' (ID: 28757)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0032780063338577747
    2. 'start' → logprob: -5.753277778625488
    3. '(end' → logprob: -9.253277778625488
    4. '(' → logprob: -12.628277778625488
    5. '[start' → logprob: -15.003277778625488
    6. ' (' → logprob: -15.253277778625488
    7. 'end' → logprob: -15.378277778625488
    8. ' start' → logprob: -15.503277778625488
    9. '(next' → logprob: -16.753278732299805
    10. '```' → logprob: -17.253278732299805

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013512482109945267
    2. 'start' → logprob: -9.25013542175293
    3. '(start' → logprob: -10.75013542175293
    4. '1' → logprob: -11.12513542175293
    5. '```' → logprob: -14.25013542175293
    6. '[start' → logprob: -14.87513542175293
    7. ' ' → logprob: -15.06263542175293
    8. '(' → logprob: -15.50013542175293
    9. '
' → logprob: -15.68763542175293
    10. ' start' → logprob: -15.75013542175293

Token 694: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.02373838610947132
    2. 'start' → logprob: -3.773738384246826
    3. '(end' → logprob: -7.898738384246826
    4. '(' → logprob: -9.398738861083984
    5. ')' → logprob: -11.023738861083984
    6. ' (' → logprob: -11.398738861083984
    7. 'end' → logprob: -12.773738861083984
    8. ' start' → logprob: -12.898738861083984
    9. '```' → logprob: -13.523738861083984
    10. '[start' → logprob: -13.773738861083984

Token 695: '))
' (ID: 2210)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.7138375639915466
    2. '))' → logprob: -0.8388375639915466
    3. ')' → logprob: -2.7138376235961914
    4. '(end' → logprob: -4.588837623596191
    5. '(' → logprob: -6.963837623596191
    6. '))
' → logprob: -8.463837623596191
    7. 'start' → logprob: -8.588837623596191
    8. ')))' → logprob: -9.963837623596191
    9. '   ' → logprob: -10.463837623596191
    10. '       ' → logprob: -10.713837623596191

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20182697474956512
    2. 'end' → logprob: -1.7018269300460815
    3. '```' → logprob: -8.826827049255371
    4. '[end' → logprob: -9.451827049255371
    5. '   ' → logprob: -9.701827049255371
    6. '(end' → logprob: -10.326827049255371
    7. '
' → logprob: -10.576827049255371
    8. '        
' → logprob: -10.826827049255371
    9. ' end' → logprob: -11.576827049255371
    10. '=end' → logprob: -11.576827049255371

Token 697: ' #' (ID: 1069)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.056395273655653
    2. '       ' → logprob: -2.9313952922821045
    3. '#' (adapté à ' #') → logprob: -6.681395053863525
    4. 'if' → logprob: -8.806395530700684
    5. '   ' → logprob: -9.806395530700684
    6. 'next' → logprob: -11.431395530700684
    7. '        
' → logprob: -11.431395530700684
    8. '```' → logprob: -11.931395530700684
    9. ' end' → logprob: -12.181395530700684
    10. 'while' → logprob: -12.431395530700684

Token 698: ' Move' (ID: 25485)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.40551644563674927
    2. '#' → logprob: -1.2805163860321045
    3. '       ' → logprob: -2.9055163860321045
    4. '   ' → logprob: -7.530516624450684
    5. '```' → logprob: -9.030516624450684
    6. 'if' → logprob: -10.405516624450684
    7. 'next' → logprob: -12.030516624450684
    8. '``' → logprob: -12.155516624450684
    9. '[end' → logprob: -12.155516624450684
    10. '=end' → logprob: -12.155516624450684

Token 699: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0005986657342873514
    2. 'start' → logprob: -7.750598430633545
    3. '   ' → logprob: -9.375598907470703
    4. 'next' → logprob: -10.000598907470703
    5. '1' → logprob: -11.375598907470703
    6. ' end' → logprob: -11.875598907470703
    7. '       ' → logprob: -12.500598907470703
    8. '(end' → logprob: -12.500598907470703
    9. '    ' → logprob: -13.000598907470703
    10. '[end' → logprob: -13.125598907470703

Token 700: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055186349898576736
    2. ' =' → logprob: -2.9301862716674805
    3. '=end' → logprob: -8.18018627166748
    4. '   ' → logprob: -12.30518627166748
    5. '(next' → logprob: -12.30518627166748
    6. '(end' → logprob: -12.30518627166748
    7. '+=' → logprob: -13.05518627166748
    8. 'to' → logprob: -13.18018627166748
    9. '(' → logprob: -13.18018627166748
    10. 'end' → logprob: -13.55518627166748

Token 701: ' the' (ID: 290)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.702754474943504e-05
    2. ' next' → logprob: -10.62503719329834
    3. '(next' → logprob: -11.37503719329834
    4. '[next' → logprob: -14.37503719329834
    5. '	next' → logprob: -14.50003719329834
    6. 'Next' → logprob: -17.000036239624023
    7. 'end' → logprob: -17.250036239624023
    8. 'the' → logprob: -17.875036239624023
    9. '_next' → logprob: -18.375036239624023
    10. '```' → logprob: -18.500036239624023

Token 702: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00010247035970678553
    2. ' next' → logprob: -9.500102043151855
    3. '1' → logprob: -11.125102043151855
    4. '(next' → logprob: -11.625102043151855
    5. '[next' → logprob: -12.875102043151855
    6. 'Next' → logprob: -14.625102043151855
    7. '	next' → logprob: -15.250102043151855
    8. 'end' → logprob: -15.500102043151855
    9. 'one' → logprob: -16.000102996826172
    10. '```' → logprob: -16.250102996826172

Token 703: ' group' (ID: 3566)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012776151997968554
    2. '0' → logprob: -6.751277446746826
    3. 'next' → logprob: -9.501277923583984
    4. 'one' → logprob: -11.376277923583984
    5. '(next' → logprob: -11.751277923583984
    6. 'zero' → logprob: -12.251277923583984
    7. 'end' → logprob: -13.001277923583984
    8. '(' → logprob: -13.001277923583984
    9. '```' → logprob: -13.876277923583984
    10. ' ' → logprob: -14.001277923583984

Token 704: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2262655645608902
    2. '(next' → logprob: -2.4762656688690186
    3. '(' → logprob: -2.9762656688690186
    4. '1' → logprob: -3.6012656688690186
    5. ' of' → logprob: -3.8512656688690186
    6. '   ' → logprob: -5.1012654304504395
    7. '(end' → logprob: -5.7262654304504395
    8. '(of' → logprob: -5.8512654304504395
    9. '=' → logprob: -6.2262654304504395
    10. ' =' → logprob: -6.3512654304504395

Token 705: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47441717982292175
    2. ''' → logprob: -0.9744172096252441
    3. '`' → logprob: -9.349416732788086
    4. 'next' → logprob: -9.349416732788086
    5. 'one' → logprob: -9.724416732788086
    6. '0' → logprob: -10.349416732788086
    7. '```' → logprob: -10.849416732788086
    8. '"' → logprob: -11.599416732788086
    9. ''end' → logprob: -11.599416732788086
    10. '('' → logprob: -11.974416732788086

Token 706: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016074994346126914
    2. '0' → logprob: -8.750161170959473
    3. 'one' → logprob: -14.250161170959473
    4. '```' → logprob: -15.000161170959473
    5. '`' → logprob: -15.250161170959473
    6. ''' → logprob: -15.375161170959473
    7. 'zero' → logprob: -16.000160217285156
    8. ' ' → logprob: -16.000160217285156
    9. '   ' → logprob: -16.125160217285156
    10. 'One' → logprob: -16.312660217285156

Token 707: ''s' (ID: 885)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.021549372002482414
    2. '0' → logprob: -4.271549224853516
    3. '')' → logprob: -6.146549224853516
    4. ')' → logprob: -6.146549224853516
    5. 'end' → logprob: -6.521549224853516
    6. ''end' → logprob: -7.896549224853516
    7. '=end' → logprob: -8.521549224853516
    8. ',end' → logprob: -8.896549224853516
    9. '```' → logprob: -8.896549224853516
    10. '[end' → logprob: -8.896549224853516

Token 708: ' past' (ID: 4241)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.539199948310852
    2. ' =' → logprob: -1.289199948310852
    3. '=end' → logprob: -2.4141998291015625
    4. 'end' → logprob: -3.7891998291015625
    5. '   ' → logprob: -4.4141998291015625
    6. '(end' → logprob: -4.5391998291015625
    7. '```' → logprob: -6.6641998291015625
    8. '<|end|>' → logprob: -6.7891998291015625
    9. '<|end|>' → logprob: -7.0391998291015625
    10. ')' → logprob: -7.5391998291015625

Token 709: ' a' (ID: 261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0009802898857742548
    2. ' next' → logprob: -7.000980377197266
    3. '(next' → logprob: -10.000980377197266
    4. 'the' → logprob: -10.750980377197266
    5. 'end' → logprob: -14.000980377197266
    6. '[next' → logprob: -14.250980377197266
    7. '	next' → logprob: -15.250980377197266
    8. ' the' → logprob: -16.250980377197266
    9. '.next' → logprob: -16.750980377197266
    10. ',next' → logprob: -17.125980377197266

Token 710: ' block' (ID: 4355)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0012073767138645053
    2. '1' → logprob: -7.50120735168457
    3. ' next' → logprob: -7.50120735168457
    4. '(next' → logprob: -9.37620735168457
    5. '[next' → logprob: -11.12620735168457
    6. 'n' → logprob: -15.00120735168457
    7. 'new' → logprob: -15.25120735168457
    8. '.next' → logprob: -15.37620735168457
    9. ',next' → logprob: -15.37620735168457
    10. '0' → logprob: -15.75120735168457

Token 711: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.018118221312761307
    2. '=' → logprob: -4.893118381500244
    3. '0' → logprob: -5.643118381500244
    4. ' of' → logprob: -6.018118381500244
    5. '=end' → logprob: -6.268118381500244
    6. '   ' → logprob: -6.768118381500244
    7. 'end' → logprob: -7.643118381500244
    8. '(end' → logprob: -8.018117904663086
    9. ' =' → logprob: -8.018117904663086
    10. '```' → logprob: -9.393117904663086

Token 712: ' ones' (ID: 8104)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07047872990369797
    2. '1' → logprob: -2.945478677749634
    3. ' next' → logprob: -5.195478916168213
    4. 'ones' → logprob: -5.320478916168213
    5. ' ones' → logprob: -5.945478916168213
    6. 'one' → logprob: -6.445478916168213
    7. '(next' → logprob: -8.195478439331055
    8. '`' → logprob: -8.445478439331055
    9. 'end' → logprob: -9.570478439331055
    10. ''' → logprob: -10.070478439331055

Token 713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3818644881248474
    2. 'end' → logprob: -1.3818645477294922
    3. '   ' → logprob: -3.631864547729492
    4. '(end' → logprob: -4.006864547729492
    5. '```' → logprob: -5.756864547729492
    6. '<|end|>' → logprob: -5.756864547729492
    7. '
' → logprob: -5.881864547729492
    8. '=end' → logprob: -6.006864547729492
    9. '<|end|>' → logprob: -6.006864547729492
    10. '        
' → logprob: -6.381864547729492

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6160070300102234
    2. 'end' → logprob: -0.8660070300102234
    3. '(end' → logprob: -3.866007089614868
    4. '   ' → logprob: -5.241006851196289
    5. '```' → logprob: -5.491006851196289
    6. ' end' → logprob: -5.616006851196289
    7. '=end' → logprob: -5.741006851196289
    8. '[end' → logprob: -7.866006851196289
    9. '	end' → logprob: -8.116006851196289
    10. ',end' → logprob: -8.116006851196289

Token 715: ' end' (ID: 1268)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.08929166197776794
    2. 'end' (adapté à ' end') → logprob: -2.464291572570801
    3. ' next' → logprob: -8.4642915725708
    4. '   ' → logprob: -9.3392915725708
    5. '(next' → logprob: -11.4642915725708
    6. '[next' → logprob: -11.5892915725708
    7. ' end' → logprob: -11.7142915725708
    8. '       ' → logprob: -11.8392915725708
    9. '```' → logprob: -12.5892915725708
    10. '	next' → logprob: -12.7142915725708

Token 716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326353549957275
    2. ' =' → logprob: -1.3132635354995728
    3. '=end' → logprob: -13.938263893127441
    4. '   ' → logprob: -14.563263893127441
    5. ')' → logprob: -15.313263893127441
    6. ' ' → logprob: -16.438262939453125
    7. '=
' → logprob: -17.438262939453125
    8. '<|end|>' → logprob: -17.938262939453125
    9. '    ' → logprob: -18.063262939453125
    10. '  ' → logprob: -18.313262939453125

Token 717: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.6166903151315637e-05
    2. ' next' → logprob: -11.125016212463379
    3. '(next' → logprob: -13.875016212463379
    4. '[next' → logprob: -15.000016212463379
    5. '	next' → logprob: -16.250015258789062
    6. 'end' → logprob: -18.750015258789062
    7. ',next' → logprob: -19.000015258789062
    8. '.next' → logprob: -19.125015258789062
    9. 'Next' → logprob: -19.375015258789062
    10. '`' → logprob: -19.500015258789062

Token 718: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013289296766743064
    2. '0' → logprob: -6.626328945159912
    3. 'zero' → logprob: -14.251328468322754
    4. 'one' → logprob: -15.001328468322754
    5. '１' → logprob: -15.126328468322754
    6. '```' → logprob: -15.188828468322754
    7. '۱' → logprob: -15.876328468322754
    8. 'One' → logprob: -16.06382942199707
    9. '_' → logprob: -16.31382942199707
    10. ' ' → logprob: -16.75132942199707

Token 719: '(next' (ID: 28757)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.03896510973572731
    2. '(next' → logprob: -3.2889652252197266
    3. 'end' → logprob: -7.038965225219727
    4. 'next' → logprob: -10.163965225219727
    5. '(' → logprob: -12.038965225219727
    6. '[end' → logprob: -14.538965225219727
    7. '=end' → logprob: -14.788965225219727
    8. ' end' → logprob: -14.913965225219727
    9. ',end' → logprob: -16.413965225219727
    10. '(
' → logprob: -16.663965225219727

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010747304186224937
    2. '0' → logprob: -7.37607479095459
    3. 'end' → logprob: -7.75107479095459
    4. '(end' → logprob: -11.37607479095459
    5. '(' → logprob: -12.87607479095459
    6. 'one' → logprob: -14.68857479095459
    7. '```' → logprob: -14.81357479095459
    8. 'zero' → logprob: -14.93857479095459
    9. ' end' → logprob: -15.43857479095459
    10. '１' → logprob: -15.62607479095459

Token 721: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.12695226073265076
    2. 'end' → logprob: -2.1269521713256836
    3. '[end' → logprob: -11.001952171325684
    4. ' end' → logprob: -12.126952171325684
    5. '=end' → logprob: -14.001952171325684
    6. ',end' → logprob: -14.751952171325684
    7. '	end' → logprob: -15.751952171325684
    8. ''end' → logprob: -15.751952171325684
    9. 'END' → logprob: -15.876952171325684
    10. '.end' → logprob: -16.001953125

Token 722: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007461450062692165
    2. ')' → logprob: -5.0074615478515625
    3. '()))' → logprob: -8.132461547851562
    4. '))
' → logprob: -8.382461547851562
    5. '(end' → logprob: -8.757461547851562
    6. ')))' → logprob: -10.882461547851562
    7. '())' → logprob: -11.132461547851562
    8. '()' → logprob: -11.757461547851562
    9. '   ' → logprob: -12.132461547851562
    10. 'end' → logprob: -12.507461547851562

Token 723: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3470996022224426
    2. '       ' → logprob: -1.9720995426177979
    3. 'ret' → logprob: -1.9720995426177979
    4. '```' → logprob: -4.597099781036377
    5. ' ret' → logprob: -6.097099781036377
    6. '	ret' → logprob: -6.597099781036377
    7. '(ret' → logprob: -8.222099304199219
    8. 'if' → logprob: -8.722099304199219
    9. '$ret' → logprob: -8.722099304199219
    10. '<|end|>' → logprob: -8.847099304199219

Token 724: ' #' (ID: 1069)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.39123156666755676
    2. '   ' → logprob: -1.1412315368652344
    3. '       ' → logprob: -5.891231536865234
    4. 'if' → logprob: -7.641231536865234
    5. '```' → logprob: -7.641231536865234
    6. ' ret' → logprob: -7.891231536865234
    7. '	ret' → logprob: -8.641231536865234
    8. ' if' → logprob: -10.891231536865234
    9. '$ret' → logprob: -10.891231536865234
    10. ' ' → logprob: -11.391231536865234

Token 725: ' Update' (ID: 9152)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -6.945094355614856e-05
    2. 'if' → logprob: -10.000069618225098
    3. '   ' → logprob: -10.750069618225098
    4. ' ret' → logprob: -13.000069618225098
    5. '       ' → logprob: -16.25006866455078
    6. '	ret' → logprob: -16.25006866455078
    7. ' if' → logprob: -18.75006866455078
    8. '$ret' → logprob: -19.00006866455078
    9. '
' → logprob: -19.12506866455078
    10. '```' → logprob: -19.37506866455078

Token 726: ' the' (ID: 290)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -9.088346359931165e-07
    2. ' ret' → logprob: -14.000000953674316
    3. '(ret' → logprob: -18.375
    4. '	ret' → logprob: -18.875
    5. '$ret' → logprob: -19.25
    6. '   ' → logprob: -20.375
    7. 'max' → logprob: -21.0
    8. 'rets' → logprob: -21.0
    9. '_ret' → logprob: -21.5
    10. '.ret' → logprob: -22.875

Token 727: ' result' (ID: 1534)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -8.180258191714529e-06
    2. ' ret' → logprob: -11.750008583068848
    3. 'max' → logprob: -16.37500762939453
    4. '   ' → logprob: -17.00000762939453
    5. 'res' → logprob: -17.12500762939453
    6. 'if' → logprob: -17.62500762939453
    7. '	ret' → logprob: -18.00000762939453
    8. 'rets' → logprob: -18.00000762939453
    9. '```' → logprob: -18.12500762939453
    10. '$ret' → logprob: -18.62500762939453

Token 728: ' if' (ID: 538)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.796149492263794
    2. '   ' → logprob: -1.296149492263794
    3. ' =' → logprob: -1.296149492263794
    4. '       ' → logprob: -7.296149253845215
    5. 'ret' → logprob: -7.421149253845215
    6. '```' → logprob: -8.421149253845215
    7. ' if' → logprob: -8.796149253845215
    8. 'if' → logprob: -9.671149253845215
    9. '(ret' → logprob: -11.671149253845215
    10. ' ret' → logprob: -11.796149253845215

Token 729: ' we've' (ID: 24716)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5241172909736633
    2. 'ret' → logprob: -1.0241172313690186
    3. '(end' → logprob: -4.274117469787598
    4. ' end' → logprob: -4.274117469787598
    5. ' ret' → logprob: -4.649117469787598
    6. 'max' → logprob: -5.024117469787598
    7. '(ret' → logprob: -5.524117469787598
    8. ' max' → logprob: -7.649117469787598
    9. ' (' → logprob: -8.774117469787598
    10. '(max' → logprob: -9.149117469787598

Token 730: ' got' (ID: 3508)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9327640533447266
    2. ' found' → logprob: -1.5577640533447266
    3. ' max' → logprob: -1.8077640533447266
    4. 'found' → logprob: -2.3077640533447266
    5. 'ret' → logprob: -2.3077640533447266
    6. ' ret' → logprob: -3.8077640533447266
    7. 'got' → logprob: -5.182764053344727
    8. '   ' → logprob: -5.932764053344727
    9. '```' → logprob: -6.682764053344727
    10. ' got' → logprob: -7.057764053344727

Token 731: ' a' (ID: 261)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25051259994506836
    2. 'ret' → logprob: -2.0005125999450684
    3. ' max' → logprob: -2.7505125999450684
    4. 'end' → logprob: -4.125512599945068
    5. '   ' → logprob: -5.750512599945068
    6. ' ret' → logprob: -6.125512599945068
    7. ' end' → logprob: -7.250512599945068
    8. 'a' → logprob: -9.375513076782227
    9. ' a' → logprob: -10.125513076782227
    10. '(end' → logprob: -10.625513076782227

Token 732: ' longer' (ID: 7411)
  Prédit: 'larg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'larg' → logprob: -0.9304143786430359
    2. ' larger' → logprob: -1.3054144382476807
    3. ' longer' → logprob: -1.9304144382476807
    4. 'max' → logprob: -2.4304144382476807
    5. 'ret' → logprob: -3.1804144382476807
    6. 'long' → logprob: -3.1804144382476807
    7. 'end' → logprob: -4.930414199829102
    8. ' max' → logprob: -5.305414199829102
    9. '   ' → logprob: -6.305414199829102
    10. ' ret' → logprob: -6.805414199829102

Token 733: ' valid' (ID: 4529)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.15876001119613647
    2. 'ret' → logprob: -2.2837600708007812
    3. 'window' → logprob: -4.283760070800781
    4. 'max' → logprob: -4.533760070800781
    5. 'substring' → logprob: -4.658760070800781
    6. 'sub' → logprob: -5.408760070800781
    7. ' end' → logprob: -5.533760070800781
    8. ' window' → logprob: -7.408760070800781
    9. ' substring' → logprob: -7.408760070800781
    10. ' ret' → logprob: -7.783760070800781

Token 734: ' window' (ID: 5734)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.8364720940589905
    2. 'substring' → logprob: -0.8364720940589905
    3. ' substring' → logprob: -2.0864720344543457
    4. ' ret' → logprob: -5.336472034454346
    5. 'sub' → logprob: -6.211472034454346
    6. 'window' → logprob: -6.461472034454346
    7. ' window' → logprob: -8.211472511291504
    8. 'substr' → logprob: -8.336472511291504
    9. 'max' → logprob: -8.461472511291504
    10. 'length' → logprob: -9.711472511291504

Token 735: '
' (ID: 198)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.4254167675971985
    2. '   ' → logprob: -1.8004167079925537
    3. '=' → logprob: -2.1754167079925537
    4. ' =' → logprob: -3.1754167079925537
    5. '       ' → logprob: -4.175416946411133
    6. ' ret' → logprob: -5.300416946411133
    7. '(ret' → logprob: -5.925416946411133
    8. '```' → logprob: -7.050416946411133
    9. '	ret' → logprob: -7.425416946411133
    10. '$ret' → logprob: -7.675416946411133

Token 736: '       ' (ID: 309)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5934038758277893
    2. '   ' → logprob: -0.8434038758277893
    3. ' ret' → logprob: -4.3434038162231445
    4. '       ' → logprob: -5.7184038162231445
    5. ' if' → logprob: -7.5934038162231445
    6. 'if' → logprob: -8.093403816223145
    7. '	ret' → logprob: -9.218403816223145
    8. '(ret' → logprob: -10.218403816223145
    9. '```' → logprob: -10.343403816223145
    10. '
' → logprob: -10.968403816223145

Token 737: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -5.12127808178775e-05
    2. ' ret' → logprob: -10.500051498413086
    3. '   ' → logprob: -11.250051498413086
    4. 'if' → logprob: -11.500051498413086
    5. '	ret' → logprob: -15.250051498413086
    6. '       ' → logprob: -15.625051498413086
    7. '$ret' → logprob: -17.125051498413086
    8. ' if' → logprob: -17.375051498413086
    9. '_ret' → logprob: -18.375051498413086
    10. '```' → logprob: -19.375051498413086

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0487855039536953
    2. ' =' → logprob: -3.048785448074341
    3. '+=' → logprob: -8.798785209655762
    4. ' +=' → logprob: -10.298785209655762
    5. '=max' → logprob: -11.673785209655762
    6. '.=' → logprob: -13.048785209655762
    7. '   ' → logprob: -13.423785209655762
    8. '>' → logprob: -15.173785209655762
    9. '	' → logprob: -15.298785209655762
    10. 'max' → logprob: -15.423785209655762

Token 739: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31326213479042053
    2. 'max' → logprob: -1.3132621049880981
    3. '	max' → logprob: -15.438261985778809
    4. '(max' → logprob: -16.063262939453125
    5. '   ' → logprob: -16.938262939453125
    6. '_max' → logprob: -18.938262939453125
    7. '[max' → logprob: -18.938262939453125
    8. '    ' → logprob: -19.063262939453125
    9. '=max' → logprob: -19.063262939453125
    10. ' ' → logprob: -19.438262939453125

Token 740: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.023601124063134193
    2. 'ret' → logprob: -3.7736010551452637
    3. '(' → logprob: -8.023601531982422
    4. ' ret' → logprob: -10.523601531982422
    5. '$ret' → logprob: -14.523601531982422
    6. ' (' → logprob: -14.898601531982422
    7. '_ret' → logprob: -16.523601531982422
    8. '(
' → logprob: -16.773601531982422
    9. '	ret' → logprob: -17.023601531982422
    10. '.ret' → logprob: -17.398601531982422

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006591382436454296
    2. ',end' → logprob: -5.756591320037842
    3. 'ret' → logprob: -6.756591320037842
    4. '(ret' → logprob: -7.006591320037842
    5. '(end' → logprob: -7.131591320037842
    6. ' ,' → logprob: -8.756591796875
    7. 'end' → logprob: -8.881591796875
    8. ')' → logprob: -9.006591796875
    9. '(' → logprob: -9.381591796875
    10. ' ret' → logprob: -10.756591796875

Token 742: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020710527896881
    2. ' end' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.350207328796387
    4. '(end' → logprob: -15.475207328796387
    5. '	end' → logprob: -17.10020637512207
    6. '=end' → logprob: -18.22520637512207
    7. ' ' → logprob: -18.72520637512207
    8. '_end' → logprob: -18.72520637512207
    9. 'End' → logprob: -19.47520637512207
    10. '[end' → logprob: -19.60020637512207

Token 743: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16031764447689056
    2. '-' → logprob: -1.9103176593780518
    3. '-start' → logprob: -9.660317420959473
    4. ')' → logprob: -10.785317420959473
    5. ',' → logprob: -12.160317420959473
    6. '   ' → logprob: -13.160317420959473
    7. ' ' → logprob: -14.035317420959473
    8. '<|end|>' → logprob: -15.660317420959473
    9. '```' → logprob: -16.16031837463379
    10. ' ,' → logprob: -16.16031837463379

Token 744: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -5.836499985889532e-05
    2. ' start' → logprob: -9.7500581741333
    3. ')' → logprob: -20.125059127807617
    4. '[start' → logprob: -20.875059127807617
    5. ' ' → logprob: -21.125059127807617
    6. '	start' → logprob: -21.250059127807617
    7. 'star' → logprob: -21.375059127807617
    8. '(start' → logprob: -21.500059127807617
    9. '_start' → logprob: -21.500059127807617
    10. '0' → logprob: -21.625059127807617

Token 745: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.090760431718081e-05
    2. ')
' → logprob: -9.375090599060059
    3. '   ' → logprob: -12.500090599060059
    4. ' )' → logprob: -13.625090599060059
    5. ')return' → logprob: -15.250090599060059
    6. '```' → logprob: -15.625090599060059
    7. ')

' → logprob: -15.750090599060059
    8. '<|end|>' → logprob: -15.750090599060059
    9. '())' → logprob: -16.500091552734375
    10. '       ' → logprob: -16.625091552734375

Token 746: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0103093720972538
    2. '```' → logprob: -5.510309219360352
    3. '
' → logprob: -5.635309219360352
    4. '    
' → logprob: -6.635309219360352
    5. '<|end|>' → logprob: -6.760309219360352
    6. ')' → logprob: -9.760309219360352
    7. '\n' → logprob: -10.385309219360352
    8. '  
' → logprob: -11.135309219360352
    9. '\' → logprob: -11.260309219360352
    10. '``' → logprob: -11.385309219360352

Token 747: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150787651538849
    2. 'print' → logprob: -1.3150787353515625
    3. '```' → logprob: -6.3150787353515625
    4. ' print' → logprob: -12.315078735351562
    5. '``' → logprob: -13.690078735351562
    6. '	print' → logprob: -14.690078735351562
    7. '    
' → logprob: -14.815078735351562
    8. '
' → logprob: -16.940078735351562
    9. '       ' → logprob: -17.190078735351562
    10. '`' → logprob: -17.690078735351562

Token 748: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' print' → logprob: -17.8750057220459
    4. '```' → logprob: -18.6250057220459
    5. 'pr' → logprob: -20.3750057220459
    6. '#print' → logprob: -22.0000057220459
    7. '	print' → logprob: -22.1250057220459
    8. 'println' → logprob: -22.8750057220459
    9. 'printf' → logprob: -23.0000057220459
    10. 'prit' → logprob: -24.0000057220459

Token 749: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005059692775830626
    2. 'ret' → logprob: -7.7505059242248535
    3. '   ' → logprob: -9.500506401062012
    4. '(ret' → logprob: -14.750506401062012
    5. ' print' → logprob: -16.875505447387695
    6. '```' → logprob: -17.500505447387695
    7. '(print' → logprob: -17.875505447387695
    8. ' ret' → logprob: -19.500505447387695
    9. '    
' → logprob: -20.000505447387695
    10. '	print' → logprob: -21.375505447387695

Token 750: ' maximum' (ID: 10562)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00010425841173855588
    2. '(ret' → logprob: -9.250103950500488
    3. 'result' → logprob: -12.125103950500488
    4. 'print' → logprob: -13.125103950500488
    5. ' ret' → logprob: -14.875103950500488
    6. '   ' → logprob: -16.000104904174805
    7. 'return' → logprob: -16.750104904174805
    8. '(' → logprob: -17.250104904174805
    9. 'retval' → logprob: -17.500104904174805
    10. '$ret' → logprob: -17.625104904174805

Token 751: ' length' (ID: 5517)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.304355651140213
    2. 'print' → logprob: -1.5543556213378906
    3. '(ret' → logprob: -3.0543556213378906
    4. 'length' → logprob: -5.554355621337891
    5. '   ' → logprob: -10.92935562133789
    6. ' ret' → logprob: -11.67935562133789
    7. '()' → logprob: -12.05435562133789
    8. 'len' → logprob: -12.05435562133789
    9. '(length' → logprob: -12.80435562133789
    10. '(' → logprob: -13.30435562133789

Token 752: ' found' (ID: 2491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10030371695756912
    2. 'print' → logprob: -2.3503036499023438
    3. ' print' → logprob: -9.975303649902344
    4. '```' → logprob: -9.975303649902344
    5. '    
' → logprob: -13.475303649902344
    6. '
' → logprob: -13.600303649902344
    7. '	print' → logprob: -14.100303649902344
    8. '(print' → logprob: -15.600303649902344
    9. '``' → logprob: -15.975303649902344
    10. '       ' → logprob: -16.600303649902344

Token 753: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20271869003772736
    2. '   ' → logprob: -1.702718734741211
    3. '```' → logprob: -6.702718734741211
    4. ' print' → logprob: -9.577718734741211
    5. '``' → logprob: -12.702718734741211
    6. '	print' → logprob: -12.827718734741211
    7. '`' → logprob: -14.327718734741211
    8. '    
' → logprob: -14.327718734741211
    9. '(print' → logprob: -14.702718734741211
    10. '\' → logprob: -15.952718734741211

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006791393738240004
    2. 'print' → logprob: -5.006791591644287
    3. '```' → logprob: -9.506791114807129
    4. ' print' → logprob: -13.506791114807129
    5. '	print' → logprob: -16.006792068481445
    6. '    
' → logprob: -16.506792068481445
    7. '``' → logprob: -16.881792068481445
    8. '       ' → logprob: -18.006792068481445
    9. '`' → logprob: -19.006792068481445
    10. '
' → logprob: -20.006792068481445

Token 755: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.805981972021982e-05
    2. '   ' → logprob: -9.25009822845459
    3. '```' → logprob: -13.75009822845459
    4. ' print' → logprob: -14.00009822845459
    5. '	print' → logprob: -19.500097274780273
    6. '``' → logprob: -20.875097274780273
    7. '`' → logprob: -21.625097274780273
    8. '#print' → logprob: -23.875097274780273
    9. 'println' → logprob: -24.125097274780273
    10. '
' → logprob: -24.625097274780273

Token 756: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -4.246537173457909e-06
    2. '(' → logprob: -12.500003814697266
    3. 'ret' → logprob: -14.625003814697266
    4. '$ret' → logprob: -17.250003814697266
    5. ' (' → logprob: -17.875003814697266
    6. ' ret' → logprob: -18.625003814697266
    7. '(rest' → logprob: -19.000003814697266
    8. '(r' → logprob: -19.125003814697266
    9. '(rel' → logprob: -19.875003814697266
    10. '(re' → logprob: -20.000003814697266

Token 757: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.250014305114746
    3. '`)' → logprob: -15.500014305114746
    4. '```' → logprob: -15.500014305114746
    5. ' )' → logprob: -15.625014305114746
    6. '   ' → logprob: -15.625014305114746
    7. '())' → logprob: -16.12501335144043
    8. '')' → logprob: -16.12501335144043
    9. '")' → logprob: -16.25001335144043
    10. '()' → logprob: -16.75001335144043

Token 758: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06603407859802246
    2. 'main' → logprob: -3.3160340785980225
    3. '<|end|>' → logprob: -4.066034317016602
    4. '```' → logprob: -5.191034317016602
    5. '
' → logprob: -5.441034317016602
    6. ' if' → logprob: -8.441034317016602
    7. '(main' → logprob: -9.191034317016602
    8. '#' → logprob: -9.691034317016602
    9. '\n' → logprob: -10.566034317016602
    10. '  
' → logprob: -10.691034317016602

Token 759: ' Run' (ID: 14581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01612246409058571
    2. 'main' → logprob: -4.141122341156006
    3. '(main' → logprob: -9.891122817993164
    4. '#' → logprob: -10.766122817993164
    5. '```' → logprob: -12.141122817993164
    6. ' if' → logprob: -12.641122817993164
    7. ' main' → logprob: -13.516122817993164
    8. '
' → logprob: -13.516122817993164
    9. '<|end|>' → logprob: -13.516122817993164
    10. '__' → logprob: -13.766122817993164

Token 760: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47434988617897034
    2. 'main' → logprob: -0.974349856376648
    3. '(main' → logprob: -8.724349975585938
    4. '__' → logprob: -9.349349975585938
    5. '()
' → logprob: -11.849349975585938
    6. ' main' → logprob: -12.099349975585938
    7. '```' → logprob: -12.349349975585938
    8. '
' → logprob: -13.224349975585938
    9. '_main' → logprob: -13.474349975585938
    10. '()' → logprob: -13.724349975585938

Token 761: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08160325884819031
    2. 'if' → logprob: -2.5816032886505127
    3. '__' → logprob: -6.081603050231934
    4. ' main' → logprob: -7.831603050231934
    5. '```' → logprob: -10.706603050231934
    6. '(main' → logprob: -13.456603050231934
    7. '_main' → logprob: -13.706603050231934
    8. 'def' → logprob: -14.206603050231934
    9. ' if' → logprob: -14.206603050231934
    10. '``' → logprob: -14.706603050231934

Token 762: ' function' (ID: 1114)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008586966432631016
    2. '()
' → logprob: -7.125858783721924
    3. '()

' → logprob: -10.625858306884766
    4. '(' → logprob: -11.625858306884766
    5. '()`' → logprob: -12.125858306884766
    6. '()\' → logprob: -12.625858306884766
    7. '()<' → logprob: -13.000858306884766
    8. '();' → logprob: -13.125858306884766
    9. '()"' → logprob: -13.250858306884766
    10. '()
' → logprob: -13.625858306884766

Token 763: ' when' (ID: 1261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2557981014251709
    2. 'if' → logprob: -1.505798101425171
    3. 'main' → logprob: -5.63079833984375
    4. '(main' → logprob: -9.50579833984375
    5. '

' → logprob: -9.63079833984375
    6. '```' → logprob: -10.13079833984375
    7. '  
' → logprob: -10.50579833984375
    8. '\n' → logprob: -10.75579833984375
    9. '()
' → logprob: -11.38079833984375
    10. '    
' → logprob: -11.75579833984375

Token 764: ' the' (ID: 290)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00046558488975279033
    2. ' __' → logprob: -8.000465393066406
    3. 'if' → logprob: -9.250465393066406
    4. 'name' → logprob: -11.125465393066406
    5. '```' → logprob: -11.250465393066406
    6. 'the' → logprob: -13.750465393066406
    7. '.__' → logprob: -13.750465393066406
    8. '/__' → logprob: -14.125465393066406
    9. '(__' → logprob: -14.250465393066406
    10. '`' → logprob: -14.500465393066406

Token 765: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015188434161245823
    2. 'if' → logprob: -4.265188217163086
    3. 'name' → logprob: -7.015188217163086
    4. '```' → logprob: -9.640188217163086
    5. ' __' → logprob: -10.765188217163086
    6. '"' → logprob: -10.890188217163086
    7. ''' → logprob: -11.765188217163086
    8. '`' → logprob: -13.015188217163086
    9. ' name' → logprob: -13.140188217163086
    10. '#__' → logprob: -13.390188217163086

Token 766: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27286991477012634
    2. '__' → logprob: -1.5228699445724487
    3. 'is' → logprob: -4.022870063781738
    4. ' is' → logprob: -6.147870063781738
    5. '==' → logprob: -8.022870063781738
    6. ' if' → logprob: -9.522870063781738
    7. '_is' → logprob: -9.522870063781738
    8. ' __' → logprob: -9.772870063781738
    9. ' ==' → logprob: -9.897870063781738
    10. 'name' → logprob: -10.272870063781738

Token 767: ' executed' (ID: 30830)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011162848677486181
    2. ' executed' → logprob: -7.2511162757873535
    3. 'run' → logprob: -9.501116752624512
    4. 'name' → logprob: -9.626116752624512
    5. 'execut' → logprob: -9.626116752624512
    6. ' run' → logprob: -9.751116752624512
    7. 'called' → logprob: -10.501116752624512
    8. ' __' → logprob: -10.626116752624512
    9. '```' → logprob: -10.626116752624512
    10. 'if' → logprob: -11.251116752624512

Token 768: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.576214075088501
    2. '
' → logprob: -0.826214075088501
    3. '

' → logprob: -8.951213836669922
    4. 'main' → logprob: -9.201213836669922
    5. '```' → logprob: -10.826213836669922
    6. '  
' → logprob: -11.826213836669922
    7. ' if' → logprob: -12.201213836669922
    8. '    
' → logprob: -12.576213836669922
    9. '\
' → logprob: -13.076213836669922
    10. '
' → logprob: -13.326213836669922

Token 769: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02978033944964409
    2. 'main' → logprob: -3.529780387878418
    3. '
' → logprob: -10.779780387878418
    4. '```' → logprob: -11.654780387878418
    5. ' if' → logprob: -16.0297794342041
    6. '(main' → logprob: -16.1547794342041
    7. ' main' → logprob: -16.4047794342041
    8. '``' → logprob: -17.0297794342041
    9. '    
' → logprob: -17.5297794342041
    10. '\
' → logprob: -18.0297794342041

Token 770: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0789375975728035
    2. '__' → logprob: -2.578937530517578
    3. 'name' → logprob: -10.703937530517578
    4. '_name' → logprob: -11.203937530517578
    5. ' ' → logprob: -11.828937530517578
    6. ' ' → logprob: -13.203937530517578
    7. '___' → logprob: -14.203937530517578
    8. ' name' → logprob: -14.203937530517578
    9. ' ' → logprob: -15.078937530517578
    10. 'Name' → logprob: -15.328937530517578

Token 771: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00798596628010273
    2. ' __' → logprob: -5.007986068725586
    3. ' ==' → logprob: -6.882986068725586
    4. '==' → logprob: -9.132986068725586
    5. 'name' → logprob: -9.632986068725586
    6. '_' → logprob: -10.007986068725586
    7. '___' → logprob: -12.382986068725586
    8. '_name' → logprob: -12.632986068725586
    9. '=' → logprob: -13.132986068725586
    10. '__.__' → logprob: -13.257986068725586

Token 772: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005657802103087306
    2. '==' → logprob: -7.500566005706787
    3. '__.__' → logprob: -12.250565528869629
    4. ' ==' → logprob: -12.375565528869629
    5. '=="' → logprob: -13.375565528869629
    6. '=='' → logprob: -13.750565528869629
    7. '_' → logprob: -15.000565528869629
    8. '___' → logprob: -15.125565528869629
    9. '__('' → logprob: -15.750565528869629
    10. ' __' → logprob: -16.000566482543945

Token 773: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9518210887908936
    2. ' ==' → logprob: -1.2018210887908936
    3. '__' → logprob: -1.2018210887908936
    4. '=="' → logprob: -4.451821327209473
    5. '=='' → logprob: -6.951821327209473
    6. '==
' → logprob: -10.451821327209473
    7. '=' → logprob: -11.451821327209473
    8. '_' → logprob: -12.451821327209473
    9. '===' → logprob: -12.951821327209473
    10. '___' → logprob: -13.326821327209473

Token 774: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061987634748220444
    2. ''' → logprob: -2.8119876384735107
    3. '__' → logprob: -11.06198787689209
    4. ' "__' → logprob: -12.43698787689209
    5. ' '__' → logprob: -15.93698787689209
    6. '   ' → logprob: -17.686986923217773
    7. ''"' → logprob: -18.186986923217773
    8. '("__' → logprob: -18.186986923217773
    9. '"name' → logprob: -18.436986923217773
    10. '('__' → logprob: -18.686986923217773

Token 775: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5048530030981055e-06
    2. 'name' → logprob: -13.500001907348633
    3. ' main' → logprob: -17.375001907348633
    4. '_main' → logprob: -18.125001907348633
    5. '	main' → logprob: -21.625001907348633
    6. '(main' → logprob: -22.125001907348633
    7. '__' → logprob: -22.500001907348633
    8. '-main' → logprob: -22.625001907348633
    9. 'ma' → logprob: -22.750001907348633
    10. '.main' → logprob: -23.375001907348633

Token 776: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.38699018955230713
    2. '__' → logprob: -1.1369901895523071
    3. '__':
' → logprob: -9.136990547180176
    4. '__["' → logprob: -12.136990547180176
    5. '__
' → logprob: -13.636990547180176
    6. '=="' → logprob: -13.886990547180176
    7. '"' → logprob: -13.886990547180176
    8. '__
' → logprob: -13.886990547180176
    9. '__("' → logprob: -14.261990547180176
    10. '__.__' → logprob: -14.386990547180176

Token 777: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008748006075620651
    2. '__' → logprob: -4.7587480545043945
    3. ' main' → logprob: -9.008748054504395
    4. '"' → logprob: -12.008748054504395
    5. '_main' → logprob: -12.883748054504395
    6. '	main' → logprob: -13.383748054504395
    7. ''' → logprob: -14.883748054504395
    8. '   ' → logprob: -15.758748054504395
    9. ' __' → logprob: -16.258747100830078
    10. '(main' → logprob: -16.633747100830078

Token 778: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -22.0
    4. '_main' → logprob: -24.5
    5. '.main' → logprob: -25.5
    6. '(main' → logprob: -25.625
    7. 'Main' → logprob: -26.25
    8. 'mainwindow' → logprob: -27.5
    9. '   ' → logprob: -28.0
    10. '-main' → logprob: -29.125

Token 779: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 777
Tokens correctement prédits (1ère position, stricte): 202
Tokens correctement prédits (1ère position, avec adaptation): 226
Tokens correctement prédits (top 10): 544
Précision stricte (1ère position): 26.00%
Précision adaptée (1ère position): 29.09%
Précision (top 10): 70.01%
================================================================================
