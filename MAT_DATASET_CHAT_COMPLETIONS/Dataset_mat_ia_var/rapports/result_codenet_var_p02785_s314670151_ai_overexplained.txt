================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Lire une ligne de l'entrée utilisateur (saisie clavier), supprimer les espaces inutiles au début et à la fin puis séparer la ligne en morceaux selon les espaces.
# Pour chaque morceau, le transformer en entier grâce à int(s), et placer le résultat dans une liste.
# Cette liste contient deux éléments : le premier est n, le nombre d'éléments dans la liste suivante, et le second est k, le nombre d'opérations.
n, k = [int(s) for s in input().strip().split()]

# Lire la ligne suivante (hauteurs), supprimer les espaces en trop au début et à la fin, puis découper la chaîne selon les espaces pour obtenir chaque nombre sous forme de chaîne.
# Pour chaque chaîne obtenue, la convertir en entier avec int(s), et construire la liste H qui contient toutes ces hauteurs sous forme entière.
H = [int(s) for s in input().strip().split()]

# Vérifier si le nombre d'opérations k est supérieur ou égal au nombre d'éléments n.
# Si c'est le cas, cela signifie que nous pouvons supprimer ou ignorer tous les éléments de la liste H.
if k >= n:
    # Dans ce cas, il ne reste rien, donc le résultat est 0.
    result = 0
else:
    # Si le nombre d'opérations k est strictement inférieur au nombre d'éléments n,
    # nous devons garder certains éléments.
    
    # Trier la liste H (les hauteurs) par ordre croissant. Cela place les plus petits avant les plus grands.
    H.sort()
    
    # Pour minimiser la somme, il faut supprimer (ou ignorer) les k plus grands éléments.
    # Pour ce faire, on garde seulement les (n - k) plus petits éléments de la liste triée.
    # H[:n - k] signifie 'prendre les éléments depuis le début de H jusqu'à l'indice (n-k)-1 inclus'.
    # sum(H[:n - k]) calcule la somme de ces éléments restants.
    result = sum(H[:n - k])

# Afficher le résultat final (la somme calculée ou 0 si tout a été supprimé).
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Lire' (ID: 57624)
  → Token d'amorce (pas de prédiction)

Token 2: ' une' (ID: 2463)
  → Token d'amorce (pas de prédiction)

Token 3: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1148298904299736
    2. 'ligne' → logprob: -2.7398297786712646
    3. ' ligne' → logprob: -3.8648297786712646
    4. 'f' → logprob: -4.989830017089844
    5. '_' → logprob: -5.114830017089844
    6. 'l' → logprob: -5.989830017089844
    7. '_l' → logprob: -6.239830017089844
    8. '#' → logprob: -6.489830017089844
    9. ' ' → logprob: -7.364830017089844
    10. ' #' → logprob: -7.364830017089844

Token 4: ' de' (ID: 334)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.587490975856781
    2. '_' → logprob: -2.212491035461426
    3. '.' → logprob: -2.587491035461426
    4. '#' → logprob: -2.712491035461426
    5. 's' → logprob: -2.837491035461426
    6. '```' → logprob: -3.212491035461426
    7. '\' → logprob: -3.587491035461426
    8. '`' → logprob: -3.712491035461426
    9. '.readline' → logprob: -5.337491035461426
    10. ' =' → logprob: -5.462491035461426

Token 5: ' l' (ID: 305)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.22473187744617462
    2. 'f' → logprob: -2.349731922149658
    3. 'texte' → logprob: -2.474731922149658
    4. '#' → logprob: -4.599731922149658
    5. 'comment' → logprob: -5.474731922149658
    6. ' code' → logprob: -5.974731922149658
    7. 'entrée' → logprob: -6.474731922149658
    8. 'commande' → logprob: -6.474731922149658
    9. 'input' → logprob: -7.724731922149658
    10. '```' → logprob: -8.2247314453125

Token 6: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6639774441719055
    2. 'e' → logprob: -1.7889773845672607
    3. 'a' → logprob: -2.4139773845672607
    4. 'input' → logprob: -2.6639773845672607
    5. 'entrée' → logprob: -2.7889773845672607
    6. 'f' → logprob: -3.6639773845672607
    7. 'es' → logprob: -3.9139773845672607
    8. ''' → logprob: -4.28897762298584
    9. ''utilisateur' → logprob: -4.41397762298584
    10. '#' → logprob: -5.53897762298584

Token 7: ' utilisateur' (ID: 115595)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8930075764656067
    2. 'l' → logprob: -1.518007516860962
    3. '_' → logprob: -1.893007516860962
    4. '`' → logprob: -2.268007516860962
    5. 'i' → logprob: -3.393007516860962
    6. 'f' → logprob: -3.893007516860962
    7. '```' → logprob: -4.393007755279541
    8. 'r' → logprob: -5.268007755279541
    9. 'n' → logprob: -5.268007755279541
    10. 'line' → logprob: -5.268007755279541

Token 8: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20775626599788666
    2. 'l' → logprob: -2.207756280899048
    3. 'i' → logprob: -3.707756280899048
    4. 'user' → logprob: -4.207756042480469
    5. 'line' → logprob: -4.832756042480469
    6. 'f' → logprob: -5.332756042480469
    7. '_' → logprob: -5.332756042480469
    8. '`' → logprob: -5.332756042480469
    9. 'ligne' → logprob: -5.332756042480469
    10. 'u' → logprob: -5.957756042480469

Token 9: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006085088476538658
    2. 'input' → logprob: -5.88108491897583
    3. ' )' → logprob: -6.75608491897583
    4. '`)' → logprob: -7.25608491897583
    5. 'user' → logprob: -7.25608491897583
    6. '')' → logprob: -8.006085395812988
    7. '")' → logprob: -9.006085395812988
    8. '#' → logprob: -10.631085395812988
    9. '):' → logprob: -10.756085395812988
    10. '`' → logprob: -10.756085395812988

Token 10: 'aisie' (ID: 168958)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5389032363891602
    2. 'a' → logprob: -1.6639032363891602
    3. 'aisie' → logprob: -2.03890323638916
    4. 'r' → logprob: -2.53890323638916
    5. ' =' → logprob: -2.66390323638916
    6. 'tr' → logprob: -2.91390323638916
    7. 's' → logprob: -3.41390323638916
    8. 'tring' → logprob: -3.53890323638916
    9. 'u' → logprob: -3.66390323638916
    10. '=' → logprob: -3.66390323638916

Token 11: ' clavier' (ID: 187878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03740481659770012
    2. ' )' → logprob: -3.412404775619507
    3. '_util' → logprob: -6.787405014038086
    4. '`)' → logprob: -7.162405014038086
    5. '_' → logprob: -7.662405014038086
    6. '):' → logprob: -7.912405014038086
    7. '')' → logprob: -8.787405014038086
    8. '")' → logprob: -9.037405014038086
    9. 'e' → logprob: -9.537405014038086
    10. ' utilisateur' → logprob: -9.537405014038086

Token 12: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014609156642109156
    2. '`)' → logprob: -10.00014591217041
    3. '#' → logprob: -10.62514591217041
    4. ' )' → logprob: -11.25014591217041
    5. '):' → logprob: -11.25014591217041
    6. '')' → logprob: -11.75014591217041
    7. '")' → logprob: -11.75014591217041
    8. '```' → logprob: -12.12514591217041
    9. ')`' → logprob: -12.50014591217041
    10. ')#' → logprob: -12.62514591217041

Token 13: ' supprimer' (ID: 119553)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21287499368190765
    2. ' ' → logprob: -2.8378748893737793
    3. ' input' → logprob: -2.9628748893737793
    4. 's' → logprob: -3.5878748893737793
    5. ' =' → logprob: -4.462874889373779
    6. 'l' → logprob: -5.087874889373779
    7. '_' → logprob: -5.712874889373779
    8. 'f' → logprob: -5.712874889373779
    9. 'ligne' → logprob: -5.837874889373779
    10. '`' → logprob: -5.962874889373779

Token 14: ' les' (ID: 1341)
  Prédit: '_le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.9500240683555603
    2. '_' → logprob: -1.075024127960205
    3. '_l' → logprob: -1.450024127960205
    4. ' l' → logprob: -4.950024127960205
    5. '\' → logprob: -5.325024127960205
    6. ' ' → logprob: -5.325024127960205
    7. '_la' → logprob: -5.700024127960205
    8. ' _' → logprob: -5.700024127960205
    9. 'l' → logprob: -5.825024127960205
    10. ' les' → logprob: -7.075024127960205

Token 15: ' espaces' (ID: 98361)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6610126495361328
    2. ' espaces' → logprob: -1.6610126495361328
    3. '\' → logprob: -2.661012649536133
    4. ' \' → logprob: -2.911012649536133
    5. '#' → logprob: -2.911012649536133
    6. ''\' → logprob: -3.411012649536133
    7. '\s' → logprob: -3.786012649536133
    8. ' '\' → logprob: -4.411012649536133
    9. 'car' → logprob: -4.411012649536133
    10. 's' → logprob: -4.661012649536133

Token 16: ' inutil' (ID: 154055)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8934730291366577
    2. '.strip' → logprob: -1.2684730291366577
    3. 'input' → logprob: -2.2684731483459473
    4. 's' → logprob: -2.6434731483459473
    5. 'strip' → logprob: -3.3934731483459473
    6. '.l' → logprob: -4.018473148345947
    7. 'ligne' → logprob: -4.393473148345947
    8. '.' → logprob: -4.643473148345947
    9. 'user' → logprob: -4.768473148345947
    10. 'i' → logprob: -5.018473148345947

Token 17: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49394491314888
    2. '_' → logprob: -2.2439448833465576
    3. 'e' → logprob: -2.7439448833465576
    4. 'l' → logprob: -3.6189448833465576
    5. 'r' → logprob: -3.6189448833465576
    6. 'es' → logprob: -3.9939448833465576
    7. '=' → logprob: -3.9939448833465576
    8. 'input' → logprob: -3.9939448833465576
    9. ' ' → logprob: -4.118945121765137
    10. '.strip' → logprob: -4.493945121765137

Token 18: ' au' (ID: 2791)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5384568572044373
    2. 's' → logprob: -1.913456916809082
    3. 'input' → logprob: -2.163456916809082
    4. 'ligne' → logprob: -3.288456916809082
    5. 'user' → logprob: -3.538456916809082
    6. '_' → logprob: -4.413456916809082
    7. 'strip' → logprob: -4.538456916809082
    8. 'u' → logprob: -4.538456916809082
    9. ' ' → logprob: -4.663456916809082
    10. 'n' → logprob: -5.288456916809082

Token 19: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.16623014211654663
    2. 'd' → logprob: -2.0412302017211914
    3. 'de' → logprob: -4.916230201721191
    4. 'end' → logprob: -6.291230201721191
    5. 'tour' → logprob: -6.416230201721191
    6. 'b' → logprob: -6.416230201721191
    7. 'deb' → logprob: -6.791230201721191
    8. 'pass' → logprob: -6.916230201721191
    9. 'trim' → logprob: -6.916230201721191
    10. 'niveau' → logprob: -6.916230201721191

Token 20: ' et' (ID: 859)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16318164765834808
    2. 'input' → logprob: -3.2881815433502197
    3. 'ligne' → logprob: -3.9131815433502197
    4. 's' → logprob: -4.038181781768799
    5. 'line' → logprob: -4.038181781768799
    6. 'user' → logprob: -4.288181781768799
    7. 'x' → logprob: -5.038181781768799
    8. '```' → logprob: -5.163181781768799
    9. 'n' → logprob: -5.413181781768799
    10. '_' → logprob: -5.538181781768799

Token 21: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0935540646314621
    2. 'la' → logprob: -2.8435540199279785
    3. '#' → logprob: -3.5935540199279785
    4. ' à' → logprob: -6.5935540199279785
    5. 'a' → logprob: -6.7185540199279785
    6. 'fin' → logprob: -8.343554496765137
    7. ''à' → logprob: -8.468554496765137
    8. 'á' → logprob: -8.718554496765137
    9. ' la' → logprob: -9.093554496765137
    10. ' ' → logprob: -9.218554496765137

Token 22: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0006806228775531054
    2. 'laf' → logprob: -7.625680446624756
    3. 'lap' → logprob: -9.875680923461914
    4. ' la' → logprob: -10.000680923461914
    5. 'l' → logprob: -10.250680923461914
    6. ' ' → logprob: -11.125680923461914
    7. 'a' → logprob: -11.750680923461914
    8. 'lac' → logprob: -11.875680923461914
    9. '#' → logprob: -12.125680923461914
    10. 'f' → logprob: -12.250680923461914

Token 23: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0010139952646568418
    2. 'f' → logprob: -7.876014232635498
    3. 'la' → logprob: -8.62601375579834
    4. 'mil' → logprob: -9.37601375579834
    5. ' fin' → logprob: -9.62601375579834
    6. '#' → logprob: -9.62601375579834
    7. '```' → logprob: -9.75101375579834
    8. 'ligne' → logprob: -10.00101375579834
    9. 'a' → logprob: -10.75101375579834
    10. 'fond' → logprob: -11.00101375579834

Token 24: ' puis' (ID: 18766)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6957111954689026
    2. 's' → logprob: -1.9457111358642578
    3. 'input' → logprob: -2.070711135864258
    4. 'user' → logprob: -2.445711135864258
    5. 'ligne' → logprob: -2.945711135864258
    6. 'n' → logprob: -3.945711135864258
    7. 'line' → logprob: -4.195711135864258
    8. 'u' → logprob: -4.320711135864258
    9. '```' → logprob: -4.695711135864258
    10. 'i' → logprob: -4.945711135864258

Token 25: ' sé' (ID: 7462)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.5289122462272644
    2. ' stock' → logprob: -2.403912305831909
    3. 'stock' → logprob: -2.778912305831909
    4. 'ret' → logprob: -3.528912305831909
    5. 'l' → logprob: -3.778912305831909
    6. 'la' → logprob: -3.778912305831909
    7. 'aj' → logprob: -3.778912305831909
    8. 'ren' → logprob: -3.903912305831909
    9. 'contin' → logprob: -4.40391206741333
    10. 'print' → logprob: -4.52891206741333

Token 26: 'parer' (ID: 48041)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.34333693981170654
    2. 'r' → logprob: -1.8433369398117065
    3. 'n' → logprob: -3.468337059020996
    4. 'par' → logprob: -3.468337059020996
    5. 'parer' → logprob: -3.718337059020996
    6. 'v' → logprob: -4.843337059020996
    7. 'm' → logprob: -5.093337059020996
    8. 'pa' → logprob: -5.343337059020996
    9. 't' → logprob: -5.593337059020996
    10. 'pare' → logprob: -5.718337059020996

Token 27: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.347969114780426
    2. 's' → logprob: -2.9729690551757812
    3. ' ' → logprob: -3.3479690551757812
    4. ',' → logprob: -3.4729690551757812
    5. 'input' → logprob: -3.8479690551757812
    6. ' =' → logprob: -4.097969055175781
    7. '[' → logprob: -4.097969055175781
    8. '=' → logprob: -4.097969055175781
    9. ' la' → logprob: -4.222969055175781
    10. '```' → logprob: -4.472969055175781

Token 28: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8685634136199951
    2. 'ligne' → logprob: -1.3685634136199951
    3. ' chaîne' → logprob: -1.8685634136199951
    4. 'cha' → logprob: -2.368563413619995
    5. ' ligne' → logprob: -2.993563413619995
    6. 'phrase' → logprob: -4.868563652038574
    7. ' chaine' → logprob: -4.868563652038574
    8. ' phrase' → logprob: -6.118563652038574
    9. 'entrée' → logprob: -6.118563652038574
    10. 's' → logprob: -6.243563652038574

Token 29: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0292528867721558
    2. 's' → logprob: -2.0292530059814453
    3. '_' → logprob: -2.1542530059814453
    4. '.' → logprob: -2.4042530059814453
    5. 'm' → logprob: -3.1542530059814453
    6. ',' → logprob: -3.4042530059814453
    7. '.split' → logprob: -3.5292530059814453
    8. 'n' → logprob: -3.6542530059814453
    9. '.strip' → logprob: -3.6542530059814453
    10. '=' → logprob: -3.7792530059814453

Token 30: ' morceaux' (ID: 133321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13947030901908875
    2. ' mots' → logprob: -2.764470338821411
    3. 'tokens' → logprob: -3.139470338821411
    4. 'liste' → logprob: -4.889470100402832
    5. ' tokens' → logprob: -5.389470100402832
    6. 'mot' → logprob: -6.139470100402832
    7. '```' → logprob: -6.264470100402832
    8. ' morceaux' → logprob: -6.764470100402832
    9. ' liste' → logprob: -6.889470100402832
    10. ' une' → logprob: -7.014470100402832

Token 31: ' selon' (ID: 27571)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.36896178126335144
    2. 'ligne' → logprob: -2.493961811065674
    3. 'm' → logprob: -2.868961811065674
    4. 's' → logprob: -2.993961811065674
    5. 'input' → logprob: -3.868961811065674
    6. 'n' → logprob: -4.368961811065674
    7. '[' → logprob: -4.493961811065674
    8. 'line' → logprob: -4.993961811065674
    9. ',' → logprob: -5.118961811065674
    10. 'user' → logprob: -5.118961811065674

Token 32: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5487415790557861
    2. 'l' → logprob: -2.673741579055786
    3. ' les' → logprob: -2.673741579055786
    4. ' le' → logprob: -2.798741579055786
    5. 'le' → logprob: -2.923741579055786
    6. ' la' → logprob: -3.048741579055786
    7. ''' → logprob: -3.173741579055786
    8. 'les' → logprob: -4.173741340637207
    9. 'un' → logprob: -4.673741340637207
    10. ' '' → logprob: -4.673741340637207

Token 33: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.12562915682792664
    2. ' espaces' → logprob: -2.250629186630249
    3. 'es' → logprob: -4.75062894821167
    4. ''esp' → logprob: -6.37562894821167
    5. 'car' → logprob: -6.75062894821167
    6. '_' → logprob: -8.250629425048828
    7. 'dé' → logprob: -8.875629425048828
    8. ' esp' → logprob: -9.125629425048828
    9. 'spaces' → logprob: -9.125629425048828
    10. ''espace' → logprob: -9.625629425048828

Token 34: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.29721033573150635
    2. 'ligne' → logprob: -1.7972103357315063
    3. 'input' → logprob: -3.422210216522217
    4. 'line' → logprob: -4.297210216522217
    5. 's' → logprob: -4.297210216522217
    6. 'm' → logprob: -4.672210216522217
    7. 'user' → logprob: -4.922210216522217
    8. 'n' → logprob: -6.672210216522217
    9. '```' → logprob: -6.797210216522217
    10. 'li' → logprob: -7.047210216522217

Token 35: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2405817061662674
    2. 'ligne' → logprob: -2.865581750869751
    3. 'input' → logprob: -3.490581750869751
    4. 'line' → logprob: -3.740581750869751
    5. 's' → logprob: -3.990581750869751
    6. 'user' → logprob: -3.990581750869751
    7. '```' → logprob: -4.490581512451172
    8. 'i' → logprob: -4.615581512451172
    9. 'n' → logprob: -4.615581512451172
    10. 'm' → logprob: -4.740581512451172

Token 36: ' Pour' (ID: 13931)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.824496328830719
    2. 'ligne' → logprob: -0.949496328830719
    3. 'line' → logprob: -2.699496269226074
    4. 'input' → logprob: -2.824496269226074
    5. 'user' → logprob: -4.074496269226074
    6. 's' → logprob: -4.824496269226074
    7. ' ligne' → logprob: -5.449496269226074
    8. 'tokens' → logprob: -5.449496269226074
    9. 'entrée' → logprob: -6.324496269226074
    10. '```' → logprob: -7.074496269226074

Token 37: ' chaque' (ID: 21194)
  Prédit: ' cela'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cela' → logprob: -1.3386369943618774
    2. ' continuer' → logprob: -1.8386369943618774
    3. 'split' → logprob: -2.338636875152588
    4. ' split' → logprob: -2.338636875152588
    5. ' la' → logprob: -3.088636875152588
    6. ' chaque' → logprob: -3.338636875152588
    7. ' ce' → logprob: -3.463636875152588
    8. ' line' → logprob: -3.588636875152588
    9. 'r' → logprob: -3.713636875152588
    10. ' token' → logprob: -3.838636875152588

Token 38: ' morceau' (ID: 160026)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4632730484008789
    2. 'mot' → logprob: -1.588273048400879
    3. ' morceau' → logprob: -2.088273048400879
    4. 'élé' → logprob: -3.963273048400879
    5. ' mot' → logprob: -4.713273048400879
    6. '```' → logprob: -5.088273048400879
    7. 'part' → logprob: -6.463273048400879
    8. '#' → logprob: -6.713273048400879
    9. ' élément' → logprob: -6.713273048400879
    10. ' morceaux' → logprob: -7.588273048400879

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061973731964826584
    2. ' ,' → logprob: -3.311973810195923
    3. ':' → logprob: -5.436973571777344
    4. ' ' → logprob: -6.311973571777344
    5. ',
' → logprob: -6.436973571777344
    6. ' on' → logprob: -6.686973571777344
    7. 's' → logprob: -6.936973571777344
    8. '#' → logprob: -7.061973571777344
    9. '   ' → logprob: -7.186973571777344
    10. 'print' → logprob: -7.186973571777344

Token 40: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3212858438491821
    2. 'print' → logprob: -2.0712857246398926
    3. ' effectuer' → logprob: -2.1962857246398926
    4. 'faire' → logprob: -2.3212857246398926
    5. ' afficher' → logprob: -2.4462857246398926
    6. ' on' → logprob: -2.9462857246398926
    7. 'aj' → logprob: -3.4462857246398926
    8. ' ajouter' → logprob: -3.5712857246398926
    9. 'aff' → logprob: -3.6962857246398926
    10. ' #' → logprob: -4.071285724639893

Token 41: ' transformer' (ID: 59595)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4831078052520752
    2. ' code' → logprob: -1.7331078052520752
    3. ' #' → logprob: -2.108107805252075
    4. 's' → logprob: -2.733107805252075
    5. ' print' → logprob: -2.983107805252075
    6. 'n' → logprob: -3.108107805252075
    7. 'print' → logprob: -3.608107805252075
    8. ' traiter' → logprob: -3.608107805252075
    9. 'r' → logprob: -3.733107805252075
    10. ' mettre' → logprob: -4.233107566833496

Token 42: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9125739932060242
    2. 's' → logprob: -1.412574052810669
    3. 'm' → logprob: -2.412574052810669
    4. '_' → logprob: -2.662574052810669
    5. '.strip' → logprob: -4.03757381439209
    6. '`' → logprob: -4.28757381439209
    7. '```' → logprob: -4.28757381439209
    8. '.split' → logprob: -4.41257381439209
    9. '.' → logprob: -4.41257381439209
    10. 't' → logprob: -4.66257381439209

Token 43: ' entier' (ID: 80473)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.8666759133338928
    2. 'maj' → logprob: -1.866675853729248
    3. ' maj' → logprob: -2.491675853729248
    4. 'int' → logprob: -2.491675853729248
    5. 'une' → logprob: -2.991675853729248
    6. 'ent' → logprob: -3.116675853729248
    7. 'chaine' → logprob: -3.366675853729248
    8. 'liste' → logprob: -3.491675853729248
    9. 'un' → logprob: -3.991675853729248
    10. 'min' → logprob: -4.241675853729248

Token 44: ' grâce' (ID: 31589)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1310389041900635
    2. 'm' → logprob: -1.1310389041900635
    3. 'n' → logprob: -1.8810389041900635
    4. 's' → logprob: -2.8810389041900635
    5. 'tokens' → logprob: -3.3810389041900635
    6. 'i' → logprob: -4.006038665771484
    7. 'ligne' → logprob: -4.131038665771484
    8. '[' → logprob: -4.506038665771484
    9. 't' → logprob: -4.756038665771484
    10. '```' → logprob: -5.381038665771484

Token 45: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.018241722136735916
    2. 'à' → logprob: -5.143241882324219
    3. ' ' → logprob: -5.768241882324219
    4. ' a' → logprob: -5.893241882324219
    5. 's' → logprob: -5.893241882324219
    6. 'au' → logprob: -6.518241882324219
    7. ' au' → logprob: -7.018241882324219
    8. ''à' → logprob: -7.643241882324219
    9. '’à' → logprob: -8.643241882324219
    10. '`' → logprob: -9.018241882324219

Token 46: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34212011098861694
    2. ' int' → logprob: -1.5921201705932617
    3. ' la' → logprob: -2.7171201705932617
    4. 'la' → logprob: -4.592120170593262
    5. '`' → logprob: -4.967120170593262
    6. 'l' → logprob: -6.342120170593262
    7. '```' → logprob: -7.342120170593262
    8. ' `' → logprob: -8.967120170593262
    9. ' ' → logprob: -9.092120170593262
    10. ' l' → logprob: -9.467120170593262

Token 47: '(s' (ID: 1858)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9405522346496582
    2. 'm' → logprob: -1.3155522346496582
    3. 'n' → logprob: -1.4405522346496582
    4. 's' → logprob: -3.690552234649658
    5. 'tokens' → logprob: -3.940552234649658
    6. 'ligne' → logprob: -3.940552234649658
    7. 'data' → logprob: -5.565552234649658
    8. 'i' → logprob: -5.940552234649658
    9. 'input' → logprob: -6.065552234649658
    10. '[' → logprob: -6.190552234649658

Token 48: '),' (ID: 936)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.8590404391288757
    2. 'tr' → logprob: -1.8590404987335205
    3. '(piece' → logprob: -1.8590404987335205
    4. ')' → logprob: -2.3590404987335205
    5. '(' → logprob: -2.4840404987335205
    6. 'tring' → logprob: -3.1090404987335205
    7. ' morceau' → logprob: -4.609040260314941
    8. '(tr' → logprob: -5.234040260314941
    9. ')m' → logprob: -5.984040260314941
    10. 'egment' → logprob: -5.984040260314941

Token 49: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9323432445526123
    2. 'tokens' → logprob: -0.9323432445526123
    3. ' tokens' → logprob: -3.4323432445526123
    4. '#' → logprob: -3.8073432445526123
    5. 'n' → logprob: -4.057343482971191
    6. 'l' → logprob: -4.307343482971191
    7. 'numbers' → logprob: -4.432343482971191
    8. 'm' → logprob: -4.557343482971191
    9. '```' → logprob: -4.557343482971191
    10. 'values' → logprob: -4.682343482971191

Token 50: ' placer' (ID: 55591)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.6373715996742249
    2. ' les' → logprob: -0.8873715996742249
    3. '#' → logprob: -3.88737154006958
    4. ' créer' → logprob: -5.01237154006958
    5. 'les' → logprob: -5.13737154006958
    6. 'stock' → logprob: -5.26237154006958
    7. ' mettre' → logprob: -5.76237154006958
    8. ' #' → logprob: -6.01237154006958
    9. ' ajouter' → logprob: -6.01237154006958
    10. 'mettre' → logprob: -6.01237154006958

Token 51: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12382698059082031
    2. ' ' → logprob: -3.7488269805908203
    3. '[]' → logprob: -4.12382698059082
    4. ' dans' → logprob: -4.37382698059082
    5. 'dans' → logprob: -4.49882698059082
    6. ' les' → logprob: -4.62382698059082
    7. 'les' → logprob: -5.12382698059082
    8. ' la' → logprob: -5.24882698059082
    9. ' chaque' → logprob: -5.49882698059082
    10. '[' → logprob: -5.62382698059082

Token 52: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7078307867050171
    2. ' résultat' → logprob: -0.8328307867050171
    3. 'result' → logprob: -3.8328309059143066
    4. ' dans' → logprob: -4.457830905914307
    5. 'dans' → logprob: -4.582830905914307
    6. 'rés' → logprob: -4.707830905914307
    7. ' result' → logprob: -5.707830905914307
    8. ' résultats' → logprob: -5.832830905914307
    9. ' reste' → logprob: -6.082830905914307
    10. ' code' → logprob: -6.332830905914307

Token 53: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04721081629395485
    2. 'dans' → logprob: -3.922210931777954
    3. '[' → logprob: -4.422210693359375
    4. ' dans' → logprob: -5.422210693359375
    5. '_' → logprob: -5.922210693359375
    6. '[]' → logprob: -6.422210693359375
    7. ',' → logprob: -6.922210693359375
    8. ' =' → logprob: -6.922210693359375
    9. '=' → logprob: -7.547210693359375
    10. '`' → logprob: -8.422210693359375

Token 54: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4085623323917389
    2. 'une' → logprob: -1.2835623025894165
    3. ' la' → logprob: -3.908562421798706
    4. ' ' → logprob: -4.658562183380127
    5. ' un' → logprob: -4.908562183380127
    6. '[]' → logprob: -5.033562183380127
    7. '[' → logprob: -5.908562183380127
    8. ' a' → logprob: -6.033562183380127
    9. 'a' → logprob: -6.158562183380127
    10. 'la' → logprob: -6.533562183380127

Token 55: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1060972660779953
    2. ' liste' → logprob: -3.4810972213745117
    3. 'list' → logprob: -3.9810972213745117
    4. 'a' → logprob: -3.9810972213745117
    5. 's' → logprob: -4.356097221374512
    6. '[' → logprob: -5.606097221374512
    7. '_' → logprob: -5.981097221374512
    8. ' list' → logprob: -6.106097221374512
    9. 'lst' → logprob: -6.231097221374512
    10. 'es' → logprob: -6.356097221374512

Token 56: '.
' (ID: 558)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3862934112548828
    2. 'n' → logprob: -2.136293411254883
    3. 'ligne' → logprob: -2.886293411254883
    4. 's' → logprob: -3.636293411254883
    5. 'input' → logprob: -3.886293411254883
    6. 'm' → logprob: -4.136293411254883
    7. 'lst' → logprob: -4.261293411254883
    8. 'data' → logprob: -4.511293411254883
    9. 'ent' → logprob: -4.761293411254883
    10. '[' → logprob: -4.761293411254883

Token 57: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2911783754825592
    2. 'n' → logprob: -1.6661783456802368
    3. '[' → logprob: -3.7911784648895264
    4. 'm' → logprob: -3.9161784648895264
    5. 'i' → logprob: -5.291178226470947
    6. 'numbers' → logprob: -6.291178226470947
    7. 'lst' → logprob: -6.416178226470947
    8. 's' → logprob: -6.666178226470947
    9. 'x' → logprob: -6.666178226470947
    10. 'data' → logprob: -6.916178226470947

Token 58: ' Cette' (ID: 27383)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14050990343093872
    2. 'n' → logprob: -2.265509843826294
    3. 'i' → logprob: -5.390510082244873
    4. 'ligne' → logprob: -5.390510082244873
    5. 'm' → logprob: -6.265510082244873
    6. 'a' → logprob: -6.265510082244873
    7. 'numbers' → logprob: -6.515510082244873
    8. 'L' → logprob: -6.640510082244873
    9. 'ent' → logprob: -6.765510082244873
    10. 'input' → logprob: -6.765510082244873

Token 59: ' liste' (ID: 31719)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.170654535293579
    2. 's' → logprob: -1.170654535293579
    3. ' =' → logprob: -2.170654535293579
    4. '_' → logprob: -2.545654535293579
    5. 'n' → logprob: -2.795654535293579
    6. 'liste' → logprob: -3.920654535293579
    7. '[' → logprob: -4.170654296875
    8. ' code' → logprob: -4.295654296875
    9. '=' → logprob: -5.170654296875
    10. ' liste' → logprob: -5.295654296875

Token 60: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00959199108183384
    2. 's' → logprob: -5.384592056274414
    3. '=' → logprob: -6.009592056274414
    4. '_' → logprob: -7.009592056274414
    5. 'des' → logprob: -8.009592056274414
    6. '_codes' → logprob: -8.634592056274414
    7. '_des' → logprob: -8.759592056274414
    8. ' s' → logprob: -9.509592056274414
    9. ' ' → logprob: -9.634592056274414
    10. '=[]' → logprob: -9.759592056274414

Token 61: ' deux' (ID: 10301)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5028622150421143
    2. 'les' → logprob: -2.0028622150421143
    3. '_' → logprob: -2.7528622150421143
    4. ' la' → logprob: -2.8778622150421143
    5. ' des' → logprob: -3.6278622150421143
    6. 's' → logprob: -4.002861976623535
    7. ' ' → logprob: -4.252861976623535
    8. 'des' → logprob: -4.627861976623535
    9. 'ent' → logprob: -5.252861976623535
    10. ' une' → logprob: -5.252861976623535

Token 62: ' éléments' (ID: 57375)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07790904492139816
    2. ' _' → logprob: -3.327908992767334
    3. '_ent' → logprob: -4.327908992767334
    4. ' éléments' → logprob: -5.202908992767334
    5. 'élé' → logprob: -5.452908992767334
    6. ' nombres' → logprob: -5.452908992767334
    7. '_val' → logprob: -5.577908992767334
    8. 'val' → logprob: -6.202908992767334
    9. 'ent' → logprob: -6.202908992767334
    10. 's' → logprob: -6.827908992767334

Token 63: ' :' (ID: 712)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6957923173904419
    2. 'n' → logprob: -0.9457923173904419
    3. 'm' → logprob: -3.6957921981811523
    4. 's' → logprob: -4.195792198181152
    5. 'i' → logprob: -4.695792198181152
    6. 'a' → logprob: -4.695792198181152
    7. 'x' → logprob: -4.945792198181152
    8. 'ligne' → logprob: -5.195792198181152
    9. 'numbers' → logprob: -5.195792198181152
    10. 'input' → logprob: -5.570792198181152

Token 64: ' le' (ID: 505)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5261277556419373
    2. '[' → logprob: -1.401127815246582
    3. ' []' → logprob: -2.651127815246582
    4. ' l' → logprob: -4.526127815246582
    5. '[]' → logprob: -4.651127815246582
    6. ' input' → logprob: -4.651127815246582
    7. '[int' → logprob: -4.901127815246582
    8. 'l' → logprob: -5.151127815246582
    9. ' lst' → logprob: -5.151127815246582
    10. 'input' → logprob: -5.276127815246582

Token 65: ' premier' (ID: 15506)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5466353297233582
    2. 'nombre' → logprob: -1.546635389328003
    3. ' nombres' → logprob: -2.421635389328003
    4. 'n' → logprob: -3.046635389328003
    5. 's' → logprob: -3.171635389328003
    6. ' premier' → logprob: -4.796635150909424
    7. 'prem' → logprob: -5.421635150909424
    8. ' n' → logprob: -6.296635150909424
    9. 'a' → logprob: -6.421635150909424
    10. '1' → logprob: -6.546635150909424

Token 66: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3385593295097351
    2. ',' → logprob: -2.21355938911438
    3. ' =' → logprob: -2.33855938911438
    4. '=' → logprob: -2.96355938911438
    5. 's' → logprob: -4.963559150695801
    6. ' _' → logprob: -5.088559150695801
    7. '_token' → logprob: -5.838559150695801
    8. '[' → logprob: -6.213559150695801
    9. ' ,' → logprob: -6.463559150695801
    10. 'es' → logprob: -6.838559150695801

Token 67: ' n' (ID: 297)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.060782551765442
    2. ' l' → logprob: -1.685782551765442
    3. ' la' → logprob: -1.685782551765442
    4. 'l' → logprob: -1.935782551765442
    5. 'le' → logprob: -2.5607824325561523
    6. 'la' → logprob: -3.6857824325561523
    7. ' un' → logprob: -4.685782432556152
    8. ' nombre' → logprob: -5.310782432556152
    9. ' une' → logprob: -5.810782432556152
    10. ' ' → logprob: -5.810782432556152

Token 68: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6573980450630188
    2. 'ombres' → logprob: -1.782397985458374
    3. 'ombre' → logprob: -2.032397985458374
    4. 'bs' → logprob: -2.907397985458374
    5. ' =' → logprob: -3.532397985458374
    6. '_' → logprob: -3.907397985458374
    7. 'bres' → logprob: -4.157398223876953
    8. 'um' → logprob: -4.282398223876953
    9. 'bre' → logprob: -4.407398223876953
    10. ',' → logprob: -4.782398223876953

Token 69: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6247344017028809
    2. 'le' → logprob: -0.8747344017028809
    3. ' la' → logprob: -4.249734401702881
    4. ' n' → logprob: -4.374734401702881
    5. ' l' → logprob: -5.124734401702881
    6. 'n' → logprob: -5.374734401702881
    7. 'l' → logprob: -5.999734401702881
    8. ' #' → logprob: -6.249734401702881
    9. '#' → logprob: -6.624734401702881
    10. ' ' → logprob: -6.749734401702881

Token 70: ' nombre' (ID: 9733)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6983093023300171
    2. ' second' → logprob: -1.198309302330017
    3. 'second' → logprob: -2.1983094215393066
    4. ' deuxième' → logprob: -2.9483094215393066
    5. '#' → logprob: -3.6983094215393066
    6. ' #' → logprob: -5.698309421539307
    7. 'nombre' → logprob: -6.573309421539307
    8. ' de' → logprob: -6.573309421539307
    9. 's' → logprob: -6.698309421539307
    10. ' nombre' → logprob: -6.698309421539307

Token 71: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06225525960326195
    2. 's' → logprob: -3.1872551441192627
    3. '_de' → logprob: -5.062255382537842
    4. ' =' → logprob: -5.687255382537842
    5. '_des' → logprob: -5.812255382537842
    6. '_d' → logprob: -6.062255382537842
    7. '_s' → logprob: -6.937255382537842
    8. ' _' → logprob: -7.187255382537842
    9. ' de' → logprob: -7.687255382537842
    10. 'des' → logprob: -8.187254905700684

Token 72: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16982799768447876
    2. '_' → logprob: -1.919827938079834
    3. 'élé' → logprob: -6.294827938079834
    4. '_elements' → logprob: -6.419827938079834
    5. 's' → logprob: -6.669827938079834
    6. ' éléments' → logprob: -6.919827938079834
    7. ')' → logprob: -7.544827938079834
    8. 'é' → logprob: -8.044828414916992
    9. ''' → logprob: -8.169828414916992
    10. ' )' → logprob: -8.294828414916992

Token 73: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06370221078395844
    2. 'é' → logprob: -3.56370210647583
    3. ' ' → logprob: -4.43870210647583
    4. ' éléments' → logprob: -4.81370210647583
    5. 'elements' → logprob: -5.31370210647583
    6. ''' → logprob: -5.93870210647583
    7. 'él' → logprob: -6.68870210647583
    8. ' é' → logprob: -7.56370210647583
    9. 'ent' → logprob: -7.68870210647583
    10. ''é' → logprob: -7.68870210647583

Token 74: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -5.8961017202818766e-05
    2. 'ment' → logprob: -9.875059127807617
    3. 'm' → logprob: -12.250059127807617
    4. 'ements' → logprob: -13.750059127807617
    5. 'éments' → logprob: -14.250059127807617
    6. 'me' → logprob: -15.500059127807617
    7. 'nts' → logprob: -15.500059127807617
    8. '```' → logprob: -15.500059127807617
    9. 'mé' → logprob: -16.375059127807617
    10. 'ts' → logprob: -16.500059127807617

Token 75: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9316735863685608
    2. 'l' → logprob: -1.681673526763916
    3. 's' → logprob: -2.181673526763916
    4. ' =' → logprob: -2.181673526763916
    5. '=' → logprob: -2.306673526763916
    6. ',' → logprob: -3.681673526763916
    7. ' ' → logprob: -4.681673526763916
    8. '_' → logprob: -5.056673526763916
    9. 'm' → logprob: -5.056673526763916
    10. 'ligne' → logprob: -5.306673526763916

Token 76: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21348412334918976
    2. 'la' → logprob: -1.7134841680526733
    3. 'l' → logprob: -5.463484287261963
    4. ' l' → logprob: -5.713484287261963
    5. 'le' → logprob: -6.838484287261963
    6. ' le' → logprob: -7.213484287261963
    7. 's' → logprob: -7.463484287261963
    8. ' the' → logprob: -7.963484287261963
    9. 'une' → logprob: -8.213483810424805
    10. 'a' → logprob: -8.338483810424805

Token 77: ' liste' (ID: 31719)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8981938362121582
    2. ' input' → logprob: -1.7731938362121582
    3. 'liste' → logprob: -1.8981938362121582
    4. 'entrée' → logprob: -2.648193836212158
    5. 's' → logprob: -3.023193836212158
    6. 'lst' → logprob: -3.773193836212158
    7. 'chaine' → logprob: -3.773193836212158
    8. ' code' → logprob: -4.273193836212158
    9. 'code' → logprob: -4.398193836212158
    10. 'ligne' → logprob: -4.523193836212158

Token 78: ' suivante' (ID: 107439)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4325661063194275
    2. '_' → logprob: -2.4325661659240723
    3. 'l' → logprob: -3.0575661659240723
    4. '[' → logprob: -3.1825661659240723
    5. ' =' → logprob: -3.3075661659240723
    6. ',' → logprob: -3.4325661659240723
    7. 's' → logprob: -3.4325661659240723
    8. '=' → logprob: -3.6825661659240723
    9. 'i' → logprob: -4.932566165924072
    10. 'e' → logprob: -5.057566165924072

Token 79: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5808526277542114
    2. 'l' → logprob: -1.0808526277542114
    3. 'i' → logprob: -3.580852508544922
    4. '[' → logprob: -3.830852508544922
    5. 'd' → logprob: -4.705852508544922
    6. '#' → logprob: -4.830852508544922
    7. 's' → logprob: -5.205852508544922
    8. 'e' → logprob: -5.205852508544922
    9. 'm' → logprob: -5.705852508544922
    10. '```' → logprob: -5.705852508544922

Token 80: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21398819983005524
    2. 's' → logprob: -2.8389883041381836
    3. ' n' → logprob: -3.0889883041381836
    4. 'l' → logprob: -3.8389883041381836
    5. ',' → logprob: -3.9639883041381836
    6. '[' → logprob: -4.713988304138184
    7. ' lst' → logprob: -4.963988304138184
    8. 'lst' → logprob: -5.213988304138184
    9. ' ' → logprob: -5.463988304138184
    10. ' l' → logprob: -5.963988304138184

Token 81: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2991325855255127
    2. 'l' → logprob: -1.5491325855255127
    3. ' l' → logprob: -1.6741325855255127
    4. ' la' → logprob: -1.9241325855255127
    5. ' le' → logprob: -2.6741325855255127
    6. 'le' → logprob: -3.5491325855255127
    7. 'n' → logprob: -4.174132347106934
    8. '_' → logprob: -4.174132347106934
    9. 's' → logprob: -4.674132347106934
    10. ' n' → logprob: -5.049132347106934

Token 82: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.07833671569824219
    2. ' suivant' → logprob: -3.703336715698242
    3. 'second' → logprob: -4.078336715698242
    4. ' deuxième' → logprob: -4.578336715698242
    5. 'de' → logprob: -4.703336715698242
    6. 's' → logprob: -4.828336715698242
    7. 'n' → logprob: -6.328336715698242
    8. ' reste' → logprob: -6.828336715698242
    9. ' n' → logprob: -7.578336715698242
    10. ' code' → logprob: -8.203336715698242

Token 83: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.669681191444397
    2. ' =' → logprob: -1.919681191444397
    3. '[' → logprob: -2.1696810722351074
    4. ' ' → logprob: -2.7946810722351074
    5. ',' → logprob: -3.0446810722351074
    6. 's' → logprob: -3.2946810722351074
    7. ' ,' → logprob: -3.7946810722351074
    8. '=' → logprob: -4.794681072235107
    9. ' _' → logprob: -5.169681072235107
    10. 'n' → logprob: -5.419681072235107

Token 84: ' k' (ID: 372)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0417176485061646
    2. ' la' → logprob: -1.1667176485061646
    3. ' [' → logprob: -1.7917176485061646
    4. ' ' → logprob: -2.916717529296875
    5. '[]' → logprob: -3.916717529296875
    6. ' une' → logprob: -3.916717529296875
    7. ' []' → logprob: -4.166717529296875
    8. 'l' → logprob: -4.291717529296875
    9. ' l' → logprob: -4.291717529296875
    10. 'une' → logprob: -4.291717529296875

Token 85: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.33769750595092773
    2. '[' → logprob: -1.8376975059509277
    3. 'n' → logprob: -2.9626975059509277
    4. 'i' → logprob: -4.212697505950928
    5. '=' → logprob: -4.337697505950928
    6. 'ligne' → logprob: -4.587697505950928
    7. 'input' → logprob: -5.212697505950928
    8. '#' → logprob: -5.587697505950928
    9. 'li' → logprob: -5.837697505950928
    10. 'entr' → logprob: -5.837697505950928

Token 86: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2724376916885376
    2. ' ' → logprob: -1.7724376916885376
    3. ' la' → logprob: -2.522437572479248
    4. ' []' → logprob: -2.522437572479248
    5. '[]' → logprob: -3.022437572479248
    6. ' [' → logprob: -3.147437572479248
    7. 's' → logprob: -3.272437572479248
    8. ' =' → logprob: -3.397437572479248
    9. 'input' → logprob: -3.897437572479248
    10. 'list' → logprob: -4.272437572479248

Token 87: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4847395420074463
    2. 'nombre' → logprob: -0.9847395420074463
    3. ' reste' → logprob: -6.109739303588867
    4. ' nombres' → logprob: -6.484739303588867
    5. ' code' → logprob: -6.734739303588867
    6. 'n' → logprob: -7.109739303588867
    7. 'liste' → logprob: -7.359739303588867
    8. '_nombre' → logprob: -7.984739303588867
    9. '```' → logprob: -8.109739303588867
    10. ' liste' → logprob: -8.109739303588867

Token 88: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9057453870773315
    2. '_' → logprob: -1.4057453870773315
    3. 'de' → logprob: -2.780745506286621
    4. 'des' → logprob: -2.780745506286621
    5. ' de' → logprob: -2.905745506286621
    6. '_de' → logprob: -3.280745506286621
    7. '=' → logprob: -3.405745506286621
    8. 's' → logprob: -3.655745506286621
    9. '_des' → logprob: -3.655745506286621
    10. '_d' → logprob: -4.655745506286621

Token 89: ''op' (ID: 70747)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.7004536390304565
    2. '_' → logprob: -1.8254536390304565
    3. ''esp' → logprob: -2.325453758239746
    4. ''espace' → logprob: -2.325453758239746
    5. ''é' → logprob: -2.825453758239746
    6. 'é' → logprob: -2.950453758239746
    7. 'es' → logprob: -3.200453758239746
    8. 'és' → logprob: -3.200453758239746
    9. 'e' → logprob: -4.200453758239746
    10. 'éc' → logprob: -4.200453758239746

Token 90: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4405749440193176
    2. 'érations' → logprob: -1.3155748844146729
    3. 'e' → logprob: -3.065574884414673
    4. 'ér' → logprob: -4.190575122833252
    5. 'è' → logprob: -5.190575122833252
    6. 'ération' → logprob: -5.440575122833252
    7. 't' → logprob: -5.440575122833252
    8. 'éra' → logprob: -5.565575122833252
    9. 'er' → logprob: -6.440575122833252
    10. '#' → logprob: -7.065575122833252

Token 91: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13401103019714355
    2. 'l' → logprob: -2.7590110301971436
    3. 'n' → logprob: -3.2590110301971436
    4. '=' → logprob: -5.384011268615723
    5. '[
' → logprob: -5.634011268615723
    6. 's' → logprob: -6.009011268615723
    7. 'i' → logprob: -6.134011268615723
    8. 'input' → logprob: -6.634011268615723
    9. 'entr' → logprob: -7.009011268615723
    10. 'ligne' → logprob: -7.009011268615723

Token 92: 'n' (ID: 77)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08224271982908249
    2. 'n' → logprob: -3.332242727279663
    3. 'ligne' → logprob: -3.832242727279663
    4. 'input' → logprob: -5.582242488861084
    5. 'lst' → logprob: -5.707242488861084
    6. 'data' → logprob: -5.832242488861084
    7. '```' → logprob: -6.332242488861084
    8. 'li' → logprob: -6.457242488861084
    9. 'line' → logprob: -6.707242488861084
    10. 'i' → logprob: -6.957242488861084

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007537183351814747
    2. 's' → logprob: -6.007537364959717
    3. ' =' → logprob: -6.257537364959717
    4. ',k' → logprob: -6.757537364959717
    5. '=' → logprob: -6.882537364959717
    6. ' ,' → logprob: -8.132536888122559
    7. ',input' → logprob: -9.007536888122559
    8. ',s' → logprob: -9.382536888122559
    9. ',n' → logprob: -9.507536888122559
    10. ',l' → logprob: -9.882536888122559

Token 94: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.34878697991371155
    2. 'k' → logprob: -1.2237869501113892
    3. ' ' → logprob: -8.098787307739258
    4. '	k' → logprob: -10.973787307739258
    5. ' ' → logprob: -12.348787307739258
    6. '  ' → logprob: -12.598787307739258
    7. 'space' → logprob: -12.848787307739258
    8. '<|end|>' → logprob: -12.848787307739258
    9. ',k' → logprob: -13.723787307739258
    10. '_k' → logprob: -14.348787307739258

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28119122982025146
    2. '=' → logprob: -1.4061912298202515
    3. ',' → logprob: -10.406190872192383
    4. '=input' → logprob: -11.781190872192383
    5. '=int' → logprob: -13.656190872192383
    6. ' =
' → logprob: -14.781190872192383
    7. ' ' → logprob: -15.406190872192383
    8. ' ' → logprob: -15.531190872192383
    9. ')' → logprob: -15.781190872192383
    10. '=list' → logprob: -15.781190872192383

Token 96: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2520613968372345
    2. 'map' → logprob: -1.502061367034912
    3. 'int' → logprob: -10.37706184387207
    4. ' list' → logprob: -10.62706184387207
    5. 'list' → logprob: -10.75206184387207
    6. '[' → logprob: -10.75206184387207
    7. ' [' → logprob: -11.50206184387207
    8. '	map' → logprob: -11.62706184387207
    9. ' ' → logprob: -11.87706184387207
    10. '(map' → logprob: -12.62706184387207

Token 97: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026264708139933646
    2. ' int' → logprob: -8.250262260437012
    3. ']int' → logprob: -15.125262260437012
    4. '   ' → logprob: -15.250262260437012
    5. '```' → logprob: -15.625262260437012
    6. ']' → logprob: -15.875262260437012
    7. ' ' → logprob: -15.875262260437012
    8. '  ' → logprob: -16.000263214111328
    9. '(int' → logprob: -16.250263214111328
    10. '	int' → logprob: -16.625263214111328

Token 98: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.44107547402381897
    2. '(x' → logprob: -1.3160754442214966
    3. '(input' → logprob: -2.816075563430786
    4. '(' → logprob: -3.691075563430786
    5. 's' → logprob: -6.316075325012207
    6. '(i' → logprob: -6.816075325012207
    7. ']' → logprob: -7.691075325012207
    8. 'input' → logprob: -9.566075325012207
    9. 'x' → logprob: -10.316075325012207
    10. ')' → logprob: -10.691075325012207

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11468735337257385
    2. '.strip' → logprob: -2.239687442779541
    3. '(input' → logprob: -7.489687442779541
    4. 'strip' → logprob: -7.489687442779541
    5. '(strip' → logprob: -8.614686965942383
    6. ' )' → logprob: -8.989686965942383
    7. 'input' → logprob: -8.989686965942383
    8. '(x' → logprob: -9.239686965942383
    9. '())' → logprob: -9.864686965942383
    10. '.rstrip' → logprob: -10.364686965942383

Token 100: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6680419445037842
    2. 'for' → logprob: -1.7930419445037842
    3. ' for' → logprob: -2.293041944503784
    4. '.strip' → logprob: -2.293041944503784
    5. '(input' → logprob: -2.793041944503784
    6. 'input' → logprob: -3.418041944503784
    7. '(s' → logprob: -5.293042182922363
    8. ']' → logprob: -5.418042182922363
    9. '(x' → logprob: -5.418042182922363
    10. 'strip' → logprob: -5.668042182922363

Token 101: ' s' (ID: 265)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07890598475933075
    2. 'input' → logprob: -2.5789060592651367
    3. ' raw' → logprob: -12.453906059265137
    4. ' s' → logprob: -12.578906059265137
    5. '(input' → logprob: -12.953906059265137
    6. ' ' → logprob: -13.703906059265137
    7. 'raw' → logprob: -13.703906059265137
    8. '=input' → logprob: -13.828906059265137
    9. 's' → logprob: -13.953906059265137
    10. ' line' → logprob: -14.453906059265137

Token 102: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1000668928027153
    2. ' input' → logprob: -3.100066900253296
    3. '=input' → logprob: -3.475066900253296
    4. '(input' → logprob: -3.975066900253296
    5. '.' → logprob: -8.725067138671875
    6. ' in' → logprob: -9.600067138671875
    7. '[input' → logprob: -9.975067138671875
    8. '.input' → logprob: -9.975067138671875
    9. '<input' → logprob: -10.725067138671875
    10. '	input' → logprob: -10.850067138671875

Token 103: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34845787286758423
    2. ' input' → logprob: -1.2234578132629395
    3. '   ' → logprob: -12.598458290100098
    4. '(input' → logprob: -12.598458290100098
    5. ' ' → logprob: -13.223458290100098
    6. '=input' → logprob: -13.598458290100098
    7. '```' → logprob: -13.973458290100098
    8. '	input' → logprob: -14.598458290100098
    9. 'raw' → logprob: -14.848458290100098
    10. '<input' → logprob: -14.848458290100098

Token 104: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007130279554985464
    2. '()' → logprob: -7.250712871551514
    3. ' ().' → logprob: -12.750713348388672
    4. '()].' → logprob: -16.750713348388672
    5. ' ()' → logprob: -16.875713348388672
    6. '()]' → logprob: -17.000713348388672
    7. '(' → logprob: -17.000713348388672
    8. '()
' → logprob: -17.625713348388672
    9. '("' → logprob: -18.125713348388672
    10. '("").' → logprob: -18.125713348388672

Token 105: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889099419116974
    2. 'split' → logprob: -2.5788910388946533
    3. 'rstrip' → logprob: -13.828890800476074
    4. ' strip' → logprob: -15.703890800476074
    5. ' split' → logprob: -17.45389175415039
    6. 'replace' → logprob: -18.95389175415039
    7. '.strip' → logprob: -19.57889175415039
    8. '(strip' → logprob: -19.95389175415039
    9. 'read' → logprob: -20.70389175415039
    10. '(split' → logprob: -21.07889175415039

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009380202973261476
    2. '()' → logprob: -7.0009379386901855
    3. ' ().' → logprob: -10.625938415527344
    4. ' ()' → logprob: -13.250938415527344
    5. '(' → logprob: -15.750938415527344
    6. '().'' → logprob: -16.375938415527344
    7. '('' → logprob: -16.500938415527344
    8. '.split' → logprob: -17.250938415527344
    9. '()].' → logprob: -17.625938415527344
    10. '()[' → logprob: -17.750938415527344

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. 'strip' → logprob: -17.125
    4. 'rstrip' → logprob: -17.375
    5. 'spl' → logprob: -19.5
    6. '(split' → logprob: -19.5
    7. 'replace' → logprob: -19.875
    8. '.split' → logprob: -21.5
    9. 'plit' → logprob: -22.75
    10. '```' → logprob: -24.5

Token 108: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004116988740861416
    2. '()' → logprob: -5.504117012023926
    3. '())' → logprob: -10.879117012023926
    4. '('' → logprob: -11.129117012023926
    5. '()]
' → logprob: -13.004117012023926
    6. '(' → logprob: -13.629117012023926
    7. ' ()' → logprob: -14.754117012023926
    8. ']' → logprob: -15.254117012023926
    9. '()][' → logprob: -15.254117012023926
    10. ']()' → logprob: -15.504117012023926

Token 109: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18578843772411346
    2. ')]' → logprob: -1.9357883930206299
    3. '()]' → logprob: -3.68578839302063
    4. ')' → logprob: -9.81078815460205
    5. '])' → logprob: -9.93578815460205
    6. ' ]' → logprob: -10.18578815460205
    7. ']()' → logprob: -11.93578815460205
    8. '`]' → logprob: -11.93578815460205
    9. '']' → logprob: -13.68578815460205
    10. '()' → logprob: -13.68578815460205

Token 110: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' Lire' (ID: 57624)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3133510947227478
    2. 'lst' → logprob: -2.9383511543273926
    3. 'for' → logprob: -3.3133511543273926
    4. 'ligne' → logprob: -3.5633511543273926
    5. 'n' → logprob: -3.6883511543273926
    6. 'pass' → logprob: -3.8133511543273926
    7. 'pieces' → logprob: -4.313351154327393
    8. 'values' → logprob: -4.563351154327393
    9. 'l' → logprob: -4.563351154327393
    10. 'print' → logprob: -4.688351154327393

Token 112: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5339506268501282
    2. ' la' → logprob: -1.6589505672454834
    3. 'n' → logprob: -2.1589505672454834
    4. 'les' → logprob: -3.2839505672454834
    5. 'une' → logprob: -3.7839505672454834
    6. 'l' → logprob: -3.7839505672454834
    7. 'ligne' → logprob: -4.7839508056640625
    8. '#' → logprob: -5.5339508056640625
    9. 'le' → logprob: -5.9089508056640625
    10. 'line' → logprob: -6.1589508056640625

Token 113: ' ligne' (ID: 19583)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.32159358263015747
    2. ' liste' → logprob: -2.4465935230255127
    3. 'suite' → logprob: -2.5715935230255127
    4. 'ligne' → logprob: -2.9465935230255127
    5. ' ligne' → logprob: -3.5715935230255127
    6. 'n' → logprob: -4.821593761444092
    7. ' suite' → logprob: -4.946593761444092
    8. '#' → logprob: -5.196593761444092
    9. 'l' → logprob: -5.821593761444092
    10. 's' → logprob: -5.946593761444092

Token 114: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.006576934363692999
    2. 'su' → logprob: -5.256577014923096
    3. 'n' → logprob: -7.506577014923096
    4. ' suivant' → logprob: -8.006576538085938
    5. ' suivantes' → logprob: -8.506576538085938
    6. 's' → logprob: -8.881576538085938
    7. ' suivants' → logprob: -10.131576538085938
    8. 'de' → logprob: -10.506576538085938
    9. 'd' → logprob: -11.131576538085938
    10. ' siguiente' → logprob: -11.881576538085938

Token 115: ' (' (ID: 350)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.1843993663787842
    2. 'arr' → logprob: -1.5593993663787842
    3. 'values' → logprob: -1.8093993663787842
    4. 'vals' → logprob: -2.434399366378784
    5. 'a' → logprob: -2.809399366378784
    6. 'nums' → logprob: -3.184399366378784
    7. 'numbers' → logprob: -3.184399366378784
    8. 'l' → logprob: -4.059399604797363
    9. 'data' → logprob: -4.184399604797363
    10. 'line' → logprob: -4.309399604797363

Token 116: 'ha' (ID: 1716)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7899258136749268
    2. 'la' → logprob: -1.9149258136749268
    3. ' la' → logprob: -2.7899258136749268
    4. 'les' → logprob: -2.9149258136749268
    5. ')' → logprob: -2.9149258136749268
    6. 'vals' → logprob: -3.5399258136749268
    7. 'values' → logprob: -3.6649258136749268
    8. 'numbers' → logprob: -3.6649258136749268
    9. 's' → logprob: -3.7899258136749268
    10. 'nums' → logprob: -4.414925575256348

Token 117: 'uteurs' (ID: 65574)
  Prédit: 'ute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.248093843460083
    2. 'uteur' → logprob: -1.623093843460083
    3. 'ut' → logprob: -5.248093605041504
    4. '#' → logprob: -5.623093605041504
    5. 'utes' → logprob: -5.748093605041504
    6. 's' → logprob: -6.123093605041504
    7. 'r' → logprob: -6.373093605041504
    8. 'te' → logprob: -6.623093605041504
    9. 'b' → logprob: -6.873093605041504
    10. 'tte' → logprob: -7.373093605041504

Token 118: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06550968438386917
    2. 'des' → logprob: -3.440509796142578
    3. ' des' → logprob: -4.065509796142578
    4. ' =' → logprob: -5.690509796142578
    5. 'n' → logprob: -5.815509796142578
    6. '),' → logprob: -6.065509796142578
    7. '#' → logprob: -6.815509796142578
    8. ' )' → logprob: -6.940509796142578
    9. 'he' → logprob: -7.690509796142578
    10. 's' → logprob: -7.690509796142578

Token 119: ' supprimer' (ID: 119553)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.44076135754585266
    2. 'he' → logprob: -1.1907613277435303
    3. 'h' → logprob: -3.6907613277435303
    4. ' heights' → logprob: -4.440761566162109
    5. 'height' → logprob: -5.815761566162109
    6. 'a' → logprob: -6.065761566162109
    7. 'lst' → logprob: -6.065761566162109
    8. 'l' → logprob: -6.565761566162109
    9. ' h' → logprob: -6.940761566162109
    10. 'val' → logprob: -7.065761566162109

Token 120: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3607901334762573
    2. 'les' → logprob: -1.6107901334762573
    3. '()' → logprob: -2.360790252685547
    4. '().' → logprob: -5.110790252685547
    5. '   ' → logprob: -8.110790252685547
    6. ' inutile' → logprob: -8.360790252685547
    7. 'aux' → logprob: -8.485790252685547
    8. ' =' → logprob: -8.610790252685547
    9. 'des' → logprob: -8.860790252685547
    10. ' ' → logprob: -8.860790252685547

Token 121: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5770569443702698
    2. 'esp' → logprob: -0.8270569443702698
    3. 'spaces' → logprob: -7.452056884765625
    4. 'es' → logprob: -7.827056884765625
    5. '#' → logprob: -9.452056884765625
    6. ' esp' → logprob: -11.577056884765625
    7. ' espace' → logprob: -11.827056884765625
    8. ''esp' → logprob: -11.952056884765625
    9. ' spaces' → logprob: -11.952056884765625
    10. 'n' → logprob: -12.077056884765625

Token 122: ' en' (ID: 469)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8140905499458313
    2. ' inutil' → logprob: -1.3140904903411865
    3. ' au' → logprob: -2.3140904903411865
    4. 'inut' → logprob: -2.6890904903411865
    5. ' =' → logprob: -3.0640904903411865
    6. 'in' → logprob: -3.0640904903411865
    7. '=' → logprob: -5.189090728759766
    8. ' inutile' → logprob: -5.564090728759766
    9. 'sup' → logprob: -5.689090728759766
    10. '_in' → logprob: -5.814090728759766

Token 123: ' trop' (ID: 14765)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.1819078028202057
    2. 't' → logprob: -2.306907892227173
    3. 'd' → logprob: -3.931907892227173
    4. ' début' → logprob: -4.306907653808594
    5. 'de' → logprob: -4.556907653808594
    6. ' trop' → logprob: -4.931907653808594
    7. 'ex' → logprob: -5.431907653808594
    8. 'fin' → logprob: -5.556907653808594
    9. 'deb' → logprob: -5.806907653808594
    10. 'dess' → logprob: -6.931907653808594

Token 124: ' au' (ID: 2791)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.28259795904159546
    2. ',' → logprob: -2.1575980186462402
    3. 'he' → logprob: -2.1575980186462402
    4. 'n' → logprob: -4.40759801864624
    5. 'height' → logprob: -6.65759801864624
    6. 'h' → logprob: -7.78259801864624
    7. ' heights' → logprob: -8.282597541809082
    8. 'line' → logprob: -9.157597541809082
    9. 'et' → logprob: -9.407597541809082
    10. ' ,' → logprob: -9.407597541809082

Token 125: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.0950985923409462
    2. ' début' → logprob: -2.7200984954833984
    3. 'd' → logprob: -4.970098495483398
    4. 'bout' → logprob: -5.095098495483398
    5. 'begin' → logprob: -5.720098495483398
    6. 'b' → logprob: -5.970098495483398
    7. 'bord' → logprob: -6.470098495483398
    8. '#' → logprob: -7.095098495483398
    9. 'de' → logprob: -7.095098495483398
    10. 'a' → logprob: -7.720098495483398

Token 126: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.01162831299006939
    2. ' et' → logprob: -4.761628150939941
    3. ',' → logprob: -6.386628150939941
    4. 'and' → logprob: -7.636628150939941
    5. ' and' → logprob: -7.761628150939941
    6. '()' → logprob: -9.261628150939941
    7. '().' → logprob: -10.136628150939941
    8. 'k' → logprob: -10.261628150939941
    9. ' ' → logprob: -10.261628150939941
    10. 'n' → logprob: -10.386628150939941

Token 127: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.006989934481680393
    2. ' à' → logprob: -5.1319899559021
    3. 'la' → logprob: -7.6319899559021
    4. '#' → logprob: -7.7569899559021
    5. 'a' → logprob: -9.631989479064941
    6. 'et' → logprob: -10.256989479064941
    7. 'á' → logprob: -11.881989479064941
    8. ' ' → logprob: -12.006989479064941
    9. '   ' → logprob: -12.006989479064941
    10. ''à' → logprob: -12.006989479064941

Token 128: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0046802726574242115
    2. ' la' → logprob: -5.379680156707764
    3. 'fin' → logprob: -10.254680633544922
    4. 'a' → logprob: -11.004680633544922
    5. ' ' → logprob: -13.129680633544922
    6. 'à' → logprob: -13.629680633544922
    7. '   ' → logprob: -14.129680633544922
    8. ' ' → logprob: -14.254680633544922
    9. '```' → logprob: -14.379680633544922
    10. '  ' → logprob: -14.379680633544922

Token 129: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -4.084206375409849e-05
    2. 'f' → logprob: -10.250041007995605
    3. ' fin' → logprob: -13.250041007995605
    4. 'fi' → logprob: -13.875041007995605
    5. '#' → logprob: -14.000041007995605
    6. 'fim' → logprob: -14.375041007995605
    7. 'finish' → logprob: -15.500041007995605
    8. 'tail' → logprob: -15.625041007995605
    9. 'trim' → logprob: -15.875041007995605
    10. 'fond' → logprob: -16.00004005432129

Token 130: ',' (ID: 11)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.11474868655204773
    2. 'he' → logprob: -2.86474871635437
    3. ',' → logprob: -3.11474871635437
    4. 'height' → logprob: -5.364748477935791
    5. 'h' → logprob: -6.989748477935791
    6. 'n' → logprob: -8.48974895477295
    7. '#' → logprob: -8.73974895477295
    8. 'val' → logprob: -8.73974895477295
    9. 'values' → logprob: -9.11474895477295
    10. 's' → logprob: -9.48974895477295

Token 131: ' puis' (ID: 18766)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.09648272395133972
    2. 'he' → logprob: -3.096482753753662
    3. 'h' → logprob: -3.471482753753662
    4. '#' → logprob: -4.721482753753662
    5. 'height' → logprob: -6.096482753753662
    6. 'lst' → logprob: -7.096482753753662
    7. 'l' → logprob: -7.346482753753662
    8. 'val' → logprob: -7.596482753753662
    9. ' heights' → logprob: -7.596482753753662
    10. 'n' → logprob: -7.846482753753662

Token 132: ' décou' (ID: 68302)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.14260269701480865
    2. 'he' → logprob: -2.7676026821136475
    3. 'split' → logprob: -2.8926026821136475
    4. '#' → logprob: -4.892602920532227
    5. 'h' → logprob: -6.767602920532227
    6. 'height' → logprob: -7.017602920532227
    7. 'se' → logprob: -7.267602920532227
    8. 'n' → logprob: -7.642602920532227
    9. 'les' → logprob: -7.892602920532227
    10. ' split' → logprob: -7.892602920532227

Token 133: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00019483851792756468
    2. 'p' → logprob: -8.625194549560547
    3. 'pe' → logprob: -11.750194549560547
    4. 'page' → logprob: -12.250194549560547
    5. ' per' → logprob: -14.000194549560547
    6. 'pper' → logprob: -14.625194549560547
    7. 'пер' → logprob: -15.000194549560547
    8. '```' → logprob: -16.250194549560547
    9. 'pa' → logprob: -16.375194549560547
    10. 'pé' → logprob: -16.625194549560547

Token 134: ' la' (ID: 557)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.2817973494529724
    2. 'en' → logprob: -2.031797409057617
    3. 'la' → logprob: -2.531797409057617
    4. 'he' → logprob: -3.906797409057617
    5. 'les' → logprob: -4.906797409057617
    6. 'h' → logprob: -5.906797409057617
    7. '#' → logprob: -6.281797409057617
    8. 'height' → logprob: -7.031797409057617
    9. ' en' → logprob: -7.531797409057617
    10. ' la' → logprob: -7.781797409057617

Token 135: ' chaîne' (ID: 89288)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.1765442043542862
    2. 'ligne' → logprob: -2.051544189453125
    3. 'input' → logprob: -4.426544189453125
    4. 'liste' → logprob: -5.301544189453125
    5. 'l' → logprob: -5.426544189453125
    6. 'line' → logprob: -5.426544189453125
    7. 'chaine' → logprob: -5.926544189453125
    8. 'h' → logprob: -6.926544189453125
    9. 'val' → logprob: -7.426544189453125
    10. 's' → logprob: -7.801544189453125

Token 136: ' selon' (ID: 27571)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.6851308345794678
    2. 'he' → logprob: -1.0601308345794678
    3. 'en' → logprob: -1.9351308345794678
    4. 'h' → logprob: -6.185131072998047
    5. 'height' → logprob: -6.685131072998047
    6. ',' → logprob: -7.685131072998047
    7. '#' → logprob: -8.185131072998047
    8. ' en' → logprob: -8.435131072998047
    9. '```' → logprob: -9.060131072998047
    10. 'n' → logprob: -9.185131072998047

Token 137: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.18589019775390625
    2. ' les' → logprob: -1.8108901977539062
    3. ''' → logprob: -6.935890197753906
    4. '()' → logprob: -7.060890197753906
    5. '```' → logprob: -7.060890197753906
    6. 'es' → logprob: -7.310890197753906
    7. 'spaces' → logprob: -7.560890197753906
    8. 'esp' → logprob: -7.935890197753906
    9. 'des' → logprob: -7.935890197753906
    10. ''esp' → logprob: -8.185890197753906

Token 138: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.02246551401913166
    2. ' espaces' → logprob: -4.147465705871582
    3. ''esp' → logprob: -5.147465705871582
    4. 'es' → logprob: -7.897465705871582
    5. 'spaces' → logprob: -8.772465705871582
    6. '’esp' → logprob: -10.272465705871582
    7. ''espace' → logprob: -10.647465705871582
    8. ''' → logprob: -13.647465705871582
    9. 'space' → logprob: -13.647465705871582
    10. 's' → logprob: -13.647465705871582

Token 139: ' pour' (ID: 1930)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.44029501080513
    2. 'he' → logprob: -1.0652949810028076
    3. 'h' → logprob: -4.815295219421387
    4. 'height' → logprob: -5.815295219421387
    5. 'a' → logprob: -9.440295219421387
    6. 'n' → logprob: -9.565295219421387
    7. ',' → logprob: -9.940295219421387
    8. 't' → logprob: -10.815295219421387
    9. '#' → logprob: -10.940295219421387
    10. 'arr' → logprob: -11.065295219421387

Token 140: ' obtenir' (ID: 54423)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4349665939807892
    2. 'ob' → logprob: -1.6849665641784668
    3. 'en' → logprob: -2.684966564178467
    4. ' obtenir' → logprob: -3.809966564178467
    5. 'n' → logprob: -4.434966564178467
    6. '#' → logprob: -4.684966564178467
    7. 'transform' → logprob: -4.684966564178467
    8. 'extra' → logprob: -5.059966564178467
    9. 'ha' → logprob: -5.059966564178467
    10. 'l' → logprob: -5.184966564178467

Token 141: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9017848372459412
    2. 'la' → logprob: -0.9017848372459412
    3. 'une' → logprob: -1.776784896850586
    4. 'n' → logprob: -4.276784896850586
    5. 'ha' → logprob: -6.526784896850586
    6. ' une' → logprob: -6.901784896850586
    7. ' la' → logprob: -7.276784896850586
    8. '#' → logprob: -7.776784896850586
    9. 'des' → logprob: -7.901784896850586
    10. 'a' → logprob: -8.151784896850586

Token 142: ' nombre' (ID: 9733)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.058224838227033615
    2. 'h' → logprob: -3.43322491645813
    3. 'élé' → logprob: -4.808224678039551
    4. 'height' → logprob: -4.933224678039551
    5. ' hauteur' → logprob: -5.933224678039551
    6. 'element' → logprob: -6.433224678039551
    7. 'nombre' → logprob: -6.808224678039551
    8. 'val' → logprob: -6.808224678039551
    9. 's' → logprob: -7.933224678039551
    10. 'tail' → logprob: -8.05822467803955

Token 143: ' sous' (ID: 14487)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.19550663232803345
    2. 'he' → logprob: -1.8205065727233887
    3. 'h' → logprob: -4.820506572723389
    4. 'height' → logprob: -6.070506572723389
    5. 's' → logprob: -6.695506572723389
    6. '#' → logprob: -6.945506572723389
    7. 'n' → logprob: -6.945506572723389
    8. 'a' → logprob: -8.070507049560547
    9. 't' → logprob: -8.320507049560547
    10. ',' → logprob: -8.695507049560547

Token 144: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.05961853638291359
    2. ' forme' → logprob: -3.0596184730529785
    3. 'form' → logprob: -5.0596184730529785
    4. 'chaine' → logprob: -5.6846184730529785
    5. 'la' → logprob: -6.9346184730529785
    6. 'forma' → logprob: -9.684618949890137
    7. 'formes' → logprob: -10.434618949890137
    8. 'string' → logprob: -10.434618949890137
    9. 'cha' → logprob: -10.809618949890137
    10. '-form' → logprob: -10.934618949890137

Token 145: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41533926129341125
    2. 'de' → logprob: -1.7903392314910889
    3. ' d' → logprob: -1.9153392314910889
    4. ' de' → logprob: -3.915339231491089
    5. 'def' → logprob: -6.290339469909668
    6. 'str' → logprob: -6.665339469909668
    7. 's' → logprob: -6.915339469909668
    8. ' =' → logprob: -8.040339469909668
    9. '=d' → logprob: -8.290339469909668
    10. '=str' → logprob: -8.790339469909668

Token 146: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.0832664966583252
    2. 'cha' → logprob: -3.083266496658325
    3. 'str' → logprob: -3.833266496658325
    4. 'string' → logprob: -4.583266258239746
    5. 's' → logprob: -6.333266258239746
    6. ' chaîne' → logprob: -8.708266258239746
    7. 'chain' → logprob: -8.708266258239746
    8. 'texte' → logprob: -9.458266258239746
    9. 'une' → logprob: -10.708266258239746
    10. 'ch' → logprob: -11.958266258239746

Token 147: '.
' (ID: 558)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.15371131896972656
    2. 'he' → logprob: -2.0287113189697266
    3. 'h' → logprob: -5.153711318969727
    4. 'height' → logprob: -6.153711318969727
    5. 'n' → logprob: -7.028711318969727
    6. ',' → logprob: -7.028711318969727
    7. 's' → logprob: -8.278711318969727
    8. 'a' → logprob: -8.778711318969727
    9. 't' → logprob: -8.903711318969727
    10. '#' → logprob: -9.403711318969727

Token 148: '#' (ID: 2)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.43473145365715027
    2. 'he' → logprob: -1.0597314834594727
    3. 'h' → logprob: -5.684731483459473
    4. 'height' → logprob: -6.559731483459473
    5. 'a' → logprob: -7.809731483459473
    6. 'alt' → logprob: -9.059731483459473
    7. '```' → logprob: -9.309731483459473
    8. 'n' → logprob: -9.684731483459473
    9. 'arr' → logprob: -9.809731483459473
    10. 'hs' → logprob: -9.809731483459473

Token 149: ' Pour' (ID: 13931)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.6387245059013367
    2. 'he' → logprob: -0.7637245059013367
    3. 'h' → logprob: -5.763724327087402
    4. 'height' → logprob: -6.513724327087402
    5. 'a' → logprob: -8.388724327087402
    6. ' heights' → logprob: -8.763724327087402
    7. 'alt' → logprob: -9.013724327087402
    8. 'hs' → logprob: -9.138724327087402
    9. 'lst' → logprob: -9.388724327087402
    10. '#' → logprob: -9.638724327087402

Token 150: ' chaque' (ID: 21194)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7796130776405334
    2. 'ha' → logprob: -1.2796130180358887
    3. 'he' → logprob: -1.4046130180358887
    4. 'height' → logprob: -5.404613018035889
    5. 's' → logprob: -5.779613018035889
    6. 'H' → logprob: -5.904613018035889
    7. ' h' → logprob: -6.279613018035889
    8. 'hs' → logprob: -7.154613018035889
    9. ' heights' → logprob: -7.279613018035889
    10. 'l' → logprob: -7.279613018035889

Token 151: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3732128441333771
    2. 'h' → logprob: -1.3732128143310547
    3. 'ha' → logprob: -3.1232128143310547
    4. ' s' → logprob: -5.498212814331055
    5. 'height' → logprob: -5.498212814331055
    6. ' hauteur' → logprob: -5.998212814331055
    7. ' h' → logprob: -6.623212814331055
    8. 'élé' → logprob: -7.248212814331055
    9. 'i' → logprob: -7.748212814331055
    10. 'e' → logprob: -9.248212814331055

Token 152: ' obten' (ID: 28150)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.24191810190677643
    2. 'ha' → logprob: -2.3669180870056152
    3. ',' → logprob: -2.9919180870056152
    4. 'h' → logprob: -3.3669180870056152
    5. 'n' → logprob: -4.241918087005615
    6. 's' → logprob: -4.866918087005615
    7. '#' → logprob: -5.116918087005615
    8. 'en' → logprob: -5.991918087005615
    9. 'de' → logprob: -6.741918087005615
    10. 'height' → logprob: -7.366918087005615

Token 153: 'ue' (ID: 466)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.4178970158100128
    2. '=' → logprob: -1.9178969860076904
    3. 'à' → logprob: -2.7928969860076904
    4. '=s' → logprob: -2.9178969860076904
    5. 'ant' → logprob: -3.9178969860076904
    6. 'enter' → logprob: -4.6678972244262695
    7. 'ancer' → logprob: -5.2928972244262695
    8. '=int' → logprob: -5.4178972244262695
    9. 'vir' → logprob: -5.5428972244262695
    10. 'int' → logprob: -5.6678972244262695

Token 154: ',' (ID: 11)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.4830016791820526
    2. ',' → logprob: -1.108001708984375
    3. 'ha' → logprob: -3.108001708984375
    4. 'n' → logprob: -5.858001708984375
    5. ':' → logprob: -6.358001708984375
    6. ' heights' → logprob: -7.108001708984375
    7. 'height' → logprob: -7.358001708984375
    8. '#' → logprob: -7.608001708984375
    9. ' ,' → logprob: -7.858001708984375
    10. 'h' → logprob: -7.983001708984375

Token 155: ' la' (ID: 557)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.6726967096328735
    2. ' n' → logprob: -1.9226967096328735
    3. 'n' → logprob: -2.172696590423584
    4. 'int' → logprob: -2.172696590423584
    5. ' convertir' → logprob: -2.172696590423584
    6. 'convert' → logprob: -2.797696590423584
    7. 'ha' → logprob: -3.047696590423584
    8. ' heights' → logprob: -3.172696590423584
    9. ' convert' → logprob: -3.422696590423584
    10. ' on' → logprob: -3.797696590423584

Token 156: ' convertir' (ID: 79223)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.28738200664520264
    2. 'transform' → logprob: -1.6623820066452026
    3. 'liste' → logprob: -3.912382125854492
    4. 'convert' → logprob: -4.787382125854492
    5. 'he' → logprob: -5.037382125854492
    6. '#' → logprob: -5.037382125854492
    7. 'height' → logprob: -5.787382125854492
    8. 'placer' → logprob: -6.162382125854492
    9. 'list' → logprob: -6.412382125854492
    10. 'val' → logprob: -6.787382125854492

Token 157: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.10027740150690079
    2. ' en' → logprob: -2.3502774238586426
    3. 'int' → logprob: -10.975276947021484
    4. '=' → logprob: -11.600276947021484
    5. '(en' → logprob: -11.725276947021484
    6. 'ens' → logprob: -11.975276947021484
    7. 'n' → logprob: -12.100276947021484
    8. '_en' → logprob: -12.100276947021484
    9. '[int' → logprob: -12.975276947021484
    10. '=en' → logprob: -12.975276947021484

Token 158: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018590595573186874
    2. 'ent' → logprob: -4.018590450286865
    3. ' int' → logprob: -8.143590927124023
    4. '[int' → logprob: -9.518590927124023
    5. ' entier' → logprob: -9.643590927124023
    6. '=int' → logprob: -12.518590927124023
    7. '<int' → logprob: -13.018590927124023
    8. 'nombre' → logprob: -13.643590927124023
    9. '(int' → logprob: -13.893590927124023
    10. ' ent' → logprob: -14.143590927124023

Token 159: ' avec' (ID: 3937)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.47826263308525085
    2. 'he' → logprob: -0.9782626628875732
    3. 'h' → logprob: -6.728262424468994
    4. 'height' → logprob: -6.853262424468994
    5. 'n' → logprob: -7.728262424468994
    6. 'a' → logprob: -7.853262424468994
    7. 't' → logprob: -7.978262424468994
    8. ',' → logprob: -8.353262901306152
    9. 's' → logprob: -9.478262901306152
    10. ':' → logprob: -9.603262901306152

Token 160: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015203376533463597
    2. ' int' → logprob: -6.501520156860352
    3. '[int' → logprob: -11.251520156860352
    4. '`' → logprob: -13.001520156860352
    5. '```' → logprob: -13.876520156860352
    6. '=int' → logprob: -14.751520156860352
    7. '(int' → logprob: -14.876520156860352
    8. 'map' → logprob: -15.626520156860352
    9. '<int' → logprob: -15.751520156860352
    10. ']int' → logprob: -15.876520156860352

Token 161: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.236811637878418
    2. 'he' → logprob: -1.236811637878418
    3. 's' → logprob: -1.611811637878418
    4. '(s' → logprob: -2.236811637878418
    5. 'ha' → logprob: -2.986811637878418
    6. '(h' → logprob: -3.736811637878418
    7. 'n' → logprob: -4.236811637878418
    8. '_he' → logprob: -5.236811637878418
    9. '(n' → logprob: -5.611811637878418
    10. '(height' → logprob: -5.861811637878418

Token 162: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6456420421600342
    2. ')]' → logprob: -0.7706420421600342
    3. ')].' → logprob: -4.895642280578613
    4. ').' → logprob: -6.270642280578613
    5. '())' → logprob: -6.895642280578613
    6. '),' → logprob: -7.020642280578613
    7. ')],' → logprob: -8.020642280578613
    8. ')])' → logprob: -8.145642280578613
    9. ')]
' → logprob: -8.270642280578613
    10. '()' → logprob: -8.520642280578613

Token 163: ' et' (ID: 859)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.3698386251926422
    2. 'he' → logprob: -1.2448385953903198
    3. 'h' → logprob: -4.619838714599609
    4. 'height' → logprob: -5.494838714599609
    5. 'a' → logprob: -5.869838714599609
    6. 'lst' → logprob: -7.119838714599609
    7. 'n' → logprob: -7.619838714599609
    8. ' heights' → logprob: -7.869838714599609
    9. 'arr' → logprob: -7.994838714599609
    10. 'l' → logprob: -8.11983871459961

Token 164: ' construire' (ID: 92473)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.0427136421203613
    2. 'placer' → logprob: -1.5427136421203613
    3. 'ha' → logprob: -2.0427136421203613
    4. '#' → logprob: -2.4177136421203613
    5. ' placer' → logprob: -2.6677136421203613
    6. ' heights' → logprob: -3.2927136421203613
    7. 'n' → logprob: -3.7927136421203613
    8. ' place' → logprob: -4.542713642120361
    9. 'place' → logprob: -4.667713642120361
    10. 'mettre' → logprob: -4.792713642120361

Token 165: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.27895474433898926
    2. 'la' → logprob: -2.1539547443389893
    3. 'une' → logprob: -2.7789547443389893
    4. ' une' → logprob: -2.7789547443389893
    5. '[]' → logprob: -7.27895450592041
    6. '[' → logprob: -7.40395450592041
    7. 'a' → logprob: -7.77895450592041
    8. 'liste' → logprob: -8.15395450592041
    9. 'n' → logprob: -8.40395450592041
    10. 'l' → logprob: -8.40395450592041

Token 166: ' liste' (ID: 31719)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.4082987904548645
    2. 'he' → logprob: -1.7832987308502197
    3. 'lst' → logprob: -2.2832987308502197
    4. 'liste' → logprob: -3.1582987308502197
    5. 'l' → logprob: -5.158298969268799
    6. 'h' → logprob: -5.408298969268799
    7. 'a' → logprob: -6.033298969268799
    8. 'list' → logprob: -6.033298969268799
    9. 'height' → logprob: -6.158298969268799
    10. 'L' → logprob: -7.033298969268799

Token 167: ' H' (ID: 487)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.21949486434459686
    2. 'he' → logprob: -1.8444948196411133
    3. 'h' → logprob: -3.4694948196411133
    4. 'a' → logprob: -5.594494819641113
    5. ' =' → logprob: -6.469494819641113
    6. '=' → logprob: -6.844494819641113
    7. 'height' → logprob: -7.719494819641113
    8. 't' → logprob: -8.969494819641113
    9. 'n' → logprob: -9.094494819641113
    10. '#' → logprob: -9.219494819641113

Token 168: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04900221526622772
    2. ' =' → logprob: -3.049002170562744
    3. 'H' → logprob: -7.799002170562744
    4. '=[' → logprob: -13.424002647399902
    5. 's' → logprob: -13.799002647399902
    6. '=
' → logprob: -14.549002647399902
    7. 'n' → logprob: -14.924002647399902
    8. '=[]' → logprob: -14.924002647399902
    9. '=[]
' → logprob: -15.549002647399902
    10. ' H' → logprob: -16.424001693725586

Token 169: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14990590512752533
    2. 'cont' → logprob: -2.0249059200286865
    3. ' contient' → logprob: -5.649905681610107
    4. ' =' → logprob: -6.149905681610107
    5. 'contains' → logprob: -7.899905681610107
    6. '=[' → logprob: -8.024906158447266
    7. '[' → logprob: -9.149906158447266
    8. 's' → logprob: -9.149906158447266
    9. '_cont' → logprob: -9.149906158447266
    10. 'contain' → logprob: -9.399906158447266

Token 170: ' toutes' (ID: 17502)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0004236435634084046
    2. '[' → logprob: -8.625423431396484
    3. '[n' → logprob: -8.875423431396484
    4. 'int' → logprob: -10.500423431396484
    5. 'les' → logprob: -10.625423431396484
    6. 'n' → logprob: -10.875423431396484
    7. '[len' → logprob: -12.000423431396484
    8. '[str' → logprob: -12.125423431396484
    9. '[i' → logprob: -12.500423431396484
    10. 'l' → logprob: -12.750423431396484

Token 171: ' ces' (ID: 10532)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0004271004581823945
    2. '(int' → logprob: -8.25042724609375
    3. 'int' → logprob: -9.50042724609375
    4. 'les' → logprob: -10.12542724609375
    5. '([' → logprob: -10.62542724609375
    6. '[' → logprob: -10.87542724609375
    7. '=int' → logprob: -13.75042724609375
    8. 'l' → logprob: -13.75042724609375
    9. '<int' → logprob: -13.87542724609375
    10. ' les' → logprob: -14.00042724609375

Token 172: ' haute' (ID: 49646)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.06558571010828018
    2. ' haute' → logprob: -3.1905856132507324
    3. ' valeurs' → logprob: -4.940585613250732
    4. 'int' → logprob: -5.190585613250732
    5. 'val' → logprob: -5.440585613250732
    6. 'he' → logprob: -6.690585613250732
    7. '[' → logprob: -7.315585613250732
    8. 'ent' → logprob: -7.440585613250732
    9. ' ha' → logprob: -8.06558609008789
    10. ' ent' → logprob: -8.19058609008789

Token 173: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.003049723571166396
    2. 's' → logprob: -7.378049850463867
    3. 'uteurs' → logprob: -7.378049850463867
    4. 'ur' → logprob: -7.503049850463867
    5. 'urt' → logprob: -8.003049850463867
    6. 'urses' → logprob: -8.253049850463867
    7. 'urts' → logprob: -9.003049850463867
    8. 't' → logprob: -9.253049850463867
    9. 'eurs' → logprob: -9.503049850463867
    10. 'teurs' → logprob: -9.628049850463867

Token 174: ' sous' (ID: 14487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.003640107112005353
    2. '=' → logprob: -5.628640174865723
    3. ' =' → logprob: -10.253640174865723
    4. '=
' → logprob: -13.378640174865723
    5. '
' → logprob: -13.753640174865723
    6. '#' → logprob: -14.003640174865723
    7. ' H' → logprob: -14.628640174865723
    8. ':' → logprob: -14.628640174865723
    9. 'h' → logprob: -15.753640174865723
    10. 'n' → logprob: -16.253639221191406

Token 175: ' forme' (ID: 27450)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7718356847763062
    2. 'forme' → logprob: -0.7718356847763062
    3. ' forme' → logprob: -2.7718358039855957
    4. 'form' → logprob: -5.521835803985596
    5. 'ent' → logprob: -5.771835803985596
    6. 'pression' → logprob: -7.021835803985596
    7. '[' → logprob: -7.146835803985596
    8. 'int' → logprob: -7.271835803985596
    9. '#' → logprob: -7.521835803985596
    10. 'formes' → logprob: -7.771835803985596

Token 176: ' entière' (ID: 61583)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.584547758102417
    2. ' d' → logprob: -0.834547758102417
    3. '=' → logprob: -5.334547996520996
    4. 'de' → logprob: -6.584547996520996
    5. ' =' → logprob: -7.084547996520996
    6. '=d' → logprob: -7.084547996520996
    7. '=int' → logprob: -8.084547996520996
    8. ' de' → logprob: -8.584547996520996
    9. '[int' → logprob: -9.834547996520996
    10. '_d' → logprob: -10.459547996520996

Token 177: '.
' (ID: 558)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.9623810658231378e-05
    2. '=' → logprob: -11.125020027160645
    3. ' =' → logprob: -13.000020027160645
    4. '
' → logprob: -13.375020027160645
    5. 'h' → logprob: -15.125020027160645
    6. 'n' → logprob: -15.250020027160645
    7. ':' → logprob: -15.750020027160645
    8. ' H' → logprob: -15.750020027160645
    9. '#' → logprob: -16.000019073486328
    10. 's' → logprob: -17.375019073486328

Token 178: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.9361264946837764e-07
    2. ' H' → logprob: -16.25
    3. 'h' → logprob: -17.625
    4. '#' → logprob: -18.625
    5. '
' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. 'n' → logprob: -21.625
    8. 'Hs' → logprob: -22.0
    9. 'height' → logprob: -22.125
    10. 'he' → logprob: -22.25

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407761216163635
    2. '=' → logprob: -0.974077582359314
    3. ',' → logprob: -14.974077224731445
    4. ' ' → logprob: -16.349077224731445
    5. '=[' → logprob: -16.599077224731445
    6. 's' → logprob: -16.724077224731445
    7. '=

' → logprob: -17.224077224731445
    8. ' ' → logprob: -17.349077224731445
    9. ' =[' → logprob: -17.474077224731445
    10. '＝' → logprob: -17.974077224731445

Token 180: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.03804987296462059
    2. ' [' → logprob: -3.2880499362945557
    3. '[list' → logprob: -12.163049697875977
    4. '[Int' → logprob: -13.413049697875977
    5. '[' → logprob: -13.538049697875977
    6. '[str' → logprob: -15.538049697875977
    7. '[List' → logprob: -15.913049697875977
    8. ' ' → logprob: -16.413049697875977
    9. '[input' → logprob: -16.788049697875977
    10. '[ind' → logprob: -18.038049697875977

Token 181: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: 0.0
    2. ' int' → logprob: -18.375
    3. '(int' → logprob: -20.25
    4. '[int' → logprob: -20.75
    5. '   ' → logprob: -21.375
    6. ' ' → logprob: -22.875
    7. '<int' → logprob: -23.25
    8. '  ' → logprob: -23.25
    9. ']int' → logprob: -23.625
    10. '
' → logprob: -23.875

Token 182: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.981667537620524e-06
    2. ' (' → logprob: -13.875001907348633
    3. '(' → logprob: -14.000001907348633
    4. 's' → logprob: -16.125001907348633
    5. '(x' → logprob: -19.125001907348633
    6. ' ' → logprob: -20.500001907348633
    7. '(
' → logprob: -20.625001907348633
    8. '(h' → logprob: -20.875001907348633
    9. ' s' → logprob: -21.875001907348633
    10. '   ' → logprob: -22.000001907348633

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.25000286102295
    3. '(s' → logprob: -13.87500286102295
    4. 'for' → logprob: -15.25000286102295
    5. ')s' → logprob: -16.000003814697266
    6. '）' → logprob: -18.500003814697266
    7. 's' → logprob: -18.625003814697266
    8. ' for' → logprob: -18.625003814697266
    9. '')' → logprob: -19.125003814697266
    10. ')
' → logprob: -19.250003814697266

Token 184: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889925688505173
    2. ' for' → logprob: -2.5788991451263428
    3. ')' → logprob: -12.078899383544922
    4. '(s' → logprob: -12.578899383544922
    5. '	for' → logprob: -15.328899383544922
    6. '()' → logprob: -16.203899383544922
    7. 'in' → logprob: -16.578899383544922
    8. ']' → logprob: -17.453899383544922
    9. '```' → logprob: -17.828899383544922
    10. ' in' → logprob: -18.578899383544922

Token 185: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07889121770858765
    2. 's' → logprob: -2.5788912773132324
    3. '(s' → logprob: -14.203890800476074
    4. ' in' → logprob: -14.578890800476074
    5. '_s' → logprob: -15.828890800476074
    6. ' input' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.57889175415039
    8. '	s' → logprob: -16.70389175415039
    9. ' ' → logprob: -16.95389175415039
    10. 'input' → logprob: -17.45389175415039

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06349235773086548
    2. 'in' → logprob: -2.8134922981262207
    3. '()' → logprob: -6.813492298126221
    4. 'import' → logprob: -9.563492774963379
    5. '=' → logprob: -9.688492774963379
    6. '().' → logprob: -9.688492774963379
    7. '.' → logprob: -9.938492774963379
    8. '_' → logprob: -10.313492774963379
    9. 's' → logprob: -10.313492774963379
    10. ')' → logprob: -10.688492774963379

Token 187: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '(input' → logprob: -16.758615493774414
    4. '<input' → logprob: -20.258615493774414
    5. '=input' → logprob: -20.258615493774414
    6. '	input' → logprob: -20.758615493774414
    7. '_input' → logprob: -20.883615493774414
    8. ' ' → logprob: -21.008615493774414
    9. '.input' → logprob: -21.133615493774414
    10. 'import' → logprob: -21.133615493774414

Token 188: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.676292231422849e-05
    2. '()' → logprob: -11.000017166137695
    3. '()].' → logprob: -17.875017166137695
    4. ' ().' → logprob: -18.750017166137695
    5. '()
' → logprob: -19.875017166137695
    6. '()).' → logprob: -19.875017166137695
    7. '().'' → logprob: -21.375017166137695
    8. '().__' → logprob: -21.750017166137695
    9. '(' → logprob: -22.000017166137695
    10. '().
' → logprob: -22.000017166137695

Token 189: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'split' → logprob: -16.125
    3. '.strip' → logprob: -18.125
    4. '(strip' → logprob: -18.375
    5. ' strip' → logprob: -18.5
    6. 'rstrip' → logprob: -19.125
    7. '().' → logprob: -21.375
    8. '_strip' → logprob: -21.75
    9. '-strip' → logprob: -22.375
    10. 'stripe' → logprob: -23.125

Token 190: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.250001907348633
    3. '.' → logprob: -17.375001907348633
    4. ' ().' → logprob: -18.625001907348633
    5. '(' → logprob: -20.750001907348633
    6. '().'' → logprob: -21.000001907348633
    7. '()
' → logprob: -21.500001907348633
    8. '()].' → logprob: -21.500001907348633
    9. '().
' → logprob: -21.750001907348633
    10. ' .' → logprob: -22.750001907348633

Token 191: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -13.875000953674316
    3. '.split' → logprob: -17.875001907348633
    4. 'strip' → logprob: -17.875001907348633
    5. '(split' → logprob: -18.875001907348633
    6. 'spl' → logprob: -19.000001907348633
    7. 'plit' → logprob: -21.375001907348633
    8. 'rstrip' → logprob: -21.625001907348633
    9. '```' → logprob: -21.750001907348633
    10. 's' → logprob: -22.000001907348633

Token 192: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -5.2524021157296374e-05
    2. '()' → logprob: -10.000052452087402
    3. '())' → logprob: -12.125052452087402
    4. ']' → logprob: -13.875052452087402
    5. ']()' → logprob: -15.875052452087402
    6. '(' → logprob: -16.00005340576172
    7. '()][' → logprob: -16.12505340576172
    8. ')]' → logprob: -16.12505340576172
    9. '()]
' → logprob: -16.62505340576172
    10. '()}' → logprob: -16.75005340576172

Token 193: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0024964679032564163
    2. ']' → logprob: -6.002496242523193
    3. ']()' → logprob: -11.377496719360352
    4. ')]' → logprob: -11.877496719360352
    5. '()' → logprob: -13.002496719360352
    6. '(' → logprob: -16.75249671936035
    7. '()]
' → logprob: -16.75249671936035
    8. ' ]' → logprob: -17.00249671936035
    9. '()][' → logprob: -18.00249671936035
    10. '`]' → logprob: -18.00249671936035

Token 194: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2109616994857788
    2. 'for' → logprob: -1.4609616994857788
    3. 'max' → logprob: -1.8359616994857788
    4. '<|end|>' → logprob: -1.9609616994857788
    5. 'operations' → logprob: -3.7109618186950684
    6. 'count' → logprob: -3.8359618186950684
    7. 'total' → logprob: -3.9609618186950684
    8. 'result' → logprob: -4.085961818695068
    9. '[' → logprob: -4.835961818695068
    10. '.' → logprob: -4.835961818695068

Token 195: ' Vér' (ID: 159169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07231257110834122
    2. '#' → logprob: -2.947312593460083
    3. 'operations' → logprob: -4.447312355041504
    4. 'assert' → logprob: -6.822312355041504
    5. 'count' → logprob: -7.072312355041504
    6. 'result' → logprob: -7.322312355041504
    7. 'i' → logprob: -7.572312355041504
    8. ' for' → logprob: -8.447312355041504
    9. 'sorted' → logprob: -8.447312355041504
    10. 'H' → logprob: -8.572312355041504

Token 196: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.004247692879289389
    2. 'if' → logprob: -5.879247665405273
    3. 'ifiez' → logprob: -7.254247665405273
    4. 'ification' → logprob: -8.129247665405273
    5. '#' → logprob: -8.504247665405273
    6. 'ifie' → logprob: -8.754247665405273
    7. 'ifer' → logprob: -10.004247665405273
    8. 'ify' → logprob: -11.254247665405273
    9. 'ifications' → logprob: -12.379247665405273
    10. 'IFIER' → logprob: -12.504247665405273

Token 197: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09227512776851654
    2. ' if' → logprob: -3.2172751426696777
    3. '(' → logprob: -4.217275142669678
    4. '(len' → logprob: -4.342275142669678
    5. 'len' → logprob: -4.592275142669678
    6. '<|end|>' → logprob: -6.092275142669678
    7. 'si' → logprob: -6.592275142669678
    8. '(n' → logprob: -6.842275142669678
    9. '#' → logprob: -6.967275142669678
    10. ' si' → logprob: -7.092275142669678

Token 198: ' le' (ID: 505)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7483652830123901
    2. ' n' → logprob: -1.2483652830123901
    3. 'k' → logprob: -1.8733652830123901
    4. ' len' → logprob: -3.1233654022216797
    5. 'n' → logprob: -3.6233654022216797
    6. 'len' → logprob: -4.24836540222168
    7. ' H' → logprob: -6.99836540222168
    8. ' not' → logprob: -8.74836540222168
    9. 'H' → logprob: -9.49836540222168
    10. ' all' → logprob: -10.24836540222168

Token 199: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7652381062507629
    2. 'len' → logprob: -1.2652380466461182
    3. 'n' → logprob: -2.515238046646118
    4. ' k' → logprob: -2.765238046646118
    5. 'max' → logprob: -3.390238046646118
    6. 'H' → logprob: -3.640238046646118
    7. 'nombre' → logprob: -4.765238285064697
    8. ' n' → logprob: -5.015238285064697
    9. 'sorted' → logprob: -5.265238285064697
    10. ' max' → logprob: -5.515238285064697

Token 200: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8827958703041077
    2. 'H' → logprob: -1.632795810699463
    3. '(H' → logprob: -1.757795810699463
    4. '#' → logprob: -2.632795810699463
    5. 'de' → logprob: -3.257795810699463
    6. ' H' → logprob: -3.757795810699463
    7. ' d' → logprob: -4.257795810699463
    8. 'd' → logprob: -4.382795810699463
    9. 'n' → logprob: -4.382795810699463
    10. 's' → logprob: -4.632795810699463

Token 201: ''op' (ID: 70747)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04382181912660599
    2. '(H' → logprob: -3.1688218116760254
    3. '#' → logprob: -7.918821811676025
    4. 'élé' → logprob: -8.918822288513184
    5. ' H' → logprob: -9.168822288513184
    6. 'de' → logprob: -9.418822288513184
    7. 'elements' → logprob: -10.043822288513184
    8. 'len' → logprob: -10.668822288513184
    9. 's' → logprob: -10.918822288513184
    10. 'd' → logprob: -10.918822288513184

Token 202: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -1.2870543003082275
    2. 'ér' → logprob: -1.4120543003082275
    3. 'H' → logprob: -1.5370543003082275
    4. 'elements' → logprob: -2.2870543003082275
    5. 'er' → logprob: -2.2870543003082275
    6. 'r' → logprob: -3.6620543003082275
    7. 'érents' → logprob: -5.287054061889648
    8. 's' → logprob: -5.287054061889648
    9. 'élé' → logprob: -6.162054061889648
    10. 'u' → logprob: -6.287054061889648

Token 203: ' k' (ID: 372)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2452978640794754
    2. '<=' → logprob: -1.745297908782959
    3. ' >' → logprob: -4.745297908782959
    4. '>' → logprob: -4.745297908782959
    5. 'k' → logprob: -5.495297908782959
    6. ' ==' → logprob: -5.745297908782959
    7. ' k' → logprob: -6.120297908782959
    8. 's' → logprob: -6.245297908782959
    9. '==' → logprob: -6.245297908782959
    10. '#' → logprob: -6.245297908782959

Token 204: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4748089611530304
    2. '<=' → logprob: -1.099808931350708
    3. ' >' → logprob: -3.849808931350708
    4. '>' → logprob: -4.099809169769287
    5. '==' → logprob: -5.724809169769287
    6. ' ==' → logprob: -5.849809169769287
    7. '>=' → logprob: -7.849809169769287
    8. ' >=' → logprob: -7.974809169769287
    9. ' <' → logprob: -8.724808692932129
    10. '<' → logprob: -9.474808692932129

Token 205: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.31827807426452637
    2. '0' → logprob: -2.1932780742645264
    3. 'sup' → logprob: -3.1932780742645264
    4. 'strict' → logprob: -3.3182780742645264
    5. '>' → logprob: -3.4432780742645264
    6. ' inférieur' → logprob: -4.4432783126831055
    7. '=' → logprob: -4.6932783126831055
    8. '<=' → logprob: -4.8182783126831055
    9. ' égal' → logprob: -5.5682783126831055
    10. '==' → logprob: -5.6932783126831055

Token 206: ' ou' (ID: 2031)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5011075735092163
    2. ' à' → logprob: -1.1261075735092163
    3. '=' → logprob: -3.751107692718506
    4. '>' → logprob: -3.751107692718506
    5. 'a' → logprob: -4.876107692718506
    6. 'to' → logprob: -4.876107692718506
    7. '#' → logprob: -5.501107692718506
    8. ' to' → logprob: -7.126107692718506
    9. ' >' → logprob: -7.876107692718506
    10. ' a' → logprob: -8.126107215881348

Token 207: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29410290718078613
    2. 'égal' → logprob: -1.4191029071807861
    3. ' égal' → logprob: -5.794102668762207
    4. '#' → logprob: -5.794102668762207
    5. 'ég' → logprob: -6.294102668762207
    6. 'à' → logprob: -6.794102668762207
    7. ' ég' → logprob: -6.919102668762207
    8. '==' → logprob: -7.419102668762207
    9. 'égalité' → logprob: -7.544102668762207
    10. 'strict' → logprob: -8.169102668762207

Token 208: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.643114447593689
    2. 'à' → logprob: -0.768114447593689
    3. ' k' → logprob: -5.0181145668029785
    4. 'k' → logprob: -6.6431145668029785
    5. '(k' → logprob: -7.7681145668029785
    6. 'to' → logprob: -7.7681145668029785
    7. 'a' → logprob: -8.14311408996582
    8. ' to' → logprob: -8.26811408996582
    9. '=' → logprob: -8.64311408996582
    10. ''à' → logprob: -8.64311408996582

Token 209: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004276176914572716
    2. 'len' → logprob: -5.504276275634766
    3. ' n' → logprob: -9.254276275634766
    4. 'max' → logprob: -10.129276275634766
    5. 'k' → logprob: -10.879276275634766
    6. '2' → logprob: -11.254276275634766
    7. '1' → logprob: -12.129276275634766
    8. 'min' → logprob: -12.129276275634766
    9. ' len' → logprob: -12.379276275634766
    10. '0' → logprob: -12.754276275634766

Token 210: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6066848039627075
    2. 'n' → logprob: -1.3566848039627075
    3. ' d' → logprob: -2.231684684753418
    4. 'de' → logprob: -2.731684684753418
    5. '#' → logprob: -4.856684684753418
    6. ' n' → logprob: -4.981684684753418
    7. ' de' → logprob: -5.231684684753418
    8. 'des' → logprob: -5.481684684753418
    9. '(n' → logprob: -9.106684684753418
    10. ' des' → logprob: -9.356684684753418

Token 211: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7760772705078125
    2. 'élé' → logprob: -1.0260772705078125
    3. 'n' → logprob: -2.5260772705078125
    4. 'H' → logprob: -2.9010772705078125
    5. 'elements' → logprob: -4.4010772705078125
    6. 'e' → logprob: -4.6510772705078125
    7. '(H' → logprob: -5.2760772705078125
    8. ''é' → logprob: -5.6510772705078125
    9. '(n' → logprob: -5.9010772705078125
    10. 'é' → logprob: -6.5260772705078125

Token 212: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10722692310810089
    2. 'n' → logprob: -2.732226848602295
    3. 'H' → logprob: -3.482226848602295
    4. ' H' → logprob: -5.982226848602295
    5. 'elements' → logprob: -6.857226848602295
    6. ' éléments' → logprob: -6.982226848602295
    7. ' n' → logprob: -7.357226848602295
    8. 'é' → logprob: -8.482227325439453
    9. 'ha' → logprob: -9.607227325439453
    10. 't' → logprob: -10.232227325439453

Token 213: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.020809877663850784
    2. 'm' → logprob: -3.8958098888397217
    3. 'ment' → logprob: -9.0208101272583
    4. 'v' → logprob: -9.3958101272583
    5. 'me' → logprob: -11.2708101272583
    6. 'ts' → logprob: -11.5208101272583
    7. 'men' → logprob: -11.5208101272583
    8. 'éments' → logprob: -12.0208101272583
    9. 'ements' → logprob: -12.3958101272583
    10. 'mé' → logprob: -12.6458101272583

Token 214: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21343444287776947
    2. ' n' → logprob: -2.5884344577789307
    3. 'len' → logprob: -2.9634344577789307
    4. '(len' → logprob: -4.338434219360352
    5. ' len' → logprob: -4.338434219360352
    6. ' de' → logprob: -4.838434219360352
    7. '(n' → logprob: -4.963434219360352
    8. '=len' → logprob: -5.088434219360352
    9. ' H' → logprob: -5.713434219360352
    10. 'de' → logprob: -5.713434219360352

Token 215: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3769298791885376
    2. ':' → logprob: -2.126929759979248
    3. ' if' → logprob: -2.751929759979248
    4. '>=' → logprob: -2.751929759979248
    5. ' >=' → logprob: -3.001929759979248
    6. ',' → logprob: -5.251929759979248
    7. '>' → logprob: -5.751929759979248
    8. '<=' → logprob: -6.251929759979248
    9. ' <=' → logprob: -6.501929759979248
    10. ' and' → logprob: -6.876929759979248

Token 216: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001212614355608821
    2. 'i' → logprob: -7.2512125968933105
    3. ' if' → logprob: -7.6262125968933105
    4. ':' → logprob: -11.376213073730469
    5. '
' → logprob: -13.876213073730469
    6. ':
' → logprob: -14.376213073730469
    7. '```' → logprob: -14.751213073730469
    8. '#' → logprob: -14.876213073730469
    9. ' i' → logprob: -15.251213073730469
    10. '[i' → logprob: -15.376213073730469

Token 217: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.2842308680992573e-05
    2. 'i' → logprob: -11.000022888183594
    3. ' if' → logprob: -12.625022888183594
    4. '#' → logprob: -13.250022888183594
    5. 'for' → logprob: -14.625022888183594
    6. 'result' → logprob: -15.125022888183594
    7. '```' → logprob: -15.375022888183594
    8. '
' → logprob: -18.000022888183594
    9. 'while' → logprob: -18.250022888183594
    10. '#if' → logprob: -18.375022888183594

Token 218: ' c' (ID: 274)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1602676957845688
    2. 'k' → logprob: -1.91026771068573
    3. ' ' → logprob: -10.28526782989502
    4. ' ' → logprob: -12.78526782989502
    5. '	k' → logprob: -12.91026782989502
    6. '(k' → logprob: -13.28526782989502
    7. ' n' → logprob: -14.16026782989502
    8. '  ' → logprob: -14.41026782989502
    9. 'n' → logprob: -15.16026782989502
    10. '(' → logprob: -15.28526782989502

Token 219: ''est' (ID: 6616)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006105354521423578
    2. ' k' → logprob: -5.131105422973633
    3. '#' → logprob: -9.006105422973633
    4. 'if' → logprob: -11.756105422973633
    5. '=k' → logprob: -11.756105422973633
    6. 'n' → logprob: -12.506105422973633
    7. 'elif' → logprob: -12.506105422973633
    8. '```' → logprob: -12.506105422973633
    9. '	k' → logprob: -12.756105422973633
    10. 'i' → logprob: -12.756105422973633

Token 220: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.575996458530426
    2. ' k' → logprob: -0.825996458530426
    3. ' True' → logprob: -10.700996398925781
    4. 'True' → logprob: -11.575996398925781
    5. ' ' → logprob: -11.825996398925781
    6. '	k' → logprob: -11.950996398925781
    7. '(k' → logprob: -12.200996398925781
    8. ' n' → logprob: -12.700996398925781
    9. 'n' → logprob: -13.200996398925781
    10. ' ' → logprob: -14.700996398925781

Token 221: ' cas' (ID: 2108)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6779133677482605
    2. 'n' → logprob: -0.9279133677482605
    3. 'True' → logprob: -3.1779134273529053
    4. ' True' → logprob: -3.3029134273529053
    5. ' k' → logprob: -4.427913188934326
    6. 'v' → logprob: -5.927913188934326
    7. ' n' → logprob: -6.177913188934326
    8. 'if' → logprob: -7.427913188934326
    9. '#' → logprob: -8.552913665771484
    10. 's' → logprob: -8.927913665771484

Token 222: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010461799800395966
    2. ':
' → logprob: -4.885461807250977
    3. 'if' → logprob: -5.885461807250977
    4. ',' → logprob: -10.760461807250977
    5. ' :' → logprob: -11.260461807250977
    6. 'n' → logprob: -11.635461807250977
    7. ' if' → logprob: -11.760461807250977
    8. 'print' → logprob: -12.385461807250977
    9. 'and' → logprob: -12.760461807250977
    10. 'or' → logprob: -13.010461807250977

Token 223: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023735121358186007
    2. ' print' → logprob: -6.377373695373535
    3. 'H' → logprob: -7.627373695373535
    4. 'for' → logprob: -10.002373695373535
    5. '#' → logprob: -10.252373695373535
    6. 'k' → logprob: -10.502373695373535
    7. ' H' → logprob: -10.877373695373535
    8. 'result' → logprob: -11.627373695373535
    9. 'n' → logprob: -11.752373695373535
    10. '
' → logprob: -12.002373695373535

Token 224: ' signifie' (ID: 81149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1111881211400032
    2. ' signifie' → logprob: -2.9861881732940674
    3. '#' → logprob: -4.236187934875488
    4. ' veut' → logprob: -4.361187934875488
    5. 'sign' → logprob: -4.736187934875488
    6. ' print' → logprob: -5.111187934875488
    7. ' H' → logprob: -5.111187934875488
    8. 'H' → logprob: -5.986187934875488
    9. 'n' → logprob: -6.861187934875488
    10. 'im' → logprob: -7.861187934875488

Token 225: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7296518683433533
    2. 'print' → logprob: -1.104651927947998
    3. ' print' → logprob: -1.979651927947998
    4. 'n' → logprob: -4.229651927947998
    5. ' n' → logprob: -4.479651927947998
    6. 'que' → logprob: -4.979651927947998
    7. '#' → logprob: -4.979651927947998
    8. ' that' → logprob: -5.854651927947998
    9. '   ' → logprob: -6.104651927947998
    10. ' qu' → logprob: -7.104651927947998

Token 226: ' nous' (ID: 6176)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04219816252589226
    2. 'H' → logprob: -3.5421981811523438
    3. 'k' → logprob: -5.417198181152344
    4. 'max' → logprob: -5.667198181152344
    5. ' print' → logprob: -7.042198181152344
    6. '#' → logprob: -7.042198181152344
    7. 'la' → logprob: -7.417198181152344
    8. 'n' → logprob: -7.667198181152344
    9. 'le' → logprob: -8.167198181152344
    10. 'the' → logprob: -8.542198181152344

Token 227: ' pouvons' (ID: 80223)
  Prédit: ' pouvons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvons' → logprob: -0.29272404313087463
    2. '#' → logprob: -2.167724132537842
    3. 'print' → logprob: -2.792724132537842
    4. ' can' → logprob: -4.042724132537842
    5. 'pour' → logprob: -4.042724132537842
    6. 'n' → logprob: -5.167724132537842
    7. ' n' → logprob: -5.167724132537842
    8. 'p' → logprob: -5.292724132537842
    9. ' #' → logprob: -5.417724132537842
    10. ' print' → logprob: -5.542724132537842

Token 228: ' supprimer' (ID: 119553)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3058316707611084
    2. ' tr' → logprob: -3.1808316707611084
    3. 'faire' → logprob: -3.1808316707611084
    4. 'print' → logprob: -3.3058316707611084
    5. 'sort' → logprob: -3.4308316707611084
    6. 'effect' → logprob: -3.6808316707611084
    7. '#' → logprob: -4.3058319091796875
    8. 'aff' → logprob: -4.4308319091796875
    9. 'sup' → logprob: -4.8058319091796875
    10. ' effectuer' → logprob: -4.9308319091796875

Token 229: ' ou' (ID: 2031)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.27590417861938477
    2. ' all' → logprob: -2.4009041786193848
    3. ' tous' → logprob: -3.4009041786193848
    4. 'tout' → logprob: -3.6509041786193848
    5. ' toutes' → logprob: -3.7759041786193848
    6. 't' → logprob: -4.275904178619385
    7. ' n' → logprob: -4.525904178619385
    8. ' toute' → logprob: -4.775904178619385
    9. 'l' → logprob: -4.900904178619385
    10. 'n' → logprob: -4.900904178619385

Token 230: ' ign' (ID: 8769)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.8124603629112244
    2. 'tr' → logprob: -1.3124604225158691
    3. 'sort' → logprob: -2.687460422515869
    4. 'transform' → logprob: -2.687460422515869
    5. 're' → logprob: -3.312460422515869
    6. ' tr' → logprob: -3.687460422515869
    7. 'modifier' → logprob: -4.687460422515869
    8. ' ré' → logprob: -4.937460422515869
    9. ' réduire' → logprob: -4.937460422515869
    10. ' remplacer' → logprob: -5.062460422515869

Token 231: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.06543119251728058
    2. 'n' → logprob: -2.9404311180114746
    3. 'or' → logprob: -5.315431118011475
    4. '[' → logprob: -6.940431118011475
    5. 'érer' → logprob: -7.565431118011475
    6. '[n' → logprob: -7.690431118011475
    7. '(n' → logprob: -7.940431118011475
    8. 'urer' → logprob: -7.940431118011475
    9. '```' → logprob: -8.190431594848633
    10. 'def' → logprob: -8.190431594848633

Token 232: ' tous' (ID: 10688)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.45593854784965515
    2. ' all' → logprob: -1.9559385776519775
    3. 'n' → logprob: -2.0809385776519775
    4. 'all' → logprob: -2.5809385776519775
    5. '(n' → logprob: -4.330938339233398
    6. 'H' → logprob: -6.330938339233398
    7. ' the' → logprob: -6.455938339233398
    8. ' H' → logprob: -6.580938339233398
    9. 'the' → logprob: -6.705938339233398
    10. '0' → logprob: -6.955938339233398

Token 233: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3212375342845917
    2. 'les' → logprob: -1.321237564086914
    3. 'n' → logprob: -5.821237564086914
    4. 'H' → logprob: -5.946237564086914
    5. ' H' → logprob: -7.321237564086914
    6. 'l' → logprob: -7.571237564086914
    7. ' n' → logprob: -7.821237564086914
    8. 'print' → logprob: -9.071237564086914
    9. '#' → logprob: -9.321237564086914
    10. '<|end|>' → logprob: -9.571237564086914

Token 234: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05799313262104988
    2. 'H' → logprob: -3.557993173599243
    3. 'n' → logprob: -4.307992935180664
    4. 'elements' → logprob: -4.682992935180664
    5. ' éléments' → logprob: -6.182992935180664
    6. '#' → logprob: -6.932992935180664
    7. 'ha' → logprob: -7.807992935180664
    8. ' H' → logprob: -7.932992935180664
    9. 'é' → logprob: -8.182992935180664
    10. ' n' → logprob: -8.932992935180664

Token 235: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7216634154319763
    2. 'n' → logprob: -1.971663475036621
    3. ',' → logprob: -2.096663475036621
    4. '.' → logprob: -2.721663475036621
    5. ':' → logprob: -2.846663475036621
    6. 'if' → logprob: -2.846663475036621
    7. 'H' → logprob: -3.346663475036621
    8. ' if' → logprob: -4.346663475036621
    9. ' n' → logprob: -5.346663475036621
    10. ' H' → logprob: -5.596663475036621

Token 236: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1391485035419464
    2. 'la' → logprob: -2.139148473739624
    3. ' la' → logprob: -4.764148712158203
    4. ' H' → logprob: -5.764148712158203
    5. 'l' → logprob: -7.889148712158203
    6. 'n' → logprob: -10.514148712158203
    7. 'liste' → logprob: -11.014148712158203
    8. 's' → logprob: -11.514148712158203
    9. '```' → logprob: -11.514148712158203
    10. 'a' → logprob: -12.139148712158203

Token 237: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.39413872361183167
    2. 'H' → logprob: -1.3941386938095093
    3. 'list' → logprob: -3.644138813018799
    4. 'n' → logprob: -4.144138813018799
    5. ' tableau' → logprob: -4.769138813018799
    6. 'table' → logprob: -5.394138813018799
    7. ' liste' → logprob: -5.519138813018799
    8. '```' → logprob: -5.644138813018799
    9. 'la' → logprob: -6.019138813018799
    10. '#' → logprob: -6.769138813018799

Token 238: ' H' (ID: 487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5992081165313721
    2. 'n' → logprob: -1.099208116531372
    3. ' if' → logprob: -2.599208116531372
    4. 'H' → logprob: -3.599208116531372
    5. ' n' → logprob: -5.599207878112793
    6. ',' → logprob: -5.724207878112793
    7. '.' → logprob: -5.849207878112793
    8. ':' → logprob: -6.099207878112793
    9. '#' → logprob: -7.349207878112793
    10. ' or' → logprob: -7.849207878112793

Token 239: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008218323811888695
    2. ':' → logprob: -5.633218288421631
    3. ' if' → logprob: -6.133218288421631
    4. '#' → logprob: -7.383218288421631
    5. ',' → logprob: -7.383218288421631
    6. 'print' → logprob: -8.133218765258789
    7. '.' → logprob: -8.383218765258789
    8. 'n' → logprob: -8.758218765258789
    9. 'H' → logprob: -8.883218765258789
    10. 'or' → logprob: -9.383218765258789

Token 240: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011510594777064398
    2. 'i' → logprob: -9.375115394592285
    3. ' if' → logprob: -10.500115394592285
    4. '#' → logprob: -13.875115394592285
    5. '```' → logprob: -14.125115394592285
    6. '
' → logprob: -15.000115394592285
    7. ':' → logprob: -15.125115394592285
    8. '  
' → logprob: -16.50011444091797
    9. '\
' → logprob: -16.87511444091797
    10. 'n' → logprob: -17.37511444091797

Token 241: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.048587825149297714
    2. 'k' → logprob: -3.0485877990722656
    3. ' ' → logprob: -15.798587799072266
    4. '	k' → logprob: -15.923587799072266
    5. '(k' → logprob: -16.048587799072266
    6. ' ' → logprob: -18.173587799072266
    7. '   ' → logprob: -19.548587799072266
    8. ' к' → logprob: -20.173587799072266
    9. ' ' → logprob: -20.298587799072266
    10. '_k' → logprob: -20.548587799072266

Token 242: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1002136841416359
    2. '>=' → logprob: -2.3502137660980225
    3. ' ' → logprob: -13.100214004516602
    4. ' ' → logprob: -13.100214004516602
    5. ']>=' → logprob: -13.850214004516602
    6. '>' → logprob: -14.225214004516602
    7. ')>=' → logprob: -14.350214004516602
    8. ' >' → logprob: -15.600214004516602
    9. '   ' → logprob: -15.975214004516602
    10. ' >=",' → logprob: -16.2252140045166

Token 243: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07888978719711304
    2. ' n' → logprob: -2.578889846801758
    3. '	n' → logprob: -18.453889846801758
    4. ' ' → logprob: -19.453889846801758
    5. '(n' → logprob: -20.328889846801758
    6. ' ' → logprob: -20.453889846801758
    7. 'len' → logprob: -21.703889846801758
    8. ')n' → logprob: -21.953889846801758
    9. ' len' → logprob: -22.328889846801758
    10. '   ' → logprob: -22.453889846801758

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007193420315161347
    2. ':
' → logprob: -7.2507195472717285
    3. ' :' → logprob: -11.75071907043457
    4. '   ' → logprob: -14.62571907043457
    5. ':
' → logprob: -14.87571907043457
    6. ':return' → logprob: -14.87571907043457
    7. ':n' → logprob: -16.50071907043457
    8. '.' → logprob: -16.87571907043457
    9. ':`' → logprob: -17.12571907043457
    10. '):' → logprob: -17.25071907043457

Token 245: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23730652034282684
    2. '   ' → logprob: -1.6123064756393433
    3. ' print' → logprob: -4.862306594848633
    4. ':
' → logprob: -5.612306594848633
    5. ':' → logprob: -7.987306594848633
    6. ' ' → logprob: -10.737306594848633
    7. '	print' → logprob: -10.987306594848633
    8. 'result' → logprob: -11.612306594848633
    9. '
' → logprob: -11.862306594848633
    10. 'H' → logprob: -11.862306594848633

Token 246: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.621933451038785e-05
    2. 'H' → logprob: -10.375056266784668
    3. '   ' → logprob: -11.375056266784668
    4. ' print' → logprob: -11.625056266784668
    5. 'result' → logprob: -13.250056266784668
    6. '#' (adapté à ' #') → logprob: -13.375056266784668
    7. 'return' → logprob: -15.000056266784668
    8. 'res' → logprob: -15.875056266784668
    9. 'pass' → logprob: -16.00005531311035
    10. 'for' → logprob: -16.12505531311035

Token 247: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3544423381972592e-05
    2. ' print' → logprob: -12.12501335144043
    3. 'pass' → logprob: -13.00001335144043
    4. '   ' → logprob: -13.50001335144043
    5. '#' → logprob: -13.62501335144043
    6. 'H' → logprob: -13.75001335144043
    7. 'pr' → logprob: -13.75001335144043
    8. 'exit' → logprob: -14.87501335144043
    9. '#print' → logprob: -15.87501335144043
    10. 'prin' → logprob: -16.00001335144043

Token 248: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.8361347913742065
    2. 'print' → logprob: -1.2111347913742065
    3. 'ce' → logprob: -1.4611347913742065
    4. '[]' → logprob: -3.961134910583496
    5. 'this' → logprob: -4.836134910583496
    6. 'H' → logprob: -5.336134910583496
    7. 'la' → logprob: -6.711134910583496
    8. '0' → logprob: -7.586134910583496
    9. '[' → logprob: -7.836134910583496
    10. 'that' → logprob: -7.961134910583496

Token 249: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15946418046951294
    2. ' cas' → logprob: -2.784464120864868
    3. 'cas' → logprob: -2.784464120864868
    4. 'case' → logprob: -4.659464359283447
    5. '```' → logprob: -5.784464359283447
    6. '   ' → logprob: -5.909464359283447
    7. '#' → logprob: -6.034464359283447
    8. '
' → logprob: -6.534464359283447
    9. 'n' → logprob: -6.784464359283447
    10. ' print' → logprob: -7.159464359283447

Token 250: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6706361174583435
    2. ':
' → logprob: -1.0456361770629883
    3. 'print' → logprob: -2.1706361770629883
    4. '   ' → logprob: -3.7956361770629883
    5. ' print' → logprob: -8.545636177062988
    6. ',' → logprob: -8.670636177062988
    7. '       ' → logprob: -9.420636177062988
    8. '
' → logprob: -10.170636177062988
    9. ' :' → logprob: -10.920636177062988
    10. ' :
' → logprob: -10.920636177062988

Token 251: ' il' (ID: 1793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4034345187828876e-05
    2. '   ' → logprob: -11.50002384185791
    3. ' print' → logprob: -11.75002384185791
    4. '#' → logprob: -12.87502384185791
    5. 'pr' → logprob: -13.37502384185791
    6. 'result' → logprob: -14.50002384185791
    7. 'prin' → logprob: -14.87502384185791
    8. '
' → logprob: -15.50002384185791
    9. 'pass' → logprob: -16.000024795532227
    10. 'H' → logprob: -16.375024795532227

Token 252: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.042023755609989166
    2. 'n' → logprob: -4.292023658752441
    3. ' print' → logprob: -4.542023658752441
    4. ' n' → logprob: -4.917023658752441
    5. ' faut' → logprob: -6.042023658752441
    6. '   ' → logprob: -6.167023658752441
    7. '#' → logprob: -6.167023658752441
    8. 's' → logprob: -6.542023658752441
    9. 'f' → logprob: -6.917023658752441
    10. 'est' → logprob: -8.667023658752441

Token 253: ' reste' (ID: 26769)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3193666934967041
    2. 'f' → logprob: -1.319366693496704
    3. 'reste' → logprob: -5.444366455078125
    4. 'fa' → logprob: -7.444366455078125
    5. 'rest' → logprob: -7.444366455078125
    6. 's' → logprob: -8.694366455078125
    7. ' faut' → logprob: -8.694366455078125
    8. ' reste' → logprob: -8.819366455078125
    9. '#' → logprob: -10.194366455078125
    10. 'sert' → logprob: -10.569366455078125

Token 254: ' rien' (ID: 23082)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.0029420852661133
    2. 'auc' → logprob: -1.1279420852661133
    3. 'r' → logprob: -1.2529420852661133
    4. ' rien' → logprob: -4.502942085266113
    5. ' plus' → logprob: -5.627942085266113
    6. 'que' → logprob: -6.002942085266113
    7. 'qu' → logprob: -6.252942085266113
    8. ' aucun' → logprob: -6.377942085266113
    9. '0' → logprob: -7.252942085266113
    10. 'au' → logprob: -7.377942085266113

Token 255: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13037845492362976
    2. '   ' → logprob: -2.380378484725952
    3. ',' → logprob: -3.755378484725952
    4. ':' → logprob: -6.380378246307373
    5. '.' → logprob: -6.505378246307373
    6. '#' → logprob: -7.130378246307373
    7. 'à' → logprob: -8.005378723144531
    8. ';' → logprob: -8.380378723144531
    9. 'else' → logprob: -8.380378723144531
    10. ' print' → logprob: -8.505378723144531

Token 256: ' donc' (ID: 14206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021331331226974726
    2. '   ' → logprob: -6.627133369445801
    3. ' print' → logprob: -7.127133369445801
    4. '    
' → logprob: -13.6271333694458
    5. '	print' → logprob: -14.8771333694458
    6. '    ' → logprob: -14.8771333694458
    7. '```' → logprob: -15.1271333694458
    8. 'result' → logprob: -15.2521333694458
    9. '
' → logprob: -15.3771333694458
    10. '  ' → logprob: -15.6271333694458

Token 257: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004958406207151711
    2. ' print' → logprob: -8.250495910644531
    3. '   ' → logprob: -8.375495910644531
    4. 'pr' → logprob: -13.625495910644531
    5. 'prin' → logprob: -13.750495910644531
    6. '0' → logprob: -14.500495910644531
    7. '#' → logprob: -15.375495910644531
    8. '  ' → logprob: -15.750495910644531
    9. '[]' → logprob: -16.00049591064453
    10. ' ' → logprob: -16.12549591064453

Token 258: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.297462171758525e-05
    2. 'result' → logprob: -11.250033378601074
    3. 'prin' → logprob: -11.375033378601074
    4. ' print' → logprob: -12.625033378601074
    5. 'pr' → logprob: -13.000033378601074
    6. 'res' → logprob: -14.125033378601074
    7. '
' → logprob: -14.625033378601074
    8. 'answer' → logprob: -14.750033378601074
    9. 'prit' → logprob: -15.375033378601074
    10. '#' → logprob: -15.625033378601074

Token 259: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22618846595287323
    2. 'print' → logprob: -1.8511884212493896
    3. ' =' → logprob: -3.1011884212493896
    4. '   ' → logprob: -8.851188659667969
    5. ',' → logprob: -9.601188659667969
    6. 's' → logprob: -9.851188659667969
    7. 'est' → logprob: -10.476188659667969
    8. ' print' → logprob: -10.976188659667969
    9. '=
' → logprob: -11.101188659667969
    10. '=[]' → logprob: -11.101188659667969

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001992490579141304
    2. ' ' → logprob: -8.875199317932129
    3. '[]' → logprob: -10.125199317932129
    4. '[]
' → logprob: -11.375199317932129
    5. '"' → logprob: -12.250199317932129
    6. '   ' → logprob: -13.125199317932129
    7. 'print' → logprob: -14.625199317932129
    8. '[' → logprob: -15.750199317932129
    9. ''' → logprob: -16.125198364257812
    10. ' []' → logprob: -16.250198364257812

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040540905320085585
    2. '[]' → logprob: -8.000405311584473
    3. '"' → logprob: -10.750405311584473
    4. '[]
' → logprob: -11.000405311584473
    5. ' ' → logprob: -11.125405311584473
    6. 'print' → logprob: -11.500405311584473
    7. '[' → logprob: -13.000405311584473
    8. '""' → logprob: -14.125405311584473
    9. '   ' → logprob: -14.250405311584473
    10. ''' → logprob: -14.625405311584473

Token 262: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0042357007041573524
    2. '
' → logprob: -6.129235744476318
    3. '0' → logprob: -6.754235744476318
    4. '   ' → logprob: -7.504235744476318
    5. ' print' → logprob: -8.75423526763916
    6. ':' → logprob: -9.75423526763916
    7. '\n' → logprob: -10.75423526763916
    8. '    
' → logprob: -10.87923526763916
    9. ',' → logprob: -11.12923526763916
    10. 'else' → logprob: -11.62923526763916

Token 263: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002134675160050392
    2. '   ' → logprob: -6.752134799957275
    3. 'result' → logprob: -7.252134799957275
    4. '0' → logprob: -8.502134323120117
    5. '```' → logprob: -11.002134323120117
    6. 'r' → logprob: -11.627134323120117
    7. 'res' → logprob: -11.752134323120117
    8. '
' → logprob: -11.877134323120117
    9. ' print' → logprob: -12.752134323120117
    10. 'return' → logprob: -13.127134323120117

Token 264: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005643534241244197
    2. 'result' (adapté à ' result') → logprob: -7.5005645751953125
    3. 'res' → logprob: -12.250564575195312
    4. '0' → logprob: -12.625564575195312
    5. 'r' → logprob: -14.000564575195312
    6. '   ' → logprob: -14.125564575195312
    7. 'return' → logprob: -14.375564575195312
    8. ' print' → logprob: -15.000564575195312
    9. 'pr' → logprob: -15.125564575195312
    10. '```' → logprob: -15.500564575195312

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048668671399354935
    2. '=' → logprob: -3.048668622970581
    3. ' ' → logprob: -9.67366886138916
    4. ' ' → logprob: -11.67366886138916
    5. 's' → logprob: -12.67366886138916
    6. '_' → logprob: -13.17366886138916
    7. '  ' → logprob: -13.54866886138916
    8. ')' → logprob: -14.04866886138916
    9. 'result' → logprob: -14.42366886138916
    10. '0' → logprob: -15.04866886138916

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.00009536743164
    4. ' ' → logprob: -19.25009536743164
    5. '  ' → logprob: -20.75009536743164
    6. '`' → logprob: -21.00009536743164
    7. '00' → logprob: -22.12509536743164
    8. '۰' → logprob: -22.25009536743164
    9. '```' → logprob: -22.37509536743164
    10. '"' → logprob: -22.37509536743164

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -21.625001907348633
    4. '`' → logprob: -22.000001907348633
    5. '   ' → logprob: -22.000001907348633
    6. '000' → logprob: -22.000001907348633
    7. ' ' → logprob: -22.250001907348633
    8. '```' → logprob: -22.500001907348633
    9. '00' → logprob: -22.750001907348633
    10. '０' → logprob: -22.750001907348633

Token 268: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005252137780189514
    2. '
' → logprob: -6.255252361297607
    3. ' else' → logprob: -6.380252361297607
    4. 'elif' → logprob: -7.255252361297607
    5. '\n' → logprob: -7.755252361297607
    6. '<|end|>' → logprob: -8.13025188446045
    7. '#else' → logprob: -10.00525188446045
    8. '#' → logprob: -10.38025188446045
    9. '```' → logprob: -10.50525188446045
    10. ')' → logprob: -10.88025188446045

Token 269: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0007732972735539079
    2. ' else' → logprob: -7.5007734298706055
    3. 'elif' → logprob: -8.625773429870605
    4. '<|end|>' → logprob: -11.250773429870605
    5. '
' → logprob: -11.375773429870605
    6. '\n' → logprob: -12.000773429870605
    7. '```' → logprob: -12.500773429870605
    8. '#else' → logprob: -13.250773429870605
    9. '#' → logprob: -14.250773429870605
    10. ')' → logprob: -14.500773429870605

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001171652227640152
    2. ':
' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.001172065734863
    4. ' :' → logprob: -14.376172065734863
    5. ':

' → logprob: -16.876171112060547
    6. ':
' → logprob: -17.126171112060547
    7. ':def' → logprob: -17.626171112060547
    8. ',' → logprob: -18.376171112060547
    9. ' :
' → logprob: -19.376171112060547
    10. '.' → logprob: -19.626171112060547

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008062947308644652
    2. '    
' → logprob: -7.8758063316345215
    3. ' max' → logprob: -9.250805854797363
    4. '#' → logprob: -9.875805854797363
    5. ' min' → logprob: -10.125805854797363
    6. ' #' → logprob: -10.250805854797363
    7. '   ' → logprob: -10.500805854797363
    8. ' result' → logprob: -10.625805854797363
    9. ' remaining' → logprob: -10.750805854797363
    10. 'max' → logprob: -10.875805854797363

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21793051064014435
    2. '#' (adapté à ' #') → logprob: -2.467930555343628
    3. 'H' → logprob: -3.217930555343628
    4. 'min' → logprob: -4.217930316925049
    5. ' H' → logprob: -4.717930316925049
    6. 'stack' → logprob: -5.217930316925049
    7. 'result' → logprob: -5.342930316925049
    8. ' #' → logprob: -5.467930316925049
    9. ' stack' → logprob: -5.842930316925049
    10. ' min' → logprob: -5.842930316925049

Token 273: ' Si' (ID: 7832)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.3012429475784302
    2. '#' → logprob: -1.4262429475784302
    3. 'max' → logprob: -2.1762428283691406
    4. 'remaining' → logprob: -2.5512428283691406
    5. '   ' → logprob: -3.1762428283691406
    6. 'to' → logprob: -3.4262428283691406
    7. ' min' → logprob: -3.4262428283691406
    8. ' max' → logprob: -3.8012428283691406
    9. 'result' → logprob: -4.051242828369141
    10. ' remaining' → logprob: -4.301242828369141

Token 274: ' le' (ID: 505)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.04879321902990341
    2. ' n' → logprob: -3.798793315887451
    3. 'k' → logprob: -4.048793315887451
    4. '   ' → logprob: -5.923793315887451
    5. ' not' → logprob: -5.923793315887451
    6. 'n' → logprob: -7.673793315887451
    7. 'not' → logprob: -7.798793315887451
    8. 'result' → logprob: -7.923793315887451
    9. '    ' → logprob: -8.173792839050293
    10. ' ' → logprob: -8.298792839050293

Token 275: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16762374341487885
    2. ' k' → logprob: -2.16762375831604
    3. 'n' → logprob: -4.292623519897461
    4. 'result' → logprob: -4.542623519897461
    5. 'else' → logprob: -5.042623519897461
    6. ' n' → logprob: -5.667623519897461
    7. 'len' → logprob: -6.792623519897461
    8. '
' → logprob: -7.167623519897461
    9. '#' → logprob: -7.292623519897461
    10. ' result' → logprob: -7.417623519897461

Token 276: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5063151121139526
    2. '=' → logprob: -2.006315231323242
    3. ' =' → logprob: -2.256315231323242
    4. 'de' → logprob: -2.756315231323242
    5. ' de' → logprob: -2.756315231323242
    6. 'result' → logprob: -4.381315231323242
    7. '_result' → logprob: -6.381315231323242
    8. 'd' → logprob: -6.631315231323242
    9. ' of' → logprob: -6.631315231323242
    10. '_' → logprob: -6.631315231323242

Token 277: ''op' (ID: 70747)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.7340863347053528
    2. ''op' → logprob: -1.484086275100708
    3. 'k' → logprob: -2.234086275100708
    4. 'élé' → logprob: -3.234086275100708
    5. '_op' → logprob: -3.359086275100708
    6. '_' → logprob: -3.609086275100708
    7. 'operations' → logprob: -3.984086275100708
    8. '>' → logprob: -4.234086513519287
    9. 'd' → logprob: -4.609086513519287
    10. 'n' → logprob: -4.609086513519287

Token 278: 'érations' (ID: 152860)
  Prédit: 'érations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.0023206991609185934
    2. 'er' → logprob: -6.252320766448975
    3. 'é' → logprob: -9.127320289611816
    4. 'ér' → logprob: -9.252320289611816
    5. '#' → logprob: -9.377320289611816
    6. 'k' → logprob: -10.377320289611816
    7. 'ération' → logprob: -10.502320289611816
    8. '%C' → logprob: -11.877320289611816
    9. '=' → logprob: -12.002320289611816
    10. '{' → logprob: -12.252320289611816

Token 279: ' k' (ID: 372)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08136361092329025
    2. '<' → logprob: -3.2063636779785156
    3. '<n' → logprob: -4.206363677978516
    4. '   ' → logprob: -4.706363677978516
    5. ' est' → logprob: -6.081363677978516
    6. ' >' → logprob: -6.081363677978516
    7. ' is' → logprob: -6.206363677978516
    8. ' k' → logprob: -6.706363677978516
    9. 'k' → logprob: -7.081363677978516
    10. 'n' → logprob: -7.081363677978516

Token 280: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0668044462800026
    2. '<' → logprob: -2.8168044090270996
    3. '   ' → logprob: -6.0668044090271
    4. '<n' → logprob: -6.5668044090271
    5. ' >' → logprob: -7.8168044090271
    6. '>' → logprob: -8.691804885864258
    7. ' ' → logprob: -9.316804885864258
    8. ' >=' → logprob: -9.566804885864258
    9. ' est' → logprob: -9.691804885864258
    10. ' is' → logprob: -9.816804885864258

Token 281: ' strict' (ID: 12035)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9135522842407227
    2. ' inférieur' → logprob: -1.0385522842407227
    3. '<n' → logprob: -2.2885522842407227
    4. ' <' → logprob: -3.1635522842407227
    5. 'strict' → logprob: -3.7885522842407227
    6. 'n' → logprob: -3.9135522842407227
    7. 'inf' → logprob: -4.038552284240723
    8. 'moins' → logprob: -4.538552284240723
    9. '0' → logprob: -4.913552284240723
    10. '   ' → logprob: -5.288552284240723

Token 282: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0002075933152809739
    2. '<' → logprob: -8.750207901000977
    3. 'ly' → logprob: -10.625207901000977
    4. 'e' → logprob: -11.375207901000977
    5. 'lement' → logprob: -13.250207901000977
    6. 'emen' → logprob: -13.375207901000977
    7. 'ément' → logprob: -13.500207901000977
    8. 'ements' → logprob: -13.500207901000977
    9. 'ment' → logprob: -13.625207901000977
    10. 'emente' → logprob: -13.875207901000977

Token 283: ' inférieur' (ID: 191498)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0030383204575628042
    2. 'infer' → logprob: -6.25303840637207
    3. ' inférieur' → logprob: -7.12803840637207
    4. '<' → logprob: -8.75303840637207
    5. 'moins' → logprob: -9.37803840637207
    6. 'in' → logprob: -10.12803840637207
    7. 'Inf' → logprob: -12.00303840637207
    8. 'plus' → logprob: -12.25303840637207
    9. 'sup' → logprob: -12.37803840637207
    10. ' inf' → logprob: -13.12803840637207

Token 284: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08877411484718323
    2. ' à' → logprob: -2.9637742042541504
    3. 'à' → logprob: -3.5887742042541504
    4. ' au' → logprob: -5.96377420425415
    5. 'au' → logprob: -6.71377420425415
    6. ' to' → logprob: -7.46377420425415
    7. 'n' → logprob: -7.71377420425415
    8. '    ' → logprob: -8.088773727416992
    9. ' n' → logprob: -8.088773727416992
    10. 'to' → logprob: -9.463773727416992

Token 285: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018458699923940003
    2. ' n' → logprob: -8.625185012817383
    3. 'len' → logprob: -12.250185012817383
    4. 'k' → logprob: -16.125185012817383
    5. 'nombre' → logprob: -16.125185012817383
    6. ' len' → logprob: -18.125185012817383
    7. ' ' → logprob: -18.250185012817383
    8. '
' → logprob: -18.250185012817383
    9. '	n' → logprob: -18.750185012817383
    10. '(n' → logprob: -19.625185012817383

Token 286: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.713748574256897
    2. 'd' → logprob: -0.963748574256897
    3. '   ' → logprob: -2.7137484550476074
    4. 'de' → logprob: -2.8387484550476074
    5. ' de' → logprob: -6.588748455047607
    6. ' d' → logprob: -7.088748455047607
    7. '#' → logprob: -7.838748455047607
    8. '```' → logprob: -7.838748455047607
    9. 'result' → logprob: -7.838748455047607
    10. ' n' → logprob: -8.838748931884766

Token 287: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002108118060277775
    2. ' n' → logprob: -8.500210762023926
    3. 'élé' → logprob: -13.125210762023926
    4. '```' → logprob: -13.125210762023926
    5. '=' → logprob: -14.000210762023926
    6. 'elements' → logprob: -14.125210762023926
    7. '=n' → logprob: -15.125210762023926
    8. '   ' → logprob: -15.375210762023926
    9. 'H' → logprob: -15.875210762023926
    10. '_elements' → logprob: -15.875210762023926

Token 288: 'élé' (ID: 15228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001049736310960725
    2. 'k' → logprob: -9.625104904174805
    3. ' n' → logprob: -10.375104904174805
    4. 'len' → logprob: -12.375104904174805
    5. 'H' → logprob: -13.500104904174805
    6. 'elements' → logprob: -13.875104904174805
    7. 'élé' → logprob: -15.000104904174805
    8. '```' → logprob: -15.875104904174805
    9. '#' → logprob: -16.125104904174805
    10. '1' → logprob: -16.875104904174805

Token 289: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.001207495923154056
    2. 'ment' → logprob: -6.87620735168457
    3. 'ements' → logprob: -9.12620735168457
    4. 'ents' → logprob: -11.00120735168457
    5. 'm' → logprob: -11.12620735168457
    6. 's' → logprob: -11.50120735168457
    7. '   ' → logprob: -12.12620735168457
    8. 'ts' → logprob: -12.75120735168457
    9. 'mets' → logprob: -12.75120735168457
    10. 't' → logprob: -12.87620735168457

Token 290: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09275709837675095
    2. '   ' → logprob: -2.592756986618042
    3. ' n' → logprob: -4.592757225036621
    4. ',' → logprob: -6.842757225036621
    5. 'de' → logprob: -7.092757225036621
    6. ' de' → logprob: -7.467757225036621
    7. ' à' → logprob: -7.717757225036621
    8. '(n' → logprob: -7.967757225036621
    9. ':' → logprob: -9.342757225036621
    10. 'à' → logprob: -9.467757225036621

Token 291: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4530969262123108
    2. '   ' → logprob: -1.078096866607666
    3. ':
' → logprob: -3.953096866607666
    4. ',' → logprob: -5.953096866607666
    5. '-' → logprob: -7.328096866607666
    6. '=' → logprob: -7.703096866607666
    7. ' =' → logprob: -7.953096866607666
    8. '):' → logprob: -8.203097343444824
    9. '):
' → logprob: -8.578097343444824
    10. ' :' → logprob: -8.828097343444824

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001907216152176261
    2. '#' → logprob: -6.5019073486328125
    3. ':' → logprob: -9.626907348632812
    4. ' #' → logprob: -9.626907348632812
    5. '   ' → logprob: -9.751907348632812
    6. 'result' → logprob: -10.126907348632812
    7. ' result' → logprob: -10.251907348632812
    8. ' remaining' → logprob: -10.501907348632812
    9. 'remaining' → logprob: -10.751907348632812
    10. '    
' → logprob: -10.751907348632812

Token 293: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12961864471435547
    2. '#' (adapté à ' #') → logprob: -2.3796186447143555
    3. 'result' → logprob: -4.0046186447143555
    4. 'remaining' → logprob: -5.6296186447143555
    5. ' result' → logprob: -6.2546186447143555
    6. 'max' → logprob: -6.8796186447143555
    7. 'rest' → logprob: -7.1296186447143555
    8. ' #' → logprob: -7.2546186447143555
    9. ' remaining' → logprob: -7.5046186447143555
    10. ' rest' → logprob: -8.129618644714355

Token 294: ' nous' (ID: 6176)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7271464467048645
    2. '   ' → logprob: -1.1021463871002197
    3. 'remaining' → logprob: -2.6021463871002197
    4. 'result' → logprob: -3.2271463871002197
    5. 'rest' → logprob: -4.977146625518799
    6. ' #' → logprob: -5.227146625518799
    7. 'res' → logprob: -5.352146625518799
    8. ' remaining' → logprob: -5.352146625518799
    9. 'remain' → logprob: -5.477146625518799
    10. 'rem' → logprob: -5.477146625518799

Token 295: ' devons' (ID: 140218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.258657306432724
    2. '#' → logprob: -1.7586573362350464
    3. 'for' → logprob: -4.633657455444336
    4. ' #' → logprob: -5.258657455444336
    5. 'rest' → logprob: -5.258657455444336
    6. ' devons' → logprob: -5.258657455444336
    7. ' allons' → logprob: -5.758657455444336
    8. 'do' → logprob: -6.008657455444336
    9. 'n' → logprob: -6.008657455444336
    10. 'continue' → logprob: -6.133657455444336

Token 296: ' garder' (ID: 63069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25724712014198303
    2. '#' → logprob: -2.38224720954895
    3. 'tr' → logprob: -2.63224720954895
    4. 'sup' → logprob: -4.507246971130371
    5. 'ret' → logprob: -4.882246971130371
    6. 'min' → logprob: -5.007246971130371
    7. 'for' → logprob: -5.257246971130371
    8. 'max' → logprob: -5.882246971130371
    9. ' conserver' → logprob: -5.882246971130371
    10. 'rest' → logprob: -6.007246971130371

Token 297: ' certains' (ID: 30681)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9585815072059631
    2. 'n' → logprob: -1.0835814476013184
    3. ' la' → logprob: -1.9585814476013184
    4. ' k' → logprob: -3.0835814476013184
    5. ' les' → logprob: -4.083581447601318
    6. 'k' → logprob: -4.208581447601318
    7. 'the' → logprob: -4.458581447601318
    8. 'la' → logprob: -4.583581447601318
    9. ' the' → logprob: -4.833581447601318
    10. 'le' → logprob: -5.208581447601318

Token 298: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1080423966050148
    2. 'H' → logprob: -2.4830424785614014
    3. 'elements' → logprob: -4.483042240142822
    4. 'max' → logprob: -6.108042240142822
    5. 'indices' → logprob: -6.733042240142822
    6. 'min' → logprob: -6.858042240142822
    7. ' éléments' → logprob: -7.108042240142822
    8. '#' → logprob: -7.233042240142822
    9. 'minimum' → logprob: -7.858042240142822
    10. 'rest' → logprob: -8.10804271697998

Token 299: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016050786944106221
    2. ' =' → logprob: -7.001605033874512
    3. '=' → logprob: -8.876605033874512
    4. ' de' → logprob: -8.876605033874512
    5. '       ' → logprob: -9.376605033874512
    6. ':' → logprob: -9.751605033874512
    7. ',' → logprob: -10.126605033874512
    8. 'de' → logprob: -10.251605033874512
    9. 'H' → logprob: -10.501605033874512
    10. '    ' → logprob: -10.626605033874512

Token 300: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23378615081310272
    2. 'H' → logprob: -2.608786106109619
    3. '#' → logprob: -3.108786106109619
    4. 'min' → logprob: -3.608786106109619
    5. 'max' → logprob: -3.733786106109619
    6. 'result' → logprob: -4.108786106109619
    7. 'remaining' → logprob: -5.733786106109619
    8. 'keep' → logprob: -5.983786106109619
    9. 'rest' → logprob: -6.233786106109619
    10. ' H' → logprob: -6.358786106109619

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9376890063285828
    2. 'min' → logprob: -1.6876890659332275
    3. '#' → logprob: -1.8126890659332275
    4. 'H' → logprob: -2.5626890659332275
    5. 'max' → logprob: -2.5626890659332275
    6. 'keep' → logprob: -3.8126890659332275
    7. 'remaining' → logprob: -4.187688827514648
    8. 'result' → logprob: -4.812688827514648
    9. ' H' → logprob: -4.937688827514648
    10. ' min' → logprob: -4.937688827514648

Token 302: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8501966595649719
    2. 'H' → logprob: -1.8501965999603271
    3. 'min' → logprob: -1.9751965999603271
    4. 'window' → logprob: -3.100196599960327
    5. 'max' → logprob: -3.100196599960327
    6. 'result' → logprob: -3.475196599960327
    7. 'to' → logprob: -3.600196599960327
    8. 'remaining' → logprob: -3.725196599960327
    9. 'sorted' → logprob: -3.975196599960327
    10. 'sub' → logprob: -4.350196838378906

Token 303: ' Trier' (ID: 191551)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.911366879940033
    2. 'from' → logprob: -1.9113669395446777
    3. 'H' → logprob: -2.1613669395446777
    4. 'remaining' → logprob: -2.2863669395446777
    5. 'sorted' → logprob: -3.2863669395446777
    6. 'max' → logprob: -3.5363669395446777
    7. 'stack' → logprob: -3.5363669395446777
    8. 'window' → logprob: -3.6613669395446777
    9. 'dp' → logprob: -3.7863669395446777
    10. 'to' → logprob: -4.036366939544678

Token 304: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00030817187507636845
    2. '(H' → logprob: -8.8753080368042
    3. '   ' → logprob: -9.3753080368042
    4. ' H' → logprob: -9.7503080368042
    5. '_H' → logprob: -11.7503080368042
    6. '=' → logprob: -12.3753080368042
    7. 's' → logprob: -12.3753080368042
    8. ' =' → logprob: -12.7503080368042
    9. '_' → logprob: -13.6253080368042
    10. ')' → logprob: -13.7503080368042

Token 305: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -7.719917630311102e-05
    2. ' H' → logprob: -9.750077247619629
    3. 'sorted' → logprob: -11.375077247619629
    4. 'h' → logprob: -13.750077247619629
    5. 'he' → logprob: -14.250077247619629
    6. 'rest' → logprob: -14.375077247619629
    7. 's' → logprob: -14.500077247619629
    8. '```' → logprob: -14.625077247619629
    9. 'remaining' → logprob: -14.625077247619629
    10. '#' → logprob: -14.875077247619629

Token 306: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.030271990224719048
    2. '(H' → logprob: -3.7802720069885254
    3. '   ' → logprob: -5.280272006988525
    4. ' H' → logprob: -6.905272006988525
    5. '=' → logprob: -7.655272006988525
    6. ' =' → logprob: -8.280271530151367
    7. '	H' → logprob: -10.030271530151367
    8. '_H' → logprob: -10.530271530151367
    9. 's' → logprob: -10.780271530151367
    10. ',' → logprob: -10.905271530151367

Token 307: ' (' (ID: 350)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.023766905069351196
    2. '=' → logprob: -3.8987669944763184
    3. ' =' → logprob: -5.773766994476318
    4. 'sorted' → logprob: -10.52376651763916
    5. '_sorted' → logprob: -10.64876651763916
    6. 'H' → logprob: -10.89876651763916
    7. '   ' → logprob: -11.14876651763916
    8. '.' → logprob: -11.52376651763916
    9. 'sort' → logprob: -11.77376651763916
    10. '.sorted' → logprob: -12.27376651763916

Token 308: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22491952776908875
    2. 'H' → logprob: -1.9749195575714111
    3. 'reverse' → logprob: -2.849919557571411
    4. '(reverse' → logprob: -5.724919319152832
    5. '()' → logprob: -7.349919319152832
    6. ')
' → logprob: -7.849919319152832
    7. ' )' → logprob: -8.849919319152832
    8. '())' → logprob: -9.474919319152832
    9. '.reverse' → logprob: -10.099919319152832
    10. ' H' → logprob: -10.099919319152832

Token 309: ' haute' (ID: 49646)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2950390577316284
    2. ' H' → logprob: -1.7950390577316284
    3. ')' → logprob: -2.920039176940918
    4. 'élé' → logprob: -4.295039176940918
    5. ' )' → logprob: -5.295039176940918
    6. ']' → logprob: -6.045039176940918
    7. ' elements' → logprob: -6.045039176940918
    8. 'elements' → logprob: -6.170039176940918
    9. 'ha' → logprob: -6.295039176940918
    10. ' ' → logprob: -6.295039176940918

Token 310: 'urs' (ID: 1628)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4400491714477539
    2. '   ' → logprob: -1.940049171447754
    3. 'H' → logprob: -2.690049171447754
    4. 'ights' → logprob: -3.190049171447754
    5. 'ts' → logprob: -3.565049171447754
    6. ' =' → logprob: -3.940049171447754
    7. 't' → logprob: -4.065049171447754
    8. ')' → logprob: -4.815049171447754
    9. 'ur' → logprob: -4.815049171447754
    10. 'urs' → logprob: -5.190049171447754

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026282528415322304
    2. '.sort' → logprob: -4.52628231048584
    3. ')
' → logprob: -4.65128231048584
    4. ',' → logprob: -5.77628231048584
    5. ').' → logprob: -6.90128231048584
    6. '   ' → logprob: -7.52628231048584
    7. ' =' → logprob: -8.52628231048584
    8. '=' → logprob: -8.77628231048584
    9. ')=' → logprob: -8.77628231048584
    10. 'H' → logprob: -8.90128231048584

Token 312: ' par' (ID: 686)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01000963430851698
    2. '=' → logprob: -4.760009765625
    3. ' =' → logprob: -6.760009765625
    4. '   ' → logprob: -9.135009765625
    5. 'H' → logprob: -9.760009765625
    6. 'sorted' → logprob: -10.385009765625
    7. 'sort' → logprob: -11.010009765625
    8. '.' → logprob: -11.760009765625
    9. '.sorted' → logprob: -12.135009765625
    10. '_sorted' → logprob: -12.260009765625

Token 313: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.04840872809290886
    2. ' ordre' → logprob: -3.2984087467193604
    3. 'H' → logprob: -5.423408508300781
    4. 'def' → logprob: -6.923408508300781
    5. ' défaut' → logprob: -7.173408508300781
    6. 'val' → logprob: -7.298408508300781
    7. 'dé' → logprob: -7.423408508300781
    8. ' H' → logprob: -7.423408508300781
    9. 'd' → logprob: -7.673408508300781
    10. 'ord' → logprob: -8.298408508300781

Token 314: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.08704359084367752
    2. 'asc' → logprob: -2.837043523788452
    3. '=' → logprob: -3.962043523788452
    4. 'H' → logprob: -6.212043762207031
    5. ' =' → logprob: -6.587043762207031
    6. ' cro' → logprob: -7.337043762207031
    7. 'sorted' → logprob: -7.837043762207031
    8. '.sort' → logprob: -8.337043762207031
    9. ' H' → logprob: -8.712043762207031
    10. '.reverse' → logprob: -9.462043762207031

Token 315: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.48769611120224
    2. 'issante' → logprob: -0.98769611120224
    3. 'issance' → logprob: -4.487696170806885
    4. 'issent' → logprob: -6.862696170806885
    5. 'iss' → logprob: -7.362696170806885
    6. 'issement' → logprob: -8.612695693969727
    7. 'ss' → logprob: -8.987695693969727
    8. 'isse' → logprob: -9.362695693969727
    9. 'is' → logprob: -9.487695693969727
    10. '   ' → logprob: -10.362695693969727

Token 316: '.' (ID: 13)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11548051238059998
    2. '   ' → logprob: -2.365480422973633
    3. ' =' → logprob: -4.615480422973633
    4. '=' → logprob: -5.490480422973633
    5. '
' → logprob: -7.865480422973633
    6. '.sort' → logprob: -8.865480422973633
    7. '    
' → logprob: -8.990480422973633
    8. 'sorted' → logprob: -9.115480422973633
    9. '.' → logprob: -9.490480422973633
    10. ':
' → logprob: -10.115480422973633

Token 317: ' Cela' (ID: 44403)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1603544056415558
    2. '   ' → logprob: -1.9103543758392334
    3. ' H' → logprob: -9.285354614257812
    4. '    
' → logprob: -10.785354614257812
    5. '	H' → logprob: -12.160354614257812
    6. '
' → logprob: -12.410354614257812
    7. '```' → logprob: -13.160354614257812
    8. '  ' → logprob: -13.785354614257812
    9. ' ' → logprob: -14.285354614257812
    10. 'sorted' → logprob: -14.285354614257812

Token 318: ' place' (ID: 2475)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.012485146522522
    2. '.sort' → logprob: -1.262485146522522
    3. ' permettra' → logprob: -2.1374850273132324
    4. ' permet' → logprob: -2.2624850273132324
    5. ' H' → logprob: -2.7624850273132324
    6. 's' → logprob: -4.512485027313232
    7. ' signifie' → logprob: -4.512485027313232
    8. 'n' → logprob: -4.762485027313232
    9. ' .' → logprob: -5.762485027313232
    10. ' donnera' → logprob: -5.762485027313232

Token 319: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0012894016690552235
    2. ' H' → logprob: -6.751289367675781
    3. '   ' → logprob: -9.376289367675781
    4. 'la' → logprob: -11.626289367675781
    5. 'l' → logprob: -12.376289367675781
    6. ' la' → logprob: -12.501289367675781
    7. 'les' → logprob: -12.626289367675781
    8. '#' → logprob: -13.126289367675781
    9. ' ' → logprob: -13.251289367675781
    10. ')' → logprob: -13.251289367675781

Token 320: ' plus' (ID: 2932)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0054480209946632385
    2. ' H' → logprob: -5.755447864532471
    3. 'elements' → logprob: -7.005447864532471
    4. '   ' → logprob: -8.255448341369629
    5. ' elements' → logprob: -8.505448341369629
    6. 'élé' → logprob: -8.755448341369629
    7. 'plus' → logprob: -8.880448341369629
    8. 'k' → logprob: -9.130448341369629
    9. 'sorted' → logprob: -9.380448341369629
    10. ')' → logprob: -9.755448341369629

Token 321: ' petits' (ID: 38141)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005701723508536816
    2. '   ' → logprob: -6.505701541900635
    3. ' H' → logprob: -6.880701541900635
    4. '_' → logprob: -7.505701541900635
    5. 'pet' → logprob: -7.630701541900635
    6. ')' → logprob: -7.880701541900635
    7. '#' → logprob: -8.505702018737793
    8. ' ' → logprob: -8.755702018737793
    9. '.sort' → logprob: -8.880702018737793
    10. 'import' → logprob: -9.005702018737793

Token 322: ' avant' (ID: 13339)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1391058713197708
    2. 'H' → logprob: -2.264105796813965
    3. ' éléments' → logprob: -4.639105796813965
    4. 'elements' → logprob: -5.264105796813965
    5. 'ha' → logprob: -5.639105796813965
    6. '(H' → logprob: -5.889105796813965
    7. ' H' → logprob: -6.889105796813965
    8. 'val' → logprob: -7.014105796813965
    9. 'element' → logprob: -7.639105796813965
    10. ' elements' → logprob: -7.639105796813965

Token 323: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08415959775447845
    2. 'les' → logprob: -3.2091596126556396
    3. '()' → logprob: -4.4591593742370605
    4. '.' → logprob: -4.7091593742370605
    5. 'la' → logprob: -4.7091593742370605
    6. '(H' → logprob: -5.4591593742370605
    7. ',' → logprob: -5.8341593742370605
    8. ' H' → logprob: -6.9591593742370605
    9. '().' → logprob: -7.8341593742370605
    10. 'que' → logprob: -7.9591593742370605

Token 324: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.06273288279771805
    2. 'gr' → logprob: -2.8127329349517822
    3. '#' → logprob: -8.062732696533203
    4. ' plus' → logprob: -8.437732696533203
    5. '```' → logprob: -9.312732696533203
    6. 'élé' → logprob: -10.687732696533203
    7. 'larg' → logprob: -10.687732696533203
    8. 'aut' → logprob: -10.812732696533203
    9. 'grand' → logprob: -10.812732696533203
    10. 'import' → logprob: -11.562732696533203

Token 325: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.014273387379944324
    2. 'grand' → logprob: -4.514273166656494
    3. ' grands' → logprob: -6.264273166656494
    4. 'import' → logprob: -8.014273643493652
    5. 'pet' → logprob: -8.014273643493652
    6. 'ha' → logprob: -8.639273643493652
    7. 'élé' → logprob: -8.764273643493652
    8. '_gr' → logprob: -9.764273643493652
    9. ' grandes' → logprob: -10.014273643493652
    10. 'haut' → logprob: -10.139273643493652

Token 326: '.
' (ID: 558)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4857034981250763
    2. '   ' → logprob: -0.9857034683227539
    3. '    
' → logprob: -5.485703468322754
    4. '
' → logprob: -5.985703468322754
    5. '.
' → logprob: -6.235703468322754
    6. '.' → logprob: -6.485703468322754
    7. ',' → logprob: -7.860703468322754
    8. ':
' → logprob: -8.360703468322754
    9. ')
' → logprob: -9.110703468322754
    10. ':' → logprob: -9.235703468322754

Token 327: '   ' (ID: 271)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004102623555809259
    2. '   ' → logprob: -5.50410270690918
    3. '    
' → logprob: -12.00410270690918
    4. '
' → logprob: -12.12910270690918
    5. 'sorted' → logprob: -12.12910270690918
    6. ' H' → logprob: -12.87910270690918
    7. '=' → logprob: -13.75410270690918
    8. ' =' → logprob: -14.12910270690918
    9. ':
' → logprob: -14.75410270690918
    10. '#' → logprob: -14.87910270690918

Token 328: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.0003449984942562878
    2. '   ' → logprob: -8.000345230102539
    3. ' H' → logprob: -11.625345230102539
    4. '    
' → logprob: -15.250345230102539
    5. '	H' → logprob: -15.375345230102539
    6. 'sorted' → logprob: -16.00034523010254
    7. ' ' → logprob: -16.75034523010254
    8. '
' → logprob: -16.75034523010254
    9. '  ' → logprob: -18.00034523010254
    10. '```' → logprob: -18.37534523010254

Token 329: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0030318982899188995
    2. '.' → logprob: -6.0030317306518555
    3. '=' → logprob: -7.5030317306518555
    4. ' =' → logprob: -12.878031730651855
    5. 'sort' → logprob: -14.128031730651855
    6. ' .' → logprob: -14.378031730651855
    7. '.=' → logprob: -14.628031730651855
    8. '.sorted' → logprob: -15.503031730651855
    9. '=.' → logprob: -16.378032684326172
    10. ').' → logprob: -17.253032684326172

Token 330: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043794067460112274
    2. '()
' → logprob: -7.7504377365112305
    3. '()

' → logprob: -12.25043773651123
    4. '(' → logprob: -13.75043773651123
    5. '()
' → logprob: -14.12543773651123
    6. '(reverse' → logprob: -15.75043773651123
    7. ' ()' → logprob: -16.000438690185547
    8. '()\' → logprob: -16.125438690185547
    9. '()<' → logprob: -16.500438690185547
    10. '()`' → logprob: -16.500438690185547

Token 331: '    
' (ID: 1944)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7279842495918274
    2. '   ' → logprob: -0.8529842495918274
    3. '#' → logprob: -3.4779841899871826
    4. 'remaining' → logprob: -3.8529841899871826
    5. '
' → logprob: -4.602984428405762
    6. '    
' → logprob: -5.102984428405762
    7. 'for' → logprob: -5.727984428405762
    8. 'H' → logprob: -6.102984428405762
    9. 'indices' → logprob: -6.102984428405762
    10. 'diff' → logprob: -6.352984428405762

Token 332: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01839129813015461
    2. '   ' → logprob: -4.268391132354736
    3. '#' → logprob: -6.018391132354736
    4. 'for' → logprob: -6.643391132354736
    5. 'remaining' → logprob: -8.518391609191895
    6. 'H' → logprob: -9.018391609191895
    7. 'res' → logprob: -10.518391609191895
    8. 'sum' → logprob: -10.768391609191895
    9. 'total' → logprob: -11.018391609191895
    10. 'k' → logprob: -11.393391609191895

Token 333: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011428327299654484
    2. '#' (adapté à ' #') → logprob: -4.761428356170654
    3. 'remaining' → logprob: -6.136428356170654
    4. 'H' → logprob: -8.136427879333496
    5. 'res' → logprob: -9.761427879333496
    6. 'remain' → logprob: -10.136427879333496
    7. 'to' → logprob: -10.386427879333496
    8. 'rem' → logprob: -10.886427879333496
    9. 'rest' → logprob: -10.886427879333496
    10. 're' → logprob: -11.136427879333496

Token 334: ' Pour' (ID: 13931)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011921191588044167
    2. '#' → logprob: -5.261921405792236
    3. 'remaining' → logprob: -5.636921405792236
    4. 'H' → logprob: -7.011921405792236
    5. 'to' → logprob: -8.011920928955078
    6. 'for' → logprob: -8.011920928955078
    7. 'rest' → logprob: -8.261920928955078
    8. 'sum' → logprob: -8.386920928955078
    9. 'reste' → logprob: -8.761920928955078
    10. 'res' → logprob: -8.886920928955078

Token 335: ' minim' (ID: 23874)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05935120955109596
    2. ' i' → logprob: -2.9343512058258057
    3. '_' → logprob: -5.684351444244385
    4. 'result' → logprob: -7.309351444244385
    5. '_i' → logprob: -8.434350967407227
    6. ' _' → logprob: -10.059350967407227
    7. ' result' → logprob: -10.059350967407227
    8. 'k' → logprob: -10.684350967407227
    9. 'H' → logprob: -11.434350967407227
    10. 'res' → logprob: -12.059350967407227

Token 336: 'iser' (ID: 7466)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.1223532184958458
    2. 'iser' → logprob: -2.6223533153533936
    3. 'm' → logprob: -3.9973533153533936
    4. 'un' → logprob: -4.1223530769348145
    5. 'ser' → logprob: -5.2473530769348145
    6. 'n' → logprob: -6.4973530769348145
    7. '#' → logprob: -7.4973530769348145
    8. 'umer' → logprob: -8.747353553771973
    9. 'mum' → logprob: -9.122353553771973
    10. 'er' → logprob: -9.122353553771973

Token 337: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8897978067398071
    2. 'la' → logprob: -1.0147978067398071
    3. 'le' → logprob: -2.0147976875305176
    4. ' le' → logprob: -2.7647976875305176
    5. 'result' → logprob: -4.264797687530518
    6. 'l' → logprob: -4.764797687530518
    7. ' l' → logprob: -5.889797687530518
    8. 'les' → logprob: -6.264797687530518
    9. ' les' → logprob: -6.389797687530518
    10. ' result' → logprob: -7.264797687530518

Token 338: ' somme' (ID: 64484)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9807883501052856
    2. 'sum' → logprob: -1.1057883501052856
    3. 's' → logprob: -1.2307883501052856
    4. 'som' → logprob: -6.355788230895996
    5. 'H' → logprob: -9.855788230895996
    6. 'Som' → logprob: -10.730788230895996
    7. 'rés' → logprob: -10.855788230895996
    8. 'tail' → logprob: -10.980788230895996
    9. 'val' → logprob: -10.980788230895996
    10. 'print' → logprob: -10.980788230895996

Token 339: ',' (ID: 11)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.24918097257614136
    2. ' des' → logprob: -2.374181032180786
    3. 'de' → logprob: -2.874181032180786
    4. ',' → logprob: -3.499181032180786
    5. 'result' → logprob: -3.749181032180786
    6. ' de' → logprob: -4.499180793762207
    7. 'H' → logprob: -7.124180793762207
    8. 'del' → logprob: -7.124180793762207
    9. '#' → logprob: -7.374180793762207
    10. 'final' → logprob: -7.374180793762207

Token 340: ' il' (ID: 1793)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007695002015680075
    2. '   ' → logprob: -5.507695198059082
    3. 'for' → logprob: -5.882695198059082
    4. 'H' → logprob: -7.507695198059082
    5. ' result' → logprob: -8.632695198059082
    6. 'del' → logprob: -10.132695198059082
    7. 'res' → logprob: -11.132695198059082
    8. ' for' → logprob: -11.507695198059082
    9. 'remove' → logprob: -11.632695198059082
    10. 'sum' → logprob: -11.882695198059082

Token 341: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1811366230249405
    2. ' faut' → logprob: -1.8061366081237793
    3. '#' → logprob: -7.306136608123779
    4. 's' → logprob: -8.806137084960938
    5. 'fa' → logprob: -8.931137084960938
    6. ' faudra' → logprob: -8.931137084960938
    7. ' faudrait' → logprob: -9.431137084960938
    8. ' ' → logprob: -10.431137084960938
    9. ' f' → logprob: -10.431137084960938
    10. ' reste' → logprob: -10.556137084960938

Token 342: ' supprimer' (ID: 119553)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.05092378705739975
    2. 'en' → logprob: -4.050923824310303
    3. 'ret' → logprob: -4.675923824310303
    4. ' supprimer' → logprob: -5.050923824310303
    5. 'con' → logprob: -5.300923824310303
    6. 's' → logprob: -5.550923824310303
    7. 'g' → logprob: -6.050923824310303
    8. 'supp' → logprob: -6.800923824310303
    9. ' enlever' → logprob: -7.175923824310303
    10. ' retirer' → logprob: -7.175923824310303

Token 343: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3332914113998413
    2. ' k' → logprob: -1.3332914113998413
    3. ' les' → logprob: -4.208291530609131
    4. 'les' → logprob: -5.458291530609131
    5. 'le' → logprob: -8.708291053771973
    6. ' H' → logprob: -8.958291053771973
    7. 'H' → logprob: -9.208291053771973
    8. 'the' → logprob: -9.958291053771973
    9. ' the' → logprob: -10.083291053771973
    10. ' ' → logprob: -10.208291053771973

Token 344: 'ou' (ID: 283)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.76628842484206e-05
    2. ' k' → logprob: -9.625067710876465
    3. ')' → logprob: -14.000067710876465
    4. 'H' → logprob: -14.250067710876465
    5. '{k' → logprob: -17.25006675720215
    6. '	k' → logprob: -17.62506675720215
    7. 'n' → logprob: -17.87506675720215
    8. '(k' → logprob: -18.37506675720215
    9. '   ' → logprob: -18.37506675720215
    10. ' ' → logprob: -18.50006675720215

Token 345: ' ign' (ID: 8769)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003326049481984228
    2. ' k' → logprob: -8.250332832336426
    3. 'n' → logprob: -10.250332832336426
    4. ')' → logprob: -11.625332832336426
    5. 'keep' → logprob: -11.750332832336426
    6. 'remove' → logprob: -12.000332832336426
    7. 'ke' → logprob: -12.750332832336426
    8. 'sum' → logprob: -13.750332832336426
    9. '#' → logprob: -13.875332832336426
    10. 'ret' → logprob: -14.125332832336426

Token 346: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.000988030806183815
    2. 'or' → logprob: -7.500988006591797
    3. 'ore' → logprob: -8.875988006591797
    4. '```' → logprob: -9.250988006591797
    5. ')' → logprob: -10.250988006591797
    6. '   ' → logprob: -10.875988006591797
    7. 'o' → logprob: -10.875988006591797
    8. 'er' → logprob: -11.375988006591797
    9. '#' → logprob: -11.500988006591797
    10. ']' → logprob: -11.750988006591797

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009682760573923588
    2. 'k' → logprob: -7.6259684562683105
    3. ' k' → logprob: -8.750967979431152
    4. 'les' → logprob: -9.000967979431152
    5. ' les' → logprob: -9.375967979431152
    6. ' )' → logprob: -9.875967979431152
    7. ')
' → logprob: -10.375967979431152
    8. 'le' → logprob: -12.625967979431152
    9. ' ' → logprob: -12.750967979431152
    10. '#' → logprob: -12.875967979431152

Token 348: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4782794117927551
    2. ' k' → logprob: -0.9782794117927551
    3. ' les' → logprob: -5.7282795906066895
    4. 'les' → logprob: -7.2282795906066895
    5. 'le' → logprob: -10.353279113769531
    6. ' ' → logprob: -10.853279113769531
    7. ' the' → logprob: -10.978279113769531
    8. 'the' → logprob: -11.103279113769531
    9. '[k' → logprob: -11.103279113769531
    10. ' ' → logprob: -11.228279113769531

Token 349: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06229469180107117
    2. ' k' → logprob: -2.8122947216033936
    3. ' plus' → logprob: -8.812294960021973
    4. 'plus' → logprob: -9.062294960021973
    5. ' ' → logprob: -11.187294960021973
    6. 'n' → logprob: -11.687294960021973
    7. 'H' → logprob: -11.812294960021973
    8. 'prem' → logprob: -11.812294960021973
    9. ' H' → logprob: -12.187294960021973
    10. '
' → logprob: -12.812294960021973

Token 350: ' plus' (ID: 2932)
  Prédit: ' premiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.8429737091064453
    2. ' plus' → logprob: -1.5929737091064453
    3. 'plus' → logprob: -1.8429737091064453
    4. '+' → logprob: -1.9679737091064453
    5. 'prem' → logprob: -2.8429737091064453
    6. ' premières' → logprob: -5.967973709106445
    7. ' premier' → logprob: -6.467973709106445
    8. ' smallest' → logprob: -6.842973709106445
    9. '#' → logprob: -7.467973709106445
    10. ' éléments' → logprob: -7.467973709106445

Token 351: ' grands' (ID: 43085)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.03533199802041054
    2. 'gr' → logprob: -3.535331964492798
    3. ' petits' → logprob: -5.285332202911377
    4. ' petites' → logprob: -8.535331726074219
    5. ' grands' → logprob: -9.660331726074219
    6. 'grand' → logprob: -9.785331726074219
    7. 'pets' → logprob: -10.785331726074219
    8. 'import' → logprob: -11.035331726074219
    9. 'g' → logprob: -11.285331726074219
    10. ' grandes' → logprob: -11.410331726074219

Token 352: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.006115301977843046
    2. ' éléments' → logprob: -5.256115436553955
    3. 'H' → logprob: -7.506115436553955
    4. 'elements' → logprob: -8.381114959716797
    5. '#' → logprob: -10.256114959716797
    6. 'val' → logprob: -11.006114959716797
    7. 'é' → logprob: -11.756114959716797
    8. 'ha' → logprob: -11.881114959716797
    9. ' elements' → logprob: -12.006114959716797
    10. 'él' → logprob: -12.131114959716797

Token 353: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0047190687619149685
    2. ',' → logprob: -6.004719257354736
    3. '.' → logprob: -6.379719257354736
    4. '    
' → logprob: -9.004718780517578
    5. ':' → logprob: -9.129718780517578
    6. 'H' → logprob: -9.754718780517578
    7. 'from' → logprob: -10.629718780517578
    8. 's' → logprob: -10.629718780517578
    9. '.
' → logprob: -10.754718780517578
    10. ' ,' → logprob: -11.004718780517578

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22752293944358826
    2. 'result' → logprob: -1.6025229692459106
    3. ' result' → logprob: -7.227522850036621
    4. '    
' → logprob: -7.352522850036621
    5. '
' → logprob: -7.977522850036621
    6. 'H' → logprob: -8.227522850036621
    7. '```' → logprob: -10.477522850036621
    8. 'sum' → logprob: -10.727522850036621
    9. '   ' → logprob: -11.477522850036621
    10. '  ' → logprob: -11.602522850036621

Token 355: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.014495712704956532
    2. '   ' → logprob: -4.264495849609375
    3. 'H' → logprob: -8.889495849609375
    4. ' result' → logprob: -9.014495849609375
    5. '    
' → logprob: -10.889495849609375
    6. 'sum' → logprob: -10.889495849609375
    7. 'remaining' → logprob: -11.139495849609375
    8. 'res' → logprob: -12.514495849609375
    9. '
' → logprob: -12.639495849609375
    10. 'for' → logprob: -12.889495849609375

Token 356: ' Pour' (ID: 13931)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.006236979737877846
    2. '   ' → logprob: -5.506237030029297
    3. 'remaining' → logprob: -6.756237030029297
    4. 'H' → logprob: -7.756237030029297
    5. ' result' → logprob: -8.131237030029297
    6. '#' → logprob: -8.881237030029297
    7. 'rest' → logprob: -10.256237030029297
    8. 'sum' → logprob: -10.756237030029297
    9. 'res' → logprob: -11.131237030029297
    10. 'reste' → logprob: -11.631237030029297

Token 357: ' ce' (ID: 2357)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6739897131919861
    2. 'i' → logprob: -0.7989897131919861
    3. '_' → logprob: -4.048989772796631
    4. ' cela' → logprob: -4.298989772796631
    5. ' supprimer' → logprob: -6.048989772796631
    6. ' conserver' → logprob: -6.298989772796631
    7. ' k' → logprob: -6.798989772796631
    8. ' _' → logprob: -7.423989772796631
    9. ' H' → logprob: -8.173989295959473
    10. 'k' → logprob: -8.298989295959473

Token 358: ' faire' (ID: 8119)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1495421677827835
    2. 'faire' → logprob: -2.1495420932769775
    3. '_' → logprob: -4.774542331695557
    4. '_i' → logprob: -5.399542331695557
    5. ' faire' → logprob: -6.399542331695557
    6. 'f' → logprob: -6.399542331695557
    7. '_f' → logprob: -6.899542331695557
    8. 'fait' → logprob: -7.024542331695557
    9. 'k' → logprob: -7.274542331695557
    10. 's' → logprob: -7.524542331695557

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09201333671808243
    2. ':' → logprob: -2.967013359069824
    3. '   ' → logprob: -3.717013359069824
    4. ':
' → logprob: -4.967013359069824
    5. ' ,' → logprob: -5.717013359069824
    6. ' on' → logprob: -7.842013359069824
    7. ' :' → logprob: -8.592013359069824
    8. ',
' → logprob: -8.967013359069824
    9. 's' → logprob: -8.967013359069824
    10. 'on' → logprob: -9.217013359069824

Token 360: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21003910899162292
    2. 'H' → logprob: -2.2100391387939453
    3. ' result' → logprob: -3.2100391387939453
    4. '   ' → logprob: -3.7100391387939453
    5. ' H' → logprob: -4.460039138793945
    6. 'del' → logprob: -7.710039138793945
    7. 'ret' → logprob: -7.960039138793945
    8. ' garder' → logprob: -8.210039138793945
    9. 'rest' → logprob: -8.460039138793945
    10. '#' → logprob: -8.460039138793945

Token 361: ' garde' (ID: 65309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.30738866329193115
    2. 'con' → logprob: -2.1823887825012207
    3. 'ret' → logprob: -2.3073887825012207
    4. 's' → logprob: -4.557388782501221
    5. ' garde' → logprob: -4.932388782501221
    6. '#' → logprob: -5.307388782501221
    7. 'pe' → logprob: -5.432388782501221
    8. 'slice' → logprob: -5.557388782501221
    9. ' conserve' → logprob: -5.682388782501221
    10. 'sup' → logprob: -6.307388782501221

Token 362: ' seulement' (ID: 32072)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11859552562236786
    2. ' H' → logprob: -3.243595600128174
    3. 'les' → logprob: -3.493595600128174
    4. 'n' → logprob: -3.618595600128174
    5. ' les' → logprob: -4.743595600128174
    6. 'la' → logprob: -5.993595600128174
    7. 'len' → logprob: -6.243595600128174
    8. ' la' → logprob: -6.868595600128174
    9. ' n' → logprob: -7.618595600128174
    10. ' uniquement' → logprob: -8.743595123291016

Token 363: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03423948213458061
    2. ' H' → logprob: -3.6592395305633545
    3. ' les' → logprob: -5.909239292144775
    4. 'n' → logprob: -5.909239292144775
    5. 'les' → logprob: -6.409239292144775
    6. 'len' → logprob: -8.284239768981934
    7. 'la' → logprob: -8.784239768981934
    8. ' la' → logprob: -8.909239768981934
    9. ' n' → logprob: -9.159239768981934
    10. 'sum' → logprob: -9.659239768981934

Token 364: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003847105661407113
    2. 'H' → logprob: -5.878847122192383
    3. ' n' → logprob: -6.878847122192383
    4. ' H' → logprob: -11.878847122192383
    5. '   ' → logprob: -12.753847122192383
    6. ':n' → logprob: -14.378847122192383
    7. '[n' → logprob: -14.753847122192383
    8. ' ' → logprob: -14.878847122192383
    9. '[:' → logprob: -15.003847122192383
    10. 'len' → logprob: -15.378847122192383

Token 365: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007899748161435127
    2. ' n' → logprob: -7.250790119171143
    3. 'H' → logprob: -9.625789642333984
    4. '   ' → logprob: -12.000789642333984
    5. ')n' → logprob: -13.000789642333984
    6. '[n' → logprob: -13.500789642333984
    7. ':n' → logprob: -14.125789642333984
    8. ')' → logprob: -14.125789642333984
    9. ' H' → logprob: -14.875789642333984
    10. '
' → logprob: -15.125789642333984

Token 366: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5644281506538391
    2. ' -' → logprob: -1.1894280910491943
    3. '-k' → logprob: -2.0644280910491943
    4. ' ' → logprob: -10.689428329467773
    5. '-K' → logprob: -13.689428329467773
    6. '-n' → logprob: -13.689428329467773
    7. 'k' → logprob: -14.814428329467773
    8. '
' → logprob: -14.939428329467773
    9. ' ' → logprob: -15.064428329467773
    10. '-t' → logprob: -15.189428329467773

Token 367: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00010902655776590109
    2. ' k' → logprob: -9.12510871887207
    3. ' ' → logprob: -17.25010871887207
    4. '
' → logprob: -17.87510871887207
    5. '	k' → logprob: -18.00010871887207
    6. '-k' → logprob: -18.25010871887207
    7. ')' → logprob: -19.25010871887207
    8. '   ' → logprob: -19.62510871887207
    9. '(k' → logprob: -19.75010871887207
    10. '_k' → logprob: -20.12510871887207

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004967255052179098
    2. ')]' → logprob: -5.504967212677002
    3. '-k' → logprob: -8.12996768951416
    4. ' )' → logprob: -8.37996768951416
    5. ')])' → logprob: -9.37996768951416
    6. '-' → logprob: -9.75496768951416
    7. '-n' → logprob: -9.87996768951416
    8. ' -' → logprob: -10.50496768951416
    9. ')n' → logprob: -10.62996768951416
    10. '-)' → logprob: -10.75496768951416

Token 369: ' plus' (ID: 2932)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.6663731336593628
    2. ' premiers' → logprob: -1.1663731336593628
    3. ' smallest' → logprob: -3.2913732528686523
    4. ' first' → logprob: -3.5413732528686523
    5. 'first' → logprob: -3.9163732528686523
    6. 'plus' → logprob: -4.166373252868652
    7. ' plus' → logprob: -4.166373252868652
    8. ')' → logprob: -4.541373252868652
    9. ' premières' → logprob: -4.916373252868652
    10. 'elements' → logprob: -5.541373252868652

Token 370: ' petits' (ID: 38141)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.004707565065473318
    2. ' petits' → logprob: -5.379707336425781
    3. 'gr' → logprob: -10.379707336425781
    4. '_pet' → logprob: -11.254707336425781
    5. 'pets' → logprob: -11.629707336425781
    6. 'pe' → logprob: -12.129707336425781
    7. 'small' → logprob: -12.129707336425781
    8. ' petites' → logprob: -12.879707336425781
    9. 'p' → logprob: -12.879707336425781
    10. '[' → logprob: -13.004707336425781

Token 371: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07024694979190826
    2. 'elements' → logprob: -3.445246934890747
    3. ' éléments' → logprob: -3.570246934890747
    4. ' elements' → logprob: -5.445247173309326
    5. 'H' → logprob: -5.820247173309326
    6. ' H' → logprob: -9.695246696472168
    7. ')' → logprob: -9.820246696472168
    8. '_elements' → logprob: -9.945246696472168
    9. ']' → logprob: -10.195246696472168
    10. 'element' → logprob: -10.320246696472168

Token 372: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004761310759931803
    2. 'H' → logprob: -6.754761219024658
    3. '    
' → logprob: -6.754761219024658
    4. 'result' → logprob: -7.129761219024658
    5. '
' → logprob: -7.504761219024658
    6. ',' → logprob: -7.754761219024658
    7. '.' → logprob: -8.504761695861816
    8. '=' → logprob: -9.004761695861816
    9. ':' → logprob: -9.254761695861816
    10. ' =' → logprob: -9.879761695861816

Token 373: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.10068655014038086
    2. ' H' → logprob: -2.350686550140381
    3. ' la' → logprob: -7.850686550140381
    4. 'la' → logprob: -9.475687026977539
    5. ' ' → logprob: -12.350687026977539
    6. 'l' → logprob: -12.850687026977539
    7. '	H' → logprob: -13.725687026977539
    8. '   ' → logprob: -13.975687026977539
    9. ' ' → logprob: -14.350687026977539
    10. '```' → logprob: -14.350687026977539

Token 374: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.011486783623695374
    2. 'liste' → logprob: -4.511487007141113
    3. ' H' → logprob: -8.261487007141113
    4. 'list' → logprob: -8.886487007141113
    5. ' liste' → logprob: -11.136487007141113
    6. '```' → logprob: -11.511487007141113
    7. 'lista' → logprob: -11.886487007141113
    8. '[' → logprob: -13.886487007141113
    9. 'n' → logprob: -13.886487007141113
    10. 'la' → logprob: -13.886487007141113

Token 375: ' tri' (ID: 12665)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5830240845680237
    2. '   ' → logprob: -0.9580240845680237
    3. '(H' → logprob: -3.458024024963379
    4. ' H' → logprob: -4.833024024963379
    5. '=' → logprob: -5.083024024963379
    6. ' =' → logprob: -5.708024024963379
    7. '[:' → logprob: -6.083024024963379
    8. '(' → logprob: -6.458024024963379
    9. '.' → logprob: -6.583024024963379
    10. ':' → logprob: -7.208024024963379

Token 376: 'ée' (ID: 2894)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7016387581825256
    2. 'ated' → logprob: -1.7016386985778809
    3. 'ed' → logprob: -1.8266386985778809
    4. 'ted' → logprob: -3.076638698577881
    5. 'n' → logprob: -3.451638698577881
    6. 'sted' → logprob: -4.326638698577881
    7. 'ned' → logprob: -4.576638698577881
    8. '   ' → logprob: -4.701638698577881
    9. 'med' → logprob: -4.701638698577881
    10. 'ng' → logprob: -5.076638698577881

Token 377: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04513520002365112
    2. 'H' → logprob: -3.795135259628296
    3. '=' → logprob: -4.670135021209717
    4. '.' → logprob: -5.920135021209717
    5. 'result' → logprob: -5.920135021209717
    6. ' =' → logprob: -6.045135021209717
    7. ',' → logprob: -6.420135021209717
    8. ':' → logprob: -7.670135021209717
    9. '    
' → logprob: -7.670135021209717
    10. '[' → logprob: -7.670135021209717

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.633910596370697
    2. 'result' → logprob: -0.758910596370697
    3. ' result' → logprob: -6.883910655975342
    4. '    
' → logprob: -9.133910179138184
    5. '
' → logprob: -9.758910179138184
    6. 'sum' → logprob: -10.008910179138184
    7. 'H' → logprob: -10.258910179138184
    8. '  ' → logprob: -10.758910179138184
    9. '```' → logprob: -12.758910179138184
    10. '	result' → logprob: -13.383910179138184

Token 379: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.44843387603759766
    2. '   ' → logprob: -1.4484338760375977
    3. 'H' → logprob: -2.4484338760375977
    4. 'sum' → logprob: -3.3234338760375977
    5. ' result' → logprob: -5.948433876037598
    6. ' H' → logprob: -7.823433876037598
    7. ' sum' → logprob: -8.323433876037598
    8. '  ' → logprob: -9.323433876037598
    9. 'selected' → logprob: -9.573433876037598
    10. 'remaining' → logprob: -9.573433876037598

Token 380: ' H' (ID: 487)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0024107310455292463
    2. '   ' → logprob: -6.502410888671875
    3. ' result' → logprob: -8.002410888671875
    4. 'remaining' → logprob: -8.252410888671875
    5. 'H' → logprob: -9.127410888671875
    6. 'selected' → logprob: -9.627410888671875
    7. 'sum' → logprob: -9.627410888671875
    8. 'subset' → logprob: -11.002410888671875
    9. 's' → logprob: -11.502410888671875
    10. 'sub' → logprob: -11.752410888671875

Token 381: '[:' (ID: 7808)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35017088055610657
    2. '=' → logprob: -1.3501708507537842
    3. '_rest' → logprob: -4.975171089172363
    4. '_remaining' → logprob: -5.225171089172363
    5. '_subset' → logprob: -5.600171089172363
    6. '_filtered' → logprob: -6.100171089172363
    7. '_keep' → logprob: -6.225171089172363
    8. '_trim' → logprob: -6.225171089172363
    9. '_' → logprob: -6.350171089172363
    10. '_rem' → logprob: -6.350171089172363

Token 382: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000895024451892823
    2. '(n' → logprob: -7.125895023345947
    3. ' n' → logprob: -9.500895500183105
    4. '(' → logprob: -11.625895500183105
    5. ' (' → logprob: -12.750895500183105
    6. '   ' → logprob: -13.000895500183105
    7. ':n' → logprob: -15.125895500183105
    8. ',' → logprob: -15.250895500183105
    9. ']' → logprob: -15.750895500183105
    10. '-' → logprob: -15.750895500183105

Token 383: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.29485344886779785
    2. ' -' → logprob: -1.5448534488677979
    3. '-' → logprob: -3.169853448867798
    4. '   ' → logprob: -12.919853210449219
    5. ' ' → logprob: -13.294853210449219
    6. '-K' → logprob: -14.669853210449219
    7. ']' → logprob: -14.919853210449219
    8. '-n' → logprob: -14.919853210449219
    9. '-kar' → logprob: -15.544853210449219
    10. '−' → logprob: -16.04485321044922

Token 384: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0008045066497288644
    2. ' k' → logprob: -7.125804424285889
    3. ' ' → logprob: -17.000804901123047
    4. '   ' → logprob: -17.125804901123047
    5. '	k' → logprob: -18.375804901123047
    6. '_k' → logprob: -18.750804901123047
    7. ']' → logprob: -19.250804901123047
    8. ' к' → logprob: -19.250804901123047
    9. ' ' → logprob: -20.125804901123047
    10. '-k' → logprob: -20.875804901123047

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.333223139634356e-05
    2. ' ]' → logprob: -10.625033378601074
    3. ']
' → logprob: -11.875033378601074
    4. ']

' → logprob: -14.375033378601074
    5. '])' → logprob: -14.875033378601074
    6. '],' → logprob: -15.500033378601074
    7. ']]' → logprob: -15.750033378601074
    8. 'sum' → logprob: -16.125032424926758
    9. '];' → logprob: -16.500032424926758
    10. ']
' → logprob: -16.625032424926758

Token 386: ' signifie' (ID: 81149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48925119638442993
    2. ']' → logprob: -1.2392511367797852
    3. ')
' → logprob: -3.739251136779785
    4. '])' → logprob: -3.739251136779785
    5. 'sum' → logprob: -3.989251136779785
    6. '   ' → logprob: -4.739251136779785
    7. ']
' → logprob: -4.989251136779785
    8. 'result' → logprob: -5.239251136779785
    9. '  ' → logprob: -6.114251136779785
    10. ' )' → logprob: -6.489251136779785

Token 387: ' '' (ID: 461)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.28313329815864563
    2. ' H' → logprob: -2.0331332683563232
    3. 'les' → logprob: -3.2831332683563232
    4. ' garder' → logprob: -3.9081332683563232
    5. ' les' → logprob: -4.158133506774902
    6. 'la' → logprob: -4.283133506774902
    7. ' la' → logprob: -4.783133506774902
    8. ' prendre' → logprob: -5.533133506774902
    9. 'prendre' → logprob: -5.908133506774902
    10. ' ' → logprob: -5.908133506774902

Token 388: 'prendre' (ID: 105312)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6019060015678406
    2. 'H' → logprob: -1.7269060611724854
    3. 'la' → logprob: -1.9769060611724854
    4. 'prendre' → logprob: -2.7269060611724854
    5. 'g' → logprob: -3.2269060611724854
    6. 't' → logprob: -4.851905822753906
    7. 'tout' → logprob: -5.601905822753906
    8. ' H' → logprob: -5.851905822753906
    9. ' les' → logprob: -6.351905822753906
    10. ' prendre' → logprob: -6.476905822753906

Token 389: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8922609090805054
    2. 'H' → logprob: -1.5172609090805054
    3. ' les' → logprob: -1.6422609090805054
    4. ' H' → logprob: -2.517261028289795
    5. ' la' → logprob: -3.392261028289795
    6. 'la' → logprob: -3.642261028289795
    7. 'n' → logprob: -4.392261028289795
    8. 'le' → logprob: -5.642261028289795
    9. 'the' → logprob: -5.642261028289795
    10. ' n' → logprob: -5.642261028289795

Token 390: ' éléments' (ID: 57375)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.4634108245372772
    2. 'n' → logprob: -1.8384108543395996
    3. ' premiers' → logprob: -2.2134108543395996
    4. ' n' → logprob: -2.7134108543395996
    5. 'élé' → logprob: -3.5884108543395996
    6. ' premier' → logprob: -6.5884108543396
    7. 'elements' → logprob: -6.5884108543396
    8. '(n' → logprob: -7.0884108543396
    9. ' premières' → logprob: -7.3384108543396
    10. ' first' → logprob: -7.4634108543396

Token 391: ' depuis' (ID: 16277)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8575136065483093
    2. ' jusqu' → logprob: -1.232513666152954
    3. 'de' → logprob: -1.732513666152954
    4. 'jus' → logprob: -2.732513666152954
    5. '0' → logprob: -3.982513666152954
    6. ' ' → logprob: -5.107513427734375
    7. 'from' → logprob: -5.232513427734375
    8. ' from' → logprob: -6.357513427734375
    9. ' jusque' → logprob: -6.607513427734375
    10. ' des' → logprob: -6.857513427734375

Token 392: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2831209897994995
    2. 'le' → logprob: -1.6581209897994995
    3. 'l' → logprob: -3.283121109008789
    4. ' le' → logprob: -4.783121109008789
    5. ' ' → logprob: -5.783121109008789
    6. 'dé' → logprob: -6.158121109008789
    7. 'index' → logprob: -6.408121109008789
    8. ' l' → logprob: -6.658121109008789
    9. 'la' → logprob: -6.908121109008789
    10. 'de' → logprob: -8.158121109008789

Token 393: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.10214871168136597
    2. '0' → logprob: -2.3521487712860107
    3. 'd' → logprob: -6.352148532867432
    4. 'de' → logprob: -9.35214900970459
    5. ' début' → logprob: -9.97714900970459
    6. 'prem' → logprob: -10.10214900970459
    7. 'index' → logprob: -12.35214900970459
    8. ' ' → logprob: -12.60214900970459
    9. 'indice' → logprob: -12.97714900970459
    10. '[' → logprob: -13.10214900970459

Token 394: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.038209136575460434
    2. 'jus' → logprob: -3.6632091999053955
    3. ' de' → logprob: -5.288208961486816
    4. 'de' → logprob: -6.038208961486816
    5. ' jusque' → logprob: -6.038208961486816
    6. '   ' → logprob: -7.788208961486816
    7. '0' → logprob: -7.788208961486816
    8. ' ' → logprob: -8.288208961486816
    9. ' up' → logprob: -8.413208961486816
    10. ']' → logprob: -8.663208961486816

Token 395: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.975942075252533
    2. 'la' → logprob: -1.3509421348571777
    3. ' la' → logprob: -1.8509421348571777
    4. ' H' → logprob: -2.2259421348571777
    5. 'n' → logprob: -3.1009421348571777
    6. 'l' → logprob: -3.8509421348571777
    7. ' n' → logprob: -4.225942134857178
    8. '0' → logprob: -4.225942134857178
    9. ' ' → logprob: -6.350942134857178
    10. ' l' → logprob: -7.100942134857178

Token 396: ' jusqu' (ID: 21961)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04428265616297722
    2. ':n' → logprob: -3.6692826747894287
    3. '[:' → logprob: -4.79428243637085
    4. '][:' → logprob: -5.41928243637085
    5. ' ]' → logprob: -6.54428243637085
    6. ' ' → logprob: -6.91928243637085
    7. 'n' → logprob: -7.04428243637085
    8. '(n' → logprob: -7.41928243637085
    9. '   ' → logprob: -8.169282913208008
    10. '[n' → logprob: -8.169282913208008

Token 397: ''à' (ID: 33688)
  Prédit: ':n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':n' → logprob: -0.8752477169036865
    2. 'à' → logprob: -1.2502477169036865
    3. ':' → logprob: -1.8752477169036865
    4. ''à' → logprob: -2.3752477169036865
    5. ' à' → logprob: -3.5002477169036865
    6. 'au' → logprob: -4.500247955322266
    7. '’à' → logprob: -5.750247955322266
    8. ']' → logprob: -6.750247955322266
    9. 'n' → logprob: -7.125247955322266
    10. ''au' → logprob: -7.125247955322266

Token 398: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22611840069293976
    2. ' n' → logprob: -1.6011184453964233
    3. '(n' → logprob: -7.976118564605713
    4. ' (' → logprob: -8.101118087768555
    5. ' ' → logprob: -10.976118087768555
    6. ']' → logprob: -11.101118087768555
    7. '(' → logprob: -12.476118087768555
    8. ' ' → logprob: -12.976118087768555
    9. '	n' → logprob: -12.976118087768555
    10. 'l' → logprob: -13.226118087768555

Token 399: ''ind' (ID: 82245)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14569082856178284
    2. '-n' → logprob: -2.89569091796875
    3. '(n' → logprob: -3.14569091796875
    4. 'index' → logprob: -4.64569091796875
    5. '[n' → logprob: -5.52069091796875
    6. ' n' → logprob: -5.64569091796875
    7. '-(' → logprob: -5.64569091796875
    8. '-' → logprob: -5.77069091796875
    9. '-index' → logprob: -5.89569091796875
    10. '-k' → logprob: -5.89569091796875

Token 400: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.049690406769514084
    2. 'e' → logprob: -3.7996904850006104
    3. 'ice' → logprob: -3.7996904850006104
    4. '-' → logprob: -7.174690246582031
    5. 'exe' → logprob: -7.799690246582031
    6. 'i' → logprob: -7.924690246582031
    7. 'x' → logprob: -7.924690246582031
    8. '```' → logprob: -8.174690246582031
    9. 'ices' → logprob: -8.299690246582031
    10. 'n' → logprob: -8.299690246582031

Token 401: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12935011088848114
    2. ' n' → logprob: -2.254350185394287
    3. '(n' → logprob: -4.379350185394287
    4. ' (' → logprob: -6.254350185394287
    5. '[n' → logprob: -6.504350185394287
    6. ']' → logprob: -8.754349708557129
    7. ':n' → logprob: -8.754349708557129
    8. ')n' → logprob: -10.629349708557129
    9. ' [' → logprob: -11.004349708557129
    10. '```' → logprob: -11.504349708557129

Token 402: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2255539894104004
    2. ' n' → logprob: -1.6005539894104004
    3. '(n' → logprob: -9.975553512573242
    4. '   ' → logprob: -10.600553512573242
    5. ' (' → logprob: -10.600553512573242
    6. ')n' → logprob: -10.975553512573242
    7. ']' → logprob: -11.850553512573242
    8. ' ' → logprob: -11.850553512573242
    9. '	n' → logprob: -12.225553512573242
    10. '  ' → logprob: -13.600553512573242

Token 403: '-k' (ID: 10897)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2816433012485504
    2. '-k' → logprob: -1.656643271446228
    3. '-' → logprob: -2.9066433906555176
    4. ' ' → logprob: -11.53164291381836
    5. '   ' → logprob: -12.03164291381836
    6. '-K' → logprob: -14.53164291381836
    7. ' ' → logprob: -14.65664291381836
    8. '  ' → logprob: -14.65664291381836
    9. '	' → logprob: -14.65664291381836
    10. '-n' → logprob: -14.90664291381836

Token 404: ')-' (ID: 14080)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5280061960220337
    2. ']' → logprob: -0.9030061960220337
    3. ']'' → logprob: -6.278006076812744
    4. ')' → logprob: -6.778006076812744
    5. ' ]' → logprob: -7.153006076812744
    6. ']]' → logprob: -7.778006076812744
    7. '-' → logprob: -7.903006076812744
    8. '])' → logprob: -10.153006553649902
    9. ' )' → logprob: -10.278006553649902
    10. 'n' → logprob: -10.653006553649902

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006703823455609381
    2. ']' → logprob: -7.625670433044434
    3. ' ' → logprob: -9.375670433044434
    4. 'k' → logprob: -9.500670433044434
    5. ')' → logprob: -11.000670433044434
    6. '```' → logprob: -13.000670433044434
    7. 'n' → logprob: -13.125670433044434
    8. '(' → logprob: -14.875670433044434
    9. ' ]' → logprob: -15.000670433044434
    10. ' k' → logprob: -15.250670433044434

Token 406: ' inclus' (ID: 11891)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017472924664616585
    2. ' ]' → logprob: -6.876747131347656
    3. '])' → logprob: -8.001747131347656
    4. 'sum' → logprob: -8.876747131347656
    5. ']
' → logprob: -9.751747131347656
    6. '   ' → logprob: -10.126747131347656
    7. '][:' → logprob: -10.376747131347656
    8. '].' → logprob: -10.626747131347656
    9. ']
' → logprob: -10.751747131347656
    10. ' ' → logprob: -11.376747131347656

Token 407: ''.
' (ID: 49980)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002015139180002734
    2. 'n' → logprob: -9.250201225280762
    3. ' ]' → logprob: -10.250201225280762
    4. '(n' → logprob: -11.125201225280762
    5. '])' → logprob: -11.250201225280762
    6. ']
' → logprob: -11.875201225280762
    7. ':]' → logprob: -11.875201225280762
    8. ')' → logprob: -12.500201225280762
    9. ':' → logprob: -12.625201225280762
    10. ':n' → logprob: -12.750201225280762

Token 408: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.013929713517427444
    2. 'sum' → logprob: -4.763929843902588
    3. '   ' → logprob: -5.638929843902588
    4. ' result' → logprob: -7.138929843902588
    5. '=' → logprob: -7.763929843902588
    6. ']' → logprob: -8.38892936706543
    7. '
' → logprob: -9.76392936706543
    8. '(result' → logprob: -10.01392936706543
    9. ' =' → logprob: -10.13892936706543
    10. ')' → logprob: -10.38892936706543

Token 409: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0021513307001441717
    2. '   ' → logprob: -6.2521514892578125
    3. ' result' → logprob: -8.627151489257812
    4. 'sum' → logprob: -10.127151489257812
    5. '
' → logprob: -13.752151489257812
    6. '	result' → logprob: -14.502151489257812
    7. '    
' → logprob: -15.002151489257812
    8. 'res' → logprob: -15.377151489257812
    9. ']' → logprob: -15.627151489257812
    10. '  ' → logprob: -15.627151489257812

Token 410: ' sum' (ID: 4215)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0008332127472385764
    2. '   ' → logprob: -7.500833034515381
    3. ' result' → logprob: -8.375833511352539
    4. 'sum' → logprob: -10.125833511352539
    5. '
' → logprob: -13.500833511352539
    6. '```' → logprob: -13.500833511352539
    7. '    
' → logprob: -14.000833511352539
    8. '	result' → logprob: -14.125833511352539
    9. 'res' → logprob: -14.500833511352539
    10. 'remaining' → logprob: -14.500833511352539

Token 411: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004111054353415966
    2. '(' → logprob: -5.504111289978027
    3. 'H' → logprob: -10.879111289978027
    4. '=' → logprob: -12.004111289978027
    5. '()' → logprob: -12.629111289978027
    6. '(
' → logprob: -13.379111289978027
    7. '_' → logprob: -14.129111289978027
    8. ' (' → logprob: -14.254111289978027
    9. 's' → logprob: -15.254111289978027
    10. ' =' → logprob: -15.879111289978027

Token 412: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.5048530030981055e-06
    2. '[n' → logprob: -14.375001907348633
    3. ')' → logprob: -14.625001907348633
    4. '[' → logprob: -15.375001907348633
    5. ' [:' → logprob: -16.125001907348633
    6. '[:-' → logprob: -16.750001907348633
    7. '[:]' → logprob: -17.375001907348633
    8. '][:' → logprob: -18.875001907348633
    9. '[
' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.250001907348633

Token 413: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012082771718269214
    2. ' n' → logprob: -9.250121116638184
    3. '(n' → logprob: -10.875121116638184
    4. '   ' → logprob: -12.250121116638184
    5. ' (' → logprob: -14.625121116638184
    6. ' ' → logprob: -15.750121116638184
    7. '(' → logprob: -16.000120162963867
    8. ']' → logprob: -16.625120162963867
    9. '  ' → logprob: -16.750120162963867
    10. '	n' → logprob: -16.750120162963867

Token 414: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3670927584171295
    2. '-k' → logprob: -1.2420927286148071
    3. '-' → logprob: -3.9920928478240967
    4. ' ' → logprob: -11.992093086242676
    5. '   ' → logprob: -12.117093086242676
    6. '	' → logprob: -14.242093086242676
    7. '-
' → logprob: -14.742093086242676
    8. '-n' → logprob: -15.492093086242676
    9. ' -
' → logprob: -15.492093086242676
    10. '  ' → logprob: -15.617093086242676

Token 415: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012519309297204018
    2. ' k' → logprob: -4.387519359588623
    3. '-k' → logprob: -12.762518882751465
    4. '_k' → logprob: -12.762518882751465
    5. ' ' → logprob: -13.012518882751465
    6. '   ' → logprob: -14.512518882751465
    7. '	k' → logprob: -14.637518882751465
    8. ' к' → logprob: -15.575018882751465
    9. ' ' → logprob: -16.13751983642578
    10. '  ' → logprob: -16.13751983642578

Token 416: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00021486106561496854
    2. ')' → logprob: -8.500214576721191
    3. '])
' → logprob: -12.000214576721191
    4. ' ])' → logprob: -13.000214576721191
    5. ')])' → logprob: -13.875214576721191
    6. ']))' → logprob: -14.250214576721191
    7. ']' → logprob: -14.625214576721191
    8. '))' → logprob: -14.750214576721191
    9. '})' → logprob: -15.750214576721191
    10. ''])' → logprob: -16.375215530395508

Token 417: ' calc' (ID: 25691)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36631613969802856
    2. 'result' → logprob: -1.7413160800933838
    3. '<|end|>' → logprob: -2.616316080093384
    4. '()' → logprob: -3.366316080093384
    5. '(result' → logprob: -4.616316318511963
    6. '
' → logprob: -5.241316318511963
    7. 'print' → logprob: -6.241316318511963
    8. ')
' → logprob: -6.616316318511963
    9. ']' → logprob: -6.866316318511963
    10. '()
' → logprob: -6.991316318511963

Token 418: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0005246769287623465
    2. 'ul' → logprob: -8.125524520874023
    3. 'uler' → logprob: -9.250524520874023
    4. 'cule' → logprob: -9.375524520874023
    5. 'ulate' → logprob: -10.750524520874023
    6. '```' → logprob: -12.375524520874023
    7. 'ulte' → logprob: -12.625524520874023
    8. 'ulé' → logprob: -12.875524520874023
    9. ')' → logprob: -13.125524520874023
    10. '=' → logprob: -13.500524520874023

Token 419: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.245222806930542
    2. ' la' → logprob: -1.620222806930542
    3. '(sum' → logprob: -1.745222806930542
    4. '(' → logprob: -1.745222806930542
    5. 'la' → logprob: -2.120222806930542
    6. ')' → logprob: -4.245223045349121
    7. ' sum' → logprob: -4.245223045349121
    8. 'the' → logprob: -4.995223045349121
    9. 'l' → logprob: -5.495223045349121
    10. ' the' → logprob: -6.370223045349121

Token 420: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.009132340550422668
    2. ' sum' → logprob: -5.259132385253906
    3. 's' → logprob: -5.759132385253906
    4. ' somme' → logprob: -7.634132385253906
    5. 'som' → logprob: -8.384132385253906
    6. '(sum' → logprob: -11.884132385253906
    7. ' som' → logprob: -12.384132385253906
    8. ' ' → logprob: -13.134132385253906
    9. '	sum' → logprob: -13.134132385253906
    10. 'summ' → logprob: -13.259132385253906

Token 421: ' de' (ID: 334)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004688106942921877
    2. '(' → logprob: -5.379688262939453
    3. '(
' → logprob: -9.754688262939453
    4. '([' → logprob: -12.879688262939453
    5. ' (' → logprob: -13.379688262939453
    6. '(sum' → logprob: -13.504688262939453
    7. '(

' → logprob: -13.754688262939453
    8. '(
' → logprob: -14.254688262939453
    9. 'of' → logprob: -14.629688262939453
    10. '=' → logprob: -14.754688262939453

Token 422: ' ces' (ID: 10532)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.11464823782444
    2. ' H' → logprob: -2.2396483421325684
    3. '(H' → logprob: -6.364648342132568
    4. '(' → logprob: -10.73964786529541
    5. ' la' → logprob: -10.98964786529541
    6. ' ' → logprob: -10.98964786529541
    7. 'the' → logprob: -11.11464786529541
    8. ')' → logprob: -11.36464786529541
    9. ' the' → logprob: -11.73964786529541
    10. ' (' → logprob: -12.86464786529541

Token 423: ' éléments' (ID: 57375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7073387503623962
    2. '(' → logprob: -2.207338809967041
    3. ']' → logprob: -2.332338809967041
    4. 'H' → logprob: -2.957338809967041
    5. '(H' → logprob: -2.957338809967041
    6. ' H' → logprob: -3.457338809967041
    7. '(n' → logprob: -3.457338809967041
    8. ' ' → logprob: -3.707338809967041
    9. ' (' → logprob: -3.707338809967041
    10. '[:' → logprob: -3.832338809967041

Token 424: ' rest' (ID: 2867)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11991269886493683
    2. '(n' → logprob: -2.869912624359131
    3. ')' → logprob: -3.744912624359131
    4. '(H' → logprob: -3.994912624359131
    5. '()' → logprob: -4.869912624359131
    6. ']' → logprob: -5.744912624359131
    7. '.' → logprob: -7.619912624359131
    8. '[:]' → logprob: -7.619912624359131
    9. '[:' → logprob: -7.994912624359131
    10. '(result' → logprob: -7.994912624359131

Token 425: 'ants' (ID: 2027)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.5313985347747803
    2. ')' → logprob: -1.7813985347747803
    3. '(H' → logprob: -2.2813985347747803
    4. 'e' → logprob: -2.4063985347747803
    5. '()' → logprob: -2.4063985347747803
    6. 'é' → logprob: -2.7813985347747803
    7. '(' → logprob: -2.9063985347747803
    8. '   ' → logprob: -3.4063985347747803
    9. '[' → logprob: -3.5313985347747803
    10. 'H' → logprob: -3.7813985347747803

Token 426: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7805228233337402
    2. '(' → logprob: -0.9055228233337402
    3. '(n' → logprob: -2.9055228233337402
    4. ')' → logprob: -3.1555228233337402
    5. ']' → logprob: -3.9055228233337402
    6. '(sum' → logprob: -5.03052282333374
    7. '(H' → logprob: -5.78052282333374
    8. '<|end|>' → logprob: -5.90552282333374
    9. '   ' → logprob: -6.53052282333374
    10. 'sum' → logprob: -6.65552282333374

Token 427: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.048698194324970245
    2. '   ' → logprob: -3.0486981868743896
    3. ' result' → logprob: -9.173698425292969
    4. '
' → logprob: -12.798698425292969
    5. 'sum' → logprob: -13.548698425292969
    6. '    
' → logprob: -14.048698425292969
    7. '=' → logprob: -14.548698425292969
    8. '	result' → logprob: -14.548698425292969
    9. '```' → logprob: -15.048698425292969
    10. '  ' → logprob: -15.298698425292969

Token 428: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0007324361358769238
    2. '   ' → logprob: -7.250732421875
    3. ' result' → logprob: -10.750732421875
    4. 'sum' → logprob: -14.500732421875
    5. '	result' → logprob: -16.000732421875
    6. '
' → logprob: -16.250732421875
    7. '    
' → logprob: -17.125732421875
    8. '  ' → logprob: -17.125732421875
    9. 'res' → logprob: -17.375732421875
    10. ' ' → logprob: -17.625732421875

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. '=sum' → logprob: -16.011871337890625
    4. '＝' → logprob: -16.761871337890625
    5. ' ' → logprob: -16.886871337890625
    6. ' =
' → logprob: -17.511871337890625
    7. '=

' → logprob: -17.761871337890625
    8. ' ' → logprob: -17.886871337890625
    9. '.=' → logprob: -18.886871337890625
    10. '	' → logprob: -19.136871337890625

Token 430: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1602245420217514
    2. 'sum' → logprob: -1.9102245569229126
    3. ' ' → logprob: -15.535224914550781
    4. ' ' → logprob: -15.910224914550781
    5. '	sum' → logprob: -16.41022491455078
    6. '(sum' → logprob: -17.41022491455078
    7. '=sum' → logprob: -17.66022491455078
    8. '   ' → logprob: -18.16022491455078
    9. '  ' → logprob: -19.16022491455078
    10. '.sum' → logprob: -19.41022491455078

Token 431: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.003181159496307373
    2. '(' → logprob: -5.753180980682373
    3. 'H' → logprob: -13.253181457519531
    4. '(
' → logprob: -13.503181457519531
    5. ' (' → logprob: -15.503181457519531
    6. '(

' → logprob: -16.75318145751953
    7. '((' → logprob: -17.50318145751953
    8. '(h' → logprob: -19.00318145751953
    9. '(s' → logprob: -19.12818145751953
    10. '(
' → logprob: -19.50318145751953

Token 432: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.7697225252486533e-06
    2. '[:-' → logprob: -13.000003814697266
    3. ')' → logprob: -14.375003814697266
    4. ' [:' → logprob: -14.625003814697266
    5. '[' → logprob: -14.875003814697266
    6. '[:]' → logprob: -17.250003814697266
    7. '[
' → logprob: -18.500003814697266
    8. '][:' → logprob: -18.750003814697266
    9. '[n' → logprob: -18.875003814697266
    10. '   ' → logprob: -20.625003814697266

Token 433: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5941604690160602e-05
    2. ' n' → logprob: -10.750025749206543
    3. '(n' → logprob: -12.375025749206543
    4. '   ' → logprob: -15.500025749206543
    5. ' (' → logprob: -17.37502670288086
    6. '	n' → logprob: -17.75002670288086
    7. ' ' → logprob: -17.87502670288086
    8. '(' → logprob: -18.25002670288086
    9. '[n' → logprob: -18.37502670288086
    10. '_n' → logprob: -18.62502670288086

Token 434: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.036263179033994675
    2. '-' → logprob: -3.9112632274627686
    3. '-k' → logprob: -4.1612629890441895
    4. ' ' → logprob: -11.536263465881348
    5. '   ' → logprob: -15.411263465881348
    6. ' ' → logprob: -16.53626251220703
    7. '  ' → logprob: -16.53626251220703
    8. ' -
' → logprob: -16.66126251220703
    9. '-
' → logprob: -16.91126251220703
    10. '-n' → logprob: -17.03626251220703

Token 435: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017023178515955806
    2. ' k' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.1267032623291
    4. ' к' → logprob: -17.3767032623291
    5. '	k' → logprob: -17.7517032623291
    6. '-k' → logprob: -18.3767032623291
    7. '   ' → logprob: -18.8767032623291
    8. '_k' → logprob: -18.8767032623291
    9. 'n' → logprob: -19.1267032623291
    10. 'к' → logprob: -19.5017032623291

Token 436: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -3.643152740551159e-05
    2. ' ])' → logprob: -10.875036239624023
    3. '])
' → logprob: -11.125036239624023
    4. ')' → logprob: -13.250036239624023
    5. '])

' → logprob: -15.625036239624023
    6. '])
' → logprob: -15.875036239624023
    7. ')])' → logprob: -16.000036239624023
    8. ']' → logprob: -16.250036239624023
    9. '-' → logprob: -16.750036239624023
    10. ''])' → logprob: -16.750036239624023

Token 437: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019212529296055436
    2. '
' → logprob: -7.2519211769104
    3. 'result' → logprob: -7.5019211769104
    4. '<|end|>' → logprob: -7.8769211769104
    5. '\n' → logprob: -9.251921653747559
    6. ' print' → logprob: -9.376921653747559
    7. '```' → logprob: -10.251921653747559
    8. ')' → logprob: -10.376921653747559
    9. '#print' → logprob: -11.876921653747559
    10. '#' → logprob: -12.126921653747559

Token 438: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. 'prin' → logprob: -21.875
    4. '#print' → logprob: -22.375
    5. 'pr' → logprob: -22.5
    6. '
' → logprob: -22.75
    7. '```' → logprob: -24.5
    8. 'printf' → logprob: -25.0
    9. 'for' → logprob: -25.125
    10. '#' → logprob: -25.25

Token 439: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.001007442711852491
    2. '#' → logprob: -7.001007556915283
    3. 'iche' → logprob: -10.501007080078125
    4. 'cher' → logprob: -10.876007080078125
    5. 'ichage' → logprob: -11.751007080078125
    6. '   ' → logprob: -12.001007080078125
    7. 'ic' → logprob: -12.001007080078125
    8. 'f' → logprob: -12.126007080078125
    9. 'i' → logprob: -12.751007080078125
    10. '\' → logprob: -12.876007080078125

Token 440: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931886672973633
    2. '(result' → logprob: -0.6931886672973633
    3. 'result' → logprob: -11.318188667297363
    4. '("' → logprob: -11.318188667297363
    5. '()' → logprob: -11.443188667297363
    6. '(print' → logprob: -13.068188667297363
    7. '('' → logprob: -14.068188667297363
    8. '(
' → logprob: -14.193188667297363
    9. '(f' → logprob: -14.193188667297363
    10. '(res' → logprob: -14.693188667297363

Token 441: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.029880767688155174
    2. '(result' → logprob: -3.5298807621002197
    3. '(' → logprob: -9.02988052368164
    4. ' result' → logprob: -11.77988052368164
    5. ' résultat' → logprob: -14.27988052368164
    6. 'res' → logprob: -14.40488052368164
    7. ' resultat' → logprob: -14.65488052368164
    8. 'rés' → logprob: -14.77988052368164
    9. 'r' → logprob: -14.90488052368164
    10. 'resultado' → logprob: -15.15488052368164

Token 442: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021295747137628496
    2. '()
' → logprob: -9.125212669372559
    3. '
' → logprob: -10.375212669372559
    4. 'result' → logprob: -10.750212669372559
    5. ' print' → logprob: -11.000212669372559
    6. '(print' → logprob: -11.250212669372559
    7. '(' → logprob: -11.750212669372559
    8. '(
' → logprob: -12.250212669372559
    9. '```' → logprob: -13.000212669372559
    10. '\n' → logprob: -13.250212669372559

Token 443: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.500000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' print' → logprob: -15.625000953674316
    5. '(print' → logprob: -18.875001907348633
    6. 'result' → logprob: -20.250001907348633
    7. '``' → logprob: -21.250001907348633
    8. '#print' → logprob: -21.250001907348633
    9. '.print' → logprob: -22.000001907348633
    10. '`
' → logprob: -22.500001907348633

Token 444: 'la' (ID: 1675)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04883953556418419
    2. 'print' → logprob: -3.048839569091797
    3. '(result' → logprob: -8.548839569091797
    4. ')' → logprob: -9.798839569091797
    5. ' result' → logprob: -12.923839569091797
    6. ',result' → logprob: -16.173839569091797
    7. '   ' → logprob: -16.673839569091797
    8. ' print' → logprob: -16.798839569091797
    9. ')
' → logprob: -17.173839569091797
    10. 'str' → logprob: -17.298839569091797

Token 445: ' somme' (ID: 64484)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0023811189457774162
    2. ' result' → logprob: -6.127381324768066
    3. ')' → logprob: -8.877381324768066
    4. 'r' → logprob: -10.377381324768066
    5. 'res' → logprob: -11.377381324768066
    6. 'print' → logprob: -11.752381324768066
    7. 'rés' → logprob: -13.377381324768066
    8. 'sum' → logprob: -14.252381324768066
    9. ' resultat' → logprob: -14.252381324768066
    10. 's' → logprob: -14.377381324768066

Token 446: ' calcul' (ID: 7559)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0405709370970726
    2. '(' → logprob: -3.5405709743499756
    3. ')' → logprob: -4.5405707359313965
    4. '()' → logprob: -10.540571212768555
    5. 'result' → logprob: -10.915571212768555
    6. '(
' → logprob: -11.165571212768555
    7. '())' → logprob: -11.290571212768555
    8. ' )' → logprob: -11.665571212768555
    9. '(res' → logprob: -12.665571212768555
    10. ',result' → logprob: -12.790571212768555

Token 447: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.01173623837530613
    2. 'é' → logprob: -4.5117363929748535
    3. 'ee' → logprob: -7.7617363929748535
    4. 'e' → logprob: -8.261735916137695
    5. ')' → logprob: -12.886735916137695
    6. ' é' → logprob: -14.636735916137695
    7. 'è' → logprob: -14.886735916137695
    8. 'ate' → logprob: -14.886735916137695
    9. 'lée' → logprob: -16.011735916137695
    10. '#' → logprob: -16.261735916137695

Token 448: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01333787851035595
    2. '(result' → logprob: -4.513338088989258
    3. ')
' → logprob: -6.888338088989258
    4. '(' → logprob: -6.888338088989258
    5. ',result' → logprob: -9.263338088989258
    6. '())' → logprob: -9.888338088989258
    7. '()' → logprob: -9.888338088989258
    8. ',' → logprob: -10.888338088989258
    9. '(print' → logprob: -11.763338088989258
    10. 'print' → logprob: -11.888338088989258

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27080288529396057
    2. 'result' → logprob: -1.6458028554916382
    3. ' result' → logprob: -3.5208029747009277
    4. ' ' → logprob: -4.395802974700928
    5. ')' → logprob: -6.520802974700928
    6. '(result' → logprob: -7.395802974700928
    7. 'print' → logprob: -9.39580249786377
    8. '"' → logprob: -10.02080249786377
    9. '   ' → logprob: -10.27080249786377
    10. ' la' → logprob: -10.39580249786377

Token 450: '0' (ID: 15)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5769983530044556
    2. '0' → logprob: -0.8269983530044556
    3. 'str' → logprob: -7.576998233795166
    4. 'print' → logprob: -7.826998233795166
    5. '(result' → logprob: -9.451998710632324
    6. ')' → logprob: -10.576998710632324
    7. ' result' → logprob: -10.951998710632324
    8. '"' → logprob: -11.201998710632324
    9. ' ' → logprob: -12.951998710632324
    10. 'res' → logprob: -13.201998710632324

Token 451: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011951096821576357
    2. ')
' → logprob: -6.751194953918457
    3. ' )' → logprob: -10.751194953918457
    4. 'print' → logprob: -13.751194953918457
    5. '()' → logprob: -14.501194953918457
    6. '())' → logprob: -14.751194953918457
    7. '(' → logprob: -14.876194953918457
    8. ')
' → logprob: -15.126194953918457
    9. ' )
' → logprob: -15.376194953918457
    10. '(result' → logprob: -15.626194953918457

Token 452: ' tout' (ID: 5501)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3122978210449219
    2. 'k' → logprob: -1.4372978210449219
    3. ' result' → logprob: -4.187297821044922
    4. 'result' → logprob: -4.187297821044922
    5. ' n' → logprob: -9.437297821044922
    6. ' ' → logprob: -9.687297821044922
    7. ' resultat' → logprob: -9.937297821044922
    8. ' résultat' → logprob: -10.437297821044922
    9. ')' → logprob: -11.062297821044922
    10. ' le' → logprob: -11.437297821044922

Token 453: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7917999625205994
    2. ' n' → logprob: -1.0418000221252441
    3. ' reste' → logprob: -2.416800022125244
    4. 'a' → logprob: -2.666800022125244
    5. ' est' → logprob: -4.291800022125244
    6. 'n' → logprob: -5.666800022125244
    7. ' peut' → logprob: -5.791800022125244
    8. ' has' → logprob: -6.041800022125244
    9. ' rest' → logprob: -6.291800022125244
    10. ' ne' → logprob: -6.416800022125244

Token 454: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.018191847950220108
    2. ' été' → logprob: -4.393191814422607
    3. 'être' → logprob: -5.643191814422607
    4. 'pu' → logprob: -6.768191814422607
    5. '#' → logprob: -7.893191814422607
    6. 'ét' → logprob: -8.643192291259766
    7. '```' → logprob: -9.518192291259766
    8. 'é' → logprob: -9.893192291259766
    9. 's' → logprob: -10.268192291259766
    10. '_' → logprob: -10.268192291259766

Token 455: ' supprim' (ID: 142986)
  Prédit: ' supprim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supprim' → logprob: -0.5802973508834839
    2. 'sup' → logprob: -0.8302973508834839
    3. 'en' → logprob: -6.580297470092773
    4. 'eff' → logprob: -6.955297470092773
    5. ' retir' → logprob: -7.080297470092773
    6. 'print' → logprob: -7.330297470092773
    7. ' eff' → logprob: -9.205297470092773
    8. 'fait' → logprob: -9.330297470092773
    9. 'ret' → logprob: -9.330297470092773
    10. 'removed' → logprob: -9.455297470092773

Token 456: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.19916468858718872
    2. 'e' → logprob: -2.324164628982544
    3. ')' → logprob: -2.949164628982544
    4. 'ée' → logprob: -3.574164628982544
    5. 'er' → logprob: -6.324164867401123
    6. '(e' → logprob: -8.324164390563965
    7. '())' → logprob: -9.449164390563965
    8. '()' → logprob: -9.699164390563965
    9. ' )' → logprob: -10.074164390563965
    10. 'ee' → logprob: -10.699164390563965

Token 457: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16079898178577423
    2. ')
' → logprob: -1.9107990264892578
    3. '()' → logprob: -8.660799026489258
    4. ')
' → logprob: -9.035799026489258
    5. 'print' → logprob: -9.285799026489258
    6. '(result' → logprob: -9.535799026489258
    7. '())' → logprob: -10.160799026489258
    8. ' )' → logprob: -10.785799026489258
    9. '())
' → logprob: -11.035799026489258
    10. '(' → logprob: -11.535799026489258

Token 458: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. ' print' → logprob: -20.0
    4. '
' → logprob: -24.125
    5. '``' → logprob: -24.875
    6. '`' → logprob: -25.75
    7. 'prin' → logprob: -26.5
    8. '#print' → logprob: -26.625
    9. '(print' → logprob: -27.25
    10. 'pr' → logprob: -27.5

Token 459: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07889474183320999
    2. '(' → logprob: -2.578894853591919
    3. 'result' → logprob: -13.32889461517334
    4. '()' → logprob: -13.45389461517334
    5. ' (' → logprob: -13.95389461517334
    6. '('' → logprob: -14.82889461517334
    7. '(
' → logprob: -16.078895568847656
    8. '(res' → logprob: -16.078895568847656
    9. '(results' → logprob: -16.328895568847656
    10. '((' → logprob: -16.328895568847656

Token 460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. '())' → logprob: -17.75
    4. ')`' → logprob: -17.75
    5. '))' → logprob: -18.625
    6. '()' → logprob: -18.875
    7. ')
' → logprob: -19.625
    8. '`)' → logprob: -19.75
    9. ')#' → logprob: -19.875
    10. '')' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 458
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 261
Précision stricte (1ère position): 20.96%
Précision adaptée (1ère position): 21.62%
Précision (top 10): 56.99%
================================================================================
