================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Le code commence par lire une ligne de l'entrée standard (typiquement le clavier).
# La fonction input() attend que l'utilisateur saisisse une ligne de texte et appuie sur "Entrée".
# split() divise cette ligne en une liste de morceaux (des chaînes de caractères), en séparant sur les espaces par défaut.
# map(int, ...) convertit chaque chaîne de caractères résultante en un entier (type int).
# Enfin, on utilise l'affectation multiple pour stocker chaque entier dans les variables A, B, C et D respectivement.
A, B, C, D = map(int, input().split())

# Calcule le nombre minimal de fois que l'on peut soustraire D à A avant d'atteindre ou de dépasser zéro, en arrondissant vers le haut.
# Autrement dit, ceci calcule le plafond de A / D.
# En mathématiques, cela revient à faire ceil(A / D).
# L'expression (A + D - 1) // D est un moyen courant d'obtenir ce plafond sans utiliser la fonction math.ceil().
# On stocke le résultat dans la variable 't'.
t = (A + D - 1) // D

# Calcule le nombre minimal de fois que l'on peut soustraire B à C avant d'atteindre ou de dépasser zéro, toujours en arrondissant vers le haut.
# Même principe que précédemment, mais avec C et B.
# On stocke ce résultat dans la variable 'a'.
a = (C + B - 1) // B

# On compare maintenant t et a.
# Si le nombre de tours t est supérieur ou égal au nombre de tours a, alors la condition est vérifiée.
if t >= a:
    # Si la condition t >= a est vraie, on affiche "Yes".
    # print() écrit la chaîne de caractères donnée dans la sortie standard (typiquement l'écran).
    print("Yes")
else:
    # Si la condition t >= a est fausse, donc t < a, on affiche "No".
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Le' (ID: 2018)
  → Token d'amorce (pas de prédiction)

Token 2: ' code' (ID: 3490)
  → Token d'amorce (pas de prédiction)

Token 3: ' commence' (ID: 44755)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009234527125954628
    2. 's' → logprob: -6.009234428405762
    3. ':' → logprob: -6.134234428405762
    4. ''' → logprob: -6.884234428405762
    5. ' :' → logprob: -7.009234428405762
    6. '```' → logprob: -7.759234428405762
    7. '#' → logprob: -7.884234428405762
    8. 'u' → logprob: -8.134234428405762
    9. ' #' → logprob: -8.384234428405762
    10. '`' → logprob: -8.384234428405762

Token 4: ' par' (ID: 686)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.278232604265213
    2. ' ' → logprob: -1.7782325744628906
    3. ':' → logprob: -3.4032325744628906
    4. '\' → logprob: -4.028232574462891
    5. '\n' → logprob: -5.153232574462891
    6. '_' → logprob: -6.028232574462891
    7. '```' → logprob: -6.278232574462891
    8. ' #' → logprob: -6.278232574462891
    9. '`' → logprob: -6.528232574462891
    10. 'e' → logprob: -6.653232574462891

Token 5: ' lire' (ID: 46082)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.9406256675720215
    2. '#' → logprob: -1.1906256675720215
    3. ' ' → logprob: -1.4406256675720215
    4. '`' → logprob: -3.6906256675720215
    5. '```' → logprob: -4.1906256675720215
    6. ' ```' → logprob: -4.8156256675720215
    7. ' ' → logprob: -5.9406256675720215
    8. ' `' → logprob: -6.1906256675720215
    9. ''' → logprob: -6.1906256675720215
    10. '"""' → logprob: -6.1906256675720215

Token 6: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018057262059301138
    2. ' ' → logprob: -7.751805782318115
    3. ' la' → logprob: -8.126805305480957
    4. ' l' → logprob: -8.501805305480957
    5. 'l' → logprob: -9.001805305480957
    6. 's' → logprob: -9.001805305480957
    7. ' :' → logprob: -9.126805305480957
    8. '_' → logprob: -9.251805305480957
    9. '```' → logprob: -9.751805305480957
    10. '  ' → logprob: -10.001805305480957

Token 7: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02795160561800003
    2. ' ligne' → logprob: -3.777951717376709
    3. 'ligne' → logprob: -6.277951717376709
    4. ' ' → logprob: -7.027951717376709
    5. ' espace' → logprob: -8.15295124053955
    6. '_' → logprob: -8.27795124053955
    7. ' chaîne' → logprob: -8.40295124053955
    8. 'f' → logprob: -8.65295124053955
    9. 'l' → logprob: -9.02795124053955
    10. 'entrée' → logprob: -9.15295124053955

Token 8: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45673835277557373
    2. '#' → logprob: -2.0817384719848633
    3. '\n' → logprob: -2.2067384719848633
    4. 'input' → logprob: -4.081738471984863
    5. '`' → logprob: -4.331738471984863
    6. 's' → logprob: -4.331738471984863
    7. 'n' → logprob: -4.456738471984863
    8. ',' → logprob: -4.831738471984863
    9. '\' → logprob: -4.956738471984863
    10. 'l' → logprob: -5.081738471984863

Token 9: ' l' (ID: 305)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.08913510292768478
    2. 'texte' → logprob: -2.71413516998291
    3. 'input' → logprob: -5.21413516998291
    4. 'comment' → logprob: -5.58913516998291
    5. 'entrée' → logprob: -5.96413516998291
    6. '#' → logprob: -6.21413516998291
    7. ' code' → logprob: -6.21413516998291
    8. 'commande' → logprob: -6.33913516998291
    9. 's' → logprob: -8.46413516998291
    10. '```' → logprob: -8.58913516998291

Token 10: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.7047217488288879
    2. ''utilisateur' → logprob: -1.5797216892242432
    3. 'a' → logprob: -2.204721689224243
    4. 'input' → logprob: -2.454721689224243
    5. ''' → logprob: -2.954721689224243
    6. 'entrée' → logprob: -3.829721689224243
    7. 'e' → logprob: -4.204721927642822
    8. '#' → logprob: -6.204721927642822
    9. '```' → logprob: -6.329721927642822
    10. ''''' → logprob: -6.579721927642822

Token 11: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6775351762771606
    2. 'x' → logprob: -2.427535057067871
    3. '_' → logprob: -2.677535057067871
    4. 'i' → logprob: -2.802535057067871
    5. 'n' → logprob: -3.052535057067871
    6. 'l' → logprob: -3.177535057067871
    7. '`' → logprob: -3.302535057067871
    8. 's' → logprob: -3.552535057067871
    9. '```' → logprob: -3.677535057067871
    10. '.' → logprob: -4.052535057067871

Token 12: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8452173471450806
    2. 'input' → logprob: -1.3452173471450806
    3. 'i' → logprob: -2.595217227935791
    4. 'n' → logprob: -2.970217227935791
    5. '_' → logprob: -3.220217227935791
    6. 's' → logprob: -3.720217227935791
    7. 'ligne' → logprob: -3.845217227935791
    8. 'line' → logprob: -3.970217227935791
    9. 'x' → logprob: -4.345217227935791
    10. 'a' → logprob: -4.595217227935791

Token 13: 'ty' (ID: 1206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01001955196261406
    2. 'input' → logprob: -5.635019779205322
    3. ' )' → logprob: -6.385019779205322
    4. '`)' → logprob: -7.010019779205322
    5. ').' → logprob: -7.510019779205322
    6. '')' → logprob: -7.635019779205322
    7. '\n' → logprob: -7.760019779205322
    8. 'user' → logprob: -8.260019302368164
    9. ',' → logprob: -8.260019302368164
    10. 's' → logprob: -8.510019302368164

Token 14: 'pi' (ID: 3455)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08628879487514496
    2. 'x' → logprob: -4.211288928985596
    3. ' `' → logprob: -4.336288928985596
    4. 'e' → logprob: -4.711288928985596
    5. 'r' → logprob: -5.211288928985596
    6. 'u' → logprob: -5.336288928985596
    7. 'n' → logprob: -5.586288928985596
    8. 'm' → logprob: -5.586288928985596
    9. '`' → logprob: -5.961288928985596
    10. 't' → logprob: -6.461288928985596

Token 15: 'quement' (ID: 42437)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5056607127189636
    2. 'quement' → logprob: -1.0056607723236084
    3. 'q' → logprob: -4.255660533905029
    4. '#' → logprob: -4.380660533905029
    5. 'qu' → logprob: -6.755660533905029
    6. '`' → logprob: -6.880660533905029
    7. '```' → logprob: -6.880660533905029
    8. 'ques' → logprob: -8.130661010742188
    9. '``' → logprob: -8.630661010742188
    10. ' que' → logprob: -9.005661010742188

Token 16: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7575786709785461
    2. 'une' → logprob: -1.6325786113739014
    3. '`' → logprob: -1.8825786113739014
    4. 'input' → logprob: -3.2575786113739014
    5. '```' → logprob: -4.0075788497924805
    6. 'pour' → logprob: -4.2575788497924805
    7. ' input' → logprob: -4.6325788497924805
    8. 'stdin' → logprob: -4.7575788497924805
    9. 'un' → logprob: -4.8825788497924805
    10. 'la' → logprob: -4.8825788497924805

Token 17: ' clavier' (ID: 187878)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3594344854354858
    2. ')' → logprob: -1.6094344854354858
    3. 's' → logprob: -2.3594346046447754
    4. 'input' → logprob: -2.4844346046447754
    5. ' )' → logprob: -3.3594346046447754
    6. ' ' → logprob: -3.3594346046447754
    7. ' input' → logprob: -3.3594346046447754
    8. ''' → logprob: -3.4844346046447754
    9. 'n' → logprob: -3.8594346046447754
    10. '#' → logprob: -3.9844346046447754

Token 18: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0045455885119736195
    2. ' )' → logprob: -6.62954568862915
    3. '\n' → logprob: -7.50454568862915
    4. '.' → logprob: -7.62954568862915
    5. '`)' → logprob: -7.75454568862915
    6. ').' → logprob: -7.75454568862915
    7. '')' → logprob: -8.129545211791992
    8. ',' → logprob: -8.629545211791992
    9. ')\' → logprob: -9.004545211791992
    10. '")' → logprob: -9.129545211791992

Token 19: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.137329339981079
    2. '\n' → logprob: -2.012329339981079
    3. '```' → logprob: -2.137329339981079
    4. '`' → logprob: -2.512329339981079
    5. 's' → logprob: -3.012329339981079
    6. 'input' → logprob: -3.012329339981079
    7. 'n' → logprob: -3.137329339981079
    8. '\' → logprob: -3.512329339981079
    9. '_' → logprob: -3.637329339981079
    10. ' ' → logprob: -4.0123291015625

Token 20: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8515805006027222
    2. 'n' → logprob: -2.2265806198120117
    3. 'input' → logprob: -2.2265806198120117
    4. '#' → logprob: -2.9765806198120117
    5. 'i' → logprob: -2.9765806198120117
    6. 's' → logprob: -2.9765806198120117
    7. '\n' → logprob: -3.6015806198120117
    8. 'l' → logprob: -3.9765806198120117
    9. 'user' → logprob: -4.101580619812012
    10. '```' → logprob: -4.226580619812012

Token 21: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0036329696886241436
    2. ' =' → logprob: -7.12863302230835
    3. 'r' → logprob: -7.62863302230835
    4. 's' → logprob: -7.87863302230835
    5. 'n' → logprob: -7.87863302230835
    6. ' input' → logprob: -8.128632545471191
    7. 'input' → logprob: -8.253632545471191
    8. ' #' → logprob: -8.878632545471191
    9. '_' → logprob: -9.128632545471191
    10. '=' → logprob: -9.128632545471191

Token 22: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4243139326572418
    2. 'input' → logprob: -1.2993139028549194
    3. ' ' → logprob: -3.049314022064209
    4. ' `' → logprob: -5.174314022064209
    5. ' readline' → logprob: -5.174314022064209
    6. ' i' → logprob: -5.299314022064209
    7. 'i' → logprob: -6.049314022064209
    8. 'f' → logprob: -6.549314022064209
    9. ' fgets' → logprob: -6.924314022064209
    10. 's' → logprob: -7.299314022064209

Token 23: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34971562027931213
    2. '()' → logprob: -1.2247155904769897
    3. '("' → logprob: -7.849715709686279
    4. '('' → logprob: -8.224715232849121
    5. ')' → logprob: -9.099715232849121
    6. '(
' → logprob: -9.224715232849121
    7. '())' → logprob: -9.974715232849121
    8. '("")' → logprob: -10.224715232849121
    9. '()">' → logprob: -10.224715232849121
    10. '("""' → logprob: -10.474715232849121

Token 24: ' attend' (ID: 13384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06289107352495193
    2. ' (' → logprob: -3.6878910064697266
    3. ')' → logprob: -4.187891006469727
    4. ' ' → logprob: -4.562891006469727
    5. '.' → logprob: -5.937891006469727
    6. '()' → logprob: -6.062891006469727
    7. ' )' → logprob: -6.687891006469727
    8. ''' → logprob: -7.437891006469727
    9. '#' → logprob: -7.437891006469727
    10. ',' → logprob: -7.562891006469727

Token 25: ' que' (ID: 661)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.16150802373886108
    2. ' ' → logprob: -3.411508083343506
    3. ' l' → logprob: -4.036508083343506
    4. ' un' → logprob: -4.036508083343506
    5. '()' → logprob: -4.161508083343506
    6. ' la' → logprob: -4.536508083343506
    7. 'une' → logprob: -4.536508083343506
    8. ' )' → logprob: -4.786508083343506
    9. ' ' → logprob: -5.286508083343506
    10. ' que' → logprob: -5.911508083343506

Token 26: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5869775414466858
    2. 'l' → logprob: -0.8369775414466858
    3. ')' → logprob: -6.086977481842041
    4. ' ' → logprob: -6.211977481842041
    5. ' )' → logprob: -7.211977481842041
    6. 'ent' → logprob: -7.336977481842041
    7. ''utilisateur' → logprob: -7.461977481842041
    8. 'une' → logprob: -7.586977481842041
    9. '```' → logprob: -7.586977481842041
    10. 'la' → logprob: -8.0869779586792

Token 27: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.007571365684270859
    2. ''' → logprob: -5.632571220397949
    3. '’utilisateur' → logprob: -6.132571220397949
    4. ''on' → logprob: -7.632571220397949
    5. ''entrée' → logprob: -7.757571220397949
    6. 'a' → logprob: -7.757571220397949
    7. ''user' → logprob: -9.13257122039795
    8. 'e' → logprob: -9.50757122039795
    9. ''a' → logprob: -9.63257122039795
    10. ''us' → logprob: -10.38257122039795

Token 28: ' sais' (ID: 30010)
  Prédit: ' app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.04829446226358414
    2. ' sais' → logprob: -3.7982945442199707
    3. ' tape' → logprob: -4.923294544219971
    4. ' ' → logprob: -5.173294544219971
    5. 'app' → logprob: -5.173294544219971
    6. ' frappe' → logprob: -5.673294544219971
    7. ' entre' → logprob: -6.798294544219971
    8. ' fasse' → logprob: -7.923294544219971
    9. ' presse' → logprob: -8.048294067382812
    10. ' ajoute' → logprob: -9.923294067382812

Token 29: 'isse' (ID: 6969)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05462948605418205
    2. 's' → logprob: -3.0546295642852783
    3. 'isse' → logprob: -5.804629325866699
    4. '#' → logprob: -6.804629325866699
    5. 'se' → logprob: -6.929629325866699
    6. 'ss' → logprob: -8.3046293258667
    7. 't' → logprob: -8.5546293258667
    8. '   ' → logprob: -9.1796293258667
    9. 'es' → logprob: -9.4296293258667
    10. '﻿' → logprob: -10.1796293258667

Token 30: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08649535477161407
    2. ' une' → logprob: -2.9614953994750977
    3. 'une' → logprob: -4.336495399475098
    4. ' un' → logprob: -4.461495399475098
    5. 'un' → logprob: -6.586495399475098
    6. '  ' → logprob: -7.211495399475098
    7. ''une' → logprob: -7.336495399475098
    8. ''' → logprob: -7.461495399475098
    9. ''un' → logprob: -7.711495399475098
    10. ' ' → logprob: -7.836495399475098

Token 31: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029414869844913483
    2. ' ligne' → logprob: -4.279414653778076
    3. 'entrée' → logprob: -6.029414653778076
    4. ' chaîne' → logprob: -6.029414653778076
    5. 'ligne' → logprob: -6.154414653778076
    6. ''' → logprob: -6.529414653778076
    7. '\n' → logprob: -6.904414653778076
    8. 'chaine' → logprob: -7.029414653778076
    9. ' \' → logprob: -7.154414653778076
    10. '\' → logprob: -7.529414653778076

Token 32: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4848063886165619
    2. ')' → logprob: -1.9848064184188843
    3. ',' → logprob: -2.4848062992095947
    4. '#' → logprob: -3.4848062992095947
    5. '\n' → logprob: -3.6098062992095947
    6. '(' → logprob: -3.7348062992095947
    7. '\' → logprob: -4.234806537628174
    8. 's' → logprob: -4.234806537628174
    9. 'e' → logprob: -4.484806537628174
    10. ':' → logprob: -5.109806537628174

Token 33: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.5335699915885925
    2. ' texte' → logprob: -0.9085699915885925
    3. ' code' → logprob: -5.158569812774658
    4. 'code' → logprob: -5.533569812774658
    5. ' Texte' → logprob: -8.533570289611816
    6. 'text' → logprob: -9.033570289611816
    7. ' text' → logprob: -9.158570289611816
    8. 'entrée' → logprob: -9.408570289611816
    9. 'commande' → logprob: -10.033570289611816
    10. ' texto' → logprob: -10.283570289611816

Token 34: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.291338324546814
    2. '\n' → logprob: -1.666338324546814
    3. '\' → logprob: -2.0413384437561035
    4. ')' → logprob: -2.0413384437561035
    5. '#' → logprob: -2.4163384437561035
    6. '(' → logprob: -3.5413384437561035
    7. 'n' → logprob: -3.6663384437561035
    8. 'u' → logprob: -3.6663384437561035
    9. 'e' → logprob: -3.9163384437561035
    10. ',' → logprob: -4.2913384437561035

Token 35: ' app' (ID: 1053)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.43564870953559875
    2. ' return' → logprob: -2.1856486797332764
    3. ' ren' → logprob: -2.8106486797332764
    4. ' la' → logprob: -3.4356486797332764
    5. ' soit' → logprob: -3.9356486797332764
    6. ' app' → logprob: -3.9356486797332764
    7. '\' → logprob: -4.0606489181518555
    8. ' l' → logprob: -4.1856489181518555
    9. ' ' → logprob: -4.5606489181518555
    10. ''' → logprob: -4.8106489181518555

Token 36: 'uie' (ID: 123775)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.23213616013526917
    2. 'elle' → logprob: -1.9821361303329468
    3. 'e' → logprob: -3.6071362495422363
    4. 'ent' → logprob: -3.8571362495422363
    5. 'el' → logprob: -5.357136249542236
    6. 'ende' → logprob: -5.857136249542236
    7. 'endi' → logprob: -6.732136249542236
    8. 'endre' → logprob: -6.982136249542236
    9. 'ar' → logprob: -7.232136249542236
    10. 'a' → logprob: -7.232136249542236

Token 37: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6285692453384399
    2. ' ' → logprob: -0.8785692453384399
    3. 'sur' → logprob: -3.5035691261291504
    4. '_' → logprob: -4.50356912612915
    5. '_sur' → logprob: -5.62856912612915
    6. ')' → logprob: -5.75356912612915
    7. '`' → logprob: -7.25356912612915
    8. '(' → logprob: -7.87856912612915
    9. ' )' → logprob: -8.003569602966309
    10. 's' → logprob: -8.628569602966309

Token 38: ' "' (ID: 392)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.09182696789503098
    2. ' Entr' → logprob: -2.841826915740967
    3. 'Enter' → logprob: -3.716826915740967
    4. 'entrée' → logprob: -6.216826915740967
    5. ' Enter' → logprob: -6.341826915740967
    6. 'entr' → logprob: -7.341826915740967
    7. '\' → logprob: -9.466827392578125
    8. ' ' → logprob: -9.591827392578125
    9. ' la' → logprob: -9.841827392578125
    10. '\xe2\x86' → logprob: -9.841827392578125

Token 39: 'Entr' (ID: 46869)
  Prédit: 'Entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.006942102685570717
    2. 'Enter' → logprob: -5.506942272186279
    3. 'entrée' → logprob: -6.006942272186279
    4. 'entr' → logprob: -7.881942272186279
    5. 'Ent' → logprob: -11.756941795349121
    6. ' Entr' → logprob: -12.506941795349121
    7. '\xe2\x86' → logprob: -13.006941795349121
    8. ' entrée' → logprob: -13.381941795349121
    9. 'enter' → logprob: -13.631941795349121
    10. '<' → logprob: -14.131941795349121

Token 40: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.004202343989163637
    2. 'é' → logprob: -5.504202365875244
    3. 'er' → logprob: -9.004201889038086
    4. 'e' → logprob: -14.879201889038086
    5. 'ées' → logprob: -15.129201889038086
    6. 'ee' → logprob: -16.254201889038086
    7. 'éer' → logprob: -16.504201889038086
    8. 'rée' → logprob: -16.754201889038086
    9. 'É' → logprob: -17.879201889038086
    10. '�' → logprob: -18.379201889038086

Token 41: '".
' (ID: 26880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001554620685055852
    2. ' )' → logprob: -8.001554489135742
    3. '")' → logprob: -8.501554489135742
    4. ')
' → logprob: -8.751554489135742
    5. '()' → logprob: -8.876554489135742
    6. '(' → logprob: -8.876554489135742
    7. ').' → logprob: -9.251554489135742
    8. ')"' → logprob: -9.501554489135742
    9. '.' → logprob: -9.626554489135742
    10. '"' → logprob: -9.626554489135742

Token 42: '#' (ID: 2)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1625127792358398
    2. 'n' → logprob: -1.6625127792358398
    3. 'user' → logprob: -2.03751277923584
    4. '#' → logprob: -2.53751277923584
    5. 'i' → logprob: -2.91251277923584
    6. 's' → logprob: -3.03751277923584
    7. 'v' → logprob: -3.78751277923584
    8. 'a' → logprob: -4.03751277923584
    9. 'x' → logprob: -4.03751277923584
    10. 't' → logprob: -4.41251277923584

Token 43: ' split' (ID: 12648)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9935758709907532
    2. 'user' → logprob: -1.4935758113861084
    3. 'n' → logprob: -2.3685758113861084
    4. '#' → logprob: -2.4935758113861084
    5. '\n' → logprob: -3.3685758113861084
    6. 's' → logprob: -3.6185758113861084
    7. 'use' → logprob: -3.6185758113861084
    8. 'i' → logprob: -4.1185760498046875
    9. 'x' → logprob: -4.3685760498046875
    10. '\' → logprob: -4.3685760498046875

Token 44: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08418601006269455
    2. '()' → logprob: -2.83418607711792
    3. '('' → logprob: -3.83418607711792
    4. '("("' → logprob: -8.459185600280762
    5. '("' → logprob: -9.334185600280762
    6. '('.')' → logprob: -11.209185600280762
    7. '(
' → logprob: -11.709185600280762
    8. '("")' → logprob: -11.959185600280762
    9. '("""' → logprob: -12.709185600280762
    10. '(`' → logprob: -12.959185600280762

Token 45: ' div' (ID: 4223)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20309101045131683
    2. '()' → logprob: -1.703091025352478
    3. '('' → logprob: -6.578091144561768
    4. '(
' → logprob: -9.70309066772461
    5. ' (' → logprob: -10.20309066772461
    6. '("("' → logprob: -10.20309066772461
    7. '("' → logprob: -10.32809066772461
    8. ')' → logprob: -10.70309066772461
    9. ' ()' → logprob: -10.95309066772461
    10. '#' → logprob: -11.70309066772461

Token 46: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.007817182689905167
    2. 'i' → logprob: -6.132817268371582
    3. '()' → logprob: -6.382817268371582
    4. '#' → logprob: -7.382817268371582
    5. 'ide' → logprob: -7.632817268371582
    6. ' ise' → logprob: -8.257817268371582
    7. '```' → logprob: -8.507817268371582
    8. 'e' → logprob: -8.757817268371582
    9. 'erse' → logprob: -8.757817268371582
    10. '=' → logprob: -8.882817268371582

Token 47: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13361112773418427
    2. '('' → logprob: -2.3836112022399902
    3. '(' → logprob: -3.5086112022399902
    4. ' la' → logprob: -7.00861120223999
    5. '("' → logprob: -8.008610725402832
    6. 'la' → logprob: -8.008610725402832
    7. ''' → logprob: -8.008610725402832
    8. 'l' → logprob: -8.133610725402832
    9. 'une' → logprob: -9.258610725402832
    10. ' ' → logprob: -9.633610725402832

Token 48: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6313126683235168
    2. ' ligne' → logprob: -1.381312608718872
    3. ' ' → logprob: -2.131312608718872
    4. 'chaine' → logprob: -3.131312608718872
    5. ' string' → logprob: -4.006312847137451
    6. ' chaine' → logprob: -4.631312847137451
    7. 'ligne' → logprob: -4.756312847137451
    8. ' phrase' → logprob: -5.756312847137451
    9. 'string' → logprob: -6.006312847137451
    10. 's' → logprob: -6.131312847137451

Token 49: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4366574287414551
    2. '(' → logprob: -1.186657428741455
    3. '('' → logprob: -3.061657428741455
    4. '("("' → logprob: -7.561657428741455
    5. '("' → logprob: -7.936657428741455
    6. '('.')' → logprob: -8.436656951904297
    7. ''' → logprob: -9.311656951904297
    8. ' ()' → logprob: -9.811656951904297
    9. 'par' → logprob: -9.811656951904297
    10. '('\' → logprob: -10.186656951904297

Token 50: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.24982133507728577
    2. 'des' → logprob: -2.374821424484253
    3. ' une' → logprob: -2.749821424484253
    4. ' ' → logprob: -4.624821186065674
    5. '[]' → logprob: -4.624821186065674
    6. ' []' → logprob: -4.749821186065674
    7. '```' → logprob: -5.124821186065674
    8. ' un' → logprob: -5.499821186065674
    9. 'tokens' → logprob: -5.874821186065674
    10. ' espaces' → logprob: -5.874821186065674

Token 51: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11929193884134293
    2. 'liste' → logprob: -2.2442920207977295
    3. 's' → logprob: -5.49429178237915
    4. 'list' → logprob: -6.61929178237915
    5. ' chaîne' → logprob: -7.86929178237915
    6. ' list' → logprob: -8.744292259216309
    7. 'chaine' → logprob: -9.369292259216309
    8. ' listes' → logprob: -9.494292259216309
    9. 'Liste' → logprob: -9.994292259216309
    10. ' ' → logprob: -10.244292259216309

Token 52: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1259546279907227
    2. '(' → logprob: -1.5009546279907227
    3. '[' → logprob: -1.5009546279907227
    4. 's' → logprob: -3.1259546279907227
    5. ')' → logprob: -3.2509546279907227
    6. '.' → logprob: -3.5009546279907227
    7. '[]' → logprob: -3.5009546279907227
    8. '_' → logprob: -3.5009546279907227
    9. ' (' → logprob: -5.000954627990723
    10. '[:]' → logprob: -5.250954627990723

Token 53: ' morceaux' (ID: 133321)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.3290269374847412
    2. 'm' → logprob: -2.079026937484741
    3. ' mots' → logprob: -2.954026937484741
    4. ' tokens' → logprob: -3.704026937484741
    5. 'tokens' → logprob: -3.829026937484741
    6. 'cha' → logprob: -4.20402717590332
    7. 'chain' → logprob: -4.70402717590332
    8. 'mot' → logprob: -5.07902717590332
    9. ' espaces' → logprob: -5.07902717590332
    10. ' chain' → logprob: -5.07902717590332

Token 54: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5644681453704834
    2. '(' → logprob: -1.8144681453704834
    3. '_' → logprob: -2.0644681453704834
    4. '[' → logprob: -2.3144681453704834
    5. ')' → logprob: -2.4394681453704834
    6. ',' → logprob: -2.6894681453704834
    7. '()' → logprob: -3.0644681453704834
    8. 'input' → logprob: -3.0644681453704834
    9. 'tokens' → logprob: -3.1894681453704834
    10. ' (' → logprob: -4.4394683837890625

Token 55: 'des' (ID: 4117)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10898248851299286
    2. ' )' → logprob: -2.608982563018799
    3. 'au' → logprob: -4.358982563018799
    4. 's' → logprob: -5.608982563018799
    5. ' au' → logprob: -6.233982563018799
    6. ' par' → logprob: -6.358982563018799
    7. ' chaînes' → logprob: -6.608982563018799
    8. 'par' → logprob: -6.858982563018799
    9. 'cha' → logprob: -7.108982563018799
    10. ' de' → logprob: -7.108982563018799

Token 56: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.28482890129089355
    2. ' espaces' → logprob: -1.6598289012908936
    3. 'cha' → logprob: -3.5348289012908936
    4. 'esp' → logprob: -4.534829139709473
    5. ' mots' → logprob: -5.284829139709473
    6. 'chain' → logprob: -6.034829139709473
    7. ' chain' → logprob: -6.034829139709473
    8. ' strings' → logprob: -6.284829139709473
    9. 'strings' → logprob: -6.409829139709473
    10. ' ' → logprob: -6.784829139709473

Token 57: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6394236087799072
    2. ' de' → logprob: -1.2644236087799072
    3. ')' → logprob: -2.2644236087799072
    4. 'de' → logprob: -3.0144236087799072
    5. '_de' → logprob: -4.639423370361328
    6. ' )' → logprob: -4.764423370361328
    7. 's' → logprob: -4.889423370361328
    8. '_v' → logprob: -5.389423370361328
    9. ' ' → logprob: -6.639423370361328
    10. '[]' → logprob: -6.764423370361328

Token 58: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.10589654743671417
    2. ' caractères' → logprob: -2.355896472930908
    3. 'texte' → logprob: -5.480896472930908
    4. ' caracteres' → logprob: -7.855896472930908
    5. ' caract' → logprob: -8.105896949768066
    6. 'chaine' → logprob: -8.230896949768066
    7. ' car' → logprob: -8.480896949768066
    8. ' caractère' → logprob: -9.230896949768066
    9. 'cha' → logprob: -9.980896949768066
    10. ' texte' → logprob: -10.105896949768066

Token 59: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006961519829928875
    2. '())' → logprob: -5.756961345672607
    3. ' )' → logprob: -6.256961345672607
    4. '()' → logprob: -6.631961345672607
    5. ').' → logprob: -8.506961822509766
    6. '),' → logprob: -9.256961822509766
    7. '[])' → logprob: -9.506961822509766
    8. ',' → logprob: -10.131961822509766
    9. 'par' → logprob: -10.756961822509766
    10. 's' → logprob: -10.881961822509766

Token 60: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2887567281723022
    2. ')' → logprob: -1.4137567281723022
    3. 's' → logprob: -1.5387567281723022
    4. ' )' → logprob: -3.288756847381592
    5. 'input' → logprob: -3.413756847381592
    6. ',' → logprob: -3.913756847381592
    7. '[]' → logprob: -4.038756847381592
    8. ' ' → logprob: -4.163756847381592
    9. 'n' → logprob: -4.413756847381592
    10. 'tokens' → logprob: -4.413756847381592

Token 61: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0952099561691284
    2. 'fonction' → logprob: -1.7202099561691284
    3. '_' → logprob: -2.345210075378418
    4. ' fonction' → logprob: -2.470210075378418
    5. '[]' → logprob: -2.845210075378418
    6. ' utilisant' → logprob: -3.595210075378418
    7. '<|end|>' → logprob: -3.595210075378418
    8. ')' → logprob: -3.845210075378418
    9. '#' → logprob: -3.845210075378418
    10. '```' → logprob: -4.095210075378418

Token 62: 'ant' (ID: 493)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.175216406583786
    2. 'ant' → logprob: -2.1752164363861084
    3. 'pant' → logprob: -4.425216197967529
    4. 'à' → logprob: -5.300216197967529
    5. 'vant' → logprob: -5.425216197967529
    6. 'çant' → logprob: -5.550216197967529
    7. 'arant' → logprob: -5.675216197967529
    8. 'urant' → logprob: -6.175216197967529
    9. 'pa' → logprob: -6.175216197967529
    10. 'a' → logprob: -6.800216197967529

Token 63: ' sur' (ID: 1512)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.2975629568099976
    2. ' par' → logprob: -1.5475629568099976
    3. '()' → logprob: -2.047563076019287
    4. ' la' → logprob: -2.797563076019287
    5. 'sur' → logprob: -2.797563076019287
    6. ' sur' → logprob: -3.172563076019287
    7. ' au' → logprob: -3.172563076019287
    8. ' les' → logprob: -3.297563076019287
    9. 'au' → logprob: -3.297563076019287
    10. ' ' → logprob: -4.047563076019287

Token 64: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0631462335586548
    2. 'les' → logprob: -1.3131462335586548
    3. ' l' → logprob: -2.0631461143493652
    4. ' les' → logprob: -2.9381461143493652
    5. ''' → logprob: -3.6881461143493652
    6. 'la' → logprob: -3.8131461143493652
    7. 'le' → logprob: -3.8131461143493652
    8. ' espaces' → logprob: -3.8131461143493652
    9. '()' → logprob: -4.438146114349365
    10. 'esp' → logprob: -4.563146114349365

Token 65: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.1300245225429535
    2. 'esp' → logprob: -3.0050244331359863
    3. ' ' → logprob: -4.005024433135986
    4. ''esp' → logprob: -4.380024433135986
    5. '_' → logprob: -4.880024433135986
    6. 's' → logprob: -5.005024433135986
    7. ''' → logprob: -5.005024433135986
    8. 'es' → logprob: -5.505024433135986
    9. 'l' → logprob: -5.505024433135986
    10. ''espace' → logprob: -5.755024433135986

Token 66: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26836517453193665
    2. 'user' → logprob: -3.0183651447296143
    3. 'l' → logprob: -3.6433651447296143
    4. 's' → logprob: -3.8933651447296143
    5. 'a' → logprob: -4.018365383148193
    6. 'data' → logprob: -4.393365383148193
    7. '#' → logprob: -4.393365383148193
    8. 'u' → logprob: -4.643365383148193
    9. 'ent' → logprob: -4.768365383148193
    10. 'm' → logprob: -4.893365383148193

Token 67: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.26318028569221497
    2. 'dé' → logprob: -1.8881802558898926
    3. 'default' → logprob: -3.3881802558898926
    4. 'def' → logprob: -3.3881802558898926
    5. ' default' → logprob: -5.138180255889893
    6. 'd' → logprob: -6.013180255889893
    7. ' def' → logprob: -6.388180255889893
    8. 's' → logprob: -7.638180255889893
    9. '```' → logprob: -8.13818073272705
    10. ' déf' → logprob: -8.26318073272705

Token 68: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24112212657928467
    2. 'user' → logprob: -2.991122245788574
    3. 'a' → logprob: -3.741122245788574
    4. 'data' → logprob: -4.116122245788574
    5. 'l' → logprob: -4.241122245788574
    6. 's' → logprob: -4.241122245788574
    7. 'm' → logprob: -4.616122245788574
    8. 'ent' → logprob: -4.741122245788574
    9. 'x' → logprob: -4.866122245788574
    10. '#' → logprob: -5.241122245788574

Token 69: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19826582074165344
    2. 'l' → logprob: -2.448265790939331
    3. 'a' → logprob: -3.573265790939331
    4. 'x' → logprob: -4.82326602935791
    5. 'u' → logprob: -4.82326602935791
    6. '```' → logprob: -5.07326602935791
    7. 'm' → logprob: -5.19826602935791
    8. 't' → logprob: -5.19826602935791
    9. 'data' → logprob: -5.32326602935791
    10. 'user' → logprob: -5.44826602935791

Token 70: ' map' (ID: 4014)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4135156273841858
    2. 'l' → logprob: -1.913515567779541
    3. 'a' → logprob: -2.413515567779541
    4. 'x' → logprob: -3.663515567779541
    5. 'u' → logprob: -4.163515567779541
    6. 'v' → logprob: -4.413515567779541
    7. 't' → logprob: -4.538515567779541
    8. '#' → logprob: -4.913515567779541
    9. 'i' → logprob: -5.538515567779541
    10. 'e' → logprob: -5.663515567779541

Token 71: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023014727979898453
    2. '(lambda' → logprob: -4.273014545440674
    3. '(int' → logprob: -5.023014545440674
    4. '(str' → logprob: -6.398014545440674
    5. '(
' → logprob: -7.773014545440674
    6. '(list' → logprob: -9.898015022277832
    7. '()' → logprob: -11.523015022277832
    8. '(float' → logprob: -11.523015022277832
    9. '(

' → logprob: -11.773015022277832
    10. '(func' → logprob: -11.898015022277832

Token 72: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010142299579456449
    2. ',' → logprob: -7.126014232635498
    3. ' )' → logprob: -10.00101375579834
    4. '(' → logprob: -10.25101375579834
    5. '),' → logprob: -10.50101375579834
    6. ')(' → logprob: -10.62601375579834
    7. ')>' → logprob: -10.75101375579834
    8. ')#' → logprob: -11.62601375579834
    9. ')">' → logprob: -11.62601375579834
    10. '<|end|>' → logprob: -12.25101375579834

Token 73: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.36179301142692566
    2. 'input' → logprob: -1.236793041229248
    3. ')' → logprob: -4.736793041229248
    4. ' )' → logprob: -6.361793041229248
    5. 'split' → logprob: -8.11179256439209
    6. 'spl' → logprob: -8.61179256439209
    7. ' inputs' → logprob: -8.73679256439209
    8. 's' → logprob: -8.73679256439209
    9. ' user' → logprob: -8.86179256439209
    10. 'user' → logprob: -8.86179256439209

Token 74: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030622001737356186
    2. '(' → logprob: -3.9056220054626465
    3. '(input' → logprob: -5.6556220054626465
    4. '(int' → logprob: -6.5306220054626465
    5. '(s' → logprob: -7.2806220054626465
    6. ' )' → logprob: -7.7806220054626465
    7. '(
' → logprob: -8.155621528625488
    8. ',' → logprob: -8.280621528625488
    9. '(user' → logprob: -8.405621528625488
    10. '))' → logprob: -8.530621528625488

Token 75: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.006921984720975161
    2. 't' → logprob: -5.631921768188477
    3. 'e' → logprob: -6.131921768188477
    4. ' it' → logprob: -8.381921768188477
    5. 'i' → logprob: -8.506921768188477
    6. 'issant' → logprob: -9.131921768188477
    7. 'ie' → logprob: -9.506921768188477
    8. 'ît' → logprob: -9.631921768188477
    9. '()' → logprob: -9.756921768188477
    10. 'et' → logprob: -9.881921768188477

Token 76: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.234262153506279
    2. ' la' → logprob: -2.234262228012085
    3. ' les' → logprob: -2.859262228012085
    4. 'la' → logprob: -4.484261989593506
    5. 'les' → logprob: -4.609261989593506
    6. ' chacune' → logprob: -4.734261989593506
    7. 'cha' → logprob: -5.234261989593506
    8. 'ces' → logprob: -6.109261989593506
    9. ' ces' → logprob: -6.359261989593506
    10. ' each' → logprob: -6.359261989593506

Token 77: ' chaîne' (ID: 89288)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.23704558610916138
    2. ' morceau' → logprob: -1.7370455265045166
    3. ' élément' → logprob: -3.6120455265045166
    4. ' morceaux' → logprob: -5.862045764923096
    5. ' chaîne' → logprob: -5.987045764923096
    6. 'm' → logprob: -7.362045764923096
    7. ' mot' → logprob: -7.362045764923096
    8. 'chaine' → logprob: -7.862045764923096
    9. ' fragment' → logprob: -8.862045288085938
    10. ' éléments' → logprob: -8.987045288085938

Token 78: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6444249153137207
    2. ')' → logprob: -1.0194249153137207
    3. 's' → logprob: -2.5194249153137207
    4. ' des' → logprob: -4.269424915313721
    5. 'des' → logprob: -5.394424915313721
    6. '(
' → logprob: -6.019424915313721
    7. '(s' → logprob: -6.269424915313721
    8. '(lambda' → logprob: -6.394424915313721
    9. '<|end|>' → logprob: -6.519424915313721
    10. ' )' → logprob: -6.769424915313721

Token 79: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -1.0508484840393066
    2. ' la' → logprob: -1.9258484840393066
    3. 'chaine' → logprob: -2.1758484840393066
    4. ' caractères' → logprob: -2.1758484840393066
    5. 's' → logprob: -2.5508484840393066
    6. 'élé' → logprob: -3.0508484840393066
    7. ' chaîne' → logprob: -3.1758484840393066
    8. 'la' → logprob: -3.4258484840393066
    9. 'l' → logprob: -3.8008484840393066
    10. ' chaînes' → logprob: -4.550848484039307

Token 80: ' résult' (ID: 31657)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1798733025789261
    2. ' )' → logprob: -1.9298733472824097
    3. ' ' → logprob: -4.554873466491699
    4. ',' → logprob: -5.804873466491699
    5. '<|end|>' → logprob: -5.804873466491699
    6. '(' → logprob: -7.054873466491699
    7. ')>' → logprob: -8.6798734664917
    8. 's' → logprob: -8.6798734664917
    9. '(
' → logprob: -8.8048734664917
    10. '  ' → logprob: -8.9298734664917

Token 81: 'ante' (ID: 2116)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.31144997477531433
    2. 'u' → logprob: -1.9364500045776367
    3. 'ue' → logprob: -2.6864500045776367
    4. 'ante' → logprob: -3.5614500045776367
    5. 'uant' → logprob: -4.061450004577637
    6. 'e' → logprob: -5.061450004577637
    7. 'ent' → logprob: -6.936450004577637
    8. 'antes' → logprob: -7.561450004577637
    9. 'uent' → logprob: -8.061450004577637
    10. ')' → logprob: -8.436450004577637

Token 82: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043320585042238235
    2. ' )' → logprob: -4.418320655822754
    3. ' en' → logprob: -4.793320655822754
    4. ',' → logprob: -4.793320655822754
    5. ' par' → logprob: -5.043320655822754
    6. 's' → logprob: -5.918320655822754
    7. 'es' → logprob: -6.543320655822754
    8. '(' → logprob: -6.668320655822754
    9. 'par' → logprob: -8.418320655822754
    10. '(s' → logprob: -8.918320655822754

Token 83: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08154766261577606
    2. ' un' → logprob: -2.581547737121582
    3. 'des' → logprob: -6.081547737121582
    4. 'un' → logprob: -9.331547737121582
    5. 's' → logprob: -9.456547737121582
    6. ' entier' → logprob: -9.706547737121582
    7. ' int' → logprob: -10.081547737121582
    8. 'ent' → logprob: -10.331547737121582
    9. ' integers' → logprob: -11.206547737121582
    10. 'int' → logprob: -11.581547737121582

Token 84: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.07393170148134232
    2. ' ent' → logprob: -3.5739316940307617
    3. 'ent' → logprob: -3.6989316940307617
    4. ' int' → logprob: -4.948931694030762
    5. ' nombre' → logprob: -5.323931694030762
    6. ' espace' → logprob: -6.573931694030762
    7. ' entière' → logprob: -6.698931694030762
    8. ' élément' → logprob: -6.823931694030762
    9. ' ' → logprob: -7.198931694030762
    10. 'int' → logprob: -7.948931694030762

Token 85: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6050974130630493
    2. 's' → logprob: -1.6050974130630493
    3. '(' → logprob: -2.1050972938537598
    4. ',' → logprob: -2.7300972938537598
    5. 'a' → logprob: -3.7300972938537598
    6. 'e' → logprob: -5.10509729385376
    7. 'n' → logprob: -5.10509729385376
    8. 'r' → logprob: -5.23009729385376
    9. ':' → logprob: -5.98009729385376
    10. 'x' → logprob: -6.10509729385376

Token 86: 'type' (ID: 2493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00319375516846776
    2. ' )' → logprob: -5.7531938552856445
    3. '),' → logprob: -12.378193855285645
    4. ',' → logprob: -12.878193855285645
    5. ').' → logprob: -12.878193855285645
    6. '(' → logprob: -13.753193855285645
    7. ')
' → logprob: -14.003193855285645
    8. ' ' → logprob: -14.128193855285645
    9. '))' → logprob: -14.378193855285645
    10. ')#' → logprob: -15.003193855285645

Token 87: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35837095975875854
    2. ' )' → logprob: -1.2333710193634033
    3. ' ' → logprob: -4.858370780944824
    4. 's' → logprob: -6.858370780944824
    5. '  ' → logprob: -8.858370780944824
    6. ' ),' → logprob: -9.358370780944824
    7. ',' → logprob: -9.483370780944824
    8. ' ,' → logprob: -9.733370780944824
    9. ' )
' → logprob: -9.733370780944824
    10. ' Python' → logprob: -9.858370780944824

Token 88: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014442270912695676
    2. ' )' → logprob: -9.750144004821777
    3. '))' → logprob: -10.250144004821777
    4. ')`' → logprob: -11.750144004821777
    5. ').' → logprob: -12.000144004821777
    6. '()' → logprob: -12.250144004821777
    7. ')#' → logprob: -12.500144004821777
    8. ')
' → logprob: -12.625144004821777
    9. ',' → logprob: -12.625144004821777
    10. '(' → logprob: -12.625144004821777

Token 89: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3118402361869812
    2. 'a' → logprob: -1.811840295791626
    3. 'x' → logprob: -2.936840295791626
    4. '#' → logprob: -5.186840057373047
    5. 'l' → logprob: -5.311840057373047
    6. 'r' → logprob: -5.436840057373047
    7. 'e' → logprob: -5.436840057373047
    8. 's' → logprob: -5.436840057373047
    9. '=' → logprob: -5.561840057373047
    10. '```' → logprob: -5.561840057373047

Token 90: ' Enfin' (ID: 85274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4470939338207245
    2. 'a' → logprob: -1.1970939636230469
    3. 'numbers' → logprob: -3.697093963623047
    4. '#' → logprob: -4.697093963623047
    5. 'x' → logprob: -5.197093963623047
    6. 'r' → logprob: -5.322093963623047
    7. 'values' → logprob: -6.197093963623047
    8. 'nums' → logprob: -6.572093963623047
    9. 'ent' → logprob: -6.697093963623047
    10. 's' → logprob: -6.697093963623047

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032812103629112244
    2. ')' → logprob: -4.657812118530273
    3. ' ,' → logprob: -5.032812118530273
    4. ' =' → logprob: -5.782812118530273
    5. 's' → logprob: -5.907812118530273
    6. ' la' → logprob: -6.282812118530273
    7. ':' → logprob: -6.282812118530273
    8. '=' → logprob: -6.657812118530273
    9. ' a' → logprob: -7.532812118530273
    10. ' n' → logprob: -7.657812118530273

Token 92: ' on' (ID: 402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1167774200439453
    2. ' la' → logprob: -1.3667774200439453
    3. 'a' → logprob: -1.4917774200439453
    4. ' les' → logprob: -2.6167774200439453
    5. ' on' → logprob: -3.6167774200439453
    6. ' n' → logprob: -4.366777420043945
    7. 'numbers' → logprob: -4.991777420043945
    8. 'x' → logprob: -5.116777420043945
    9. 'la' → logprob: -5.241777420043945
    10. 'values' → logprob: -5.241777420043945

Token 93: ' utilise' (ID: 70283)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1021062135696411
    2. ' récup' → logprob: -1.4771062135696411
    3. 'r' → logprob: -1.9771062135696411
    4. ' transforme' → logprob: -2.2271060943603516
    5. ' crée' → logprob: -3.4771060943603516
    6. ' r' → logprob: -4.602106094360352
    7. 't' → logprob: -4.727106094360352
    8. ' liste' → logprob: -4.852106094360352
    9. ' n' → logprob: -4.977106094360352
    10. ' ajoute' → logprob: -4.977106094360352

Token 94: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17878293991088867
    2. 'list' → logprob: -2.9287829399108887
    3. 'l' → logprob: -3.5537829399108887
    4. ' list' → logprob: -4.053782939910889
    5. ' l' → logprob: -4.178782939910889
    6. 'a' → logprob: -4.928782939910889
    7. 'la' → logprob: -4.928782939910889
    8. ' ' → logprob: -5.178782939910889
    9. ' tuple' → logprob: -5.678782939910889
    10. ' a' → logprob: -5.803782939910889

Token 95: ''aff' (ID: 53397)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5492618680000305
    2. 'a' → logprob: -1.0492618083953857
    3. 'es' → logprob: -2.6742618083953857
    4. 's' → logprob: -6.424262046813965
    5. ' a' → logprob: -6.924262046813965
    6. ''ensemble' → logprob: -9.174262046813965
    7. 'n' → logprob: -9.799262046813965
    8. '_' → logprob: -9.924262046813965
    9. ' =' → logprob: -10.049262046813965
    10. '`' → logprob: -10.049262046813965

Token 96: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0529915951192379
    2. 'ichage' → logprob: -3.0529916286468506
    3. 'ic' → logprob: -6.4279913902282715
    4. 'ich' → logprob: -7.1779913902282715
    5. 'ection' → logprob: -7.3029913902282715
    6. 'ecta' → logprob: -7.5529913902282715
    7. 'ec' → logprob: -8.17799186706543
    8. '#' → logprob: -9.42799186706543
    9. '```' → logprob: -9.67799186706543
    10. 'i' → logprob: -9.80299186706543

Token 97: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.004945308435708284
    2. 'a' → logprob: -5.379945278167725
    3. 'er' → logprob: -9.129945755004883
    4. '=' → logprob: -9.379945755004883
    5. 'e' → logprob: -10.004945755004883
    6. 'at' → logprob: -10.754945755004883
    7. 'ations' → logprob: -11.129945755004883
    8. 'ateur' → logprob: -11.504945755004883
    9. 'é' → logprob: -11.879945755004883
    10. ' =' → logprob: -12.129945755004883

Token 98: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0484106540679932
    2. ' a' → logprob: -1.0484106540679932
    3. ' =' → logprob: -2.673410654067993
    4. ' n' → logprob: -2.798410654067993
    5. ' x' → logprob: -2.923410654067993
    6. 'n' → logprob: -3.048410654067993
    7. 'x' → logprob: -3.673410654067993
    8. 's' → logprob: -4.298410415649414
    9. ' multiple' → logprob: -5.423410415649414
    10. ' ' → logprob: -5.423410415649414

Token 99: ' pour' (ID: 1930)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029604678973555565
    2. 'n' → logprob: -4.404604911804199
    3. ' a' → logprob: -4.404604911804199
    4. 'x' → logprob: -5.904604911804199
    5. 's' → logprob: -7.279604911804199
    6. ')' → logprob: -8.1546049118042
    7. ',' → logprob: -8.1546049118042
    8. ':' → logprob: -8.5296049118042
    9. 'u' → logprob: -9.4046049118042
    10. 'r' → logprob: -9.5296049118042

Token 100: ' stock' (ID: 6546)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9093243479728699
    2. ' affect' → logprob: -1.5343244075775146
    3. 'assign' → logprob: -2.0343244075775146
    4. 'r' → logprob: -2.6593244075775146
    5. 'aff' → logprob: -2.6593244075775146
    6. ' récupérer' → logprob: -2.9093244075775146
    7. ' assign' → logprob: -4.2843241691589355
    8. ' a' → logprob: -4.6593241691589355
    9. ' attrib' → logprob: -5.4093241691589355
    10. 'x' → logprob: -5.4093241691589355

Token 101: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2519390881061554
    2. 'e' → logprob: -1.501939058303833
    3. 'é' → logprob: -11.876938819885254
    4. 'u' → logprob: -13.751938819885254
    5. 'a' → logprob: -15.001938819885254
    6. '#' → logprob: -15.001938819885254
    7. ' er' → logprob: -15.126938819885254
    8. '­er' → logprob: -15.376938819885254
    9. 'uer' → logprob: -15.876938819885254
    10. ' e' → logprob: -16.00193977355957

Token 102: ' chaque' (ID: 21194)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3121051788330078
    2. 'x' → logprob: -2.062105178833008
    3. ' a' → logprob: -2.312105178833008
    4. 'n' → logprob: -3.937105178833008
    5. ' n' → logprob: -5.437105178833008
    6. ' x' → logprob: -5.562105178833008
    7. ' les' → logprob: -5.687105178833008
    8. ' ' → logprob: -6.062105178833008
    9. 's' → logprob: -6.812105178833008
    10. 'r' → logprob: -6.937105178833008

Token 103: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.296597957611084
    2. ' valeur' → logprob: -1.921597957611084
    3. ' élément' → logprob: -2.296597957611084
    4. 'élé' → logprob: -2.421597957611084
    5. ' nombre' → logprob: -2.671597957611084
    6. ' entier' → logprob: -2.671597957611084
    7. ' a' → logprob: -2.921597957611084
    8. 'val' → logprob: -3.671597957611084
    9. 'n' → logprob: -3.921597957611084
    10. 'nombre' → logprob: -4.046597957611084

Token 104: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3486950695514679
    2. ' a' → logprob: -2.4736950397491455
    3. 's' → logprob: -2.7236950397491455
    4. 'n' → logprob: -2.8486950397491455
    5. 'x' → logprob: -3.9736950397491455
    6. ' ' → logprob: -4.348695278167725
    7. ' n' → logprob: -4.598695278167725
    8. ',' → logprob: -4.723695278167725
    9. 'u' → logprob: -4.723695278167725
    10. '1' → logprob: -4.723695278167725

Token 105: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9165744185447693
    2. ' a' → logprob: -1.666574478149414
    3. ' les' → logprob: -2.041574478149414
    4. ' variables' → logprob: -2.791574478149414
    5. ' trois' → logprob: -2.916574478149414
    6. 'les' → logprob: -3.416574478149414
    7. ' des' → logprob: -3.416574478149414
    8. 'x' → logprob: -3.916574478149414
    9. 'variables' → logprob: -4.541574478149414
    10. ' la' → logprob: -4.791574478149414

Token 106: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9721038341522217
    2. ' variables' → logprob: -1.2221038341522217
    3. ' trois' → logprob: -2.2221038341522217
    4. ' a' → logprob: -2.4721038341522217
    5. 'variables' → logprob: -3.0971038341522217
    6. 'x' → logprob: -3.8471038341522217
    7. 'tro' → logprob: -4.347104072570801
    8. ' nombres' → logprob: -4.722104072570801
    9. 'de' → logprob: -4.847104072570801
    10. '3' → logprob: -5.097104072570801

Token 107: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6402211785316467
    2. ' a' → logprob: -1.015221118927002
    3. 'x' → logprob: -2.890221118927002
    4. ' x' → logprob: -3.015221118927002
    5. 'n' → logprob: -5.890221118927002
    6. ' n' → logprob: -6.515221118927002
    7. ' A' → logprob: -7.765221118927002
    8. 'A' → logprob: -7.890221118927002
    9. 'i' → logprob: -8.01522159576416
    10. ' i' → logprob: -9.26522159576416

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058066368103027344
    2. ' ,' → logprob: -3.1830663681030273
    3. ',B' → logprob: -4.933066368103027
    4. '1' → logprob: -5.183066368103027
    5. ',A' → logprob: -6.933066368103027
    6. 'A' → logprob: -8.558066368103027
    7. ' A' → logprob: -8.808066368103027
    8. 's' → logprob: -8.933066368103027
    9. ' B' → logprob: -9.183066368103027
    10. 'B' → logprob: -9.183066368103027

Token 109: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07891248166561127
    2. ' B' → logprob: -2.5789124965667725
    3. ' ' → logprob: -12.203912734985352
    4. ',' → logprob: -12.703912734985352
    5. 'space' → logprob: -12.828912734985352
    6. 'b' → logprob: -13.078912734985352
    7. 's' → logprob: -13.078912734985352
    8. '<|end|>' → logprob: -13.703912734985352
    9. ' 
' → logprob: -14.266412734985352
    10. '>B' → logprob: -14.453912734985352

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008394040050916374
    2. ' ,' → logprob: -7.8758392333984375
    3. ',C' → logprob: -8.000839233398438
    4. ' et' → logprob: -9.500839233398438
    5. 'et' → logprob: -11.000839233398438
    6. 'C' → logprob: -12.125839233398438
    7. '<|end|>' → logprob: -12.750839233398438
    8. ' and' → logprob: -12.750839233398438
    9. ',
' → logprob: -12.875839233398438
    10. ',A' → logprob: -12.875839233398438

Token 111: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2340460568666458
    2. ' C' → logprob: -1.8590461015701294
    3. 'et' → logprob: -3.48404598236084
    4. ' et' → logprob: -3.98404598236084
    5. ' and' → logprob: -5.85904598236084
    6. ',' → logprob: -8.48404598236084
    7. 'and' → logprob: -8.85904598236084
    8. ' ' → logprob: -8.85904598236084
    9. 's' → logprob: -10.10904598236084
    10. '<|end|>' → logprob: -10.92154598236084

Token 112: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4967823922634125
    2. ' =' → logprob: -1.6217824220657349
    3. '=' → logprob: -2.3717823028564453
    4. 'A' → logprob: -2.8717823028564453
    5. 'a' → logprob: -4.246782302856445
    6. ')' → logprob: -4.871782302856445
    7. ' A' → logprob: -5.496782302856445
    8. '=A' → logprob: -5.496782302856445
    9. ',A' → logprob: -5.496782302856445
    10. 's' → logprob: -5.746782302856445

Token 113: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.31335321068763733
    2. ' D' → logprob: -1.313353180885315
    3. ' ' → logprob: -9.563353538513184
    4. ' ' → logprob: -12.625853538513184
    5. '  ' → logprob: -13.313353538513184
    6. 's' → logprob: -13.500853538513184
    7. 'd' → logprob: -13.750853538513184
    8. '>D' → logprob: -13.813353538513184
    9. '```' → logprob: -13.875853538513184
    10. 'S' → logprob: -13.938353538513184

Token 114: ' respect' (ID: 5618)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01549635361880064
    2. 'a' → logprob: -4.640496253967285
    3. ',' → logprob: -5.765496253967285
    4. ')' → logprob: -7.390496253967285
    5. ' A' → logprob: -7.765496253967285
    6. ':' → logprob: -7.765496253967285
    7. '=' → logprob: -9.015496253967285
    8. 's' → logprob: -9.140496253967285
    9. '```' → logprob: -9.140496253967285
    10. '#' → logprob: -9.265496253967285

Token 115: 'ivement' (ID: 37978)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -1.6001026630401611
    2. 'u' → logprob: -1.7251026630401611
    3. 's' → logprob: -1.8501026630401611
    4. 'ue' → logprob: -2.225102663040161
    5. 'ivement' → logprob: -2.225102663040161
    6. 'e' → logprob: -2.475102663040161
    7. 'es' → logprob: -3.225102663040161
    8. 'ent' → logprob: -4.225102424621582
    9. 'ueux' → logprob: -4.225102424621582
    10. 'ales' → logprob: -4.475102424621582

Token 116: '.
' (ID: 558)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00018565983918961138
    2. 'a' → logprob: -8.8751859664917
    3. '```' → logprob: -11.1251859664917
    4. ' A' → logprob: -11.3751859664917
    5. 'n' → logprob: -12.0001859664917
    6. 'x' → logprob: -12.2501859664917
    7. '#' → logprob: -13.0001859664917
    8. '[A' → logprob: -13.7501859664917
    9. ',' → logprob: -14.0001859664917
    10. '[' → logprob: -14.1251859664917

Token 117: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0008912135381251574
    2. 'a' → logprob: -7.250891208648682
    3. ' A' → logprob: -9.12589168548584
    4. ':' → logprob: -11.00089168548584
    5. ',' → logprob: -11.25089168548584
    6. 'n' → logprob: -11.37589168548584
    7. 'x' → logprob: -11.87589168548584
    8. '#' → logprob: -12.25089168548584
    9. ' 
' → logprob: -12.37589168548584
    10. '```' → logprob: -12.87589168548584

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0117792384698987
    2. ' ,' → logprob: -4.511779308319092
    3. ' =' → logprob: -7.386779308319092
    4. '=' → logprob: -9.761778831481934
    5. ' ' → logprob: -11.011778831481934
    6. ',B' → logprob: -11.511778831481934
    7. 'A' → logprob: -11.886778831481934
    8. ' A' → logprob: -12.636778831481934
    9. 'B' → logprob: -12.636778831481934
    10. '[' → logprob: -13.011778831481934

Token 119: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.016453199088573456
    2. 'B' → logprob: -4.641453266143799
    3. ' ' → logprob: -5.016453266143799
    4. '<|end|>' → logprob: -10.01645278930664
    5. ' ' → logprob: -13.64145278930664
    6. '  ' → logprob: -15.26645278930664
    7. ' 
' → logprob: -15.76645278930664
    8. 's' → logprob: -16.01645278930664
    9. ')' → logprob: -16.01645278930664
    10. '=B' → logprob: -16.51645278930664

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',C' → logprob: -14.750025749206543
    4. ' =' → logprob: -15.250025749206543
    5. 'C' → logprob: -16.000024795532227
    6. '=' → logprob: -16.125024795532227
    7. '<|end|>' → logprob: -17.625024795532227
    8. ' C' → logprob: -17.750024795532227
    9. ',
' → logprob: -18.250024795532227
    10. '_,' → logprob: -19.250024795532227

Token 121: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.03365526720881462
    2. 'C' → logprob: -3.4086551666259766
    3. ' ' → logprob: -11.658655166625977
    4. ' ' → logprob: -14.783655166625977
    5. ' =' → logprob: -15.658655166625977
    6. '  ' → logprob: -16.533655166625977
    7. '=' → logprob: -16.783655166625977
    8. ' 
' → logprob: -16.908655166625977
    9. '<|end|>' → logprob: -16.908655166625977
    10. '=C' → logprob: -17.033655166625977

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ',D' → logprob: -11.125029563903809
    3. ' ,' → logprob: -11.250029563903809
    4. 'D' → logprob: -13.625029563903809
    5. '=' → logprob: -15.500029563903809
    6. ',
' → logprob: -16.250030517578125
    7. ' =' → logprob: -16.750030517578125
    8. '4' → logprob: -17.000030517578125
    9. '<|end|>' → logprob: -17.375030517578125
    10. ' D' → logprob: -17.625030517578125

Token 123: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.10027578473091125
    2. 'D' → logprob: -2.350275754928589
    3. ' ' → logprob: -9.600275993347168
    4. '=D' → logprob: -14.725275993347168
    5. ' ' → logprob: -15.100275993347168
    6. ' 
' → logprob: -15.350275993347168
    7. '=' → logprob: -15.975275993347168
    8. '  ' → logprob: -15.975275993347168
    9. ' =' → logprob: -16.60027503967285
    10. '<|end|>' → logprob: -16.72527503967285

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995878368616104
    2. '=' → logprob: -2.6949586868286133
    3. ',' → logprob: -11.819958686828613
    4. '=input' → logprob: -12.069958686828613
    5. ' =
' → logprob: -12.819958686828613
    6. '<|end|>' → logprob: -13.069958686828613
    7. '=A' → logprob: -13.819958686828613
    8. ')' → logprob: -13.819958686828613
    9. '=int' → logprob: -14.694958686828613
    10. ' ' → logprob: -15.069958686828613

Token 125: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07889022678136826
    2. 'map' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.828889846801758
    4. ' list' → logprob: -16.078889846801758
    5. ' ' → logprob: -16.203889846801758
    6. '	map' → logprob: -16.328889846801758
    7. ' input' → logprob: -17.703889846801758
    8. 'm' → logprob: -17.953889846801758
    9. '(map' → logprob: -17.953889846801758
    10. 'input' → logprob: -18.078889846801758

Token 126: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014272568747401237
    2. '(' → logprob: -4.264272689819336
    3. '(input' → logprob: -9.889272689819336
    4. ' (' → logprob: -11.014272689819336
    5. '<int' → logprob: -11.014272689819336
    6. '(
' → logprob: -11.514272689819336
    7. '(str' → logprob: -12.014272689819336
    8. '(lambda' → logprob: -12.389272689819336
    9. '[int' → logprob: -13.264272689819336
    10. ']int' → logprob: -14.014272689819336

Token 127: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0010547225829213858
    2. '(' → logprob: -7.751054763793945
    3. 'input' → logprob: -7.876054763793945
    4. ' (' → logprob: -9.126054763793945
    5. ',input' → logprob: -9.376054763793945
    6. ')' → logprob: -10.251054763793945
    7. ' input' → logprob: -11.876054763793945
    8. '=input' → logprob: -12.501054763793945
    9. '```' → logprob: -13.251054763793945
    10. ',' → logprob: -14.376054763793945

Token 128: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004079828038811684
    2. ' input' → logprob: -5.504079818725586
    3. '(input' → logprob: -14.004079818725586
    4. '<input' → logprob: -15.629079818725586
    5. ')' → logprob: -16.129079818725586
    6. '```' → logprob: -16.504079818725586
    7. '=input' → logprob: -16.754079818725586
    8. '	input' → logprob: -16.754079818725586
    9. ',input' → logprob: -17.129079818725586
    10. '[input' → logprob: -18.004079818725586

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023706546053290367
    2. '()' → logprob: -6.127370834350586
    3. '())' → logprob: -8.627370834350586
    4. ' ().' → logprob: -12.377370834350586
    5. '()).' → logprob: -14.002370834350586
    6. ')' → logprob: -14.627370834350586
    7. '()`' → logprob: -16.002370834350586
    8. '(' → logprob: -16.127370834350586
    9. '()))' → logprob: -16.127370834350586
    10. ' ()' → logprob: -16.127370834350586

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043221889063715935
    2. 'strip' → logprob: -7.750432014465332
    3. ' split' → logprob: -13.500432014465332
    4. 'rstrip' → logprob: -16.25043296813965
    5. '(split' → logprob: -18.00043296813965
    6. ')' → logprob: -18.25043296813965
    7. 'spl' → logprob: -19.37543296813965
    8. '_split' → logprob: -19.62543296813965
    9. '.split' → logprob: -19.62543296813965
    10. 'plit' → logprob: -21.00043296813965

Token 131: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0034756974782794714
    2. '()))' → logprob: -6.253475666046143
    3. '()' → logprob: -6.503475666046143
    4. ')' → logprob: -11.3784761428833
    5. '())
' → logprob: -11.6284761428833
    6. '(' → logprob: -11.7534761428833
    7. ' ())' → logprob: -11.7534761428833
    8. '('' → logprob: -11.8784761428833
    9. '().' → logprob: -14.1284761428833
    10. '()))
' → logprob: -14.2534761428833

Token 132: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5724667310714722
    2. 'if' → logprob: -1.3224667310714722
    3. '#' → logprob: -1.9474667310714722
    4. ' if' → logprob: -5.072466850280762
    5. 'result' → logprob: -5.197466850280762
    6. 'sum' → logprob: -5.572466850280762
    7. ' print' → logprob: -5.947466850280762
    8. 'total' → logprob: -6.072466850280762
    9. 's' → logprob: -6.572466850280762
    10. 'E' → logprob: -6.697466850280762

Token 134: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.025159381330013275
    2. 'cule' → logprob: -3.9001593589782715
    3. 'c' → logprob: -5.5251593589782715
    4. 'culate' → logprob: -8.27515983581543
    5. '
' → logprob: -8.65015983581543
    6. '

' → logprob: -9.52515983581543
    7. 'cules' → logprob: -10.40015983581543
    8. '#' → logprob: -10.90015983581543
    9. 'culator' → logprob: -11.15015983581543
    10. ' cul' → logprob: -11.40015983581543

Token 135: ' le' (ID: 505)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.392410159111023
    2. '_' → logprob: -1.642410159111023
    3. 'e' → logprob: -2.7674102783203125
    4. 'r' → logprob: -3.0174102783203125
    5. 's' → logprob: -3.0174102783203125
    6. ' =' → logprob: -3.5174102783203125
    7. '()' → logprob: -3.6424102783203125
    8. 'sum' → logprob: -3.6424102783203125
    9. 'result' → logprob: -3.7674102783203125
    10. 'ar' → logprob: -3.7674102783203125

Token 136: ' nombre' (ID: 9733)
  Prédit: ' maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -1.5777108669281006
    2. ' produit' → logprob: -1.5777108669281006
    3. ' max' → logprob: -1.7027108669281006
    4. ' résultat' → logprob: -1.8277108669281006
    5. 's' → logprob: -2.2027108669281006
    6. 'max' → logprob: -3.4527108669281006
    7. 'produ' → logprob: -3.8277108669281006
    8. 'maximum' → logprob: -4.20271110534668
    9. ' somme' → logprob: -4.32771110534668
    10. 'rés' → logprob: -4.45271110534668

Token 137: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.052136629819869995
    2. '_total' → logprob: -3.4271366596221924
    3. 's' → logprob: -5.302136421203613
    4. 'total' → logprob: -6.052136421203613
    5. '_de' → logprob: -6.177136421203613
    6. '_space' → logprob: -6.802136421203613
    7. ' ' → logprob: -6.802136421203613
    8. '_s' → logprob: -6.927136421203613
    9. '_d' → logprob: -7.177136421203613
    10. '_des' → logprob: -7.427136421203613

Token 138: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8003368973731995
    2. '_de' → logprob: -1.0503368377685547
    3. ' de' → logprob: -2.6753368377685547
    4. '_' → logprob: -3.1753368377685547
    5. '_total' → logprob: -3.9253368377685547
    6. 's' → logprob: -4.050336837768555
    7. '_min' → logprob: -4.800336837768555
    8. '_d' → logprob: -5.175336837768555
    9. 'min' → logprob: -5.425336837768555
    10. ' d' → logprob: -5.425336837768555

Token 139: ' fois' (ID: 14697)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.6349635124206543
    2. 'car' → logprob: -2.6349635124206543
    3. 't' → logprob: -2.8849635124206543
    4. 'b' → logprob: -2.8849635124206543
    5. 'points' → logprob: -3.1349635124206543
    6. 'cart' → logprob: -3.1349635124206543
    7. '```' → logprob: -3.1349635124206543
    8. 'jours' → logprob: -3.2599635124206543
    9. 'bil' → logprob: -3.3849635124206543
    10. 'rect' → logprob: -3.3849635124206543

Token 140: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9243647456169128
    2. '(' → logprob: -1.0493648052215576
    3. ' (' → logprob: -2.9243648052215576
    4. '<|end|>' → logprob: -3.2993648052215576
    5. ' que' → logprob: -3.5493648052215576
    6. ' A' → logprob: -3.7993648052215576
    7. 'A' → logprob: -4.0493645668029785
    8. ' de' → logprob: -4.0493645668029785
    9. 's' → logprob: -4.1743645668029785
    10. 'de' → logprob: -4.5493645668029785

Token 141: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.125791072845459
    2. ' A' → logprob: -2.250791072845459
    3. ' il' → logprob: -2.750791072845459
    4. 'l' → logprob: -3.125791072845459
    5. ' on' → logprob: -3.250791072845459
    6. '(' → logprob: -3.250791072845459
    7. '(A' → logprob: -3.500791072845459
    8. 'B' → logprob: -3.500791072845459
    9. 'le' → logprob: -3.625791072845459
    10. ' la' → logprob: -3.750791072845459

Token 142: ''on' (ID: 25812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10654539614915848
    2. 'e' → logprob: -2.4815454483032227
    3. ''a' → logprob: -5.731545448303223
    4. ''on' → logprob: -5.856545448303223
    5. ''' → logprob: -6.481545448303223
    6. ''utilisateur' → logprob: -6.481545448303223
    7. 'es' → logprob: -6.856545448303223
    8. 'A' → logprob: -6.981545448303223
    9. ''app' → logprob: -7.231545448303223
    10. ''ensemble' → logprob: -7.356545448303223

Token 143: ' peut' (ID: 9216)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.831984281539917
    2. ' devra' → logprob: -1.581984281539917
    3. 'pe' → logprob: -1.706984281539917
    4. ' doit' → logprob: -2.581984281539917
    5. ' peut' → logprob: -3.206984281539917
    6. '#' → logprob: -3.956984281539917
    7. ' pourra' → logprob: -4.581984519958496
    8. 'dev' → logprob: -5.206984519958496
    9. 'a' → logprob: -5.581984519958496
    10. 'pour' → logprob: -5.831984519958496

Token 144: ' sou' (ID: 4069)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -1.6816860437393188
    2. ' placer' → logprob: -1.9316860437393188
    3. ' couper' → logprob: -2.6816859245300293
    4. ' emp' → logprob: -3.1816859245300293
    5. ' travers' → logprob: -3.4316859245300293
    6. 'tr' → logprob: -3.4316859245300293
    7. ' addition' → logprob: -3.4316859245300293
    8. 'placer' → logprob: -3.8066859245300293
    9. ' assembler' → logprob: -3.9316859245300293
    10. 'addition' → logprob: -3.9316859245300293

Token 145: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.020299190655350685
    2. 'mettre' → logprob: -4.270298957824707
    3. 'str' → logprob: -5.520298957824707
    4. 's' → logprob: -8.020298957824707
    5. 'st' → logprob: -8.020298957824707
    6. 'tra' → logprob: -8.145298957824707
    7. '#' → logprob: -8.270298957824707
    8. 'straction' → logprob: -8.645298957824707
    9. 'b' → logprob: -8.770298957824707
    10. 'lever' → logprob: -9.145298957824707

Token 146: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.036764420568943024
    2. 'itre' → logprob: -4.286764621734619
    3. 're' → logprob: -5.036764621734619
    4. 'ct' → logprob: -5.286764621734619
    5. 'yre' → logprob: -6.286764621734619
    6. 'it' → logprob: -6.286764621734619
    7. 'r' → logprob: -6.661764621734619
    8. 'uire' → logprob: -6.661764621734619
    9. 'n' → logprob: -7.036764621734619
    10. 'dre' → logprob: -7.661764621734619

Token 147: ' D' (ID: 415)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8323490023612976
    2. ' min' → logprob: -1.7073490619659424
    3. '1' → logprob: -1.9573490619659424
    4. 'A' → logprob: -2.4573490619659424
    5. ' A' → logprob: -3.3323490619659424
    6. ' un' → logprob: -4.207348823547363
    7. 'max' → logprob: -4.207348823547363
    8. ' ' → logprob: -4.332348823547363
    9. 'D' → logprob: -4.332348823547363
    10. 'B' → logprob: -4.457348823547363

Token 148: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3667711019515991
    2. ' ' → logprob: -1.9917711019515991
    3. 'de' → logprob: -2.2417712211608887
    4. 'from' → logprob: -3.9917712211608887
    5. ' à' → logprob: -4.366771221160889
    6. ' des' → logprob: -4.866771221160889
    7. ' from' → logprob: -4.991771221160889
    8. ',' → logprob: -5.991771221160889
    9. '0' → logprob: -5.991771221160889
    10. '.' → logprob: -6.491771221160889

Token 149: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.28023219108581543
    2. ' A' → logprob: -2.4052321910858154
    3. 'min' → logprob: -2.4052321910858154
    4. 'B' → logprob: -3.6552321910858154
    5. 'C' → logprob: -4.0302324295043945
    6. ' min' → logprob: -4.5302324295043945
    7. 'max' → logprob: -5.9052324295043945
    8. ' B' → logprob: -6.2802324295043945
    9. ' C' → logprob: -6.6552324295043945
    10. ' (' → logprob: -7.1552324295043945

Token 150: ' avant' (ID: 13339)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7026273012161255
    2. 'while' → logprob: -0.8276273012161255
    3. ' ' → logprob: -3.952627182006836
    4. '.' → logprob: -4.077627182006836
    5. ' //' → logprob: -4.452627182006836
    6. 'A' → logprob: -5.452627182006836
    7. ',' → logprob: -6.077627182006836
    8. 'a' → logprob: -6.452627182006836
    9. '#' → logprob: -6.702627182006836
    10. ' #' → logprob: -6.702627182006836

Token 151: ' d' (ID: 272)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.18405838310718536
    2. 'que' → logprob: -2.559058427810669
    3. 'A' → logprob: -3.059058427810669
    4. ' A' → logprob: -4.05905818939209
    5. ' d' → logprob: -4.55905818939209
    6. ' qu' → logprob: -5.18405818939209
    7. ' de' → logprob: -5.43405818939209
    8. 'd' → logprob: -6.05905818939209
    9. 'qu' → logprob: -6.68405818939209
    10. 'de' → logprob: -6.68405818939209

Token 152: ''' (ID: 6)
  Prédit: ''obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.8050647974014282
    2. 'ce' → logprob: -1.1800647974014282
    3. 'ob' → logprob: -2.9300646781921387
    4. 'avoir' → logprob: -3.1800646781921387
    5. ''avoir' → logprob: -3.1800646781921387
    6. ' ce' → logprob: -3.9300646781921387
    7. ' obtenir' → logprob: -4.555064678192139
    8. '#' → logprob: -4.680064678192139
    9. 'être' → logprob: -4.680064678192139
    10. 'a' → logprob: -4.805064678192139

Token 153: 'atte' (ID: 23975)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.728003978729248
    2. 'avoir' → logprob: -0.853003978729248
    3. 'être' → logprob: -3.603003978729248
    4. ''obtenir' → logprob: -3.728003978729248
    5. ''avoir' → logprob: -4.853003978729248
    6. '
' → logprob: -4.853003978729248
    7. 'obt' → logprob: -4.853003978729248
    8. 'ce' → logprob: -5.478003978729248
    9. 'que' → logprob: -5.978003978729248
    10. 'A' → logprob: -6.228003978729248

Token 154: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.03022976778447628
    2. 'nd' → logprob: -3.5302298069000244
    3. 'ind' → logprob: -8.155229568481445
    4. 'n' → logprob: -10.780229568481445
    5. 'endre' → logprob: -10.905229568481445
    6. '1' → logprob: -10.905229568481445
    7. 'dre' → logprob: -11.155229568481445
    8. '"' → logprob: -11.280229568481445
    9. '#' → logprob: -11.530229568481445
    10. '
' → logprob: -11.655229568481445

Token 155: ' ou' (ID: 2031)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18999865651130676
    2. ' ' → logprob: -2.0649986267089844
    3. 'B' → logprob: -3.8149986267089844
    4. ' B' → logprob: -3.8149986267089844
    5. ' A' → logprob: -7.564998626708984
    6. 'A' → logprob: -7.689998626708984
    7. ' une' → logprob: -8.564998626708984
    8. 'le' → logprob: -8.564998626708984
    9. 'une' → logprob: -9.189998626708984
    10. '1' → logprob: -9.314998626708984

Token 156: ' de' (ID: 334)
  Prédit: ' dépasser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -1.1279959678649902
    2. ' égal' → logprob: -2.0029959678649902
    3. ' d' → logprob: -2.6279959678649902
    4. '#' → logprob: -2.7529959678649902
    5. '<|end|>' → logprob: -2.8779959678649902
    6. 'd' → logprob: -2.8779959678649902
    7. ' ég' → logprob: -3.0029959678649902
    8. 'A' → logprob: -3.1279959678649902
    9. ' ce' → logprob: -3.5029959678649902
    10. ' que' → logprob: -3.5029959678649902

Token 157: ' dépasser' (ID: 187375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.7727384567260742
    2. 'd' → logprob: -1.1477384567260742
    3. 'pass' → logprob: -1.7727384567260742
    4. ' dépasser' → logprob: -3.147738456726074
    5. 'desc' → logprob: -6.897738456726074
    6. '```' → logprob: -7.147738456726074
    7. ' ' → logprob: -7.522738456726074
    8. '1' → logprob: -7.647738456726074
    9. ' dé' → logprob: -7.772738456726074
    10. 'b' → logprob: -8.022738456726074

Token 158: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8328961133956909
    2. ' ' → logprob: -1.457896113395691
    3. ' B' → logprob: -1.582896113395691
    4. ' A' → logprob: -2.3328962326049805
    5. 'A' → logprob: -4.5828962326049805
    6. 'B' → logprob: -4.5828962326049805
    7. ' zero' → logprob: -5.8328962326049805
    8. ' la' → logprob: -6.3328962326049805
    9. ' un' → logprob: -6.5828962326049805
    10. ' une' → logprob: -6.8328962326049805

Token 159: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03320379555225372
    2. ' 
' → logprob: -4.033203601837158
    3. '
' → logprob: -4.408203601837158
    4. '' → logprob: -7.283203601837158
    5. '

' → logprob: -8.158204078674316
    6. 'a' → logprob: -8.533204078674316
    7. '\n' → logprob: -8.658204078674316
    8. ' while' → logprob: -8.908204078674316
    9. 'n' → logprob: -9.033204078674316
    10. 'count' → logprob: -9.033204078674316

Token 160: ' en' (ID: 469)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8623802661895752
    2. 'A' → logprob: -1.8623802661895752
    3. 'a' → logprob: -2.487380266189575
    4. ' A' → logprob: -2.737380266189575
    5. ' #' → logprob: -3.362380266189575
    6. ' ' → logprob: -3.487380266189575
    7. '#' → logprob: -3.862380266189575
    8. ' (' → logprob: -3.987380266189575
    9. ' if' → logprob: -4.112380027770996
    10. ' a' → logprob: -4.237380027770996

Token 161: ' arr' (ID: 1724)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.11697817593812943
    2. 'div' → logprob: -3.366978168487549
    3. ' divis' → logprob: -3.991978168487549
    4. 'A' → logprob: -4.616978168487549
    5. ' continu' → logprob: -4.866978168487549
    6. ' faisant' → logprob: -5.116978168487549
    7. ' prenant' → logprob: -5.741978168487549
    8. ' tenant' → logprob: -5.741978168487549
    9. 's' → logprob: -6.116978168487549
    10. ' ajout' → logprob: -6.241978168487549

Token 162: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.01335880346596241
    2. 'ondi' → logprob: -4.5133585929870605
    3. 'ivant' → logprob: -7.2633585929870605
    4. 'ont' → logprob: -7.5133585929870605
    5. 'ondissement' → logprob: -7.6383585929870605
    6. 'on' → logprob: -7.8883585929870605
    7. 'iv' → logprob: -9.638359069824219
    8. '>' → logprob: -11.200859069824219
    9. '"' → logprob: -11.513359069824219
    10. 'ivée' → logprob: -11.700859069824219

Token 163: 'issant' (ID: 31359)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.3864745497703552
    2. 'issant' → logprob: -2.136474609375
    3. 'on' → logprob: -2.511474609375
    4. 'ant' → logprob: -3.261474609375
    5. 'i' → logprob: -3.511474609375
    6. 'is' → logprob: -4.261474609375
    7. 'ondi' → logprob: -4.761474609375
    8. 'é' → logprob: -5.136474609375
    9. 'e' → logprob: -5.386474609375
    10. 'ont' → logprob: -5.636474609375

Token 164: ' vers' (ID: 3640)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1463373303413391
    2. ' vers' → logprob: -2.5213372707366943
    3. ' à' → logprob: -3.5213372707366943
    4. ' au' → logprob: -4.271337509155273
    5. '  ' → logprob: -5.771337509155273
    6. '   ' → logprob: -6.271337509155273
    7. 'au' → logprob: -6.646337509155273
    8. ')' → logprob: -7.146337509155273
    9. 'à' → logprob: -7.521337509155273
    10. '_' → logprob: -7.646337509155273

Token 165: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.161281943321228
    2. 'le' → logprob: -1.161281943321228
    3. 'au' → logprob: -1.286281943321228
    4. '```' → logprob: -3.5362820625305176
    5. '1' → logprob: -4.536282062530518
    6. '   ' → logprob: -4.911282062530518
    7. ' ' → logprob: -4.911282062530518
    8. '0' → logprob: -5.161282062530518
    9. '_' → logprob: -5.286282062530518
    10. '`' → logprob: -5.411282062530518

Token 166: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.031589481979608536
    2. ' haut' → logprob: -4.531589508056641
    3. 'bas' → logprob: -4.656589508056641
    4. 'ha' → logprob: -5.031589508056641
    5. 'b' → logprob: -5.906589508056641
    6. '```' → logprob: -7.781589508056641
    7. 'au' → logprob: -8.03158950805664
    8. '0' → logprob: -8.78158950805664
    9. 'sup' → logprob: -9.03158950805664
    10. 'h' → logprob: -9.53158950805664

Token 167: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19111515581607819
    2. 'import' → logprob: -2.191115140914917
    3. 'result' → logprob: -4.441115379333496
    4. '\' → logprob: -4.941115379333496
    5. '\n' → logprob: -5.066115379333496
    6. '' → logprob: -5.191115379333496
    7. ' 
' → logprob: -5.191115379333496
    8. '
' → logprob: -5.441115379333496
    9. 'n' → logprob: -5.441115379333496
    10. 'a' → logprob: -6.066115379333496

Token 168: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.043869733810424805
    2. 'n' → logprob: -4.293869972229004
    3. 'result' → logprob: -4.543869972229004
    4. 'from' → logprob: -5.793869972229004
    5. 'x' → logprob: -6.168869972229004
    6. 'min' → logprob: -6.168869972229004
    7. 'count' → logprob: -6.293869972229004
    8. 'steps' → logprob: -6.418869972229004
    9. 'ans' → logprob: -6.543869972229004
    10. '
' → logprob: -6.543869972229004

Token 169: ' Aut' (ID: 8517)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04953748360276222
    2. 'result' → logprob: -3.799537420272827
    3. 'from' → logprob: -4.299537658691406
    4. 'n' → logprob: -5.799537658691406
    5. 'steps' → logprob: -6.299537658691406
    6. 'min' → logprob: -6.424537658691406
    7. 'count' → logprob: -6.424537658691406
    8. 'print' → logprob: -6.674537658691406
    9. 'times' → logprob: -7.049537658691406
    10. 'ans' → logprob: -7.924537658691406

Token 170: 'rement' (ID: 66132)
  Prédit: 'rement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.5182145237922668
    2. 'res' → logprob: -1.893214464187622
    3. 'ant' → logprob: -2.268214464187622
    4. 'our' → logprob: -2.393214464187622
    5. 're' → logprob: -3.643214464187622
    6. 'or' → logprob: -3.893214464187622
    7. 'oris' → logprob: -5.143214702606201
    8. '#' → logprob: -6.643214702606201
    9. 'of' → logprob: -6.768214702606201
    10. 'rui' → logprob: -7.018214702606201

Token 171: ' dit' (ID: 4758)
  Prédit: 'dit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dit' → logprob: -0.5775259733200073
    2. ' dit' → logprob: -0.8275259733200073
    3. '-' → logprob: -6.952526092529297
    4. '#' → logprob: -7.827526092529297
    5. 'dis' → logprob: -9.202526092529297
    6. 'd' → logprob: -9.952526092529297
    7. 'Dit' → logprob: -10.452526092529297
    8. 'det' → logprob: -11.202526092529297
    9. ',' → logprob: -11.827526092529297
    10. 'A' → logprob: -12.077526092529297

Token 172: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6712968349456787
    2. ',' → logprob: -0.7962968349456787
    3. ':' → logprob: -3.5462968349456787
    4. 'A' → logprob: -6.171297073364258
    5. ' on' → logprob: -6.546297073364258
    6. ':
' → logprob: -6.546297073364258
    7. 'import' → logprob: -7.171297073364258
    8. '

' → logprob: -7.421297073364258
    9. ' A' → logprob: -7.421297073364258
    10. ' ,' → logprob: -8.046297073364258

Token 173: ' ceci' (ID: 98542)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.540590763092041
    2. 'n' → logprob: -1.790590763092041
    3. ' on' → logprob: -2.165590763092041
    4. ' le' → logprob: -3.290590763092041
    5. ' il' → logprob: -4.290590763092041
    6. 'import' → logprob: -4.915590763092041
    7. ' nombre' → logprob: -4.915590763092041
    8. 'nombre' → logprob: -4.915590763092041
    9. ' min' → logprob: -5.040590763092041
    10. 'min' → logprob: -5.165590763092041

Token 174: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.1807398796081543
    2. ' correspond' → logprob: -1.3057398796081543
    3. ' revient' → logprob: -2.1807398796081543
    4. ':' → logprob: -3.0557398796081543
    5. ' =' → logprob: -3.0557398796081543
    6. ' est' → logprob: -3.8057398796081543
    7. ' signifie' → logprob: -3.8057398796081543
    8. '
' → logprob: -4.055739879608154
    9. 's' → logprob: -4.180739879608154
    10. ' équ' → logprob: -4.305739879608154

Token 175: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0007788925431668758
    2. 'ul' → logprob: -8.625779151916504
    3. 'cule' → logprob: -8.625779151916504
    4. '#' → logprob: -9.000779151916504
    5. 'ulé' → logprob: -9.250779151916504
    6. 'le' → logprob: -10.375779151916504
    7. 'uler' → logprob: -10.750779151916504
    8. 'ure' → logprob: -11.125779151916504
    9. '```' → logprob: -11.250779151916504
    10. 'u' → logprob: -11.813279151916504

Token 176: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6761891841888428
    2. '(' → logprob: -1.1761891841888428
    3. '(A' → logprob: -1.9261891841888428
    4. '-' → logprob: -3.9261891841888428
    5. '((' → logprob: -5.551189422607422
    6. ' le' → logprob: -6.051189422607422
    7. ' -' → logprob: -6.301189422607422
    8. '(n' → logprob: -6.426189422607422
    9. '(len' → logprob: -6.801189422607422
    10. '(-' → logprob: -6.926189422607422

Token 177: ' plafond' (ID: 114829)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.05092582479119301
    2. ' nombre' → logprob: -3.0509257316589355
    3. 'minimum' → logprob: -7.4259257316589355
    4. '(A' → logprob: -7.6759257316589355
    5. 'quot' → logprob: -7.6759257316589355
    6. '(nombre' → logprob: -9.050926208496094
    7. '(' → logprob: -9.550926208496094
    8. '-' → logprob: -9.550926208496094
    9. 'A' → logprob: -10.050926208496094
    10. 'ceil' → logprob: -10.050926208496094

Token 178: ' de' (ID: 334)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.35395339131355286
    2. '((' → logprob: -2.2289533615112305
    3. '(' → logprob: -2.3539533615112305
    4. 'de' → logprob: -3.6039533615112305
    5. 'div' → logprob: -3.7289533615112305
    6. ' de' → logprob: -4.3539533615112305
    7. 'division' → logprob: -4.7289533615112305
    8. ' (' → logprob: -5.1039533615112305
    9. '(-' → logprob: -5.4789533615112305
    10. '(math' → logprob: -5.7289533615112305

Token 179: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38636523485183716
    2. '(A' → logprob: -1.8863651752471924
    3. ' A' → logprob: -2.0113651752471924
    4. ' (' → logprob: -3.3863651752471924
    5. 'div' → logprob: -7.6363654136657715
    6. '(' → logprob: -8.511364936828613
    7. '((' → logprob: -8.761364936828613
    8. ' ' → logprob: -9.636364936828613
    9. ' division' → logprob: -9.886364936828613
    10. 'division' → logprob: -9.886364936828613

Token 180: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.44416213035583496
    2. '/' → logprob: -1.069162130355835
    3. '/D' → logprob: -4.194162368774414
    4. '/B' → logprob: -9.319162368774414
    5. ' ' → logprob: -10.194162368774414
    6. '/d' → logprob: -10.694162368774414
    7. 'div' → logprob: -10.819162368774414
    8. '/
' → logprob: -10.819162368774414
    9. ' /
' → logprob: -11.319162368774414
    10. ' ' → logprob: -11.444162368774414

Token 181: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0009115827269852161
    2. ' D' → logprob: -7.000911712646484
    3. ' ' → logprob: -18.625911712646484
    4. 'd' → logprob: -19.000911712646484
    5. '	D' → logprob: -19.000911712646484
    6. '```' → logprob: -19.250911712646484
    7. '>D' → logprob: -19.250911712646484
    8. ' ' → logprob: -19.375911712646484
    9. 'B' → logprob: -19.875911712646484
    10. '`' → logprob: -21.625911712646484

Token 182: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17706133425235748
    2. '
' → logprob: -2.9270613193511963
    3. 'result' → logprob: -3.6770613193511963
    4. 'times' → logprob: -3.6770613193511963
    5. 'n' → logprob: -4.177061557769775
    6. 'count' → logprob: -4.302061557769775
    7. 'steps' → logprob: -5.052061557769775
    8. 'ans' → logprob: -5.302061557769775
    9. 'answer' → logprob: -5.427061557769775
    10. ' import' → logprob: -6.052061557769775

Token 183: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.681369960308075
    2. 'n' → logprob: -1.6813700199127197
    3. 'result' → logprob: -2.0563700199127197
    4. '
' → logprob: -3.5563700199127197
    5. 'times' → logprob: -3.5563700199127197
    6. 'count' → logprob: -3.8063700199127197
    7. 'x' → logprob: -4.431369781494141
    8. ' import' → logprob: -4.431369781494141
    9. ' n' → logprob: -4.556369781494141
    10. 'answer' → logprob: -4.681369781494141

Token 184: ' En' (ID: 2130)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.35154879093170166
    2. 'result' → logprob: -1.8515487909317017
    3. 'n' → logprob: -2.601548671722412
    4. 'times' → logprob: -4.101548671722412
    5. 'count' → logprob: -4.351548671722412
    6. 'answer' → logprob: -4.726548671722412
    7. 'from' → logprob: -4.976548671722412
    8. 'res' → logprob: -5.601548671722412
    9. 'steps' → logprob: -5.601548671722412
    10. 'ans' → logprob: -5.976548671722412

Token 185: ' math' (ID: 13324)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.5433856248855591
    2. ' math' → logprob: -1.168385624885559
    3. 'import' → logprob: -3.4183855056762695
    4. ' import' → logprob: -3.7933855056762695
    5. ' Python' → logprob: -4.4183855056762695
    6. ' python' → logprob: -4.5433855056762695
    7. ' code' → logprob: -5.4183855056762695
    8. ' using' → logprob: -5.9183855056762695
    9. ' a' → logprob: -6.0433855056762695
    10. 's' → logprob: -6.0433855056762695

Token 186: 'ématiques' (ID: 114734)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0570589080452919
    2. '.ceil' → logprob: -3.057058811187744
    3. 'ématiques' → logprob: -5.307058811187744
    4. 'plotlib' → logprob: -7.557058811187744
    5. ' import' → logprob: -7.557058811187744
    6. '#' → logprob: -7.807058811187744
    7. 'ieu' → logprob: -8.307059288024902
    8. 'es' → logprob: -8.807059288024902
    9. '```' → logprob: -8.807059288024902
    10. '
' → logprob: -8.807059288024902

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02506987936794758
    2. ' ,' → logprob: -4.025069713592529
    3. 'import' → logprob: -5.275069713592529
    4. ',
' → logprob: -7.275069713592529
    5. ':' → logprob: -7.650069713592529
    6. ' import' → logprob: -9.025070190429688
    7. 'A' → logprob: -9.400070190429688
    8. ' ' → logprob: -9.650070190429688
    9. ')' → logprob: -10.025070190429688
    10. ' :' → logprob: -10.150070190429688

Token 188: ' cela' (ID: 17542)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.902228057384491
    2. 'n' → logprob: -1.5272281169891357
    3. ' (' → logprob: -2.0272281169891357
    4. ' n' → logprob: -2.2772281169891357
    5. ' on' → logprob: -3.5272281169891357
    6. '(' → logprob: -3.5272281169891357
    7. ' A' → logprob: -3.9022281169891357
    8. 'A' → logprob: -4.652227878570557
    9. ' import' → logprob: -5.027227878570557
    10. 'nombre' → logprob: -5.277227878570557

Token 189: ' revient' (ID: 95900)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.2401422262191772
    2. ' s' → logprob: -1.3651422262191772
    3. ' revient' → logprob: -1.7401422262191772
    4. 's' → logprob: -2.115142345428467
    5. ' correspond' → logprob: -2.490142345428467
    6. ' équ' → logprob: -4.365142345428467
    7. ' se' → logprob: -4.490142345428467
    8. '#' → logprob: -4.740142345428467
    9. 'cor' → logprob: -4.990142345428467
    10. ' =' → logprob: -5.365142345428467

Token 190: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.01910323090851307
    2. 'à' → logprob: -4.019103050231934
    3. ' a' → logprob: -8.269103050231934
    4. 'import' → logprob: -8.519103050231934
    5. ' ' → logprob: -9.394103050231934
    6. ''à' → logprob: -9.394103050231934
    7. 'a' → logprob: -9.644103050231934
    8. 'au' → logprob: -9.644103050231934
    9. ' to' → logprob: -10.144103050231934
    10. 'A' → logprob: -10.269103050231934

Token 191: ' faire' (ID: 8119)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3348957896232605
    2. ' (' → logprob: -1.3348958492279053
    3. '((' → logprob: -4.584895610809326
    4. '(' → logprob: -5.584895610809326
    5. '-' → logprob: -5.959895610809326
    6. ' -' → logprob: -6.709895610809326
    7. 'A' → logprob: -7.334895610809326
    8. ' ' → logprob: -7.584895610809326
    9. ' ((' → logprob: -7.834895610809326
    10. 'div' → logprob: -8.084896087646484

Token 192: ' ceil' (ID: 35964)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15946254134178162
    2. '(A' → logprob: -2.0344624519348145
    3. ' -' → logprob: -4.9094624519348145
    4. '-' → logprob: -6.1594624519348145
    5. '((' → logprob: -6.4094624519348145
    6. ' ((' → logprob: -6.5344624519348145
    7. ' ' → logprob: -6.5344624519348145
    8. 'A' → logprob: -7.4094624519348145
    9. '(' → logprob: -7.5344624519348145
    10. ' A' → logprob: -8.534462928771973

Token 193: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.16627809405326843
    2. '(' → logprob: -2.541278123855591
    3. '((' → logprob: -2.791278123855591
    4. 'div' → logprob: -5.166277885437012
    5. 'import' → logprob: -5.166277885437012
    6. 'division' → logprob: -7.416277885437012
    7. '(
' → logprob: -7.666277885437012
    8. '(-' → logprob: -8.541277885437012
    9. 'A' → logprob: -8.916277885437012
    10. ' (' → logprob: -9.666277885437012

Token 194: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5592599511146545
    2. '/' → logprob: -1.4342598915100098
    3. '/D' → logprob: -1.6842598915100098
    4. '/B' → logprob: -5.93425989151001
    5. ')' → logprob: -7.68425989151001
    6. '/
' → logprob: -7.80925989151001
    7. '/div' → logprob: -8.059260368347168
    8. '(D' → logprob: -9.184260368347168
    9. ' ' → logprob: -9.184260368347168
    10. ' /
' → logprob: -9.309260368347168

Token 195: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.005236717872321606
    2. ' D' → logprob: -5.255236625671387
    3. ')' → logprob: -13.880236625671387
    4. ' ' → logprob: -14.005236625671387
    5. '	D' → logprob: -14.755236625671387
    6. '```' → logprob: -15.630236625671387
    7. ' ' → logprob: -16.130237579345703
    8. '   ' → logprob: -16.380237579345703
    9. '>D' → logprob: -16.380237579345703
    10. '
' → logprob: -16.880237579345703

Token 196: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006719246739521623
    2. '))' → logprob: -8.250672340393066
    3. ')
' → logprob: -8.375672340393066
    4. ').' → logprob: -9.125672340393066
    5. ' )' → logprob: -10.625672340393066
    6. 'A' → logprob: -11.125672340393066
    7. '),' → logprob: -11.750672340393066
    8. '(A' → logprob: -12.125672340393066
    9. '):' → logprob: -12.625672340393066
    10. ')

' → logprob: -13.125672340393066

Token 197: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0823665857315063
    2. 'n' → logprob: -1.4573665857315063
    3. 'result' → logprob: -1.9573665857315063
    4. 'count' → logprob: -2.582366466522217
    5. 'times' → logprob: -2.582366466522217
    6. 'N' → logprob: -2.957366466522217
    7. 'answer' → logprob: -3.707366466522217
    8. 'min' → logprob: -4.582366466522217
    9. 'ans' → logprob: -4.707366466522217
    10. 'steps' → logprob: -4.832366466522217

Token 198: ' L' (ID: 451)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7467087507247925
    2. 'result' → logprob: -1.4967087507247925
    3. 'times' → logprob: -2.371708869934082
    4. 'n' → logprob: -2.496708869934082
    5. 'count' → logprob: -2.746708869934082
    6. 'min' → logprob: -4.621708869934082
    7. 'answer' → logprob: -4.746708869934082
    8. 'steps' → logprob: -4.871708869934082
    9. 'from' → logprob: -5.121708869934082
    10. 'N' → logprob: -5.121708869934082

Token 199: ''ex' (ID: 23472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1279791593551636
    2. 'result' → logprob: -1.1279791593551636
    3. 'n' → logprob: -2.252979278564453
    4. '#' → logprob: -2.627979278564453
    5. 'nombre' → logprob: -2.877979278564453
    6. 'r' → logprob: -4.002979278564453
    7. 'x' → logprob: -4.002979278564453
    8. 'quot' → logprob: -4.252979278564453
    9. 'ans' → logprob: -4.627979278564453
    10. 'print' → logprob: -4.752979278564453

Token 200: 'pression' (ID: 4521)
  Prédit: 'pression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.07466432452201843
    2. 'emple' → logprob: -3.574664354324341
    3. 'import' → logprob: -4.699664115905762
    4. 'p' → logprob: -4.699664115905762
    5. '#' → logprob: -5.324664115905762
    6. 'trait' → logprob: -5.574664115905762
    7. 'if' → logprob: -5.699664115905762
    8. 'print' → logprob: -5.824664115905762
    9. 'port' → logprob: -6.824664115905762
    10. 'pr' → logprob: -6.824664115905762

Token 201: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5302296280860901
    2. '(A' → logprob: -2.0302295684814453
    3. 'result' → logprob: -2.5302295684814453
    4. 'res' → logprob: -3.4052295684814453
    5. 'n' → logprob: -3.4052295684814453
    6. '((' → logprob: -3.7802295684814453
    7. '(' → logprob: -4.155229568481445
    8. ' n' → logprob: -4.405229568481445
    9. 'nombre' → logprob: -4.905229568481445
    10. ' ((' → logprob: -5.030229568481445

Token 202: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017695431597530842
    2. ' A' → logprob: -6.626769542694092
    3. '(A' → logprob: -8.00177001953125
    4. '-A' → logprob: -9.75177001953125
    5. '-' → logprob: -10.50177001953125
    6. ' -' → logprob: -11.50177001953125
    7. ' (' → logprob: -12.75177001953125
    8. ' ' → logprob: -12.87677001953125
    9. '-(' → logprob: -13.00177001953125
    10. ')' → logprob: -14.62677001953125

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35080423951148987
    2. '+' → logprob: -1.2258042097091675
    3. '+D' → logprob: -6.225804328918457
    4. '-' → logprob: -9.225804328918457
    5. '+B' → logprob: -9.600804328918457
    6. ' ' → logprob: -9.600804328918457
    7. '+(' → logprob: -10.225804328918457
    8. ' -' → logprob: -10.475804328918457
    9. '+C' → logprob: -10.725804328918457
    10. ')' → logprob: -11.600804328918457

Token 204: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.002651047660037875
    2. ' D' → logprob: -6.002651214599609
    3. '(D' → logprob: -8.75265121459961
    4. ' (' → logprob: -11.12765121459961
    5. ' ' → logprob: -14.00265121459961
    6. '(' → logprob: -14.50265121459961
    7. '
' → logprob: -15.00265121459961
    8. '-D' → logprob: -15.50265121459961
    9. '	D' → logprob: -15.75265121459961
    10. '-' → logprob: -16.50265121459961

Token 205: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889066636562347
    2. '-' → logprob: -2.578890562057495
    3. ' ' → logprob: -14.578890800476074
    4. ')' → logprob: -16.203889846801758
    5. ' ' → logprob: -16.203889846801758
    6. '```' → logprob: -16.703889846801758
    7. '1' → logprob: -16.953889846801758
    8. '
' → logprob: -17.703889846801758
    9. '−' → logprob: -18.328889846801758
    10. '  ' → logprob: -18.703889846801758

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -16.500003814697266
    4. ')' → logprob: -17.250003814697266
    5. '```' → logprob: -18.875003814697266
    6. '
' → logprob: -20.375003814697266
    7. '

' → logprob: -20.625003814697266
    8. ' -' → logprob: -20.750003814697266
    9. '１' → logprob: -20.750003814697266
    10. '۱' → logprob: -21.375003814697266

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -20.625
    4. '１' → logprob: -21.125
    5. ')' → logprob: -21.125
    6. '۱' → logprob: -22.0
    7. '-' → logprob: -22.125
    8. '১' → logprob: -23.0625
    9. '

' → logprob: -23.3125
    10. '   ' → logprob: -23.4375

Token 208: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008289250545203686
    2. ')//' → logprob: -7.125828742980957
    3. ' )' → logprob: -10.625828742980957
    4. '//' → logprob: -15.875828742980957
    5. ')
' → logprob: -16.750829696655273
    6. ')

' → logprob: -18.875829696655273
    7. ' //' → logprob: -18.875829696655273
    8. '#' → logprob: -19.000829696655273
    9. '）' → logprob: -19.375829696655273
    10. ' ' → logprob: -19.375829696655273

Token 209: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2149648815393448
    2. ' //' → logprob: -2.2149648666381836
    3. '//' → logprob: -2.8399648666381836
    4. '#' → logprob: -3.8399648666381836
    5. ' ' → logprob: -6.214964866638184
    6. ' )' → logprob: -6.714964866638184
    7. ')//' → logprob: -7.589964866638184
    8. ' #' → logprob: -7.714964866638184
    9. ' ' → logprob: -9.589964866638184
    10. '
' → logprob: -10.089964866638184

Token 210: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0009115827269852161
    2. ' D' → logprob: -7.000911712646484
    3. '	D' → logprob: -18.125911712646484
    4. ' ' → logprob: -19.125911712646484
    5. '>D' → logprob: -20.000911712646484
    6. '%D' → logprob: -20.500911712646484
    7. '```' → logprob: -20.875911712646484
    8. ' ' → logprob: -21.250911712646484
    9. '   ' → logprob: -21.500911712646484
    10. '<D' → logprob: -21.625911712646484

Token 211: ' est' (ID: 893)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8468224406242371
    2. ')' → logprob: -1.3468225002288818
    3. '<|end|>' → logprob: -2.096822500228882
    4. ' ' → logprob: -3.096822500228882
    5. 'print' → logprob: -3.346822500228882
    6. '
' → logprob: -3.346822500228882
    7. ' #' → logprob: -4.471822261810303
    8. ':' → logprob: -4.596822261810303
    9. '

' → logprob: -5.096822261810303
    10. ' est' → logprob: -5.471822261810303

Token 212: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.06635519117116928
    2. 'une' → logprob: -3.1913552284240723
    3. 'l' → logprob: -5.441355228424072
    4. 'A' → logprob: -5.691355228424072
    5. ' souvent' → logprob: -5.691355228424072
    6. ' la' → logprob: -5.816355228424072
    7. ' utilisée' → logprob: -6.191355228424072
    8. ' équ' → logprob: -6.441355228424072
    9. ' l' → logprob: -6.816355228424072
    10. 'la' → logprob: -6.941355228424072

Token 213: ' moyen' (ID: 46111)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7944359183311462
    2. ' moyen' → logprob: -1.169435977935791
    3. ' entier' → logprob: -2.044435977935791
    4. ' opér' → logprob: -3.294435977935791
    5. 'e' → logprob: -4.294435977935791
    6. 'div' → logprob: -4.669435977935791
    7. 'tr' → logprob: -4.794435977935791
    8. ' racc' → logprob: -5.044435977935791
    9. 'op' → logprob: -5.169435977935791
    10. 'ter' → logprob: -5.794435977935791

Token 214: ' courant' (ID: 74694)
  Prédit: 'simple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'simple' → logprob: -0.8559371829032898
    2. 'cour' → logprob: -1.9809372425079346
    3. ' simple' → logprob: -2.2309372425079346
    4. 'comm' → logprob: -3.1059372425079346
    5. '#' → logprob: -3.3559372425079346
    6. '```' → logprob: -3.4809372425079346
    7. 'int' → logprob: -3.6059372425079346
    8. 'pr' → logprob: -3.7309372425079346
    9. 'de' → logprob: -3.9809372425079346
    10. ' efficace' → logprob: -3.9809372425079346

Token 215: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.121335744857788
    2. 'de' → logprob: -1.371335744857788
    3. ' d' → logprob: -1.371335744857788
    4. '#' → logprob: -2.996335744857788
    5. ')' → logprob: -3.121335744857788
    6. 'pour' → logprob: -3.621335744857788
    7. ' de' → logprob: -3.871335744857788
    8. '```' → logprob: -5.246335983276367
    9. '}' → logprob: -6.121335983276367
    10. '  ' → logprob: -6.246335983276367

Token 216: ''obtenir' (ID: 191633)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.28508153557777405
    2. 'effect' → logprob: -1.7850815057754517
    3. 'é' → logprob: -3.535081624984741
    4. ''é' → logprob: -4.160081386566162
    5. ''obtenir' → logprob: -4.785081386566162
    6. 'calcul' → logprob: -4.910081386566162
    7. ' effectuer' → logprob: -4.910081386566162
    8. ''' → logprob: -5.910081386566162
    9. '’effect' → logprob: -5.910081386566162
    10. 'e' → logprob: -6.535081386566162

Token 217: ' ce' (ID: 2357)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5783872604370117
    2. ' le' → logprob: -1.0783872604370117
    3. 'ce' → logprob: -3.2033872604370117
    4. 'la' → logprob: -3.4533872604370117
    5. 'l' → logprob: -4.828387260437012
    6. 'ceil' → logprob: -5.203387260437012
    7. 'A' → logprob: -5.828387260437012
    8. '(A' → logprob: -5.828387260437012
    9. '_le' → logprob: -6.578387260437012
    10. 't' → logprob: -6.578387260437012

Token 218: ' plafond' (ID: 114829)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -1.1202867031097412
    2. 'quot' → logprob: -1.2452867031097412
    3. 'pl' → logprob: -2.620286703109741
    4. 'ceil' → logprob: -2.745286703109741
    5. ' résultat' → logprob: -2.995286703109741
    6. 'A' → logprob: -2.995286703109741
    7. 'div' → logprob: -3.245286703109741
    8. 'result' → logprob: -3.370286703109741
    9. 'calcul' → logprob: -3.995286703109741
    10. 'qu' → logprob: -4.49528694152832

Token 219: ' sans' (ID: 9828)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5501540899276733
    2. 'nombre' → logprob: -2.175154209136963
    3. 'min' → logprob: -2.300154209136963
    4. 'count' → logprob: -2.425154209136963
    5. 'times' → logprob: -2.425154209136963
    6. 'res' → logprob: -2.550154209136963
    7. 'steps' → logprob: -2.925154209136963
    8. 'n' → logprob: -3.300154209136963
    9. 'nb' → logprob: -3.300154209136963
    10. 'answer' → logprob: -3.675154209136963

Token 220: ' utiliser' (ID: 43227)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03913720324635506
    2. 'util' → logprob: -3.414137125015259
    3. ' utiliser' → logprob: -5.414137363433838
    4. 'importe' → logprob: -7.414137363433838
    5. 'avoir' → logprob: -8.78913688659668
    6. ' importer' → logprob: -8.78913688659668
    7. ' import' → logprob: -10.28913688659668
    8. ''utiliser' → logprob: -10.66413688659668
    9. 'Importer' → logprob: -10.78913688659668
    10. 'faire' → logprob: -11.91413688659668

Token 221: ' la' (ID: 557)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.023215891793370247
    2. 'la' → logprob: -4.3982157707214355
    3. 'math' → logprob: -6.0232157707214355
    4. ' la' → logprob: -6.1482157707214355
    5. ' de' → logprob: -6.5232157707214355
    6. 'de' → logprob: -6.6482157707214355
    7. 'une' → logprob: -7.1482157707214355
    8. 'l' → logprob: -7.1482157707214355
    9. 'des' → logprob: -7.8982157707214355
    10. ' une' → logprob: -7.8982157707214355

Token 222: ' fonction' (ID: 17610)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03886306285858154
    2. 'module' → logprob: -4.163863182067871
    3. 'fonction' → logprob: -4.913863182067871
    4. 'math' → logprob: -5.038863182067871
    5. 'from' → logprob: -5.538863182067871
    6. ' opér' → logprob: -6.288863182067871
    7. 'bibli' → logprob: -6.913863182067871
    8. 'division' → logprob: -7.538863182067871
    9. 'op' → logprob: -7.788863182067871
    10. ' module' → logprob: -8.288863182067871

Token 223: ' math' (ID: 13324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39388221502304077
    2. 'math' → logprob: -1.7688822746276855
    3. ' math' → logprob: -2.1438822746276855
    4. 'ceil' → logprob: -3.3938822746276855
    5. ' ceil' → logprob: -6.1438822746276855
    6. ' import' → logprob: -7.0188822746276855
    7. 'cmath' → logprob: -7.8938822746276855
    8. '```' → logprob: -8.018881797790527
    9. '(math' → logprob: -9.268881797790527
    10. '`' → logprob: -9.643881797790527

Token 224: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.07132492959499359
    2. 'import' → logprob: -2.6963248252868652
    3. '.' → logprob: -7.071324825286865
    4. 'ceil' → logprob: -8.446325302124023
    5. '.floor' → logprob: -8.946325302124023
    6. ' import' → logprob: -9.446325302124023
    7. '.sqrt' → logprob: -10.321325302124023
    8. 'module' → logprob: -11.821325302124023
    9. '	import' → logprob: -11.821325302124023
    10. '.isnan' → logprob: -12.071325302124023

Token 225: '().
' (ID: 58434)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9410876631736755
    2. 'count' → logprob: -1.8160877227783203
    3. 'steps' → logprob: -2.4410877227783203
    4. 'n' → logprob: -2.5660877227783203
    5. '
' → logprob: -3.0660877227783203
    6. 'res' → logprob: -3.1910877227783203
    7. 'times' → logprob: -3.1910877227783203
    8. 'nombre' → logprob: -3.4410877227783203
    9. 'answer' → logprob: -3.6910877227783203
    10. 'N' → logprob: -3.6910877227783203

Token 226: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16141723096370697
    2. 'count' → logprob: -3.286417245864868
    3. 'n' → logprob: -3.536417245864868
    4. 'times' → logprob: -3.911417245864868
    5. 'answer' → logprob: -4.411417007446289
    6. 'res' → logprob: -4.661417007446289
    7. 'steps' → logprob: -4.911417007446289
    8. 'N' → logprob: -4.911417007446289
    9. 'nombre' → logprob: -5.286417007446289
    10. 'min' → logprob: -5.411417007446289

Token 227: ' On' (ID: 2160)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3412597179412842
    2. 'n' → logprob: -2.966259717941284
    3. 'times' → logprob: -3.216259717941284
    4. 'res' → logprob: -3.341259717941284
    5. 'steps' → logprob: -3.591259717941284
    6. 'count' → logprob: -3.591259717941284
    7. 'nb' → logprob: -3.966259717941284
    8. 'min' → logprob: -4.216259956359863
    9. 'answer' → logprob: -4.216259956359863
    10. 'N' → logprob: -4.341259956359863

Token 228: ' stock' (ID: 6546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11285223066806793
    2. ' print' → logprob: -2.6128523349761963
    3. ' calc' → logprob: -4.487852096557617
    4. 'result' → logprob: -4.737852096557617
    5. 'continue' → logprob: -6.112852096557617
    6. 'calc' → logprob: -6.237852096557617
    7. 'pr' → logprob: -6.612852096557617
    8. ' continue' → logprob: -6.862852096557617
    9. '#' → logprob: -7.112852096557617
    10. 's' → logprob: -7.362852096557617

Token 229: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00478954566642642
    2. 'e' → logprob: -5.379789352416992
    3. 'age' → logprob: -9.504789352416992
    4. 'A' → logprob: -11.254789352416992
    5. 'é' → logprob: -11.379789352416992
    6. '#' → logprob: -11.504789352416992
    7. '   ' → logprob: -11.504789352416992
    8. 'ger' → logprob: -11.754789352416992
    9. 'r' → logprob: -11.879789352416992
    10. 'ez' → logprob: -11.879789352416992

Token 230: ' le' (ID: 505)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.29854154586792
    2. 'le' → logprob: -1.92354154586792
    3. ' ce' → logprob: -2.04854154586792
    4. ' le' → logprob: -2.17354154586792
    5. 'dans' → logprob: -2.92354154586792
    6. 'count' → logprob: -3.04854154586792
    7. 'ce' → logprob: -3.17354154586792
    8. ' result' → logprob: -3.42354154586792
    9. 'min' → logprob: -3.67354154586792
    10. 'n' → logprob: -3.79854154586792

Token 231: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15860600769519806
    2. 'nombre' → logprob: -2.0336060523986816
    3. 'res' → logprob: -5.408606052398682
    4. 'count' → logprob: -5.908606052398682
    5. 'nb' → logprob: -6.158606052398682
    6. 'minimum' → logprob: -6.283606052398682
    7. 'min' → logprob: -6.533606052398682
    8. 'quot' → logprob: -7.033606052398682
    9. 'answer' → logprob: -7.783606052398682
    10. 'r' → logprob: -8.408605575561523

Token 232: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.9253285527229309
    2. 'dans' → logprob: -1.0503284931182861
    3. 'result' → logprob: -3.425328493118286
    4. 'min' → logprob: -3.550328493118286
    5. ' minimal' → logprob: -3.925328493118286
    6. ' result' → logprob: -4.050328731536865
    7. 'n' → logprob: -4.050328731536865
    8. 'times' → logprob: -4.175328731536865
    9. 'ans' → logprob: -4.550328731536865
    10. 'minimum' → logprob: -4.800328731536865

Token 233: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8606074452400208
    2. 'n' → logprob: -2.110607385635376
    3. 'result' → logprob: -2.235607385635376
    4. 'res' → logprob: -2.735607385635376
    5. 'times' → logprob: -2.735607385635376
    6. 'min' → logprob: -3.485607385635376
    7. 'answer' → logprob: -3.485607385635376
    8. ' count' → logprob: -3.860607385635376
    9. 'ans' → logprob: -4.360607624053955
    10. 'x' → logprob: -4.610607624053955

Token 234: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.8022664189338684
    2. 'result' → logprob: -1.1772663593292236
    3. 'nombre' → logprob: -2.3022663593292236
    4. 'count' → logprob: -2.5522663593292236
    5. 'res' → logprob: -4.427266597747803
    6. 'nb' → logprob: -4.677266597747803
    7. 'n' → logprob: -4.802266597747803
    8. 'min' → logprob: -5.177266597747803
    9. 'var' → logprob: -5.802266597747803
    10. ' variable' → logprob: -5.927266597747803

Token 235: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8881909251213074
    2. 'count' → logprob: -2.013190984725952
    3. 'n' → logprob: -2.638190984725952
    4. 'times' → logprob: -2.638190984725952
    5. 'res' → logprob: -2.888190984725952
    6. 'answer' → logprob: -3.388190984725952
    7. 'min' → logprob: -3.388190984725952
    8. 'ans' → logprob: -3.638190984725952
    9. 'x' → logprob: -3.888190984725952
    10. 'X' → logprob: -4.513190746307373

Token 236: 't' (ID: 83)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7841916084289551
    2. 'res' → logprob: -2.159191608428955
    3. 'count' → logprob: -2.909191608428955
    4. 'n' → logprob: -3.034191608428955
    5. 'times' → logprob: -3.034191608428955
    6. 'min' → logprob: -3.409191608428955
    7. 'steps' → logprob: -3.534191608428955
    8. 'nb' → logprob: -3.534191608428955
    9. 'ans' → logprob: -3.784191608428955
    10. 'x' → logprob: -3.909191608428955

Token 237: ''.
' (ID: 49980)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0679907277226448
    2. 'emps' → logprob: -3.192990779876709
    3. ' t' → logprob: -4.442990779876709
    4. 'temps' → logprob: -4.567990779876709
    5. 'imes' → logprob: -6.692990779876709
    6. 'times' → logprob: -8.44299030303955
    7. '	t' → logprob: -8.56799030303955
    8. '_t' → logprob: -8.81799030303955
    9. 'temp' → logprob: -8.94299030303955
    10. 'emp' → logprob: -8.94299030303955

Token 238: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.500001907348633
    3. '`t' → logprob: -14.750001907348633
    4. '```' → logprob: -14.875001907348633
    5. ' t' → logprob: -15.625001907348633
    6. '  
' → logprob: -18.250001907348633
    7. '``' → logprob: -18.375001907348633
    8. '`' → logprob: -18.750001907348633
    9. ' 
' → logprob: -19.000001907348633
    10. '
' → logprob: -19.875001907348633

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132627606391907
    2. '=' → logprob: -1.313262701034546
    3. 't' → logprob: -15.313262939453125
    4. ' =
' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.563262939453125
    6. ' =(' → logprob: -16.563262939453125
    7. '=t' → logprob: -16.813262939453125
    8. ' ' → logprob: -17.063262939453125
    9. '=

' → logprob: -17.188262939453125
    10. '＝' → logprob: -17.313262939453125

Token 240: ' (' (ID: 350)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0052350712940096855
    2. ' (' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.505234718322754
    4. '(' → logprob: -14.755234718322754
    5. ' ' → logprob: -15.505234718322754
    6. '((' → logprob: -16.25523567199707
    7. '  ' → logprob: -17.25523567199707
    8. '(B' → logprob: -19.13023567199707
    9. '(a' → logprob: -20.00523567199707
    10. '
' → logprob: -20.00523567199707

Token 241: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.5577775128767826e-06
    2. ' A' → logprob: -12.125005722045898
    3. '	A' → logprob: -17.7500057220459
    4. '   ' → logprob: -17.8750057220459
    5. '(A' → logprob: -18.5000057220459
    6. ' ' → logprob: -19.3750057220459
    7. 'a' → logprob: -20.6250057220459
    8. '"A' → logprob: -21.3750057220459
    9. ')' → logprob: -21.5000057220459
    10. '  ' → logprob: -21.5000057220459

Token 242: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04859054833650589
    2. '+' → logprob: -3.048590660095215
    3. '+D' → logprob: -13.298590660095215
    4. ' ' → logprob: -13.798590660095215
    5. ' ' → logprob: -15.298590660095215
    6. ' +
' → logprob: -15.798590660095215
    7. ' plus' → logprob: -16.2985897064209
    8. '+
' → logprob: -17.9235897064209
    9. '+B' → logprob: -18.1735897064209
    10. '
' → logprob: -18.7985897064209

Token 243: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.2519313097000122
    2. 'D' → logprob: -1.5019313097000122
    3. ' ' → logprob: -13.251931190490723
    4. ' ' → logprob: -15.001931190490723
    5. '	D' → logprob: -17.00193214416504
    6. ' (' → logprob: -18.00193214416504
    7. '(D' → logprob: -18.37693214416504
    8. ')' → logprob: -18.50193214416504
    9. '   ' → logprob: -18.75193214416504
    10. 'd' → logprob: -18.75193214416504

Token 244: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975558675825596
    2. '-' → logprob: -3.5297555923461914
    3. ' ' → logprob: -12.529755592346191
    4. ')' → logprob: -13.529755592346191
    5. ' ' → logprob: -16.404754638671875
    6. ' )' → logprob: -17.279754638671875
    7. '1' → logprob: -17.529754638671875
    8. '
' → logprob: -17.529754638671875
    9. '```' → logprob: -17.529754638671875
    10. ' -
' → logprob: -18.842254638671875

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975083328783512
    2. ' ' → logprob: -3.5297508239746094
    3. ')' → logprob: -15.90475082397461
    4. '
' → logprob: -16.40475082397461
    5. '```' → logprob: -16.77975082397461
    6. '   ' → logprob: -18.15475082397461
    7. '<|end|>' → logprob: -18.27975082397461
    8. ' ' → logprob: -18.65475082397461
    9. '

' → logprob: -18.65475082397461
    10. '１' → logprob: -18.77975082397461

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -18.75007438659668
    4. '```' → logprob: -19.00007438659668
    5. '   ' → logprob: -19.50007438659668
    6. '
' → logprob: -20.25007438659668
    7. '

' → logprob: -20.87507438659668
    8. '' → logprob: -21.18757438659668
    9. '۱' → logprob: -21.25007438659668
    10. ' ' → logprob: -21.37507438659668

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012047011114191264
    2. ' )' → logprob: -9.500120162963867
    3. ')//' → logprob: -10.000120162963867
    4. ')
' → logprob: -16.500120162963867
    5. '//' → logprob: -16.875120162963867
    6. '#' → logprob: -17.125120162963867
    7. ')#' → logprob: -17.125120162963867
    8. ']' → logprob: -18.250120162963867
    9. '）' → logprob: -19.375120162963867
    10. ' //' → logprob: -19.500120162963867

Token 248: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5774482488632202
    2. '//' → logprob: -0.8274482488632202
    3. ')' → logprob: -6.57744836807251
    4. ' ' → logprob: -9.952447891235352
    5. '#' → logprob: -10.577447891235352
    6. ')//' → logprob: -10.827447891235352
    7. ' //
' → logprob: -12.077447891235352
    8. '```' → logprob: -12.202447891235352
    9. ' )' → logprob: -12.702447891235352
    10. '"' → logprob: -12.702447891235352

Token 249: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00020354038861114532
    2. ' D' → logprob: -8.500203132629395
    3. '	D' → logprob: -18.12520408630371
    4. ' ' → logprob: -18.37520408630371
    5. '<|end|>' → logprob: -19.37520408630371
    6. '>D' → logprob: -19.75020408630371
    7. '   ' → logprob: -20.50020408630371
    8. '```' → logprob: -20.87520408630371
    9. '  ' → logprob: -21.12520408630371
    10. '%D' → logprob: -21.62520408630371

Token 250: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0371660515666008
    2. 't' → logprob: -3.912166118621826
    3. 'B' → logprob: -5.037166118621826
    4. '#' → logprob: -6.412166118621826
    5. ')' → logprob: -6.912166118621826
    6. 'for' → logprob: -7.162166118621826
    7. 'u' → logprob: -7.537166118621826
    8. 'C' → logprob: -7.662166118621826
    9. 'n' → logprob: -7.662166118621826
    10. ' 
' → logprob: -7.787166118621826

Token 252: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05426494777202606
    2. 'result' → logprob: -3.554265022277832
    3. 'B' → logprob: -5.679265022277832
    4. 't' → logprob: -5.679265022277832
    5. 'r' → logprob: -5.679265022277832
    6. 'if' → logprob: -5.929265022277832
    7. 'total' → logprob: -6.304265022277832
    8. 'res' → logprob: -6.429265022277832
    9. 'temps' → logprob: -7.054265022277832
    10. 'while' → logprob: -7.054265022277832

Token 253: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.014076292514801025
    2. 'c' → logprob: -5.014076232910156
    3. 'cul' → logprob: -5.514076232910156
    4. '#' → logprob: -5.889076232910156
    5. 'cules' → logprob: -9.014076232910156
    6. 't' → logprob: -9.264076232910156
    7. 'ule' → logprob: -9.639076232910156
    8. 'culate' → logprob: -10.139076232910156
    9. 'ul' → logprob: -10.514076232910156
    10. '```' → logprob: -10.889076232910156

Token 254: ' le' (ID: 505)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.9794468879699707
    2. 'le' → logprob: -1.7294468879699707
    3. ' le' → logprob: -1.7294468879699707
    4. 'B' → logprob: -2.3544468879699707
    5. 't' → logprob: -2.7294468879699707
    6. ' (' → logprob: -3.2294468879699707
    7. ' B' → logprob: -4.354446887969971
    8. 's' → logprob: -4.479446887969971
    9. 'u' → logprob: -4.854446887969971
    10. ' la' → logprob: -5.104446887969971

Token 255: ' nombre' (ID: 9733)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5597633123397827
    2. 'nombre' → logprob: -1.4347633123397827
    3. 'max' → logprob: -2.4347634315490723
    4. 'temps' → logprob: -3.6847634315490723
    5. 'maximum' → logprob: -4.059763431549072
    6. 'minimum' → logprob: -4.309763431549072
    7. 't' → logprob: -4.559763431549072
    8. '(B' → logprob: -4.684763431549072
    9. 'min' → logprob: -5.059763431549072
    10. 'result' → logprob: -5.059763431549072

Token 256: ' minimal' (ID: 19957)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9655255079269409
    2. ' de' → logprob: -0.9655255079269409
    3. 'de' → logprob: -2.2155256271362305
    4. ' s' → logprob: -3.4655256271362305
    5. 'u' → logprob: -3.5905256271362305
    6. 'minimum' → logprob: -4.2155256271362305
    7. '=' → logprob: -4.5905256271362305
    8. 'times' → logprob: -4.8405256271362305
    9. '*' → logprob: -5.4655256271362305
    10. 'd' → logprob: -5.7155256271362305

Token 257: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5298134088516235
    2. 'de' → logprob: -0.9048134088516235
    3. 't' → logprob: -6.154813289642334
    4. 'd' → logprob: -6.779813289642334
    5. 's' → logprob: -6.904813289642334
    6. 'u' → logprob: -7.904813289642334
    7. ' ' → logprob: -8.154813766479492
    8. ' d' → logprob: -8.154813766479492
    9. '#' → logprob: -8.404813766479492
    10. ')' → logprob: -8.529813766479492

Token 258: ' fois' (ID: 14697)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.55738365650177
    2. 't' → logprob: -0.93238365650177
    3. 'times' → logprob: -3.8073835372924805
    4. '((' → logprob: -6.0573835372924805
    5. '(C' → logprob: -6.0573835372924805
    6. 'temps' → logprob: -6.3073835372924805
    7. '(A' → logprob: -6.5573835372924805
    8. '(D' → logprob: -7.4323835372924805
    9. ' (' → logprob: -7.5573835372924805
    10. 'B' → logprob: -7.5573835372924805

Token 259: ' que' (ID: 661)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5520930886268616
    2. '(B' → logprob: -0.9270930886268616
    3. 't' → logprob: -4.677093029022217
    4. '(' → logprob: -4.927093029022217
    5. ' que' → logprob: -6.052093029022217
    6. ' de' → logprob: -6.177093029022217
    7. 's' → logprob: -6.302093029022217
    8. ' =' → logprob: -6.677093029022217
    9. ' t' → logprob: -7.052093029022217
    10. '(t' → logprob: -7.302093029022217

Token 260: ' l' (ID: 305)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.43300703167915344
    2. 't' → logprob: -1.183007001876831
    3. 'B' → logprob: -3.558007001876831
    4. ' t' → logprob: -5.68300724029541
    5. 'le' → logprob: -5.80800724029541
    6. 'on' → logprob: -6.05800724029541
    7. ' (' → logprob: -6.18300724029541
    8. '(C' → logprob: -6.93300724029541
    9. '(D' → logprob: -7.05800724029541
    10. 'C' → logprob: -7.43300724029541

Token 261: ''on' (ID: 25812)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.019841857254505157
    2. ' (' → logprob: -4.26984167098999
    3. '(' → logprob: -5.39484167098999
    4. 't' → logprob: -8.269842147827148
    5. 'B' → logprob: -8.269842147827148
    6. '(A' → logprob: -8.894842147827148
    7. '#' → logprob: -9.019842147827148
    8. ')' → logprob: -9.269842147827148
    9. '(C' → logprob: -9.769842147827148
    10. 'a' → logprob: -10.644842147827148

Token 262: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.8290854692459106
    2. 'pe' → logprob: -1.4540854692459106
    3. 'sou' → logprob: -2.204085350036621
    4. '(B' → logprob: -2.579085350036621
    5. 'B' → logprob: -2.704085350036621
    6. ' peux' → logprob: -4.079085350036621
    7. 't' → logprob: -4.454085350036621
    8. 's' → logprob: -4.454085350036621
    9. ' (' → logprob: -4.704085350036621
    10. ' B' → logprob: -5.579085350036621

Token 263: ' sou' (ID: 4069)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.028457021340727806
    2. 't' → logprob: -3.903456926345825
    3. 's' → logprob: -5.778457164764404
    4. ' (' → logprob: -6.403457164764404
    5. '(C' → logprob: -6.903457164764404
    6. 'mult' → logprob: -7.778457164764404
    7. '(A' → logprob: -7.903457164764404
    8. 'B' → logprob: -8.028456687927246
    9. 'sou' → logprob: -8.778456687927246
    10. ' t' → logprob: -8.903456687927246

Token 264: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.025520967319607735
    2. '(B' → logprob: -4.5255208015441895
    3. 'str' → logprob: -5.1505208015441895
    4. 'stract' → logprob: -5.5255208015441895
    5. 'tr' → logprob: -6.0255208015441895
    6. 'tra' → logprob: -6.5255208015441895
    7. 'straction' → logprob: -8.775521278381348
    8. 'B' → logprob: -9.025521278381348
    9. '(' → logprob: -9.150521278381348
    10. 'tract' → logprob: -10.275521278381348

Token 265: 'ire' (ID: 594)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.24898220598697662
    2. 'B' → logprob: -1.6239821910858154
    3. ' B' → logprob: -4.3739824295043945
    4. ' (' → logprob: -4.9989824295043945
    5. '   ' → logprob: -6.9989824295043945
    6. '#' → logprob: -7.4989824295043945
    7. '=B' → logprob: -7.7489824295043945
    8. ' ' → logprob: -7.7489824295043945
    9. 't' → logprob: -8.123982429504395
    10. '  ' → logprob: -8.123982429504395

Token 266: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.08561615645885468
    2. 'C' → logprob: -2.835616111755371
    3. '(B' → logprob: -4.085616111755371
    4. 'D' → logprob: -5.710616111755371
    5. 't' → logprob: -6.210616111755371
    6. '(C' → logprob: -6.960616111755371
    7. 'A' → logprob: -8.960616111755371
    8. ' B' → logprob: -10.085616111755371
    9. '(D' → logprob: -10.210616111755371
    10. '(A' → logprob: -10.585616111755371

Token 267: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.005499599035829306
    2. 'à' → logprob: -5.380499362945557
    3. 't' → logprob: -7.255499362945557
    4. 'from' → logprob: -10.255499839782715
    5. ' t' → logprob: -10.380499839782715
    6. ' a' → logprob: -10.505499839782715
    7. ')' → logprob: -11.505499839782715
    8. ' de' → logprob: -11.630499839782715
    9. ' (' → logprob: -11.630499839782715
    10. ' to' → logprob: -11.755499839782715

Token 268: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.007814936339855194
    2. 'B' → logprob: -5.507814884185791
    3. 'D' → logprob: -6.257814884185791
    4. ' C' → logprob: -6.757814884185791
    5. 't' → logprob: -7.507814884185791
    6. '100' → logprob: -10.00781536102295
    7. '
' → logprob: -11.00781536102295
    8. ' B' → logprob: -11.63281536102295
    9. ' ' → logprob: -11.88281536102295
    10. ' t' → logprob: -12.38281536102295

Token 269: ' avant' (ID: 13339)
  Prédit: ' avant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avant' → logprob: -0.7658076882362366
    2. 'avant' → logprob: -1.2658076286315918
    3. 'before' → logprob: -2.640807628631592
    4. 't' → logprob: -2.890807628631592
    5. ' before' → logprob: -3.140807628631592
    6. ',' → logprob: -3.515807628631592
    7. '#' → logprob: -3.515807628631592
    8. ' t' → logprob: -4.765807628631592
    9. ' ' → logprob: -5.265807628631592
    10. ' (' → logprob: -5.515807628631592

Token 270: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007700824644416571
    2. ' d' → logprob: -8.37576961517334
    3. 'de' → logprob: -8.87576961517334
    4. '#' → logprob: -9.12576961517334
    5. 't' → logprob: -9.37576961517334
    6. 'C' → logprob: -10.37576961517334
    7. 'que' → logprob: -10.75076961517334
    8. 'da' → logprob: -11.00076961517334
    9. ' ' → logprob: -11.12576961517334
    10. '  ' → logprob: -11.25076961517334

Token 271: ''' (ID: 6)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15093418955802917
    2. ' d' → logprob: -2.4009342193603516
    3. ''' → logprob: -3.5259342193603516
    4. 'atte' → logprob: -4.150934219360352
    5. '_' → logprob: -7.525934219360352
    6. 't' → logprob: -7.775934219360352
    7. ''d' → logprob: -8.025934219360352
    8. '#' → logprob: -8.150934219360352
    9. '0' → logprob: -8.275934219360352
    10. 'de' → logprob: -8.275934219360352

Token 272: 'atte' (ID: 23975)
  Prédit: 'atte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.017438754439353943
    2. 'd' → logprob: -4.267438888549805
    3. ''' → logprob: -6.392438888549805
    4. '0' → logprob: -7.767438888549805
    5. ' atteindre' → logprob: -8.642438888549805
    6. 'de' → logprob: -8.892438888549805
    7. '>=' → logprob: -9.017438888549805
    8. 'atter' → logprob: -9.392438888549805
    9. 'arr' → logprob: -9.392438888549805
    10. ' d' → logprob: -9.767438888549805

Token 273: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.004130288027226925
    2. 'nd' → logprob: -6.5041303634643555
    3. 'tre' → logprob: -6.5041303634643555
    4. 'endre' → logprob: -7.6291303634643555
    5. 'dre' → logprob: -8.254130363464355
    6. 'te' → logprob: -8.629130363464355
    7. 're' → logprob: -9.004130363464355
    8. 'int' → logprob: -11.504130363464355
    9. 'ind' → logprob: -11.879130363464355
    10. 'prendre' → logprob: -12.129130363464355

Token 274: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.04998449236154556
    2. ' ou' → logprob: -3.0499844551086426
    3. 'or' → logprob: -7.424984455108643
    4. ' or' → logprob: -7.549984455108643
    5. 'o' → logprob: -9.1749849319458
    6. '0' → logprob: -10.1749849319458
    7. 'zero' → logprob: -10.2999849319458
    8. '#' → logprob: -10.5499849319458
    9. 'c' → logprob: -11.1749849319458
    10. ' ' → logprob: -11.2999849319458

Token 275: ' de' (ID: 334)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.07535309344530106
    2. '0' → logprob: -3.2003531455993652
    3. '#' → logprob: -4.325353145599365
    4. 'de' → logprob: -4.950353145599365
    5. 'd' → logprob: -5.325353145599365
    6. 'zero' → logprob: -5.450353145599365
    7. ' ou' → logprob: -7.200353145599365
    8. 'au' → logprob: -7.950353145599365
    9. 'C' → logprob: -7.950353145599365
    10. 'o' → logprob: -8.700352668762207

Token 276: ' dépasser' (ID: 187375)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029645999893546104
    2. 'z' → logprob: -4.404645919799805
    3. 'ou' → logprob: -4.779645919799805
    4. 'zero' → logprob: -5.279645919799805
    5. '<=' → logprob: -7.404645919799805
    6. 'c' → logprob: -7.529645919799805
    7. 'd' → logprob: -7.529645919799805
    8. '1' → logprob: -7.904645919799805
    9. 'max' → logprob: -8.029645919799805
    10. 'C' → logprob: -8.779645919799805

Token 277: ' zéro' (ID: 182040)
  Prédit: ' zéro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zéro' → logprob: -0.995516836643219
    2. 'z' → logprob: -1.1205167770385742
    3. 'zero' → logprob: -1.8705167770385742
    4. 'C' → logprob: -2.745516777038574
    5. '0' → logprob: -2.995516777038574
    6. ' zero' → logprob: -4.370516777038574
    7. ' ' → logprob: -4.620516777038574
    8. 'c' → logprob: -5.120516777038574
    9. ' z' → logprob: -5.620516777038574
    10. ' C' → logprob: -5.745516777038574

Token 278: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.447097510099411
    2. ',' → logprob: -1.0720975399017334
    3. 's' → logprob: -4.822097301483154
    4. '#' → logprob: -5.197097301483154
    5. ',
' → logprob: -6.447097301483154
    6. '+' → logprob: -6.447097301483154
    7. '.' → logprob: -8.072097778320312
    8. ' t' → logprob: -8.447097778320312
    9. 'c' → logprob: -9.197097778320312
    10. '.
' → logprob: -9.447097778320312

Token 279: ' toujours' (ID: 16867)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.43630850315093994
    2. ' en' → logprob: -1.43630850315094
    3. '#' → logprob: -2.1863083839416504
    4. 't' → logprob: -5.93630838394165
    5. ' t' → logprob: -7.93630838394165
    6. ' #' → logprob: -8.436308860778809
    7. ',' → logprob: -9.186308860778809
    8. 'c' → logprob: -9.936308860778809
    9. 's' → logprob: -11.311308860778809
    10. 'ens' → logprob: -11.686308860778809

Token 280: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39779555797576904
    2. 'en' → logprob: -1.897795557975769
    3. 't' → logprob: -2.0227956771850586
    4. ',' → logprob: -4.022795677185059
    5. ' en' → logprob: -4.397795677185059
    6. '.' → logprob: -5.522795677185059
    7. '=' → logprob: -6.397795677185059
    8. 'de' → logprob: -6.522795677185059
    9. 'C' → logprob: -6.647795677185059
    10. ' t' → logprob: -6.647795677185059

Token 281: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.008656412363052368
    2. ' arr' → logprob: -4.7586565017700195
    3. '(arr' → logprob: -10.50865650177002
    4. 'l' → logprob: -12.63365650177002
    5. '_arr' → logprob: -13.13365650177002
    6. ' utilisant' → logprob: -13.50865650177002
    7. 'arro' → logprob: -13.88365650177002
    8. ' l' → logprob: -14.13365650177002
    9. 'calcul' → logprob: -14.50865650177002
    10. 'ar' → logprob: -14.63365650177002

Token 282: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.0001450187264708802
    2. 'ound' → logprob: -9.125144958496094
    3. 'ont' → logprob: -11.000144958496094
    4. 'ondissement' → logprob: -11.125144958496094
    5. 'ondi' → logprob: -13.750144958496094
    6. 'oung' → logprob: -14.125144958496094
    7. 'oud' → logprob: -14.125144958496094
    8. 'ounding' → logprob: -15.250144958496094
    9. 'und' → logprob: -15.500144958496094
    10. 'onn' → logprob: -15.500144958496094

Token 283: 'issant' (ID: 31359)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.16177485883235931
    2. 'issant' → logprob: -2.4117748737335205
    3. 'ir' → logprob: -4.036774635314941
    4. 'au' → logprob: -5.411774635314941
    5. 'es' → logprob: -5.411774635314941
    6. 'r' → logprob: -5.786774635314941
    7. 'out' → logprob: -5.786774635314941
    8. 'pas' → logprob: -6.411774635314941
    9. 'avant' → logprob: -6.411774635314941
    10. 'sur' → logprob: -6.411774635314941

Token 284: ' vers' (ID: 3640)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.2722450792789459
    2. ' vers' → logprob: -1.6472450494766235
    3. 't' → logprob: -3.522245168685913
    4. '#' → logprob: -4.272244930267334
    5. ' t' → logprob: -6.897244930267334
    6. '(t' → logprob: -7.397244930267334
    7. ' #' → logprob: -8.897245407104492
    8. '(' → logprob: -9.147245407104492
    9. ' (' → logprob: -9.522245407104492
    10. '(C' → logprob: -9.897245407104492

Token 285: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -3.7385154428193346e-05
    2. ' le' → logprob: -10.87503719329834
    3. '_le' → logprob: -12.12503719329834
    4. 'l' → logprob: -12.75003719329834
    5. 'la' → logprob: -13.12503719329834
    6. '(le' → logprob: -13.25003719329834
    7. 'c' → logprob: -13.37503719329834
    8. 'haut' → logprob: -13.50003719329834
    9. '#' → logprob: -13.62503719329834
    10. 'Le' → logprob: -14.87503719329834

Token 286: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.0030404587741941214
    2. 'ha' → logprob: -5.878040313720703
    3. '#' → logprob: -9.003040313720703
    4. ' haut' → logprob: -10.128040313720703
    5. '
' → logprob: -10.878040313720703
    6. 'bas' → logprob: -11.003040313720703
    7. 'h' → logprob: -11.628040313720703
    8. 'hau' → logprob: -12.128040313720703
    9. '```' → logprob: -12.378040313720703
    10. 'c' → logprob: -12.503040313720703

Token 287: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.042437441647052765
    2. 's' → logprob: -3.5424375534057617
    3. 'u' → logprob: -5.167437553405762
    4. ',' → logprob: -6.042437553405762
    5. '.' → logprob: -6.417437553405762
    6. '.
' → logprob: -6.542437553405762
    7. ',
' → logprob: -7.667437553405762
    8. ' t' → logprob: -7.917437553405762
    9. '
' → logprob: -8.167437553405762
    10. '#' → logprob: -9.792437553405762

Token 288: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0662139505147934
    2. 'u' → logprob: -3.191213846206665
    3. 's' → logprob: -3.816213846206665
    4. 'r' → logprob: -8.566213607788086
    5. 'x' → logprob: -8.566213607788086
    6. ' t' → logprob: -9.191213607788086
    7. 'v' → logprob: -9.441213607788086
    8. 'n' → logprob: -9.566213607788086
    9. 'result' → logprob: -9.941213607788086
    10. 'res' → logprob: -10.191213607788086

Token 289: ' Même' (ID: 89628)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.48627081513404846
    2. 'u' → logprob: -1.611270785331726
    3. 's' → logprob: -1.736270785331726
    4. 'r' → logprob: -5.736270904541016
    5. 'n' → logprob: -6.986270904541016
    6. 'v' → logprob: -7.111270904541016
    7. 'p' → logprob: -7.111270904541016
    8. 'x' → logprob: -7.486270904541016
    9. 'm' → logprob: -7.736270904541016
    10. 'w' → logprob: -8.236270904541016

Token 290: ' principe' (ID: 58004)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001015779678709805
    2. '#' → logprob: -7.251015663146973
    3. 's' → logprob: -9.376015663146973
    4. 'pour' → logprob: -9.626015663146973
    5. '=' → logprob: -10.126015663146973
    6. ' t' → logprob: -10.626015663146973
    7. 'que' → logprob: -10.751015663146973
    8. 'C' → logprob: -11.501015663146973
    9. 'tout' → logprob: -12.001015663146973
    10. 'c' → logprob: -12.001015663146973

Token 291: ' que' (ID: 661)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04749494045972824
    2. 's' → logprob: -3.422494888305664
    3. 'u' → logprob: -4.297494888305664
    4. 'v' → logprob: -10.672494888305664
    5. ' t' → logprob: -10.797494888305664
    6. 'r' → logprob: -11.047494888305664
    7. 'p' → logprob: -11.047494888305664
    8. 'n' → logprob: -11.297494888305664
    9. 'x' → logprob: -11.672494888305664
    10. '#' → logprob: -11.797494888305664

Token 292: ' précéd' (ID: 55435)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.021085385233163834
    2. ' t' → logprob: -3.896085500717163
    3. ' (' → logprob: -8.646085739135742
    4. '(t' → logprob: -9.271085739135742
    5. 's' → logprob: -10.021085739135742
    6. '(C' → logprob: -10.271085739135742
    7. '#' → logprob: -10.396085739135742
    8. ' ' → logprob: -10.521085739135742
    9. 'u' → logprob: -10.646085739135742
    10. '(' → logprob: -10.771085739135742

Token 293: 'emment' (ID: 58019)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.4767102003097534
    2. 'que' → logprob: -1.6017102003097534
    3. 'é' → logprob: -3.101710319519043
    4. 'C' → logprob: -3.351710319519043
    5. '#' → logprob: -4.101710319519043
    6. '=C' → logprob: -4.351710319519043
    7. 'ement' → logprob: -4.726710319519043
    8. 'ément' → logprob: -4.976710319519043
    9. 'A' → logprob: -5.226710319519043
    10. 'enant' → logprob: -5.601710319519043

Token 294: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006279636640101671
    2. 's' → logprob: -5.381279468536377
    3. 'u' → logprob: -6.506279468536377
    4. ' t' → logprob: -8.881279945373535
    5. '
' → logprob: -12.131279945373535
    6. ' =' → logprob: -12.381279945373535
    7. 'v' → logprob: -12.631279945373535
    8. '=' → logprob: -13.006279945373535
    9. 'r' → logprob: -13.006279945373535
    10. ' s' → logprob: -13.131279945373535

Token 295: ' mais' (ID: 2899)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14247357845306396
    2. 'u' → logprob: -2.1424736976623535
    3. 's' → logprob: -4.2674736976623535
    4. ' t' → logprob: -7.0174736976623535
    5. ' u' → logprob: -8.267473220825195
    6. 'r' → logprob: -10.017473220825195
    7. 'p' → logprob: -10.142473220825195
    8. ' s' → logprob: -10.142473220825195
    9. 'n' → logprob: -10.267473220825195
    10. 'v' → logprob: -10.767473220825195

Token 296: ' avec' (ID: 3937)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04948507621884346
    2. ' t' → logprob: -3.549484968185425
    3. 's' → logprob: -4.799485206604004
    4. ' ici' → logprob: -5.049485206604004
    5. 'u' → logprob: -6.549485206604004
    6. 'pour' → logprob: -7.174485206604004
    7. ' pour' → logprob: -7.799485206604004
    8. ' s' → logprob: -7.799485206604004
    9. 'r' → logprob: -8.299485206604004
    10. 'c' → logprob: -9.049485206604004

Token 297: ' C' (ID: 363)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.044735074043273926
    2. 'C' → logprob: -3.1697349548339844
    3. ' (' → logprob: -6.919734954833984
    4. 't' → logprob: -7.544734954833984
    5. ' C' → logprob: -9.294734954833984
    6. '(B' → logprob: -9.919734954833984
    7. '(' → logprob: -10.044734954833984
    8. '(A' → logprob: -12.169734954833984
    9. 'c' → logprob: -12.294734954833984
    10. '#' → logprob: -12.669734954833984

Token 298: ' et' (ID: 859)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18397964537143707
    2. ',' → logprob: -2.8089797496795654
    3. '=' → logprob: -2.9339797496795654
    4. '+' → logprob: -3.4339797496795654
    5. ' =' → logprob: -4.558979511260986
    6. ' t' → logprob: -5.933979511260986
    7. ' +' → logprob: -6.183979511260986
    8. '
' → logprob: -6.558979511260986
    9. '#' → logprob: -6.808979511260986
    10. '+t' → logprob: -7.183979511260986

Token 299: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008614808320999146
    2. ' B' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.383615493774414
    4. 'b' → logprob: -16.633615493774414
    5. '
' → logprob: -17.258615493774414
    6. '(B' → logprob: -17.383615493774414
    7. ' ' → logprob: -17.508615493774414
    8. '	B' → logprob: -17.758615493774414
    9. '=B' → logprob: -18.633615493774414
    10. '>B' → logprob: -18.883615493774414

Token 300: '.
' (ID: 558)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.02545113116502762
    2. 's' → logprob: -4.275451183319092
    3. 'u' → logprob: -4.525451183319092
    4. ' t' → logprob: -9.025450706481934
    5. 'r' → logprob: -9.525450706481934
    6. '
' → logprob: -10.525450706481934
    7. 'v' → logprob: -10.650450706481934
    8. 'x' → logprob: -10.900450706481934
    9. 'n' → logprob: -11.025450706481934
    10. ' s' → logprob: -11.525450706481934

Token 301: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8070604205131531
    2. 'u' → logprob: -1.1820604801177979
    3. 's' → logprob: -1.4320604801177979
    4. 'r' → logprob: -5.557060241699219
    5. 'x' → logprob: -7.057060241699219
    6. 'v' → logprob: -7.307060241699219
    7. 'n' → logprob: -7.307060241699219
    8. 'p' → logprob: -7.557060241699219
    9. 'tc' → logprob: -7.932060241699219
    10. 'm' → logprob: -8.307060241699219

Token 302: ' On' (ID: 2160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0290606021881104
    2. 't' → logprob: -1.0290606021881104
    3. 'u' → logprob: -1.2790606021881104
    4. 'r' → logprob: -5.779060363769531
    5. 'v' → logprob: -6.904060363769531
    6. 'p' → logprob: -7.154060363769531
    7. 'n' → logprob: -7.779060363769531
    8. 'x' → logprob: -7.779060363769531
    9. 'y' → logprob: -8.904060363769531
    10. 'm' → logprob: -9.029060363769531

Token 303: ' stock' (ID: 6546)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8174347877502441
    2. 's' → logprob: -1.3174347877502441
    3. 't' → logprob: -2.442434787750244
    4. ' =' → logprob: -2.442434787750244
    5. 'u' → logprob: -2.942434787750244
    6. ' s' → logprob: -3.067434787750244
    7. ' t' → logprob: -4.942434787750244
    8. ' u' → logprob: -5.567434787750244
    9. 'continue' → logprob: -6.567434787750244
    10. '=
' → logprob: -7.067434787750244

Token 304: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7372749447822571
    2. ' =' → logprob: -1.2372748851776123
    3. '=C' → logprob: -2.3622748851776123
    4. 'e' → logprob: -2.6122748851776123
    5. 't' → logprob: -3.9872748851776123
    6. '(C' → logprob: -4.362275123596191
    7. 'er' → logprob: -4.987275123596191
    8. 'age' → logprob: -5.112275123596191
    9. 'te' → logprob: -5.487275123596191
    10. '=(' → logprob: -5.612275123596191

Token 305: ' ce' (ID: 2357)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4337219297885895
    2. ' le' → logprob: -1.558721899986267
    3. 'le' → logprob: -2.5587220191955566
    4. ' t' → logprob: -3.5587220191955566
    5. 'u' → logprob: -4.558722019195557
    6. '=' → logprob: -4.683722019195557
    7. ' =' → logprob: -4.933722019195557
    8. 'result' → logprob: -6.058722019195557
    9. 's' → logprob: -6.183722019195557
    10. ' u' → logprob: -6.558722019195557

Token 306: ' résultat' (ID: 62556)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3905137777328491
    2. 'result' → logprob: -1.3905137777328491
    3. 's' → logprob: -1.7655137777328491
    4. 't' → logprob: -1.8905137777328491
    5. ' résultat' → logprob: -2.7655138969421387
    6. ' =' → logprob: -3.5155138969421387
    7. 'u' → logprob: -3.5155138969421387
    8. 'nombre' → logprob: -3.8905138969421387
    9. 'r' → logprob: -4.515513896942139
    10. ' result' → logprob: -5.390513896942139

Token 307: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520786225795746
    2. ' =' → logprob: -1.502078652381897
    3. 't' → logprob: -9.377079010009766
    4. 's' → logprob: -10.377079010009766
    5. '=t' → logprob: -11.127079010009766
    6. '=s' → logprob: -12.127079010009766
    7. 'dans' → logprob: -12.377079010009766
    8. ' dans' → logprob: -12.502079010009766
    9. ' t' → logprob: -13.502079010009766
    10. ',' → logprob: -13.877079010009766

Token 308: ' la' (ID: 557)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.555952250957489
    2. 's' → logprob: -1.5559523105621338
    3. 't' → logprob: -1.8059523105621338
    4. 'c' → logprob: -4.555952072143555
    5. ' u' → logprob: -4.680952072143555
    6. ' s' → logprob: -4.930952072143555
    7. ' le' → logprob: -5.055952072143555
    8. 'l' → logprob: -5.930952072143555
    9. 'le' → logprob: -5.930952072143555
    10. 'temps' → logprob: -6.055952072143555

Token 309: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7070369720458984
    2. 'u' → logprob: -0.9570369720458984
    3. 'v' → logprob: -3.3320369720458984
    4. 't' → logprob: -3.5820369720458984
    5. 'temps' → logprob: -4.082036972045898
    6. ' s' → logprob: -4.832036972045898
    7. 'nombre' → logprob: -4.832036972045898
    8. 'x' → logprob: -5.582036972045898
    9. 'n' → logprob: -5.957036972045898
    10. 'variable' → logprob: -5.957036972045898

Token 310: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28550848364830017
    2. 'u' → logprob: -1.5355085134506226
    3. ' s' → logprob: -3.910508394241333
    4. ' u' → logprob: -5.285508632659912
    5. 'n' → logprob: -5.660508632659912
    6. 'r' → logprob: -7.285508632659912
    7. 'v' → logprob: -7.410508632659912
    8. 'c' → logprob: -7.785508632659912
    9. 't' → logprob: -7.785508632659912
    10. 'x' → logprob: -8.035508155822754

Token 311: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5089648365974426
    2. 'u' → logprob: -1.8839647769927979
    3. 'r' → logprob: -2.758964776992798
    4. 'n' → logprob: -3.508964776992798
    5. 'w' → logprob: -3.758964776992798
    6. 'x' → logprob: -3.883964776992798
    7. 'p' → logprob: -4.133965015411377
    8. 't' → logprob: -4.383965015411377
    9. 'k' → logprob: -4.758965015411377
    10. 'm' → logprob: -4.758965015411377

Token 312: ''.
' (ID: 49980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999246031045914
    2. '=' → logprob: -2.6949925422668457
    3. ' ' → logprob: -10.069992065429688
    4. ' ' → logprob: -12.319992065429688
    5. ' =
' → logprob: -13.069992065429688
    6. 'n' → logprob: -13.319992065429688
    7. 'a' → logprob: -13.944992065429688
    8. 'c' → logprob: -14.444992065429688
    9. 's' → logprob: -14.694992065429688
    10. 'u' → logprob: -14.819992065429688

Token 313: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.320199877838604e-07
    2. ' a' → logprob: -14.875
    3. '
' → logprob: -18.5
    4. '```' → logprob: -21.375
    5. 'а' → logprob: -22.0
    6. '=' → logprob: -22.25
    7. '#a' → logprob: -22.5
    8. '#' → logprob: -22.625
    9. '`' → logprob: -23.125
    10. 't' → logprob: -23.25

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -16.068147659301758
    4. ' =(' → logprob: -17.068147659301758
    5. '=(' → logprob: -18.193147659301758
    6. ',' → logprob: -18.193147659301758
    7. 'a' → logprob: -18.443147659301758
    8. ' ' → logprob: -18.568147659301758
    9. '=a' → logprob: -18.693147659301758
    10. ' =
' → logprob: -19.193147659301758

Token 315: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0006353547796607018
    2. ' (' → logprob: -7.375635147094727
    3. '(' → logprob: -11.875635147094727
    4. '(c' → logprob: -13.375635147094727
    5. '(A' → logprob: -15.875635147094727
    6. ' ' → logprob: -16.875635147094727
    7. '   ' → logprob: -17.750635147094727
    8. '(B' → logprob: -18.375635147094727
    9. '#' → logprob: -19.000635147094727
    10. '  ' → logprob: -19.125635147094727

Token 316: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.896309739408025e-07
    2. ' C' → logprob: -14.250000953674316
    3. '(C' → logprob: -16.25
    4. 'c' → logprob: -18.75
    5. '	C' → logprob: -20.375
    6. '=C' → logprob: -20.5
    7. '+C' → logprob: -20.5
    8. '"C' → logprob: -20.75
    9. '[C' → logprob: -21.0
    10. '>C' → logprob: -21.125

Token 317: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519491910934448
    2. '+' → logprob: -1.5019491910934448
    3. '+B' → logprob: -10.876949310302734
    4. ' ' → logprob: -15.126949310302734
    5. '+b' → logprob: -15.376949310302734
    6. '+
' → logprob: -15.501949310302734
    7. ' ' → logprob: -15.501949310302734
    8. ' +
' → logprob: -16.126949310302734
    9. ' plus' → logprob: -17.001949310302734
    10. '＋' → logprob: -17.376949310302734

Token 318: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01416350994259119
    2. ' B' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.014163970947266
    4. 'b' → logprob: -17.139163970947266
    5. '	B' → logprob: -18.014163970947266
    6. '(B' → logprob: -18.139163970947266
    7. '   ' → logprob: -19.264163970947266
    8. '(' → logprob: -20.514163970947266
    9. ' (' → logprob: -20.764163970947266
    10. ' ' → logprob: -20.764163970947266

Token 319: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141547918319702
    2. '-' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.076415061950684
    4. ')' → logprob: -16.076416015625
    5. 'a' → logprob: -18.576416015625
    6. ' ' → logprob: -18.576416015625
    7. '−' → logprob: -19.076416015625
    8. '1' → logprob: -19.326416015625
    9. '```' → logprob: -19.701416015625
    10. '()-' → logprob: -19.951416015625

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. ')' → logprob: -19.750295639038086
    4. '<|end|>' → logprob: -19.812795639038086
    5. '[' → logprob: -20.000295639038086
    6. '```' → logprob: -20.062795639038086
    7. '   ' → logprob: -20.125295639038086
    8. '１' → logprob: -20.437795639038086
    9. '
' → logprob: -20.562795639038086
    10. '۱' → logprob: -20.875295639038086

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -18.625001907348633
    4. '```' → logprob: -19.625001907348633
    5. '
' → logprob: -20.375001907348633
    6. ')' → logprob: -20.500001907348633
    7. '[' → logprob: -20.500001907348633
    8. '１' → logprob: -21.062501907348633
    9. '۱' → logprob: -21.125001907348633
    10. '<|end|>' → logprob: -21.625001907348633

Token 322: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005128794582560658
    2. ' )' → logprob: -7.625513076782227
    3. ')//' → logprob: -10.625513076782227
    4. '#' → logprob: -15.250513076782227
    5. ')#' → logprob: -15.875513076782227
    6. ')
' → logprob: -16.375513076782227
    7. '//' → logprob: -16.875513076782227
    8. '```' → logprob: -18.250513076782227
    9. '   ' → logprob: -18.500513076782227
    10. ' ' → logprob: -18.500513076782227

Token 323: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6273627877235413
    2. '//' → logprob: -1.1273627281188965
    3. ' //' → logprob: -2.0023627281188965
    4. '#' → logprob: -5.3773627281188965
    5. ')//' → logprob: -6.1273627281188965
    6. ' )' → logprob: -8.627363204956055
    7. '```' → logprob: -9.877363204956055
    8. ' ' → logprob: -10.377363204956055
    9. ' #' → logprob: -10.877363204956055
    10. ']' → logprob: -12.127363204956055

Token 324: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007100477814674377
    2. ' B' → logprob: -7.2507100105285645
    3. 'b' → logprob: -16.000709533691406
    4. '	B' → logprob: -19.250709533691406
    5. ' ' → logprob: -19.875709533691406
    6. '>B' → logprob: -20.375709533691406
    7. '   ' → logprob: -22.250709533691406
    8. 'Ｂ' → logprob: -22.250709533691406
    9. '_B' → logprob: -22.875709533691406
    10. '  ' → logprob: -23.000709533691406

Token 325: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43089559674263
    2. 'if' → logprob: -1.6808955669403076
    3. 'print' → logprob: -1.9308955669403076
    4. '\n' → logprob: -4.930895805358887
    5. ' if' → logprob: -5.555895805358887
    6. '
' → logprob: -5.930895805358887
    7. '

' → logprob: -5.930895805358887
    8. '#' → logprob: -7.680895805358887
    9. '\' → logprob: -7.680895805358887
    10. 't' → logprob: -7.805895805358887

Token 326: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4163220524787903
    2. 'print' → logprob: -1.7913219928741455
    3. 'if' → logprob: -1.7913219928741455
    4. ' if' → logprob: -6.041322231292725
    5. '\n' → logprob: -6.791322231292725
    6. '
' → logprob: -7.291322231292725
    7. '

' → logprob: -7.291322231292725
    8. '#' → logprob: -7.666322231292725
    9. '<|end|>' → logprob: -7.916322231292725
    10. '  
' → logprob: -8.166321754455566

Token 327: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3146848678588867
    2. 'if' → logprob: -1.3146848678588867
    3. '#' → logprob: -6.814684867858887
    4. 'result' → logprob: -8.689684867858887
    5. 't' → logprob: -9.689684867858887
    6. 'total' → logprob: -10.439684867858887
    7. 'min' → logprob: -10.939684867858887
    8. 'ans' → logprob: -12.189684867858887
    9. 'answer' → logprob: -12.189684867858887
    10. 'max' → logprob: -12.564684867858887

Token 328: ' compare' (ID: 12221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.442411333322525
    2. 'if' → logprob: -1.8174113035202026
    3. ' print' → logprob: -1.8174113035202026
    4. ' if' → logprob: -3.692411422729492
    5. '#' → logprob: -5.067411422729492
    6. ' #' → logprob: -7.567411422729492
    7. '
' → logprob: -8.067411422729492
    8. ' imprime' → logprob: -9.692411422729492
    9. 'pr' → logprob: -10.067411422729492
    10. ' compare' → logprob: -10.067411422729492

Token 329: ' maintenant' (ID: 35735)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7837467789649963
    2. 't' → logprob: -0.9087467789649963
    3. ' if' → logprob: -2.4087467193603516
    4. ' t' → logprob: -3.0337467193603516
    5. ' ' → logprob: -7.408746719360352
    6. ':' → logprob: -7.783746719360352
    7. 'le' → logprob: -8.533746719360352
    8. ' si' → logprob: -8.533746719360352
    9. ' les' → logprob: -8.908746719360352
    10. 'print' → logprob: -9.158746719360352

Token 330: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16549502313137054
    2. ' t' → logprob: -1.9154950380325317
    3. ' les' → logprob: -5.915494918823242
    4. 'les' → logprob: -6.540494918823242
    5. 'if' → logprob: -7.040494918823242
    6. ' if' → logprob: -9.165494918823242
    7. 'le' → logprob: -10.165494918823242
    8. ' le' → logprob: -10.290494918823242
    9. 'a' → logprob: -11.165494918823242
    10. ' si' → logprob: -11.415494918823242

Token 331: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14807677268981934
    2. '>' → logprob: -3.3980767726898193
    3. ' ,' → logprob: -3.3980767726898193
    4. ' >' → logprob: -3.8980767726898193
    5. ' ==' → logprob: -4.773077011108398
    6. '==' → logprob: -4.898077011108398
    7. ' <=' → logprob: -5.273077011108398
    8. '<=' → logprob: -5.273077011108398
    9. ' <' → logprob: -5.523077011108398
    10. ' et' → logprob: -5.648077011108398

Token 332: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007606627885252237
    2. ' a' → logprob: -4.882606506347656
    3. ' ' → logprob: -15.007606506347656
    4. ' ' → logprob: -15.632606506347656
    5. ''a' → logprob: -17.757606506347656
    6. '	a' → logprob: -17.882606506347656
    7. 'а' → logprob: -18.882606506347656
    8. '
' → logprob: -18.882606506347656
    9. 't' → logprob: -19.007606506347656
    10. '```' → logprob: -19.195106506347656

Token 333: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010424173437058926
    2. 'print' → logprob: -4.6354241371154785
    3. '
' → logprob: -7.6354241371154785
    4. ' if' → logprob: -8.885424613952637
    5. ',' → logprob: -11.385424613952637
    6. 'result' → logprob: -11.635424613952637
    7. 't' → logprob: -11.885424613952637
    8. ',
' → logprob: -11.885424613952637
    9. '#' → logprob: -12.135424613952637
    10. '.' → logprob: -13.885424613952637

Token 334: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009364743018522859
    2. 'print' → logprob: -7.000936508178711
    3. 'result' → logprob: -10.875936508178711
    4. ' if' → logprob: -12.500936508178711
    5. 'i' → logprob: -14.125936508178711
    6. 't' → logprob: -14.500936508178711
    7. '#' → logprob: -14.750936508178711
    8. 'for' → logprob: -14.875936508178711
    9. '```' → logprob: -15.875936508178711
    10. 'return' → logprob: -16.12593650817871

Token 335: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1002383828163147
    2. 'print' → logprob: -2.35023832321167
    3. 'result' → logprob: -10.725238800048828
    4. ' if' → logprob: -12.225238800048828
    5. '
' → logprob: -13.725238800048828
    6. 't' → logprob: -14.100238800048828
    7. 'pr' → logprob: -14.350238800048828
    8. '#' → logprob: -14.350238800048828
    9. '```' → logprob: -14.600238800048828
    10. 'prin' → logprob: -15.350238800048828

Token 336: ' le' (ID: 505)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.02325631119310856
    2. 't' → logprob: -3.773256301879883
    3. ' ' → logprob: -11.523256301879883
    4. ' ' → logprob: -14.648256301879883
    5. ' a' → logprob: -15.398256301879883
    6. '	t' → logprob: -16.023256301879883
    7. ' ' → logprob: -17.023256301879883
    8. 'a' → logprob: -17.273256301879883
    9. '(t' → logprob: -18.023256301879883
    10. ' т' → logprob: -18.523256301879883

Token 337: ' nombre' (ID: 9733)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01823691837489605
    2. ' t' → logprob: -4.018237113952637
    3. 'a' → logprob: -9.393237113952637
    4. ' a' → logprob: -12.518237113952637
    5. ' ' → logprob: -16.26823616027832
    6. '	t' → logprob: -17.01823616027832
    7. ' ' → logprob: -17.64323616027832
    8. 'T' → logprob: -18.51823616027832
    9. '(t' → logprob: -18.76823616027832
    10. '`t' → logprob: -18.83073616027832

Token 338: ' de' (ID: 334)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.10810264199972153
    2. 't' → logprob: -2.608102560043335
    3. ' de' → logprob: -3.608102560043335
    4. ' ' → logprob: -8.233102798461914
    5. 'de' → logprob: -8.358102798461914
    6. ' <=' → logprob: -8.483102798461914
    7. ' des' → logprob: -8.983102798461914
    8. 's' → logprob: -9.108102798461914
    9. 'est' → logprob: -9.108102798461914
    10. '>' → logprob: -9.233102798461914

Token 339: ' tours' (ID: 32603)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007991461316123605
    2. ' t' → logprob: -7.875799179077148
    3. 'fois' → logprob: -8.875799179077148
    4. 'a' → logprob: -9.125799179077148
    5. 'tour' → logprob: -9.750799179077148
    6. ' coups' → logprob: -11.375799179077148
    7. 'jours' → logprob: -11.625799179077148
    8. 'cou' → logprob: -11.750799179077148
    9. 'c' → logprob: -11.875799179077148
    10. 'times' → logprob: -11.875799179077148

Token 340: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6949962377548218
    2. 't' → logprob: -0.9449962377548218
    3. 'de' → logprob: -2.9449963569641113
    4. ' de' → logprob: -3.5699963569641113
    5. ' est' → logprob: -4.819996356964111
    6. 'est' → logprob: -4.944996356964111
    7. ' nécessaires' → logprob: -5.194996356964111
    8. ' nécessaire' → logprob: -5.944996356964111
    9. '<=' → logprob: -6.194996356964111
    10. 's' → logprob: -7.569996356964111

Token 341: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1925700455904007
    2. '<=' → logprob: -1.8175700902938843
    3. ' >=' → logprob: -4.942570209503174
    4. '>=' → logprob: -6.067570209503174
    5. ' >' → logprob: -6.317570209503174
    6. '>' → logprob: -7.192570209503174
    7. ' <' → logprob: -7.567570209503174
    8. '<' → logprob: -9.067569732666016
    9. ' ' → logprob: -9.817569732666016
    10. ' ==' → logprob: -11.567569732666016

Token 342: ' supérieur' (ID: 98491)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5066984295845032
    2. ' inférieur' → logprob: -1.2566983699798584
    3. ' <=' → logprob: -2.5066983699798584
    4. ' supérieur' → logprob: -4.0066986083984375
    5. 'inf' → logprob: -5.3816986083984375
    6. '>=' → logprob: -6.0066986083984375
    7. ' inf' → logprob: -6.7566986083984375
    8. 't' → logprob: -6.8816986083984375
    9. '<' → logprob: -7.2566986083984375
    10. ' t' → logprob: -7.7566986083984375

Token 343: ' ou' (ID: 2031)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4199964106082916
    2. 'a' → logprob: -1.2949963808059692
    3. ' à' → logprob: -2.794996500015259
    4. '#' → logprob: -6.16999626159668
    5. 'au' → logprob: -6.41999626159668
    6. 'to' → logprob: -6.66999626159668
    7. '>' → logprob: -7.41999626159668
    8. '(a' → logprob: -7.41999626159668
    9. ' a' → logprob: -7.66999626159668
    10. '.' → logprob: -8.41999626159668

Token 344: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.0191289484500885
    2. 'ég' → logprob: -4.644128799438477
    3. 'ou' → logprob: -5.769128799438477
    4. 'à' → logprob: -5.894128799438477
    5. '#' → logprob: -7.019128799438477
    6. ' égal' → logprob: -7.144128799438477
    7. '=' → logprob: -7.269128799438477
    8. 'a' → logprob: -7.394128799438477
    9. ' ég' → logprob: -9.019128799438477
    10. 'eg' → logprob: -9.519128799438477

Token 345: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.18997804820537567
    2. ' à' → logprob: -1.814978003501892
    3. 'a' → logprob: -4.689978122711182
    4. 'au' → logprob: -8.314977645874023
    5. ''à' → logprob: -8.314977645874023
    6. ' ' → logprob: -8.439977645874023
    7. ' ' → logprob: -9.439977645874023
    8. '(a' → logprob: -9.439977645874023
    9. 't' → logprob: -9.939977645874023
    10. 's' → logprob: -11.064977645874023

Token 346: ' nombre' (ID: 9733)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08126140385866165
    2. 'nombre' → logprob: -2.581261396408081
    3. ' nombre' → logprob: -6.08126163482666
    4. ' a' → logprob: -9.45626163482666
    5. 'number' → logprob: -12.83126163482666
    6. ' ' → logprob: -13.70626163482666
    7. 'Nombre' → logprob: -14.83126163482666
    8. ' ' → logprob: -15.95626163482666
    9. ' number' → logprob: -16.081260681152344
    10. 'à' → logprob: -16.206260681152344

Token 347: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.036205120384693146
    2. 'de' → logprob: -3.9112050533294678
    3. ' a' → logprob: -4.661205291748047
    4. 'a' → logprob: -5.411205291748047
    5. ' d' → logprob: -7.536205291748047
    6. ' ' → logprob: -7.911205291748047
    7. ' tours' → logprob: -8.161205291748047
    8. ' ' → logprob: -8.911205291748047
    9. ' des' → logprob: -9.161205291748047
    10. 'd' → logprob: -10.036205291748047

Token 348: ' tours' (ID: 32603)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21582910418510437
    2. 'a' → logprob: -1.7158291339874268
    3. ' tours' → logprob: -4.340828895568848
    4. ' a' → logprob: -7.090828895568848
    5. 'tour' → logprob: -8.465828895568848
    6. ' ' → logprob: -9.965828895568848
    7. 'round' → logprob: -10.340828895568848
    8. ' ' → logprob: -10.465828895568848
    9. ' rounds' → logprob: -10.840828895568848
    10. '
' → logprob: -10.965828895568848

Token 349: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42877861857414246
    2. ' a' → logprob: -1.0537786483764648
    3. ' required' → logprob: -10.678778648376465
    4. ' ' → logprob: -11.803778648376465
    5. ' ' → logprob: -12.053778648376465
    6. ' necessary' → logprob: -12.053778648376465
    7. 'required' → logprob: -12.178778648376465
    8. ' de' → logprob: -12.178778648376465
    9. ' nécessaires' → logprob: -12.428778648376465
    10. '	a' → logprob: -12.553778648376465

Token 350: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008164049126207829
    2. ',' → logprob: -5.133163928985596
    3. ' :' → logprob: -6.508163928985596
    4. ':
' → logprob: -7.258163928985596
    5. ' ,' → logprob: -11.258164405822754
    6. ' :
' → logprob: -12.008164405822754
    7. 's' → logprob: -13.008164405822754
    8. ',:' → logprob: -13.008164405822754
    9. ':,' → logprob: -13.383164405822754
    10. 'if' → logprob: -13.383164405822754

Token 351: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33999526500701904
    2. 'print' → logprob: -1.839995265007019
    3. ' if' → logprob: -2.2149953842163086
    4. ' print' → logprob: -3.9649953842163086
    5. ':' → logprob: -6.714995384216309
    6. ' ' → logprob: -10.714995384216309
    7. '#' → logprob: -10.714995384216309
    8. ' :' → logprob: -11.339995384216309
    9. '   ' → logprob: -12.089995384216309
    10. ' 
' → logprob: -13.089995384216309

Token 352: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004336493439041078
    2. ' print' → logprob: -7.750433444976807
    3. 'prin' → logprob: -13.875433921813965
    4. 'if' → logprob: -14.125433921813965
    5. 'pr' → logprob: -14.500433921813965
    6. '
' → logprob: -15.000433921813965
    7. 'pri' → logprob: -16.12543296813965
    8. '   ' → logprob: -16.12543296813965
    9. ' ' → logprob: -16.87543296813965
    10. '	print' → logprob: -17.00043296813965

Token 353: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.9888433093437925e-05
    2. ' print' → logprob: -10.625040054321289
    3. 'prin' → logprob: -11.750040054321289
    4. 'pr' → logprob: -12.750040054321289
    5. '#' → logprob: -13.125040054321289
    6. '
' → logprob: -14.750040054321289
    7. '#print' → logprob: -15.000040054321289
    8. 'result' → logprob: -15.125040054321289
    9. 'im' → logprob: -15.250040054321289
    10. 'if' → logprob: -15.250040054321289

Token 354: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.402885377407074
    2. 'if' → logprob: -1.5278854370117188
    3. ' if' → logprob: -2.5278854370117188
    4. ' =' → logprob: -3.7778854370117188
    5. ' :' → logprob: -5.152885437011719
    6. '=' → logprob: -6.152885437011719
    7. ' ' → logprob: -6.527885437011719
    8. ':
' → logprob: -7.152885437011719
    9. 's' → logprob: -7.277885437011719
    10. 'print' → logprob: -8.527885437011719

Token 355: ' vér' (ID: 42524)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.627971887588501
    2. '"' → logprob: -1.377971887588501
    3. ' True' → logprob: -1.752971887588501
    4. ' "' → logprob: -4.502971649169922
    5. 't' → logprob: -5.127971649169922
    6. ' met' → logprob: -5.252971649169922
    7. 'true' → logprob: -5.627971649169922
    8. 'v' → logprob: -6.002971649169922
    9. ' true' → logprob: -6.127971649169922
    10. 'met' → logprob: -6.502971649169922

Token 356: 'ifiée' (ID: 88506)
  Prédit: 'ifiée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifiée' → logprob: -0.07978691160678864
    2. 'fi' → logprob: -2.829787015914917
    3. 'ifie' → logprob: -5.079786777496338
    4. 'if' → logprob: -5.454786777496338
    5. 'f' → logprob: -5.579786777496338
    6. '
' → logprob: -7.454786777496338
    7. 'ifié' → logprob: -7.579786777496338
    8. '"' → logprob: -7.704786777496338
    9. 'i' → logprob: -8.079787254333496
    10. 'ifi' → logprob: -8.079787254333496

Token 357: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009079067036509514
    2. ':' → logprob: -5.1340789794921875
    3. ':
' → logprob: -6.3840789794921875
    4. ' if' → logprob: -6.8840789794921875
    5. '
' → logprob: -8.884078979492188
    6. '.' → logprob: -8.884078979492188
    7. ',' → logprob: -9.884078979492188
    8. '```' → logprob: -10.509078979492188
    9. 'print' → logprob: -10.884078979492188
    10. '#' → logprob: -10.884078979492188

Token 358: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005732863210141659
    2. ' if' → logprob: -7.50057315826416
    3. 'print' → logprob: -11.37557315826416
    4. '```' → logprob: -12.00057315826416
    5. '<|end|>' → logprob: -14.00057315826416
    6. '
' → logprob: -14.25057315826416
    7. ';if' → logprob: -15.12557315826416
    8. ':' → logprob: -15.37557315826416
    9. '#' → logprob: -15.62557315826416
    10. '``' → logprob: -16.000574111938477

Token 359: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1002098023891449
    2. 't' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.100210189819336
    4. '	t' → logprob: -13.975210189819336
    5. ' ' → logprob: -15.600210189819336
    6. ' ' → logprob: -17.100210189819336
    7. '`t' → logprob: -18.225210189819336
    8. '(t' → logprob: -18.850210189819336
    9. ' т' → logprob: -18.850210189819336
    10. '​' → logprob: -18.975210189819336

Token 360: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.17977389693260193
    2. '>=' → logprob: -1.8047739267349243
    3. '>' → logprob: -11.429774284362793
    4. ' <=' → logprob: -12.179774284362793
    5. ')>=' → logprob: -12.429774284362793
    6. '<=' → logprob: -12.929774284362793
    7. ' >' → logprob: -13.429774284362793
    8. ' ' → logprob: -13.554774284362793
    9. ']>=' → logprob: -13.804774284362793
    10. ' ' → logprob: -14.054774284362793

Token 361: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002613358374219388
    2. ' a' → logprob: -8.250261306762695
    3. '	a' → logprob: -20.500261306762695
    4. ' ' → logprob: -22.625261306762695
    5. 'а' → logprob: -23.000261306762695
    6. ' ' → logprob: -23.875261306762695
    7. ''a' → logprob: -25.250261306762695
    8. '(a' → logprob: -25.625261306762695
    9. '>a' → logprob: -25.625261306762695
    10. '   ' → logprob: -25.750261306762695

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009218233171850443
    2. ':
' → logprob: -7.000921726226807
    3. ' :' → logprob: -11.500922203063965
    4. ':
' → logprob: -16.12592124938965
    5. ' :
' → logprob: -16.62592124938965
    6. ':

' → logprob: -16.62592124938965
    7. ':#' → logprob: -18.62592124938965
    8. '():' → logprob: -18.87592124938965
    9. '):' → logprob: -19.00092124938965
    10. ':return' → logprob: -19.12592124938965

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020815838128328323
    2. 'print' → logprob: -4.520815849304199
    3. ' print' → logprob: -4.645815849304199
    4. '   ' → logprob: -9.7708158493042
    5. '	print' → logprob: -9.8958158493042
    6. '\' → logprob: -13.3958158493042
    7. '    ' → logprob: -13.3958158493042
    8. '
' → logprob: -13.5208158493042
    9. '       ' → logprob: -13.7708158493042
    10. '    
' → logprob: -13.8958158493042

Token 364: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009090880863368511
    2. ' print' → logprob: -5.134090900421143
    3. '   ' → logprob: -5.759090900421143
    4. '	print' → logprob: -13.634090423583984
    5. '
' → logprob: -14.009090423583984
    6. ' ' → logprob: -14.134090423583984
    7. '```' → logprob: -16.509090423583984
    8. '  ' → logprob: -16.634090423583984
    9. 'Print' → logprob: -16.884090423583984
    10. '    ' → logprob: -16.884090423583984

Token 365: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2817748785018921
    2. ' print' → logprob: -1.406774878501892
    3. '   ' → logprob: -7.406774997711182
    4. '
' → logprob: -12.781774520874023
    5. 'pr' → logprob: -12.781774520874023
    6. '	print' → logprob: -13.031774520874023
    7. '    ' → logprob: -13.031774520874023
    8. 'prin' → logprob: -13.281774520874023
    9. '#' → logprob: -13.406774520874023
    10. ' ' → logprob: -13.781774520874023

Token 366: ' la' (ID: 557)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03772975504398346
    2. 'True' → logprob: -3.6627297401428223
    3. ' t' → logprob: -5.912729740142822
    4. ' a' → logprob: -6.162729740142822
    5. ' ' → logprob: -6.287729740142822
    6. '"' → logprob: -6.537729740142822
    7. ' "' → logprob: -6.912729740142822
    8. ' ' → logprob: -7.287729740142822
    9. ' true' → logprob: -7.537729740142822
    10. 't' → logprob: -8.41273021697998

Token 367: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37258076667785645
    2. 'condition' → logprob: -1.4975807666778564
    3. ' condition' → logprob: -3.3725807666778564
    4. '#' → logprob: -3.9975807666778564
    5. ' print' → logprob: -4.997580528259277
    6. 'ré' → logprob: -4.997580528259277
    7. ' réponse' → logprob: -5.247580528259277
    8. '
' → logprob: -6.497580528259277
    9. 's' → logprob: -6.997580528259277
    10. 'r' → logprob: -7.122580528259277

Token 368: ' t' (ID: 260)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12493196129798889
    2. ' print' → logprob: -2.624932050704956
    3. 'print' → logprob: -3.624932050704956
    4. '   ' → logprob: -4.749931812286377
    5. ':
' → logprob: -4.749931812286377
    6. ' :' → logprob: -7.374931812286377
    7. ' est' → logprob: -8.874932289123535
    8. '    ' → logprob: -9.499932289123535
    9. '	print' → logprob: -10.749932289123535
    10. ' :
' → logprob: -11.124932289123535

Token 369: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20335088670253754
    2. '>=' → logprob: -1.7033509016036987
    3. '   ' → logprob: -7.078351020812988
    4. ':' → logprob: -7.078351020812988
    5. '>' → logprob: -10.078351020812988
    6. ' <=' → logprob: -10.453351020812988
    7. ' ==' → logprob: -10.578351020812988
    8. ' ' → logprob: -10.828351020812988
    9. '<=' → logprob: -10.828351020812988
    10. '==' → logprob: -10.953351020812988

Token 370: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1002127155661583
    2. ' a' → logprob: -2.350212812423706
    3. ' ' → logprob: -13.100213050842285
    4. ' ' → logprob: -13.100213050842285
    5. '   ' → logprob: -13.850213050842285
    6. '0' → logprob: -14.975213050842285
    7. '	a' → logprob: -15.225213050842285
    8. 'а' → logprob: -16.22521209716797
    9. '=a' → logprob: -16.47521209716797
    10. '1' → logprob: -16.66271209716797

Token 371: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006789262872189283
    2. ':
' → logprob: -5.006789207458496
    3. ' :' → logprob: -10.006789207458496
    4. '   ' → logprob: -11.006789207458496
    5. ',' → logprob: -12.631789207458496
    6. 'print' → logprob: -12.631789207458496
    7. ':
' → logprob: -13.506789207458496
    8. ' print' → logprob: -13.506789207458496
    9. ' :
' → logprob: -14.006789207458496
    10. ':\' → logprob: -14.631789207458496

Token 372: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.39653706550598145
    2. 'True' → logprob: -1.1465370655059814
    3. ' True' → logprob: -5.646536827087402
    4. ' vraie' → logprob: -5.771536827087402
    5. 'true' → logprob: -6.271536827087402
    6. 's' → logprob: -7.521536827087402
    7. 'V' → logprob: -8.396536827087402
    8. '   ' → logprob: -9.396536827087402
    9. '
' → logprob: -9.896536827087402
    10. 'rem' → logprob: -10.021536827087402

Token 373: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09670297056436539
    2. '   ' → logprob: -2.971703052520752
    3. ':
' → logprob: -3.471703052520752
    4. ',' → logprob: -4.971703052520752
    5. 'print' → logprob: -6.221703052520752
    6. ' print' → logprob: -7.596703052520752
    7. ' :' → logprob: -8.721702575683594
    8. '       ' → logprob: -8.721702575683594
    9. '
' → logprob: -9.846702575683594
    10. ':\' → logprob: -11.221702575683594

Token 374: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19056513905525208
    2. ' print' → logprob: -2.0655651092529297
    3. 'print' → logprob: -3.0655651092529297
    4. '    ' → logprob: -9.81556510925293
    5. '   ' → logprob: -10.81556510925293
    6. '	print' → logprob: -11.06556510925293
    7. ' ' → logprob: -11.19056510925293
    8. '       ' → logprob: -11.56556510925293
    9. '
' → logprob: -11.94056510925293
    10. '  ' → logprob: -12.44056510925293

Token 375: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.647484540939331
    2. 'print' → logprob: -1.022484540939331
    3. '   ' → logprob: -2.147484540939331
    4. '	print' → logprob: -10.02248477935791
    5. ' prin' → logprob: -10.64748477935791
    6. '    ' → logprob: -10.64748477935791
    7. ' ' → logprob: -11.14748477935791
    8. 'pr' → logprob: -11.27248477935791
    9. '#' → logprob: -11.64748477935791
    10. ' imprime' → logprob: -12.02248477935791

Token 376: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014797959476709366
    2. '"O' → logprob: -5.514798164367676
    3. '"W' → logprob: -5.514798164367676
    4. '"T' → logprob: -6.514798164367676
    5. '"C' → logprob: -7.014798164367676
    6. '"D' → logprob: -7.264798164367676
    7. '"H' → logprob: -7.389798164367676
    8. '"B' → logprob: -7.639798164367676
    9. '("' → logprob: -7.764798164367676
    10. ''' → logprob: -8.139798164367676

Token 377: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.029292626306414604
    2. 'YES' → logprob: -3.779292583465576
    3. 'Oui' → logprob: -5.654292583465576
    4. 'TA' → logprob: -6.529292583465576
    5. '"' → logprob: -7.904292583465576
    6. 'yes' → logprob: -8.529293060302734
    7. 'DA' → logprob: -10.154293060302734
    8. 'Victory' → logprob: -10.404293060302734
    9. ' Yes' → logprob: -10.529293060302734
    10. 'Win' → logprob: -10.654293060302734

Token 378: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00046260483213700354
    2. '"
' → logprob: -8.375462532043457
    3. '")' → logprob: -8.750462532043457
    4. 'print' → logprob: -10.250462532043457
    5. '".' → logprob: -11.375462532043457
    6. ')"' → logprob: -11.750462532043457
    7. ')' → logprob: -12.125462532043457
    8. '   ' → logprob: -12.625462532043457
    9. '()"' → logprob: -13.000462532043457
    10. '":
' → logprob: -13.125462532043457

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011307948443572968
    2. 'print' → logprob: -9.625113487243652
    3. '
' → logprob: -10.750113487243652
    4. ' print' → logprob: -10.875113487243652
    5. '       ' → logprob: -12.250113487243652
    6. '    
' → logprob: -14.500113487243652
    7. '   ' → logprob: -14.750113487243652
    8. '\n' → logprob: -14.875113487243652
    9. '```' → logprob: -15.500113487243652
    10. '	print' → logprob: -17.000112533569336

Token 380: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2204723209142685
    2. 'print' → logprob: -1.7204723358154297
    3. ' print' → logprob: -3.9704723358154297
    4. '
' → logprob: -11.72047233581543
    5. '	print' → logprob: -13.22047233581543
    6. '       ' → logprob: -13.59547233581543
    7. '```' → logprob: -13.97047233581543
    8. '    
' → logprob: -14.47047233581543
    9. '    ' → logprob: -14.59547233581543
    10. ' ' → logprob: -14.84547233581543

Token 381: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21326600015163422
    2. ' print' → logprob: -1.9632660150527954
    3. 'print' → logprob: -2.963265895843506
    4. '       ' → logprob: -12.713266372680664
    5. '    ' → logprob: -12.838266372680664
    6. '	print' → logprob: -13.213266372680664
    7. '   ' → logprob: -13.713266372680664
    8. ' ' → logprob: -15.088266372680664
    9. '  ' → logprob: -15.338266372680664
    10. ' ' → logprob: -15.838266372680664

Token 382: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019360085716471076
    2. '(' → logprob: -6.251935958862305
    3. '()' → logprob: -12.626935958862305
    4. '('' → logprob: -12.876935958862305
    5. ' ("' → logprob: -13.876935958862305
    6. '("")' → logprob: -15.001935958862305
    7. '(
' → logprob: -15.126935958862305
    8. '   ' → logprob: -16.876935958862305
    9. ' ' → logprob: -17.376935958862305
    10. '(

' → logprob: -18.376935958862305

Token 383: ' écrit' (ID: 46574)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0008446489810012281
    2. '(' → logprob: -7.250844478607178
    3. '('' → logprob: -9.000844955444336
    4. '()' → logprob: -11.875844955444336
    5. '("")' → logprob: -13.125844955444336
    6. ' ("' → logprob: -14.250844955444336
    7. '   ' → logprob: -14.750844955444336
    8. '("\' → logprob: -15.500844955444336
    9. '(True' → logprob: -15.500844955444336
    10. '("""' → logprob: -15.500844955444336

Token 384: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06210201978683472
    2. '(' → logprob: -2.8121020793914795
    3. '(
' → logprob: -9.812102317810059
    4. '('' → logprob: -10.062102317810059
    5. '()' → logprob: -10.562102317810059
    6. '("")' → logprob: -11.812102317810059
    7. ' ' → logprob: -14.312102317810059
    8. ' ("' → logprob: -14.562102317810059
    9. '(

' → logprob: -14.562102317810059
    10. '   ' → logprob: -14.812102317810059

Token 385: ' chaîne' (ID: 89288)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08401909470558167
    2. '"' → logprob: -2.959019184112549
    3. 'Yes' → logprob: -3.959019184112549
    4. '(' → logprob: -4.709019184112549
    5. '('' → logprob: -8.33401870727539
    6. ' Yes' → logprob: -9.20901870727539
    7. '(
' → logprob: -9.58401870727539
    8. 'Oui' → logprob: -9.95901870727539
    9. 'string' → logprob: -10.08401870727539
    10. '()' → logprob: -10.83401870727539

Token 386: ' de' (ID: 334)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005569627974182367
    2. '(' → logprob: -7.500556945800781
    3. '('' → logprob: -12.875556945800781
    4. '()' → logprob: -14.250556945800781
    5. '(
' → logprob: -15.000556945800781
    6. ' ("' → logprob: -15.000556945800781
    7. '("")' → logprob: -16.12555694580078
    8. '"' → logprob: -17.25055694580078
    9. '   ' → logprob: -18.00055694580078
    10. '(

' → logprob: -18.12555694580078

Token 387: ' caractères' (ID: 183106)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5832176804542542
    2. 'car' → logprob: -0.8332176804542542
    3. 'Yes' → logprob: -5.583217620849609
    4. 'texte' → logprob: -6.958217620849609
    5. ' caractères' → logprob: -7.083217620849609
    6. 'text' → logprob: -7.708217620849609
    7. '"text' → logprob: -7.833217620849609
    8. ' "' → logprob: -8.58321762084961
    9. 'chaine' → logprob: -9.58321762084961
    10. '"I' → logprob: -9.83321762084961

Token 388: ' donnée' (ID: 130126)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000932421418838203
    2. '(' → logprob: -7.000932216644287
    3. '('' → logprob: -11.000932693481445
    4. '()' → logprob: -13.250932693481445
    5. '(
' → logprob: -13.875932693481445
    6. '"' → logprob: -14.750932693481445
    7. '("")' → logprob: -15.000932693481445
    8. '#' → logprob: -15.750932693481445
    9. '   ' → logprob: -16.000932693481445
    10. ')' → logprob: -16.250932693481445

Token 389: ' dans' (ID: 2671)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0010524577228352427
    2. '(' → logprob: -6.876052379608154
    3. '('' → logprob: -11.501052856445312
    4. '   ' → logprob: -13.001052856445312
    5. '("")' → logprob: -13.126052856445312
    6. '(
' → logprob: -13.376052856445312
    7. '()' → logprob: -13.626052856445312
    8. ')' → logprob: -14.376052856445312
    9. '("\' → logprob: -14.626052856445312
    10. '"' → logprob: -14.876052856445312

Token 390: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.699840247631073
    2. '"' → logprob: -0.949840247631073
    3. 'l' → logprob: -3.5748403072357178
    4. 'le' → logprob: -3.8248403072357178
    5. '("' → logprob: -3.8248403072357178
    6. ' la' → logprob: -3.9498403072357178
    7. ')' → logprob: -4.074840068817139
    8. 'output' → logprob: -6.824840068817139
    9. '(' → logprob: -6.949840068817139
    10. ' ' → logprob: -6.949840068817139

Token 391: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.05934424698352814
    2. 'terminal' → logprob: -4.059344291687012
    3. 'stdout' → logprob: -4.559344291687012
    4. 'output' → logprob: -4.559344291687012
    5. ' console' → logprob: -5.059344291687012
    6. 'standard' → logprob: -5.434344291687012
    7. 'f' → logprob: -5.559344291687012
    8. 'print' → logprob: -6.184344291687012
    9. ' terminal' → logprob: -7.309344291687012
    10. 'code' → logprob: -7.934344291687012

Token 392: ' standard' (ID: 7024)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.009466826915740967
    2. '(' → logprob: -4.759466648101807
    3. '()' → logprob: -7.384466648101807
    4. '('' → logprob: -8.634467124938965
    5. '(
' → logprob: -10.509467124938965
    6. '("")' → logprob: -11.634467124938965
    7. ')' → logprob: -12.259467124938965
    8. '   ' → logprob: -12.634467124938965
    9. '"' → logprob: -12.759467124938965
    10. '#' → logprob: -14.009467124938965

Token 393: ' (' (ID: 350)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000601169012952596
    2. '(' → logprob: -7.500601291656494
    3. '('' → logprob: -10.750600814819336
    4. '   ' → logprob: -11.000600814819336
    5. '()' → logprob: -12.625600814819336
    6. ')' → logprob: -12.875600814819336
    7. '("")' → logprob: -14.000600814819336
    8. '("\' → logprob: -14.000600814819336
    9. '"' → logprob: -14.500600814819336
    10. ' ' → logprob: -14.750600814819336

Token 394: 'ty' (ID: 1206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34954172372817993
    2. '"' → logprob: -1.2245416641235352
    3. '")' → logprob: -7.599541664123535
    4. ' "' → logprob: -8.599541664123535
    5. '   ' → logprob: -8.724541664123535
    6. ' ' → logprob: -9.724541664123535
    7. ')
' → logprob: -10.224541664123535
    8. ')"' → logprob: -10.349541664123535
    9. ' )' → logprob: -10.474541664123535
    10. ''' → logprob: -10.974541664123535

Token 395: 'pi' (ID: 3455)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43932926654815674
    2. 't' → logprob: -1.8143292665481567
    3. 'ot' → logprob: -3.314329147338867
    4. 'out' → logprob: -3.939329147338867
    5. 'er' → logprob: -4.314329147338867
    6. 'ton' → logprob: -4.314329147338867
    7. 'on' → logprob: -4.314329147338867
    8. 'stdout' → logprob: -4.314329147338867
    9. 'ex' → logprob: -4.439329147338867
    10. 'k' → logprob: -5.064329147338867

Token 396: 'quement' (ID: 42437)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6660219430923462
    2. 'ur' → logprob: -1.9160219430923462
    3. ')' → logprob: -2.5410218238830566
    4. 'ère' → logprob: -2.7910218238830566
    5. 'r' → logprob: -3.5410218238830566
    6. 'nt' → logprob: -3.6660218238830566
    7. 'n' → logprob: -3.7910218238830566
    8. 'que' → logprob: -3.7910218238830566
    9. 'ne' → logprob: -4.291021823883057
    10. 'f' → logprob: -4.416021823883057

Token 397: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06803472340106964
    2. ' la' → logprob: -3.5680346488952637
    3. 'la' → logprob: -3.9430346488952637
    4. '()' → logprob: -5.068034648895264
    5. 'l' → logprob: -5.443034648895264
    6. 'le' → logprob: -5.818034648895264
    7. ' l' → logprob: -7.193034648895264
    8. '")' → logprob: -7.318034648895264
    9. ' )' → logprob: -7.693034648895264
    10. ' une' → logprob: -7.693034648895264

Token 398: ''écran' (ID: 147901)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9961666464805603
    2. 'console' → logprob: -2.121166706085205
    3. 'erm' → logprob: -2.121166706085205
    4. 'e' → logprob: -2.371166706085205
    5. '()' → logprob: -2.621166706085205
    6. ' terminal' → logprob: -2.621166706085205
    7. '()
' → logprob: -3.621166706085205
    8. ')
' → logprob: -3.746166706085205
    9. 'er' → logprob: -3.871166706085205
    10. ' clavier' → logprob: -4.246166706085205

Token 399: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016072244616225362
    2. '("' → logprob: -6.626607418060303
    3. ')
' → logprob: -8.501606941223145
    4. '()' → logprob: -10.501606941223145
    5. '")' → logprob: -10.876606941223145
    6. '   ' → logprob: -11.376606941223145
    7. ')("' → logprob: -11.501606941223145
    8. '(' → logprob: -13.251606941223145
    9. ' )' → logprob: -13.626606941223145
    10. '())' → logprob: -13.876606941223145

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005143099115230143
    2. 'print' → logprob: -7.875514507293701
    3. ' print' → logprob: -9.125514030456543
    4. '       ' → logprob: -10.625514030456543
    5. '   ' → logprob: -14.625514030456543
    6. '```' → logprob: -15.250514030456543
    7. '	print' → logprob: -15.500514030456543
    8. '    ' → logprob: -16.37551498413086
    9. '  ' → logprob: -17.25051498413086
    10. '
' → logprob: -18.37551498413086

Token 401: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.341219037771225
    2. 'print' (adapté à ' print') → logprob: -1.3412190675735474
    3. ' print' → logprob: -3.591218948364258
    4. '	print' → logprob: -13.216218948364258
    5. '```' → logprob: -13.341218948364258
    6. '       ' → logprob: -14.091218948364258
    7. '   ' → logprob: -14.091218948364258
    8. '  ' → logprob: -16.091218948364258
    9. '    ' → logprob: -16.341218948364258
    10. ' ' → logprob: -16.341218948364258

Token 402: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '('' → logprob: -14.625554084777832
    4. ' ("' → logprob: -16.125553131103516
    5. '("")' → logprob: -17.750553131103516
    6. '()' → logprob: -18.000553131103516
    7. '(
' → logprob: -18.000553131103516
    8. '"' → logprob: -19.000553131103516
    9. '("("' → logprob: -19.125553131103516
    10. '   ' → logprob: -19.875553131103516

Token 403: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. ' Yes' → logprob: -17.5
    3. 'Oui' → logprob: -18.125
    4. 'YES' → logprob: -19.5
    5. 'Ye' → logprob: -19.75
    6. 'No' → logprob: -21.25
    7. 'True' → logprob: -21.625
    8. 'Y' → logprob: -21.75
    9. 'Yeah' → logprob: -22.0
    10. 'Sure' → logprob: -23.0

Token 404: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.843177233240567e-05
    2. ')")' → logprob: -11.250018119812012
    3. ')' → logprob: -12.375018119812012
    4. '")
' → logprob: -13.750018119812012
    5. '")
' → logprob: -17.125019073486328
    6. '"' → logprob: -17.125019073486328
    7. '\")' → logprob: -18.250019073486328
    8. ' ")' → logprob: -18.250019073486328
    9. '”)' → logprob: -18.375019073486328
    10. '}")' → logprob: -18.625019073486328

Token 405: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019312551012262702
    2. ' else' → logprob: -6.251931190490723
    3. '	else' → logprob: -14.251931190490723
    4. ')' → logprob: -14.251931190490723
    5. 'elser' → logprob: -15.001931190490723
    6. '   ' → logprob: -15.501931190490723
    7. '<|end|>' → logprob: -15.501931190490723
    8. '```' → logprob: -15.876931190490723
    9. 'elif' → logprob: -16.12693214416504
    10. '#else' → logprob: -16.25193214416504

Token 406: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006805126089602709
    2. ':
' → logprob: -5.006804943084717
    3. '   ' → logprob: -9.381805419921875
    4. ' :' → logprob: -12.506805419921875
    5. '():' → logprob: -14.506805419921875
    6. ' :
' → logprob: -14.756805419921875
    7. '):' → logprob: -15.006805419921875
    8. ':

' → logprob: -15.881805419921875
    9. ':
' → logprob: -16.131805419921875
    10. '():
' → logprob: -16.381805419921875

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004164114128798246
    2. 'print' → logprob: -5.504164218902588
    3. ' print' → logprob: -9.37916374206543
    4. '   ' → logprob: -14.12916374206543
    5. '	print' → logprob: -14.87916374206543
    6. '       ' → logprob: -16.62916374206543
    7. '    ' → logprob: -17.00416374206543
    8. '   ' → logprob: -17.37916374206543
    9. '```' → logprob: -18.00416374206543
    10. '(print' → logprob: -18.00416374206543

Token 408: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3900134861469269
    2. 'print' → logprob: -1.1400134563446045
    3. ' print' → logprob: -5.765013694763184
    4. '	print' → logprob: -13.765013694763184
    5. '   ' → logprob: -14.390013694763184
    6. '    ' → logprob: -15.890013694763184
    7. '       ' → logprob: -16.015012741088867
    8. '
' → logprob: -16.390012741088867
    9. '.print' → logprob: -16.390012741088867
    10. '    
' → logprob: -16.765012741088867

Token 409: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0642976388335228
    2. 'print' → logprob: -2.814297676086426
    3. ' print' → logprob: -6.064297676086426
    4. '   ' → logprob: -13.689297676086426
    5. '    ' → logprob: -13.814297676086426
    6. '	print' → logprob: -15.189297676086426
    7. '       ' → logprob: -15.814297676086426
    8. '  ' → logprob: -15.939297676086426
    9. ' ' → logprob: -16.81429672241211
    10. '   ' → logprob: -16.93929672241211

Token 410: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4250665307044983
    2. ' print' → logprob: -1.1750664710998535
    3. 'print' → logprob: -3.3000664710998535
    4. '    ' → logprob: -8.175066947937012
    5. '  ' → logprob: -9.300066947937012
    6. ':' → logprob: -9.675066947937012
    7. ' la' → logprob: -10.175066947937012
    8. ' ' → logprob: -10.675066947937012
    9. '   ' → logprob: -10.800066947937012
    10. '   ' → logprob: -11.050066947937012

Token 411: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.053235895931720734
    2. ' print' → logprob: -3.0532360076904297
    3. 'condition' → logprob: -6.05323600769043
    4. ' condition' → logprob: -6.55323600769043
    5. '   ' → logprob: -8.05323600769043
    6. 't' → logprob: -9.05323600769043
    7. ' ' → logprob: -9.17823600769043
    8. '  ' → logprob: -9.30323600769043
    9. ' t' → logprob: -9.80323600769043
    10. ' not' → logprob: -9.92823600769043

Token 412: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0399526357650757
    2. ' print' → logprob: -1.6649526357650757
    3. 'print' → logprob: -1.6649526357650757
    4. ':' → logprob: -2.0399527549743652
    5. 't' → logprob: -2.2899527549743652
    6. ' t' → logprob: -3.4149527549743652
    7. 'else' → logprob: -7.414952754974365
    8. '  ' → logprob: -7.539952754974365
    9. ' not' → logprob: -7.664952754974365
    10. ' est' → logprob: -7.789952754974365

Token 413: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04183434695005417
    2. '>=' → logprob: -3.7918343544006348
    3. ' <' → logprob: -4.041834354400635
    4. '<' → logprob: -7.541834354400635
    5. '   ' → logprob: -9.041833877563477
    6. ' !=' → logprob: -9.166833877563477
    7. ' >' → logprob: -10.666833877563477
    8. ' ' → logprob: -11.166833877563477
    9. '>' → logprob: -11.291833877563477
    10. 'else' → logprob: -11.416833877563477

Token 414: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021001845598221
    2. ' a' → logprob: -2.350209951400757
    3. ' ' → logprob: -12.975210189819336
    4. '   ' → logprob: -15.100210189819336
    5. '"a' → logprob: -15.100210189819336
    6. '	a' → logprob: -15.475210189819336
    7. '  ' → logprob: -16.225210189819336
    8. ' ' → logprob: -16.975210189819336
    9. 'а' → logprob: -16.975210189819336
    10. '(a' → logprob: -17.100210189819336

Token 415: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019682325422763824
    2. 'print' → logprob: -4.64468240737915
    3. ':
' → logprob: -5.14468240737915
    4. '   ' → logprob: -5.64468240737915
    5. ' est' → logprob: -8.519681930541992
    6. ' print' → logprob: -8.894681930541992
    7. 'est' → logprob: -9.894681930541992
    8. '==' → logprob: -10.269681930541992
    9. ',' → logprob: -10.394681930541992
    10. 'n' → logprob: -11.644681930541992

Token 416: ' fa' (ID: 2229)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20144852995872498
    2. 'fa' → logprob: -1.9514485597610474
    3. 'f' → logprob: -3.326448440551758
    4. 'false' → logprob: -5.701448440551758
    5. 'F' → logprob: -7.576448440551758
    6. ' False' → logprob: -8.201448440551758
    7. '   ' → logprob: -8.451448440551758
    8. ' fa' → logprob: -10.451448440551758
    9. 'fas' → logprob: -10.826448440551758
    10. ' falsa' → logprob: -11.076448440551758

Token 417: 'usse' (ID: 32419)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6972975134849548
    2. 'ite' → logprob: -1.4472975730895996
    3. 'ible' → logprob: -1.5722975730895996
    4. 'usse' → logprob: -3.4472975730895996
    5. 'lse' → logprob: -5.1972975730896
    6. 'i' → logprob: -5.5722975730896
    7. 'ute' → logprob: -5.5722975730896
    8. 'ile' → logprob: -5.9472975730896
    9. 'ut' → logprob: -6.3222975730896
    10. 'itse' → logprob: -6.4472975730896

Token 418: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09180706739425659
    2. '   ' → logprob: -2.4668071269989014
    3. ':
' → logprob: -6.091806888580322
    4. ',' → logprob: -7.466806888580322
    5. ' :' → logprob: -11.09180736541748
    6. 'print' → logprob: -11.84180736541748
    7. '):' → logprob: -13.09180736541748
    8. '       ' → logprob: -13.71680736541748
    9. ' ,' → logprob: -13.84180736541748
    10. ':,' → logprob: -14.09180736541748

Token 419: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014358828775584698
    2. 'print' → logprob: -9.250144004821777
    3. ' print' → logprob: -10.000144004821777
    4. '   ' → logprob: -13.500144004821777
    5. '    ' → logprob: -14.750144004821777
    6. '       ' → logprob: -15.500144004821777
    7. '   ' → logprob: -17.37514305114746
    8. '
' → logprob: -17.62514305114746
    9. '  ' → logprob: -18.37514305114746
    10. '```' → logprob: -18.37514305114746

Token 420: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005128794582560658
    2. 'print' → logprob: -8.000513076782227
    3. ' print' → logprob: -9.125513076782227
    4. '   ' → logprob: -9.875513076782227
    5. '    ' → logprob: -11.875513076782227
    6. '   ' → logprob: -12.750513076782227
    7. '  ' → logprob: -13.250513076782227
    8. ' ' → logprob: -13.750513076782227
    9. '       ' → logprob: -14.000513076782227
    10. '    
' → logprob: -14.375513076782227

Token 421: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14731267094612122
    2. '<' → logprob: -2.022312641143799
    3. 'print' → logprob: -5.897312641143799
    4. '   ' → logprob: -6.772312641143799
    5. ' >=' → logprob: -8.022313117980957
    6. ' print' → logprob: -9.272313117980957
    7. '>=' → logprob: -9.522313117980957
    8. '>' → logprob: -10.522313117980957
    9. '<n' → logprob: -10.647313117980957
    10. '<p' → logprob: -10.772313117980957

Token 422: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16022971272468567
    2. ' a' → logprob: -1.9102296829223633
    3. ' ' → logprob: -12.660229682922363
    4. ' ' → logprob: -13.660229682922363
    5. '	a' → logprob: -14.285229682922363
    6. '   ' → logprob: -15.535229682922363
    7. '  ' → logprob: -16.16023063659668
    8. ',' → logprob: -16.53523063659668
    9. 'а' → logprob: -17.03523063659668
    10. '=' → logprob: -17.66023063659668

Token 423: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2872495651245117
    2. ':' → logprob: -1.4122495651245117
    3. ',' → logprob: -5.537249565124512
    4. ':
' → logprob: -6.537249565124512
    5. 'print' → logprob: -8.162249565124512
    6. '):' → logprob: -8.662249565124512
    7. ' :' → logprob: -9.287249565124512
    8. '       ' → logprob: -9.912249565124512
    9. ' ,' → logprob: -10.787249565124512
    10. ')' → logprob: -11.037249565124512

Token 424: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021176543668843806
    2. 'print' → logprob: -8.625211715698242
    3. ' print' → logprob: -10.375211715698242
    4. '   ' → logprob: -14.125211715698242
    5. '       ' → logprob: -16.000211715698242
    6. '    ' → logprob: -16.500211715698242
    7. '
' → logprob: -17.500211715698242
    8. '	print' → logprob: -18.000211715698242
    9. '   ' → logprob: -18.000211715698242
    10. '```' → logprob: -18.125211715698242

Token 425: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2461516261100769
    2. 'print' → logprob: -1.8711516857147217
    3. ' print' → logprob: -2.7461516857147217
    4. '    ' → logprob: -10.6211519241333
    5. '	print' → logprob: -10.9961519241333
    6. '   ' → logprob: -11.4961519241333
    7. '  ' → logprob: -11.7461519241333
    8. ' ' → logprob: -12.4961519241333
    9. '       ' → logprob: -12.8711519241333
    10. '.print' → logprob: -13.2461519241333

Token 426: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.017749737948179245
    2. '"No' → logprob: -4.142749786376953
    3. '"' → logprob: -6.392749786376953
    4. '(' → logprob: -10.892749786376953
    5. ' "' → logprob: -11.142749786376953
    6. ' ("' → logprob: -12.767749786376953
    7. '   ' → logprob: -13.517749786376953
    8. '"You' → logprob: -13.517749786376953
    9. ' ' → logprob: -14.517749786376953
    10. '"O' → logprob: -15.392749786376953

Token 427: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.018151935189962387
    2. '"No' → logprob: -4.018151760101318
    3. '"' → logprob: -13.518152236938477
    4. ' No' → logprob: -14.393152236938477
    5. '“No' → logprob: -17.518152236938477
    6. 'NO' → logprob: -18.643152236938477
    7. '_No' → logprob: -18.893152236938477
    8. ''' → logprob: -19.393152236938477
    9. '"N' → logprob: -19.893152236938477
    10. '.No' → logprob: -19.893152236938477

Token 428: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002515969565138221
    2. '")
' → logprob: -6.00251579284668
    3. '")
' → logprob: -10.50251579284668
    4. ')' → logprob: -12.62751579284668
    5. '()' → logprob: -12.87751579284668
    6. '   ' → logprob: -13.00251579284668
    7. '("' → logprob: -13.12751579284668
    8. '").' → logprob: -13.62751579284668
    9. '")

' → logprob: -14.75251579284668
    10. ')")' → logprob: -14.75251579284668

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.061054359131958e-06
    2. 'print' → logprob: -11.750007629394531
    3. ' print' → logprob: -17.50000762939453
    4. '   ' → logprob: -17.62500762939453
    5. '```' → logprob: -18.37500762939453
    6. '       ' → logprob: -19.00000762939453
    7. '	print' → logprob: -20.00000762939453
    8. '    ' → logprob: -21.87500762939453
    9. '  ' → logprob: -22.12500762939453
    10. '    
' → logprob: -22.12500762939453

Token 430: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005329693201929331
    2. 'print' (adapté à ' print') → logprob: -5.255329608917236
    3. ' print' → logprob: -9.255330085754395
    4. '       ' → logprob: -16.130329132080078
    5. '	print' → logprob: -16.130329132080078
    6. '   ' → logprob: -16.755329132080078
    7. '```' → logprob: -17.630329132080078
    8. '    ' → logprob: -18.380329132080078
    9. '  ' → logprob: -19.255329132080078
    10. ' ' → logprob: -20.255329132080078

Token 431: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' ("' → logprob: -20.5
    4. '()' → logprob: -20.5
    5. '('' → logprob: -20.5
    6. '("")' → logprob: -20.75
    7. '(
' → logprob: -22.625
    8. ')("' → logprob: -22.75
    9. '(("' → logprob: -23.125
    10. '("""' → logprob: -23.375

Token 432: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.320199877838604e-07
    2. '"No' → logprob: -14.75
    3. ' No' → logprob: -19.875
    4. '"' → logprob: -22.875
    5. '_No' → logprob: -25.25
    6. '>No' → logprob: -25.5
    7. '.No' → logprob: -25.625
    8. 'N' → logprob: -25.625
    9. '")' → logprob: -26.125
    10. '“No' → logprob: -26.5

Token 433: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.15441757265944e-05
    2. ')")' → logprob: -10.500031471252441
    3. ')' → logprob: -12.500031471252441
    4. '()' → logprob: -16.625032424926758
    5. '")
' → logprob: -16.875032424926758
    6. '"' → logprob: -17.500032424926758
    7. '}")' → logprob: -18.875032424926758
    8. '("' → logprob: -18.875032424926758
    9. ')"' → logprob: -19.875032424926758
    10. '”)' → logprob: -20.125032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 431
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 23.43%
Précision adaptée (1ère position): 23.43%
Précision (top 10): 57.77%
================================================================================
