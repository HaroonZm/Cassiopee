================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np

# Systematic input function names
input_buffer = sys.stdin.buffer.read
input_line = sys.stdin.buffer.readline
input_lines = sys.stdin.buffer.readlines

# Systematic constants
MOD_CONST = 998244353

# Parse inputs with systematic variable names
input_values = input_buffer().split()
param_n = int(input_values[0])
param_x = int(input_values[1])

# Systematic function for cumulative product with modulus
def cumulative_product_mod(arr, mod_const):
    arr_length = len(arr)
    block_size = int(arr_length ** 0.5 + 1)
    arr_reshaped = np.resize(arr, block_size ** 2).reshape(block_size, block_size)
    for col in range(1, block_size):
        arr_reshaped[:, col] *= arr_reshaped[:, col - 1]
        arr_reshaped[:, col] %= mod_const
    for row in range(1, block_size):
        arr_reshaped[row] *= arr_reshaped[row - 1, -1]
        arr_reshaped[row] %= mod_const
    return arr_reshaped.ravel()[:arr_length]

# Systematic function for factorial arrays and inverses
def factorial_and_inverse_array(upper_bound, mod_const):
    arr_factorial = np.arange(upper_bound, dtype=np.int64)
    arr_factorial[0] = 1
    factorial_array = cumulative_product_mod(arr_factorial, mod_const)
    arr_inverse = np.arange(upper_bound, 0, -1, dtype=np.int64)
    arr_inverse[0] = pow(int(factorial_array[-1]), mod_const - 2, mod_const)
    factorial_inverse_array = cumulative_product_mod(arr_inverse, mod_const)[::-1]
    return factorial_array, factorial_inverse_array

# Systematic precomputation for factorials and combinations
upper_for_precompute = param_n + param_n + 100
factorial_arr, factorial_inv_arr = factorial_and_inverse_array(upper_for_precompute, MOD_CONST)
combinations_n = factorial_arr[param_n] * factorial_inv_arr[:param_n + 1] % MOD_CONST * factorial_inv_arr[param_n::-1] % MOD_CONST

# Systematic polynomial power function with modulus restriction
def polynomial_sum_below_x(length_n, limit_x):
    def poly_mult(poly_a, poly_b):
        deg_a = len(poly_a) - 1
        deg_b = len(poly_b) - 1
        if deg_a < deg_b:
            deg_a, deg_b = deg_b, deg_a
            poly_a, poly_b = poly_b, poly_a
        result = np.zeros(deg_a + deg_b + 1, np.int64)
        for idx in range(deg_b + 1):
            result[idx:idx + deg_a + 1] += poly_b[idx] * poly_a % MOD_CONST
        result %= MOD_CONST
        return result[:limit_x]
    def poly_power(poly, exponent):
        if exponent == 0:
            return np.array([1], dtype=np.int64)
        half = poly_power(poly, exponent // 2)
        squared = poly_mult(half, half)
        return poly_mult(poly, squared) if exponent & 1 else squared
    base_poly = np.array([1, 1, 1], np.int64)
    raised_poly = poly_power(base_poly, length_n)
    return raised_poly.sum() % MOD_CONST

# Systematic function for type 2 sum
def polynomial_type2_sum(length_n, limit_x):
    acc_array = np.zeros(length_n + 1, np.int64)
    for loop_n in range(limit_x):
        m_val = (limit_x - 1) - (2 + 2 * loop_n)
        if m_val < 0:
            break
        two_arr = np.arange(m_val // 2 + 1, dtype=np.int64)
        one_arr = m_val - 2 * two_arr
        coefficient = factorial_arr[one_arr + two_arr] * factorial_inv_arr[one_arr] % MOD_CONST * factorial_inv_arr[two_arr] % MOD_CONST
        rest_term = length_n - one_arr - two_arr - (2 * loop_n + 2)
        valid_index = rest_term >= 0
        rest_term = rest_term[valid_index]
        coef_valid = coefficient[valid_index]
        acc_array[rest_term] += coef_valid
    acc_array %= MOD_CONST
    return (acc_array * combinations_n % MOD_CONST).sum() % MOD_CONST

# Systematic function for type 3 sum
def polynomial_type3_sum(length_n, limit_x):
    if limit_x % 2 == 0:
        return 0
    if limit_x > length_n:
        return 0
    valid_count = length_n - limit_x + 1
    return combinations_n[:valid_count].sum() % MOD_CONST

# Systematic main calculation and output
result_total = (
    polynomial_sum_below_x(param_n, param_x) +
    polynomial_type2_sum(param_n, param_x) +
    polynomial_type3_sum(param_n, param_x)
) % MOD_CONST
print(result_total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.07030529528856277
    2. '<|end|>' → logprob: -2.945305347442627
    3. '.' → logprob: -4.695305347442627
    4. ' ' → logprob: -5.570305347442627
    5. 'as' → logprob: -6.570305347442627
    6. ' .' → logprob: -7.695305347442627
    7. '<|end|>' → logprob: -8.320304870605469
    8. '.as' → logprob: -9.445304870605469
    9. '.ndarray' → logprob: -10.070304870605469
    10. '[' → logprob: -10.570304870605469

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0004699954588431865
    2. 'np' → logprob: -8.250470161437988
    3. ' ' → logprob: -8.500470161437988
    4. ' ' → logprob: -12.500470161437988
    5. ' numpy' → logprob: -14.125470161437988
    6. ' as' → logprob: -15.625470161437988
    7. ' ndarray' → logprob: -15.625470161437988
    8. ' nd' → logprob: -16.125469207763672
    9. ' n' → logprob: -16.625469207763672
    10. '_np' → logprob: -17.125469207763672

Token 7: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6048529148101807
    2. '
' → logprob: -2.1048529148101807
    3. '```' → logprob: -2.2298529148101807
    4. '\n' → logprob: -2.6048529148101807
    5. '<|end|>' → logprob: -3.3548529148101807
    6. '.' → logprob: -3.4798529148101807
    7. '\' → logprob: -3.7298529148101807
    8. 'as' → logprob: -4.104852676391602
    9. '[' → logprob: -4.354852676391602
    10. 'newline' → logprob: -4.604852676391602

Token 8: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7014358639717102
    2. '```' → logprob: -1.9514358043670654
    3. 'import' → logprob: -2.0764358043670654
    4. '#' → logprob: -2.3264358043670654
    5. '[' → logprob: -3.0764358043670654
    6. '<|end|>' → logprob: -3.9514358043670654
    7. 'as' → logprob: -4.0764360427856445
    8. '\' → logprob: -4.2014360427856445
    9. '\n' → logprob: -4.4514360427856445
    10. '
' → logprob: -4.7014360427856445

Token 9: ' System' (ID: 1219)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19105352461338043
    2. ' #' → logprob: -2.816053628921509
    3. 'def' → logprob: -3.441053628921509
    4. ' ' → logprob: -3.816053628921509
    5. 'data' → logprob: -4.69105339050293
    6. 'array' → logprob: -4.69105339050293
    7. 'from' → logprob: -5.06605339050293
    8. 'random' → logprob: -5.44105339050293
    9. ' array' → logprob: -5.81605339050293
    10. '.' → logprob: -5.81605339050293

Token 10: 'atic' (ID: 2351)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002637199067976326
    2. 'import' → logprob: -9.625264167785645
    3. '.exit' → logprob: -9.625264167785645
    4. '.
' → logprob: -9.875264167785645
    5. ' .' → logprob: -11.250264167785645
    6. '.\' → logprob: -11.500264167785645
    7. '.import' → logprob: -11.625264167785645
    8. '\' → logprob: -11.750264167785645
    9. '.`' → logprob: -12.000264167785645
    10. '.

' → logprob: -12.375264167785645

Token 11: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009772262535989285
    2. '.' → logprob: -5.009772300720215
    3. ' ' → logprob: -7.759772300720215
    4. '_sampling' → logprob: -8.259772300720215
    5. '_analysis' → logprob: -8.384772300720215
    6. '_s' → logprob: -8.509772300720215
    7. 's' → logprob: -8.509772300720215
    8. 'a' → logprob: -8.759772300720215
    9. '_a' → logprob: -9.134772300720215
    10. 'sampling' → logprob: -9.259772300720215

Token 12: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37219375371932983
    2. '.' → logprob: -2.4971938133239746
    3. ':' → logprob: -3.1221938133239746
    4. 's' → logprob: -3.2471938133239746
    5. '(' → logprob: -3.3721938133239746
    6. 'def' → logprob: -3.6221938133239746
    7. 'data' → logprob: -3.6221938133239746
    8. '#' → logprob: -3.9971938133239746
    9. '=' → logprob: -4.997193813323975
    10. ',' → logprob: -5.622193813323975

Token 13: ' names' (ID: 8747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021688752167392522
    2. 'input' → logprob: -9.750216484069824
    3. 'de' → logprob: -10.250216484069824
    4. '```' → logprob: -10.250216484069824
    5. 'd' → logprob: -10.375216484069824
    6. '_input' → logprob: -11.500216484069824
    7. '\' → logprob: -12.125216484069824
    8. '(
' → logprob: -12.250216484069824
    9. '_def' → logprob: -12.250216484069824
    10. ' def' → logprob: -12.250216484069824

Token 14: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13091206550598145
    2. '_' → logprob: -3.0059120655059814
    3. 'input' → logprob: -3.2559120655059814
    4. '_input' → logprob: -4.255911827087402
    5. 's' → logprob: -5.380911827087402
    6. '=' → logprob: -5.505911827087402
    7. ' =' → logprob: -5.630911827087402
    8. '(' → logprob: -6.505911827087402
    9. '_def' → logprob: -6.880911827087402
    10. '__' → logprob: -7.130911827087402

Token 15: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.061347320675849915
    2. 'input' → logprob: -3.686347246170044
    3. '=' → logprob: -3.936347246170044
    4. ' =' → logprob: -5.436347484588623
    5. '_input' → logprob: -5.811347484588623
    6. '```' → logprob: -6.061347484588623
    7. '_' → logprob: -6.686347484588623
    8. '`' → logprob: -7.186347484588623
    9. ':' → logprob: -7.686347484588623
    10. '=input' → logprob: -7.811347484588623

Token 16: '_buffer' (ID: 17892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2733150124549866
    2. '()' → logprob: -1.5233149528503418
    3. '_' → logprob: -4.398314952850342
    4. 's' → logprob: -5.523314952850342
    5. '.' → logprob: -7.273314952850342
    6. '_s' → logprob: -7.648314952850342
    7. '('' → logprob: -8.2733154296875
    8. '("")' → logprob: -8.2733154296875
    9. '_func' → logprob: -8.3983154296875
    10. ' ' → logprob: -8.5233154296875

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8468255400657654
    2. '_' → logprob: -1.0968255996704102
    3. '=' → logprob: -2.09682559967041
    4. 's' → logprob: -2.59682559967041
    5. '.' → logprob: -4.59682559967041
    6. '()' → logprob: -4.97182559967041
    7. '[:]' → logprob: -5.47182559967041
    8. '[' → logprob: -5.72182559967041
    9. '_index' → logprob: -5.97182559967041
    10. '_name' → logprob: -6.34682559967041

Token 18: ' sys' (ID: 12228)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6922963261604309
    2. ' []' → logprob: -1.3172962665557861
    3. '""' → logprob: -1.6922962665557861
    4. '''' → logprob: -3.692296266555786
    5. ' ""' → logprob: -4.692296504974365
    6. 'sys' → logprob: -5.192296504974365
    7. ' ''' → logprob: -5.567296504974365
    8. ' sys' → logprob: -6.317296504974365
    9. 'b' → logprob: -7.692296504974365
    10. '"' → logprob: -7.942296504974365

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.08328964561223984
    2. '.' → logprob: -2.583289623260498
    3. '.stdout' → logprob: -5.958289623260498
    4. '.argv' → logprob: -6.833289623260498
    5. '.readline' → logprob: -8.333290100097656
    6. '.std' → logprob: -8.458290100097656
    7. ' .' → logprob: -8.833290100097656
    8. '.input' → logprob: -10.333290100097656
    9. '.read' → logprob: -10.583290100097656
    10. '._' → logprob: -10.958290100097656

Token 20: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.14752797782421112
    2. '.read' → logprob: -2.2725279331207275
    3. '.' → logprob: -3.3975279331207275
    4. '.readlines' → logprob: -7.522528171539307
    5. 'read' → logprob: -9.647527694702148
    6. '```' → logprob: -11.397527694702148
    7. '.Read' → logprob: -11.522527694702148
    8. '.buffer' → logprob: -11.772527694702148
    9. '.write' → logprob: -12.272527694702148
    10. '_read' → logprob: -12.647527694702148

Token 21: '.read' (ID: 7211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5205675363540649
    2. '.readline' → logprob: -1.020567536354065
    3. '.read' → logprob: -3.1455674171447754
    4. 'read' → logprob: -7.145567417144775
    5. '_' → logprob: -8.020567893981934
    6. '_read' → logprob: -9.145567893981934
    7. '.readlines' → logprob: -9.145567893981934
    8. '<|end|>' → logprob: -9.270567893981934
    9. '```' → logprob: -9.270567893981934
    10. '.
' → logprob: -9.645567893981934

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38730013370513916
    2. '(' → logprob: -1.1373001337051392
    3. '(
' → logprob: -8.762300491333008
    4. '().' → logprob: -9.637300491333008
    5. '(

' → logprob: -10.387300491333008
    6. ')' → logprob: -10.637300491333008
    7. '_' → logprob: -10.887300491333008
    8. ' ()' → logprob: -11.262300491333008
    9. ' ' → logprob: -11.512300491333008
    10. '()
' → logprob: -11.887300491333008

Token 23: 'input' (ID: 2586)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00423771608620882
    2. '(' → logprob: -5.629237651824951
    3. '()
' → logprob: -8.37923812866211
    4. '()

' → logprob: -8.87923812866211
    5. '().' → logprob: -8.87923812866211
    6. '()\' → logprob: -9.75423812866211
    7. '(
' → logprob: -11.37923812866211
    8. 'def' → logprob: -11.75423812866211
    9. '()`' → logprob: -12.00423812866211
    10. '```' → logprob: -12.00423812866211

Token 24: '_line' (ID: 14418)
  Prédit: '_buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buffer' → logprob: -0.7743174433708191
    2. '()' → logprob: -1.0243175029754639
    3. '_' → logprob: -2.274317502975464
    4. '(' → logprob: -3.774317502975464
    5. '_line' → logprob: -3.774317502975464
    6. '=' → logprob: -5.274317264556885
    7. ' =' → logprob: -5.399317264556885
    8. '```' → logprob: -5.899317264556885
    9. '_buf' → logprob: -6.024317264556885
    10. '_token' → logprob: -6.274317264556885

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3169318735599518
    2. ' =' → logprob: -2.066931962966919
    3. '()' → logprob: -2.316931962966919
    4. ')' → logprob: -3.566931962966919
    5. 's' → logprob: -4.81693172454834
    6. '(' → logprob: -5.56693172454834
    7. '_line' → logprob: -6.56693172454834
    8. '_' → logprob: -6.94193172454834
    9. 'line' → logprob: -7.19193172454834
    10. '.' → logprob: -7.31693172454834

Token 26: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.35778573155403137
    2. 'sys' → logprob: -1.232785701751709
    3. '()' → logprob: -5.107785701751709
    4. '(sys' → logprob: -7.232785701751709
    5. 'line' → logprob: -7.482785701751709
    6. '().' → logprob: -7.607785701751709
    7. 'input' → logprob: -7.607785701751709
    8. ' ()' → logprob: -7.982785701751709
    9. '=sys' → logprob: -7.982785701751709
    10. ' input' → logprob: -9.232786178588867

Token 27: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.010572096332907677
    2. '.stdout' → logprob: -5.0105719566345215
    3. '.readline' → logprob: -6.2605719566345215
    4. '.' → logprob: -6.3855719566345215
    5. '.stderr' → logprob: -9.51057243347168
    6. 'stdin' → logprob: -9.88557243347168
    7. '.input' → logprob: -10.51057243347168
    8. '.std' → logprob: -10.63557243347168
    9. '.argv' → logprob: -11.01057243347168
    10. '.py' → logprob: -11.88557243347168

Token 28: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002630234695971012
    2. '.' → logprob: -6.002630233764648
    3. '<|end|>' → logprob: -9.127630233764648
    4. '.read' → logprob: -10.752630233764648
    5. ' .' → logprob: -11.877630233764648
    6. ' readline' → logprob: -12.127630233764648
    7. '.readlines' → logprob: -12.502630233764648
    8. '<|end|>' → logprob: -13.002630233764648
    9. 'read' → logprob: -13.377630233764648
    10. '.Read' → logprob: -13.377630233764648

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001858982432167977
    2. '.read' → logprob: -9.0001859664917
    3. ' readline' → logprob: -10.1251859664917
    4. 'read' → logprob: -11.1251859664917
    5. '.' → logprob: -12.5001859664917
    6. '.readlines' → logprob: -13.1251859664917
    7. 'line' → logprob: -14.0001859664917
    8. '1' → logprob: -15.6251859664917
    9. '_read' → logprob: -16.125185012817383
    10. '```' → logprob: -16.125185012817383

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09499527513980865
    2. '()' → logprob: -2.9699952602386475
    3. 'input' → logprob: -4.219995498657227
    4. '\n' → logprob: -4.969995498657227
    5. 'def' → logprob: -5.344995498657227
    6. '

' → logprob: -6.094995498657227
    7. '<|end|>' → logprob: -6.219995498657227
    8. '_input' → logprob: -6.969995498657227
    9. '#' → logprob: -7.219995498657227
    10. 'newline' → logprob: -7.219995498657227

Token 31: 'input' (ID: 2586)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6340855956077576
    2. 'input' → logprob: -1.8840856552124023
    3. 'def' → logprob: -2.1340856552124023
    4. '#' → logprob: -2.7590856552124023
    5. '
' → logprob: -2.8840856552124023
    6. '(' → logprob: -4.259085655212402
    7. '=' → logprob: -4.759085655212402
    8. '_input' → logprob: -4.884085655212402
    9. '\n' → logprob: -5.134085655212402
    10. 'import' → logprob: -5.259085655212402

Token 32: '_lines' (ID: 42980)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04126735404133797
    2. '_raw' → logprob: -4.791267395019531
    3. '_data' → logprob: -5.166267395019531
    4. '_str' → logprob: -5.291267395019531
    5. '_bytes' → logprob: -5.416267395019531
    6. '_line' → logprob: -5.416267395019531
    7. '_buffer' → logprob: -5.791267395019531
    8. '_s' → logprob: -6.166267395019531
    9. '_token' → logprob: -6.916267395019531
    10. ' =' → logprob: -7.416267395019531

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.352212518453598
    2. '=' → logprob: -1.2272125482559204
    3. 's' → logprob: -6.102212429046631
    4. ' ' → logprob: -7.102212429046631
    5. '_' → logprob: -7.352212429046631
    6. ')' → logprob: -11.227212905883789
    7. '<|end|>' → logprob: -11.852212905883789
    8. '_=' → logprob: -11.977212905883789
    9. '=[]' → logprob: -12.102212905883789
    10. '_buffer' → logprob: -12.852212905883789

Token 34: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0804612934589386
    2. 'sys' → logprob: -2.580461263656616
    3. ' []' → logprob: -7.455461502075195
    4. ' ' → logprob: -7.955461502075195
    5. '(sys' → logprob: -8.705461502075195
    6. '[]' → logprob: -9.080461502075195
    7. '=sys' → logprob: -9.830461502075195
    8. 'b' → logprob: -10.080461502075195
    9. 'list' → logprob: -10.330461502075195
    10. ' iter' → logprob: -10.455461502075195

Token 35: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.20063313841819763
    2. '.' → logprob: -1.82563316822052
    3. '.stdout' → logprob: -3.9506330490112305
    4. '.readline' → logprob: -8.32563304901123
    5. '.std' → logprob: -8.70063304901123
    6. 'stdin' → logprob: -8.70063304901123
    7. '.stderr' → logprob: -8.82563304901123
    8. ' .' → logprob: -8.95063304901123
    9. '.argv' → logprob: -9.20063304901123
    10. '.py' → logprob: -10.45063304901123

Token 36: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02392323687672615
    2. '.readline' → logprob: -3.77392315864563
    3. '.readlines' → logprob: -7.898923397064209
    4. '.read' → logprob: -8.64892292022705
    5. '.buffer' → logprob: -10.39892292022705
    6. '<|end|>' → logprob: -11.27392292022705
    7. '```' → logprob: -11.64892292022705
    8. '.
' → logprob: -11.64892292022705
    9. '.

' → logprob: -11.77392292022705
    10. '.`' → logprob: -12.02392292022705

Token 37: '.readlines' (ID: 92237)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0010662743588909507
    2. '.readlines' → logprob: -7.001066207885742
    3. 'lines' → logprob: -9.001066207885742
    4. 're' → logprob: -11.626066207885742
    5. ' read' → logprob: -12.126066207885742
    6. 'split' → logprob: -12.751066207885742
    7. '.readline' → logprob: -13.001066207885742
    8. '.read' → logprob: -13.751066207885742
    9. '_read' → logprob: -13.751066207885742
    10. 'iter' → logprob: -13.876066207885742

Token 38: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.64454185962677
    2. '
' → logprob: -1.64454185962677
    3. '.' → logprob: -1.89454185962677
    4. '\' → logprob: -2.1445417404174805
    5. '\n' → logprob: -2.7695417404174805
    6. '<|end|>' → logprob: -2.7695417404174805
    7. 'newline' → logprob: -3.1445417404174805
    8. '```' → logprob: -3.3945417404174805
    9. '(' → logprob: -3.6445417404174805
    10. '' → logprob: -3.7695417404174805

Token 39: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8137596249580383
    2. '#' → logprob: -1.1887595653533936
    3. 'def' → logprob: -2.6887595653533936
    4. '\' → logprob: -3.1887595653533936
    5. '\n' → logprob: -3.3137595653533936
    6. '(' → logprob: -4.063759803771973
    7. 'n' → logprob: -4.063759803771973
    8. 'd' → logprob: -4.313759803771973
    9. '' → logprob: -4.688759803771973
    10. 'a' → logprob: -4.938759803771973

Token 40: ' System' (ID: 1219)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29591885209083557
    2. 'def' → logprob: -2.1709189414978027
    3. '
' → logprob: -3.4209189414978027
    4. 'n' → logprob: -4.170918941497803
    5. '<|end|>' → logprob: -4.295918941497803
    6. '```' → logprob: -4.420918941497803
    7. '<|end|>' → logprob: -4.670918941497803
    8. ' ' → logprob: -4.670918941497803
    9. 'newline' → logprob: -5.170918941497803
    10. 'input' → logprob: -5.295918941497803

Token 41: 'atic' (ID: 2351)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6751127243041992
    2. '_' → logprob: -0.9251127243041992
    3. '#' → logprob: -4.175112724304199
    4. '_buffer' → logprob: -4.300112724304199
    5. '=' → logprob: -5.050112724304199
    6. 'def' → logprob: -5.175112724304199
    7. '<|end|>' → logprob: -5.175112724304199
    8. '.stdin' → logprob: -5.300112724304199
    9. '.readline' → logprob: -5.300112724304199
    10. '_input' → logprob: -5.425112724304199

Token 42: ' constants' (ID: 38252)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.49087050557136536
    2. '_' → logprob: -0.990870475769043
    3. ' ' → logprob: -5.115870475769043
    4. ' input' → logprob: -5.740870475769043
    5. 'def' → logprob: -6.615870475769043
    6. '_output' → logprob: -7.115870475769043
    7. ' def' → logprob: -7.115870475769043
    8. '_inputs' → logprob: -7.115870475769043
    9. 'input' → logprob: -7.240870475769043
    10. '_array' → logprob: -7.865870475769043

Token 43: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.129185438156128
    2. '_' → logprob: -1.754185438156128
    3. '\' → logprob: -2.254185438156128
    4. '_MAX' → logprob: -2.504185438156128
    5. 'MAX' → logprob: -3.254185438156128
    6. '`' → logprob: -3.754185438156128
    7. ' =' → logprob: -3.754185438156128
    8. '\n' → logprob: -3.879185438156128
    9. 'EMPTY' → logprob: -3.879185438156128
    10. 'E' → logprob: -4.254185676574707

Token 44: 'MOD' (ID: 52135)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.8758717775344849
    2. 'BUFFER' → logprob: -1.7508717775344849
    3. 'PI' → logprob: -2.6258716583251953
    4. 'INT' → logprob: -3.1258716583251953
    5. 'import' → logprob: -3.3758716583251953
    6. '```' → logprob: -3.5008716583251953
    7. 'EOF' → logprob: -3.8758716583251953
    8. 'NP' → logprob: -4.125871658325195
    9. 'DATA' → logprob: -4.500871658325195
    10. 'E' → logprob: -4.500871658325195

Token 45: '_CONST' (ID: 91635)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007819432765245438
    2. '=' → logprob: -4.882819652557373
    3. ' ' → logprob: -8.507819175720215
    4. ' =
' → logprob: -12.257819175720215
    5. '  ' → logprob: -13.007819175720215
    6. '_' → logprob: -13.382819175720215
    7. ',' → logprob: -13.632819175720215
    8. ' ,' → logprob: -14.507819175720215
    9. ' =)' → logprob: -15.382819175720215
    10. '_SPACE' → logprob: -15.632819175720215

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038089800626039505
    2. '=' → logprob: -3.2880897521972656
    3. ' ' → logprob: -10.038089752197266
    4. '_' → logprob: -13.288089752197266
    5. '  ' → logprob: -14.038089752197266
    6. ',' → logprob: -14.288089752197266
    7. ' =
' → logprob: -15.663089752197266
    8. ' ' → logprob: -15.913089752197266
    9. '1' → logprob: -16.038089752197266
    10. '```' → logprob: -16.413089752197266

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5797478556632996
    2. '100' → logprob: -1.4547479152679443
    3. '10' → logprob: -1.5797479152679443
    4. '1' → logprob: -7.704747676849365
    5. '998' → logprob: -11.204748153686523
    6. 'int' → logprob: -12.579748153686523
    7. ' (' → logprob: -13.204748153686523
    8. ' int' → logprob: -13.829748153686523
    9. '2' → logprob: -14.329748153686523
    10. '```' → logprob: -14.579748153686523

Token 48: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6947005391120911
    2. '100' → logprob: -0.6947005391120911
    3. '1' → logprob: -6.694700717926025
    4. '998' → logprob: -8.444700241088867
    5. ' ' → logprob: -9.319700241088867
    6. 'int' → logprob: -12.194700241088867
    7. '(' → logprob: -13.194700241088867
    8. '2' → logprob: -14.319700241088867
    9. '123' → logprob: -14.319700241088867
    10. '109' → logprob: -14.569700241088867

Token 49: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.5048530030981055e-06
    2. '247' → logprob: -13.750001907348633
    3. '457' → logprob: -16.000001907348633
    4. '444' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. '_' → logprob: -17.000001907348633
    7. '243' → logprob: -17.000001907348633
    8. '447' → logprob: -17.375001907348633
    9. '344' → logprob: -18.250001907348633
    10. '24' → logprob: -18.375001907348633

Token 50: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0001398929744027555
    2. '853' → logprob: -8.875140190124512
    3. '```' → logprob: -17.875139236450195
    4. '857' → logprob: -18.125139236450195
    5. '3' → logprob: -18.375139236450195
    6. '352' → logprob: -18.625139236450195
    7. '753' → logprob: -18.750139236450195
    8. '357' → logprob: -18.875139236450195
    9. '653' → logprob: -19.750139236450195
    10. '7' → logprob: -20.375139236450195

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5702888369560242
    2. '#' → logprob: -1.695288896560669
    3. '<|end|>' → logprob: -1.945288896560669
    4. '\n' → logprob: -3.195288896560669
    5. '' → logprob: -3.820288896560669
    6. '```' → logprob: -4.19528865814209
    7. '\' → logprob: -4.94528865814209
    8. '_' → logprob: -5.19528865814209
    9. '<|end|>' → logprob: -5.82028865814209
    10. ' 
' → logprob: -5.94528865814209

Token 52: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20245788991451263
    2. '#' → logprob: -2.827457904815674
    3. '\' → logprob: -2.952457904815674
    4. '
' → logprob: -3.202457904815674
    5. '\n' → logprob: -4.202457904815674
    6. 'd' → logprob: -5.452457904815674
    7. 'n' → logprob: -5.952457904815674
    8. 'a' → logprob: -6.202457904815674
    9. '

' → logprob: -6.577457904815674
    10. '```' → logprob: -6.702457904815674

Token 53: ' Parse' (ID: 26701)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015504224225878716
    2. '#' → logprob: -4.640504360198975
    3. ' def' → logprob: -5.765504360198975
    4. 'class' → logprob: -6.515504360198975
    5. 'import' → logprob: -8.265503883361816
    6. 'data' → logprob: -8.640503883361816
    7. ' ' → logprob: -8.765503883361816
    8. ' #' → logprob: -8.890503883361816
    9. '\' → logprob: -9.390503883361816
    10. 'a' → logprob: -10.265503883361816

Token 54: ' inputs' (ID: 21963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9861468076705933
    2. 'input' → logprob: -1.4861468076705933
    3. '_' → logprob: -1.9861468076705933
    4. 'data' → logprob: -2.486146926879883
    5. '_input' → logprob: -2.986146926879883
    6. '_line' → logprob: -3.486146926879883
    7. ' input' → logprob: -3.736146926879883
    8. '(input' → logprob: -4.861146926879883
    9. ' the' → logprob: -5.236146926879883
    10. '_data' → logprob: -5.236146926879883

Token 55: ' with' (ID: 483)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.8104163408279419
    2. '(' → logprob: -1.435416340827942
    3. '()' → logprob: -2.5604162216186523
    4. 'n' → logprob: -2.8104162216186523
    5. 'input' → logprob: -3.0604162216186523
    6. '(n' → logprob: -3.3104162216186523
    7. '\n' → logprob: -3.5604162216186523
    8. ':' → logprob: -4.435416221618652
    9. '\' → logprob: -4.810416221618652
    10. '=' → logprob: -5.310416221618652

Token 56: ' systematic' (ID: 62813)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8199718594551086
    2. 'input' → logprob: -1.5699717998504639
    3. 'lambda' → logprob: -2.444971799850464
    4. 'np' → logprob: -2.694971799850464
    5. ' input' → logprob: -2.819971799850464
    6. ' lambda' → logprob: -3.569971799850464
    7. ' np' → logprob: -3.819971799850464
    8. ' int' → logprob: -4.069972038269043
    9. '()' → logprob: -4.819972038269043
    10. 'map' → logprob: -5.069972038269043

Token 57: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25763046741485596
    2. 'split' → logprob: -2.8826303482055664
    3. '_input' → logprob: -3.6326303482055664
    4. 'input' → logprob: -4.132630348205566
    5. 'def' → logprob: -4.257630348205566
    6. ' splitting' → logprob: -4.382630348205566
    7. '()' → logprob: -4.507630348205566
    8. '_token' → logprob: -4.507630348205566
    9. ' =' → logprob: -4.757630348205566
    10. '(' → logprob: -4.757630348205566

Token 58: ' names' (ID: 8747)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4731858968734741
    2. ' =' → logprob: -2.0981860160827637
    3. '_names' → logprob: -2.2231860160827637
    4. '=' → logprob: -2.7231860160827637
    5. '_' → logprob: -3.5981860160827637
    6. 'names' → logprob: -3.7231860160827637
    7. '_name' → logprob: -3.8481860160827637
    8. ' names' → logprob: -6.348186016082764
    9. 'name' → logprob: -6.473186016082764
    10. ' assignment' → logprob: -7.223186016082764

Token 59: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5061986446380615
    2. '
' → logprob: -1.6311986446380615
    3. '\' → logprob: -2.0061986446380615
    4. 'input' → logprob: -4.381198883056641
    5. '```' → logprob: -4.631198883056641
    6. 'a' → logprob: -4.881198883056641
    7. ':' → logprob: -4.881198883056641
    8. 's' → logprob: -5.006198883056641
    9. 'newline' → logprob: -5.631198883056641
    10. 'n' → logprob: -5.756198883056641

Token 60: 'input' (ID: 2586)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7942715883255005
    2. 'a' → logprob: -1.4192715883255005
    3. 'n' → logprob: -2.044271469116211
    4. '\n' → logprob: -2.669271469116211
    5. '\' → logprob: -3.169271469116211
    6. 'x' → logprob: -3.919271469116211
    7. 'input' → logprob: -4.294271469116211
    8. '```' → logprob: -5.419271469116211
    9. 'A' → logprob: -5.669271469116211
    10. 'num' → logprob: -5.669271469116211

Token 61: '_values' (ID: 20393)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2659936249256134
    2. '_' → logprob: -1.640993595123291
    3. '_data' → logprob: -3.765993595123291
    4. '_buffer' → logprob: -4.765993595123291
    5. '_str' → logprob: -6.015993595123291
    6. '_lines' → logprob: -6.015993595123291
    7. '_bytes' → logprob: -7.015993595123291
    8. '_val' → logprob: -7.890993595123291
    9. '()' → logprob: -8.01599407196045
    10. '_string' → logprob: -8.26599407196045

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1147080808877945
    2. '=' → logprob: -2.239708185195923
    3. '(' → logprob: -6.614707946777344
    4. '()' → logprob: -8.364707946777344
    5. '_' → logprob: -8.614707946777344
    6. ',' → logprob: -10.239707946777344
    7. ' ' → logprob: -10.364707946777344
    8. 's' → logprob: -11.614707946777344
    9. '[:]' → logprob: -11.614707946777344
    10. '[' → logprob: -11.989707946777344

Token 63: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.23098021745681763
    2. ' input' → logprob: -1.9809801578521729
    3. ' np' → logprob: -3.230980157852173
    4. 'list' → logprob: -4.105980396270752
    5. 'input' → logprob: -4.980980396270752
    6. ' map' → logprob: -6.230980396270752
    7. 'np' → logprob: -6.480980396270752
    8. ' ' → logprob: -7.230980396270752
    9. ' sys' → logprob: -7.230980396270752
    10. ' tuple' → logprob: -8.230979919433594

Token 64: '_buffer' (ID: 17892)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.27009493112564087
    2. '_buffer' → logprob: -1.520094871520996
    3. '()' → logprob: -4.270094871520996
    4. '_' → logprob: -6.145094871520996
    5. '_lines' → logprob: -7.020094871520996
    6. '().' → logprob: -7.395094871520996
    7. '(' → logprob: -9.020094871520996
    8. '```' → logprob: -10.020094871520996
    9. '_bytes' → logprob: -10.520094871520996
    10. '(_' → logprob: -10.770094871520996

Token 65: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022473547607660294
    2. '().' → logprob: -3.8974735736846924
    3. '(' → logprob: -6.272473335266113
    4. ' ()' → logprob: -10.397473335266113
    5. '.decode' → logprob: -12.772473335266113
    6. '（）' → logprob: -13.397473335266113
    7. '())' → logprob: -13.522473335266113
    8. '()
' → logprob: -14.022473335266113
    9. '()`' → logprob: -14.022473335266113
    10. '();' → logprob: -14.147473335266113

Token 66: 'split' (ID: 13627)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.5908389687538147
    2. 'split' → logprob: -0.8408389687538147
    3. 'strip' → logprob: -4.34083890914917
    4. 'rstrip' → logprob: -6.34083890914917
    5. '```' → logprob: -15.465839385986328
    6. ' decode' → logprob: -15.715839385986328
    7. 'replace' → logprob: -15.965839385986328
    8. ' split' → logprob: -16.715839385986328
    9. '.decode' → logprob: -16.965839385986328
    10. 'spl' → logprob: -17.590839385986328

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08964318037033081
    2. '(' → logprob: -2.9646432399749756
    3. '[' → logprob: -3.9646432399749756
    4. '()[' → logprob: -4.9646430015563965
    5. '()
' → logprob: -6.5896430015563965
    6. '()\' → logprob: -6.5896430015563965
    7. 'b' → logprob: -6.8396430015563965
    8. '(
' → logprob: -7.3396430015563965
    9. '('\' → logprob: -7.4646430015563965
    10. '[
' → logprob: -7.4646430015563965

Token 68: 'param' (ID: 1355)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1244248151779175
    2. ' ' → logprob: -1.1244248151779175
    3. '<|end|>' → logprob: -1.6244248151779175
    4. '0' → logprob: -2.749424934387207
    5. '\n' → logprob: -3.374424934387207
    6. '```' → logprob: -3.874424934387207
    7. '[]' → logprob: -5.249424934387207
    8. '[:]' → logprob: -5.624424934387207
    9. '#' → logprob: -5.749424934387207
    10. '<|end|>' → logprob: -5.874424934387207

Token 69: '_n' (ID: 2170)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.051350124180316925
    2. '_s' → logprob: -3.6763501167297363
    3. '_' → logprob: -4.301350116729736
    4. '1' → logprob: -4.551350116729736
    5. '0' → logprob: -8.926350593566895
    6. '_idx' → logprob: -9.051350593566895
    7. '_values' → logprob: -9.426350593566895
    8. '_index' → logprob: -9.676350593566895
    9. '_count' → logprob: -10.051350593566895
    10. '_len' → logprob: -10.176350593566895

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04409903287887573
    2. '=' → logprob: -3.1690990924835205
    3. ',' → logprob: -7.419098854064941
    4. ' ' → logprob: -7.919098854064941
    5. ' ,' → logprob: -10.169098854064941
    6. '=int' → logprob: -10.669098854064941
    7. '  ' → logprob: -10.669098854064941
    8. '_' → logprob: -10.794098854064941
    9. '_idx' → logprob: -12.169098854064941
    10. ' =
' → logprob: -12.169098854064941

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012780738063156605
    2. 'int' → logprob: -4.387780666351318
    3. ' input' → logprob: -8.262781143188477
    4. 'input' → logprob: -11.387781143188477
    5. ' ' → logprob: -13.637781143188477
    6. '(int' → logprob: -15.262781143188477
    7. ' np' → logprob: -15.512781143188477
    8. '	int' → logprob: -16.012781143188477
    9. ' in' → logprob: -16.762781143188477
    10. '=int' → logprob: -17.262781143188477

Token 72: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25193798542022705
    2. '(' → logprob: -1.501937985420227
    3. '(b' → logprob: -13.126937866210938
    4. ' (' → logprob: -13.126937866210938
    5. '('' → logprob: -13.876937866210938
    6. 'input' → logprob: -14.501937866210938
    7. '("("' → logprob: -14.501937866210938
    8. '(output' → logprob: -14.751937866210938
    9. '(param' → logprob: -15.001937866210938
    10. '(x' → logprob: -15.251937866210938

Token 73: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -9.491498531133402e-06
    2. 'values' → logprob: -12.125009536743164
    3. '_' → logprob: -13.500009536743164
    4. 'Values' → logprob: -14.125009536743164
    5. '_value' → logprob: -14.250009536743164
    6. '(values' → logprob: -14.750009536743164
    7. '(_' → logprob: -15.250009536743164
    8. '(' → logprob: -15.250009536743164
    9. '_VALUES' → logprob: -16.375009536743164
    10. ' values' → logprob: -17.375009536743164

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.125000953674316
    3. ')' → logprob: -16.375001907348633
    4. '[
' → logprob: -16.500001907348633
    5. '0' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '(' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.750001907348633
    10. ')[' → logprob: -19.125001907348633

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '[' → logprob: -15.000006675720215
    4. ')' → logprob: -16.12500762939453
    5. 'b' → logprob: -17.25000762939453
    6. '1' → logprob: -18.75000762939453
    7. ']' → logprob: -20.00000762939453
    8. '  ' → logprob: -20.50000762939453
    9. ' b' → logprob: -20.62500762939453
    10. ''' → logprob: -20.75000762939453

Token 76: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032473751343786716
    2. '])' → logprob: -8.125325202941895
    3. ' )' → logprob: -11.750325202941895
    4. '})' → logprob: -12.250325202941895
    5. '`)' → logprob: -12.250325202941895
    6. '))' → logprob: -13.000325202941895
    7. '）' → logprob: -13.125325202941895
    8. ')
' → logprob: -13.750325202941895
    9. '>)' → logprob: -13.875325202941895
    10. '')' → logprob: -13.875325202941895

Token 77: 'param' (ID: 1355)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '_x' (ID: 7054)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.47849100828170776
    2. '_k' → logprob: -0.9784910082817078
    3. '_' → logprob: -5.853490829467773
    4. '_a' → logprob: -7.228490829467773
    5. '_x' → logprob: -8.353490829467773
    6. '_s' → logprob: -8.603490829467773
    7. '_n' → logprob: -8.603490829467773
    8. '_t' → logprob: -9.728490829467773
    9. '_l' → logprob: -11.103490829467773
    10. '_r' → logprob: -11.103490829467773

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868943452835083
    2. '=' → logprob: -1.1368943452835083
    3. '=int' → logprob: -11.636894226074219
    4. ',' → logprob: -12.386894226074219
    5. '_' → logprob: -12.761894226074219
    6. ')' → logprob: -13.011894226074219
    7. ' ' → logprob: -13.761894226074219
    8. 's' → logprob: -13.886894226074219
    9. '=}' → logprob: -14.511894226074219
    10. 'space' → logprob: -14.886894226074219

Token 80: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759481191635132
    2. 'int' → logprob: -0.8259481191635132
    3. '(int' → logprob: -11.825947761535645
    4. '=int' → logprob: -14.450947761535645
    5. '	int' → logprob: -15.325947761535645
    6. '<int' → logprob: -15.450947761535645
    7. '[int' → logprob: -15.825947761535645
    8. ' ' → logprob: -15.950947761535645
    9. '0' → logprob: -16.57594871520996
    10. ':int' → logprob: -16.82594871520996

Token 81: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.625033378601074
    4. 'input' → logprob: -14.125033378601074
    5. ')' → logprob: -17.375032424926758
    6. ',input' → logprob: -17.500032424926758
    7. '=input' → logprob: -17.500032424926758
    8. ' ' → logprob: -17.750032424926758
    9. '[input' → logprob: -18.000032424926758
    10. ' input' → logprob: -18.500032424926758

Token 82: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -8.2994620242971e-06
    2. 'values' → logprob: -11.875008583068848
    3. 'Values' → logprob: -14.125008583068848
    4. ')' → logprob: -15.250008583068848
    5. '(values' → logprob: -16.25000762939453
    6. '_VALUES' → logprob: -16.25000762939453
    7. '_value' → logprob: -17.12500762939453
    8. '_tokens' → logprob: -17.12500762939453
    9. '_' → logprob: -17.62500762939453
    10. ' values' → logprob: -18.37500762939453

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.505351095460355e-05
    2. ')' → logprob: -10.250075340270996
    3. '(' → logprob: -10.375075340270996
    4. '1' → logprob: -12.250075340270996
    5. ' [' → logprob: -12.625075340270996
    6. '```' → logprob: -16.25007438659668
    7. '0' → logprob: -16.37507438659668
    8. ' ' → logprob: -16.75007438659668
    9. '   ' → logprob: -17.00007438659668
    10. ' (' → logprob: -17.12507438659668

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003309361054562032
    2. ' ' → logprob: -8.125330924987793
    3. '])' → logprob: -11.375330924987793
    4. '2' → logprob: -11.625330924987793
    5. '[' → logprob: -12.750330924987793
    6. '(' → logprob: -12.937830924987793
    7. ']' → logprob: -13.125330924987793
    8. '0' → logprob: -13.312830924987793
    9. '   ' → logprob: -14.187830924987793
    10. '  ' → logprob: -14.375330924987793

Token 85: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. '])' → logprob: -10.625035285949707
    3. ' )' → logprob: -12.500035285949707
    4. ')
' → logprob: -13.125035285949707
    5. '）' → logprob: -13.500035285949707
    6. ']' → logprob: -13.625035285949707
    7. '[' → logprob: -14.375035285949707
    8. '))' → logprob: -14.375035285949707
    9. '})' → logprob: -14.500035285949707
    10. '`)' → logprob: -15.500035285949707

Token 86: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9637165069580078
    2. 'result' → logprob: -1.4637165069580078
    3. '<|end|>' → logprob: -2.588716506958008
    4. '\n' → logprob: -2.838716506958008
    5. '
' → logprob: -2.963716506958008
    6. 'for' → logprob: -3.338716506958008
    7. 'data' → logprob: -3.713716506958008
    8. 'param' → logprob: -3.963716506958008
    9. 'def' → logprob: -4.088716506958008
    10. '\' → logprob: -4.088716506958008

Token 87: ' System' (ID: 1219)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6628596782684326
    2. 'arr' → logprob: -1.6628596782684326
    3. 'result' → logprob: -1.6628596782684326
    4. 'param' → logprob: -3.6628596782684326
    5. 'data' → logprob: -4.037859916687012
    6. 'values' → logprob: -4.662859916687012
    7. 'def' → logprob: -5.037859916687012
    8. 'array' → logprob: -5.037859916687012
    9. 'results' → logprob: -5.287859916687012
    10. '#' → logprob: -5.537859916687012

Token 88: 'atic' (ID: 2351)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2325199991464615
    2. '_values' → logprob: -2.73252010345459
    3. 'def' → logprob: -3.10752010345459
    4. '_x' → logprob: -3.73252010345459
    5. '_lines' → logprob: -3.85752010345459
    6. 'atic' → logprob: -4.73252010345459
    7. '_remaining' → logprob: -5.23252010345459
    8. '#' → logprob: -5.35752010345459
    9. '_array' → logprob: -5.60752010345459
    10. 'x' → logprob: -5.73252010345459

Token 89: ' function' (ID: 1114)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -1.2337983846664429
    2. 'result' → logprob: -1.8587983846664429
    3. '_values' → logprob: -2.1087985038757324
    4. 'array' → logprob: -2.6087985038757324
    5. 'index' → logprob: -3.1087985038757324
    6. 'def' → logprob: -3.6087985038757324
    7. 'arr' → logprob: -3.7337985038757324
    8. 'param' → logprob: -3.8587985038757324
    9. '_result' → logprob: -3.8587985038757324
    10. 'data' → logprob: -3.8587985038757324

Token 90: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001444045570679009
    2. '_def' → logprob: -7.751443862915039
    3. '<|end|>' → logprob: -8.501443862915039
    4. '_definition' → logprob: -8.876443862915039
    5. 's' → logprob: -9.001443862915039
    6. ':' → logprob: -9.376443862915039
    7. '<|end|>' → logprob: -10.001443862915039
    8. '_' → logprob: -10.001443862915039
    9. '_define' → logprob: -10.126443862915039
    10. '=' → logprob: -10.251443862915039

Token 91: ' cumulative' (ID: 75628)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0457450151443481
    2. 'def' → logprob: -1.7957450151443481
    3. 'pow' → logprob: -2.1707448959350586
    4. ' calculating' → logprob: -2.4207448959350586
    5. ' pow' → logprob: -2.6707448959350586
    6. ' computing' → logprob: -3.1707448959350586
    7. ' mod' → logprob: -3.2957448959350586
    8. 'mod' → logprob: -3.4207448959350586
    9. ' modular' → logprob: -3.4207448959350586
    10. ' def' → logprob: -4.295744895935059

Token 92: ' product' (ID: 1888)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.09520155936479568
    2. '_' → logprob: -2.8452014923095703
    3. 'sum' → logprob: -3.8452014923095703
    4. 'def' → logprob: -5.72020149230957
    5. '_product' → logprob: -5.84520149230957
    6. '_x' → logprob: -6.22020149230957
    7. '_mod' → logprob: -6.97020149230957
    8. '_s' → logprob: -6.97020149230957
    9. 'xor' → logprob: -8.84520149230957
    10. '_add' → logprob: -8.97020149230957

Token 93: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009548184461891651
    2. 'result' → logprob: -6.259548187255859
    3. 'import' → logprob: -6.634548187255859
    4. ':' → logprob: -6.759548187255859
    5. '_' → logprob: -6.759548187255859
    6. '_result' → logprob: -6.884548187255859
    7. '
' → logprob: -7.259548187255859
    8. 'c' → logprob: -8.38454818725586
    9. '_c' → logprob: -8.63454818725586
    10. ' def' → logprob: -8.63454818725586

Token 94: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.14062891900539398
    2. ' modular' → logprob: -3.2656288146972656
    3. 'numpy' → logprob: -3.7656288146972656
    4. 'initial' → logprob: -4.015628814697266
    5. ' modulo' → logprob: -4.015628814697266
    6. ' initial' → logprob: -5.265628814697266
    7. ' modulus' → logprob: -5.640628814697266
    8. 'overflow' → logprob: -5.890628814697266
    9. ' mod' → logprob: -5.890628814697266
    10. ' numpy' → logprob: -6.015628814697266

Token 95: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2032371461391449
    2. '
' → logprob: -1.7032371759414673
    3. '\' → logprob: -7.578237056732178
    4. '```' → logprob: -7.578237056732178
    5. '

' → logprob: -8.328237533569336
    6. '
' → logprob: -9.203237533569336
    7. '_
' → logprob: -9.578237533569336
    8. '_' → logprob: -9.828237533569336
    9. 'ndef' → logprob: -9.828237533569336
    10. ':' → logprob: -10.203237533569336

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005704291397705674
    2. '
' → logprob: -7.625570297241211
    3. 'result' → logprob: -10.000570297241211
    4. 'c' → logprob: -11.125570297241211
    5. '```' → logprob: -11.750570297241211
    6. ' def' → logprob: -12.250570297241211
    7. 'import' → logprob: -12.500570297241211
    8. 'cum' → logprob: -13.375570297241211
    9. '

' → logprob: -13.625570297241211
    10. '``' → logprob: -14.750570297241211

Token 97: ' cumulative' (ID: 75628)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.2903384864330292
    2. ' cumulative' → logprob: -1.5403385162353516
    3. ' mod' → logprob: -3.9153385162353516
    4. 'cum' → logprob: -4.290338516235352
    5. 'mod' → logprob: -6.165338516235352
    6. 'c' → logprob: -7.165338516235352
    7. ' modular' → logprob: -7.665338516235352
    8. ' cumul' → logprob: -8.540338516235352
    9. ' mul' → logprob: -9.165338516235352
    10. ' c' → logprob: -9.665338516235352

Token 98: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -0.0018722362583503127
    2. '_' → logprob: -6.8768720626831055
    3. '_prod' → logprob: -7.5018720626831055
    4. '_m' → logprob: -9.126872062683105
    5. '_pro' → logprob: -9.251872062683105
    6. '_mul' → logprob: -9.751872062683105
    7. '_products' → logprob: -12.001872062683105
    8. '_mod' → logprob: -12.251872062683105
    9. '_factor' → logprob: -12.751872062683105
    10. '_mult' → logprob: -13.376872062683105

Token 99: '_mod' (ID: 15325)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0719074010848999
    2. '(param' → logprob: -3.6969075202941895
    3. '(lst' → logprob: -4.3219075202941895
    4. '(nums' → logprob: -4.6969075202941895
    5. '(a' → logprob: -4.8219075202941895
    6. '(n' → logprob: -5.1969075202941895
    7. ' (' → logprob: -6.0719075202941895
    8. '(params' → logprob: -6.4469075202941895
    9. '(array' → logprob: -6.6969075202941895
    10. '(values' → logprob: -6.9469075202941895

Token 100: '(arr' (ID: 19646)
  Prédit: '(param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(param' → logprob: -0.8228394985198975
    2. '(arr' → logprob: -1.1978394985198975
    3. '(n' → logprob: -2.0728394985198975
    4. '(a' → logprob: -2.5728394985198975
    5. ' (' → logprob: -4.072839736938477
    6. '(' → logprob: -4.197839736938477
    7. '(lst' → logprob: -4.822839736938477
    8. '(x' → logprob: -5.697839736938477
    9. '(array' → logprob: -5.697839736938477
    10. '(nums' → logprob: -5.822839736938477

Token 101: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003456095000728965
    2. ',' → logprob: -6.253456115722656
    3. ':' → logprob: -6.753456115722656
    4. ' ):' → logprob: -8.878456115722656
    5. '):
' → logprob: -8.878456115722656
    6. ')' → logprob: -10.003456115722656
    7. '):
' → logprob: -11.378456115722656
    8. ' :' → logprob: -12.378456115722656
    9. '[]):' → logprob: -12.378456115722656
    10. ' ,' → logprob: -12.753456115722656

Token 102: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4033482074737549
    2. ' mod' → logprob: -1.1533482074737549
    3. ' modulus' → logprob: -4.278347969055176
    4. 'MOD' → logprob: -7.403347969055176
    5. ' m' → logprob: -7.528347969055176
    6. 'm' → logprob: -7.653347969055176
    7. ' MOD' → logprob: -8.028347969055176
    8. ' modulo' → logprob: -8.153347969055176
    9. '   ' → logprob: -9.403347969055176
    10. '	mod' → logprob: -9.653347969055176

Token 103: '_const' (ID: 27511)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003448792558629066
    2. '):
' → logprob: -8.625345230102539
    3. '=' → logprob: -9.000345230102539
    4. ')' → logprob: -11.125345230102539
    5. ':' → logprob: -11.250345230102539
    6. ' ):' → logprob: -11.625345230102539
    7. '):
' → logprob: -12.625345230102539
    8. '=None' → logprob: -14.875345230102539
    9. ' =' → logprob: -15.125345230102539
    10. '_' → logprob: -15.250345230102539

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.065608562901616e-05
    2. ')' → logprob: -10.125081062316895
    3. '):
' → logprob: -10.500081062316895
    4. ':' → logprob: -11.750081062316895
    5. ' ):' → logprob: -12.500081062316895
    6. ',' → logprob: -14.500081062316895
    7. '):
' → logprob: -14.875081062316895
    8. '=' → logprob: -15.375081062316895
    9. ')：' → logprob: -16.750080108642578
    10. ']:' → logprob: -17.125080108642578

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015448570484295487
    2. ':' → logprob: -7.126544952392578
    3. '    
' → logprob: -8.751544952392578
    4. 'result' → logprob: -9.001544952392578
    5. '	product' → logprob: -9.251544952392578
    6. '	result' → logprob: -9.376544952392578
    7. ' result' → logprob: -9.501544952392578
    8. '	c' → logprob: -9.876544952392578
    9. ' product' → logprob: -10.626544952392578
    10. ':
' → logprob: -10.751544952392578

Token 106: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011867126449942589
    2. ' result' → logprob: -4.886867046356201
    3. ' prod' → logprob: -6.136867046356201
    4. 'result' → logprob: -7.136867046356201
    5. ' res' → logprob: -8.01186752319336
    6. '    
' → logprob: -8.13686752319336
    7. ' product' → logprob: -8.26186752319336
    8. 'prod' → logprob: -9.51186752319336
    9. '    ' → logprob: -9.88686752319336
    10. ' c' → logprob: -10.01186752319336

Token 107: '_length' (ID: 11514)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3775319755077362
    2. '=' → logprob: -2.5025320053100586
    3. '[' → logprob: -2.5025320053100586
    4. '_len' → logprob: -3.2525320053100586
    5. '_prod' → logprob: -3.3775320053100586
    6. '[:]' → logprob: -3.6275320053100586
    7. '_' → logprob: -4.377532005310059
    8. '_product' → logprob: -4.502532005310059
    9. '_c' → logprob: -5.127532005310059
    10. '_out' → logprob: -5.377532005310059

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698858976364136
    2. '=' → logprob: -2.126988649368286
    3. '=len' → logprob: -9.751988410949707
    4. '   ' → logprob: -13.751988410949707
    5. ' ' → logprob: -14.376988410949707
    6. ',' → logprob: -15.251988410949707
    7. ')' → logprob: -15.251988410949707
    8. '=int' → logprob: -15.751988410949707
    9. '  ' → logprob: -17.126989364624023
    10. ':' → logprob: -17.251989364624023

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04858884960412979
    2. ' len' → logprob: -3.048588752746582
    3. '(len' → logprob: -13.798588752746582
    4. '[len' → logprob: -15.423588752746582
    5. '=len' → logprob: -16.7985897064209
    6. 'arr' → logprob: -17.2985897064209
    7. '	len' → logprob: -17.5485897064209
    8. '   ' → logprob: -18.1735897064209
    9. ',len' → logprob: -18.5485897064209
    10. '<len' → logprob: -19.0485897064209

Token 110: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -2.6895233531831764e-05
    2. '(' → logprob: -11.12502670288086
    3. 'arr' → logprob: -11.37502670288086
    4. ' arr' → logprob: -15.37502670288086
    5. '	arr' → logprob: -16.25002670288086
    6. '<arr' → logprob: -16.25002670288086
    7. '[arr' → logprob: -16.25002670288086
    8. ' (' → logprob: -17.00002670288086
    9. '_arr' → logprob: -17.87502670288086
    10. '$arr' → logprob: -18.25002670288086

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06261923164129257
    2. ')
' → logprob: -2.812619209289551
    3. '   ' → logprob: -7.812619209289551
    4. ' )' → logprob: -8.68761920928955
    5. ' )
' → logprob: -9.93761920928955
    6. ')
' → logprob: -11.31261920928955
    7. ' ' → logprob: -11.56261920928955
    8. 'def' → logprob: -13.18761920928955
    9. ')

' → logprob: -13.31261920928955
    10. '  ' → logprob: -14.56261920928955

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031244779005646706
    2. '    
' → logprob: -3.9062447547912598
    3. 'result' → logprob: -4.90624475479126
    4. 'res' → logprob: -6.78124475479126
    5. ' result' → logprob: -7.65624475479126
    6. '
' → logprob: -7.65624475479126
    7. 'product' → logprob: -8.531245231628418
    8. 'prod' → logprob: -8.656245231628418
    9. ' res' → logprob: -9.031245231628418
    10. 'dp' → logprob: -9.156245231628418

Token 113: ' block' (ID: 4355)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39490416646003723
    2. '   ' → logprob: -1.6449041366577148
    3. ' result' → logprob: -3.269904136657715
    4. 'cum' → logprob: -3.394904136657715
    5. 'c' → logprob: -3.519904136657715
    6. 'res' → logprob: -4.519904136657715
    7. 'prod' → logprob: -4.894904136657715
    8. 'product' → logprob: -5.269904136657715
    9. ' cum' → logprob: -6.269904136657715
    10. '    
' → logprob: -6.519904136657715

Token 114: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.586859405040741
    2. 's' → logprob: -2.0868594646453857
    3. '_' → logprob: -2.2118594646453857
    4. '_sizes' → logprob: -2.5868594646453857
    5. '_product' → logprob: -2.8368594646453857
    6. '_products' → logprob: -3.4618594646453857
    7. '_prod' → logprob: -3.5868594646453857
    8. '_s' → logprob: -4.961859226226807
    9. '_pro' → logprob: -6.086859226226807
    10. ' =' → logprob: -6.336859226226807

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016066396608948708
    2. '=' → logprob: -4.141066551208496
    3. '   ' → logprob: -11.141066551208496
    4. ' ' → logprob: -11.266066551208496
    5. ',' → logprob: -13.266066551208496
    6. '=int' → logprob: -14.016066551208496
    7. 'import' → logprob: -14.641066551208496
    8. '    ' → logprob: -14.766066551208496
    9. ' =
' → logprob: -15.141066551208496
    10. '  ' → logprob: -15.141066551208496

Token 116: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14667564630508423
    2. '100' → logprob: -3.0216755867004395
    3. '1' → logprob: -3.3966755867004395
    4. ' int' → logprob: -4.3966755867004395
    5. 'arr' → logprob: -4.3966755867004395
    6. 'max' → logprob: -5.0216755867004395
    7. '256' → logprob: -5.3966755867004395
    8. ' ' → logprob: -6.1466755867004395
    9. '500' → logprob: -6.3966755867004395
    10. '316' → logprob: -6.3966755867004395

Token 117: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.09041734784841537
    2. '(np' → logprob: -2.8404173851013184
    3. '(len' → logprob: -3.5904173851013184
    4. 'arr' → logprob: -8.34041690826416
    5. '(' → logprob: -9.09041690826416
    6. '(pow' → logprob: -9.84041690826416
    7. '((' → logprob: -10.59041690826416
    8. '(block' → logprob: -11.59041690826416
    9. '	arr' → logprob: -12.34041690826416
    10. ' arr' → logprob: -12.34041690826416

Token 118: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00030852947384119034
    2. 'arr' → logprob: -9.000308990478516
    3. '**' → logprob: -10.000308990478516
    4. 'ength' → logprob: -10.375308990478516
    5. '_size' → logprob: -10.500308990478516
    6. 'np' → logprob: -10.625308990478516
    7. 'length' → logprob: -11.000308990478516
    8. 'import' → logprob: -11.875308990478516
    9. '[arr' → logprob: -12.625308990478516
    10. '[' → logprob: -12.750308990478516

Token 119: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.313305526971817
    2. ' **' → logprob: -1.3133054971694946
    3. ')**' → logprob: -10.938305854797363
    4. ')' → logprob: -11.438305854797363
    5. '*' → logprob: -12.188305854797363
    6. 'import' → logprob: -13.063305854797363
    7. ' ' → logprob: -13.188305854797363
    8. '(' → logprob: -13.438305854797363
    9. ' **)' → logprob: -14.063305854797363
    10. '**)' → logprob: -14.313305854797363

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006933739641681314
    2. ' ' → logprob: -7.875693321228027
    3. '(' → logprob: -8.125693321228027
    4. '.' → logprob: -11.125693321228027
    5. '-' → logprob: -13.875693321228027
    6. ' (' → logprob: -14.375693321228027
    7. '{' → logprob: -15.063193321228027
    8. '   ' → logprob: -16.000694274902344
    9. '```' → logprob: -16.250694274902344
    10. ')' → logprob: -16.375694274902344

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014344371855258942
    2. '(' → logprob: -4.264344215393066
    3. '.' → logprob: -9.514344215393066
    4. '-' → logprob: -9.514344215393066
    5. ' ' → logprob: -11.639344215393066
    6. '1' → logprob: -11.889344215393066
    7. '2' → logprob: -11.889344215393066
    8. '{' → logprob: -12.764344215393066
    9. '(-' → logprob: -12.889344215393066
    10. '3' → logprob: -13.639344215393066

Token 122: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.747814349073451e-05
    2. '-' → logprob: -11.875017166137695
    3. '0' → logprob: -11.875017166137695
    4. '1' → logprob: -13.750017166137695
    5. '3' → logprob: -14.250017166137695
    6. '2' → logprob: -14.375017166137695
    7. '5' → logprob: -14.750017166137695
    8. '(' → logprob: -15.500017166137695
    9. ' .' → logprob: -15.875017166137695
    10. '6' → logprob: -15.875017166137695

Token 123: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -9.014684110297821e-06
    2. '25' → logprob: -13.437508583068848
    3. '75' → logprob: -13.812508583068848
    4. '```' → logprob: -14.125008583068848
    5. '

' → logprob: -14.250008583068848
    6. '4' → logprob: -14.250008583068848
    7. '3' → logprob: -14.625008583068848
    8. '333' → logprob: -14.750008583068848
    9. '0' → logprob: -15.062508583068848
    10. '6' → logprob: -15.312508583068848

Token 124: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001313093933276832
    2. ')+' → logprob: -6.751313209533691
    3. ' )' → logprob: -9.001313209533691
    4. ')
' → logprob: -11.001313209533691
    5. '+' → logprob: -13.751313209533691
    6. '()' → logprob: -14.251313209533691
    7. ' +' → logprob: -15.376313209533691
    8. '())' → logprob: -15.501313209533691
    9. ')

' → logprob: -15.626313209533691
    10. ' ' → logprob: -15.876313209533691

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00840641837567091
    2. ' ' → logprob: -4.883406639099121
    3. '0' → logprob: -7.133406639099121
    4. '   ' → logprob: -14.258406639099121
    5. ')' → logprob: -14.883406639099121
    6. '  ' → logprob: -14.883406639099121
    7. '```' → logprob: -15.008406639099121
    8. '    ' → logprob: -16.633405685424805
    9. '.' → logprob: -16.758405685424805
    10. '+' → logprob: -16.883405685424805

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012134487042203546
    2. ' ' → logprob: -6.876213550567627
    3. '0' → logprob: -8.626213073730469
    4. ')' → logprob: -14.751213073730469
    5. '.' → logprob: -15.126213073730469
    6. '   ' → logprob: -15.376213073730469
    7. '  ' → logprob: -16.12621307373047
    8. '```' → logprob: -16.37621307373047
    9. '2' → logprob: -17.12621307373047
    10. '+' → logprob: -17.62621307373047

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16048112511634827
    2. ')
' → logprob: -1.9104810953140259
    3. ')
' → logprob: -8.660481452941895
    4. ')

' → logprob: -9.535481452941895
    5. ' )' → logprob: -12.410481452941895
    6. ' )
' → logprob: -13.160481452941895
    7. '   ' → logprob: -13.160481452941895
    8. '):
' → logprob: -14.535481452941895
    9. '):' → logprob: -14.660481452941895
    10. '
' → logprob: -14.910481452941895

Token 128: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29157859086990356
    2. '   ' → logprob: -1.5415785312652588
    3. '    
' → logprob: -3.416578531265259
    4. '<|end|>' → logprob: -5.916578769683838
    5. '  
' → logprob: -6.916578769683838
    6. ' 
' → logprob: -7.541578769683838
    7. '   
' → logprob: -7.666578769683838
    8. ')' → logprob: -7.666578769683838
    9. '    ' → logprob: -8.79157829284668
    10. '  ' → logprob: -9.41657829284668

Token 129: ' arr' (ID: 1724)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7964350581169128
    2. ' result' → logprob: -2.0464351177215576
    3. 'cum' → logprob: -2.0464351177215576
    4. 'prefix' → logprob: -2.5464351177215576
    5. 'res' → logprob: -3.0464351177215576
    6. 'c' → logprob: -3.2964351177215576
    7. '   ' → logprob: -3.5464351177215576
    8. ' res' → logprob: -3.5464351177215576
    9. ' prefix' → logprob: -4.1714348793029785
    10. ' cum' → logprob: -4.2964348793029785

Token 130: '_' (ID: 62)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.7429966926574707
    2. '_product' → logprob: -1.6179966926574707
    3. '_prod' → logprob: -2.2429966926574707
    4. '_' → logprob: -2.9929966926574707
    5. '_prefix' → logprob: -3.1179966926574707
    6. '_mod' → logprob: -3.6179966926574707
    7. '_products' → logprob: -4.242996692657471
    8. '_result' → logprob: -4.367996692657471
    9. '_block' → logprob: -4.492996692657471
    10. ' =' → logprob: -4.617996692657471

Token 131: 'resh' (ID: 3485)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prod' → logprob: -1.127817988395691
    2. 'cum' → logprob: -1.252817988395691
    3. '_c' → logprob: -2.6278181076049805
    4. ' =' → logprob: -2.7528181076049805
    5. '=' → logprob: -2.8778181076049805
    6. 'c' → logprob: -3.3778181076049805
    7. 'product' → logprob: -3.5028181076049805
    8. '_prod' → logprob: -4.0028181076049805
    9. 'prefix' → logprob: -4.3778181076049805
    10. '_product' → logprob: -4.3778181076049805

Token 132: 'aped' (ID: 16020)
  Prédit: 'ape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -9.949026571121067e-05
    2. 'shape' → logprob: -10.125099182128906
    3. 'ap' → logprob: -10.250099182128906
    4. 'aped' → logprob: -11.000099182128906
    5. '=' → logprob: -13.375099182128906
    6. 'hape' → logprob: -13.500099182128906
    7. '_shape' → logprob: -14.125099182128906
    8. '   ' → logprob: -14.375099182128906
    9. 'aping' → logprob: -14.375099182128906
    10. 'a' → logprob: -14.375099182128906

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328776478767395
    2. ' =' → logprob: -1.3132877349853516
    3. 's' → logprob: -11.813287734985352
    4. ' ' → logprob: -12.188287734985352
    5. ',' → logprob: -12.563287734985352
    6. '=np' → logprob: -12.563287734985352
    7. ')' → logprob: -12.938287734985352
    8. 'import' → logprob: -14.313287734985352
    9. 'arr' → logprob: -14.313287734985352
    10. '  ' → logprob: -14.563287734985352

Token 134: ' np' (ID: 5374)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6751009225845337
    2. ' arr' → logprob: -1.5501009225845337
    3. 'np' → logprob: -1.9251009225845337
    4. ' np' → logprob: -2.050100803375244
    5. '[arr' → logprob: -5.800100803375244
    6. '[np' → logprob: -7.925100803375244
    7. '[' → logprob: -8.050101280212402
    8. ' [' → logprob: -8.675101280212402
    9. '(arr' → logprob: -9.425101280212402
    10. '	arr' → logprob: -10.800101280212402

Token 135: '.resize' (ID: 39698)
  Prédit: '.reshape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reshape' → logprob: -0.3907930254936218
    2. '.array' → logprob: -1.1407930850982666
    3. '.resize' → logprob: -6.1407928466796875
    4. '.asarray' → logprob: -7.1407928466796875
    5. '.' → logprob: -8.265792846679688
    6. '.arr' → logprob: -8.765792846679688
    7. '.ndarray' → logprob: -8.890792846679688
    8. '.arange' → logprob: -9.015792846679688
    9. '.concatenate' → logprob: -9.390792846679688
    10. '.from' → logprob: -9.515792846679688

Token 136: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.750003814697266
    3. 'arr' → logprob: -14.875003814697266
    4. ' (' → logprob: -15.125003814697266
    5. '[arr' → logprob: -16.375003814697266
    6. '(np' → logprob: -17.250003814697266
    7. '(
' → logprob: -17.250003814697266
    8. '<arr' → logprob: -17.375003814697266
    9. '((' → logprob: -17.500003814697266
    10. '(array' → logprob: -17.875003814697266

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018900912255048752
    2. ',(' → logprob: -6.501890182495117
    3. '(' → logprob: -8.376890182495117
    4. '(block' → logprob: -9.126890182495117
    5. ' ,' → logprob: -10.376890182495117
    6. '((' → logprob: -11.501890182495117
    7. ' (' → logprob: -13.501890182495117
    8. ' ' → logprob: -13.751890182495117
    9. '(arr' → logprob: -13.876890182495117
    10. ',
' → logprob: -14.251890182495117

Token 138: ' block' (ID: 4355)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.008069333620369434
    2. '((' → logprob: -5.0080695152282715
    3. ' (' → logprob: -7.1330695152282715
    4. 'block' → logprob: -8.133069038391113
    5. '(' → logprob: -8.758069038391113
    6. '(arr' → logprob: -9.633069038391113
    7. ' block' → logprob: -11.258069038391113
    8. ' ((' → logprob: -12.008069038391113
    9. '(b' → logprob: -12.883069038391113
    10. '(((' → logprob: -13.133069038391113

Token 139: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00015824666479602456
    2. 'size' → logprob: -9.625158309936523
    3. '_s' → logprob: -9.875158309936523
    4. '_shape' → logprob: -11.000158309936523
    5. '_' → logprob: -11.875158309936523
    6. 's' → logprob: -12.250158309936523
    7. ')' → logprob: -12.375158309936523
    8. '_sizes' → logprob: -13.250158309936523
    9. '_length' → logprob: -13.625158309936523
    10. ' size' → logprob: -14.000158309936523

Token 140: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6220710873603821
    2. ' *' → logprob: -0.9970710873603821
    3. ',' → logprob: -2.4970710277557373
    4. ')' → logprob: -4.497071266174316
    5. ',)' → logprob: -7.997071266174316
    6. ' ,' → logprob: -8.497071266174316
    7. '*(' → logprob: -10.122071266174316
    8. '*)' → logprob: -10.622071266174316
    9. ' )' → logprob: -10.872071266174316
    10. '*object' → logprob: -10.872071266174316

Token 141: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0021867838222533464
    2. ' ' → logprob: -6.1271867752075195
    3. '  ' → logprob: -14.62718677520752
    4. '3' → logprob: -14.87718677520752
    5. '1' → logprob: -15.25218677520752
    6. 'int' → logprob: -16.627187728881836
    7. '```' → logprob: -16.627187728881836
    8. ')' → logprob: -16.814687728881836
    9. '<|end|>' → logprob: -17.064687728881836
    10. '

' → logprob: -17.064687728881836

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5861724831629544e-05
    2. ' ' → logprob: -10.000056266784668
    3. '3' → logprob: -12.125056266784668
    4. 'array' → logprob: -13.437556266784668
    5. '1' → logprob: -14.312556266784668
    6. '  ' → logprob: -14.750056266784668
    7. 'arr' → logprob: -14.750056266784668
    8. '```' → logprob: -14.812556266784668
    9. '   ' → logprob: -15.437556266784668
    10. '

' → logprob: -15.687556266784668

Token 143: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038569126278162
    2. ').' → logprob: -3.288569211959839
    3. ')
' → logprob: -8.038569450378418
    4. ' )' → logprob: -8.913569450378418
    5. ')
' → logprob: -10.663569450378418
    6. ')

' → logprob: -11.538569450378418
    7. ' ' → logprob: -12.163569450378418
    8. ')#' → logprob: -12.163569450378418
    9. ',' → logprob: -12.413569450378418
    10. ')[' → logprob: -12.538569450378418

Token 144: 'reshape' (ID: 37466)
  Prédit: 'reshape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reshape' → logprob: -9.090760431718081e-05
    2. 'astype' → logprob: -9.625090599060059
    3. ' reshape' → logprob: -11.375090599060059
    4. 'copy' → logprob: -11.750090599060059
    5. '.reshape' → logprob: -12.875090599060059
    6. 'flatten' → logprob: -13.000090599060059
    7. 'tolist' → logprob: -14.750090599060059
    8. 'shape' → logprob: -15.750090599060059
    9. 'resize' → logprob: -17.250091552734375
    10. 'flat' → logprob: -17.250091552734375

Token 145: '(block' (ID: 36179)
  Prédit: '(block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.006401054095476866
    2. '((' → logprob: -5.256401062011719
    3. '(' → logprob: -6.756401062011719
    4. '(Block' → logprob: -13.256401062011719
    5. ' (' → logprob: -14.506401062011719
    6. '(-' → logprob: -14.506401062011719
    7. '(
' → logprob: -15.881401062011719
    8. '(b' → logprob: -17.25640106201172
    9. '(arr' → logprob: -17.88140106201172
    10. '(bl' → logprob: -17.88140106201172

Token 146: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -8.804671233519912e-05
    2. '_s' → logprob: -9.87508773803711
    3. 'size' → logprob: -10.50008773803711
    4. 's' → logprob: -12.87508773803711
    5. '_block' → logprob: -12.87508773803711
    6. '_' → logprob: -13.62508773803711
    7. '_SIZE' → logprob: -14.75008773803711
    8. ' size' → logprob: -15.00008773803711
    9. ' _' → logprob: -15.37508773803711
    10. 'block' → logprob: -15.37508773803711

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005022776313126087
    2. ' ,' → logprob: -7.625502109527588
    3. '(' → logprob: -11.750502586364746
    4. '(block' → logprob: -12.750502586364746
    5. ',(' → logprob: -13.375502586364746
    6. ',
' → logprob: -14.250502586364746
    7. ' (' → logprob: -15.375502586364746
    8. ',-' → logprob: -15.375502586364746
    9. '(),' → logprob: -15.625502586364746
    10. 'block' → logprob: -15.750502586364746

Token 148: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.16031420230865479
    2. ' block' → logprob: -1.9103142023086548
    3. '-block' → logprob: -9.410314559936523
    4. ' -' → logprob: -12.785314559936523
    5. '	block' → logprob: -12.910314559936523
    6. '-' → logprob: -13.535314559936523
    7. ':block' → logprob: -14.035314559936523
    8. '(block' → logprob: -14.535314559936523
    9. ' ' → logprob: -16.285314559936523
    10. '.block' → logprob: -16.535314559936523

Token 149: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0001370320824207738
    2. 'size' → logprob: -9.125137329101562
    3. '_s' → logprob: -11.875137329101562
    4. 'block' → logprob: -12.000137329101562
    5. '_block' → logprob: -12.375137329101562
    6. '_' → logprob: -12.500137329101562
    7. '_SIZE' → logprob: -12.750137329101562
    8. ')' → logprob: -13.625137329101562
    9. 's' → logprob: -13.875137329101562
    10. ' size' → logprob: -14.125137329101562

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4418171455617994e-05
    2. ',' → logprob: -10.625044822692871
    3. ' )' → logprob: -11.250044822692871
    4. ')
' → logprob: -12.875044822692871
    5. ').' → logprob: -13.625044822692871
    6. ')#' → logprob: -13.875044822692871
    7. '[' → logprob: -14.750044822692871
    8. ',)' → logprob: -14.875044822692871
    9. '),' → logprob: -15.125044822692871
    10. ')[' → logprob: -15.375044822692871

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15955452620983124
    2. 'result' → logprob: -2.0345544815063477
    3. ' result' → logprob: -5.659554481506348
    4. '    
' → logprob: -5.784554481506348
    5. ')' → logprob: -6.409554481506348
    6. 'res' → logprob: -6.409554481506348
    7. 'c' → logprob: -6.534554481506348
    8. 'product' → logprob: -6.534554481506348
    9. 'cum' → logprob: -6.909554481506348
    10. ' cumulative' → logprob: -7.409554481506348

Token 152: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20515204966068268
    2. ' result' → logprob: -2.5801520347595215
    3. 'cum' → logprob: -3.5801520347595215
    4. 'c' → logprob: -3.8301520347595215
    5. '   ' → logprob: -4.0801520347595215
    6. 'res' → logprob: -4.0801520347595215
    7. ' cumulative' → logprob: -5.4551520347595215
    8. 'product' → logprob: -5.4551520347595215
    9. 'output' → logprob: -5.7051520347595215
    10. ' cum' → logprob: -5.7051520347595215

Token 153: ' col' (ID: 996)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03728010505437851
    2. ' row' → logprob: -3.9122800827026367
    3. 'i' → logprob: -4.162280082702637
    4. 'row' → logprob: -7.787280082702637
    5. ' block' → logprob: -7.787280082702637
    6. ' ' → logprob: -9.787280082702637
    7. 'block' → logprob: -10.412280082702637
    8. ' r' → logprob: -11.037280082702637
    9. ' idx' → logprob: -11.162280082702637
    10. ' j' → logprob: -11.537280082702637

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016346126794815063
    2. 'in' → logprob: -4.141345977783203
    3. '_in' → logprob: -8.641345977783203
    4. '_idx' → logprob: -10.016345977783203
    5. ' ' → logprob: -10.766345977783203
    6. 's' → logprob: -10.891345977783203
    7. '_' → logprob: -11.766345977783203
    8. '_index' → logprob: -11.891345977783203
    9. 'i' → logprob: -12.516345977783203
    10. ' i' → logprob: -12.516345977783203

Token 155: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.061971161514520645
    2. 'range' → logprob: -2.8119711875915527
    3. 'arr' → logprob: -13.061970710754395
    4. ' arr' → logprob: -14.436970710754395
    5. ' ' → logprob: -15.186970710754395
    6. '	range' → logprob: -15.811970710754395
    7. '(range' → logprob: -16.18697166442871
    8. '   ' → logprob: -16.31197166442871
    9. 'rang' → logprob: -16.56197166442871
    10. ' rang' → logprob: -16.81197166442871

Token 156: '(' (ID: 7)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.282094269990921
    2. ' block' → logprob: -1.5320942401885986
    3. '(block' → logprob: -3.5320942401885986
    4. 'arr' → logprob: -7.782094478607178
    5. ' arr' → logprob: -10.90709400177002
    6. ':block' → logprob: -11.15709400177002
    7. '   ' → logprob: -11.78209400177002
    8. '	block' → logprob: -12.03209400177002
    9. '(' → logprob: -12.28209400177002
    10. '(arr' → logprob: -13.40709400177002

Token 157: '1' (ID: 16)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.008777067065238953
    2. ' block' → logprob: -4.758777141571045
    3. 'arr' → logprob: -8.758776664733887
    4. ' arr' → logprob: -13.258776664733887
    5. '0' → logprob: -13.383776664733887
    6. '   ' → logprob: -14.508776664733887
    7. 'bloc' → logprob: -14.883776664733887
    8. ' ' → logprob: -15.258776664733887
    9. 'blk' → logprob: -15.758776664733887
    10. '	block' → logprob: -16.008777618408203

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012047011114191264
    2. ' ,' → logprob: -9.875120162963867
    3. '(block' → logprob: -10.125120162963867
    4. 'block' → logprob: -11.250120162963867
    5. ',
' → logprob: -12.125120162963867
    6. ' block' → logprob: -13.250120162963867
    7. ':block' → logprob: -13.500120162963867
    8. '):' → logprob: -13.625120162963867
    9. ',column' → logprob: -13.625120162963867
    10. ',col' → logprob: -13.750120162963867

Token 159: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.008676143363118172
    2. ' block' → logprob: -4.758676052093506
    3. 'arr' → logprob: -9.758676528930664
    4. ' arr' → logprob: -13.633676528930664
    5. '   ' → logprob: -13.633676528930664
    6. 'col' → logprob: -14.758676528930664
    7. 'column' → logprob: -15.633676528930664
    8. '(block' → logprob: -15.758676528930664
    9. '	block' → logprob: -15.758676528930664
    10. ' ' → logprob: -16.383676528930664

Token 160: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.00011093381908722222
    2. '_' → logprob: -9.750110626220703
    3. 'size' → logprob: -10.125110626220703
    4. '_s' → logprob: -11.875110626220703
    5. ' size' → logprob: -13.125110626220703
    6. ')' → logprob: -13.750110626220703
    7. '_SIZE' → logprob: -14.250110626220703
    8. 's' → logprob: -14.750110626220703
    9. '_)' → logprob: -15.375110626220703
    10. '_sizes' → logprob: -15.375110626220703

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02980591543018818
    2. '):
' → logprob: -3.529805898666382
    3. ':' → logprob: -10.904806137084961
    4. ' ):' → logprob: -11.279806137084961
    5. '   ' → logprob: -11.779806137084961
    6. ',' → logprob: -12.404806137084961
    7. '}:' → logprob: -13.029806137084961
    8. '):
' → logprob: -13.029806137084961
    9. ')' → logprob: -13.154806137084961
    10. ']:' → logprob: -13.279806137084961

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009172935388050973
    2. '   ' → logprob: -7.625917434692383
    3. 'arr' → logprob: -8.500917434692383
    4. '[arr' → logprob: -10.125917434692383
    5. '	   ' → logprob: -10.500917434692383
    6. '	arr' → logprob: -10.500917434692383
    7. ' for' → logprob: -10.500917434692383
    8. '<|end|>' → logprob: -11.000917434692383
    9. ' arr' → logprob: -11.125917434692383
    10. '	' → logprob: -11.500917434692383

Token 163: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.23230768740177155
    2. '   ' → logprob: -2.4823076725006104
    3. ' arr' → logprob: -2.4823076725006104
    4. 'for' → logprob: -3.9823076725006104
    5. '       ' → logprob: -4.6073079109191895
    6. ' for' → logprob: -4.6073079109191895
    7. '	arr' → logprob: -6.9823079109191895
    8. '    ' → logprob: -9.107307434082031
    9. ' ' → logprob: -9.232307434082031
    10. '_arr' → logprob: -9.607307434082031

Token 164: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008228530059568584
    2. '[:,' → logprob: -7.125823020935059
    3. '[' → logprob: -11.750823020935059
    4. '[:' → logprob: -12.875823020935059
    5. '[:,:,' → logprob: -13.500823020935059
    6. '=' → logprob: -13.625823020935059
    7. '_[' → logprob: -14.000823020935059
    8. 'resh' → logprob: -14.000823020935059
    9. '[...,' → logprob: -14.000823020935059
    10. '_res' → logprob: -14.250823020935059

Token 165: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -0.00010783452307805419
    2. '[:,' → logprob: -9.750107765197754
    3. ' resh' → logprob: -11.250107765197754
    4. '[...,' → logprob: -11.750107765197754
    5. 'reshape' → logprob: -12.000107765197754
    6. '[' → logprob: -12.125107765197754
    7. '```' → logprob: -12.125107765197754
    8. 'RESH' → logprob: -13.125107765197754
    9. 'resc' → logprob: -13.250107765197754
    10. '.reshape' → logprob: -13.625107765197754

Token 166: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -1.759734732331708e-05
    2. 'ap' → logprob: -11.375017166137695
    3. 'a' → logprob: -13.750017166137695
    4. ' ap' → logprob: -13.875017166137695
    5. 'ape' → logprob: -13.875017166137695
    6. '[' → logprob: -14.750017166137695
    7. 'apsed' → logprob: -15.000017166137695
    8. 'apped' → logprob: -15.125017166137695
    9. '   ' → logprob: -15.500017166137695
    10. '_ap' → logprob: -15.500017166137695

Token 167: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.025822950527071953
    2. '[' → logprob: -3.775822877883911
    3. '[:' → logprob: -6.02582311630249
    4. '][:' → logprob: -9.025822639465332
    5. '
' → logprob: -11.775822639465332
    6. ' [:' → logprob: -12.150822639465332
    7. '0' → logprob: -12.400822639465332
    8. '[,' → logprob: -12.525822639465332
    9. '[...,' → logprob: -13.025822639465332
    10. '   ' → logprob: -13.025822639465332

Token 168: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.016037069261074066
    2. ' col' → logprob: -4.1410369873046875
    3. '	col' → logprob: -14.141036987304688
    4. ' ' → logprob: -14.266036987304688
    5. '0' → logprob: -14.891036987304688
    6. '[col' → logprob: -15.016036987304688
    7. '   ' → logprob: -15.391036987304688
    8. '
' → logprob: -16.016036987304688
    9. '(col' → logprob: -16.641036987304688
    10. '  ' → logprob: -17.141036987304688

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004904801025986671
    2. ']*' → logprob: -8.250490188598633
    3. ' ]' → logprob: -8.625490188598633
    4. ']=' → logprob: -10.125490188598633
    5. ' ' → logprob: -12.875490188598633
    6. ']+=' → logprob: -13.500490188598633
    7. '-' → logprob: -13.750490188598633
    8. '*' → logprob: -13.750490188598633
    9. ']
' → logprob: -13.875490188598633
    10. ',' → logprob: -14.375490188598633

Token 170: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.17140790820121765
    2. '=' → logprob: -1.92140793800354
    3. ' *=' → logprob: -4.671407699584961
    4. ' =' → logprob: -6.796407699584961
    5. '*' → logprob: -7.421407699584961
    6. ' ' → logprob: -11.296407699584961
    7. '```' → logprob: -11.671407699584961
    8. ']' → logprob: -12.171407699584961
    9. '	' → logprob: -13.046407699584961
    10. '[' → logprob: -13.046407699584961

Token 171: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.014323927462100983
    2. ' arr' → logprob: -4.264323711395264
    3. '	arr' → logprob: -9.264324188232422
    4. 'np' → logprob: -10.639324188232422
    5. '(arr' → logprob: -11.139324188232422
    6. '$arr' → logprob: -11.639324188232422
    7. '   ' → logprob: -12.264324188232422
    8. '_arr' → logprob: -12.639324188232422
    9. '[arr' → logprob: -12.764324188232422
    10. ' ' → logprob: -12.889324188232422

Token 172: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021901142317801714
    2. '[:,' → logprob: -6.127190113067627
    3. '.reshape' → logprob: -12.627190589904785
    4. 'resh' → logprob: -14.127190589904785
    5. '[:' → logprob: -15.252190589904785
    6. '[...,' → logprob: -15.377190589904785
    7. '[:,:,' → logprob: -15.502190589904785
    8. '[' → logprob: -16.87718963623047
    9. '][:' → logprob: -17.00218963623047
    10. ' resh' → logprob: -17.75218963623047

Token 173: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -0.08910512179136276
    2. '_' → logprob: -2.4641051292419434
    3. '.reshape' → logprob: -9.339104652404785
    4. 'reshape' → logprob: -10.339104652404785
    5. 'RESH' → logprob: -11.339104652404785
    6. ' resh' → logprob: -11.339104652404785
    7. '[:,' → logprob: -12.089104652404785
    8. '-' → logprob: -12.839104652404785
    9. '```' → logprob: -13.589104652404785
    10. '[' → logprob: -13.964104652404785

Token 174: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -3.106736039626412e-05
    2. 'ap' → logprob: -11.125031471252441
    3. ' ap' → logprob: -13.375031471252441
    4. '[' → logprob: -13.500031471252441
    5. 'apped' → logprob: -13.500031471252441
    6. 'ап' → logprob: -13.750031471252441
    7. 'p' → logprob: -13.750031471252441
    8. '```' → logprob: -13.875031471252441
    9. 'ped' → logprob: -14.125031471252441
    10. 'a' → logprob: -14.250031471252441

Token 175: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.00010878815373871475
    2. '[:' → logprob: -9.25010871887207
    3. ' [:' → logprob: -12.62510871887207
    4. '][:' → logprob: -12.75010871887207
    5. '   ' → logprob: -12.87510871887207
    6. '[' → logprob: -13.50010871887207
    7. '(:,' → logprob: -14.25010871887207
    8. ' ' → logprob: -15.12510871887207
    9. ')' → logprob: -15.25010871887207
    10. '[:]' → logprob: -15.50010871887207

Token 176: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0789753794670105
    2. ' col' → logprob: -2.5789754390716553
    3. '[col' → logprob: -9.453975677490234
    4. '(col' → logprob: -12.203975677490234
    5. '0' → logprob: -13.453975677490234
    6. ' ' → logprob: -15.078975677490234
    7. '   ' → logprob: -15.703975677490234
    8. '	col' → logprob: -16.078975677490234
    9. 'colm' → logprob: -16.578975677490234
    10. ',col' → logprob: -16.703975677490234

Token 177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10022219270467758
    2. ' -' → logprob: -2.350222110748291
    3. ']' → logprob: -11.60022258758545
    4. ' ' → logprob: -12.72522258758545
    5. '   ' → logprob: -13.35022258758545
    6. '1' → logprob: -14.60022258758545
    7. ' ' → logprob: -15.22522258758545
    8. '−' → logprob: -15.41272258758545
    9. '	' → logprob: -15.85022258758545
    10. '[' → logprob: -16.037721633911133

Token 178: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.000018119812012
    3. '```' → logprob: -15.000018119812012
    4. '   ' → logprob: -15.187518119812012
    5. ']' → logprob: -15.500018119812012
    6. '
' → logprob: -15.812518119812012
    7. 'col' → logprob: -16.437517166137695
    8. '  ' → logprob: -17.437517166137695
    9. 'def' → logprob: -17.625017166137695
    10. '    ' → logprob: -17.750017166137695

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.750028610229492
    3. 'col' → logprob: -13.062528610229492
    4. '```' → logprob: -13.875028610229492
    5. '
' → logprob: -14.187528610229492
    6. ']' → logprob: -14.625028610229492
    7. '   ' → logprob: -14.812528610229492
    8. 'column' → logprob: -15.750028610229492
    9. 'def' → logprob: -15.875028610229492
    10. '

' → logprob: -15.937528610229492

Token 180: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09942310303449631
    2. '<|end|>' → logprob: -2.5994231700897217
    3. ')' → logprob: -4.224422931671143
    4. '<|end|>' → logprob: -6.599422931671143
    5. '   ' → logprob: -6.724422931671143
    6. ']
' → logprob: -6.974422931671143
    7. ' ]' → logprob: -7.474422931671143
    8. '
' → logprob: -8.0994234085083
    9. ',' → logprob: -8.3494234085083
    10. ']%' → logprob: -8.3494234085083

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021251477301120758
    2. 'arr' → logprob: -4.396251678466797
    3. ',' → logprob: -6.021251678466797
    4. 'for' → logprob: -6.271251678466797
    5. ')' → logprob: -7.521251678466797
    6. '[' → logprob: -7.646251678466797
    7. ' for' → logprob: -7.646251678466797
    8. '```' → logprob: -7.646251678466797
    9. '    
' → logprob: -7.896251678466797
    10. '       ' → logprob: -7.896251678466797

Token 182: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.011532507836818695
    2. ' arr' → logprob: -4.761532306671143
    3. '   ' → logprob: -6.136532306671143
    4. '       ' → logprob: -7.386532306671143
    5. '	arr' → logprob: -9.2615327835083
    6. '[arr' → logprob: -12.0115327835083
    7. ' ' → logprob: -12.1365327835083
    8. '_arr' → logprob: -12.1365327835083
    9. '(arr' → logprob: -12.6365327835083
    10. '.arr' → logprob: -12.7615327835083

Token 183: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '.reshape' → logprob: -15.5
    3. 'resh' → logprob: -16.125
    4. '[' → logprob: -17.5
    5. 'reshape' → logprob: -18.125
    6. '‌' → logprob: -18.125
    7. 'import' → logprob: -18.25
    8. '```' → logprob: -18.5
    9. '_numpy' → logprob: -19.125
    10. '[:,' → logprob: -19.4375

Token 184: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -2.0100624169572257e-05
    2. 'sh' → logprob: -11.750020027160645
    3. 'reshape' → logprob: -12.250020027160645
    4. ' resh' → logprob: -12.875020027160645
    5. 'esh' → logprob: -13.125020027160645
    6. 'RESH' → logprob: -13.500020027160645
    7. '.reshape' → logprob: -14.625020027160645
    8. '```' → logprob: -15.000020027160645
    9. '_' → logprob: -16.12502098083496
    10. ' ' → logprob: -16.25002098083496

Token 185: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -1.3425219549390022e-05
    2. 'h' → logprob: -12.50001335144043
    3. 'ap' → logprob: -12.87501335144043
    4. '_' → logprob: -12.87501335144043
    5. '[' → logprob: -13.87501335144043
    6. 'apped' → logprob: -14.12501335144043
    7. '```' → logprob: -14.37501335144043
    8. '_ap' → logprob: -14.75001335144043
    9. ' ap' → logprob: -14.87501335144043
    10. 'ап' → logprob: -15.25001335144043

Token 186: '[:,' (ID: 21158)
  Prédit: '[:,'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.0018054876709356904
    2. '[:' → logprob: -6.876805305480957
    3. '=' → logprob: -7.751805305480957
    4. '%=' → logprob: -8.876805305480957
    5. '[:]' → logprob: -9.626805305480957
    6. '][:' → logprob: -9.876805305480957
    7. '[:,:,' → logprob: -10.501805305480957
    8. '%' → logprob: -10.876805305480957
    9. '*=' → logprob: -11.126805305480957
    10. '[' → logprob: -11.501805305480957

Token 187: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.04860587790608406
    2. ' col' → logprob: -3.0486059188842773
    3. '0' → logprob: -11.798605918884277
    4. ' ' → logprob: -12.923605918884277
    5. '[col' → logprob: -12.923605918884277
    6. '	col' → logprob: -13.173605918884277
    7. ':' → logprob: -13.798605918884277
    8. '1' → logprob: -14.298605918884277
    9. '(col' → logprob: -14.548605918884277
    10. 'colm' → logprob: -14.798605918884277

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.214019307051785e-05
    2. ']%' → logprob: -10.625032424926758
    3. ']=' → logprob: -13.125032424926758
    4. ')' → logprob: -13.125032424926758
    5. ']
' → logprob: -14.000032424926758
    6. ' ]' → logprob: -14.500032424926758
    7. ']

' → logprob: -14.625032424926758
    8. ',' → logprob: -14.625032424926758
    9. '%' → logprob: -14.750032424926758
    10. '][' → logprob: -15.375032424926758

Token 189: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.007175663486123085
    2. '%' → logprob: -5.507175445556641
    3. ' %=' → logprob: -5.882175445556641
    4. '=' → logprob: -9.25717544555664
    5. ']' → logprob: -9.50717544555664
    6. ')' → logprob: -9.88217544555664
    7. '```' → logprob: -10.63217544555664
    8. ' %' → logprob: -11.25717544555664
    9. '	' → logprob: -11.38217544555664
    10. '>' → logprob: -12.00717544555664

Token 190: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019287518225610256
    2. ' mod' → logprob: -6.251928806304932
    3. '(mod' → logprob: -16.501928329467773
    4. '	mod' → logprob: -16.626928329467773
    5. 'MOD' → logprob: -18.376928329467773
    6. '
' → logprob: -18.876928329467773
    7. ' ' → logprob: -19.001928329467773
    8. 'mo' → logprob: -19.501928329467773
    9. 'moder' → logprob: -19.876928329467773
    10. ' мод' → logprob: -20.876928329467773

Token 191: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.005994682665914297
    2. 'const' → logprob: -5.13099479675293
    3. '_CONST' → logprob: -10.00599479675293
    4. '_consts' → logprob: -11.38099479675293
    5. 'Const' → logprob: -12.25599479675293
    6. 'CONST' → logprob: -12.63099479675293
    7. ' const' → logprob: -13.75599479675293
    8. 'on' → logprob: -16.25599479675293
    9. 'mod' → logprob: -16.63099479675293
    10. '```' → logprob: -16.75599479675293

Token 192: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1719476878643036
    2. '
' → logprob: -2.296947717666626
    3. '<|end|>' → logprob: -3.296947717666626
    4. 'for' → logprob: -4.421947479248047
    5. ' for' → logprob: -5.671947479248047
    6. '    
' → logprob: -6.046947479248047
    7. ' ' → logprob: -7.796947479248047
    8. '  
' → logprob: -7.796947479248047
    9. ')' → logprob: -7.921947479248047
    10. ',' → logprob: -8.421947479248047

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049703449010849
    2. 'for' → logprob: -3.299703359603882
    3. '<|end|>' → logprob: -5.174703598022461
    4. ' for' → logprob: -5.799703598022461
    5. '
' → logprob: -6.674703598022461
    6. '    
' → logprob: -7.049703598022461
    7. ')' → logprob: -8.674703598022461
    8. '	for' → logprob: -8.924703598022461
    9. ' ' → logprob: -9.424703598022461
    10. 'arr' → logprob: -9.549703598022461

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03384013846516609
    2. '   ' → logprob: -4.283840179443359
    3. ' for' → logprob: -4.533840179443359
    4. 'return' → logprob: -4.908840179443359
    5. 'arr' → logprob: -7.283840179443359
    6. 'result' → logprob: -8.15884017944336
    7. '    
' → logprob: -9.78384017944336
    8. 'acc' → logprob: -9.90884017944336
    9. '#' → logprob: -10.15884017944336
    10. 'c' → logprob: -10.53384017944336

Token 195: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.03896694630384445
    2. ' row' → logprob: -3.2889668941497803
    3. 'col' → logprob: -7.413967132568359
    4. 'block' → logprob: -8.78896713256836
    5. 'r' → logprob: -10.03896713256836
    6. 'i' → logprob: -11.03896713256836
    7. ' block' → logprob: -11.10146713256836
    8. ' ' → logprob: -11.41396713256836
    9. '	row' → logprob: -11.47646713256836
    10. ' col' → logprob: -11.60146713256836

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976919662207365
    2. 'in' → logprob: -4.634768962860107
    3. 'range' → logprob: -11.759769439697266
    4. ' ' → logprob: -13.634769439697266
    5. 'n' → logprob: -13.759769439697266
    6. '```' → logprob: -14.759769439697266
    7. 'import' → logprob: -15.009769439697266
    8. '<|end|>' → logprob: -15.009769439697266
    9. '0' → logprob: -15.384769439697266
    10. '1' → logprob: -15.509769439697266

Token 197: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141783356666565
    2. 'range' → logprob: -1.7014178037643433
    3. ' ' → logprob: -13.951417922973633
    4. ' in' → logprob: -13.951417922973633
    5. '(range' → logprob: -13.951417922973633
    6. 'in' → logprob: -14.826417922973633
    7. '	range' → logprob: -15.326417922973633
    8. '[' → logprob: -15.826417922973633
    9. ' rang' → logprob: -16.138917922973633
    10. '   ' → logprob: -16.263917922973633

Token 198: '(' (ID: 7)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.3868848979473114
    2. '(' → logprob: -1.1368849277496338
    3. '(arr' → logprob: -12.136884689331055
    4. ' (' → logprob: -12.636884689331055
    5. '(len' → logprob: -12.636884689331055
    6. '(Block' → logprob: -14.511884689331055
    7. ' block' → logprob: -14.886884689331055
    8. '(row' → logprob: -15.261884689331055
    9. 'block' → logprob: -15.386884689331055
    10. '(b' → logprob: -15.886884689331055

Token 199: '1' (ID: 16)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.636887788772583
    2. '1' → logprob: -0.761887788772583
    3. ' block' → logprob: -6.011887550354004
    4. ' ' → logprob: -6.886887550354004
    5. '(block' → logprob: -7.636887550354004
    6. '0' → logprob: -8.261887550354004
    7. '	block' → logprob: -11.386887550354004
    8. '(' → logprob: -11.511887550354004
    9. '   ' → logprob: -12.136887550354004
    10. 'bloc' → logprob: -12.136887550354004

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8550976164988242e-05
    2. ' ,' → logprob: -11.500018119812012
    3. '(block' → logprob: -12.250018119812012
    4. 'block' → logprob: -12.750018119812012
    5. ' block' → logprob: -14.875018119812012
    6. ',
' → logprob: -16.125019073486328
    7. ':block' → logprob: -16.375019073486328
    8. '_,' → logprob: -16.500019073486328
    9. '<|end|>' → logprob: -17.125019073486328
    10. ')' → logprob: -18.000019073486328

Token 201: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.07889111340045929
    2. ' block' → logprob: -2.5788910388946533
    3. 'arr' → logprob: -14.828890800476074
    4. '   ' → logprob: -15.078890800476074
    5. '(block' → logprob: -15.203890800476074
    6. '	block' → logprob: -15.578890800476074
    7. ':block' → logprob: -16.20389175415039
    8. ' ' → logprob: -16.45389175415039
    9. '.block' → logprob: -17.70389175415039
    10. ')' → logprob: -17.95389175415039

Token 202: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.003046642756089568
    2. 'size' → logprob: -5.87804651260376
    3. '_' → logprob: -8.503046989440918
    4. ' size' → logprob: -11.253046989440918
    5. 's' → logprob: -11.878046989440918
    6. '_s' → logprob: -12.378046989440918
    7. ')' → logprob: -12.503046989440918
    8. '_SIZE' → logprob: -13.378046989440918
    9. '```' → logprob: -13.628046989440918
    10. 'block' → logprob: -13.878046989440918

Token 203: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.42885205149650574
    2. '):' → logprob: -1.0538520812988281
    3. ',' → logprob: -9.178852081298828
    4. '   ' → logprob: -10.928852081298828
    5. ':' → logprob: -11.303852081298828
    6. '):
' → logprob: -11.928852081298828
    7. ' ):
' → logprob: -12.678852081298828
    8. ':
' → logprob: -12.803852081298828
    9. ' ):' → logprob: -13.303852081298828
    10. '}:' → logprob: -14.053852081298828

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07466001063585281
    2. '   ' → logprob: -2.824660062789917
    3. 'arr' → logprob: -4.574659824371338
    4. 'for' → logprob: -6.449659824371338
    5. ' for' → logprob: -7.449659824371338
    6. ' arr' → logprob: -9.199660301208496
    7. '	arr' → logprob: -10.949660301208496
    8. '[arr' → logprob: -11.574660301208496
    9. 'import' → logprob: -13.199660301208496
    10. '(arr' → logprob: -13.449660301208496

Token 205: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.07024339586496353
    2. ' arr' → logprob: -3.4452433586120605
    3. '   ' → logprob: -3.5702433586120605
    4. 'for' → logprob: -5.1952433586120605
    5. '       ' → logprob: -6.8202433586120605
    6. ' for' → logprob: -6.9452433586120605
    7. ' ' → logprob: -9.695243835449219
    8. '	arr' → logprob: -9.820243835449219
    9. '           ' → logprob: -10.195243835449219
    10. '  ' → logprob: -11.570243835449219

Token 206: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'resh' → logprob: -16.75
    3. '.reshape' → logprob: -17.125
    4. 'for' → logprob: -17.875
    5. '```' → logprob: -18.25
    6. '[' → logprob: -18.625
    7. 'import' → logprob: -19.25
    8. '‌' → logprob: -19.25
    9. '_
' → logprob: -19.5
    10. 'reshape' → logprob: -20.0

Token 207: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -7.433829159708694e-05
    2. ' resh' → logprob: -9.87507438659668
    3. 'reshape' → logprob: -12.12507438659668
    4. '```' → logprob: -12.50007438659668
    5. '
' → logprob: -13.12507438659668
    6. ' ' → logprob: -13.12507438659668
    7. '.reshape' → logprob: -13.50007438659668
    8. '   ' → logprob: -13.75007438659668
    9. 'RESH' → logprob: -13.75007438659668
    10. 'for' → logprob: -14.12507438659668

Token 208: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -5.676981345459353e-06
    2. 'ap' → logprob: -13.000005722045898
    3. 'h' → logprob: -13.750005722045898
    4. 'apped' → logprob: -14.625005722045898
    5. '_' → logprob: -15.125005722045898
    6. 'ape' → logprob: -15.250005722045898
    7. ' ap' → logprob: -15.375005722045898
    8. '_ap' → logprob: -15.375005722045898
    9. 'ped' → logprob: -16.0000057220459
    10. '```' → logprob: -16.0000057220459

Token 209: '[row' (ID: 35899)
  Prédit: '[:,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.638336718082428
    2. '[row' → logprob: -0.763336718082428
    3. '[' → logprob: -5.888336658477783
    4. ',' → logprob: -6.263336658477783
    5. ',row' → logprob: -7.888336658477783
    6. '[:' → logprob: -8.138337135314941
    7. ',[' → logprob: -9.263337135314941
    8. '[,' → logprob: -9.388337135314941
    9. '[col' → logprob: -10.888337135314941
    10. ',:,' → logprob: -11.013337135314941

Token 210: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013425263576209545
    2. '[:,' → logprob: -5.013425350189209
    3. ',:,' → logprob: -5.263425350189209
    4. ':,' → logprob: -7.013425350189209
    5. '][:' → logprob: -8.38842487335205
    6. ' ,' → logprob: -8.88842487335205
    7. ' :,' → logprob: -9.01342487335205
    8. ',:' → logprob: -10.38842487335205
    9. ',
' → logprob: -11.13842487335205
    10. '‌,' → logprob: -11.51342487335205

Token 211: ' *=' (ID: 25253)
  Prédit: '[:,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:,' → logprob: -0.028174038976430893
    2. ',:,' → logprob: -4.153173923492432
    3. ',' → logprob: -4.778173923492432
    4. ':,' → logprob: -6.028173923492432
    5. '[:' → logprob: -7.778173923492432
    6. '][:' → logprob: -8.02817440032959
    7. ',:' → logprob: -8.40317440032959
    8. '(:,' → logprob: -9.15317440032959
    9. ' :,' → logprob: -9.77817440032959
    10. '=' → logprob: -10.77817440032959

Token 212: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.009769308380782604
    2. ' arr' → logprob: -4.634769439697266
    3. '(arr' → logprob: -11.759769439697266
    4. '	arr' → logprob: -12.634769439697266
    5. '[arr' → logprob: -13.509769439697266
    6. '$arr' → logprob: -14.884769439697266
    7. '   ' → logprob: -16.009769439697266
    8. ' ' → logprob: -16.134769439697266
    9. '.arr' → logprob: -16.509769439697266
    10. '<arr' → logprob: -16.759769439697266

Token 213: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.895480277715251e-06
    2. 'resh' → logprob: -12.750008583068848
    3. '[row' → logprob: -13.375008583068848
    4. 'arr' → logprob: -14.000008583068848
    5. '[:,' → logprob: -14.125008583068848
    6. '[' → logprob: -14.250008583068848
    7. '_sh' → logprob: -14.750008583068848
    8. 'reshape' → logprob: -14.875008583068848
    9. 'sh' → logprob: -15.000008583068848
    10. '```' → logprob: -15.750008583068848

Token 214: 'resh' (ID: 3485)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04131002724170685
    2. 'col' → logprob: -3.9163100719451904
    3. 'const' → logprob: -4.541309833526611
    4. 'arr' → logprob: -4.916309833526611
    5. '```' → logprob: -6.416309833526611
    6. '[' → logprob: -7.666309833526611
    7. 'row' → logprob: -9.04131031036377
    8. '[col' → logprob: -9.29131031036377
    9. '[:,' → logprob: -9.66631031036377
    10. '
' → logprob: -10.54131031036377

Token 215: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -5.574251918005757e-05
    2. 'ap' → logprob: -11.125055313110352
    3. '_ap' → logprob: -11.875055313110352
    4. ' ap' → logprob: -12.000055313110352
    5. 'ped' → logprob: -12.375055313110352
    6. 'ап' → logprob: -12.375055313110352
    7. 'a' → logprob: -12.500055313110352
    8. '[' → logprob: -12.500055313110352
    9. '```' → logprob: -12.750055313110352
    10. '_' → logprob: -13.250055313110352

Token 216: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -7.982165698194876e-05
    2. 'row' → logprob: -9.500080108642578
    3. '[' → logprob: -12.875080108642578
    4. '[
' → logprob: -13.625080108642578
    5. '(row' → logprob: -14.750080108642578
    6. '[[' → logprob: -15.125080108642578
    7. '[(' → logprob: -16.250080108642578
    8. '	row' → logprob: -16.625080108642578
    9. '
' → logprob: -16.875080108642578
    10. ',row' → logprob: -16.875080108642578

Token 217: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006729576736688614
    2. ' -' → logprob: -5.006729602813721
    3. ',' → logprob: -11.506729125976562
    4. '[row' → logprob: -12.881729125976562
    5. ',row' → logprob: -14.006729125976562
    6. 'row' → logprob: -16.006729125976562
    7. '(row' → logprob: -16.131729125976562
    8. '−' → logprob: -16.256729125976562
    9. '   ' → logprob: -16.381729125976562
    10. '[' → logprob: -16.381729125976562

Token 218: ' ' (ID: 220)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0004933410091325641
    2. ' row' → logprob: -7.62549352645874
    3. '0' → logprob: -13.500493049621582
    4. ',row' → logprob: -13.750493049621582
    5. '(row' → logprob: -14.000493049621582
    6. '	row' → logprob: -14.375493049621582
    7. ' ' → logprob: -14.500493049621582
    8. '   ' → logprob: -14.875493049621582
    9. '[row' → logprob: -15.125493049621582
    10. '=row' → logprob: -16.1254940032959

Token 219: '1' (ID: 16)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.8670179997570813e-05
    2. ' row' → logprob: -11.125019073486328
    3. '0' → logprob: -12.500019073486328
    4. ' ' → logprob: -16.625019073486328
    5. '(row' → logprob: -16.625019073486328
    6. ',' → logprob: -19.125019073486328
    7. ',row' → logprob: -19.125019073486328
    8. '	row' → logprob: -19.250019073486328
    9. '
' → logprob: -19.625019073486328
    10. '```' → logprob: -19.750019073486328

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18274842202663422
    2. ']' → logprob: -2.307748317718506
    3. '[:,' → logprob: -2.932748317718506
    4. '][:' → logprob: -5.557748317718506
    5. '<|end|>' → logprob: -5.932748317718506
    6. '[row' → logprob: -6.432748317718506
    7. ',row' → logprob: -6.432748317718506
    8. ',:,' → logprob: -6.932748317718506
    9. ',:' → logprob: -7.432748317718506
    10. '[' → logprob: -7.932748317718506

Token 221: ' -' (ID: 533)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.8968223929405212
    2. '-' → logprob: -1.146822452545166
    3. 'row' → logprob: -1.896822452545166
    4. '0' → logprob: -2.396822452545166
    5. ':' → logprob: -4.646822452545166
    6. ' :]' → logprob: -5.021822452545166
    7. ']' → logprob: -5.146822452545166
    8. ':-' → logprob: -5.771822452545166
    9. ' -' → logprob: -6.271822452545166
    10. ' ' → logprob: -6.521822452545166

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '2' → logprob: -16.625001907348633
    4. '```' → logprob: -17.000001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '
' → logprob: -18.437501907348633
    7. '۱' → logprob: -18.562501907348633
    8. '１' → logprob: -18.750001907348633
    9. '১' → logprob: -19.062501907348633
    10. ']' → logprob: -19.437501907348633

Token 223: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47437578439712524
    2. ']' → logprob: -0.9743757843971252
    3. ']%' → logprob: -8.59937572479248
    4. ']
' → logprob: -9.72437572479248
    5. ' ]
' → logprob: -10.34937572479248
    6. ' ]' → logprob: -11.22437572479248
    7. ']

' → logprob: -12.47437572479248
    8. '   ' → logprob: -13.47437572479248
    9. ':]
' → logprob: -14.22437572479248
    10. '%' → logprob: -14.22437572479248

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026856115087866783
    2. '   ' → logprob: -3.6518561840057373
    3. 'arr' → logprob: -7.651855945587158
    4. ' arr' → logprob: -10.526856422424316
    5. 'import' → logprob: -11.151856422424316
    6. '
' → logprob: -11.401856422424316
    7. ' ' → logprob: -12.276856422424316
    8. '	arr' → logprob: -12.526856422424316
    9. '```' → logprob: -12.526856422424316
    10. '[arr' → logprob: -12.901856422424316

Token 225: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.01607179269194603
    2. ' arr' → logprob: -4.141071796417236
    3. '   ' → logprob: -10.516071319580078
    4. '       ' → logprob: -12.016071319580078
    5. '	arr' → logprob: -13.016071319580078
    6. ' ' → logprob: -14.516071319580078
    7. '_arr' → logprob: -15.516071319580078
    8. '
' → logprob: -15.641071319580078
    9. '  ' → logprob: -15.641071319580078
    10. '    ' → logprob: -15.766071319580078

Token 226: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '[' → logprob: -17.5
    3. '.reshape' → logprob: -19.0
    4. 'resh' → logprob: -19.625
    5. '```' → logprob: -20.375
    6. '_
' → logprob: -20.5
    7. '‌' → logprob: -20.625
    8. 'reshape' → logprob: -20.625
    9. '[:,' → logprob: -20.875
    10. '_]' → logprob: -21.375

Token 227: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -0.0001576506474521011
    2. 'reshape' → logprob: -9.125157356262207
    3. 'sh' → logprob: -10.625157356262207
    4. ' resh' → logprob: -11.125157356262207
    5. 'RESH' → logprob: -13.000157356262207
    6. '.reshape' → logprob: -13.000157356262207
    7. 'esh' → logprob: -14.000157356262207
    8. '```' → logprob: -14.250157356262207
    9. 'reshold' → logprob: -14.375157356262207
    10. 'rew' → logprob: -14.750157356262207

Token 228: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -8.888114098226652e-05
    2. 'ap' → logprob: -10.500088691711426
    3. '_' → logprob: -10.875088691711426
    4. ' ap' → logprob: -11.125088691711426
    5. '_ap' → logprob: -11.375088691711426
    6. '[' → logprob: -12.375088691711426
    7. 'ап' → logprob: -13.375088691711426
    8. 'ed' → logprob: -13.500088691711426
    9. 'apped' → logprob: -13.750088691711426
    10. 'a' → logprob: -13.750088691711426

Token 229: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.02454458549618721
    2. '%=' → logprob: -4.524544715881348
    3. '%' → logprob: -4.899544715881348
    4. ' %=' → logprob: -5.274544715881348
    5. '[:,' → logprob: -7.524544715881348
    6. 'row' → logprob: -9.524544715881348
    7. '[:]' → logprob: -9.899544715881348
    8. '[' → logprob: -10.024544715881348
    9. ',row' → logprob: -10.649544715881348
    10. '[
' → logprob: -11.024544715881348

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008228530059568584
    2. ',' → logprob: -7.375823020935059
    3. ']%' → logprob: -8.625823020935059
    4. '%' → logprob: -12.000823020935059
    5. ' ]' → logprob: -12.625823020935059
    6. ',:' → logprob: -13.125823020935059
    7. ':]' → logprob: -13.875823020935059
    8. ')' → logprob: -14.000823020935059
    9. '][:' → logprob: -14.000823020935059
    10. ',%' → logprob: -14.375823020935059

Token 231: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.003979262430220842
    2. ' %=' → logprob: -5.628979206085205
    3. '%' → logprob: -7.878979206085205
    4. '=' → logprob: -15.878979682922363
    5. ' %' → logprob: -16.378978729248047
    6. ')%' → logprob: -16.503978729248047
    7. ' ' → logprob: -17.628978729248047
    8. ' ' → logprob: -17.628978729248047
    9. '%
' → logprob: -17.753978729248047
    10. ')' → logprob: -18.003978729248047

Token 232: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07889275997877121
    2. ' mod' → logprob: -2.578892707824707
    3. '(mod' → logprob: -13.328892707824707
    4. '	mod' → logprob: -13.703892707824707
    5. ' ' → logprob: -16.078893661499023
    6. 'MOD' → logprob: -16.328893661499023
    7. ' мод' → logprob: -17.703893661499023
    8. ' MOD' → logprob: -17.828893661499023
    9. ' ' → logprob: -17.828893661499023
    10. '_mod' → logprob: -18.078893661499023

Token 233: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.025326762348413467
    2. 'const' → logprob: -3.775326728820801
    3. '_CONST' → logprob: -6.525326728820801
    4. 'CONST' → logprob: -7.650326728820801
    5. 'mod' → logprob: -9.2753267288208
    6. 'MOD' → logprob: -10.7753267288208
    7. '_mod' → logprob: -11.2753267288208
    8. 'Const' → logprob: -12.2753267288208
    9. '```' → logprob: -12.9003267288208
    10. '_MOD' → logprob: -13.6503267288208

Token 234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008301673457026482
    2. 'return' → logprob: -4.883301734924316
    3. ' return' → logprob: -7.508301734924316
    4. '    
' → logprob: -9.508301734924316
    5. '
' → logprob: -10.383301734924316
    6. '<|end|>' → logprob: -11.633301734924316
    7. 'arr' → logprob: -12.258301734924316
    8. 'result' → logprob: -12.383301734924316
    9. '```' → logprob: -12.633301734924316
    10. '#' → logprob: -12.758301734924316

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005684172734618187
    2. 'return' → logprob: -5.2556843757629395
    3. ' return' → logprob: -7.7556843757629395
    4. '    
' → logprob: -11.755683898925781
    5. '```' → logprob: -12.130683898925781
    6. 'def' → logprob: -13.130683898925781
    7. ')' → logprob: -13.755683898925781
    8. '	return' → logprob: -14.130683898925781
    9. '
' → logprob: -14.255683898925781
    10. 'arr' → logprob: -14.630683898925781

Token 236: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03868485614657402
    2. '   ' → logprob: -3.413684844970703
    3. 'result' → logprob: -5.413684844970703
    4. ' return' → logprob: -7.663684844970703
    5. 'arr' → logprob: -9.913684844970703
    6. 'c' → logprob: -11.163684844970703
    7. 'product' → logprob: -11.538684844970703
    8. ')' → logprob: -12.663684844970703
    9. '    
' → logprob: -12.663684844970703
    10. 'output' → logprob: -12.663684844970703

Token 237: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -5.598092684522271e-05
    2. ' arr' → logprob: -9.875056266784668
    3. 'np' → logprob: -12.625056266784668
    4. '(arr' → logprob: -14.125056266784668
    5. 'int' → logprob: -15.250056266784668
    6. '	arr' → logprob: -16.50005531311035
    7. '_arr' → logprob: -18.12505531311035
    8. 'array' → logprob: -18.25005531311035
    9. '[arr' → logprob: -18.25005531311035
    10. '$arr' → logprob: -18.50005531311035

Token 238: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.270863801240921
    2. '<|end|>' → logprob: -1.5208637714385986
    3. '[' → logprob: -4.520864009857178
    4. '.' → logprob: -7.020864009857178
    5. '.reshape' → logprob: -7.520864009857178
    6. '.tolist' → logprob: -7.645864009857178
    7. '```' → logprob: -7.895864009857178
    8. '_arr' → logprob: -8.02086353302002
    9. '_tokens' → logprob: -8.39586353302002
    10. '<|end|>' → logprob: -8.39586353302002

Token 239: 'resh' (ID: 3485)
  Prédit: 'resh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resh' → logprob: -4.4849443838757e-06
    2. 'reshape' → logprob: -13.250004768371582
    3. 'arr' → logprob: -13.375004768371582
    4. '.reshape' → logprob: -14.875004768371582
    5. 'RESH' → logprob: -15.000004768371582
    6. 'sh' → logprob: -15.875004768371582
    7. ' resh' → logprob: -16.375003814697266
    8. '```' → logprob: -16.625003814697266
    9. 'flatten' → logprob: -17.750003814697266
    10. 'r' → logprob: -17.875003814697266

Token 240: 'aped' (ID: 16020)
  Prédit: 'aped'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aped' → logprob: -0.00011272187111899257
    2. 'ap' → logprob: -9.750112533569336
    3. 'ped' → logprob: -10.875112533569336
    4. 'apt' → logprob: -11.375112533569336
    5. '_ap' → logprob: -12.125112533569336
    6. 'apsed' → logprob: -12.500112533569336
    7. ' ap' → logprob: -13.000112533569336
    8. 'ап' → logprob: -13.250112533569336
    9. 'ed' → logprob: -13.375112533569336
    10. 'apped' → logprob: -13.500112533569336

Token 241: '.r' (ID: 2951)
  Prédit: '.flatten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flatten' → logprob: -0.06560859829187393
    2. '.reshape' → logprob: -3.065608501434326
    3. '.r' → logprob: -5.065608501434326
    4. '[:,' → logprob: -5.315608501434326
    5. '[-' → logprob: -6.065608501434326
    6. '.flat' → logprob: -6.565608501434326
    7. ',' → logprob: -6.815608501434326
    8. '.' → logprob: -7.940608501434326
    9. '[' → logprob: -8.565608978271484
    10. '<|end|>' → logprob: -9.315608978271484

Token 242: 'avel' (ID: 8345)
  Prédit: 'avel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avel' → logprob: -0.005070210434496403
    2. 'esize' → logprob: -6.005070209503174
    3. 'esh' → logprob: -6.005070209503174
    4. 'aveled' → logprob: -10.005070686340332
    5. 'eturn' → logprob: -10.130070686340332
    6. 'reshape' → logprob: -10.505070686340332
    7. '```' → logprob: -12.130070686340332
    8. 'esized' → logprob: -13.630070686340332
    9. 'e' → logprob: -13.755070686340332
    10. 'es' → logprob: -13.755070686340332

Token 243: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0722215324640274
    2. '(' → logprob: -3.197221517562866
    3. '()[' → logprob: -3.572221517562866
    4. '[' → logprob: -8.822221755981445
    5. '().' → logprob: -8.822221755981445
    6. '()(' → logprob: -9.197221755981445
    7. '([' → logprob: -10.447221755981445
    8. '()
' → logprob: -10.572221755981445
    9. '(arr' → logprob: -10.697221755981445
    10. '()<' → logprob: -11.197221755981445

Token 244: '[:' (ID: 7808)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08766601979732513
    2. '[' → logprob: -3.5876660346984863
    3. '<|end|>' → logprob: -3.5876660346984863
    4. '()' → logprob: -4.837666034698486
    5. '(
' → logprob: -4.962666034698486
    6. '(arr' → logprob: -5.462666034698486
    7. '[
' → logprob: -6.337666034698486
    8. '```' → logprob: -6.712666034698486
    9. '[:]' → logprob: -6.712666034698486
    10. ')' → logprob: -7.087666034698486

Token 245: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.024538414552807808
    2. 'len' → logprob: -4.149538516998291
    3. 'param' → logprob: -4.774538516998291
    4. ' arr' → logprob: -10.774538040161133
    5. ' len' → logprob: -13.149538040161133
    6. 'arg' → logprob: -13.899538040161133
    7. ' param' → logprob: -14.024538040161133
    8. '-arr' → logprob: -15.274538040161133
    9. 'n' → logprob: -15.399538040161133
    10. 'length' → logprob: -16.024538040161133

Token 246: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0028697808738797903
    2. '_n' → logprob: -5.877869606018066
    3. 'length' → logprob: -10.627869606018066
    4. '_lengths' → logprob: -11.252869606018066
    5. '_size' → logprob: -12.252869606018066
    6. 'ay' → logprob: -12.252869606018066
    7. '_LENGTH' → logprob: -12.502869606018066
    8. '_l' → logprob: -13.127869606018066
    9. 'n' → logprob: -13.252869606018066
    10. 'len' → logprob: -13.377869606018066

Token 247: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14324656128883362
    2. ')' → logprob: -2.018246650695801
    3. '])' → logprob: -7.518246650695801
    4. ')]' → logprob: -11.1432466506958
    5. ' ]' → logprob: -12.3932466506958
    6. ' )' → logprob: -13.6432466506958
    7. '）' → logprob: -13.7682466506958
    8. '}' → logprob: -13.8932466506958
    9. '   ' → logprob: -13.8932466506958
    10. '[' → logprob: -14.1432466506958

Token 248: '#' (ID: 2)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5327597856521606
    2. 'arr' → logprob: -2.032759666442871
    3. 'param' → logprob: -2.407759666442871
    4. '#' → logprob: -2.657759666442871
    5. 'data' → logprob: -3.157759666442871
    6. 'import' → logprob: -4.282759666442871
    7. 'result' → logprob: -4.407759666442871
    8. '[' → logprob: -4.657759666442871
    9. '```' → logprob: -5.032759666442871
    10. 'output' → logprob: -5.157759666442871

Token 249: ' System' (ID: 1219)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9823687076568604
    2. 'arr' → logprob: -1.1073687076568604
    3. 'param' → logprob: -1.4823687076568604
    4. 'array' → logprob: -3.4823687076568604
    5. '#' → logprob: -4.232368469238281
    6. 'data' → logprob: -4.482368469238281
    7. 'params' → logprob: -6.232368469238281
    8. 'values' → logprob: -6.357368469238281
    9. 'result' → logprob: -7.107368469238281
    10. 'def' → logprob: -7.232368469238281

Token 250: 'atic' (ID: 2351)
  Prédit: 'atic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atic' → logprob: -0.1301226019859314
    2. 'def' → logprob: -3.005122661590576
    3. '_values' → logprob: -3.380122661590576
    4. '_input' → logprob: -4.380122661590576
    5. '#' → logprob: -5.130122661590576
    6. 'input' → logprob: -5.380122661590576
    7. '_array' → logprob: -5.630122661590576
    8. '_' → logprob: -6.255122661590576
    9. 'atically' → logprob: -6.255122661590576
    10. 'array' → logprob: -6.755122661590576

Token 251: ' function' (ID: 1114)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1823970526456833
    2. '#' → logprob: -3.0573971271514893
    3. 'input' → logprob: -3.0573971271514893
    4. 'def' → logprob: -4.30739688873291
    5. 'array' → logprob: -4.43239688873291
    6. 'data' → logprob: -4.43239688873291
    7. 'dp' → logprob: -4.55739688873291
    8. 'a' → logprob: -5.43239688873291
    9. 'sequence' → logprob: -5.55739688873291
    10. 'param' → logprob: -5.55739688873291

Token 252: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027537673711776733
    2. 'for' → logprob: -3.6525375843048096
    3. '#' → logprob: -7.152537822723389
    4. '(' → logprob: -8.90253734588623
    5. '=' → logprob: -9.02753734588623
    6. ' for' → logprob: -9.27753734588623
    7. '_for' → logprob: -10.77753734588623
    8. 'to' → logprob: -10.90253734588623
    9. 'import' → logprob: -11.52753734588623
    10. ':' → logprob: -11.90253734588623

Token 253: ' factorial' (ID: 111204)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39012664556503296
    2. 'mod' → logprob: -2.1401267051696777
    3. 'main' → logprob: -3.1401267051696777
    4. 'reading' → logprob: -3.1401267051696777
    5. 'prefix' → logprob: -3.8901267051696777
    6. 'comput' → logprob: -4.515126705169678
    7. 'input' → logprob: -4.640126705169678
    8. 'comb' → logprob: -4.640126705169678
    9. 'multip' → logprob: -4.765126705169678
    10. 'binary' → logprob: -4.765126705169678

Token 254: ' arrays' (ID: 38774)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00033069768687710166
    2. '(param' → logprob: -9.000330924987793
    3. '(n' → logprob: -9.000330924987793
    4. '_mod' → logprob: -10.000330924987793
    5. '_def' → logprob: -11.250330924987793
    6. 'param' → logprob: -12.000330924987793
    7. 'mod' → logprob: -12.000330924987793
    8. '(' → logprob: -12.500330924987793
    9. ' def' → logprob: -13.375330924987793
    10. '_param' → logprob: -13.500330924987793

Token 255: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.824579784530215e-05
    2. 'import' → logprob: -9.8750581741333
    3. '
' → logprob: -12.3750581741333
    4. '```' → logprob: -13.6250581741333
    5. ' def' → logprob: -14.3750581741333
    6. '#' → logprob: -15.6250581741333
    7. 'from' → logprob: -15.7500581741333
    8. '(def' → logprob: -16.000059127807617
    9. ':def' → logprob: -16.125059127807617
    10. '(
' → logprob: -16.875059127807617

Token 256: ' invers' (ID: 38721)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.03772125393152237
    2. 'in' → logprob: -4.537721157073975
    3. 'inv' → logprob: -4.787721157073975
    4. 'com' → logprob: -5.037721157073975
    5. ' inverse' → logprob: -5.412721157073975
    6. 'mod' → logprob: -5.412721157073975
    7. 'comb' → logprob: -7.037721157073975
    8. 'c' → logprob: -7.412721157073975
    9. ' invers' → logprob: -7.912721157073975
    10. 'bin' → logprob: -9.162721633911133

Token 257: 'es' (ID: 268)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.4918777048587799
    2. 'ersion' → logprob: -0.9918776750564575
    3. 'verse' → logprob: -4.866877555847168
    4. 'ers' → logprob: -5.241877555847168
    5. 'er' → logprob: -5.991877555847168
    6. 'olution' → logprob: -7.366877555847168
    7. 'ert' → logprob: -7.616877555847168
    8. 'def' → logprob: -8.116877555847168
    9. 'orm' → logprob: -8.866877555847168
    10. 'version' → logprob: -9.741877555847168

Token 258: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002529290970414877
    2. 'import' → logprob: -6.002529144287109
    3. '
' → logprob: -10.00252914428711
    4. '#' → logprob: -12.87752914428711
    5. 'fact' → logprob: -13.50252914428711
    6. '```' → logprob: -13.75252914428711
    7. 'from' → logprob: -14.00252914428711
    8. 'class' → logprob: -14.25252914428711
    9. '(
' → logprob: -14.75252914428711
    10. 'factor' → logprob: -15.00252914428711

Token 259: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.813969957875088e-05
    2. 'import' → logprob: -9.625067710876465
    3. ' def' → logprob: -14.250067710876465
    4. '```' → logprob: -14.250067710876465
    5. 'from' → logprob: -15.250067710876465
    6. '#' → logprob: -15.375067710876465
    7. '
' → logprob: -16.25006866455078
    8. 'de' → logprob: -16.50006866455078
    9. 'factor' → logprob: -16.87506866455078
    10. ':def' → logprob: -17.00006866455078

Token 260: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.038072019815444946
    2. 'mod' → logprob: -4.163072109222412
    3. ' mod' → logprob: -4.663072109222412
    4. 'factor' → logprob: -5.288072109222412
    5. ' pre' → logprob: -6.163072109222412
    6. ' modular' → logprob: -6.413072109222412
    7. 'pre' → logprob: -6.913072109222412
    8. ' prepare' → logprob: -7.163072109222412
    9. ' compute' → logprob: -7.163072109222412
    10. 'fact' → logprob: -8.038071632385254

Token 261: '_and' (ID: 18645)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.4871652126312256
    2. '(n' → logprob: -1.4871652126312256
    3. '_arrays' → logprob: -2.2371652126312256
    4. '_mod' → logprob: -3.2371652126312256
    5. '_factor' → logprob: -5.362165451049805
    6. '_arr' → logprob: -5.987165451049805
    7. 's' → logprob: -6.487165451049805
    8. '_and' → logprob: -6.612165451049805
    9. '(arr' → logprob: -6.862165451049805
    10. '_inverse' → logprob: -7.862165451049805

Token 262: '_inverse' (ID: 188797)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.046026743948459625
    2. 'in' → logprob: -3.7960267066955566
    3. 'inv' → logprob: -3.7960267066955566
    4. '_inverse' → logprob: -9.921027183532715
    5. 'invert' → logprob: -11.546027183532715
    6. '_inv' → logprob: -13.296027183532715
    7. 'factor' → logprob: -13.671027183532715
    8. 'Inverse' → logprob: -13.921027183532715
    9. 'mod' → logprob: -14.796027183532715
    10. ' inverse' → logprob: -14.921027183532715

Token 263: '_array' (ID: 8766)
  Prédit: '(param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(param' → logprob: -0.6435896754264832
    2. '(n' → logprob: -0.8935896754264832
    3. '(max' → logprob: -3.393589735031128
    4. 's' → logprob: -4.018589496612549
    5. '_arrays' → logprob: -4.518589496612549
    6. '(arr' → logprob: -6.518589496612549
    7. '(num' → logprob: -7.768589496612549
    8. '_array' → logprob: -8.643589973449707
    9. '(mod' → logprob: -9.018589973449707
    10. 'param' → logprob: -9.268589973449707

Token 264: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47540083527565
    2. '(param' → logprob: -0.9754008054733276
    3. '(max' → logprob: -7.350400924682617
    4. '(size' → logprob: -8.350400924682617
    5. '(length' → logprob: -8.600400924682617
    6. '(limit' → logprob: -9.350400924682617
    7. ' (' → logprob: -9.975400924682617
    8. '(num' → logprob: -10.100400924682617
    9. '(' → logprob: -10.475400924682617
    10. '(arr' → logprob: -10.850400924682617

Token 265: 'upper' (ID: 26119)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.3655206859111786
    2. 'n' → logprob: -1.740520715713501
    3. '(n' → logprob: -2.240520715713501
    4. 'size' → logprob: -4.865520477294922
    5. 'max' → logprob: -5.115520477294922
    6. '(param' → logprob: -5.365520477294922
    7. '(max' → logprob: -5.990520477294922
    8. 'limit' → logprob: -6.865520477294922
    9. '(size' → logprob: -7.365520477294922
    10. ')' → logprob: -7.490520477294922

Token 266: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.014139298349618912
    2. '_limit' → logprob: -4.389139175415039
    3. '_factor' → logprob: -6.764139175415039
    4. '_' → logprob: -8.889139175415039
    5. '):' → logprob: -9.139139175415039
    6. 'bound' → logprob: -9.764139175415039
    7. '):
' → logprob: -10.014139175415039
    8. ')_' → logprob: -10.389139175415039
    9. '_n' → logprob: -10.639139175415039
    10. ')' → logprob: -11.139139175415039

Token 267: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6739857196807861
    2. '):
' → logprob: -0.9239857196807861
    3. ',' → logprob: -3.173985719680786
    4. '(n' → logprob: -3.423985719680786
    5. '(param' → logprob: -4.798985481262207
    6. '(' → logprob: -5.048985481262207
    7. '):
' → logprob: -6.548985481262207
    8. 'param' → logprob: -7.173985481262207
    9. ' (' → logprob: -7.798985481262207
    10. ':' → logprob: -8.298985481262207

Token 268: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11289726197719574
    2. ' mod' → logprob: -2.2378971576690674
    3. 'MOD' → logprob: -10.612896919250488
    4. ' modulus' → logprob: -11.112896919250488
    5. '```' → logprob: -11.737896919250488
    6. ' MOD' → logprob: -11.862896919250488
    7. '	mod' → logprob: -12.112896919250488
    8. ' modulo' → logprob: -12.362896919250488
    9. ' ' → logprob: -12.487896919250488
    10. '   ' → logprob: -13.112896919250488

Token 269: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.008145838975906372
    2. '):' → logprob: -5.508145809173584
    3. '_CONST' → logprob: -6.758145809173584
    4. '):
' → logprob: -6.883145809173584
    5. '_consts' → logprob: -7.008145809173584
    6. '_' → logprob: -7.633145809173584
    7. 'const' → logprob: -8.508146286010742
    8. '=' → logprob: -8.508146286010742
    9. '_constant' → logprob: -11.133146286010742
    10. 'CONST' → logprob: -11.758146286010742

Token 270: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007675722241401672
    2. '):
' → logprob: -4.882675647735596
    3. '):
' → logprob: -9.757676124572754
    4. ',' → logprob: -11.757676124572754
    5. ':' → logprob: -13.257676124572754
    6. ' ):' → logprob: -14.007676124572754
    7. ')' → logprob: -14.132676124572754
    8. '):

' → logprob: -15.382676124572754
    9. '   ' → logprob: -15.632676124572754
    10. 'def' → logprob: -16.382675170898438

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.968934758333489e-05
    2. ':' → logprob: -10.375069618225098
    3. 'fact' → logprob: -11.375069618225098
    4. ':
' → logprob: -12.000069618225098
    5. 'factor' → logprob: -12.250069618225098
    6. 'fac' → logprob: -12.500069618225098
    7. 'import' → logprob: -13.000069618225098
    8. 'f' → logprob: -13.000069618225098
    9. '	f' → logprob: -13.250069618225098
    10. '):
' → logprob: -13.500069618225098

Token 272: ' arr' (ID: 1724)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.03856293857097626
    2. '   ' → logprob: -4.163562774658203
    3. 'factor' → logprob: -4.288562774658203
    4. 'fac' → logprob: -4.913562774658203
    5. ' fact' → logprob: -6.913562774658203
    6. ' factorial' → logprob: -8.913562774658203
    7. ' fac' → logprob: -10.538562774658203
    8. 'f' → logprob: -10.538562774658203
    9. 'facts' → logprob: -11.413562774658203
    10. ' ' → logprob: -12.288562774658203

Token 273: '_factor' (ID: 43757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009429741650819778
    2. '=' → logprob: -4.759429931640625
    3. 'fact' → logprob: -8.509429931640625
    4. '_fact' → logprob: -8.634429931640625
    5. '   ' → logprob: -9.259429931640625
    6. '_f' → logprob: -9.384429931640625
    7. '=np' → logprob: -9.509429931640625
    8. '_size' → logprob: -9.884429931640625
    9. '_factor' → logprob: -9.884429931640625
    10. '_fac' → logprob: -10.884429931640625

Token 274: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.027066603302955627
    2. 'ials' → logprob: -3.777066707611084
    3. ' =' → logprob: -5.902066707611084
    4. '=' → logprob: -7.527066707611084
    5. 's' → logprob: -8.652066230773926
    6. 'ialize' → logprob: -9.027066230773926
    7. 'al' → logprob: -9.902066230773926
    8. '   ' → logprob: -10.277066230773926
    9. 'size' → logprob: -10.777066230773926
    10. '=[]' → logprob: -10.902066230773926

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741029739379883
    2. ' =' → logprob: -0.9741029739379883
    3. '=np' → logprob: -10.724102973937988
    4. ',' → logprob: -13.474102973937988
    5. '=[' → logprob: -14.099102973937988
    6. '[' → logprob: -15.099102973937988
    7. '   ' → logprob: -15.099102973937988
    8. ' ' → logprob: -15.224102973937988
    9. '  ' → logprob: -15.599102973937988
    10. '=
' → logprob: -15.599102973937988

Token 276: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2541208863258362
    2. ' np' → logprob: -1.5041208267211914
    3. '[' → logprob: -6.504120826721191
    4. ' [' → logprob: -7.754120826721191
    5. '[np' → logprob: -8.254120826721191
    6. '(np' → logprob: -13.504120826721191
    7. '=np' → logprob: -14.129120826721191
    8. '1' → logprob: -14.754120826721191
    9. ' ' → logprob: -15.504120826721191
    10. '   ' → logprob: -15.754120826721191

Token 277: '.arange' (ID: 57220)
  Prédit: '.ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ones' → logprob: -0.09279295802116394
    2. '.zeros' → logprob: -3.0927929878234863
    3. '.empty' → logprob: -3.3427929878234863
    4. '.arange' → logprob: -4.842792987823486
    5. ' ones' → logprob: -11.342792510986328
    6. 'ones' → logprob: -12.467792510986328
    7. 'empty' → logprob: -12.842792510986328
    8. '.array' → logprob: -15.467792510986328
    9. '.eye' → logprob: -15.592792510986328
    10. '.full' → logprob: -15.717792510986328

Token 278: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1429573893547058
    2. '1' → logprob: -2.0179574489593506
    3. 'upper' → logprob: -8.39295768737793
    4. '0' → logprob: -10.64295768737793
    5. '2' → logprob: -10.76795768737793
    6. '(up' → logprob: -12.64295768737793
    7. 'up' → logprob: -12.89295768737793
    8. 'start' → logprob: -13.14295768737793
    9. '(start' → logprob: -13.89295768737793
    10. '[' → logprob: -14.64295768737793

Token 279: 'upper' (ID: 26119)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07231656461954117
    2. 'upper' → logprob: -2.6973166465759277
    3. '0' → logprob: -6.072316646575928
    4. ' upper' → logprob: -10.44731616973877
    5. 'up' → logprob: -10.82231616973877
    6. ' ' → logprob: -11.69731616973877
    7. '(' → logprob: -11.94731616973877
    8. '2' → logprob: -13.07231616973877
    9. 'upp' → logprob: -14.07231616973877
    10. '.upper' → logprob: -14.57231616973877

Token 280: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.0005830573500134051
    2. 'bound' → logprob: -7.875583171844482
    3. '_const' → logprob: -9.125582695007324
    4. '_factor' → logprob: -10.750582695007324
    5. '_bounds' → logprob: -11.125582695007324
    6. '1' → logprob: -11.250582695007324
    7. 'const' → logprob: -11.250582695007324
    8. '=' → logprob: -11.500582695007324
    9. '_upper' → logprob: -12.625582695007324
    10. '_b' → logprob: -13.375582695007324

Token 281: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13301771879196167
    2. ' +' → logprob: -2.1330177783966064
    3. ')' → logprob: -5.508017539978027
    4. ',' → logprob: -6.383017539978027
    5. '1' → logprob: -9.133017539978027
    6. '),' → logprob: -9.508017539978027
    7. ')+' → logprob: -9.758017539978027
    8. ')[' → logprob: -11.008017539978027
    9. ' ' → logprob: -11.258017539978027
    10. ')
' → logprob: -11.383017539978027

Token 282: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.9189872145652771
    2. '1' → logprob: -1.6689872741699219
    3. '-' → logprob: -1.7939872741699219
    4. 'upper' → logprob: -1.9189872741699219
    5. '0' → logprob: -2.668987274169922
    6. ' -' → logprob: -3.918987274169922
    7. ' dtype' → logprob: -4.918987274169922
    8. ' upper' → logprob: -7.168987274169922
    9. '+' → logprob: -7.293987274169922
    10. ' ' → logprob: -7.293987274169922

Token 283: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0018172669224441051
    2. 'np' → logprob: -6.501817226409912
    3. '=int' → logprob: -8.37681770324707
    4. '=' → logprob: -9.62681770324707
    5. ' np' → logprob: -11.62681770324707
    6. 'int' → logprob: -12.50181770324707
    7. 'object' → logprob: -12.87681770324707
    8. '='' → logprob: -13.12681770324707
    9. '(np' → logprob: -14.62681770324707
    10. '[np' → logprob: -15.00181770324707

Token 284: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.007259685546159744
    2. 'int' → logprob: -5.507259845733643
    3. '.uint' → logprob: -5.757259845733643
    4. 'uint' → logprob: -11.757259368896484
    5. '=int' → logprob: -11.882259368896484
    6. 'object' → logprob: -13.882259368896484
    7. '.object' → logprob: -14.507259368896484
    8. ' int' → logprob: -16.382259368896484
    9. ':int' → logprob: -16.757259368896484
    10. '.float' → logprob: -17.132259368896484

Token 285: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -4.320199877838604e-07
    2. '32' → logprob: -15.0
    3. 'p' → logprob: -17.125
    4. 'c' → logprob: -20.875
    5. '_' → logprob: -21.25
    6. '63' → logprob: -23.625
    7. '_)' → logprob: -24.125
    8. '_
' → logprob: -24.25
    9. '128' → logprob: -24.25
    10. '66' → logprob: -24.375

Token 286: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05503483861684799
    2. ')' → logprob: -2.930034875869751
    3. ')+' → logprob: -9.430034637451172
    4. ');' → logprob: -10.180034637451172
    5. ')
' → logprob: -10.930034637451172
    6. ')

' → logprob: -12.555034637451172
    7. ' )
' → logprob: -12.930034637451172
    8. '1' → logprob: -13.055034637451172
    9. ')[' → logprob: -13.055034637451172
    10. ')`
' → logprob: -13.680034637451172

Token 287: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5357236266136169
    2. '
' → logprob: -1.1607236862182617
    3. '+' → logprob: -3.0357236862182617
    4. '[' → logprob: -3.7857236862182617
    5. '[arr' → logprob: -4.660723686218262
    6. ')
' → logprob: -5.285723686218262
    7. '```' → logprob: -5.785723686218262
    8. ')' → logprob: -5.910723686218262
    9. ' +' → logprob: -6.285723686218262
    10. ';' → logprob: -6.410723686218262

Token 288: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -2.248469718324486e-05
    2. ' arr' → logprob: -11.375022888183594
    3. '	arr' → logprob: -12.875022888183594
    4. '
' → logprob: -13.250022888183594
    5. '[arr' → logprob: -13.250022888183594
    6. '0' → logprob: -13.625022888183594
    7. '[' → logprob: -13.750022888183594
    8. '_arr' → logprob: -14.375022888183594
    9. '   ' → logprob: -14.375022888183594
    10. '<arr' → logprob: -15.500022888183594

Token 289: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -6.432518421206623e-05
    2. '[' → logprob: -9.8750638961792
    3. 'factor' → logprob: -11.8750638961792
    4. '_fac' → logprob: -13.3750638961792
    5. '_fact' → logprob: -13.5000638961792
    6. '_' → logprob: -13.8750638961792
    7. '_arr' → logprob: -14.0000638961792
    8. 'arr' → logprob: -15.1250638961792
    9. '
' → logprob: -15.5000638961792
    10. '_f' → logprob: -16.250064849853516

Token 290: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.013568752445280552
    2. '_factor' → logprob: -5.013568878173828
    3. 'actor' → logprob: -5.388568878173828
    4. 'al' → logprob: -7.013568878173828
    5. 'orial' → logprob: -8.013568878173828
    6. 'factor' → logprob: -8.013568878173828
    7. 'rial' → logprob: -8.263568878173828
    8. 'atorial' → logprob: -8.763568878173828
    9. 'arr' → logprob: -9.388568878173828
    10. 'ior' → logprob: -10.513568878173828

Token 291: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002962726866826415
    2. '[:]' → logprob: -6.377962589263916
    3. '.fill' → logprob: -7.627962589263916
    4. '[arr' → logprob: -7.752962589263916
    5. '[...]' → logprob: -9.127963066101074
    6. ' *=' → logprob: -9.502963066101074
    7. '*=' → logprob: -9.627963066101074
    8. '[:' → logprob: -9.877963066101074
    9. '+=' → logprob: -10.877963066101074
    10. ' +=' → logprob: -12.127963066101074

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009195583988912404
    2. '[' → logprob: -7.875919342041016
    3. ' ' → logprob: -7.875919342041016
    4. ':' → logprob: -9.750919342041016
    5. 'arr' → logprob: -10.500919342041016
    6. '1' → logprob: -10.500919342041016
    7. '[arr' → logprob: -11.000919342041016
    8. ']' → logprob: -11.250919342041016
    9. '
' → logprob: -11.750919342041016
    10. ' :' → logprob: -12.875919342041016

Token 293: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005951671861112118
    2. ']=' → logprob: -5.130951881408691
    3. ']+=' → logprob: -11.505951881408691
    4. ' ]' → logprob: -11.630951881408691
    5. '=' → logprob: -13.005951881408691
    6. ']
' → logprob: -14.755951881408691
    7. '[' → logprob: -15.505951881408691
    8. ':' → logprob: -15.630951881408691
    9. ':]' → logprob: -15.630951881408691
    10. ']={' → logprob: -15.755951881408691

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004111762158572674
    2. ' =' → logprob: -5.5041117668151855
    3. '+=' → logprob: -11.379111289978027
    4. '.fill' → logprob: -11.879111289978027
    5. ']=' → logprob: -11.879111289978027
    6. '=np' → logprob: -13.379111289978027
    7. ')=' → logprob: -13.504111289978027
    8. '=
' → logprob: -13.504111289978027
    9. '[:]' → logprob: -13.879111289978027
    10. '.=' → logprob: -14.004111289978027

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. '۱' → logprob: -19.0000057220459
    5. '  ' → logprob: -19.6250057220459
    6. '```' → logprob: -20.2500057220459
    7. '
' → logprob: -20.6250057220459
    8. '' → logprob: -20.8750057220459
    9. '	' → logprob: -21.0000057220459
    10. '১' → logprob: -21.2500057220459

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۱' → logprob: -20.25
    4. '' → logprob: -20.875
    5. '১' → logprob: -20.875
    6. '
' → logprob: -21.0
    7. '   ' → logprob: -21.125
    8. '0' → logprob: -21.625
    9. '१' → logprob: -21.625
    10. '```' → logprob: -22.25

Token 297: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03452145308256149
    2. '
' → logprob: -3.6595213413238525
    3. '   ' → logprob: -5.409521579742432
    4. ' for' → logprob: -5.909521579742432
    5. 'arr' → logprob: -7.034521579742432
    6. '	for' → logprob: -10.534521102905273
    7. '    
' → logprob: -10.784521102905273
    8. ',' → logprob: -11.284521102905273
    9. '<|end|>' → logprob: -11.534521102905273
    10. 'factor' → logprob: -11.784521102905273

Token 298: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1632373332977295
    2. '   ' → logprob: -2.2882373332977295
    3. ' for' → logprob: -3.0382373332977295
    4. '	for' → logprob: -7.038237571716309
    5. 'arr' → logprob: -8.538237571716309
    6. ',' → logprob: -9.538237571716309
    7. '
' → logprob: -10.663237571716309
    8. 'import' → logprob: -11.038237571716309
    9. '```' → logprob: -11.163237571716309
    10. ':' → logprob: -11.913237571716309

Token 299: ' factorial' (ID: 111204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.300083648762666e-05
    2. ' for' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.750053405761719
    4. 'arr' → logprob: -15.500053405761719
    5. '	for' → logprob: -16.25005340576172
    6. '```' → logprob: -17.37505340576172
    7. 'np' → logprob: -17.50005340576172
    8. 'from' → logprob: -18.25005340576172
    9. '
' → logprob: -18.50005340576172
    10. 'import' → logprob: -19.12505340576172

Token 300: '_array' (ID: 8766)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5025413036346436
    2. ' =' → logprob: -1.2525413036346436
    3. 'for' → logprob: -2.6275413036346436
    4. 'arr' → logprob: -4.752541542053223
    5. 'and' → logprob: -5.127541542053223
    6. '_arr' → logprob: -5.127541542053223
    7. 's' → logprob: -5.377541542053223
    8. ' for' → logprob: -5.877541542053223
    9. 'def' → logprob: -6.002541542053223
    10. '_factor' → logprob: -7.127541542053223

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05033494532108307
    2. '[' → logprob: -3.675334930419922
    3. '=' → logprob: -3.800334930419922
    4. '=np' → logprob: -6.800334930419922
    5. '[:]' → logprob: -9.425334930419922
    6. ' ' → logprob: -9.925334930419922
    7. ' *=' → logprob: -10.925334930419922
    8. ',' → logprob: -11.050334930419922
    9. 'def' → logprob: -11.175334930419922
    10. '(' → logprob: -11.550334930419922

Token 302: ' cumulative' (ID: 75628)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.2612283527851105
    2. '1' → logprob: -2.261228322982788
    3. ' np' → logprob: -2.636228322982788
    4. 'arr' → logprob: -3.011228322982788
    5. ' ' → logprob: -6.136228561401367
    6. ' arr' → logprob: -6.261228561401367
    7. '(np' → logprob: -8.386228561401367
    8. '   ' → logprob: -8.886228561401367
    9. '(' → logprob: -9.386228561401367
    10. '(arr' → logprob: -10.136228561401367

Token 303: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -2.117345684382599e-05
    2. '_factor' → logprob: -11.125020980834961
    3. 'product' → logprob: -12.250020980834961
    4. '_' → logprob: -14.250020980834961
    5. 'Product' → logprob: -14.500020980834961
    6. ' product' → logprob: -15.875020980834961
    7. '_pro' → logprob: -16.50002098083496
    8. '_prod' → logprob: -16.75002098083496
    9. 'np' → logprob: -17.12502098083496
    10. 'factor' → logprob: -17.37502098083496

Token 304: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.191489642835222e-05
    2. 'mod' → logprob: -11.250041961669922
    3. '_' → logprob: -12.000041961669922
    4. '_product' → logprob: -12.125041961669922
    5. '_arr' → logprob: -12.750041961669922
    6. 'arr' → logprob: -12.750041961669922
    7. '(arr' → logprob: -13.000041961669922
    8. ',' → logprob: -13.500041961669922
    9. '_factor' → logprob: -13.500041961669922
    10. '```' → logprob: -13.875041961669922

Token 305: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -3.292907877039397e-06
    2. 'arr' → logprob: -13.50000286102295
    3. ' (' → logprob: -13.75000286102295
    4. '(' → logprob: -15.00000286102295
    5. '(np' → logprob: -15.00000286102295
    6. '[arr' → logprob: -16.500003814697266
    7. '<arr' → logprob: -17.750003814697266
    8. '((' → logprob: -18.375003814697266
    9. '(
' → logprob: -18.750003814697266
    10. '	arr' → logprob: -18.750003814697266

Token 306: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.000667044660076499
    2. 'factor' → logprob: -7.500667095184326
    3. '(arr' → logprob: -9.250666618347168
    4. 'arr' → logprob: -11.125666618347168
    5. '(np' → logprob: -13.500666618347168
    6. 'np' → logprob: -14.500666618347168
    7. '[arr' → logprob: -15.250666618347168
    8. '(' → logprob: -15.625666618347168
    9. '_arr' → logprob: -15.875666618347168
    10. ')' → logprob: -16.000667572021484

Token 307: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.05138557031750679
    2. 'al' → logprob: -3.1763856410980225
    3. 'arr' → logprob: -5.676385402679443
    4. 'atorial' → logprob: -7.051385402679443
    5. '_factor' → logprob: -7.176385402679443
    6. 'array' → logprob: -7.551385402679443
    7. '_array' → logprob: -7.801385402679443
    8. 'orial' → logprob: -7.801385402679443
    9. 'ator' → logprob: -7.926385402679443
    10. 'rial' → logprob: -8.301385879516602

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0712880790233612
    2. ')' → logprob: -3.4462881088256836
    3. '(arr' → logprob: -3.6962881088256836
    4. ' ,' → logprob: -4.946288108825684
    5. ',)' → logprob: -6.321288108825684
    6. ',np' → logprob: -6.946288108825684
    7. '(np' → logprob: -7.571288108825684
    8. '(' → logprob: -7.821288108825684
    9. 'arr' → logprob: -8.071288108825684
    10. '[arr' → logprob: -8.446288108825684

Token 309: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0045322999358177185
    2. ' mod' → logprob: -5.879532337188721
    3. 'MOD' → logprob: -6.379532337188721
    4. ' MOD' → logprob: -10.504531860351562
    5. '
' → logprob: -13.379531860351562
    6. '	mod' → logprob: -14.629531860351562
    7. '(mod' → logprob: -15.629531860351562
    8. '
' → logprob: -15.879531860351562
    9. '   ' → logprob: -16.379531860351562
    10. 'm' → logprob: -16.754531860351562

Token 310: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.10241129994392395
    2. '_CONST' → logprob: -2.3524112701416016
    3. 'const' → logprob: -6.852411270141602
    4. 'CONST' → logprob: -7.602411270141602
    5. 'Const' → logprob: -7.852411270141602
    6. '_consts' → logprob: -9.977411270141602
    7. '_' → logprob: -10.352411270141602
    8. '-' → logprob: -10.977411270141602
    9. '```' → logprob: -10.977411270141602
    10. '=' → logprob: -11.164911270141602

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. ')
' → logprob: -9.500076293945312
    3. ' )' → logprob: -14.125076293945312
    4. ')

' → logprob: -15.000076293945312
    5. '   ' → logprob: -15.500076293945312
    6. ').' → logprob: -16.875076293945312
    7. ')
' → logprob: -17.000076293945312
    8. ')[' → logprob: -17.250076293945312
    9. 'def' → logprob: -17.375076293945312
    10. '[' → logprob: -17.375076293945312

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0628516674041748
    2. 'inverse' → logprob: -3.187851667404175
    3. ' inverse' → logprob: -4.687851905822754
    4. 'inv' → logprob: -5.437851905822754
    5. 'arr' → logprob: -5.812851905822754
    6. '```' → logprob: -7.062851905822754
    7. ' inv' → logprob: -7.687851905822754
    8. '
' → logprob: -8.062851905822754
    9. '    
' → logprob: -8.437851905822754
    10. 'factor' → logprob: -8.687851905822754

Token 313: ' arr' (ID: 1724)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.6227699518203735
    2. 'arr' (adapté à ' arr') → logprob: -1.6227699518203735
    3. 'inv' → logprob: -1.6227699518203735
    4. '   ' → logprob: -3.122769832611084
    5. ' inverse' → logprob: -4.372769832611084
    6. ' inv' → logprob: -5.122769832611084
    7. ' arr' → logprob: -5.997769832611084
    8. 'factor' → logprob: -5.997769832611084
    9. 'in' → logprob: -7.497769832611084
    10. '    
' → logprob: -8.622770309448242

Token 314: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.036858633160591125
    2. '_inv' → logprob: -4.036858558654785
    3. '_factor' → logprob: -4.661858558654785
    4. 'inverse' → logprob: -4.786858558654785
    5. 'inv' → logprob: -7.536858558654785
    6. '_in' → logprob: -9.286858558654785
    7. 'factor' → logprob: -10.161858558654785
    8. '_mod' → logprob: -10.286858558654785
    9. '_comb' → logprob: -11.536858558654785
    10. '_fact' → logprob: -12.286858558654785

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22873510420322418
    2. ' =' → logprob: -1.603735089302063
    3. '_factor' → logprob: -5.978734970092773
    4. '=np' → logprob: -7.478734970092773
    5. 'factor' → logprob: -9.603734970092773
    6. 's' → logprob: -10.353734970092773
    7. '_=' → logprob: -10.853734970092773
    8. '```' → logprob: -11.103734970092773
    9. '_' → logprob: -11.603734970092773
    10. '_inv' → logprob: -11.728734970092773

Token 316: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0045508150942623615
    2. ' np' → logprob: -5.879550933837891
    3. 'pow' → logprob: -7.129550933837891
    4. '(np' → logprob: -7.629550933837891
    5. '1' → logprob: -8.50455093383789
    6. 'factor' → logprob: -8.50455093383789
    7. '(' → logprob: -10.50455093383789
    8. '[np' → logprob: -12.37955093383789
    9. 'mod' → logprob: -12.62955093383789
    10. ' factorial' → logprob: -12.87955093383789

Token 317: '.arange' (ID: 57220)
  Prédit: '.arange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arange' → logprob: -0.0038462711963802576
    2. '.empty' → logprob: -5.628846168518066
    3. '.zeros' → logprob: -8.628846168518066
    4. '.ones' → logprob: -9.753846168518066
    5. 'empty' → logprob: -12.628846168518066
    6. '.full' → logprob: -12.628846168518066
    7. '.linspace' → logprob: -14.003846168518066
    8. 'ar' → logprob: -14.753846168518066
    9. '.flip' → logprob: -14.753846168518066
    10. '.append' → logprob: -15.253846168518066

Token 318: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.62500286102295
    3. '(f' → logprob: -14.12500286102295
    4. '(up' → logprob: -15.25000286102295
    5. 'upper' → logprob: -15.75000286102295
    6. '(max' → logprob: -16.250001907348633
    7. '2' → logprob: -16.375001907348633
    8. '(arr' → logprob: -16.625001907348633
    9. '((' → logprob: -16.875001907348633
    10. '(len' → logprob: -17.250001907348633

Token 319: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.01634964719414711
    2. '1' → logprob: -4.141349792480469
    3. ' upper' → logprob: -8.516349792480469
    4. '(' → logprob: -9.266349792480469
    5. '2' → logprob: -11.641349792480469
    6. 'up' → logprob: -12.391349792480469
    7. '0' → logprob: -13.391349792480469
    8. ' ' → logprob: -13.766349792480469
    9. 'upp' → logprob: -14.141349792480469
    10. 'uppercase' → logprob: -14.391349792480469

Token 320: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.06996655464172363
    2. 'bound' → logprob: -2.6949665546417236
    3. ',' → logprob: -11.694966316223145
    4. 'Bound' → logprob: -12.069966316223145
    5. '1' → logprob: -12.444966316223145
    6. '2' → logprob: -13.319966316223145
    7. '0' → logprob: -13.319966316223145
    8. '
' → logprob: -13.444966316223145
    9. '-bound' → logprob: -13.819966316223145
    10. '=' → logprob: -14.194966316223145

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020917344372719526
    2. '-' → logprob: -7.002091884613037
    3. ' -' → logprob: -7.377091884613037
    4. ' ,' → logprob: -7.627091884613037
    5. '0' → logprob: -10.877091407775879
    6. '1' → logprob: -11.127091407775879
    7. ')' → logprob: -11.377091407775879
    8. ',d' → logprob: -12.377091407775879
    9. ',int' → logprob: -13.002091407775879
    10. '+' → logprob: -13.002091407775879

Token 322: ' ' (ID: 220)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.029780693352222443
    2. ' dtype' → logprob: -3.529780626296997
    3. 'np' → logprob: -11.654780387878418
    4. '(dtype' → logprob: -11.904780387878418
    5. '_dtype' → logprob: -12.029780387878418
    6. '2' → logprob: -13.029780387878418
    7. '.dtype' → logprob: -13.154780387878418
    8. '1' → logprob: -13.154780387878418
    9. 'd' → logprob: -14.654780387878418
    10. '0' → logprob: -14.904780387878418

Token 323: '0' (ID: 15)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -6.051066520740278e-05
    2. '2' → logprob: -10.500060081481934
    3. ' dtype' → logprob: -11.000060081481934
    4. 'np' → logprob: -12.125060081481934
    5. '1' → logprob: -12.250060081481934
    6. 'd' → logprob: -13.250060081481934
    7. 'upper' → logprob: -13.250060081481934
    8. '(dtype' → logprob: -13.750060081481934
    9. '_dtype' → logprob: -14.500060081481934
    10. '0' → logprob: -15.375060081481934

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013791573233902454
    2. '-' → logprob: -4.888791561126709
    3. ' ,' → logprob: -6.013791561126709
    4. ',-' → logprob: -6.013791561126709
    5. ' -' → logprob: -7.013791561126709
    6. ',d' → logprob: -8.388792037963867
    7. 'dtype' → logprob: -9.763792037963867
    8. '   ' → logprob: -11.263792037963867
    9. ' ,-' → logprob: -11.388792037963867
    10. 'd' → logprob: -11.513792037963867

Token 325: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00809972733259201
    2. ' -' → logprob: -5.008099555969238
    3. '  ' → logprob: -7.383099555969238
    4. ',' → logprob: -8.258099555969238
    5. 'dtype' → logprob: -8.633099555969238
    6. '   ' → logprob: -8.883099555969238
    7. ',-' → logprob: -9.508099555969238
    8. '=-' → logprob: -10.133099555969238
    9. '1' → logprob: -10.758099555969238
    10. '```' → logprob: -11.508099555969238

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015711607411503792
    2. '-' → logprob: -6.501571178436279
    3. ' ' → logprob: -10.376570701599121
    4. ' -' → logprob: -10.751570701599121
    5. ',' → logprob: -12.126570701599121
    6. 'dtype' → logprob: -12.251570701599121
    7. ')' → logprob: -13.126570701599121
    8. '```' → logprob: -13.626570701599121
    9. ',-' → logprob: -14.376570701599121
    10. '
' → logprob: -14.501570701599121

Token 327: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5487428307533264
    2. ',' → logprob: -0.9237428307533264
    3. ')
' → logprob: -3.9237427711486816
    4. ' ,' → logprob: -5.673742771148682
    5. ',d' → logprob: -6.673742771148682
    6. ' )' → logprob: -7.923742771148682
    7. ')[' → logprob: -8.17374324798584
    8. ' )
' → logprob: -10.42374324798584
    9. 'dtype' → logprob: -10.54874324798584
    10. ')
' → logprob: -10.92374324798584

Token 328: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.10062047839164734
    2. '-' → logprob: -2.3506205081939697
    3. ' dtype' → logprob: -8.10062026977539
    4. '-d' → logprob: -9.47562026977539
    5. ' -' → logprob: -11.22562026977539
    6. '1' → logprob: -11.35062026977539
    7. 'd' → logprob: -12.97562026977539
    8. ')' → logprob: -13.60062026977539
    9. 'step' → logprob: -13.72562026977539
    10. '-step' → logprob: -13.85062026977539

Token 329: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -1.1160349458805285e-05
    2. '=' → logprob: -11.500011444091797
    3. ' =' → logprob: -14.125011444091797
    4. '=int' → logprob: -15.625011444091797
    5. 'np' → logprob: -16.250011444091797
    6. '=n' → logprob: -18.625011444091797
    7. '=
' → logprob: -18.625011444091797
    8. '=pd' → logprob: -18.625011444091797
    9. '=torch' → logprob: -18.750011444091797
    10. '=lambda' → logprob: -19.375011444091797

Token 330: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.16241925954818726
    2. 'int' → logprob: -1.912419319152832
    3. '=int' → logprob: -6.412419319152832
    4. 'np' → logprob: -7.912419319152832
    5. '=np' → logprob: -8.787419319152832
    6. '.uint' → logprob: -10.912419319152832
    7. ' int' → logprob: -11.662419319152832
    8. 'uint' → logprob: -12.662419319152832
    9. 'numpy' → logprob: -14.287419319152832
    10. '<int' → logprob: -14.662419319152832

Token 331: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.125
    3. '32' → logprob: -17.875
    4. 'np' → logprob: -21.0
    5. 'c' → logprob: -21.625
    6. 'p' → logprob: -21.75
    7. '6' → logprob: -22.0
    8. '8' → logprob: -22.125
    9. ')' → logprob: -22.125
    10. 'dtype' → logprob: -22.875

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018411019118502736
    2. ')
' → logprob: -8.625184059143066
    3. ' )' → logprob: -13.250184059143066
    4. ')[' → logprob: -13.875184059143066
    5. ')#' → logprob: -15.125184059143066
    6. '[' → logprob: -15.375184059143066
    7. ',' → logprob: -15.375184059143066
    8. ')
' → logprob: -15.375184059143066
    9. ')

' → logprob: -15.875184059143066
    10. '))' → logprob: -16.000185012817383

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21636147797107697
    2. '<|end|>' → logprob: -2.3413615226745605
    3. ')' → logprob: -2.4663615226745605
    4. ' ' → logprob: -5.8413615226745605
    5. ',' → logprob: -5.9663615226745605
    6. '
' → logprob: -5.9663615226745605
    7. '[' → logprob: -6.4663615226745605
    8. 'arr' → logprob: -6.5913615226745605
    9. '  ' → logprob: -7.5913615226745605
    10. '    ' → logprob: -8.216361045837402

Token 334: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.3894469439983368
    2. ' arr' → logprob: -2.514446973800659
    3. 'inverse' → logprob: -2.764446973800659
    4. '   ' → logprob: -3.014446973800659
    5. ' inverse' → logprob: -3.014446973800659
    6. ')' → logprob: -3.889446973800659
    7. 'def' → logprob: -4.51444673538208
    8. 'import' → logprob: -4.63944673538208
    9. 'inv' → logprob: -4.88944673538208
    10. ' for' → logprob: -5.51444673538208

Token 335: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0017663358012214303
    2. 'inverse' → logprob: -7.251766204833984
    3. '_in' → logprob: -7.751766204833984
    4. '[' → logprob: -8.001766204833984
    5. '_factor' → logprob: -9.126766204833984
    6. '_reverse' → logprob: -9.251766204833984
    7. '_inv' → logprob: -10.001766204833984
    8. '[in' → logprob: -11.876766204833984
    9. '.inverse' → logprob: -11.876766204833984
    10. 'Inverse' → logprob: -12.001766204833984

Token 336: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27220457792282104
    2. '=' → logprob: -1.5222046375274658
    3. ' =' → logprob: -4.272204399108887
    4. '[:]' → logprob: -6.522204399108887
    5. 'inv' → logprob: -6.772204399108887
    6. '%=' → logprob: -7.397204399108887
    7. '_inv' → logprob: -7.397204399108887
    8. '[::-' → logprob: -7.647204399108887
    9. '[-' → logprob: -8.022204399108887
    10. '_factor' → logprob: -8.272204399108887

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016641732305288315
    2. ']' → logprob: -4.891641616821289
    3. '-' → logprob: -5.141641616821289
    4. '1' → logprob: -6.516641616821289
    5. ' ' → logprob: -8.141641616821289
    6. ':' → logprob: -8.266641616821289
    7. '
' → logprob: -8.391641616821289
    8. ')' → logprob: -8.516641616821289
    9. ':]' → logprob: -9.016641616821289
    10. ']=' → logprob: -9.266641616821289

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018792471382766962
    2. ']=' → logprob: -8.625187873840332
    3. ' ]' → logprob: -12.375187873840332
    4. '=' → logprob: -13.125187873840332
    5. ',' → logprob: -14.375187873840332
    6. ':]' → logprob: -14.375187873840332
    7. ']
' → logprob: -15.500187873840332
    8. '[' → logprob: -15.750187873840332
    9. ')' → logprob: -16.12518882751465
    10. ']+=' → logprob: -16.62518882751465

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054937347769737244
    2. ' =' → logprob: -2.9299373626708984
    3. ']=' → logprob: -10.804937362670898
    4. ']' → logprob: -11.179937362670898
    5. '[' → logprob: -12.054937362670898
    6. '=np' → logprob: -12.179937362670898
    7. '%=' → logprob: -13.429937362670898
    8. '[:]' → logprob: -13.429937362670898
    9. ')=' → logprob: -14.054937362670898
    10. ',' → logprob: -14.054937362670898

Token 340: ' pow' (ID: 9779)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001036383560858667
    2. ' ' → logprob: -7.126036167144775
    3. '0' → logprob: -8.376036643981934
    4. 'pow' → logprob: -14.376036643981934
    5. '2' → logprob: -14.501036643981934
    6. '۱' → logprob: -16.751035690307617
    7. '-' → logprob: -16.813535690307617
    8. 'int' → logprob: -16.876035690307617
    9. 'arr' → logprob: -17.063535690307617
    10. '(' → logprob: -17.501035690307617

Token 341: '(int' (ID: 2742)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.44854819774627686
    2. '(' → logprob: -1.1985481977462769
    3. '(arr' → logprob: -2.8235483169555664
    4. 'arr' → logprob: -8.323548316955566
    5. 'factor' → logprob: -9.323548316955566
    6. '(int' → logprob: -10.698548316955566
    7. '2' → logprob: -11.573548316955566
    8. '()' → logprob: -11.823548316955566
    9. '(
' → logprob: -11.823548316955566
    10. '(array' → logprob: -12.323548316955566

Token 342: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.004256596323102713
    2. '(arr' → logprob: -6.254256725311279
    3. '(' → logprob: -6.879256725311279
    4. 'factor' → logprob: -7.004256725311279
    5. ')' → logprob: -8.129256248474121
    6. 'arr' → logprob: -10.129256248474121
    7. '1' → logprob: -11.504256248474121
    8. 'f' → logprob: -12.004256248474121
    9. ')(' → logprob: -12.254256248474121
    10. ' factorial' → logprob: -12.504256248474121

Token 343: 'actor' (ID: 8428)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2546704411506653
    2. 'actor' → logprob: -1.5046703815460205
    3. 'act' → logprob: -6.3796706199646
    4. 'factor' → logprob: -8.129670143127441
    5. '(arr' → logprob: -8.879670143127441
    6. 'upper' → logprob: -9.504670143127441
    7. ')' → logprob: -9.504670143127441
    8. 'ac' → logprob: -9.879670143127441
    9. 'orm' → logprob: -9.879670143127441
    10. 'ctor' → logprob: -10.254670143127441

Token 344: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.26930198073387146
    2. 'orial' → logprob: -2.1443018913269043
    3. 'al' → logprob: -2.3943018913269043
    4. 'arr' → logprob: -3.7693018913269043
    5. '_factor' → logprob: -7.019301891326904
    6. 'or' → logprob: -7.019301891326904
    7. 'atorial' → logprob: -7.894301891326904
    8. '_arr' → logprob: -8.019302368164062
    9. 'array' → logprob: -8.269302368164062
    10. '```' → logprob: -8.394302368164062

Token 345: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00017541198758408427
    2. 'array' → logprob: -9.000175476074219
    3. '[' → logprob: -10.500175476074219
    4. '_factor' → logprob: -11.375175476074219
    5. ')' → logprob: -12.625175476074219
    6. 'Array' → logprob: -12.750175476074219
    7. '_' → logprob: -13.250175476074219
    8. '_arr' → logprob: -14.625175476074219
    9. '_ARRAY' → logprob: -15.000175476074219
    10. 's' → logprob: -15.000175476074219

Token 346: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5759581923484802
    2. '[-' → logprob: -0.8259581923484802
    3. '1' → logprob: -11.700958251953125
    4. '0' → logprob: -12.075958251953125
    5. '(' → logprob: -13.825958251953125
    6. '[int' → logprob: -14.450958251953125
    7. '-' → logprob: -14.575958251953125
    8. '[
' → logprob: -14.575958251953125
    9. '[(' → logprob: -14.700958251953125
    10. ')' → logprob: -15.450958251953125

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002100965939462185
    2. '-' → logprob: -8.50020980834961
    3. '0' → logprob: -12.75020980834961
    4. ' ' → logprob: -13.12520980834961
    5. ' -' → logprob: -13.87520980834961
    6. '2' → logprob: -15.25020980834961
    7. '
' → logprob: -15.93770980834961
    8. '```' → logprob: -16.56270980834961
    9. '   ' → logprob: -17.31270980834961
    10. '  ' → logprob: -17.56270980834961

Token 348: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004062963649630547
    2. '[' → logprob: -6.629063129425049
    3. '],' → logprob: -7.004063129425049
    4. '[-' → logprob: -7.129063129425049
    5. ')' → logprob: -7.504063129425049
    6. ']),' → logprob: -7.879063129425049
    7. ' ),' → logprob: -9.87906265258789
    8. ')],' → logprob: -11.12906265258789
    9. ']' → logprob: -11.37906265258789
    10. ',' → logprob: -13.12906265258789

Token 349: ' mod' (ID: 1812)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4919649660587311
    2. 'mod' → logprob: -0.9919649362564087
    3. 'MOD' → logprob: -4.241964817047119
    4. ' -' → logprob: -6.491964817047119
    5. ' mod' → logprob: -7.241964817047119
    6. '(mod' → logprob: -7.866964817047119
    7. '-mod' → logprob: -8.116965293884277
    8. '	mod' → logprob: -8.991965293884277
    9. ' ' → logprob: -9.241965293884277
    10. '```' → logprob: -10.616965293884277

Token 350: '_const' (ID: 27511)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005127601907588542
    2. '_CONST' → logprob: -8.500513076782227
    3. '_const' → logprob: -8.500513076782227
    4. 'const' → logprob: -9.625513076782227
    5. 'CONST' → logprob: -10.625513076782227
    6. ' -' → logprob: -12.125513076782227
    7. '_consts' → logprob: -12.625513076782227
    8. 'Const' → logprob: -13.375513076782227
    9. '_MOD' → logprob: -13.500513076782227
    10. 'MOD' → logprob: -14.000513076782227

Token 351: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033558503491804004
    2. ' -' → logprob: -8.000335693359375
    3. ',' → logprob: -16.500335693359375
    4. '–' → logprob: -18.125335693359375
    5. '−' → logprob: -18.375335693359375
    6. ' ' → logprob: -19.125335693359375
    7. '-,' → logprob: -20.125335693359375
    8. '-
' → logprob: -20.375335693359375
    9. '```' → logprob: -20.625335693359375
    10. '2' → logprob: -21.000335693359375

Token 352: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. '-' → logprob: -15.125007629394531
    4. '```' → logprob: -16.25000762939453
    5. '۲' → logprob: -16.56250762939453
    6. ')' → logprob: -16.87500762939453
    7. '２' → logprob: -17.43750762939453
    8. '
' → logprob: -17.75000762939453
    9. '٢' → logprob: -17.81250762939453
    10. '  ' → logprob: -17.87500762939453

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '-' → logprob: -16.875
    5. '
' → logprob: -17.4375
    6. '２' → logprob: -17.875
    7. '۲' → logprob: -17.9375
    8. '

' → logprob: -18.3125
    9. '   ' → logprob: -18.375
    10. '
' → logprob: -18.625

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07923278957605362
    2. ')' → logprob: -2.579232692718506
    3. ',
' → logprob: -8.704233169555664
    4. ' ,' → logprob: -9.204233169555664
    5. '),' → logprob: -10.079233169555664
    6. ' )' → logprob: -11.204233169555664
    7. ' ' → logprob: -12.829233169555664
    8. ',)' → logprob: -12.829233169555664
    9. '   ' → logprob: -12.954233169555664
    10. ')
' → logprob: -13.079233169555664

Token 355: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16024595499038696
    2. ' mod' → logprob: -1.9102458953857422
    3. 'MOD' → logprob: -11.535245895385742
    4. ')' → logprob: -12.160245895385742
    5. '	mod' → logprob: -12.535245895385742
    6. ' MOD' → logprob: -13.785245895385742
    7. '(mod' → logprob: -14.035245895385742
    8. ' ' → logprob: -14.285245895385742
    9. '   ' → logprob: -15.535245895385742
    10. '```' → logprob: -16.035245895385742

Token 356: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.5926153659820557
    2. '_CONST' → logprob: -0.9676153659820557
    3. 'const' → logprob: -2.7176153659820557
    4. 'CONST' → logprob: -7.092615127563477
    5. ')' → logprob: -9.467615127563477
    6. '_consts' → logprob: -9.717615127563477
    7. '```' → logprob: -10.592615127563477
    8. ' const' → logprob: -10.717615127563477
    9. 'Const' → logprob: -10.967615127563477
    10. ' ' → logprob: -11.467615127563477

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001382241171086207
    2. ')
' → logprob: -9.000138282775879
    3. ' )' → logprob: -12.125138282775879
    4. ',' → logprob: -12.375138282775879
    5. '),' → logprob: -13.375138282775879
    6. ' ' → logprob: -13.875138282775879
    7. ')

' → logprob: -13.875138282775879
    8. '   ' → logprob: -14.750138282775879
    9. ')
' → logprob: -14.875138282775879
    10. '))' → logprob: -15.250138282775879

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7300093173980713
    2. '<|end|>' → logprob: -0.7300093173980713
    3. ')' → logprob: -3.8550093173980713
    4. ' ' → logprob: -5.355009078979492
    5. '[' → logprob: -6.105009078979492
    6. '
' → logprob: -6.230009078979492
    7. 'arr' → logprob: -6.355009078979492
    8. ',' → logprob: -6.980009078979492
    9. '<|end|>' → logprob: -7.605009078979492
    10. '  ' → logprob: -7.980009078979492

Token 359: ' factorial' (ID: 111204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22618922591209412
    2. ' for' → logprob: -1.6011892557144165
    3. '   ' → logprob: -7.476189136505127
    4. 'factor' → logprob: -10.101189613342285
    5. 'def' → logprob: -10.226189613342285
    6. '	for' → logprob: -10.226189613342285
    7. 'arr' → logprob: -10.476189613342285
    8. 'import' → logprob: -11.476189613342285
    9. 'i' → logprob: -11.601189613342285
    10. '[' → logprob: -11.601189613342285

Token 360: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.2652635872364044
    2. '_array' → logprob: -1.515263557434082
    3. '_inv' → logprob: -5.515263557434082
    4. '_' → logprob: -6.015263557434082
    5. 'inverse' → logprob: -6.390263557434082
    6. '_arr' → logprob: -7.015263557434082
    7. '<|end|>' → logprob: -7.140263557434082
    8. '=' → logprob: -7.265263557434082
    9. '[' → logprob: -7.765263557434082
    10. ' =' → logprob: -8.015263557434082

Token 361: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.6827256679534912
    2. '=' → logprob: -0.8077256679534912
    3. ' =' → logprob: -3.307725667953491
    4. '_arr' → logprob: -4.55772590637207
    5. 'array' → logprob: -7.80772590637207
    6. 'arr' → logprob: -7.80772590637207
    7. 's' → logprob: -7.93272590637207
    8. '_arrays' → logprob: -8.55772590637207
    9. '=array' → logprob: -8.68272590637207
    10. '```' → logprob: -9.55772590637207

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861665889620781
    2. '=' → logprob: -3.048616647720337
    3. '[' → logprob: -11.048616409301758
    4. '=np' → logprob: -12.298616409301758
    5. ' ' → logprob: -12.798616409301758
    6. ',' → logprob: -13.048616409301758
    7. '[:]' → logprob: -13.298616409301758
    8. '   ' → logprob: -14.423616409301758
    9. '  ' → logprob: -14.548616409301758
    10. ' =
' → logprob: -15.298616409301758

Token 363: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08197807520627975
    2. 'np' → logprob: -2.7069780826568604
    3. ' cumulative' → logprob: -4.956977844238281
    4. ' np' → logprob: -5.706977844238281
    5. 'arr' → logprob: -7.206977844238281
    6. 'factor' → logprob: -7.581977844238281
    7. 'input' → logprob: -9.581977844238281
    8. 'cum' → logprob: -9.581977844238281
    9. ' factorial' → logprob: -10.331977844238281
    10. '[' → logprob: -10.331977844238281

Token 364: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -5.133198283147067e-05
    2. 'product' → logprob: -10.250051498413086
    3. '_factor' → logprob: -12.250051498413086
    4. '_prod' → logprob: -12.750051498413086
    5. '_mod' → logprob: -13.125051498413086
    6. '_pro' → logprob: -13.750051498413086
    7. 'Product' → logprob: -13.875051498413086
    8. '_' → logprob: -14.250051498413086
    9. '_products' → logprob: -14.375051498413086
    10. 'prod' → logprob: -14.875051498413086

Token 365: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00016861737822182477
    2. '(arr' → logprob: -9.750168800354004
    3. 'mod' → logprob: -9.875168800354004
    4. 'arr' → logprob: -10.750168800354004
    5. '_arr' → logprob: -11.125168800354004
    6. '(' → logprob: -12.375168800354004
    7. '_' → logprob: -12.375168800354004
    8. '[' → logprob: -12.875168800354004
    9. '[arr' → logprob: -13.500168800354004
    10. '```' → logprob: -13.625168800354004

Token 366: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -9.729906196298543e-06
    2. 'arr' → logprob: -12.375009536743164
    3. '(np' → logprob: -12.750009536743164
    4. '(' → logprob: -13.625009536743164
    5. '[arr' → logprob: -14.375009536743164
    6. ' (' → logprob: -15.125009536743164
    7. '(
' → logprob: -15.250009536743164
    8. '<arr' → logprob: -16.125009536743164
    9. ' arr' → logprob: -17.750009536743164
    10. '	arr' → logprob: -18.000009536743164

Token 367: '_inverse' (ID: 188797)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.19784817099571228
    2. '(arr' → logprob: -1.9478482007980347
    3. 'inverse' → logprob: -4.322848320007324
    4. '[arr' → logprob: -4.322848320007324
    5. '[::-' → logprob: -5.697848320007324
    6. '_inverse' → logprob: -5.822848320007324
    7. ')' → logprob: -6.697848320007324
    8. 'array' → logprob: -7.447848320007324
    9. '[' → logprob: -8.072848320007324
    10. 'np' → logprob: -8.197848320007324

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029692286625504494
    2. '(arr' → logprob: -3.6546921730041504
    3. ' ,' → logprob: -6.02969217300415
    4. '[::-' → logprob: -7.27969217300415
    5. '[arr' → logprob: -9.529692649841309
    6. ',f' → logprob: -10.279692649841309
    7. '(f' → logprob: -10.279692649841309
    8. '   ' → logprob: -10.404692649841309
    9. ')' → logprob: -10.904692649841309
    10. 'arr' → logprob: -10.904692649841309

Token 369: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012979622930288315
    2. ' mod' → logprob: -4.512979507446289
    3. 'MOD' → logprob: -6.262979507446289
    4. ' MOD' → logprob: -10.762979507446289
    5. '	mod' → logprob: -13.887979507446289
    6. '(mod' → logprob: -14.512979507446289
    7. ' ' → logprob: -14.762979507446289
    8. '```' → logprob: -15.262979507446289
    9. '   ' → logprob: -15.512979507446289
    10. '
' → logprob: -15.637979507446289

Token 370: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.0018416560487821698
    2. 'const' → logprob: -6.3768415451049805
    3. '_CONST' → logprob: -9.12684154510498
    4. ')' → logprob: -10.87684154510498
    5. '_consts' → logprob: -12.62684154510498
    6. ')_' → logprob: -13.62684154510498
    7. 'Const' → logprob: -13.62684154510498
    8. '```' → logprob: -14.12684154510498
    9. '
' → logprob: -14.25184154510498
    10. '_' → logprob: -14.62684154510498

Token 371: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02060086466372013
    2. ')
' → logprob: -3.8956007957458496
    3. ' )' → logprob: -10.895601272583008
    4. ')[' → logprob: -11.020601272583008
    5. '   ' → logprob: -12.020601272583008
    6. ')

' → logprob: -12.020601272583008
    7. ')
' → logprob: -13.020601272583008
    8. '()' → logprob: -13.520601272583008
    9. ' )
' → logprob: -13.520601272583008
    10. '[::-' → logprob: -13.645601272583008

Token 372: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.051941752433776855
    2. ':]' → logprob: -3.4269418716430664
    3. ':' → logprob: -4.551941871643066
    4. '[::-' → logprob: -5.551941871643066
    5. ']' → logprob: -6.551941871643066
    6. '::' → logprob: -6.926941871643066
    7. ' :]' → logprob: -7.426941871643066
    8. ' ::' → logprob: -7.801941871643066
    9. ' :' → logprob: -8.801941871643066
    10. ':::' → logprob: -10.551941871643066

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004128503613173962
    2. '-' → logprob: -5.879128456115723
    3. 'int' → logprob: -7.379128456115723
    4. 'None' → logprob: -8.379128456115723
    5. '
' → logprob: -8.879128456115723
    6. '-
' → logprob: -9.254128456115723
    7. '])' → logprob: -10.129128456115723
    8. 'none' → logprob: -10.379128456115723
    9. 'index' → logprob: -10.504128456115723
    10. ']' → logprob: -10.504128456115723

Token 374: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4293558597564697
    2. ']' → logprob: -1.0543558597564697
    3. '])' → logprob: -8.30435562133789
    4. '<|end|>' → logprob: -9.17935562133789
    5. ')]' → logprob: -9.17935562133789
    6. '   ' → logprob: -9.80435562133789
    7. ' )' → logprob: -9.92935562133789
    8. ' ]' → logprob: -10.55435562133789
    9. ')
' → logprob: -10.92935562133789
    10. 'return' → logprob: -11.80435562133789

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020070893689990044
    2. '<|end|>' → logprob: -4.020071029663086
    3. ')' → logprob: -7.270071029663086
    4. '
' → logprob: -7.645071029663086
    5. '	return' → logprob: -8.145071029663086
    6. ' return' → logprob: -9.270071029663086
    7. ',' → logprob: -9.895071029663086
    8. 'def' → logprob: -9.895071029663086
    9. '```' → logprob: -9.895071029663086
    10. '<|end|>' → logprob: -10.020071029663086

Token 376: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009414511732757092
    2. ' return' → logprob: -4.7594146728515625
    3. 'return' (adapté à ' return') → logprob: -7.2594146728515625
    4. '
' → logprob: -10.509414672851562
    5. '    
' → logprob: -10.759414672851562
    6. '	return' → logprob: -10.759414672851562
    7. ' ' → logprob: -11.634414672851562
    8. ' 
' → logprob: -12.759414672851562
    9. ':return' → logprob: -13.009414672851562
    10. ',' → logprob: -13.134414672851562

Token 377: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05505041405558586
    2. ' factorial' → logprob: -2.9300503730773926
    3. '(f' → logprob: -9.93005084991455
    4. ' factor' → logprob: -10.18005084991455
    5. 'fact' → logprob: -10.55505084991455
    6. '(' → logprob: -10.68005084991455
    7. '   ' → logprob: -11.05505084991455
    8. ' (' → logprob: -11.80505084991455
    9. ' ' → logprob: -12.80505084991455
    10. '_factor' → logprob: -12.93005084991455

Token 378: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.3871082365512848
    2. '_factor' → logprob: -1.1371082067489624
    3. '_' → logprob: -9.137107849121094
    4. '_and' → logprob: -9.512107849121094
    5. 'factor' → logprob: -11.637107849121094
    6. '_,' → logprob: -12.012107849121094
    7. 's' → logprob: -12.137107849121094
    8. ',' → logprob: -12.387107849121094
    9. 'array' → logprob: -12.512107849121094
    10. '_factory' → logprob: -12.637107849121094

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012322211638092995
    2. '<|end|>' → logprob: -4.512322425842285
    3. ' ,' → logprob: -6.887322425842285
    4. ',
' → logprob: -9.137322425842285
    5. '<|end|>' → logprob: -9.637322425842285
    6. '
' → logprob: -10.762322425842285
    7. ',input' → logprob: -11.137322425842285
    8. ' ' → logprob: -11.387322425842285
    9. '   ' → logprob: -12.262322425842285
    10. '```' → logprob: -12.637322425842285

Token 380: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.038044363260269165
    2. ' factorial' → logprob: -3.2880444526672363
    3. ' factor' → logprob: -13.163043975830078
    4. 'fact' → logprob: -15.288043975830078
    5. '_factor' → logprob: -15.288043975830078
    6. '.factor' → logprob: -15.913043975830078
    7. '   ' → logprob: -16.288043975830078
    8. ' ' → logprob: -17.038043975830078
    9. '-factor' → logprob: -17.038043975830078
    10. 'Factor' → logprob: -17.413043975830078

Token 381: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0020781708881258965
    2. '_array' → logprob: -6.377078056335449
    3. 'inverse' → logprob: -8.00207805633545
    4. '_factor' → logprob: -10.75207805633545
    5. '_and' → logprob: -11.37707805633545
    6. '_inv' → logprob: -13.12707805633545
    7. ' inverse' → logprob: -13.37707805633545
    8. 'Inverse' → logprob: -13.62707805633545
    9. 'array' → logprob: -14.25207805633545
    10. '_reverse' → logprob: -14.37707805633545

Token 382: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.4153549020411447e-05
    2. 'array' → logprob: -11.50002384185791
    3. '_arr' → logprob: -12.25002384185791
    4. '_inverse' → logprob: -12.25002384185791
    5. 'rray' → logprob: -13.50002384185791
    6. 'arr' → logprob: -13.75002384185791
    7. '_arrays' → logprob: -14.62502384185791
    8. '[' → logprob: -15.37502384185791
    9. 's' → logprob: -15.50002384185791
    10. '```' → logprob: -15.62502384185791

Token 383: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21703480184078217
    2. ',' → logprob: -3.0920348167419434
    3. '<|end|>' → logprob: -3.0920348167419434
    4. '(' → logprob: -3.2170348167419434
    5. ':' → logprob: -3.5920348167419434
    6. '[' → logprob: -4.342034816741943
    7. 'def' → logprob: -4.467034816741943
    8. '#' → logprob: -5.467034816741943
    9. '(
' → logprob: -5.967034816741943
    10. '   ' → logprob: -6.592034816741943

Token 385: ' System' (ID: 1219)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6733533143997192
    2. 'factor' → logprob: -1.6733533143997192
    3. 'def' → logprob: -1.9233533143997192
    4. 'fact' → logprob: -2.9233531951904297
    5. 'param' → logprob: -4.04835319519043
    6. '#' → logprob: -4.04835319519043
    7. 'n' → logprob: -4.29835319519043
    8. 'inv' → logprob: -4.54835319519043
    9. 'comb' → logprob: -4.92335319519043
    10. 'upper' → logprob: -5.04835319519043

Token 386: 'atic' (ID: 2351)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012358956038951874
    2. 'atic' → logprob: -4.762359142303467
    3. 'import' → logprob: -6.137359142303467
    4. ' def' → logprob: -7.887359142303467
    5. '<|end|>' → logprob: -8.387358665466309
    6. '#' → logprob: -8.762358665466309
    7. '_' → logprob: -8.887358665466309
    8. '_defined' → logprob: -9.137358665466309
    9. '```' → logprob: -9.262358665466309
    10. '_def' → logprob: -9.387358665466309

Token 387: ' pre' (ID: 876)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.060263633728027344
    2. 'comb' → logprob: -3.9352636337280273
    3. '#' → logprob: -4.185263633728027
    4. ' def' → logprob: -4.810263633728027
    5. 'factor' → logprob: -5.310263633728027
    6. 'arr' → logprob: -5.810263633728027
    7. 'com' → logprob: -6.060263633728027
    8. ' combination' → logprob: -6.185263633728027
    9. '_comb' → logprob: -7.560263633728027
    10. ' factorial' → logprob: -7.935263633728027

Token 388: 'com' (ID: 639)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2996484041213989
    2. 'pare' → logprob: -2.2996482849121094
    3. 'paration' → logprob: -2.9246482849121094
    4. 'computed' → logprob: -3.0496482849121094
    5. 'fix' → logprob: -3.5496482849121094
    6. 'processing' → logprob: -4.924648284912109
    7. '#' → logprob: -5.924648284912109
    8. 'com' → logprob: -6.049648284912109
    9. 'comput' → logprob: -6.174648284912109
    10. 'import' → logprob: -6.424648284912109

Token 389: 'putation' (ID: 47913)
  Prédit: 'putation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'putation' → logprob: -0.14236760139465332
    2. 'pute' → logprob: -2.2673676013946533
    3. 'puted' → logprob: -3.6423676013946533
    4. 'put' → logprob: -5.892367362976074
    5. 'p' → logprob: -9.642367362976074
    6. '#' → logprob: -10.642367362976074
    7. '```' → logprob: -10.892367362976074
    8. 'puta' → logprob: -11.517367362976074
    9. '``' → logprob: -12.142367362976074
    10. 'puter' → logprob: -12.642367362976074

Token 390: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3549114465713501
    2. 'factor' → logprob: -1.60491144657135
    3. 'upper' → logprob: -3.4799113273620605
    4. 'MAX' → logprob: -4.1049113273620605
    5. 'fact' → logprob: -4.3549113273620605
    6. 'param' → logprob: -4.4799113273620605
    7. '_max' → logprob: -4.8549113273620605
    8. '(max' → logprob: -5.2299113273620605
    9. '_factor' → logprob: -5.7299113273620605
    10. '_upper' → logprob: -6.6049113273620605

Token 391: ' factorial' (ID: 111204)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -1.1034704446792603
    2. ' param' → logprob: -1.1034704446792603
    3. 'factor' → logprob: -2.3534703254699707
    4. ' factorial' → logprob: -2.7284703254699707
    5. 'comb' → logprob: -2.9784703254699707
    6. ' combination' → logprob: -3.4784703254699707
    7. ' combin' → logprob: -4.103470325469971
    8. 'n' → logprob: -4.228470325469971
    9. 'max' → logprob: -4.853470325469971
    10. ' combinations' → logprob: -4.978470325469971

Token 392: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38647016882896423
    2. '_max' → logprob: -1.8864701986312866
    3. '_upper' → logprob: -2.761470079421997
    4. 'max' → logprob: -3.136470079421997
    5. '_array' → logprob: -3.886470079421997
    6. '_factor' → logprob: -4.136470317840576
    7. '_limit' → logprob: -4.636470317840576
    8. 'upper' → logprob: -6.136470317840576
    9. '_,' → logprob: -6.386470317840576
    10. 'MAX' → logprob: -6.636470317840576

Token 393: ' and' (ID: 326)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5156344175338745
    2. ',' → logprob: -1.7656344175338745
    3. 'factor' → logprob: -1.8906344175338745
    4. 'fact' → logprob: -3.265634536743164
    5. 'upper' → logprob: -4.265634536743164
    6. 'MAX' → logprob: -4.890634536743164
    7. '_max' → logprob: -5.390634536743164
    8. 'fac' → logprob: -5.890634536743164
    9. '_factor' → logprob: -6.015634536743164
    10. '(max' → logprob: -6.140634536743164

Token 394: ' combinations' (ID: 43835)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.021552640944719315
    2. ' invers' → logprob: -4.396552562713623
    3. 'inverse' → logprob: -4.771552562713623
    4. 'factor' → logprob: -8.021553039550781
    5. 'inv' → logprob: -9.396553039550781
    6. ' factorial' → logprob: -9.771553039550781
    7. ' inverse' → logprob: -10.396553039550781
    8. 'their' → logprob: -10.646553039550781
    9. ' their' → logprob: -12.396553039550781
    10. '#' → logprob: -13.646553039550781

Token 395: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7537580728530884
    2. 'max' → logprob: -1.3787580728530884
    3. 'factor' → logprob: -1.3787580728530884
    4. 'fac' → logprob: -4.753757953643799
    5. '
' → logprob: -5.378757953643799
    6. 'upper' → logprob: -5.878757953643799
    7. 'MAX' → logprob: -6.003757953643799
    8. '(max' → logprob: -6.253757953643799
    9. 'param' → logprob: -6.503757953643799
    10. ',' → logprob: -7.378757953643799

Token 396: 'upper' (ID: 26119)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6058192253112793
    2. 'factor' → logprob: -0.8558192253112793
    3. 'max' → logprob: -4.230819225311279
    4. 'fac' → logprob: -4.980819225311279
    5. 'param' → logprob: -5.980819225311279
    6. ' factorial' → logprob: -6.355819225311279
    7. ' fact' → logprob: -7.355819225311279
    8. 'upper' → logprob: -7.480819225311279
    9. '
' → logprob: -7.980819225311279
    10. ' max' → logprob: -8.480819702148438

Token 397: '_for' (ID: 11903)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00013214473437983543
    2. '_bounds' → logprob: -9.87513256072998
    3. '_' → logprob: -10.37513256072998
    4. '_upper' → logprob: -10.75013256072998
    5. '_limit' → logprob: -11.50013256072998
    6. '_const' → logprob: -12.12513256072998
    7. '_factor' → logprob: -12.50013256072998
    8. '_size' → logprob: -12.62513256072998
    9. '_constant' → logprob: -14.37513256072998
    10. '_b' → logprob: -14.37513256072998

Token 398: '_pre' (ID: 18599)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.1898001730442047
    2. '_' → logprob: -2.564800262451172
    3. ' =' → logprob: -3.189800262451172
    4. '_factor' → logprob: -3.689800262451172
    5. '=' → logprob: -4.689800262451172
    6. '_bounds' → logprob: -4.814800262451172
    7. '_const' → logprob: -5.439800262451172
    8. 'n' → logprob: -6.439800262451172
    9. '_upper' → logprob: -6.439800262451172
    10. '_n' → logprob: -6.689800262451172

Token 399: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.03137161582708359
    2. '_compute' → logprob: -4.031371593475342
    3. 'c' → logprob: -4.531371593475342
    4. 'comp' → logprob: -6.906371593475342
    5. 'p' → logprob: -8.0313720703125
    6. '_bound' → logprob: -8.1563720703125
    7. 'com' → logprob: -9.2813720703125
    8. 'calc' → logprob: -9.2813720703125
    9. '=' → logprob: -9.2813720703125
    10. ' =' → logprob: -9.5313720703125

Token 400: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859168455004692
    2. '=' → logprob: -3.0485916137695312
    3. ',' → logprob: -12.798591613769531
    4. ' ' → logprob: -15.173591613769531
    5. '=int' → logprob: -15.173591613769531
    6. '_' → logprob: -15.423591613769531
    7. ' =
' → logprob: -15.548591613769531
    8. ' ,' → logprob: -16.04859161376953
    9. '＝' → logprob: -16.04859161376953
    10. '_=' → logprob: -16.42359161376953

Token 401: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.05221458896994591
    2. ' param' → logprob: -3.0522146224975586
    3. '10' → logprob: -6.677214622497559
    4. ' ' → logprob: -6.927214622497559
    5. 'max' → logprob: -7.552214622497559
    6. '2' → logprob: -7.927214622497559
    7. ' max' → logprob: -8.302214622497559
    8. '100' → logprob: -8.927214622497559
    9. '200' → logprob: -9.802214622497559
    10. '(param' → logprob: -10.927214622497559

Token 402: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.696889623621246e-06
    2. '_x' → logprob: -12.87500286102295
    3. 'n' → logprob: -17.375001907348633
    4. '_' → logprob: -19.125001907348633
    5. '```' → logprob: -19.500001907348633
    6. '_y' → logprob: -20.125001907348633
    7. '\' → logprob: -20.875001907348633
    8. '_k' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '_
' → logprob: -21.500001907348633

Token 403: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931638121604919
    2. ' +' → logprob: -0.6931638121604919
    3. '
' → logprob: -11.818163871765137
    4. '*' → logprob: -12.818163871765137
    5. 'import' → logprob: -13.443163871765137
    6. ' *' → logprob: -13.818163871765137
    7. '+
' → logprob: -14.568163871765137
    8. 'def' → logprob: -14.943163871765137
    9. '＋' → logprob: -14.943163871765137
    10. ' ' → logprob: -14.943163871765137

Token 404: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.5864298939704895
    2. '1' → logprob: -1.2114298343658447
    3. '10' → logprob: -2.7114298343658447
    4. '2' → logprob: -3.3364298343658447
    5. ' ' → logprob: -3.9614298343658447
    6. '5' → logprob: -4.461430072784424
    7. '100' → logprob: -5.086430072784424
    8. ' param' → logprob: -5.711430072784424
    9. '50' → logprob: -6.586430072784424
    10. '20' → logprob: -7.211430072784424

Token 405: '_n' (ID: 2170)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02383256144821644
    2. '_n' → logprob: -3.7738325595855713
    3. 'x' → logprob: -8.148832321166992
    4. '1' → logprob: -8.648832321166992
    5. '_' → logprob: -10.398832321166992
    6. 'n' → logprob: -10.773832321166992
    7. '```' → logprob: -11.148832321166992
    8. '
' → logprob: -11.648832321166992
    9. ' ' → logprob: -11.773832321166992
    10. '_m' → logprob: -12.586332321166992

Token 406: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7752923369407654
    2. '
' → logprob: -1.4002923965454102
    3. 'factor' → logprob: -1.9002923965454102
    4. ' +' → logprob: -2.02529239654541
    5. 'upper' → logprob: -6.27529239654541
    6. ',' → logprob: -6.40029239654541
    7. 'fact' → logprob: -6.52529239654541
    8. 'arr' → logprob: -6.77529239654541
    9. '_factor' → logprob: -6.90029239654541
    10. 'import' → logprob: -7.40029239654541

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.965103030204773
    2. '2' → logprob: -1.090103030204773
    3. '10' → logprob: -1.715103030204773
    4. '5' → logprob: -2.4651031494140625
    5. ' ' → logprob: -4.9651031494140625
    6. '3' → logprob: -5.4651031494140625
    7. '100' → logprob: -5.5901031494140625
    8. '50' → logprob: -6.5901031494140625
    9. '20' → logprob: -7.0901031494140625
    10. '200' → logprob: -8.965103149414062

Token 408: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8548460602760315
    2. '1' → logprob: -1.6048460006713867
    3. '5' → logprob: -1.7298460006713867
    4. '2' → logprob: -1.7298460006713867
    5. '100' → logprob: -5.354846000671387
    6. 'param' → logprob: -5.604846000671387
    7. '3' → logprob: -5.604846000671387
    8. '50' → logprob: -5.729846000671387
    9. '20' → logprob: -6.229846000671387
    10. ' ' → logprob: -7.354846000671387

Token 409: '
' (ID: 198)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05901291221380234
    2. '
' → logprob: -3.5590128898620605
    3. 'fact' → logprob: -3.8090128898620605
    4. '_factor' → logprob: -5.3090128898620605
    5. ',' → logprob: -7.3090128898620605
    6. ' factorial' → logprob: -7.6840128898620605
    7. ',
' → logprob: -8.934013366699219
    8. 'fac' → logprob: -9.184013366699219
    9. '_fact' → logprob: -9.434013366699219
    10. 'f' → logprob: -9.809013366699219

Token 410: 'factor' (ID: 73174)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4780386984348297
    2. 'factor' → logprob: -0.9780386686325073
    3. 'fac' → logprob: -5.603038787841797
    4. ' factorial' → logprob: -9.728038787841797
    5. 'f' → logprob: -9.978038787841797
    6. '_factor' → logprob: -10.228038787841797
    7. 'facts' → logprob: -10.478038787841797
    8. '_fact' → logprob: -10.728038787841797
    9. 'fa' → logprob: -11.228038787841797
    10. 'arr' → logprob: -11.478038787841797

Token 411: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.20715807378292084
    2. 'ials' → logprob: -1.707158088684082
    3. '_factor' → logprob: -5.957158088684082
    4. 's' → logprob: -6.332158088684082
    5. '_array' → logprob: -7.457158088684082
    6. 'factor' → logprob: -8.332158088684082
    7. 't' → logprob: -8.707158088684082
    8. 'array' → logprob: -9.957158088684082
    9. '_arrays' → logprob: -9.957158088684082
    10. 'al' → logprob: -10.832158088684082

Token 412: '_arr' (ID: 25121)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00047214110963977873
    2. '_factor' → logprob: -8.000472068786621
    3. ',' → logprob: -9.375472068786621
    4. '_,' → logprob: -10.750472068786621
    5. '_arr' → logprob: -10.750472068786621
    6. 's' → logprob: -12.375472068786621
    7. '_fact' → logprob: -13.375472068786621
    8. '_' → logprob: -13.625472068786621
    9. ',_' → logprob: -14.250472068786621
    10. 'array' → logprob: -14.500472068786621

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. 's' → logprob: -11.625016212463379
    3. ' ,' → logprob: -12.375016212463379
    4. '_factor' → logprob: -13.750016212463379
    5. '=' → logprob: -14.625016212463379
    6. ',f' → logprob: -14.750016212463379
    7. '_,' → logprob: -14.750016212463379
    8. 'factor' → logprob: -15.250016212463379
    9. '‌,' → logprob: -15.750016212463379
    10. ',
' → logprob: -16.375017166137695

Token 414: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.208473339676857
    2. ' factorial' → logprob: -2.3334734439849854
    3. 'inverse' → logprob: -2.9584734439849854
    4. 'inv' → logprob: -3.3334734439849854
    5. 'fact' → logprob: -6.333473205566406
    6. ' inverse' → logprob: -6.583473205566406
    7. ' inv' → logprob: -8.083473205566406
    8. ' factor' → logprob: -9.708473205566406
    9. 'in' → logprob: -9.708473205566406
    10. ' fact' → logprob: -11.333473205566406

Token 415: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.12986008822917938
    2. '_inverse' → logprob: -2.1298601627349854
    3. 'inv' → logprob: -6.004859924316406
    4. 'inverse' → logprob: -8.129859924316406
    5. '_arr' → logprob: -9.004859924316406
    6. '_in' → logprob: -11.379859924316406
    7. 'arr' → logprob: -11.754859924316406
    8. 'Inv' → logprob: -11.879859924316406
    9. '_' → logprob: -12.129859924316406
    10. '_INV' → logprob: -12.754859924316406

Token 416: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0059335362166166306
    2. 'arr' → logprob: -5.13093376159668
    3. '_array' → logprob: -12.88093376159668
    4. '	arr' → logprob: -14.00593376159668
    5. '_' → logprob: -14.88093376159668
    6. '=' → logprob: -15.75593376159668
    7. 'Arr' → logprob: -16.13093376159668
    8. ' =' → logprob: -16.13093376159668
    9. '$arr' → logprob: -16.13093376159668
    10. '-arr' → logprob: -16.13093376159668

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869366943836212
    2. '=' → logprob: -1.1369366645812988
    3. ',' → logprob: -9.636937141418457
    4. '＝' → logprob: -15.886937141418457
    5. ' =
' → logprob: -16.26193618774414
    6. ' ,' → logprob: -16.51193618774414
    7. ' ' → logprob: -17.01193618774414
    8. '=

' → logprob: -17.88693618774414
    9. '=
' → logprob: -18.01193618774414
    10. ' =
' → logprob: -18.13693618774414

Token 418: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.4287542402744293
    2. ' factorial' → logprob: -1.053754210472107
    3. ' factor' → logprob: -10.553753852844238
    4. 'fact' → logprob: -11.053753852844238
    5. '_factor' → logprob: -12.428753852844238
    6. 'factory' → logprob: -13.303753852844238
    7. 'Factor' → logprob: -13.678753852844238
    8. ' ' → logprob: -13.803753852844238
    9. '-factor' → logprob: -13.803753852844238
    10. '.factor' → logprob: -13.803753852844238

Token 419: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -4.246537173457909e-06
    2. '_array' → logprob: -13.625003814697266
    3. 'and' → logprob: -14.000003814697266
    4. '_factor' → logprob: -14.000003814697266
    5. ',_' → logprob: -15.000003814697266
    6. ' and' → logprob: -15.500003814697266
    7. '(' → logprob: -15.750003814697266
    8. '_arr' → logprob: -16.375003814697266
    9. '_AND' → logprob: -16.375003814697266
    10. '_' → logprob: -16.750003814697266

Token 420: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.3132758140563965
    2. 'inverse' → logprob: -1.3132758140563965
    3. ' inverse' → logprob: -11.813276290893555
    4. 'Inverse' → logprob: -13.438276290893555
    5. '_reverse' → logprob: -13.938276290893555
    6. 'array' → logprob: -14.313276290893555
    7. '_array' → logprob: -14.438276290893555
    8. 'verse' → logprob: -14.688276290893555
    9. 'invert' → logprob: -14.938276290893555
    10. '.inverse' → logprob: -15.063276290893555

Token 421: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0031790214125066996
    2. 'array' → logprob: -5.75317907333374
    3. 'arr' → logprob: -14.003178596496582
    4. 'Array' → logprob: -15.253178596496582
    5. '_arr' → logprob: -16.3781795501709
    6. '_arrays' → logprob: -16.8781795501709
    7. 'arrays' → logprob: -17.8781795501709
    8. ' array' → logprob: -18.0031795501709
    9. '_ARRAY' → logprob: -18.5031795501709
    10. 'rray' → logprob: -18.6281795501709

Token 422: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.125
    3. '(up' → logprob: -15.875
    4. 'upper' → logprob: -18.0
    5. '(
' → logprob: -18.25
    6. '(int' → logprob: -19.5
    7. '((' → logprob: -20.375
    8. '(lower' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. ' upper' → logprob: -21.5

Token 423: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0011703446507453918
    2. ' upper' → logprob: -6.7511701583862305
    3. 'int' → logprob: -16.876171112060547
    4. ')' → logprob: -17.501171112060547
    5. '   ' → logprob: -18.001171112060547
    6. 'up' → logprob: -18.126171112060547
    7. '.upper' → logprob: -18.251171112060547
    8. '(' → logprob: -18.626171112060547
    9. 'uppercase' → logprob: -19.001171112060547
    10. '_upper' → logprob: -19.876171112060547

Token 424: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -1.4855663721391466e-05
    2. 'for' → logprob: -11.125015258789062
    3. ')' → logprob: -18.000015258789062
    4. '_upper' → logprob: -18.125015258789062
    5. 'For' → logprob: -18.250015258789062
    6. 'upper' → logprob: -18.375015258789062
    7. '(for' → logprob: -18.750015258789062
    8. '
' → logprob: -19.125015258789062
    9. ' for' → logprob: -19.125015258789062
    10. '_' → logprob: -19.250015258789062

Token 425: '_pre' (ID: 18599)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -6.392202976712724e-06
    2. '_pre' → logprob: -12.000006675720215
    3. ' pre' → logprob: -16.6250057220459
    4. 'compute' → logprob: -19.2500057220459
    5. '(pre' → logprob: -19.8750057220459
    6. '	pre' → logprob: -20.3750057220459
    7. 'p' → logprob: -21.3750057220459
    8. '
' → logprob: -21.5000057220459
    9. 'pread' → logprob: -21.6250057220459
    10. '-pre' → logprob: -21.8750057220459

Token 426: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.6240566083070007e-06
    2. 'calculate' → logprob: -15.250001907348633
    3. ' compute' → logprob: -15.250001907348633
    4. 'compile' → logprob: -15.500001907348633
    5. 'com' → logprob: -15.750001907348633
    6. 'c' → logprob: -16.125001907348633
    7. 'const' → logprob: -16.125001907348633
    8. 'count' → logprob: -16.125001907348633
    9. '100' → logprob: -16.375001907348633
    10. 'computed' → logprob: -16.375001907348633

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006737631279975176
    2. ')' → logprob: -5.00673770904541
    3. ',)' → logprob: -11.38173770904541
    4. ' ,' → logprob: -11.63173770904541
    5. ',
' → logprob: -14.63173770904541
    6. '),' → logprob: -15.00673770904541
    7. '```' → logprob: -15.00673770904541
    8. '   ' → logprob: -15.75673770904541
    9. '‌,' → logprob: -15.88173770904541
    10. '+' → logprob: -16.006736755371094

Token 428: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009114635176956654
    2. ' MOD' → logprob: -7.000911235809326
    3. '   ' → logprob: -16.875911712646484
    4. '_MOD' → logprob: -20.125911712646484
    5. 'MO' → logprob: -20.250911712646484
    6. ' ' → logprob: -21.375911712646484
    7. 'MODE' → logprob: -22.500911712646484
    8. '.MOD' → logprob: -22.500911712646484
    9. '  ' → logprob: -24.250911712646484
    10. '    ' → logprob: -24.500911712646484

Token 429: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -7.896309739408025e-07
    2. 'CONST' → logprob: -14.625000953674316
    3. 'const' → logprob: -15.625000953674316
    4. '_const' → logprob: -17.125
    5. '_MOD' → logprob: -17.75
    6. ' const' → logprob: -17.75
    7. '_CONSTANT' → logprob: -18.125
    8. 'Const' → logprob: -18.75
    9. '	const' → logprob: -18.875
    10. ')' → logprob: -19.375

Token 430: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.500003814697266
    4. ')#' → logprob: -16.875003814697266
    5. '),' → logprob: -17.250003814697266
    6. ')

' → logprob: -17.375003814697266
    7. '<|end|>' → logprob: -17.875003814697266
    8. '))' → logprob: -18.125003814697266
    9. ')
' → logprob: -18.375003814697266
    10. '#' → logprob: -18.500003814697266

Token 431: 'com' (ID: 639)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6957185864448547
    2. 'def' → logprob: -0.9457185864448547
    3. '#' → logprob: -2.82071852684021
    4. '<|end|>' → logprob: -3.82071852684021
    5. '+' → logprob: -4.695718765258789
    6. 'factor' → logprob: -5.320718765258789
    7. '(' → logprob: -5.820718765258789
    8. '[' → logprob: -5.945718765258789
    9. 'param' → logprob: -6.070718765258789
    10. ']' → logprob: -6.320718765258789

Token 432: 'binations' (ID: 113572)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.44109565019607544
    2. 'binations' → logprob: -1.4410955905914307
    3. 'bination' → logprob: -2.1910955905914307
    4. 'bin' → logprob: -4.94109582901001
    5. 'bine' → logprob: -8.691095352172852
    6. 'bined' → logprob: -8.691095352172852
    7. '```' → logprob: -9.066095352172852
    8. 'bs' → logprob: -9.191095352172852
    9. 'bi' → logprob: -9.816095352172852
    10. '#' → logprob: -9.816095352172852

Token 433: '_n' (ID: 2170)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.04772987961769104
    2. '_' → logprob: -3.172729969024658
    3. ' =' → logprob: -5.922729969024658
    4. '=' → logprob: -6.422729969024658
    5. '_count' → logprob: -9.5477294921875
    6. '_array' → logprob: -9.7977294921875
    7. '_factor' → logprob: -10.0477294921875
    8. 'arr' → logprob: -10.2977294921875
    9. '_=' → logprob: -10.4227294921875
    10. '_func' → logprob: -10.4227294921875

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7669090628623962
    2. ' =' → logprob: -0.8919090628623962
    3. '_arr' → logprob: -2.641909122467041
    4. 'r' → logprob: -4.266909122467041
    5. 'arr' → logprob: -4.266909122467041
    6. '_r' → logprob: -4.266909122467041
    7. '_choose' → logprob: -5.516909122467041
    8. '_' → logprob: -6.016909122467041
    9. 'Cr' → logprob: -6.141909122467041
    10. 'k' → logprob: -6.891909122467041

Token 435: ' factorial' (ID: 111204)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.734146237373352
    2. 'lambda' → logprob: -1.359146237373352
    3. ' np' → logprob: -2.6091461181640625
    4. 'factor' → logprob: -2.6091461181640625
    5. '(lambda' → logprob: -3.1091461181640625
    6. ' lambda' → logprob: -3.4841461181640625
    7. 'param' → logprob: -4.3591461181640625
    8. '(np' → logprob: -4.7341461181640625
    9. ' factorial' → logprob: -4.9841461181640625
    10. '[param' → logprob: -5.8591461181640625

Token 436: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003024537581950426
    2. 'arr' → logprob: -8.1253023147583
    3. '_array' → logprob: -13.1253023147583
    4. ',' → logprob: -13.8753023147583
    5. '_factor' → logprob: -14.0003023147583
    6. '_' → logprob: -14.6253023147583
    7. '_inv' → logprob: -14.7503023147583
    8. 'Arr' → logprob: -15.5003023147583
    9. '	arr' → logprob: -15.5003023147583
    10. '[' → logprob: -15.5003023147583

Token 437: '[param' (ID: 154155)
  Prédit: '[param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.07793033868074417
    2. '[' → logprob: -3.952930450439453
    3. '[:' → logprob: -3.952930450439453
    4. '[:]' → logprob: -3.952930450439453
    5. '*' → logprob: -4.952930450439453
    6. ' /' → logprob: -5.452930450439453
    7. ' *' → logprob: -5.952930450439453
    8. '[n' → logprob: -7.827930450439453
    9. '/' → logprob: -8.077930450439453
    10. '```' → logprob: -8.202930450439453

Token 438: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.935296834039036e-06
    2. '_x' → logprob: -12.87500286102295
    3. 'n' → logprob: -15.87500286102295
    4. '_' → logprob: -16.375003814697266
    5. ' _' → logprob: -17.125003814697266
    6. '
' → logprob: -17.250003814697266
    7. '```' → logprob: -17.875003814697266
    8. '_y' → logprob: -18.625003814697266
    9. '_
' → logprob: -18.625003814697266
    10. '\' → logprob: -19.000003814697266

Token 439: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002818789565935731
    2. ']*' → logprob: -6.502818584442139
    3. ']
' → logprob: -6.752818584442139
    4. ' ]' → logprob: -9.752819061279297
    5. ']

' → logprob: -11.127819061279297
    6. '],' → logprob: -11.127819061279297
    7. '+' → logprob: -11.377819061279297
    8. '*' → logprob: -11.377819061279297
    9. ':' → logprob: -12.002819061279297
    10. ':]' → logprob: -12.002819061279297

Token 440: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05492810159921646
    2. ' factorial' → logprob: -2.9299280643463135
    3. ' factor' → logprob: -10.554927825927734
    4. 'fact' → logprob: -11.554927825927734
    5. '_factor' → logprob: -12.679927825927734
    6. 'pow' → logprob: -13.304927825927734
    7. '<|end|>' → logprob: -13.429927825927734
    8. '.factor' → logprob: -14.054927825927734
    9. ' ' → logprob: -14.679927825927734
    10. '```' → logprob: -14.679927825927734

Token 442: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.318681188422488e-05
    2. 'inv' → logprob: -12.00001335144043
    3. '_arr' → logprob: -13.00001335144043
    4. '_inf' → logprob: -13.12501335144043
    5. '[' → logprob: -15.00001335144043
    6. '_inverse' → logprob: -15.00001335144043
    7. ''_' → logprob: -15.12501335144043
    8. '_in' → logprob: -15.25001335144043
    9. '```' → logprob: -15.37501335144043
    10. '[_' → logprob: -15.50001335144043

Token 443: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -4.0484450437361374e-05
    2. 'arr' → logprob: -10.125040054321289
    3. 'Arr' → logprob: -15.500040054321289
    4. '[arr' → logprob: -16.75004005432129
    5. '	arr' → logprob: -17.25004005432129
    6. '_array' → logprob: -17.62504005432129
    7. '[' → logprob: -17.75004005432129
    8. '[_' → logprob: -17.87504005432129
    9. 'rr' → logprob: -18.25004005432129
    10. 'f' → logprob: -18.37504005432129

Token 444: '[:' (ID: 7808)
  Prédit: '[param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -1.5570885807392187e-05
    2. '[' → logprob: -12.625015258789062
    3. 'param' → logprob: -12.875015258789062
    4. '[
' → logprob: -13.125015258789062
    5. ':param' → logprob: -13.625015258789062
    6. '[:' → logprob: -13.625015258789062
    7. '[[' → logprob: -13.750015258789062
    8. '@param' → logprob: -14.250015258789062
    9. '```' → logprob: -14.625015258789062
    10. ',param' → logprob: -14.750015258789062

Token 445: 'param' (ID: 1355)
  Prédit: 'param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.00018625585653353482
    2. ':param' → logprob: -9.0001859664917
    3. ' param' → logprob: -10.1251859664917
    4. '(param' → logprob: -11.5001859664917
    5. '[param' → logprob: -11.5001859664917
    6. '1' → logprob: -14.5001859664917
    7. '@param' → logprob: -14.5001859664917
    8. ')param' → logprob: -14.6251859664917
    9. ',param' → logprob: -15.3751859664917
    10. 'params' → logprob: -15.7501859664917

Token 446: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -12.12501049041748
    3. '+' → logprob: -12.87501049041748
    4. 'n' → logprob: -13.37501049041748
    5. '[param' → logprob: -14.87501049041748
    6. '_x' → logprob: -15.75001049041748
    7. '[n' → logprob: -16.750011444091797
    8. '(param' → logprob: -16.750011444091797
    9. ' +' → logprob: -17.000011444091797
    10. '```' → logprob: -17.250011444091797

Token 447: ' +' (ID: 659)
  Prédit: '[param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.7762635946273804
    2. ']' → logprob: -0.9012635946273804
    3. 'param' → logprob: -2.65126371383667
    4. ':param' → logprob: -2.90126371383667
    5. '(param' → logprob: -6.02626371383667
    6. '][' → logprob: -6.40126371383667
    7. ' param' → logprob: -6.77626371383667
    8. ']%' → logprob: -6.90126371383667
    9. '[' → logprob: -7.90126371383667
    10. ',param' → logprob: -7.90126371383667

Token 448: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '
' → logprob: -15.750066757202148
    4. '```' → logprob: -16.00006675720215
    5. '   ' → logprob: -16.12506675720215
    6. '0' → logprob: -16.50006675720215
    7. '(' → logprob: -16.75006675720215
    8. '2' → logprob: -17.12506675720215
    9. '  ' → logprob: -17.37506675720215
    10. '+' → logprob: -18.00006675720215

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -16.750001907348633
    4. '-' → logprob: -17.000001907348633
    5. 'param' → logprob: -17.125001907348633
    6. '```' → logprob: -17.625001907348633
    7. '2' → logprob: -18.000001907348633
    8. '100' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '0' → logprob: -19.000001907348633

Token 450: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014307350851595402
    2. ']%' → logprob: -4.264307498931885
    3. ' ]' → logprob: -10.014307022094727
    4. '%' → logprob: -10.014307022094727
    5. ']
' → logprob: -11.014307022094727
    6. '[param' → logprob: -11.139307022094727
    7. '])' → logprob: -11.389307022094727
    8. '[' → logprob: -12.639307022094727
    9. '][' → logprob: -13.139307022094727
    10. ')' → logprob: -13.264307022094727

Token 451: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.48610037565231323
    2. ' %' → logprob: -1.236100435256958
    3. ' *' → logprob: -3.861100435256958
    4. ')' → logprob: -4.361100196838379
    5. '<|end|>' → logprob: -4.361100196838379
    6. '
' → logprob: -4.611100196838379
    7. '//' → logprob: -5.111100196838379
    8. '*' → logprob: -5.236100196838379
    9. ' /' → logprob: -5.361100196838379
    10. 'import' → logprob: -5.361100196838379

Token 452: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10020678490400314
    2. ' MOD' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.47520637512207
    4. '_MOD' → logprob: -17.60020637512207
    5. '.MOD' → logprob: -18.22520637512207
    6. '998' → logprob: -18.97520637512207
    7. '   ' → logprob: -19.60020637512207
    8. '
' → logprob: -20.35020637512207
    9. 'MO' → logprob: -20.47520637512207
    10. ' ' → logprob: -21.35020637512207

Token 453: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.005408303812146187
    2. 'const' → logprob: -5.63040828704834
    3. 'CONST' → logprob: -6.50540828704834
    4. '_const' → logprob: -8.25540828704834
    5. '[' → logprob: -10.25540828704834
    6. '_MOD' → logprob: -11.88040828704834
    7. '_CONT' → logprob: -13.38040828704834
    8. ' const' → logprob: -13.63040828704834
    9. '   ' → logprob: -13.88040828704834
    10. '[
' → logprob: -14.25540828704834

Token 454: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5190658569335938
    2. '<|end|>' → logprob: -1.8940658569335938
    3. '*' → logprob: -2.2690658569335938
    4. ')' → logprob: -3.2690658569335938
    5. '[
' → logprob: -3.6440658569335938
    6. ']' → logprob: -3.8940658569335938
    7. 'com' → logprob: -4.144065856933594
    8. ' *' → logprob: -4.144065856933594
    9. '#' → logprob: -4.894065856933594
    10. '[param' → logprob: -5.894065856933594

Token 455: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.004115561489015818
    2. ' factorial' → logprob: -5.504115581512451
    3. 'fact' → logprob: -10.754115104675293
    4. ' factor' → logprob: -12.129115104675293
    5. '_factor' → logprob: -13.129115104675293
    6. ' ' → logprob: -13.129115104675293
    7. 'fac' → logprob: -13.379115104675293
    8. '.factor' → logprob: -14.004115104675293
    9. '```' → logprob: -14.254115104675293
    10. '-factor' → logprob: -14.504115104675293

Token 456: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.7491250875755213e-05
    2. 'inv' → logprob: -10.625027656555176
    3. '_arr' → logprob: -13.500027656555176
    4. '_inf' → logprob: -14.750027656555176
    5. '```' → logprob: -15.000027656555176
    6. 'Inv' → logprob: -15.375027656555176
    7. ''_' → logprob: -15.875027656555176
    8. '_INV' → logprob: -15.875027656555176
    9. '_inverse' → logprob: -16.25002670288086
    10. '_inc' → logprob: -16.37502670288086

Token 457: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -8.888114098226652e-05
    2. 'arr' → logprob: -9.375088691711426
    3. '	arr' → logprob: -12.875088691711426
    4. '[arr' → logprob: -14.500088691711426
    5. 'Arr' → logprob: -15.000088691711426
    6. '_array' → logprob: -15.375088691711426
    7. '-arr' → logprob: -16.875089645385742
    8. '[' → logprob: -16.875089645385742
    9. '<arr' → logprob: -17.000089645385742
    10. ' arr' → logprob: -17.250089645385742

Token 458: '[param' (ID: 154155)
  Prédit: '[param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.37500286102295
    3. '[:' → logprob: -14.12500286102295
    4. '[
' → logprob: -16.750001907348633
    5. ':param' → logprob: -17.000001907348633
    6. '[[' → logprob: -17.375001907348633
    7. 'param' → logprob: -17.750001907348633
    8. '[np' → logprob: -17.875001907348633
    9. '(param' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.500001907348633

Token 459: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.1160349458805285e-05
    2. '_x' → logprob: -11.875011444091797
    3. 'n' → logprob: -12.625011444091797
    4. '[' → logprob: -14.875011444091797
    5. '_' → logprob: -15.875011444091797
    6. '_i' → logprob: -16.000011444091797
    7. '
' → logprob: -16.250011444091797
    8. '```' → logprob: -17.375011444091797
    9. '_
' → logprob: -18.000011444091797
    10. '<|end|>' → logprob: -18.437511444091797

Token 460: '::-' (ID: 96612)
  Prédit: '[param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.26623690128326416
    2. ':param' → logprob: -1.5162369012832642
    3. '-param' → logprob: -5.016236782073975
    4. 'param' → logprob: -5.516236782073975
    5. '[:' → logprob: -6.141236782073975
    6. ',param' → logprob: -8.516237258911133
    7. '[' → logprob: -8.766237258911133
    8. '][:' → logprob: -8.891237258911133
    9. ' -' → logprob: -9.016237258911133
    10. '(param' → logprob: -9.141237258911133

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004898841143585742
    2. '-' → logprob: -7.625489711761475
    3. ' -' → logprob: -14.000490188598633
    4. ' ' → logprob: -14.250490188598633
    5. '   ' → logprob: -15.750490188598633
    6. ']' → logprob: -15.750490188598633
    7. '```' → logprob: -17.000490188598633
    8. '
' → logprob: -17.875490188598633
    9. ',' → logprob: -18.000490188598633
    10. '::-' → logprob: -18.125490188598633

Token 462: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006403613369911909
    2. '[' → logprob: -8.125639915466309
    3. ' ]' → logprob: -8.625639915466309
    4. ')' → logprob: -10.125639915466309
    5. '])' → logprob: -10.125639915466309
    6. '][' → logprob: -11.125639915466309
    7. ']%' → logprob: -11.375639915466309
    8. '][:' → logprob: -11.500639915466309
    9. ']>' → logprob: -11.875639915466309
    10. '],' → logprob: -12.125639915466309

Token 463: ' %' (ID: 1851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8260027170181274
    2. '%' → logprob: -0.9510027170181274
    3. ']' → logprob: -3.201002597808838
    4. ')' → logprob: -3.201002597808838
    5. '[
' → logprob: -3.451002597808838
    6. '
' → logprob: -3.701002597808838
    7. '<|end|>' → logprob: -4.076002597808838
    8. '#' → logprob: -5.076002597808838
    9. '[np' → logprob: -6.076002597808838
    10. '```' → logprob: -6.201002597808838

Token 464: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.18012988567352295
    2. 'MOD' → logprob: -1.805129885673523
    3. '_MOD' → logprob: -8.555130004882812
    4. ' ' → logprob: -9.555130004882812
    5. 'mod' → logprob: -10.180130004882812
    6. ' b' → logprob: -10.930130004882812
    7. '(' → logprob: -11.680130004882812
    8. ' ' → logprob: -11.680130004882812
    9. '.MOD' → logprob: -12.055130004882812
    10. ''' → logprob: -12.180130004882812

Token 465: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.00010604646377032623
    2. 'CONST' → logprob: -9.875105857849121
    3. '_MOD' → logprob: -10.375105857849121
    4. '_const' → logprob: -11.000105857849121
    5. 'const' → logprob: -12.750105857849121
    6. '_CONSTANT' → logprob: -14.000105857849121
    7. ''_' → logprob: -14.375105857849121
    8. '```' → logprob: -14.375105857849121
    9. '\' → logprob: -15.500105857849121
    10. ' _' → logprob: -15.625105857849121

Token 466: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0054150819778442
    2. '
' → logprob: -1.1304150819778442
    3. '<|end|>' → logprob: -1.8804150819778442
    4. ')' → logprob: -2.7554149627685547
    5. '[
' → logprob: -3.1304149627685547
    6. '#' → logprob: -3.8804149627685547
    7. '%' → logprob: -5.130414962768555
    8. '\n' → logprob: -5.255414962768555
    9. ']' → logprob: -5.255414962768555
    10. 'def' → logprob: -6.630414962768555

Token 467: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9861229062080383
    2. '(' → logprob: -1.2361228466033936
    3. ')' → logprob: -1.8611228466033936
    4. '=' → logprob: -3.1111228466033936
    5. ':' → logprob: -3.4861228466033936
    6. ' ' → logprob: -3.4861228466033936
    7. ',' → logprob: -4.236123085021973
    8. '#' → logprob: -4.486123085021973
    9. '%' → logprob: -4.861123085021973
    10. '(
' → logprob: -4.986123085021973

Token 468: ' System' (ID: 1219)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6617666482925415
    2. '(' → logprob: -2.161766529083252
    3. 'd' → logprob: -2.536766529083252
    4. '[' → logprob: -2.661766529083252
    5. '#' → logprob: -2.661766529083252
    6. 'i' → logprob: -3.911766529083252
    7. 'import' → logprob: -3.911766529083252
    8. 'for' → logprob: -3.911766529083252
    9. 'param' → logprob: -4.036766529083252
    10. ')' → logprob: -4.161766529083252

Token 469: 'atic' (ID: 2351)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.950369119644165
    2. 'atic' → logprob: -1.450369119644165
    3. 'def' → logprob: -2.200369119644165
    4. '#' → logprob: -2.200369119644165
    5. '_x' → logprob: -3.075369119644165
    6. '_lines' → logprob: -3.450369119644165
    7. '_n' → logprob: -4.325368881225586
    8. 'import' → logprob: -4.575368881225586
    9. 'x' → logprob: -5.075368881225586
    10. '_input' → logprob: -5.575368881225586

Token 470: ' polynomial' (ID: 113464)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0702295303344727
    2. 'result' → logprob: -1.1952295303344727
    3. 'arr' → logprob: -1.4452295303344727
    4. ' result' → logprob: -3.9452295303344727
    5. '#' → logprob: -4.070229530334473
    6. 'x' → logprob: -4.320229530334473
    7. 'import' → logprob: -4.820229530334473
    8. 'array' → logprob: -5.320229530334473
    9. 'input' → logprob: -5.570229530334473
    10. 'for' → logprob: -5.570229530334473

Token 471: ' power' (ID: 3470)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8266997337341309
    2. '_coeff' → logprob: -0.9516997337341309
    3. '_coef' → logprob: -2.326699733734131
    4. '_co' → logprob: -2.826699733734131
    5. '_poly' → logprob: -5.201699733734131
    6. ' =' → logprob: -5.826699733734131
    7. 'coeff' → logprob: -5.826699733734131
    8. '_degree' → logprob: -6.451699733734131
    9. '_=' → logprob: -7.076699733734131
    10. '=' → logprob: -7.201699733734131

Token 472: ' function' (ID: 1114)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7861490249633789
    2. 'def' → logprob: -0.9111490249633789
    3. '=' → logprob: -2.911149024963379
    4. 's' → logprob: -3.286149024963379
    5. '_arr' → logprob: -4.661149024963379
    6. 'pow' → logprob: -4.911149024963379
    7. 'arr' → logprob: -5.036149024963379
    8. '_' → logprob: -5.411149024963379
    9. '_power' → logprob: -5.411149024963379
    10. 'power' → logprob: -5.661149024963379

Token 473: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021831797494087368
    2. '
' → logprob: -8.500218391418457
    3. ' def' → logprob: -11.875218391418457
    4. 'import' → logprob: -12.375218391418457
    5. '```' → logprob: -13.125218391418457
    6. 'ndef' → logprob: -14.750218391418457
    7. ':def' → logprob: -14.875218391418457
    8. '\' → logprob: -15.500218391418457
    9. '_def' → logprob: -15.625218391418457
    10. '(
' → logprob: -16.12521743774414

Token 474: ' modulus' (ID: 149464)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -1.0824692249298096
    2. 'numpy' → logprob: -1.2074692249298096
    3. 'def' → logprob: -1.9574692249298096
    4. 'arr' → logprob: -3.0824692249298096
    5. 'coeff' → logprob: -3.5824692249298096
    6. 'mod' → logprob: -3.7074692249298096
    7. 'pow' → logprob: -4.0824689865112305
    8. 'base' → logprob: -4.0824689865112305
    9. 'input' → logprob: -4.2074689865112305
    10. ' numpy' → logprob: -4.3324689865112305

Token 475: ' restriction' (ID: 38247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.870950215263292e-05
    2. 'import' → logprob: -10.875048637390137
    3. '
' → logprob: -11.000048637390137
    4. ' def' → logprob: -11.625048637390137
    5. '```' → logprob: -13.000048637390137
    6. ':def' → logprob: -14.875048637390137
    7. ')' → logprob: -15.000048637390137
    8. '(
' → logprob: -15.500048637390137
    9. 'ndef' → logprob: -16.000049591064453
    10. '(' → logprob: -16.000049591064453

Token 476: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.546478935983032e-05
    2. '
' → logprob: -11.000025749206543
    3. ' def' → logprob: -12.000025749206543
    4. '```' → logprob: -14.125025749206543
    5. '\' → logprob: -14.875025749206543
    6. 'ndef' → logprob: -15.000025749206543
    7. ':def' → logprob: -15.250025749206543
    8. 'de' → logprob: -15.375025749206543
    9. 'import' → logprob: -15.625025749206543
    10. '_def' → logprob: -16.000024795532227

Token 477: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010866894444916397
    2. 'import' → logprob: -9.25010871887207
    3. ' def' → logprob: -12.37510871887207
    4. '```' → logprob: -12.50010871887207
    5. 'from' → logprob: -13.12510871887207
    6. 'de' → logprob: -13.62510871887207
    7. '
' → logprob: -14.25010871887207
    8. ')' → logprob: -15.87510871887207
    9. 'ndef' → logprob: -16.25010871887207
    10. 'np' → logprob: -16.25010871887207

Token 478: ' polynomial' (ID: 113464)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -1.3693904876708984
    2. 'pol' → logprob: -1.6193904876708984
    3. ' polynomial' → logprob: -1.6193904876708984
    4. 'pow' → logprob: -1.6193904876708984
    5. 'mod' → logprob: -2.8693904876708984
    6. ' poly' → logprob: -3.2443904876708984
    7. ' pow' → logprob: -3.7443904876708984
    8. ' mod' → logprob: -3.7443904876708984
    9. ' modular' → logprob: -5.744390487670898
    10. ' pol' → logprob: -6.494390487670898

Token 479: '_sum' (ID: 29859)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.005691045895218849
    2. '_pow' → logprob: -5.255691051483154
    3. '_raise' → logprob: -9.005690574645996
    4. '_' → logprob: -9.130690574645996
    5. '_p' → logprob: -9.130690574645996
    6. '<|end|>' → logprob: -10.755690574645996
    7. '_poly' → logprob: -11.005690574645996
    8. '_factor' → logprob: -12.005690574645996
    9. '(power' → logprob: -12.130690574645996
    10. '_degree' → logprob: -12.130690574645996

Token 480: '_b' (ID: 1535)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.2569074034690857
    2. '_pow' → logprob: -1.6319074630737305
    3. '(power' → logprob: -4.6319074630737305
    4. '_mod' → logprob: -5.2569074630737305
    5. '(poly' → logprob: -5.8819074630737305
    6. '(pol' → logprob: -5.8819074630737305
    7. '(' → logprob: -5.8819074630737305
    8. '_poly' → logprob: -6.2569074630737305
    9. '(_' → logprob: -6.6319074630737305
    10. '(pow' → logprob: -7.2569074630737305

Token 481: 'elow' (ID: 119405)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.6007239818572998
    2. 'in' → logprob: -1.7257239818572998
    3. 'y' → logprob: -1.9757239818572998
    4. 'ound' → logprob: -2.8507239818573
    5. 'lock' → logprob: -3.2257239818573
    6. 'uild' → logprob: -4.350724220275879
    7. 'inary' → logprob: -4.600724220275879
    8. 'ounded' → logprob: -6.100724220275879
    9. 'uffer' → logprob: -6.475724220275879
    10. 'ox' → logprob: -7.100724220275879

Token 482: '_x' (ID: 7054)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.6905803084373474
    2. 'degree' → logprob: -1.6905803680419922
    3. '(param' → logprob: -2.190580368041992
    4. 'k' → logprob: -3.440580368041992
    5. '(x' → logprob: -3.440580368041992
    6. '=' → logprob: -4.190580368041992
    7. '_threshold' → logprob: -4.315580368041992
    8. 'pow' → logprob: -4.315580368041992
    9. '(poly' → logprob: -4.565580368041992
    10. '(k' → logprob: -4.565580368041992

Token 483: '(length' (ID: 47037)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.6802090406417847
    2. '(pol' → logprob: -1.8052090406417847
    3. '(power' → logprob: -2.180209159851074
    4. '(x' → logprob: -2.805209159851074
    5. '(de' → logprob: -2.805209159851074
    6. '(arr' → logprob: -3.180209159851074
    7. '(coeff' → logprob: -4.555209159851074
    8. '(p' → logprob: -4.555209159851074
    9. '(' → logprob: -4.805209159851074
    10. '(param' → logprob: -5.180209159851074

Token 484: '_n' (ID: 2170)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003244990948587656
    2. ' ,' → logprob: -8.750324249267578
    3. '):' → logprob: -9.375324249267578
    4. ',
' → logprob: -10.000324249267578
    5. ',param' → logprob: -12.250324249267578
    6. ',p' → logprob: -12.750324249267578
    7. '):
' → logprob: -13.000324249267578
    8. ',n' → logprob: -13.000324249267578
    9. ',x' → logprob: -13.000324249267578
    10. ' ' → logprob: -13.000324249267578

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002762326330412179
    2. ' ,' → logprob: -8.500276565551758
    3. ',x' → logprob: -11.125276565551758
    4. ',param' → logprob: -11.500276565551758
    5. ',
' → logprob: -11.875276565551758
    6. ',p' → logprob: -12.000276565551758
    7. '):' → logprob: -12.125276565551758
    8. ',input' → logprob: -12.875276565551758
    9. '+' → logprob: -13.000276565551758
    10. ',n' → logprob: -13.000276565551758

Token 486: ' limit' (ID: 5967)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9708244204521179
    2. 'max' → logprob: -1.5958244800567627
    3. 'power' → logprob: -2.3458244800567627
    4. 'poly' → logprob: -2.3458244800567627
    5. 'param' → logprob: -2.9708244800567627
    6. 'mod' → logprob: -3.4708244800567627
    7. 'degree' → logprob: -3.7208244800567627
    8. ' x' → logprob: -3.8458244800567627
    9. ' max' → logprob: -3.9708244800567627
    10. 'limit' → logprob: -3.9708244800567627

Token 487: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.28394463658332825
    2. '=' → logprob: -1.5339446067810059
    3. '):' → logprob: -4.658944606781006
    4. ',' → logprob: -4.783944606781006
    5. 'x' → logprob: -5.158944606781006
    6. ')' → logprob: -5.908944606781006
    7. ' =' → logprob: -6.408944606781006
    8. ')=' → logprob: -7.033944606781006
    9. '_=' → logprob: -7.658944606781006
    10. '_' → logprob: -7.658944606781006

Token 488: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018029935017693788
    2. '):' → logprob: -8.8751802444458
    3. ' ,' → logprob: -10.8751802444458
    4. ',param' → logprob: -12.0001802444458
    5. ':' → logprob: -12.2501802444458
    6. ',p' → logprob: -13.3751802444458
    7. ',x' → logprob: -13.5001802444458
    8. '   ' → logprob: -14.0001802444458
    9. ',
' → logprob: -14.0001802444458
    10. ',n' → logprob: -14.2501802444458

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010203057900071144
    2. ' result' → logprob: -7.876020431518555
    3. ' return' → logprob: -8.251020431518555
    4. ':' → logprob: -9.501020431518555
    5. ' def' → logprob: -10.001020431518555
    6. ',' → logprob: -10.376020431518555
    7. ' for' → logprob: -10.751020431518555
    8. ' ind' → logprob: -10.751020431518555
    9. '
' → logprob: -10.876020431518555
    10. '   ' → logprob: -11.001020431518555

Token 490: ' def' (ID: 1056)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2640773057937622
    2. ' result' → logprob: -1.6390773057937622
    3. ' res' → logprob: -2.1390771865844727
    4. 'poly' → logprob: -2.5140771865844727
    5. ' poly' → logprob: -2.5140771865844727
    6. 'res' → logprob: -2.6390771865844727
    7. 'arr' → logprob: -3.1390771865844727
    8. '   ' → logprob: -3.2640771865844727
    9. 'dp' → logprob: -3.2640771865844727
    10. ' arr' → logprob: -4.514077186584473

Token 491: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.3595309853553772
    2. 'pow' → logprob: -2.2345309257507324
    3. ' poly' → logprob: -2.8595309257507324
    4. 'power' → logprob: -3.3595309257507324
    5. ' power' → logprob: -3.9845309257507324
    6. 'dp' → logprob: -4.234530925750732
    7. 'pol' → logprob: -4.234530925750732
    8. 'inner' → logprob: -4.734530925750732
    9. ' pow' → logprob: -4.984530925750732
    10. ' inner' → logprob: -5.359530925750732

Token 492: '_mult' (ID: 44050)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.7976455688476562
    2. 'pow' → logprob: -1.1726455688476562
    3. '_sum' → logprob: -2.2976455688476562
    4. '_power' → logprob: -2.5476455688476562
    5. 'sum' → logprob: -3.6726455688476562
    6. 'power' → logprob: -4.672645568847656
    7. '   ' → logprob: -5.047645568847656
    8. 'val' → logprob: -5.547645568847656
    9. 'def' → logprob: -6.172645568847656
    10. '_add' → logprob: -6.297645568847656

Token 493: '(poly' (ID: 175644)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5113323330879211
    2. 'ly' → logprob: -1.1363322734832764
    3. 'y' → logprob: -3.2613322734832764
    4. '(y' → logprob: -3.8863322734832764
    5. 'oly' → logprob: -4.1363325119018555
    6. '(' → logprob: -6.7613325119018555
    7. '(poly' → logprob: -7.5113325119018555
    8. '```' → logprob: -7.5113325119018555
    9. ' (' → logprob: -7.6363325119018555
    10. '(A' → logprob: -8.386332511901855

Token 494: '_a' (ID: 10852)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023147528991103172
    2. '1' → logprob: -4.2731475830078125
    3. '):' → logprob: -5.2731475830078125
    4. 'a' → logprob: -6.3981475830078125
    5. '_a' → logprob: -7.5231475830078125
    6. ' ,' → logprob: -8.398147583007812
    7. '_' → logprob: -8.398147583007812
    8. '_,' → logprob: -8.773147583007812
    9. '):
' → logprob: -8.773147583007812
    10. ',a' → logprob: -9.023147583007812

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005311102140694857
    2. ' ,' → logprob: -7.750531196594238
    3. ',
' → logprob: -9.625531196594238
    4. '):' → logprob: -12.250531196594238
    5. ',p' → logprob: -12.375531196594238
    6. '_,' → logprob: -12.500531196594238
    7. '<|end|>' → logprob: -12.750531196594238
    8. '*,' → logprob: -12.875531196594238
    9. ',a' → logprob: -12.875531196594238
    10. '),' → logprob: -13.375531196594238

Token 496: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.4287349581718445
    2. ' poly' → logprob: -1.0537350177764893
    3. '(poly' → logprob: -10.67873477935791
    4. 'pol' → logprob: -12.67873477935791
    5. ')' → logprob: -12.92873477935791
    6. '<|end|>' → logprob: -13.30373477935791
    7. '_poly' → logprob: -13.55373477935791
    8. ' pol' → logprob: -13.55373477935791
    9. '.poly' → logprob: -15.55373477935791
    10. '    ' → logprob: -15.67873477935791

Token 497: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0004961982485838234
    2. 'b' → logprob: -7.7504963874816895
    3. '):' → logprob: -10.750495910644531
    4. 'B' → logprob: -11.500495910644531
    5. '_' → logprob: -11.625495910644531
    6. '_B' → logprob: -12.000495910644531
    7. '_a' → logprob: -12.125495910644531
    8. ')' → logprob: -12.625495910644531
    9. '<|end|>' → logprob: -12.875495910644531
    10. 'a' → logprob: -13.625495910644531

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.255318284034729
    2. ',' → logprob: -1.505318284034729
    3. '):
' → logprob: -5.7553181648254395
    4. '[]):' → logprob: -9.630318641662598
    5. ')' → logprob: -10.005318641662598
    6. '   ' → logprob: -10.630318641662598
    7. '[' → logprob: -11.130318641662598
    8. ',
' → logprob: -11.130318641662598
    9. ' ,' → logprob: -11.380318641662598
    10. '):
' → logprob: -11.505318641662598

Token 499: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4234203100204468
    2. ' ' → logprob: -1.5484203100204468
    3. '       ' → logprob: -1.6734203100204468
    4. ':' → logprob: -2.2984204292297363
    5. '   ' → logprob: -2.6734204292297363
    6. ' 
' → logprob: -3.1734204292297363
    7. ',' → logprob: -3.4234204292297363
    8. '[
' → logprob: -3.9234204292297363
    9. ':
' → logprob: -4.048420429229736
    10. '    ' → logprob: -4.423420429229736

Token 500: ' deg' (ID: 5597)
  Prédit: ' np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.17854323983192444
    2. 'np' → logprob: -2.5535433292388916
    3. ' return' → logprob: -2.8035433292388916
    4. 'return' → logprob: -4.6785430908203125
    5. ' n' → logprob: -4.9285430908203125
    6. 'n' → logprob: -6.3035430908203125
    7. 'import' → logprob: -6.3035430908203125
    8. ' poly' → logprob: -6.5535430908203125
    9. ' import' → logprob: -6.9285430908203125
    10. ' result' → logprob: -8.053543090820312

Token 501: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6368983387947083
    2. ' =' → logprob: -1.2618982791900635
    3. '1' → logprob: -2.8868982791900635
    4. '=' → logprob: -3.7618982791900635
    5. '_' → logprob: -3.8868982791900635
    6. '_p' → logprob: -4.386898517608643
    7. '_poly' → logprob: -4.386898517608643
    8. 's' → logprob: -4.511898517608643
    9. '   ' → logprob: -4.636898517608643
    10. 'poly' → logprob: -4.886898517608643

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9043100476264954
    2. ' =' → logprob: -1.1543099880218506
    3. '+' → logprob: -1.7793099880218506
    4. ',' → logprob: -2.4043099880218506
    5. ' +' → logprob: -4.52931022644043
    6. ' ,' → logprob: -5.77931022644043
    7. ')' → logprob: -6.52931022644043
    8. '   ' → logprob: -6.90431022644043
    9. '+=' → logprob: -7.02931022644043
    10. '=len' → logprob: -7.15431022644043

Token 503: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001933873863890767
    2. ' len' → logprob: -6.251934051513672
    3. 'poly' → logprob: -12.251934051513672
    4. '[len' → logprob: -15.501934051513672
    5. ' poly' → logprob: -16.001934051513672
    6. '(len' → logprob: -16.126934051513672
    7. '	len' → logprob: -17.876934051513672
    8. '=len' → logprob: -18.126934051513672
    9. ',len' → logprob: -19.626934051513672
    10. '<len' → logprob: -20.001934051513672

Token 504: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.0003370118502061814
    2. 'poly' → logprob: -8.000336647033691
    3. ' poly' → logprob: -13.750336647033691
    4. '_poly' → logprob: -15.250336647033691
    5. '(' → logprob: -15.500336647033691
    6. '(
' → logprob: -17.250337600708008
    7. '(pol' → logprob: -17.875337600708008
    8. 'Poly' → logprob: -18.375337600708008
    9. '/poly' → logprob: -19.000337600708008
    10. '.poly' → logprob: -19.625337600708008

Token 505: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0015392655041068792
    2. 'a' → logprob: -6.50153923034668
    3. 'poly' → logprob: -10.50153923034668
    4. '_b' → logprob: -12.12653923034668
    5. '(poly' → logprob: -13.37653923034668
    6. '_poly' → logprob: -13.62653923034668
    7. ' poly' → logprob: -14.87653923034668
    8. ')' → logprob: -15.12653923034668
    9. 'A' → logprob: -15.12653923034668
    10. '   ' → logprob: -16.75153923034668

Token 506: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20181655883789062
    2. ')
' → logprob: -1.7018165588378906
    3. ')-' → logprob: -7.951816558837891
    4. ')
' → logprob: -11.20181655883789
    5. ' )' → logprob: -11.32681655883789
    6. ' )
' → logprob: -12.20181655883789
    7. '-' → logprob: -12.45181655883789
    8. '       ' → logprob: -12.82681655883789
    9. ')#' → logprob: -12.95181655883789
    10. '),' → logprob: -13.07681655883789

Token 507: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -17.25004005432129
    4. '```' → logprob: -18.12504005432129
    5. '   ' → logprob: -18.25004005432129
    6. '
' → logprob: -18.62504005432129
    7. '2' → logprob: -19.12504005432129
    8. '    ' → logprob: -20.37504005432129
    9. ',' → logprob: -20.50004005432129
    10. ')' → logprob: -21.00004005432129

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -17.375001907348633
    4. '
' → logprob: -17.875001907348633
    5. '```' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '2' → logprob: -19.250001907348633
    8. ')' → logprob: -20.750001907348633
    9. ',' → logprob: -21.500001907348633
    10. '{
' → logprob: -21.625001907348633

Token 510: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9754685163497925
    2. '<|end|>' → logprob: -0.9754685163497925
    3. '
' → logprob: -2.350468635559082
    4. '+' → logprob: -2.725468635559082
    5. ')' → logprob: -3.350468635559082
    6. ' ' → logprob: -4.850468635559082
    7. ' 
' → logprob: -4.975468635559082
    8. ',' → logprob: -5.100468635559082
    9. ' +' → logprob: -5.225468635559082
    10. '<|end|>' → logprob: -5.725468635559082

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32590025663375854
    2. '<|end|>' → logprob: -1.7009003162384033
    3. ' ' → logprob: -2.8259003162384033
    4. ')' → logprob: -3.8259003162384033
    5. '[' → logprob: -5.200900077819824
    6. '   ' → logprob: -6.075900077819824
    7. ' 
' → logprob: -6.575900077819824
    8. '        
' → logprob: -6.950900077819824
    9. ',' → logprob: -7.325900077819824
    10. '[
' → logprob: -7.575900077819824

Token 512: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.4730190932750702
    2. 'deg' (adapté à ' deg') → logprob: -1.7230191230773926
    3. ' poly' → logprob: -2.5980191230773926
    4. ' result' → logprob: -3.7230191230773926
    5. 'poly' → logprob: -3.8480191230773926
    6. '       ' → logprob: -3.9730191230773926
    7. 'd' → logprob: -4.473019123077393
    8. ' res' → logprob: -4.723019123077393
    9. ' d' → logprob: -4.973019123077393
    10. 'result' → logprob: -5.098019123077393

Token 513: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.006711228284984827
    2. '_b' → logprob: -5.256711006164551
    3. 'a' → logprob: -6.756711006164551
    4. '=' → logprob: -9.38171100616455
    5. 'A' → logprob: -9.63171100616455
    6. '_' → logprob: -10.00671100616455
    7. ' =' → logprob: -10.13171100616455
    8. 'B' → logprob: -11.63171100616455
    9. 'b' → logprob: -11.63171100616455
    10. '_A' → logprob: -11.75671100616455

Token 514: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5582227110862732
    2. ' +' → logprob: -1.808222770690918
    3. '=' → logprob: -2.183222770690918
    4. '<|end|>' → logprob: -2.808222770690918
    5. ' =' → logprob: -3.058222770690918
    6. ')' → logprob: -3.683222770690918
    7. '+
' → logprob: -5.558222770690918
    8. '<|end|>' → logprob: -5.683222770690918
    9. ' ' → logprob: -6.058222770690918
    10. ' +
' → logprob: -6.433222770690918

Token 515: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.048649366945028305
    2. ' len' → logprob: -3.048649311065674
    3. '(len' → logprob: -9.923649787902832
    4. '[len' → logprob: -11.673649787902832
    5. '=len' → logprob: -13.673649787902832
    6. '	len' → logprob: -13.923649787902832
    7. '<len' → logprob: -13.923649787902832
    8. '<|end|>' → logprob: -14.548649787902832
    9. '1' → logprob: -15.048649787902832
    10. 'length' → logprob: -15.423649787902832

Token 516: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.01815931126475334
    2. 'poly' → logprob: -4.01815938949585
    3. ' poly' → logprob: -12.018158912658691
    4. '_poly' → logprob: -13.268158912658691
    5. '(' → logprob: -13.893158912658691
    6. '(pol' → logprob: -15.018158912658691
    7. '<|end|>' → logprob: -15.893158912658691
    8. '/poly' → logprob: -16.393159866333008
    9. '.poly' → logprob: -17.018159866333008
    10. 'Poly' → logprob: -17.018159866333008

Token 517: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.015030383132398129
    2. 'poly' → logprob: -4.890030384063721
    3. '_a' → logprob: -5.015030384063721
    4. '(poly' → logprob: -8.015029907226562
    5. 'b' → logprob: -8.390029907226562
    6. ' poly' → logprob: -9.390029907226562
    7. 'a' → logprob: -9.765029907226562
    8. '/poly' → logprob: -10.390029907226562
    9. ')' → logprob: -11.140029907226562
    10. 'A' → logprob: -12.765029907226562

Token 518: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016411686316132545
    2. ')+' → logprob: -4.391411781311035
    3. ')
' → logprob: -5.641411781311035
    4. '+' → logprob: -8.766411781311035
    5. ']' → logprob: -10.141411781311035
    6. ' )' → logprob: -10.391411781311035
    7. ']+' → logprob: -11.016411781311035
    8. ')
' → logprob: -11.266411781311035
    9. ' +' → logprob: -11.516411781311035
    10. '       ' → logprob: -11.641411781311035

Token 519: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20882990956306458
    2. ')' → logprob: -2.833829879760742
    3. ' +' → logprob: -3.208829879760742
    4. '+
' → logprob: -3.708829879760742
    5. '<|end|>' → logprob: -3.833829879760742
    6. '
' → logprob: -4.583829879760742
    7. '       ' → logprob: -4.708829879760742
    8. '   ' → logprob: -5.958829879760742
    9. ')
' → logprob: -6.083829879760742
    10. ')+' → logprob: -6.083829879760742

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021924946922808886
    2. ' ' → logprob: -6.127192497253418
    3. 'len' → logprob: -12.002192497253418
    4. '0' → logprob: -14.252192497253418
    5. 'poly' → logprob: -15.002192497253418
    6. ' len' → logprob: -16.6271915435791
    7. '(len' → logprob: -16.6271915435791
    8. '(poly' → logprob: -17.1271915435791
    9. ')' → logprob: -17.6271915435791
    10. ' poly' → logprob: -17.6271915435791

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'len' → logprob: -14.50001049041748
    4. '0' → logprob: -15.87501049041748
    5. 'poly' → logprob: -17.250011444091797
    6. '2' → logprob: -17.375011444091797
    7. '
' → logprob: -17.812511444091797
    8. '```' → logprob: -18.437511444091797
    9. '１' → logprob: -18.562511444091797
    10. '   ' → logprob: -18.687511444091797

Token 522: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.421023964881897
    2. '   ' → logprob: -1.671023964881897
    3. ')' → logprob: -3.1710238456726074
    4. ',' → logprob: -3.2960238456726074
    5. ' ' → logprob: -3.9210238456726074
    6. ' 
' → logprob: -4.046023845672607
    7. '<|end|>' → logprob: -4.421023845672607
    8. '        
' → logprob: -4.921023845672607
    9. '    
' → logprob: -5.171023845672607
    10. '    ' → logprob: -5.921023845672607

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21082989871501923
    2. ' 
' → logprob: -2.710829973220825
    3. ',' → logprob: -3.585829973220825
    4. '   ' → logprob: -3.585829973220825
    5. ')' → logprob: -3.835829973220825
    6. ' ' → logprob: -4.460829734802246
    7. '        
' → logprob: -4.710829734802246
    8. '[' → logprob: -4.835829734802246
    9. '    
' → logprob: -5.335829734802246
    10. '  
' → logprob: -6.210829734802246

Token 524: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13341857492923737
    2. 'res' → logprob: -2.633418560028076
    3. 'poly' → logprob: -3.508418560028076
    4. '       ' → logprob: -4.133418560028076
    5. 'size' → logprob: -5.883418560028076
    6. 'conv' → logprob: -6.758418560028076
    7. ' res' → logprob: -7.633418560028076
    8. ' result' → logprob: -8.008419036865234
    9. 'import' → logprob: -8.258419036865234
    10. '   ' → logprob: -8.383419036865234

Token 525: ' deg' (ID: 5597)
  Prédit: ' deg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deg' → logprob: -0.5838261842727661
    2. 'deg' → logprob: -0.8338261842727661
    3. 'len' → logprob: -6.083826065063477
    4. ' len' → logprob: -6.458826065063477
    5. ' max' → logprob: -6.833826065063477
    6. ' length' → logprob: -7.083826065063477
    7. ' poly' → logprob: -7.208826065063477
    8. ' min' → logprob: -8.083826065063477
    9. 'poly' → logprob: -8.208826065063477
    10. 'length' → logprob: -8.583826065063477

Token 526: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.025550713762640953
    2. '_b' → logprob: -3.775550603866577
    3. ' <' → logprob: -7.150550842285156
    4. '_' → logprob: -7.900550842285156
    5. ' _' → logprob: -8.525550842285156
    6. ' ' → logprob: -8.650550842285156
    7. ' <=' → logprob: -9.275550842285156
    8. ' >=' → logprob: -9.400550842285156
    9. '<' → logprob: -9.525550842285156
    10. ' ==' → logprob: -9.650550842285156

Token 527: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1715956926345825
    2. '==' → logprob: -1.2965956926345825
    3. '+' → logprob: -1.5465956926345825
    4. ' +' → logprob: -2.546595573425293
    5. ' <' → logprob: -2.796595573425293
    6. '<' → logprob: -3.796595573425293
    7. ' <=' → logprob: -3.921595573425293
    8. '<=' → logprob: -4.046595573425293
    9. '<|end|>' → logprob: -6.921595573425293
    10. '<len' → logprob: -7.171595573425293

Token 528: ' deg' (ID: 5597)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7371232509613037
    2. '64' → logprob: -1.9871232509613037
    3. '32' → logprob: -2.2371232509613037
    4. '=' → logprob: -2.6121232509613037
    5. '20' → logprob: -2.7371232509613037
    6. '10' → logprob: -3.2371232509613037
    7. '50' → logprob: -3.4871232509613037
    8. '16' → logprob: -4.487123489379883
    9. 'len' → logprob: -4.737123489379883
    10. '100' → logprob: -5.362123489379883

Token 529: '_b' (ID: 1535)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06752162426710129
    2. '1' → logprob: -3.442521572113037
    3. '_b' → logprob: -4.317521572113037
    4. 'poly' → logprob: -5.192521572113037
    5. ' ' → logprob: -6.442521572113037
    6. 'B' → logprob: -6.692521572113037
    7. 'length' → logprob: -6.692521572113037
    8. '100' → logprob: -6.817521572113037
    9. 'b' → logprob: -6.817521572113037
    10. '=' → logprob: -6.942521572113037

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17297561466693878
    2. '+' → logprob: -2.422975540161133
    3. ' +' → logprob: -3.672975540161133
    4. ':
' → logprob: -3.797975540161133
    5. ' and' → logprob: -5.172975540161133
    6. '<|end|>' → logprob: -5.297975540161133
    7. '       ' → logprob: -5.422975540161133
    8. ',' → logprob: -6.422975540161133
    9. ' or' → logprob: -6.672975540161133
    10. '<|end|>' → logprob: -7.297975540161133

Token 531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6941651105880737
    2. '       ' → logprob: -0.9441651105880737
    3. ' return' → logprob: -3.6941652297973633
    4. ' 
' → logprob: -3.8191652297973633
    5. '        ' → logprob: -4.194165229797363
    6. '[' → logprob: -4.194165229797363
    7. ',' → logprob: -5.069165229797363
    8. ' ' → logprob: -5.319165229797363
    9. '        
' → logprob: -5.444165229797363
    10. 'return' → logprob: -6.319165229797363

Token 532: ' deg' (ID: 5597)
  Prédit: ' poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.07269031554460526
    2. 'poly' → logprob: -2.82269024848938
    3. ' return' → logprob: -5.197690486907959
    4. '       ' → logprob: -6.322690486907959
    5. '[' → logprob: -7.322690486907959
    6. 'return' → logprob: -7.822690486907959
    7. '        ' → logprob: -8.5726900100708
    8. '(poly' → logprob: -8.5726900100708
    9. ',' → logprob: -8.6976900100708
    10. '           ' → logprob: -8.8226900100708

Token 533: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.011409585364162922
    2. '_b' → logprob: -4.511409759521484
    3. 'a' → logprob: -8.511409759521484
    4. '(poly' → logprob: -9.636409759521484
    5. '_' → logprob: -10.886409759521484
    6. 'poly' → logprob: -11.011409759521484
    7. '(' → logprob: -11.761409759521484
    8. '=' → logprob: -12.136409759521484
    9. 'b' → logprob: -12.386409759521484
    10. ')' → logprob: -12.386409759521484

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15744730830192566
    2. '=' → logprob: -2.657447338104248
    3. ' =' → logprob: -3.532447338104248
    4. ' ,' → logprob: -3.782447338104248
    5. ' +=' → logprob: -4.657447338104248
    6. '+=' → logprob: -4.782447338104248
    7. '+' → logprob: -6.657447338104248
    8. '    ' → logprob: -7.282447338104248
    9. '<|end|>' → logprob: -7.407447338104248
    10. ' +' → logprob: -8.03244686126709

Token 535: ' deg' (ID: 5597)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.42037516832351685
    2. ' poly' → logprob: -1.545375108718872
    3. 'deg' → logprob: -2.295375108718872
    4. ' deg' → logprob: -3.545375108718872
    5. '           ' → logprob: -8.170374870300293
    6. 'pol' → logprob: -11.170374870300293
    7. '(poly' → logprob: -11.170374870300293
    8. 'len' → logprob: -11.420374870300293
    9. '       ' → logprob: -11.795374870300293
    10. 'degree' → logprob: -12.107874870300293

Token 536: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0003831252979580313
    2. '_a' → logprob: -8.125383377075195
    3. 'b' → logprob: -9.500383377075195
    4. '_' → logprob: -12.500383377075195
    5. 'a' → logprob: -13.750383377075195
    6. 'poly' → logprob: -13.875383377075195
    7. '_deg' → logprob: -14.125383377075195
    8. '```' → logprob: -14.375383377075195
    9. '=' → logprob: -14.500383377075195
    10. '_B' → logprob: -14.875383377075195

Token 537: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7884290814399719
    2. ',' → logprob: -1.0384290218353271
    3. ' =' → logprob: -1.6634290218353271
    4. '<|end|>' → logprob: -6.538429260253906
    5. ' ,' → logprob: -8.288429260253906
    6. '=
' → logprob: -9.788429260253906
    7. '<|end|>' → logprob: -10.413429260253906
    8. ')' → logprob: -10.663429260253906
    9. ' =
' → logprob: -10.913429260253906
    10. '        ' → logprob: -11.288429260253906

Token 538: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.5759411454200745
    2. ' deg' → logprob: -0.8259411454200745
    3. 'de' → logprob: -14.45094108581543
    4. '	de' → logprob: -14.57594108581543
    5. ' ' → logprob: -15.20094108581543
    6. ' poly' → logprob: -16.70094108581543
    7. 'degree' → logprob: -16.70094108581543
    8. '
' → logprob: -16.95094108581543
    9. 'poly' → logprob: -16.95094108581543
    10. '_deg' → logprob: -16.95094108581543

Token 539: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0004891689168289304
    2. '_a' → logprob: -7.750489234924316
    3. 'b' → logprob: -9.875489234924316
    4. 'poly' → logprob: -12.750489234924316
    5. 'a' → logprob: -13.625489234924316
    6. '_B' → logprob: -14.125489234924316
    7. 'B' → logprob: -14.875489234924316
    8. '_' → logprob: -15.125489234924316
    9. 's' → logprob: -15.375489234924316
    10. 'deg' → logprob: -15.500489234924316

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017791526624932885
    2. ' ,' → logprob: -9.125178337097168
    3. ',
' → logprob: -9.875178337097168
    4. 'poly' → logprob: -11.750178337097168
    5. ' poly' → logprob: -12.375178337097168
    6. '<|end|>' → logprob: -12.750178337097168
    7. ',p' → logprob: -14.875178337097168
    8. '(poly' → logprob: -15.250178337097168
    9. ',\
' → logprob: -15.375178337097168
    10. ',d' → logprob: -15.375178337097168

Token 541: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.474081814289093
    2. ' deg' → logprob: -0.974081814289093
    3. 'degree' → logprob: -13.849081993103027
    4. 'poly' → logprob: -13.974081993103027
    5. 'd' → logprob: -14.599081993103027
    6. 'de' → logprob: -14.724081993103027
    7. ' poly' → logprob: -14.849081993103027
    8. '	de' → logprob: -14.974081993103027
    9. '
' → logprob: -15.724081993103027
    10. '_deg' → logprob: -15.724081993103027

Token 542: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.3148990273475647
    2. 'a' → logprob: -1.31489896774292
    3. 'deg' → logprob: -6.56489896774292
    4. '_deg' → logprob: -8.814899444580078
    5. '_b' → logprob: -10.814899444580078
    6. '_' → logprob: -11.064899444580078
    7. 'degree' → logprob: -11.814899444580078
    8. '­a' → logprob: -12.814899444580078
    9. 'poly' → logprob: -12.939899444580078
    10. '_degree' → logprob: -12.939899444580078

Token 543: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47088098526000977
    2. ' ' → logprob: -1.0958809852600098
    3. '<|end|>' → logprob: -3.7208809852600098
    4. ',' → logprob: -5.34588098526001
    5. '        ' → logprob: -6.59588098526001
    6. ' 
' → logprob: -6.59588098526001
    7. '   ' → logprob: -6.72088098526001
    8. '           ' → logprob: -6.84588098526001
    9. '    ' → logprob: -7.09588098526001
    10. '[' → logprob: -7.09588098526001

Token 545: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' (adapté à ' poly') → logprob: -0.014186662621796131
    2. ' poly' → logprob: -4.264186859130859
    3. '           ' → logprob: -10.88918685913086
    4. '       ' → logprob: -12.63918685913086
    5. 'pol' → logprob: -14.76418685913086
    6. '(poly' → logprob: -14.76418685913086
    7. '   ' → logprob: -15.38918685913086
    8. '_poly' → logprob: -15.63918685913086
    9. 'print' → logprob: -17.76418685913086
    10. '               ' → logprob: -18.38918685913086

Token 546: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.2520171105861664
    2. '_a' → logprob: -1.5020171403884888
    3. 'a' → logprob: -9.5020170211792
    4. 'b' → logprob: -11.6270170211792
    5. 'A' → logprob: -12.8770170211792
    6. '_m' → logprob: -14.8770170211792
    7. '_mult' → logprob: -14.8770170211792
    8. '_' → logprob: -16.002017974853516
    9. '=' → logprob: -16.127017974853516
    10. '_c' → logprob: -16.627017974853516

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '=' → logprob: -13.625007629394531
    4. ',
' → logprob: -16.62500762939453
    5. 'poly' → logprob: -18.25000762939453
    6. ',\
' → logprob: -18.62500762939453
    7. '‌,' → logprob: -18.75000762939453
    8. '_,' → logprob: -19.50000762939453
    9. ' poly' → logprob: -19.75000762939453
    10. ',p' → logprob: -19.75000762939453

Token 548: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.17975009977817535
    2. ' poly' → logprob: -1.8047500848770142
    3. '(poly' → logprob: -12.554750442504883
    4. '
' → logprob: -14.554750442504883
    5. 'pol' → logprob: -14.554750442504883
    6. '_poly' → logprob: -15.179750442504883
    7. 'Poly' → logprob: -15.554750442504883
    8. ' polymer' → logprob: -16.304750442504883
    9. '
' → logprob: -16.679750442504883
    10. ' ' → logprob: -16.804750442504883

Token 549: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.676981345459353e-06
    2. 'b' → logprob: -12.125005722045898
    3. '_' → logprob: -16.0000057220459
    4. '_a' → logprob: -18.1250057220459
    5. 'a' → logprob: -18.3750057220459
    6. ' _' → logprob: -20.0000057220459
    7. 'B' → logprob: -21.0000057220459
    8. '_B' → logprob: -21.2500057220459
    9. '	b' → logprob: -21.5000057220459
    10. 's' → logprob: -22.1250057220459

Token 550: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013591633178293705
    2. ' =' → logprob: -6.626358985900879
    3. ',' → logprob: -10.501358985900879
    4. '<|end|>' → logprob: -12.751358985900879
    5. '=
' → logprob: -13.126358985900879
    6. '[' → logprob: -15.251358985900879
    7. ' ' → logprob: -15.501358985900879
    8. '=

' → logprob: -16.001359939575195
    9. ')' → logprob: -16.376359939575195
    10. ')=' → logprob: -17.126359939575195

Token 551: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.04858884960412979
    2. ' poly' → logprob: -3.048588752746582
    3. '(poly' → logprob: -13.798588752746582
    4. 'pol' → logprob: -15.173588752746582
    5. ' ' → logprob: -16.5485897064209
    6. '
' → logprob: -16.9235897064209
    7. '_poly' → logprob: -17.6735897064209
    8. 'Poly' → logprob: -17.6735897064209
    9. 'py' → logprob: -17.7985897064209
    10. '   ' → logprob: -18.0485897064209

Token 552: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.005999067332595587
    2. '_a' → logprob: -5.1309990882873535
    3. '_' → logprob: -10.130998611450195
    4. 'b' → logprob: -11.130998611450195
    5. 'a' → logprob: -11.380998611450195
    6. ' _' → logprob: -12.880998611450195
    7. 'B' → logprob: -15.005998611450195
    8. 'A' → logprob: -15.380998611450195
    9. '_B' → logprob: -15.380998611450195
    10. '_
' → logprob: -15.630998611450195

Token 553: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.00760698551312089
    2. ' poly' → logprob: -4.8826069831848145
    3. '(poly' → logprob: -14.632607460021973
    4. '
' → logprob: -15.507607460021973
    5. 'pol' → logprob: -15.632607460021973
    6. '_poly' → logprob: -17.632606506347656
    7. 'Poly' → logprob: -17.757606506347656
    8. ' ' → logprob: -17.882606506347656
    9. '-poly' → logprob: -18.007606506347656
    10. 'py' → logprob: -18.507606506347656

Token 555: '_a' (ID: 10852)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519305646419525
    2. '_a' → logprob: -1.501930594444275
    3. '_b' → logprob: -15.126930236816406
    4. '[a' → logprob: -15.376930236816406
    5. 'а' → logprob: -15.626930236816406
    6. '_' → logprob: -15.626930236816406
    7. ' a' → logprob: -15.751930236816406
    8. 'b' → logprob: -16.126930236816406
    9. '­a' → logprob: -16.126930236816406
    10. '[' → logprob: -16.251930236816406

Token 556: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5299949049949646
    2. ' 
' → logprob: -1.9049949645996094
    3. '<|end|>' → logprob: -2.0299949645996094
    4. '\n' → logprob: -2.6549949645996094
    5. ' ' → logprob: -3.7799949645996094
    6. '       ' → logprob: -4.654994964599609
    7. ',' → logprob: -5.154994964599609
    8. '  
' → logprob: -5.279994964599609
    9. ')' → logprob: -6.029994964599609
    10. '   ' → logprob: -6.154994964599609

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2238997220993042
    2. ' 
' → logprob: -1.3488997220993042
    3. '   ' → logprob: -1.7238997220993042
    4. ' ' → logprob: -2.3488998413085938
    5. '<|end|>' → logprob: -3.0988998413085938
    6. ')' → logprob: -3.4738998413085938
    7. ',' → logprob: -3.9738998413085938
    8. '  
' → logprob: -4.473899841308594
    9. '\n' → logprob: -4.598899841308594
    10. '    
' → logprob: -4.598899841308594

Token 558: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5762392282485962
    2. ' 
' → logprob: -1.3262392282485962
    3. 'result' (adapté à ' result') → logprob: -2.7012391090393066
    4. ' result' → logprob: -3.2012391090393066
    5. '       ' → logprob: -4.201239109039307
    6. ' for' → logprob: -4.826239109039307
    7. '   ' → logprob: -5.076239109039307
    8. ' ' → logprob: -5.326239109039307
    9. '*' → logprob: -5.451239109039307
    10. '[' → logprob: -5.701239109039307

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076081594452261925
    2. '=' → logprob: -4.882607936859131
    3. ' =[' → logprob: -14.132608413696289
    4. '=np' → logprob: -14.632608413696289
    5. ' ' → logprob: -15.632608413696289
    6. '=[' → logprob: -16.13260841369629
    7. '  ' → logprob: -16.63260841369629
    8. '_len' → logprob: -16.75760841369629
    9. '[' → logprob: -16.88260841369629
    10. 's' → logprob: -17.00760841369629

Token 560: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.13370761275291443
    2. ' np' → logprob: -2.2587075233459473
    3. '[' → logprob: -4.258707523345947
    4. ' [' → logprob: -5.258707523345947
    5. '[np' → logprob: -6.633707523345947
    6. '(np' → logprob: -11.633708000183105
    7. 'poly' → logprob: -14.383708000183105
    8. '   ' → logprob: -15.258708000183105
    9. '[n' → logprob: -15.258708000183105
    10. '=np' → logprob: -15.383708000183105

Token 561: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.00031651611789129674
    2. '.con' → logprob: -8.125316619873047
    3. '.array' → logprob: -11.500316619873047
    4. '.empty' → logprob: -12.375316619873047
    5. '.concatenate' → logprob: -12.875316619873047
    6. '.pol' → logprob: -13.500316619873047
    7. 'zeros' → logprob: -14.125316619873047
    8. 'con' → logprob: -14.625316619873047
    9. '.poly' → logprob: -14.875316619873047
    10. '.' → logprob: -15.125316619873047

Token 562: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.16041666269302368
    2. '(len' → logprob: -1.910416603088379
    3. 'deg' → logprob: -9.660416603088379
    4. '(' → logprob: -9.910416603088379
    5. '(poly' → logprob: -9.910416603088379
    6. '((' → logprob: -10.910416603088379
    7. ' (' → logprob: -12.660416603088379
    8. '(length' → logprob: -13.035416603088379
    9. ' deg' → logprob: -13.535416603088379
    10. 'len' → logprob: -13.535416603088379

Token 563: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.537180211627856e-05
    2. 'gree' → logprob: -10.125045776367188
    3. 'f' → logprob: -12.750045776367188
    4. 'G' → logprob: -15.125045776367188
    5. 'generate' → logprob: -15.250045776367188
    6. 'gr' → logprob: -15.375045776367188
    7. '+' → logprob: -15.375045776367188
    8. '(' → logprob: -15.500045776367188
    9. '[' → logprob: -15.750045776367188
    10. 'gx' → logprob: -16.000045776367188

Token 564: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0016980338841676712
    2. '+' → logprob: -6.751698017120361
    3. '_b' → logprob: -9.00169849395752
    4. '_d' → logprob: -9.25169849395752
    5. 'poly' → logprob: -9.25169849395752
    6. 'a' → logprob: -9.50169849395752
    7. '_u' → logprob: -9.75169849395752
    8. ' +' → logprob: -10.87669849395752
    9. '_len' → logprob: -11.50169849395752
    10. 'deg' → logprob: -12.00169849395752

Token 565: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6327599287033081
    2. '+' → logprob: -0.7577599287033081
    3. ' ' → logprob: -9.132760047912598
    4. ')' → logprob: -10.632760047912598
    5. '[' → logprob: -11.757760047912598
    6. '0' → logprob: -13.132760047912598
    7. 'len' → logprob: -13.257760047912598
    8. '*' → logprob: -13.382760047912598
    9. '_' → logprob: -13.820260047912598
    10. ']' → logprob: -13.820260047912598

Token 566: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.0004019521293230355
    2. ' deg' → logprob: -7.875401973724365
    3. '1' → logprob: -10.750401496887207
    4. 'len' → logprob: -15.750401496887207
    5. 'degree' → logprob: -16.250402450561523
    6. '
' → logprob: -17.000402450561523
    7. ' ' → logprob: -17.500402450561523
    8. '	de' → logprob: -17.625402450561523
    9. 'dept' → logprob: -17.875402450561523
    10. '   ' → logprob: -17.875402450561523

Token 567: '_b' (ID: 1535)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03787850961089134
    2. '2' → logprob: -3.4128785133361816
    3. 'b' → logprob: -5.912878513336182
    4. '_b' → logprob: -6.662878513336182
    5. ' ' → logprob: -9.537878036499023
    6. 'a' → logprob: -10.412878036499023
    7. '   ' → logprob: -11.162878036499023
    8. '_a' → logprob: -11.287878036499023
    9. 'B' → logprob: -11.412878036499023
    10. '_' → logprob: -11.662878036499023

Token 568: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22543668746948242
    2. ' +' → logprob: -1.6004366874694824
    3. ')' → logprob: -10.85043716430664
    4. '[' → logprob: -13.85043716430664
    5. ' ' → logprob: -13.85043716430664
    6. '1' → logprob: -14.85043716430664
    7. '+
' → logprob: -14.85043716430664
    8. '```' → logprob: -14.85043716430664
    9. ' +
' → logprob: -15.22543716430664
    10. '),' → logprob: -15.47543716430664

Token 569: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. ' ' → logprob: -10.62502670288086
    3. '2' → logprob: -13.12502670288086
    4. '```' → logprob: -16.75002670288086
    5. ')' → logprob: -17.43752670288086
    6. '[' → logprob: -18.18752670288086
    7. '۱' → logprob: -18.18752670288086
    8. ',' → logprob: -18.25002670288086
    9. '<|end|>' → logprob: -18.37502670288086
    10. '+' → logprob: -18.75002670288086

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.375012397766113
    3. '2' → logprob: -13.625012397766113
    4. '```' → logprob: -18.25001335144043
    5. '...' → logprob: -18.93751335144043
    6. '۱' → logprob: -19.31251335144043
    7. ')' → logprob: -19.37501335144043
    8. '
' → logprob: -19.68751335144043
    9. ' ' → logprob: -19.68751335144043
    10. '​' → logprob: -19.75001335144043

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01155678741633892
    2. ')' → logprob: -4.511556625366211
    3. ',d' → logprob: -8.011556625366211
    4. ' ,' → logprob: -8.761556625366211
    5. 'dtype' → logprob: -11.136556625366211
    6. ')
' → logprob: -13.636556625366211
    7. ',
' → logprob: -14.136556625366211
    8. ',)' → logprob: -14.261556625366211
    9. ']' → logprob: -14.511556625366211
    10. ',int' → logprob: -14.886556625366211

Token 572: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.00041065402911044657
    2. ' dtype' → logprob: -8.000411033630371
    3. 'np' → logprob: -9.500411033630371
    4. ')' → logprob: -16.000410079956055
    5. ' np' → logprob: -16.250410079956055
    6. '(dtype' → logprob: -16.500410079956055
    7. 'd' → logprob: -17.000410079956055
    8. 'int' → logprob: -17.375410079956055
    9. '.dtype' → logprob: -18.875410079956055
    10. '_dtype' → logprob: -19.500410079956055

Token 573: '.int' (ID: 21499)
  Prédit: '.int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.int' → logprob: -0.16538327932357788
    2. 'int' → logprob: -1.9153833389282227
    3. '.uint' → logprob: -5.415383338928223
    4. '=int' → logprob: -8.290383338928223
    5. 'uint' → logprob: -8.415383338928223
    6. '[int' → logprob: -8.915383338928223
    7. '_int' → logprob: -10.665383338928223
    8. '```' → logprob: -10.790383338928223
    9. '.ndarray' → logprob: -11.290383338928223
    10. ' int' → logprob: -11.415383338928223

Token 574: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. '32' → logprob: -15.625
    3. 'p' → logprob: -22.25
    4. 'int' → logprob: -23.0
    5. '6' → logprob: -23.125
    6. '63' → logprob: -23.125
    7. 'c' → logprob: -23.5
    8. '16' → logprob: -23.75
    9. '66' → logprob: -24.75
    10. '```' → logprob: -25.25

Token 575: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002980432182084769
    2. ')
' → logprob: -8.125298500061035
    3. ' )' → logprob: -13.625298500061035
    4. ')

' → logprob: -15.500298500061035
    5. ')
' → logprob: -15.750298500061035
    6. '```' → logprob: -16.25029754638672
    7. ')#' → logprob: -16.50029754638672
    8. ')...' → logprob: -16.50029754638672
    9. '),' → logprob: -16.87529754638672
    10. ')`' → logprob: -17.25029754638672

Token 576: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3659989833831787
    2. '       ' → logprob: -2.2409989833831787
    3. '<|end|>' → logprob: -2.8659989833831787
    4. ' for' → logprob: -2.9909989833831787
    5. ' 
' → logprob: -3.7409989833831787
    6. '   ' → logprob: -3.9909989833831787
    7. '[' → logprob: -4.240999221801758
    8. 'for' → logprob: -4.990999221801758
    9. '    ' → logprob: -5.490999221801758
    10. ')' → logprob: -5.615999221801758

Token 577: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04906214773654938
    2. ' for' → logprob: -3.1740622520446777
    3. '   ' → logprob: -5.174062252044678
    4. 'i' → logprob: -9.17406177520752
    5. ' ' → logprob: -9.54906177520752
    6. '	for' → logprob: -9.54906177520752
    7. '```' → logprob: -10.04906177520752
    8. '       ' → logprob: -10.17406177520752
    9. '    
' → logprob: -11.04906177520752
    10. ')' → logprob: -12.17406177520752

Token 578: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17980417609214783
    2. ' i' → logprob: -1.8048042058944702
    3. 'j' → logprob: -10.554803848266602
    4. ' j' → logprob: -11.179803848266602
    5. '	i' → logprob: -11.304803848266602
    6. ' ' → logprob: -13.554803848266602
    7. '   ' → logprob: -14.054803848266602
    8. 'a' → logprob: -14.179803848266602
    9. ' ia' → logprob: -14.304803848266602
    10. ' ' → logprob: -14.554803848266602

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.33272919058799744
    2. 'in' → logprob: -1.3327292203903198
    3. 'a' → logprob: -4.457729339599609
    4. ',' → logprob: -5.832729339599609
    5. 'i' → logprob: -6.957729339599609
    6. 'poly' → logprob: -6.957729339599609
    7. '_a' → logprob: -7.082729339599609
    8. ' poly' → logprob: -7.457729339599609
    9. 'b' → logprob: -7.582729339599609
    10. ' ' → logprob: -8.58272933959961

Token 580: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000432695698691532
    2. ' range' → logprob: -7.75043249130249
    3. 'poly' → logprob: -13.125432968139648
    4. 'np' → logprob: -16.75043296813965
    5. '(range' → logprob: -17.50043296813965
    6. ')' → logprob: -18.25043296813965
    7. '   ' → logprob: -18.75043296813965
    8. ' ' → logprob: -18.75043296813965
    9. '  ' → logprob: -19.12543296813965
    10. '	range' → logprob: -19.25043296813965

Token 581: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.02837846241891384
    2. '(len' → logprob: -3.778378486633301
    3. 'deg' → logprob: -5.278378486633301
    4. '(' → logprob: -11.7783784866333
    5. 'len' → logprob: -12.0283784866333
    6. ' deg' → logprob: -12.4033784866333
    7. '(dep' → logprob: -14.6533784866333
    8. '	de' → logprob: -14.9033784866333
    9. '   ' → logprob: -15.5283784866333
    10. '((' → logprob: -15.7783784866333

Token 582: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.975612187583465e-05
    2. 'gree' → logprob: -10.625029563903809
    3. 'г' → logprob: -12.500029563903809
    4. 'q' → logprob: -14.875029563903809
    5. 'gx' → logprob: -15.625029563903809
    6. 'grees' → logprob: -15.750029563903809
    7. 'gr' → logprob: -15.875029563903809
    8. '...' → logprob: -16.000030517578125
    9. 'p' → logprob: -16.250030517578125
    10. 'f' → logprob: -17.000030517578125

Token 583: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.048603612929582596
    2. '_a' → logprob: -3.0486035346984863
    3. 'a' → logprob: -11.923604011535645
    4. 's' → logprob: -12.798604011535645
    5. 'b' → logprob: -13.298604011535645
    6. '_ab' → logprob: -13.548604011535645
    7. ')' → logprob: -14.173604011535645
    8. 'ab' → logprob: -14.673604011535645
    9. 'poly' → logprob: -15.173604011535645
    10. '_s' → logprob: -15.298604011535645

Token 584: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11408514529466629
    2. ' +' → logprob: -2.2390851974487305
    3. '):' → logprob: -6.7390851974487305
    4. '):
' → logprob: -9.73908519744873
    5. '+
' → logprob: -12.73908519744873
    6. ')' → logprob: -13.36408519744873
    7. ')+' → logprob: -13.36408519744873
    8. '   ' → logprob: -13.48908519744873
    9. '()+' → logprob: -13.48908519744873
    10. '+:' → logprob: -13.61408519744873

Token 585: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026787486858665943
    2. ' ' → logprob: -6.002678871154785
    3. ')' → logprob: -9.252678871154785
    4. 'idx' → logprob: -9.752678871154785
    5. ' idx' → logprob: -11.002678871154785
    6. 'len' → logprob: -11.377678871154785
    7. '+' → logprob: -11.627678871154785
    8. ' len' → logprob: -12.877678871154785
    9. '):
' → logprob: -13.252678871154785
    10. ' )' → logprob: -13.627678871154785

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028743778239004314
    2. 'idx' → logprob: -9.000287055969238
    3. 'len' → logprob: -9.125287055969238
    4. ' ' → logprob: -10.375287055969238
    5. 'poly' → logprob: -11.625287055969238
    6. ')' → logprob: -11.875287055969238
    7. '0' → logprob: -13.125287055969238
    8. '```' → logprob: -14.000287055969238
    9. ' len' → logprob: -14.375287055969238
    10. ' idx' → logprob: -14.500287055969238

Token 587: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6328447461128235
    2. '):' → logprob: -0.7578447461128235
    3. ':' → logprob: -8.757844924926758
    4. '):
' → logprob: -10.257844924926758
    5. ':
' → logprob: -11.132844924926758
    6. ')' → logprob: -11.132844924926758
    7. '   ' → logprob: -11.507844924926758
    8. ']:' → logprob: -12.632844924926758
    9. '):

' → logprob: -13.257844924926758
    10. '       ' → logprob: -13.507844924926758

Token 588: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0295498371124268
    2. '       ' → logprob: -1.4045498371124268
    3. '<|end|>' → logprob: -1.5295498371124268
    4. ' result' → logprob: -3.2795498371124268
    5. ' 
' → logprob: -3.5295498371124268
    6. '   ' → logprob: -3.9045498371124268
    7. '           ' → logprob: -4.154549598693848
    8. '        
' → logprob: -4.279549598693848
    9. ',' → logprob: -4.779549598693848
    10. '```' → logprob: -5.029549598693848

Token 589: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.6029197573661804
    2. ' result' → logprob: -0.8529197573661804
    3. '       ' → logprob: -4.102919578552246
    4. ' for' → logprob: -5.477919578552246
    5. 'for' → logprob: -5.477919578552246
    6. '   ' → logprob: -6.602919578552246
    7. '	result' → logprob: -9.102919578552246
    8. '           ' → logprob: -9.227919578552246
    9. '(result' → logprob: -9.977919578552246
    10. ' ' → logprob: -10.602919578552246

Token 590: '[idx' (ID: 25582)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.04793273285031319
    2. '[idx' → logprob: -3.2979326248168945
    3. '+=' → logprob: -4.9229326248168945
    4. '[' → logprob: -6.7979326248168945
    5. '[:]' → logprob: -7.1729326248168945
    6. ' +=' → logprob: -8.172932624816895
    7. '[:-' → logprob: -8.422932624816895
    8. '[
' → logprob: -9.547932624816895
    9. '
' → logprob: -10.672932624816895
    10. ']+=' → logprob: -11.297932624816895

Token 591: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02491465024650097
    2. ']+=' → logprob: -3.7749147415161133
    3. '+' → logprob: -6.899914741516113
    4. ' ]' → logprob: -8.524914741516113
    5. ':]' → logprob: -8.774914741516113
    6. '+=' → logprob: -9.399914741516113
    7. ':' → logprob: -9.774914741516113
    8. '+]' → logprob: -9.899914741516113
    9. ']+' → logprob: -10.399914741516113
    10. ' +=' → logprob: -11.024914741516113

Token 592: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00041494169272482395
    2. ' idx' → logprob: -7.875414848327637
    3. 'len' → logprob: -11.375414848327637
    4. '	idx' → logprob: -11.625414848327637
    5. '   ' → logprob: -12.000414848327637
    6. '(idx' → logprob: -12.250414848327637
    7. '[idx' → logprob: -13.375414848327637
    8. 'deg' → logprob: -14.125414848327637
    9. ']' → logprob: -15.375414848327637
    10. '_idx' → logprob: -15.500414848327637

Token 593: ' +' (ID: 659)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.015100834891200066
    2. '[idx' → logprob: -4.515100955963135
    3. ' idx' → logprob: -5.765100955963135
    4. '	idx' → logprob: -8.015100479125977
    5. 'len' → logprob: -8.765100479125977
    6. '(idx' → logprob: -9.015100479125977
    7. '   ' → logprob: -9.140100479125977
    8. ']' → logprob: -9.890100479125977
    9. '[' → logprob: -10.015100479125977
    10. '```' → logprob: -10.890100479125977

Token 594: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.0017161124851554632
    2. 'len' → logprob: -6.376716136932373
    3. ' deg' → logprob: -11.251715660095215
    4. 'poly' → logprob: -14.876715660095215
    5. '   ' → logprob: -15.751715660095215
    6. ' ' → logprob: -15.876715660095215
    7. '(len' → logprob: -15.876715660095215
    8. '(de' → logprob: -16.25171661376953
    9. '  ' → logprob: -16.87671661376953
    10. ' len' → logprob: -17.62671661376953

Token 595: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.009464345872402191
    2. '_a' → logprob: -5.884464263916016
    3. 'poly' → logprob: -5.884464263916016
    4. 'b' → logprob: -6.259464263916016
    5. '[' → logprob: -7.634464263916016
    6. 'B' → logprob: -7.634464263916016
    7. '+' → logprob: -8.509464263916016
    8. 'a' → logprob: -8.884464263916016
    9. 'len' → logprob: -9.384464263916016
    10. '1' → logprob: -9.384464263916016

Token 596: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01219597551971674
    2. ']' → logprob: -4.762196063995361
    3. ' +' → logprob: -5.762196063995361
    4. ']+=' → logprob: -8.512195587158203
    5. '[' → logprob: -9.512195587158203
    6. '+=' → logprob: -10.262195587158203
    7. '+]' → logprob: -10.387195587158203
    8. '[idx' → logprob: -10.762195587158203
    9. '   ' → logprob: -11.262195587158203
    10. '[len' → logprob: -11.887195587158203

Token 597: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. '+' → logprob: -14.375001907348633
    4. 'len' → logprob: -17.125001907348633
    5. 'poly' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.625001907348633
    7. 'deg' → logprob: -18.250001907348633
    8. 'idx' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. '
' → logprob: -19.250001907348633

Token 598: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '+' → logprob: -16.0
    4. 'idx' → logprob: -16.5
    5. 'len' → logprob: -16.875
    6. '```' → logprob: -17.25
    7. 'poly' → logprob: -18.625
    8. 'np' → logprob: -18.9375
    9. 'a' → logprob: -19.125
    10. ')' → logprob: -19.125

Token 599: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011098050512373447
    2. ']+=' → logprob: -4.5110979080200195
    3. ' ]' → logprob: -10.76109790802002
    4. '+' → logprob: -11.26109790802002
    5. ']+' → logprob: -11.76109790802002
    6. '```' → logprob: -13.13609790802002
    7. '[' → logprob: -13.38609790802002
    8. '   ' → logprob: -13.76109790802002
    9. '+]' → logprob: -13.76109790802002
    10. '+=' → logprob: -14.13609790802002

Token 600: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0459023043513298
    2. ' +=' → logprob: -3.4209022521972656
    3. ']+=' → logprob: -4.420902252197266
    4. '+' → logprob: -8.920902252197266
    5. '+=(' → logprob: -12.295902252197266
    6. '   ' → logprob: -12.420902252197266
    7. '    ' → logprob: -12.795902252197266
    8. '```' → logprob: -12.795902252197266
    9. ')' → logprob: -13.170902252197266
    10. '+='' → logprob: -13.295902252197266

Token 601: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.4289243519306183
    2. 'poly' → logprob: -1.053924322128296
    3. '(poly' → logprob: -8.678924560546875
    4. 'np' → logprob: -10.303924560546875
    5. ' np' → logprob: -11.303924560546875
    6. ' (' → logprob: -13.178924560546875
    7. '(' → logprob: -13.928924560546875
    8. 'pol' → logprob: -14.053924560546875
    9. 'py' → logprob: -14.178924560546875
    10. 'int' → logprob: -14.553924560546875

Token 602: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.018961692228913307
    2. '_b' → logprob: -4.0189619064331055
    3. 'a' → logprob: -7.1439619064331055
    4. 'b' → logprob: -11.393961906433105
    5. '[' → logprob: -12.268961906433105
    6. 'A' → logprob: -12.643961906433105
    7. '_s' → logprob: -14.643961906433105
    8. '_i' → logprob: -14.643961906433105
    9. '```' → logprob: -14.768961906433105
    10. '_' → logprob: -15.268961906433105

Token 603: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.004440443590283394
    2. '[' → logprob: -5.7544403076171875
    3. '[np' → logprob: -7.5044403076171875
    4. '[
' → logprob: -8.129440307617188
    5. '*' → logprob: -9.004440307617188
    6. '[:' → logprob: -9.754440307617188
    7. '[:,' → logprob: -10.254440307617188
    8. '```' → logprob: -10.504440307617188
    9. ' *' → logprob: -10.754440307617188
    10. '[id' → logprob: -10.879440307617188

Token 604: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11415798217058182
    2. '*' → logprob: -2.4891579151153564
    3. ']' → logprob: -3.9891579151153564
    4. ',' → logprob: -5.7391581535339355
    5. '<|end|>' → logprob: -6.8641581535339355
    6. '*np' → logprob: -7.2391581535339355
    7. '[' → logprob: -7.4891581535339355
    8. ']*' → logprob: -8.489157676696777
    9. '[...,' → logprob: -8.989157676696777
    10. '[np' → logprob: -9.114157676696777

Token 605: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20791323482990265
    2. '*' → logprob: -1.7079132795333862
    3. '<|end|>' → logprob: -5.207913398742676
    4. '[' → logprob: -7.207913398742676
    5. '[np' → logprob: -9.582913398742676
    6. '*np' → logprob: -9.832913398742676
    7. ',' → logprob: -10.832913398742676
    8. ' ' → logprob: -10.957913398742676
    9. '[:,' → logprob: -11.207913398742676
    10. ' *
' → logprob: -11.207913398742676

Token 606: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.018152397125959396
    2. ' poly' → logprob: -4.018152236938477
    3. 'pol' → logprob: -13.268152236938477
    4. '(poly' → logprob: -14.643152236938477
    5. 'np' → logprob: -15.893152236938477
    6. 'py' → logprob: -16.018152236938477
    7. '_poly' → logprob: -16.893152236938477
    8. '/poly' → logprob: -17.768152236938477
    9. ' np' → logprob: -18.143152236938477
    10. '-poly' → logprob: -18.268152236938477

Token 607: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00318353995680809
    2. 'a' → logprob: -5.753183364868164
    3. '[a' → logprob: -13.378183364868164
    4. 'A' → logprob: -13.503183364868164
    5. '[' → logprob: -14.128183364868164
    6. '<|end|>' → logprob: -15.003183364868164
    7. '[:' → logprob: -15.378183364868164
    8. 'а' → logprob: -15.753183364868164
    9. '```' → logprob: -16.128183364868164
    10. '#a' → logprob: -16.128183364868164

Token 608: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001414426224073395
    2. ' MOD' → logprob: -9.125141143798828
    3. '998' → logprob: -10.375141143798828
    4. ' ' → logprob: -14.250141143798828
    5. '.MOD' → logprob: -15.500141143798828
    6. '_MOD' → logprob: -15.625141143798828
    7. 'MO' → logprob: -16.125141143798828
    8. '999' → logprob: -17.375141143798828
    9. '```' → logprob: -18.000141143798828
    10. 'M' → logprob: -18.250141143798828

Token 610: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.00022654302301816642
    2. '_const' → logprob: -9.000226974487305
    3. 'const' → logprob: -9.750226974487305
    4. '_MOD' → logprob: -11.500226974487305
    5. '[' → logprob: -12.375226974487305
    6. '_consts' → logprob: -12.375226974487305
    7. '```' → logprob: -12.625226974487305
    8. '_C' → logprob: -12.625226974487305
    9. '_CONSTANT' → logprob: -12.750226974487305
    10. ''_' → logprob: -13.125226974487305

Token 611: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5068203210830688
    2. '<|end|>' → logprob: -1.5068203210830688
    3. ' 
' → logprob: -2.2568202018737793
    4. '[' → logprob: -3.5068202018737793
    5. 'result' (adapté à ' result') → logprob: -4.631820201873779
    6. '=' → logprob: -4.631820201873779
    7. ')' → logprob: -5.506820201873779
    8. '  
' → logprob: -5.631820201873779
    9. ' result' → logprob: -6.381820201873779
    10. '+' → logprob: -6.506820201873779

Token 614: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.2022852599620819
    2. ' %=' → logprob: -1.8272852897644043
    3. '%' → logprob: -3.9522852897644043
    4. '[:' → logprob: -5.952285289764404
    5. '[' → logprob: -8.202284812927246
    6. ' %' → logprob: -9.577284812927246
    7. '[:]' → logprob: -9.827284812927246
    8. '```' → logprob: -10.327284812927246
    9. '[%' → logprob: -10.577284812927246
    10. ')' → logprob: -11.827284812927246

Token 615: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001170225441455841
    2. ' MOD' → logprob: -6.7511701583862305
    3. '_MOD' → logprob: -17.001171112060547
    4. '.MOD' → logprob: -18.751171112060547
    5. 'mod' → logprob: -20.876171112060547
    6. 'MO' → logprob: -20.876171112060547
    7. '998' → logprob: -21.626171112060547
    8. '```' → logprob: -22.126171112060547
    9. ' ' → logprob: -22.251171112060547
    10. '(M' → logprob: -22.501171112060547

Token 616: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -9.722539834911004e-05
    2. 'CONST' → logprob: -9.625097274780273
    3. '_MOD' → logprob: -10.500097274780273
    4. '_const' → logprob: -13.250097274780273
    5. 'const' → logprob: -13.750097274780273
    6. '_CONSTANT' → logprob: -15.875097274780273
    7. '```' → logprob: -16.125097274780273
    8. '_CON' → logprob: -16.375097274780273
    9. ' _' → logprob: -16.500097274780273
    10. '\' → logprob: -17.000097274780273

Token 617: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1995501518249512
    2. '\n' → logprob: -1.5745501518249512
    3. ' 
' → logprob: -1.8245501518249512
    4. '[' → logprob: -2.324550151824951
    5. ' ' → logprob: -2.574550151824951
    6. '<|end|>' → logprob: -2.949550151824951
    7. '	' → logprob: -4.324550151824951
    8. '   ' → logprob: -4.449550151824951
    9. '	return' → logprob: -4.449550151824951
    10. '  
' → logprob: -4.699550151824951

Token 619: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20141343772411346
    2. ' result' → logprob: -1.7014133930206299
    3. '(result' → logprob: -16.076414108276367
    4. '[result' → logprob: -18.701414108276367
    5. ' ' → logprob: -18.826414108276367
    6. '=result' → logprob: -19.201414108276367
    7. ',result' → logprob: -19.326414108276367
    8. '	result' → logprob: -19.451414108276367
    9. 'Result' → logprob: -19.576414108276367
    10. 'np' → logprob: -20.076414108276367

Token 621: '[:' (ID: 7808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: 'limit' (ID: 19698)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.14480267465114594
    2. 'limit' → logprob: -2.0198025703430176
    3. 'len' → logprob: -7.144802570343018
    4. ' length' → logprob: -7.894802570343018
    5. '(length' → logprob: -8.019803047180176
    6. 'max' → logprob: -8.144803047180176
    7. '(limit' → logprob: -9.519803047180176
    8. 'param' → logprob: -9.644803047180176
    9. ' limit' → logprob: -9.894803047180176
    10. 'lim' → logprob: -10.519803047180176

Token 623: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.961759259458631e-06
    2. 'x' → logprob: -13.250004768371582
    3. ')' → logprob: -14.125004768371582
    4. '_length' → logprob: -14.750004768371582
    5. '_' → logprob: -15.000004768371582
    6. 'X' → logprob: -15.250004768371582
    7. '_X' → logprob: -15.375004768371582
    8. '_n' → logprob: -15.625004768371582
    9. '+' → logprob: -15.875004768371582
    10. ']' → logprob: -15.875004768371582

Token 624: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4391220211982727
    2. ']' → logprob: -1.064121961593628
    3. ' +' → logprob: -4.689122200012207
    4. ' ]' → logprob: -7.189122200012207
    5. '+]' → logprob: -8.814122200012207
    6. ')' → logprob: -9.189122200012207
    7. '-' → logprob: -10.189122200012207
    8. ']+' → logprob: -10.439122200012207
    9. ')]' → logprob: -10.814122200012207
    10. '[' → logprob: -10.939122200012207

Token 625: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1643524467945099
    2. '<|end|>' → logprob: -2.4143524169921875
    3. '
' → logprob: -4.5393524169921875
    4. '    
' → logprob: -4.6643524169921875
    5. ' ' → logprob: -4.7893524169921875
    6. '	return' → logprob: -5.0393524169921875
    7. ')' → logprob: -5.1643524169921875
    8. '       ' → logprob: -5.2893524169921875
    9. ' 
' → logprob: -5.6643524169921875
    10. '' → logprob: -5.9143524169921875

Token 627: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.18422703444957733
    2. ' power' → logprob: -2.6842269897460938
    3. 'poly' → logprob: -3.0592269897460938
    4. ' pow' → logprob: -3.1842269897460938
    5. 'pow' → logprob: -4.809226989746094
    6. 'power' → logprob: -6.309226989746094
    7. ' recur' → logprob: -8.309226989746094
    8. ' helper' → logprob: -8.559226989746094
    9. ' inner' → logprob: -8.809226989746094
    10. ' exp' → logprob: -8.809226989746094

Token 628: '_power' (ID: 51623)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.49299994111061096
    2. '_power' → logprob: -0.9929999113082886
    3. '_mult' → logprob: -4.368000030517578
    4. '_sum' → logprob: -5.368000030517578
    5. '_mul' → logprob: -7.618000030517578
    6. '_raise' → logprob: -8.243000030517578
    7. '_' → logprob: -8.368000030517578
    8. '_add' → logprob: -9.368000030517578
    9. 'pow' → logprob: -9.493000030517578
    10. '_m' → logprob: -9.618000030517578

Token 629: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.017582954838871956
    2. '(' → logprob: -4.142582893371582
    3. '(pol' → logprob: -6.892582893371582
    4. '_poly' → logprob: -8.392582893371582
    5. '(power' → logprob: -8.892582893371582
    6. '(pow' → logprob: -9.767582893371582
    7. '(base' → logprob: -10.642582893371582
    8. ' (' → logprob: -10.642582893371582
    9. '_' → logprob: -11.767582893371582
    10. 'poly' → logprob: -12.142582893371582

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06797011941671371
    2. '_a' → logprob: -3.317970037460327
    3. ' ,' → logprob: -3.817970037460327
    4. '_,' → logprob: -5.067970275878906
    5. 'a' → logprob: -7.442970275878906
    6. '   ' → logprob: -8.942970275878906
    7. ',a' → logprob: -9.067970275878906
    8. ',p' → logprob: -9.567970275878906
    9. '(poly' → logprob: -9.692970275878906
    10. ',
' → logprob: -10.192970275878906

Token 631: ' exponent' (ID: 51159)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.204026997089386
    2. ' limit' → logprob: -2.579026937484741
    3. 'length' → logprob: -3.329026937484741
    4. 'ex' → logprob: -3.954026937484741
    5. 'power' → logprob: -3.954026937484741
    6. 'n' → logprob: -4.57902717590332
    7. ' power' → logprob: -4.70402717590332
    8. ' exponent' → logprob: -4.95402717590332
    9. ' length' → logprob: -5.82902717590332
    10. ' n' → logprob: -6.20402717590332

Token 632: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010203057900071144
    2. '):' → logprob: -7.001020431518555
    3. '   ' → logprob: -10.126020431518555
    4. '):
' → logprob: -10.376020431518555
    5. ' ,' → logprob: -10.501020431518555
    6. '‌,' → logprob: -12.751020431518555
    7. ',
' → logprob: -13.251020431518555
    8. '<|end|>' → logprob: -14.001020431518555
    9. '_,' → logprob: -14.251020431518555
    10. ',p' → logprob: -14.751020431518555

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013579712249338627
    2. '[' → logprob: -7.8763580322265625
    3. '(' → logprob: -8.126358032226562
    4. ',' → logprob: -9.126358032226562
    5. ' for' → logprob: -9.126358032226562
    6. '   ' → logprob: -9.251358032226562
    7. '```' → logprob: -9.251358032226562
    8. ' return' → logprob: -10.501358032226562
    9. ' if' → logprob: -10.626358032226562
    10. ')' → logprob: -10.626358032226562

Token 634: ' if' (ID: 538)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5379932522773743
    2. ' res' → logprob: -1.5379931926727295
    3. 'result' → logprob: -2.0379931926727295
    4. 'res' → logprob: -3.5379931926727295
    5. ' poly' → logprob: -3.9129931926727295
    6. ' np' → logprob: -4.162993431091309
    7. 'poly' → logprob: -5.787993431091309
    8. 'np' → logprob: -6.162993431091309
    9. ' if' → logprob: -7.287993431091309
    10. '   ' → logprob: -8.037993431091309

Token 635: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.22556428611278534
    2. ' exponent' → logprob: -1.6005642414093018
    3. ' ex' → logprob: -9.725564002990723
    4. '0' → logprob: -10.350564002990723
    5. 'poly' → logprob: -11.350564002990723
    6. '1' → logprob: -11.350564002990723
    7. ' poly' → logprob: -11.600564002990723
    8. '	ex' → logprob: -12.100564002990723
    9. '(ex' → logprob: -12.350564002990723
    10. 'not' → logprob: -12.475564002990723

Token 636: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0552789568901062
    2. ' ==' → logprob: -2.930279016494751
    3. '=' → logprob: -8.055278778076172
    4. '0' → logprob: -10.555278778076172
    5. '[' → logprob: -10.930278778076172
    6. '<=' → logprob: -11.055278778076172
    7. '<' → logprob: -12.680278778076172
    8. '==
' → logprob: -12.805278778076172
    9. ' =' → logprob: -13.305278778076172
    10. ' ' → logprob: -13.430278778076172

Token 637: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11338228732347488
    2. ' ' → logprob: -2.238382339477539
    3. '1' → logprob: -7.488382339477539
    4. '2' → logprob: -15.925882339477539
    5. '
' → logprob: -17.30088233947754
    6. '۰' → logprob: -17.42588233947754
    7. '<|end|>' → logprob: -17.48838233947754
    8. ' 
' → logprob: -17.73838233947754
    9. '(' → logprob: -17.80088233947754
    10. ' ' → logprob: -17.80088233947754

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2762428822461516e-05
    2. ' ' → logprob: -10.375052452087402
    3. '1' → logprob: -10.750052452087402
    4. '۰' → logprob: -18.62505340576172
    5. '2' → logprob: -20.12505340576172
    6. '(' → logprob: -20.25005340576172
    7. '<|end|>' → logprob: -20.25005340576172
    8. '
' → logprob: -20.75005340576172
    9. '=' → logprob: -20.93755340576172
    10. '-' → logprob: -21.00005340576172

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1625135987997055
    2. ':
' → logprob: -1.9125136137008667
    3. ':return' → logprob: -6.287513732910156
    4. ',' → logprob: -8.912513732910156
    5. ' :' → logprob: -9.037513732910156
    6. '[' → logprob: -9.662513732910156
    7. ' :
' → logprob: -10.787513732910156
    8. '       ' → logprob: -11.037513732910156
    9. '   ' → logprob: -11.037513732910156
    10. '{' → logprob: -11.662513732910156

Token 640: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02548099122941494
    2. ' return' → logprob: -4.275481224060059
    3. ':' → logprob: -5.650481224060059
    4. ',' → logprob: -6.025481224060059
    5. '<|end|>' → logprob: -6.525481224060059
    6. '[' → logprob: -7.400481224060059
    7. ' (' → logprob: -7.775481224060059
    8. ' =' → logprob: -7.775481224060059
    9. '           ' → logprob: -7.775481224060059
    10. 'return' → logprob: -8.025481224060059

Token 641: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20931927859783173
    2. 'return' (adapté à ' return') → logprob: -2.4593193531036377
    3. ' np' → logprob: -2.4593193531036377
    4. 'np' → logprob: -4.084319114685059
    5. ' poly' → logprob: -7.209319114685059
    6. '       ' → logprob: -8.709319114685059
    7. 'poly' → logprob: -9.709319114685059
    8. '           ' → logprob: -10.334319114685059
    9. ' array' → logprob: -11.584319114685059
    10. 'array' → logprob: -12.209319114685059

Token 642: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.04858839511871338
    2. ' np' → logprob: -3.048588275909424
    3. '(np' → logprob: -14.548588752746582
    4. 'poly' → logprob: -14.923588752746582
    5. '1' → logprob: -16.923587799072266
    6. 'array' → logprob: -16.923587799072266
    7. ' poly' → logprob: -17.173587799072266
    8. '   ' → logprob: -17.298587799072266
    9. ' ' → logprob: -17.548587799072266
    10. '[np' → logprob: -17.798587799072266

Token 643: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.5842401385307312
    2. 'array' → logprob: -0.8342401385307312
    3. '.ones' → logprob: -4.834239959716797
    4. '.zeros' → logprob: -8.334239959716797
    5. '(array' → logprob: -10.459239959716797
    6. 'ones' → logprob: -10.584239959716797
    7. '1' → logprob: -12.209239959716797
    8. ' array' → logprob: -12.459239959716797
    9. '_array' → logprob: -12.959239959716797
    10. '.arange' → logprob: -12.959239959716797

Token 644: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0004911953583359718
    2. '[' → logprob: -7.625491142272949
    3. '(' → logprob: -13.00049114227295
    4. '([],' → logprob: -14.62549114227295
    5. '(([' → logprob: -16.000492095947266
    6. ' ([' → logprob: -16.125492095947266
    7. '([]' → logprob: -16.375492095947266
    8. ' [' → logprob: -17.750492095947266
    9. '([-' → logprob: -18.250492095947266
    10. '([[' → logprob: -18.500492095947266

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -17.625
    4. '           ' → logprob: -20.5
    5. '１' → logprob: -20.875
    6. '۱' → logprob: -20.875
    7. 'int' → logprob: -21.0
    8. '       ' → logprob: -21.25
    9. '```' → logprob: -21.5
    10. '
' → logprob: -21.875

Token 646: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0009206312242895365
    2. '])' → logprob: -7.62592077255249
    3. ']' → logprob: -8.000920295715332
    4. ',' → logprob: -9.625920295715332
    5. ']+' → logprob: -11.500920295715332
    6. '       ' → logprob: -11.875920295715332
    7. ' ],' → logprob: -12.000920295715332
    8. '   ' → logprob: -12.875920295715332
    9. '])
' → logprob: -13.000920295715332
    10. '    ' → logprob: -14.375920295715332

Token 647: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.10075812041759491
    2. 'np' → logprob: -2.3507580757141113
    3. ' dtype' → logprob: -7.725758075714111
    4. ' np' → logprob: -9.22575855255127
    5. '           ' → logprob: -12.85075855255127
    6. '       ' → logprob: -12.97575855255127
    7. '   ' → logprob: -13.72575855255127
    8. '          ' → logprob: -13.85075855255127
    9. '      ' → logprob: -14.35075855255127
    10. '     ' → logprob: -14.47575855255127

Token 648: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.0001589618914294988
    2. 'np' → logprob: -8.75015926361084
    3. '(np' → logprob: -16.125158309936523
    4. '=' → logprob: -16.500158309936523
    5. ' np' → logprob: -16.500158309936523
    6. '=int' → logprob: -16.625158309936523
    7. '[np' → logprob: -16.875158309936523
    8. ',np' → logprob: -16.875158309936523
    9. '   ' → logprob: -17.000158309936523
    10. ' =' → logprob: -19.000158309936523

Token 649: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859054833650589
    2. '.int' → logprob: -3.048590660095215
    3. 'uint' → logprob: -13.298590660095215
    4. ' int' → logprob: -14.548590660095215
    5. '=int' → logprob: -14.673590660095215
    6. '.uint' → logprob: -15.423590660095215
    7. 'object' → logprob: -15.673590660095215
    8. 'np' → logprob: -16.9235897064209
    9. ''int' → logprob: -17.0485897064209
    10. '[int' → logprob: -17.1735897064209

Token 650: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.625
    3. '6' → logprob: -19.125
    4. 'array' → logprob: -19.5
    5. 'np' → logprob: -21.0
    6. 'p' → logprob: -21.75
    7. '66' → logprob: -22.125
    8. 'c' → logprob: -22.25
    9. '8' → logprob: -22.375
    10. 'arr' → logprob: -22.375

Token 651: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4887026250362396
    2. ')
' → logprob: -0.988702654838562
    3. '       ' → logprob: -4.238702774047852
    4. ')
' → logprob: -10.363702774047852
    5. ' )
' → logprob: -10.988702774047852
    6. '   ' → logprob: -11.113702774047852
    7. '	' → logprob: -11.738702774047852
    8. ' )' → logprob: -11.863702774047852
    9. '           ' → logprob: -12.488702774047852
    10. ')\
' → logprob: -13.238702774047852

Token 652: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34825462102890015
    2. '<|end|>' → logprob: -1.598254680633545
    3. '   ' → logprob: -3.473254680633545
    4. '[' → logprob: -4.098254680633545
    5. ' 
' → logprob: -4.598254680633545
    6. ' ' → logprob: -5.098254680633545
    7. '<|end|>' → logprob: -5.598254680633545
    8. '```' → logprob: -5.723254680633545
    9. ')' → logprob: -5.848254680633545
    10. '
' → logprob: -5.848254680633545

Token 653: ' half' (ID: 6375)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.11461050808429718
    2. '
' → logprob: -3.364610433578491
    3. '  
' → logprob: -3.739610433578491
    4. ' else' → logprob: -4.11461067199707
    5. ' ' → logprob: -4.36461067199707
    6. '       ' → logprob: -4.73961067199707
    7. '        
' → logprob: -6.11461067199707
    8. ' ' → logprob: -6.23961067199707
    9. '    
' → logprob: -6.73961067199707
    10. '     
' → logprob: -6.86461067199707

Token 654: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7242851257324219
    2. ' =' → logprob: -0.7242851257324219
    3. '_' → logprob: -4.724285125732422
    4. '_pow' → logprob: -4.724285125732422
    5. '_power' → logprob: -4.974285125732422
    6. '_poly' → logprob: -5.849285125732422
    7. ',' → logprob: -7.349285125732422
    8. '   ' → logprob: -7.474285125732422
    9. '=_' → logprob: -7.849285125732422
    10. 'poly' → logprob: -8.724285125732422

Token 655: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.9932414889335632
    2. 'poly' → logprob: -0.9932414889335632
    3. 'ex' → logprob: -1.493241548538208
    4. ' exponent' → logprob: -3.493241548538208
    5. ' ex' → logprob: -6.368241310119629
    6. ' polynomial' → logprob: -6.993241310119629
    7. 'pol' → logprob: -6.993241310119629
    8. 'pow' → logprob: -9.243241310119629
    9. '(poly' → logprob: -9.368241310119629
    10. ' pol' → logprob: -9.555741310119629

Token 656: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.10880353301763535
    2. '=' → logprob: -2.8588035106658936
    3. ' =' → logprob: -3.1088035106658936
    4. '_pow' → logprob: -8.108803749084473
    5. '**' → logprob: -8.358803749084473
    6. '_' → logprob: -8.983803749084473
    7. ')' → logprob: -9.108803749084473
    8. ',' → logprob: -9.983803749084473
    9. 'power' → logprob: -9.983803749084473
    10. '(power' → logprob: -10.108803749084473

Token 657: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.0023622133303433657
    2. '(' → logprob: -6.127362251281738
    3. '(
' → logprob: -8.752362251281738
    4. '(pol' → logprob: -12.127362251281738
    5. ' (' → logprob: -12.377362251281738
    6. ' poly' → logprob: -12.377362251281738
    7. 'poly' → logprob: -12.752362251281738
    8. '(py' → logprob: -14.127362251281738
    9. ' ' → logprob: -14.752362251281738
    10. '(np' → logprob: -15.252362251281738

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016764947213232517
    2. ' poly' → logprob: -7.501676559448242
    3. '(poly' → logprob: -7.501676559448242
    4. ' ,' → logprob: -8.126676559448242
    5. 'poly' → logprob: -8.251676559448242
    6. '[' → logprob: -12.501676559448242
    7. ')' → logprob: -12.751676559448242
    8. ',
' → logprob: -13.126676559448242
    9. ' ' → logprob: -14.001676559448242
    10. '   ' → logprob: -14.001676559448242

Token 659: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -4.394135612528771e-05
    2. '(ex' → logprob: -10.250043869018555
    3. ' exponent' → logprob: -11.875043869018555
    4. ' ex' → logprob: -14.250043869018555
    5. '   ' → logprob: -14.500043869018555
    6. '
' → logprob: -15.625043869018555
    7. '	ex' → logprob: -16.250043869018555
    8. 'e' → logprob: -17.500043869018555
    9. ' ' → logprob: -17.875043869018555
    10. '```' → logprob: -17.875043869018555

Token 660: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.47503170371055603
    2. ' //' → logprob: -0.9750317335128784
    3. '>>' → logprob: -7.225031852722168
    4. ' >>' → logprob: -9.725031852722168
    5. '2' → logprob: -9.975031852722168
    6. ' ' → logprob: -10.475031852722168
    7. ')' → logprob: -10.475031852722168
    8. '   ' → logprob: -11.100031852722168
    9. '#' → logprob: -11.600031852722168
    10. ' ' → logprob: -11.850031852722168

Token 661: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.500045776367188
    4. '```' → logprob: -18.125045776367188
    5. '[' → logprob: -19.125045776367188
    6. '    ' → logprob: -19.375045776367188
    7. '  ' → logprob: -20.750045776367188
    8. '۲' → logprob: -21.250045776367188
    9. '=' → logprob: -21.750045776367188
    10. 'def' → logprob: -22.000045776367188

Token 662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.3750057220459
    4. '   ' → logprob: -19.0000057220459
    5. '[' → logprob: -19.8750057220459
    6. '...' → logprob: -20.7500057220459
    7. '  ' → logprob: -20.7500057220459
    8. '    ' → logprob: -21.0000057220459
    9. '۲' → logprob: -21.0000057220459
    10. '=' → logprob: -21.2500057220459

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03810414299368858
    2. ')
' → logprob: -3.2881040573120117
    3. '   ' → logprob: -10.788104057312012
    4. ' )' → logprob: -11.038104057312012
    5. '       ' → logprob: -11.538104057312012
    6. ')

' → logprob: -12.413104057312012
    7. ' )
' → logprob: -12.788104057312012
    8. ')
' → logprob: -12.788104057312012
    9. ',' → logprob: -13.788104057312012
    10. '())' → logprob: -13.913104057312012

Token 664: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07512830197811127
    2. '       ' → logprob: -3.9501283168792725
    3. '[' → logprob: -4.325128078460693
    4. '<|end|>' → logprob: -4.825128078460693
    5. '```' → logprob: -5.075128078460693
    6. ' 
' → logprob: -5.450128078460693
    7. '  
' → logprob: -5.825128078460693
    8. '\n' → logprob: -5.825128078460693
    9. '*' → logprob: -5.950128078460693
    10. '   ' → logprob: -6.075128078460693

Token 665: ' squared' (ID: 117867)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.880291223526001
    2. ' full' → logprob: -1.005291223526001
    3. ' half' → logprob: -2.380291223526001
    4. 'full' → logprob: -2.630291223526001
    5. 'poly' → logprob: -3.880291223526001
    6. 'result' → logprob: -4.380290985107422
    7. ' poly' → logprob: -4.630290985107422
    8. 'return' → logprob: -5.505290985107422
    9. ' result' → logprob: -6.130290985107422
    10. ' return' → logprob: -6.255290985107422

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.724078178405762
    4. ',' → logprob: -16.099077224731445
    5. '=np' → logprob: -16.349077224731445
    6. ' ' → logprob: -16.474077224731445
    7. '=
' → logprob: -17.099077224731445
    8. '_' → logprob: -17.099077224731445
    9. ' =
' → logprob: -17.099077224731445
    10. '＝' → logprob: -17.474077224731445

Token 667: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.019006723538041115
    2. ' poly' → logprob: -4.144006729125977
    3. '(poly' → logprob: -6.394006729125977
    4. 'np' → logprob: -6.894006729125977
    5. '(' → logprob: -9.769006729125977
    6. ' np' → logprob: -9.769006729125977
    7. 'pol' → logprob: -9.894006729125977
    8. ' (' → logprob: -10.019006729125977
    9. '(np' → logprob: -10.019006729125977
    10. '((' → logprob: -12.206506729125977

Token 668: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -0.5878912806510925
    2. '_power' → logprob: -1.3378913402557373
    3. '_m' → logprob: -1.8378913402557373
    4. '*' → logprob: -3.9628913402557373
    5. '_mul' → logprob: -6.587891101837158
    6. '_' → logprob: -6.837891101837158
    7. ' *' → logprob: -6.962891101837158
    8. 'mult' → logprob: -8.712891578674316
    9. '_pow' → logprob: -9.712891578674316
    10. 'power' → logprob: -9.837891578674316

Token 669: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. 'half' → logprob: -14.75
    3. '(
' → logprob: -18.125
    4. 'hal' → logprob: -18.75
    5. ' (' → logprob: -19.5
    6. ' half' → logprob: -20.0
    7. '_half' → logprob: -21.0
    8. 'HAL' → logprob: -22.125
    9. '(np' → logprob: -22.625
    10. '(h' → logprob: -22.75

Token 670: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.00044544681441038847
    2. ' half' → logprob: -7.750445365905762
    3. 'hal' → logprob: -11.125445365905762
    4. '_half' → logprob: -17.750446319580078
    5. '(' → logprob: -18.625446319580078
    6. '   ' → logprob: -19.250446319580078
    7. ')' → logprob: -19.375446319580078
    8. 'Half' → logprob: -20.375446319580078
    9. '	' → logprob: -20.375446319580078
    10. ' ' → logprob: -20.750446319580078

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.375031471252441
    3. ',
' → logprob: -15.750031471252441
    4. 'half' → logprob: -16.125032424926758
    5. 's' → logprob: -17.500032424926758
    6. '[' → logprob: -17.750032424926758
    7. ')' → logprob: -17.750032424926758
    8. ' half' → logprob: -17.750032424926758
    9. ',s' → logprob: -18.125032424926758
    10. ' ' → logprob: -18.750032424926758

Token 672: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.0007101670489646494
    2. ' half' → logprob: -7.2507100105285645
    3. 'hal' → logprob: -15.125710487365723
    4. '_half' → logprob: -18.375709533691406
    5. 'halve' → logprob: -20.000709533691406
    6. '   ' → logprob: -20.750709533691406
    7. ')' → logprob: -21.375709533691406
    8. '-half' → logprob: -21.500709533691406
    9. '
' → logprob: -21.875709533691406
    10. ' halftime' → logprob: -21.875709533691406

Token 673: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.9728669738397e-05
    2. ')
' → logprob: -9.250100135803223
    3. '       ' → logprob: -13.125100135803223
    4. ' )' → logprob: -14.250100135803223
    5. '   ' → logprob: -14.625100135803223
    6. ')

' → logprob: -16.250099182128906
    7. ')return' → logprob: -16.250099182128906
    8. ')[' → logprob: -17.000099182128906
    9. ')#' → logprob: -17.250099182128906
    10. '<|end|>' → logprob: -17.375099182128906

Token 674: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.181543231010437
    2. ' 
' → logprob: -2.8065433502197266
    3. '<|end|>' → logprob: -3.1815433502197266
    4. '  
' → logprob: -3.9315433502197266
    5. '\n' → logprob: -4.056543350219727
    6. '       ' → logprob: -4.556543350219727
    7. '[' → logprob: -5.931543350219727
    8. '    
' → logprob: -6.181543350219727
    9. 's' → logprob: -6.431543350219727
    10. 'return' → logprob: -6.556543350219727

Token 675: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11453289538621902
    2. 'if' → logprob: -2.239532947540283
    3. '       ' → logprob: -7.114532947540283
    4. 'return' (adapté à ' return') → logprob: -7.864532947540283
    5. ' return' → logprob: -7.989532947540283
    6. ' 
' → logprob: -9.364532470703125
    7. '	if' → logprob: -10.614532470703125
    8. '
' → logprob: -11.239532470703125
    9. '        
' → logprob: -11.239532470703125
    10. '[' → logprob: -11.489532470703125

Token 676: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.5856079459190369
    2. 'poly' → logprob: -1.0856080055236816
    3. 's' → logprob: -2.8356080055236816
    4. ' squared' → logprob: -3.2106080055236816
    5. ' np' → logprob: -6.085608005523682
    6. ' polynomial' → logprob: -6.710608005523682
    7. 'np' → logprob: -6.960608005523682
    8. 'pol' → logprob: -7.210608005523682
    9. 'sq' → logprob: -7.960608005523682
    10. ' sq' → logprob: -8.085607528686523

Token 677: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -3.976922744186595e-05
    2. '_power' → logprob: -10.625040054321289
    3. 's' → logprob: -12.250040054321289
    4. 'if' → logprob: -12.375040054321289
    5. 'mult' → logprob: -13.000040054321289
    6. '_mul' → logprob: -13.750040054321289
    7. '_pow' → logprob: -13.875040054321289
    8. 'a' → logprob: -14.750040054321289
    9. '_m' → logprob: -14.875040054321289
    10. ' if' → logprob: -14.875040054321289

Token 678: '(poly' (ID: 175644)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.3557529857498594e-05
    2. '(poly' → logprob: -11.62502384185791
    3. '(square' → logprob: -12.00002384185791
    4. '(' → logprob: -12.12502384185791
    5. '(pol' → logprob: -13.25002384185791
    6. '(sorted' → logprob: -14.62502384185791
    7. '(
' → logprob: -15.00002384185791
    8. ' (' → logprob: -15.50002384185791
    9. '(np' → logprob: -16.125022888183594
    10. 's' → logprob: -16.250022888183594

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006133314222097397
    2. ',s' → logprob: -5.131133079528809
    3. ' ,' → logprob: -9.006133079528809
    4. 's' → logprob: -9.506133079528809
    5. ')' → logprob: -13.506133079528809
    6. '(s' → logprob: -13.506133079528809
    7. '),' → logprob: -14.131133079528809
    8. ',
' → logprob: -14.256133079528809
    9. '[' → logprob: -14.631133079528809
    10. '_,' → logprob: -14.881133079528809

Token 680: ' squared' (ID: 117867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02057785540819168
    2. ' squared' → logprob: -3.895577907562256
    3. '(s' → logprob: -11.520577430725098
    4. 'sq' → logprob: -11.770577430725098
    5. 'square' → logprob: -12.395577430725098
    6. '	s' → logprob: -12.645577430725098
    7. '[s' → logprob: -13.020577430725098
    8. '_squared' → logprob: -13.145577430725098
    9. ')s' → logprob: -13.270577430725098
    10. '          ' → logprob: -13.895577430725098

Token 681: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01577003486454487
    2. ' if' → logprob: -4.515769958496094
    3. ',' → logprob: -6.140769958496094
    4. '(ex' → logprob: -6.890769958496094
    5. '(poly' → logprob: -8.015769958496094
    6. 'if' → logprob: -8.390769958496094
    7. 'ex' → logprob: -8.515769958496094
    8. '       ' → logprob: -8.640769958496094
    9. '[' → logprob: -8.765769958496094
    10. 'poly' → logprob: -9.265769958496094

Token 682: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0035468549467623234
    2. 'if' → logprob: -5.878546714782715
    3. '[' → logprob: -8.253546714782715
    4. '(ex' → logprob: -8.503546714782715
    5. '<|end|>' → logprob: -8.878546714782715
    6. '(' → logprob: -10.378546714782715
    7. 'ex' → logprob: -10.753546714782715
    8. ' ' → logprob: -11.003546714782715
    9. '[:]' → logprob: -11.003546714782715
    10. '	if' → logprob: -11.253546714782715

Token 683: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.18661649525165558
    2. '(ex' → logprob: -2.0616164207458496
    3. ' exponent' → logprob: -3.1866164207458496
    4. ' (' → logprob: -6.56161642074585
    5. ' ex' → logprob: -9.436616897583008
    6. '   ' → logprob: -9.686616897583008
    7. ' ' → logprob: -9.936616897583008
    8. '	ex' → logprob: -10.561616897583008
    9. '(' → logprob: -11.561616897583008
    10. '  ' → logprob: -12.499116897583008

Token 684: ' &' (ID: 827)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12705694139003754
    2. ' %' → logprob: -2.127056837081909
    3. '&' → logprob: -9.377057075500488
    4. ' &' → logprob: -11.002057075500488
    5. '[' → logprob: -12.002057075500488
    6. ' ' → logprob: -12.877057075500488
    7. '
' → logprob: -13.127057075500488
    8. '>' → logprob: -13.127057075500488
    9. ')' → logprob: -13.627057075500488
    10. '<|end|>' → logprob: -13.627057075500488

Token 685: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018159780651330948
    2. ' ' → logprob: -4.018159866333008
    3. 'ex' → logprob: -11.643159866333008
    4. ' exponent' → logprob: -14.518159866333008
    5. ' ex' → logprob: -15.893159866333008
    6. ' (' → logprob: -16.018159866333008
    7. '(' → logprob: -16.268159866333008
    8. '0' → logprob: -16.893159866333008
    9. '(ex' → logprob: -17.018159866333008
    10. '127' → logprob: -17.268159866333008

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. 'ex' → logprob: -15.000911712646484
    4. '   ' → logprob: -18.125911712646484
    5. '0' → logprob: -18.875911712646484
    6. '  ' → logprob: -19.000911712646484
    7. '
' → logprob: -19.000911712646484
    8. '{' → logprob: -19.125911712646484
    9. 'x' → logprob: -19.375911712646484
    10. '```' → logprob: -19.375911712646484

Token 687: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016359150409698486
    2. 'else' → logprob: -4.141359329223633
    3. '==' → logprob: -8.266359329223633
    4. ' ' → logprob: -10.516359329223633
    5. '<|end|>' → logprob: -11.141359329223633
    6. ' ==' → logprob: -11.391359329223633
    7. '	else' → logprob: -11.891359329223633
    8. '[]' → logprob: -13.641359329223633
    9. '=' → logprob: -13.641359329223633
    10. '  ' → logprob: -14.141359329223633

Token 688: ' squared' (ID: 117867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4740942120552063
    2. ' squared' → logprob: -0.9740942120552063
    3. 'square' → logprob: -11.47409439086914
    4. 'sq' → logprob: -12.47409439086914
    5. '_squared' → logprob: -13.72409439086914
    6. '(s' → logprob: -13.97409439086914
    7. '	s' → logprob: -14.84909439086914
    8. ' square' → logprob: -15.59909439086914
    9. 'Squared' → logprob: -15.97409439086914
    10. ' ' → logprob: -16.09909439086914

Token 689: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: ' base' (ID: 3611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: '_poly' (ID: 99075)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.184860497713089
    2. '_poly' → logprob: -2.0598604679107666
    3. '_' → logprob: -3.5598604679107666
    4. '=' → logprob: -4.684860706329346
    5. ' _' → logprob: -6.309860706329346
    6. '_pol' → logprob: -6.934860706329346
    7. '[' → logprob: -8.684860229492188
    8. '_array' → logprob: -8.809860229492188
    9. 'poly' → logprob: -9.309860229492188
    10. '_arr' → logprob: -9.809860229492188

Token 693: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021442919969559
    2. '=' → logprob: -2.3502144813537598
    3. '<|end|>' → logprob: -12.725214004516602
    4. '=np' → logprob: -12.850214004516602
    5. ' ' → logprob: -14.225214004516602
    6. '[' → logprob: -14.725214004516602
    7. '=[' → logprob: -15.100214004516602
    8. '=
' → logprob: -16.1002140045166
    9. ':' → logprob: -16.1002140045166
    10. ',' → logprob: -16.2252140045166

Token 694: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.10021529346704483
    2. ' np' → logprob: -2.350215196609497
    3. '(np' → logprob: -12.350214958190918
    4. 'numpy' → logprob: -13.475214958190918
    5. 'array' → logprob: -14.350214958190918
    6. ' ' → logprob: -15.100214958190918
    7. '=np' → logprob: -15.225214958190918
    8. '1' → logprob: -15.225214958190918
    9. 'poly' → logprob: -15.225214958190918
    10. '[np' → logprob: -15.350214958190918

Token 695: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.02498023211956024
    2. '.zeros' → logprob: -4.774980068206787
    3. '.ones' → logprob: -4.774980068206787
    4. 'array' → logprob: -5.149980068206787
    5. '.arange' → logprob: -6.274980068206787
    6. '([' → logprob: -9.774980545043945
    7. '[' → logprob: -11.024980545043945
    8. '.' → logprob: -11.399980545043945
    9. '.concatenate' → logprob: -11.899980545043945
    10. '.full' → logprob: -12.524980545043945

Token 696: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.00011725161311915144
    2. '[' → logprob: -9.125117301940918
    3. '(' → logprob: -11.875117301940918
    4. ' ([' → logprob: -14.500117301940918
    5. '(([' → logprob: -15.375117301940918
    6. '(np' → logprob: -15.500117301940918
    7. '([-' → logprob: -16.3751163482666
    8. '([
' → logprob: -16.7501163482666
    9. '(
' → logprob: -17.1251163482666
    10. '[param' → logprob: -17.2501163482666

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002601438027340919
    2. '0' → logprob: -8.500260353088379
    3. 'param' → logprob: -10.500260353088379
    4. '*' → logprob: -11.750260353088379
    5. 'int' → logprob: -12.500260353088379
    6. '(' → logprob: -12.750260353088379
    7. 'com' → logprob: -13.062760353088379
    8. ' ' → logprob: -13.250260353088379
    9. '[' → logprob: -13.625260353088379
    10. '[param' → logprob: -13.812760353088379

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0079751992598176
    2. '],' → logprob: -5.882975101470947
    3. ' ,' → logprob: -5.882975101470947
    4. ']' → logprob: -6.132975101470947
    5. ']+' → logprob: -8.882975578308105
    6. ',
' → logprob: -11.007975578308105
    7. ' ],' → logprob: -12.007975578308105
    8. ' +' → logprob: -12.007975578308105
    9. ',param' → logprob: -12.007975578308105
    10. '0' → logprob: -12.132975578308105

Token 699: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18614456057548523
    2. 'param' → logprob: -1.8111445903778076
    3. '(param' → logprob: -5.9361443519592285
    4. '2' → logprob: -6.1861443519592285
    5. ' param' → logprob: -7.8111443519592285
    6. ' ' → logprob: -8.436144828796387
    7. '-' → logprob: -8.811144828796387
    8. '9' → logprob: -9.186144828796387
    9. '3' → logprob: -9.311144828796387
    10. 'com' → logprob: -9.436144828796387

Token 700: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22912102937698364
    2. 'param' → logprob: -1.6041209697723389
    3. '(param' → logprob: -6.354121208190918
    4. '-' → logprob: -6.979121208190918
    5. '2' → logprob: -7.354121208190918
    6. '-param' → logprob: -9.729121208190918
    7. '(' → logprob: -10.104121208190918
    8. '0' → logprob: -10.229121208190918
    9. '3' → logprob: -10.479121208190918
    10. ' param' → logprob: -10.854121208190918

Token 701: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001295596593990922
    2. ']' → logprob: -7.001295566558838
    3. '])' → logprob: -8.376296043395996
    4. ',' → logprob: -9.501296043395996
    5. ' ],' → logprob: -9.501296043395996
    6. ']+' → logprob: -13.626296043395996
    7. '   ' → logprob: -14.751296043395996
    8. '),' → logprob: -15.126296043395996
    9. '])
' → logprob: -15.251296043395996
    10. ''],' → logprob: -15.626296043395996

Token 702: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011055675568059087
    2. ' ' → logprob: -7.876105785369873
    3. 'param' → logprob: -8.001105308532715
    4. ']' → logprob: -9.001105308532715
    5. '0' → logprob: -9.251105308532715
    6. '*' → logprob: -10.876105308532715
    7. ']*(' → logprob: -11.001105308532715
    8. 'np' → logprob: -11.251105308532715
    9. ']*' → logprob: -11.251105308532715
    10. ' param' → logprob: -11.376105308532715

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026288547087460756
    2. '0' → logprob: -8.625263214111328
    3. ' ' → logprob: -9.750263214111328
    4. '2' → logprob: -12.000263214111328
    5. 'param' → logprob: -12.250263214111328
    6. '-' → logprob: -12.625263214111328
    7. ']' → logprob: -13.125263214111328
    8. '])' → logprob: -13.375263214111328
    9. ' -' → logprob: -13.375263214111328
    10. '(param' → logprob: -14.625263214111328

Token 704: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.06081487238407135
    2. ',' → logprob: -3.56081485748291
    3. ']' → logprob: -3.56081485748291
    4. ']+' → logprob: -6.43581485748291
    5. '])' → logprob: -8.68581485748291
    6. ' ],' → logprob: -8.81081485748291
    7. '][:' → logprob: -9.06081485748291
    8. ',...' → logprob: -10.81081485748291
    9. '...' → logprob: -10.93581485748291
    10. '[:' → logprob: -11.06081485748291

Token 705: ' np' (ID: 5374)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.008050177246332169
    2. ' dtype' → logprob: -5.008049964904785
    3. 'np' → logprob: -6.633049964904785
    4. ' np' → logprob: -11.008049964904785
    5. '(dtype' → logprob: -14.008049964904785
    6. 'd' → logprob: -16.3830509185791
    7. '.dtype' → logprob: -16.8830509185791
    8. '_dtype' → logprob: -17.1330509185791
    9. 'int' → logprob: -17.5080509185791
    10. ' ' → logprob: -17.7580509185791

Token 706: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06198449432849884
    2. '.int' → logprob: -2.8119845390319824
    3. ' int' → logprob: -11.936984062194824
    4. 'uint' → logprob: -12.811984062194824
    5. '<int' → logprob: -13.186984062194824
    6. '.uint' → logprob: -13.561984062194824
    7. '=int' → logprob: -13.561984062194824
    8. '64' → logprob: -14.186984062194824
    9. '[int' → logprob: -14.186984062194824
    10. ']int' → logprob: -14.561984062194824

Token 707: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -3.128163257315464e-07
    2. 'int' → logprob: -15.125
    3. '6' → logprob: -19.125
    4. ' ' → logprob: -19.625
    5. 'array' → logprob: -20.25
    6. '8' → logprob: -21.875
    7. 'dtype' → logprob: -22.0
    8. 'arr' → logprob: -22.375
    9. '[int' → logprob: -23.25
    10. ')' → logprob: -23.375

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.637786231702194e-05
    2. ')
' → logprob: -9.625086784362793
    3. '])' → logprob: -11.625086784362793
    4. ' )' → logprob: -12.750086784362793
    5. ']' → logprob: -13.000086784362793
    6. '[' → logprob: -13.250086784362793
    7. '   ' → logprob: -13.500086784362793
    8. ')]' → logprob: -14.125086784362793
    9. '[:' → logprob: -14.375086784362793
    10. '),' → logprob: -15.250086784362793

Token 709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21389012038707733
    2. '<|end|>' → logprob: -2.8388900756835938
    3. ' ' → logprob: -2.9638900756835938
    4. ' return' → logprob: -4.088890075683594
    5. '[' → logprob: -4.338890075683594
    6. ')' → logprob: -4.338890075683594
    7. 'result' → logprob: -4.838890075683594
    8. ' result' → logprob: -5.463890075683594
    9. 'return' → logprob: -5.588890075683594
    10. '
' → logprob: -5.588890075683594

Token 710: ' raised' (ID: 15478)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.19570212066173553
    2. ' result' → logprob: -2.195702075958252
    3. 'poly' → logprob: -3.445702075958252
    4. 'res' → logprob: -4.695702075958252
    5. 'power' → logprob: -5.320702075958252
    6. 'return' → logprob: -5.445702075958252
    7. ' res' → logprob: -5.570702075958252
    8. ' return' → logprob: -6.070702075958252
    9. '   ' → logprob: -6.070702075958252
    10. 'pow' → logprob: -6.445702075958252

Token 711: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.12277673929929733
    2. '=' → logprob: -2.497776746749878
    3. ' =' → logprob: -3.497776746749878
    4. '_power' → logprob: -6.747776508331299
    5. '_pol' → logprob: -6.872776508331299
    6. '_' → logprob: -7.997776508331299
    7. 'poly' → logprob: -8.622776985168457
    8. '_pow' → logprob: -8.872776985168457
    9. '_token' → logprob: -10.247776985168457
    10. '_=' → logprob: -10.872776985168457

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.943148612976074
    4. ',' → logprob: -15.568148612976074
    5. '=np' → logprob: -15.818148612976074
    6. '=
' → logprob: -15.943148612976074
    7. ' =
' → logprob: -16.193147659301758
    8. '[' → logprob: -16.568147659301758
    9. ')' → logprob: -17.193147659301758
    10. 's' → logprob: -17.193147659301758

Token 713: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.6936247944831848
    2. 'poly' → logprob: -0.6936247944831848
    3. ' polynomial' → logprob: -7.818624973297119
    4. 'pol' → logprob: -9.568624496459961
    5. '(poly' → logprob: -12.568624496459961
    6. ' pol' → logprob: -14.443624496459961
    7. '_poly' → logprob: -14.693624496459961
    8. 'Poly' → logprob: -15.068624496459961
    9. '.poly' → logprob: -16.06862449645996
    10. 'pow' → logprob: -16.19362449645996

Token 714: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0006421420839615166
    2. 'power' → logprob: -7.3756422996521
    3. 'Power' → logprob: -12.000641822814941
    4. '_pow' → logprob: -12.250641822814941
    5. 'pow' → logprob: -13.625641822814941
    6. '[' → logprob: -14.625641822814941
    7. '**' → logprob: -14.750641822814941
    8. '```' → logprob: -14.875641822814941
    9. ' power' → logprob: -15.125641822814941
    10. '_raise' → logprob: -15.125641822814941

Token 715: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. 'base' → logprob: -15.500000953674316
    4. ' (' → logprob: -17.875
    5. ' base' → logprob: -18.5
    6. '(
' → logprob: -18.625
    7. '```' → logprob: -19.0
    8. ';base' → logprob: -19.125
    9. '(poly' → logprob: -19.375
    10. '(Base' → logprob: -20.5

Token 716: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.00019269285257905722
    2. 'poly' → logprob: -8.750192642211914
    3. '(poly' → logprob: -11.000192642211914
    4. '(base' → logprob: -11.625192642211914
    5. 'Poly' → logprob: -13.625192642211914
    6. ')' → logprob: -13.750192642211914
    7. ',' → logprob: -14.000192642211914
    8. '(' → logprob: -14.000192642211914
    9. '-poly' → logprob: -14.250192642211914
    10. '_pow' → logprob: -14.375192642211914

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016535212052986026
    2. ',param' → logprob: -6.501653671264648
    3. ' ,' → logprob: -9.001653671264648
    4. 'param' → logprob: -10.876653671264648
    5. '[param' → logprob: -12.376653671264648
    6. ' param' → logprob: -13.251653671264648
    7. ',
' → logprob: -13.751653671264648
    8. '(param' → logprob: -14.251653671264648
    9. ')' → logprob: -15.001653671264648
    10. '@param' → logprob: -15.126653671264648

Token 718: ' length' (ID: 5517)
  Prédit: ' param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' param' → logprob: -1.1027671098709106
    2. ' length' → logprob: -1.1027671098709106
    3. 'length' → logprob: -1.4777671098709106
    4. 'param' → logprob: -2.227766990661621
    5. 'limit' → logprob: -9.352766990661621
    6. ' limit' → logprob: -10.477766990661621
    7. 'len' → logprob: -11.352766990661621
    8. '    ' → logprob: -11.602766990661621
    9. ' parameter' → logprob: -11.977766990661621
    10. '(param' → logprob: -12.227766990661621

Token 719: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -15.000000953674316
    3. ')' → logprob: -16.375
    4. '_' → logprob: -16.875
    5. '_x' → logprob: -16.875
    6. 's' → logprob: -18.625
    7. '_
' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. '```' → logprob: -19.75
    10. '<|end|>' → logprob: -19.875

Token 720: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003888470819219947
    2. ')
' → logprob: -8.125389099121094
    3. ' )' → logprob: -10.000389099121094
    4. '[:' → logprob: -11.500389099121094
    5. ',' → logprob: -11.750389099121094
    6. ')[' → logprob: -11.750389099121094
    7. '[' → logprob: -11.875389099121094
    8. '+' → logprob: -13.250389099121094
    9. ')
' → logprob: -13.375389099121094
    10. ')

' → logprob: -13.500389099121094

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36715367436408997
    2. '[' → logprob: -1.7421536445617676
    3. '<|end|>' → logprob: -2.7421536445617676
    4. '[:' → logprob: -3.9921536445617676
    5. '
' → logprob: -4.117153644561768
    6. 'return' → logprob: -4.492153644561768
    7. '    
' → logprob: -5.492153644561768
    8. ' return' → logprob: -5.867153644561768
    9. '[:]' → logprob: -6.242153644561768
    10. ' ' → logprob: -6.367153644561768

Token 722: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13991887867450714
    2. ' return' → logprob: -2.139918804168701
    3. '   ' → logprob: -4.389918804168701
    4. 'result' → logprob: -8.26491928100586
    5. '[' → logprob: -10.13991928100586
    6. '	return' → logprob: -10.26491928100586
    7. 'sum' → logprob: -10.88991928100586
    8. ' ' → logprob: -11.01491928100586
    9. ')' → logprob: -11.01491928100586
    10. '```' → logprob: -11.13991928100586

Token 723: ' raised' (ID: 15478)
  Prédit: ' raised'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raised' → logprob: -0.42884382605552673
    2. 'raised' → logprob: -1.0538438558578491
    3. 'np' → logprob: -10.17884349822998
    4. ' ' → logprob: -10.42884349822998
    5. ' np' → logprob: -10.80384349822998
    6. 'ra' → logprob: -10.92884349822998
    7. '(' → logprob: -11.67884349822998
    8. ' ' → logprob: -12.05384349822998
    9. 'raise' → logprob: -12.67884349822998
    10. 'Raised' → logprob: -12.80384349822998

Token 724: '_poly' (ID: 99075)
  Prédit: '_poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_poly' → logprob: -0.00019781860464718193
    2. 'poly' → logprob: -8.625197410583496
    3. 'raised' → logprob: -11.625197410583496
    4. 'ed' → logprob: -11.750197410583496
    5. '_prod' → logprob: -14.625197410583496
    6. 'Poly' → logprob: -14.875197410583496
    7. '_pow' → logprob: -16.000198364257812
    8. '_' → logprob: -16.375198364257812
    9. '_pol' → logprob: -16.500198364257812
    10. '_prob' → logprob: -17.125198364257812

Token 725: '.sum' (ID: 35381)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030137820169329643
    2. '()%' → logprob: -3.530137777328491
    3. '(' → logprob: -8.40513801574707
    4. '%' → logprob: -9.28013801574707
    5. '()<' → logprob: -11.03013801574707
    6. '().' → logprob: -11.03013801574707
    7. '()>' → logprob: -11.65513801574707
    8. '()[' → logprob: -11.78013801574707
    9. '()
' → logprob: -12.40513801574707
    10. ' ()' → logprob: -12.78013801574707

Token 727: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6697116494178772
    2. '%' → logprob: -0.7947116494178772
    3. '()' → logprob: -3.7947115898132324
    4. '()%' → logprob: -4.294711589813232
    5. '[:' → logprob: -9.16971206665039
    6. '<|end|>' → logprob: -9.66971206665039
    7. ')' → logprob: -10.41971206665039
    8. '[:]' → logprob: -10.91971206665039
    9. '%A' → logprob: -11.41971206665039
    10. '%B' → logprob: -11.41971206665039

Token 728: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0031777136027812958
    2. ' MOD' → logprob: -5.753177642822266
    3. '_MOD' → logprob: -17.878177642822266
    4. '(M' → logprob: -18.878177642822266
    5. '.MOD' → logprob: -19.503177642822266
    6. ' ' → logprob: -19.878177642822266
    7. ' ' → logprob: -20.503177642822266
    8. 'MO' → logprob: -20.628177642822266
    9. '(' → logprob: -20.628177642822266
    10. '`' → logprob: -20.753177642822266

Token 729: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.00075125927105546
    2. '_MOD' → logprob: -8.125751495361328
    3. 'CONST' → logprob: -8.250751495361328
    4. '_const' → logprob: -8.625751495361328
    5. 'const' → logprob: -11.750751495361328
    6. '_CON' → logprob: -13.375751495361328
    7. '_CONSTANT' → logprob: -13.500751495361328
    8. '_' → logprob: -13.750751495361328
    9. '_VAL' → logprob: -14.375751495361328
    10. '```' → logprob: -15.000751495361328

Token 730: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 731: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7141640186309814
    2. '<|end|>' → logprob: -1.8391640186309814
    3. '\n' → logprob: -2.2141640186309814
    4. ')' → logprob: -2.2141640186309814
    5. '
' → logprob: -2.5891640186309814
    6. '(
' → logprob: -3.8391640186309814
    7. '```' → logprob: -4.589163780212402
    8. '\' → logprob: -5.089163780212402
    9. '#' → logprob: -5.089163780212402
    10. ':' → logprob: -5.589163780212402

Token 732: ' System' (ID: 1219)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02493407391011715
    2. 'answer' → logprob: -4.1499342918396
    3. 'output' → logprob: -5.0249342918396
    4. 'print' → logprob: -6.5249342918396
    5. 'res' → logprob: -7.7749342918396
    6. 'ans' → logprob: -8.024933815002441
    7. 'total' → logprob: -10.399933815002441
    8. '#' → logprob: -11.649933815002441
    9. '
' → logprob: -12.024933815002441
    10. 'results' → logprob: -12.149933815002441

Token 733: 'atic' (ID: 2351)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33671465516090393
    2. 'def' → logprob: -2.336714744567871
    3. '_system' → logprob: -2.961714744567871
    4. 's' → logprob: -4.336714744567871
    5. 'system' → logprob: -4.336714744567871
    6. 'atic' → logprob: -4.461714744567871
    7. '<|end|>' → logprob: -4.711714744567871
    8. '__' → logprob: -4.836714744567871
    9. '```' → logprob: -4.836714744567871
    10. '#' → logprob: -5.211714744567871

Token 734: ' function' (ID: 1114)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04107585921883583
    2. 'print' → logprob: -3.2910759449005127
    3. 'answer' → logprob: -6.166075706481934
    4. 'x' → logprob: -8.291075706481934
    5. 'output' → logprob: -8.416075706481934
    6. ' result' → logprob: -8.791075706481934
    7. 'total' → logprob: -9.041075706481934
    8. 'res' → logprob: -9.166075706481934
    9. '_result' → logprob: -10.291075706481934
    10. 'value' → logprob: -11.416075706481934

Token 735: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4201095402240753
    2. 'result' → logprob: -1.670109510421753
    3. '_result' → logprob: -2.045109510421753
    4. '_' → logprob: -5.420109748840332
    5. '_sum' → logprob: -6.045109748840332
    6. '(' → logprob: -6.170109748840332
    7. 'for' → logprob: -6.170109748840332
    8. '_output' → logprob: -6.295109748840332
    9. ' =' → logprob: -6.545109748840332
    10. ':' → logprob: -7.170109748840332

Token 736: ' type' (ID: 1490)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12220827490091324
    2. ' main' → logprob: -2.4972083568573
    3. 'result' → logprob: -4.247208118438721
    4. 'comb' → logprob: -5.122208118438721
    5. 'com' → logprob: -6.247208118438721
    6. 'range' → logprob: -6.497208118438721
    7. 'print' → logprob: -6.497208118438721
    8. ' calculating' → logprob: -6.747208118438721
    9. 'calculate' → logprob: -6.872208118438721
    10. 'def' → logprob: -7.247208118438721

Token 737: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21296824514865875
    2. '_annotations' → logprob: -2.837968349456787
    3. '_safe' → logprob: -3.462968349456787
    4. '_annotation' → logprob: -3.587968349456787
    5. '_hint' → logprob: -3.962968349456787
    6. '_' → logprob: -3.962968349456787
    7. ':' → logprob: -4.587968349456787
    8. '_counts' → logprob: -5.587968349456787
    9. 'hint' → logprob: -5.962968349456787
    10. '_def' → logprob: -6.337968349456787

Token 738: '2' (ID: 17)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36024895310401917
    2. 'int' → logprob: -2.1102490425109863
    3. 'param' → logprob: -3.2352490425109863
    4. '=int' → logprob: -3.2352490425109863
    5. 'A' → logprob: -3.4852490425109863
    6. 'checking' → logprob: -4.235249042510986
    7. 'annotations' → logprob: -4.860249042510986
    8. '_annotations' → logprob: -4.985249042510986
    9. 'hint' → logprob: -5.485249042510986
    10. '_safe' → logprob: -5.610249042510986

Token 739: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3675724267959595
    2. '_sum' → logprob: -2.11757230758667
    3. '_' → logprob: -2.86757230758667
    4. '_def' → logprob: -3.49257230758667
    5. '_poly' → logprob: -3.99257230758667
    6. '_values' → logprob: -4.61757230758667
    7. ' def' → logprob: -5.11757230758667
    8. '_input' → logprob: -5.24257230758667
    9. '_pol' → logprob: -5.36757230758667
    10. '_counts' → logprob: -5.49257230758667

Token 740: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004528374411165714
    2. '(param' → logprob: -8.500452995300293
    3. '(' → logprob: -9.750452995300293
    4. '
' → logprob: -9.750452995300293
    5. '(
' → logprob: -10.250452995300293
    6. '(def' → logprob: -10.500452995300293
    7. '_def' → logprob: -10.875452995300293
    8. '```' → logprob: -11.250452995300293
    9. ' def' → logprob: -11.375452995300293
    10. '(n' → logprob: -12.125452995300293

Token 741: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.664371848164592e-05
    2. '
' → logprob: -11.375016212463379
    3. ' def' → logprob: -12.375016212463379
    4. '```' → logprob: -15.125016212463379
    5. ':def' → logprob: -15.500016212463379
    6. '_def' → logprob: -15.625016212463379
    7. 'ndef' → logprob: -15.625016212463379
    8. 'de' → logprob: -15.875016212463379
    9. 'import' → logprob: -17.250017166137695
    10. '(def' → logprob: -17.500017166137695

Token 742: ' polynomial' (ID: 113464)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.15474838018417358
    2. 'sum' → logprob: -2.9047484397888184
    3. ' type' → logprob: -3.1547484397888184
    4. 'pol' → logprob: -4.529748439788818
    5. 'two' → logprob: -5.029748439788818
    6. ' sum' → logprob: -5.529748439788818
    7. 'system' → logprob: -6.029748439788818
    8. 'poly' → logprob: -6.029748439788818
    9. 'comb' → logprob: -6.279748439788818
    10. 'range' → logprob: -6.529748439788818

Token 743: '_type' (ID: 3804)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0342223234474659
    2. '_power' → logprob: -3.409222364425659
    3. '_pow' → logprob: -8.284222602844238
    4. '_type' → logprob: -9.659222602844238
    5. '_' → logprob: -10.284222602844238
    6. '_s' → logprob: -10.409222602844238
    7. '_range' → logprob: -10.409222602844238
    8. '_limit' → logprob: -10.784222602844238
    9. '_length' → logprob: -11.034222602844238
    10. '_b' → logprob: -11.284222602844238

Token 744: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28254449367523193
    2. '2' → logprob: -1.407544493675232
    3. '_sum' → logprob: -7.1575446128845215
    4. '_two' → logprob: -7.6575446128845215
    5. '```' → logprob: -9.157544136047363
    6. 'sum' → logprob: -11.032544136047363
    7. '
' → logprob: -12.282544136047363
    8. ' ' → logprob: -13.032544136047363
    9. ' _' → logprob: -13.282544136047363
    10. 'two' → logprob: -13.532544136047363

Token 745: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005003074649721384
    2. '(length' → logprob: -5.880002975463867
    3. '(' → logprob: -7.130002975463867
    4. '(_' → logprob: -7.755002975463867
    5. '_power' → logprob: -7.755002975463867
    6. '_s' → logprob: -8.880002975463867
    7. '_' → logprob: -9.380002975463867
    8. '_pow' → logprob: -9.630002975463867
    9. '_length' → logprob: -9.880002975463867
    10. '(sum' → logprob: -10.630002975463867

Token 746: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.007785008288919926
    2. '(param' → logprob: -5.007784843444824
    3. '(n' → logprob: -8.132784843444824
    4. '(limit' → logprob: -8.132784843444824
    5. '(' → logprob: -8.257784843444824
    6. '(poly' → logprob: -9.882784843444824
    7. '(size' → logprob: -10.507784843444824
    8. '(len' → logprob: -10.507784843444824
    9. '(l' → logprob: -11.007784843444824
    10. '(parameter' → logprob: -11.132784843444824

Token 747: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.005822736769914627
    2. ',' → logprob: -5.380822658538818
    3. '_,' → logprob: -7.255822658538818
    4. 'n' → logprob: -8.380823135375977
    5. '```' → logprob: -9.505823135375977
    6. '_' → logprob: -10.380823135375977
    7. '):
' → logprob: -10.505823135375977
    8. ',n' → logprob: -10.630823135375977
    9. ')' → logprob: -10.880823135375977
    10. ' ,' → logprob: -11.380823135375977

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013774730905424803
    2. ' ,' → logprob: -9.375137329101562
    3. ',
' → logprob: -10.625137329101562
    4. ',param' → logprob: -11.625137329101562
    5. ',length' → logprob: -12.500137329101562
    6. '   ' → logprob: -13.000137329101562
    7. '):' → logprob: -13.375137329101562
    8. '):
' → logprob: -13.500137329101562
    9. ',p' → logprob: -13.500137329101562
    10. ',x' → logprob: -13.875137329101562

Token 749: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0640360414981842
    2. ' limit' → logprob: -2.8140361309051514
    3. 'max' → logprob: -6.939035892486572
    4. 'param' → logprob: -7.314035892486572
    5. ' max' → logprob: -9.06403636932373
    6. ' param' → logprob: -9.43903636932373
    7. 'value' → logprob: -10.43903636932373
    8. 'x' → logprob: -10.56403636932373
    9. 'mod' → logprob: -10.56403636932373
    10. 'type' → logprob: -10.81403636932373

Token 750: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00011808603449026123
    2. 'x' → logprob: -9.250118255615234
    3. '```' → logprob: -11.375118255615234
    4. '=' → logprob: -12.750118255615234
    5. 'param' → logprob: -13.750118255615234
    6. '   ' → logprob: -13.750118255615234
    7. ')' → logprob: -13.750118255615234
    8. ',' → logprob: -13.875118255615234
    9. '):
' → logprob: -14.250118255615234
    10. '=_' → logprob: -14.375118255615234

Token 751: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07212802767753601
    2. '):
' → logprob: -2.6971280574798584
    3. ',' → logprob: -6.197127819061279
    4. '):
' → logprob: -9.072128295898438
    5. ')' → logprob: -11.197128295898438
    6. '   ' → logprob: -11.822128295898438
    7. '):

' → logprob: -11.947128295898438
    8. ' ):' → logprob: -12.322128295898438
    9. ':' → logprob: -12.572128295898438
    10. ' ' → logprob: -14.572128295898438

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015432954765856266
    2. '(' → logprob: -5.140432834625244
    3. ':' → logprob: -5.765432834625244
    4. 'def' → logprob: -6.265432834625244
    5. '(
' → logprob: -6.765432834625244
    6. '[' → logprob: -7.140432834625244
    7. '```' → logprob: -7.265432834625244
    8. 's' → logprob: -8.015433311462402
    9. ':
' → logprob: -8.265433311462402
    10. 'x' → logprob: -8.640433311462402

Token 753: ' acc' (ID: 1259)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1582858562469482
    2. 'result' → logprob: -1.2832858562469482
    3. ' poly' → logprob: -2.2832858562469482
    4. ' res' → logprob: -2.5332858562469482
    5. ' if' → logprob: -3.0332858562469482
    6. 'poly' → logprob: -3.1582858562469482
    7. '   ' → logprob: -3.2832858562469482
    8. 'res' → logprob: -3.7832858562469482
    9. 'if' → logprob: -4.033286094665527
    10. 'def' → logprob: -4.033286094665527

Token 754: '_array' (ID: 8766)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32483458518981934
    2. 'um' → logprob: -1.6998345851898193
    3. ' =' → logprob: -3.4498345851898193
    4. 'umulator' → logprob: -3.4498345851898193
    5. 'umulate' → logprob: -3.5748345851898193
    6. 'umul' → logprob: -6.699834823608398
    7. 'umulative' → logprob: -7.574834823608398
    8. '   ' → logprob: -7.699834823608398
    9. '=np' → logprob: -7.949834823608398
    10. '_array' → logprob: -8.699834823608398

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038197100162506104
    2. ' =' → logprob: -3.2881970405578613
    3. '=np' → logprob: -8.78819751739502
    4. '=
' → logprob: -13.91319751739502
    5. '=[]' → logprob: -14.28819751739502
    6. '[' → logprob: -14.41319751739502
    7. '=zeros' → logprob: -15.66319751739502
    8. '=int' → logprob: -16.163196563720703
    9. '=[' → logprob: -16.288196563720703
    10. ',' → logprob: -16.538196563720703

Token 756: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.003725138260051608
    2. ' np' → logprob: -5.753725051879883
    3. '[np' → logprob: -8.378725051879883
    4. '(np' → logprob: -8.753725051879883
    5. '[' → logprob: -9.503725051879883
    6. 'pol' → logprob: -11.253725051879883
    7. 'poly' → logprob: -11.503725051879883
    8. '   ' → logprob: -11.628725051879883
    9. '0' → logprob: -11.878725051879883
    10. '=np' → logprob: -11.878725051879883

Token 757: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.03375277668237686
    2. 'array' → logprob: -4.158752918243408
    3. 'zeros' → logprob: -4.533752918243408
    4. '.arange' → logprob: -5.533752918243408
    5. '.array' → logprob: -6.408752918243408
    6. '.ones' → logprob: -7.033752918243408
    7. 'empty' → logprob: -8.65875244140625
    8. '.empty' → logprob: -9.40875244140625
    9. ' zeros' → logprob: -10.53375244140625
    10. 'ones' → logprob: -11.28375244140625

Token 758: '(length' (ID: 47037)
  Prédit: '(limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.0005857991054654121
    2. '((' → logprob: -8.000585556030273
    3. '(' → logprob: -8.875585556030273
    4. '(length' → logprob: -9.750585556030273
    5. 'limit' → logprob: -10.375585556030273
    6. '(param' → logprob: -11.000585556030273
    7. '(l' → logprob: -13.250585556030273
    8. '(M' → logprob: -14.750585556030273
    9. '(len' → logprob: -14.875585556030273
    10. ' (' → logprob: -15.250585556030273

Token 759: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.01079277228564024
    2. '_x' → logprob: -4.6357927322387695
    3. '+' → logprob: -7.8857927322387695
    4. '_length' → logprob: -8.76079273223877
    5. '(length' → logprob: -9.63579273223877
    6. '=' → logprob: -9.88579273223877
    7. ')' → logprob: -9.88579273223877
    8. 'param' → logprob: -10.38579273223877
    9. '_limit' → logprob: -10.38579273223877
    10. 'n' → logprob: -10.38579273223877

Token 760: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0342223234474659
    2. ' +' → logprob: -3.409222364425659
    3. ',' → logprob: -7.53422212600708
    4. '+,' → logprob: -11.034222602844238
    5. ')' → logprob: -11.784222602844238
    6. '),' → logprob: -11.909222602844238
    7. ',
' → logprob: -13.159222602844238
    8. '[' → logprob: -13.409222602844238
    9. ' ,' → logprob: -13.409222602844238
    10. '+
' → logprob: -13.409222602844238

Token 761: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35777977108955383
    2. '2' → logprob: -1.4827797412872314
    3. 'limit' → logprob: -3.2327797412872314
    4. '(limit' → logprob: -3.9827797412872314
    5. '3' → logprob: -4.8577799797058105
    6. 'length' → logprob: -6.3577799797058105
    7. ' ' → logprob: -6.4827799797058105
    8. '10' → logprob: -6.7327799797058105
    9. '100' → logprob: -7.2327799797058105
    10. '(' → logprob: -7.3577799797058105

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15532201528549194
    2. '2' → logprob: -2.0303220748901367
    3. 'limit' → logprob: -4.780322074890137
    4. '3' → logprob: -6.405322074890137
    5. ' ' → logprob: -7.405322074890137
    6. '10' → logprob: -7.530322074890137
    7. '101' → logprob: -8.280322074890137
    8. 'param' → logprob: -8.280322074890137
    9. '100' → logprob: -8.655322074890137
    10. '(limit' → logprob: -8.905322074890137

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.217951886355877e-05
    2. ',d' → logprob: -10.500061988830566
    3. ' ,' → logprob: -11.375061988830566
    4. '+' → logprob: -11.500061988830566
    5. 'dtype' → logprob: -12.500061988830566
    6. ')' → logprob: -12.750061988830566
    7. ',np' → logprob: -13.125061988830566
    8. ',
' → logprob: -14.000061988830566
    9. '),' → logprob: -14.125061988830566
    10. ',int' → logprob: -14.250061988830566

Token 764: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.3139544725418091
    2. 'dtype' → logprob: -1.313954472541809
    3. ' np' → logprob: -7.5639543533325195
    4. ' dtype' → logprob: -8.68895435333252
    5. '[np' → logprob: -13.43895435333252
    6. 'int' → logprob: -13.43895435333252
    7. '(np' → logprob: -14.43895435333252
    8. '   ' → logprob: -14.56395435333252
    9. 'd' → logprob: -15.06395435333252
    10. ',np' → logprob: -15.06395435333252

Token 765: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08155975490808487
    2. '.int' → logprob: -2.581559658050537
    3. '64' → logprob: -5.956559658050537
    4. '=int' → logprob: -10.081560134887695
    5. ' int' → logprob: -11.456560134887695
    6. '.uint' → logprob: -12.081560134887695
    7. 'dtype' → logprob: -12.706560134887695
    8. 'uint' → logprob: -12.706560134887695
    9. ',int' → logprob: -12.956560134887695
    10. ']int' → logprob: -13.206560134887695

Token 766: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -13.875000953674316
    3. 'dtype' → logprob: -20.875001907348633
    4. ')' → logprob: -21.125001907348633
    5. '8' → logprob: -21.875001907348633
    6. '=int' → logprob: -22.375001907348633
    7. '32' → logprob: -22.625001907348633
    8. 'c' → logprob: -23.125001907348633
    9. '16' → logprob: -23.250001907348633
    10. 'np' → logprob: -23.375001907348633

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200532615184784
    2. ')
' → logprob: -2.8120052814483643
    3. ')
' → logprob: -11.187005043029785
    4. '   ' → logprob: -11.312005043029785
    5. '[' → logprob: -12.187005043029785
    6. ',' → logprob: -12.937005043029785
    7. ')

' → logprob: -14.062005043029785
    8. ']' → logprob: -14.437005043029785
    9. ' )' → logprob: -14.937005043029785
    10. '),' → logprob: -14.937005043029785

Token 768: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9098467230796814
    2. ' for' → logprob: -1.0348467826843262
    3. '
' → logprob: -1.7848467826843262
    4. '   ' → logprob: -2.909846782684326
    5. '[' → logprob: -5.034846782684326
    6. '```' → logprob: -5.534846782684326
    7. '<|end|>' → logprob: -6.534846782684326
    8. 'def' → logprob: -6.534846782684326
    9. 'acc' → logprob: -6.909846782684326
    10. ')' → logprob: -6.909846782684326

Token 769: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09801312536001205
    2. 'acc' → logprob: -2.473013162612915
    3. '   ' → logprob: -5.848012924194336
    4. 'poly' → logprob: -6.598012924194336
    5. 'coeff' → logprob: -7.348012924194336
    6. 'i' → logprob: -7.348012924194336
    7. 'current' → logprob: -7.973012924194336
    8. 'factor' → logprob: -8.223012924194336
    9. 'pow' → logprob: -8.348012924194336
    10. 'mult' → logprob: -8.348012924194336

Token 770: ' loop' (ID: 11453)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12584760785102844
    2. 'k' → logprob: -2.500847578048706
    3. ' i' → logprob: -4.625847816467285
    4. 'idx' → logprob: -4.750847816467285
    5. 'j' → logprob: -5.500847816467285
    6. 'val' → logprob: -6.125847816467285
    7. 'x' → logprob: -6.125847816467285
    8. 'value' → logprob: -7.000847816467285
    9. 'length' → logprob: -7.250847816467285
    10. ' k' → logprob: -7.375847816467285

Token 771: '_n' (ID: 2170)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8853503465652466
    2. 'i' → logprob: -1.3853503465652466
    3. 'in' → logprob: -1.5103503465652466
    4. ' i' → logprob: -2.510350227355957
    5. '_i' → logprob: -3.760350227355957
    6. '_' → logprob: -5.510350227355957
    7. 'range' → logprob: -6.760350227355957
    8. 'n' → logprob: -7.010350227355957
    9. 'x' → logprob: -7.135350227355957
    10. ' ' → logprob: -7.260350227355957

Token 772: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231856107711792
    2. ' in' → logprob: -0.8981856107711792
    3. '_' → logprob: -10.773185729980469
    4. ' ' → logprob: -11.023185729980469
    5. 'range' → logprob: -12.148185729980469
    6. '1' → logprob: -12.523185729980469
    7. ',' → logprob: -12.773185729980469
    8. 'i' → logprob: -12.898185729980469
    9. ')' → logprob: -13.273185729980469
    10. '```' → logprob: -13.523185729980469

Token 773: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003386806638445705
    2. ' range' → logprob: -8.000338554382324
    3. ')' → logprob: -13.875338554382324
    4. '(range' → logprob: -14.125338554382324
    5. 'length' → logprob: -14.875338554382324
    6. '  ' → logprob: -15.625338554382324
    7. ' ' → logprob: -15.625338554382324
    8. '   ' → logprob: -15.625338554382324
    9. '
' → logprob: -15.750338554382324
    10. '	range' → logprob: -16.00033950805664

Token 774: '(limit' (ID: 112473)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.14356787502765656
    2. '(' → logprob: -2.0185678005218506
    3. '(limit' → logprob: -7.64356803894043
    4. '(len' → logprob: -8.14356803894043
    5. 'length' → logprob: -9.89356803894043
    6. '1' → logprob: -10.39356803894043
    7. '(param' → logprob: -11.01856803894043
    8. '(loop' → logprob: -11.26856803894043
    9. '(l' → logprob: -12.64356803894043
    10. '2' → logprob: -14.01856803894043

Token 775: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0025829162914305925
    2. '+' → logprob: -6.252583026885986
    3. '_n' → logprob: -7.627583026885986
    4. 'x' → logprob: -9.502582550048828
    5. ')' → logprob: -10.502582550048828
    6. '```' → logprob: -11.252582550048828
    7. ' +' → logprob: -11.502582550048828
    8. '_' → logprob: -11.627582550048828
    9. 'n' → logprob: -12.252582550048828
    10. '   ' → logprob: -12.377582550048828

Token 776: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11125659942626953
    2. '):' → logprob: -3.1112565994262695
    3. '):
' → logprob: -3.2362565994262695
    4. ' +' → logprob: -3.8612565994262695
    5. '   ' → logprob: -8.48625659942627
    6. ',' → logprob: -8.98625659942627
    7. ')' → logprob: -10.86125659942627
    8. ':' → logprob: -11.11125659942627
    9. '):
' → logprob: -12.23625659942627
    10. '=' → logprob: -13.11125659942627

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2206183224916458
    2. '   ' → logprob: -1.7206183671951294
    3. '	   ' → logprob: -5.84561824798584
    4. '	acc' → logprob: -5.97061824798584
    5. '```' → logprob: -6.34561824798584
    6. '
' → logprob: -6.59561824798584
    7. ' acc' → logprob: -6.59561824798584
    8. '	' → logprob: -6.59561824798584
    9. '<|end|>' → logprob: -6.84561824798584
    10. 'acc' → logprob: -7.22061824798584

Token 778: ' m' (ID: 284)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6152602434158325
    2. '   ' → logprob: -1.6152602434158325
    3. '       ' → logprob: -1.9902602434158325
    4. 'acc' → logprob: -2.615260124206543
    5. ' for' → logprob: -3.365260124206543
    6. 'for' → logprob: -5.740260124206543
    7. ' ' → logprob: -5.865260124206543
    8. '	acc' → logprob: -6.240260124206543
    9. '    ' → logprob: -6.740260124206543
    10. '
' → logprob: -6.990260124206543

Token 779: '_val' (ID: 13694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.669411301612854
    2. ' =' → logprob: -0.919411301612854
    3. '   ' → logprob: -4.4194111824035645
    4. 'ultip' → logprob: -4.5444111824035645
    5. 'acc' → logprob: -4.5444111824035645
    6. ' ' → logprob: -5.4194111824035645
    7. 'ultiply' → logprob: -5.4194111824035645
    8. 'ax' → logprob: -5.5444111824035645
    9. 'ult' → logprob: -5.6694111824035645
    10. 'odel' → logprob: -5.7944111824035645

Token 780: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20447349548339844
    2. ' =' → logprob: -1.7044734954833984
    3. '+=' → logprob: -6.579473495483398
    4. 'ax' → logprob: -7.704473495483398
    5. ' +=' → logprob: -8.329473495483398
    6. '=np' → logprob: -8.454473495483398
    7. '+' → logprob: -9.204473495483398
    8. ',' → logprob: -9.454473495483398
    9. '   ' → logprob: -9.579473495483398
    10. ']' → logprob: -10.079473495483398

Token 781: ' (' (ID: 350)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.1110830307006836
    2. 'param' → logprob: -1.7360830307006836
    3. 'loop' → logprob: -1.8610830307006836
    4. 'com' → logprob: -2.2360830307006836
    5. 'min' → logprob: -2.6110830307006836
    6. 'length' → logprob: -3.4860830307006836
    7. '(limit' → logprob: -3.4860830307006836
    8. '(com' → logprob: -3.7360830307006836
    9. '(loop' → logprob: -4.111083030700684
    10. '(min' → logprob: -4.111083030700684

Token 782: 'limit' (ID: 19698)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.9124854207038879
    2. 'loop' → logprob: -1.1624853610992432
    3. 'limit' → logprob: -1.6624853610992432
    4. 'length' → logprob: -2.412485361099243
    5. '(loop' → logprob: -6.412485599517822
    6. ' param' → logprob: -6.912485599517822
    7. '(param' → logprob: -7.287485599517822
    8. 'lim' → logprob: -7.412485599517822
    9. '(limit' → logprob: -7.537485599517822
    10. ' loop' → logprob: -7.537485599517822

Token 783: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00492846267297864
    2. '_n' → logprob: -5.3799285888671875
    3. 'x' → logprob: -8.754928588867188
    4. '```' → logprob: -10.129928588867188
    5. 'loop' → logprob: -10.754928588867188
    6. 'n' → logprob: -11.004928588867188
    7. '(loop' → logprob: -11.692428588867188
    8. ')' → logprob: -11.754928588867188
    9. '_y' → logprob: -11.817428588867188
    10. '   ' → logprob: -12.067428588867188

Token 784: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5763165354728699
    2. ' -' → logprob: -0.8263165354728699
    3. ' ' → logprob: -8.951316833496094
    4. '+' → logprob: -9.701316833496094
    5. ')' → logprob: -10.076316833496094
    6. '   ' → logprob: -10.451316833496094
    7. '>>' → logprob: -11.201316833496094
    8. '//' → logprob: -11.451316833496094
    9. '-n' → logprob: -11.451316833496094
    10. '	' → logprob: -11.701316833496094

Token 785: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2941157817840576
    2. 'loop' → logprob: -1.4191157817840576
    3. ' loop' → logprob: -4.669116020202637
    4. 'param' → logprob: -6.169116020202637
    5. ' ' → logprob: -7.544116020202637
    6. '(loop' → logprob: -7.794116020202637
    7. '2' → logprob: -8.544116020202637
    8. '   ' → logprob: -10.044116020202637
    9. ' param' → logprob: -10.106616020202637
    10. '3' → logprob: -10.731616020202637

Token 786: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25602883100509644
    2. 'loop' → logprob: -1.5060288906097412
    3. 'param' → logprob: -6.506028652191162
    4. ' loop' → logprob: -6.506028652191162
    5. '(loop' → logprob: -7.881028652191162
    6. '2' → logprob: -8.50602912902832
    7. ' ' → logprob: -8.63102912902832
    8. '   ' → logprob: -9.81852912902832
    9. '3' → logprob: -10.25602912902832
    10. 'np' → logprob: -10.81852912902832

Token 787: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9312142729759216
    2. ' -' → logprob: -0.9312142729759216
    3. ')' → logprob: -1.5562143325805664
    4. '-loop' → logprob: -8.681214332580566
    5. ')-' → logprob: -9.181214332580566
    6. ' )' → logprob: -9.431214332580566
    7. ' loop' → logprob: -9.431214332580566
    8. '+' → logprob: -9.556214332580566
    9. ',' → logprob: -9.931214332580566
    10. '   ' → logprob: -10.056214332580566

Token 788: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7285536527633667
    2. ' -' → logprob: -1.1035536527633667
    3. ')' → logprob: -2.2285537719726562
    4. '
' → logprob: -4.103553771972656
    5. '+' → logprob: -4.353553771972656
    6. ' //' → logprob: -4.478553771972656
    7. '-loop' → logprob: -4.728553771972656
    8. ' loop' → logprob: -4.978553771972656
    9. '//' → logprob: -5.103553771972656
    10. ',' → logprob: -5.478553771972656

Token 789: ' (' (ID: 350)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0053787799552083015
    2. ' loop' → logprob: -5.255378723144531
    3. '(loop' → logprob: -9.130378723144531
    4. 'param' → logprob: -11.255378723144531
    5. '2' → logprob: -11.505378723144531
    6. 'lo' → logprob: -12.630378723144531
    7. ' ' → logprob: -13.130378723144531
    8. '   ' → logprob: -13.630378723144531
    9. 'np' → logprob: -14.255378723144531
    10. '1' → logprob: -14.505378723144531

Token 790: '2' (ID: 17)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.03810104727745056
    2. ' loop' → logprob: -3.2881009578704834
    3. '(loop' → logprob: -10.038101196289062
    4. 'param' → logprob: -11.663101196289062
    5. ' ' → logprob: -13.288101196289062
    6. ')' → logprob: -13.663101196289062
    7. 'lo' → logprob: -13.788101196289062
    8. '   ' → logprob: -14.163101196289062
    9. ' param' → logprob: -14.663101196289062
    10. 'poly' → logprob: -14.788101196289062

Token 791: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11526329070329666
    2. ' *' → logprob: -2.2402632236480713
    3. ')' → logprob: -6.61526346206665
    4. ' loop' → logprob: -7.61526346206665
    5. 'loop' → logprob: -8.365262985229492
    6. '(loop' → logprob: -8.615262985229492
    7. '**' → logprob: -9.990262985229492
    8. '   ' → logprob: -10.740262985229492
    9. ' ' → logprob: -10.865262985229492
    10. '+' → logprob: -11.115262985229492

Token 792: ' ' (ID: 220)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.0016932693542912602
    2. ' loop' → logprob: -7.001693248748779
    3. '(loop' → logprob: -7.251693248748779
    4. 'param' → logprob: -10.126693725585938
    5. 'length' → logprob: -11.001693725585938
    6. '2' → logprob: -12.501693725585938
    7. ')' → logprob: -12.876693725585938
    8. '
' → logprob: -13.376693725585938
    9. 'len' → logprob: -13.626693725585938
    10. '   ' → logprob: -13.626693725585938

Token 793: '2' (ID: 17)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.00013965457037556916
    2. ' loop' → logprob: -9.375139236450195
    3. '(loop' → logprob: -10.000139236450195
    4. '2' → logprob: -12.625139236450195
    5. 'param' → logprob: -12.625139236450195
    6. 'length' → logprob: -14.000139236450195
    7. '   ' → logprob: -14.875139236450195
    8. '  ' → logprob: -15.250139236450195
    9. '
' → logprob: -15.750139236450195
    10. ')' → logprob: -15.875139236450195

Token 794: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0012326111318543553
    2. ' *' → logprob: -6.751232624053955
    3. 'loop' → logprob: -10.376232147216797
    4. ' loop' → logprob: -10.751232147216797
    5. '(loop' → logprob: -12.001232147216797
    6. ')' → logprob: -13.376232147216797
    7. '```' → logprob: -14.626232147216797
    8. '   ' → logprob: -14.626232147216797
    9. ' ' → logprob: -15.001232147216797
    10. '_loop' → logprob: -15.626232147216797

Token 795: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.000643691688310355
    2. ' loop' → logprob: -7.375643730163574
    3. '(loop' → logprob: -11.000643730163574
    4. 'param' → logprob: -16.000642776489258
    5. 'lo' → logprob: -16.375642776489258
    6. '
' → logprob: -16.500642776489258
    7. '.loop' → logprob: -17.000642776489258
    8. ')' → logprob: -17.250642776489258
    9. 'loopt' → logprob: -17.375642776489258
    10. '*' → logprob: -17.500642776489258

Token 796: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.848420551046729e-05
    2. ')' → logprob: -10.8750581741333
    3. '_' → logprob: -11.2500581741333
    4. '```' → logprob: -11.8750581741333
    5. ' _' → logprob: -12.0000581741333
    6. 'n' → logprob: -12.6250581741333
    7. '_m' → logprob: -13.3750581741333
    8. 's' → logprob: -13.5000581741333
    9. ' ' → logprob: -14.1250581741333
    10. '   ' → logprob: -14.1250581741333

Token 797: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014910540776327252
    2. ')
' → logprob: -6.876491069793701
    3. ')*' → logprob: -8.126490592956543
    4. ' )' → logprob: -9.751490592956543
    5. '   ' → logprob: -10.626490592956543
    6. ')**' → logprob: -11.376490592956543
    7. '+' → logprob: -11.626490592956543
    8. '<|end|>' → logprob: -11.626490592956543
    9. ')#' → logprob: -12.126490592956543
    10. '[' → logprob: -12.251490592956543

Token 798: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7651968598365784
    2. '<|end|>' → logprob: -1.5151968002319336
    3. '
' → logprob: -2.1401968002319336
    4. ')' → logprob: -2.2651968002319336
    5. '   ' → logprob: -3.2651968002319336
    6. ')
' → logprob: -4.140196800231934
    7. ' if' → logprob: -4.890196800231934
    8. ':' → logprob: -5.390196800231934
    9. '+' → logprob: -5.765196800231934
    10. '[' → logprob: -6.140196800231934

Token 799: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3470200300216675
    2. '       ' → logprob: -1.4720200300216675
    3. 'if' (adapté à ' if') → logprob: -2.847020149230957
    4. '<|end|>' → logprob: -5.972020149230957
    5. ' for' → logprob: -6.597020149230957
    6. '   ' → logprob: -7.597020149230957
    7. 'for' → logprob: -7.847020149230957
    8. ' ' → logprob: -8.472020149230957
    9. ')' → logprob: -8.972020149230957
    10. '+' → logprob: -9.472020149230957

Token 800: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6328582167625427
    2. ' m' → logprob: -0.7578582167625427
    3. '0' → logprob: -8.632858276367188
    4. ' ' → logprob: -10.132858276367188
    5. '(m' → logprob: -12.007858276367188
    6. ' not' → logprob: -12.007858276367188
    7. '    ' → logprob: -12.257858276367188
    8. '1' → logprob: -12.882858276367188
    9. ' ' → logprob: -13.007858276367188
    10. '2' → logprob: -13.257858276367188

Token 801: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00025954778539016843
    2. '_' → logprob: -9.125259399414062
    3. '<' → logprob: -9.875259399414062
    4. '>=' → logprob: -10.750259399414062
    5. '>' → logprob: -10.875259399414062
    6. 'val' → logprob: -11.125259399414062
    7. ' <' → logprob: -11.250259399414062
    8. '<=' → logprob: -12.000259399414062
    9. '<m' → logprob: -12.250259399414062
    10. '_m' → logprob: -12.625259399414062

Token 802: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6545001864433289
    2. ' <' → logprob: -0.7795001864433289
    3. '>=' → logprob: -5.0295000076293945
    4. ' >=' → logprob: -5.1545000076293945
    5. '<=' → logprob: -5.4045000076293945
    6. ' <=' → logprob: -5.7795000076293945
    7. '>' → logprob: -6.7795000076293945
    8. ' >' → logprob: -8.154500007629395
    9. '<m' → logprob: -9.904500007629395
    10. ')' → logprob: -10.154500007629395

Token 803: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00040791230276227
    2. ' ' → logprob: -7.875407695770264
    3. '1' → logprob: -12.000408172607422
    4. '   ' → logprob: -12.125408172607422
    5. '-' → logprob: -12.500408172607422
    6. 'param' → logprob: -12.750408172607422
    7. '2' → logprob: -14.000408172607422
    8. '    ' → logprob: -14.000408172607422
    9. 'length' → logprob: -14.000408172607422
    10. '       ' → logprob: -14.187908172607422

Token 804: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025680975522845984
    2. ' ' → logprob: -9.250256538391113
    3. '1' → logprob: -9.875256538391113
    4. '-' → logprob: -10.125256538391113
    5. 'param' → logprob: -11.000256538391113
    6. 'length' → logprob: -11.125256538391113
    7. '2' → logprob: -12.187756538391113
    8. '   ' → logprob: -12.187756538391113
    9. 'loop' → logprob: -12.937756538391113
    10. '```' → logprob: -13.187756538391113

Token 805: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.748201310634613
    2. '           ' → logprob: -1.6232013702392578
    3. '       ' → logprob: -1.7482013702392578
    4. ':
' → logprob: -1.8732013702392578
    5. ',' → logprob: -7.498201370239258
    6. ':return' → logprob: -7.873201370239258
    7. '   ' → logprob: -8.873201370239258
    8. '               ' → logprob: -9.123201370239258
    9. '		' → logprob: -9.248201370239258
    10. ' or' → logprob: -9.623201370239258

Token 806: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2139817476272583
    2. '           ' → logprob: -1.7139817476272583
    3. ':' → logprob: -4.838981628417969
    4. '	       ' → logprob: -6.963981628417969
    5. '	' → logprob: -7.088981628417969
    6. ' break' → logprob: -7.338981628417969
    7. ':
' → logprob: -7.588981628417969
    8. '	break' → logprob: -7.713981628417969
    9. '   ' → logprob: -8.338981628417969
    10. '		' → logprob: -8.713981628417969

Token 807: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10877285152673721
    2. ' break' → logprob: -2.6087727546691895
    3. '           ' → logprob: -3.8587727546691895
    4. '	break' → logprob: -5.2337727546691895
    5. '       ' → logprob: -6.1087727546691895
    6. 'continue' → logprob: -8.108773231506348
    7. '   ' → logprob: -8.858773231506348
    8. '               ' → logprob: -8.983773231506348
    9. '	       ' → logprob: -9.483773231506348
    10. '		' → logprob: -10.108773231506348

Token 808: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019336989149451256
    2. '<|end|>' → logprob: -4.894337177276611
    3. '	' → logprob: -5.019337177276611
    4. '   ' → logprob: -6.519337177276611
    5. '        
' → logprob: -7.394337177276611
    6. '
' → logprob: -7.519337177276611
    7. '	continue' → logprob: -7.769337177276611
    8. '	       ' → logprob: -8.144336700439453
    9. ',' → logprob: -8.394336700439453
    10. '		
' → logprob: -8.519336700439453

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007986692944541574
    2. '<|end|>' → logprob: -7.75079870223999
    3. '
' → logprob: -9.000798225402832
    4. '   ' → logprob: -9.500798225402832
    5. '        
' → logprob: -10.125798225402832
    6. '	' → logprob: -10.500798225402832
    7. ' for' → logprob: -10.625798225402832
    8. '```' → logprob: -11.625798225402832
    9. 'for' → logprob: -11.750798225402832
    10. '           ' → logprob: -12.000798225402832

Token 810: ' two' (ID: 1920)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6917401552200317
    2. ' acc' → logprob: -1.5667401552200317
    3. '   ' → logprob: -1.9417401552200317
    4. '       ' → logprob: -2.316740036010742
    5. ' for' → logprob: -3.566740036010742
    6. 'for' → logprob: -4.691740036010742
    7. '	acc' → logprob: -6.316740036010742
    8. '
' → logprob: -6.691740036010742
    9. '<|end|>' → logprob: -6.941740036010742
    10. ' s' → logprob: -6.941740036010742

Token 811: '_arr' (ID: 25121)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1217014491558075
    2. '*' → logprob: -2.24670147895813
    3. '_val' → logprob: -5.496701240539551
    4. '_loop' → logprob: -7.121701240539551
    5. '*m' → logprob: -7.621701240539551
    6. ' ' → logprob: -7.746701240539551
    7. '**' → logprob: -7.871701240539551
    8. ' **' → logprob: -7.871701240539551
    9. ')' → logprob: -8.37170124053955
    10. '_' → logprob: -8.62170124053955

Token 812: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22724638879299164
    2. '=' → logprob: -1.6022464036941528
    3. '[' → logprob: -6.352246284484863
    4. '=np' → logprob: -10.102246284484863
    5. ' ' → logprob: -11.977246284484863
    6. ']' → logprob: -12.102246284484863
    7. ' [' → logprob: -12.352246284484863
    8. ')' → logprob: -12.477246284484863
    9. '```' → logprob: -12.477246284484863
    10. '[np' → logprob: -12.977246284484863

Token 813: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.17046934366226196
    2. 'com' → logprob: -2.670469284057617
    3. '(np' → logprob: -3.670469284057617
    4. '(' → logprob: -4.170469284057617
    5. '(com' → logprob: -4.670469284057617
    6. 'factor' → logprob: -5.170469284057617
    7. 'pol' → logprob: -5.170469284057617
    8. ' np' → logprob: -5.295469284057617
    9. 'acc' → logprob: -5.670469284057617
    10. '[' → logprob: -5.670469284057617

Token 814: '.arange' (ID: 57220)
  Prédit: '.array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.2121504694223404
    2. '.arange' → logprob: -2.0871505737304688
    3. '.zeros' → logprob: -3.0871505737304688
    4. '.ones' → logprob: -4.587150573730469
    5. '.full' → logprob: -4.837150573730469
    6. 'array' → logprob: -5.837150573730469
    7. '.power' → logprob: -8.712150573730469
    8. '.empty' → logprob: -9.212150573730469
    9. '.asarray' → logprob: -9.962150573730469
    10. '.' → logprob: -10.212150573730469

Token 815: '(m' (ID: 2145)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.2833521366119385
    2. '(m' → logprob: -2.1583521366119385
    3. '(' → logprob: -2.2833521366119385
    4. '(limit' → logprob: -4.033351898193359
    5. '(length' → logprob: -4.658351898193359
    6. 'm' → logprob: -7.658351898193359
    7. '(len' → logprob: -7.658351898193359
    8. 'loop' → logprob: -7.908351898193359
    9. '((' → logprob: -8.78335189819336
    10. 'limit' → logprob: -9.15835189819336

Token 816: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.21339188516139984
    2. '_x' → logprob: -1.963391900062561
    3. 'ax' → logprob: -4.0883917808532715
    4. '0' → logprob: -5.4633917808532715
    5. '_len' → logprob: -5.4633917808532715
    6. '[' → logprob: -5.5883917808532715
    7. ')' → logprob: -5.8383917808532715
    8. '(' → logprob: -5.8383917808532715
    9. '_arr' → logprob: -5.8383917808532715
    10. 'val' → logprob: -6.0883917808532715

Token 817: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8357842564582825
    2. ' +' → logprob: -0.8357842564582825
    3. ',' → logprob: -2.0857841968536377
    4. ')' → logprob: -5.585784435272217
    5. '-' → logprob: -6.585784435272217
    6. ' ,' → logprob: -6.710784435272217
    7. ' -' → logprob: -7.210784435272217
    8. '[' → logprob: -7.710784435272217
    9. '[::-' → logprob: -8.085783958435059
    10. '0' → logprob: -8.460783958435059

Token 818: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008135587559081614
    2. '1' → logprob: -7.6258134841918945
    3. '-' → logprob: -9.125813484191895
    4. ' ' → logprob: -9.250813484191895
    5. 'param' → logprob: -10.125813484191895
    6. '3' → logprob: -11.125813484191895
    7. ',' → logprob: -11.125813484191895
    8. '+' → logprob: -11.625813484191895
    9. '(' → logprob: -11.625813484191895
    10. ' -' → logprob: -12.375813484191895

Token 819: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00031508569372817874
    2. '1' → logprob: -8.750314712524414
    3. '4' → logprob: -9.625314712524414
    4. '3' → logprob: -10.250314712524414
    5. ' ' → logprob: -10.375314712524414
    6. '6' → logprob: -12.375314712524414
    7. 'param' → logprob: -12.500314712524414
    8. '16' → logprob: -13.187814712524414
    9. '10' → logprob: -13.250314712524414
    10. '(' → logprob: -13.500314712524414

Token 820: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4294010400772095
    2. '+' → logprob: -1.0544010400772095
    3. ',' → logprob: -7.67940092086792
    4. ')' → logprob: -8.804401397705078
    5. '[' → logprob: -10.804401397705078
    6. '```' → logprob: -10.804401397705078
    7. '*' → logprob: -11.179401397705078
    8. ' ,' → logprob: -11.304401397705078
    9. '0' → logprob: -12.429401397705078
    10. '   ' → logprob: -12.679401397705078

Token 821: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010513884481042624
    2. '2' → logprob: -6.876051425933838
    3. ' ' → logprob: -11.00105094909668
    4. '+' → logprob: -14.00105094909668
    5. '3' → logprob: -15.00105094909668
    6. '0' → logprob: -15.25105094909668
    7. ' +' → logprob: -15.50105094909668
    8. '(' → logprob: -16.00105094909668
    9. '```' → logprob: -16.93855094909668
    10. '{' → logprob: -17.00105094909668

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5861724831629544e-05
    2. '2' → logprob: -9.875056266784668
    3. ' ' → logprob: -12.375056266784668
    4. '(' → logprob: -16.81255531311035
    5. '3' → logprob: -17.18755531311035
    6. '+' → logprob: -18.00005531311035
    7. '
' → logprob: -18.43755531311035
    8. 'import' → logprob: -18.93755531311035
    9. '   ' → logprob: -19.06255531311035
    10. '```' → logprob: -19.25005531311035

Token 823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5490216612815857
    2. ')' → logprob: -1.2990217208862305
    3. '+' → logprob: -2.1740217208862305
    4. ' +' → logprob: -3.5490217208862305
    5. ',d' → logprob: -6.1740217208862305
    6. ' ,' → logprob: -6.2990217208862305
    7. '[' → logprob: -7.5490217208862305
    8. ')[' → logprob: -7.5490217208862305
    9. '```' → logprob: -7.6740217208862305
    10. ')+' → logprob: -7.9240217208862305

Token 824: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.006217320449650288
    2. ' dtype' → logprob: -5.1312174797058105
    3. 'np' → logprob: -8.256217002868652
    4. '2' → logprob: -11.006217002868652
    5. '(dtype' → logprob: -12.881217002868652
    6. ')' → logprob: -13.006217002868652
    7. ' np' → logprob: -13.256217002868652
    8. '1' → logprob: -13.381217002868652
    9. '.dtype' → logprob: -14.631217002868652
    10. '_dtype' → logprob: -14.631217002868652

Token 825: '=np' (ID: 40593)
  Prédit: '=np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=np' → logprob: -0.001783475512638688
    2. 'np' → logprob: -6.37678337097168
    3. '=' → logprob: -9.87678337097168
    4. '   ' → logprob: -10.87678337097168
    5. '  ' → logprob: -12.75178337097168
    6. ' np' → logprob: -13.25178337097168
    7. '=int' → logprob: -13.50178337097168
    8. ' ' → logprob: -13.75178337097168
    9. ' =' → logprob: -13.75178337097168
    10. '[np' → logprob: -14.25178337097168

Token 826: '.int' (ID: 21499)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038045622408390045
    2. 'np' → logprob: -3.288045644760132
    3. '.int' → logprob: -12.788045883178711
    4. '=np' → logprob: -14.413045883178711
    5. '=int' → logprob: -14.663045883178711
    6. '[int' → logprob: -16.28804588317871
    7. ' int' → logprob: -16.78804588317871
    8. '[np' → logprob: -16.91304588317871
    9. 'uint' → logprob: -17.03804588317871
    10. ' np' → logprob: -17.16304588317871

Token 827: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -2.935296834039036e-06
    2. 'int' → logprob: -12.75000286102295
    3. 'c' → logprob: -18.750003814697266
    4. 'p' → logprob: -19.000003814697266
    5. 'np' → logprob: -20.250003814697266
    6. '6' → logprob: -20.750003814697266
    7. '=int' → logprob: -21.500003814697266
    8. '32' → logprob: -21.500003814697266
    9. '8' → logprob: -22.125003814697266
    10. ')' → logprob: -22.375003814697266

Token 828: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017550260527059436
    2. ')
' → logprob: -6.501755237579346
    3. ',' → logprob: -9.501754760742188
    4. ')[' → logprob: -10.376754760742188
    5. '[' → logprob: -10.751754760742188
    6. ')*' → logprob: -10.876754760742188
    7. '<|end|>' → logprob: -10.876754760742188
    8. '   ' → logprob: -11.376754760742188
    9. '),' → logprob: -11.376754760742188
    10. ' )' → logprob: -11.376754760742188

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12395913153886795
    2. '<|end|>' → logprob: -2.4989590644836426
    3. '   ' → logprob: -4.373959064483643
    4. '[' → logprob: -4.873959064483643
    5. '
' → logprob: -4.998959064483643
    6. ')' → logprob: -5.873959064483643
    7. ' for' → logprob: -6.998959064483643
    8. ',' → logprob: -7.248959064483643
    9. ' ' → logprob: -7.498959064483643
    10. '```' → logprob: -7.873959064483643

Token 830: ' one' (ID: 1001)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -1.0415679216384888
    2. 'for' → logprob: -1.5415679216384888
    3. 'acc' → logprob: -1.7915679216384888
    4. 'factor' → logprob: -2.416567802429199
    5. ' for' → logprob: -3.291567802429199
    6. 'com' → logprob: -3.791567802429199
    7. '       ' → logprob: -4.041567802429199
    8. '   ' → logprob: -4.416567802429199
    9. ' two' → logprob: -4.791567802429199
    10. 'pow' → logprob: -5.041567802429199

Token 831: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.020270437002182007
    2. 's' → logprob: -4.895270347595215
    3. ' =' → logprob: -5.270270347595215
    4. 'arr' → logprob: -6.020270347595215
    5. ')' → logprob: -6.645270347595215
    6. '[' → logprob: -6.770270347595215
    7. '=' → logprob: -7.895270347595215
    8. '_val' → logprob: -8.020270347595215
    9. '<|end|>' → logprob: -8.270270347595215
    10. '[:]' → logprob: -8.645270347595215

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20204129815101624
    2. '=' → logprob: -1.7020412683486938
    3. '[' → logprob: -8.077041625976562
    4. '=np' → logprob: -8.827041625976562
    5. '   ' → logprob: -10.452041625976562
    6. ')' → logprob: -10.952041625976562
    7. '<|end|>' → logprob: -10.952041625976562
    8. '+=' → logprob: -11.202041625976562
    9. '```' → logprob: -11.452041625976562
    10. ',' → logprob: -11.577041625976562

Token 833: ' m' (ID: 284)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.18909670412540436
    2. ' np' → logprob: -1.8140966892242432
    3. '(np' → logprob: -5.439096927642822
    4. 'com' → logprob: -6.939096927642822
    5. 'param' → logprob: -7.064096927642822
    6. '1' → logprob: -7.189096927642822
    7. '(' → logprob: -7.439096927642822
    8. ' param' → logprob: -7.939096927642822
    9. ' (' → logprob: -8.314096450805664
    10. '2' → logprob: -8.439096450805664

Token 834: '_val' (ID: 13694)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17449690401554108
    2. '.arange' → logprob: -2.54949688911438
    3. 'np' → logprob: -3.42449688911438
    4. '=np' → logprob: -3.92449688911438
    5. '(np' → logprob: -5.174497127532959
    6. 'ax' → logprob: -5.174497127532959
    7. '.astype' → logprob: -5.799497127532959
    8. 'arr' → logprob: -5.924497127532959
    9. 'umpy' → logprob: -6.424497127532959
    10. 'um' → logprob: -6.549497127532959

Token 835: ' -' (ID: 533)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6676713824272156
    2. ' //' → logprob: -1.5426714420318604
    3. '[' → logprob: -2.2926714420318604
    4. ' -' → logprob: -3.1676714420318604
    5. '<|end|>' → logprob: -3.6676714420318604
    6. '=' → logprob: -3.9176714420318604
    7. '+' → logprob: -3.9176714420318604
    8. '-' → logprob: -4.042671203613281
    9. ' =' → logprob: -4.542671203613281
    10. 'import' → logprob: -4.917671203613281

Token 836: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12322569638490677
    2. 'two' → logprob: -2.623225688934326
    3. ' ' → logprob: -3.373225688934326
    4. ' two' → logprob: -4.748225688934326
    5. '1' → logprob: -8.873226165771484
    6. '(' → logprob: -9.498226165771484
    7. 'np' → logprob: -9.873226165771484
    8. '   ' → logprob: -10.248226165771484
    9. '(two' → logprob: -10.373226165771484
    10. '  ' → logprob: -10.748226165771484

Token 837: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04399465397000313
    2. 'two' → logprob: -3.293994665145874
    3. ' ' → logprob: -5.293994426727295
    4. ' two' → logprob: -7.543994426727295
    5. 'np' → logprob: -8.793994903564453
    6. '(' → logprob: -9.168994903564453
    7. '(two' → logprob: -9.793994903564453
    8. '1' → logprob: -10.293994903564453
    9. '   ' → logprob: -11.418994903564453
    10. ' np' → logprob: -12.418994903564453

Token 838: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3115289509296417
    2. ' *' → logprob: -1.4365289211273193
    3. '*np' → logprob: -3.9365289211273193
    4. '_arr' → logprob: -5.436529159545898
    5. 'two' → logprob: -5.686529159545898
    6. '<|end|>' → logprob: -6.811529159545898
    7. 'arr' → logprob: -7.936529159545898
    8. ' two' → logprob: -8.311529159545898
    9. '_two' → logprob: -8.686529159545898
    10. '**' → logprob: -8.936529159545898

Token 839: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0009120595059357584
    2. ' two' → logprob: -7.000912189483643
    3. 'np' → logprob: -14.375911712646484
    4. '(two' → logprob: -17.375911712646484
    5. ' np' → logprob: -18.500911712646484
    6. '_two' → logprob: -19.000911712646484
    7. 'Two' → logprob: -19.875911712646484
    8. 'tw' → logprob: -20.375911712646484
    9. '.two' → logprob: -20.625911712646484
    10. '   ' → logprob: -21.250911712646484

Token 840: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003261679667048156
    2. 'arr' → logprob: -8.125326156616211
    3. 'np' → logprob: -11.625326156616211
    4. 'Arr' → logprob: -11.875326156616211
    5. '_array' → logprob: -12.000326156616211
    6. '*np' → logprob: -13.750326156616211
    7. '[' → logprob: -13.875326156616211
    8. '```' → logprob: -14.125326156616211
    9. '<|end|>' → logprob: -14.250326156616211
    10. '*' → logprob: -14.375326156616211

Token 841: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7120081186294556
    2. '+' → logprob: -1.7120081186294556
    3. '<|end|>' → logprob: -1.8370081186294556
    4. '[' → logprob: -2.712007999420166
    5. ' +' → logprob: -3.462007999420166
    6. '   ' → logprob: -3.712007999420166
    7. '       ' → logprob: -4.712007999420166
    8. ')' → logprob: -4.837007999420166
    9. ',' → logprob: -4.837007999420166
    10. '<|end|>' → logprob: -5.462007999420166

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16850224137306213
    2. '<|end|>' → logprob: -1.9185022115707397
    3. '
' → logprob: -5.793502330780029
    4. '[' → logprob: -6.043502330780029
    5. ',' → logprob: -7.043502330780029
    6. '+' → logprob: -7.543502330780029
    7. '<|end|>' → logprob: -8.043501853942871
    8. ')' → logprob: -8.293501853942871
    9. '```' → logprob: -8.668501853942871
    10. '[]' → logprob: -9.293501853942871

Token 843: ' coefficient' (ID: 64656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0038623809814453
    2. 'two' → logprob: -1.7538623809814453
    3. '<|end|>' → logprob: -2.2538623809814453
    4. ' two' → logprob: -2.7538623809814453
    5. ' comb' → logprob: -3.2538623809814453
    6. '   ' → logprob: -3.8788623809814453
    7. ' for' → logprob: -4.003862380981445
    8. 'comb' → logprob: -4.253862380981445
    9. 'count' → logprob: -4.253862380981445
    10. 'sum' → logprob: -4.253862380981445

Token 844: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7619048357009888
    2. ' =' → logprob: -1.2619048357009888
    3. '=' → logprob: -1.3869048357009888
    4. '=np' → logprob: -9.6369047164917
    5. '[' → logprob: -10.2619047164917
    6. '_s' → logprob: -10.2619047164917
    7. '_arr' → logprob: -10.8869047164917
    8. '<|end|>' → logprob: -10.8869047164917
    9. ' s' → logprob: -11.5119047164917
    10. '_' → logprob: -11.8869047164917

Token 845: ' factorial' (ID: 111204)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.18944355845451355
    2. ' combinations' → logprob: -1.939443588256836
    3. '(com' → logprob: -4.314443588256836
    4. 'np' → logprob: -5.564443588256836
    5. 'pol' → logprob: -6.564443588256836
    6. 'comb' → logprob: -6.689443588256836
    7. ' factorial' → logprob: -6.689443588256836
    8. ' np' → logprob: -6.814443588256836
    9. 'factor' → logprob: -7.189443588256836
    10. ' polynomial' → logprob: -7.314443588256836

Token 846: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.04873497411608696
    2. '_inv' → logprob: -3.0487349033355713
    3. '[' → logprob: -10.173734664916992
    4. 's' → logprob: -10.173734664916992
    5. '_' → logprob: -11.423734664916992
    6. '_inverse' → logprob: -11.548734664916992
    7. '[arr' → logprob: -11.548734664916992
    8. '_factor' → logprob: -12.048734664916992
    9. '_const' → logprob: -12.298734664916992
    10. 'arr' → logprob: -12.423734664916992

Token 847: '[' (ID: 58)
  Prédit: '[param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.17476798593997955
    2. '[' → logprob: -1.9247679710388184
    3. '[m' → logprob: -4.299767971038818
    4. '[t' → logprob: -7.799767971038818
    5. 'loop' → logprob: -9.799768447875977
    6. '[
' → logprob: -10.049768447875977
    7. '[[' → logprob: -10.174768447875977
    8. '[np' → logprob: -10.299768447875977
    9. 'param' → logprob: -10.424768447875977
    10. '[temp' → logprob: -10.674768447875977

Token 848: 'one' (ID: 690)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.042742010205984116
    2. 'limit' → logprob: -3.7927420139312744
    3. 'length' → logprob: -4.042741775512695
    4. '[param' → logprob: -7.417741775512695
    5. 'loop' → logprob: -7.667741775512695
    6. 'm' → logprob: -7.917741775512695
    7. ' param' → logprob: -9.042741775512695
    8. '(param' → logprob: -9.667741775512695
    9. 'lim' → logprob: -10.667741775512695
    10. 'n' → logprob: -10.792741775512695

Token 849: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.09464257955551147
    2. '_val' → logprob: -2.7196426391601562
    3. '_n' → logprob: -3.8446426391601562
    4. 'val' → logprob: -6.719642639160156
    5. 'arr' → logprob: -6.844642639160156
    6. 'Arr' → logprob: -8.719642639160156
    7. '[' → logprob: -9.219642639160156
    8. '[val' → logprob: -9.469642639160156
    9. '_m' → logprob: -9.719642639160156
    10. '```' → logprob: -9.844642639160156

Token 850: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8573428392410278
    2. '[param' → logprob: -1.3573428392410278
    3. '+' → logprob: -1.6073428392410278
    4. ' +' → logprob: -2.2323427200317383
    5. ':param' → logprob: -5.232342720031738
    6. '[' → logprob: -5.732342720031738
    7. '[:' → logprob: -7.607342720031738
    8. ']*' → logprob: -7.982342720031738
    9. '   ' → logprob: -8.357342720031738
    10. '[:]' → logprob: -8.857342720031738

Token 851: ' two' (ID: 1920)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.1947706788778305
    2. 'loop' → logprob: -1.8197706937789917
    3. '(loop' → logprob: -5.194770812988281
    4. '(param' → logprob: -6.069770812988281
    5. '[param' → logprob: -6.444770812988281
    6. ' param' → logprob: -6.694770812988281
    7. 'two' → logprob: -6.944770812988281
    8. '2' → logprob: -7.319770812988281
    9. ' loop' → logprob: -7.444770812988281
    10. 'length' → logprob: -7.694770812988281

Token 852: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.009144854731857777
    2. 'arr' → logprob: -4.7591447830200195
    3. 'val' → logprob: -7.8841447830200195
    4. '_val' → logprob: -9.13414478302002
    5. 'Arr' → logprob: -10.38414478302002
    6. 'n' → logprob: -12.25914478302002
    7. 'two' → logprob: -12.75914478302002
    8. '```' → logprob: -12.88414478302002
    9. '_n' → logprob: -14.38414478302002
    10. '	arr' → logprob: -14.88414478302002

Token 853: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005917556118220091
    2. ' ]' → logprob: -8.375592231750488
    3. ']%' → logprob: -9.000592231750488
    4. '[param' → logprob: -9.750592231750488
    5. '[' → logprob: -10.125592231750488
    6. ']*' → logprob: -10.375592231750488
    7. '+' → logprob: -10.625592231750488
    8. '[:' → logprob: -11.000592231750488
    9. '[:]' → logprob: -11.125592231750488
    10. ' +' → logprob: -11.875592231750488

Token 854: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5819950699806213
    2. '[' → logprob: -1.5819950103759766
    3. '<|end|>' → logprob: -2.4569950103759766
    4. '*' → logprob: -2.5819950103759766
    5. '[:]' → logprob: -3.8319950103759766
    6. '%' → logprob: -4.206995010375977
    7. ']' → logprob: -5.081995010375977
    8. '   ' → logprob: -5.331995010375977
    9. '[param' → logprob: -5.706995010375977
    10. '```' → logprob: -5.706995010375977

Token 855: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.01587281934916973
    2. ' factorial' → logprob: -4.640872955322266
    3. 'com' → logprob: -5.140872955322266
    4. '(com' → logprob: -9.140872955322266
    5. 'pow' → logprob: -9.890872955322266
    6. ' combinations' → logprob: -10.890872955322266
    7. 'comb' → logprob: -11.390872955322266
    8. '(' → logprob: -11.390872955322266
    9. ' factor' → logprob: -11.390872955322266
    10. '\
' → logprob: -12.265872955322266

Token 856: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0017067246371880174
    2. 'inv' → logprob: -6.501706600189209
    3. '_arr' → logprob: -8.626707077026367
    4. '[' → logprob: -11.126707077026367
    5. '_inverse' → logprob: -12.751707077026367
    6. 'inverse' → logprob: -13.501707077026367
    7. 'arr' → logprob: -14.001707077026367
    8. '(inv' → logprob: -14.126707077026367
    9. '_inf' → logprob: -14.626707077026367
    10. '
' → logprob: -14.876707077026367

Token 857: '_arr' (ID: 25121)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4864749312400818
    2. '[t' → logprob: -1.3614749908447266
    3. '[param' → logprob: -2.6114749908447266
    4. '[m' → logprob: -3.2364749908447266
    5. '[arr' → logprob: -5.486474990844727
    6. '[:' → logprob: -5.736474990844727
    7. '_arr' → logprob: -5.986474990844727
    8. '[np' → logprob: -6.111474990844727
    9. 'param' → logprob: -7.111474990844727
    10. 'one' → logprob: -7.611474990844727

Token 858: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06377032399177551
    2. '[t' → logprob: -3.063770294189453
    3. '[param' → logprob: -4.688770294189453
    4. '[:' → logprob: -5.438770294189453
    5. '[m' → logprob: -6.813770294189453
    6. '[np' → logprob: -8.938770294189453
    7. '[[' → logprob: -9.313770294189453
    8. '[:,' → logprob: -9.688770294189453
    9. '[(' → logprob: -10.438770294189453
    10. '[...,' → logprob: -10.563770294189453

Token 859: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0648929551243782
    2. '[' → logprob: -3.0648930072784424
    3. 'two' → logprob: -4.189892768859863
    4. '[t' → logprob: -7.564892768859863
    5. ' one' → logprob: -8.439892768859863
    6. '1' → logprob: -9.439892768859863
    7. '   ' → logprob: -10.064892768859863
    8. ']' → logprob: -10.314892768859863
    9. '(one' → logprob: -10.314892768859863
    10. '2' → logprob: -10.564892768859863

Token 860: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.006995969917625189
    2. '[' → logprob: -5.131996154785156
    3. '[arr' → logprob: -8.131996154785156
    4. ']' → logprob: -8.506996154785156
    5. '[:' → logprob: -9.006996154785156
    6. '[val' → logprob: -9.381996154785156
    7. '_val' → logprob: -9.506996154785156
    8. 'Arr' → logprob: -9.881996154785156
    9. '[m' → logprob: -10.506996154785156
    10. '[[' → logprob: -10.881996154785156

Token 861: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6666847467422485
    2. '+' → logprob: -1.2916847467422485
    3. ' +' → logprob: -2.416684627532959
    4. '[' → logprob: -3.041684627532959
    5. '[:' → logprob: -3.041684627532959
    6. ':]' → logprob: -5.041684627532959
    7. '[t' → logprob: -5.166684627532959
    8. '[:]' → logprob: -5.416684627532959
    9. '+t' → logprob: -5.791684627532959
    10. ':' → logprob: -6.041684627532959

Token 862: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13804394006729126
    2. ' %' → logprob: -2.2630438804626465
    3. '[' → logprob: -4.3880438804626465
    4. ' *' → logprob: -4.7630438804626465
    5. '<|end|>' → logprob: -6.5130438804626465
    6. '*' → logprob: -6.7630438804626465
    7. '[]' → logprob: -7.8880438804626465
    8. '[...,' → logprob: -8.263044357299805
    9. '[:]' → logprob: -8.513044357299805
    10. '```' → logprob: -8.888044357299805

Token 863: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2519865334033966
    2. ' MOD' → logprob: -1.5019865036010742
    3. '_MOD' → logprob: -10.001986503601074
    4. '.MOD' → logprob: -12.501986503601074
    5. '```' → logprob: -12.751986503601074
    6. 'mod' → logprob: -13.876986503601074
    7. '`' → logprob: -14.126986503601074
    8. '998' → logprob: -14.251986503601074
    9. '(M' → logprob: -14.626986503601074
    10. ' ' → logprob: -14.751986503601074

Token 864: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.289308100938797
    2. '_const' → logprob: -1.4143080711364746
    3. 'const' → logprob: -4.914308071136475
    4. 'CONST' → logprob: -7.289308071136475
    5. '_MOD' → logprob: -9.789308547973633
    6. '_consts' → logprob: -12.039308547973633
    7. '```' → logprob: -12.039308547973633
    8. '_arr' → logprob: -12.164308547973633
    9. ' const' → logprob: -12.289308547973633
    10. '[' → logprob: -12.289308547973633

Token 865: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14035160839557648
    2. '*' → logprob: -2.1403515338897705
    3. '<|end|>' → logprob: -4.51535177230835
    4. '   ' → logprob: -6.89035177230835
    5. '[' → logprob: -7.39035177230835
    6. '```' → logprob: -8.765351295471191
    7. ')' → logprob: -9.015351295471191
    8. ' ' → logprob: -9.390351295471191
    9. '%' → logprob: -9.765351295471191
    10. '[...,' → logprob: -9.890351295471191

Token 866: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0046515571884810925
    2. ' factorial' → logprob: -5.3796515464782715
    3. 'fact' → logprob: -10.50465202331543
    4. 'pow' → logprob: -14.25465202331543
    5. '   ' → logprob: -14.37965202331543
    6. 'fac' → logprob: -14.62965202331543
    7. '```' → logprob: -14.75465202331543
    8. ' factor' → logprob: -14.87965202331543
    9. 'fert' → logprob: -15.00465202331543
    10. '-factor' → logprob: -16.12965202331543

Token 867: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -6.754368223482743e-05
    2. '_arr' → logprob: -10.625067710876465
    3. 'inv' → logprob: -11.000067710876465
    4. '```' → logprob: -11.125067710876465
    5. '_const' → logprob: -12.000067710876465
    6. 'const' → logprob: -12.625067710876465
    7. '[' → logprob: -14.750067710876465
    8. '_inf' → logprob: -14.750067710876465
    9. '[_' → logprob: -15.250067710876465
    10. '_INV' → logprob: -15.625067710876465

Token 868: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0005769816925749183
    2. 'arr' → logprob: -7.500576972961426
    3. '[arr' → logprob: -11.625576972961426
    4. '```' → logprob: -12.125576972961426
    5. '	arr' → logprob: -12.625576972961426
    6. 'const' → logprob: -13.125576972961426
    7. '[' → logprob: -13.375576972961426
    8. '_const' → logprob: -14.625576972961426
    9. '-arr' → logprob: -14.625576972961426
    10. 'Arr' → logprob: -14.750576972961426

Token 869: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -2.0100624169572257e-05
    2. '[' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. '[np' → logprob: -15.500020027160645
    5. '[
' → logprob: -16.25002098083496
    6. '[to' → logprob: -16.37502098083496
    7. 'two' → logprob: -16.37502098083496
    8. '```' → logprob: -16.75002098083496
    9. '[[' → logprob: -17.00002098083496
    10. '	t' → logprob: -17.00002098083496

Token 870: 'wo' (ID: 1338)
  Prédit: 'wo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wo' → logprob: -0.1657404899597168
    2. 'two' → logprob: -1.9157404899597168
    3. 'w' → logprob: -5.415740489959717
    4. '(two' → logprob: -7.915740489959717
    5. 'one' → logprob: -8.665740966796875
    6. '_two' → logprob: -9.165740966796875
    7. '[' → logprob: -9.290740966796875
    8. '```' → logprob: -9.790740966796875
    9. 'wor' → logprob: -10.415740966796875
    10. ':' → logprob: -10.540740966796875

Token 871: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00011033779446734115
    2. '_val' → logprob: -9.500110626220703
    3. 'arr' → logprob: -10.375110626220703
    4. 'Arr' → logprob: -12.625110626220703
    5. '	arr' → logprob: -15.500110626220703
    6. 'val' → logprob: -15.875110626220703
    7. '```' → logprob: -16.000110626220703
    8. '   ' → logprob: -16.750110626220703
    9. '`' → logprob: -16.750110626220703
    10. '...' → logprob: -16.875110626220703

Token 872: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24332916736602783
    2. '[' → logprob: -1.7433291673660278
    3. '[param' → logprob: -3.8683290481567383
    4. '[:' → logprob: -4.618329048156738
    5. '[::-' → logprob: -5.868329048156738
    6. '[:]' → logprob: -6.118329048156738
    7. '][:' → logprob: -6.993329048156738
    8. '(loop' → logprob: -7.493329048156738
    9. '[np' → logprob: -7.868329048156738
    10. '[m' → logprob: -7.993329048156738

Token 873: ' %' (ID: 1851)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7218387126922607
    2. '%' → logprob: -0.8468387126922607
    3. ' %' → logprob: -3.4718387126922607
    4. '<|end|>' → logprob: -3.7218387126922607
    5. '[np' → logprob: -4.97183895111084
    6. '   ' → logprob: -5.59683895111084
    7. ']' → logprob: -5.59683895111084
    8. ')' → logprob: -5.72183895111084
    9. '[
' → logprob: -6.34683895111084
    10. '       ' → logprob: -6.72183895111084

Token 874: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.07046151161193848
    2. ' MOD' → logprob: -2.6954615116119385
    3. '_MOD' → logprob: -7.570461273193359
    4. ' ' → logprob: -13.32046127319336
    5. ' ' → logprob: -13.44546127319336
    6. '```' → logprob: -13.44546127319336
    7. '.MOD' → logprob: -13.69546127319336
    8. 'mod' → logprob: -13.94546127319336
    9. '(M' → logprob: -14.07046127319336
    10. '`' → logprob: -14.82046127319336

Token 875: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.0004206634475849569
    2. '_MOD' → logprob: -7.875420570373535
    3. 'const' → logprob: -11.000420570373535
    4. '_const' → logprob: -11.625420570373535
    5. 'CONST' → logprob: -11.750420570373535
    6. '_CONSTANT' → logprob: -13.500420570373535
    7. '```' → logprob: -13.500420570373535
    8. ' _' → logprob: -13.500420570373535
    9. '`' → logprob: -14.375420570373535
    10. ''_' → logprob: -14.875420570373535

Token 876: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 877: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.094180166721344
    2. '<|end|>' → logprob: -3.344180107116699
    3. ')' → logprob: -3.719180107116699
    4. '*' → logprob: -4.844180107116699
    5. ']' → logprob: -5.094180107116699
    6. ' *' → logprob: -5.719180107116699
    7. '   ' → logprob: -5.844180107116699
    8. '[
' → logprob: -6.344180107116699
    9. '(loop' → logprob: -6.344180107116699
    10. '```' → logprob: -7.094180107116699

Token 878: ' rest' (ID: 2867)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.04348164051771164
    2. ' acc' → logprob: -3.9184815883636475
    3. '   ' → logprob: -4.418481826782227
    4. '       ' → logprob: -5.543481826782227
    5. 'coeff' → logprob: -5.918481826782227
    6. 'for' → logprob: -6.793481826782227
    7. 'co' → logprob: -6.918481826782227
    8. ' for' → logprob: -7.793481826782227
    9. ' coefficient' → logprob: -7.793481826782227
    10. '	acc' → logprob: -8.168481826782227

Token 879: '_term' (ID: 41867)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.2567645013332367
    2. ' =' → logprob: -1.631764531135559
    3. '=' → logprob: -4.0067644119262695
    4. '_coeff' → logprob: -5.8817644119262695
    5. '_factor' → logprob: -6.0067644119262695
    6. '_coef' → logprob: -6.2567644119262695
    7. '_co' → logprob: -7.0067644119262695
    8. '=np' → logprob: -7.1317644119262695
    9. '_array' → logprob: -7.5067644119262695
    10. 'arr' → logprob: -7.7567644119262695

Token 880: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254907190799713
    2. ' =' → logprob: -1.600490689277649
    3. '[' → logprob: -10.60049057006836
    4. '```' → logprob: -10.85049057006836
    5. '   ' → logprob: -11.35049057006836
    6. '=np' → logprob: -11.85049057006836
    7. 's' → logprob: -12.72549057006836
    8. '*' → logprob: -13.97549057006836
    9. '=
' → logprob: -14.10049057006836
    10. ' ' → logprob: -14.22549057006836

Token 881: ' length' (ID: 5517)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8983844518661499
    2. 'factor' → logprob: -0.8983844518661499
    3. ' factorial' → logprob: -3.0233845710754395
    4. '(com' → logprob: -3.1483845710754395
    5. ' combinations' → logprob: -4.2733845710754395
    6. 'pol' → logprob: -4.5233845710754395
    7. 'np' → logprob: -4.6483845710754395
    8. '(f' → logprob: -4.7733845710754395
    9. '(pol' → logprob: -4.8983845710754395
    10. '(' → logprob: -5.0233845710754395

Token 882: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.684157026233152e-05
    2. '_arr' → logprob: -10.750077247619629
    3. '+' → logprob: -11.500077247619629
    4. '
' → logprob: -11.875077247619629
    5. '```' → logprob: -12.000077247619629
    6. 'arr' → logprob: -12.000077247619629
    7. '_' → logprob: -12.250077247619629
    8. '   ' → logprob: -12.375077247619629
    9. ' -' → logprob: -12.750077247619629
    10. ')' → logprob: -13.125077247619629

Token 883: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17254915833473206
    2. '-' → logprob: -2.297549247741699
    3. '[' → logprob: -3.172549247741699
    4. '<|end|>' → logprob: -4.422549247741699
    5. '<|end|>' → logprob: -6.797549247741699
    6. '-loop' → logprob: -7.172549247741699
    7. '   ' → logprob: -7.422549247741699
    8. '[param' → logprob: -8.2975492477417
    9. '-t' → logprob: -8.7975492477417
    10. ')' → logprob: -9.5475492477417

Token 884: ' one' (ID: 1001)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.52146977186203
    2. '(loop' → logprob: -1.3964698314666748
    3. '(' → logprob: -2.271469831466675
    4. '1' → logprob: -4.271469593048096
    5. '2' → logprob: -4.521469593048096
    6. 'one' → logprob: -4.646469593048096
    7. '(m' → logprob: -5.146469593048096
    8. 'two' → logprob: -5.271469593048096
    9. '(one' → logprob: -5.896469593048096
    10. 'm' → logprob: -6.146469593048096

Token 885: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.097437315271236e-05
    2. 'arr' → logprob: -10.00005054473877
    3. 'Arr' → logprob: -13.12505054473877
    4. '_n' → logprob: -14.00005054473877
    5. '```' → logprob: -14.37505054473877
    6. '_array' → logprob: -14.62505054473877
    7. '_val' → logprob: -14.87505054473877
    8. '	arr' → logprob: -15.37505054473877
    9. '+' → logprob: -15.62505054473877
    10. ')' → logprob: -16.125051498413086

Token 886: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22962476313114166
    2. '-' → logprob: -1.6046247482299805
    3. '[' → logprob: -5.6046247482299805
    4. '<|end|>' → logprob: -8.35462474822998
    5. ')' → logprob: -8.97962474822998
    6. '+' → logprob: -10.47962474822998
    7. '   ' → logprob: -11.22962474822998
    8. ']' → logprob: -11.35462474822998
    9. '<|end|>' → logprob: -11.35462474822998
    10. '[]' → logprob: -11.47962474822998

Token 887: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.02069276198744774
    2. '2' → logprob: -4.020692825317383
    3. ' two' → logprob: -6.770692825317383
    4. '1' → logprob: -7.020692825317383
    5. 'loop' → logprob: -8.770692825317383
    6. ' ' → logprob: -9.270692825317383
    7. '(two' → logprob: -9.270692825317383
    8. 'tw' → logprob: -9.895692825317383
    9. '   ' → logprob: -10.395692825317383
    10. 'np' → logprob: -10.645692825317383

Token 888: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0003850325592793524
    2. 'arr' → logprob: -7.87538480758667
    3. 'Arr' → logprob: -12.875385284423828
    4. '_val' → logprob: -13.875385284423828
    5. '	arr' → logprob: -14.500385284423828
    6. 'two' → logprob: -14.875385284423828
    7. '_two' → logprob: -15.500385284423828
    8. 'arra' → logprob: -16.250385284423828
    9. '_n' → logprob: -17.125385284423828
    10. 'val' → logprob: -17.375385284423828

Token 889: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 890: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2936209738254547
    2. 'loop' → logprob: -1.7936209440231323
    3. '2' → logprob: -2.543621063232422
    4. 'np' → logprob: -5.293621063232422
    5. '(loop' → logprob: -6.543621063232422
    6. ' loop' → logprob: -6.668621063232422
    7. 'two' → logprob: -7.293621063232422
    8. 'co' → logprob: -8.043621063232422
    9. ' ' → logprob: -8.543621063232422
    10. 'm' → logprob: -9.418621063232422

Token 891: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5566388368606567
    2. 'loop' → logprob: -1.4316388368606567
    3. '2' → logprob: -2.056638717651367
    4. 'np' → logprob: -3.681638717651367
    5. '(loop' → logprob: -4.056638717651367
    6. 'co' → logprob: -5.181638717651367
    7. '(' → logprob: -6.056638717651367
    8. 'poly' → logprob: -6.056638717651367
    9. 'two' → logprob: -6.306638717651367
    10. 'm' → logprob: -6.681638717651367

Token 892: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14688265323638916
    2. '*' → logprob: -2.1468825340270996
    3. ')' → logprob: -4.0218825340271
    4. '+' → logprob: -7.5218825340271
    5. '_arr' → logprob: -8.021883010864258
    6. ' +' → logprob: -8.521883010864258
    7. ' ' → logprob: -8.896883010864258
    8. '   ' → logprob: -8.896883010864258
    9. '<|end|>' → logprob: -9.521883010864258
    10. ' ' → logprob: -9.646883010864258

Token 893: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.012366373091936111
    2. 'two' → logprob: -4.51236629486084
    3. '(loop' → logprob: -7.26236629486084
    4. ' loop' → logprob: -8.26236629486084
    5. 'np' → logprob: -8.76236629486084
    6. 'one' → logprob: -9.63736629486084
    7. ')' → logprob: -10.63736629486084
    8. 'co' → logprob: -11.26236629486084
    9. '(two' → logprob: -11.26236629486084
    10. '_loop' → logprob: -11.38736629486084

Token 894: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00013834332639817148
    2. '	n' → logprob: -9.500138282775879
    3. 'n' → logprob: -10.875138282775879
    4. '   ' → logprob: -11.250138282775879
    5. '_val' → logprob: -11.375138282775879
    6. '[' → logprob: -12.500138282775879
    7. '[n' → logprob: -12.625138282775879
    8. '	' → logprob: -13.125138282775879
    9. '\t' → logprob: -13.125138282775879
    10. ')' → logprob: -13.250138282775879

Token 895: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5744718313217163
    2. ')' → logprob: -1.0744718313217163
    3. ')
' → logprob: -3.199471950531006
    4. ']
' → logprob: -3.949471950531006
    5. ')]' → logprob: -4.074471950531006
    6. '])' → logprob: -4.699471950531006
    7. ')])' → logprob: -6.324471950531006
    8. '-' → logprob: -6.574471950531006
    9. '+' → logprob: -6.574471950531006
    10. '[' → logprob: -6.699471950531006

Token 896: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43660712242126465
    2. '1' → logprob: -1.0616071224212646
    3. '3' → logprob: -5.061607360839844
    4. '0' → logprob: -7.311607360839844
    5. ' ' → logprob: -7.311607360839844
    6. '4' → logprob: -8.686607360839844
    7. '```' → logprob: -11.186607360839844
    8. ')' → logprob: -11.686607360839844
    9. '5' → logprob: -12.561607360839844
    10. '   ' → logprob: -12.686607360839844

Token 897: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10883988440036774
    2. '1' → logprob: -2.483839988708496
    3. '3' → logprob: -3.983839988708496
    4. '4' → logprob: -6.983839988708496
    5. '0' → logprob: -8.983839988708496
    6. ' ' → logprob: -11.108839988708496
    7. '5' → logprob: -11.483839988708496
    8. '```' → logprob: -12.233839988708496
    9. '   ' → logprob: -12.983839988708496
    10. '(' → logprob: -13.858839988708496

Token 898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2464793622493744
    2. ']' → logprob: -1.8714793920516968
    3. ')
' → logprob: -3.1214792728424072
    4. ')]' → logprob: -4.621479511260986
    5. '])' → logprob: -5.496479511260986
    6. ']
' → logprob: -5.871479511260986
    7. ')])' → logprob: -6.371479511260986
    8. '   ' → logprob: -6.996479511260986
    9. '       ' → logprob: -8.246479034423828
    10. ')
' → logprob: -8.871479034423828

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7070972323417664
    2. '   ' → logprob: -1.3320972919464111
    3. '<|end|>' → logprob: -2.207097291946411
    4. '[' → logprob: -3.332097291946411
    5. '
' → logprob: -3.332097291946411
    6. ')' → logprob: -3.957097291946411
    7. '```' → logprob: -4.207097053527832
    8. '%' → logprob: -4.707097053527832
    9. ' %' → logprob: -6.332097053527832
    10. ',' → logprob: -6.332097053527832

Token 900: ' valid' (ID: 4529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18692834675312042
    2. ' if' → logprob: -2.3119282722473145
    3. '<|end|>' → logprob: -4.0619282722473145
    4. '   ' → logprob: -4.5619282722473145
    5. '[' → logprob: -4.6869282722473145
    6. '```' → logprob: -4.8119282722473145
    7. ' rest' → logprob: -5.1869282722473145
    8. ' for' → logprob: -5.3119282722473145
    9. 'if' → logprob: -5.3119282722473145
    10. ')' → logprob: -6.1869282722473145

Token 901: '_index' (ID: 7748)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.14157822728157043
    2. '_rest' → logprob: -3.016578197479248
    3. '_indices' → logprob: -3.266578197479248
    4. 'arr' → logprob: -4.516578197479248
    5. ' =' → logprob: -5.391578197479248
    6. '_' → logprob: -5.516578197479248
    7. '_arrays' → logprob: -5.641578197479248
    8. 'rest' → logprob: -6.141578197479248
    9. '_idxs' → logprob: -6.141578197479248
    10. '<|end|>' → logprob: -6.391578197479248

Token 902: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32924216985702515
    2. ' =' → logprob: -1.95424222946167
    3. '[' → logprob: -2.32924222946167
    4. '<=' → logprob: -4.32924222946167
    5. ' <' → logprob: -4.82924222946167
    6. '<' → logprob: -5.32924222946167
    7. ' <=' → logprob: -5.57924222946167
    8. '>=' → logprob: -5.70424222946167
    9. ' >=' → logprob: -6.45424222946167
    10. '```' → logprob: -6.70424222946167

Token 903: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5714325904846191
    2. '(rest' → logprob: -1.0714325904846191
    3. 'np' → logprob: -3.071432590484619
    4. '(np' → logprob: -3.571432590484619
    5. '(' → logprob: -5.321432590484619
    6. '(one' → logprob: -5.696432590484619
    7. 'one' → logprob: -5.946432590484619
    8. ' (' → logprob: -6.571432590484619
    9. ' rest' → logprob: -6.571432590484619
    10. ' np' → logprob: -6.946432590484619

Token 904: '_term' (ID: 41867)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9471006989479065
    2. '_rest' → logprob: -1.4471006393432617
    3. 'rest' → logprob: -2.4471006393432617
    4. ' =' → logprob: -2.8221006393432617
    5. '```' → logprob: -2.9471006393432617
    6. '_' → logprob: -2.9471006393432617
    7. '=' → logprob: -3.8221006393432617
    8. ' rest' → logprob: -3.9471006393432617
    9. '[' → logprob: -4.072100639343262
    10. '_arr' → logprob: -4.572100639343262

Token 905: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.31005531549453735
    2. ' >=' → logprob: -2.0600552558898926
    3. '[' → logprob: -2.4350552558898926
    4. '<=' → logprob: -3.6850552558898926
    5. '=' → logprob: -5.185055255889893
    6. '==' → logprob: -5.435055255889893
    7. ' <=' → logprob: -5.560055255889893
    8. '<' → logprob: -6.060055255889893
    9. ' =' → logprob: -6.560055255889893
    10. ' ==' → logprob: -6.685055255889893

Token 906: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023286080977413803
    2. ' ' → logprob: -8.375232696533203
    3. '1' → logprob: -14.000232696533203
    4. '   ' → logprob: -14.125232696533203
    5. '[' → logprob: -15.750232696533203
    6. 'np' → logprob: -15.750232696533203
    7. '           ' → logprob: -16.875232696533203
    8. '(' → logprob: -17.125232696533203
    9. '```' → logprob: -17.125232696533203
    10. '    ' → logprob: -17.250232696533203

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'np' → logprob: -18.0000057220459
    4. '   ' → logprob: -18.1250057220459
    5. '1' → logprob: -18.7500057220459
    6. '۰' → logprob: -19.0000057220459
    7. '  ' → logprob: -20.0000057220459
    8. 'loop' → logprob: -20.2500057220459
    9. 'zero' → logprob: -20.3750057220459
    10. '000' → logprob: -20.5625057220459

Token 908: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 909: '       ' (ID: 309)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -1.0634703636169434
    2. '<|end|>' → logprob: -1.4384703636169434
    3. '       ' → logprob: -1.6884703636169434
    4. '   ' → logprob: -3.0634703636169434
    5. '	acc' → logprob: -3.1884703636169434
    6. '	valid' → logprob: -3.4384703636169434
    7. '[' → logprob: -3.4384703636169434
    8. ' acc' → logprob: -3.8134703636169434
    9. '```' → logprob: -3.8134703636169434
    10. 'valid' → logprob: -5.063470363616943

Token 910: ' rest' (ID: 2867)
  Prédit: '	acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	acc' → logprob: -0.4022902250289917
    2. 'acc' → logprob: -2.2772903442382812
    3. '   ' → logprob: -2.7772903442382812
    4. ' acc' → logprob: -2.9022903442382812
    5. ' valid' → logprob: -3.4022903442382812
    6. '```' → logprob: -3.7772903442382812
    7. '[' → logprob: -3.9022903442382812
    8. '	valid' → logprob: -4.402290344238281
    9. '+' → logprob: -5.027290344238281
    10. 'valid' → logprob: -5.152290344238281

Token 911: '_term' (ID: 41867)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04229072853922844
    2. '_valid' → logprob: -3.417290687561035
    3. ' =' → logprob: -5.542290687561035
    4. '_indices' → logprob: -6.792290687561035
    5. '=' → logprob: -7.542290687561035
    6. '_arr' → logprob: -7.917290687561035
    7. 'valid' → logprob: -7.917290687561035
    8. '_array' → logprob: -8.292290687561035
    9. '[np' → logprob: -8.417290687561035
    10. '(valid' → logprob: -8.417290687561035

Token 912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3077966570854187
    2. '[' → logprob: -1.8077967166900635
    3. ' =' → logprob: -2.3077967166900635
    4. '*=' → logprob: -8.182796478271484
    5. ' &=' → logprob: -8.307796478271484
    6. '_valid' → logprob: -8.557796478271484
    7. 'valid' → logprob: -8.932796478271484
    8. '[np' → logprob: -9.432796478271484
    9. '=np' → logprob: -9.557796478271484
    10. '       ' → logprob: -9.557796478271484

Token 913: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0033501284196972847
    2. 'np' → logprob: -6.378350257873535
    3. ' rest' → logprob: -6.503350257873535
    4. 'valid' → logprob: -9.878350257873535
    5. ' np' → logprob: -9.878350257873535
    6. '       ' → logprob: -10.378350257873535
    7. '(rest' → logprob: -11.753350257873535
    8. ' valid' → logprob: -13.128350257873535
    9. '   ' → logprob: -14.003350257873535
    10. ' ' → logprob: -14.878350257873535

Token 914: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.000354769523255527
    2. '_rest' → logprob: -8.875354766845703
    3. 'term' → logprob: -9.500354766845703
    4. '[' → logprob: -9.750354766845703
    5. 'rest' → logprob: -9.875354766845703
    6. '_arr' → logprob: -11.500354766845703
    7. '_valid' → logprob: -11.750354766845703
    8. '```' → logprob: -12.625354766845703
    9. '_terms' → logprob: -13.250354766845703
    10. 'valid' → logprob: -13.250354766845703

Token 915: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007233949727378786
    2. '*' → logprob: -8.125723838806152
    3. '.astype' → logprob: -8.750723838806152
    4. '>=' → logprob: -10.125723838806152
    5. '[np' → logprob: -10.125723838806152
    6. 'valid' → logprob: -10.875723838806152
    7. '[:' → logprob: -10.875723838806152
    8. '.clip' → logprob: -11.125723838806152
    9. '[
' → logprob: -11.250723838806152
    10. '=' → logprob: -11.375723838806152

Token 916: 'valid' (ID: 3197)
  Prédit: 'valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.00026896485360339284
    2. ' valid' → logprob: -8.375268936157227
    3. '(valid' → logprob: -10.500268936157227
    4. '
' → logprob: -12.000268936157227
    5. ':' → logprob: -13.375268936157227
    6. '	valid' → logprob: -14.000268936157227
    7. '   ' → logprob: -14.375268936157227
    8. '>' → logprob: -14.875268936157227
    9. '0' → logprob: -15.375268936157227
    10. '...' → logprob: -15.375268936157227

Token 917: '_index' (ID: 7748)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5464192032814026
    2. '(valid' → logprob: -1.2964191436767578
    3. '_valid' → logprob: -2.046419143676758
    4. '0' → logprob: -5.046419143676758
    5. ' valid' → logprob: -5.296419143676758
    6. '_mask' → logprob: -6.921419143676758
    7. '1' → logprob: -6.921419143676758
    8. '_index' → logprob: -7.046419143676758
    9. '.valid' → logprob: -7.171419143676758
    10. '
' → logprob: -7.671419143676758

Token 918: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12750785052776337
    2. ']
' → logprob: -2.1275079250335693
    3. '[' → logprob: -8.252508163452148
    4. '       ' → logprob: -9.627508163452148
    5. '][' → logprob: -9.627508163452148
    6. ']

' → logprob: -10.252508163452148
    7. '<|end|>' → logprob: -10.502508163452148
    8. ' ]' → logprob: -10.877508163452148
    9. '][:' → logprob: -11.127508163452148
    10. 'valid' → logprob: -11.252508163452148

Token 919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5910888314247131
    2. '<|end|>' → logprob: -1.3410887718200684
    3. '[' → logprob: -2.3410887718200684
    4. '   ' → logprob: -3.7160887718200684
    5. ',' → logprob: -4.216088771820068
    6. '	acc' → logprob: -4.466088771820068
    7. '```' → logprob: -4.716088771820068
    8. ')' → logprob: -4.966088771820068
    9. '	valid' → logprob: -5.341088771820068
    10. '\t' → logprob: -6.466088771820068

Token 920: ' coef' (ID: 107584)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.013750425539910793
    2. 'coeff' → logprob: -5.3887505531311035
    3. '       ' → logprob: -5.5137505531311035
    4. 'co' → logprob: -6.6387505531311035
    5. 'for' → logprob: -6.8887505531311035
    6. 'if' → logprob: -6.8887505531311035
    7. '   ' → logprob: -7.6387505531311035
    8. 'indices' → logprob: -7.8887505531311035
    9. '```' → logprob: -8.888750076293945
    10. 'coef' (adapté à ' coef') → logprob: -9.263750076293945

Token 921: '_valid' (ID: 23321)
  Prédit: 'icient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'icient' → logprob: -1.0830390453338623
    2. 'icients' → logprob: -1.0830390453338623
    3. 's' → logprob: -1.2080390453338623
    4. '_array' → logprob: -4.333039283752441
    5. 'cient' → logprob: -4.833039283752441
    6. '_arr' → logprob: -7.083039283752441
    7. '```' → logprob: -7.583039283752441
    8. 'ient' → logprob: -8.333039283752441
    9. 'icent' → logprob: -8.333039283752441
    10. 'iciente' → logprob: -8.458039283752441

Token 922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24594759941101074
    2. 's' → logprob: -2.1209475994110107
    3. ' =' → logprob: -2.7459475994110107
    4. '[' → logprob: -3.8709475994110107
    5. '_arr' → logprob: -4.87094783782959
    6. '```' → logprob: -6.87094783782959
    7. '_coef' → logprob: -6.87094783782959
    8. '_array' → logprob: -7.12094783782959
    9. 'arr' → logprob: -7.99594783782959
    10. ']' → logprob: -8.12094783782959

Token 923: ' coefficient' (ID: 64656)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.01601923443377018
    2. 'factor' → logprob: -5.016019344329834
    3. ' coefficient' → logprob: -5.391019344329834
    4. 'com' → logprob: -6.516019344329834
    5. 'coeff' → logprob: -6.516019344329834
    6. 'coef' → logprob: -7.266019344329834
    7. ' factorial' → logprob: -7.891019344329834
    8. '(co' → logprob: -8.266018867492676
    9. 'np' → logprob: -8.641018867492676
    10. 'arr' → logprob: -10.141018867492676

Token 924: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001835141738411039
    2. 'valid' → logprob: -10.25018310546875
    3. '```' → logprob: -10.50018310546875
    4. '[
' → logprob: -11.00018310546875
    5. '=' → logprob: -11.25018310546875
    6. '[:' → logprob: -11.25018310546875
    7. '[[' → logprob: -11.25018310546875
    8. '*' → logprob: -11.25018310546875
    9. '_valid' → logprob: -11.50018310546875
    10. '[np' → logprob: -11.75018310546875

Token 925: 'valid' (ID: 3197)
  Prédit: 'valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.00010068230039905757
    2. ' valid' → logprob: -9.250101089477539
    3. '
' → logprob: -12.875101089477539
    4. '(valid' → logprob: -13.500101089477539
    5. '	valid' → logprob: -15.375101089477539
    6. 'input' → logprob: -16.75010108947754
    7. '   ' → logprob: -16.87510108947754
    8. '[' → logprob: -17.00010108947754
    9. '...' → logprob: -17.37510108947754
    10. '.valid' → logprob: -17.87510108947754

Token 926: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.005534573458135128
    2. '_n' → logprob: -6.630534648895264
    3. 'n' → logprob: -7.005534648895264
    4. '_valid' → logprob: -7.255534648895264
    5. 'valid' → logprob: -7.505534648895264
    6. '_val' → logprob: -8.130534172058105
    7. 'val' → logprob: -8.380534172058105
    8. 'arr' → logprob: -8.380534172058105
    9. 'Index' → logprob: -8.380534172058105
    10. 'index' → logprob: -8.505534172058105

Token 927: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008897828869521618
    2. '[' → logprob: -5.38389778137207
    3. ']
' → logprob: -5.75889778137207
    4. ' ]' → logprob: -7.50889778137207
    5. ']*' → logprob: -8.75889778137207
    6. '%' → logprob: -9.38389778137207
    7. '[
' → logprob: -9.50889778137207
    8. '][' → logprob: -9.63389778137207
    9. '       ' → logprob: -10.00889778137207
    10. '   ' → logprob: -10.75889778137207

Token 928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2560291886329651
    2. '```' → logprob: -1.8810291290283203
    3. '   ' → logprob: -3.3810291290283203
    4. '[' → logprob: -3.8810291290283203
    5. '<|end|>' → logprob: -5.38102912902832
    6. ',' → logprob: -6.13102912902832
    7. 'rest' → logprob: -6.38102912902832
    8. '``' → logprob: -6.38102912902832
    9. ' rest' → logprob: -6.50602912902832
    10. '	acc' → logprob: -6.88102912902832

Token 929: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.001532355323433876
    2. ' acc' → logprob: -7.626532554626465
    3. '       ' → logprob: -8.126532554626465
    4. '   ' → logprob: -8.626532554626465
    5. 'rest' → logprob: -8.751532554626465
    6. 'coeff' → logprob: -9.126532554626465
    7. 'coef' → logprob: -9.376532554626465
    8. '```' → logprob: -10.501532554626465
    9. 'for' → logprob: -10.751532554626465
    10. 'temp' → logprob: -10.751532554626465

Token 930: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0014964108122512698
    2. '[' → logprob: -6.626496315002441
    3. '_' → logprob: -9.751496315002441
    4. '_arr' → logprob: -10.126496315002441
    5. '_arrays' → logprob: -10.876496315002441
    6. '_valid' → logprob: -11.251496315002441
    7. 'array' → logprob: -12.001496315002441
    8. '   ' → logprob: -12.251496315002441
    9. '[
' → logprob: -12.501496315002441
    10. '_acc' → logprob: -12.876496315002441

Token 931: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06175769120454788
    2. '+=' → logprob: -3.061757802963257
    3. '[:' → logprob: -4.686757564544678
    4. ' +=' → logprob: -6.436757564544678
    5. '[:]' → logprob: -7.311757564544678
    6. '```' → logprob: -7.436757564544678
    7. '[
' → logprob: -8.561758041381836
    8. '[...]' → logprob: -8.811758041381836
    9. '[np' → logprob: -8.936758041381836
    10. '+' → logprob: -8.936758041381836

Token 932: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.1902749389410019
    2. 'loop' → logprob: -1.815274953842163
    3. 'valid' → logprob: -4.815274715423584
    4. '0' → logprob: -7.815274715423584
    5. 'one' → logprob: -7.815274715423584
    6. ':' → logprob: -7.815274715423584
    7. ':]' → logprob: -8.440275192260742
    8. ']' → logprob: -8.815275192260742
    9. ' rest' → logprob: -9.315275192260742
    10. '[' → logprob: -9.315275192260742

Token 933: '_term' (ID: 41867)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.2265440821647644
    2. '_term' → logprob: -1.7265441417694092
    3. '_n' → logprob: -3.976544141769409
    4. 'valid' → logprob: -5.85154390335083
    5. ' valid' → logprob: -7.10154390335083
    6. '_index' → logprob: -7.22654390335083
    7. '+' → logprob: -7.72654390335083
    8. '```' → logprob: -8.101544380187988
    9. '   ' → logprob: -9.101544380187988
    10. '	valid' → logprob: -9.101544380187988

Token 934: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10291583091020584
    2. ']+=' → logprob: -2.3529157638549805
    3. '[' → logprob: -6.1029157638549805
    4. '+=' → logprob: -8.22791576385498
    5. ' ]' → logprob: -9.10291576385498
    6. '+' → logprob: -10.35291576385498
    7. ']+' → logprob: -11.10291576385498
    8. ' +=' → logprob: -11.47791576385498
    9. '+]' → logprob: -11.72791576385498
    10. '   ' → logprob: -11.85291576385498

Token 935: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012218468822538853
    2. '[' → logprob: -4.887218475341797
    3. ']+=' → logprob: -5.512218475341797
    4. ' +=' → logprob: -7.637218475341797
    5. '[
' → logprob: -10.762218475341797
    6. '%=' → logprob: -11.137218475341797
    7. '=' → logprob: -11.137218475341797
    8. '+' → logprob: -11.137218475341797
    9. '```' → logprob: -12.262218475341797
    10. '[:' → logprob: -12.637218475341797

Token 936: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.0011130700586363673
    2. ' coef' → logprob: -7.251112937927246
    3. '(co' → logprob: -8.001112937927246
    4. '(' → logprob: -10.376112937927246
    5. 'co' → logprob: -11.376112937927246
    6. 'poly' → logprob: -11.751112937927246
    7. 'coe' → logprob: -12.626112937927246
    8. 'coeff' → logprob: -13.126112937927246
    9. '   ' → logprob: -13.626112937927246
    10. '1' → logprob: -13.751112937927246

Token 937: '_valid' (ID: 23321)
  Prédit: 'icient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icient' → logprob: -0.37329983711242676
    2. 'cient' → logprob: -1.4982998371124268
    3. '_valid' → logprob: -2.4982998371124268
    4. 'fficient' → logprob: -5.373299598693848
    5. 'fic' → logprob: -7.248299598693848
    6. 'icients' → logprob: -8.748299598693848
    7. 'icent' → logprob: -8.998299598693848
    8. 'ient' → logprob: -9.623299598693848
    9. ' cient' → logprob: -10.123299598693848
    10. '```' → logprob: -11.373299598693848

Token 938: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 939: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.686237633228302
    2. '<|end|>' → logprob: -1.0612375736236572
    3. '%' → logprob: -2.9362375736236572
    4. '```' → logprob: -3.3112375736236572
    5. ' 
' → logprob: -3.8112375736236572
    6. '[' → logprob: -4.561237812042236
    7. '       ' → logprob: -4.561237812042236
    8. '  
' → logprob: -5.561237812042236
    9. '[
' → logprob: -5.936237812042236
    10. '   ' → logprob: -6.561237812042236

Token 940: ' acc' (ID: 1259)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6481675505638123
    2. '
' → logprob: -0.8981675505638123
    3. '   ' → logprob: -3.898167610168457
    4. '<|end|>' → logprob: -4.523167610168457
    5. '%
' → logprob: -4.773167610168457
    6. '```' → logprob: -4.898167610168457
    7. '\n' → logprob: -5.273167610168457
    8. ' 
' → logprob: -5.523167610168457
    9. ' ' → logprob: -5.648167610168457
    10. '  
' → logprob: -6.398167610168457

Token 941: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.000283265660982579
    2. '_' → logprob: -8.500283241271973
    3. '_arr' → logprob: -9.875283241271973
    4. '_arrays' → logprob: -12.125283241271973
    5. ' _' → logprob: -12.625283241271973
    6. '```' → logprob: -13.125283241271973
    7. '[_' → logprob: -13.375283241271973
    8. '[' → logprob: -13.625283241271973
    9. '_ar' → logprob: -13.750283241271973
    10. ')_' → logprob: -13.750283241271973

Token 942: ' %=' (ID: 117035)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7586297392845154
    2. '%=' → logprob: -0.8836297392845154
    3. ' %=' → logprob: -2.25862979888916
    4. '[' → logprob: -4.88362979888916
    5. '[:]' → logprob: -5.75862979888916
    6. ' %' → logprob: -6.13362979888916
    7. '```' → logprob: -8.00862979888916
    8. '<|end|>' → logprob: -8.38362979888916
    9. '[%' → logprob: -9.25862979888916
    10. '=' → logprob: -9.50862979888916

Token 943: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.639096970204264e-05
    2. ' MOD' → logprob: -9.250096321105957
    3. '998' → logprob: -16.250097274780273
    4. '_MOD' → logprob: -17.250097274780273
    5. '(M' → logprob: -18.000097274780273
    6. '.MOD' → logprob: -18.375097274780273
    7. ' ' → logprob: -20.375097274780273
    8. '999' → logprob: -20.625097274780273
    9. '(mod' → logprob: -20.875097274780273
    10. '(' → logprob: -20.875097274780273

Token 944: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.00016468366084154695
    2. 'CONST' → logprob: -9.000164985656738
    3. 'const' → logprob: -10.250164985656738
    4. '_MOD' → logprob: -12.750164985656738
    5. '_const' → logprob: -13.875164985656738
    6. '```' → logprob: -14.000164985656738
    7. '_CONSTANT' → logprob: -15.250164985656738
    8. ' const' → logprob: -15.375164985656738
    9. ''_' → logprob: -15.875164985656738
    10. 'Const' → logprob: -16.125164031982422

Token 945: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 946: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 948: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.048588961362838745
    2. ' acc' → logprob: -3.048588991165161
    3. '(acc' → logprob: -13.423588752746582
    4. '	acc' → logprob: -17.4235897064209
    5. 'ac' → logprob: -17.6735897064209
    6. 'np' → logprob: -17.9235897064209
    7. 'arr' → logprob: -18.7985897064209
    8. ' ' → logprob: -18.9235897064209
    9. '   ' → logprob: -19.0485897064209
    10. ' np' → logprob: -19.1735897064209

Token 949: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0009193199803121388
    2. 'np' → logprob: -7.750919342041016
    3. ' acc' → logprob: -8.125919342041016
    4. 'com' → logprob: -9.750919342041016
    5. 'param' → logprob: -10.375919342041016
    6. '(acc' → logprob: -10.375919342041016
    7. 'pol' → logprob: -10.500919342041016
    8. '   ' → logprob: -11.750919342041016
    9. 'poly' → logprob: -11.750919342041016
    10. 'factor' → logprob: -12.250919342041016

Token 950: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.2664456789934775e-06
    2. 'array' → logprob: -14.250000953674316
    3. '_arr' → logprob: -15.000000953674316
    4. '_' → logprob: -16.625001907348633
    5. 'Array' → logprob: -17.000001907348633
    6. 'rray' → logprob: -17.625001907348633
    7. '_ARRAY' → logprob: -17.625001907348633
    8. '_arrays' → logprob: -17.875001907348633
    9. 'arr' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 951: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21626201272010803
    2. '%' → logprob: -2.841262102127075
    3. '[' → logprob: -3.216262102127075
    4. '[:' → logprob: -3.716262102127075
    5. '<|end|>' → logprob: -3.716262102127075
    6. ')%' → logprob: -3.966262102127075
    7. ' %' → logprob: -4.841261863708496
    8. ' *' → logprob: -5.466261863708496
    9. '+' → logprob: -6.216261863708496
    10. '%)' → logprob: -6.341261863708496

Token 952: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.005120496265590191
    2. ' combinations' → logprob: -5.380120277404785
    3. 'comb' → logprob: -8.255120277404785
    4. 'factor' → logprob: -9.255120277404785
    5. '(com' → logprob: -9.380120277404785
    6. ' factorial' → logprob: -11.005120277404785
    7. ' com' → logprob: -11.880120277404785
    8. ' combin' → logprob: -12.130120277404785
    9. '   ' → logprob: -12.380120277404785
    10. 'con' → logprob: -12.755120277404785

Token 953: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.01508368831127882
    2. '_arr' → logprob: -5.0150837898254395
    3. '[param' → logprob: -5.0150837898254395
    4. ')' → logprob: -7.7650837898254395
    5. 'arr' → logprob: -8.265083312988281
    6. 'param' → logprob: -8.265083312988281
    7. '```' → logprob: -8.515083312988281
    8. 'n' → logprob: -8.890083312988281
    9. '[:' → logprob: -9.390083312988281
    10. ',param' → logprob: -9.890083312988281

Token 954: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07349374890327454
    2. ').' → logprob: -3.323493719100952
    3. ')[' → logprob: -3.573493719100952
    4. '[' → logprob: -6.323493957519531
    5. '[:' → logprob: -6.448493957519531
    6. ')%' → logprob: -6.573493957519531
    7. ')**' → logprob: -7.573493957519531
    8. '**' → logprob: -8.323493957519531
    9. '[::-' → logprob: -8.448493957519531
    10. ')...' → logprob: -8.823493957519531

Token 955: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.2940857708454132
    2. 'param' → logprob: -1.9190857410430908
    3. ' MOD' → logprob: -2.669085741043091
    4. 'factor' → logprob: -3.919085741043091
    5. ' param' → logprob: -4.79408597946167
    6. 'np' → logprob: -6.04408597946167
    7. ' factorial' → logprob: -6.04408597946167
    8. ' np' → logprob: -6.91908597946167
    9. '[param' → logprob: -6.91908597946167
    10. '(param' → logprob: -7.04408597946167

Token 956: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.0019192411564290524
    2. '_const' → logprob: -7.001919269561768
    3. 'const' → logprob: -8.12691879272461
    4. '_' → logprob: -8.87691879272461
    5. '_ARRAY' → logprob: -9.25191879272461
    6. '_MOD' → logprob: -9.50191879272461
    7. '[_' → logprob: -9.50191879272461
    8. '_)' → logprob: -9.75191879272461
    9. 'CONST' → logprob: -9.87691879272461
    10. '[' → logprob: -10.12691879272461

Token 957: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017289044335484505
    2. ').' → logprob: -4.392289161682129
    3. ')[' → logprob: -5.392289161682129
    4. ')%' → logprob: -10.017289161682129
    5. '   ' → logprob: -10.142289161682129
    6. ')
' → logprob: -10.767289161682129
    7. '**' → logprob: -11.017289161682129
    8. ')**' → logprob: -11.017289161682129
    9. ')...' → logprob: -11.517289161682129
    10. '[' → logprob: -11.642289161682129

Token 958: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -4.961759259458631e-06
    2. ' sum' → logprob: -13.250004768371582
    3. '```' → logprob: -13.875004768371582
    4. 'tolist' → logprob: -14.125004768371582
    5. 'astype' → logprob: -14.750004768371582
    6. 'dot' → logprob: -14.875004768371582
    7. 'c' → logprob: -15.625004768371582
    8. '.sum' → logprob: -15.750004768371582
    9. 'copy' → logprob: -16.3750057220459
    10. 'r' → logprob: -16.3750057220459

Token 959: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04042978584766388
    2. '(' → logprob: -3.2904298305511475
    3. '<|end|>' → logprob: -6.915429592132568
    4. '(
' → logprob: -7.790429592132568
    5. ')' → logprob: -8.165430068969727
    6. '()
' → logprob: -8.915430068969727
    7. '()%' → logprob: -9.165430068969727
    8. '```' → logprob: -9.415430068969727
    9. '())' → logprob: -9.790430068969727
    10. '[' → logprob: -9.915430068969727

Token 960: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02329043485224247
    2. ' MOD' → logprob: -3.7732903957366943
    3. '_MOD' → logprob: -10.023290634155273
    4. '.MOD' → logprob: -14.773290634155273
    5. '(M' → logprob: -15.273290634155273
    6. ' ' → logprob: -17.398290634155273
    7. 'mod' → logprob: -18.273290634155273
    8. '(mod' → logprob: -18.898290634155273
    9. '(Mod' → logprob: -19.273290634155273
    10. '_mod' → logprob: -20.148290634155273

Token 962: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -5.200166469876422e-06
    2. '_const' → logprob: -12.750004768371582
    3. '_' → logprob: -14.375004768371582
    4. '_MOD' → logprob: -14.625004768371582
    5. 'CONST' → logprob: -15.125004768371582
    6. '_CON' → logprob: -15.250004768371582
    7. 'const' → logprob: -15.500004768371582
    8. '_CONSTANT' → logprob: -16.2500057220459
    9. ' const' → logprob: -16.7500057220459
    10. ' _' → logprob: -16.7500057220459

Token 963: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 964: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7585157155990601
    2. '<|end|>' → logprob: -0.8835157155990601
    3. '(' → logprob: -3.0085158348083496
    4. '
' → logprob: -3.6335158348083496
    5. '#' → logprob: -4.00851583480835
    6. '```' → logprob: -4.13351583480835
    7. '(
' → logprob: -6.00851583480835
    8. '[' → logprob: -7.00851583480835
    9. 'def' → logprob: -7.13351583480835
    10. ':' → logprob: -7.13351583480835

Token 965: ' System' (ID: 1219)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08672600984573364
    2. 'answer' → logprob: -2.836725950241089
    3. 'res' → logprob: -4.461726188659668
    4. 'def' → logprob: -5.211726188659668
    5. 'ans' → logprob: -6.086726188659668
    6. 'print' → logprob: -6.336726188659668
    7. 'output' → logprob: -6.461726188659668
    8. '#' → logprob: -6.961726188659668
    9. 'param' → logprob: -8.336726188659668
    10. 'for' → logprob: -8.711726188659668

Token 966: 'atic' (ID: 2351)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2989203631877899
    2. 'def' → logprob: -1.7989203929901123
    3. '<|end|>' → logprob: -2.7989203929901123
    4. '<|end|>' → logprob: -5.423920154571533
    5. '```' → logprob: -5.798920154571533
    6. 'import' → logprob: -6.048920154571533
    7. '#' → logprob: -6.298920154571533
    8. '[' → logprob: -6.923920154571533
    9. ':' → logprob: -7.111420154571533
    10. '(' → logprob: -7.111420154571533

Token 967: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055875714868307114
    2. 'pol' → logprob: -3.555875778198242
    3. 'result' → logprob: -4.055875778198242
    4. 'poly' → logprob: -6.305875778198242
    5. '#' → logprob: -6.430875778198242
    6. 'x' → logprob: -6.805875778198242
    7. 'print' → logprob: -6.930875778198242
    8. '_result' → logprob: -7.305875778198242
    9. 'type' → logprob: -7.555875778198242
    10. '```' → logprob: -7.930875778198242

Token 968: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011320249177515507
    2. 'for' → logprob: -4.886320114135742
    3. '_for' → logprob: -6.136320114135742
    4. '(' → logprob: -7.761320114135742
    5. '(
' → logprob: -8.636320114135742
    6. '_def' → logprob: -8.761320114135742
    7. '_poly' → logprob: -9.011320114135742
    8. ' for' → logprob: -9.011320114135742
    9. '_' → logprob: -9.261320114135742
    10. '_pol' → logprob: -9.511320114135742

Token 969: ' type' (ID: 1490)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.01499974075704813
    2. 'main' → logprob: -4.764999866485596
    3. 'type' → logprob: -5.389999866485596
    4. 'poly' → logprob: -7.889999866485596
    5. ' polynomial' → logprob: -8.014999389648438
    6. 'param' → logprob: -8.014999389648438
    7. 'the' → logprob: -9.014999389648438
    8. 'def' → logprob: -9.264999389648438
    9. 'range' → logprob: -9.639999389648438
    10. ' pol' → logprob: -10.014999389648438

Token 970: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08210524171590805
    2. '1' → logprob: -3.0821051597595215
    3. '3' → logprob: -3.4571051597595215
    4. 'def' → logprob: -6.7071051597595215
    5. '_' → logprob: -9.33210563659668
    6. '0' → logprob: -9.45710563659668
    7. '#' → logprob: -11.08210563659668
    8. '```' → logprob: -11.45710563659668
    9. '
' → logprob: -11.58210563659668
    10. ' ' → logprob: -11.83210563659668

Token 971: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.049109239131212234
    2. '1' → logprob: -3.6741092205047607
    3. '3' → logprob: -3.7991092205047607
    4. 'def' → logprob: -8.92410945892334
    5. ' ' → logprob: -11.92410945892334
    6. '0' → logprob: -11.92410945892334
    7. '```' → logprob: -11.92410945892334
    8. '(' → logprob: -12.92410945892334
    9. '#' → logprob: -13.79910945892334
    10. '_' → logprob: -14.29910945892334

Token 972: ' sum' (ID: 4215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01856415532529354
    2. '_sum' → logprob: -4.268564224243164
    3. '```' → logprob: -5.518564224243164
    4. '_def' → logprob: -8.518564224243164
    5. '
' → logprob: -9.143564224243164
    6. '``' → logprob: -10.018564224243164
    7. ' def' → logprob: -11.018564224243164
    8. 'sum' → logprob: -11.643564224243164
    9. '`' → logprob: -14.768564224243164
    10. '\' → logprob: -14.768564224243164

Token 973: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.670925358776003e-05
    2. '
' → logprob: -10.250066757202148
    3. '```' → logprob: -10.750066757202148
    4. '_def' → logprob: -12.250066757202148
    5. ' def' → logprob: -13.125066757202148
    6. ':def' → logprob: -14.000066757202148
    7. '(def' → logprob: -14.250066757202148
    8. 'ndef' → logprob: -14.875066757202148
    9. '``' → logprob: -15.000066757202148
    10. ':' → logprob: -15.125066757202148

Token 974: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.875000953674316
    3. '
' → logprob: -15.750000953674316
    4. ' def' → logprob: -17.875
    5. 'ndef' → logprob: -18.125
    6. 'de' → logprob: -18.125
    7. '``' → logprob: -19.625
    8. ':def' → logprob: -19.875
    9. 'd' → logprob: -20.125
    10. 'import' → logprob: -20.625

Token 975: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.47438758611679077
    2. ' polynomial' → logprob: -0.9743875861167908
    3. ' pol' → logprob: -9.099387168884277
    4. 'poly' → logprob: -9.349387168884277
    5. '_pol' → logprob: -10.349387168884277
    6. 'def' → logprob: -10.474387168884277
    7. 'system' → logprob: -11.099387168884277
    8. ' polym' → logprob: -11.974387168884277
    9. 'Polynomial' → logprob: -12.724387168884277
    10. 'type' → logprob: -12.974387168884277

Token 976: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.9504606825648807e-05
    2. '_sum' → logprob: -10.875019073486328
    3. '```' → logprob: -15.625019073486328
    4. 'type' → logprob: -16.375019073486328
    5. '_typ' → logprob: -17.500019073486328
    6. '_power' → logprob: -17.875019073486328
    7. '_t' → logprob: -18.125019073486328
    8. '#' → logprob: -18.125019073486328
    9. '_' → logprob: -18.250019073486328
    10. 'sum' → logprob: -18.500019073486328

Token 977: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3135063946247101
    2. '2' → logprob: -1.3135063648223877
    3. '_' → logprob: -8.438506126403809
    4. '1' → logprob: -11.188506126403809
    5. '```' → logprob: -11.563506126403809
    6. 'def' → logprob: -13.063506126403809
    7. '_type' → logprob: -14.688506126403809
    8. '`' → logprob: -15.063506126403809
    9. '_three' → logprob: -15.313506126403809
    10. ' ' → logprob: -15.313506126403809

Token 978: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.8889261304575484e-06
    2. '_s' → logprob: -13.500003814697266
    3. '_' → logprob: -14.875003814697266
    4. '_array' → logprob: -15.125003814697266
    5. ' _' → logprob: -15.250003814697266
    6. '```' → logprob: -15.375003814697266
    7. '_length' → logprob: -16.000003814697266
    8. '##_' → logprob: -16.125003814697266
    9. '_suffix' → logprob: -16.500003814697266
    10. '\' → logprob: -16.625003814697266

Token 979: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.00024870390188880265
    2. '(param' → logprob: -8.500248908996582
    3. '(' → logprob: -10.500248908996582
    4. '(len' → logprob: -12.375248908996582
    5. '(l' → logprob: -13.000248908996582
    6. '(n' → logprob: -13.250248908996582
    7. '[length' → logprob: -13.250248908996582
    8. '(size' → logprob: -13.625248908996582
    9. ',length' → logprob: -13.625248908996582
    10. '(parameter' → logprob: -13.875248908996582

Token 980: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.5928495486150496e-05
    2. '```' → logprob: -11.125016212463379
    3. '_' → logprob: -14.625016212463379
    4. ' _' → logprob: -15.500016212463379
    5. '_x' → logprob: -16.000015258789062
    6. '_p' → logprob: -16.875015258789062
    7. 'n' → logprob: -17.125015258789062
    8. '_a' → logprob: -17.250015258789062
    9. '_s' → logprob: -17.250015258789062
    10. '=_' → logprob: -17.375015258789062

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005713827558793128
    2. ',length' → logprob: -7.500571250915527
    3. '(length' → logprob: -11.375571250915527
    4. ' ,' → logprob: -12.875571250915527
    5. 'length' → logprob: -13.375571250915527
    6. ',param' → logprob: -13.875571250915527
    7. ',
' → logprob: -14.875571250915527
    8. '[length' → logprob: -15.125571250915527
    9. '```' → logprob: -15.125571250915527
    10. '   ' → logprob: -16.000572204589844

Token 982: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2019563466310501
    2. ' limit' → logprob: -1.7019563913345337
    3. 'param' → logprob: -7.826956272125244
    4. ' param' → logprob: -9.451956748962402
    5. '(limit' → logprob: -11.451956748962402
    6. 'x' → logprob: -11.826956748962402
    7. '   ' → logprob: -12.076956748962402
    8. '    ' → logprob: -12.326956748962402
    9. '
' → logprob: -12.326956748962402
    10. 'lim' → logprob: -12.451956748962402

Token 983: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0003184233792126179
    2. '_n' → logprob: -8.25031852722168
    3. '```' → logprob: -10.50031852722168
    4. '_' → logprob: -11.12531852722168
    5. ',' → logprob: -11.87531852722168
    6. '_,' → logprob: -12.75031852722168
    7. ' _' → logprob: -13.62531852722168
    8. ')' → logprob: -14.12531852722168
    9. ')_' → logprob: -14.25031852722168
    10. ',_' → logprob: -14.62531852722168

Token 984: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5765854120254517
    2. '):' → logprob: -0.8265854120254517
    3. '):
' → logprob: -7.951585292816162
    4. ',' → logprob: -8.45158576965332
    5. ')' → logprob: -10.70158576965332
    6. '):

' → logprob: -10.82658576965332
    7. '   ' → logprob: -10.95158576965332
    8. ':' → logprob: -11.82658576965332
    9. '(limit' → logprob: -12.70158576965332
    10. '(length' → logprob: -12.82658576965332

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007251288276165724
    2. ' acc' → logprob: -5.757251262664795
    3. '```' → logprob: -6.132251262664795
    4. ' def' → logprob: -7.257251262664795
    5. 'acc' → logprob: -7.507251262664795
    6. ' ind' → logprob: -8.632251739501953
    7. 'def' → logprob: -8.882251739501953
    8. ' np' → logprob: -9.382251739501953
    9. ' indent' → logprob: -9.882251739501953
    10. ' indentation' → logprob: -10.382251739501953

Token 986: ' if' (ID: 538)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.07975686341524124
    2. ' acc' → logprob: -3.07975697517395
    3. 'result' → logprob: -3.70475697517395
    4. '   ' → logprob: -5.704756736755371
    5. 'res' → logprob: -6.704756736755371
    6. ' result' → logprob: -7.329756736755371
    7. 'def' → logprob: -7.579756736755371
    8. 'total' → logprob: -9.329756736755371
    9. '
' → logprob: -9.579756736755371
    10. 'arr' → logprob: -10.329756736755371

Token 987: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.18816056847572327
    2. 'param' → logprob: -2.5631606578826904
    3. ' limit' → logprob: -2.6881606578826904
    4. 'length' → logprob: -4.313160419464111
    5. ' param' → logprob: -4.563160419464111
    6. ' length' → logprob: -6.688160419464111
    7. 'not' → logprob: -7.063160419464111
    8. ' not' → logprob: -8.68816089630127
    9. '(limit' → logprob: -9.06316089630127
    10. 'x' → logprob: -9.31316089630127

Token 988: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.5312253832817078
    2. '_n' → logprob: -0.9062253832817078
    3. '_' → logprob: -5.281225204467773
    4. '_length' → logprob: -6.781225204467773
    5. 'length' → logprob: -8.031225204467773
    6. ' _' → logprob: -8.281225204467773
    7. '_param' → logprob: -8.531225204467773
    8. '_val' → logprob: -8.531225204467773
    9. '```' → logprob: -9.531225204467773
    10. '_len' → logprob: -9.656225204467773

Token 989: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49365562200546265
    2. '==' → logprob: -1.4936556816101074
    3. ' <=' → logprob: -2.2436556816101074
    4. '<=' → logprob: -3.4936556816101074
    5. ' <' → logprob: -3.8686556816101074
    6. ' >' → logprob: -5.993655681610107
    7. '<' → logprob: -6.118655681610107
    8. '>' → logprob: -6.368655681610107
    9. '[' → logprob: -7.118655681610107
    10. '=' → logprob: -8.74365520477295

Token 990: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002681304467841983
    2. '3' → logprob: -9.00026798248291
    3. '```' → logprob: -9.62526798248291
    4. '=' → logprob: -10.50026798248291
    5. ' ' → logprob: -10.50026798248291
    6. '==' → logprob: -11.12526798248291
    7. '
' → logprob: -12.37526798248291
    8. '4' → logprob: -13.62526798248291
    9. '1' → logprob: -13.75026798248291
    10. '8' → logprob: -15.37526798248291

Token 991: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026403870433568954
    2. '3' → logprob: -3.6514039039611816
    3. '4' → logprob: -9.776403427124023
    4. '6' → logprob: -10.776403427124023
    5. '1' → logprob: -11.776403427124023
    6. ' ' → logprob: -12.276403427124023
    7. '```' → logprob: -12.776403427124023
    8. '0' → logprob: -13.026403427124023
    9. '==' → logprob: -13.651403427124023
    10. '8' → logprob: -13.776403427124023

Token 992: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026679571717977524
    2. ' ==' → logprob: -3.651679515838623
    3. '!=' → logprob: -8.401679992675781
    4. '```' → logprob: -9.401679992675781
    5. ' !=' → logprob: -10.901679992675781
    6. '=' → logprob: -11.026679992675781
    7. '()==' → logprob: -11.526679992675781
    8. '==
' → logprob: -11.776679992675781
    9. ')==' → logprob: -12.151679992675781
    10. ':' → logprob: -12.276679992675781

Token 993: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009850997477769852
    2. ' ' → logprob: -5.259850978851318
    3. '1' → logprob: -5.384850978851318
    4. '==' → logprob: -11.134851455688477
    5. ' ==' → logprob: -12.884851455688477
    6. '2' → logprob: -13.384851455688477
    7. '=' → logprob: -14.384851455688477
    8. '   ' → logprob: -14.509851455688477
    9. '```' → logprob: -14.884851455688477
    10. '[' → logprob: -15.759851455688477

Token 994: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01832260563969612
    2. '1' → logprob: -4.018322467803955
    3. '=' → logprob: -9.393322944641113
    4. ' ' → logprob: -9.893322944641113
    5. '==' → logprob: -10.518322944641113
    6. '```' → logprob: -12.018322944641113
    7. '2' → logprob: -12.268322944641113
    8. '[' → logprob: -14.393322944641113
    9. '==
' → logprob: -15.893322944641113
    10. '!=' → logprob: -16.643321990966797

Token 995: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12770554423332214
    2. ':
' → logprob: -2.1277055740356445
    3. '       ' → logprob: -8.127705574035645
    4. ':return' → logprob: -8.877705574035645
    5. '   ' → logprob: -9.127705574035645
    6. '):
' → logprob: -9.752705574035645
    7. ' and' → logprob: -10.127705574035645
    8. '==' → logprob: -10.502705574035645
    9. '<|end|>' → logprob: -10.502705574035645
    10. '():
' → logprob: -11.002705574035645

Token 996: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28426316380500793
    2. '       ' → logprob: -1.4092631340026855
    3. ' return' → logprob: -6.2842631340026855
    4. '```' → logprob: -6.9092631340026855
    5. ' x' → logprob: -10.409263610839844
    6. ' result' → logprob: -10.784263610839844
    7. ' for' → logprob: -10.784263610839844
    8. ' n' → logprob: -11.409263610839844
    9. 'return' → logprob: -11.409263610839844
    10. '   ' → logprob: -11.471763610839844

Token 997: ' return' (ID: 622)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.6819292902946472
    2. 'return' (adapté à ' return') → logprob: -1.056929349899292
    3. '   ' → logprob: -2.431929349899292
    4. ' limit' → logprob: -3.431929349899292
    5. ' return' → logprob: -3.931929349899292
    6. 'result' → logprob: -5.431929111480713
    7. 'x' → logprob: -7.306929111480713
    8. 'answer' → logprob: -8.306929588317871
    9. 'length' → logprob: -8.431929588317871
    10. ' result' → logprob: -8.556929588317871

Token 998: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35073986649513245
    2. ' ' → logprob: -1.22573983669281
    3. ' (' → logprob: -7.3507399559021
    4. ' np' → logprob: -7.4757399559021
    5. ' None' → logprob: -8.100739479064941
    6. 'np' → logprob: -8.975739479064941
    7. '(pol' → logprob: -9.100739479064941
    8. 'None' → logprob: -9.225739479064941
    9. '(' → logprob: -9.225739479064941
    10. 'pol' → logprob: -9.975739479064941

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018928002566099167
    2. '(' → logprob: -4.643928050994873
    3. '(pol' → logprob: -5.018928050994873
    4. 'pol' → logprob: -7.018928050994873
    5. 'np' → logprob: -7.518928050994873
    6. '(np' → logprob: -7.643928050994873
    7. '1' → logprob: -8.143927574157715
    8. 'pow' → logprob: -9.893927574157715
    9. '(poly' → logprob: -10.018927574157715
    10. '(n' → logprob: -10.518927574157715

Token 1000: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8068799376487732
    2. '   ' → logprob: -1.056879997253418
    3. '<|end|>' → logprob: -1.931879997253418
    4. '\n' → logprob: -3.931879997253418
    5. ')' → logprob: -4.056879997253418
    6. '+' → logprob: -4.681879997253418
    7. '    
' → logprob: -5.806879997253418
    8. '\' → logprob: -6.681879997253418
    9. ' ' → logprob: -6.681879997253418
    10. '	' → logprob: -6.681879997253418

Token 1001: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07414058595895767
    2. '
' → logprob: -2.6991405487060547
    3. '    
' → logprob: -6.199140548706055
    4. '  
' → logprob: -7.324140548706055
    5. ' ' → logprob: -8.324140548706055
    6. 'if' → logprob: -8.824140548706055
    7. ' 
' → logprob: -8.949140548706055
    8. '```' → logprob: -9.074140548706055
    9. 'return' → logprob: -9.324140548706055
    10. '*' → logprob: -9.449140548706055

Token 1002: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1555817127227783
    2. 'res' → logprob: -1.5305817127227783
    3. 'half' → logprob: -1.6555817127227783
    4. 'acc' → logprob: -3.2805817127227783
    5. 'total' → logprob: -3.7805817127227783
    6. 'mid' → logprob: -3.9055817127227783
    7. '   ' → logprob: -3.9055817127227783
    8. 'left' → logprob: -4.155581474304199
    9. 'two' → logprob: -4.280581474304199
    10. 'offset' → logprob: -4.530581474304199

Token 1003: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.022336697205901146
    2. 'param' → logprob: -4.147336483001709
    3. ' limit' → logprob: -5.147336483001709
    4. ' param' → logprob: -8.272336959838867
    5. 'length' → logprob: -8.772336959838867
    6. 'not' → logprob: -10.647336959838867
    7. '(limit' → logprob: -12.272336959838867
    8. 'input' → logprob: -12.397336959838867
    9. 'lim' → logprob: -12.522336959838867
    10. 'len' → logprob: -13.022336959838867

Token 1004: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.676981345459353e-06
    2. '```' → logprob: -13.500005722045898
    3. '_const' → logprob: -14.000005722045898
    4. '_limit' → logprob: -14.125005722045898
    5. '_val' → logprob: -14.125005722045898
    6. '_value' → logprob: -14.625005722045898
    7. 'const' → logprob: -14.875005722045898
    8. '_' → logprob: -15.500005722045898
    9. 'x' → logprob: -15.625005722045898
    10. '=' → logprob: -15.875005722045898

Token 1005: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6402804255485535
    2. ' <' → logprob: -1.3902804851531982
    3. '<=' → logprob: -2.6402804851531982
    4. ' ==' → logprob: -3.2652804851531982
    5. '<' → logprob: -3.5152804851531982
    6. ' >' → logprob: -3.7652804851531982
    7. '==' → logprob: -4.265280246734619
    8. '%' → logprob: -4.390280246734619
    9. ' %' → logprob: -4.515280246734619
    10. ' ' → logprob: -4.515280246734619

Token 1006: ' length' (ID: 5517)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9450604319572449
    2. 'length' → logprob: -1.0700604915618896
    3. 'param' → logprob: -1.8200604915618896
    4. '2' → logprob: -2.9450604915618896
    5. '0' → logprob: -3.9450604915618896
    6. ' ' → logprob: -4.5700602531433105
    7. ' length' → logprob: -4.8200602531433105
    8. ' param' → logprob: -4.9450602531433105
    9. 'limit' → logprob: -5.1950602531433105
    10. '3' → logprob: -6.4450602531433105

Token 1007: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -12.500006675720215
    3. 'n' → logprob: -13.500006675720215
    4. '_' → logprob: -14.500006675720215
    5. '_x' → logprob: -15.500006675720215
    6. '   ' → logprob: -15.500006675720215
    7. '_
' → logprob: -15.875006675720215
    8. '
' → logprob: -15.875006675720215
    9. ')' → logprob: -16.12500762939453
    10. '+' → logprob: -16.50000762939453

Token 1008: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1311684548854828
    2. ':
' → logprob: -2.3811683654785156
    3. ' -' → logprob: -5.006168365478516
    4. '-' → logprob: -5.006168365478516
    5. '+' → logprob: -5.381168365478516
    6. '   ' → logprob: -5.506168365478516
    7. ' +' → logprob: -6.006168365478516
    8. ' and' → logprob: -6.006168365478516
    9. '       ' → logprob: -6.631168365478516
    10. 'and' → logprob: -7.881168365478516

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14658001065254211
    2. '   ' → logprob: -2.1465799808502197
    3. ' return' → logprob: -4.021580219268799
    4. '
' → logprob: -7.396580219268799
    5. 'return' → logprob: -7.771580219268799
    6. ':
' → logprob: -8.89657974243164
    7. '	return' → logprob: -9.02157974243164
    8. '```' → logprob: -10.14657974243164
    9. ' ' → logprob: -10.77157974243164
    10. '	' → logprob: -10.89657974243164

Token 1010: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02189057320356369
    2. ' return' → logprob: -4.521890640258789
    3. '   ' → logprob: -4.771890640258789
    4. '0' → logprob: -6.521890640258789
    5. '       ' → logprob: -7.271890640258789
    6. '
' → logprob: -9.896890640258789
    7. '	return' → logprob: -10.271890640258789
    8. 'limit' → logprob: -10.521890640258789
    9. '```' → logprob: -11.396890640258789
    10. 'param' → logprob: -12.146890640258789

Token 1011: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00177942612208426
    2. '(pol' → logprob: -7.501779556274414
    3. 'pol' → logprob: -7.626779556274414
    4. '(' → logprob: -7.876779556274414
    5. ' ' → logprob: -8.251779556274414
    6. 'pow' → logprob: -10.876779556274414
    7. '1' → logprob: -11.126779556274414
    8. 'param' → logprob: -11.876779556274414
    9. '(param' → logprob: -12.001779556274414
    10. ' (' → logprob: -12.001779556274414

Token 1012: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001454955490771681
    2. '(' → logprob: -9.50014591217041
    3. 'pow' → logprob: -11.12514591217041
    4. 'pol' → logprob: -11.37514591217041
    5. '1' → logprob: -11.87514591217041
    6. 'length' → logprob: -12.00014591217041
    7. '(pol' → logprob: -12.00014591217041
    8. 'param' → logprob: -12.12514591217041
    9. 'limit' → logprob: -12.62514591217041
    10. '(param' → logprob: -12.75014591217041

Token 1013: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10093788057565689
    2. '
' → logprob: -2.350937843322754
    3. '```' → logprob: -8.100937843322754
    4. '    
' → logprob: -8.350937843322754
    5. '<|end|>' → logprob: -9.725937843322754
    6. '  
' → logprob: -10.600937843322754
    7. 'def' → logprob: -10.725937843322754
    8. ' 
' → logprob: -11.475937843322754
    9. '	
' → logprob: -11.475937843322754
    10. '	return' → logprob: -12.100937843322754

Token 1014: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018447594717144966
    2. '
' → logprob: -4.268447399139404
    3. '```' → logprob: -5.768447399139404
    4. 'return' → logprob: -7.518447399139404
    5. 'result' → logprob: -8.143447875976562
    6. '    
' → logprob: -9.393447875976562
    7. 'def' → logprob: -9.768447875976562
    8. 'if' → logprob: -10.143447875976562
    9. 'ret' → logprob: -10.893447875976562
    10. 'res' → logprob: -11.018447875976562

Token 1015: ' valid' (ID: 4529)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7012671828269958
    2. 'res' → logprob: -1.8262672424316406
    3. 'return' → logprob: -2.3262672424316406
    4. 'half' → logprob: -3.2012672424316406
    5. 'acc' → logprob: -3.4512672424316406
    6. 'rest' → logprob: -3.4512672424316406
    7. 'coef' → logprob: -3.9512672424316406
    8. 'total' → logprob: -4.076267242431641
    9. 'answer' → logprob: -4.451267242431641
    10. 'ans' → logprob: -4.701267242431641

Token 1016: '_count' (ID: 7536)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0461232662200928
    2. '_indices' → logprob: -1.0461232662200928
    3. '_length' → logprob: -2.5461232662200928
    4. '_n' → logprob: -2.9211232662200928
    5. '_range' → logprob: -3.0461232662200928
    6. ' =' → logprob: -3.4211232662200928
    7. '_idx' → logprob: -4.046123504638672
    8. '_array' → logprob: -4.796123504638672
    9. '_indexes' → logprob: -4.921123504638672
    10. '_count' → logprob: -5.046123504638672

Token 1017: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868948519229889
    2. '=' → logprob: -1.1368948221206665
    3. '   ' → logprob: -12.011895179748535
    4. ',' → logprob: -12.511895179748535
    5. '[' → logprob: -13.136895179748535
    6. '```' → logprob: -13.261895179748535
    7. '+=' → logprob: -13.386895179748535
    8. '=
' → logprob: -13.636895179748535
    9. ' +=' → logprob: -13.761895179748535
    10. 's' → logprob: -14.261895179748535

Token 1018: ' length' (ID: 5517)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1302255392074585
    2. 'limit' → logprob: -1.2552255392074585
    3. 'param' → logprob: -1.6302255392074585
    4. 'length' → logprob: -2.255225658416748
    5. '(com' → logprob: -3.630225658416748
    6. '(param' → logprob: -3.755225658416748
    7. '(limit' → logprob: -4.005225658416748
    8. ' param' → logprob: -5.380225658416748
    9. ' limit' → logprob: -5.505225658416748
    10. 'comb' → logprob: -5.755225658416748

Token 1019: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0012649978743866086
    2. '_x' → logprob: -7.501265048980713
    3. '=' → logprob: -8.501264572143555
    4. 's' → logprob: -8.751264572143555
    5. '```' → logprob: -9.251264572143555
    6. ' =' → logprob: -9.876264572143555
    7. '+' → logprob: -10.126264572143555
    8. 'n' → logprob: -10.126264572143555
    9. '_limit' → logprob: -11.251264572143555
    10. '[' → logprob: -11.376264572143555

Token 1020: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.40301111340522766
    2. '-' → logprob: -1.2780110836029053
    3. '+' → logprob: -3.7780110836029053
    4. '[' → logprob: -4.278011322021484
    5. '-limit' → logprob: -4.653011322021484
    6. '-length' → logprob: -5.778011322021484
    7. ' +' → logprob: -6.653011322021484
    8. '[param' → logprob: -7.403011322021484
    9. '<|end|>' → logprob: -7.403011322021484
    10. '-param' → logprob: -9.028011322021484

Token 1021: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0004019521293230355
    2. ' limit' → logprob: -8.000401496887207
    3. '(limit' → logprob: -9.625401496887207
    4. '(' → logprob: -15.375401496887207
    5. ' (' → logprob: -15.375401496887207
    6. 'param' → logprob: -18.375402450561523
    7. '    ' → logprob: -18.625402450561523
    8. ' ' → logprob: -18.625402450561523
    9. '   ' → logprob: -18.625402450561523
    10. '
' → logprob: -18.750402450561523

Token 1022: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.935296834039036e-06
    2. '_n' → logprob: -13.25000286102295
    3. '```' → logprob: -14.25000286102295
    4. 'x' → logprob: -16.250003814697266
    5. 'n' → logprob: -16.625003814697266
    6. 's' → logprob: -17.125003814697266
    7. 'limit' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.375003814697266
    9. '_' → logprob: -18.000003814697266
    10. ')' → logprob: -18.312503814697266

Token 1023: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13947796821594238
    2. ' +' → logprob: -2.1394779682159424
    3. '   ' → logprob: -5.139477729797363
    4. '-' → logprob: -6.264477729797363
    5. '
' → logprob: -6.639477729797363
    6. '+
' → logprob: -6.764477729797363
    7. ')' → logprob: -7.014477729797363
    8. '<|end|>' → logprob: -7.389477729797363
    9. ' -' → logprob: -7.764477729797363
    10. ' +
' → logprob: -9.389477729797363

Token 1024: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -19.0
    4. '
' → logprob: -20.0
    5. '```' → logprob: -20.75
    6. 'param' → logprob: -21.625
    7. '   ' → logprob: -23.25
    8. '１' → logprob: -24.0
    9. '100' → logprob: -24.0
    10. '۱' → logprob: -24.125

Token 1025: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '2' → logprob: -17.75
    4. '
' → logprob: -19.0
    5. '```' → logprob: -19.625
    6. '１' → logprob: -21.5
    7. '۱' → logprob: -22.125
    8. '0' → logprob: -22.25
    9. '100' → logprob: -22.5
    10. '{' → logprob: -22.875

Token 1026: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09209086745977402
    2. '<|end|>' → logprob: -2.7170908451080322
    3. '   ' → logprob: -4.342091083526611
    4. ')' → logprob: -4.967091083526611
    5. '+' → logprob: -8.342090606689453
    6. '<|end|>' → logprob: -8.342090606689453
    7. '*' → logprob: -8.467090606689453
    8. '```' → logprob: -8.592090606689453
    9. ' +' → logprob: -8.842090606689453
    10. '  
' → logprob: -8.842090606689453

Token 1027: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01016884483397007
    2. '```' → logprob: -5.51016902923584
    3. '
' → logprob: -5.88516902923584
    4. 'return' → logprob: -6.76016902923584
    5. ')' → logprob: -7.01016902923584
    6. ':' → logprob: -8.01016902923584
    7. ' return' → logprob: -8.38516902923584
    8. '*' → logprob: -8.88516902923584
    9. '	return' → logprob: -9.26016902923584
    10. ':return' → logprob: -9.38516902923584

Token 1028: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10986725986003876
    2. 'result' → logprob: -2.3598673343658447
    3. '   ' → logprob: -5.109867095947266
    4. 'res' → logprob: -6.609867095947266
    5. 'coeff' → logprob: -7.484867095947266
    6. 'coef' → logprob: -7.734867095947266
    7. 'factor' → logprob: -8.109867095947266
    8. 'answer' → logprob: -8.734867095947266
    9. 'comb' → logprob: -8.859867095947266
    10. 'valid' → logprob: -8.859867095947266

Token 1029: ' combinations' (ID: 43835)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.6459493041038513
    2. 'com' → logprob: -0.8959493041038513
    3. '(valid' → logprob: -3.645949363708496
    4. 'valid' → logprob: -4.145949363708496
    5. 'factor' → logprob: -5.395949363708496
    6. 'comb' → logprob: -5.645949363708496
    7. ' (' → logprob: -5.770949363708496
    8. '(' → logprob: -5.770949363708496
    9. ' valid' → logprob: -6.145949363708496
    10. ' combinations' → logprob: -6.270949363708496

Token 1030: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.08927564322948456
    2. '[param' → logprob: -2.839275598526001
    3. '_valid' → logprob: -3.714275598526001
    4. '_arr' → logprob: -6.58927583694458
    5. 'n' → logprob: -7.71427583694458
    6. '[' → logprob: -8.214275360107422
    7. 'valid' → logprob: -9.339275360107422
    8. '_[' → logprob: -9.339275360107422
    9. '[length' → logprob: -9.714275360107422
    10. '_param' → logprob: -9.714275360107422

Token 1031: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05516502633690834
    2. '[param' → logprob: -2.9301650524139404
    3. '[:' → logprob: -8.80516529083252
    4. '[...,' → logprob: -11.18016529083252
    5. '[[' → logprob: -11.30516529083252
    6. '[np' → logprob: -11.43016529083252
    7. '[len' → logprob: -11.43016529083252
    8. '[:,' → logprob: -11.55516529083252
    9. '[val' → logprob: -11.68016529083252
    10. '```' → logprob: -11.80516529083252

Token 1032: 'valid' (ID: 3197)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.018152287229895592
    2. 'valid' → logprob: -4.018152236938477
    3. ' limit' → logprob: -13.143152236938477
    4. '(limit' → logprob: -15.643152236938477
    5. '
' → logprob: -16.018152236938477
    6. ' valid' → logprob: -16.393152236938477
    7. '[' → logprob: -16.768152236938477
    8. '(valid' → logprob: -17.018152236938477
    9. '-limit' → logprob: -17.018152236938477
    10. 'length' → logprob: -18.393152236938477

Token 1033: '_count' (ID: 7536)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0012808336177840829
    2. '_limit' → logprob: -6.876280784606934
    3. '_count' → logprob: -8.376280784606934
    4. '_valid' → logprob: -12.126280784606934
    5. 'limit' → logprob: -12.626280784606934
    6. 'valid' → logprob: -13.126280784606934
    7. '[' → logprob: -13.376280784606934
    8. 'x' → logprob: -13.501280784606934
    9. '+' → logprob: -13.751280784606934
    10. '
' → logprob: -14.501280784606934

Token 1034: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014710931107401848
    2. '[' → logprob: -4.764710903167725
    3. '].' → logprob: -5.264710903167725
    4. '   ' → logprob: -8.389711380004883
    5. '][' → logprob: -9.389711380004883
    6. '*' → logprob: -9.514711380004883
    7. ']*' → logprob: -9.514711380004883
    8. '[:' → logprob: -9.764711380004883
    9. '][:' → logprob: -9.764711380004883
    10. ' *' → logprob: -9.889711380004883

Token 1035: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01688672974705696
    2. 'dot' → logprob: -4.5168867111206055
    3. 'c' → logprob: -5.3918867111206055
    4. 'copy' → logprob: -7.7668867111206055
    5. 'cum' → logprob: -7.8918867111206055
    6. 'prod' → logprob: -8.766886711120605
    7. 'tolist' → logprob: -8.766886711120605
    8. 'astype' → logprob: -9.391886711120605
    9. 'take' → logprob: -10.016886711120605
    10. '__' → logprob: -11.266886711120605

Token 1036: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032018350902944803
    2. '()%' → logprob: -5.753201961517334
    3. '()+' → logprob: -11.628201484680176
    4. '(' → logprob: -12.128201484680176
    5. '()]' → logprob: -12.878201484680176
    6. '()[' → logprob: -13.628201484680176
    7. '()<' → logprob: -13.628201484680176
    8. '())' → logprob: -13.878201484680176
    9. '()>' → logprob: -14.753201484680176
    10. ' ()' → logprob: -14.753201484680176

Token 1037: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7928333282470703
    2. '<|end|>' → logprob: -1.2928333282470703
    3. ')' → logprob: -1.5428333282470703
    4. '(' → logprob: -4.16783332824707
    5. '
' → logprob: -4.41783332824707
    6. '()' → logprob: -4.66783332824707
    7. '*' → logprob: -5.16783332824707
    8. '+' → logprob: -5.29283332824707
    9. '```' → logprob: -5.29283332824707
    10. '[:]' → logprob: -6.91783332824707

Token 1038: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001503790495917201
    2. ' MOD' → logprob: -6.501503944396973
    3. '```' → logprob: -14.501503944396973
    4. '_MOD' → logprob: -14.626503944396973
    5. '``' → logprob: -15.751503944396973
    6. ' ' → logprob: -16.001502990722656
    7. '.MOD' → logprob: -16.751502990722656
    8. '
' → logprob: -16.876502990722656
    9. '   ' → logprob: -17.001502990722656
    10. '(M' → logprob: -17.001502990722656

Token 1039: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.4743320345878601
    2. 'CONST' → logprob: -0.9743320345878601
    3. 'const' → logprob: -8.599331855773926
    4. '_const' → logprob: -10.224331855773926
    5. 'MOD' → logprob: -11.474331855773926
    6. '_MOD' → logprob: -11.849331855773926
    7. '_CONSTANT' → logprob: -11.849331855773926
    8. ' CONST' → logprob: -12.349331855773926
    9. 'Const' → logprob: -12.974331855773926
    10. 'OD' → logprob: -14.349331855773926

Token 1040: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1041: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6702712774276733
    2. ')' → logprob: -1.7952712774276733
    3. 'def' → logprob: -1.7952712774276733
    4. '<|end|>' → logprob: -2.170271396636963
    5. 'param' → logprob: -2.295271396636963
    6. '```' → logprob: -2.670271396636963
    7. '
' → logprob: -3.170271396636963
    8. 'print' → logprob: -3.420271396636963
    9. 'return' → logprob: -3.420271396636963
    10. 'result' → logprob: -3.545271396636963

Token 1042: ' System' (ID: 1219)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04545829817652702
    2. 'result' → logprob: -3.1704583168029785
    3. '#' → logprob: -6.4204583168029785
    4. 'answer' → logprob: -7.5454583168029785
    5. 'res' → logprob: -8.54545783996582
    6. 'output' → logprob: -10.79545783996582
    7. 'ans' → logprob: -10.92045783996582
    8. '```' → logprob: -11.42045783996582
    9. 'for' → logprob: -12.17045783996582
    10. 'total' → logprob: -12.17045783996582

Token 1043: 'atic' (ID: 2351)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9010593295097351
    2. 'atic' → logprob: -1.0260593891143799
    3. '```' → logprob: -1.9010593891143799
    4. '_' → logprob: -3.52605938911438
    5. '``' → logprob: -4.276059150695801
    6. '__' → logprob: -4.401059150695801
    7. '
' → logprob: -4.776059150695801
    8. '_
' → logprob: -5.401059150695801
    9. '#' → logprob: -5.401059150695801
    10. ':' → logprob: -6.401059150695801

Token 1044: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039369191974401474
    2. 'pol' → logprob: -3.9143691062927246
    3. 'poly' → logprob: -5.539369106292725
    4. 'function' → logprob: -5.914369106292725
    5. '#' → logprob: -6.289369106292725
    6. '_sum' → logprob: -6.539369106292725
    7. '_poly' → logprob: -6.664369106292725
    8. '```' → logprob: -6.664369106292725
    9. '_type' → logprob: -6.789369106292725
    10. '_pol' → logprob: -7.164369106292725

Token 1045: ' calculation' (ID: 40722)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6701455116271973
    2. 'def' → logprob: -1.1701455116271973
    3. '_' → logprob: -2.7951455116271973
    4. '_def' → logprob: -2.9201455116271973
    5. '_function' → logprob: -3.7951455116271973
    6. '(
' → logprob: -4.170145511627197
    7. '():' → logprob: -4.795145511627197
    8. '()
' → logprob: -4.920145511627197
    9. '():
' → logprob: -5.670145511627197
    10. '(' → logprob: -6.420145511627197

Token 1046: ' and' (ID: 326)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08161908388137817
    2. 'answer' → logprob: -3.3316190242767334
    3. 'def' → logprob: -3.9566190242767334
    4. 'total' → logprob: -4.9566192626953125
    5. 'res' → logprob: -5.5816192626953125
    6. 'ans' → logprob: -5.7066192626953125
    7. 'output' → logprob: -6.3316192626953125
    8. 'param' → logprob: -6.5816192626953125
    9. 'input' → logprob: -6.9566192626953125
    10. '_result' → logprob: -6.9566192626953125

Token 1047: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6945863366127014
    2. 'output' → logprob: -0.6945863366127014
    3. 'result' → logprob: -7.444586277008057
    4. 'execution' → logprob: -7.694586277008057
    5. '#' → logprob: -8.694586753845215
    6. 'return' → logprob: -9.194586753845215
    7. 'printing' → logprob: -10.194586753845215
    8. '
' → logprob: -10.444586753845215
    9. ' output' → logprob: -10.569586753845215
    10. 'def' → logprob: -11.569586753845215

Token 1048: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.17651760578155518
    2. 'def' → logprob: -2.3015174865722656
    3. '
' → logprob: -3.5515174865722656
    4. 'output' → logprob: -4.676517486572266
    5. 'print' → logprob: -5.301517486572266
    6. 'answer' → logprob: -5.426517486572266
    7. '```' → logprob: -5.676517486572266
    8. 'res' → logprob: -5.926517486572266
    9. '_result' → logprob: -6.801517486572266
    10. 'total' → logprob: -6.801517486572266

Token 1049: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.010501560755074024
    2. 'def' → logprob: -5.010501384735107
    3. 'answer' → logprob: -6.260501384735107
    4. 'output' → logprob: -7.385501384735107
    5. 'res' → logprob: -7.510501384735107
    6. '
' → logprob: -7.885501384735107
    7. 'total' → logprob: -9.010501861572266
    8. '```' → logprob: -9.135501861572266
    9. 'ans' → logprob: -9.760501861572266
    10. 'print' → logprob: -11.760501861572266

Token 1050: '_total' (ID: 23814)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6960107088088989
    2. ' =' → logprob: -0.6960107088088989
    3. '_' → logprob: -5.946010589599609
    4. '_=' → logprob: -8.69601058959961
    5. '```' → logprob: -10.94601058959961
    6. ')' → logprob: -11.94601058959961
    7. ',' → logprob: -12.07101058959961
    8. ' ' → logprob: -12.82101058959961
    9. '_code' → logprob: -12.82101058959961
    10. '[:]' → logprob: -12.94601058959961

Token 1051: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6414842009544373
    2. '=' → logprob: -0.7664842009544373
    3. '_' → logprob: -4.766484260559082
    4. ' +=' → logprob: -9.641484260559082
    5. '_=' → logprob: -10.016484260559082
    6. ' ' → logprob: -10.391484260559082
    7. '```' → logprob: -10.516484260559082
    8. ',' → logprob: -10.516484260559082
    9. ' =
' → logprob: -11.266484260559082
    10. ')' → logprob: -11.266484260559082

Token 1052: ' (
' (ID: 4112)
  Prédit: '(pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pol' → logprob: -0.06393148750066757
    2. 'pol' → logprob: -2.938931465148926
    3. '(' → logprob: -5.063931465148926
    4. '0' → logprob: -6.813931465148926
    5. '(
' → logprob: -7.938931465148926
    6. '(poly' → logprob: -8.438931465148926
    7. '(p' → logprob: -8.688931465148926
    8. ' (' → logprob: -8.688931465148926
    9. '(np' → logprob: -8.813931465148926
    10. ' polynomial' → logprob: -8.938931465148926

Token 1053: '   ' (ID: 271)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.38036003708839417
    2. '(pol' → logprob: -1.5053600072860718
    3. ' polynomial' → logprob: -2.3803601264953613
    4. ' (' → logprob: -7.380360126495361
    5. '(com' → logprob: -8.255359649658203
    6. ' pol' → logprob: -8.380359649658203
    7. 'com' → logprob: -8.505359649658203
    8. '(' → logprob: -9.005359649658203
    9. '(p' → logprob: -9.130359649658203
    10. 'poly' → logprob: -9.505359649658203

Token 1054: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.6355486512184143
    2. '(pol' → logprob: -0.7605486512184143
    3. ' polynomial' → logprob: -7.2605485916137695
    4. '(
' → logprob: -7.6355485916137695
    5. '(com' → logprob: -7.7605485916137695
    6. 'com' → logprob: -7.8855485916137695
    7. '(' → logprob: -8.26054859161377
    8. 'pow' → logprob: -9.01054859161377
    9. ' (' → logprob: -9.13554859161377
    10. '(p' → logprob: -9.51054859161377

Token 1055: '_sum' (ID: 29859)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.5759932994842529
    2. '_sum' → logprob: -0.8259932994842529
    3. '_' → logprob: -10.325993537902832
    4. '_total' → logprob: -11.575993537902832
    5. 'sum' → logprob: -12.075993537902832
    6. 'type' → logprob: -13.450993537902832
    7. '_
' → logprob: -13.950993537902832
    8. '_s' → logprob: -14.325993537902832
    9. '_size' → logprob: -14.825993537902832
    10. ' _' → logprob: -15.075993537902832

Token 1056: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0024737550411373377
    2. '(length' → logprob: -6.627473831176758
    3. 'below' → logprob: -7.252473831176758
    4. '(' → logprob: -7.877473831176758
    5. 'Below' → logprob: -11.127473831176758
    6. '(n' → logprob: -11.502473831176758
    7. '(len' → logprob: -12.002473831176758
    8. '(param' → logprob: -12.502473831176758
    9. ')' → logprob: -12.502473831176758
    10. 'length' → logprob: -12.627473831176758

Token 1057: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.00023619852436240762
    2. 'below' → logprob: -8.375236511230469
    3. 'Below' → logprob: -13.250236511230469
    4. 'el' → logprob: -13.625236511230469
    5. '```' → logprob: -14.125236511230469
    6. 'elo' → logprob: -14.250236511230469
    7. 'low' → logprob: -14.750236511230469
    8. 'ellow' → logprob: -15.000236511230469
    9. '   ' → logprob: -16.37523651123047
    10. 'elif' → logprob: -16.62523651123047

Token 1058: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.029491838067770004
    2. 'x' → logprob: -4.279491901397705
    3. 'param' → logprob: -4.779491901397705
    4. '(param' → logprob: -5.029491901397705
    5. '_param' → logprob: -8.904491424560547
    6. '[param' → logprob: -10.029491424560547
    7. '_n' → logprob: -10.779491424560547
    8. '_' → logprob: -11.529491424560547
    9. '```' → logprob: -11.529491424560547
    10. ',param' → logprob: -11.904491424560547

Token 1059: '(param' (ID: 16775)
  Prédit: '(param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(param' → logprob: -0.0007171963807195425
    2. 'param' → logprob: -7.5007171630859375
    3. ',param' → logprob: -9.125717163085938
    4. ')' → logprob: -11.000717163085938
    5. ')param' → logprob: -11.125717163085938
    6. '[param' → logprob: -11.875717163085938
    7. '(' → logprob: -12.500717163085938
    8. '@param' → logprob: -12.625717163085938
    9. ':param' → logprob: -13.125717163085938
    10. '(
' → logprob: -13.250717163085938

Token 1060: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.12701807916164398
    2. '_x' → logprob: -2.1270179748535156
    3. ')_' → logprob: -10.377017974853516
    4. ')' → logprob: -10.502017974853516
    5. '```' → logprob: -12.002017974853516
    6. 'n' → logprob: -12.002017974853516
    7. '_
' → logprob: -12.127017974853516
    8. '_)' → logprob: -12.752017974853516
    9. '_' → logprob: -13.127017974853516
    10. 'x' → logprob: -13.627017974853516

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018548656953498721
    2. ',param' → logprob: -6.37685489654541
    3. ',
' → logprob: -9.00185489654541
    4. 'param' → logprob: -11.25185489654541
    5. ' ,' → logprob: -11.37685489654541
    6. '[param' → logprob: -13.62685489654541
    7. ' param' → logprob: -14.12685489654541
    8. '@param' → logprob: -14.25185489654541
    9. '(param' → logprob: -14.37685489654541
    10. ',

' → logprob: -14.62685489654541

Token 1062: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -1.2233183042553719e-05
    2. ' param' → logprob: -11.500012397766113
    3. '(param' → logprob: -14.000012397766113
    4. 'MOD' → logprob: -14.250012397766113
    5. '
' → logprob: -15.375012397766113
    6. 'mod' → logprob: -16.750011444091797
    7. '   ' → logprob: -16.750011444091797
    8. 'pow' → logprob: -17.500011444091797
    9. '[param' → logprob: -17.625011444091797
    10. ')param' → logprob: -18.125011444091797

Token 1063: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.5213274309644476e-05
    2. 'const' → logprob: -11.250015258789062
    3. 'param' → logprob: -13.500015258789062
    4. 'x' → logprob: -15.000015258789062
    5. '_n' → logprob: -16.500015258789062
    6. '[param' → logprob: -16.750015258789062
    7. '_const' → logprob: -16.875015258789062
    8. ')' → logprob: -17.375015258789062
    9. '```' → logprob: -17.687515258789062
    10. '(param' → logprob: -17.812515258789062

Token 1064: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4394787847995758
    2. ' +' → logprob: -1.6894787549972534
    3. ')' → logprob: -1.8144787549972534
    4. '+
' → logprob: -5.439478874206543
    5. ' +
' → logprob: -6.689478874206543
    6. '   ' → logprob: -7.189478874206543
    7. '-' → logprob: -7.439478874206543
    8. ' -' → logprob: -7.439478874206543
    9. ')
' → logprob: -8.064478874206543
    10. ')+' → logprob: -9.439478874206543

Token 1065: ' +
' (ID: 6119)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.585425615310669
    2. '+' → logprob: -0.835425615310669
    3. ' +
' → logprob: -5.71042537689209
    4. ')' → logprob: -5.96042537689209
    5. '+
' → logprob: -5.96042537689209
    6. '%' → logprob: -7.96042537689209
    7. '<|end|>' → logprob: -8.96042537689209
    8. '   ' → logprob: -9.08542537689209
    9. '
' → logprob: -9.46042537689209
    10. ')
' → logprob: -9.71042537689209

Token 1066: '   ' (ID: 271)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.038086701184511185
    2. ' polynomial' → logprob: -3.2880866527557373
    3. '(pol' → logprob: -10.663086891174316
    4. ' pol' → logprob: -11.163086891174316
    5. '
' → logprob: -12.663086891174316
    6. 'poly' → logprob: -13.163086891174316
    7. '   ' → logprob: -14.163086891174316
    8. '+' → logprob: -14.913086891174316
    9. 'Polynomial' → logprob: -15.038086891174316
    10. '\
' → logprob: -15.413086891174316

Token 1067: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.0009142052149400115
    2. ' polynomial' → logprob: -7.000914096832275
    3. '(pol' → logprob: -13.625914573669434
    4. '   ' → logprob: -14.500914573669434
    5. 'poly' → logprob: -15.000914573669434
    6. ' pol' → logprob: -15.250914573669434
    7. 'Polynomial' → logprob: -15.500914573669434
    8. '-pol' → logprob: -16.375913619995117
    9. 'python' → logprob: -16.875913619995117
    10. '
' → logprob: -16.875913619995117

Token 1068: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.375000953674316
    3. '_sum' → logprob: -15.375000953674316
    4. 'Type' → logprob: -16.250001907348633
    5. 'type' → logprob: -16.250001907348633
    6. '_' → logprob: -17.250001907348633
    7. '\' → logprob: -17.375001907348633
    8. '_TYPE' → logprob: -17.875001907348633
    9. '
' → logprob: -18.250001907348633
    10. ')_' → logprob: -18.250001907348633

Token 1069: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005263880360871553
    2. '3' → logprob: -5.255263805389404
    3. '_type' → logprob: -11.005264282226562
    4. 'type' → logprob: -11.380264282226562
    5. '```' → logprob: -13.755264282226562
    6. '_' → logprob: -15.130264282226562
    7. 'Type' → logprob: -15.630264282226562
    8. 'ype' → logprob: -16.255264282226562
    9. '1' → logprob: -16.380264282226562
    10. '۲' → logprob: -17.005264282226562

Token 1070: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.816093228830141e-06
    2. '_total' → logprob: -13.75000286102295
    3. 'sum' → logprob: -14.37500286102295
    4. ')_' → logprob: -15.00000286102295
    5. '_s' → logprob: -15.25000286102295
    6. '```' → logprob: -15.37500286102295
    7. ')' → logprob: -16.125001907348633
    8. '_type' → logprob: -17.000001907348633
    9. '_SUM' → logprob: -17.375001907348633
    10. 'Sum' → logprob: -17.750001907348633

Token 1071: '(param' (ID: 16775)
  Prédit: '(param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(param' → logprob: -3.845798710244708e-05
    2. ',param' → logprob: -11.000038146972656
    3. 'param' → logprob: -11.625038146972656
    4. ')param' → logprob: -12.375038146972656
    5. '[param' → logprob: -13.125038146972656
    6. '(' → logprob: -13.125038146972656
    7. ':param' → logprob: -13.625038146972656
    8. '@param' → logprob: -13.875038146972656
    9. ' (' → logprob: -14.250038146972656
    10. '```' → logprob: -14.375038146972656

Token 1072: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0015622387873008847
    2. '_x' → logprob: -6.501562118530273
    3. 'n' → logprob: -9.876562118530273
    4. '```' → logprob: -12.626562118530273
    5. 'x' → logprob: -12.751562118530273
    6. ')' → logprob: -14.126562118530273
    7. '[' → logprob: -16.001562118530273
    8. 'param' → logprob: -16.001562118530273
    9. '
' → logprob: -16.251562118530273
    10. '(n' → logprob: -16.376562118530273

Token 1073: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012621717527508736
    2. ',param' → logprob: -4.387621879577637
    3. ' ,' → logprob: -9.887621879577637
    4. '(param' → logprob: -10.512621879577637
    5. ',
' → logprob: -11.137621879577637
    6. 'param' → logprob: -11.887621879577637
    7. '@param' → logprob: -12.262621879577637
    8. '[param' → logprob: -12.762621879577637
    9. '   ' → logprob: -13.637621879577637
    10. ' param' → logprob: -13.762621879577637

Token 1074: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.00020354038861114532
    2. ' param' → logprob: -8.500203132629395
    3. '(param' → logprob: -18.12520408630371
    4. ')param' → logprob: -19.87520408630371
    5. 'params' → logprob: -21.00020408630371
    6. '
' → logprob: -21.50020408630371
    7. ':param' → logprob: -21.75020408630371
    8. 'par' → logprob: -21.87520408630371
    9. '[param' → logprob: -22.00020408630371
    10. '@param' → logprob: -22.12520408630371

Token 1075: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00118677644059062
    2. 'x' → logprob: -6.751186847686768
    3. '_n' → logprob: -11.37618637084961
    4. 'n' → logprob: -13.12618637084961
    5. '
' → logprob: -14.00118637084961
    6. '```' → logprob: -14.12618637084961
    7. '_
' → logprob: -15.00118637084961
    8. '_' → logprob: -15.37618637084961
    9. 'const' → logprob: -15.87618637084961
    10. 's' → logprob: -16.00118637084961

Token 1076: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8667446374893188
    2. ')' → logprob: -1.1167446374893188
    3. ' +' → logprob: -1.4917446374893188
    4. ' +
' → logprob: -4.241744518280029
    5. '   ' → logprob: -4.991744518280029
    6. '+
' → logprob: -5.241744518280029
    7. '-' → logprob: -8.241744995117188
    8. ')+' → logprob: -8.991744995117188
    9. ' -' → logprob: -9.116744995117188
    10. ' +
' → logprob: -9.491744995117188

Token 1077: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08327801525592804
    2. ' +' → logprob: -2.708277940750122
    3. '+
' → logprob: -4.458278179168701
    4. ' +
' → logprob: -6.583278179168701
    5. ')' → logprob: -8.333277702331543
    6. '   ' → logprob: -11.333277702331543
    7. ')+' → logprob: -11.458277702331543
    8. '<|end|>' → logprob: -11.833277702331543
    9. '```' → logprob: -12.458277702331543
    10. '%' → logprob: -12.583277702331543

Token 1078: '   ' (ID: 271)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.0005593468667939305
    2. ' polynomial' → logprob: -7.500559329986572
    3. '   ' → logprob: -12.75055980682373
    4. '(pol' → logprob: -12.87555980682373
    5. 'poly' → logprob: -14.50055980682373
    6. ' pol' → logprob: -15.87555980682373
    7. 'Polynomial' → logprob: -16.875558853149414
    8. '0' → logprob: -17.125558853149414
    9. '```' → logprob: -17.375558853149414
    10. '-pol' → logprob: -18.500558853149414

Token 1079: ' polynomial' (ID: 113464)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -1.676292231422849e-05
    2. ' polynomial' → logprob: -11.125017166137695
    3. 'poly' → logprob: -13.375017166137695
    4. '0' → logprob: -15.625017166137695
    5. '
' → logprob: -16.125017166137695
    6. '(pol' → logprob: -16.125017166137695
    7. '   ' → logprob: -18.000017166137695
    8. '-pol' → logprob: -18.000017166137695
    9. 'Polynomial' → logprob: -19.000017166137695
    10. ' pol' → logprob: -19.000017166137695

Token 1080: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -6.034592388459714e-06
    2. 'type' → logprob: -12.250005722045898
    3. 'Type' → logprob: -13.625005722045898
    4. '_TYPE' → logprob: -17.1250057220459
    5. '3' → logprob: -18.0000057220459
    6. ' type' → logprob: -18.1250057220459
    7. '```' → logprob: -18.1250057220459
    8. 'ype' → logprob: -19.5000057220459
    9. '	type' → logprob: -20.0000057220459
    10. '_' → logprob: -20.1250057220459

Token 1081: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.4121114822482923e-06
    2. '_type' → logprob: -12.875003814697266
    3. 'type' → logprob: -14.250003814697266
    4. '```' → logprob: -17.500003814697266
    5. '2' → logprob: -18.000003814697266
    6. 'Type' → logprob: -18.500003814697266
    7. '1' → logprob: -18.875003814697266
    8. '۳' → logprob: -18.875003814697266
    9. '_' → logprob: -19.375003814697266
    10. '３' → logprob: -19.625003814697266

Token 1082: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00021021578868385404
    2. '_total' → logprob: -9.25020980834961
    3. '_s' → logprob: -10.12520980834961
    4. '_type' → logprob: -10.25020980834961
    5. '```' → logprob: -11.25020980834961
    6. ')_' → logprob: -12.12520980834961
    7. '_x' → logprob: -12.25020980834961
    8. 'sum' → logprob: -12.50020980834961
    9. '_size' → logprob: -13.75020980834961
    10. ''_' → logprob: -13.75020980834961

Token 1083: '(param' (ID: 16775)
  Prédit: '(param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(param' → logprob: -1.0325924449716695e-05
    2. 'param' → logprob: -12.00001049041748
    3. ',param' → logprob: -13.75001049041748
    4. ')param' → logprob: -13.75001049041748
    5. '[param' → logprob: -13.75001049041748
    6. ':param' → logprob: -14.75001049041748
    7. '@param' → logprob: -16.000009536743164
    8. '(' → logprob: -16.250009536743164
    9. '```' → logprob: -16.375009536743164
    10. ' param' → logprob: -16.625009536743164

Token 1084: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.778209353797138e-05
    2. '_x' → logprob: -10.250067710876465
    3. 'param' → logprob: -11.000067710876465
    4. 'n' → logprob: -11.250067710876465
    5. '```' → logprob: -14.125067710876465
    6. '(param' → logprob: -14.250067710876465
    7. 'x' → logprob: -15.750067710876465
    8. ')' → logprob: -15.750067710876465
    9. '[param' → logprob: -15.875067710876465
    10. ' param' → logprob: -15.875067710876465

Token 1085: ',' (ID: 11)
  Prédit: ',param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',param' → logprob: -0.573474645614624
    2. ',' → logprob: -0.948474645614624
    3. 'param' → logprob: -3.198474645614624
    4. '(param' → logprob: -5.073474884033203
    5. '[param' → logprob: -7.573474884033203
    6. '_param' → logprob: -7.823474884033203
    7. '_n' → logprob: -8.323474884033203
    8. '@param' → logprob: -8.323474884033203
    9. ')param' → logprob: -9.198474884033203
    10. ' param' → logprob: -9.323474884033203

Token 1086: ' param' (ID: 3802)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.00020377879263833165
    2. ' param' → logprob: -8.500204086303711
    3. '(param' → logprob: -15.375204086303711
    4. ')param' → logprob: -18.37520408630371
    5. '[param' → logprob: -18.87520408630371
    6. ':param' → logprob: -19.00020408630371
    7. '	param' → logprob: -19.25020408630371
    8. ',param' → logprob: -19.62520408630371
    9. '@param' → logprob: -20.12520408630371
    10. '   ' → logprob: -20.50020408630371

Token 1087: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006708147004246712
    2. '_n' → logprob: -5.131708145141602
    3. 'x' → logprob: -7.381708145141602
    4. 'n' → logprob: -9.131708145141602
    5. ')' → logprob: -11.006708145141602
    6. '```' → logprob: -11.131708145141602
    7. '``' → logprob: -12.756708145141602
    8. '
' → logprob: -13.131708145141602
    9. '_)' → logprob: -13.506708145141602
    10. ')
' → logprob: -13.756708145141602

Token 1088: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17205899953842163
    2. ',' → logprob: -2.2970590591430664
    3. '-' → logprob: -3.6720590591430664
    4. ',param' → logprob: -3.9220590591430664
    5. 'param' → logprob: -5.422059059143066
    6. '-param' → logprob: -6.047059059143066
    7. ')param' → logprob: -6.672059059143066
    8. '[param' → logprob: -6.922059059143066
    9. '))' → logprob: -7.172059059143066
    10. ')
' → logprob: -7.297059059143066

Token 1089: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2273349165916443
    2. '%' → logprob: -1.727334976196289
    3. ')%' → logprob: -4.102334976196289
    4. ' %' → logprob: -4.727334976196289
    5. ')
' → logprob: -8.977334976196289
    6. ' )' → logprob: -10.102334976196289
    7. '+' → logprob: -11.352334976196289
    8. '
' → logprob: -11.727334976196289
    9. '```' → logprob: -11.852334976196289
    10. '%)' → logprob: -13.727334976196289

Token 1090: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02767162024974823
    2. ' %' → logprob: -3.6526715755462646
    3. '
' → logprob: -6.777671813964844
    4. '```' → logprob: -9.277671813964844
    5. ')' → logprob: -9.402671813964844
    6. '%
' → logprob: -10.652671813964844
    7. ')%' → logprob: -12.402671813964844
    8. 'print' → logprob: -12.402671813964844
    9. '%n' → logprob: -12.402671813964844
    10. '%A' → logprob: -12.652671813964844

Token 1091: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '_MOD' → logprob: -18.1250057220459
    4. '998' → logprob: -18.2500057220459
    5. '(M' → logprob: -20.0000057220459
    6. '.MOD' → logprob: -20.3750057220459
    7. '```' → logprob: -20.8750057220459
    8. 'MO' → logprob: -21.6250057220459
    9. '`' → logprob: -21.8750057220459
    10. '
' → logprob: -22.0000057220459

Token 1092: '_CONST' (ID: 91635)
  Prédit: '_CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONST' → logprob: -0.0020264238119125366
    2. 'CONST' → logprob: -6.502026557922363
    3. '_MOD' → logprob: -8.002026557922363
    4. 'const' → logprob: -9.127026557922363
    5. '_const' → logprob: -10.502026557922363
    6. '_CONSTANT' → logprob: -10.752026557922363
    7. '```' → logprob: -12.252026557922363
    8. 'F' → logprob: -12.252026557922363
    9. 'MOD' → logprob: -12.377026557922363
    10. 'T' → logprob: -12.502026557922363

Token 1093: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008657260332256556
    2. '
' → logprob: -7.125865936279297
    3. '```' → logprob: -9.750865936279297
    4. 'import' → logprob: -14.500865936279297
    5. 'result' → logprob: -14.500865936279297
    6. '``' → logprob: -15.000865936279297
    7. '#' → logprob: -15.125865936279297
    8. '
' → logprob: -15.250865936279297
    9. 'sys' → logprob: -15.625865936279297
    10. ')
' → logprob: -15.625865936279297

Token 1094: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -14.500000953674316
    3. '```' → logprob: -14.500000953674316
    4. '``' → logprob: -19.625001907348633
    5. 'sys' → logprob: -20.000001907348633
    6. '#print' → logprob: -21.375001907348633
    7. ' print' → logprob: -21.875001907348633
    8. '\n' → logprob: -22.250001907348633
    9. '  
' → logprob: -22.250001907348633
    10. '(print' → logprob: -22.875001907348633

Token 1095: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -9.750059127807617
    3. 'result' → logprob: -14.125059127807617
    4. '(res' → logprob: -16.750059127807617
    5. '(
' → logprob: -18.125059127807617
    6. ' (' → logprob: -18.750059127807617
    7. '=result' → logprob: -19.125059127807617
    8. ',result' → logprob: -19.750059127807617
    9. '(results' → logprob: -19.750059127807617
    10. '(f' → logprob: -20.000059127807617

Token 1096: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.15310683415737e-05
    2. '(total' → logprob: -11.250021934509277
    3. ')' → logprob: -12.875021934509277
    4. 'total' → logprob: -13.375021934509277
    5. ')_' → logprob: -14.125021934509277
    6. 'Total' → logprob: -14.125021934509277
    7. '(result' → logprob: -14.375021934509277
    8. '_TOTAL' → logprob: -14.375021934509277
    9. '(_' → logprob: -14.625021934509277
    10. '_tot' → logprob: -14.750021934509277

Token 1097: ')' (ID: 8)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26347410678863525
    2. ')' → logprob: -2.2634739875793457
    3. '\n' → logprob: -3.3884739875793457
    4. '<|end|>' → logprob: -3.5134739875793457
    5. '(' → logprob: -3.6384739875793457
    6. '()' → logprob: -3.7634739875793457
    7. '\' → logprob: -4.763473987579346
    8. '```' → logprob: -6.388473987579346
    9. '(
' → logprob: -7.013473987579346
    10. '' → logprob: -7.138473987579346


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1095
Tokens correctement prédits (1ère position, stricte): 468
Tokens correctement prédits (1ère position, avec adaptation): 485
Tokens correctement prédits (top 10): 892
Précision stricte (1ère position): 42.74%
Précision adaptée (1ère position): 44.29%
Précision (top 10): 81.46%
================================================================================
