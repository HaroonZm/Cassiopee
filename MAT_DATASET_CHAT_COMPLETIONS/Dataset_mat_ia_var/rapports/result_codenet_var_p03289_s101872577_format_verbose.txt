================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input = input()

forbidden_uppercase_letters = 'BDEFGHIJKLMNOPQRSTUVWXYZ'

is_first_character_A = (user_input[0] == 'A')
count_of_A_in_string = user_input.count('A')
count_of_C_in_string = user_input.count('C')
count_of_C_in_middle_substring = user_input[2:-1].count('C')

if (
    is_first_character_A
    and count_of_A_in_string == 1
    and count_of_C_in_string == 1
    and count_of_C_in_middle_substring == 1
):
    for forbidden_letter in forbidden_uppercase_letters:
        if forbidden_letter in user_input:
            break
    else:
        print('AC')
        exit()

print('WA')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7910970449447632
    2. '"' → logprob: -1.4160970449447632
    3. ' input' → logprob: -1.5410970449447632
    4. ' "' → logprob: -3.1660971641540527
    5. ''' → logprob: -4.166097164154053
    6. ' ' → logprob: -4.541097164154053
    7. '""' → logprob: -4.541097164154053
    8. ' ""' → logprob: -5.541097164154053
    9. ' '' → logprob: -5.916097164154053
    10. ' ''' → logprob: -6.416097164154053

Token 4: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025068165268749
    2. ''' → logprob: -6.877506732940674
    3. '('' → logprob: -7.127506732940674
    4. '```' → logprob: -8.752507209777832
    5. '"' → logprob: -8.877507209777832
    6. '`' → logprob: -9.127507209777832
    7. '("("' → logprob: -9.377507209777832
    8. '()' → logprob: -9.377507209777832
    9. '(
' → logprob: -10.252507209777832
    10. ')' → logprob: -11.627507209777832

Token 5: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01031055673956871
    2. '.strip' → logprob: -4.760310649871826
    3. '.lower' → logprob: -7.885310649871826
    4. '=' → logprob: -8.010310173034668
    5. '+' → logprob: -8.135310173034668
    6. '_' → logprob: -8.635310173034668
    7. '```' → logprob: -9.260310173034668
    8. ')' → logprob: -9.385310173034668
    9. 'if' → logprob: -9.635310173034668
    10. '.split' → logprob: -10.385310173034668

Token 6: 'bidden' (ID: 41148)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026745392009615898
    2. '  ' → logprob: -3.776745319366455
    3. ' user' → logprob: -6.151745319366455
    4. ' i' → logprob: -7.151745319366455
    5. 'user' → logprob: -7.776745319366455
    6. '_' → logprob: -10.276745796203613
    7. 'i' → logprob: -11.151745796203613
    8. ''' → logprob: -11.151745796203613
    9. ' ,' → logprob: -11.151745796203613
    10. ' in' → logprob: -11.151745796203613

Token 7: '_upper' (ID: 82658)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.48285260796546936
    2. '_' → logprob: -1.107852578163147
    3. '_char' → logprob: -3.6078526973724365
    4. '=' → logprob: -3.9828526973724365
    5. ' =' → logprob: -5.607852458953857
    6. '.' → logprob: -6.982852458953857
    7. '_character' → logprob: -7.732852458953857
    8. '_tokens' → logprob: -8.232852935791016
    9. '_token' → logprob: -8.232852935791016
    10. '_words' → logprob: -8.607852935791016

Token 8: 'case' (ID: 9994)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9746118187904358
    2. 'case' → logprob: -0.9746118187904358
    3. '_letters' → logprob: -2.099611759185791
    4. '_chars' → logprob: -2.849611759185791
    5. ' =' → logprob: -3.349611759185791
    6. 'letters' → logprob: -4.349611759185791
    7. 's' → logprob: -4.849611759185791
    8. '_' → logprob: -5.724611759185791
    9. '_case' → logprob: -6.724611759185791
    10. 'cases' → logprob: -6.849611759185791

Token 9: '_letters' (ID: 175934)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.487072229385376
    2. '=' → logprob: -1.987072229385376
    3. ' =' → logprob: -2.487072229385376
    4. 's' → logprob: -2.487072229385376
    5. '_chars' → logprob: -3.237072229385376
    6. '_letters' → logprob: -3.237072229385376
    7. '_=' → logprob: -6.987071990966797
    8. '_s' → logprob: -7.112071990966797
    9. '```' → logprob: -8.112071990966797
    10. '_char' → logprob: -8.112071990966797

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05047129467129707
    2. '=' → logprob: -3.050471305847168
    3. '_' → logprob: -6.550471305847168
    4. ' ' → logprob: -7.800471305847168
    5. 's' → logprob: -11.175471305847168
    6. ' _' → logprob: -12.175471305847168
    7. '_=' → logprob: -12.300471305847168
    8. ',' → logprob: -12.550471305847168
    9. '_space' → logprob: -12.550471305847168
    10. '  ' → logprob: -12.800471305847168

Token 11: ' '' (ID: 461)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5366661548614502
    2. ' {'' → logprob: -1.2866661548614502
    3. '{'' → logprob: -3.16166615486145
    4. '{"' → logprob: -3.41166615486145
    5. 'set' → logprob: -3.41166615486145
    6. ' {"' → logprob: -4.536665916442871
    7. ' "' → logprob: -4.786665916442871
    8. '{' → logprob: -5.286665916442871
    9. '"' → logprob: -5.786665916442871
    10. ' {' → logprob: -6.036665916442871

Token 12: 'B' (ID: 33)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -0.1933313012123108
    2. 'Q' → logprob: -2.568331241607666
    3. ''' → logprob: -3.318331241607666
    4. 'ABC' → logprob: -3.693331241607666
    5. '"' → logprob: -4.318331241607666
    6. 'ABCDEFG' → logprob: -4.443331241607666
    7. 'ABCDEFGHI' → logprob: -5.068331241607666
    8. 'XYZ' → logprob: -6.693331241607666
    9. 'ABCDEFGHIJKLMNOP' → logprob: -6.943331241607666
    10. 'BC' → logprob: -7.068331241607666

Token 13: 'DE' (ID: 2052)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9109086990356445
    2. 'CDF' → logprob: -0.9109086990356445
    3. 'CF' → logprob: -2.1609086990356445
    4. 'CD' → logprob: -3.5359086990356445
    5. 'DF' → logprob: -4.0359086990356445
    6. ''' → logprob: -4.6609086990356445
    7. ''C' → logprob: -5.1609086990356445
    8. 'CFG' → logprob: -5.2859086990356445
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.5359086990356445
    10. 'F' → logprob: -6.7859086990356445

Token 14: 'FG' (ID: 23513)
  Prédit: 'FG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FG' → logprob: -0.5096017718315125
    2. 'CFG' → logprob: -1.6346018314361572
    3. 'F' → logprob: -1.8846018314361572
    4. ''' → logprob: -3.8846018314361572
    5. 'CF' → logprob: -4.134601593017578
    6. 'FH' → logprob: -4.384601593017578
    7. 'FI' → logprob: -7.009601593017578
    8. 'C' → logprob: -7.759601593017578
    9. 'G' → logprob: -7.884601593017578
    10. '')' → logprob: -8.009601593017578

Token 15: 'HI' (ID: 36525)
  Prédit: 'HI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HI' → logprob: -0.5792867541313171
    2. 'H' → logprob: -0.8292867541313171
    3. ' HI' → logprob: -6.579286575317383
    4. 'HJ' → logprob: -6.704286575317383
    5. ' H' → logprob: -7.579286575317383
    6. ''H' → logprob: -9.579286575317383
    7. 'HIP' → logprob: -10.079286575317383
    8. 'HK' → logprob: -10.704286575317383
    9. 'JKLMNOP' → logprob: -10.829286575317383
    10. '	H' → logprob: -11.079286575317383

Token 16: 'JKLMNOP' (ID: 173095)
  Prédit: 'JKLMNOP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JKLMNOP' → logprob: -0.6592217683792114
    2. 'JKLM' → logprob: -0.9092217683792114
    3. 'JK' → logprob: -2.534221649169922
    4. 'J' → logprob: -7.534221649169922
    5. ' JK' → logprob: -10.034221649169922
    6. ' J' → logprob: -13.034221649169922
    7. 'K' → logprob: -13.034221649169922
    8. ''' → logprob: -14.284221649169922
    9. '	J' → logprob: -15.034221649169922
    10. 'I' → logprob: -15.034221649169922

Token 17: 'QRSTUVWXYZ' (ID: 170908)
  Prédit: 'QRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'QRSTUVWXYZ' → logprob: -0.026955794543027878
    2. 'Q' → logprob: -4.401955604553223
    3. 'QRSTUVW' → logprob: -4.651955604553223
    4. 'QRST' → logprob: -5.401955604553223
    5. 'QR' → logprob: -8.151955604553223
    6. ''' → logprob: -14.526955604553223
    7. 'qrst' → logprob: -14.651955604553223
    8. ' QR' → logprob: -15.026955604553223
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -15.026955604553223
    10. '')' → logprob: -15.276955604553223

Token 18: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02062235400080681
    2. '')' → logprob: -3.8956222534179688
    3. ''''' → logprob: -10.770622253417969
    4. ')' → logprob: -11.770622253417969
    5. '"' → logprob: -11.895622253417969
    6. '’' → logprob: -11.895622253417969
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -11.895622253417969
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -12.270622253417969
    9. 'JKLMNOP' → logprob: -12.395622253417969
    10. '<|end|>' → logprob: -12.895622253417969

Token 19: 'is' (ID: 276)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02091226913034916
    2. 'for' → logprob: -4.270912170410156
    3. 'if' → logprob: -6.270912170410156
    4. ' for' → logprob: -6.270912170410156
    5. ':
' → logprob: -7.020912170410156
    6. ' if' → logprob: -7.145912170410156
    7. '```' → logprob: -8.145912170410156
    8. ',' → logprob: -8.270912170410156
    9. '=' → logprob: -9.270912170410156
    10. '.' → logprob: -9.645912170410156

Token 20: '_first' (ID: 29347)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.812933087348938
    2. '_allowed' → logprob: -1.312933087348938
    3. '_' → logprob: -1.562933087348938
    4. '_upper' → logprob: -3.8129329681396484
    5. ' _' → logprob: -4.062932968139648
    6. 'upper' → logprob: -4.562932968139648
    7. '_lower' → logprob: -5.187932968139648
    8. ' ' → logprob: -5.812932968139648
    9. '_in' → logprob: -6.062932968139648
    10. 'alpha' → logprob: -6.312932968139648

Token 21: '_character' (ID: 99888)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00747719407081604
    2. ' _' → logprob: -5.757477283477783
    3. '_upper' → logprob: -5.882477283477783
    4. '_lower' → logprob: -7.382477283477783
    5. '_cap' → logprob: -8.132476806640625
    6. '_letter' → logprob: -8.632476806640625
    7. '_char' → logprob: -8.632476806640625
    8. '_character' → logprob: -9.632476806640625
    9. '_a' → logprob: -9.882476806640625
    10. '_valid' → logprob: -10.757476806640625

Token 22: '_A' (ID: 6829)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1053574085235596
    2. '_' → logprob: -1.1053574085235596
    3. ' =' → logprob: -1.1053574085235596
    4. '_=' → logprob: -6.6053571701049805
    5. '_valid' → logprob: -6.7303571701049805
    6. '_space' → logprob: -6.7303571701049805
    7. '_upper' → logprob: -7.2303571701049805
    8. ')' → logprob: -7.3553571701049805
    9. ' ' → logprob: -7.7303571701049805
    10. ' _' → logprob: -8.98035717010498

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10107969492673874
    2. '=' → logprob: -2.3510797023773193
    3. ' ' → logprob: -7.35107946395874
    4. '_' → logprob: -8.601079940795898
    5. 'space' → logprob: -11.601079940795898
    6. ',' → logprob: -11.601079940795898
    7. ' ==' → logprob: -11.851079940795898
    8. ' space' → logprob: -12.226079940795898
    9. '_space' → logprob: -12.601079940795898
    10. ' ,' → logprob: -13.476079940795898

Token 24: ' (' (ID: 350)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.04955075681209564
    2. 'user' → logprob: -3.049550771713257
    3. ' (' → logprob: -8.174551010131836
    4. '(user' → logprob: -8.299551010131836
    5. ' True' → logprob: -8.674551010131836
    6. ' ' → logprob: -8.674551010131836
    7. '"user' → logprob: -10.924551010131836
    8. ''user' → logprob: -10.924551010131836
    9. 'True' → logprob: -11.049551010131836
    10. ' False' → logprob: -11.549551010131836

Token 25: 'user' (ID: 1428)
  Prédit: 'user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.00462972279638052
    2. ' user' → logprob: -5.379629611968994
    3. ''user' → logprob: -13.004630088806152
    4. '(user' → logprob: -13.379630088806152
    5. '"user' → logprob: -13.379630088806152
    6. ' ' → logprob: -14.254630088806152
    7. 'u' → logprob: -14.504630088806152
    8. 'len' → logprob: -15.004630088806152
    9. '$user' → logprob: -15.004630088806152
    10. '   ' → logprob: -15.004630088806152

Token 26: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00043257648940198123
    2. '_' → logprob: -7.87543249130249
    3. '_user' → logprob: -11.250432968139648
    4. 'input' → logprob: -11.750432968139648
    5. ')' → logprob: -12.125432968139648
    6. '_token' → logprob: -12.625432968139648
    7. ')_' → logprob: -12.750432968139648
    8. '_output' → logprob: -13.125432968139648
    9. '```' → logprob: -13.250432968139648
    10. ' _' → logprob: -13.375432968139648

Token 27: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.039726369082927704
    2. '.startswith' → logprob: -3.2897262573242188
    3. ' ==' → logprob: -6.789726257324219
    4. '==' → logprob: -8.414726257324219
    5. '.' → logprob: -8.414726257324219
    6. ' [' → logprob: -10.164726257324219
    7. ' and' → logprob: -10.664726257324219
    8. '[:' → logprob: -10.789726257324219
    9. 'startswith' → logprob: -11.539726257324219
    10. ' .' → logprob: -11.539726257324219

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005563704180531204
    2. ' ' → logprob: -7.500556468963623
    3. '```' → logprob: -14.688055992126465
    4. ')' → logprob: -14.813055992126465
    5. '==' → logprob: -15.063055992126465
    6. ']' → logprob: -15.063055992126465
    7. '1' → logprob: -15.313055992126465
    8. ' ==' → logprob: -15.500555992126465
    9. '  ' → logprob: -15.563055992126465
    10. ':' → logprob: -15.563055992126465

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0760003998875618
    2. ']==' → logprob: -3.076000452041626
    3. '==' → logprob: -3.826000452041626
    4. ' ==' → logprob: -5.576000213623047
    5. ']=='' → logprob: -7.951000213623047
    6. '']' → logprob: -7.951000213623047
    7. ' ]' → logprob: -8.451000213623047
    8. '].' → logprob: -8.826000213623047
    9. ')' → logprob: -9.076000213623047
    10. '=' → logprob: -9.701000213623047

Token 30: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5240799784660339
    2. ' ==' → logprob: -0.8990799784660339
    3. ' !=' → logprob: -7.8990797996521
    4. '!=' → logprob: -8.524080276489258
    5. '=' → logprob: -8.899080276489258
    6. ')' → logprob: -9.399080276489258
    7. '.upper' → logprob: -9.524080276489258
    8. '=='' → logprob: -9.774080276489258
    9. '.' → logprob: -11.899080276489258
    10. '==
' → logprob: -12.149080276489258

Token 31: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.056713517755270004
    2. ''' → logprob: -3.181713581085205
    3. ' '' → logprob: -4.306713581085205
    4. 'A' → logprob: -9.181713104248047
    5. ' ' → logprob: -11.306713104248047
    6. '"A' → logprob: -11.431713104248047
    7. ' A' → logprob: -12.181713104248047
    8. ''a' → logprob: -12.806713104248047
    9. '`' → logprob: -13.056713104248047
    10. '’A' → logprob: -13.306713104248047

Token 32: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.246537173457909e-06
    2. ''A' → logprob: -13.000003814697266
    3. ' A' → logprob: -13.750003814697266
    4. 'a' → logprob: -14.875003814697266
    5. ')' → logprob: -15.625003814697266
    6. 'А' → logprob: -15.750003814697266
    7. '')' → logprob: -15.875003814697266
    8. ''' → logprob: -16.750003814697266
    9. 'B' → logprob: -17.625003814697266
    10. '"A' → logprob: -18.000003814697266

Token 33: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00029494395130313933
    2. ')' → logprob: -8.62529468536377
    3. ''' → logprob: -9.12529468536377
    4. '')
' → logprob: -12.25029468536377
    5. '')

' → logprob: -14.37529468536377
    6. '')
' → logprob: -14.87529468536377
    7. '")' → logprob: -15.00029468536377
    8. ' ')' → logprob: -15.37529468536377
    9. ''),' → logprob: -17.250295639038086
    10. ''))' → logprob: -17.250295639038086

Token 34: 'count' (ID: 5420)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1496875137090683
    2. 'and' → logprob: -2.0246875286102295
    3. ' ' → logprob: -5.77468729019165
    4. '<|end|>' → logprob: -5.89968729019165
    5. '
' → logprob: -7.89968729019165
    6. ' if' → logprob: -8.024687767028809
    7. ' or' → logprob: -8.399687767028809
    8. 'if' → logprob: -9.524687767028809
    9. ':' → logprob: -10.649687767028809
    10. '<|end|>' → logprob: -11.024687767028809

Token 35: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29084062576293945
    2. '_' → logprob: -1.4158406257629395
    3. 's' → logprob: -5.7908406257629395
    4. ')' → logprob: -6.1658406257629395
    5. '=' → logprob: -6.9158406257629395
    6. 'er' → logprob: -7.7908406257629395
    7. '(user' → logprob: -7.7908406257629395
    8. 'ed' → logprob: -8.165840148925781
    9. ' ' → logprob: -8.290840148925781
    10. '_chars' → logprob: -8.290840148925781

Token 36: '_A' (ID: 6829)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.3717932105064392
    2. '_' → logprob: -2.371793270111084
    3. ' user' → logprob: -2.496793270111084
    4. ' ' → logprob: -3.746793270111084
    5. '_user' → logprob: -3.746793270111084
    6. 'for' → logprob: -3.996793270111084
    7. '_letters' → logprob: -4.121793270111084
    8. 'f' → logprob: -4.496793270111084
    9. 's' → logprob: -4.746793270111084
    10. 'uppercase' → logprob: -5.746793270111084

Token 37: '_in' (ID: 2267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21040640771389008
    2. ' =' → logprob: -1.8354064226150513
    3. '=' → logprob: -3.9604063034057617
    4. '=user' → logprob: -5.460406303405762
    5. ' ' → logprob: -6.210406303405762
    6. 'user' → logprob: -6.960406303405762
    7. '_' → logprob: -7.085406303405762
    8. '_letters' → logprob: -7.210406303405762
    9. '_s' → logprob: -7.335406303405762
    10. '_user' → logprob: -7.585406303405762

Token 38: '_string' (ID: 8609)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.0025006290525197983
    2. ' user' → logprob: -6.127500534057617
    3. '_user' → logprob: -8.377500534057617
    4. '(user' → logprob: -10.127500534057617
    5. '=user' → logprob: -11.127500534057617
    6. '[user' → logprob: -12.127500534057617
    7. 'the' → logprob: -12.627500534057617
    8. '"user' → logprob: -12.752500534057617
    9. 'input' → logprob: -12.877500534057617
    10. ' ' → logprob: -12.877500534057617

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001185703556984663
    2. '=' → logprob: -6.751185894012451
    3. ' ' → logprob: -12.126185417175293
    4. 'user' → logprob: -12.376185417175293
    5. '=user' → logprob: -13.001185417175293
    6. ' +=' → logprob: -13.751185417175293
    7. 's' → logprob: -14.126185417175293
    8. ')' → logprob: -14.751185417175293
    9. ' user' → logprob: -15.001185417175293
    10. '<|end|>' → logprob: -15.376185417175293

Token 40: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.5761678814888
    2. 'user' → logprob: -0.8261678814888
    3. '(user' → logprob: -9.076168060302734
    4. '0' → logprob: -10.201168060302734
    5. ' ' → logprob: -10.201168060302734
    6. ' (' → logprob: -11.576168060302734
    7. '"user' → logprob: -12.326168060302734
    8. ''user' → logprob: -12.576168060302734
    9. '[user' → logprob: -12.701168060302734
    10. '```' → logprob: -12.951168060302734

Token 41: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.2961512513575144e-05
    2. 'input' → logprob: -11.125022888183594
    3. '_' → logprob: -12.375022888183594
    4. 'Input' → logprob: -13.750022888183594
    5. '```' → logprob: -14.000022888183594
    6. ' _' → logprob: -14.625022888183594
    7. '_in' → logprob: -15.125022888183594
    8. '_output' → logprob: -15.375022888183594
    9. '_user' → logprob: -15.375022888183594
    10. '_inputs' → logprob: -15.500022888183594

Token 42: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.0031871015671640635
    2. '.' → logprob: -5.75318717956543
    3. '.replace' → logprob: -12.00318717956543
    4. '.upper' → logprob: -13.25318717956543
    5. '.split' → logprob: -15.00318717956543
    6. '.c' → logprob: -15.00318717956543
    7. 'count' → logprob: -15.25318717956543
    8. '.lower' → logprob: -15.37818717956543
    9. '.Count' → logprob: -15.50318717956543
    10. ' .' → logprob: -16.37818717956543

Token 43: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03374471142888069
    2. '(' → logprob: -3.4087448120117188
    3. '("("' → logprob: -9.908744812011719
    4. '("' → logprob: -10.658744812011719
    5. ''' → logprob: -11.158744812011719
    6. '(
' → logprob: -12.783744812011719
    7. '('(' → logprob: -13.283744812011719
    8. '(('' → logprob: -13.408744812011719
    9. ' ('' → logprob: -14.158744812011719
    10. ' (' → logprob: -14.533744812011719

Token 44: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00014823723176959902
    2. ''A' → logprob: -8.875147819519043
    3. ' A' → logprob: -12.000147819519043
    4. '')' → logprob: -13.875147819519043
    5. ''' → logprob: -14.500147819519043
    6. 'А' → logprob: -15.000147819519043
    7. ')' → logprob: -16.00014877319336
    8. 'a' → logprob: -16.00014877319336
    9. '_A' → logprob: -16.50014877319336
    10. '	A' → logprob: -17.00014877319336

Token 45: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0011102091521024704
    2. ')' → logprob: -7.001110076904297
    3. ''' → logprob: -8.626110076904297
    4. '('' → logprob: -12.126110076904297
    5. '")' → logprob: -12.376110076904297
    6. '')
' → logprob: -12.376110076904297
    7. ''))' → logprob: -13.251110076904297
    8. ' ')' → logprob: -14.001110076904297
    9. '()' → logprob: -14.126110076904297
    10. '')

' → logprob: -14.376110076904297

Token 46: 'count' (ID: 5420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9364578127861023
    2. '<|end|>' → logprob: -1.436457872390747
    3. ' if' → logprob: -1.561457872390747
    4. ' and' → logprob: -2.686457872390747
    5. 'and' → logprob: -3.061457872390747
    6. ' ' → logprob: -3.561457872390747
    7. '>' → logprob: -5.936457633972168
    8. ')' → logprob: -5.936457633972168
    9. ':' → logprob: -6.061457633972168
    10. '<|end|>' → logprob: -6.311457633972168

Token 47: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0069074141792953014
    2. '_' → logprob: -5.0069074630737305
    3. '(' → logprob: -9.63190746307373
    4. 'of' → logprob: -9.75690746307373
    5. '_OF' → logprob: -11.75690746307373
    6. 'Of' → logprob: -11.88190746307373
    7. '_for' → logprob: -12.13190746307373
    8. ')' → logprob: -12.13190746307373
    9. '<|end|>' → logprob: -12.13190746307373
    10. '()' → logprob: -12.25690746307373

Token 48: '_C' (ID: 1720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0021475553512573
    2. 'user' → logprob: -1.2521475553512573
    3. '_A' → logprob: -2.002147674560547
    4. ' user' → logprob: -2.627147674560547
    5. ''' → logprob: -3.252147674560547
    6. '_a' → logprob: -4.002147674560547
    7. ''user' → logprob: -4.252147674560547
    8. '_user' → logprob: -4.377147674560547
    9. 'A' → logprob: -4.377147674560547
    10. ' ' → logprob: -4.502147674560547

Token 49: '_in' (ID: 2267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25525104999542236
    2. '=' → logprob: -1.5052510499954224
    3. '_in' → logprob: -6.130250930786133
    4. '_' → logprob: -7.755250930786133
    5. ' in' → logprob: -8.255250930786133
    6. 'in' → logprob: -8.630250930786133
    7. ' ' → logprob: -8.880250930786133
    8. '  ' → logprob: -10.630250930786133
    9. 'In' → logprob: -11.255250930786133
    10. ')' → logprob: -11.380250930786133

Token 50: '_string' (ID: 8609)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5145470499992371
    2. '_string' → logprob: -1.3895471096038818
    3. 'string' → logprob: -1.8895471096038818
    4. ' user' → logprob: -6.764546871185303
    5. 'String' → logprob: -8.264547348022461
    6. '_user' → logprob: -8.889547348022461
    7. '_' → logprob: -9.514547348022461
    8. 's' → logprob: -9.764547348022461
    9. ' string' → logprob: -9.889547348022461
    10. '_strings' → logprob: -10.764547348022461

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897588402032852
    2. '=' → logprob: -2.4639759063720703
    3. '=user' → logprob: -11.46397590637207
    4. '(' → logprob: -12.08897590637207
    5. 'user' → logprob: -12.08897590637207
    6. ' ' → logprob: -12.33897590637207
    7. ')' → logprob: -12.33897590637207
    8. '<|end|>' → logprob: -12.96397590637207
    9. '(user' → logprob: -13.08897590637207
    10. ' user' → logprob: -14.71397590637207

Token 52: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.3134452998638153
    2. 'user' → logprob: -1.3134453296661377
    3. ' ' → logprob: -9.313445091247559
    4. ''user' → logprob: -10.313445091247559
    5. '(user' → logprob: -11.188445091247559
    6. '"user' → logprob: -11.938445091247559
    7. '0' → logprob: -12.063445091247559
    8. '	user' → logprob: -12.438445091247559
    9. ' '' → logprob: -12.438445091247559
    10. '<|end|>' → logprob: -12.813445091247559

Token 53: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.963691804325208e-05
    2. '_' → logprob: -11.125029563903809
    3. '```' → logprob: -12.000029563903809
    4. 'Input' → logprob: -13.000029563903809
    5. 'input' → logprob: -13.125029563903809
    6. '_inputs' → logprob: -13.875029563903809
    7. 'put' → logprob: -14.500029563903809
    8. ' _' → logprob: -14.625029563903809
    9. '_INPUT' → logprob: -14.625029563903809
    10. '__' → logprob: -15.000029563903809

Token 54: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00012439649435691535
    2. '.' → logprob: -9.000123977661133
    3. '.replace' → logprob: -14.750123977661133
    4. 'count' → logprob: -15.375123977661133
    5. '.lower' → logprob: -16.000123977661133
    6. '.Count' → logprob: -16.125123977661133
    7. '.find' → logprob: -16.875123977661133
    8. '.upper' → logprob: -17.250123977661133
    9. '.index' → logprob: -17.375123977661133
    10. ' .' → logprob: -17.375123977661133

Token 55: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.008617054671049118
    2. '(' → logprob: -4.758616924285889
    3. ''' → logprob: -13.758617401123047
    4. '("("' → logprob: -14.133617401123047
    5. ' ('' → logprob: -15.633617401123047
    6. '(('' → logprob: -16.133617401123047
    7. '("' → logprob: -16.133617401123047
    8. '(
' → logprob: -16.383617401123047
    9. '('(' → logprob: -16.508617401123047
    10. '(\'' → logprob: -16.883617401123047

Token 56: 'C' (ID: 34)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.006088173016905785
    2. 'C' → logprob: -5.1310882568359375
    3. ''A' → logprob: -9.256088256835938
    4. ''' → logprob: -9.881088256835938
    5. '"C' → logprob: -12.381088256835938
    6. ''S' → logprob: -12.506088256835938
    7. '')' → logprob: -13.256088256835938
    8. 'A' → logprob: -14.006088256835938
    9. ''D' → logprob: -14.506088256835938
    10. ' C' → logprob: -15.381088256835938

Token 57: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.31331852078437805
    2. ')' → logprob: -1.3133184909820557
    3. ''' → logprob: -10.313318252563477
    4. '")' → logprob: -11.438318252563477
    5. '`)' → logprob: -12.063318252563477
    6. '()' → logprob: -13.438318252563477
    7. '#' → logprob: -13.688318252563477
    8. '')
' → logprob: -13.688318252563477
    9. '```' → logprob: -13.813318252563477
    10. ''))' → logprob: -14.313318252563477

Token 58: 'count' (ID: 5420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008610791526734829
    2. ' if' → logprob: -5.883610725402832
    3. ':' → logprob: -6.258610725402832
    4. 'i' → logprob: -6.258610725402832
    5. '<|end|>' → logprob: -6.883610725402832
    6. '
' → logprob: -8.633610725402832
    7. '#' → logprob: -8.883610725402832
    8. '```' → logprob: -8.883610725402832
    9. 'valid' → logprob: -9.758610725402832
    10. 'for' → logprob: -9.758610725402832

Token 59: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0008261834154836833
    2. '_' → logprob: -7.125826358795166
    3. 'of' → logprob: -11.250825881958008
    4. '_OF' → logprob: -13.000825881958008
    5. 'Of' → logprob: -13.000825881958008
    6. ' of' → logprob: -13.750825881958008
    7. '_for' → logprob: -14.500825881958008
    8. '```' → logprob: -14.500825881958008
    9. 's' → logprob: -15.250825881958008
    10. '('_' → logprob: -15.500825881958008

Token 60: '_C' (ID: 1720)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3494877815246582
    2. 'A' → logprob: -2.474487781524658
    3. 'D' → logprob: -2.724487781524658
    4. '_B' → logprob: -3.099487781524658
    5. 'C' → logprob: -3.724487781524658
    6. '_A' → logprob: -4.474487781524658
    7. 'G' → logprob: -4.724487781524658
    8. 'user' → logprob: -4.724487781524658
    9. 'E' → logprob: -4.974487781524658
    10. ''A' → logprob: -5.099487781524658

Token 61: '_in' (ID: 2267)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '_middle' (ID: 155207)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.21156743168830872
    2. 'user' → logprob: -1.9615674018859863
    3. 'string' → logprob: -3.2115674018859863
    4. '_user' → logprob: -4.836567401885986
    5. ' user' → logprob: -7.336567401885986
    6. 'String' → logprob: -8.086567878723145
    7. '_' → logprob: -8.211567878723145
    8. '_input' → logprob: -8.461567878723145
    9. '```' → logprob: -9.836567878723145
    10. ' string' → logprob: -10.211567878723145

Token 63: '_sub' (ID: 11572)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04490353539586067
    2. '=' → logprob: -3.294903516769409
    3. '_' → logprob: -5.044903755187988
    4. 'user' → logprob: -8.919903755187988
    5. '_=' → logprob: -9.544903755187988
    6. 's' → logprob: -10.169903755187988
    7. '_user' → logprob: -10.419903755187988
    8. '<|end|>' → logprob: -10.419903755187988
    9. '=user' → logprob: -11.044903755187988
    10. ' ' → logprob: -11.294903755187988

Token 64: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.23717357218265533
    2. 'tring' → logprob: -1.7371735572814941
    3. 'ring' → logprob: -3.362173557281494
    4. 'tr' → logprob: -8.112174034118652
    5. '_string' → logprob: -9.862174034118652
    6. 'ing' → logprob: -10.112174034118652
    7. ' string' → logprob: -10.862174034118652
    8. 'str' → logprob: -11.362174034118652
    9. 't' → logprob: -11.862174034118652
    10. 'r' → logprob: -11.987174034118652

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003207538742572069
    2. '=' → logprob: -5.753207683563232
    3. 'user' → logprob: -10.878207206726074
    4. ' ' → logprob: -12.628207206726074
    5. '=user' → logprob: -12.878207206726074
    6. ' user' → logprob: -13.878207206726074
    7. '(' → logprob: -14.253207206726074
    8. '_' → logprob: -14.503207206726074
    9. '<|end|>' → logprob: -14.628207206726074
    10. ')' → logprob: -14.753207206726074

Token 66: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.20183633267879486
    2. 'user' → logprob: -1.701836347579956
    3. '(user' → logprob: -8.576836585998535
    4. ' len' → logprob: -9.076836585998535
    5. 'len' → logprob: -9.826836585998535
    6. ' count' → logprob: -10.576836585998535
    7. 'count' → logprob: -11.201836585998535
    8. ' ' → logprob: -11.701836585998535
    9. ' (' → logprob: -11.826836585998535
    10. '(' → logprob: -12.826836585998535

Token 67: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.558399319241289e-05
    2. '_' → logprob: -10.875025749206543
    3. 'Input' → logprob: -13.375025749206543
    4. 'input' → logprob: -13.875025749206543
    5. '```' → logprob: -14.000025749206543
    6. '_string' → logprob: -14.375025749206543
    7. '_inputs' → logprob: -14.625025749206543
    8. '_INPUT' → logprob: -15.000025749206543
    9. '[' → logprob: -15.125025749206543
    10. ' _' → logprob: -15.250025749206543

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013288697227835655
    2. '[len' → logprob: -4.388288497924805
    3. '.count' → logprob: -7.638288497924805
    4. '[user' → logprob: -9.013288497924805
    5. '.find' → logprob: -10.013288497924805
    6. 'user' → logprob: -10.388288497924805
    7. '[count' → logprob: -10.513288497924805
    8. '[int' → logprob: -11.138288497924805
    9. '```' → logprob: -11.388288497924805
    10. 'len' → logprob: -11.763288497924805

Token 69: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019221225753426552
    2. '2' → logprob: -4.394221305847168
    3. 'len' → logprob: -5.644221305847168
    4. '3' → logprob: -6.394221305847168
    5. '4' → logprob: -8.269221305847168
    6. '(' → logprob: -8.269221305847168
    7. '5' → logprob: -8.394221305847168
    8. 'user' → logprob: -8.894221305847168
    9. '10' → logprob: -9.269221305847168
    10. ':' → logprob: -9.769221305847168

Token 70: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.03469233587384224
    2. ':' → logprob: -3.4096922874450684
    3. ':]' → logprob: -7.284692287445068
    4. ' :-' → logprob: -8.659692764282227
    5. ' :' → logprob: -8.784692764282227
    6. ':user' → logprob: -11.284692764282227
    7. ' :]' → logprob: -12.409692764282227
    8. '-' → logprob: -12.534692764282227
    9. ':].' → logprob: -12.909692764282227
    10. ':end' → logprob: -13.409692764282227

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05199437588453293
    2. '2' → logprob: -3.0519943237304688
    3. '3' → logprob: -5.801994323730469
    4. '4' → logprob: -8.426994323730469
    5. '5' → logprob: -9.489494323730469
    6. '6' → logprob: -10.801994323730469
    7. '7' → logprob: -11.426994323730469
    8. '```' → logprob: -11.801994323730469
    9. '

' → logprob: -12.301994323730469
    10. '8' → logprob: -12.426994323730469

Token 72: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29999086260795593
    2. '.count' → logprob: -1.5499908924102783
    3. ').' → logprob: -3.1749908924102783
    4. '].' → logprob: -6.174990653991699
    5. ']' → logprob: -6.674990653991699
    6. '.' → logprob: -6.924990653991699
    7. '])' → logprob: -7.924990653991699
    8. '')' → logprob: -8.5499906539917
    9. ' )' → logprob: -9.7999906539917
    10. ' .' → logprob: -10.5499906539917

Token 73: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9361264946837764e-07
    2. ' count' → logprob: -16.875
    3. '.count' → logprob: -17.625
    4. 'counts' → logprob: -18.125
    5. 'find' → logprob: -19.375
    6. 'c' → logprob: -19.375
    7. '```' → logprob: -19.75
    8. '	count' → logprob: -20.375
    9. 'co' → logprob: -20.5
    10. 'ount' → logprob: -20.625

Token 74: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.038051363080739975
    2. '(' → logprob: -3.2880513668060303
    3. ''' → logprob: -11.91305160522461
    4. '(
' → logprob: -13.53805160522461
    5. '("' → logprob: -14.41305160522461
    6. '("("' → logprob: -14.78805160522461
    7. '(('' → logprob: -15.16305160522461
    8. ' (' → logprob: -15.66305160522461
    9. ' ('' → logprob: -15.78805160522461
    10. ''s' → logprob: -16.28805160522461

Token 75: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06048605218529701
    2. ''C' → logprob: -3.060486078262329
    3. 'A' → logprob: -5.06048583984375
    4. ''' → logprob: -5.81048583984375
    5. ''A' → logprob: -6.18548583984375
    6. '')' → logprob: -8.31048583984375
    7. 'B' → logprob: -9.31048583984375
    8. ')' → logprob: -10.68548583984375
    9. '"C' → logprob: -11.06048583984375
    10. 'D' → logprob: -11.56048583984375

Token 76: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20146216452121735
    2. '')' → logprob: -1.7014621496200562
    3. ''' → logprob: -10.201461791992188
    4. '")' → logprob: -13.076461791992188
    5. '`)' → logprob: -13.326461791992188
    6. '()' → logprob: -13.701461791992188
    7. '))' → logprob: -13.826461791992188
    8. ')'' → logprob: -13.951461791992188
    9. ')
' → logprob: -14.326461791992188
    10. '')
' → logprob: -14.326461791992188

Token 77: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08461538702249527
    2. '#' → logprob: -3.959615468978882
    3. '<|end|>' → logprob: -4.084615230560303
    4. ' if' → logprob: -4.209615230560303
    5. ':' → logprob: -5.084615230560303
    6. 'i' → logprob: -5.084615230560303
    7. 'and' → logprob: -5.584615230560303
    8. '
' → logprob: -5.709615230560303
    9. ' ' → logprob: -6.084615230560303
    10. ' and' → logprob: -7.084615230560303

Token 78: ' (
' (ID: 4112)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007080371491611004
    2. ' user' → logprob: -5.632080554962158
    3. ' not' → logprob: -6.632080554962158
    4. ' len' → logprob: -7.257080554962158
    5. ' (' → logprob: -7.382080554962158
    6. 'is' → logprob: -7.632080554962158
    7. ' ' → logprob: -8.632080078125
    8. ' count' → logprob: -9.632080078125
    9. ' ' → logprob: -9.757080078125
    10. 'user' → logprob: -11.007080078125

Token 79: '   ' (ID: 271)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.049184493720531464
    2. 'is' → logprob: -3.549184560775757
    3. ' not' → logprob: -4.549184322357178
    4. ' user' → logprob: -5.049184322357178
    5. 'not' → logprob: -7.299184322357178
    6. 'user' → logprob: -7.299184322357178
    7. ' len' → logprob: -7.674184322357178
    8. ' (' → logprob: -8.549184799194336
    9. 'len' → logprob: -9.299184799194336
    10. ')' → logprob: -9.924184799194336

Token 80: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2629266381263733
    2. 'is' (adapté à ' is') → logprob: -1.5129265785217285
    3. ' not' → logprob: -4.8879265785217285
    4. 'not' → logprob: -6.6379265785217285
    5. ' user' → logprob: -7.0129265785217285
    6. ' len' → logprob: -7.6379265785217285
    7. 'user' → logprob: -7.8879265785217285
    8. 'len' → logprob: -8.762927055358887
    9. ' (' → logprob: -10.012927055358887
    10. ')' → logprob: -10.012927055358887

Token 81: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -2.696889623621246e-06
    2. '_f' → logprob: -13.25000286102295
    3. '_' → logprob: -14.50000286102295
    4. ' _' → logprob: -15.50000286102295
    5. ')_' → logprob: -16.250001907348633
    6. '_user' → logprob: -16.875001907348633
    7. '_FIRST' → logprob: -17.750001907348633
    8. '_First' → logprob: -18.625001907348633
    9. '_second' → logprob: -18.875001907348633
    10. '_for' → logprob: -19.750001907348633

Token 82: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.0325924449716695e-05
    2. '_char' → logprob: -11.87501049041748
    3. '_' → logprob: -13.25001049041748
    4. ' _' → logprob: -14.12501049041748
    5. 'character' → logprob: -15.00001049041748
    6. '_CHARACTER' → logprob: -16.125009536743164
    7. ')' → logprob: -16.500009536743164
    8. '_first' → logprob: -16.750009536743164
    9. ')_' → logprob: -16.875009536743164
    10. '_c' → logprob: -17.000009536743164

Token 83: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.007711681537330151
    2. '_' → logprob: -4.882711887359619
    3. ')' → logprob: -9.757711410522461
    4. ')_' → logprob: -11.007711410522461
    5. '==' → logprob: -11.382711410522461
    6. ' _' → logprob: -11.882711410522461
    7. ''_' → logprob: -12.382711410522461
    8. '_)' → logprob: -13.007711410522461
    9. ' ==' → logprob: -13.382711410522461
    10. '_=' → logprob: -13.882711410522461

Token 84: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0023680359590798616
    2. 'and' → logprob: -6.127367973327637
    3. ' or' → logprob: -9.002367973327637
    4. ')' → logprob: -10.002367973327637
    5. ' ' → logprob: -12.002367973327637
    6. ' )' → logprob: -12.502367973327637
    7. '    ' → logprob: -13.127367973327637
    8. '   ' → logprob: -13.502367973327637
    9. ' a' → logprob: -15.252367973327637
    10. 'or' → logprob: -15.502367973327637

Token 85: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00275602238252759
    2. 'and' → logprob: -6.002756118774414
    3. ')' → logprob: -8.502756118774414
    4. '   ' → logprob: -10.252756118774414
    5. ' or' → logprob: -10.377756118774414
    6. ' ' → logprob: -12.377756118774414
    7. ' )' → logprob: -12.502756118774414
    8. '    ' → logprob: -13.377756118774414
    9. ' a' → logprob: -15.002756118774414
    10. ' an' → logprob: -15.502756118774414

Token 86: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006551594007760286
    2. 'and' (adapté à ' and') → logprob: -5.131551742553711
    3. ')' → logprob: -7.881551742553711
    4. ' or' → logprob: -8.506551742553711
    5. '   ' → logprob: -10.506551742553711
    6. ' )' → logprob: -12.256551742553711
    7. ' ' → logprob: -12.381551742553711
    8. '    ' → logprob: -13.381551742553711
    9. 'or' → logprob: -13.756551742553711
    10. '),' → logprob: -14.006551742553711

Token 87: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.11477674543857574
    2. 'count' → logprob: -3.364776849746704
    3. ' (' → logprob: -3.614776849746704
    4. ' user' → logprob: -3.739776849746704
    5. ' all' → logprob: -4.989776611328125
    6. ' not' → logprob: -5.114776611328125
    7. '(count' → logprob: -5.489776611328125
    8. 'user' → logprob: -5.989776611328125
    9. ' '' → logprob: -7.239776611328125
    10. 'all' → logprob: -7.364776611328125

Token 88: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.125001907348633
    3. 'of' → logprob: -15.125001907348633
    4. ' of' → logprob: -15.375001907348633
    5. ')' → logprob: -17.125001907348633
    6. 'Of' → logprob: -17.250001907348633
    7. ''_' → logprob: -17.250001907348633
    8. '```' → logprob: -17.625001907348633
    9. ')_' → logprob: -17.875001907348633
    10. '_for' → logprob: -18.125001907348633

Token 89: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.17985029518604279
    2. 'A' → logprob: -1.8048503398895264
    3. '_C' → logprob: -10.429850578308105
    4. 'C' → logprob: -10.929850578308105
    5. ' A' → logprob: -10.929850578308105
    6. ''A' → logprob: -11.179850578308105
    7. '```' → logprob: -12.304850578308105
    8. '<|end|>' → logprob: -12.554850578308105
    9. ')' → logprob: -12.679850578308105
    10. 'a' → logprob: -12.804850578308105

Token 90: '_in' (ID: 2267)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42456457018852234
    2. '>' → logprob: -1.6745645999908447
    3. ' >=' → logprob: -2.5495645999908447
    4. ' ==' → logprob: -3.6745645999908447
    5. '>=' → logprob: -4.424564361572266
    6. ' <' → logprob: -4.799564361572266
    7. '==' → logprob: -4.799564361572266
    8. '_in' → logprob: -4.924564361572266
    9. ' <=' → logprob: -5.174564361572266
    10. ')' → logprob: -5.174564361572266

Token 91: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0024902839213609695
    2. 'string' → logprob: -6.377490520477295
    3. '_' → logprob: -7.252490520477295
    4. '_user' → logprob: -10.627490043640137
    5. '_str' → logprob: -11.252490043640137
    6. '_s' → logprob: -11.502490043640137
    7. 's' → logprob: -12.127490043640137
    8. 'user' → logprob: -12.252490043640137
    9. ' _' → logprob: -12.752490043640137
    10. '_strings' → logprob: -12.752490043640137

Token 92: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0573275089263916
    2. ' >=' → logprob: -1.1823275089263916
    3. ' >' → logprob: -1.5573275089263916
    4. '==' → logprob: -2.6823275089263916
    5. '>' → logprob: -3.5573275089263916
    6. '>=' → logprob: -4.0573272705078125
    7. ' <=' → logprob: -4.5573272705078125
    8. ')' → logprob: -5.0573272705078125
    9. ' ' → logprob: -6.1823272705078125
    10. ' <' → logprob: -6.8073272705078125

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5381975173950195
    2. '2' → logprob: -1.0381975173950195
    3. '3' → logprob: -3.0381975173950195
    4. ' ' → logprob: -4.4131975173950195
    5. '4' → logprob: -6.6631975173950195
    6. '0' → logprob: -7.6631975173950195
    7. '5' → logprob: -8.41319751739502
    8. '6' → logprob: -11.03819751739502
    9. 'count' → logprob: -11.03819751739502
    10. ')' → logprob: -11.28819751739502

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3512698709964752
    2. '2' → logprob: -1.3512698411941528
    3. '3' → logprob: -3.3512699604034424
    4. '4' → logprob: -6.976269721984863
    5. ' ' → logprob: -7.351269721984863
    6. '0' → logprob: -7.976269721984863
    7. '5' → logprob: -8.601269721984863
    8. 'count' → logprob: -9.726269721984863
    9. 'user' → logprob: -10.913769721984863
    10. '6' → logprob: -10.976269721984863

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6480720639228821
    2. ')' → logprob: -1.6480720043182373
    3. ' and' → logprob: -1.6480720043182373
    4. 'and' → logprob: -2.3980720043182373
    5. '<|end|>' → logprob: -7.023072242736816
    6. '
' → logprob: -9.273072242736816
    7. '  ' → logprob: -10.023072242736816
    8. '<|end|>' → logprob: -10.273072242736816
    9. ' )' → logprob: -10.398072242736816
    10. ' ' → logprob: -10.898072242736816

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07227819412946701
    2. ' and' → logprob: -2.9472782611846924
    3. 'and' → logprob: -4.697278022766113
    4. ')' → logprob: -4.822278022766113
    5. '<|end|>' → logprob: -9.947278022766113
    6. '```' → logprob: -11.822278022766113
    7. '    ' → logprob: -12.572278022766113
    8. ' )' → logprob: -12.572278022766113
    9. '  ' → logprob: -12.572278022766113
    10. ',' → logprob: -13.447278022766113

Token 97: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41708657145500183
    2. 'and' (adapté à ' and') → logprob: -1.4170866012573242
    3. ' and' → logprob: -2.417086601257324
    4. ')' → logprob: -4.667086601257324
    5. '```' → logprob: -12.042086601257324
    6. ' ' → logprob: -12.167086601257324
    7. '),' → logprob: -12.417086601257324
    8. '	and' → logprob: -12.667086601257324
    9. '  ' → logprob: -12.792086601257324
    10. ',' → logprob: -12.917086601257324

Token 98: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3239704966545105
    2. ' count' → logprob: -1.3239705562591553
    3. ' all' → logprob: -5.323970317840576
    4. 'all' → logprob: -6.448970317840576
    5. ' not' → logprob: -6.698970317840576
    6. 'user' → logprob: -7.073970317840576
    7. '   ' → logprob: -7.698970317840576
    8. '(count' → logprob: -7.823970317840576
    9. 'not' → logprob: -8.073970794677734
    10. ' user' → logprob: -8.198970794677734

Token 99: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.2664456789934775e-06
    2. ' of' → logprob: -14.625000953674316
    3. '```' → logprob: -15.875000953674316
    4. '_' → logprob: -16.000001907348633
    5. ''_' → logprob: -16.250001907348633
    6. ')_' → logprob: -16.250001907348633
    7. '_OF' → logprob: -16.500001907348633
    8. 'of' → logprob: -16.500001907348633
    9. ' _' → logprob: -16.750001907348633
    10. ')' → logprob: -17.000001907348633

Token 100: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.05492414906620979
    2. 'C' → logprob: -2.929924249649048
    3. ''C' → logprob: -11.554924011230469
    4. ' C' → logprob: -11.929924011230469
    5. '_A' → logprob: -12.679924011230469
    6. '_' → logprob: -12.679924011230469
    7. '```' → logprob: -12.679924011230469
    8. '_c' → logprob: -13.304924011230469
    9. '	C' → logprob: -13.554924011230469
    10. '_B' → logprob: -13.554924011230469

Token 101: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.5577775128767826e-06
    2. '_of' → logprob: -13.375005722045898
    3. '_' → logprob: -13.500005722045898
    4. 'in' → logprob: -14.250005722045898
    5. ')' → logprob: -14.625005722045898
    6. '==' → logprob: -14.750005722045898
    7. '_for' → logprob: -15.875005722045898
    8. ' _' → logprob: -16.0000057220459
    9. '_i' → logprob: -16.0000057220459
    10. '_at' → logprob: -16.0000057220459

Token 102: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.03804585337638855
    2. 'string' → logprob: -3.288045883178711
    3. '_' → logprob: -12.913045883178711
    4. '_s' → logprob: -14.663045883178711
    5. ' string' → logprob: -14.788045883178711
    6. '_str' → logprob: -15.163045883178711
    7. '_user' → logprob: -15.788045883178711
    8. 'String' → logprob: -15.788045883178711
    9. 'user' → logprob: -16.03804588317871
    10. '_strings' → logprob: -16.03804588317871

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7496398091316223
    2. ' ==' → logprob: -0.9996398091316223
    3. ' >=' → logprob: -2.6246397495269775
    4. '>=' → logprob: -3.2496397495269775
    5. ' <=' → logprob: -3.7496397495269775
    6. '>' → logprob: -4.749639987945557
    7. '<=' → logprob: -4.874639987945557
    8. ' >' → logprob: -4.874639987945557
    9. ' ' → logprob: -8.124639511108398
    10. ' <' → logprob: -8.999639511108398

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5358697175979614
    2. '2' → logprob: -1.0358697175979614
    3. '0' → logprob: -3.160869598388672
    4. '3' → logprob: -4.160869598388672
    5. ' ' → logprob: -6.535869598388672
    6. '4' → logprob: -7.910869598388672
    7. 'count' → logprob: -9.535869598388672
    8. '5' → logprob: -10.535869598388672
    9. '10' → logprob: -12.848369598388672
    10. '6' → logprob: -13.348369598388672

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6883445382118225
    2. '2' → logprob: -0.8133445382118225
    3. '0' → logprob: -3.1883444786071777
    4. '3' → logprob: -4.438344478607178
    5. ' ' → logprob: -7.688344478607178
    6. '4' → logprob: -7.813344478607178
    7. 'count' → logprob: -8.563344955444336
    8. '5' → logprob: -10.188344955444336
    9. '10' → logprob: -11.438344955444336
    10. '7' → logprob: -11.688344955444336

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08172444254159927
    2. 'and' → logprob: -3.3317244052886963
    3. ' and' → logprob: -3.5817244052886963
    4. ')' → logprob: -4.206724643707275
    5. '<|end|>' → logprob: -11.331724166870117
    6. '```' → logprob: -13.206724166870117
    7. '<|end|>' → logprob: -13.581724166870117
    8. '  ' → logprob: -14.081724166870117
    9. ' )' → logprob: -14.206724166870117
    10. '),' → logprob: -14.331724166870117

Token 107: '   ' (ID: 271)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4777822196483612
    2. '   ' → logprob: -0.9777822494506836
    3. ' and' → logprob: -5.852782249450684
    4. ')' → logprob: -7.102782249450684
    5. '```' → logprob: -13.977782249450684
    6. '),' → logprob: -14.477782249450684
    7. '...' → logprob: -14.477782249450684
    8. '  ' → logprob: -14.727782249450684
    9. '<|end|>' → logprob: -15.102782249450684
    10. '	and' → logprob: -15.852782249450684

Token 108: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' (adapté à ' and') → logprob: -0.1368483453989029
    2. '   ' → logprob: -2.1368484497070312
    3. ' and' → logprob: -4.761848449707031
    4. ')' → logprob: -6.636848449707031
    5. '	and' → logprob: -12.386848449707031
    6. '  ' → logprob: -13.386848449707031
    7. '),' → logprob: -14.011848449707031
    8. '):' → logprob: -14.011848449707031
    9. '):
' → logprob: -14.386848449707031
    10. ' ' → logprob: -14.511848449707031

Token 109: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12561801075935364
    2. ' count' → logprob: -2.2506179809570312
    3. 'for' → logprob: -5.125617980957031
    4. '   ' → logprob: -6.000617980957031
    5. 'not' → logprob: -6.375617980957031
    6. ' not' → logprob: -6.625617980957031
    7. 'user' → logprob: -7.875617980957031
    8. '(count' → logprob: -8.375617980957031
    9. ' all' → logprob: -9.000617980957031
    10. ' for' → logprob: -9.125617980957031

Token 110: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3663626305060461e-05
    2. 'of' → logprob: -11.25001335144043
    3. '_OF' → logprob: -15.62501335144043
    4. ' of' → logprob: -15.87501335144043
    5. '_' → logprob: -16.62501335144043
    6. '_for' → logprob: -16.87501335144043
    7. ')' → logprob: -17.50001335144043
    8. 'Of' → logprob: -17.75001335144043
    9. 's' → logprob: -18.12501335144043
    10. ''_' → logprob: -18.12501335144043

Token 111: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -0.03755902871489525
    2. 'C' → logprob: -3.4125590324401855
    3. '_middle' → logprob: -6.0375590324401855
    4. 'middle' → logprob: -6.5375590324401855
    5. '_c' → logprob: -10.787558555603027
    6. '_string' → logprob: -11.037558555603027
    7. 'string' → logprob: -11.662558555603027
    8. '_sub' → logprob: -12.912558555603027
    9. '```' → logprob: -12.912558555603027
    10. '_char' → logprob: -13.162558555603027

Token 112: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.3902033970225602e-05
    2. 'in' → logprob: -11.375014305114746
    3. 'In' → logprob: -14.750014305114746
    4. '_' → logprob: -14.750014305114746
    5. '_IN' → logprob: -14.750014305114746
    6. ' _' → logprob: -14.875014305114746
    7. '_i' → logprob: -16.00001335144043
    8. 'n' → logprob: -16.25001335144043
    9. ')' → logprob: -17.00001335144043
    10. '```' → logprob: -17.00001335144043

Token 113: '_middle' (ID: 155207)
  Prédit: '_middle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_middle' → logprob: -0.47504037618637085
    2. 'middle' → logprob: -0.9750403761863708
    3. 'string' → logprob: -7.475040435791016
    4. '_string' → logprob: -8.100040435791016
    5. 'substring' → logprob: -10.475040435791016
    6. '_mid' → logprob: -11.225040435791016
    7. 'mid' → logprob: -11.350040435791016
    8. '_sub' → logprob: -11.350040435791016
    9. ' middle' → logprob: -12.100040435791016
    10. '_' → logprob: -12.725040435791016

Token 114: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0005282493657432497
    2. 'substring' → logprob: -7.875528335571289
    3. '_string' → logprob: -8.875528335571289
    4. '_s' → logprob: -12.750528335571289
    5. ' substring' → logprob: -13.750528335571289
    6. '_sn' → logprob: -14.125528335571289
    7. '```' → logprob: -14.375528335571289
    8. 'Substring' → logprob: -14.875528335571289
    9. '_' → logprob: -15.000528335571289
    10. 's' → logprob: -15.250528335571289

Token 115: 'string' (ID: 1655)
  Prédit: 'tring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tring' → logprob: -0.19747096300125122
    2. 'ring' → logprob: -2.1974709033966064
    3. 'string' → logprob: -2.6974709033966064
    4. 'r' → logprob: -7.3224711418151855
    5. 'ing' → logprob: -9.697470664978027
    6. 'tr' → logprob: -11.822470664978027
    7. 'trin' → logprob: -12.947470664978027
    8. '_string' → logprob: -13.947470664978027
    9. 'rings' → logprob: -14.197470664978027
    10. '```' → logprob: -14.447470664978027

Token 116: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7091282606124878
    2. ' ==' → logprob: -0.7091282606124878
    3. ')' → logprob: -5.084128379821777
    4. '>' → logprob: -5.209128379821777
    5. ' >' → logprob: -6.209128379821777
    6. ' >=' → logprob: -7.334128379821777
    7. ' ' → logprob: -7.334128379821777
    8. '>=' → logprob: -7.709128379821777
    9. ' ' → logprob: -9.084128379821777
    10. '0' → logprob: -9.459128379821777

Token 117: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04926484078168869
    2. '1' → logprob: -3.049264907836914
    3. ' ' → logprob: -7.299264907836914
    4. '2' → logprob: -15.424264907836914
    5. '   ' → logprob: -15.424264907836914
    6. '01' → logprob: -15.861764907836914
    7. '<|end|>' → logprob: -15.924264907836914
    8. '  ' → logprob: -16.424264907836914
    9. '۰' → logprob: -16.424264907836914
    10. '>' → logprob: -16.924264907836914

Token 118: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20170344412326813
    2. '1' → logprob: -1.701703429222107
    3. ' ' → logprob: -8.201703071594238
    4. '2' → logprob: -12.389203071594238
    5. '<|end|>' → logprob: -14.076703071594238
    6. ')' → logprob: -14.201703071594238
    7. '01' → logprob: -14.264203071594238
    8. '3' → logprob: -14.389203071594238
    9. '>' → logprob: -14.389203071594238
    10. '```' → logprob: -14.514203071594238

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6157224178314209
    2. ' and' → logprob: -1.615722417831421
    3. ')' → logprob: -2.115722417831421
    4. 'and' → logprob: -2.490722417831421
    5. '):' → logprob: -2.865722417831421
    6. '):
' → logprob: -7.61572265625
    7. '	and' → logprob: -10.24072265625
    8. '
' → logprob: -10.61572265625
    9. '#' → logprob: -10.86572265625
    10. '    
' → logprob: -11.11572265625

Token 120: '):
' (ID: 1883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3518545627593994
    2. 'and' → logprob: -1.6018545627593994
    3. ' and' → logprob: -2.4768545627593994
    4. ')' → logprob: -4.60185432434082
    5. '):' → logprob: -6.97685432434082
    6. '):
' → logprob: -10.10185432434082
    7. '  ' → logprob: -10.72685432434082
    8. ' ' → logprob: -11.47685432434082
    9. '<|end|>' → logprob: -11.72685432434082
    10. '    
' → logprob: -11.85185432434082

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007190807722508907
    2. '    
' → logprob: -5.382190704345703
    3. ' print' → logprob: -7.382190704345703
    4. ' if' → logprob: -7.507190704345703
    5. ' 
' → logprob: -8.007190704345703
    6. '    ' → logprob: -8.382190704345703
    7. 'print' → logprob: -8.507190704345703
    8. ':' → logprob: -9.007190704345703
    9. ' ' → logprob: -9.382190704345703
    10. 'if' → logprob: -9.632190704345703

Token 122: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47188255190849304
    2. 'if' → logprob: -1.2218825817108154
    3. 'for' (adapté à ' for') → logprob: -3.3468825817108154
    4. '   ' → logprob: -3.3468825817108154
    5. 'valid' → logprob: -5.471882343292236
    6. 'allowed' → logprob: -6.221882343292236
    7. ' if' → logprob: -6.471882343292236
    8. ' print' → logprob: -7.096882343292236
    9. 'invalid' → logprob: -7.096882343292236
    10. 'is' → logprob: -7.721882343292236

Token 123: ' forbidden' (ID: 74435)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' char' → logprob: -1.3307666778564453
    2. 'i' → logprob: -1.4557666778564453
    3. ' i' → logprob: -1.5807666778564453
    4. 'char' → logprob: -1.8307666778564453
    5. 'c' → logprob: -2.9557666778564453
    6. 'ch' → logprob: -3.9557666778564453
    7. ' c' → logprob: -4.080766677856445
    8. ' character' → logprob: -4.330766677856445
    9. ' letter' → logprob: -4.455766677856445
    10. 'character' → logprob: -4.705766677856445

Token 124: '_letter' (ID: 120621)
  Prédit: '_upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.4468536376953125
    2. '_letter' → logprob: -1.0718536376953125
    3. '_character' → logprob: -4.8218536376953125
    4. '_' → logprob: -5.4468536376953125
    5. '_char' → logprob: -5.4468536376953125
    6. '_for' → logprob: -7.8218536376953125
    7. '_letters' → logprob: -7.8218536376953125
    8. 'uppercase' → logprob: -8.696853637695312
    9. '_lower' → logprob: -9.321853637695312
    10. '_word' → logprob: -10.196853637695312

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08996224403381348
    2. 'in' → logprob: -2.4649622440338135
    3. '_' → logprob: -7.089962005615234
    4. '_in' → logprob: -9.339962005615234
    5. ' ' → logprob: -9.714962005615234
    6. '	in' → logprob: -11.339962005615234
    7. ' _' → logprob: -11.464962005615234
    8. 's' → logprob: -11.839962005615234
    9. ' i' → logprob: -12.964962005615234
    10. 'i' → logprob: -13.339962005615234

Token 126: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.20734242349863e-05
    2. ' forbidden' → logprob: -9.625072479248047
    3. ' for' → logprob: -12.125072479248047
    4. 'Forbidden' → logprob: -15.375072479248047
    5. 'bidden' → logprob: -16.375072479248047
    6. '_for' → logprob: -17.250072479248047
    7. '.for' → logprob: -17.625072479248047
    8. '(for' → logprob: -17.625072479248047
    9. 'user' → logprob: -18.000072479248047
    10. 'forgot' → logprob: -18.125072479248047

Token 127: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -1.282920129597187e-05
    2. 'uppercase' → logprob: -11.375012397766113
    3. '_letters' → logprob: -14.250012397766113
    4. '_' → logprob: -15.000012397766113
    5. '_lower' → logprob: -15.750012397766113
    6. '_for' → logprob: -16.62501335144043
    7. 's' → logprob: -17.87501335144043
    8. 'Upper' → logprob: -18.00001335144043
    9. 'for' → logprob: -18.12501335144043
    10. ' uppercase' → logprob: -18.25001335144043

Token 128: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.005250006448477507
    2. 'ase' → logprob: -5.255249977111816
    3. 'Case' → logprob: -12.005249977111816
    4. 'se' → logprob: -12.880249977111816
    5. '```' → logprob: -13.505249977111816
    6. '_case' → logprob: -13.630249977111816
    7. 'c' → logprob: -14.380249977111816
    8. 'code' → logprob: -14.380249977111816
    9. 'CASE' → logprob: -14.880249977111816
    10. 'arse' → logprob: -14.880249977111816

Token 129: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -8.602024900028482e-05
    2. 'letters' → logprob: -9.375085830688477
    3. '_' → logprob: -14.375085830688477
    4. 'for' → logprob: -15.875085830688477
    5. '```' → logprob: -16.000085830688477
    6. 'Letters' → logprob: -16.000085830688477
    7. '_for' → logprob: -16.375085830688477
    8. '_letter' → logprob: -17.125085830688477
    9. 's' → logprob: -17.750085830688477
    10. ''_' → logprob: -17.875085830688477

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011061973869800568
    2. ':
' → logprob: -4.511062145233154
    3. '   ' → logprob: -12.386061668395996
    4. ' if' → logprob: -12.761061668395996
    5. 'if' → logprob: -13.136061668395996
    6. ' :' → logprob: -13.386061668395996
    7. ':

' → logprob: -13.761061668395996
    8. '<|end|>' → logprob: -14.761061668395996
    9. '):' → logprob: -15.011061668395996
    10. ',' → logprob: -15.136061668395996

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005408423021435738
    2. '   ' → logprob: -5.63040828704834
    3. ' if' → logprob: -6.75540828704834
    4. 'if' → logprob: -7.75540828704834
    5. ' break' → logprob: -10.00540828704834
    6. 'print' → logprob: -10.13040828704834
    7. '    
' → logprob: -10.50540828704834
    8. '        
' → logprob: -10.50540828704834
    9. 'break' → logprob: -10.63040828704834
    10. '    ' → logprob: -11.63040828704834

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39010682702064514
    2. ' if' → logprob: -1.1401067972183228
    3. '       ' → logprob: -6.265106678009033
    4. '   ' → logprob: -6.890106678009033
    5. '           ' → logprob: -8.390107154846191
    6. ' ' → logprob: -10.140107154846191
    7. '	if' → logprob: -11.015107154846191
    8. '<|end|>' → logprob: -11.390107154846191
    9. '    ' → logprob: -12.765107154846191
    10. '        ' → logprob: -12.890107154846191

Token 133: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.255405455827713
    2. ' forbidden' → logprob: -1.5054054260253906
    3. ' for' → logprob: -5.755405426025391
    4. 'user' → logprob: -9.13040542602539
    5. ' user' → logprob: -9.50540542602539
    6. 'bidden' → logprob: -9.75540542602539
    7. ' forb' → logprob: -10.63040542602539
    8. '(for' → logprob: -11.63040542602539
    9. 'Forbidden' → logprob: -11.63040542602539
    10. '   ' → logprob: -12.50540542602539

Token 134: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -2.081584716506768e-05
    2. '_letters' → logprob: -11.500020980834961
    3. '_' → logprob: -11.750020980834961
    4. '_le' → logprob: -13.750020980834961
    5. 'letter' → logprob: -13.875020980834961
    6. '```' → logprob: -15.375020980834961
    7. ' _' → logprob: -15.500020980834961
    8. '_lower' → logprob: -17.00002098083496
    9. '_l' → logprob: -17.00002098083496
    10. '_upper' → logprob: -17.12502098083496

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029763219878077507
    2. 'in' → logprob: -3.5297632217407227
    3. ' not' → logprob: -11.654763221740723
    4. 'not' → logprob: -13.404763221740723
    5. ' ' → logprob: -14.279763221740723
    6. '	in' → logprob: -14.904763221740723
    7. '<|end|>' → logprob: -15.154763221740723
    8. ')' → logprob: -15.154763221740723
    9. 'n' → logprob: -15.529763221740723
    10. 's' → logprob: -15.779763221740723

Token 136: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2519291639328003
    2. ' user' → logprob: -1.5019291639328003
    3. '	user' → logprob: -17.251928329467773
    4. '"user' → logprob: -17.376928329467773
    5. '_user' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.126928329467773
    7. '(user' → logprob: -18.501928329467773
    8. '$user' → logprob: -19.001928329467773
    9. ' ' → logprob: -19.126928329467773
    10. 'User' → logprob: -19.251928329467773

Token 137: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00012487331696320325
    2. 'input' → logprob: -9.00012493133545
    3. 'Input' → logprob: -14.62512493133545
    4. 'put' → logprob: -15.50012493133545
    5. '_user' → logprob: -15.50012493133545
    6. '_output' → logprob: -16.125123977661133
    7. '_string' → logprob: -16.750123977661133
    8. '_code' → logprob: -16.750123977661133
    9. '_inputs' → logprob: -16.750123977661133
    10. '_INPUT' → logprob: -16.875123977661133

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0654376670718193
    2. ':
' → logprob: -2.8154375553131104
    3. '           ' → logprob: -5.6904377937316895
    4. ':return' → logprob: -10.690437316894531
    5. ' and' → logprob: -11.315437316894531
    6. '       ' → logprob: -11.315437316894531
    7. ':

' → logprob: -11.815437316894531
    8. ' or' → logprob: -11.940437316894531
    9. '):
' → logprob: -12.315437316894531
    10. '):' → logprob: -12.815437316894531

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010437761375214905
    2. ' break' → logprob: -10.250103950500488
    3. 'break' → logprob: -10.750103950500488
    4. '            
' → logprob: -10.875103950500488
    5. '
' → logprob: -11.125103950500488
    6. '       ' → logprob: -12.500103950500488
    7. '```' → logprob: -13.000103950500488
    8. '               ' → logprob: -13.250103950500488
    9. 'print' → logprob: -14.125103950500488
    10. '          ' → logprob: -14.250103950500488

Token 140: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5068215131759644
    2. ' break' → logprob: -1.0068215131759644
    3. '           ' → logprob: -3.756821632385254
    4. '               ' → logprob: -4.881821632385254
    5. 'print' → logprob: -6.756821632385254
    6. ' print' → logprob: -9.506821632385254
    7. 'exit' → logprob: -12.131821632385254
    8. 'return' → logprob: -12.381821632385254
    9. '	break' → logprob: -12.381821632385254
    10. '   ' → logprob: -12.381821632385254

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20793183147907257
    2. 'else' → logprob: -1.7079318761825562
    3. ' else' → logprob: -5.582931995391846
    4. '
' → logprob: -6.332931995391846
    5. '       ' → logprob: -7.832931995391846
    6. '    
' → logprob: -8.332931518554688
    7. '```' → logprob: -9.457931518554688
    8. '    ' → logprob: -9.707931518554688
    9. '<|end|>' → logprob: -10.332931518554688
    10. '        
' → logprob: -10.457931518554688

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3896549940109253
    2. 'else' → logprob: -1.1396549940109253
    3. ' else' → logprob: -6.264655113220215
    4. '       ' → logprob: -7.764655113220215
    5. '    
' → logprob: -8.639655113220215
    6. '
' → logprob: -8.764655113220215
    7. '    ' → logprob: -10.264655113220215
    8. '	else' → logprob: -10.889655113220215
    9. '        
' → logprob: -11.014655113220215
    10. '```' → logprob: -11.264655113220215

Token 143: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0008172504603862762
    2. '   ' → logprob: -7.50081729888916
    3. ' else' → logprob: -8.25081729888916
    4. '	else' → logprob: -13.25081729888916
    5. '       ' → logprob: -14.62581729888916
    6. '```' → logprob: -15.75081729888916
    7. ' ' → logprob: -16.000816345214844
    8. 'e' → logprob: -16.375816345214844
    9. '#else' → logprob: -16.500816345214844
    10. ')' → logprob: -16.500816345214844

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03364996239542961
    2. ':
' → logprob: -3.4086499214172363
    3. '   ' → logprob: -13.658650398254395
    4. ' :' → logprob: -14.283650398254395
    5. ':

' → logprob: -14.408650398254395
    6. ':
' → logprob: -14.533650398254395
    7. '<|end|>' → logprob: -15.158650398254395
    8. '):
' → logprob: -15.658650398254395
    9. ' :
' → logprob: -15.783650398254395
    10. '       ' → logprob: -15.908650398254395

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48121094703674316
    2. '   ' → logprob: -1.2312109470367432
    3. 'print' → logprob: -2.481210947036743
    4. ' print' → logprob: -5.106210708618164
    5. '
' → logprob: -8.731210708618164
    6. '        
' → logprob: -9.606210708618164
    7. '    
' → logprob: -10.231210708618164
    8. '```' → logprob: -10.231210708618164
    9. '           ' → logprob: -11.731210708618164
    10. '	print' → logprob: -12.106210708618164

Token 146: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.6047699318733066e-05
    2. ' print' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.375016212463379
    4. '       ' → logprob: -15.625016212463379
    5. '
' → logprob: -17.125015258789062
    6. '           ' → logprob: -17.500015258789062
    7. '    
' → logprob: -17.750015258789062
    8. '	print' → logprob: -18.500015258789062
    9. 'if' → logprob: -18.875015258789062
    10. '        
' → logprob: -18.875015258789062

Token 147: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09124117344617844
    2. '(' → logprob: -3.4662411212921143
    3. '(user' → logprob: -3.4662411212921143
    4. '('' → logprob: -3.7162411212921143
    5. '(True' → logprob: -8.216240882873535
    6. '("("' → logprob: -10.466240882873535
    7. 'user' → logprob: -10.591240882873535
    8. '"user' → logprob: -10.716240882873535
    9. '(":' → logprob: -11.216240882873535
    10. '("'' → logprob: -11.341240882873535

Token 148: 'AC' (ID: 2436)
  Prédit: 'AC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AC' → logprob: -0.2894989550113678
    2. 'YES' → logprob: -2.539499044418335
    3. 'Yes' → logprob: -3.039499044418335
    4. 'Accepted' → logprob: -3.414499044418335
    5. 'Valid' → logprob: -3.664499044418335
    6. 'yes' → logprob: -4.164498805999756
    7. 'OK' → logprob: -4.414498805999756
    8. 'valid' → logprob: -4.664498805999756
    9. 'VALID' → logprob: -5.164498805999756
    10. 'A' → logprob: -5.539498805999756

Token 149: '')
' (ID: 2515)
  Prédit: 'CEPT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CEPT' → logprob: -0.06557834148406982
    2. 'cept' → logprob: -3.6905784606933594
    3. 'C' → logprob: -4.190578460693359
    4. '')' → logprob: -4.690578460693359
    5. 'EPT' → logprob: -5.440578460693359
    6. 'E' → logprob: -5.815578460693359
    7. 'T' → logprob: -6.315578460693359
    8. 'A' → logprob: -6.440578460693359
    9. 'M' → logprob: -7.190578460693359
    10. 'e' → logprob: -7.315578460693359

Token 150: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13139896094799042
    2. '<|end|>' → logprob: -2.256398916244507
    3. ' else' → logprob: -4.631399154663086
    4. 'elif' → logprob: -5.631399154663086
    5. ')' → logprob: -6.631399154663086
    6. '.' → logprob: -7.131399154663086
    7. ':' → logprob: -7.256399154663086
    8. '#' → logprob: -7.381399154663086
    9. '```' → logprob: -7.381399154663086
    10. '<|end|>' → logprob: -8.256399154663086

Token 151: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33480146527290344
    2. 'else' → logprob: -1.459801435470581
    3. 'exit' (adapté à ' exit') → logprob: -3.084801435470581
    4. '   ' → logprob: -5.70980167388916
    5. 'elif' → logprob: -6.58480167388916
    6. '<|end|>' → logprob: -7.95980167388916
    7. ' exit' → logprob: -8.08480167388916
    8. ')' → logprob: -8.33480167388916
    9. 'continue' → logprob: -8.70980167388916
    10. ' else' → logprob: -8.95980167388916

Token 152: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00862426683306694
    2. '(' → logprob: -4.758624076843262
    3. '()
' → logprob: -12.883624076843262
    4. ' ()' → logprob: -13.633624076843262
    5. '()(' → logprob: -13.633624076843262
    6. '()?' → logprob: -14.508624076843262
    7. '()\' → logprob: -14.633624076843262
    8. '()

' → logprob: -14.758624076843262
    9. '()`' → logprob: -14.883624076843262
    10. '();' → logprob: -14.883624076843262

Token 153: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00028493450372479856
    2. 'else' → logprob: -8.375285148620605
    3. '#' → logprob: -11.125285148620605
    4. '_' → logprob: -11.375285148620605
    5. ' print' → logprob: -12.125285148620605
    6. 'A' → logprob: -12.875285148620605
    7. '<|end|>' → logprob: -12.875285148620605
    8. '```' → logprob: -13.125285148620605
    9. '#print' → logprob: -13.250285148620605
    10. 'False' → logprob: -13.375285148620605

Token 154: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08456006646156311
    2. '()' → logprob: -2.5845601558685303
    3. '(' → logprob: -5.334559917449951
    4. '('_' → logprob: -7.584559917449951
    5. '("' → logprob: -8.33456039428711
    6. '(False' → logprob: -9.58456039428711
    7. '(-' → logprob: -12.33456039428711
    8. '("")' → logprob: -12.58456039428711
    9. '(True' → logprob: -12.95956039428711
    10. '(None' → logprob: -13.95956039428711

Token 155: 'WA' (ID: 26913)
  Prédit: 'WA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WA' → logprob: -0.8291910886764526
    2. 'NG' → logprob: -1.0791910886764526
    3. 'NA' → logprob: -2.579191207885742
    4. 'NO' → logprob: -2.954191207885742
    5. 'WR' → logprob: -3.954191207885742
    6. 'RE' → logprob: -4.079191207885742
    7. 'Invalid' → logprob: -4.079191207885742
    8. 'N' → logprob: -4.704191207885742
    9. 'Wrong' → logprob: -5.079191207885742
    10. 'INVALID' → logprob: -5.204191207885742

Token 156: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.5928495486150496e-05
    2. ')' → logprob: -11.500016212463379
    3. '')
' → logprob: -12.250016212463379
    4. '")' → logprob: -13.875016212463379
    5. ''' → logprob: -18.125015258789062
    6. '')

' → logprob: -18.375015258789062
    7. '')
' → logprob: -19.625015258789062
    8. '')"' → logprob: -19.625015258789062
    9. '`)' → logprob: -20.000015258789062
    10. '```' → logprob: -20.000015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 48.70%
Précision adaptée (1ère position): 51.95%
Précision (top 10): 79.87%
================================================================================
