================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    n = int(input())
    robots = []
    for _ in range(n):
        x, l = map(int, input().split())
        robots.append((x-l, x+l))
    robots.sort(key=lambda x: x[1])
    count = 1
    robot = robots[0]
    for r in robots:
        if robot[1] <= r[0]:
            robot = r
            count += 1
    print(count)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.35815900564193726
    2. '(' → logprob: -1.858159065246582
    3. '   ' → logprob: -3.108159065246582
    4. '\n' → logprob: -3.108159065246582
    5. ''' → logprob: -4.608159065246582
    6. ' 
' → logprob: -4.733159065246582
    7. ' ' → logprob: -4.733159065246582
    8. '    
' → logprob: -4.983159065246582
    9. '```' → logprob: -5.483159065246582
    10. ' return' → logprob: -6.358159065246582

Token 4: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7860245108604431
    2. '   ' → logprob: -1.536024570465088
    3. 'pass' → logprob: -2.286024570465088
    4. 'p' → logprob: -2.911024570465088
    5. 'r' → logprob: -2.911024570465088
    6. 'return' → logprob: -3.161024570465088
    7. '#' → logprob: -3.786024570465088
    8. 'a' → logprob: -4.161024570465088
    9. 'i' → logprob: -4.411024570465088
    10. '```' → logprob: -5.411024570465088

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5212321877479553
    2. '=' → logprob: -1.1462321281433105
    3. '_' → logprob: -2.7712321281433105
    4. '   ' → logprob: -4.7712321281433105
    5. 'u' → logprob: -5.3962321281433105
    6. ' ' → logprob: -5.7712321281433105
    7. 'umber' → logprob: -5.8962321281433105
    8. 'ext' → logprob: -6.6462321281433105
    9. '  ' → logprob: -7.0212321281433105
    10. 'o' → logprob: -7.2712321281433105

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.020090878009796143
    2. 'int' → logprob: -4.5200910568237305
    3. ' ' → logprob: -4.8950910568237305
    4. ' input' → logprob: -7.2700910568237305
    5. '10' → logprob: -7.3950910568237305
    6. '5' → logprob: -9.64509105682373
    7. '0' → logprob: -9.89509105682373
    8. 'input' → logprob: -10.52009105682373
    9. ' eval' → logprob: -11.02009105682373
    10. '20' → logprob: -11.27009105682373

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.351697033504024e-05
    2. '(input' → logprob: -9.750083923339844
    3. '('' → logprob: -10.875083923339844
    4. ' (' → logprob: -13.625083923339844
    5. '()' → logprob: -13.625083923339844
    6. '(
' → logprob: -13.750083923339844
    7. 'input' → logprob: -14.375083923339844
    8. '("' → logprob: -14.625083923339844
    9. '(

' → logprob: -14.750083923339844
    10. '(`' → logprob: -15.625083923339844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0722622275352478
    2. ')' → logprob: -3.0722622871398926
    3. '()' → logprob: -3.9472622871398926
    4. '())' → logprob: -5.947262287139893
    5. '('' → logprob: -7.822262287139893
    6. '(""))' → logprob: -8.447261810302734
    7. '(
' → logprob: -8.447261810302734
    8. '))' → logprob: -8.947261810302734
    9. '("("' → logprob: -9.072261810302734
    10. '")' → logprob: -9.822261810302734

Token 9: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9801582098007202
    2. '\n' → logprob: -0.9801582098007202
    3. '   ' → logprob: -2.7301583290100098
    4. '    
' → logprob: -2.8551583290100098
    5. '```' → logprob: -3.9801583290100098
    6. '  
' → logprob: -4.10515832901001
    7. ')' → logprob: -4.23015832901001
    8. '\r' → logprob: -4.48015832901001
    9. ' 
' → logprob: -4.85515832901001
    10. ''\' → logprob: -4.85515832901001

Token 10: ' robots' (ID: 47605)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7216669321060181
    2. '   ' → logprob: -1.596666932106018
    3. '`' → logprob: -2.3466668128967285
    4. '```' → logprob: -2.3466668128967285
    5. '\' → logprob: -3.2216668128967285
    6. '    
' → logprob: -3.5966668128967285
    7. '``' → logprob: -4.8466668128967285
    8. ')' → logprob: -5.3466668128967285
    9. '\r' → logprob: -5.5966668128967285
    10. '    ' → logprob: -5.8466668128967285

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46133339405059814
    2. ' =' → logprob: -1.5863333940505981
    3. '_' → logprob: -2.3363332748413086
    4. '.' → logprob: -3.0863332748413086
    5. '=' → logprob: -5.086333274841309
    6. '[:]' → logprob: -5.836333274841309
    7. '[]' → logprob: -6.086333274841309
    8. ')' → logprob: -6.336333274841309
    9. '_space' → logprob: -6.461333274841309
    10. '.append' → logprob: -6.586333274841309

Token 12: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.09088387340307236
    2. '[]' → logprob: -2.46588397026062
    3. '[' → logprob: -6.715883731842041
    4. ' [' → logprob: -7.590883731842041
    5. ' ' → logprob: -9.4658842086792
    6. '{}' → logprob: -9.5908842086792
    7. ' {}' → logprob: -10.2158842086792
    8. '[:]' → logprob: -11.9658842086792
    9. '[]}' → logprob: -11.9658842086792
    10. '[input' → logprob: -12.0908842086792

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25729966163635254
    2. 'for' → logprob: -2.1322996616363525
    3. ' for' → logprob: -2.6322996616363525
    4. '    
' → logprob: -4.507299423217773
    5. '```' → logprob: -5.382299423217773
    6. ')' → logprob: -5.507299423217773
    7. '<|end|>' → logprob: -5.507299423217773
    8. '    ' → logprob: -5.757299423217773
    9. '.' → logprob: -6.007299423217773
    10. '\' → logprob: -6.382299423217773

Token 14: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.592531144618988
    2. '   ' → logprob: -1.4675312042236328
    3. ' for' → logprob: -1.5925312042236328
    4. '\' → logprob: -5.592531204223633
    5. ' ' → logprob: -5.967531204223633
    6. '    ' → logprob: -6.092531204223633
    7. '[' → logprob: -7.092531204223633
    8. '    
' → logprob: -7.092531204223633
    9. '\n' → logprob: -7.467531204223633
    10. '	for' → logprob: -7.592531204223633

Token 15: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06521018594503403
    2. ' i' → logprob: -2.8152101039886475
    3. ' _' → logprob: -6.440210342407227
    4. '_' → logprob: -7.190210342407227
    5. '  ' → logprob: -7.440210342407227
    6. 'i' → logprob: -8.565210342407227
    7. ' ‌' → logprob: -10.315210342407227
    8. ' range' → logprob: -10.565210342407227
    9. ' ' → logprob: -11.190210342407227
    10. ' robot' → logprob: -11.940210342407227

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05011284723877907
    2. 'in' → logprob: -3.0501129627227783
    3. ' ' → logprob: -7.050112724304199
    4. 'i' → logprob: -7.675112724304199
    5. ' i' → logprob: -9.1751127243042
    6. 'n' → logprob: -10.3001127243042
    7. '  ' → logprob: -10.4251127243042
    8. '```' → logprob: -11.8001127243042
    9. 'import' → logprob: -12.5501127243042
    10. ' _' → logprob: -13.1751127243042

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889165729284286
    2. ' range' → logprob: -2.5788917541503906
    3. ' ' → logprob: -14.32889175415039
    4. 'ran' → logprob: -14.95389175415039
    5. '```' → logprob: -15.32889175415039
    6. '  ' → logprob: -15.70389175415039
    7. '	range' → logprob: -15.95389175415039
    8. 'n' → logprob: -16.07889175415039
    9. 'rang' → logprob: -16.07889175415039
    10. '(range' → logprob: -16.20389175415039

Token 18: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19911956787109375
    2. ' (' → logprob: -2.8241195678710938
    3. ' range' → logprob: -3.1991195678710938
    4. ' n' → logprob: -3.1991195678710938
    5. ' in' → logprob: -3.6991195678710938
    6. '(n' → logprob: -4.824119567871094
    7. 'range' → logprob: -6.199119567871094
    8. ' )' → logprob: -6.324119567871094
    9. ' ' → logprob: -6.574119567871094
    10. '(range' → logprob: -7.324119567871094

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1272936463356018
    2. ')' → logprob: -2.127293586730957
    3. '):
' → logprob: -8.877293586730957
    4. ' ):' → logprob: -9.002293586730957
    5. ' )' → logprob: -10.127293586730957
    6. ':' → logprob: -10.877293586730957
    7. '   ' → logprob: -11.002293586730957
    8. ',' → logprob: -11.627293586730957
    9. ' ' → logprob: -11.877293586730957
    10. '),' → logprob: -13.502293586730957

Token 20: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.04248863086104393
    2. ' ' → logprob: -3.9174885749816895
    3. '   ' → logprob: -4.5424885749816895
    4. ' robots' → logprob: -5.4174885749816895
    5. '       ' → logprob: -6.2924885749816895
    6. '     
' → logprob: -6.4174885749816895
    7. 'robots' → logprob: -6.9174885749816895
    8. '        ' → logprob: -7.9174885749816895
    9. '```' → logprob: -7.9174885749816895
    10. '<|end|>' → logprob: -8.292489051818848

Token 21: ' x' (ID: 1215)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.4122249484062195
    2. ' robots' → logprob: -1.4122250080108643
    3. ' line' → logprob: -3.2872250080108643
    4. ' name' → logprob: -3.9122250080108643
    5. 'robot' → logprob: -3.9122250080108643
    6. ' robot' → logprob: -4.912224769592285
    7. '   ' → logprob: -5.662224769592285
    8. 'name' → logprob: -6.037224769592285
    9. 'line' → logprob: -6.537224769592285
    10. ' data' → logprob: -7.287224769592285

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003068026155233383
    2. ' ,' → logprob: -6.003067970275879
    3. ' =' → logprob: -8.378067970275879
    4. '_' → logprob: -8.753067970275879
    5. '=' → logprob: -9.628067970275879
    6. ')' → logprob: -9.878067970275879
    7. ',y' → logprob: -10.503067970275879
    8. '_,' → logprob: -10.878067970275879
    9. ' ' → logprob: -12.003067970275879
    10. ',x' → logprob: -12.003067970275879

Token 23: ' l' (ID: 305)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08924151957035065
    2. 'y' → logprob: -2.4642415046691895
    3. ' ' → logprob: -8.214241981506348
    4. '<|end|>' → logprob: -11.589241981506348
    5. '<|end|>' → logprob: -12.464241981506348
    6. '    ' → logprob: -12.464241981506348
    7. 'space' → logprob: -13.089241981506348
    8. '	y' → logprob: -13.089241981506348
    9. '_y' → logprob: -13.214241981506348
    10. ' =' → logprob: -13.464241981506348

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20205774903297424
    2. ' =' → logprob: -1.7020577192306519
    3. ',' → logprob: -7.827057838439941
    4. 'ength' → logprob: -8.577057838439941
    5. '=input' → logprob: -11.077057838439941
    6. ')' → logprob: -11.952057838439941
    7. '=int' → logprob: -12.077057838439941
    8. '=line' → logprob: -12.577057838439941
    9. 'ENGTH' → logprob: -13.077057838439941
    10. '   ' → logprob: -13.202057838439941

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019546831026673317
    2. 'map' → logprob: -6.251954555511475
    3. ' list' → logprob: -11.001955032348633
    4. '   ' → logprob: -12.626955032348633
    5. ' [' → logprob: -13.126955032348633
    6. '	map' → logprob: -13.501955032348633
    7. ' input' → logprob: -13.876955032348633
    8. ' ' → logprob: -14.251955032348633
    9. '[' → logprob: -15.001955032348633
    10. '(map' → logprob: -15.626955032348633

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007859219331294298
    2. '(' → logprob: -7.250785827636719
    3. '(lambda' → logprob: -10.125785827636719
    4. '(input' → logprob: -10.500785827636719
    5. 'int' → logprob: -12.625785827636719
    6. '<int' → logprob: -13.000785827636719
    7. '(str' → logprob: -14.375785827636719
    8. '```' → logprob: -14.625785827636719
    9. '(
' → logprob: -14.750785827636719
    10. '[int' → logprob: -14.875785827636719

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4895906448364258
    2. ',input' → logprob: -0.9895906448364258
    3. '(input' → logprob: -4.239590644836426
    4. 'input' → logprob: -7.614590644836426
    5. ')' → logprob: -8.364590644836426
    6. '(' → logprob: -8.614590644836426
    7. ' ,' → logprob: -10.364590644836426
    8. ' input' → logprob: -11.364590644836426
    9. '=input' → logprob: -12.239590644836426
    10. '),' → logprob: -12.239590644836426

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10020817816257477
    2. 'input' → logprob: -2.350208282470703
    3. ')' → logprob: -14.225208282470703
    4. '=input' → logprob: -14.975208282470703
    5. '	input' → logprob: -15.975208282470703
    6. ' )' → logprob: -16.225208282470703
    7. '(input' → logprob: -16.350208282470703
    8. ',input' → logprob: -16.475208282470703
    9. ' ' → logprob: -16.600208282470703
    10. '<input' → logprob: -17.225208282470703

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0683535037969705e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -14.87501049041748
    4. '.split' → logprob: -16.625011444091797
    5. '()
' → logprob: -17.125011444091797
    6. '())' → logprob: -17.250011444091797
    7. ')' → logprob: -17.625011444091797
    8. '(' → logprob: -18.000011444091797
    9. ' .' → logprob: -18.250011444091797
    10. '()

' → logprob: -18.625011444091797

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.750436007976532e-05
    2. 'strip' → logprob: -10.37503719329834
    3. ' split' → logprob: -12.25003719329834
    4. 'rstrip' → logprob: -13.87503719329834
    5. '(split' → logprob: -15.12503719329834
    6. 'spl' → logprob: -15.75003719329834
    7. ' ' → logprob: -17.125038146972656
    8. ')' → logprob: -17.500038146972656
    9. 's' → logprob: -18.125038146972656
    10. '```' → logprob: -19.000038146972656

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07809098809957504
    2. ')' → logprob: -2.7030909061431885
    3. '()' → logprob: -5.578091144561768
    4. '()))' → logprob: -6.078091144561768
    5. '))' → logprob: -6.453091144561768
    6. '())
' → logprob: -7.828091144561768
    7. '()))
' → logprob: -11.45309066772461
    8. '')' → logprob: -11.45309066772461
    9. '()),' → logprob: -11.70309066772461
    10. '('' → logprob: -11.95309066772461

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13731659948825836
    2. ')' → logprob: -2.3873167037963867
    3. '   ' → logprob: -3.8873167037963867
    4. '<|end|>' → logprob: -5.262316703796387
    5. 'robots' → logprob: -6.387316703796387
    6. ',' → logprob: -6.512316703796387
    7. '        
' → logprob: -6.762316703796387
    8. ' )' → logprob: -6.887316703796387
    9. '),' → logprob: -7.137316703796387
    10. ' robots' → logprob: -7.387316703796387

Token 33: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.36316028237342834
    2. ' robots' → logprob: -1.238160252571106
    3. '   ' → logprob: -4.863160133361816
    4. '    ' → logprob: -6.363160133361816
    5. ')' → logprob: -6.738160133361816
    6. '_' → logprob: -6.863160133361816
    7. ' )' → logprob: -7.488160133361816
    8. '       ' → logprob: -7.613160133361816
    9. 'r' → logprob: -8.550660133361816
    10. 'robot' → logprob: -8.613160133361816

Token 34: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009763410314917564
    2. '.' → logprob: -4.634763240814209
    3. ' .' → logprob: -13.259763717651367
    4. '   ' → logprob: -13.259763717651367
    5. '.push' → logprob: -13.634763717651367
    6. '.extend' → logprob: -13.759763717651367
    7. '.app' → logprob: -15.009763717651367
    8. '.py' → logprob: -15.009763717651367
    9. '.add' → logprob: -15.384763717651367
    10. 'append' → logprob: -15.634763717651367

Token 35: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011342883110046387
    2. '(' → logprob: -4.511343002319336
    3. '(x' → logprob: -8.136343002319336
    4. '(
' → logprob: -13.511343002319336
    5. '([' → logprob: -14.886343002319336
    6. ' (' → logprob: -15.886343002319336
    7. '(((' → logprob: -16.011343002319336
    8. '(('' → logprob: -16.636343002319336
    9. '```' → logprob: -16.886343002319336
    10. ' ((' → logprob: -17.011343002319336

Token 36: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.5954712075181305e-05
    2. ' x' → logprob: -10.375036239624023
    3. '(x' → logprob: -12.750036239624023
    4. ')x' → logprob: -13.750036239624023
    5. ')' → logprob: -15.125036239624023
    6. '   ' → logprob: -15.500036239624023
    7. ' ' → logprob: -17.000036239624023
    8. '	x' → logprob: -17.250036239624023
    9. '"x' → logprob: -18.125036239624023
    10. '{x' → logprob: -18.125036239624023

Token 37: '-l' (ID: 2887)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01737281121313572
    2. '-' → logprob: -4.8923726081848145
    3. ' -' → logprob: -4.8923726081848145
    4. ',l' → logprob: -6.2673726081848145
    5. '-l' → logprob: -8.517373085021973
    6. ' ,' → logprob: -9.142373085021973
    7. '-,' → logprob: -12.892373085021973
    8. ')' → logprob: -13.392373085021973
    9. ' l' → logprob: -13.392373085021973
    10. ' ' → logprob: -13.517373085021973

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019412329129409045
    2. ' ,' → logprob: -8.750194549560547
    3. ')' → logprob: -10.875194549560547
    4. ',)' → logprob: -12.000194549560547
    5. '),' → logprob: -12.375194549560547
    6. '))' → logprob: -13.875194549560547
    7. ' ' → logprob: -14.125194549560547
    8. ',
' → logprob: -14.250194549560547
    9. ',x' → logprob: -14.250194549560547
    10. ')))' → logprob: -14.750194549560547

Token 39: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001931970240548253
    2. ' x' → logprob: -6.251932144165039
    3. '(x' → logprob: -13.751932144165039
    4. 'xl' → logprob: -14.626932144165039
    5. ')x' → logprob: -14.751932144165039
    6. '	x' → logprob: -15.001932144165039
    7. '   ' → logprob: -15.001932144165039
    8. '+x' → logprob: -15.751932144165039
    9. '"x' → logprob: -15.751932144165039
    10. ' ' → logprob: -16.00193214416504

Token 40: '+l' (ID: 187706)
  Prédit: '+l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.02077801525592804
    2. '+' → logprob: -3.895777940750122
    3. ' +' → logprob: -8.395777702331543
    4. '+x' → logprob: -12.645777702331543
    5. ',' → logprob: -13.020777702331543
    6. '+,' → logprob: -14.270777702331543
    7. 'l' → logprob: -14.395777702331543
    8. ')' → logprob: -14.895777702331543
    9. ',l' → logprob: -15.020777702331543
    10. '+
' → logprob: -15.145777702331543

Token 41: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1269734650850296
    2. ')' → logprob: -2.1269733905792236
    3. '))
' → logprob: -10.751973152160645
    4. ')))' → logprob: -11.001973152160645
    5. ')
' → logprob: -13.001973152160645
    6. ' ))' → logprob: -13.126973152160645
    7. '),' → logprob: -13.376973152160645
    8. '   ' → logprob: -15.001973152160645
    9. ''))' → logprob: -15.126973152160645
    10. '))

' → logprob: -15.876973152160645

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251545548439026
    2. '    
' → logprob: -2.625154495239258
    3. '
' → logprob: -3.375154495239258
    4. '```' → logprob: -5.750154495239258
    5. ')' → logprob: -6.125154495239258
    6. '<|end|>' → logprob: -6.500154495239258
    7. ')
' → logprob: -7.625154495239258
    8. '  
' → logprob: -7.750154495239258
    9. '\n' → logprob: -7.875154495239258
    10. 'robots' → logprob: -7.875154495239258

Token 43: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.039878491312265396
    2. '   ' → logprob: -3.5398786067962646
    3. '```' → logprob: -5.4148783683776855
    4. 'interval' → logprob: -6.2898783683776855
    5. '    
' → logprob: -6.7898783683776855
    6. 'robot' → logprob: -7.5398783683776855
    7. ' robots' → logprob: -7.6648783683776855
    8. 'rob' → logprob: -7.7898783683776855
    9. ')' → logprob: -8.039878845214844
    10. 'sorted' → logprob: -8.789878845214844

Token 44: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0008560742135159671
    2. '=' → logprob: -8.125856399536133
    3. '.' → logprob: -8.500856399536133
    4. '_sorted' → logprob: -8.625856399536133
    5. ')' → logprob: -9.750856399536133
    6. 'sort' → logprob: -9.750856399536133
    7. '<|end|>' → logprob: -10.625856399536133
    8. ' =' → logprob: -11.250856399536133
    9. '[:]' → logprob: -12.375856399536133
    10. 'sorted' → logprob: -12.500856399536133

Token 45: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006054997909814119
    2. '(' → logprob: -5.131054878234863
    3. '(key' → logprob: -10.256054878234863
    4. '(reverse' → logprob: -10.506054878234863
    5. '(()' → logprob: -10.756054878234863
    6. '()`' → logprob: -10.881054878234863
    7. '()
' → logprob: -12.006054878234863
    8. ' ()' → logprob: -12.506054878234863
    9. '().' → logprob: -12.881054878234863
    10. '((' → logprob: -13.881054878234863

Token 46: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005235767923295498
    2. '=' → logprob: -5.25523567199707
    3. '=len' → logprob: -13.75523567199707
    4. '=item' → logprob: -15.38023567199707
    5. '=}' → logprob: -15.63023567199707
    6. '=

' → logprob: -16.13023567199707
    7. '=str' → logprob: -16.75523567199707
    8. 'lambda' → logprob: -16.75523567199707
    9. ' =' → logprob: -17.25523567199707
    10. ')=' → logprob: -17.25523567199707

Token 47: ' x' (ID: 1215)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7671258449554443
    2. ' x' → logprob: -0.7671258449554443
    3. 'x' → logprob: -3.7671258449554443
    4. 'r' → logprob: -3.8921258449554443
    5. ' a' → logprob: -4.392126083374023
    6. ' robot' → logprob: -5.017126083374023
    7. 'robot' → logprob: -6.392126083374023
    8. ' s' → logprob: -6.642126083374023
    9. ' ' → logprob: -7.017126083374023
    10. 'a' → logprob: -7.142126083374023

Token 48: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00187568215187639
    2. ':x' → logprob: -6.501875877380371
    3. ' :' → logprob: -8.001875877380371
    4. '[' → logprob: -10.501875877380371
    5. '1' → logprob: -13.126875877380371
    6. ':return' → logprob: -13.251875877380371
    7. 'x' → logprob: -13.376875877380371
    8. ':
' → logprob: -13.751875877380371
    9. ':int' → logprob: -14.501875877380371
    10. ':first' → logprob: -14.626875877380371

Token 49: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.039079420268535614
    2. ' x' → logprob: -3.289079427719116
    3. 'lambda' → logprob: -7.664079189300537
    4. '1' → logprob: -7.789079189300537
    5. ' lambda' → logprob: -9.164079666137695
    6. ' ' → logprob: -11.539079666137695
    7. 'operator' → logprob: -11.539079666137695
    8. '0' → logprob: -11.664079666137695
    9. '   ' → logprob: -11.789079666137695
    10. '	x' → logprob: -11.914079666137695

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010032742284238338
    2. ')' → logprob: -7.126003265380859
    3. '.' → logprob: -9.00100326538086
    4. ' [' → logprob: -10.37600326538086
    5. ' )' → logprob: -11.00100326538086
    6. '1' → logprob: -11.75100326538086
    7. '0' → logprob: -12.12600326538086
    8. ':' → logprob: -12.75100326538086
    9. '[
' → logprob: -13.12600326538086
    10. ']' → logprob: -13.25100326538086

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31328514218330383
    2. '0' → logprob: -1.3132851123809814
    3. ' ' → logprob: -10.813284873962402
    4. '' → logprob: -14.563284873962402
    5. '   ' → logprob: -14.813284873962402
    6. ':' → logprob: -15.313284873962402
    7. '-' → logprob: -15.438284873962402
    8. '
' → logprob: -15.688284873962402
    9. '```' → logprob: -15.688284873962402
    10. '[' → logprob: -16.00078582763672

Token 52: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003223821986466646
    2. '))' → logprob: -5.753223896026611
    3. ' )' → logprob: -10.503223419189453
    4. '):' → logprob: -12.128223419189453
    5. ')
' → logprob: -12.253223419189453
    6. ')))' → logprob: -13.503223419189453
    7. '   ' → logprob: -14.128223419189453
    8. '[' → logprob: -14.378223419189453
    9. ':' → logprob: -14.503223419189453
    10. ' ' → logprob: -14.753223419189453

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28398123383522034
    2. '    
' → logprob: -2.0339813232421875
    3. 'count' → logprob: -2.4089813232421875
    4. '
' → logprob: -4.6589813232421875
    5. 'last' → logprob: -5.4089813232421875
    6. 'result' → logprob: -6.1589813232421875
    7. '```' → logprob: -6.1589813232421875
    8. 'current' → logprob: -6.6589813232421875
    9. 'n' → logprob: -6.7839813232421875
    10. 'prev' → logprob: -6.9089813232421875

Token 54: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.01842547580599785
    2. 'last' → logprob: -5.393425464630127
    3. 'answer' → logprob: -5.768425464630127
    4. 'cnt' → logprob: -5.893425464630127
    5. 'ans' → logprob: -6.018425464630127
    6. 'result' → logprob: -6.518425464630127
    7. '   ' → logprob: -7.268425464630127
    8. 'prev' → logprob: -7.268425464630127
    9. '    
' → logprob: -7.268425464630127
    10. 'res' → logprob: -7.393425464630127

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023742228746414185
    2. '=' → logprob: -4.023742198944092
    3. ' ' → logprob: -5.648742198944092
    4. '_' → logprob: -6.273742198944092
    5. ' +=' → logprob: -9.64874267578125
    6. '(' → logprob: -10.52374267578125
    7. '_space' → logprob: -10.77374267578125
    8. ',' → logprob: -11.39874267578125
    9. '<|end|>' → logprob: -11.77374267578125
    10. '  ' → logprob: -12.02374267578125

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35382136702537537
    2. '1' → logprob: -1.2288213968276978
    3. ' ' → logprob: -5.228821277618408
    4. '   ' → logprob: -12.978821754455566
    5. ' ' → logprob: -16.54132080078125
    6. '  ' → logprob: -16.66632080078125
    7. '2' → logprob: -16.85382080078125
    8. 'len' → logprob: -16.97882080078125
    9. '01' → logprob: -17.10382080078125
    10. '10' → logprob: -17.85382080078125

Token 57: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759491920471191
    2. '1' → logprob: -0.8259491920471191
    3. ' ' → logprob: -11.575948715209961
    4. '   ' → logprob: -15.825948715209961
    5. '2' → logprob: -16.32594871520996
    6. '01' → logprob: -16.57594871520996
    7. 'len' → logprob: -17.70094871520996
    8. '-' → logprob: -17.76344871520996
    9. '```' → logprob: -17.95094871520996
    10. '  ' → logprob: -18.20094871520996

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40832144021987915
    2. ' last' → logprob: -1.5333213806152344
    3. ' 
' → logprob: -2.6583213806152344
    4. 'last' → logprob: -4.158321380615234
    5. 'prev' → logprob: -4.908321380615234
    6. 'current' → logprob: -5.033321380615234
    7. '' → logprob: -5.158321380615234
    8. ' prev' → logprob: -6.158321380615234
    9. '\n' → logprob: -6.283321380615234
    10. ' current' → logprob: -6.658321380615234

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4700906574726105
    2. ' last' → logprob: -1.220090627670288
    3. 'last' → logprob: -3.095090627670288
    4. ' 
' → logprob: -4.595090866088867
    5. '\n' → logprob: -4.970090866088867
    6. '    
' → logprob: -5.470090866088867
    7. 'current' → logprob: -5.720090866088867
    8. '   ' → logprob: -6.095090866088867
    9. ' current' → logprob: -6.345090866088867
    10. '	last' → logprob: -6.720090866088867

Token 60: ' robot' (ID: 20808)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.8393166065216064
    2. 'last' → logprob: -0.8393166065216064
    3. ' end' → logprob: -2.7143166065216064
    4. ' last' → logprob: -2.9643166065216064
    5. 'prev' → logprob: -4.839316368103027
    6. 'current' → logprob: -5.714316368103027
    7. 'right' → logprob: -6.089316368103027
    8. ' prev' → logprob: -6.464316368103027
    9. ' current' → logprob: -6.964316368103027
    10. '   ' → logprob: -6.964316368103027

Token 61: ' =' (ID: 314)
  Prédit: '_end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.2601667642593384
    2. 's' → logprob: -1.7601667642593384
    3. '_' → logprob: -3.260166645050049
    4. '_start' → logprob: -4.635166645050049
    5. '_pos' → logprob: -5.885166645050049
    6. ' =' → logprob: -6.135166645050049
    7. 'End' → logprob: -6.885166645050049
    8. '_last' → logprob: -7.135166645050049
    9. '_x' → logprob: -7.385166645050049
    10. '=' → logprob: -7.635166645050049

Token 62: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.0007144584087654948
    2. ' robots' → logprob: -7.500714302062988
    3. '0' → logprob: -9.000714302062988
    4. 'rob' → logprob: -10.500714302062988
    5. 'robot' → logprob: -12.875714302062988
    6. '1' → logprob: -12.875714302062988
    7. ' ' → logprob: -13.250714302062988
    8. '   ' → logprob: -14.000714302062988
    9. '-' → logprob: -14.000714302062988
    10. '```' → logprob: -14.750714302062988

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016086915275081992
    2. '0' → logprob: -8.750161170959473
    3. '1' → logprob: -14.000161170959473
    4. '[-' → logprob: -14.250161170959473
    5. '```' → logprob: -15.375161170959473
    6. '[
' → logprob: -15.500161170959473
    7. '   ' → logprob: -16.000160217285156
    8. ' [' → logprob: -16.125160217285156
    9. ' ' → logprob: -16.875160217285156
    10. '\[' → logprob: -17.250160217285156

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '-' → logprob: -15.562500953674316
    5. '   ' → logprob: -16.375001907348633
    6. 'count' → logprob: -17.500001907348633
    7. ')' → logprob: -18.375001907348633
    8. '۰' → logprob: -18.437501907348633
    9. 'index' → logprob: -18.625001907348633
    10. '00' → logprob: -18.687501907348633

Token 65: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9425375461578369
    2. ']' → logprob: -0.9425375461578369
    3. '[' → logprob: -1.567537546157837
    4. '][' → logprob: -4.692537307739258
    5. '])' → logprob: -6.192537307739258
    6. ')
' → logprob: -7.942537307739258
    7. ')[' → logprob: -8.817537307739258
    8. ' ' → logprob: -9.442537307739258
    9. ' ]' → logprob: -9.567537307739258
    10. ']
' → logprob: -9.692537307739258

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2611984312534332
    2. 'for' → logprob: -2.1361985206604004
    3. '   ' → logprob: -2.3861985206604004
    4. '
' → logprob: -4.0111985206604
    5. ' 
' → logprob: -7.8861985206604
    6. ' last' → logprob: -8.011198043823242
    7. '```' → logprob: -8.261198043823242
    8. '    
' → logprob: -8.386198043823242
    9. '\n' → logprob: -8.886198043823242
    10. '	for' → logprob: -8.886198043823242

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38820526003837585
    2. ' for' → logprob: -1.1382052898406982
    3. '   ' → logprob: -6.638205051422119
    4. '```' → logprob: -11.263205528259277
    5. '	for' → logprob: -12.138205528259277
    6. '
' → logprob: -13.138205528259277
    7. 'last' → logprob: -14.138205528259277
    8. ' 
' → logprob: -14.138205528259277
    9. ' last' → logprob: -14.388205528259277
    10. '    
' → logprob: -14.513205528259277

Token 68: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07489196956157684
    2. ' r' → logprob: -3.324892044067383
    3. ' interval' → logprob: -3.699892044067383
    4. ' robot' → logprob: -5.324892044067383
    5. 'i' → logprob: -5.949892044067383
    6. 'interval' → logprob: -6.824892044067383
    7. 'r' → logprob: -7.074892044067383
    8. ' other' → logprob: -7.699892044067383
    9. ' current' → logprob: -8.074892044067383
    10. ' next' → logprob: -8.699892044067383

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012913089012727141
    2. 'in' → logprob: -7.126291275024414
    3. ' ' → logprob: -8.126291275024414
    4. '  ' → logprob: -9.876291275024414
    5. 'i' → logprob: -10.001291275024414
    6. ' i' → logprob: -10.251291275024414
    7. 'o' → logprob: -10.876291275024414
    8. '   ' → logprob: -11.001291275024414
    9. ',' → logprob: -11.876291275024414
    10. 'obot' → logprob: -12.501291275024414

Token 70: ' robots' (ID: 47605)
  Prédit: ' robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robots' → logprob: -0.6931584477424622
    2. 'robots' → logprob: -0.6931584477424622
    3. ' ' → logprob: -12.193158149719238
    4. 'ots' → logprob: -12.818158149719238
    5. 'rob' → logprob: -13.068158149719238
    6. 'robot' → logprob: -14.693158149719238
    7. 'bots' → logprob: -14.943158149719238
    8. 'Rob' → logprob: -15.318158149719238
    9. 'ro' → logprob: -16.693159103393555
    10. 'ob' → logprob: -16.818159103393555

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05515837296843529
    2. '[' → logprob: -2.9301583766937256
    3. ':
' → logprob: -8.555158615112305
    4. '[:-' → logprob: -11.180158615112305
    5. '[:' → logprob: -11.180158615112305
    6. '   ' → logprob: -11.555158615112305
    7. '[:]' → logprob: -11.680158615112305
    8. '<|end|>' → logprob: -11.680158615112305
    9. ' :' → logprob: -11.930158615112305
    10. '):' → logprob: -12.305158615112305

Token 72: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7106035947799683
    2. '       ' → logprob: -1.2106035947799683
    3. '   ' → logprob: -2.335603713989258
    4. '[' → logprob: -2.335603713989258
    5. ' ' → logprob: -5.335603713989258
    6. '1' → logprob: -5.710603713989258
    7. '    
' → logprob: -6.210603713989258
    8. 'if' → logprob: -6.585603713989258
    9. '        
' → logprob: -6.710603713989258
    10. '    ' → logprob: -6.710603713989258

Token 73: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4871048629283905
    2. ' ' → logprob: -1.862104892730713
    3. '    ' → logprob: -2.237104892730713
    4. '   ' → logprob: -3.112104892730713
    5. '       ' → logprob: -3.362104892730713
    6. '<|end|>' → logprob: -3.987104892730713
    7. ' 
' → logprob: -4.487104892730713
    8. 'if' (adapté à ' if') → logprob: -5.987104892730713
    9. '        ' → logprob: -6.112104892730713
    10. '  ' → logprob: -6.487104892730713

Token 74: ' robot' (ID: 20808)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0028122442308813334
    2. 'r' → logprob: -5.877812385559082
    3. ' ' → logprob: -12.377812385559082
    4. '    ' → logprob: -13.377812385559082
    5. ' robot' → logprob: -14.002812385559082
    6. '	r' → logprob: -15.127812385559082
    7. ' ' → logprob: -15.377812385559082
    8. '_r' → logprob: -16.752811431884766
    9. '   ' → logprob: -17.127811431884766
    10. ' _' → logprob: -17.440311431884766

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016430460382252932
    2. ' ' → logprob: -6.751643180847168
    3. ')' → logprob: -9.251643180847168
    4. ' [' → logprob: -10.001643180847168
    5. '1' → logprob: -10.064143180847168
    6. '<|end|>' → logprob: -10.439143180847168
    7. '[
' → logprob: -10.876643180847168
    8. '`' → logprob: -11.001643180847168
    9. 's' → logprob: -11.064143180847168
    10. ' is' → logprob: -11.126643180847168

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.12258882028982e-05
    2. '0' → logprob: -9.75006103515625
    3. ' ' → logprob: -13.75006103515625
    4. '' → logprob: -14.68756103515625
    5. '
' → logprob: -15.31256103515625
    6. '

' → logprob: -15.56256103515625
    7. '<' → logprob: -15.93756103515625
    8. '[' → logprob: -15.93756103515625
    9. '```' → logprob: -16.06256103515625
    10. '   ' → logprob: -16.31256103515625

Token 77: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31431496143341064
    2. '<=' → logprob: -1.3143149614334106
    3. ')' → logprob: -7.564314842224121
    4. '<' → logprob: -8.814314842224121
    5. ' ' → logprob: -8.814314842224121
    6. ')<=' → logprob: -8.939314842224121
    7. ']<=' → logprob: -10.689314842224121
    8. 'le' → logprob: -10.814314842224121
    9. ' <' → logprob: -11.189314842224121
    10. '[' → logprob: -11.939314842224121

Token 78: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0816953256726265
    2. ' <=' → logprob: -2.581695318222046
    3. '<' → logprob: -5.956695556640625
    4. ' ' → logprob: -9.581695556640625
    5. 'le' → logprob: -10.331695556640625
    6. '[' → logprob: -10.956695556640625
    7. ' <' → logprob: -10.956695556640625
    8. ')<=' → logprob: -10.956695556640625
    9. '=' → logprob: -12.081695556640625
    10. '≤' → logprob: -12.394195556640625

Token 79: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07889121770858765
    2. 'r' → logprob: -2.5788912773132324
    3. ' ' → logprob: -14.203890800476074
    4. '	r' → logprob: -14.828890800476074
    5. '<|end|>' → logprob: -15.703890800476074
    6. '_r' → logprob: -16.45389175415039
    7. 's' → logprob: -16.57889175415039
    8. ' ' → logprob: -16.57889175415039
    9. '    ' → logprob: -17.57889175415039
    10. ' р' → logprob: -17.95389175415039

Token 80: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012199865886941552
    2. '0' → logprob: -6.751219749450684
    3. ' [' → logprob: -10.251219749450684
    4. ' ' → logprob: -11.626219749450684
    5. '[
' → logprob: -12.876219749450684
    6. '(' → logprob: -13.626219749450684
    7. ''s' → logprob: -14.751219749450684
    8. '```' → logprob: -15.001219749450684
    9. '   ' → logprob: -15.876219749450684
    10. '`' → logprob: -16.001220703125

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '1' → logprob: -16.062503814697266
    5. '۰' → logprob: -16.437503814697266
    6. '```' → logprob: -16.500003814697266
    7. '০' → logprob: -17.187503814697266
    8. '`' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.437503814697266
    10. '00' → logprob: -17.437503814697266

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6443841457366943
    2. ':' → logprob: -1.0193841457366943
    3. ']:' → logprob: -2.2693841457366943
    4. '):
' → logprob: -5.269384384155273
    5. '       ' → logprob: -5.769384384155273
    6. ']:
' → logprob: -7.144384384155273
    7. ':
' → logprob: -7.394384384155273
    8. '   ' → logprob: -7.894384384155273
    9. '}:' → logprob: -8.144384384155273
    10. ')' → logprob: -9.144384384155273

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11673720926046371
    2. '
' → logprob: -2.366737127304077
    3. '       ' → logprob: -4.491737365722656
    4. '\n' → logprob: -6.616737365722656
    5. '            
' → logprob: -6.866737365722656
    6. '        
' → logprob: -7.116737365722656
    7. ' 
' → logprob: -7.241737365722656
    8. 'count' → logprob: -8.366737365722656
    9. '```' → logprob: -8.491737365722656
    10. '    
' → logprob: -8.741737365722656

Token 84: ' robot' (ID: 20808)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5814481973648071
    2. ' count' → logprob: -0.8314481973648071
    3. '       ' → logprob: -6.081448078155518
    4. '
' → logprob: -6.206448078155518
    5. '           ' → logprob: -7.081448078155518
    6. '   ' → logprob: -8.581448554992676
    7. ' 
' → logprob: -9.706448554992676
    8. '               ' → logprob: -10.206448554992676
    9. '	count' → logprob: -10.706448554992676
    10. ' ' → logprob: -11.581448554992676

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010337610729038715
    2. '=' → logprob: -6.876033782958984
    3. '=r' → logprob: -14.126033782958984
    4. ',' → logprob: -16.001033782958984
    5. ' ' → logprob: -17.126033782958984
    6. ' =
' → logprob: -17.126033782958984
    7. 'r' → logprob: -17.751033782958984
    8. '[' → logprob: -17.751033782958984
    9. ' r' → logprob: -18.376033782958984
    10. '   ' → logprob: -19.251033782958984

Token 86: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06196768581867218
    2. ' r' → logprob: -2.811967611312866
    3. '(r' → logprob: -16.936967849731445
    4. '_r' → logprob: -17.561967849731445
    5. ' ' → logprob: -17.811967849731445
    6. ' ' → logprob: -18.186967849731445
    7. '	r' → logprob: -18.311967849731445
    8. ' (' → logprob: -18.561967849731445
    9. '(' → logprob: -20.186967849731445
    10. ' р' → logprob: -20.311967849731445

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12794387340545654
    2. '           ' → logprob: -2.127943992614746
    3. '
' → logprob: -7.502943992614746
    4. '       ' → logprob: -8.127943992614746
    5. ' 
' → logprob: -9.752943992614746
    6. 'count' → logprob: -10.377943992614746
    7. '   ' → logprob: -10.877943992614746
    8. '            
' → logprob: -11.377943992614746
    9. '```' → logprob: -11.502943992614746
    10. '<|end|>' → logprob: -11.877943992614746

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04489828273653984
    2. '
' → logprob: -3.294898271560669
    3. '       ' → logprob: -5.294898509979248
    4. 'count' → logprob: -6.669898509979248
    5. '   ' → logprob: -8.79489803314209
    6. ' 
' → logprob: -9.16989803314209
    7. '            
' → logprob: -9.54489803314209
    8. '```' → logprob: -9.66989803314209
    9. '
' → logprob: -10.16989803314209
    10. ' count' → logprob: -10.16989803314209

Token 89: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0019351851660758257
    2. ' count' → logprob: -6.251935005187988
    3. '   ' → logprob: -12.251935005187988
    4. '           ' → logprob: -14.001935005187988
    5. '	count' → logprob: -14.376935005187988
    6. '       ' → logprob: -15.626935005187988
    7. ' ' → logprob: -16.876935958862305
    8. '
' → logprob: -17.626935958862305
    9. '    ' → logprob: -17.751935958862305
    10. 'Count' → logprob: -17.876935958862305

Token 90: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14364583790302277
    2. '+' → logprob: -2.143645763397217
    3. '+=' → logprob: -4.143645763397217
    4. ' +' → logprob: -7.268645763397217
    5. ' ' → logprob: -11.143646240234375
    6. '=' → logprob: -14.518646240234375
    7. '   ' → logprob: -14.893646240234375
    8. ' ' → logprob: -15.018646240234375
    9. '+="' → logprob: -15.143646240234375
    10. '+='' → logprob: -15.893646240234375

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -17.500261306762695
    4. '   ' → logprob: -18.625261306762695
    5. '<|end|>' → logprob: -19.312761306762695
    6. '۱' → logprob: -19.437761306762695
    7. '１' → logprob: -19.687761306762695
    8. ' ' → logprob: -19.875261306762695
    9. '2' → logprob: -20.187761306762695
    10. '  ' → logprob: -20.187761306762695

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.500003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '１' → logprob: -18.937503814697266
    6. '2' → logprob: -19.000003814697266
    7. '۱' → logprob: -19.562503814697266
    8. '१' → logprob: -19.625003814697266
    9. '১' → logprob: -19.937503814697266
    10. '' → logprob: -20.000003814697266

Token 93: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5796718597412109
    2. '   ' → logprob: -0.8296718597412109
    3. '    
' → logprob: -6.204671859741211
    4. 'print' → logprob: -7.579671859741211
    5. 'return' → logprob: -8.079671859741211
    6. '\n' → logprob: -8.079671859741211
    7. '<|end|>' → logprob: -8.704671859741211
    8. '  
' → logprob: -9.329671859741211
    9. ' return' → logprob: -9.829671859741211
    10. '' → logprob: -9.954671859741211

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044999826699495316
    2. '
' → logprob: -3.169999837875366
    3. '    
' → logprob: -7.294999599456787
    4. '\n' → logprob: -7.669999599456787
    5. 'return' → logprob: -8.170000076293945
    6. ' return' → logprob: -9.045000076293945
    7. '<|end|>' → logprob: -9.170000076293945
    8. '```' → logprob: -9.670000076293945
    9. '' → logprob: -9.795000076293945
    10. '\' → logprob: -10.045000076293945

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.22473442554473877
    2. '   ' → logprob: -1.7247344255447388
    3. 'return' → logprob: -3.849734306335449
    4. ' print' → logprob: -6.724734306335449
    5. ' return' → logprob: -7.974734306335449
    6. '    
' → logprob: -9.47473430633545
    7. '
' → logprob: -9.97473430633545
    8. '```' → logprob: -10.09973430633545
    9. ')' → logprob: -10.72473430633545
    10. ' 
' → logprob: -12.22473430633545

Token 96: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.02976311184465885
    2. '(' → logprob: -3.5297632217407227
    3. '()' → logprob: -11.404763221740723
    4. '(cnt' → logprob: -14.779763221740723
    5. '(c' → logprob: -15.404763221740723
    6. '(counter' → logprob: -15.529763221740723
    7. '('' → logprob: -15.904763221740723
    8. '(max' → logprob: -16.529762268066406
    9. 'count' → logprob: -16.654762268066406
    10. '(len' → logprob: -17.029762268066406

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')`' → logprob: -18.000001907348633
    5. '()' → logprob: -18.375001907348633
    6. '))' → logprob: -18.500001907348633
    7. ')

' → logprob: -19.375001907348633
    8. '(' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '`)' → logprob: -20.125001907348633

Token 98: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39133980870246887
    2. '<|end|>' → logprob: -1.7663397789001465
    3. '#' → logprob: -3.0163397789001465
    4. '```' → logprob: -3.2663397789001465
    5. '\n' → logprob: -3.8913397789001465
    6. 'if' → logprob: -4.0163397789001465
    7. ' ' → logprob: -5.1413397789001465
    8. '_' → logprob: -5.3913397789001465
    9. '\' → logprob: -5.6413397789001465
    10. '[' → logprob: -6.0163397789001465

Token 99: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0006602536886930466
    2. '__' → logprob: -7.500660419464111
    3. ' ' → logprob: -9.625659942626953
    4. '_' → logprob: -10.875659942626953
    5. ' _' → logprob: -11.125659942626953
    6. ' ' → logprob: -12.125659942626953
    7. ' ___' → logprob: -13.875659942626953
    8. ' ​' → logprob: -15.375659942626953
    9. ' ‌' → logprob: -15.500659942626953
    10. ' ' → logprob: -15.625659942626953

Token 100: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.42586973309516907
    2. '<|end|>' → logprob: -1.1758697032928467
    3. '==' → logprob: -4.050869941711426
    4. ' ==' → logprob: -4.425869941711426
    5. '<|end|>' → logprob: -6.050869941711426
    6. '.' → logprob: -6.675869941711426
    7. '_' → logprob: -6.675869941711426
    8. '```' → logprob: -7.050869941711426
    9. '__.__' → logprob: -7.675869941711426
    10. ' __' → logprob: -7.925869941711426

Token 101: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012657057959586382
    2. '_' → logprob: -6.876265525817871
    3. '__.__' → logprob: -8.876265525817871
    4. '___' → logprob: -10.501265525817871
    5. '==' → logprob: -10.626265525817871
    6. '__.' → logprob: -10.751265525817871
    7. '____' → logprob: -12.376265525817871
    8. '.__' → logprob: -12.876265525817871
    9. '__
' → logprob: -13.001265525817871
    10. '<|end|>' → logprob: -13.376265525817871

Token 102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.40671804547309875
    2. '__' → logprob: -1.2817180156707764
    3. '==' → logprob: -2.9067180156707764
    4. '_' → logprob: -7.6567182540893555
    5. '=="' → logprob: -8.031718254089355
    6. '[' → logprob: -8.281718254089355
    7. '```' → logprob: -8.781718254089355
    8. '<|end|>' → logprob: -8.906718254089355
    9. '=='' → logprob: -9.156718254089355
    10. '.' → logprob: -9.156718254089355

Token 103: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10030835121870041
    2. ''' → logprob: -2.350308418273926
    3. ' "__' → logprob: -9.600308418273926
    4. ' "' → logprob: -10.850308418273926
    5. '__' → logprob: -11.600308418273926
    6. ' '__' → logprob: -12.350308418273926
    7. ' '' → logprob: -14.225308418273926
    8. '"user' → logprob: -16.10030746459961
    9. ' ' → logprob: -17.47530746459961
    10. ''"' → logprob: -17.60030746459961

Token 104: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8889261304575484e-06
    2. 'name' → logprob: -12.750003814697266
    3. ' main' → logprob: -14.125003814697266
    4. '_main' → logprob: -16.625003814697266
    5. 'ma' → logprob: -16.750003814697266
    6. 'm' → logprob: -17.875003814697266
    7. '	main' → logprob: -18.375003814697266
    8. '"' → logprob: -18.750003814697266
    9. '(main' → logprob: -20.250003814697266
    10. '-main' → logprob: -20.375003814697266

Token 105: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.38697969913482666
    2. '__' → logprob: -1.1369796991348267
    3. '__':
' → logprob: -9.886980056762695
    4. '__.' → logprob: -10.011980056762695
    5. '__["' → logprob: -12.011980056762695
    6. '__.__' → logprob: -12.386980056762695
    7. '__
' → logprob: -14.011980056762695
    8. '__("' → logprob: -14.386980056762695
    9. '"' → logprob: -15.011980056762695
    10. '__",' → logprob: -15.136980056762695

Token 106: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007364890188910067
    2. ' ' → logprob: -8.000736236572266
    3. '   ' → logprob: -9.000736236572266
    4. 'main' → logprob: -9.125736236572266
    5. ' ' → logprob: -9.750736236572266
    6. '	main' → logprob: -9.875736236572266
    7. ' 
' → logprob: -11.000736236572266
    8. '<|end|>' → logprob: -11.375736236572266
    9. '    ' → logprob: -12.000736236572266
    10. '"' → logprob: -12.375736236572266

Token 107: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.014163628220558167
    2. ' main' → logprob: -4.264163494110107
    3. '	main' → logprob: -16.264163970947266
    4. '   ' → logprob: -18.889163970947266
    5. ' ' → logprob: -19.889163970947266
    6. 'ma' → logprob: -21.014163970947266
    7. '_main' → logprob: -21.014163970947266
    8. ' ' → logprob: -21.014163970947266
    9. 'mai' → logprob: -21.639163970947266
    10. '.main' → logprob: -21.889163970947266

Token 108: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3000645637512207
    2. '\n' → logprob: -1.4250645637512207
    3. '<|end|>' → logprob: -1.6750645637512207
    4. '()' → logprob: -1.9250645637512207
    5. '(' → logprob: -2.5500645637512207
    6. ')' → logprob: -3.8000645637512207
    7. '```' → logprob: -4.175064563751221
    8. '[' → logprob: -4.675064563751221
    9. 'newline' → logprob: -4.925064563751221
    10. '#' → logprob: -5.050064563751221


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 106
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 47.17%
Précision adaptée (1ère position): 54.72%
Précision (top 10): 89.62%
================================================================================
