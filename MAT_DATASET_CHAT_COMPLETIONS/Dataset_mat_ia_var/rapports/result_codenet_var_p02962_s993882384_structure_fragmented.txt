================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input(), input()

def get_length(s):
    return len(s)

def calc_repeat_factor(len_s, len_t):
    return ((len_t + len_s - 1) // len_s) * 2

def extend_string(s, factor):
    return s * factor

def compute_hash_arr(s, base, mod):
    hash_arr = [0]
    for c in s:
        hash_arr.append((hash_arr[-1] * base + ord(c) - 97) % mod)
    return hash_arr

def compute_hash_val(t, base, mod):
    hash_val = 0
    for c in t:
        hash_val = (hash_val * base + ord(c) - 97) % mod
    return hash_val

def pow_mod(base, exp, mod):
    return pow(base, exp, mod)

def check_matches(hash_s, hash_t, base, mod, len_t, len0):
    return [is_match(hash_s, i, hash_t, base, mod, len_t) for i in range(len0)]

def is_match(hash_s, i, hash_t, base, mod, len_t):
    left = hash_s[i + len_t]
    right = (hash_s[i] * pow_mod(base, len_t, mod)) % mod
    return (left - right) % mod == hash_t

def initialize_visited(len0):
    return [-1] * len0

def find_max_chain(ok, len0, len_t):
    ret = 0
    visited = initialize_visited(len0)
    for i in range(len0):
        if ok[i] and visited[i] == -1:
            cnt = process_chain(i, ok, visited, len0, len_t)
            if cnt == -1:
                return -1
            visited[i] = cnt
            ret = max(ret, cnt)
    return ret

def process_chain(start, ok, visited, len0, len_t):
    j = start
    count = 0
    while ok[j]:
        if visited[j] != -1:
            count += visited[j]
            break
        count += 1
        visited[j] = 1
        j = next_index(j, len_t, len0)
        if has_cycle(j, start):
            return -1
    return count

def next_index(j, len_t, len0):
    return (j + len_t) % len0

def has_cycle(j, start):
    return j == start

def main():
    S, T = read_input()
    len0 = get_length(S)
    len_t = get_length(T)
    base = 26
    MOD = 2 ** 31 + 7

    rep = calc_repeat_factor(len0, len_t)
    S_ext = extend_string(S, rep)

    hashS = compute_hash_arr(S_ext, base, MOD)
    hashT = compute_hash_val(T, base, MOD)

    ok = check_matches(hashS, hashT, base, MOD, len_t, len0)
    
    ret = find_max_chain(ok, len0, len_t)
    print(ret)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004592111334204674
    2. '_' → logprob: -5.504591941833496
    3. '(:' → logprob: -8.879591941833496
    4. '```' → logprob: -9.004591941833496
    5. '(_:' → logprob: -9.629591941833496
    6. '():' → logprob: -9.879591941833496
    7. ' (' → logprob: -10.254591941833496
    8. '(_' → logprob: -10.629591941833496
    9. ':' → logprob: -10.879591941833496
    10. ''' → logprob: -11.879591941833496

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49144166707992554
    2. 'input' → logprob: -1.9914417266845703
    3. '```' → logprob: -2.7414417266845703
    4. '   ' → logprob: -2.8664417266845703
    5. 'data' → logprob: -3.2414417266845703
    6. 'x' → logprob: -3.4914417266845703
    7. 'user' → logprob: -4.24144172668457
    8. 'n' → logprob: -4.24144172668457
    9. 'text' → logprob: -4.36644172668457
    10. 'r' → logprob: -5.49144172668457

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34299758076667786
    2. 'input' → logprob: -2.0929975509643555
    3. '"' → logprob: -2.4679975509643555
    4. ' input' → logprob: -2.7179975509643555
    5. ''' → logprob: -4.3429975509643555
    6. '  ' → logprob: -6.8429975509643555
    7. ' "' → logprob: -7.8429975509643555
    8. '(input' → logprob: -8.092997550964355
    9. ' []' → logprob: -8.217997550964355
    10. ' '' → logprob: -8.717997550964355

Token 7: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003339671529829502
    2. '()' → logprob: -5.753339767456055
    3. '('' → logprob: -10.003339767456055
    4. ' (' → logprob: -10.128339767456055
    5. '("("' → logprob: -10.378339767456055
    6. '(
' → logprob: -11.128339767456055
    7. '(

' → logprob: -11.753339767456055
    8. '```' → logprob: -12.628339767456055
    9. '(`' → logprob: -12.878339767456055
    10. '"' → logprob: -12.878339767456055

Token 8: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2906532883644104
    2. '<|end|>' → logprob: -1.7906532287597656
    3. ')' → logprob: -3.7906532287597656
    4. '[' → logprob: -4.290653228759766
    5. '(' → logprob: -4.665653228759766
    6. ''' → logprob: -4.665653228759766
    7. '\n' → logprob: -5.665653228759766
    8. '#' → logprob: -5.790653228759766
    9. '  ' → logprob: -5.915653228759766
    10. '```' → logprob: -6.040653228759766

Token 9: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6951268911361694
    2. '()' → logprob: -0.6951268911361694
    3. '```' → logprob: -7.195127010345459
    4. ')' → logprob: -7.445127010345459
    5. '`()' → logprob: -8.5701265335083
    6. '`' → logprob: -9.0701265335083
    7. '(
' → logprob: -9.1951265335083
    8. '(

' → logprob: -10.3201265335083
    9. '"' → logprob: -10.6951265335083
    10. '()`' → logprob: -10.8201265335083

Token 10: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7159810662269592
    2. '#' → logprob: -2.3409810066223145
    3. '<|end|>' → logprob: -2.3409810066223145
    4. '\n' → logprob: -2.5909810066223145
    5. '
' → logprob: -2.7159810066223145
    6. '```' → logprob: -3.0909810066223145
    7. ',' → logprob: -3.4659810066223145
    8. '(' → logprob: -3.8409810066223145
    9. '()' → logprob: -4.7159810066223145
    10. 'x' → logprob: -4.7159810066223145

Token 11: ' get' (ID: 717)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.8648198246955872
    2. ' calculate' → logprob: -1.3648197650909424
    3. ' read' → logprob: -2.1148197650909424
    4. ' main' → logprob: -2.2398197650909424
    5. '_' → logprob: -3.9898197650909424
    6. ' write' → logprob: -3.9898197650909424
    7. ' compute' → logprob: -4.3648200035095215
    8. ' user' → logprob: -4.6148200035095215
    9. ' add' → logprob: -5.2398200035095215
    10. ' test' → logprob: -5.4898200035095215

Token 12: '_length' (ID: 11514)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0776201486587524
    2. '_max' → logprob: -1.5776201486587524
    3. '_' → logprob: -1.7026201486587524
    4. '_data' → logprob: -2.327620029449463
    5. '_user' → logprob: -2.827620029449463
    6. '_input' → logprob: -3.452620029449463
    7. '_average' → logprob: -3.952620029449463
    8. '_name' → logprob: -4.827620029449463
    9. '_value' → logprob: -4.952620029449463
    10. '_string' → logprob: -5.702620029449463

Token 13: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018677101470530033
    2. '_' → logprob: -7.126867771148682
    3. 's' → logprob: -8.001867294311523
    4. '("("' → logprob: -8.876867294311523
    5. '(s' → logprob: -9.376867294311523
    6. '_(' → logprob: -9.626867294311523
    7. '(_' → logprob: -9.626867294311523
    8. '_length' → logprob: -10.251867294311523
    9. '```' → logprob: -10.626867294311523
    10. '('_' → logprob: -10.626867294311523

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.115528404712677
    2. ')' → logprob: -2.2405283451080322
    3. '_' → logprob: -6.615528583526611
    4. 's' → logprob: -6.990528583526611
    5. '):
' → logprob: -8.865528106689453
    6. ':' → logprob: -9.615528106689453
    7. ' ):' → logprob: -10.365528106689453
    8. ')_' → logprob: -10.615528106689453
    9. '[' → logprob: -10.990528106689453
    10. ')s' → logprob: -11.115528106689453

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44518497586250305
    2. 'len' → logprob: -1.4451849460601807
    3. ' len' → logprob: -2.1951849460601807
    4. '(len' → logprob: -5.19518518447876
    5. ' return' → logprob: -5.69518518447876
    6. 'return' → logprob: -7.07018518447876
    7. '    ' → logprob: -7.44518518447876
    8. '[len' → logprob: -7.69518518447876
    9. '	len' → logprob: -8.070184707641602
    10. ' ' → logprob: -8.195184707641602

Token 16: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.1940120458602905
    2. 'return' (adapté à ' return') → logprob: -1.1940120458602905
    3. 'len' → logprob: -1.4440120458602905
    4. '   ' → logprob: -2.19401216506958
    5. ' len' → logprob: -3.06901216506958
    6. '```' → logprob: -9.819011688232422
    7. '(len' → logprob: -11.319011688232422
    8. '[len' → logprob: -13.069011688232422
    9. '    ' → logprob: -13.069011688232422
    10. ' ' → logprob: -13.194011688232422

Token 17: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07889165729284286
    2. 'len' → logprob: -2.5788917541503906
    3. ' ' → logprob: -14.20389175415039
    4. '(len' → logprob: -14.32889175415039
    5. '   ' → logprob: -15.20389175415039
    6. ' ' → logprob: -15.45389175415039
    7. '	len' → logprob: -16.45389175415039
    8. '=len' → logprob: -16.70389175415039
    9. '[len' → logprob: -16.95389175415039
    10. '```' → logprob: -17.45389175415039

Token 18: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011049470864236355
    2. '(' → logprob: -4.511049270629883
    3. 's' → logprob: -13.761049270629883
    4. ' (' → logprob: -15.136049270629883
    5. '(
' → logprob: -16.136049270629883
    6. '(

' → logprob: -16.886049270629883
    7. '()' → logprob: -17.386049270629883
    8. '(ss' → logprob: -17.386049270629883
    9. '((' → logprob: -18.136049270629883
    10. '('' → logprob: -18.136049270629883

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. '))' → logprob: -11.875009536743164
    3. ' )' → logprob: -13.250009536743164
    4. ')s' → logprob: -15.500009536743164
    5. ')))' → logprob: -16.000009536743164
    6. ')
' → logprob: -16.250009536743164
    7. '())' → logprob: -16.500009536743164
    8. 's' → logprob: -16.625009536743164
    9. '[' → logprob: -17.000009536743164
    10. ')return' → logprob: -17.000009536743164

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000527534110005945
    2. 's' → logprob: -8.375527381896973
    3. 'print' → logprob: -10.250527381896973
    4. 'length' → logprob: -10.375527381896973
    5. '<|end|>' → logprob: -10.500527381896973
    6. 'for' → logprob: -10.625527381896973
    7. '\' → logprob: -10.750527381896973
    8. '#' → logprob: -10.750527381896973
    9. '```' → logprob: -10.750527381896973
    10. 'd' → logprob: -10.875527381896973

Token 21: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.18391495943069458
    2. ' compare' → logprob: -2.55891489982605
    3. ' get' → logprob: -2.93391489982605
    4. ' common' → logprob: -4.058915138244629
    5. ' find' → logprob: -5.308915138244629
    6. ' concatenate' → logprob: -5.558915138244629
    7. ' calculate' → logprob: -6.183915138244629
    8. 'main' → logprob: -6.683915138244629
    9. ' longest' → logprob: -6.683915138244629
    10. 'compare' → logprob: -7.058915138244629

Token 22: '_repeat' (ID: 109150)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.37393248081207275
    2. '_sum' → logprob: -2.123932361602783
    3. '_' → logprob: -2.498932361602783
    4. '_l' → logprob: -3.498932361602783
    5. 'ulate' → logprob: -3.748932361602783
    6. '_len' → logprob: -3.998932361602783
    7. '_difference' → logprob: -4.623932361602783
    8. '_distance' → logprob: -5.123932361602783
    9. '_string' → logprob: -5.498932361602783
    10. '_average' → logprob: -5.748932361602783

Token 23: '_factor' (ID: 43757)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.9030758738517761
    2. 's' → logprob: -1.528075933456421
    3. 'ed' → logprob: -1.778075933456421
    4. '_' → logprob: -2.028075933456421
    5. 'ition' → logprob: -3.153075933456421
    6. 'ing' → logprob: -4.653075695037842
    7. '_factor' → logprob: -5.028075695037842
    8. 'ence' → logprob: -6.028075695037842
    9. '_length' → logprob: -6.028075695037842
    10. '()' → logprob: -6.278075695037842

Token 24: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0345662385225296
    2. '(s' → logprob: -3.4095661640167236
    3. '()' → logprob: -7.534566402435303
    4. '('' → logprob: -8.909565925598145
    5. 's' → logprob: -9.159565925598145
    6. ' (' → logprob: -10.284565925598145
    7. '("("' → logprob: -10.409565925598145
    8. '(n' → logprob: -11.534565925598145
    9. '():' → logprob: -11.659565925598145
    10. '(a' → logprob: -11.909565925598145

Token 25: '_s' (ID: 1278)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00407199002802372
    2. ')' → logprob: -6.129072189331055
    3. '(s' → logprob: -6.754072189331055
    4. '(' → logprob: -8.379072189331055
    5. 's' → logprob: -8.754072189331055
    6. '(g' → logprob: -9.004072189331055
    7. 'th' → logprob: -10.004072189331055
    8. 'gs' → logprob: -11.004072189331055
    9. '_g' → logprob: -11.129072189331055
    10. '_)' → logprob: -11.129072189331055

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03648009151220322
    2. ',' → logprob: -3.536480188369751
    3. ')' → logprob: -5.786479949951172
    4. 's' → logprob: -6.286479949951172
    5. '):
' → logprob: -7.411479949951172
    6. ' ):' → logprob: -7.536479949951172
    7. '=' → logprob: -9.036479949951172
    8. ':' → logprob: -9.536479949951172
    9. ' ' → logprob: -9.661479949951172
    10. '   ' → logprob: -9.786479949951172

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.545143485069275
    2. ' n' → logprob: -1.670143485069275
    3. 'len' → logprob: -1.795143485069275
    4. ' k' → logprob: -2.4201436042785645
    5. ' max' → logprob: -2.7951436042785645
    6. ' factor' → logprob: -3.0451436042785645
    7. 'n' → logprob: -3.1701436042785645
    8. ' repeat' → logprob: -3.5451436042785645
    9. 'k' → logprob: -3.9201436042785645
    10. 'factor' → logprob: -4.4201436042785645

Token 28: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.3683122396469116
    2. '_s' → logprob: -1.2433122396469116
    3. '_' → logprob: -5.243312358856201
    4. '_r' → logprob: -5.618312358856201
    5. '_p' → logprob: -6.118312358856201
    6. '_o' → logprob: -6.368312358856201
    7. '2' → logprob: -6.868312358856201
    8. '_b' → logprob: -6.993312358856201
    9. '_a' → logprob: -7.118312358856201
    10. 't' → logprob: -7.368312358856201

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030396245419979095
    2. ' ):' → logprob: -6.628039836883545
    3. ')' → logprob: -6.753039836883545
    4. '):
' → logprob: -8.503039360046387
    5. ',' → logprob: -8.503039360046387
    6. 's' → logprob: -10.128039360046387
    7. '=' → logprob: -10.628039360046387
    8. '_' → logprob: -11.378039360046387
    9. ' ' → logprob: -11.628039360046387
    10. ':' → logprob: -12.003039360046387

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6189588308334351
    2. ' len' → logprob: -1.868958830833435
    3. ' return' → logprob: -2.2439589500427246
    4. ' max' → logprob: -2.6189589500427246
    5. 'len' → logprob: -2.8689589500427246
    6. ' if' → logprob: -3.6189589500427246
    7. 'return' → logprob: -3.9939589500427246
    8. 'max' → logprob: -4.993958950042725
    9. ' min' → logprob: -5.118958950042725
    10. ' (' → logprob: -5.868958950042725

Token 31: ' return' (ID: 622)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9528175592422485
    2. 'len' → logprob: -1.4528175592422485
    3. ' return' → logprob: -2.077817440032959
    4. ' max' → logprob: -2.577817440032959
    5. ' if' → logprob: -2.952817440032959
    6. '   ' → logprob: -3.077817440032959
    7. 'return' (adapté à ' return') → logprob: -3.327817440032959
    8. 'max' → logprob: -4.577817440032959
    9. ' ' → logprob: -4.702817440032959
    10. ' min' → logprob: -4.952817440032959

Token 32: ' ((' (ID: 3536)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2307293564081192
    2. ' len' → logprob: -1.605729341506958
    3. ' max' → logprob: -6.105729579925537
    4. '(len' → logprob: -6.855729579925537
    5. 'max' → logprob: -7.355729579925537
    6. ' (' → logprob: -7.480729579925537
    7. 't' → logprob: -8.230729103088379
    8. '   ' → logprob: -8.730729103088379
    9. ' ' → logprob: -9.230729103088379
    10. ' t' → logprob: -9.730729103088379

Token 33: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1666472852230072
    2. ' len' → logprob: -2.04164719581604
    3. 'max' → logprob: -4.416647434234619
    4. ' max' → logprob: -4.666647434234619
    5. 's' → logprob: -6.916647434234619
    6. '   ' → logprob: -8.041646957397461
    7. 't' → logprob: -8.291646957397461
    8. ' s' → logprob: -8.416646957397461
    9. '(len' → logprob: -9.604146957397461
    10. ' ' → logprob: -9.666646957397461

Token 34: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.4287584125995636
    2. '_s' → logprob: -1.0537583827972412
    3. '(s' → logprob: -10.55375862121582
    4. 's' → logprob: -11.17875862121582
    5. '(t' → logprob: -12.17875862121582
    6. '_' → logprob: -12.55375862121582
    7. 't' → logprob: -13.05375862121582
    8. '(_' → logprob: -13.05375862121582
    9. '_m' → logprob: -14.86625862121582
    10. ' _' → logprob: -14.99125862121582

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7847095131874084
    2. ' +' → logprob: -0.9097095131874084
    3. ' //' → logprob: -2.7847094535827637
    4. '-' → logprob: -3.7847094535827637
    5. ' ' → logprob: -4.034709453582764
    6. ' -' → logprob: -4.159709453582764
    7. ')' → logprob: -4.409709453582764
    8. '//' → logprob: -5.034709453582764
    9. ' )' → logprob: -5.909709453582764
    10. '%' → logprob: -7.159709453582764

Token 36: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.11316908150911331
    2. 'len' → logprob: -2.2381691932678223
    3. '1' → logprob: -9.113168716430664
    4. ' ' → logprob: -9.363168716430664
    5. '(len' → logprob: -9.488168716430664
    6. ' -' → logprob: -10.738168716430664
    7. ' (' → logprob: -10.738168716430664
    8. '-' → logprob: -11.738168716430664
    9. '	len' → logprob: -12.363168716430664
    10. '  ' → logprob: -12.738168716430664

Token 37: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.000001907348633
    3. '(s' → logprob: -14.875001907348633
    4. 's' → logprob: -15.000001907348633
    5. '_t' → logprob: -16.500001907348633
    6. '(_' → logprob: -16.875001907348633
    7. '_)' → logprob: -17.250001907348633
    8. ')' → logprob: -17.750001907348633
    9. '-_' → logprob: -17.750001907348633
    10. '(' → logprob: -18.000001907348633

Token 38: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5055418610572815
    2. '-' → logprob: -1.0055418014526367
    3. ')' → logprob: -3.5055418014526367
    4. ' ' → logprob: -7.505541801452637
    5. ' )' → logprob: -9.255541801452637
    6. '   ' → logprob: -9.505541801452637
    7. ')-' → logprob: -9.755541801452637
    8. '1' → logprob: -10.380541801452637
    9. '```' → logprob: -10.630541801452637
    10. '#' → logprob: -11.380541801452637

Token 39: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021876145619899035
    2. ' ' → logprob: -6.127187728881836
    3. ')' → logprob: -14.127187728881836
    4. '2' → logprob: -14.377187728881836
    5. '-' → logprob: -14.877187728881836
    6. '   ' → logprob: -15.939687728881836
    7. '  ' → logprob: -16.189687728881836
    8. ' -' → logprob: -16.189687728881836
    9. '１' → logprob: -16.502187728881836
    10. '```' → logprob: -16.502187728881836

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.750029563903809
    3. '2' → logprob: -11.750029563903809
    4. '   ' → logprob: -17.250030517578125
    5. '```' → logprob: -17.312530517578125
    6. ')' → logprob: -17.437530517578125
    7. '۱' → logprob: -17.500030517578125
    8. '１' → logprob: -17.562530517578125
    9. '3' → logprob: -17.625030517578125
    10. '

' → logprob: -17.625030517578125

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01518373191356659
    2. ' )' → logprob: -4.265183925628662
    3. ')//' → logprob: -6.890183925628662
    4. '   ' → logprob: -14.640183448791504
    5. ' ' → logprob: -14.890183448791504
    6. ' //' → logprob: -15.140183448791504
    7. '//' → logprob: -15.390183448791504
    8. '    ' → logprob: -15.890183448791504
    9. ')
' → logprob: -16.26518440246582
    10. '))' → logprob: -16.64018440246582

Token 42: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1465473771095276
    2. ' )' → logprob: -2.146547317504883
    3. ')//' → logprob: -4.646547317504883
    4. ' //' → logprob: -4.771547317504883
    5. '//' → logprob: -6.771547317504883
    6. ' ' → logprob: -9.271547317504883
    7. '    ' → logprob: -9.771547317504883
    8. '   ' → logprob: -9.771547317504883
    9. '  ' → logprob: -13.021547317504883
    10. ' ' → logprob: -13.396547317504883

Token 43: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008615515194833279
    2. ' len' → logprob: -4.758615493774414
    3. '	len' → logprob: -14.258615493774414
    4. '   ' → logprob: -15.758615493774414
    5. 's' → logprob: -16.758615493774414
    6. ' ' → logprob: -17.008615493774414
    7. '  ' → logprob: -17.133615493774414
    8. '=len' → logprob: -17.758615493774414
    9. 'leni' → logprob: -18.258615493774414
    10. '<len' → logprob: -18.508615493774414

Token 44: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.246537173457909e-06
    2. 's' → logprob: -12.375003814697266
    3. '(s' → logprob: -18.000003814697266
    4. ')' → logprob: -19.125003814697266
    5. '_' → logprob: -19.625003814697266
    6. '_t' → logprob: -20.125003814697266
    7. '	s' → logprob: -21.000003814697266
    8. '<|end|>' → logprob: -21.250003814697266
    9. '   ' → logprob: -22.000003814697266
    10. ' s' → logprob: -22.125003814697266

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.53050296427682e-05
    2. ' )' → logprob: -10.50008487701416
    3. ')*' → logprob: -10.75008487701416
    4. '))' → logprob: -11.50008487701416
    5. '   ' → logprob: -12.00008487701416
    6. ')
' → logprob: -12.50008487701416
    7. '*' → logprob: -12.75008487701416
    8. ')))' → logprob: -12.75008487701416
    9. ')return' → logprob: -13.25008487701416
    10. ')**' → logprob: -13.62508487701416

Token 46: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14075204730033875
    2. '<|end|>' → logprob: -2.390752077102661
    3. 'def' → logprob: -3.765752077102661
    4. ' *' → logprob: -5.015751838684082
    5. '```' → logprob: -6.140751838684082
    6. '**' → logprob: -6.265751838684082
    7. ')' → logprob: -6.390751838684082
    8. '<|end|>' → logprob: -6.390751838684082
    9. '+' → logprob: -7.765751838684082
    10. '
' → logprob: -7.890751838684082

Token 47: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26981115341186523
    2. '2' → logprob: -2.0198111534118652
    3. ' len' → logprob: -2.7698111534118652
    4. 's' → logprob: -3.6448111534118652
    5. ' ' → logprob: -5.144811153411865
    6. ' s' → logprob: -5.144811153411865
    7. '1' → logprob: -6.394811153411865
    8. '  ' → logprob: -8.332311630249023
    9. '3' → logprob: -8.457311630249023
    10. '   ' → logprob: -8.707311630249023

Token 48: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11715366691350937
    2. 's' → logprob: -2.4921536445617676
    3. '2' → logprob: -3.6171536445617676
    4. ' len' → logprob: -8.492154121398926
    5. '(len' → logprob: -9.117154121398926
    6. '1' → logprob: -9.242154121398926
    7. '3' → logprob: -9.617154121398926
    8. '   ' → logprob: -9.992154121398926
    9. 'leni' → logprob: -10.054654121398926
    10. 't' → logprob: -10.304654121398926

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38676270842552185
    2. '<|end|>' → logprob: -1.6367627382278442
    3. 'def' → logprob: -2.8867626190185547
    4. '*' → logprob: -3.8867626190185547
    5. '\n' → logprob: -4.386762619018555
    6. '  
' → logprob: -5.136762619018555
    7. '```' → logprob: -5.136762619018555
    8. 'newline' → logprob: -5.261762619018555
    9. ' 
' → logprob: -5.386762619018555
    10. '<|end|>' → logprob: -5.886762619018555

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013486543670296669
    2. '
' → logprob: -5.263486385345459
    3. '

' → logprob: -5.763486385345459
    4. '<|end|>' → logprob: -6.513486385345459
    5. '\' → logprob: -6.763486385345459
    6. '#' → logprob: -7.138486385345459
    7. 'd' → logprob: -7.638486385345459
    8. '```' → logprob: -7.888486385345459
    9. 's' → logprob: -8.763486862182617
    10. 't' → logprob: -8.763486862182617

Token 51: ' extend' (ID: 20239)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1358681172132492
    2. ' repeat' → logprob: -3.3858680725097656
    3. ' solve' → logprob: -3.7608680725097656
    4. ' can' → logprob: -4.010868072509766
    5. ' find' → logprob: -4.760868072509766
    6. 'main' → logprob: -5.010868072509766
    7. ' check' → logprob: -5.135868072509766
    8. ' get' → logprob: -5.510868072509766
    9. ' is' → logprob: -5.510868072509766
    10. ' solution' → logprob: -5.635868072509766

Token 52: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7493049502372742
    2. '_string' → logprob: -0.8743049502372742
    3. '_s' → logprob: -3.249305009841919
    4. '(s' → logprob: -3.999305009841919
    5. '_input' → logprob: -4.12430477142334
    6. '_text' → logprob: -4.74930477142334
    7. '(' → logprob: -4.99930477142334
    8. '_str' → logprob: -5.49930477142334
    9. '_factor' → logprob: -5.87430477142334
    10. '(_' → logprob: -6.24930477142334

Token 53: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004306326154619455
    2. '(' → logprob: -5.504306316375732
    3. ' (' → logprob: -8.62930679321289
    4. '(ss' → logprob: -11.62930679321289
    5. '(str' → logprob: -11.62930679321289
    6. '_string' → logprob: -12.12930679321289
    7. 's' → logprob: -12.37930679321289
    8. '(string' → logprob: -12.50430679321289
    9. '(strings' → logprob: -12.50430679321289
    10. '_(' → logprob: -13.00430679321289

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01961790956556797
    2. '):' → logprob: -4.019618034362793
    3. ' ,' → logprob: -6.894618034362793
    4. ',s' → logprob: -8.769618034362793
    5. '   ' → logprob: -9.019618034362793
    6. 's' → logprob: -9.519618034362793
    7. ')' → logprob: -10.644618034362793
    8. ':' → logprob: -10.769618034362793
    9. ' ):' → logprob: -10.769618034362793
    10. ' s' → logprob: -11.269618034362793

Token 55: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.9546540379524231
    2. ' repeat' → logprob: -1.2046539783477783
    3. 'repeat' → logprob: -1.9546539783477783
    4. 'factor' → logprob: -2.8296539783477783
    5. ' n' → logprob: -2.9546539783477783
    6. ' times' → logprob: -3.7046539783477783
    7. ' length' → logprob: -4.454654216766357
    8. '   ' → logprob: -4.704654216766357
    9. 'n' → logprob: -5.329654216766357
    10. ' ' → logprob: -5.954654216766357

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.6934557505883276e-05
    2. ')' → logprob: -10.750057220458984
    3. '):
' → logprob: -10.875057220458984
    4. ' ):' → logprob: -11.500057220458984
    5. ':' → logprob: -12.500057220458984
    6. '=' → logprob: -13.750057220458984
    7. '):
' → logprob: -14.000057220458984
    8. '   ' → logprob: -15.500057220458984
    9. '}:' → logprob: -16.375057220458984
    10. ')：' → logprob: -16.625057220458984

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09216413646936417
    2. ' return' → logprob: -2.9671640396118164
    3. ' s' → logprob: -3.4671640396118164
    4. 's' → logprob: -5.592164039611816
    5. 'return' → logprob: -6.717164039611816
    6. '    ' → logprob: -7.967164039611816
    7. ' ' → logprob: -10.467164039611816
    8. '(s' → logprob: -11.217164039611816
    9. ''s' → logprob: -11.592164039611816
    10. '  ' → logprob: -11.592164039611816

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06031670421361923
    2. ' s' → logprob: -3.060316801071167
    3. 'return' (adapté à ' return') → logprob: -5.185316562652588
    4. '   ' → logprob: -5.685316562652588
    5. 's' → logprob: -5.935316562652588
    6. ' ' → logprob: -11.810317039489746
    7. '(s' → logprob: -12.435317039489746
    8. '	return' → logprob: -12.435317039489746
    9. ' ' → logprob: -12.810317039489746
    10. '    ' → logprob: -14.310317039489746

Token 59: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08896760642528534
    2. 's' → logprob: -2.4639675617218018
    3. '(s' → logprob: -11.088967323303223
    4. ' (' → logprob: -11.588967323303223
    5. '   ' → logprob: -13.713967323303223
    6. '(' → logprob: -14.338967323303223
    7. ' ' → logprob: -14.463967323303223
    8. '"' → logprob: -15.463967323303223
    9. '	s' → logprob: -15.463967323303223
    10. ' str' → logprob: -15.651467323303223

Token 60: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0029115043580532074
    2. '*' → logprob: -5.877911567687988
    3. '*s' → logprob: -9.752911567687988
    4. 's' → logprob: -10.627911567687988
    5. ' s' → logprob: -11.502911567687988
    6. ' ' → logprob: -11.502911567687988
    7. '```' → logprob: -14.127911567687988
    8. ' multiplied' → logprob: -14.752911567687988
    9. '<|end|>' → logprob: -14.877911567687988
    10. '.repeat' → logprob: -15.127911567687988

Token 61: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0011705794604495168
    2. ' factor' → logprob: -6.751170635223389
    3. 'fact' → logprob: -15.12617015838623
    4. '_factor' → logprob: -17.751171112060547
    5. 'f' → logprob: -18.126171112060547
    6. '.factor' → logprob: -18.376171112060547
    7. 'fac' → logprob: -19.126171112060547
    8. ' fator' → logprob: -19.501171112060547
    9. 'Factor' → logprob: -19.876171112060547
    10. '2' → logprob: -20.501171112060547

Token 62: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018697108316700906
    2. '

' → logprob: -10.125186920166016
    3. '<|end|>' → logprob: -10.250186920166016
    4. '```' → logprob: -10.500186920166016
    5. '<|end|>' → logprob: -10.750186920166016
    6. '
' → logprob: -10.875186920166016
    7. ' def' → logprob: -11.125186920166016
    8. 's' → logprob: -12.000186920166016
    9. '(' → logprob: -12.125186920166016
    10. '(s' → logprob: -12.375186920166016

Token 64: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15440724790096283
    2. ' solve' → logprob: -3.154407262802124
    3. ' find' → logprob: -3.654407262802124
    4. ' check' → logprob: -3.654407262802124
    5. ' process' → logprob: -4.779407024383545
    6. ' is' → logprob: -5.029407024383545
    7. ' compare' → logprob: -5.029407024383545
    8. ' get' → logprob: -5.279407024383545
    9. ' calculate' → logprob: -5.404407024383545
    10. ' solution' → logprob: -5.654407024383545

Token 65: '_hash' (ID: 20844)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.2889739274978638
    2. '_repeat' → logprob: -1.6639739274978638
    3. '_' → logprob: -2.288973808288574
    4. '_overlap' → logprob: -2.538973808288574
    5. '(' → logprob: -2.913973808288574
    6. '_difference' → logprob: -2.913973808288574
    7. '_similarity' → logprob: -3.038973808288574
    8. '_max' → logprob: -3.288973808288574
    9. '_factor' → logprob: -3.413973808288574
    10. '_length' → logprob: -3.913973808288574

Token 66: '_arr' (ID: 25121)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01132673118263483
    2. '(' → logprob: -4.511326789855957
    3. 's' → logprob: -8.386326789855957
    4. 'def' → logprob: -11.761326789855957
    5. '(strings' → logprob: -11.886326789855957
    6. ' (' → logprob: -12.136326789855957
    7. '(string' → logprob: -12.386326789855957
    8. '(str' → logprob: -12.511326789855957
    9. '(prev' → logprob: -13.386326789855957
    10. '(data' → logprob: -13.386326789855957

Token 67: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.026587532833218575
    2. '(arr' → logprob: -4.02658748626709
    3. '(' → logprob: -4.90158748626709
    4. 's' → logprob: -8.02658748626709
    5. '(a' → logprob: -8.77658748626709
    6. ' (' → logprob: -9.65158748626709
    7. '(strings' → logprob: -9.77658748626709
    8. 'ay' → logprob: -9.90158748626709
    9. 'ays' → logprob: -10.15158748626709
    10. '(n' → logprob: -10.27658748626709

Token 68: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025975380558520555
    2. '):
' → logprob: -6.252597332000732
    3. ',' → logprob: -7.877597332000732
    4. ' ):' → logprob: -9.12759780883789
    5. '):
' → logprob: -9.37759780883789
    6. 's' → logprob: -9.50259780883789
    7. ')' → logprob: -11.87759780883789
    8. ':' → logprob: -12.37759780883789
    9. '   ' → logprob: -12.75259780883789
    10. ' ' → logprob: -13.25259780883789

Token 69: ' base' (ID: 3611)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8938854336738586
    2. ' p' → logprob: -1.7688853740692139
    3. ' base' → logprob: -1.8938853740692139
    4. 'length' → logprob: -2.643885374069214
    5. 'base' → logprob: -2.893885374069214
    6. ' length' → logprob: -3.393885374069214
    7. 'mod' → logprob: -3.768885374069214
    8. ' mod' → logprob: -4.268885612487793
    9. 'prime' → logprob: -4.268885612487793
    10. 'P' → logprob: -4.768885612487793

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004785395693033934
    2. '):' → logprob: -5.379785537719727
    3. ' ,' → logprob: -9.379785537719727
    4. '=' → logprob: -9.879785537719727
    5. ':' → logprob: -11.879785537719727
    6. '):
' → logprob: -11.879785537719727
    7. '1' → logprob: -12.629785537719727
    8. 's' → logprob: -12.754785537719727
    9. '_,' → logprob: -12.754785537719727
    10. ' ):' → logprob: -13.004785537719727

Token 71: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.004363302141427994
    2. 'mod' → logprob: -6.129363536834717
    3. ' modulus' → logprob: -6.254363536834717
    4. ' modulo' → logprob: -9.629363059997559
    5. ' ' → logprob: -9.879363059997559
    6. ' MOD' → logprob: -10.004363059997559
    7. '	mod' → logprob: -10.129363059997559
    8. ' mods' → logprob: -11.004363059997559
    9. 'MOD' → logprob: -11.504363059997559
    10. '   ' → logprob: -12.004363059997559

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011390270665287971
    2. ',' → logprob: -6.876139163970947
    3. '):
' → logprob: -9.626138687133789
    4. 's' → logprob: -10.876138687133789
    5. ':' → logprob: -12.001138687133789
    6. ' ):' → logprob: -12.126138687133789
    7. '):
' → logprob: -12.251138687133789
    8. ')' → logprob: -13.626138687133789
    9. '   ' → logprob: -14.126138687133789
    10. '=' → logprob: -14.501138687133789

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3984309136867523
    2. ':' → logprob: -1.1484309434890747
    3. ':
' → logprob: -4.898430824279785
    4. ',' → logprob: -6.898430824279785
    5. ' =' → logprob: -7.773430824279785
    6. '_hash' → logprob: -7.773430824279785
    7. '[' → logprob: -7.898430824279785
    8. '):
' → logprob: -8.023430824279785
    9. ' :' → logprob: -8.148430824279785
    10. '[]' → logprob: -8.273430824279785

Token 74: ' hash' (ID: 10691)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.08803129196167
    2. ' n' → logprob: -1.58803129196167
    3. 'n' → logprob: -1.83803129196167
    4. ' hash' → logprob: -2.58803129196167
    5. '   ' → logprob: -2.83803129196167
    6. ' [' → logprob: -2.96303129196167
    7. 'hash' (adapté à ' hash') → logprob: -3.21303129196167
    8. '[]' → logprob: -3.33803129196167
    9. 'arr' → logprob: -4.33803129196167
    10. '[n' → logprob: -4.96303129196167

Token 75: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0010485276579856873
    2. '_' → logprob: -7.251048564910889
    3. 'es' → logprob: -8.50104808807373
    4. '_array' → logprob: -9.75104808807373
    5. 'arr' → logprob: -10.25104808807373
    6. 's' → logprob: -10.75104808807373
    7. 'Arr' → logprob: -11.62604808807373
    8. '_vals' → logprob: -12.75104808807373
    9. '_s' → logprob: -13.37604808807373
    10. '_list' → logprob: -13.50104808807373

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062485527247190475
    2. '=' → logprob: -2.812485456466675
    3. ',' → logprob: -7.812485694885254
    4. 's' → logprob: -10.187485694885254
    5. '[' → logprob: -10.562485694885254
    6. '=[]' → logprob: -11.062485694885254
    7. ' ' → logprob: -11.187485694885254
    8. '   ' → logprob: -12.187485694885254
    9. '  ' → logprob: -12.437485694885254
    10. ')' → logprob: -12.812485694885254

Token 77: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.06196948140859604
    2. '[' → logprob: -2.811969518661499
    3. ' []' → logprob: -14.561969757080078
    4. '[len' → logprob: -14.811969757080078
    5. '[]' → logprob: -15.061969757080078
    6. '[s' → logprob: -15.311969757080078
    7. ' ' → logprob: -16.061969757080078
    8. '   ' → logprob: -16.436969757080078
    9. '[n' → logprob: -16.811969757080078
    10. ' ' → logprob: -17.061969757080078

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005552975926548243
    2. ' ' → logprob: -7.500555515289307
    3. 's' → logprob: -13.750555038452148
    4. '   ' → logprob: -15.063055038452148
    5. '۰' → logprob: -15.188055038452148
    6. '[' → logprob: -15.813055038452148
    7. ' ' → logprob: -16.37555503845215
    8. '1' → logprob: -16.50055503845215
    9. ' s' → logprob: -17.00055503845215
    10. '(' → logprob: -17.00055503845215

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013643606507685035
    2. ']*(' → logprob: -10.000136375427246
    3. ']*' → logprob: -10.375136375427246
    4. ',' → logprob: -11.125136375427246
    5. ']
' → logprob: -11.125136375427246
    6. ' ]' → logprob: -11.500136375427246
    7. ']int' → logprob: -11.625136375427246
    8. ')' → logprob: -12.125136375427246
    9. ']
' → logprob: -13.875136375427246
    10. '   ' → logprob: -14.000136375427246

Token 80: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6700064539909363
    2. '   ' → logprob: -1.545006513595581
    3. ' for' → logprob: -1.795006513595581
    4. ',' → logprob: -2.545006513595581
    5. 'for' → logprob: -4.670006275177002
    6. ' ' → logprob: -5.545006275177002
    7. '    
' → logprob: -5.670006275177002
    8. '<|end|>' → logprob: -6.045006275177002
    9. '[' → logprob: -6.295006275177002
    10. '	for' → logprob: -6.420006275177002

Token 81: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2534534931182861
    2. ' for' → logprob: -1.5034534931182861
    3. 'for' (adapté à ' for') → logprob: -1.6284534931182861
    4. '   ' → logprob: -1.8784534931182861
    5. ' ' → logprob: -3.503453493118286
    6. '_' → logprob: -3.753453493118286
    7. ',' → logprob: -3.878453493118286
    8. ' =' → logprob: -4.378453254699707
    9. '```' → logprob: -4.628453254699707
    10. '    
' → logprob: -4.878453254699707

Token 82: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2155276983976364
    2. ' c' → logprob: -1.8405276536941528
    3. 'i' → logprob: -3.9655277729034424
    4. 'c' → logprob: -4.465527534484863
    5. ' char' → logprob: -6.340527534484863
    6. ' ch' → logprob: -6.715527534484863
    7. 'char' → logprob: -7.215527534484863
    8. 'ch' → logprob: -8.090527534484863
    9. '   ' → logprob: -8.340527534484863
    10. ' ' → logprob: -8.465527534484863

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022653979249298573
    2. 'in' → logprob: -6.502265453338623
    3. 's' → logprob: -7.752265453338623
    4. ' ' → logprob: -8.127264976501465
    5. ' s' → logprob: -11.752264976501465
    6. ' i' → logprob: -12.127264976501465
    7. '  ' → logprob: -12.377264976501465
    8. ',' → logprob: -12.502264976501465
    9. '<|end|>' → logprob: -12.502264976501465
    10. '   ' → logprob: -12.627264976501465

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11283029615879059
    2. 's' → logprob: -2.237830400466919
    3. ' ' → logprob: -12.86283016204834
    4. '(s' → logprob: -12.98783016204834
    5. '<|end|>' → logprob: -14.36283016204834
    6. 'extend' → logprob: -14.86283016204834
    7. ' range' → logprob: -14.98783016204834
    8. 'extended' → logprob: -15.17533016204834
    9. ' extended' → logprob: -15.36283016204834
    10. 'range' → logprob: -16.050331115722656

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004164114128798246
    2. ' :' → logprob: -5.879164218902588
    3. ' in' → logprob: -8.12916374206543
    4. '   ' → logprob: -8.25416374206543
    5. ',' → logprob: -8.37916374206543
    6. '.' → logprob: -9.25416374206543
    7. '=' → logprob: -9.37916374206543
    8. '    ' → logprob: -9.50416374206543
    9. ' =' → logprob: -9.75416374206543
    10. ' ' → logprob: -9.75416374206543

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6516199707984924
    2. '   ' → logprob: -0.9016199707984924
    3. ' (' → logprob: -3.7766199111938477
    4. ' hash' → logprob: -4.151619911193848
    5. ' ' → logprob: -4.526619911193848
    6. '0' → logprob: -5.526619911193848
    7. '    ' → logprob: -5.526619911193848
    8. '(hash' → logprob: -5.776619911193848
    9. 'hash' → logprob: -5.776619911193848
    10. '```' → logprob: -5.776619911193848

Token 87: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.01936187967658043
    2. 'hash' (adapté à ' hash') → logprob: -4.019361972808838
    3. '(hash' → logprob: -7.644361972808838
    4. '	hash' → logprob: -8.14436149597168
    5. '   ' → logprob: -8.26936149597168
    6. '_hash' → logprob: -9.89436149597168
    7. 'n' → logprob: -10.51936149597168
    8. 'v' → logprob: -11.01936149597168
    9. '```' → logprob: -11.14436149597168
    10. 'h' → logprob: -11.64436149597168

Token 88: '_arr' (ID: 25121)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.20264410972595215
    2. '_arr' → logprob: -1.8276441097259521
    3. '_value' → logprob: -4.327644348144531
    4. '_' → logprob: -4.827644348144531
    5. ' =' → logprob: -6.702644348144531
    6. '=' → logprob: -9.577644348144531
    7. '_code' → logprob: -9.952644348144531
    8. ' _' → logprob: -10.577644348144531
    9. '_=' → logprob: -10.827644348144531
    10. 'arr' → logprob: -11.577644348144531

Token 89: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.507972572464496e-05
    2. '.' → logprob: -9.37509536743164
    3. ' .' → logprob: -12.75009536743164
    4. 'append' → logprob: -13.12509536743164
    5. '.app' → logprob: -13.50009536743164
    6. '_append' → logprob: -13.75009536743164
    7. '.ap' → logprob: -13.87509536743164
    8. '=' → logprob: -13.87509536743164
    9. '[-' → logprob: -14.50009536743164
    10. 'Append' → logprob: -16.00009536743164

Token 90: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006737750489264727
    2. '(' → logprob: -5.00673770904541
    3. '(hash' → logprob: -11.38173770904541
    4. '(((' → logprob: -12.00673770904541
    5. '(
' → logprob: -12.50673770904541
    6. '(h' → logprob: -14.63173770904541
    7. ' ((' → logprob: -15.50673770904541
    8. ' (' → logprob: -15.50673770904541
    9. '((((' → logprob: -16.131738662719727
    10. '   ' → logprob: -16.256738662719727

Token 91: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.18417200446128845
    2. ' hash' → logprob: -1.8091720342636108
    3. '(hash' → logprob: -5.4341721534729
    4. '	hash' → logprob: -10.684171676635742
    5. ' (' → logprob: -11.184171676635742
    6. '   ' → logprob: -11.434171676635742
    7. ' ' → logprob: -13.059171676635742
    8. '_hash' → logprob: -14.184171676635742
    9. '(' → logprob: -14.684171676635742
    10. '(h' → logprob: -15.059171676635742

Token 92: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0001443035143893212
    2. 'arr' → logprob: -8.875144004821777
    3. 'Arr' → logprob: -13.250144004821777
    4. '[arr' → logprob: -14.125144004821777
    5. '	arr' → logprob: -14.375144004821777
    6. '(arr' → logprob: -15.000144004821777
    7. '_' → logprob: -15.125144004821777
    8. '-arr' → logprob: -15.250144004821777
    9. '_hash' → logprob: -16.375144958496094
    10. '_array' → logprob: -16.750144958496094

Token 93: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -18.5
    3. '
' → logprob: -18.5
    4. '```' → logprob: -18.75
    5. '[
' → logprob: -19.25
    6. '][-' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '-' → logprob: -20.25
    9. ' [-' → logprob: -20.375
    10. '1' → logprob: -21.375

Token 94: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3727947175502777
    2. '1' → logprob: -1.4977947473526
    3. ']' → logprob: -3.6227946281433105
    4. ')' → logprob: -3.6227946281433105
    5. '+' → logprob: -5.2477946281433105
    6. ' *' → logprob: -5.3727946281433105
    7. '*' → logprob: -5.4977946281433105
    8. '```' → logprob: -5.6227946281433105
    9. '-' → logprob: -6.1227946281433105
    10. '[' → logprob: -6.2477946281433105

Token 95: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0022171074524521828
    2. '*' → logprob: -6.1272172927856445
    3. ' ' → logprob: -10.377217292785645
    4. ' ' → logprob: -14.377217292785645
    5. '```' → logprob: -16.502216339111328
    6. ')' → logprob: -17.002216339111328
    7. ' **' → logprob: -17.877216339111328
    8. '  ' → logprob: -17.877216339111328
    9. '*object' → logprob: -17.877216339111328
    10. '   ' → logprob: -18.002216339111328

Token 96: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07891523092985153
    2. '*' → logprob: -2.5789151191711426
    3. ' ' → logprob: -10.7039155960083
    4. ' ' → logprob: -12.9539155960083
    5. '**' → logprob: -15.4539155960083
    6. '```' → logprob: -15.5789155960083
    7. '1' → logprob: -17.078914642333984
    8. ' **' → logprob: -17.078914642333984
    9. '*object' → logprob: -17.328914642333984
    10. '*out' → logprob: -17.578914642333984

Token 97: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4740773141384125
    2. ' base' → logprob: -0.9740773439407349
    3. '(base' → logprob: -16.099077224731445
    4. ' ' → logprob: -16.099077224731445
    5. '	base' → logprob: -16.224077224731445
    6. '_base' → logprob: -17.974077224731445
    7. ';base' → logprob: -18.724077224731445
    8. 'Base' → logprob: -18.974077224731445
    9. '```' → logprob: -19.099077224731445
    10. '    ' → logprob: -19.224077224731445

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014163863845169544
    2. '+' → logprob: -4.264163970947266
    3. '+c' → logprob: -15.889163970947266
    4. ' ' → logprob: -16.514163970947266
    5. ' +
' → logprob: -17.014163970947266
    6. ' plus' → logprob: -19.139163970947266
    7. ' ' → logprob: -19.264163970947266
    8. '+C' → logprob: -19.389163970947266
    9. '+
' → logprob: -19.639163970947266
    10. ')' → logprob: -19.889163970947266

Token 99: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.023471059277653694
    2. 'ord' → logprob: -3.7734711170196533
    3. '(ord' → logprob: -8.398470878601074
    4. ' ' → logprob: -15.523470878601074
    5. 'c' → logprob: -16.77347183227539
    6. ' (' → logprob: -16.89847183227539
    7. '   ' → logprob: -17.02347183227539
    8. ' c' → logprob: -17.52347183227539
    9. ' ' → logprob: -18.39847183227539
    10. ' or' → logprob: -18.64847183227539

Token 100: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00029947367147542536
    2. '(' → logprob: -8.125299453735352
    3. ' (' → logprob: -12.875299453735352
    4. ')c' → logprob: -15.000299453735352
    5. 'c' → logprob: -15.500299453735352
    6. '(
' → logprob: -16.12529945373535
    7. ')(' → logprob: -16.12529945373535
    8. '('' → logprob: -17.12529945373535
    9. ')' → logprob: -17.25029945373535
    10. '	c' → logprob: -17.62529945373535

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009232500451616943
    2. '))' → logprob: -7.000923156738281
    3. ' )' → logprob: -11.750923156738281
    4. ')))' → logprob: -13.125923156738281
    5. '')' → logprob: -13.875923156738281
    6. '   ' → logprob: -14.875923156738281
    7. ')`' → logprob: -15.375923156738281
    8. ')
' → logprob: -16.00092315673828
    9. '`)' → logprob: -16.50092315673828
    10. ' ))' → logprob: -16.75092315673828

Token 102: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010843054042197764
    2. ' )' → logprob: -10.00010871887207
    3. '))' → logprob: -10.37510871887207
    4. ')%' → logprob: -10.37510871887207
    5. '   ' → logprob: -15.75010871887207
    6. '%' → logprob: -16.12510871887207
    7. ')`' → logprob: -16.50010871887207
    8. '`)' → logprob: -17.12510871887207
    9. '')' → logprob: -17.37510871887207
    10. ')
' → logprob: -17.37510871887207

Token 103: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.39042723178863525
    2. '96' → logprob: -1.2654272317886353
    3. ' ord' → logprob: -3.7654271125793457
    4. 'ord' → logprob: -4.765427112579346
    5. ' ' → logprob: -4.890427112579346
    6. '64' → logprob: -6.640427112579346
    7. '31' → logprob: -7.640427112579346
    8. '97' → logprob: -10.140427589416504
    9. '36' → logprob: -10.515427589416504
    10. '33' → logprob: -11.390427589416504

Token 104: '97' (ID: 5170)
  Prédit: '96'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '96' → logprob: -0.11900581419467926
    2. '32' → logprob: -2.8690059185028076
    3. '31' → logprob: -2.9940059185028076
    4. ' ord' → logprob: -6.2440056800842285
    5. 'ord' → logprob: -6.3690056800842285
    6. '64' → logprob: -6.7440056800842285
    7. ' ' → logprob: -7.9940056800842285
    8. '95' → logprob: -9.744006156921387
    9. '97' → logprob: -10.119006156921387
    10. '36' → logprob: -10.744006156921387

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20763179659843445
    2. '+' → logprob: -1.9576318264007568
    3. ' +' → logprob: -3.082631826400757
    4. ' )' → logprob: -7.957631587982178
    5. '+)' → logprob: -9.957632064819336
    6. '))' → logprob: -10.582632064819336
    7. '1' → logprob: -11.082632064819336
    8. ')+' → logprob: -11.332632064819336
    9. '   ' → logprob: -12.582632064819336
    10. ' ' → logprob: -13.457632064819336

Token 106: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010701130144298077
    2. ' )' → logprob: -5.1357011795043945
    3. ')%' → logprob: -6.1357011795043945
    4. ' %' → logprob: -6.6357011795043945
    5. '%' → logprob: -6.7607011795043945
    6. '+' → logprob: -9.635701179504395
    7. ' +' → logprob: -9.885701179504395
    8. '   ' → logprob: -12.885701179504395
    9. ' ' → logprob: -12.885701179504395
    10. ' ' → logprob: -13.635701179504395

Token 107: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.38687223196029663
    2. 'mod' → logprob: -1.1368722915649414
    3. '(mod' → logprob: -13.761872291564941
    4. ' ' → logprob: -16.386871337890625
    5. '	mod' → logprob: -16.636871337890625
    6. 'm' → logprob: -19.011871337890625
    7. ' мод' → logprob: -20.261871337890625
    8. 'moder' → logprob: -20.636871337890625
    9. ' ' → logprob: -20.886871337890625
    10. '_mod' → logprob: -21.011871337890625

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.570319702499546e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -14.125025749206543
    4. '   ' → logprob: -14.625025749206543
    5. ')return' → logprob: -16.625024795532227
    6. '))' → logprob: -16.875024795532227
    7. ')`' → logprob: -16.875024795532227
    8. ')

' → logprob: -17.125024795532227
    9. '`)' → logprob: -18.000024795532227
    10. ')
' → logprob: -18.500024795532227

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029891062527894974
    2. '	return' → logprob: -4.154891014099121
    3. ' return' → logprob: -4.779891014099121
    4. '<|end|>' → logprob: -5.904891014099121
    5. 'return' → logprob: -7.279891014099121
    6. '    
' → logprob: -7.654891014099121
    7. '
' → logprob: -7.654891014099121
    8. ' ' → logprob: -7.904891014099121
    9. '```' → logprob: -9.279891014099121
    10. '  
' → logprob: -9.279891014099121

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385444760322571
    2. ' return' → logprob: -1.1635444164276123
    3. 'return' (adapté à ' return') → logprob: -2.2885444164276123
    4. '	return' → logprob: -6.038544654846191
    5. ' ' → logprob: -9.288544654846191
    6. '<|end|>' → logprob: -9.663544654846191
    7. '       ' → logprob: -10.913544654846191
    8. 'def' → logprob: -11.038544654846191
    9. ')' → logprob: -11.538544654846191
    10. ':return' → logprob: -11.663544654846191

Token 111: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.004079470410943031
    2. ' hash' → logprob: -5.504079341888428
    3. '(hash' → logprob: -14.004079818725586
    4. '	hash' → logprob: -15.879079818725586
    5. '   ' → logprob: -17.254079818725586
    6. ' ' → logprob: -17.379079818725586
    7. '  ' → logprob: -19.379079818725586
    8. '_hash' → logprob: -19.504079818725586
    9. 'Hash' → logprob: -20.504079818725586
    10. '/hash' → logprob: -20.754079818725586

Token 112: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -5.512236498361744e-07
    2. 'arr' → logprob: -15.000000953674316
    3. '_array' → logprob: -16.25
    4. 'Arr' → logprob: -20.375
    5. '	arr' → logprob: -20.75
    6. '_' → logprob: -20.875
    7. '(arr' → logprob: -22.0
    8. '_ar' → logprob: -22.25
    9. '_hash' → logprob: -22.5
    10. '$arr' → logprob: -22.5

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.452426608419046e-05
    2. '
' → logprob: -11.25003433227539
    3. '<|end|>' → logprob: -11.50003433227539
    4. '```' → logprob: -12.37503433227539
    5. ' def' → logprob: -12.62503433227539
    6. '

' → logprob: -14.00003433227539
    7. '#' → logprob: -14.75003433227539
    8. 'import' → logprob: -15.25003433227539
    9. '  
' → logprob: -15.50003433227539
    10. '    
' → logprob: -15.50003433227539

Token 115: ' compute' (ID: 23864)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0603229999542236
    2. 'pow' → logprob: -1.1853229999542236
    3. 'compute' → logprob: -2.4353229999542236
    4. ' compute' → logprob: -2.8103229999542236
    5. 'mod' → logprob: -3.1853229999542236
    6. ' pow' → logprob: -3.1853229999542236
    7. 'get' → logprob: -3.1853229999542236
    8. ' get' → logprob: -3.3103229999542236
    9. ' pre' → logprob: -4.8103227615356445
    10. ' main' → logprob: -4.9353227615356445

Token 116: '_hash' (ID: 20844)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.7254074215888977
    2. '_pow' → logprob: -0.7254074215888977
    3. '_hash' → logprob: -4.225407600402832
    4. '_prefix' → logprob: -4.725407600402832
    5. '_p' → logprob: -6.100407600402832
    6. '_reverse' → logprob: -6.350407600402832
    7. '_inverse' → logprob: -6.600407600402832
    8. '_base' → logprob: -6.850407600402832
    9. 'pow' → logprob: -7.725407600402832
    10. '_suffix' → logprob: -7.975407600402832

Token 117: '_val' (ID: 13694)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.019816622138023376
    2. '_factor' → logprob: -5.0198163986206055
    3. '_array' → logprob: -5.3948163986206055
    4. '_' → logprob: -5.7698163986206055
    5. '_s' → logprob: -6.2698163986206055
    6. 's' → logprob: -8.019816398620605
    7. 'arr' → logprob: -8.144816398620605
    8. '(s' → logprob: -8.394816398620605
    9. '_value' → logprob: -8.519816398620605
    10. '_list' → logprob: -8.769816398620605

Token 118: '(t' (ID: 2025)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0048647690564394
    2. '(' → logprob: -5.379864692687988
    3. 's' → logprob: -8.379864692687988
    4. ' (' → logprob: -11.754864692687988
    5. '(string' → logprob: -13.879864692687988
    6. '(strings' → logprob: -13.879864692687988
    7. '(arr' → logprob: -14.129864692687988
    8. 'def' → logprob: -14.504864692687988
    9. '(str' → logprob: -14.879864692687988
    10. '(
' → logprob: -14.879864692687988

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4100542664527893
    2. '):' → logprob: -1.4100542068481445
    3. 's' → logprob: -2.4100542068481445
    4. ',s' → logprob: -7.1600542068481445
    5. '(s' → logprob: -7.2850542068481445
    6. '):
' → logprob: -7.7850542068481445
    7. ')' → logprob: -8.410054206848145
    8. ' ,' → logprob: -9.160054206848145
    9. ' s' → logprob: -9.910054206848145
    10. '   ' → logprob: -10.160054206848145

Token 120: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.020852146670222282
    2. 'base' → logprob: -3.8958520889282227
    3. ' hash' → logprob: -9.270852088928223
    4. ' s' → logprob: -9.520852088928223
    5. ' ' → logprob: -10.395852088928223
    6. 'hash' → logprob: -10.770852088928223
    7. 's' → logprob: -11.020852088928223
    8. ' start' → logprob: -11.520852088928223
    9. '   ' → logprob: -11.895852088928223
    10. ')' → logprob: -12.270852088928223

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8590300139039755e-05
    2. ' ,' → logprob: -10.000048637390137
    3. '):' → logprob: -13.875048637390137
    4. ',
' → logprob: -14.750048637390137
    5. ',int' → logprob: -15.125048637390137
    6. '‌,' → logprob: -15.500048637390137
    7. ' ' → logprob: -15.875048637390137
    8. ')' → logprob: -15.875048637390137
    9. ',val' → logprob: -16.00004768371582
    10. '<|end|>' → logprob: -16.37504768371582

Token 122: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.20142260193824768
    2. 'mod' → logprob: -1.7014225721359253
    3. ' ' → logprob: -13.076422691345215
    4. ' modulus' → logprob: -13.576422691345215
    5. '	mod' → logprob: -13.701422691345215
    6. '_mod' → logprob: -14.638922691345215
    7. 'm' → logprob: -14.701422691345215
    8. ' modul' → logprob: -14.763922691345215
    9. '   ' → logprob: -15.201422691345215
    10. '    ' → logprob: -15.451422691345215

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.7888184528565034e-05
    2. '):
' → logprob: -9.8750581741333
    3. ')' → logprob: -12.7500581741333
    4. ',' → logprob: -14.1250581741333
    5. ' ):' → logprob: -14.1250581741333
    6. '():' → logprob: -14.5000581741333
    7. ':' → logprob: -14.6250581741333
    8. 's' → logprob: -15.2500581741333
    9. '   ' → logprob: -15.3750581741333
    10. '):
' → logprob: -15.6250581741333

Token 124: '   ' (ID: 271)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.48405763506889343
    2. ' hash' → logprob: -1.7340576648712158
    3. 'h' → logprob: -2.484057664871216
    4. 'val' → logprob: -3.109057664871216
    5. '   ' → logprob: -3.359057664871216
    6. ' h' → logprob: -3.734057664871216
    7. ' val' → logprob: -4.609057426452637
    8. 'hv' → logprob: -5.609057426452637
    9. ' hv' → logprob: -6.609057426452637
    10. 'result' → logprob: -7.234057426452637

Token 125: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -0.2628244459629059
    2. 'h' → logprob: -2.387824535369873
    3. 'val' → logprob: -2.637824535369873
    4. '0' → logprob: -2.762824535369873
    5. 'result' → logprob: -6.262824535369873
    6. 'hv' → logprob: -6.512824535369873
    7. 'res' → logprob: -7.637824535369873
    8. 'value' → logprob: -8.262824058532715
    9. ' hash' → logprob: -8.387824058532715
    10. 'v' → logprob: -8.512824058532715

Token 126: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.0015872239600867033
    2. '_arr' → logprob: -6.501587390899658
    3. '_' → logprob: -9.5015869140625
    4. 'val' → logprob: -12.2515869140625
    5. '_value' → logprob: -13.0015869140625
    6. 'arr' → logprob: -13.2515869140625
    7. 'Val' → logprob: -14.5015869140625
    8. '_VAL' → logprob: -15.3765869140625
    9. '_t' → logprob: -15.6265869140625
    10. '_v' → logprob: -16.0015869140625

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519342601299286
    2. '=' → logprob: -1.501934289932251
    3. '_' → logprob: -13.376934051513672
    4. '   ' → logprob: -13.751934051513672
    5. 's' → logprob: -14.001934051513672
    6. ' ' → logprob: -14.876934051513672
    7. ',' → logprob: -15.001934051513672
    8. 'def' → logprob: -15.001934051513672
    9. ' =
' → logprob: -15.626934051513672
    10. ')' → logprob: -15.876934051513672

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '[' → logprob: -16.376502990722656
    4. '(' → logprob: -18.751502990722656
    5. '   ' → logprob: -18.751502990722656
    6. ' ' → logprob: -18.876502990722656
    7. ' [' → logprob: -19.001502990722656
    8. '۰' → logprob: -19.751502990722656
    9. '０' → logprob: -21.189002990722656
    10. '```' → logprob: -21.376502990722656

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '[' → logprob: -14.625009536743164
    4. '(' → logprob: -17.125009536743164
    5. '۰' → logprob: -17.375009536743164
    6. '   ' → logprob: -18.250009536743164
    7. '```' → logprob: -18.625009536743164
    8. '０' → logprob: -18.937509536743164
    9. ' [' → logprob: -19.187509536743164
    10. '000' → logprob: -19.500009536743164

Token 130: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.64860600233078
    2. 'for' → logprob: -1.1486060619354248
    3. ' ' → logprob: -2.398606061935425
    4. '<|end|>' → logprob: -2.898606061935425
    5. ')' → logprob: -5.273605823516846
    6. '   ' → logprob: -6.523605823516846
    7. ',' → logprob: -6.648605823516846
    8. ':' → logprob: -7.023605823516846
    9. '_' → logprob: -7.023605823516846
    10. '#' → logprob: -7.398605823516846

Token 132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.955703818472102e-05
    2. ' for' → logprob: -9.750059127807617
    3. '   ' → logprob: -13.625059127807617
    4. '
' → logprob: -17.250059127807617
    5. '	for' → logprob: -18.500059127807617
    6. '```' → logprob: -19.125059127807617
    7. '    
' → logprob: -19.750059127807617
    8. 'For' → logprob: -19.750059127807617
    9. '0' → logprob: -20.000059127807617
    10. ' ' → logprob: -20.500059127807617

Token 133: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014173506759107113
    2. ' c' → logprob: -4.26417350769043
    3. 'i' → logprob: -12.01417350769043
    4. 'char' → logprob: -13.13917350769043
    5. ' i' → logprob: -13.63917350769043
    6. 'ch' → logprob: -14.26417350769043
    7. ' ' → logprob: -17.88917350769043
    8. '   ' → logprob: -18.01417350769043
    9. ' ch' → logprob: -18.01417350769043
    10. ' char' → logprob: -18.13917350769043

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015747331781312823
    2. 'in' → logprob: -6.501574516296387
    3. ' ' → logprob: -9.751574516296387
    4. 's' → logprob: -12.376574516296387
    5. '   ' → logprob: -12.626574516296387
    6. 't' → logprob: -13.001574516296387
    7. '	in' → logprob: -14.001574516296387
    8. 'n' → logprob: -14.626574516296387
    9. '<|end|>' → logprob: -14.626574516296387
    10. '  ' → logprob: -14.751574516296387

Token 135: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029750952497124672
    2. ' t' → logprob: -3.5297510623931885
    3. ' ' → logprob: -16.02975082397461
    4. '`t' → logprob: -16.27975082397461
    5. '<|end|>' → logprob: -16.65475082397461
    6. '	t' → logprob: -16.65475082397461
    7. '(t' → logprob: -17.27975082397461
    8. 's' → logprob: -17.52975082397461
    9. '   ' → logprob: -17.65475082397461
    10. '<t' → logprob: -18.40475082397461

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0045311120338737965
    2. ':
' → logprob: -6.129530906677246
    3. '   ' → logprob: -6.504530906677246
    4. '       ' → logprob: -8.129530906677246
    5. ' in' → logprob: -9.129530906677246
    6. '):' → logprob: -9.129530906677246
    7. '<|end|>' → logprob: -9.379530906677246
    8. ',' → logprob: -9.379530906677246
    9. ' :' → logprob: -10.004530906677246
    10. ')' → logprob: -10.129530906677246

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07975444197654724
    2. ' hash' → logprob: -2.95475435256958
    3. '   ' → logprob: -3.82975435256958
    4. 'hash' → logprob: -6.45475435256958
    5. '(hash' → logprob: -7.20475435256958
    6. '<|end|>' → logprob: -8.454754829406738
    7. '	hash' → logprob: -8.704754829406738
    8. ' ' → logprob: -9.829754829406738
    9. '    ' → logprob: -10.829754829406738
    10. ',' → logprob: -11.704754829406738

Token 138: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -0.048590321093797684
    2. ' hash' → logprob: -3.0485904216766357
    3. '(hash' → logprob: -13.548590660095215
    4. '	hash' → logprob: -13.798590660095215
    5. '   ' → logprob: -15.298590660095215
    6. '
' → logprob: -15.548590660095215
    7. '_hash' → logprob: -15.798590660095215
    8. ' ' → logprob: -17.5485897064209
    9. '```' → logprob: -17.7985897064209
    10. 'Hash' → logprob: -18.4235897064209

Token 139: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.0921942703134846e-05
    2. 'val' → logprob: -11.62501049041748
    3. 'Val' → logprob: -13.87501049041748
    4. '_' → logprob: -14.00001049041748
    5. '_VAL' → logprob: -16.375011444091797
    6. '	val' → logprob: -17.000011444091797
    7. '<|end|>' → logprob: -17.125011444091797
    8. '-val' → logprob: -18.125011444091797
    9. ' val' → logprob: -18.750011444091797
    10. '[val' → logprob: -19.125011444091797

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030190786346793175
    2. '+=' → logprob: -4.030190944671631
    3. ' =' → logprob: -4.530190944671631
    4. ' +=' → logprob: -6.905190944671631
    5. '_val' → logprob: -9.655190467834473
    6. '   ' → logprob: -10.030190467834473
    7. '.append' → logprob: -11.405190467834473
    8. 'val' → logprob: -11.405190467834473
    9. 'Val' → logprob: -11.530190467834473
    10. ' ' → logprob: -11.655190467834473

Token 141: ' (' (ID: 350)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.016057245433330536
    2. ' (' → logprob: -4.141057014465332
    3. '(h' → logprob: -11.016057014465332
    4. '(' → logprob: -12.141057014465332
    5. '(has' → logprob: -15.516057014465332
    6. '(hex' → logprob: -15.516057014465332
    7. 'hash' → logprob: -15.891057014465332
    8. ' ' → logprob: -16.14105796813965
    9. '   ' → logprob: -16.14105796813965
    10. '(host' → logprob: -16.76605796813965

Token 142: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0019335162360221148
    2. ' hash' → logprob: -6.501933574676514
    3. '(hash' → logprob: -7.751933574676514
    4. '	hash' → logprob: -14.126933097839355
    5. '   ' → logprob: -15.501933097839355
    6. ' (' → logprob: -16.376934051513672
    7. ' ' → logprob: -16.501934051513672
    8. '_hash' → logprob: -17.501934051513672
    9. 'h' → logprob: -17.626934051513672
    10. '  ' → logprob: -17.876934051513672

Token 143: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -7.743758760625497e-05
    2. 'val' → logprob: -9.500077247619629
    3. '_arr' → logprob: -13.500077247619629
    4. '_hash' → logprob: -15.375077247619629
    5. 'Val' → logprob: -15.375077247619629
    6. ')' → logprob: -16.125078201293945
    7. '[val' → logprob: -16.125078201293945
    8. 'hash' → logprob: -16.250078201293945
    9. '_VAL' → logprob: -16.375078201293945
    10. 'al' → logprob: -16.500078201293945

Token 144: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0008104594890028238
    2. '*' → logprob: -7.125810623168945
    3. ' ' → logprob: -12.125810623168945
    4. ' ' → logprob: -15.125810623168945
    5. ')' → logprob: -15.625810623168945
    6. ' +' → logprob: -17.250810623168945
    7. '+' → logprob: -17.375810623168945
    8. 'hash' → logprob: -18.125810623168945
    9. '<|end|>' → logprob: -18.500810623168945
    10. ' **' → logprob: -18.625810623168945

Token 145: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03804194927215576
    2. ' base' → logprob: -3.2880420684814453
    3. '(base' → logprob: -15.163042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '	base' → logprob: -17.163042068481445
    6. '
' → logprob: -17.288042068481445
    7. '   ' → logprob: -17.788042068481445
    8. '```' → logprob: -17.788042068481445
    9. '_base' → logprob: -18.038042068481445
    10. '10' → logprob: -18.038042068481445

Token 146: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193148851394653
    2. '+' → logprob: -1.5019314289093018
    3. '<|end|>' → logprob: -14.501931190490723
    4. ')' → logprob: -14.626931190490723
    5. ' +
' → logprob: -14.626931190490723
    6. ' ' → logprob: -15.251931190490723
    7. '+c' → logprob: -15.501931190490723
    8. ' ' → logprob: -15.626931190490723
    9. '+
' → logprob: -16.37693214416504
    10. ' plus' → logprob: -16.37693214416504

Token 147: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.43204596638679504
    2. ' ord' → logprob: -1.6820459365844727
    3. '(ord' → logprob: -1.8070459365844727
    4. ' (' → logprob: -7.432045936584473
    5. '(' → logprob: -9.432045936584473
    6. 'ordinal' → logprob: -12.557045936584473
    7. 'ords' → logprob: -12.557045936584473
    8. '   ' → logprob: -13.057045936584473
    9. '_ord' → logprob: -13.057045936584473
    10. ' ordinal' → logprob: -13.307045936584473

Token 148: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002816528081893921
    2. '(' → logprob: -5.877816677093506
    3. '('' → logprob: -11.752816200256348
    4. '<|end|>' → logprob: -13.502816200256348
    5. ' (' → logprob: -14.002816200256348
    6. 'c' → logprob: -14.127816200256348
    7. '(
' → logprob: -14.502816200256348
    8. '("("' → logprob: -16.502817153930664
    9. ')c' → logprob: -16.877817153930664
    10. ' ' → logprob: -17.377817153930664

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019271621480584145
    2. '-' → logprob: -4.6442718505859375
    3. ' -' → logprob: -5.1442718505859375
    4. 'c' → logprob: -5.8942718505859375
    5. 's' → logprob: -7.7692718505859375
    6. ' ' → logprob: -8.894271850585938
    7. '[' → logprob: -8.894271850585938
    8. '   ' → logprob: -10.144271850585938
    9. ' c' → logprob: -10.519271850585938
    10. 't' → logprob: -11.144271850585938

Token 150: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.46125486493110657
    2. '-' → logprob: -1.0862548351287842
    3. ')' → logprob: -3.461254835128784
    4. ' ' → logprob: -8.211255073547363
    5. '<|end|>' → logprob: -8.336255073547363
    6. 's' → logprob: -9.836255073547363
    7. ')-' → logprob: -11.461255073547363
    8. ' )' → logprob: -11.586255073547363
    9. '`' → logprob: -11.961255073547363
    10. 'def' → logprob: -12.086255073547363

Token 151: ' ' (ID: 220)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.2254941463470459
    2. ' ' → logprob: -1.600494146347046
    3. '96' → logprob: -10.350494384765625
    4. ''' → logprob: -11.225494384765625
    5. 'a' → logprob: -11.475494384765625
    6. '```' → logprob: -12.225494384765625
    7. '32' → logprob: -12.537994384765625
    8. '   ' → logprob: -12.850494384765625
    9. '`' → logprob: -12.912994384765625
    10. '  ' → logprob: -13.287994384765625

Token 152: '97' (ID: 5170)
  Prédit: '97'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.0002439467643853277
    2. ' ' → logprob: -8.500244140625
    3. 'a' → logprob: -11.000244140625
    4. '96' → logprob: -11.625244140625
    5. ''' → logprob: -11.875244140625
    6. '```' → logprob: -12.625244140625
    7. ''a' → logprob: -13.500244140625
    8. '`' → logprob: -13.750244140625
    9. '097' → logprob: -15.125244140625
    10. '98' → logprob: -15.437744140625

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.250004768371582
    3. ')
' → logprob: -16.2500057220459
    4. '')' → logprob: -16.8750057220459
    5. '`)' → logprob: -17.7500057220459
    6. ')`' → logprob: -18.0000057220459
    7. ')%' → logprob: -18.2500057220459
    8. '+' → logprob: -18.3750057220459
    9. '))' → logprob: -18.3750057220459
    10. '   ' → logprob: -19.0000057220459

Token 154: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004819088149815798
    2. '%' → logprob: -6.129818916320801
    3. ' %' → logprob: -6.629818916320801
    4. ')%' → logprob: -6.754818916320801
    5. ' )' → logprob: -8.8798189163208
    6. '<|end|>' → logprob: -13.0048189163208
    7. ' ' → logprob: -14.1298189163208
    8. '%)' → logprob: -14.3798189163208
    9. ' ' → logprob: -14.6298189163208
    10. ' %)' → logprob: -14.7548189163208

Token 155: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.25194668769836426
    2. 'mod' → logprob: -1.5019466876983643
    3. '(mod' → logprob: -11.001946449279785
    4. '	mod' → logprob: -15.251946449279785
    5. '```' → logprob: -16.0019474029541
    6. '_mod' → logprob: -16.1269474029541
    7. ' modul' → logprob: -16.3769474029541
    8. ' ' → logprob: -16.6269474029541
    9. ' 
' → logprob: -17.0019474029541
    10. ' ' → logprob: -17.2519474029541

Token 156: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5918177962303162
    2. '   ' → logprob: -1.716817855834961
    3. '<|end|>' → logprob: -2.091817855834961
    4. ' return' → logprob: -2.716817855834961
    5. 'return' → logprob: -3.091817855834961
    6. '
' → logprob: -4.466817855834961
    7. '	return' → logprob: -4.591817855834961
    8. ':return' → logprob: -5.591817855834961
    9. '<|end|>' → logprob: -5.966817855834961
    10. ')return' → logprob: -6.216817855834961

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057220809161663055
    2. 'return' → logprob: -3.557220697402954
    3. ' return' → logprob: -3.682220697402954
    4. '	return' → logprob: -6.432220935821533
    5. '<|end|>' → logprob: -8.932220458984375
    6. ':return' → logprob: -9.432220458984375
    7. ')' → logprob: -10.057220458984375
    8. ',' → logprob: -10.432220458984375
    9. ' ' → logprob: -11.432220458984375
    10. '       ' → logprob: -12.057220458984375

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5621165633201599
    2. ' return' → logprob: -0.9371165633201599
    3. '   ' → logprob: -3.5621166229248047
    4. '	return' → logprob: -4.812116622924805
    5. ' ' → logprob: -6.562116622924805
    6. '
' → logprob: -9.187116622924805
    7. '<|end|>' → logprob: -9.687116622924805
    8. ':return' → logprob: -9.937116622924805
    9. ')' → logprob: -10.687116622924805
    10. 'eturn' → logprob: -10.812116622924805

Token 159: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.038042180240154266
    2. ' hash' → logprob: -3.2880420684814453
    3. '(hash' → logprob: -14.538042068481445
    4. '	hash' → logprob: -15.538042068481445
    5. '_hash' → logprob: -17.413042068481445
    6. ' ' → logprob: -18.538042068481445
    7. 'Hash' → logprob: -19.288042068481445
    8. '/hash' → logprob: -19.913042068481445
    9. ' ' → logprob: -20.538042068481445
    10. 'h' → logprob: -20.663042068481445

Token 160: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -12.750004768371582
    3. '_arr' → logprob: -14.125004768371582
    4. '_VAL' → logprob: -15.750004768371582
    5. '_v' → logprob: -15.875004768371582
    6. 'Val' → logprob: -16.000003814697266
    7. '_value' → logprob: -16.250003814697266
    8. 'val' → logprob: -16.375003814697266
    9. ' _' → logprob: -17.750003814697266
    10. '_va' → logprob: -17.750003814697266

Token 161: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010437761375214905
    2. '#' → logprob: -10.250103950500488
    3. '```' → logprob: -11.250103950500488
    4. '<|end|>' → logprob: -11.250103950500488
    5. ')' → logprob: -11.625103950500488
    6. '(' → logprob: -11.875103950500488
    7. '\' → logprob: -12.000103950500488
    8. 'pow' → logprob: -12.125103950500488
    9. 'import' → logprob: -12.375103950500488
    10. '[' → logprob: -13.000103950500488

Token 163: ' pow' (ID: 9779)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5943159461021423
    2. ' main' → logprob: -1.719316005706787
    3. ' get' → logprob: -2.719316005706787
    4. ' compute' → logprob: -3.219316005706787
    5. 'find' → logprob: -3.594316005706787
    6. ' rolling' → logprob: -3.719316005706787
    7. 'main' → logprob: -3.969316005706787
    8. ' rab' → logprob: -4.094316005706787
    9. ' check' → logprob: -4.219316005706787
    10. 'get' → logprob: -4.219316005706787

Token 164: '_mod' (ID: 15325)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5288486480712891
    2. '(' → logprob: -2.028848648071289
    3. 'er' → logprob: -2.778848648071289
    4. '_base' → logprob: -2.903848648071289
    5. 'erm' → logprob: -3.153848648071289
    6. '<|end|>' → logprob: -3.778848648071289
    7. '_pow' → logprob: -3.903848648071289
    8. '(base' → logprob: -4.278848648071289
    9. '_mod' → logprob: -4.403848648071289
    10. '_val' → logprob: -5.528848648071289

Token 165: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.31369370222091675
    2. '(' → logprob: -1.3136937618255615
    3. ' (' → logprob: -8.18869400024414
    4. '(a' → logprob: -9.31369400024414
    5. '(x' → logprob: -10.68869400024414
    6. '(value' → logprob: -11.43869400024414
    7. '(power' → logprob: -11.56369400024414
    8. '(b' → logprob: -12.43869400024414
    9. '(pow' → logprob: -12.68869400024414
    10. '(num' → logprob: -13.18869400024414

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017684244085103273
    2. ' ,' → logprob: -8.750176429748535
    3. ',n' → logprob: -11.000176429748535
    4. ',
' → logprob: -15.375176429748535
    5. ',int' → logprob: -15.500176429748535
    6. ',k' → logprob: -15.625176429748535
    7. ',num' → logprob: -15.625176429748535
    8. ',i' → logprob: -16.12517738342285
    9. ',size' → logprob: -16.25017738342285
    10. ',b' → logprob: -16.25017738342285

Token 167: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.16255564987659454
    2. 'ex' → logprob: -2.412555694580078
    3. ' exponent' → logprob: -3.662555694580078
    4. 'length' → logprob: -4.662555694580078
    5. ' exp' → logprob: -4.662555694580078
    6. 'power' → logprob: -4.787555694580078
    7. 'mod' → logprob: -5.662555694580078
    8. 'pow' → logprob: -6.662555694580078
    9. 'n' → logprob: -6.912555694580078
    10. ' length' → logprob: -7.162555694580078

Token 168: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4322682023048401
    2. ',' → logprob: -1.0572681427001953
    3. '):
' → logprob: -5.807268142700195
    4. ' ,' → logprob: -8.057268142700195
    5. ' ):' → logprob: -9.057268142700195
    6. ':' → logprob: -9.432268142700195
    7. ')' → logprob: -11.432268142700195
    8. ',
' → logprob: -11.682268142700195
    9. ' ' → logprob: -12.432268142700195
    10. '   ' → logprob: -12.932268142700195

Token 169: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1602262556552887
    2. ' mod' → logprob: -1.9102262258529663
    3. ' ' → logprob: -13.785225868225098
    4. ' modulus' → logprob: -14.535225868225098
    5. '	mod' → logprob: -15.160225868225098
    6. '   ' → logprob: -15.785225868225098
    7. 'm' → logprob: -16.785226821899414
    8. 'MOD' → logprob: -17.410226821899414
    9. '```' → logprob: -17.660226821899414
    10. '_mod' → logprob: -17.785226821899414

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.47757811343763e-05
    2. '):
' → logprob: -10.250044822692871
    3. ':' → logprob: -11.750044822692871
    4. ' ):' → logprob: -13.875044822692871
    5. ')' → logprob: -14.750044822692871
    6. '):
' → logprob: -17.500043869018555
    7. '():' → logprob: -17.875043869018555
    8. '}:' → logprob: -17.875043869018555
    9. '):

' → logprob: -18.625043869018555
    10. '=' → logprob: -18.625043869018555

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002286098897457123
    2. ' result' → logprob: -6.877285957336426
    3. ' if' → logprob: -7.002285957336426
    4. 'result' → logprob: -8.127285957336426
    5. ' res' → logprob: -11.127285957336426
    6. 'if' → logprob: -11.252285957336426
    7. ' ' → logprob: -12.627285957336426
    8. '    ' → logprob: -12.752285957336426
    9. '  ' → logprob: -12.877285957336426
    10. ':' → logprob: -13.002285957336426

Token 172: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0028210394084453583
    2. 'res' → logprob: -6.00282096862793
    3. ' result' → logprob: -8.00282096862793
    4. ' res' → logprob: -12.50282096862793
    5. '```' → logprob: -13.37782096862793
    6. '   ' → logprob: -13.50282096862793
    7. '1' → logprob: -13.62782096862793
    8. '
' → logprob: -14.25282096862793
    9. '0' → logprob: -14.25282096862793
    10. 'if' → logprob: -14.37782096862793

Token 173: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0019532525911927223
    2. ' pow' → logprob: -6.251953125
    3. '(pow' → logprob: -10.751953125
    4. '1' → logprob: -12.751953125
    5. 'base' → logprob: -15.376953125
    6. ' ' → logprob: -16.626953125
    7. '   ' → logprob: -17.251953125
    8. 'power' → logprob: -18.126953125
    9. '_pow' → logprob: -18.251953125
    10. '(' → logprob: -18.376953125

Token 174: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.20142006874084473
    2. '(' → logprob: -1.7014200687408447
    3. '(
' → logprob: -13.451419830322266
    4. '<|end|>' → logprob: -13.826419830322266
    5. ' (' → logprob: -14.076419830322266
    6. '```' → logprob: -14.201419830322266
    7. '(mod' → logprob: -14.326419830322266
    8. '(BASE' → logprob: -14.576419830322266
    9. '_mod' → logprob: -14.826419830322266
    10. 'base' → logprob: -15.326419830322266

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007167232106439769
    2. ' ,' → logprob: -7.250716686248779
    3. ',
' → logprob: -12.625717163085938
    4. '<|end|>' → logprob: -13.750717163085938
    5. ')' → logprob: -14.375717163085938
    6. 'exp' → logprob: -14.500717163085938
    7. ',end' → logprob: -15.125717163085938
    8. ',int' → logprob: -15.625717163085938
    9. 'def' → logprob: -16.250717163085938
    10. ' ' → logprob: -16.375717163085938

Token 176: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.0019288709154352546
    2. ' exp' → logprob: -6.251928806304932
    3. '(exp' → logprob: -15.87692928314209
    4. '	exp' → logprob: -16.251928329467773
    5. '   ' → logprob: -17.376928329467773
    6. ' ' → logprob: -17.376928329467773
    7. '  ' → logprob: -18.251928329467773
    8. '<|end|>' → logprob: -18.751928329467773
    9. ''exp' → logprob: -19.126928329467773
    10. '_exp' → logprob: -19.376928329467773

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013699998380616307
    2. ')' → logprob: -6.876369953155518
    3. ' ,' → logprob: -8.001370429992676
    4. '%' → logprob: -14.376370429992676
    5. ',
' → logprob: -14.376370429992676
    6. ' )' → logprob: -15.001370429992676
    7. '   ' → logprob: -15.876370429992676
    8. ',module' → logprob: -16.12636947631836
    9. '}' → logprob: -16.37636947631836
    10. ' ' → logprob: -16.50136947631836

Token 178: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16022422909736633
    2. ' mod' → logprob: -1.910224199295044
    3. '(mod' → logprob: -17.41022491455078
    4. '	mod' → logprob: -17.78522491455078
    5. ')' → logprob: -18.66022491455078
    6. 'm' → logprob: -18.78522491455078
    7. ' ' → logprob: -19.03522491455078
    8. ' мод' → logprob: -20.53522491455078
    9. '   ' → logprob: -21.03522491455078
    10. '_mod' → logprob: -21.03522491455078

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -17.375
    4. '<|end|>' → logprob: -18.25
    5. ')

' → logprob: -18.5
    6. ')return' → logprob: -19.5
    7. '),' → logprob: -19.75
    8. '))' → logprob: -20.375
    9. ')#' → logprob: -20.625
    10. '')' → logprob: -21.125

Token 180: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003634713648352772
    2. '<|end|>' → logprob: -8.12536334991455
    3. '#' → logprob: -10.25036334991455
    4. '```' → logprob: -11.50036334991455
    5. '<|end|>' → logprob: -12.12536334991455
    6. 'from' → logprob: -13.25036334991455
    7. ' def' → logprob: -13.25036334991455
    8. '\' → logprob: -13.62536334991455
    9. ')' → logprob: -13.62536334991455
    10. 'import' → logprob: -13.75036334991455

Token 181: ' check' (ID: 2371)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.14326319098472595
    2. ' main' → logprob: -2.768263101577759
    3. 'find' → logprob: -3.018263101577759
    4. ' find' → logprob: -4.643263339996338
    5. 'check' → logprob: -4.893263339996338
    6. 'is' → logprob: -6.893263339996338
    7. 'solve' → logprob: -7.518263339996338
    8. ' check' → logprob: -7.643263339996338
    9. 'count' → logprob: -7.893263339996338
    10. 'k' → logprob: -8.01826286315918

Token 182: '_matches' (ID: 97462)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.41456204652786255
    2. '_' → logprob: -2.2895619869232178
    3. '_match' → logprob: -2.6645619869232178
    4. '_equal' → logprob: -3.1645619869232178
    5. '_occ' → logprob: -3.6645619869232178
    6. '_repeat' → logprob: -3.7895619869232178
    7. '_overlap' → logprob: -3.7895619869232178
    8. '_prefix' → logprob: -4.039562225341797
    9. '_pattern' → logprob: -4.914562225341797
    10. '(' → logprob: -5.164562225341797

Token 183: '(hash' (ID: 57662)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011430569924414158
    2. '(' → logprob: -4.511430740356445
    3. '(t' → logprob: -8.261430740356445
    4. 's' → logprob: -9.886430740356445
    5. ' (' → logprob: -10.136430740356445
    6. '(ss' → logprob: -12.136430740356445
    7. '():' → logprob: -12.386430740356445
    8. '_' → logprob: -12.886430740356445
    9. '(a' → logprob: -12.886430740356445
    10. '(base' → logprob: -12.886430740356445

Token 184: '_s' (ID: 1278)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.01318164449185133
    2. '_val' → logprob: -4.388181686401367
    3. '_' → logprob: -7.638181686401367
    4. 'arr' → logprob: -10.138181686401367
    5. 's' → logprob: -10.763181686401367
    6. '_array' → logprob: -10.763181686401367
    7. ')' → logprob: -11.013181686401367
    8. '_vals' → logprob: -11.263181686401367
    9. '_s' → logprob: -11.513181686401367
    10. ' _' → logprob: -11.763181686401367

Token 185: ',' (ID: 11)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.18874596059322357
    2. ',' → logprob: -1.8137459754943848
    3. 'arr' → logprob: -5.313745975494385
    4. 's' → logprob: -6.063745975494385
    5. '_,' → logprob: -6.938745975494385
    6. ',_' → logprob: -8.063745498657227
    7. '_val' → logprob: -9.063745498657227
    8. '_' → logprob: -9.688745498657227
    9. ' ,' → logprob: -9.938745498657227
    10. '_array' → logprob: -10.563745498657227

Token 186: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.029155084863305092
    2. ' hash' → logprob: -3.6541550159454346
    3. 's' → logprob: -7.654155254364014
    4. 'pattern' → logprob: -7.654155254364014
    5. 'len' → logprob: -7.779155254364014
    6. 'base' → logprob: -8.279154777526855
    7. 't' → logprob: -8.279154777526855
    8. 'length' → logprob: -9.154154777526855
    9. 'pos' → logprob: -9.279154777526855
    10. 'factor' → logprob: -9.404154777526855

Token 187: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.030264126136898994
    2. '_arr' → logprob: -3.780264139175415
    3. '_s' → logprob: -5.280263900756836
    4. '_' → logprob: -7.030263900756836
    5. '_val' → logprob: -7.655263900756836
    6. 'arr' → logprob: -8.655263900756836
    7. '_a' → logprob: -9.905263900756836
    8. 't' → logprob: -10.030263900756836
    9. ',' → logprob: -10.030263900756836
    10. ')' → logprob: -10.655263900756836

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026304731145501137
    2. '):' → logprob: -6.377630710601807
    3. ' ,' → logprob: -7.502630710601807
    4. 's' → logprob: -9.377630233764648
    5. '_,' → logprob: -9.627630233764648
    6. ',s' → logprob: -10.127630233764648
    7. ',
' → logprob: -10.627630233764648
    8. ',index' → logprob: -10.877630233764648
    9. ',length' → logprob: -11.127630233764648
    10. ',val' → logprob: -11.127630233764648

Token 189: ' base' (ID: 3611)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.2930307388305664
    2. 'pos' → logprob: -2.0430307388305664
    3. 'pow' → logprob: -2.0430307388305664
    4. 'len' → logprob: -2.1680307388305664
    5. ' start' → logprob: -2.6680307388305664
    6. 'i' → logprob: -3.2930307388305664
    7. 'length' → logprob: -3.4180307388305664
    8. 'base' → logprob: -3.5430307388305664
    9. ' base' → logprob: -3.6680307388305664
    10. 'index' → logprob: -3.7930307388305664

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026383911608718336
    2. ' ,' → logprob: -8.375264167785645
    3. ',
' → logprob: -11.375264167785645
    4. 's' → logprob: -11.875264167785645
    5. '_,' → logprob: -11.875264167785645
    6. ')' → logprob: -13.750264167785645
    7. 'def' → logprob: -13.875264167785645
    8. '):' → logprob: -14.000264167785645
    9. '‌,' → logprob: -14.125264167785645
    10. '   ' → logprob: -14.250264167785645

Token 191: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.4320250451564789
    2. 'mod' → logprob: -1.0570250749588013
    3. ' length' → logprob: -7.432024955749512
    4. 'length' → logprob: -7.557024955749512
    5. 'pow' → logprob: -8.057024955749512
    6. 'len' → logprob: -8.307024955749512
    7. '   ' → logprob: -8.307024955749512
    8. ' len' → logprob: -8.432024955749512
    9. ' s' → logprob: -8.682024955749512
    10. ' pow' → logprob: -9.307024955749512

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.787507714354433e-05
    2. '):' → logprob: -10.37504768371582
    3. ' ,' → logprob: -11.62504768371582
    4. 's' → logprob: -12.75004768371582
    5. ',s' → logprob: -12.87504768371582
    6. ',n' → logprob: -14.25004768371582
    7. ',length' → logprob: -15.12504768371582
    8. ',len' → logprob: -15.50004768371582
    9. ',
' → logprob: -15.50004768371582
    10. ',index' → logprob: -15.62504768371582

Token 193: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9790738224983215
    2. 'start' → logprob: -1.7290737628936768
    3. ' start' → logprob: -2.1040737628936768
    4. 'length' → logprob: -2.3540737628936768
    5. ' length' → logprob: -2.4790737628936768
    6. ' len' → logprob: -2.7290737628936768
    7. 'l' → logprob: -4.104074001312256
    8. 'pos' → logprob: -4.104074001312256
    9. 'pow' → logprob: -4.479074001312256
    10. 's' → logprob: -4.729074001312256

Token 194: '_t' (ID: 838)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07524562627077103
    2. '_t' → logprob: -2.7002456188201904
    3. 's' → logprob: -5.5752458572387695
    4. '_' → logprob: -7.2002458572387695
    5. 't' → logprob: -8.20024585723877
    6. '(s' → logprob: -9.20024585723877
    7. '_sub' → logprob: -9.32524585723877
    8. ')' → logprob: -9.45024585723877
    9. '(' → logprob: -9.82524585723877
    10. '_)' → logprob: -10.32524585723877

Token 195: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18519319593906403
    2. ',' → logprob: -1.8101931810379028
    3. '):
' → logprob: -5.310193061828613
    4. ' ):' → logprob: -8.060193061828613
    5. ' ,' → logprob: -9.560193061828613
    6. ')' → logprob: -9.685193061828613
    7. ',
' → logprob: -11.310193061828613
    8. '   ' → logprob: -11.560193061828613
    9. '):

' → logprob: -12.060193061828613
    10. ':' → logprob: -12.810193061828613

Token 196: ' len' (ID: 4631)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.29238834977149963
    2. 'pos' → logprob: -2.167388439178467
    3. ' start' → logprob: -2.542388439178467
    4. 'len' → logprob: -3.792388439178467
    5. 'i' → logprob: -4.667388439178467
    6. ' pos' → logprob: -4.667388439178467
    7. 'idx' → logprob: -4.792388439178467
    8. 'index' → logprob: -5.792388439178467
    9. ' len' → logprob: -6.292388439178467
    10. ' idx' → logprob: -6.542388439178467

Token 197: '0' (ID: 15)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.012004952877759933
    2. '_' → logprob: -4.762004852294922
    3. 's' → logprob: -6.387004852294922
    4. '_t' → logprob: -6.887004852294922
    5. ')' → logprob: -8.262004852294922
    6. '_)' → logprob: -8.387004852294922
    7. ')_' → logprob: -9.512004852294922
    8. 'def' → logprob: -10.887004852294922
    9. 't' → logprob: -11.262004852294922
    10. '_,' → logprob: -11.637004852294922

Token 198: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9450702667236328
    2. '_s' → logprob: -0.9450702667236328
    3. '):' → logprob: -1.9450702667236328
    4. ')' → logprob: -2.820070266723633
    5. '_' → logprob: -4.320070266723633
    6. ',' → logprob: -5.445070266723633
    7. ')_' → logprob: -7.445070266723633
    8. '_,' → logprob: -7.570070266723633
    9. '_)' → logprob: -8.070070266723633
    10. '):
' → logprob: -8.320070266723633

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008531087078154087
    2. '):' → logprob: -7.500853061676025
    3. '():' → logprob: -9.125853538513184
    4. ' :' → logprob: -9.500853538513184
    5. ':
' → logprob: -9.875853538513184
    6. '   ' → logprob: -11.375853538513184
    7. '(' → logprob: -11.375853538513184
    8. ')' → logprob: -11.625853538513184
    9. ':return' → logprob: -12.125853538513184
    10. ' ' → logprob: -12.375853538513184

Token 200: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.317493200302124
    2. ' matches' → logprob: -1.317493200302124
    3. ' for' → logprob: -1.692493200302124
    4. 'matches' → logprob: -2.067493200302124
    5. ' res' → logprob: -2.817493200302124
    6. 'for' → logprob: -2.942493200302124
    7. 'res' → logprob: -4.192493438720703
    8. ' results' → logprob: -4.817493438720703
    9. 'results' → logprob: -5.192493438720703
    10. ' result' → logprob: -5.442493438720703

Token 201: ' [' (ID: 723)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -1.0772082805633545
    2. '(hash' → logprob: -1.8272082805633545
    3. ' hash' → logprob: -2.0772082805633545
    4. '[' → logprob: -2.5772082805633545
    5. ' all' → logprob: -2.5772082805633545
    6. 'any' → logprob: -2.7022082805633545
    7. 'all' → logprob: -2.8272082805633545
    8. ' any' → logprob: -2.9522082805633545
    9. '[]' → logprob: -4.702208518981934
    10. '[(' → logprob: -4.952208518981934

Token 202: 'is' (ID: 276)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03336938098073006
    2. '(i' → logprob: -3.533369302749634
    3. 'hash' → logprob: -6.033369541168213
    4. '(' → logprob: -7.533369541168213
    5. '(hash' → logprob: -8.533369064331055
    6. '((' → logprob: -9.158369064331055
    7. ' i' → logprob: -9.283369064331055
    8. '1' → logprob: -9.408369064331055
    9. 'int' → logprob: -10.158369064331055
    10. '   ' → logprob: -10.283369064331055

Token 203: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -0.15521974861621857
    2. 'instance' → logprob: -3.780219793319702
    3. '_valid' → logprob: -3.780219793319702
    4. '_same' → logprob: -4.155219554901123
    5. '_equal' → logprob: -4.155219554901123
    6. 'match' → logprob: -4.280219554901123
    7. '_prefix' → logprob: -4.530219554901123
    8. '_mat' → logprob: -5.155219554901123
    9. 'Match' → logprob: -5.655219554901123
    10. '_pal' → logprob: -5.655219554901123

Token 204: '(hash' (ID: 57662)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9220045208930969
    2. '(hash' → logprob: -1.1720044612884521
    3. ' for' → logprob: -1.6720044612884521
    4. '(' → logprob: -3.047004461288452
    5. 'for' → logprob: -3.422004461288452
    6. ']' → logprob: -5.297004699707031
    7. 's' → logprob: -5.922004699707031
    8. ' in' → logprob: -6.047004699707031
    9. ' i' → logprob: -6.422004699707031
    10. ',' → logprob: -6.672004699707031

Token 205: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0005964008742012084
    2. '_t' → logprob: -7.500596523284912
    3. 's' → logprob: -11.250596046447754
    4. '_val' → logprob: -11.500596046447754
    5. '_' → logprob: -11.625596046447754
    6. ')' → logprob: -13.125596046447754
    7. 'val' → logprob: -13.125596046447754
    8. '0' → logprob: -13.375596046447754
    9. '_arr' → logprob: -14.125596046447754
    10. '   ' → logprob: -14.375596046447754

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23496191203594208
    2. '[i' → logprob: -1.9849618673324585
    3. ',i' → logprob: -3.359961986541748
    4. ' ,' → logprob: -3.734961986541748
    5. '[' → logprob: -4.609961986541748
    6. ',[' → logprob: -7.234961986541748
    7. '[-' → logprob: -8.10996150970459
    8. '[j' → logprob: -8.10996150970459
    9. ',
' → logprob: -8.10996150970459
    10. ')' → logprob: -8.60996150970459

Token 207: ' i' (ID: 575)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.04054883494973183
    2. ' hash' → logprob: -3.415548801422119
    3. 'i' → logprob: -5.415548801422119
    4. '0' → logprob: -6.790548801422119
    5. 'len' → logprob: -8.165549278259277
    6. '   ' → logprob: -8.415549278259277
    7. ' ' → logprob: -8.790549278259277
    8. ' i' → logprob: -8.915549278259277
    9. '(hash' → logprob: -9.665549278259277
    10. '  ' → logprob: -9.790549278259277

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014465399086475372
    2. ' ,' → logprob: -4.88946533203125
    3. ',i' → logprob: -5.51446533203125
    4. ')' → logprob: -6.76446533203125
    5. ' +' → logprob: -7.26446533203125
    6. '+' → logprob: -7.38946533203125
    7. ' -' → logprob: -9.38946533203125
    8. ' ' → logprob: -10.01446533203125
    9. ',len' → logprob: -10.26446533203125
    10. '   ' → logprob: -10.51446533203125

Token 209: ' hash' (ID: 10691)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003317705122753978
    2. 'len' → logprob: -8.37533187866211
    3. ' i' → logprob: -9.75033187866211
    4. '   ' → logprob: -11.00033187866211
    5. '(i' → logprob: -11.00033187866211
    6. '
' → logprob: -12.75033187866211
    7. '{i' → logprob: -13.87533187866211
    8. '(' → logprob: -14.25033187866211
    9. '```' → logprob: -14.37533187866211
    10. '(len' → logprob: -14.37533187866211

Token 210: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.08903881907463074
    2. '_s' → logprob: -2.464038848876953
    3. '_' → logprob: -10.589038848876953
    4. 't' → logprob: -11.339038848876953
    5. ' _' → logprob: -11.339038848876953
    6. 's' → logprob: -11.464038848876953
    7. ')' → logprob: -11.839038848876953
    8. '}_' → logprob: -12.026538848876953
    9. ')_' → logprob: -12.214038848876953
    10. '<|end|>' → logprob: -13.276538848876953

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006259493064135313
    2. ',i' → logprob: -5.631259441375732
    3. ' ,' → logprob: -6.506259441375732
    4. '[i' → logprob: -7.256259441375732
    5. '+' → logprob: -9.25625991821289
    6. '   ' → logprob: -9.38125991821289
    7. '+i' → logprob: -9.38125991821289
    8. ')' → logprob: -9.75625991821289
    9. ' +' → logprob: -10.25625991821289
    10. '[' → logprob: -10.38125991821289

Token 212: ' base' (ID: 3611)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10499981045722961
    2. 'i' → logprob: -2.3549997806549072
    3. ' ' → logprob: -5.730000019073486
    4. ' i' → logprob: -7.105000019073486
    5. 'len' → logprob: -7.355000019073486
    6. '   ' → logprob: -11.104999542236328
    7. ' len' → logprob: -11.354999542236328
    8. '1' → logprob: -11.729999542236328
    9. '(' → logprob: -12.229999542236328
    10. '  ' → logprob: -12.354999542236328

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002391229383647442
    2. ' ,' → logprob: -6.252391338348389
    3. ')' → logprob: -8.25239086151123
    4. ',i' → logprob: -9.87739086151123
    5. '   ' → logprob: -10.00239086151123
    6. ',
' → logprob: -10.62739086151123
    7. ',len' → logprob: -11.50239086151123
    8. '),' → logprob: -11.62739086151123
    9. '+' → logprob: -11.62739086151123
    10. '-' → logprob: -12.00239086151123

Token 214: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5969778299331665
    2. ' mod' → logprob: -0.8469778299331665
    3. ' len' → logprob: -4.471977710723877
    4. 'len' → logprob: -4.721977710723877
    5. '    ' → logprob: -8.971978187561035
    6. ' ' → logprob: -9.096978187561035
    7. '   ' → logprob: -10.159478187561035
    8. '  ' → logprob: -10.221978187561035
    9. '
' → logprob: -10.284478187561035
    10. '```' → logprob: -10.846978187561035

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01030866801738739
    2. ' ,' → logprob: -4.885308742523193
    3. ',len' → logprob: -7.010308742523193
    4. ')' → logprob: -7.260308742523193
    5. ',i' → logprob: -7.635308742523193
    6. '   ' → logprob: -8.010308265686035
    7. ')]' → logprob: -8.635308265686035
    8. ',
' → logprob: -10.885308265686035
    9. ' )' → logprob: -11.510308265686035
    10. ' ' → logprob: -11.635308265686035

Token 216: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011477592401206493
    2. 'i' → logprob: -5.261477470397949
    3. ' len' → logprob: -5.386477470397949
    4. '0' → logprob: -7.136477470397949
    5. '   ' → logprob: -7.636477470397949
    6. ' i' → logprob: -8.76147747039795
    7. '    ' → logprob: -10.38647747039795
    8. '  ' → logprob: -10.38647747039795
    9. ' ' → logprob: -10.76147747039795
    10. '          ' → logprob: -11.01147747039795

Token 217: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.2842308680992573e-05
    2. 't' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.625022888183594
    4. '0' → logprob: -14.625022888183594
    5. ')' → logprob: -16.125022888183594
    6. '(t' → logprob: -16.625022888183594
    7. '_s' → logprob: -17.000022888183594
    8. '	t' → logprob: -17.250022888183594
    9. 's' → logprob: -17.375022888183594
    10. '_' → logprob: -17.500022888183594

Token 218: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10503973066806793
    2. ',' → logprob: -2.7300398349761963
    3. ')]' → logprob: -3.4800398349761963
    4. '   ' → logprob: -6.730039596557617
    5. '-' → logprob: -7.230039596557617
    6. ' )' → logprob: -7.605039596557617
    7. ' -' → logprob: -7.980039596557617
    8. '+' → logprob: -8.355039596557617
    9. ' +' → logprob: -9.105039596557617
    10. ']' → logprob: -9.230039596557617

Token 219: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1080210953950882
    2. '   ' → logprob: -2.8580210208892822
    3. 'for' → logprob: -3.6080210208892822
    4. ']' → logprob: -4.858021259307861
    5. '       ' → logprob: -5.233021259307861
    6. ',' → logprob: -6.608021259307861
    7. ')' → logprob: -7.233021259307861
    8. '<|end|>' → logprob: -7.233021259307861
    9. '	for' → logprob: -7.483021259307861
    10. '    ' → logprob: -7.983021259307861

Token 220: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022726893424988
    2. ' i' → logprob: -1.9102272987365723
    3. ' ' → logprob: -13.160226821899414
    4. '	i' → logprob: -15.035226821899414
    5. ' ' → logprob: -15.535226821899414
    6. '
' → logprob: -15.785226821899414
    7. ' range' → logprob: -16.285226821899414
    8. ' in' → logprob: -16.285226821899414
    9. '0' → logprob: -16.410226821899414
    10. 'range' → logprob: -16.910226821899414

Token 221: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00318353995680809
    2. 'in' → logprob: -5.753183364868164
    3. ' ' → logprob: -13.128183364868164
    4. 'range' → logprob: -13.628183364868164
    5. ',' → logprob: -14.503183364868164
    6. 'import' → logprob: -15.003183364868164
    7. '	in' → logprob: -15.503183364868164
    8. ')' → logprob: -15.503183364868164
    9. ' range' → logprob: -15.628183364868164
    10. 'n' → logprob: -15.628183364868164

Token 222: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975604310631752
    2. ' range' → logprob: -3.5297560691833496
    3. '0' → logprob: -13.404755592346191
    4. '(range' → logprob: -13.404755592346191
    5. 'len' → logprob: -14.029755592346191
    6. '   ' → logprob: -14.154755592346191
    7. ' ' → logprob: -14.529755592346191
    8. '	range' → logprob: -15.904755592346191
    9. '  ' → logprob: -16.779756546020508
    10. ')' → logprob: -16.904756546020508

Token 223: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0004237627435941249
    2. '(' → logprob: -8.000423431396484
    3. ' (' → logprob: -9.625423431396484
    4. 'len' → logprob: -11.625423431396484
    5. ' len' → logprob: -11.625423431396484
    6. '(length' → logprob: -13.625423431396484
    7. '[len' → logprob: -14.000423431396484
    8. '0' → logprob: -14.000423431396484
    9. '	len' → logprob: -14.875423431396484
    10. '   ' → logprob: -15.000423431396484

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008904561400413513
    2. '_s' → logprob: -5.008904457092285
    3. '_t' → logprob: -6.883904457092285
    4. '(s' → logprob: -7.258904457092285
    5. '(hash' → logprob: -8.133904457092285
    6. '_' → logprob: -9.758904457092285
    7. '(' → logprob: -10.133904457092285
    8. 's' → logprob: -10.508904457092285
    9. ')' → logprob: -11.633904457092285
    10. '(t' → logprob: -11.883904457092285

Token 225: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004898331593722105
    2. '+' → logprob: -5.754898548126221
    3. ' )' → logprob: -6.879898548126221
    4. ' +' → logprob: -8.129898071289062
    5. ',' → logprob: -8.504898071289062
    6. ')' → logprob: -8.879898071289062
    7. '   ' → logprob: -10.754898071289062
    8. ' ]' → logprob: -12.004898071289062
    9. ']' → logprob: -12.129898071289062
    10. ' ,' → logprob: -12.629898071289062

Token 226: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.13084858655929565
    2. 'is' → logprob: -2.1308486461639404
    3. ' check' → logprob: -6.130848407745361
    4. '_' → logprob: -8.00584888458252
    5. 'check' → logprob: -8.50584888458252
    6. ' def' → logprob: -8.75584888458252
    7. ' ' → logprob: -9.25584888458252
    8. 'def' → logprob: -9.38084888458252
    9. ' _' → logprob: -9.38084888458252
    10. ' find' → logprob: -9.38084888458252

Token 228: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -5.514650183613412e-05
    2. '_' → logprob: -11.250055313110352
    3. '_mat' → logprob: -11.500055313110352
    4. '_m' → logprob: -11.625055313110352
    5. '_matching' → logprob: -11.750055313110352
    6. '_matches' → logprob: -12.625055313110352
    7. ' _' → logprob: -12.875055313110352
    8. '_equal' → logprob: -12.875055313110352
    9. '_valid' → logprob: -13.000055313110352
    10. '_space' → logprob: -14.000055313110352

Token 229: '(hash' (ID: 57662)
  Prédit: '(hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.01819196529686451
    2. '(' → logprob: -4.018191814422607
    3. '(
' → logprob: -11.018192291259766
    4. '(h' → logprob: -11.143192291259766
    5. ' (' → logprob: -12.393192291259766
    6. '_hash' → logprob: -13.393192291259766
    7. '(s' → logprob: -14.018192291259766
    8. '((' → logprob: -14.018192291259766
    9. '(has' → logprob: -14.393192291259766
    10. '(

' → logprob: -15.143192291259766

Token 230: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.006607133895158768
    2. '_' → logprob: -5.6316070556640625
    3. '_t' → logprob: -6.3816070556640625
    4. '_val' → logprob: -6.7566070556640625
    5. '(' → logprob: -9.631607055664062
    6. ')' → logprob: -10.381607055664062
    7. 's' → logprob: -11.506607055664062
    8. ' _' → logprob: -11.756607055664062
    9. '_)' → logprob: -12.131607055664062
    10. '(s' → logprob: -12.506607055664062

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. ' ,' → logprob: -10.375076293945312
    3. ',
' → logprob: -11.250076293945312
    4. 's' → logprob: -11.250076293945312
    5. '   ' → logprob: -12.750076293945312
    6. 'hash' → logprob: -12.875076293945312
    7. '[' → logprob: -13.125076293945312
    8. '_,' → logprob: -13.375076293945312
    9. ',s' → logprob: -13.625076293945312
    10. ',index' → logprob: -13.625076293945312

Token 232: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.14067178964614868
    2. ' start' → logprob: -2.515671730041504
    3. 'i' → logprob: -4.015671730041504
    4. 'l' → logprob: -4.265671730041504
    5. 's' → logprob: -4.390671730041504
    6. ' l' → logprob: -6.390671730041504
    7. ' i' → logprob: -6.390671730041504
    8. 'a' → logprob: -7.015671730041504
    9. ' s' → logprob: -7.015671730041504
    10. 'hash' → logprob: -9.015671730041504

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001696902181720361
    2. ' ,' → logprob: -8.75016975402832
    3. ',len' → logprob: -12.00016975402832
    4. ',
' → logprob: -13.37516975402832
    5. 'def' → logprob: -14.00016975402832
    6. '   ' → logprob: -14.75016975402832
    7. ',length' → logprob: -14.75016975402832
    8. ',i' → logprob: -15.25016975402832
    9. ',int' → logprob: -15.25016975402832
    10. 's' → logprob: -15.37516975402832

Token 234: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.004150699358433485
    2. ' hash' → logprob: -5.504150867462158
    3. '(hash' → logprob: -10.629150390625
    4. '<|end|>' → logprob: -11.004150390625
    5. '	hash' → logprob: -11.504150390625
    6. 's' → logprob: -12.379150390625
    7. 'len' → logprob: -12.379150390625
    8. '_hash' → logprob: -13.004150390625
    9. '<|end|>' → logprob: -13.504150390625
    10. ')' → logprob: -13.504150390625

Token 235: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.558399319241289e-05
    2. '_s' → logprob: -10.875025749206543
    3. '_val' → logprob: -12.750025749206543
    4. '_' → logprob: -13.500025749206543
    5. 't' → logprob: -13.625025749206543
    6. ')' → logprob: -15.500025749206543
    7. ',' → logprob: -15.625025749206543
    8. 's' → logprob: -15.625025749206543
    9. ' _' → logprob: -15.875025749206543
    10. 'val' → logprob: -16.000024795532227

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ' ,' → logprob: -10.125053405761719
    3. ',
' → logprob: -12.375053405761719
    4. ',i' → logprob: -13.625053405761719
    5. '<|end|>' → logprob: -13.875053405761719
    6. '[' → logprob: -14.125053405761719
    7. '‌,' → logprob: -14.375053405761719
    8. ',length' → logprob: -14.500053405761719
    9. ')' → logprob: -14.625053405761719
    10. ',len' → logprob: -14.625053405761719

Token 237: ' base' (ID: 3611)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.21026845276355743
    2. 'base' → logprob: -2.585268497467041
    3. ' len' → logprob: -2.960268497467041
    4. ' base' → logprob: -3.335268497467041
    5. 'mod' → logprob: -4.585268497467041
    6. 'hash' → logprob: -4.960268497467041
    7. 'i' → logprob: -6.460268497467041
    8. ' ' → logprob: -6.585268497467041
    9. 'length' → logprob: -6.585268497467041
    10. ' hash' → logprob: -6.585268497467041

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.780830830801278e-05
    2. ' ,' → logprob: -9.62508773803711
    3. ',
' → logprob: -11.50008773803711
    4. ',i' → logprob: -13.37508773803711
    5. ',

' → logprob: -13.87508773803711
    6. '‌,' → logprob: -14.00008773803711
    7. 'mod' → logprob: -14.12508773803711
    8. '[' → logprob: -14.25008773803711
    9. '   ' → logprob: -14.50008773803711
    10. ',m' → logprob: -14.87508773803711

Token 239: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04301803559064865
    2. ' mod' → logprob: -3.168018102645874
    3. 'i' → logprob: -12.918018341064453
    4. '```' → logprob: -13.043018341064453
    5. 'm' → logprob: -13.168018341064453
    6. ' ' → logprob: -13.168018341064453
    7. '
' → logprob: -13.793018341064453
    8. '0' → logprob: -14.043018341064453
    9. '[' → logprob: -14.043018341064453
    10. '...' → logprob: -14.230518341064453

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ' ,' → logprob: -11.625016212463379
    3. ',len' → logprob: -12.375016212463379
    4. ',
' → logprob: -13.750016212463379
    5. ',length' → logprob: -14.250016212463379
    6. '   ' → logprob: -14.375016212463379
    7. 'def' → logprob: -15.375016212463379
    8. ',

' → logprob: -15.500016212463379
    9. '‌,' → logprob: -16.125017166137695
    10. '```' → logprob: -17.000017166137695

Token 241: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.007754145190119743
    2. ' len' → logprob: -4.882754325866699
    3. 'length' → logprob: -9.2577543258667
    4. 'i' → logprob: -10.5077543258667
    5. ' length' → logprob: -11.7577543258667
    6. ' i' → logprob: -12.2577543258667
    7. ')' → logprob: -12.3827543258667
    8. '   ' → logprob: -13.6327543258667
    9. ' ' → logprob: -13.7577543258667
    10. '	len' → logprob: -14.2577543258667

Token 242: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0002569289645180106
    2. 't' → logprob: -9.000256538391113
    3. '):' → logprob: -9.625256538391113
    4. '):
' → logprob: -11.125256538391113
    5. ')' → logprob: -11.250256538391113
    6. '   ' → logprob: -11.500256538391113
    7. ',' → logprob: -11.625256538391113
    8. '_s' → logprob: -12.000256538391113
    9. 's' → logprob: -13.500256538391113
    10. '):

' → logprob: -13.500256538391113

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03807729855179787
    2. '):
' → logprob: -3.2880773544311523
    3. ')' → logprob: -10.788077354431152
    4. '):

' → logprob: -11.663077354431152
    5. ',' → logprob: -12.538077354431152
    6. '):
' → logprob: -13.663077354431152
    7. ' ):' → logprob: -13.663077354431152
    8. '   ' → logprob: -15.163077354431152
    9. ')=' → logprob: -16.663076400756836
    10. ')：' → logprob: -16.663076400756836

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030527204275131226
    2. ' hash' → logprob: -4.655527114868164
    3. ' return' → logprob: -5.030527114868164
    4. ' if' → logprob: -5.405527114868164
    5. ' s' → logprob: -5.905527114868164
    6. '
' → logprob: -6.405527114868164
    7. ' start' → logprob: -7.030527114868164
    8. '```' → logprob: -7.155527114868164
    9. '    ' → logprob: -7.405527114868164
    10. ' 
' → logprob: -7.655527114868164

Token 245: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.17063307762146
    2. 'sub' → logprob: -1.42063307762146
    3. 'hash' → logprob: -2.17063307762146
    4. 'substring' → logprob: -2.54563307762146
    5. 'expected' → logprob: -3.17063307762146
    6. ' if' → logprob: -3.17063307762146
    7. 'substr' → logprob: -3.67063307762146
    8. '   ' → logprob: -3.67063307762146
    9. 'segment' → logprob: -3.79563307762146
    10. 's' → logprob: -3.92063307762146

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5060272216796875
    2. ',' → logprob: -1.3810272216796875
    3. '<|end|>' → logprob: -2.8810272216796875
    4. ' =' → logprob: -3.5060272216796875
    5. ')' → logprob: -4.2560272216796875
    6. '[' → logprob: -4.5060272216796875
    7. '_hash' → logprob: -5.1310272216796875
    8. 'def' → logprob: -5.1310272216796875
    9. '==' → logprob: -5.7560272216796875
    10. '+' → logprob: -6.0060272216796875

Token 247: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.18076686561107635
    2. 'i' → logprob: -2.3057668209075928
    3. ' hash' → logprob: -2.9307668209075928
    4. '(hash' → logprob: -4.680767059326172
    5. ' i' → logprob: -6.430767059326172
    6. '(i' → logprob: -7.055767059326172
    7. ' (' → logprob: -7.930767059326172
    8. '   ' → logprob: -8.805767059326172
    9. 'is' → logprob: -11.180767059326172
    10. '	hash' → logprob: -11.430767059326172

Token 248: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00016659092216286808
    2. '_val' → logprob: -9.625166893005371
    3. '_t' → logprob: -10.125166893005371
    4. '_' → logprob: -11.125166893005371
    5. '_hash' → logprob: -11.250166893005371
    6. '_i' → logprob: -12.125166893005371
    7. '_arr' → logprob: -12.125166893005371
    8. '[' → logprob: -12.375166893005371
    9. '_is' → logprob: -12.500166893005371
    10. ')' → logprob: -13.000166893005371

Token 249: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017695431597530842
    2. '[' → logprob: -6.376769542694092
    3. '[
' → logprob: -10.75177001953125
    4. '[-' → logprob: -11.50177001953125
    5. 'i' → logprob: -12.12677001953125
    6. '<|end|>' → logprob: -12.25177001953125
    7. ' [' → logprob: -12.37677001953125
    8. '[I' → logprob: -12.62677001953125
    9. '[len' → logprob: -12.75177001953125
    10. '[++' → logprob: -12.75177001953125

Token 250: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09999840706586838
    2. ']' → logprob: -2.5999984741210938
    3. ' +' → logprob: -4.224998474121094
    4. '+i' → logprob: -5.224998474121094
    5. ']+' → logprob: -7.974998474121094
    6. '[i' → logprob: -9.099998474121094
    7. '[' → logprob: -9.474998474121094
    8. 'i' → logprob: -10.224998474121094
    9. ':i' → logprob: -10.224998474121094
    10. '],' → logprob: -10.474998474121094

Token 251: ' len' (ID: 4631)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004237627435941249
    2. 'len' → logprob: -8.000423431396484
    3. '0' → logprob: -9.500423431396484
    4. ' ' → logprob: -11.375423431396484
    5. '   ' → logprob: -14.625423431396484
    6. '
' → logprob: -14.875423431396484
    7. ' len' → logprob: -15.250423431396484
    8. '2' → logprob: -16.000423431396484
    9. 'i' → logprob: -16.187923431396484
    10. '(len' → logprob: -16.375423431396484

Token 252: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00027337539358995855
    2. '_s' → logprob: -9.625273704528809
    3. '(' → logprob: -9.875273704528809
    4. 't' → logprob: -10.125273704528809
    5. '(s' → logprob: -10.500273704528809
    6. '0' → logprob: -10.750273704528809
    7. '```' → logprob: -11.250273704528809
    8. ')' → logprob: -11.375273704528809
    9. ']' → logprob: -11.875273704528809
    10. 's' → logprob: -12.000273704528809

Token 253: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013727048644796014
    2. ' ]' → logprob: -9.625137329101562
    3. ']
' → logprob: -9.875137329101562
    4. ']-' → logprob: -11.875137329101562
    5. '-' → logprob: -12.125137329101562
    6. '[' → logprob: -12.500137329101562
    7. ']

' → logprob: -13.125137329101562
    8. ' -' → logprob: -14.125137329101562
    9. '],' → logprob: -15.750137329101562
    10. ':' → logprob: -16.375137329101562

Token 254: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.034928470849990845
    2. '-' → logprob: -3.409928560256958
    3. '<|end|>' → logprob: -7.784928321838379
    4. '[' → logprob: -8.034928321838379
    5. ')' → logprob: -8.409928321838379
    6. ' ' → logprob: -9.284928321838379
    7. '   ' → logprob: -10.034928321838379
    8. '```' → logprob: -10.409928321838379
    9. ' -
' → logprob: -10.534928321838379
    10. '
' → logprob: -10.909928321838379

Token 255: ' right' (ID: 1849)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.028590373694896698
    2. '-' → logprob: -3.653590440750122
    3. '<|end|>' → logprob: -6.528590202331543
    4. ')' → logprob: -8.153590202331543
    5. ' ' → logprob: -8.278590202331543
    6. 'hash' → logprob: -10.153590202331543
    7. '[' → logprob: -10.153590202331543
    8. ' hash' → logprob: -10.153590202331543
    9. ' -
' → logprob: -10.653590202331543
    10. ',' → logprob: -11.153590202331543

Token 256: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6069386005401611
    2. '=' → logprob: -1.1069386005401611
    3. ' =' → logprob: -3.231938600540161
    4. '(hash' → logprob: -3.481938600540161
    5. 'hash' → logprob: -3.981938600540161
    6. '-' → logprob: -4.231938362121582
    7. ' hash' → logprob: -5.231938362121582
    8. '[' → logprob: -5.356938362121582
    9. '<|end|>' → logprob: -6.231938362121582
    10. ']' → logprob: -6.606938362121582

Token 257: ' (' (ID: 350)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.6493744254112244
    2. 'hash' → logprob: -0.7743744254112244
    3. ' hash' → logprob: -4.399374485015869
    4. ' (' → logprob: -5.524374485015869
    5. '((' → logprob: -8.524374008178711
    6. '(' → logprob: -9.774374008178711
    7. '(h' → logprob: -10.524374008178711
    8. '   ' → logprob: -10.774374008178711
    9. '	hash' → logprob: -11.024374008178711
    10. ' ' → logprob: -11.899374008178711

Token 258: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.07054050266742706
    2. '(hash' → logprob: -2.695540428161621
    3. ' hash' → logprob: -7.445540428161621
    4. ' (' → logprob: -11.445540428161621
    5. '	hash' → logprob: -12.570540428161621
    6. '(h' → logprob: -13.445540428161621
    7. '((' → logprob: -13.445540428161621
    8. '(' → logprob: -14.070540428161621
    9. '   ' → logprob: -14.820540428161621
    10. '(
' → logprob: -14.945540428161621

Token 259: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.045823566731997e-05
    2. '_t' → logprob: -11.250020027160645
    3. 's' → logprob: -13.000020027160645
    4. '(hash' → logprob: -13.750020027160645
    5. 'hash' → logprob: -14.250020027160645
    6. '_' → logprob: -14.625020027160645
    7. '(s' → logprob: -14.750020027160645
    8. 't' → logprob: -14.750020027160645
    9. '_is' → logprob: -15.250020027160645
    10. ')' → logprob: -15.375020027160645

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0025485544465482235
    2. 'i' → logprob: -6.002548694610596
    3. '   ' → logprob: -10.252548217773438
    4. '[' → logprob: -10.502548217773438
    5. ' i' → logprob: -12.502548217773438
    6. '[
' → logprob: -12.627548217773438
    7. ' [' → logprob: -13.627548217773438
    8. '
' → logprob: -14.377548217773438
    9. '	i' → logprob: -14.627548217773438
    10. '    ' → logprob: -16.127548217773438

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004503942560404539
    2. '+' → logprob: -5.8795037269592285
    3. ' +' → logprob: -6.7545037269592285
    4. ']*' → logprob: -8.004504203796387
    5. ']+' → logprob: -9.379504203796387
    6. '   ' → logprob: -10.504504203796387
    7. ' ]' → logprob: -10.629504203796387
    8. ']
' → logprob: -10.629504203796387
    9. ' *' → logprob: -11.629504203796387
    10. '[' → logprob: -12.504504203796387

Token 262: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2522381544113159
    2. '*' → logprob: -1.502238154411316
    3. ')' → logprob: -8.377238273620605
    4. ' ' → logprob: -11.377238273620605
    5. '*object' → logprob: -11.502238273620605
    6. '   ' → logprob: -11.877238273620605
    7. '<|end|>' → logprob: -12.127238273620605
    8. ' ' → logprob: -12.127238273620605
    9. '[' → logprob: -12.502238273620605
    10. '+' → logprob: -12.502238273620605

Token 263: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.779520092299208e-05
    2. ' pow' → logprob: -9.625078201293945
    3. '(pow' → logprob: -11.750078201293945
    4. '
' → logprob: -13.750078201293945
    5. 'p' → logprob: -14.375078201293945
    6. 'power' → logprob: -14.625078201293945
    7. 'base' → logprob: -14.625078201293945
    8. '    
' → logprob: -15.000078201293945
    9. 'pw' → logprob: -15.000078201293945
    10. 'Pow' → logprob: -15.875078201293945

Token 264: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.000540166103746742
    2. '(base' → logprob: -7.875540256500244
    3. 'mod' → logprob: -9.125539779663086
    4. '(' → logprob: -10.500539779663086
    5. '(pow' → logprob: -11.625539779663086
    6. '_pow' → logprob: -12.625539779663086
    7. '(mod' → logprob: -13.125539779663086
    8. '_MOD' → logprob: -13.250539779663086
    9. ' ' → logprob: -14.000539779663086
    10. '   ' → logprob: -14.125539779663086

Token 265: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.028234422206878662
    2. '(' → logprob: -4.278234481811523
    3. 'base' → logprob: -4.278234481811523
    4. '<|end|>' → logprob: -10.278234481811523
    5. '(
' → logprob: -10.528234481811523
    6. ';base' → logprob: -10.778234481811523
    7. ' base' → logprob: -11.778234481811523
    8. ')' → logprob: -12.028234481811523
    9. '[' → logprob: -13.153234481811523
    10. ' (' → logprob: -13.403234481811523

Token 266: ',' (ID: 11)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.31208088994026184
    2. ',' → logprob: -1.5620808601379395
    3. ',len' → logprob: -3.1870808601379395
    4. '(' → logprob: -4.3120808601379395
    5. '[len' → logprob: -6.4370808601379395
    6. '<|end|>' → logprob: -7.0620808601379395
    7. ')' → logprob: -7.8120808601379395
    8. 'len' → logprob: -8.562081336975098
    9. '(length' → logprob: -8.687081336975098
    10. ' ,' → logprob: -9.062081336975098

Token 267: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011223833076655865
    2. ' len' → logprob: -4.511223793029785
    3. '(len' → logprob: -9.011223793029785
    4. '[len' → logprob: -10.011223793029785
    5. '	len' → logprob: -12.386223793029785
    6. '<len' → logprob: -13.386223793029785
    7. 'length' → logprob: -13.511223793029785
    8. '<|end|>' → logprob: -13.886223793029785
    9. ' ' → logprob: -14.761223793029785
    10. ',len' → logprob: -14.886223793029785

Token 268: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.248469718324486e-05
    2. 't' → logprob: -10.750022888183594
    3. '(t' → logprob: -15.000022888183594
    4. '```' → logprob: -15.875022888183594
    5. ')' → logprob: -16.250022888183594
    6. '(_' → logprob: -16.625022888183594
    7. '[' → logprob: -17.250022888183594
    8. '	t' → logprob: -17.375022888183594
    9. '(' → logprob: -17.375022888183594
    10. ' _' → logprob: -17.750022888183594

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018113377154804766
    2. ' ,' → logprob: -8.625181198120117
    3. ')' → logprob: -14.250181198120117
    4. ',
' → logprob: -14.375181198120117
    5. '),' → logprob: -16.625181198120117
    6. '   ' → logprob: -17.125181198120117
    7. '<|end|>' → logprob: -17.250181198120117
    8. '[' → logprob: -17.375181198120117
    9. '(),' → logprob: -17.500181198120117
    10. '))' → logprob: -17.500181198120117

Token 270: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014164921827614307
    2. ' mod' → logprob: -4.264164924621582
    3. '
' → logprob: -15.014164924621582
    4. ' ' → logprob: -15.014164924621582
    5. '   ' → logprob: -15.514164924621582
    6. '(mod' → logprob: -15.514164924621582
    7. '	mod' → logprob: -15.639164924621582
    8. '```' → logprob: -16.514163970947266
    9. '  ' → logprob: -17.514163970947266
    10. ')' → logprob: -17.639163970947266

Token 271: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0789218470454216
    2. ')' → logprob: -2.5789217948913574
    3. ' ))' → logprob: -10.703922271728516
    4. ' )' → logprob: -12.578922271728516
    5. ',' → logprob: -13.328922271728516
    6. ')%' → logprob: -13.703922271728516
    7. ')
' → logprob: -14.078922271728516
    8. ')))' → logprob: -14.203922271728516
    9. '),' → logprob: -14.578922271728516
    10. '))
' → logprob: -15.328922271728516

Token 272: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16634057462215424
    2. ')%' → logprob: -2.0413405895233154
    3. ' %' → logprob: -4.416340351104736
    4. '%' → logprob: -4.541340351104736
    5. ' )' → logprob: -7.791340351104736
    6. '<|end|>' → logprob: -9.666340827941895
    7. ',' → logprob: -9.791340827941895
    8. '
' → logprob: -10.291340827941895
    9. ']%' → logprob: -10.916340827941895
    10. 'mod' → logprob: -11.666340827941895

Token 273: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.318681188422488e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '(mod' → logprob: -16.00001335144043
    4. 'm' → logprob: -20.50001335144043
    5. '	mod' → logprob: -21.37501335144043
    6. ' ' → logprob: -21.62501335144043
    7. '
' → logprob: -22.00001335144043
    8. '(' → logprob: -22.50001335144043
    9. 'base' → logprob: -22.62501335144043
    10. '```' → logprob: -22.87501335144043

Token 274: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012745782732963562
    2. '   ' → logprob: -4.7627458572387695
    3. ' return' → logprob: -5.5127458572387695
    4. 'hash' → logprob: -10.13774585723877
    5. ')' → logprob: -11.38774585723877
    6. 'if' → logprob: -11.51274585723877
    7. '	return' → logprob: -12.01274585723877
    8. ' ' → logprob: -12.76274585723877
    9. ')return' → logprob: -12.88774585723877
    10. 'diff' → logprob: -13.01274585723877

Token 277: ' (' (ID: 350)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.05164676904678345
    2. '(left' → logprob: -3.4266467094421387
    3. ' left' → logprob: -4.051646709442139
    4. ' (' → logprob: -8.051647186279297
    5. 'hash' → logprob: -9.551647186279297
    6. '[left' → logprob: -10.551647186279297
    7. '   ' → logprob: -11.676647186279297
    8. ' ' → logprob: -12.176647186279297
    9. '(hash' → logprob: -12.301647186279297
    10. '	left' → logprob: -12.676647186279297

Token 278: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04866412654519081
    2. '(left' → logprob: -3.423664093017578
    3. 'hash' → logprob: -4.423664093017578
    4. ' left' → logprob: -6.173664093017578
    5. '(hash' → logprob: -7.548664093017578
    6. ' (' → logprob: -8.798664093017578
    7. '[left' → logprob: -10.048664093017578
    8. ' hash' → logprob: -10.173664093017578
    9. '   ' → logprob: -11.673664093017578
    10. '(' → logprob: -11.798664093017578

Token 279: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1529081165790558
    2. ' ==' → logprob: -2.0279080867767334
    3. '==' → logprob: -4.9029083251953125
    4. '-' → logprob: -6.0279083251953125
    5. ')' → logprob: -8.277908325195312
    6. '<|end|>' → logprob: -10.652908325195312
    7. ')==' → logprob: -10.902908325195312
    8. ' ' → logprob: -11.777908325195312
    9. ' ' → logprob: -11.902908325195312
    10. ',' → logprob: -12.027908325195312

Token 280: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.026339083909988403
    2. ' right' → logprob: -3.651339054107666
    3. '(right' → logprob: -10.276339530944824
    4. '[right' → logprob: -13.151339530944824
    5. '
' → logprob: -14.026339530944824
    6. '	right' → logprob: -14.526339530944824
    7. ' (' → logprob: -14.776339530944824
    8. '   ' → logprob: -15.526339530944824
    9. ' ' → logprob: -15.651339530944824
    10. 'rightness' → logprob: -16.901338577270508

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004116038326174021
    2. ' )' → logprob: -6.254116058349609
    3. ')%' → logprob: -6.254116058349609
    4. '+' → logprob: -8.37911605834961
    5. '%' → logprob: -10.87911605834961
    6. ' +' → logprob: -11.37911605834961
    7. ' %' → logprob: -14.00411605834961
    8. '0' → logprob: -15.25411605834961
    9. ')
' → logprob: -15.25411605834961
    10. '=' → logprob: -15.37911605834961

Token 282: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6628749370574951
    2. ' %' → logprob: -0.7878749370574951
    3. ')' → logprob: -3.537874937057495
    4. ')%' → logprob: -7.412875175476074
    5. ' %=' → logprob: -9.287875175476074
    6. ' ' → logprob: -11.412875175476074
    7. '==' → logprob: -11.662875175476074
    8. '```' → logprob: -12.787875175476074
    9. '0' → logprob: -12.912875175476074
    10. ' )' → logprob: -13.162875175476074

Token 283: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0011703446507453918
    2. ' mod' → logprob: -6.7511701583862305
    3. '(mod' → logprob: -16.751171112060547
    4. '	mod' → logprob: -20.376171112060547
    5. ' ' → logprob: -20.751171112060547
    6. 'modal' → logprob: -22.251171112060547
    7. 'moder' → logprob: -22.251171112060547
    8. 'm' → logprob: -23.001171112060547
    9. '```' → logprob: -23.626171112060547
    10. '_mod' → logprob: -24.001171112060547

Token 284: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018252842128276825
    2. '==' → logprob: -4.018252849578857
    3. ' ' → logprob: -9.3932523727417
    4. '=' → logprob: -11.7682523727417
    5. ')==' → logprob: -12.7682523727417
    6. '0' → logprob: -12.8932523727417
    7. ')' → logprob: -14.1432523727417
    8. ' =' → logprob: -14.1432523727417
    9. ' ==
' → logprob: -14.2682523727417
    10. ' ' → logprob: -14.3932523727417

Token 285: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.016388937830924988
    2. ' hash' → logprob: -4.766388893127441
    3. '0' → logprob: -4.891388893127441
    4. '(hash' → logprob: -9.016388893127441
    5. ' ' → logprob: -9.141388893127441
    6. '	hash' → logprob: -13.391388893127441
    7. ' (' → logprob: -13.766388893127441
    8. '(' → logprob: -14.391388893127441
    9. '   ' → logprob: -14.766388893127441
    10. '
' → logprob: -14.891388893127441

Token 286: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00038288687937892973
    2. '_val' → logprob: -7.875382900238037
    3. 'val' → logprob: -13.250382423400879
    4. 't' → logprob: -14.375382423400879
    5. 'Val' → logprob: -15.250382423400879
    6. '```' → logprob: -16.875383377075195
    7. '_' → logprob: -17.375383377075195
    8. ' _' → logprob: -17.500383377075195
    9. '_value' → logprob: -17.750383377075195
    10. '_s' → logprob: -17.750383377075195

Token 287: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' initialize' (ID: 18400)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.46841561794281006
    2. 'def' → logprob: -1.46841561794281
    3. ' main' → logprob: -1.96841561794281
    4. ' def' → logprob: -5.7184157371521
    5. 'solve' → logprob: -8.968415260314941
    6. 'find' → logprob: -9.343415260314941
    7. 'calculate' → logprob: -9.468415260314941
    8. 'read' → logprob: -9.468415260314941
    9. '__' → logprob: -9.593415260314941
    10. 'get' → logprob: -10.343415260314941

Token 290: '_' (ID: 62)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.8895015716552734
    2. '_values' → logprob: -2.0145015716552734
    3. '_params' → logprob: -2.1395015716552734
    4. '_hash' → logprob: -2.2645015716552734
    5. '(' → logprob: -2.8895015716552734
    6. '_parameters' → logprob: -3.0145015716552734
    7. '_variables' → logprob: -4.139501571655273
    8. '_constants' → logprob: -4.139501571655273
    9. '_' → logprob: -4.264501571655273
    10. '(base' → logprob: -4.389501571655273

Token 291: 'visited' (ID: 52453)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.3735477030277252
    2. 'parameters' → logprob: -1.3735476732254028
    3. 'values' → logprob: -3.7485477924346924
    4. 'variables' → logprob: -4.373547554016113
    5. 'constants' → logprob: -4.498547554016113
    6. 'vars' → logprob: -5.373547554016113
    7. 'hash' → logprob: -6.248547554016113
    8. 'base' → logprob: -6.498547554016113
    9. 'pr' → logprob: -6.748547554016113
    10. 'strings' → logprob: -7.498547554016113

Token 292: '(len' (ID: 14990)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.015398455783724785
    2. '():
' → logprob: -5.1403985023498535
    3. '()' → logprob: -5.3903985023498535
    4. ' ():' → logprob: -6.0153985023498535
    5. '(' → logprob: -6.5153985023498535
    6. ' =' → logprob: -8.390398025512695
    7. ' ()' → logprob: -8.515398025512695
    8. '[]' → logprob: -8.640398025512695
    9. '(size' → logprob: -9.140398025512695
    10. '_' → logprob: -10.390398025512695

Token 293: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5828425288200378
    2. '_s' → logprob: -0.9578425288200378
    3. '_' → logprob: -3.4578425884246826
    4. '_t' → logprob: -4.0828423500061035
    5. '(' → logprob: -6.3328423500061035
    6. '(s' → logprob: -6.3328423500061035
    7. 's' → logprob: -6.4578423500061035
    8. '):' → logprob: -6.7078423500061035
    9. ')' → logprob: -6.9578423500061035
    10. '_,' → logprob: -7.9578423500061035

Token 294: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1838873028755188
    2. '):
' → logprob: -1.808887243270874
    3. ',' → logprob: -5.558887481689453
    4. ')' → logprob: -8.808887481689453
    5. ' ):' → logprob: -9.308887481689453
    6. '):
' → logprob: -10.933887481689453
    7. '   ' → logprob: -12.183887481689453
    8. ' ):
' → logprob: -12.433887481689453
    9. '=' → logprob: -12.683887481689453
    10. '):

' → logprob: -12.808887481689453

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4420664608478546
    2. '[' → logprob: -1.3170664310455322
    3. ' [' → logprob: -2.4420664310455322
    4. '[]' → logprob: -6.442066669464111
    5. ' return' → logprob: -7.942066669464111
    6. ' set' → logprob: -9.067066192626953
    7. ' []' → logprob: -9.817066192626953
    8. ' =' → logprob: -10.192066192626953
    9. 'return' → logprob: -10.317066192626953
    10. ' ' → logprob: -10.692066192626953

Token 296: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055381156504154205
    2. 'return' (adapté à ' return') → logprob: -3.0553810596466064
    3. ' [' → logprob: -5.1803812980651855
    4. ' return' → logprob: -6.9303812980651855
    5. '   ' → logprob: -9.055380821228027
    6. 'set' → logprob: -10.055380821228027
    7. 'visited' → logprob: -13.055380821228027
    8. '[]' → logprob: -13.180380821228027
    9. ' ' → logprob: -14.305380821228027
    10. ' set' → logprob: -14.805380821228027

Token 297: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07894233614206314
    2. ' [' → logprob: -2.57894229888916
    3. 'set' → logprob: -10.32894229888916
    4. '[[' → logprob: -11.70394229888916
    5. ' set' → logprob: -11.82894229888916
    6. ' [[' → logprob: -13.82894229888916
    7. '   ' → logprob: -13.95394229888916
    8. ' ' → logprob: -14.45394229888916
    9. '[s' → logprob: -14.95394229888916
    10. '[len' → logprob: -15.32894229888916

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.621933451038785e-05
    2. '(' → logprob: -10.375056266784668
    3. 'float' → logprob: -11.125056266784668
    4. '2' → logprob: -13.125056266784668
    5. '100' → logprob: -13.250056266784668
    6. '10' → logprob: -13.500056266784668
    7. '999' → logprob: -13.875056266784668
    8. '-' → logprob: -14.250056266784668
    9. '0' → logprob: -14.625056266784668
    10. '(-' → logprob: -14.750056266784668

Token 299: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011607808992266655
    2. ' for' → logprob: -4.761607646942139
    3. ']*' → logprob: -6.136607646942139
    4. ' ]' → logprob: -7.511607646942139
    5. 'for' → logprob: -8.261608123779297
    6. ']+' → logprob: -12.011608123779297
    7. ')' → logprob: -12.386608123779297
    8. ']*(' → logprob: -12.886608123779297
    9. '}' → logprob: -13.386608123779297
    10. '<|end|>' → logprob: -13.761608123779297

Token 300: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1272897571325302
    2. ' *' → logprob: -2.1272897720336914
    3. '*[' → logprob: -9.502289772033691
    4. ' for' → logprob: -9.627289772033691
    5. '0' → logprob: -9.627289772033691
    6. '+' → logprob: -9.877289772033691
    7. '   ' → logprob: -10.627289772033691
    8. 'def' → logprob: -11.127289772033691
    9. ')' → logprob: -11.377289772033691
    10. '*(' → logprob: -11.627289772033691

Token 301: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002823120157700032
    2. '(len' → logprob: -8.625282287597656
    3. ' len' → logprob: -9.250282287597656
    4. '(' → logprob: -12.125282287597656
    5. ' (' → logprob: -13.750282287597656
    6. '   ' → logprob: -18.000282287597656
    7. '[len' → logprob: -18.125282287597656
    8. '	len' → logprob: -18.875282287597656
    9. '  ' → logprob: -19.750282287597656
    10. ' ' → logprob: -20.000282287597656

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. '_' → logprob: -12.500009536743164
    3. '(' → logprob: -13.500009536743164
    4. ' ' → logprob: -13.500009536743164
    5. '   ' → logprob: -14.125009536743164
    6. '(len' → logprob: -14.500009536743164
    7. '```' → logprob: -14.625009536743164
    8. 'len' → logprob: -14.750009536743164
    9. '[' → logprob: -15.000009536743164
    10. '  ' → logprob: -17.125009536743164

Token 303: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003786300541833043
    2. '<|end|>' → logprob: -5.628786087036133
    3. '```' → logprob: -9.128786087036133
    4. '<|end|>' → logprob: -10.503786087036133
    5. '
' → logprob: -11.253786087036133
    6. '#' → logprob: -11.378786087036133
    7. 'import' → logprob: -12.753786087036133
    8. '

' → logprob: -13.128786087036133
    9. '[]' → logprob: -13.378786087036133
    10. 'visited' → logprob: -13.503786087036133

Token 304: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006054567056708038
    2. 'visited' → logprob: -7.500605583190918
    3. '<|end|>' → logprob: -11.000605583190918
    4. '```' → logprob: -11.250605583190918
    5. 'import' → logprob: -12.500605583190918
    6. '#' → logprob: -13.125605583190918
    7. 'current' → logprob: -13.250605583190918
    8. 'deque' → logprob: -13.500605583190918
    9. 'for' → logprob: -13.625605583190918
    10. 'from' → logprob: -13.875605583190918

Token 305: ' find' (ID: 1646)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.287263959646225
    2. 'main' → logprob: -1.5372639894485474
    3. ' find' → logprob: -5.287263870239258
    4. ' process' → logprob: -5.412263870239258
    5. ' update' → logprob: -5.662263870239258
    6. 'solve' → logprob: -5.787263870239258
    7. ' solve' → logprob: -5.912263870239258
    8. ' mark' → logprob: -5.912263870239258
    9. 'process' → logprob: -6.162263870239258
    10. 'dfs' → logprob: -6.537263870239258

Token 306: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7288920879364014
    2. '_max' → logprob: -1.8538920879364014
    3. '_matches' → logprob: -2.3538920879364014
    4. '_unique' → logprob: -2.7288920879364014
    5. '_first' → logprob: -3.3538920879364014
    6. '_sub' → logprob: -3.4788920879364014
    7. '_possible' → logprob: -4.3538923263549805
    8. '_next' → logprob: -4.4788923263549805
    9. '_occ' → logprob: -4.7288923263549805
    10. '_matching' → logprob: -4.7288923263549805

Token 307: '_chain' (ID: 74449)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -1.4565777778625488
    2. '_repeat' → logprob: -1.5815777778625488
    3. '_shift' → logprob: -2.081577777862549
    4. '_length' → logprob: -2.206577777862549
    5. '_match' → logprob: -2.706577777862549
    6. '_unique' → logprob: -2.956577777862549
    7. '_sub' → logprob: -3.581577777862549
    8. '_factor' → logprob: -3.581577777862549
    9. '_occ' → logprob: -3.831577777862549
    10. '_rotation' → logprob: -4.581577777862549

Token 308: '(ok' (ID: 128325)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08301693201065063
    2. '(' → logprob: -2.833016872406006
    3. '_len' → logprob: -5.333016872406006
    4. '_' → logprob: -5.333016872406006
    5. '_length' → logprob: -5.833016872406006
    6. '(length' → logprob: -5.833016872406006
    7. '():' → logprob: -6.208016872406006
    8. 'def' → logprob: -6.958016872406006
    9. '(size' → logprob: -8.208017349243164
    10. '_size' → logprob: -8.333017349243164

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9262791275978088
    2. ')' → logprob: -1.801279067993164
    3. '_len' → logprob: -2.051279067993164
    4. 's' → logprob: -2.301279067993164
    5. '_pos' → logprob: -3.051279067993164
    6. 'ay' → logprob: -3.426279067993164
    7. '_chain' → logprob: -3.426279067993164
    8. '):' → logprob: -3.926279067993164
    9. 'len' → logprob: -4.551279067993164
    10. '):
' → logprob: -4.801279067993164

Token 310: ' len' (ID: 4631)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7455510497093201
    2. 'len' → logprob: -1.1205511093139648
    3. ' len' → logprob: -2.870551109313965
    4. ' visited' → logprob: -2.995551109313965
    5. 'start' → logprob: -4.245551109313965
    6. 'ok' → logprob: -4.745551109313965
    7. 'pos' → logprob: -4.995551109313965
    8. 'n' → logprob: -5.370551109313965
    9. 'vis' → logprob: -5.495551109313965
    10. 'hash' → logprob: -5.620551109313965

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000597712118178606
    2. '(' → logprob: -8.750597953796387
    3. ')' → logprob: -8.750597953796387
    4. '_' → logprob: -9.500597953796387
    5. ',' → logprob: -9.875597953796387
    6. 'ok' → logprob: -10.250597953796387
    7. '_chain' → logprob: -10.625597953796387
    8. '_ok' → logprob: -11.500597953796387
    9. ' ' → logprob: -11.625597953796387
    10. '   ' → logprob: -11.750597953796387

Token 312: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38955602049827576
    2. '):
' → logprob: -1.7645560503005981
    3. ',' → logprob: -1.8895560503005981
    4. '   ' → logprob: -9.014555931091309
    5. '):
' → logprob: -10.264555931091309
    6. ')' → logprob: -10.639555931091309
    7. ' ):' → logprob: -10.639555931091309
    8. 'def' → logprob: -11.639555931091309
    9. ' ,' → logprob: -12.014555931091309
    10. '):

' → logprob: -12.264555931091309

Token 313: ' len' (ID: 4631)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3467530310153961
    2. 'start' → logprob: -2.5967531204223633
    3. 'len' → logprob: -3.2217531204223633
    4. ' visited' → logprob: -3.4717531204223633
    5. 'pos' → logprob: -3.9717531204223633
    6. 'max' → logprob: -4.346753120422363
    7. 'hash' → logprob: -4.596753120422363
    8. 'k' → logprob: -4.721753120422363
    9. 'index' → logprob: -4.846753120422363
    10. 'chain' → logprob: -4.846753120422363

Token 314: '_t' (ID: 838)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005259881727397442
    2. '_t' → logprob: -8.375526428222656
    3. '_s' → logprob: -9.125526428222656
    4. 'ok' → logprob: -9.750526428222656
    5. 's' → logprob: -10.250526428222656
    6. 't' → logprob: -10.375526428222656
    7. ')' → logprob: -11.375526428222656
    8. '_' → logprob: -11.625526428222656
    9. '_ok' → logprob: -11.750526428222656
    10. '(' → logprob: -12.000526428222656

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20588934421539307
    2. ',' → logprob: -2.2058892250061035
    3. '):
' → logprob: -2.5808892250061035
    4. ')' → logprob: -9.580889701843262
    5. '   ' → logprob: -10.330889701843262
    6. '):
' → logprob: -10.330889701843262
    7. ' ):' → logprob: -10.705889701843262
    8. '):

' → logprob: -11.080889701843262
    9. 'def' → logprob: -11.705889701843262
    10. ' ,' → logprob: -11.830889701843262

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437897086143494
    2. 'max' → logprob: -0.8937897086143494
    3. ' max' → logprob: -3.143789768218994
    4. ' res' → logprob: -4.518789768218994
    5. 'res' → logprob: -5.018789768218994
    6. ' i' → logprob: -6.768789768218994
    7. 'i' → logprob: -7.143789768218994
    8. '0' → logprob: -7.393789768218994
    9. 'result' → logprob: -7.518789768218994
    10. 'for' → logprob: -8.268789291381836

Token 317: ' ret' (ID: 2881)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13339760899543762
    2. ' max' → logprob: -2.1333975791931152
    3. '   ' → logprob: -5.258397579193115
    4. ' res' → logprob: -7.258397579193115
    5. 'res' → logprob: -8.008398056030273
    6. 'result' → logprob: -10.008398056030273
    7. 'ans' → logprob: -10.383398056030273
    8. 'best' → logprob: -10.383398056030273
    9. ' result' → logprob: -10.758398056030273
    10. ' best' → logprob: -11.008398056030273

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47419336438179016
    2. '=' → logprob: -0.9741933345794678
    3. ' ' → logprob: -9.599193572998047
    4. ',' → logprob: -10.349193572998047
    5. '   ' → logprob: -11.474193572998047
    6. '  ' → logprob: -13.224193572998047
    7. '_' → logprob: -13.349193572998047
    8. 'max' → logprob: -14.474193572998047
    9. ' ,' → logprob: -14.724193572998047
    10. '=max' → logprob: -14.724193572998047

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10507235676050186
    2. ' ' → logprob: -2.730072259902954
    3. '-' → logprob: -3.480072259902954
    4. ' -' → logprob: -5.730072498321533
    5. '[' → logprob: -8.730072021484375
    6. '1' → logprob: -9.105072021484375
    7. 'max' → logprob: -9.855072021484375
    8. '   ' → logprob: -10.105072021484375
    9. '[-' → logprob: -10.105072021484375
    10. ' [' → logprob: -10.855072021484375

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024239432066679
    2. '-' → logprob: -3.7742395401000977
    3. 'max' → logprob: -7.524239540100098
    4. '1' → logprob: -8.649239540100098
    5. '[' → logprob: -9.024239540100098
    6. ' ' → logprob: -9.524239540100098
    7. '[-' → logprob: -10.024239540100098
    8. 'len' → logprob: -11.149239540100098
    9. ' -' → logprob: -12.149239540100098
    10. 'float' → logprob: -12.399239540100098

Token 321: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03964879736304283
    2. '   ' → logprob: -3.2896487712860107
    3. ',' → logprob: -6.78964900970459
    4. '    
' → logprob: -8.78964900970459
    5. ',
' → logprob: -9.41464900970459
    6. '
' → logprob: -9.53964900970459
    7. ' for' → logprob: -10.16464900970459
    8. 'for' → logprob: -10.28964900970459
    9. 'current' → logprob: -10.53964900970459
    10. 'max' → logprob: -11.28964900970459

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13148435950279236
    2. '
' → logprob: -2.381484270095825
    3. ' for' → logprob: -3.756484270095825
    4. 'for' → logprob: -5.131484508514404
    5. ',' → logprob: -7.506484508514404
    6. ' max' → logprob: -8.381484031677246
    7. 'max' → logprob: -9.131484031677246
    8. '    
' → logprob: -9.131484031677246
    9. ',
' → logprob: -9.256484031677246
    10. ' current' → logprob: -9.756484031677246

Token 323: ' visited' (ID: 18416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05007067322731018
    2. 'max' → logprob: -4.050070762634277
    3. 'current' → logprob: -4.050070762634277
    4. 'stack' → logprob: -5.675070762634277
    5. '   ' → logprob: -5.925070762634277
    6. 'dp' → logprob: -6.175070762634277
    7. 'chain' → logprob: -6.300070762634277
    8. 'visited' (adapté à ' visited') → logprob: -6.800070762634277
    9. 'cur' → logprob: -7.050070762634277
    10. ' for' → logprob: -7.675070762634277

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520087659358978
    2. ' =' → logprob: -1.5020087957382202
    3. ',' → logprob: -9.502008438110352
    4. '[' → logprob: -12.877008438110352
    5. ' ' → logprob: -14.127008438110352
    6. '=[' → logprob: -14.752008438110352
    7. '   ' → logprob: -14.877008438110352
    8. ' =[' → logprob: -14.877008438110352
    9. '```' → logprob: -16.62700843811035
    10. '[:]' → logprob: -16.62700843811035

Token 325: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.18359297513961792
    2. '[-' → logprob: -1.8085930347442627
    3. ' initialize' → logprob: -6.058592796325684
    4. ' [-' → logprob: -7.308592796325684
    5. 'ok' → logprob: -7.683592796325684
    6. '   ' → logprob: -8.683592796325684
    7. '[' → logprob: -8.933592796325684
    8. ' ok' → logprob: -11.058592796325684
    9. '_initialize' → logprob: -11.308592796325684
    10. ' ' → logprob: -11.683592796325684

Token 326: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0036044635344296694
    2. 'visited' → logprob: -5.628604412078857
    3. 'Visited' → logprob: -12.878604888916016
    4. '(len' → logprob: -13.753604888916016
    5. '(' → logprob: -15.253604888916016
    6. ' visited' → logprob: -15.753604888916016
    7. '
' → logprob: -16.003604888916016
    8. 'len' → logprob: -16.628604888916016
    9. '```' → logprob: -17.003604888916016
    10. 's' → logprob: -17.253604888916016

Token 327: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.5094070477061905e-05
    2. 'ok' → logprob: -11.625015258789062
    3. ' visited' → logprob: -12.125015258789062
    4. '
' → logprob: -14.750015258789062
    5. 'len' → logprob: -15.750015258789062
    6. '0' → logprob: -17.000015258789062
    7. '```' → logprob: -17.250015258789062
    8. '(' → logprob: -18.000015258789062
    9. '_' → logprob: -18.125015258789062
    10. 'Visited' → logprob: -18.250015258789062

Token 328: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -7.896309739408025e-07
    2. ',len' → logprob: -15.375000953674316
    3. '[len' → logprob: -15.375000953674316
    4. '<len' → logprob: -16.25
    5. '=len' → logprob: -16.5
    6. 'len' → logprob: -16.625
    7. '(' → logprob: -17.0
    8. ' (' → logprob: -18.5
    9. ' len' → logprob: -19.625
    10. '	len' → logprob: -20.125

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -13.375007629394531
    3. '```' → logprob: -13.375007629394531
    4. 'ok' → logprob: -13.500007629394531
    5. ' ' → logprob: -14.500007629394531
    6. '   ' → logprob: -14.750007629394531
    7. '
' → logprob: -15.125007629394531
    8. '(' → logprob: -15.625007629394531
    9. ',' → logprob: -15.875007629394531
    10. '_' → logprob: -15.875007629394531

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759497284889221
    2. ')
' → logprob: -0.8259497284889221
    3. ')
' → logprob: -12.450949668884277
    4. ')

' → logprob: -12.575949668884277
    5. '   ' → logprob: -13.325949668884277
    6. ' )
' → logprob: -14.700949668884277
    7. ' )' → logprob: -15.200949668884277
    8. ' ' → logprob: -15.950949668884277
    9. ')`
' → logprob: -16.200950622558594
    10. 'def' → logprob: -16.825950622558594

Token 331: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11055967211723328
    2. '   ' → logprob: -2.7355597019195557
    3. ' for' → logprob: -3.3605597019195557
    4. 'for' → logprob: -5.860559463500977
    5. '	for' → logprob: -7.485559463500977
    6. '    
' → logprob: -7.610559463500977
    7. '<|end|>' → logprob: -7.985559463500977
    8. ' 
' → logprob: -8.985559463500977
    9. ' i' → logprob: -8.985559463500977
    10. 'def' → logprob: -9.110559463500977

Token 332: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011527923867106438
    2. 'def' → logprob: -4.511528015136719
    3. '   ' → logprob: -8.636528015136719
    4. 'stack' → logprob: -8.636528015136719
    5. ' for' → logprob: -9.011528015136719
    6. '
' → logprob: -13.636528015136719
    7. ' def' → logprob: -14.261528015136719
    8. 'max' → logprob: -15.386528015136719
    9. '```' → logprob: -15.386528015136719
    10. 'visited' → logprob: -15.511528015136719

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06745342910289764
    2. ' i' → logprob: -3.067453384399414
    3. 'v' → logprob: -5.192453384399414
    4. 'start' → logprob: -5.192453384399414
    5. 'u' → logprob: -5.567453384399414
    6. 'x' → logprob: -6.692453384399414
    7. ' v' → logprob: -7.567453384399414
    8. ' start' → logprob: -7.567453384399414
    9. ' u' → logprob: -8.192453384399414
    10. 'pos' → logprob: -8.442453384399414

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006746162660419941
    2. 'in' → logprob: -5.006746292114258
    3. ' ' → logprob: -11.256746292114258
    4. ',' → logprob: -12.381746292114258
    5. '   ' → logprob: -12.756746292114258
    6. 'n' → logprob: -12.881746292114258
    7. '	in' → logprob: -13.131746292114258
    8. '<|end|>' → logprob: -14.256746292114258
    9. '  ' → logprob: -14.506746292114258
    10. 'range' → logprob: -14.631746292114258

Token 335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021474957466125
    2. ' range' → logprob: -2.350214719772339
    3. ' ' → logprob: -12.850214958190918
    4. '   ' → logprob: -13.100214958190918
    5. '0' → logprob: -13.975214958190918
    6. '(range' → logprob: -13.975214958190918
    7. '  ' → logprob: -14.850214958190918
    8. '
' → logprob: -15.225214958190918
    9. '	range' → logprob: -15.350214958190918
    10. 'in' → logprob: -15.600214958190918

Token 336: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.06198258697986603
    2. 'len' → logprob: -2.8119826316833496
    3. ' len' → logprob: -12.186982154846191
    4. '(' → logprob: -12.436982154846191
    5. '   ' → logprob: -13.561982154846191
    6. '[len' → logprob: -13.811982154846191
    7. '	len' → logprob: -14.061982154846191
    8. '<len' → logprob: -14.061982154846191
    9. '0' → logprob: -14.186982154846191
    10. 'ok' → logprob: -14.436982154846191

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. 'ok' → logprob: -13.25001049041748
    3. '_' → logprob: -13.37501049041748
    4. 'o' → logprob: -13.62501049041748
    5. '(' → logprob: -13.62501049041748
    6. '_t' → logprob: -13.75001049041748
    7. ')' → logprob: -14.00001049041748
    8. ' ' → logprob: -14.50001049041748
    9. '):' → logprob: -15.06251049041748
    10. '   ' → logprob: -15.18751049041748

Token 338: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932165622711182
    2. '):' → logprob: -0.6932165622711182
    3. '   ' → logprob: -10.943216323852539
    4. '):
' → logprob: -11.318216323852539
    5. '-' → logprob: -11.818216323852539
    6. ' ):' → logprob: -11.818216323852539
    7. ' ):
' → logprob: -12.068216323852539
    8. '+' → logprob: -12.193216323852539
    9. ':' → logprob: -12.318216323852539
    10. '):

' → logprob: -13.443216323852539

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01407147478312254
    2. ' if' → logprob: -4.764071464538574
    3. '
' → logprob: -6.139071464538574
    4. '	' → logprob: -6.889071464538574
    5. 'if' → logprob: -7.139071464538574
    6. '   ' → logprob: -7.889071464538574
    7. '	   ' → logprob: -8.139071464538574
    8. '	if' → logprob: -8.889071464538574
    9. ' ' → logprob: -9.264071464538574
    10. ':' → logprob: -9.264071464538574

Token 340: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003528622619342059
    2. ' if' → logprob: -8.87535285949707
    3. '   ' → logprob: -9.00035285949707
    4. '       ' → logprob: -9.50035285949707
    5. '           ' → logprob: -12.75035285949707
    6. 'cnt' → logprob: -13.00035285949707
    7. 'chain' → logprob: -13.12535285949707
    8. 'count' → logprob: -13.62535285949707
    9. 'cur' → logprob: -13.87535285949707
    10. 'ret' → logprob: -14.00035285949707

Token 341: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.04860564321279526
    2. ' ok' → logprob: -3.4236056804656982
    3. 'visited' → logprob: -4.548605442047119
    4. ' visited' → logprob: -6.423605442047119
    5. 'not' → logprob: -6.548605442047119
    6. ' not' → logprob: -7.298605442047119
    7. '   ' → logprob: -8.048605918884277
    8. ' ' → logprob: -10.048605918884277
    9. '  ' → logprob: -10.298605918884277
    10. 'i' → logprob: -10.423605918884277

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.375006675720215
    3. 'i' → logprob: -13.625006675720215
    4. '[I' → logprob: -15.000006675720215
    5. '[
' → logprob: -15.375006675720215
    6. ' [' → logprob: -15.500006675720215
    7. '```' → logprob: -16.00000762939453
    8. '==' → logprob: -16.75000762939453
    9. '
' → logprob: -16.87500762939453
    10. '   ' → logprob: -17.00000762939453

Token 343: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6749616265296936
    2. ']' → logprob: -0.7999616265296936
    3. ']:' → logprob: -3.549961566925049
    4. '==' → logprob: -5.049961566925049
    5. 'and' → logprob: -5.799961566925049
    6. ']:
' → logprob: -6.174961566925049
    7. ' and' → logprob: -7.549961566925049
    8. ' ==' → logprob: -8.549962043762207
    9. ']!=' → logprob: -8.549962043762207
    10. ':' → logprob: -9.674962043762207

Token 344: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2934185564517975
    2. 'and' → logprob: -1.418418526649475
    3. ' and' → logprob: -5.0434184074401855
    4. ':' → logprob: -5.9184184074401855
    5. ' ==' → logprob: -6.1684184074401855
    6. '==-' → logprob: -7.5434184074401855
    7. '!=' → logprob: -7.9184184074401855
    8. ']==' → logprob: -11.043418884277344
    9. ':
' → logprob: -11.168418884277344
    10. '=' → logprob: -12.043418884277344

Token 345: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0018849691841751337
    2. ' visited' → logprob: -6.376884937286377
    3. '   ' → logprob: -8.626885414123535
    4. '  ' → logprob: -13.876885414123535
    5. '       ' → logprob: -14.001885414123535
    6. ' ' → logprob: -14.376885414123535
    7. '    ' → logprob: -14.501885414123535
    8. '	' → logprob: -15.626885414123535
    9. '           ' → logprob: -16.00188446044922
    10. '     ' → logprob: -16.12688446044922

Token 346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001366744691040367
    2. '[' → logprob: -9.625136375427246
    3. ' [' → logprob: -10.250136375427246
    4. 'i' → logprob: -10.500136375427246
    5. '[
' → logprob: -12.875136375427246
    6. ' i' → logprob: -13.250136375427246
    7. '==' → logprob: -14.500136375427246
    8. '```' → logprob: -14.500136375427246
    9. ' ==' → logprob: -14.750136375427246
    10. '[I' → logprob: -15.125136375427246

Token 347: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -1.0369566679000854
    2. ']' → logprob: -1.1619566679000854
    3. '==' → logprob: -1.2869566679000854
    4. ' ==' → logprob: -3.036956787109375
    5. '==-' → logprob: -5.286956787109375
    6. '[i' → logprob: -6.036956787109375
    7. '[' → logprob: -7.786956787109375
    8. ']!=' → logprob: -8.661956787109375
    9. ' ]' → logprob: -9.036956787109375
    10. '<' → logprob: -9.286956787109375

Token 348: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02141425758600235
    2. ' ==' → logprob: -4.521414279937744
    3. '==-' → logprob: -4.896414279937744
    4. '!=' → logprob: -6.271414279937744
    5. '<' → logprob: -7.021414279937744
    6. ' !=' → logprob: -10.896413803100586
    7. '==
' → logprob: -11.271413803100586
    8. '[' → logprob: -11.396413803100586
    9. '!=-' → logprob: -12.771413803100586
    10. '```' → logprob: -12.896413803100586

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020377879263833165
    2. ' -' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.375204086303711
    4. ' ' → logprob: -16.87520408630371
    5. '  ' → logprob: -18.25020408630371
    6. '	' → logprob: -19.87520408630371
    7. '0' → logprob: -20.12520408630371
    8. '    ' → logprob: -20.25020408630371
    9. '−' → logprob: -21.00020408630371
    10. '     ' → logprob: -21.50020408630371

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -15.250009536743164
    4. '   ' → logprob: -15.875009536743164
    5. '0' → logprob: -16.250009536743164
    6. '-' → logprob: -16.250009536743164
    7. 'i' → logprob: -16.875009536743164
    8. ' -' → logprob: -17.875009536743164
    9. '  ' → logprob: -18.062509536743164
    10. ',' → logprob: -18.625009536743164

Token 351: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14303673803806305
    2. ':' → logprob: -2.0180368423461914
    3. ' and' → logprob: -8.643036842346191
    4. '):
' → logprob: -9.393036842346191
    5. '       ' → logprob: -10.393036842346191
    6. ' :
' → logprob: -11.018036842346191
    7. ',' → logprob: -11.143036842346191
    8. '():
' → logprob: -11.768036842346191
    9. ':
' → logprob: -11.768036842346191
    10. ':

' → logprob: -11.893036842346191

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45249319076538086
    2. ':
' → logprob: -1.5774931907653809
    3. ':' → logprob: -1.9524931907653809
    4. ' and' → logprob: -5.327493190765381
    5. '):
' → logprob: -6.327493190765381
    6. '       ' → logprob: -6.452493190765381
    7. '```' → logprob: -6.452493190765381
    8. 'visited' → logprob: -6.827493190765381
    9. ',' → logprob: -7.077493190765381
    10. 'def' → logprob: -7.327493190765381

Token 353: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2873479425907135
    2. 'stack' → logprob: -2.5373480319976807
    3. 'length' → logprob: -2.7873480319976807
    4. 'chain' → logprob: -2.9123480319976807
    5. 'cnt' (adapté à ' cnt') → logprob: -3.5373480319976807
    6. 'cur' → logprob: -4.912347793579102
    7. 'current' → logprob: -5.037347793579102
    8. '           ' → logprob: -5.787347793579102
    9. 'queue' → logprob: -5.912347793579102
    10. 'visited' → logprob: -6.037347793579102

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2016671895980835
    2. '=' → logprob: -1.7016671895980835
    3. ',' → logprob: -8.576666831970215
    4. '   ' → logprob: -10.076666831970215
    5. ' ' → logprob: -12.076666831970215
    6. ' +=' → logprob: -12.201666831970215
    7. '	' → logprob: -12.326666831970215
    8. '+=' → logprob: -12.951666831970215
    9. '  ' → logprob: -13.076666831970215
    10. '    ' → logprob: -14.451666831970215

Token 355: ' process' (ID: 2273)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04903842508792877
    2. '1' → logprob: -3.6740384101867676
    3. ' ' → logprob: -3.7990384101867676
    4. 'dfs' → logprob: -10.674038887023926
    5. 'i' → logprob: -11.049038887023926
    6. '   ' → logprob: -11.299038887023926
    7. 'find' → logprob: -11.299038887023926
    8. ' i' → logprob: -12.424038887023926
    9. '  ' → logprob: -12.549038887023926
    10. 'chain' → logprob: -12.799038887023926

Token 356: '_chain' (ID: 74449)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0030145496129989624
    2. '_chain' → logprob: -6.62801456451416
    3. '(' → logprob: -7.12801456451416
    4. 'chain' → logprob: -7.75301456451416
    5. '(ok' → logprob: -8.12801456451416
    6. '(chain' → logprob: -9.62801456451416
    7. '_cycle' → logprob: -11.12801456451416
    8. '(
' → logprob: -11.37801456451416
    9. 'i' → logprob: -11.75301456451416
    10. '(len' → logprob: -12.00301456451416

Token 357: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16104833781719208
    2. '(ok' → logprob: -1.9110482931137085
    3. '(' → logprob: -7.161048412322998
    4. 'ok' → logprob: -11.16104793548584
    5. '(len' → logprob: -11.28604793548584
    6. ' (' → logprob: -11.41104793548584
    7. '(
' → logprob: -13.03604793548584
    8. '   ' → logprob: -13.41104793548584
    9. ' ok' → logprob: -13.53604793548584
    10. '```' → logprob: -14.41104793548584

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013846253568772227
    2. ')' → logprob: -10.000138282775879
    3. ' ,' → logprob: -10.000138282775879
    4. '   ' → logprob: -11.125138282775879
    5. '           ' → logprob: -11.375138282775879
    6. 'def' → logprob: -12.500138282775879
    7. ',
' → logprob: -12.750138282775879
    8. '       ' → logprob: -13.000138282775879
    9. '          ' → logprob: -13.125138282775879
    10. ')
' → logprob: -13.750138282775879

Token 359: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.027577335014939308
    2. ' ok' → logprob: -4.4025774002075195
    3. 'visited' → logprob: -4.6525774002075195
    4. 'len' → logprob: -5.4025774002075195
    5. '   ' → logprob: -8.02757740020752
    6. ' visited' → logprob: -8.15257740020752
    7. ' len' → logprob: -9.27757740020752
    8. 'i' → logprob: -9.90257740020752
    9. '  ' → logprob: -9.90257740020752
    10. ' ' → logprob: -10.90257740020752

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033951509976759553
    2. ')' → logprob: -8.37533950805664
    3. ' ,' → logprob: -9.62533950805664
    4. '   ' → logprob: -11.37533950805664
    5. 'visited' → logprob: -11.50033950805664
    6. ',len' → logprob: -11.62533950805664
    7. ',
' → logprob: -13.25033950805664
    8. ',i' → logprob: -13.50033950805664
    9. ')
' → logprob: -13.62533950805664
    10. 'def' → logprob: -14.00033950805664

Token 361: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03448598459362984
    2. ' visited' → logprob: -4.034485816955566
    3. 'len' → logprob: -4.159485816955566
    4. ' len' → logprob: -8.284485816955566
    5. '   ' → logprob: -8.784485816955566
    6. 'ok' → logprob: -9.034485816955566
    7. ' ok' → logprob: -11.409485816955566
    8. '  ' → logprob: -11.534485816955566
    9. ' ' → logprob: -11.534485816955566
    10. '    ' → logprob: -11.909485816955566

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12025174498558044
    2. ')' → logprob: -2.2452516555786133
    3. ',len' → logprob: -5.495251655578613
    4. ')
' → logprob: -5.995251655578613
    5. '   ' → logprob: -7.745251655578613
    6. ' ,' → logprob: -8.370251655578613
    7. ' )' → logprob: -10.870251655578613
    8. 'def' → logprob: -11.120251655578613
    9. ')

' → logprob: -11.370251655578613
    10. '           ' → logprob: -11.745251655578613

Token 363: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.021737655624747276
    2. ' len' → logprob: -3.896737575531006
    3. '   ' → logprob: -7.771737575531006
    4. 'visited' → logprob: -8.146738052368164
    5. ' ' → logprob: -9.396738052368164
    6. '-' → logprob: -9.396738052368164
    7. '  ' → logprob: -9.521738052368164
    8. 'find' → logprob: -10.146738052368164
    9. '1' → logprob: -10.396738052368164
    10. '    ' → logprob: -10.646738052368164

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00527621153742075
    2. '_t' → logprob: -5.255276203155518
    3. 't' → logprob: -11.005276679992676
    4. ')' → logprob: -11.880276679992676
    5. ')
' → logprob: -12.442776679992676
    6. '_s' → logprob: -13.067776679992676
    7. ',' → logprob: -13.380276679992676
    8. '_' → logprob: -13.567776679992676
    9. '   ' → logprob: -13.692776679992676
    10. '
' → logprob: -13.755276679992676

Token 365: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6638485789299011
    2. ')' → logprob: -1.038848638534546
    3. ',' → logprob: -2.038848638534546
    4. '   ' → logprob: -7.163848400115967
    5. '           ' → logprob: -9.038848876953125
    6. ')
' → logprob: -9.413848876953125
    7. ')

' → logprob: -10.288848876953125
    8. '       ' → logprob: -10.788848876953125
    9. '               ' → logprob: -11.413848876953125
    10. 'def' → logprob: -11.788848876953125

Token 366: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01540842279791832
    2. ' len' → logprob: -4.390408515930176
    3. '   ' → logprob: -6.140408515930176
    4. '  ' → logprob: -8.765408515930176
    5. 'visited' → logprob: -8.765408515930176
    6. 'find' → logprob: -9.640408515930176
    7. ' ' → logprob: -9.765408515930176
    8. '-' → logprob: -9.890408515930176
    9. '    ' → logprob: -10.140408515930176
    10. 'ok' → logprob: -10.515408515930176

Token 367: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0003718046355061233
    2. '0' → logprob: -8.500371932983398
    3. 't' → logprob: -8.750371932983398
    4. ')' → logprob: -12.125371932983398
    5. '```' → logprob: -13.750371932983398
    6. '_i' → logprob: -14.375371932983398
    7. 'i' → logprob: -15.250371932983398
    8. '_' → logprob: -15.687871932983398
    9. ')_' → logprob: -15.687871932983398
    10. ')t' → logprob: -15.875371932983398

Token 368: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5765798687934875
    2. ')' → logprob: -0.8265798687934875
    3. '           ' → logprob: -7.826580047607422
    4. ')
' → logprob: -9.326580047607422
    5. '   ' → logprob: -9.451580047607422
    6. ',' → logprob: -10.576580047607422
    7. '               ' → logprob: -10.826580047607422
    8. '       ' → logprob: -10.951580047607422
    9. ')

' → logprob: -12.201580047607422
    10. ' )
' → logprob: -14.076580047607422

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02970316633582115
    2. '<|end|>' → logprob: -4.404703140258789
    3. ')' → logprob: -4.779703140258789
    4. '       ' → logprob: -5.779703140258789
    5. '               ' → logprob: -6.029703140258789
    6. '<|end|>' → logprob: -7.279703140258789
    7. '   ' → logprob: -7.654703140258789
    8. ',' → logprob: -8.029703140258789
    9. '+' → logprob: -8.404703140258789
    10. '
' → logprob: -8.779703140258789

Token 370: ' if' (ID: 538)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.016695547848939896
    2. 'if' (adapté à ' if') → logprob: -4.266695499420166
    3. ' ret' → logprob: -6.516695499420166
    4. '           ' → logprob: -7.266695499420166
    5. ' if' → logprob: -8.016695976257324
    6. '   ' → logprob: -11.016695976257324
    7. '       ' → logprob: -12.891695976257324
    8. '
' → logprob: -13.016695976257324
    9. '               ' → logprob: -15.016695976257324
    10. '	ret' → logprob: -15.516695976257324

Token 371: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.07889914512634277
    2. ' cnt' → logprob: -2.5788991451263428
    3. '(cnt' → logprob: -12.078899383544922
    4. '	cnt' → logprob: -12.703899383544922
    5. '[cnt' → logprob: -15.453899383544922
    6. '   ' → logprob: -15.703899383544922
    7. 'Cnt' → logprob: -15.953899383544922
    8. '_cnt' → logprob: -16.203899383544922
    9. 'ret' → logprob: -16.703899383544922
    10. 'count' → logprob: -16.953899383544922

Token 372: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740878641605377
    2. ' >' → logprob: -0.9740878343582153
    3. ' ' → logprob: -11.599087715148926
    4. ' >
' → logprob: -14.724087715148926
    5. '   ' → logprob: -15.349087715148926
    6. '>
' → logprob: -15.599087715148926
    7. ' >

' → logprob: -15.724087715148926
    8. '[' → logprob: -15.974087715148926
    9. ' ' → logprob: -16.349088668823242
    10. '>

' → logprob: -16.349088668823242

Token 373: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1738642454147339
    2. 'len' → logprob: -1.2988642454147339
    3. '-' → logprob: -1.5488642454147339
    4. 'float' → logprob: -2.6738643646240234
    5. ' ' → logprob: -3.1738643646240234
    6. ' -' → logprob: -3.5488643646240234
    7. ' len' → logprob: -4.173864364624023
    8. ' float' → logprob: -4.173864364624023
    9. '1' → logprob: -4.548864364624023
    10. 'ret' → logprob: -4.673864364624023

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005950896302238107
    2. '0' → logprob: -8.375595092773438
    3. ' ' → logprob: -9.125595092773438
    4. 'len' → logprob: -9.500595092773438
    5. 'float' → logprob: -10.500595092773438
    6. '2' → logprob: -10.625595092773438
    7. '   ' → logprob: -10.625595092773438
    8. '999' → logprob: -10.625595092773438
    9. 'inf' → logprob: -10.750595092773438
    10. '10' → logprob: -11.500595092773438

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46285292506217957
    2. ':
' → logprob: -1.212852954864502
    3. ':return' → logprob: -3.087852954864502
    4. ' or' → logprob: -4.337852954864502
    5. '               ' → logprob: -4.337852954864502
    6. '           ' → logprob: -6.837852954864502
    7. '):
' → logprob: -9.087852478027344
    8. ',' → logprob: -9.962852478027344
    9. '       ' → logprob: -10.212852478027344
    10. ')' → logprob: -10.462852478027344

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038074308540672064
    2. 'return' → logprob: -6.628807544708252
    3. ' return' → logprob: -6.753807544708252
    4. ' ret' → logprob: -6.878807544708252
    5. 'ret' → logprob: -8.878807067871094
    6. ':return' → logprob: -10.378807067871094
    7. '           ' → logprob: -10.503807067871094
    8. ',' → logprob: -11.503807067871094
    9. '                   ' → logprob: -11.628807067871094
    10. '                       ' → logprob: -11.753807067871094

Token 377: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004081009421497583
    2. '               ' → logprob: -5.754080772399902
    3. ' return' → logprob: -7.379080772399902
    4. 'print' → logprob: -8.504080772399902
    5. '                   ' → logprob: -10.129080772399902
    6. '           ' → logprob: -10.754080772399902
    7. '-' → logprob: -12.754080772399902
    8. '	return' → logprob: -13.004080772399902
    9. '```' → logprob: -13.254080772399902
    10. ':return' → logprob: -13.254080772399902

Token 378: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.522638169466518e-05
    2. 'float' → logprob: -11.000024795532227
    3. ' -' → logprob: -12.375024795532227
    4. '-f' → logprob: -13.250024795532227
    5. '-inf' → logprob: -14.125024795532227
    6. '   ' → logprob: -14.750024795532227
    7. '-max' → logprob: -15.125024795532227
    8. '0' → logprob: -15.750024795532227
    9. '-c' → logprob: -16.375024795532227
    10. '"' → logprob: -16.500024795532227

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '2' → logprob: -12.125009536743164
    3. '100' → logprob: -14.000009536743164
    4. '999' → logprob: -14.000009536743164
    5. '   ' → logprob: -14.375009536743164
    6. '10' → logprob: -14.750009536743164
    7. 'float' → logprob: -15.125009536743164
    8. '111' → logprob: -15.375009536743164
    9. 'inf' → logprob: -15.625009536743164
    10. '-' → logprob: -16.500009536743164

Token 380: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004155329894274473
    2. '
' → logprob: -5.629155158996582
    3. '<|end|>' → logprob: -8.129155158996582
    4. ',' → logprob: -9.754155158996582
    5. '            
' → logprob: -10.004155158996582
    6. '		' → logprob: -10.379155158996582
    7. '               ' → logprob: -10.504155158996582
    8. '<|end|>' → logprob: -10.754155158996582
    9. '       ' → logprob: -11.254155158996582
    10. '          ' → logprob: -11.754155158996582

Token 381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001907855912577361
    2. '       ' → logprob: -8.875190734863281
    3. ',' → logprob: -11.125190734863281
    4. '               ' → logprob: -11.500190734863281
    5. '
' → logprob: -11.750190734863281
    6. '		' → logprob: -12.625190734863281
    7. '<|end|>' → logprob: -12.875190734863281
    8. '```' → logprob: -13.250190734863281
    9. '          ' → logprob: -13.375190734863281
    10. '	       ' → logprob: -13.625190734863281

Token 382: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7002735733985901
    2. 'ret' → logprob: -0.9502735733985901
    3. 'if' → logprob: -2.2002735137939453
    4. ' if' → logprob: -5.825273513793945
    5. ' ret' → logprob: -6.700273513793945
    6. '       ' → logprob: -6.700273513793945
    7. '               ' → logprob: -7.450273513793945
    8. '   ' → logprob: -10.575273513793945
    9. 'elif' → logprob: -10.575273513793945
    10. '
' → logprob: -10.700273513793945

Token 383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -10.750024795532227
    3. ')[' → logprob: -13.875024795532227
    4. '<|end|>' → logprob: -14.125024795532227
    5. '[I' → logprob: -15.000024795532227
    6. '[cnt' → logprob: -15.500024795532227
    7. '```' → logprob: -15.625024795532227
    8. '[c' → logprob: -15.875024795532227
    9. ')' → logprob: -16.125024795532227
    10. '[:]' → logprob: -16.250024795532227

Token 384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016611411410849541
    2. '[i' → logprob: -8.875165939331055
    3. ']=' → logprob: -10.625165939331055
    4. '[' → logprob: -14.500165939331055
    5. ' ]' → logprob: -14.750165939331055
    6. ')' → logprob: -15.000165939331055
    7. 'i' → logprob: -15.125165939331055
    8. '=' → logprob: -16.125165939331055
    9. ']
' → logprob: -16.750165939331055
    10. ']+=' → logprob: -16.875165939331055

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00768056558445096
    2. ' =' → logprob: -4.882680416107178
    3. '[i' → logprob: -9.757680892944336
    4. '[' → logprob: -12.132680892944336
    5. '=i' → logprob: -12.632680892944336
    6. ']=' → logprob: -13.382680892944336
    7. ',' → logprob: -13.632680892944336
    8. ']' → logprob: -14.132680892944336
    9. '+=' → logprob: -14.132680892944336
    10. '<|end|>' → logprob: -14.382680892944336

Token 386: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006635675206780434
    2. 'i' → logprob: -5.631635665893555
    3. '-' → logprob: -6.631635665893555
    4. ' cnt' → logprob: -6.756635665893555
    5. '0' → logprob: -7.756635665893555
    6. '1' → logprob: -10.256635665893555
    7. ' i' → logprob: -10.881635665893555
    8. ' -' → logprob: -10.881635665893555
    9. ' ' → logprob: -11.006635665893555
    10. '	cnt' → logprob: -11.881635665893555

Token 387: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6205329895019531
    2. '
' → logprob: -0.9955329895019531
    3. '<|end|>' → logprob: -2.495532989501953
    4. '<|end|>' → logprob: -5.995532989501953
    5. '       ' → logprob: -6.245532989501953
    6. '		' → logprob: -6.745532989501953
    7. 'else' → logprob: -6.870532989501953
    8. ' else' → logprob: -6.995532989501953
    9. '	       ' → logprob: -7.870532989501953
    10. '   ' → logprob: -7.995532989501953

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012089278548955917
    2. '       ' → logprob: -4.512089252471924
    3. '   ' → logprob: -7.762089252471924
    4. '<|end|>' → logprob: -8.512089729309082
    5. '	       ' → logprob: -9.262089729309082
    6. '		' → logprob: -9.262089729309082
    7. '	' → logprob: -10.012089729309082
    8. ',' → logprob: -10.137089729309082
    9. '               ' → logprob: -10.137089729309082
    10. ' else' → logprob: -11.012089729309082

Token 389: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.0458659790456295
    2. 'if' → logprob: -3.420866012573242
    3. ' ret' → logprob: -5.295866012573242
    4. '           ' → logprob: -5.420866012573242
    5. '   ' → logprob: -7.170866012573242
    6. '       ' → logprob: -7.545866012573242
    7. ' if' → logprob: -7.545866012573242
    8. 'for' → logprob: -7.670866012573242
    9. 'max' → logprob: -8.670866012573242
    10. 'def' → logprob: -9.920866012573242

Token 390: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015196681022644
    2. ' =' → logprob: -1.7015197277069092
    3. '=max' → logprob: -9.201519966125488
    4. 'max' → logprob: -12.326519966125488
    5. '+=' → logprob: -14.326519966125488
    6. ' max' → logprob: -15.076519966125488
    7. '   ' → logprob: -16.201519012451172
    8. ' +=' → logprob: -17.451519012451172
    9. ',max' → logprob: -17.951519012451172
    10. ' ' → logprob: -18.076519012451172

Token 391: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31326186656951904
    2. ' max' → logprob: -1.313261866569519
    3. '	max' → logprob: -16.188261032104492
    4. '(max' → logprob: -17.563261032104492
    5. '_max' → logprob: -17.938261032104492
    6. '[max' → logprob: -19.313261032104492
    7. '   ' → logprob: -19.563261032104492
    8. 'cnt' → logprob: -20.063261032104492
    9. 'Max' → logprob: -20.313261032104492
    10. ',max' → logprob: -20.563261032104492

Token 392: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.000003814697266
    3. 'ret' → logprob: -13.375003814697266
    4. '(cnt' → logprob: -15.500003814697266
    5. '$ret' → logprob: -17.250003814697266
    6. ' ret' → logprob: -17.625003814697266
    7. '(
' → logprob: -17.750003814697266
    8. ' (' → logprob: -18.000003814697266
    9. '	ret' → logprob: -18.250003814697266
    10. '(re' → logprob: -18.750003814697266

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.847109812544659e-05
    2. ' ,' → logprob: -10.250048637390137
    3. '(ret' → logprob: -11.875048637390137
    4. 'ret' → logprob: -12.375048637390137
    5. ',
' → logprob: -14.125048637390137
    6. '(cnt' → logprob: -14.875048637390137
    7. 'cnt' → logprob: -15.000048637390137
    8. ' ret' → logprob: -15.375048637390137
    9. ',c' → logprob: -15.625048637390137
    10. '$ret' → logprob: -17.62504768371582

Token 394: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.03564642742276192
    2. ' cnt' → logprob: -3.410646438598633
    3. 'visited' → logprob: -6.285646438598633
    4. ' visited' → logprob: -9.910646438598633
    5. '   ' → logprob: -10.785646438598633
    6. 'ret' → logprob: -11.035646438598633
    7. '(cnt' → logprob: -11.785646438598633
    8. '	cnt' → logprob: -11.910646438598633
    9. ' ' → logprob: -12.410646438598633
    10. '    ' → logprob: -12.660646438598633

Token 395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002637130208313465
    2. ')
' → logprob: -6.002636909484863
    3. '   ' → logprob: -9.752636909484863
    4. ' )' → logprob: -10.002636909484863
    5. ')return' → logprob: -10.627636909484863
    6. '<|end|>' → logprob: -11.627636909484863
    7. '+' → logprob: -11.752636909484863
    8. '       ' → logprob: -11.877636909484863
    9. '
' → logprob: -12.502636909484863
    10. ')

' → logprob: -13.377636909484863

Token 396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11639676243066788
    2. '       ' → logprob: -3.49139666557312
    3. '<|end|>' → logprob: -3.49139666557312
    4. '	return' → logprob: -3.99139666557312
    5. '    
' → logprob: -4.116396903991699
    6. '
' → logprob: -6.116396903991699
    7. '```' → logprob: -6.616396903991699
    8. '	
' → logprob: -6.991396903991699
    9. 'def' → logprob: -6.991396903991699
    10. '[' → logprob: -7.491396903991699

Token 397: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025942714884877205
    2. '   ' → logprob: -3.775942802429199
    3. ' return' → logprob: -6.025942802429199
    4. '	return' → logprob: -9.0259428024292
    5. ' ' → logprob: -9.1509428024292
    6. '```' → logprob: -11.0259428024292
    7. 'for' → logprob: -11.4009428024292
    8. 'def' → logprob: -11.5259428024292
    9. '
' → logprob: -12.1509428024292
    10. '       ' → logprob: -12.5259428024292

Token 398: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.001170225441455841
    2. ' ret' → logprob: -6.7511701583862305
    3. '(ret' → logprob: -20.126171112060547
    4. '$ret' → logprob: -20.376171112060547
    5. '	ret' → logprob: -20.501171112060547
    6. 'rets' → logprob: -21.501171112060547
    7. '0' → logprob: -22.001171112060547
    8. '_ret' → logprob: -23.251171112060547
    9. 'retval' → logprob: -24.001171112060547
    10. 'rett' → logprob: -24.001171112060547

Token 399: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1024642363190651
    2. '
' → logprob: -2.352464199066162
    3. ' def' → logprob: -6.977464199066162
    4. '<|end|>' → logprob: -6.977464199066162
    5. ' 
' → logprob: -9.47746467590332
    6. '\' → logprob: -9.72746467590332
    7. '

' → logprob: -9.97746467590332
    8. '```' → logprob: -10.35246467590332
    9. '  
' → logprob: -10.47746467590332
    10. '_' → logprob: -10.72746467590332

Token 400: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012987985974177718
    2. ' def' → logprob: -9.625129699707031
    3. '   ' → logprob: -10.750129699707031
    4. '<|end|>' → logprob: -10.750129699707031
    5. '```' → logprob: -12.125129699707031
    6. '[' → logprob: -13.000129699707031
    7. ':' → logprob: -13.125129699707031
    8. '#' → logprob: -13.250129699707031
    9. ':def' → logprob: -13.250129699707031
    10. '...' → logprob: -13.875129699707031

Token 401: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.029756510630249977
    2. ' process' → logprob: -3.529756546020508
    3. 'find' → logprob: -12.779756546020508
    4. 'def' → logprob: -13.779756546020508
    5. 'main' → logprob: -14.654756546020508
    6. '	process' → logprob: -14.779756546020508
    7. ' find' → logprob: -14.904756546020508
    8. 'dfs' → logprob: -15.154756546020508
    9. ' main' → logprob: -16.529756546020508
    10. 'read' → logprob: -16.654756546020508

Token 402: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -1.2664456789934775e-06
    2. '_CHAIN' → logprob: -15.125000953674316
    3. '_cycle' → logprob: -15.375000953674316
    4. '_ch' → logprob: -15.375000953674316
    5. 'chain' → logprob: -15.625000953674316
    6. '_chunk' → logprob: -16.625001907348633
    7. '_queue' → logprob: -16.750001907348633
    8. '_loop' → logprob: -17.250001907348633
    9. '_' → logprob: -17.500001907348633
    10. '```' → logprob: -17.875001907348633

Token 403: '(start' (ID: 20008)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005353979649953544
    2. '(index' → logprob: -8.250535011291504
    3. '(idx' → logprob: -9.250535011291504
    4. '(' → logprob: -9.375535011291504
    5. '(pos' → logprob: -9.875535011291504
    6. '(start' → logprob: -10.750535011291504
    7. '(current' → logprob: -11.625535011291504
    8. '(node' → logprob: -12.250535011291504
    9. '(position' → logprob: -13.625535011291504
    10. '(x' → logprob: -14.125535011291504

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ' ,' → logprob: -11.750016212463379
    3. ',
' → logprob: -12.000016212463379
    4. ',i' → logprob: -13.625016212463379
    5. '_,' → logprob: -15.125016212463379
    6. '   ' → logprob: -15.625016212463379
    7. ',start' → logprob: -15.625016212463379
    8. '):' → logprob: -17.250015258789062
    9. '‌,' → logprob: -17.625015258789062
    10. 'i' → logprob: -17.625015258789062

Token 405: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.16028037667274475
    2. ' ok' → logprob: -1.9102803468704224
    3. '   ' → logprob: -10.535280227661133
    4. 'visited' → logprob: -12.035280227661133
    5. ' ' → logprob: -12.535280227661133
    6. 'okay' → logprob: -13.285280227661133
    7. '	ok' → logprob: -13.410280227661133
    8. '    ' → logprob: -13.660280227661133
    9. '  ' → logprob: -13.660280227661133
    10. ' okay' → logprob: -13.785280227661133

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.500018119812012
    4. ',
' → logprob: -15.000018119812012
    5. '[],' → logprob: -17.875017166137695
    6. 'def' → logprob: -18.250017166137695
    7. '_,' → logprob: -18.250017166137695
    8. '```' → logprob: -18.375017166137695
    9. ',array' → logprob: -18.500017166137695
    10. ',start' → logprob: -18.625017166137695

Token 407: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.003601974807679653
    2. ' visited' → logprob: -5.628602027893066
    3. 'len' → logprob: -13.628602027893066
    4. '   ' → logprob: -14.753602027893066
    5. ' ' → logprob: -16.00360107421875
    6. '
' → logprob: -17.12860107421875
    7. 'visible' → logprob: -17.37860107421875
    8. ' len' → logprob: -17.50360107421875
    9. 'vis' → logprob: -17.75360107421875
    10. 'Visited' → logprob: -17.87860107421875

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -11.125036239624023
    3. ',len' → logprob: -11.250036239624023
    4. ',length' → logprob: -11.875036239624023
    5. ',int' → logprob: -15.000036239624023
    6. ',
' → logprob: -15.000036239624023
    7. ',size' → logprob: -15.500036239624023
    8. '   ' → logprob: -16.000036239624023
    9. 'def' → logprob: -16.125036239624023
    10. ',n' → logprob: -17.125036239624023

Token 409: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029818760231137276
    2. ' len' → logprob: -3.5298187732696533
    3. '   ' → logprob: -10.279818534851074
    4. 'length' → logprob: -11.529818534851074
    5. 'visited' → logprob: -11.904818534851074
    6. ' ' → logprob: -12.154818534851074
    7. '  ' → logprob: -13.154818534851074
    8. '	len' → logprob: -13.654818534851074
    9. 'def' → logprob: -13.904818534851074
    10. '    ' → logprob: -14.029818534851074

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001499060745118186
    2. '_t' → logprob: -9.375149726867676
    3. ',' → logprob: -11.250149726867676
    4. ')' → logprob: -11.500149726867676
    5. '_s' → logprob: -11.875149726867676
    6. '   ' → logprob: -11.875149726867676
    7. '_' → logprob: -12.250149726867676
    8. '(' → logprob: -12.250149726867676
    9. '```' → logprob: -12.625149726867676
    10. 't' → logprob: -12.875149726867676

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -10.75002670288086
    3. '   ' → logprob: -13.00002670288086
    4. ',
' → logprob: -13.25002670288086
    5. ',len' → logprob: -14.37502670288086
    6. 'def' → logprob: -15.62502670288086
    7. ',t' → logprob: -16.12502670288086
    8. '_,' → logprob: -16.25002670288086
    9. ',length' → logprob: -16.87502670288086
    10. ',

' → logprob: -17.25002670288086

Token 412: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.033758074045181274
    2. ' len' → logprob: -3.4087581634521484
    3. '   ' → logprob: -9.408758163452148
    4. ' ' → logprob: -11.783758163452148
    5. '  ' → logprob: -11.908758163452148
    6. '    ' → logprob: -12.408758163452148
    7. '       ' → logprob: -13.033758163452148
    8. 'length' → logprob: -13.158758163452148
    9. 'def' → logprob: -13.533758163452148
    10. '      ' → logprob: -14.158758163452148

Token 413: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0009103906922973692
    2. 't' → logprob: -7.87591028213501
    3. '0' → logprob: -8.000910758972168
    4. '):
' → logprob: -9.250910758972168
    5. '   ' → logprob: -10.500910758972168
    6. '):' → logprob: -11.000910758972168
    7. ')' → logprob: -11.125910758972168
    8. ',' → logprob: -11.375910758972168
    9. '```' → logprob: -12.250910758972168
    10. '_' → logprob: -12.375910758972168

Token 414: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05498191714286804
    2. '):
' → logprob: -2.9299819469451904
    3. ',' → logprob: -9.55498218536377
    4. '   ' → logprob: -11.42998218536377
    5. '):
' → logprob: -11.67998218536377
    6. ')' → logprob: -11.92998218536377
    7. '):

' → logprob: -13.55498218536377
    8. ' ):' → logprob: -14.17998218536377
    9. ':' → logprob: -14.30498218536377
    10. 'def' → logprob: -16.679981231689453

Token 415: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5520601272583008
    2. '   ' → logprob: -1.0520601272583008
    3. 'pos' → logprob: -3.302060127258301
    4. 'count' → logprob: -4.177060127258301
    5. 'current' → logprob: -4.677060127258301
    6. 'cnt' → logprob: -5.177060127258301
    7. 'cur' → logprob: -5.677060127258301
    8. 'idx' → logprob: -6.802060127258301
    9. ' if' → logprob: -7.052060127258301
    10. 'chain' → logprob: -7.177060127258301

Token 416: ' j' (ID: 441)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8539872169494629
    2. 'current' → logprob: -1.728987216949463
    3. 'cur' → logprob: -2.353987216949463
    4. 'if' → logprob: -2.478987216949463
    5. 'chain' → logprob: -2.728987216949463
    6. 'idx' → logprob: -3.353987216949463
    7. 'cnt' → logprob: -3.478987216949463
    8. 'curr' → logprob: -3.978987216949463
    9. 'visited' → logprob: -3.978987216949463
    10. 'path' → logprob: -4.103987216949463

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143301784992218
    2. ' =' → logprob: -1.7014330625534058
    3. '=start' → logprob: -10.951433181762695
    4. '=j' → logprob: -14.576433181762695
    5. '=
' → logprob: -14.951433181762695
    6. ',' → logprob: -15.201433181762695
    7. '=int' → logprob: -15.326433181762695
    8. '=i' → logprob: -15.451433181762695
    9. ' ' → logprob: -15.951433181762695
    10. '=end' → logprob: -16.076433181762695

Token 418: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04987505450844765
    2. '(start' → logprob: -3.049875020980835
    3. ' start' → logprob: -7.424875259399414
    4. '(' → logprob: -7.799875259399414
    5. ' (' → logprob: -8.674875259399414
    6. '0' → logprob: -10.049875259399414
    7. '[start' → logprob: -11.299875259399414
    8. '(s' → logprob: -11.799875259399414
    9. '((' → logprob: -11.924875259399414
    10. ' ' → logprob: -12.924875259399414

Token 419: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17760615050792694
    2. '   ' → logprob: -1.9276061058044434
    3. 'while' → logprob: -4.927606105804443
    4. '+' → logprob: -5.927606105804443
    5. 'def' → logprob: -6.677606105804443
    6. ',' → logprob: -6.677606105804443
    7. ' while' → logprob: -7.302606105804443
    8. 'count' → logprob: -7.427606105804443
    9. ' +' → logprob: -7.552606105804443
    10. '    
' → logprob: -7.677606105804443

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060124341398477554
    2. '
' → logprob: -3.685124397277832
    3. 'while' → logprob: -4.935124397277832
    4. 'count' → logprob: -5.435124397277832
    5. '<|end|>' → logprob: -5.435124397277832
    6. 'cnt' → logprob: -5.810124397277832
    7. '+' → logprob: -5.810124397277832
    8. 'def' → logprob: -6.060124397277832
    9. ',' → logprob: -6.310124397277832
    10. '```' → logprob: -6.560124397277832

Token 421: ' count' (ID: 3605)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1995515376329422
    2. 'count' (adapté à ' count') → logprob: -1.9495515823364258
    3. 'chain' → logprob: -3.449551582336426
    4. 'length' → logprob: -5.574551582336426
    5. '   ' → logprob: -6.324551582336426
    6. 'visited' → logprob: -7.199551582336426
    7. 'seen' → logprob: -9.074551582336426
    8. 'while' → logprob: -9.824551582336426
    9. 'steps' → logprob: -10.074551582336426
    10. 'depth' → logprob: -10.074551582336426

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231955051422119
    2. '=' → logprob: -0.8981955051422119
    3. ' ' → logprob: -9.898195266723633
    4. '   ' → logprob: -11.648195266723633
    5. ':' → logprob: -12.523195266723633
    6. ' +=' → logprob: -13.273195266723633
    7. '  ' → logprob: -13.523195266723633
    8. '+' → logprob: -13.648195266723633
    9. ',' → logprob: -14.023195266723633
    10. 's' → logprob: -14.148195266723633

Token 423: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008090290939435363
    2. '1' → logprob: -7.375809192657471
    3. ' ' → logprob: -8.625808715820312
    4. '   ' → logprob: -13.375808715820312
    5. '```' → logprob: -14.688308715820312
    6. '۰' → logprob: -15.438308715820312
    7. '-' → logprob: -15.500808715820312
    8. '<|end|>' → logprob: -16.375808715820312
    9. '=' → logprob: -16.563308715820312
    10. '2' → logprob: -16.813308715820312

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002624086628202349
    2. '1' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.125262260437012
    4. '```' → logprob: -16.375263214111328
    5. '-' → logprob: -16.562763214111328
    6. '۰' → logprob: -16.875263214111328
    7. '   ' → logprob: -17.062763214111328
    8. '[' → logprob: -17.687763214111328
    9. '(' → logprob: -18.000263214111328
    10. '`' → logprob: -18.125263214111328

Token 425: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0018636647146195173
    2. '   ' → logprob: -7.376863479614258
    3. ' 
' → logprob: -7.876863479614258
    4. '<|end|>' → logprob: -8.001863479614258
    5. '  
' → logprob: -8.501863479614258
    6. '    
' → logprob: -9.376863479614258
    7. ' while' → logprob: -10.001863479614258
    8. '	
' → logprob: -10.251863479614258
    9. '
' → logprob: -10.751863479614258
    10. '<|end|>' → logprob: -10.876863479614258

Token 426: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.635685384273529
    2. ' while' → logprob: -1.3856854438781738
    3. '<|end|>' → logprob: -2.510685443878174
    4. '   ' → logprob: -2.760685443878174
    5. '	while' → logprob: -3.260685443878174
    6. 'while' → logprob: -3.385685443878174
    7. ' 
' → logprob: -7.135685443878174
    8. '<|end|>' → logprob: -7.510685443878174
    9. '    
' → logprob: -7.635685443878174
    10. '[' → logprob: -8.260684967041016

Token 427: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0019098350312560797
    2. 'visited' → logprob: -6.5019097328186035
    3. 'seen' → logprob: -7.8769097328186035
    4. '   ' → logprob: -11.251910209655762
    5. 'step' → logprob: -12.376910209655762
    6. ' while' → logprob: -12.501910209655762
    7. 'steps' → logprob: -13.126910209655762
    8. 'chain' → logprob: -13.751910209655762
    9. 'indices' → logprob: -13.876910209655762
    10. '```' → logprob: -14.751910209655762

Token 428: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.32931575179100037
    2. 'j' → logprob: -1.5793157815933228
    3. 'visited' → logprob: -3.329315662384033
    4. 'True' → logprob: -3.454315662384033
    5. ' ok' → logprob: -5.579315662384033
    6. '0' → logprob: -6.954315662384033
    7. ' j' → logprob: -7.204315662384033
    8. 'count' → logprob: -7.954315662384033
    9. ' True' → logprob: -7.954315662384033
    10. 'not' → logprob: -8.079316139221191

Token 429: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.610702363715973e-06
    2. 'j' → logprob: -12.250009536743164
    3. '[' → logprob: -12.875009536743164
    4. '[i' → logprob: -14.500009536743164
    5. '[
' → logprob: -14.750009536743164
    6. '
' → logprob: -14.875009536743164
    7. '.get' → logprob: -15.000009536743164
    8. ' [' → logprob: -15.875009536743164
    9. '[get' → logprob: -15.875009536743164
    10. '```' → logprob: -16.625009536743164

Token 430: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6050449013710022
    2. ']:
' → logprob: -0.9800449013710022
    3. ']:' → logprob: -2.6050448417663574
    4. ']==' → logprob: -5.855044841766357
    5. ' ]' → logprob: -6.980044841766357
    6. ']:

' → logprob: -8.605045318603516
    7. ']:
' → logprob: -8.730045318603516
    8. '[j' → logprob: -8.980045318603516
    9. ' and' → logprob: -9.105045318603516
    10. 'and' → logprob: -9.230045318603516

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15961560606956482
    2. ' and' → logprob: -2.1596155166625977
    3. 'and' → logprob: -3.9096155166625977
    4. '   ' → logprob: -5.159615516662598
    5. 'j' → logprob: -5.534615516662598
    6. ':
' → logprob: -7.159615516662598
    7. ':' → logprob: -7.409615516662598
    8. '```' → logprob: -7.909615516662598
    9. ' j' → logprob: -9.034615516662598
    10. '<|end|>' → logprob: -9.159615516662598

Token 432: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0847800076007843
    2. 'visited' → logprob: -3.334779977798462
    3. 'count' → logprob: -3.584779977798462
    4. '       ' → logprob: -5.334780216217041
    5. 'next' → logprob: -5.459780216217041
    6. '           ' → logprob: -5.709780216217041
    7. 'j' → logprob: -5.709780216217041
    8. 'index' → logprob: -7.709780216217041
    9. '   ' → logprob: -7.709780216217041
    10. 'idx' → logprob: -7.834780216217041

Token 433: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -6.384836888173595e-05
    2. 'j' → logprob: -9.7500638961792
    3. ' visited' → logprob: -12.1250638961792
    4. '   ' → logprob: -16.375062942504883
    5. 'vis' → logprob: -18.250062942504883
    6. 'v' → logprob: -18.250062942504883
    7. 'Visited' → logprob: -18.625062942504883
    8. '  ' → logprob: -18.625062942504883
    9. 'visit' → logprob: -18.750062942504883
    10. ' j' → logprob: -18.875062942504883

Token 434: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4855663721391466e-05
    2. 'j' → logprob: -11.750015258789062
    3. '[' → logprob: -12.375015258789062
    4. '[
' → logprob: -13.375015258789062
    5. '==' → logprob: -15.250015258789062
    6. ' [' → logprob: -15.625015258789062
    7. '```' → logprob: -15.750015258789062
    8. '[i' → logprob: -15.875015258789062
    9. '
' → logprob: -15.875015258789062
    10. '[js' → logprob: -16.875015258789062

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49762582778930664
    2. ']==' → logprob: -1.1226258277893066
    3. ']!=' → logprob: -2.9976258277893066
    4. '==' → logprob: -4.247625827789307
    5. '!=' → logprob: -6.997625827789307
    6. ')' → logprob: -7.747625827789307
    7. '[j' → logprob: -8.122625350952148
    8. ')==' → logprob: -8.247625350952148
    9. ']>=' → logprob: -8.997625350952148
    10. ')!=' → logprob: -9.122625350952148

Token 436: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2563958466053009
    2. '==' → logprob: -1.5063958168029785
    3. ' !=' → logprob: -5.6313958168029785
    4. '>=' → logprob: -7.7563958168029785
    5. '!=-' → logprob: -8.256396293640137
    6. ' ==' → logprob: -9.006396293640137
    7. ']!=' → logprob: -11.631396293640137
    8. '()!=' → logprob: -11.756396293640137
    9. '```' → logprob: -11.756396293640137
    10. '=' → logprob: -11.756396293640137

Token 437: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.027225754223764e-05
    2. ' -' → logprob: -9.750060081481934
    3. '0' → logprob: -14.125060081481934
    4. '   ' → logprob: -14.375060081481934
    5. ' ' → logprob: -15.000060081481934
    6. '-j' → logprob: -16.12506103515625
    7. '1' → logprob: -16.37506103515625
    8. '-start' → logprob: -17.00006103515625
    9. '	' → logprob: -17.62506103515625
    10. '  ' → logprob: -17.87506103515625

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.875000953674316
    3. '-' → logprob: -15.250000953674316
    4. '2' → logprob: -15.687500953674316
    5. '```' → logprob: -16.812501907348633
    6. ' -' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '

' → logprob: -18.437501907348633
    9. '۱' → logprob: -18.500001907348633
    10. '`' → logprob: -19.062501907348633

Token 439: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2354213446378708
    2. ':
' → logprob: -1.6104212999343872
    3. ':return' → logprob: -5.235421180725098
    4. ' and' → logprob: -5.610421180725098
    5. ' or' → logprob: -7.985421180725098
    6. 'and' → logprob: -8.235421180725098
    7. '           ' → logprob: -9.110421180725098
    8. '       ' → logprob: -9.360421180725098
    9. ' :' → logprob: -10.735421180725098
    10. '):
' → logprob: -10.735421180725098

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07103494554758072
    2. 'return' → logprob: -3.3210349082946777
    3. '       ' → logprob: -3.6960349082946777
    4. ' return' → logprob: -5.321034908294678
    5. '   ' → logprob: -6.696034908294678
    6. 'if' → logprob: -7.196034908294678
    7. ' if' → logprob: -7.446034908294678
    8. '```' → logprob: -9.321035385131836
    9. '               ' → logprob: -9.821035385131836
    10. '	return' → logprob: -11.946035385131836

Token 441: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02895035594701767
    2. 'if' → logprob: -3.7789504528045654
    3. ' return' → logprob: -5.653950214385986
    4. '           ' → logprob: -6.528950214385986
    5. '       ' → logprob: -8.028950691223145
    6. ' if' → logprob: -8.778950691223145
    7. '   ' → logprob: -8.778950691223145
    8. 'count' (adapté à ' count') → logprob: -9.403950691223145
    9. '               ' → logprob: -13.153950691223145
    10. '
' → logprob: -13.278950691223145

Token 442: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08005137741565704
    2. '+=' → logprob: -2.7050514221191406
    3. ' =' → logprob: -4.955051422119141
    4. ' +=' → logprob: -5.830051422119141
    5. '==' → logprob: -10.33005142211914
    6. '+' → logprob: -10.95505142211914
    7. '-=' → logprob: -11.70505142211914
    8. '=-' → logprob: -11.83005142211914
    9. ',' → logprob: -12.83005142211914
    10. ' ==' → logprob: -12.95505142211914

Token 443: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.0325924449716695e-05
    2. ' visited' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. '
' → logprob: -17.375009536743164
    5. 'visit' → logprob: -18.375009536743164
    6. '0' → logprob: -18.625009536743164
    7. '(' → logprob: -19.125009536743164
    8. ' ' → logprob: -19.750009536743164
    9. 'vis' → logprob: -19.750009536743164
    10. '-' → logprob: -19.750009536743164

Token 444: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.641841820150148e-05
    2. 'j' → logprob: -10.75002670288086
    3. '[' → logprob: -12.25002670288086
    4. '[js' → logprob: -16.62502670288086
    5. '[q' → logprob: -17.87502670288086
    6. '	j' → logprob: -18.25002670288086
    7. '[next' → logprob: -18.62502670288086
    8. '[
' → logprob: -18.75002670288086
    9. '(j' → logprob: -18.75002670288086
    10. '```' → logprob: -18.75002670288086

Token 445: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05548897385597229
    2. ']' → logprob: -2.9304890632629395
    3. '[j' → logprob: -7.5554890632629395
    4. '
' → logprob: -10.305488586425781
    5. ']
' → logprob: -11.180488586425781
    6. 'return' → logprob: -11.805488586425781
    7. '       ' → logprob: -12.055488586425781
    8. '[
' → logprob: -12.430488586425781
    9. '           ' → logprob: -12.555488586425781
    10. 'j' → logprob: -12.930488586425781

Token 446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003643058007583022
    2. '               ' → logprob: -8.375364303588867
    3. '       ' → logprob: -9.625364303588867
    4. '                   ' → logprob: -10.375364303588867
    5. '		' → logprob: -11.875364303588867
    6. '
' → logprob: -12.000364303588867
    7. 'return' → logprob: -12.250364303588867
    8. ' return' → logprob: -12.750364303588867
    9. '                       ' → logprob: -12.875364303588867
    10. '```' → logprob: -12.875364303588867

Token 447: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.17492453753948212
    2. 'return' → logprob: -1.9249244928359985
    3. '           ' → logprob: -4.924924373626709
    4. ' break' → logprob: -5.049924373626709
    5. ' return' → logprob: -7.549924373626709
    6. '       ' → logprob: -8.174924850463867
    7. '   ' → logprob: -9.174924850463867
    8. '               ' → logprob: -12.549924850463867
    9. '	break' → logprob: -12.674924850463867
    10. '```' → logprob: -14.549924850463867

Token 448: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6443984508514404
    2. '       ' → logprob: -0.7693984508514404
    3. '<|end|>' → logprob: -4.7693986892700195
    4. '        
' → logprob: -7.0193986892700195
    5. 'j' → logprob: -7.1443986892700195
    6. '\n' → logprob: -7.8943986892700195
    7. '    
' → logprob: -8.51939868927002
    8. '   ' → logprob: -8.89439868927002
    9. '<|end|>' → logprob: -9.14439868927002
    10. '  
' → logprob: -9.14439868927002

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006291598547250032
    2. '
' → logprob: -7.87562894821167
    3. '   ' → logprob: -9.625629425048828
    4. 'j' → logprob: -9.750629425048828
    5. '	' → logprob: -10.000629425048828
    6. '        
' → logprob: -10.625629425048828
    7. ' j' → logprob: -11.750629425048828
    8. ' else' → logprob: -11.875629425048828
    9. '```' → logprob: -12.000629425048828
    10. '           ' → logprob: -12.375629425048828

Token 450: ' count' (ID: 3605)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6812100410461426
    2. 'j' → logprob: -1.0562100410461426
    3. '       ' → logprob: -2.5562100410461426
    4. '   ' → logprob: -3.5562100410461426
    5. ' visited' → logprob: -4.306210041046143
    6. 'if' → logprob: -4.306210041046143
    7. ' j' → logprob: -4.681210041046143
    8. 'count' (adapté à ' count') → logprob: -6.306210041046143
    9. ' if' → logprob: -6.806210041046143
    10. '```' → logprob: -8.306209564208984

Token 451: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014249061234295368
    2. ' +=' → logprob: -4.264248847961426
    3. '   ' → logprob: -9.639248847961426
    4. '=' → logprob: -11.889248847961426
    5. ']+=' → logprob: -12.264248847961426
    6. '```' → logprob: -12.514248847961426
    7. '+' → logprob: -13.514248847961426
    8. ',' → logprob: -13.639248847961426
    9. ' ' → logprob: -14.514248847961426
    10. '  ' → logprob: -14.639248847961426

Token 452: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015335931675508618
    2. 'len' → logprob: -9.375153541564941
    3. ' ' → logprob: -9.625153541564941
    4. '   ' → logprob: -13.875153541564941
    5. ' len' → logprob: -15.187653541564941
    6. '2' → logprob: -15.375153541564941
    7. 'ok' → logprob: -15.625153541564941
    8. '
' → logprob: -16.312652587890625
    9. '  ' → logprob: -16.500152587890625
    10. '(len' → logprob: -16.625152587890625

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. 'len' → logprob: -10.125060081481934
    3. ' ' → logprob: -10.875060081481934
    4. 'ok' → logprob: -14.375060081481934
    5. '2' → logprob: -15.250060081481934
    6. '   ' → logprob: -15.812560081481934
    7. '
' → logprob: -16.00006103515625
    8. '(' → logprob: -16.93756103515625
    9. ' len' → logprob: -16.93756103515625
    10. '(len' → logprob: -17.18756103515625

Token 454: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007513284217566252
    2. 'j' → logprob: -5.507513046264648
    3. '       ' → logprob: -7.382513046264648
    4. '\n' → logprob: -7.507513046264648
    5. '   ' → logprob: -7.632513046264648
    6. ' j' → logprob: -7.757513046264648
    7. ' 
' → logprob: -8.007513046264648
    8. '    
' → logprob: -8.257513046264648
    9. '  
' → logprob: -8.507513046264648
    10. '        
' → logprob: -9.132513046264648

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036353882402181625
    2. '
' → logprob: -4.411354064941406
    3. '```' → logprob: -4.411354064941406
    4. '   ' → logprob: -5.161354064941406
    5. 'j' → logprob: -5.786354064941406
    6. ' j' → logprob: -7.411354064941406
    7. '        
' → logprob: -7.786354064941406
    8. '	j' → logprob: -7.786354064941406
    9. '``' → logprob: -7.911354064941406
    10. ',' → logprob: -8.161354064941406

Token 456: ' visited' (ID: 18416)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -12.875003814697266
    3. '       ' → logprob: -14.375003814697266
    4. ' j' → logprob: -14.625003814697266
    5. '```' → logprob: -15.875003814697266
    6. 'next' → logprob: -16.125003814697266
    7. '
' → logprob: -16.750003814697266
    8. '	j' → logprob: -18.125003814697266
    9. '           ' → logprob: -18.250003814697266
    10. 'if' → logprob: -18.375003814697266

Token 457: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.500011444091797
    3. '[
' → logprob: -14.875011444091797
    4. '```' → logprob: -14.875011444091797
    5. '[js' → logprob: -15.625011444091797
    6. 'j' → logprob: -16.000011444091797
    7. '=j' → logprob: -16.750011444091797
    8. ',j' → logprob: -16.875011444091797
    9. '	j' → logprob: -16.875011444091797
    10. '[i' → logprob: -17.000011444091797

Token 458: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01144400518387556
    2. '+' → logprob: -5.511444091796875
    3. '=' → logprob: -5.511444091796875
    4. ' =' → logprob: -7.011444091796875
    5. '+=' → logprob: -7.261444091796875
    6. ' +=' → logprob: -7.261444091796875
    7. ']=' → logprob: -8.261444091796875
    8. ']+=' → logprob: -8.386444091796875
    9. '[j' → logprob: -8.886444091796875
    10. ' ]' → logprob: -9.511444091796875

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5923175811767578
    2. ' =' → logprob: -0.8423175811767578
    3. '[j' → logprob: -4.342317581176758
    4. ' +=' → logprob: -6.467317581176758
    5. '[' → logprob: -7.092317581176758
    6. '+=' → logprob: -7.592317581176758
    7. '   ' → logprob: -9.592317581176758
    8. ',' → logprob: -9.717317581176758
    9. '=j' → logprob: -9.842317581176758
    10. '```' → logprob: -10.717317581176758

Token 460: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00027301779482513666
    2. 'count' → logprob: -8.500272750854492
    3. '0' → logprob: -9.750272750854492
    4. ' -' → logprob: -12.125272750854492
    5. 'j' → logprob: -13.250272750854492
    6. '-count' → logprob: -13.250272750854492
    7. ' ' → logprob: -13.375272750854492
    8. '   ' → logprob: -15.125272750854492
    9. '-j' → logprob: -15.500272750854492
    10. '  ' → logprob: -16.375272750854492

Token 461: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00016063073417171836
    2. 'count' → logprob: -9.375160217285156
    3. '0' → logprob: -9.625160217285156
    4. '-count' → logprob: -11.875160217285156
    5. ' -' → logprob: -13.500160217285156
    6. '-j' → logprob: -14.250160217285156
    7. ' ' → logprob: -15.125160217285156
    8. 'j' → logprob: -15.250160217285156
    9. '   ' → logprob: -16.875160217285156
    10. '-c' → logprob: -17.500160217285156

Token 462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016760177677497268
    2. '   ' → logprob: -6.501676082611084
    3. 'j' → logprob: -9.626675605773926
    4. '
' → logprob: -10.876675605773926
    5. '```' → logprob: -11.251675605773926
    6. '           ' → logprob: -11.376675605773926
    7. ' j' → logprob: -11.376675605773926
    8. '	' → logprob: -11.501675605773926
    9. ' ' → logprob: -11.626675605773926
    10. ',' → logprob: -11.751675605773926

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10346544533967972
    2. '   ' → logprob: -3.3534655570983887
    3. '	j' → logprob: -3.3534655570983887
    4. 'j' → logprob: -3.8534655570983887
    5. '```' → logprob: -6.478465557098389
    6. '
' → logprob: -6.728465557098389
    7. '        
' → logprob: -6.728465557098389
    8. '	' → logprob: -7.103465557098389
    9. ' j' → logprob: -7.103465557098389
    10. ' ' → logprob: -8.47846508026123

Token 464: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.002431428525596857
    2. '       ' → logprob: -6.127431392669678
    3. 'next' → logprob: -8.627431869506836
    4. '   ' → logprob: -10.002431869506836
    5. ' j' → logprob: -12.002431869506836
    6. 'if' → logprob: -12.377431869506836
    7. '```' → logprob: -12.377431869506836
    8. '           ' → logprob: -12.752431869506836
    9. '	j' → logprob: -14.002431869506836
    10. 'prev' → logprob: -14.252431869506836

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.502558171749115
    2. '+=' → logprob: -1.0025582313537598
    3. ' =' → logprob: -4.00255823135376
    4. ' +=' → logprob: -4.62755823135376
    5. '+' → logprob: -11.252557754516602
    6. '=(' → logprob: -11.377557754516602
    7. '+=(' → logprob: -13.127557754516602
    8. '-=' → logprob: -13.502557754516602
    9. '*=' → logprob: -13.627557754516602
    10. '   ' → logprob: -14.377557754516602

Token 466: ' next' (ID: 2613)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00010771531378850341
    2. ' (' → logprob: -9.375107765197754
    3. '(' → logprob: -11.750107765197754
    4. '   ' → logprob: -12.250107765197754
    5. 'j' → logprob: -12.625107765197754
    6. '[j' → logprob: -13.500107765197754
    7. '
' → logprob: -13.875107765197754
    8. '(i' → logprob: -13.875107765197754
    9. '(next' → logprob: -14.625107765197754
    10. '((' → logprob: -15.125107765197754

Token 467: '_index' (ID: 7748)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.011056899093091488
    2. ' (' → logprob: -5.386056900024414
    3. 'j' → logprob: -6.386056900024414
    4. '
' → logprob: -6.511056900024414
    5. '((' → logprob: -6.511056900024414
    6. '[j' → logprob: -7.511056900024414
    7. '(i' → logprob: -7.636056900024414
    8. '[(' → logprob: -8.511056900024414
    9. '`' → logprob: -9.011056900024414
    10. '(next' → logprob: -9.511056900024414

Token 468: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.03380095213651657
    2. '((' → logprob: -4.158801078796387
    3. ' (' → logprob: -4.408801078796387
    4. '[j' → logprob: -6.033801078796387
    5. 'j' → logprob: -6.783801078796387
    6. '```' → logprob: -7.783801078796387
    7. '[(' → logprob: -7.783801078796387
    8. '(s' → logprob: -8.658801078796387
    9. '<|end|>' → logprob: -8.658801078796387
    10. 's' → logprob: -8.783801078796387

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2830195128917694
    2. ',len' → logprob: -2.533019542694092
    3. ' ,' → logprob: -2.658019542694092
    4. '(len' → logprob: -2.908019542694092
    5. ' +' → logprob: -3.783019542694092
    6. '+' → logprob: -4.283019542694092
    7. ')' → logprob: -5.908019542694092
    8. ' len' → logprob: -7.533019542694092
    9. ',j' → logprob: -7.783019542694092
    10. ' %' → logprob: -8.283019065856934

Token 470: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1270626038312912
    2. ' len' → logprob: -2.1270625591278076
    3. ' ' → logprob: -10.377062797546387
    4. '(len' → logprob: -10.752062797546387
    5. '   ' → logprob: -10.877062797546387
    6. '  ' → logprob: -11.939562797546387
    7. 'j' → logprob: -12.002062797546387
    8. 'ok' → logprob: -12.064562797546387
    9. '
' → logprob: -12.377062797546387
    10. ' ok' → logprob: -12.377062797546387

Token 471: '_t' (ID: 838)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029867926612496376
    2. '_t' → logprob: -3.5298678874969482
    3. 't' → logprob: -9.154868125915527
    4. '_' → logprob: -12.404868125915527
    5. '_s' → logprob: -13.154868125915527
    6. '```' → logprob: -14.092368125915527
    7. 'o' → logprob: -14.654868125915527
    8. ')' → logprob: -14.779868125915527
    9. '_o' → logprob: -14.904868125915527
    10. ')
' → logprob: -15.279868125915527

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023146945983171463
    2. ')' → logprob: -3.898146867752075
    3. ' ,' → logprob: -7.023147106170654
    4. '%' → logprob: -7.273147106170654
    5. ')
' → logprob: -7.773147106170654
    6. ' %' → logprob: -8.773146629333496
    7. '+' → logprob: -8.773146629333496
    8. ',len' → logprob: -9.273146629333496
    9. ' +' → logprob: -9.648146629333496
    10. '   ' → logprob: -10.023146629333496

Token 473: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.3451433409936726e-05
    2. ' len' → logprob: -10.500033378601074
    3. '   ' → logprob: -12.250033378601074
    4. '
' → logprob: -14.625033378601074
    5. '       ' → logprob: -16.00003433227539
    6. '  ' → logprob: -16.00003433227539
    7. ' ' → logprob: -16.37503433227539
    8. 'length' → logprob: -16.75003433227539
    9. '           ' → logprob: -16.75003433227539
    10. '    ' → logprob: -16.87503433227539

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '_s' → logprob: -15.125000953674316
    3. 'o' → logprob: -16.375
    4. '_' → logprob: -16.5
    5. '۰' → logprob: -17.0
    6. '_t' → logprob: -17.125
    7. ')' → logprob: -17.125
    8. 's' → logprob: -17.5
    9. 't' → logprob: -18.0
    10. '_o' → logprob: -18.75

Token 475: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00510413758456707
    2. ')
' → logprob: -5.380104064941406
    3. '+' → logprob: -8.505104064941406
    4. '   ' → logprob: -9.255104064941406
    5. ' +' → logprob: -9.380104064941406
    6. ' )' → logprob: -10.630104064941406
    7. ')

' → logprob: -11.005104064941406
    8. ',' → logprob: -11.005104064941406
    9. '%' → logprob: -11.130104064941406
    10. ')%' → logprob: -12.380104064941406

Token 476: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2629253566265106
    2. '<|end|>' → logprob: -1.762925386428833
    3. ')' → logprob: -3.637925386428833
    4. '       ' → logprob: -4.887925148010254
    5. ' ' → logprob: -5.387925148010254
    6. '...' → logprob: -5.637925148010254
    7. '    ' → logprob: -5.887925148010254
    8. '```' → logprob: -6.262925148010254
    9. '<|end|>' → logprob: -6.512925148010254
    10. ':return' → logprob: -6.637925148010254

Token 478: ' has' (ID: 853)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02551678940653801
    2. 'visited' → logprob: -3.9005167484283447
    3. ' j' → logprob: -5.525516986846924
    4. 'not' → logprob: -7.275516986846924
    5. ' visited' → logprob: -9.025516510009766
    6. 'count' → logprob: -9.400516510009766
    7. ' not' → logprob: -10.150516510009766
    8. 'ok' → logprob: -11.275516510009766
    9. 'start' → logprob: -11.900516510009766
    10. '   ' → logprob: -12.275516510009766

Token 479: '_cycle' (ID: 97714)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7634567022323608
    2. '_' → logprob: -2.0134568214416504
    3. 'attr' → logprob: -2.3884568214416504
    4. '_cycle' → logprob: -2.7634568214416504
    5. 'j' → logprob: -2.8884568214416504
    6. 'cycle' → logprob: -3.3884568214416504
    7. ' j' → logprob: -3.6384568214416504
    8. 'loop' → logprob: -3.8884568214416504
    9. ' cycle' → logprob: -3.8884568214416504
    10. ' visited' → logprob: -3.8884568214416504

Token 480: '(j' (ID: 4997)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5834380388259888
    2. '(j' → logprob: -1.4584380388259888
    3. 'visited' → logprob: -1.5834380388259888
    4. '[j' → logprob: -6.458437919616699
    5. ' visited' → logprob: -6.833437919616699
    6. ' (' → logprob: -7.333437919616699
    7. ':' → logprob: -8.4584379196167
    8. '[' → logprob: -8.8334379196167
    9. '(not' → logprob: -8.9584379196167
    10. '(vis' → logprob: -9.3334379196167

Token 481: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.870650053024292
    2. ',' → logprob: -0.995650053024292
    3. '):
' → logprob: -1.870650053024292
    4. 'and' → logprob: -3.745650053024292
    5. ' and' → logprob: -4.120650291442871
    6. ')' → logprob: -4.495650291442871
    7. '   ' → logprob: -6.745650291442871
    8. ' ,' → logprob: -6.995650291442871
    9. 'visited' → logprob: -6.995650291442871
    10. ',
' → logprob: -7.245650291442871

Token 482: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.01721334643661976
    2. 'start' → logprob: -4.392213344573975
    3. ' visited' → logprob: -6.017213344573975
    4. 'len' → logprob: -6.517213344573975
    5. 'ok' → logprob: -7.642213344573975
    6. 'count' → logprob: -8.642213821411133
    7. 'j' → logprob: -9.767213821411133
    8. ' start' → logprob: -10.392213821411133
    9. ' len' → logprob: -11.517213821411133
    10. ' ok' → logprob: -11.892213821411133

Token 483: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26554006338119507
    2. '):
' → logprob: -1.8905401229858398
    3. ',' → logprob: -2.51554012298584
    4. ')' → logprob: -7.14054012298584
    5. '       ' → logprob: -8.51554012298584
    6. ')==' → logprob: -8.89054012298584
    7. '   ' → logprob: -9.01554012298584
    8. '):

' → logprob: -9.51554012298584
    9. '):
' → logprob: -11.39054012298584
    10. ':' → logprob: -11.76554012298584

Token 484: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001126763760112226
    2. 'return' → logprob: -7.251126766204834
    3. ' return' → logprob: -7.876126766204834
    4. '               ' → logprob: -10.751126289367676
    5. '	       ' → logprob: -12.876126289367676
    6. '       ' → logprob: -12.876126289367676
    7. '```' → logprob: -12.876126289367676
    8. '          ' → logprob: -13.126126289367676
    9. '   ' → logprob: -13.251126289367676
    10. '		' → logprob: -14.001126289367676

Token 485: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16096004843711853
    2. '               ' → logprob: -2.6609599590301514
    3. ' return' → logprob: -2.6609599590301514
    4. '           ' → logprob: -4.7859601974487305
    5. '       ' → logprob: -7.7859601974487305
    6. '   ' → logprob: -9.03596019744873
    7. '	return' → logprob: -11.53596019744873
    8. ':return' → logprob: -11.78596019744873
    9. '```' → logprob: -12.53596019744873
    10. '                   ' → logprob: -12.53596019744873

Token 486: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.339278580620885e-06
    2. ' -' → logprob: -13.000001907348633
    3. '           ' → logprob: -18.375001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -22.375001907348633
    6. '  ' → logprob: -22.750001907348633
    7. ' ' → logprob: -23.250001907348633
    8. '       ' → logprob: -23.625001907348633
    9. '−' → logprob: -24.000001907348633
    10. '               ' → logprob: -24.125001907348633

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.875
    3. ' ' → logprob: -17.375
    4. '2' → logprob: -17.5
    5. '-' → logprob: -17.875
    6. '۱' → logprob: -19.625
    7. '   ' → logprob: -19.6875
    8. 'def' → logprob: -20.0
    9. '<|end|>' → logprob: -20.4375
    10. '0' → logprob: -20.4375

Token 488: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010702191852033138
    2. '<|end|>' → logprob: -4.635702133178711
    3. '        ' → logprob: -8.260702133178711
    4. '   ' → logprob: -8.635702133178711
    5. '           ' → logprob: -8.885702133178711
    6. 'return' → logprob: -9.885702133178711
    7. '    ' → logprob: -9.885702133178711
    8. '	' → logprob: -10.260702133178711
    9. '      ' → logprob: -10.385702133178711
    10. '```' → logprob: -10.635702133178711

Token 490: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20728692412376404
    2. '
' → logprob: -2.207286834716797
    3. '   ' → logprob: -3.332286834716797
    4. '<|end|>' → logprob: -4.207286834716797
    5. ' and' → logprob: -5.332286834716797
    6. ' def' → logprob: -5.957286834716797
    7. '

' → logprob: -6.082286834716797
    8. '       ' → logprob: -6.207286834716797
    9. '==' → logprob: -6.332286834716797
    10. 'False' → logprob: -6.707286834716797

Token 491: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0006267757853493094
    2. ' count' → logprob: -7.375626564025879
    3. '   ' → logprob: -15.875626564025879
    4. '	count' → logprob: -17.625627517700195
    5. '(count' → logprob: -17.750627517700195
    6. ' ' → logprob: -17.750627517700195
    7. '[count' → logprob: -18.250627517700195
    8. '  ' → logprob: -18.875627517700195
    9. 'c' → logprob: -18.875627517700195
    10. 'cnt' → logprob: -19.000627517700195

Token 492: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.917121171951294
    2. '(j' → logprob: -1.167121171951294
    3. '(' → logprob: -1.792121171951294
    4. '(
' → logprob: -2.292121171951294
    5. '(i' → logprob: -5.417120933532715
    6. ':' → logprob: -5.667120933532715
    7. '(n' → logprob: -5.792120933532715
    8. '
' → logprob: -5.917120933532715
    9. '[j' → logprob: -6.792120933532715
    10. ',' → logprob: -7.417120933532715

Token 493: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7339866757392883
    2. '(
' → logprob: -1.6089866161346436
    3. 'def' → logprob: -2.2339866161346436
    4. ':' → logprob: -3.2339866161346436
    5. '%' → logprob: -3.7339866161346436
    6. '+' → logprob: -3.7339866161346436
    7. '   ' → logprob: -3.8589866161346436
    8. '-' → logprob: -3.9839866161346436
    9. '==' → logprob: -4.108986854553223
    10. ')' → logprob: -4.608986854553223

Token 494: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16189216077327728
    2. ' next' → logprob: -1.9118921756744385
    3. 'has' → logprob: -6.661891937255859
    4. ' has' → logprob: -8.16189193725586
    5. 'def' → logprob: -9.41189193725586
    6. ' def' → logprob: -12.03689193725586
    7. '	next' → logprob: -12.78689193725586
    8. 'cycle' → logprob: -13.41189193725586
    9. ' ' → logprob: -13.84939193725586
    10. '
' → logprob: -14.16189193725586

Token 495: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -11.250016212463379
    3. ' _' → logprob: -13.375016212463379
    4. 'index' → logprob: -14.625016212463379
    5. '_INDEX' → logprob: -14.875016212463379
    6. '_indices' → logprob: -15.125016212463379
    7. '```' → logprob: -15.500016212463379
    8. '`' → logprob: -16.625017166137695
    9. '(index' → logprob: -16.750017166137695
    10. '_line' → logprob: -16.750017166137695

Token 496: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.3872950077056885
    2. '(' → logprob: -1.1372950077056885
    3. '(i' → logprob: -8.01229476928711
    4. ' (' → logprob: -10.51229476928711
    5. '(n' → logprob: -11.13729476928711
    6. '(current' → logprob: -11.88729476928711
    7. '(
' → logprob: -12.13729476928711
    8. '(a' → logprob: -12.13729476928711
    9. '(index' → logprob: -12.38729476928711
    10. '(x' → logprob: -12.63729476928711

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00071553117595613
    2. ',j' → logprob: -7.375715732574463
    3. ' ,' → logprob: -9.625715255737305
    4. '(j' → logprob: -11.250715255737305
    5. ',
' → logprob: -13.000715255737305
    6. 'j' → logprob: -13.000715255737305
    7. '+,' → logprob: -13.375715255737305
    8. '_,' → logprob: -14.375715255737305
    9. '):' → logprob: -14.750715255737305
    10. '+' → logprob: -15.125715255737305

Token 498: ' len' (ID: 4631)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002869661897420883
    2. 'len' → logprob: -6.627869606018066
    3. '(j' → logprob: -7.002869606018066
    4. ' j' → logprob: -7.627869606018066
    5. '(len' → logprob: -9.502869606018066
    6. ')' → logprob: -10.627869606018066
    7. '   ' → logprob: -11.252869606018066
    8. '```' → logprob: -11.502869606018066
    9. ' (' → logprob: -11.752869606018066
    10. ',j' → logprob: -12.877869606018066

Token 499: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00012439649435691535
    2. 't' → logprob: -9.000123977661133
    3. '0' → logprob: -14.750123977661133
    4. '_' → logprob: -16.250123977661133
    5. ',' → logprob: -16.500123977661133
    6. ')' → logprob: -17.125123977661133
    7. '	t' → logprob: -17.125123977661133
    8. 'T' → logprob: -17.625123977661133
    9. '(t' → logprob: -17.750123977661133
    10. '```' → logprob: -17.812623977661133

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',j' → logprob: -13.000020027160645
    4. ',
' → logprob: -13.500020027160645
    5. ',len' → logprob: -14.125020027160645
    6. '‌,' → logprob: -15.000020027160645
    7. '_,' → logprob: -15.125020027160645
    8. 'def' → logprob: -15.875020027160645
    9. '+,' → logprob: -16.12502098083496
    10. ',int' → logprob: -16.75002098083496

Token 501: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.029783355072140694
    2. ' len' → logprob: -3.529783248901367
    3. '(len' → logprob: -11.404783248901367
    4. ')' → logprob: -12.404783248901367
    5. ' ' → logprob: -12.779783248901367
    6. '[len' → logprob: -12.904783248901367
    7. 'j' → logprob: -13.029783248901367
    8. '	len' → logprob: -13.779783248901367
    9. '   ' → logprob: -13.904783248901367
    10. 'def' → logprob: -14.029783248901367

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021509946964215487
    2. '_t' → logprob: -8.500215530395508
    3. 't' → logprob: -11.875215530395508
    4. '_s' → logprob: -13.375215530395508
    5. '_' → logprob: -13.625215530395508
    6. 'o' → logprob: -14.250215530395508
    7. ')' → logprob: -14.625215530395508
    8. 's' → logprob: -14.875215530395508
    9. '```' → logprob: -15.375215530395508
    10. ')
' → logprob: -17.125215530395508

Token 503: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4741024672985077
    2. '):' → logprob: -0.9741024971008301
    3. '):
' → logprob: -11.474102020263672
    4. ')' → logprob: -11.849102020263672
    5. '):

' → logprob: -12.349102020263672
    6. '   ' → logprob: -12.974102020263672
    7. ':' → logprob: -14.724102020263672
    8. ',' → logprob: -15.224102020263672
    9. ' ):' → logprob: -15.599102020263672
    10. ' ):
' → logprob: -15.974102020263672

Token 504: '   ' (ID: 271)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5375796556472778
    2. '   ' → logprob: -1.2875796556472778
    3. 'return' → logprob: -2.0375795364379883
    4. ' (' → logprob: -5.037579536437988
    5. ' return' → logprob: -6.287579536437988
    6. '(return' → logprob: -7.412579536437988
    7. '```' → logprob: -7.912579536437988
    8. '((' → logprob: -9.412579536437988
    9. '(' → logprob: -10.412579536437988
    10. ' ' → logprob: -10.787579536437988

Token 505: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3894381821155548
    2. '(j' → logprob: -1.1394381523132324
    3. '   ' → logprob: -6.139438152313232
    4. ' return' → logprob: -8.51443862915039
    5. '(return' → logprob: -8.88943862915039
    6. '```' → logprob: -9.88943862915039
    7. '
' → logprob: -12.26443862915039
    8. ' (' → logprob: -12.38943862915039
    9. '((' → logprob: -13.38943862915039
    10. 'j' → logprob: -13.51443862915039

Token 506: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00011069540778407827
    2. '   ' → logprob: -9.375110626220703
    3. ' (' → logprob: -10.875110626220703
    4. '((' → logprob: -12.750110626220703
    5. '
' → logprob: -13.500110626220703
    6. '(' → logprob: -13.625110626220703
    7. '[j' → logprob: -15.125110626220703
    8. '(next' → logprob: -15.250110626220703
    9. 'j' → logprob: -15.375110626220703
    10. '(n' → logprob: -16.125110626220703

Token 507: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0009271837188862264
    2. '(j' → logprob: -7.000926971435547
    3. ' j' → logprob: -11.500926971435547
    4. '   ' → logprob: -13.375926971435547
    5. ')' → logprob: -13.500926971435547
    6. ' (' → logprob: -14.375926971435547
    7. '	j' → logprob: -15.000926971435547
    8. '(' → logprob: -15.000926971435547
    9. '[j' → logprob: -15.000926971435547
    10. '```' → logprob: -15.250926971435547

Token 508: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.523322582244873
    2. ' +' → logprob: -0.898322582244873
    3. '+j' → logprob: -8.898323059082031
    4. ' -' → logprob: -10.773323059082031
    5. '-' → logprob: -11.398323059082031
    6. '   ' → logprob: -11.523323059082031
    7. ' ' → logprob: -11.773323059082031
    8. '+l' → logprob: -12.898323059082031
    9. '+
' → logprob: -13.523323059082031
    10. ' plus' → logprob: -13.648323059082031

Token 509: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.130576806142926e-05
    2. ' len' → logprob: -10.875031471252441
    3. '1' → logprob: -12.250031471252441
    4. '(len' → logprob: -12.250031471252441
    5. '[len' → logprob: -13.875031471252441
    6. '2' → logprob: -14.125031471252441
    7. '   ' → logprob: -14.375031471252441
    8. '	len' → logprob: -16.000030517578125
    9. ' ' → logprob: -16.750030517578125
    10. '<len' → logprob: -16.750030517578125

Token 510: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00029828163678757846
    2. 't' → logprob: -8.125298500061035
    3. '0' → logprob: -13.625298500061035
    4. '<|end|>' → logprob: -14.500298500061035
    5. '<|end|>' → logprob: -16.00029754638672
    6. ')' → logprob: -16.12529754638672
    7. '	t' → logprob: -17.12529754638672
    8. '(t' → logprob: -17.50029754638672
    9. '(' → logprob: -17.75029754638672
    10. '-t' → logprob: -17.75029754638672

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.061676347395405e-05
    2. ')%' → logprob: -10.62505054473877
    3. ' )' → logprob: -11.00005054473877
    4. '-' → logprob: -12.00005054473877
    5. '+' → logprob: -14.25005054473877
    6. ')
' → logprob: -14.37505054473877
    7. '*' → logprob: -14.50005054473877
    8. '1' → logprob: -15.12505054473877
    9. '   ' → logprob: -15.25005054473877
    10. ' -' → logprob: -15.62505054473877

Token 512: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4148176610469818
    2. '%' → logprob: -1.1648176908493042
    3. ')' → logprob: -3.6648175716400146
    4. ')%' → logprob: -6.289817810058594
    5. '<|end|>' → logprob: -10.164817810058594
    6. 'def' → logprob: -11.414817810058594
    7. '```' → logprob: -11.414817810058594
    8. '
' → logprob: -12.289817810058594
    9. ' if' → logprob: -12.414817810058594
    10. '%n' → logprob: -12.664817810058594

Token 513: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.088346359931165e-07
    2. ' len' → logprob: -14.000000953674316
    3. '[len' → logprob: -21.5
    4. '(len' → logprob: -21.625
    5. '	len' → logprob: -23.375
    6. 'length' → logprob: -23.625
    7. '<len' → logprob: -24.25
    8. 'l' → logprob: -24.5
    9. 'leni' → logprob: -24.5
    10. '   ' → logprob: -24.625

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.12500286102295
    3. '_t' → logprob: -15.62500286102295
    4. '```' → logprob: -16.250001907348633
    5. '۰' → logprob: -16.750001907348633
    6. ')' → logprob: -18.000001907348633
    7. 'o' → logprob: -18.312501907348633
    8. '__' → logprob: -18.437501907348633
    9. '_s' → logprob: -18.500001907348633
    10. ' ' → logprob: -19.000001907348633

Token 515: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004653465002775192
    2. '<|end|>' → logprob: -7.750465393066406
    3. '
' → logprob: -11.000465393066406
    4. ' def' → logprob: -11.625465393066406
    5. '```' → logprob: -12.750465393066406
    6. '  
' → logprob: -13.500465393066406
    7. '    
' → logprob: -13.750465393066406
    8. '<|end|>' → logprob: -14.500465393066406
    9. ')' → logprob: -14.875465393066406
    10. ':def' → logprob: -15.000465393066406

Token 516: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.055340204387903214
    2. '<|end|>' → logprob: -3.43034029006958
    3. '   ' → logprob: -4.05534029006958
    4. '==' → logprob: -6.93034029006958
    5. '  ' → logprob: -7.55534029006958
    6. '```' → logprob: -7.80534029006958
    7. ' def' → logprob: -7.93034029006958
    8. 'j' → logprob: -8.055339813232422
    9. '    ' → logprob: -8.055339813232422
    10. ' ' → logprob: -8.055339813232422

Token 517: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.014399479143321514
    2. ' has' → logprob: -4.264399528503418
    3. 'def' → logprob: -8.389399528503418
    4. ' def' → logprob: -12.889399528503418
    5. '	has' → logprob: -13.764399528503418
    6. '.has' → logprob: -13.889399528503418
    7. 'hash' → logprob: -14.514399528503418
    8. 'have' → logprob: -14.764399528503418
    9. '(has' → logprob: -14.764399528503418
    10. 'ha' → logprob: -14.889399528503418

Token 518: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -1.8312570318812504e-05
    2. 'cycle' → logprob: -11.000018119812012
    3. '_cycles' → logprob: -14.500018119812012
    4. '_' → logprob: -14.625018119812012
    5. '_c' → logprob: -15.875018119812012
    6. 'Cycle' → logprob: -16.375019073486328
    7. 'cycled' → logprob: -16.625019073486328
    8. '```' → logprob: -17.250019073486328
    9. '_chain' → logprob: -17.500019073486328
    10. 'cy' → logprob: -17.625019073486328

Token 519: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.01757265068590641
    2. '(start' → logprob: -4.26757287979126
    3. '(current' → logprob: -6.01757287979126
    4. '(a' → logprob: -7.64257287979126
    5. '(' → logprob: -7.89257287979126
    6. '(prev' → logprob: -10.392572402954102
    7. '(c' → logprob: -10.517572402954102
    8. '(curr' → logprob: -11.142572402954102
    9. '(i' → logprob: -11.642572402954102
    10. ' (' → logprob: -11.892572402954102

Token 520: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045009577297605574
    2. ' ,' → logprob: -8.375450134277344
    3. ',j' → logprob: -9.125450134277344
    4. ',start' → logprob: -9.125450134277344
    5. ',s' → logprob: -15.125450134277344
    6. ',
' → logprob: -15.375450134277344
    7. ',last' → logprob: -15.375450134277344
    8. '==' → logprob: -15.750450134277344
    9. ',current' → logprob: -15.750450134277344
    10. 'j' → logprob: -16.250450134277344

Token 521: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1453055739402771
    2. 'j' → logprob: -2.145305633544922
    3. ' start' → logprob: -5.145305633544922
    4. ' j' → logprob: -5.645305633544922
    5. '<|end|>' → logprob: -5.770305633544922
    6. ')' → logprob: -6.020305633544922
    7. '0' → logprob: -6.895305633544922
    8. '<|end|>' → logprob: -7.645305633544922
    9. 'None' → logprob: -8.145305633544922
    10. ' ' → logprob: -8.770305633544922

Token 522: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1602538824081421
    2. '):
' → logprob: -1.910253882408142
    3. ',' → logprob: -11.410253524780273
    4. '):
' → logprob: -12.410253524780273
    5. '   ' → logprob: -12.660253524780273
    6. ',j' → logprob: -13.035253524780273
    7. ':' → logprob: -13.035253524780273
    8. '):

' → logprob: -13.035253524780273
    9. 'j' → logprob: -13.285253524780273
    10. ')' → logprob: -13.410253524780273

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21051515638828278
    2. 'return' → logprob: -1.7105151414871216
    3. ' return' → logprob: -4.710515022277832
    4. 'j' → logprob: -9.960515022277832
    5. '```' → logprob: -11.585515022277832
    6. '	return' → logprob: -13.335515022277832
    7. ' ' → logprob: -13.960515022277832
    8. '    ' → logprob: -14.460515022277832
    9. '
' → logprob: -15.335515022277832
    10. '  ' → logprob: -15.835515022277832

Token 524: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014234492555260658
    2. 'j' → logprob: -4.26423454284668
    3. ' return' → logprob: -9.76423454284668
    4. '   ' → logprob: -11.26423454284668
    5. '```' → logprob: -14.26423454284668
    6. ' j' → logprob: -16.76423454284668
    7. '
' → logprob: -17.76423454284668
    8. 'if' → logprob: -17.88923454284668
    9. '{return' → logprob: -18.13923454284668
    10. '(j' → logprob: -18.63923454284668

Token 525: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004909569397568703
    2. ' j' → logprob: -7.625491142272949
    3. 'False' → logprob: -13.37549114227295
    4. '(j' → logprob: -14.25049114227295
    5. '   ' → logprob: -15.12549114227295
    6. '	j' → logprob: -15.37549114227295
    7. 'True' → logprob: -16.250490188598633
    8. '```' → logprob: -16.375490188598633
    9. ' ' → logprob: -17.125490188598633
    10. '$j' → logprob: -17.375490188598633

Token 526: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029757659882307053
    2. ' ==' → logprob: -3.5297577381134033
    3. '==
' → logprob: -12.029757499694824
    4. '=' → logprob: -14.404757499694824
    5. ')==' → logprob: -15.654757499694824
    6. '!=' → logprob: -15.654757499694824
    7. '===' → logprob: -16.65475845336914
    8. 'start' → logprob: -17.02975845336914
    9. '()==' → logprob: -17.02975845336914
    10. ']==' → logprob: -17.15475845336914

Token 527: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.842555426876061e-06
    2. ' start' → logprob: -12.250004768371582
    3. '[start' → logprob: -21.6250057220459
    4. ' ' → logprob: -21.6250057220459
    5. '<|end|>' → logprob: -21.8750057220459
    6. '  ' → logprob: -22.0000057220459
    7. '	start' → logprob: -22.0000057220459
    8. '(start' → logprob: -22.1250057220459
    9. '   ' → logprob: -22.1250057220459
    10. 'stop' → logprob: -23.6250057220459

Token 528: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1633913367986679
    2. 'main' → logprob: -1.913391351699829
    3. ' read' → logprob: -6.78839111328125
    4. 'def' → logprob: -6.91339111328125
    5. 'read' → logprob: -7.53839111328125
    6. '__' → logprob: -8.66339111328125
    7. ' __' → logprob: -9.03839111328125
    8. ' def' → logprob: -9.16339111328125
    9. ' ' → logprob: -10.78839111328125
    10. ' solve' → logprob: -11.41339111328125

Token 531: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1637164789135568e-05
    2. '():
' → logprob: -11.500011444091797
    3. '()' → logprob: -14.250011444091797
    4. ' ():' → logprob: -14.375011444091797
    5. '(' → logprob: -16.125011444091797
    6. '():
' → logprob: -17.125011444091797
    7. '()>' → logprob: -17.375011444091797
    8. ':' → logprob: -18.000011444091797
    9. '_' → logprob: -18.500011444091797
    10. 'def' → logprob: -19.125011444091797

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03257893770933151
    2. ' s' → logprob: -3.532578945159912
    3. 's' → logprob: -6.032578945159912
    4. ' t' → logprob: -8.407578468322754
    5. ' input' → logprob: -9.532578468322754
    6. 't' → logprob: -10.032578468322754
    7. '(s' → logprob: -10.782578468322754
    8. '```' → logprob: -11.157578468322754
    9. 'input' → logprob: -11.532578468322754
    10. ',' → logprob: -11.532578468322754

Token 533: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024112078826874495
    2. ' s' → logprob: -6.252411365509033
    3. '   ' → logprob: -7.752411365509033
    4. 't' → logprob: -10.502410888671875
    5. 'S' (adapté à ' S') → logprob: -11.377410888671875
    6. ' ' → logprob: -12.877410888671875
    7. '(s' → logprob: -13.127410888671875
    8. '_s' → logprob: -13.252410888671875
    9. '    
' → logprob: -13.502410888671875
    10. '```' → logprob: -13.627410888671875

Token 534: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14577923715114594
    2. ',' → logprob: -2.0207791328430176
    3. '=' → logprob: -6.270779132843018
    4. ' ,' → logprob: -7.145779132843018
    5. '=input' → logprob: -9.145779609680176
    6. ')' → logprob: -9.395779609680176
    7. '   ' → logprob: -9.770779609680176
    8. '_input' → logprob: -10.645779609680176
    9. ' ' → logprob: -11.145779609680176
    10. '_' → logprob: -11.270779609680176

Token 535: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.014184068888425827
    2. ' T' → logprob: -4.26418399810791
    3. 't' → logprob: -10.88918399810791
    4. ' ' → logprob: -14.13918399810791
    5. ' t' → logprob: -14.63918399810791
    6. '   ' → logprob: -15.63918399810791
    7. '  ' → logprob: -16.139184951782227
    8. 's' → logprob: -16.514184951782227
    9. 'P' → logprob: -16.639184951782227
    10. 'input' → logprob: -17.264184951782227

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42870965600013733
    2. ' =' → logprob: -1.053709626197815
    3. ',' → logprob: -11.803709983825684
    4. ' ' → logprob: -15.053709983825684
    5. '   ' → logprob: -15.303709983825684
    6. '<|end|>' → logprob: -15.428709983825684
    7. '  ' → logprob: -16.053709030151367
    8. ')' → logprob: -16.053709030151367
    9. '=
' → logprob: -16.178709030151367
    10. '＝' → logprob: -16.428709030151367

Token 537: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.023246292024850845
    2. ' read' → logprob: -3.7732462882995605
    3. 'input' → logprob: -14.648246765136719
    4. '	read' → logprob: -16.39824676513672
    5. ' input' → logprob: -16.64824676513672
    6. ' ' → logprob: -16.77324676513672
    7. '(read' → logprob: -16.77324676513672
    8. '   ' → logprob: -17.39824676513672
    9. '  ' → logprob: -19.02324676513672
    10. 're' → logprob: -20.02324676513672

Token 538: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.08476806432008743
    2. '()' → logprob: -2.959768056869507
    3. '_' → logprob: -3.584768056869507
    4. '()
' → logprob: -6.584768295288086
    5. '_line' → logprob: -8.584768295288086
    6. '_inputs' → logprob: -9.709768295288086
    7. 'input' → logprob: -11.084768295288086
    8. 'Input' → logprob: -11.459768295288086
    9. '_output' → logprob: -11.709768295288086
    10. '_Input' → logprob: -12.209768295288086

Token 539: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47852906584739685
    2. '()
' → logprob: -0.9785290956497192
    3. '   ' → logprob: -5.72852897644043
    4. '
' → logprob: -6.85352897644043
    5. '<|end|>' → logprob: -10.47852897644043
    6. '    
' → logprob: -10.72852897644043
    7. '()

' → logprob: -11.22852897644043
    8. '()
' → logprob: -11.47852897644043
    9. '()\' → logprob: -11.72852897644043
    10. '();' → logprob: -11.85352897644043

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013011881383135915
    2. 'len' → logprob: -7.251301288604736
    3. '```' → logprob: -8.251300811767578
    4. '
' → logprob: -8.626300811767578
    5. ' len' → logprob: -9.626300811767578
    6. '    
' → logprob: -10.626300811767578
    7. '(len' → logprob: -11.251300811767578
    8. '	len' → logprob: -11.626300811767578
    9. '[len' → logprob: -11.876300811767578
    10. '<|end|>' → logprob: -11.876300811767578

Token 541: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' (adapté à ' len') → logprob: -0.010579998604953289
    2. '   ' → logprob: -4.635580062866211
    3. ' len' → logprob: -7.135580062866211
    4. '```' → logprob: -11.260580062866211
    5. '	len' → logprob: -12.510580062866211
    6. ' ' → logprob: -12.635580062866211
    7. 'length' → logprob: -13.135580062866211
    8. 'def' → logprob: -13.885580062866211
    9. '[len' → logprob: -14.260580062866211
    10. 'if' → logprob: -14.385580062866211

Token 542: '0' (ID: 15)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.48875513672828674
    2. '0' → logprob: -1.6137551069259644
    3. '_s' → logprob: -2.488755226135254
    4. '_S' → logprob: -2.613755226135254
    5. '_' → logprob: -3.988755226135254
    6. 'S' → logprob: -4.613755226135254
    7. '(' → logprob: -6.363755226135254
    8. 's' → logprob: -7.738755226135254
    9. '(s' → logprob: -8.113755226135254
    10. '_t' → logprob: -8.988755226135254

Token 543: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04421297088265419
    2. '=' → logprob: -3.669213056564331
    3. ',' → logprob: -4.044212818145752
    4. '(S' → logprob: -9.66921329498291
    5. 's' → logprob: -9.91921329498291
    6. ',S' → logprob: -10.29421329498291
    7. 'S' → logprob: -10.91921329498291
    8. '_S' → logprob: -11.29421329498291
    9. ' ,' → logprob: -11.29421329498291
    10. '_' → logprob: -11.54421329498291

Token 544: ' get' (ID: 717)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.003610878484323621
    2. ' len' → logprob: -5.753611087799072
    3. 'get' → logprob: -7.753611087799072
    4. ' get' → logprob: -12.878610610961914
    5. '   ' → logprob: -13.628610610961914
    6. '(len' → logprob: -15.878610610961914
    7. '  ' → logprob: -18.878610610961914
    8. '=len' → logprob: -19.878610610961914
    9. '[len' → logprob: -20.128610610961914
    10. 'length' → logprob: -20.503610610961914

Token 545: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.531315314830863e-06
    2. 'len' → logprob: -13.250003814697266
    3. 'length' → logprob: -13.500003814697266
    4. '_len' → logprob: -15.250003814697266
    5. 'Length' → logprob: -18.500003814697266
    6. '_l' → logprob: -19.250003814697266
    7. '_LENGTH' → logprob: -19.375003814697266
    8. '_lengths' → logprob: -19.625003814697266
    9. '```' → logprob: -20.125003814697266
    10. '_Length' → logprob: -20.125003814697266

Token 546: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -10.875019073486328
    3. '(s' → logprob: -15.500019073486328
    4. ' (' → logprob: -16.250019073486328
    5. 'S' → logprob: -16.875019073486328
    6. '((' → logprob: -18.125019073486328
    7. '(
' → logprob: -18.125019073486328
    8. '(T' → logprob: -18.250019073486328
    9. 's' → logprob: -18.500019073486328
    10. ')' → logprob: -21.000019073486328

Token 547: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07899190485477448
    2. ')
' → logprob: -2.5789918899536133
    3. '   ' → logprob: -9.453991889953613
    4. '())' → logprob: -11.578991889953613
    5. '())
' → logprob: -12.078991889953613
    6. ')
' → logprob: -12.578991889953613
    7. '()' → logprob: -13.078991889953613
    8. ' )' → logprob: -13.828991889953613
    9. ')

' → logprob: -14.453991889953613
    10. '),' → logprob: -15.078991889953613

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42893344163894653
    2. 'len' → logprob: -1.0539333820343018
    3. ' len' → logprob: -8.553933143615723
    4. '	len' → logprob: -10.928933143615723
    5. '[len' → logprob: -11.678933143615723
    6. '```' → logprob: -12.553933143615723
    7. '(len' → logprob: -12.928933143615723
    8. ' ' → logprob: -13.303933143615723
    9. 'def' → logprob: -13.553933143615723
    10. '  ' → logprob: -13.928933143615723

Token 549: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' (adapté à ' len') → logprob: -1.0206720617134124e-05
    2. '   ' → logprob: -12.12501049041748
    3. ' len' → logprob: -12.62501049041748
    4. '	len' → logprob: -15.00001049041748
    5. 'length' → logprob: -15.75001049041748
    6. 'if' → logprob: -16.000009536743164
    7. '[len' → logprob: -16.000009536743164
    8. '```' → logprob: -16.000009536743164
    9. 'Len' → logprob: -16.375009536743164
    10. '#' → logprob: -16.500009536743164

Token 550: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.5732684135437012
    2. 't' → logprob: -0.9482684135437012
    3. 'T' → logprob: -3.073268413543701
    4. '1' → logprob: -6.448268413543701
    5. '_T' → logprob: -7.198268413543701
    6. '0' → logprob: -8.69826889038086
    7. '(T' → logprob: -9.57326889038086
    8. '(t' → logprob: -10.69826889038086
    9. '_' → logprob: -10.94826889038086
    10. 's' → logprob: -11.94826889038086

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40495821833610535
    2. '=' → logprob: -1.2799582481384277
    3. ',' → logprob: -2.9049582481384277
    4. ' ,' → logprob: -9.40495777130127
    5. ')' → logprob: -10.15495777130127
    6. ' ' → logprob: -10.40495777130127
    7. '(' → logprob: -11.27995777130127
    8. '   ' → logprob: -12.15495777130127
    9. '  ' → logprob: -12.52995777130127
    10. '<|end|>' → logprob: -12.65495777130127

Token 552: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004078401252627373
    2. ' get' → logprob: -5.504078388214111
    3. '(get' → logprob: -17.754077911376953
    4. 'len' → logprob: -19.629077911376953
    5. '=get' → logprob: -20.504077911376953
    6. '   ' → logprob: -20.879077911376953
    7. '[get' → logprob: -21.129077911376953
    8. '	get' → logprob: -21.254077911376953
    9. '_get' → logprob: -22.004077911376953
    10. ' ' → logprob: -22.629077911376953

Token 553: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. 'length' → logprob: -14.125000953674316
    3. 'len' → logprob: -16.5
    4. 'Length' → logprob: -17.875
    5. '_LENGTH' → logprob: -18.625
    6. '_len' → logprob: -19.25
    7. '_l' → logprob: -20.375
    8. '(length' → logprob: -20.875
    9. '_Length' → logprob: -20.875
    10. '(len' → logprob: -21.75

Token 554: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.750008583068848
    3. 'T' → logprob: -14.750008583068848
    4. ' (' → logprob: -15.875008583068848
    5. '(S' → logprob: -17.25000762939453
    6. '(
' → logprob: -17.75000762939453
    7. '(t' → logprob: -18.00000762939453
    8. '((' → logprob: -18.75000762939453
    9. ')(' → logprob: -19.62500762939453
    10. ')' → logprob: -19.75000762939453

Token 555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025764419115148485
    2. ')
' → logprob: -8.37525749206543
    3. '   ' → logprob: -10.62525749206543
    4. '())' → logprob: -13.62525749206543
    5. '<|end|>' → logprob: -14.75025749206543
    6. ' )' → logprob: -14.87525749206543
    7. '()' → logprob: -15.62525749206543
    8. '),' → logprob: -15.87525749206543
    9. '))' → logprob: -16.12525749206543
    10. '<|end|>' → logprob: -16.37525749206543

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012722361832857132
    2. 'factor' → logprob: -4.887722492218018
    3. 'repeat' → logprob: -5.762722492218018
    4. ' factor' → logprob: -7.262722492218018
    5. ' repeat' → logprob: -7.637722492218018
    6. '```' → logprob: -7.762722492218018
    7. 's' → logprob: -8.88772201538086
    8. ' s' → logprob: -10.01272201538086
    9. 'if' → logprob: -11.13772201538086
    10. '
' → logprob: -11.13772201538086

Token 557: ' base' (ID: 3611)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.5269748568534851
    2. 'repeat' → logprob: -0.9019748568534851
    3. '   ' → logprob: -5.776974678039551
    4. 'rep' → logprob: -8.52697467803955
    5. 'if' → logprob: -9.27697467803955
    6. 'fact' → logprob: -9.40197467803955
    7. ' repeat' → logprob: -9.40197467803955
    8. 'f' → logprob: -9.52697467803955
    9. '```' → logprob: -9.77697467803955
    10. ' factor' → logprob: -10.02697467803955

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004813984502106905
    2. ',' → logprob: -5.629814147949219
    3. '=' → logprob: -6.754814147949219
    4. ' ,' → logprob: -10.129814147949219
    5. '1' → logprob: -12.504814147949219
    6. ' ' → logprob: -13.254814147949219
    7. '_' → logprob: -14.004814147949219
    8. ' =
' → logprob: -14.754814147949219
    9. '<|end|>' → logprob: -15.129814147949219
    10. 's' → logprob: -15.379814147949219

Token 559: ' ' (ID: 220)
  Prédit: '131'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '131' → logprob: -0.0890982523560524
    2. '31' → logprob: -2.9640982151031494
    3. '911' → logprob: -4.0890984535217285
    4. '29' → logprob: -4.8390984535217285
    5. '101' → logprob: -5.5890984535217285
    6. ' ' → logprob: -6.5890984535217285
    7. '127' → logprob: -6.7140984535217285
    8. '257' → logprob: -7.0890984535217285
    9. '100' → logprob: -7.5890984535217285
    10. '137' → logprob: -8.08909797668457

Token 560: '26' (ID: 2109)
  Prédit: '131'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '131' → logprob: -0.07034862786531448
    2. '31' → logprob: -3.1953487396240234
    3. '911' → logprob: -4.320348739624023
    4. '101' → logprob: -5.320348739624023
    5. '257' → logprob: -5.695348739624023
    6. '100' → logprob: -5.945348739624023
    7. '29' → logprob: -7.195348739624023
    8. '127' → logprob: -7.570348739624023
    9. '997' → logprob: -7.695348739624023
    10. '137' → logprob: -8.070348739624023

Token 561: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11955969035625458
    2. ',' → logprob: -2.8695597648620605
    3. '   ' → logprob: -3.6195597648620605
    4. 'mod' → logprob: -3.9945597648620605
    5. ',
' → logprob: -4.7445597648620605
    6. ' mod' → logprob: -6.4945597648620605
    7. '    
' → logprob: -8.869559288024902
    8. ' 
' → logprob: -9.494559288024902
    9. '	mod' → logprob: -9.494559288024902
    10. '<|end|>' → logprob: -9.744559288024902

Token 562: '   ' (ID: 271)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.4952230453491211
    2. '   ' → logprob: -1.120223045349121
    3. ' mod' → logprob: -2.745223045349121
    4. 'MOD' → logprob: -10.120223045349121
    5. '```' → logprob: -10.245223045349121
    6. '	mod' → logprob: -10.495223045349121
    7. '_mod' → logprob: -12.370223045349121
    8. ' MOD' → logprob: -12.870223045349121
    9. ' ' → logprob: -13.245223045349121
    10. 'm' → logprob: -13.245223045349121

Token 563: ' MOD' (ID: 32868)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.041768160182983e-05
    2. ' mod' → logprob: -9.875080108642578
    3. 'MOD' (adapté à ' MOD') → logprob: -10.750080108642578
    4. '   ' → logprob: -12.000080108642578
    5. 'm' → logprob: -14.500080108642578
    6. '```' → logprob: -15.250080108642578
    7. 'md' → logprob: -16.000080108642578
    8. 'moder' → logprob: -16.125080108642578
    9. 'mods' → logprob: -16.625080108642578
    10. 'import' → logprob: -17.375080108642578

Token 564: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008060562540777028
    2. '=' → logprob: -7.125805854797363
    3. '1' → logprob: -13.625805854797363
    4. ',' → logprob: -15.250805854797363
    5. '_' → logprob: -16.50080680847168
    6. ' =
' → logprob: -17.87580680847168
    7. '```' → logprob: -18.00080680847168
    8. '   ' → logprob: -18.25080680847168
    9. ' ' → logprob: -18.37580680847168
    10. '=int' → logprob: -18.87580680847168

Token 565: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47415491938591003
    2. '10' → logprob: -0.9741549491882324
    3. ' ' → logprob: -9.474154472351074
    4. '109' → logprob: -14.849154472351074
    5. '101' → logprob: -15.349154472351074
    6. '(' → logprob: -15.974154472351074
    7. '   ' → logprob: -16.09915542602539
    8. '```' → logprob: -16.34915542602539
    9. '1' → logprob: -16.47415542602539
    10. '998' → logprob: -16.59915542602539

Token 566: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20142485201358795
    2. '100' → logprob: -1.7014248371124268
    3. '(' → logprob: -11.451424598693848
    4. '998' → logprob: -14.826424598693848
    5. ' ' → logprob: -15.451424598693848
    6. '1' → logprob: -16.326425552368164
    7. '999' → logprob: -16.451425552368164
    8. '101' → logprob: -16.701425552368164
    9. '```' → logprob: -16.826425552368164
    10. 'int' → logprob: -17.076425552368164

Token 567: ' **' (ID: 6240)
  Prédit: '147'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '147' → logprob: -0.12503516674041748
    2. '000' → logprob: -2.875035285949707
    3. '**' → logprob: -4.125035285949707
    4. '```' → logprob: -4.250035285949707
    5. '1' → logprob: -4.750035285949707
    6. '   ' → logprob: -6.125035285949707
    7. '148' → logprob: -6.250035285949707
    8. '_' → logprob: -6.500035285949707
    9. '154' → logprob: -7.000035285949707
    10. '146' → logprob: -7.125035285949707

Token 568: ' ' (ID: 220)
  Prédit: '61'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '61' → logprob: -0.0015256908955052495
    2. '31' → logprob: -6.50152587890625
    3. '63' → logprob: -10.75152587890625
    4. '59' → logprob: -14.12652587890625
    5. '64' → logprob: -14.50152587890625
    6. '32' → logprob: -15.37652587890625
    7. '33' → logprob: -15.62652587890625
    8. '53' → logprob: -16.12652587890625
    9. '57' → logprob: -17.12652587890625
    10. '60' → logprob: -18.00152587890625

Token 569: '31' (ID: 2911)
  Prédit: '61'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.005413284990936518
    2. '31' → logprob: -5.255413055419922
    3. '63' → logprob: -8.880413055419922
    4. '64' → logprob: -10.255413055419922
    5. '59' → logprob: -13.005413055419922
    6. '53' → logprob: -14.005413055419922
    7. '32' → logprob: -14.130413055419922
    8. '33' → logprob: -14.505413055419922
    9. '60' → logprob: -15.380413055419922
    10. '57' → logprob: -15.505413055419922

Token 570: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42931514978408813
    2. ' -' → logprob: -1.0543150901794434
    3. '+' → logprob: -7.804315090179443
    4. '   ' → logprob: -9.304315567016602
    5. '9' → logprob: -10.054315567016602
    6. ' +' → logprob: -10.679315567016602
    7. '
' → logprob: -11.804315567016602
    8. '19' → logprob: -11.929315567016602
    9. '```' → logprob: -12.429315567016602
    10. ' ' → logprob: -12.804315567016602

Token 571: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2694888114929199
    2. '9' → logprob: -2.14448881149292
    3. '7' → logprob: -2.14448881149292
    4. '3' → logprob: -7.51948881149292
    5. '19' → logprob: -7.51948881149292
    6. '-' → logprob: -8.394489288330078
    7. '31' → logprob: -8.394489288330078
    8. '61' → logprob: -9.269489288330078
    9. '29' → logprob: -9.394489288330078
    10. '11' → logprob: -10.144489288330078

Token 572: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.22885830700397491
    2. '1' → logprob: -1.8538583517074585
    3. '9' → logprob: -3.103858232498169
    4. '-' → logprob: -7.228858470916748
    5. '19' → logprob: -7.478858470916748
    6. '31' → logprob: -8.10385799407959
    7. '235' → logprob: -8.35385799407959
    8. '29' → logprob: -8.47885799407959
    9. '3' → logprob: -8.85385799407959
    10. '233' → logprob: -8.97885799407959

Token 573: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.683458685874939
    2. '   ' → logprob: -0.933458685874939
    3. 'extended' → logprob: -3.1834588050842285
    4. 's' → logprob: -4.0584588050842285
    5. '    
' → logprob: -4.4334588050842285
    6. 'hash' → logprob: -4.5584588050842285
    7. 'factor' → logprob: -4.6834588050842285
    8. ' extended' → logprob: -6.0584588050842285
    9. '```' → logprob: -6.1834588050842285
    10. 'S' → logprob: -6.6834588050842285

Token 574: '   ' (ID: 271)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7150524258613586
    2. 'repeat' → logprob: -0.8400524258613586
    3. '   ' → logprob: -2.590052366256714
    4. 's' → logprob: -7.215052604675293
    5. ' factor' → logprob: -7.340052604675293
    6. 'S' → logprob: -7.340052604675293
    7. 'extended' → logprob: -7.340052604675293
    8. ' repeat' → logprob: -7.840052604675293
    9. 'rep' → logprob: -8.465052604675293
    10. 'len' → logprob: -8.465052604675293

Token 575: ' rep' (ID: 2449)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.2258472740650177
    2. 'repeat' → logprob: -1.6008472442626953
    3. 'len' → logprob: -8.725847244262695
    4. 'rep' (adapté à ' rep') → logprob: -8.975847244262695
    5. 'fact' → logprob: -9.600847244262695
    6. ' factor' → logprob: -10.600847244262695
    7. '   ' → logprob: -10.975847244262695
    8. 'extend' → logprob: -11.725847244262695
    9. ' repeat' → logprob: -11.850847244262695
    10. 'f' → logprob: -12.225847244262695

Token 576: ' =' (ID: 314)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.08872666209936142
    2. 'eat' → logprob: -3.338726758956909
    3. '=' → logprob: -3.588726758956909
    4. 'et' → logprob: -4.58872652053833
    5. ' =' → logprob: -5.21372652053833
    6. 'factor' → logprob: -5.58872652053833
    7. 'lication' → logprob: -6.83872652053833
    8. 'e' → logprob: -7.83872652053833
    9. 'licate' → logprob: -7.96372652053833
    10. '   ' → logprob: -8.713726997375488

Token 577: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.023506928235292435
    2. ' calc' → logprob: -3.7735068798065186
    3. '(calc' → logprob: -8.273507118225098
    4. '((' → logprob: -12.898507118225098
    5. 'cal' → logprob: -14.023507118225098
    6. '   ' → logprob: -14.023507118225098
    7. ' ' → logprob: -14.648507118225098
    8. '(' → logprob: -14.773507118225098
    9. '.calc' → logprob: -15.023507118225098
    10. ' ((' → logprob: -15.023507118225098

Token 578: '_repeat' (ID: 109150)
  Prédit: '_repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repeat' → logprob: -1.5048530030981055e-06
    2. 'repeat' → logprob: -13.625001907348633
    3. '_rep' → logprob: -15.375001907348633
    4. '_factor' → logprob: -17.500001907348633
    5. '_REPEAT' → logprob: -17.625001907348633
    6. '_replace' → logprob: -18.125001907348633
    7. '_return' → logprob: -19.375001907348633
    8. '_re' → logprob: -19.500001907348633
    9. '(_' → logprob: -20.000001907348633
    10. '_continue' → logprob: -20.250001907348633

Token 579: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -3.7697225252486533e-06
    2. 'factor' → logprob: -12.875003814697266
    3. '_fact' → logprob: -14.375003814697266
    4. '_f' → logprob: -15.875003814697266
    5. '_repeat' → logprob: -16.000003814697266
    6. '_fac' → logprob: -16.250003814697266
    7. '_factory' → logprob: -16.750003814697266
    8. '_FACTOR' → logprob: -17.000003814697266
    9. '```' → logprob: -17.125003814697266
    10. 'Factor' → logprob: -17.750003814697266

Token 580: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.049755782238208e-05
    2. 'len' → logprob: -10.00005054473877
    3. '[len' → logprob: -12.75005054473877
    4. '=len' → logprob: -13.62505054473877
    5. '<len' → logprob: -14.87505054473877
    6. ',len' → logprob: -15.25005054473877
    7. ' len' → logprob: -16.250049591064453
    8. '(' → logprob: -16.375049591064453
    9. ' (' → logprob: -16.875049591064453
    10. '	len' → logprob: -17.500049591064453

Token 581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014618007466197014
    2. '(S' → logprob: -4.514617919921875
    3. '_t' → logprob: -6.139617919921875
    4. 'T' → logprob: -7.764617919921875
    5. '(T' → logprob: -7.764617919921875
    6. 'S' → logprob: -7.889617919921875
    7. 't' → logprob: -9.514617919921875
    8. '_s' → logprob: -9.764617919921875
    9. '_T' → logprob: -11.139617919921875
    10. '(' → logprob: -11.764617919921875

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5358694731257856e-05
    2. ',len' → logprob: -11.125035285949707
    3. ' ,' → logprob: -11.250035285949707
    4. ',
' → logprob: -12.000035285949707
    5. ',

' → logprob: -14.875035285949707
    6. '   ' → logprob: -15.000035285949707
    7. ')' → logprob: -15.000035285949707
    8. '‌,' → logprob: -16.500036239624023
    9. '=' → logprob: -17.375036239624023
    10. ',length' → logprob: -17.375036239624023

Token 583: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.0484450437361374e-05
    2. ' len' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.625040054321289
    4. '(len' → logprob: -16.75004005432129
    5. '[len' → logprob: -17.87504005432129
    6. '	len' → logprob: -18.00004005432129
    7. 'get' → logprob: -18.00004005432129
    8. '  ' → logprob: -18.87504005432129
    9. ' ' → logprob: -19.12504005432129
    10. 'length' → logprob: -19.12504005432129

Token 584: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.014269051142036915
    2. 't' → logprob: -4.26426887512207
    3. 'T' → logprob: -9.26426887512207
    4. '0' → logprob: -12.51426887512207
    5. ')' → logprob: -13.01426887512207
    6. 'len' → logprob: -13.76426887512207
    7. '_s' → logprob: -14.38926887512207
    8. '(S' → logprob: -14.82676887512207
    9. '(t' → logprob: -14.95176887512207
    10. '(' → logprob: -15.45176887512207

Token 585: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009168167016468942
    2. ')
' → logprob: -7.000916957855225
    3. '   ' → logprob: -12.750916481018066
    4. ')

' → logprob: -14.250916481018066
    5. ' )' → logprob: -14.625916481018066
    6. '))' → logprob: -15.125916481018066
    7. ')
' → logprob: -15.375916481018066
    8. '),' → logprob: -15.500916481018066
    9. ')`' → logprob: -15.625916481018066
    10. ' ' → logprob: -16.250917434692383

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12016253173351288
    2. 's' → logprob: -2.9951624870300293
    3. ' s' → logprob: -3.3701624870300293
    4. ' extended' → logprob: -4.370162487030029
    5. 'extended' → logprob: -4.995162487030029
    6. 'S' → logprob: -5.620162487030029
    7. ' S' → logprob: -6.120162487030029
    8. '<|end|>' → logprob: -6.870162487030029
    9. '_extended' → logprob: -7.120162487030029
    10. '    
' → logprob: -7.620162487030029

Token 587: ' S' (ID: 336)
  Prédit: 'extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extended' → logprob: -0.5658858418464661
    2. 'S' (adapté à ' S') → logprob: -1.0658857822418213
    3. 's' → logprob: -2.5658857822418213
    4. '   ' → logprob: -5.1908860206604
    5. ' extended' → logprob: -6.1908860206604
    6. 'ext' → logprob: -6.3158860206604
    7. 'extend' → logprob: -8.065885543823242
    8. ' S' → logprob: -8.065885543823242
    9. 'expanded' → logprob: -8.440885543823242
    10. 'Extended' → logprob: -8.940885543823242

Token 588: '_ext' (ID: 28733)
  Prédit: '_extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: -0.13088038563728333
    2. '_ext' → logprob: -2.130880355834961
    3. ' =' → logprob: -5.880880355834961
    4. 'ext' → logprob: -8.380880355834961
    5. '_extend' → logprob: -8.505880355834961
    6. 'extended' → logprob: -8.505880355834961
    7. '=' → logprob: -8.630880355834961
    8. '_' → logprob: -8.880880355834961
    9. '_exp' → logprob: -8.880880355834961
    10. '_ex' → logprob: -10.880880355834961

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138081431388855
    2. '=' → logprob: -1.3138082027435303
    3. '_extended' → logprob: -7.938807964324951
    4. 'ended' → logprob: -8.81380844116211
    5. 'end' → logprob: -11.56380844116211
    6. '_' → logprob: -11.68880844116211
    7. 'ender' → logprob: -12.56380844116211
    8. ' ' → logprob: -12.68880844116211
    9. 'extended' → logprob: -12.93880844116211
    10. '   ' → logprob: -13.06380844116211

Token 590: ' extend' (ID: 20239)
  Prédit: ' extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extend' → logprob: -0.6931636333465576
    2. 'extend' → logprob: -0.6931636333465576
    3. ' S' → logprob: -11.693163871765137
    4. 'S' → logprob: -12.068163871765137
    5. 'expand' → logprob: -14.193163871765137
    6. '.extend' → logprob: -14.443163871765137
    7. 'ext' → logprob: -15.318163871765137
    8. ' extended' → logprob: -15.943163871765137
    9. 'extended' → logprob: -15.943163871765137
    10. 'extends' → logprob: -16.06816291809082

Token 591: '_string' (ID: 8609)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.2741195559501648
    2. '_string' → logprob: -2.0241196155548096
    3. 'String' → logprob: -2.2741196155548096
    4. 'S' → logprob: -5.5241193771362305
    5. '_S' → logprob: -7.8991193771362305
    6. '_STRING' → logprob: -8.89911937713623
    7. '_String' → logprob: -8.89911937713623
    8. '(' → logprob: -10.02411937713623
    9. 'string' → logprob: -10.02411937713623
    10. '_' → logprob: -10.77411937713623

Token 592: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.250015258789062
    3. 'S' → logprob: -13.500015258789062
    4. '(s' → logprob: -14.375015258789062
    5. ' (' → logprob: -16.000015258789062
    6. '(
' → logprob: -16.500015258789062
    7. 's' → logprob: -18.750015258789062
    8. '<|end|>' → logprob: -19.125015258789062
    9. ')' → logprob: -19.625015258789062
    10. '<S' → logprob: -19.750015258789062

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -10.875020027160645
    3. '(rep' → logprob: -14.875020027160645
    4. ',
' → logprob: -15.875020027160645
    5. '   ' → logprob: -16.000019073486328
    6. 'rep' → logprob: -17.125019073486328
    7. ',S' → logprob: -18.625019073486328
    8. ',s' → logprob: -19.000019073486328
    9. '```' → logprob: -19.125019073486328
    10. ',re' → logprob: -19.125019073486328

Token 594: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.0005532711511477828
    2. ' rep' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.125553131103516
    4. '(rep' → logprob: -16.125553131103516
    5. ' ' → logprob: -18.000553131103516
    6. 'repr' → logprob: -18.375553131103516
    7. '	rep' → logprob: -18.375553131103516
    8. ')' → logprob: -18.500553131103516
    9. '2' → logprob: -19.000553131103516
    10. '  ' → logprob: -19.375553131103516

Token 595: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038479414070025086
    2. ')
' → logprob: -7.87538480758667
    3. ')

' → logprob: -13.125384330749512
    4. ')
' → logprob: -13.750384330749512
    5. ' )' → logprob: -13.750384330749512
    6. '   ' → logprob: -15.625384330749512
    7. '),' → logprob: -16.500385284423828
    8. ').' → logprob: -16.750385284423828
    9. ')`' → logprob: -17.000385284423828
    10. '))' → logprob: -17.375385284423828

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09589390456676483
    2. 'hash' → logprob: -2.7208938598632812
    3. ' hash' → logprob: -4.220893859863281
    4. '
' → logprob: -4.845893859863281
    5. 'base' → logprob: -6.845893859863281
    6. '```' → logprob: -7.595893859863281
    7. ' base' → logprob: -8.095893859863281
    8. 'S' → logprob: -8.470893859863281
    9. '	hash' → logprob: -8.720893859863281
    10. '(hash' → logprob: -9.095893859863281

Token 597: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -1.4974866644479334e-05
    2. '   ' → logprob: -11.750015258789062
    3. ' hash' → logprob: -12.250015258789062
    4. 'base' → logprob: -13.750015258789062
    5. 'h' → logprob: -15.125015258789062
    6. '#' → logprob: -15.500015258789062
    7. 'len' → logprob: -15.625015258789062
    8. '	hash' → logprob: -16.000015258789062
    9. 'hs' → logprob: -16.125015258789062
    10. '(hash' → logprob: -16.125015258789062

Token 598: 'S' (ID: 50)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.06235528364777565
    2. '_arr' → logprob: -2.8123552799224854
    3. '_S' → logprob: -8.437355041503906
    4. '_' → logprob: -9.812355041503906
    5. 'arr' → logprob: -9.937355041503906
    6. '_val' → logprob: -10.062355041503906
    7. 's' → logprob: -11.312355041503906
    8. 'S' → logprob: -12.312355041503906
    9. '_array' → logprob: -12.562355041503906
    10. '_str' → logprob: -14.187355041503906

Token 599: ' =' (ID: 314)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.006905409973114729
    2. '_' → logprob: -5.006905555725098
    3. ' =' → logprob: -9.006905555725098
    4. '=' → logprob: -9.756905555725098
    5. '_=' → logprob: -12.631905555725098
    6. 'arr' → logprob: -12.756905555725098
    7. '=_' → logprob: -13.631905555725098
    8. '_array' → logprob: -14.131905555725098
    9. '_val' → logprob: -14.881905555725098
    10. '_s' → logprob: -15.631905555725098

Token 600: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.004078758880496025
    2. ' compute' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.25407886505127
    4. ' ' → logprob: -16.754077911376953
    5. '.compute' → logprob: -17.629077911376953
    6. '[' → logprob: -17.879077911376953
    7. 'computer' → logprob: -18.004077911376953
    8. '_compute' → logprob: -19.879077911376953
    9. '  ' → logprob: -20.254077911376953
    10. 'calculate' → logprob: -20.504077911376953

Token 601: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.375008583068848
    3. '_array' → logprob: -13.500008583068848
    4. '_val' → logprob: -13.625008583068848
    5. 'hash' → logprob: -14.750008583068848
    6. '_arr' → logprob: -14.750008583068848
    7. '```' → logprob: -15.875008583068848
    8. '_string' → logprob: -16.25000762939453
    9. '_s' → logprob: -16.25000762939453
    10. '"_' → logprob: -16.62500762939453

Token 602: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.00019102399528492242
    2. '_val' → logprob: -8.750190734863281
    3. 'arr' → logprob: -10.750190734863281
    4. '_array' → logprob: -11.500190734863281
    5. '(arr' → logprob: -15.500190734863281
    6. 'Arr' → logprob: -15.875190734863281
    7. '_' → logprob: -16.25019073486328
    8. 'val' → logprob: -16.37519073486328
    9. '_arrays' → logprob: -16.37519073486328
    10. '```' → logprob: -17.00019073486328

Token 603: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -3.309382373117842e-05
    2. '(' → logprob: -10.375033378601074
    3. '(s' → logprob: -13.750033378601074
    4. 'S' → logprob: -15.125033378601074
    5. '<|end|>' → logprob: -15.250033378601074
    6. 's' → logprob: -15.625033378601074
    7. '(
' → logprob: -15.750033378601074
    8. ' (' → logprob: -17.250032424926758
    9. '((' → logprob: -18.500032424926758
    10. ')' → logprob: -18.750032424926758

Token 604: '_ext' (ID: 28733)
  Prédit: '_ext'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ext' → logprob: -8.804671233519912e-05
    2. 'ext' → logprob: -9.37508773803711
    3. '_EXT' → logprob: -13.75008773803711
    4. ')' → logprob: -14.12508773803711
    5. 'Ext' → logprob: -15.12508773803711
    6. ')_' → logprob: -15.25008773803711
    7. ',' → logprob: -15.75008773803711
    8. '
' → logprob: -16.25008773803711
    9. '_,' → logprob: -16.25008773803711
    10. '_extended' → logprob: -16.25008773803711

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.117345684382599e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ')' → logprob: -13.000020980834961
    4. '   ' → logprob: -13.625020980834961
    5. ',
' → logprob: -14.500020980834961
    6. '[' → logprob: -15.500020980834961
    7. '<|end|>' → logprob: -17.25002098083496
    8. ' ' → logprob: -17.50002098083496
    9. ',)' → logprob: -17.62502098083496
    10. '),' → logprob: -17.62502098083496

Token 606: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.007026865612715483
    2. ' base' → logprob: -5.007026672363281
    3. '26' → logprob: -8.132026672363281
    4. '   ' → logprob: -11.257026672363281
    5. '	base' → logprob: -12.757026672363281
    6. '(base' → logprob: -14.257026672363281
    7. ' ' → logprob: -15.632026672363281
    8. '    
' → logprob: -15.757026672363281
    9. '<|end|>' → logprob: -15.882026672363281
    10. ')' → logprob: -16.38202667236328

Token 607: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',
' → logprob: -14.250003814697266
    4. '   ' → logprob: -15.375003814697266
    5. ')' → logprob: -15.875003814697266
    6. 'MOD' → logprob: -16.250003814697266
    7. ' MOD' → logprob: -18.250003814697266
    8. 'mod' → logprob: -18.500003814697266
    9. '=' → logprob: -18.625003814697266
    10. ',

' → logprob: -18.750003814697266

Token 608: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. 'mod' → logprob: -18.3750057220459
    4. '   ' → logprob: -19.6250057220459
    5. '_MOD' → logprob: -19.7500057220459
    6. 'MO' → logprob: -20.1250057220459
    7. '
' → logprob: -20.7500057220459
    8. ' ' → logprob: -21.1250057220459
    9. '.MOD' → logprob: -21.3750057220459
    10. 'M' → logprob: -22.0000057220459

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001710997661575675
    2. ',' → logprob: -6.376710891723633
    3. ')
' → logprob: -12.376710891723633
    4. ' )' → logprob: -13.501710891723633
    5. ',)' → logprob: -13.876710891723633
    6. '),' → logprob: -14.251710891723633
    7. '   ' → logprob: -14.751710891723633
    8. '<|end|>' → logprob: -15.251710891723633
    9. ',
' → logprob: -15.501710891723633
    10. '[' → logprob: -15.626710891723633

Token 610: '   ' (ID: 271)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.44596269726753235
    2. '   ' → logprob: -1.07096266746521
    3. ' hash' → logprob: -4.320962905883789
    4. '
' → logprob: -6.820962905883789
    5. '	hash' → logprob: -6.820962905883789
    6. '```' → logprob: -7.945962905883789
    7. '    
' → logprob: -8.445962905883789
    8. '(hash' → logprob: -8.570962905883789
    9. 't' → logprob: -8.570962905883789
    10. 'T' → logprob: -8.820962905883789

Token 611: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' (adapté à ' hash') → logprob: -6.420598219847307e-05
    2. ' hash' → logprob: -10.6250638961792
    3. 'has' → logprob: -10.8750638961792
    4. 'ht' → logprob: -11.8750638961792
    5. 't' → logprob: -12.0000638961792
    6. 'h' → logprob: -12.3750638961792
    7. 'ha' → logprob: -14.0000638961792
    8. '	hash' → logprob: -14.5000638961792
    9. 'hashed' → logprob: -15.0000638961792
    10. 'Hash' → logprob: -15.0000638961792

Token 612: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.005015171132981777
    2. 't' → logprob: -5.5050153732299805
    3. '_t' → logprob: -7.2550153732299805
    4. 'val' → logprob: -9.00501537322998
    5. '_val' → logprob: -9.88001537322998
    6. '_T' → logprob: -10.38001537322998
    7. 'Val' → logprob: -11.25501537322998
    8. '
' → logprob: -13.00501537322998
    9. '```' → logprob: -13.81751537322998
    10. ' T' → logprob: -13.88001537322998

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616935461759567
    2. '=' → logprob: -4.758616924285889
    3. ',' → logprob: -13.758617401123047
    4. ')' → logprob: -14.383617401123047
    5. '_' → logprob: -15.008617401123047
    6. ' ' → logprob: -15.383617401123047
    7. '_val' → logprob: -16.258617401123047
    8. '[' → logprob: -16.633617401123047
    9. ' =
' → logprob: -17.258617401123047
    10. '<|end|>' → logprob: -17.508617401123047

Token 614: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.005233882926404476
    2. ' compute' → logprob: -5.2552337646484375
    3. 'calc' → logprob: -16.880233764648438
    4. 'calculate' → logprob: -17.630233764648438
    5. '   ' → logprob: -18.005233764648438
    6. '.compute' → logprob: -18.755233764648438
    7. 'computer' → logprob: -18.880233764648438
    8. '_compute' → logprob: -19.755233764648438
    9. '  ' → logprob: -20.880233764648438
    10. ' ' → logprob: -20.880233764648438

Token 615: '_hash' (ID: 20844)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.449230819940567
    2. 'compute' → logprob: -1.1992307901382446
    3. '_hash' → logprob: -3.074230909347534
    4. 'val' → logprob: -4.699230670928955
    5. '_compute' → logprob: -5.824230670928955
    6. ' compute' → logprob: -6.324230670928955
    7. 'hash' → logprob: -8.449231147766113
    8. '_' → logprob: -10.699231147766113
    9. '```' → logprob: -10.699231147766113
    10. 'Val' → logprob: -10.824231147766113

Token 616: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.013212822377681732
    2. 'val' → logprob: -4.38821268081665
    3. 'compute' → logprob: -7.38821268081665
    4. 'Val' → logprob: -9.888213157653809
    5. '_arr' → logprob: -11.138213157653809
    6. 'arr' → logprob: -12.388213157653809
    7. '(val' → logprob: -12.638213157653809
    8. ' compute' → logprob: -12.888213157653809
    9. '_VAL' → logprob: -13.638213157653809
    10. 'S' → logprob: -14.263213157653809

Token 617: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00010247035970678553
    2. '(' → logprob: -9.375102043151855
    3. ' (' → logprob: -11.375102043151855
    4. 'T' → logprob: -12.250102043151855
    5. '(
' → logprob: -13.750102043151855
    6. '(t' → logprob: -15.625102043151855
    7. '((' → logprob: -17.500102996826172
    8. ' T' → logprob: -17.750102996826172
    9. '
' → logprob: -17.875102996826172
    10. ',' → logprob: -18.250102996826172

Token 618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019678890239447355
    2. ')' → logprob: -6.251967906951904
    3. ' ,' → logprob: -10.251967430114746
    4. ',)' → logprob: -13.876967430114746
    5. '(base' → logprob: -14.001967430114746
    6. ',
' → logprob: -14.251967430114746
    7. '   ' → logprob: -15.001967430114746
    8. ')
' → logprob: -15.251967430114746
    9. '),' → logprob: -15.376967430114746
    10. '[' → logprob: -15.626967430114746

Token 619: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.07891006022691727
    2. ' base' → logprob: -2.5789101123809814
    3. 'MOD' → logprob: -11.328909873962402
    4. 'hash' → logprob: -12.828909873962402
    5. ' ' → logprob: -13.453909873962402
    6. '(base' → logprob: -13.578909873962402
    7. '26' → logprob: -13.828909873962402
    8. '0' → logprob: -14.578909873962402
    9. 'Base' → logprob: -15.078909873962402
    10. '   ' → logprob: -15.328909873962402

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.751746746478602e-05
    2. ' ,' → logprob: -10.00004768371582
    3. 'MOD' → logprob: -13.87504768371582
    4. ',
' → logprob: -14.62504768371582
    5. ')' → logprob: -15.12504768371582
    6. '```' → logprob: -16.62504768371582
    7. ' MOD' → logprob: -17.12504768371582
    8. '),' → logprob: -17.12504768371582
    9. '`,' → logprob: -17.25004768371582
    10. 's' → logprob: -17.50004768371582

Token 621: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0019286326132714748
    2. ' MOD' → logprob: -6.251928806304932
    3. '_MOD' → logprob: -17.501928329467773
    4. 'mod' → logprob: -17.626928329467773
    5. '.MOD' → logprob: -18.876928329467773
    6. ' ' → logprob: -19.126928329467773
    7. '   ' → logprob: -19.501928329467773
    8. '0' → logprob: -20.751928329467773
    9. 'MO' → logprob: -21.126928329467773
    10. ')' → logprob: -21.251928329467773

Token 622: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.500006675720215
    4. ' )' → logprob: -15.125006675720215
    5. '))' → logprob: -17.0000057220459
    6. '())' → logprob: -17.1250057220459
    7. ')

' → logprob: -18.1250057220459
    8. '),' → logprob: -18.6250057220459
    9. ')#' → logprob: -19.0000057220459
    10. '#' → logprob: -19.0000057220459

Token 623: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06684368848800659
    2. 'ok' → logprob: -3.1918437480926514
    3. ' ok' → logprob: -3.8168437480926514
    4. '	ok' → logprob: -6.816843509674072
    5. '```' → logprob: -8.69184398651123
    6. '
' → logprob: -9.94184398651123
    7. 'OK' → logprob: -10.06684398651123
    8. 'matches' → logprob: -10.44184398651123
    9. '<|end|>' → logprob: -10.44184398651123
    10. ' matches' → logprob: -10.69184398651123

Token 624: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -8.566264295950532e-05
    2. 'matches' → logprob: -9.375085830688477
    3. ' ok' → logprob: -15.125085830688477
    4. 'match' → logprob: -15.250085830688477
    5. 'is' → logprob: -16.875085830688477
    6. '```' → logprob: -16.875085830688477
    7. 'okay' → logprob: -16.875085830688477
    8. 'OK' → logprob: -17.250085830688477
    9. '	ok' → logprob: -17.500085830688477
    10. '   ' → logprob: -17.625085830688477

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048927515745162964
    2. '=' → logprob: -3.0489275455474854
    3. '_' → logprob: -8.298927307128906
    4. '[' → logprob: -10.298927307128906
    5. ',' → logprob: -11.798927307128906
    6. ')' → logprob: -11.923927307128906
    7. '<|end|>' → logprob: -12.048927307128906
    8. '_=' → logprob: -12.173927307128906
    9. 's' → logprob: -12.173927307128906
    10. '   ' → logprob: -12.298927307128906

Token 626: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.038043901324272156
    2. ' check' → logprob: -3.288043975830078
    3. 'is' → logprob: -13.788043975830078
    4. '[' → logprob: -14.413043975830078
    5. ' is' → logprob: -15.288043975830078
    6. '[]' → logprob: -15.413043975830078
    7. ' [' → logprob: -16.288043975830078
    8. ' ' → logprob: -16.288043975830078
    9. '(check' → logprob: -16.288043975830078
    10. '	check' → logprob: -16.288043975830078

Token 627: '_matches' (ID: 97462)
  Prédit: '_matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.0002193908003391698
    2. 'matches' → logprob: -8.625219345092773
    3. '(matches' → logprob: -11.250219345092773
    4. '_match' → logprob: -12.125219345092773
    5. 's' → logprob: -12.250219345092773
    6. '(' → logprob: -12.875219345092773
    7. '_s' → logprob: -13.000219345092773
    8. 'Matches' → logprob: -13.000219345092773
    9. '```' → logprob: -13.250219345092773
    10. '_' → logprob: -13.250219345092773

Token 628: '(hash' (ID: 57662)
  Prédit: '(hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hash' → logprob: -0.00046379686682485044
    2. '(' → logprob: -7.750463962554932
    3. 'hash' → logprob: -10.500463485717773
    4. '(
' → logprob: -12.875463485717773
    5. ' (' → logprob: -13.500463485717773
    6. ' hash' → logprob: -15.000463485717773
    7. '(h' → logprob: -15.250463485717773
    8. '/hash' → logprob: -15.375463485717773
    9. '```' → logprob: -15.625463485717773
    10. ',' → logprob: -15.750463485717773

Token 629: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.000766148732509464
    2. '_s' → logprob: -7.375766277313232
    3. '_S' → logprob: -9.125765800476074
    4. 's' → logprob: -11.250765800476074
    5. ')' → logprob: -12.375765800476074
    6. '(S' → logprob: -12.375765800476074
    7. '```' → logprob: -13.125765800476074
    8. ',' → logprob: -13.500765800476074
    9. ' S' → logprob: -13.875765800476074
    10. '_' → logprob: -13.875765800476074

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ',
' → logprob: -11.500024795532227
    3. '(hash' → logprob: -11.500024795532227
    4. ' ,' → logprob: -12.625024795532227
    5. ',h' → logprob: -15.500024795532227
    6. '=' → logprob: -15.625024795532227
    7. '[' → logprob: -15.750024795532227
    8. ')' → logprob: -15.750024795532227
    9. ',

' → logprob: -15.875024795532227
    10. '(' → logprob: -15.875024795532227

Token 631: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.03808911517262459
    2. ' hash' → logprob: -3.2880890369415283
    3. '(hash' → logprob: -11.03808879852295
    4. '	hash' → logprob: -11.16308879852295
    5. '   ' → logprob: -12.28808879852295
    6. '[' → logprob: -12.41308879852295
    7. ' ' → logprob: -12.78808879852295
    8. '
' → logprob: -13.66308879852295
    9. '  ' → logprob: -13.91308879852295
    10. 'h' → logprob: -14.78808879852295

Token 632: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00022523177904076874
    2. 'hash' → logprob: -8.750225067138672
    3. 't' → logprob: -10.250225067138672
    4. '_t' → logprob: -11.875225067138672
    5. 'ash' → logprob: -12.000225067138672
    6. ',' → logprob: -12.750225067138672
    7. '_T' → logprob: -13.250225067138672
    8. ' hash' → logprob: -13.312725067138672
    9. '(hash' → logprob: -13.687725067138672
    10. 'Т' → logprob: -13.812725067138672

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7372048862162046e-05
    2. ' ,' → logprob: -10.625027656555176
    3. 'base' → logprob: -13.375027656555176
    4. ',
' → logprob: -15.125027656555176
    5. '=' → logprob: -15.250027656555176
    6. '   ' → logprob: -15.375027656555176
    7. '```' → logprob: -15.750027656555176
    8. '(base' → logprob: -15.875027656555176
    9. ')' → logprob: -16.12502670288086
    10. '[' → logprob: -16.25002670288086

Token 634: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.014165983535349369
    2. ' base' → logprob: -4.264165878295898
    3. '   ' → logprob: -14.264165878295898
    4. '26' → logprob: -14.514165878295898
    5. '(base' → logprob: -15.014165878295898
    6. '
' → logprob: -15.264165878295898
    7. ' ' → logprob: -15.514165878295898
    8. '	base' → logprob: -15.764165878295898
    9. '_base' → logprob: -16.6391658782959
    10. 'hash' → logprob: -16.7641658782959

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011355629976605996
    2. ' ,' → logprob: -9.125113487243652
    3. ',
' → logprob: -12.625113487243652
    4. '```' → logprob: -14.625113487243652
    5. '`,' → logprob: -15.875113487243652
    6. 'MOD' → logprob: -15.875113487243652
    7. ')' → logprob: -15.875113487243652
    8. '   ' → logprob: -16.12511444091797
    9. '‌,' → logprob: -17.12511444091797
    10. ',M' → logprob: -17.12511444091797

Token 636: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0031791406217962503
    2. ' MOD' → logprob: -5.75317907333374
    3. 'mod' → logprob: -13.753179550170898
    4. '
' → logprob: -15.753179550170898
    5. '```' → logprob: -16.5031795501709
    6. ' ' → logprob: -17.0031795501709
    7. '_MOD' → logprob: -17.0031795501709
    8. '.MOD' → logprob: -17.5031795501709
    9. '   ' → logprob: -17.8781795501709
    10. ')' → logprob: -18.5031795501709

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003680005669593811
    2. ',len' → logprob: -5.628680229187012
    3. ' ,' → logprob: -9.503680229187012
    4. 'len' → logprob: -13.003680229187012
    5. '[len' → logprob: -14.128680229187012
    6. ',
' → logprob: -14.253680229187012
    7. '   ' → logprob: -14.378680229187012
    8. ' len' → logprob: -15.128680229187012
    9. '=len' → logprob: -15.253680229187012
    10. ',length' → logprob: -15.378680229187012

Token 638: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001502598519437015
    2. ' len' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '[len' → logprob: -17.001502990722656
    5. '(len' → logprob: -18.126502990722656
    6. '	len' → logprob: -18.501502990722656
    7. '    ' → logprob: -18.751502990722656
    8. '
' → logprob: -18.751502990722656
    9. 'length' → logprob: -19.251502990722656
    10. ' ' → logprob: -19.501502990722656

Token 639: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.6047699318733066e-05
    2. 't' → logprob: -11.125016212463379
    3. 'len' → logprob: -14.375016212463379
    4. '   ' → logprob: -15.625016212463379
    5. 'T' → logprob: -15.875016212463379
    6. ')' → logprob: -15.875016212463379
    7. '```' → logprob: -17.000015258789062
    8. '(len' → logprob: -17.500015258789062
    9. '_T' → logprob: -17.875015258789062
    10. '0' → logprob: -17.875015258789062

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011045700375689194
    2. ',len' → logprob: -9.625110626220703
    3. ')' → logprob: -10.750110626220703
    4. ' ,' → logprob: -11.625110626220703
    5. '   ' → logprob: -11.875110626220703
    6. ',
' → logprob: -12.625110626220703
    7. 'len' → logprob: -14.250110626220703
    8. '```' → logprob: -14.375110626220703
    9. '[' → logprob: -14.750110626220703
    10. '),' → logprob: -15.000110626220703

Token 641: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031822288874536753
    2. ' len' → logprob: -5.753182411193848
    3. '   ' → logprob: -12.378182411193848
    4. '  ' → logprob: -15.753182411193848
    5. ' ' → logprob: -16.12818145751953
    6. '    ' → logprob: -16.87818145751953
    7. '
' → logprob: -18.62818145751953
    8. '	len' → logprob: -18.62818145751953
    9. '       ' → logprob: -19.12818145751953
    10. '           ' → logprob: -19.75318145751953

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. ')' → logprob: -16.375
    4. 'o' → logprob: -16.5
    5. '۰' → logprob: -18.625
    6. '_' → logprob: -18.75
    7. '(' → logprob: -19.0
    8. '):' → logprob: -19.375
    9. 'of' → logprob: -19.5
    10. ',' → logprob: -19.75

Token 643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.000011444091797
    4. ' )' → logprob: -15.750011444091797
    5. ',' → logprob: -16.875011444091797
    6. '))' → logprob: -17.375011444091797
    7. ')

' → logprob: -17.500011444091797
    8. ')`' → logprob: -18.000011444091797
    9. ']' → logprob: -18.250011444091797
    10. '[' → logprob: -18.250011444091797

Token 644: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01635950244963169
    2. '
' → logprob: -5.016359329223633
    3. 'result' → logprob: -5.516359329223633
    4. 'max' → logprob: -6.141359329223633
    5. '```' → logprob: -6.141359329223633
    6. 'ret' → logprob: -7.391359329223633
    7. 'count' → logprob: -8.266359329223633
    8. '    
' → logprob: -8.641359329223633
    9. 'return' → logprob: -10.641359329223633
    10. ' result' → logprob: -10.891359329223633

Token 645: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3791184425354004
    2. '   ' → logprob: -2.1291184425354004
    3. 'ret' → logprob: -2.3791184425354004
    4. 'print' → logprob: -3.2541184425354004
    5. 'max' → logprob: -3.2541184425354004
    6. 'res' → logprob: -3.7541184425354004
    7. 'answer' → logprob: -6.5041184425354
    8. 'ans' → logprob: -6.6291184425354
    9. '```' → logprob: -8.004117965698242
    10. 'chain' → logprob: -10.504117965698242

Token 646: ' ret' (ID: 2881)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5992133021354675
    2. 'print' → logprob: -1.3492133617401123
    3. 'ret' (adapté à ' ret') → logprob: -2.3492133617401123
    4. 'max' → logprob: -2.8492133617401123
    5. 'res' → logprob: -3.3492133617401123
    6. 'ans' → logprob: -6.599213123321533
    7. 'answer' → logprob: -6.599213123321533
    8. '   ' → logprob: -10.349213600158691
    9. 'count' → logprob: -10.474213600158691
    10. 'chain' → logprob: -10.474213600158691

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009800715371966362
    2. '=' → logprob: -4.634800910949707
    3. ' ' → logprob: -10.259800910949707
    4. ',' → logprob: -12.134800910949707
    5. ' =
' → logprob: -14.009800910949707
    6. '  ' → logprob: -14.009800910949707
    7. '_' → logprob: -14.509800910949707
    8. ' ,' → logprob: -14.759800910949707
    9. 'space' → logprob: -14.759800910949707
    10. '   ' → logprob: -15.259800910949707

Token 648: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.006715728435665369
    2. ' find' → logprob: -5.006715774536133
    3. '(find' → logprob: -15.881715774536133
    4. '   ' → logprob: -16.756715774536133
    5. '	find' → logprob: -16.881715774536133
    6. '=find' → logprob: -17.631715774536133
    7. '0' → logprob: -18.006715774536133
    8. ' ' → logprob: -18.131715774536133
    9. '.find' → logprob: -19.006715774536133
    10. '  ' → logprob: -19.381715774536133

Token 649: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.796184723294573e-06
    2. 'max' → logprob: -12.125005722045898
    3. '_' → logprob: -16.3750057220459
    4. '```' → logprob: -16.6250057220459
    5. ' _' → logprob: -17.0000057220459
    6. 'Max' → logprob: -17.2500057220459
    7. ')_' → logprob: -17.7500057220459
    8. '_MAX' → logprob: -18.0000057220459
    9. '_min' → logprob: -18.6250057220459
    10. '`' → logprob: -18.6250057220459

Token 650: '_chain' (ID: 74449)
  Prédit: '_chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chain' → logprob: -6.034592388459714e-06
    2. 'chain' → logprob: -12.875005722045898
    3. '_CHAIN' → logprob: -14.000005722045898
    4. 'Chain' → logprob: -14.125005722045898
    5. '```' → logprob: -14.250005722045898
    6. 'ret' → logprob: -15.375005722045898
    7. '_ch' → logprob: -15.375005722045898
    8. '\' → logprob: -15.500005722045898
    9. '_max' → logprob: -16.0000057220459
    10. 'max' → logprob: -16.0000057220459

Token 651: '(ok' (ID: 128325)
  Prédit: '(ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ok' → logprob: -5.512236498361744e-07
    2. 'ok' → logprob: -14.875000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' ok' → logprob: -17.375
    5. '(opt' → logprob: -18.5
    6. ' (' → logprob: -18.875
    7. 'Ok' → logprob: -18.875
    8. '	ok' → logprob: -18.875
    9. ''ok' → logprob: -19.5
    10. '```' → logprob: -19.875

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000510260637383908
    2. ',len' → logprob: -7.625510215759277
    3. ' ,' → logprob: -10.875510215759277
    4. '   ' → logprob: -13.375510215759277
    5. '(len' → logprob: -13.625510215759277
    6. '(' → logprob: -14.875510215759277
    7. ',length' → logprob: -17.125511169433594
    8. '```' → logprob: -17.500511169433594
    9. ',
' → logprob: -17.875511169433594
    10. '(ret' → logprob: -18.000511169433594

Token 653: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019286326132714748
    2. ' len' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.376928329467773
    4. ' ' → logprob: -20.376928329467773
    5. '	len' → logprob: -20.376928329467773
    6. '(len' → logprob: -21.001928329467773
    7. '    ' → logprob: -21.376928329467773
    8. '[len' → logprob: -21.501928329467773
    9. '  ' → logprob: -21.626928329467773
    10. '       ' → logprob: -22.501928329467773

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.625
    3. '(' → logprob: -17.375
    4. '(len' → logprob: -18.5
    5. '۰' → logprob: -18.875
    6. ')' → logprob: -19.0
    7. 'o' → logprob: -19.25
    8. 'ok' → logprob: -19.75
    9. '_' → logprob: -20.0
    10. ' ' → logprob: -20.125

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -13.000003814697266
    3. ',len' → logprob: -13.875003814697266
    4. '   ' → logprob: -15.875003814697266
    5. ',
' → logprob: -17.000003814697266
    6. ')' → logprob: -18.125003814697266
    7. '```' → logprob: -19.750003814697266
    8. ',length' → logprob: -19.875003814697266
    9. '=' → logprob: -20.000003814697266
    10. ',int' → logprob: -20.125003814697266

Token 656: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005537479883059859
    2. ' len' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.250554084777832
    4. '(len' → logprob: -17.875553131103516
    5. ' ' → logprob: -18.250553131103516
    6. '	len' → logprob: -18.375553131103516
    7. '[len' → logprob: -18.625553131103516
    8. '
' → logprob: -18.750553131103516
    9. '  ' → logprob: -19.250553131103516
    10. '       ' → logprob: -19.375553131103516

Token 657: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00012368128227535635
    2. 't' → logprob: -9.000123977661133
    3. '```' → logprob: -16.125123977661133
    4. ')' → logprob: -17.000123977661133
    5. 'T' → logprob: -17.375123977661133
    6. '	t' → logprob: -18.625123977661133
    7. '`t' → logprob: -18.750123977661133
    8. '-t' → logprob: -19.125123977661133
    9. '\' → logprob: -19.250123977661133
    10. ')t' → logprob: -19.500123977661133

Token 658: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20402710139751434
    2. ')
' → logprob: -1.7040270566940308
    3. '   ' → logprob: -5.95402717590332
    4. ')
' → logprob: -11.57902717590332
    5. '()' → logprob: -13.32902717590332
    6. ' )' → logprob: -13.82902717590332
    7. '())
' → logprob: -13.95402717590332
    8. ' )
' → logprob: -14.07902717590332
    9. '())' → logprob: -14.70402717590332
    10. ')

' → logprob: -15.07902717590332

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002760533709079027
    2. 'print' → logprob: -6.252760410308838
    3. '<|end|>' → logprob: -8.127760887145996
    4. '```' → logprob: -8.502760887145996
    5. 'return' → logprob: -8.877760887145996
    6. '
' → logprob: -9.252760887145996
    7. '    
' → logprob: -10.002760887145996
    8. ' return' → logprob: -10.752760887145996
    9. ' print' → logprob: -11.627760887145996
    10. '	return' → logprob: -11.752760887145996

Token 660: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869578540325165
    2. 'print' (adapté à ' print') → logprob: -1.1369578838348389
    3. 'return' → logprob: -10.136958122253418
    4. ' print' → logprob: -11.011958122253418
    5. '```' → logprob: -11.011958122253418
    6. 'if' → logprob: -11.261958122253418
    7. '
' → logprob: -14.636958122253418
    8. '	print' → logprob: -14.761958122253418
    9. '<|end|>' → logprob: -15.636958122253418
    10. '    
' → logprob: -15.636958122253418

Token 661: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.375032424926758
    3. 'ret' → logprob: -14.625032424926758
    4. ' (' → logprob: -16.125032424926758
    5. '()' → logprob: -16.125032424926758
    6. '$ret' → logprob: -17.750032424926758
    7. '(
' → logprob: -17.875032424926758
    8. '(return' → logprob: -18.375032424926758
    9. '('' → logprob: -18.750032424926758
    10. '(re' → logprob: -18.750032424926758

Token 662: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -15.125000953674316
    3. '())' → logprob: -15.250000953674316
    4. ')`' → logprob: -15.375000953674316
    5. ' )' → logprob: -16.125001907348633
    6. ')
' → logprob: -16.125001907348633
    7. '))' → logprob: -17.500001907348633
    8. '`)' → logprob: -17.875001907348633
    9. ')#' → logprob: -18.750001907348633
    10. ')**' → logprob: -18.875001907348633

Token 663: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0022959671914577484
    2. '```' → logprob: -7.627295970916748
    3. 'main' → logprob: -7.752295970916748
    4. '_' → logprob: -8.12729549407959
    5. '#' → logprob: -8.12729549407959
    6. '<|end|>' → logprob: -8.37729549407959
    7. ' if' → logprob: -9.00229549407959
    8. 'read' → logprob: -9.12729549407959
    9. ')' → logprob: -9.37729549407959
    10. '[' → logprob: -9.62729549407959

Token 664: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 662
Tokens correctement prédits (1ère position, stricte): 296
Tokens correctement prédits (1ère position, avec adaptation): 319
Tokens correctement prédits (top 10): 583
Précision stricte (1ère position): 44.71%
Précision adaptée (1ère position): 48.19%
Précision (top 10): 88.07%
================================================================================
