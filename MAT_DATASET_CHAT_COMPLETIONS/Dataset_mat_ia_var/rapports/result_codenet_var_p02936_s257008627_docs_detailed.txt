================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def build_tree(n, edge_list):
    """
    Construit la représentation par listes d'adjacence d'un arbre non orienté.

    Args:
        n (int): Nombre de sommets dans l'arbre.
        edge_list (list of tuple): Liste des arêtes, chaque arête étant une paire (a, b).

    Returns:
        list: Liste d'adjacence où chaque index i contient une liste des sommets adjacents à i.
    """
    tree = [[] for _ in range(n + 1)]  # Initialisation d'une liste vide pour chaque sommet (1-indicé)
    for a, b in edge_list:
        tree[a].append(b)  # Ajoute b à la liste des voisins de a
        tree[b].append(a)  # Ajoute a à la liste des voisins de b (car non orienté)
    return tree

def propagate_counts(n, tree, cnt):
    """
    Propagation des valeurs cumulées le long de l'arbre à partir du sommet racine (1).

    Args:
        n (int): Nombre de sommets dans l'arbre.
        tree (list): Liste d'adjacence représentant l'arbre.
        cnt (list): Liste contenant la valeur initiale de chaque sommet (1-indicé).

    Returns:
        list: Liste mise à jour où chaque sommet i contient la somme des valeurs cumulées jusqu'à lui.
    """
    stack = deque()       # Utilisé pour un parcours type DFS itératif
    stack.append(1)       # On commence depuis la racine (supposée être 1)
    checked = set()       # Garde trace des sommets déjà parcourus

    while stack:
        node = stack.pop()       # On traite le sommet en haut de la pile
        checked.add(node)        # Marque le sommet comme visité
        for neighbor in tree[node]:
            if neighbor not in checked:    # Si le voisin n'a pas encore été traité
                stack.append(neighbor)     # Ajoute le voisin à la pile pour prochain traitement
                cnt[neighbor] += cnt[node] # Propage la somme cumulative au voisin

    return cnt

def main():
    """
    Fonction principale pour gérer la lecture d'entrée, les appels aux fonctions de construction d'arbre,
    la propagation des valeurs, et l'affichage du résultat.
    """
    # Lecture du nombre de sommets (n) et du nombre de requêtes (q)
    n, q = map(int, input().split())

    # Lecture des arêtes (n-1 au total pour un arbre)
    edge_list = []
    for _ in range(n - 1):
        a, b = map(int, input().split())
        edge_list.append((a, b))

    # Construction de la représentation de l'arbre
    tree = build_tree(n, edge_list)

    # Initialisation du tableau de comptage pour chaque sommet (1-indicé)
    cnt = [0 for _ in range(n + 1)]

    # Lecture et application des requêtes de mise à jour
    for _ in range(q):
        p, x = map(int, input().split())
        cnt[p] += x

    # Propagation des valeurs depuis la racine vers tous les sommets de l'arbre
    cnt = propagate_counts(n, tree, cnt)

    # Affichage de la valeur finale pour chaque sommet (en ignorant l'indice 0)
    print(*cnt[1:])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02784970961511135
    2. 'd' → logprob: -5.4028496742248535
    3. '\' → logprob: -5.5278496742248535
    4. '[' → logprob: -5.6528496742248535
    5. ',' → logprob: -5.7778496742248535
    6. '.' → logprob: -6.0278496742248535
    7. 'a' → logprob: -6.1528496742248535
    8. '\(' → logprob: -6.7778496742248535
    9. ' (' → logprob: -6.9028496742248535
    10. '\n' → logprob: -6.9028496742248535

Token 6: ' build' (ID: 3024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03391653671860695
    2. ' bfs' → logprob: -4.158916473388672
    3. ' deque' → logprob: -5.658916473388672
    4. ' ' → logprob: -5.783916473388672
    5. ' process' → logprob: -5.783916473388672
    6. ' append' → logprob: -6.783916473388672
    7. ' de' → logprob: -7.158916473388672
    8. ' queue' → logprob: -7.408916473388672
    9. ' dfs' → logprob: -7.533916473388672
    10. ' space' → logprob: -7.908916473388672

Token 7: '_tree' (ID: 27118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3581712245941162
    2. '_tree' → logprob: -1.8581712245941162
    3. '_queue' → logprob: -2.483171224594116
    4. '(' → logprob: -3.983171224594116
    5. '_stack' → logprob: -4.608171463012695
    6. '_layer' → logprob: -4.733171463012695
    7. ' _' → logprob: -5.858171463012695
    8. '_space' → logprob: -6.358171463012695
    9. '_buffer' → logprob: -6.358171463012695
    10. ' ' → logprob: -6.483171463012695

Token 8: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004017137107439339
    2. '_' → logprob: -8.875401496887207
    3. '(
' → logprob: -9.750401496887207
    4. ' (' → logprob: -10.250401496887207
    5. '_tree' → logprob: -10.375401496887207
    6. '(tree' → logprob: -11.000401496887207
    7. '(node' → logprob: -11.250401496887207
    8. '_token' → logprob: -11.625401496887207
    9. '```' → logprob: -11.750401496887207
    10. '(token' → logprob: -12.000401496887207

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1726268082857132
    2. '):' → logprob: -2.4226267337799072
    3. ')' → logprob: -2.6726267337799072
    4. ' ,' → logprob: -7.922626972198486
    5. ':' → logprob: -9.297626495361328
    6. ' )' → logprob: -9.547626495361328
    7. ' ):' → logprob: -9.797626495361328
    8. '):
' → logprob: -10.047626495361328
    9. ',)' → logprob: -10.547626495361328
    10. '_' → logprob: -10.922626495361328

Token 10: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.11798093467950821
    2. ' parents' → logprob: -2.74298095703125
    3. ' parent' → logprob: -3.49298095703125
    4. ' adjacency' → logprob: -5.74298095703125
    5. 'edges' → logprob: -5.86798095703125
    6. ' p' → logprob: -6.24298095703125
    7. 'parents' → logprob: -6.49298095703125
    8. ' arr' → logprob: -6.86798095703125
    9. ' root' → logprob: -7.24298095703125
    10. ' connections' → logprob: -7.36798095703125

Token 11: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00018780550453811884
    2. ')' → logprob: -9.500187873840332
    3. '_s' → logprob: -9.625187873840332
    4. '_list' → logprob: -10.625187873840332
    5. ')s' → logprob: -11.375187873840332
    6. '_' → logprob: -11.750187873840332
    7. ' s' → logprob: -14.250187873840332
    8. 'list' → logprob: -14.250187873840332
    9. '_)' → logprob: -14.500187873840332
    10. 'List' → logprob: -15.250187873840332

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008090618066489697
    2. ')' → logprob: -4.883090496063232
    3. ',' → logprob: -8.13309097290039
    4. ':' → logprob: -8.75809097290039
    5. '):
' → logprob: -11.25809097290039
    6. ' ):' → logprob: -12.25809097290039
    7. ''):' → logprob: -12.25809097290039
    8. '=' → logprob: -13.13309097290039
    9. '   ' → logprob: -13.13309097290039
    10. 's' → logprob: -13.63309097290039

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23641261458396912
    2. '   ' → logprob: -1.6114126443862915
    3. '```' → logprob: -5.486412525177002
    4. ':
' → logprob: -5.736412525177002
    5. ' :' → logprob: -6.736412525177002
    6. '(' → logprob: -7.111412525177002
    7. '    
' → logprob: -7.861412525177002
    8. '):' → logprob: -8.61141300201416
    9. '    ' → logprob: -8.98641300201416
    10. '`:' → logprob: -9.11141300201416

Token 14: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1009499579668045
    2. '```' → logprob: -3.225950002670288
    3. ' tree' → logprob: -3.350950002670288
    4. ' graph' → logprob: -4.725949764251709
    5. 'graph' → logprob: -5.100949764251709
    6. 'tree' → logprob: -5.975949764251709
    7. '    
' → logprob: -6.850949764251709
    8. '``' → logprob: -7.475949764251709
    9. '	tree' → logprob: -7.975949764251709
    10. ' 
' → logprob: -7.975949764251709

Token 15: '   ' (ID: 271)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.7809871435165405
    2. '   ' → logprob: -0.9059871435165405
    3. ' ' → logprob: -3.78098726272583
    4. ' root' → logprob: -4.03098726272583
    5. '#' → logprob: -4.03098726272583
    6. ' """
' → logprob: -4.40598726272583
    7. '"""' → logprob: -4.40598726272583
    8. 'r' → logprob: -4.78098726272583
    9. ' "' → logprob: -5.03098726272583
    10. ' 
' → logprob: -5.28098726272583

Token 16: ' Con' (ID: 1532)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.20755499601364136
    2. ' """
' → logprob: -2.457555055618286
    3. '"""' → logprob: -3.082555055618286
    4. ' ' → logprob: -4.332554817199707
    5. '   ' → logprob: -4.332554817199707
    6. ')' → logprob: -5.332554817199707
    7. ' 
' → logprob: -5.457554817199707
    8. ' )' → logprob: -5.457554817199707
    9. ' "' → logprob: -5.457554817199707
    10. ' tree' → logprob: -6.082554817199707

Token 17: 'str' (ID: 689)
  Prédit: 'struct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'struct' → logprob: -0.07057193666696548
    2. 'nect' → logprob: -2.6955718994140625
    3. 'truct' → logprob: -8.570571899414062
    4. 'ct' → logprob: -9.320571899414062
    5. 'str' → logprob: -9.570571899414062
    6. 'verts' → logprob: -9.820571899414062
    7. 'vert' → logprob: -10.445571899414062
    8. 'stru' → logprob: -10.445571899414062
    9. 's' → logprob: -10.445571899414062
    10. 'struction' → logprob: -10.570571899414062

Token 18: 'uit' (ID: 2136)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.0006347587914206088
    2. 'truct' → logprob: -7.375634670257568
    3. 'struct' → logprob: -13.000635147094727
    4. 'uctor' → logprob: -13.000635147094727
    5. '```' → logprob: -13.250635147094727
    6. '   ' → logprob: -14.250635147094727
    7. 'ut' → logprob: -14.875635147094727
    8. 'r' → logprob: -15.500635147094727
    9. 'u' → logprob: -15.500635147094727
    10. 'uction' → logprob: -15.625635147094727

Token 19: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.01782246120274067
    2. ' a' → logprob: -5.142822265625
    3. ' une' → logprob: -5.392822265625
    4. ' le' → logprob: -6.142822265625
    5. ' ' → logprob: -6.267822265625
    6. ' l' → logprob: -6.642822265625
    7. ' la' → logprob: -7.267822265625
    8. 'e' → logprob: -8.642822265625
    9. ' an' → logprob: -8.642822265625
    10. '_' → logprob: -8.767822265625

Token 20: ' représentation' (ID: 162614)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0624372698366642
    2. ' arbre' → logprob: -2.9374372959136963
    3. '   ' → logprob: -6.187437057495117
    4. ' tree' → logprob: -6.187437057495117
    5. '  ' → logprob: -7.187437057495117
    6. ' structure' → logprob: -7.562437057495117
    7. ' s' → logprob: -7.687437057495117
    8. 's' → logprob: -8.437437057495117
    9. '_' → logprob: -8.687437057495117
    10. ' t' → logprob: -8.812437057495117

Token 21: ' par' (ID: 686)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.8601537346839905
    2. ' en' → logprob: -1.4851536750793457
    3. 'du' → logprob: -2.1101536750793457
    4. 'd' → logprob: -3.2351536750793457
    5. 'graph' → logprob: -3.2351536750793457
    6. ' de' → logprob: -3.3601536750793457
    7. '   ' → logprob: -3.3601536750793457
    8. '```' → logprob: -3.8601536750793457
    9. ' ' → logprob: -4.110153675079346
    10. 'de' → logprob: -4.610153675079346

Token 22: ' listes' (ID: 179198)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.0351072549819946
    2. 'd' → logprob: -1.5351072549819946
    3. ' un' → logprob: -2.035107135772705
    4. 'un' → logprob: -2.660107135772705
    5. 'une' → logprob: -2.910107135772705
    6. ' liste' → logprob: -3.285107135772705
    7. ' une' → logprob: -3.785107135772705
    8. 'dict' → logprob: -4.035107135772705
    9. ' diction' → logprob: -4.410107135772705
    10. 'l' → logprob: -4.660107135772705

Token 23: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3504664897918701
    2. 'd' → logprob: -1.2254664897918701
    3. 'adj' → logprob: -7.100466728210449
    4. ' adjacency' → logprob: -7.850466728210449
    5. ' de' → logprob: -8.47546672821045
    6. ' adj' → logprob: -8.60046672821045
    7. ' des' → logprob: -9.22546672821045
    8. ' ' → logprob: -9.60046672821045
    9. '```' → logprob: -9.85046672821045
    10. 'de' → logprob: -9.97546672821045

Token 24: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.01423919852823019
    2. ''' → logprob: -4.639239311218262
    3. '’ad' → logprob: -5.764239311218262
    4. ''ar' → logprob: -8.264239311218262
    5. '_adj' → logprob: -8.389239311218262
    6. '_ad' → logprob: -8.639239311218262
    7. 'adj' → logprob: -8.889239311218262
    8. ''enfant' → logprob: -9.389239311218262
    9. ''en' → logprob: -9.514239311218262
    10. '’' → logprob: -9.889239311218262

Token 25: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.04356176406145096
    2. 'j' → logprob: -3.1685616970062256
    3. 'ja' → logprob: -7.668561935424805
    4. 'jec' → logprob: -10.793561935424805
    5. '[j' → logprob: -11.293561935424805
    6. 'Jac' → logprob: -11.293561935424805
    7. '_j' → logprob: -11.793561935424805
    8. ' jac' → logprob: -12.043561935424805
    9. '"' → logprob: -12.168561935424805
    10. '```' → logprob: -12.293561935424805

Token 26: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7200146317481995
    2. 'acency' → logprob: -0.7200146317481995
    3. '```' → logprob: -3.9700145721435547
    4. 'c' → logprob: -6.845014572143555
    5. '##' → logprob: -7.470014572143555
    6. 'jac' → logprob: -7.470014572143555
    7. '**' → logprob: -7.720014572143555
    8. 'a' → logprob: -7.845014572143555
    9. 'cence' → logprob: -7.845014572143555
    10. 'acement' → logprob: -8.095014572143555

Token 27: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4421263039112091
    2. ' ' → logprob: -2.3171262741088867
    3. ' :' → logprob: -2.4421262741088867
    4. ' des' → logprob: -2.9421262741088867
    5. ' de' → logprob: -3.1921262741088867
    6. ':' → logprob: -4.317126274108887
    7. ' :
' → logprob: -4.567126274108887
    8. '.' → logprob: -4.817126274108887
    9. '```' → logprob: -4.942126274108887
    10. '    ' → logprob: -5.192126274108887

Token 28: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.776890218257904
    2. 'e' → logprob: -0.901890218257904
    3. 'u' → logprob: -2.526890277862549
    4. ''' → logprob: -3.526890277862549
    5. ''une' → logprob: -4.026890277862549
    6. 'es' → logprob: -5.401890277862549
    7. ''u' → logprob: -7.276890277862549
    8. 'un' → logprob: -7.901890277862549
    9. '’un' → logprob: -8.02688980102539
    10. '```' → logprob: -8.52688980102539

Token 29: ' arbre' (ID: 164180)
  Prédit: ' grap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.7652257084846497
    2. ' arbre' → logprob: -1.1402256488800049
    3. ' graph' → logprob: -1.7652256488800049
    4. 'e' → logprob: -3.765225648880005
    5. ' ' → logprob: -5.265225887298584
    6. 'graph' → logprob: -6.015225887298584
    7. ' '' → logprob: -6.015225887298584
    8. ''' → logprob: -6.390225887298584
    9. '```' → logprob: -6.390225887298584
    10. ' tree' → logprob: -6.515225887298584

Token 30: ' non' (ID: 2893)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7361787557601929
    2. ':' → logprob: -1.2361787557601929
    3. '.' → logprob: -2.9861788749694824
    4. ',' → logprob: -3.2361788749694824
    5. '   ' → logprob: -3.2361788749694824
    6. '
' → logprob: -3.6111788749694824
    7. ' en' → logprob: -3.9861788749694824
    8. ' ,' → logprob: -4.861178874969482
    9. ' :
' → logprob: -5.236178874969482
    10. ' ' → logprob: -5.361178874969482

Token 31: ' orient' (ID: 13198)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.10156109184026718
    2. ' orient' → logprob: -2.4765610694885254
    3. 'or' → logprob: -4.476561069488525
    4. ' dirig' → logprob: -7.601561069488525
    5. '   ' → logprob: -7.851561069488525
    6. ' oriented' → logprob: -8.976561546325684
    7. 'orien' → logprob: -10.226561546325684
    8. ' ' → logprob: -10.976561546325684
    9. ' ' → logprob: -11.226561546325684
    10. 'dir' → logprob: -11.476561546325684

Token 32: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -6.511406809295295e-06
    2. 'ée' → logprob: -12.750006675720215
    3. 'e' → logprob: -12.875006675720215
    4. 'ed' → logprob: -15.250006675720215
    5. 'è' → logprob: -15.625006675720215
    6. '```' → logprob: -15.625006675720215
    7. '#' → logprob: -16.5000057220459
    8. 'és' → logprob: -16.5000057220459
    9. 'É' → logprob: -16.7500057220459
    10. '{' → logprob: -17.1250057220459

Token 33: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04334592819213867
    2. ':' → logprob: -4.043345928192139
    3. ' :' → logprob: -4.293345928192139
    4. '.' → logprob: -5.543345928192139
    5. ',' → logprob: -5.918345928192139
    6. ' ' → logprob: -6.918345928192139
    7. '
' → logprob: -7.043345928192139
    8. '```' → logprob: -7.543345928192139
    9. '\n' → logprob: -7.918345928192139
    10. '    
' → logprob: -8.043346405029297

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012527309590950608
    2. '```' → logprob: -8.001253128051758
    3. ')' → logprob: -8.376253128051758
    4. ' adjacency' → logprob: -9.001253128051758
    5. 'n' → logprob: -9.376253128051758
    6. '    
' → logprob: -9.376253128051758
    7. ' edges' → logprob: -9.751253128051758
    8. '    ' → logprob: -9.876253128051758
    9. ':' → logprob: -10.001253128051758
    10. ' graph' → logprob: -10.001253128051758

Token 35: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03697007894515991
    2. ' adjacency' → logprob: -3.7869701385498047
    3. ' graph' → logprob: -5.036970138549805
    4. 'graph' → logprob: -6.161970138549805
    5. ' adj' → logprob: -6.411970138549805
    6. 'adj' → logprob: -6.536970138549805
    7. '```' → logprob: -7.411970138549805
    8. '    
' → logprob: -7.911970138549805
    9. ' tree' → logprob: -8.036970138549805
    10. 'n' → logprob: -8.786970138549805

Token 36: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3180895447731018
    2. '<|end|>' → logprob: -2.693089485168457
    3. ')' → logprob: -2.818089485168457
    4. '(n' → logprob: -2.943089485168457
    5. ':' → logprob: -3.068089485168457
    6. '   ' → logprob: -3.818089485168457
    7. ' (' → logprob: -5.068089485168457
    8. '<|end|>' → logprob: -5.443089485168457
    9. '(' → logprob: -5.818089485168457
    10. '):' → logprob: -6.068089485168457

Token 37: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6040597558021545
    2. ' n' → logprob: -0.9790597558021545
    3. '   ' → logprob: -3.1040596961975098
    4. '    ' → logprob: -4.22905969619751
    5. ')' → logprob: -4.85405969619751
    6. '```' → logprob: -4.97905969619751
    7. ' )' → logprob: -7.10405969619751
    8. ' 
' → logprob: -7.85405969619751
    9. ' ```' → logprob: -7.85405969619751
    10. ' `' → logprob: -8.104060173034668

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.20495490729808807
    2. ' n' → logprob: -1.7049548625946045
    3. '   ' → logprob: -5.829955101013184
    4. ' `' → logprob: -9.454955101013184
    5. '```' → logprob: -9.579955101013184
    6. '    ' → logprob: -9.829955101013184
    7. ' graph' → logprob: -9.829955101013184
    8. ' ' → logprob: -9.829955101013184
    9. ')' → logprob: -10.079955101013184
    10. 'graph' → logprob: -10.329955101013184

Token 39: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4987308084964752
    2. ',' → logprob: -1.2487307786941528
    3. '):' → logprob: -2.3737308979034424
    4. ':' → logprob: -4.998730659484863
    5. ' )' → logprob: -5.998730659484863
    6. ' ,' → logprob: -6.623730659484863
    7. '=' → logprob: -7.623730659484863
    8. '   ' → logprob: -7.873730659484863
    9. '):
' → logprob: -8.498730659484863
    10. '),' → logprob: -8.498730659484863

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3442918062210083
    2. ' int' → logprob: -1.4692918062210083
    3. ')' → logprob: -3.5942916870117188
    4. ',' → logprob: -4.094291687011719
    5. ' )' → logprob: -4.969291687011719
    6. '):' → logprob: -5.469291687011719
    7. ' ,' → logprob: -6.094291687011719
    8. ' ):' → logprob: -6.344291687011719
    9. ' n' → logprob: -7.469291687011719
    10. ' integers' → logprob: -7.844291687011719

Token 41: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12541592121124268
    2. ')' → logprob: -2.625415802001953
    3. ',' → logprob: -3.125415802001953
    4. ' ):' → logprob: -6.750415802001953
    5. ' )' → logprob: -9.125415802001953
    6. ' ,' → logprob: -9.500415802001953
    7. '   ' → logprob: -9.875415802001953
    8. '),' → logprob: -9.875415802001953
    9. '):
' → logprob: -10.000415802001953
    10. ')n' → logprob: -11.500415802001953

Token 42: ' Nombre' (ID: 70208)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6846935749053955
    2. '   ' → logprob: -1.6846935749053955
    3. ' Le' → logprob: -2.3096935749053955
    4. ' ' → logprob: -2.6846935749053955
    5. ' number' → logprob: -3.5596935749053955
    6. ' Nombre' → logprob: -3.8096935749053955
    7. ' Number' → logprob: -3.9346935749053955
    8. ' le' → logprob: -4.309693336486816
    9. 'nombre' → logprob: -4.684693336486816
    10. 'Nombre' → logprob: -4.684693336486816

Token 43: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30076465010643005
    2. ' d' → logprob: -1.8007646799087524
    3. '_de' → logprob: -2.800764560699463
    4. '_nodes' → logprob: -4.050764560699463
    5. 'de' → logprob: -5.175764560699463
    6. 'd' → logprob: -6.050764560699463
    7. '_d' → logprob: -6.050764560699463
    8. '_' → logprob: -6.175764560699463
    9. ' des' → logprob: -6.800764560699463
    10. ' ' → logprob: -7.300764560699463

Token 44: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1051169633865356
    2. ' noe' → logprob: -1.1051169633865356
    3. ' somm' → logprob: -1.8551169633865356
    4. 'n' → logprob: -2.480116844177246
    5. ' n' → logprob: -3.230116844177246
    6. 'som' → logprob: -3.480116844177246
    7. 'no' → logprob: -4.730116844177246
    8. ' ' → logprob: -5.105116844177246
    9. '```' → logprob: -5.230116844177246
    10. ' s' → logprob: -6.605116844177246

Token 45: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.19865858554840088
    2. 'ètres' → logprob: -2.3236584663391113
    3. 'è' → logprob: -3.1986584663391113
    4. 'ètes' → logprob: -3.8236584663391113
    5. 'eurs' → logprob: -5.448658466339111
    6. 'èves' → logprob: -5.823658466339111
    7. 'ères' → logprob: -6.323658466339111
    8. '`' → logprob: -6.573658466339111
    9. 'à' → logprob: -7.073658466339111
    10. 'et' → logprob: -7.198658466339111

Token 46: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30913040041923523
    2. '   ' → logprob: -1.9341304302215576
    3. ')' → logprob: -2.3091304302215576
    4. '.' → logprob: -5.0591301918029785
    5. ',
' → logprob: -5.3091301918029785
    6. ' )' → logprob: -5.6841301918029785
    7. ' ,' → logprob: -6.1841301918029785
    8. '
' → logprob: -6.6841301918029785
    9. '```' → logprob: -6.9341301918029785
    10. 's' → logprob: -7.3091301918029785

Token 47: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2151162177324295
    2. 'l' → logprob: -1.715116262435913
    3. ' ' → logprob: -5.090116024017334
    4. ' le' → logprob: -5.340116024017334
    5. ' ' → logprob: -6.965116024017334
    6. 'le' → logprob: -7.090116024017334
    7. ' the' → logprob: -7.715116024017334
    8. ' la' → logprob: -8.965116500854492
    9. ')' → logprob: -9.215116500854492
    10. '	l' → logprob: -9.590116500854492

Token 48: ''ar' (ID: 54307)
  Prédit: ' arbre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.22489343583583832
    2. ''ar' → logprob: -2.22489333152771
    3. ''' → logprob: -2.97489333152771
    4. 'a' → logprob: -3.59989333152771
    5. 'ar' → logprob: -4.849893569946289
    6. 'e' → logprob: -6.724893569946289
    7. ' ' → logprob: -6.974893569946289
    8. '   ' → logprob: -6.974893569946289
    9. '_' → logprob: -6.974893569946289
    10. ' ' → logprob: -7.849893569946289

Token 49: 'bre' (ID: 9945)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.45125728845596313
    2. 'é' → logprob: -2.7012572288513184
    3. 'ur' → logprob: -2.8262572288513184
    4. 'r' → logprob: -2.9512572288513184
    5. '```' → logprob: -3.5762572288513184
    6. 'e' → logprob: -3.7012572288513184
    7. ')' → logprob: -3.9512572288513184
    8. 'tre' → logprob: -4.076257228851318
    9. 'u' → logprob: -4.201257228851318
    10. 'tr' → logprob: -4.451257228851318

Token 50: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1505742222070694
    2. ')' → logprob: -2.775574207305908
    3. ',' → logprob: -3.525574207305908
    4. '```' → logprob: -3.525574207305908
    5. '
' → logprob: -4.900574207305908
    6. '):' → logprob: -5.650574207305908
    7. '    
' → logprob: -6.400574207305908
    8. '.' → logprob: -6.775574207305908
    9. ',
' → logprob: -6.775574207305908
    10. ')
' → logprob: -6.900574207305908

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6408177614212036
    2. '```' → logprob: -1.3908177614212036
    3. ')' → logprob: -1.6408177614212036
    4. '    
' → logprob: -4.765817642211914
    5. '
' → logprob: -4.890817642211914
    6. ' 
' → logprob: -5.015817642211914
    7. ')
' → logprob: -5.890817642211914
    8. '  
' → logprob: -7.015817642211914
    9. '``' → logprob: -7.015817642211914
    10. ' )' → logprob: -7.640817642211914

Token 52: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0101124048233032
    2. 'adj' → logprob: -1.3851124048233032
    3. ' adjacency' → logprob: -1.6351124048233032
    4. ' adj' → logprob: -1.8851124048233032
    5. 'graph' → logprob: -4.510112285614014
    6. ' edges' → logprob: -4.885112285614014
    7. 'edges' → logprob: -5.260112285614014
    8. '```' → logprob: -5.260112285614014
    9. ' graph' → logprob: -5.385112285614014
    10. 'neighbors' → logprob: -6.885112285614014

Token 53: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01147205289453268
    2. '_s' → logprob: -4.636472225189209
    3. '_list' → logprob: -6.511472225189209
    4. '_' → logprob: -8.76147174835205
    5. ' s' → logprob: -10.01147174835205
    6. ' _' → logprob: -11.63647174835205
    7. ')' → logprob: -12.26147174835205
    8. '_lists' → logprob: -12.26147174835205
    9. ')_' → logprob: -13.01147174835205
    10. '   ' → logprob: -13.63647174835205

Token 54: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004564461298286915
    2. ':' → logprob: -6.12956428527832
    3. ' ):' → logprob: -6.50456428527832
    4. ')' → logprob: -7.75456428527832
    5. '):
' → logprob: -8.00456428527832
    6. ' :' → logprob: -10.12956428527832
    7. '   ' → logprob: -10.50456428527832
    8. '```' → logprob: -11.00456428527832
    9. ',' → logprob: -11.87956428527832
    10. '):
' → logprob: -12.25456428527832

Token 55: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06482669711112976
    2. 'List' → logprob: -3.064826726913452
    3. ')' → logprob: -4.689826488494873
    4. '):' → logprob: -5.189826488494873
    5. ' list' → logprob: -7.564826488494873
    6. '[List' → logprob: -8.314826965332031
    7. ' List' → logprob: -8.564826965332031
    8. '[list' → logprob: -9.314826965332031
    9. '):
' → logprob: -9.689826965332031
    10. '[]' → logprob: -10.189826965332031

Token 56: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5498798489570618
    2. '):' → logprob: -1.299879789352417
    3. '[int' → logprob: -2.799879789352417
    4. '[' → logprob: -3.174879789352417
    5. ')' → logprob: -3.424879789352417
    6. 'of' → logprob: -5.049880027770996
    7. ' de' → logprob: -6.299880027770996
    8. '):
' → logprob: -6.424880027770996
    9. '   ' → logprob: -6.674880027770996
    10. '[list' → logprob: -6.799880027770996

Token 57: ' tuple' (ID: 31311)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.09001443535089493
    2. ' tuple' → logprob: -2.5900144577026367
    3. 'tuple' → logprob: -4.590014457702637
    4. 'tu' → logprob: -7.215014457702637
    5. '(tuple' → logprob: -8.715014457702637
    6. 'list' → logprob: -12.590014457702637
    7. ' lists' → logprob: -12.590014457702637
    8. ' tu' → logprob: -13.340014457702637
    9. '   ' → logprob: -14.465014457702637
    10. ')' → logprob: -14.715014457702637

Token 58: '):' (ID: 3127)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11723127961158752
    2. ')' → logprob: -2.2422313690185547
    3. ' s' → logprob: -6.492231369018555
    4. '[int' → logprob: -6.867231369018555
    5. '):' → logprob: -6.992231369018555
    6. '):
' → logprob: -7.742231369018555
    7. ')s' → logprob: -7.867231369018555
    8. ' of' → logprob: -10.367231369018555
    9. '):

' → logprob: -10.867231369018555
    10. '<int' → logprob: -10.867231369018555

Token 59: ' Liste' (ID: 61030)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.526946485042572
    2. ' [(' → logprob: -2.401946544647217
    3. '   ' → logprob: -2.526946544647217
    4. '[' → logprob: -2.776946544647217
    5. '[(' → logprob: -3.151946544647217
    6. ' (' → logprob: -3.276946544647217
    7. ' )' → logprob: -3.901946544647217
    8. ' [
' → logprob: -3.901946544647217
    9. '[
' → logprob: -4.276946544647217
    10. '[n' → logprob: -4.776946544647217

Token 60: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6896878480911255
    2. '[' → logprob: -1.4396878480911255
    3. ' de' → logprob: -2.189687728881836
    4. ' of' → logprob: -2.564687728881836
    5. '[
' → logprob: -3.814687728881836
    6. '[(' → logprob: -4.439687728881836
    7. '[int' → logprob: -4.814687728881836
    8. ')' → logprob: -5.314687728881836
    9. '   ' → logprob: -5.439687728881836
    10. 's' → logprob: -5.689687728881836

Token 61: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6464167237281799
    2. ' ar' → logprob: -0.7714167237281799
    3. 'are' → logprob: -5.396416664123535
    4. ' edges' → logprob: -5.646416664123535
    5. '(ar' → logprob: -6.146416664123535
    6. ' are' → logprob: -6.646416664123535
    7. ' arr' → logprob: -7.521416664123535
    8. 'edges' → logprob: -7.896416664123535
    9. ' (' → logprob: -8.271416664123535
    10. ' arcs' → logprob: -8.521416664123535

Token 62: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.001445353147573769
    2. 'ê' → logprob: -7.126445293426514
    3. 'cs' → logprob: -7.876445293426514
    4. 'etes' → logprob: -9.751445770263672
    5. 'c' → logprob: -9.876445770263672
    6. '^' → logprob: -10.501445770263672
    7. '�' → logprob: -11.376445770263672
    8. '(' → logprob: -11.376445770263672
    9. 'êts' → logprob: -11.501445770263672
    10. 'ètes' → logprob: -11.501445770263672

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.562504231929779
    2. ')' → logprob: -1.1875042915344238
    3. 's' → logprob: -3.062504291534424
    4. ' ,' → logprob: -3.687504291534424
    5. ' (' → logprob: -4.437504291534424
    6. '   ' → logprob: -4.687504291534424
    7. '[(' → logprob: -5.187504291534424
    8. ' s' → logprob: -5.312504291534424
    9. '):' → logprob: -5.312504291534424
    10. ' [(' → logprob: -5.562504291534424

Token 64: ' chaque' (ID: 21194)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.10851555317640305
    2. '   ' → logprob: -3.108515501022339
    3. 'each' → logprob: -3.983515501022339
    4. ' chaque' → logprob: -4.858515739440918
    5. '    ' → logprob: -4.983515739440918
    6. ' where' → logprob: -4.983515739440918
    7. ')' → logprob: -4.983515739440918
    8. ' with' → logprob: -5.733515739440918
    9. ' où' → logprob: -6.358515739440918
    10. ' avec' → logprob: -6.733515739440918

Token 65: ' ar' (ID: 646)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.6725214719772339
    2. ' (' → logprob: -0.7975214719772339
    3. '(tuple' → logprob: -4.422521591186523
    4. ' edge' → logprob: -4.797521591186523
    5. 'tuple' → logprob: -4.922521591186523
    6. ' tuples' → logprob: -5.797521591186523
    7. '(' → logprob: -6.922521591186523
    8. '<|end|>' → logprob: -7.047521591186523
    9. '(t' → logprob: -7.172521591186523
    10. '(u' → logprob: -7.297521591186523

Token 66: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.009806382469832897
    2. 'ê' → logprob: -5.509806156158447
    3. 'e' → logprob: -6.384806156158447
    4. 'êt' → logprob: -7.384806156158447
    5. '\xc8' → logprob: -7.509806156158447
    6. 'ète' → logprob: -7.634806156158447
    7. 'c' → logprob: -8.009806632995605
    8. '   ' → logprob: -8.134806632995605
    9. ' ' → logprob: -8.134806632995605
    10. 'êche' → logprob: -8.509806632995605

Token 67: ' étant' (ID: 47869)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.24112316966056824
    2. ' étant' → logprob: -1.8661231994628906
    3. ' is' → logprob: -3.8661231994628906
    4. ' being' → logprob: -4.241123199462891
    5. ' (' → logprob: -5.116123199462891
    6. 'est' → logprob: -5.366123199462891
    7. ')' → logprob: -5.491123199462891
    8. ' represented' → logprob: -6.491123199462891
    9. ' représente' → logprob: -6.866123199462891
    10. 's' → logprob: -7.116123199462891

Token 68: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.008478525094687939
    2. ' une' → logprob: -5.88347864151001
    3. ' (' → logprob: -6.00847864151001
    4. 'un' → logprob: -6.25847864151001
    5. '(un' → logprob: -7.88347864151001
    6. '(u' → logprob: -8.508478164672852
    7. ' a' → logprob: -8.633478164672852
    8. ' ' → logprob: -9.008478164672852
    9. 'une' → logprob: -9.258478164672852
    10. 'a' → logprob: -10.008478164672852

Token 69: ' paire' (ID: 148856)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.25700533390045166
    2. ' (' → logprob: -2.257005214691162
    3. ' paire' → logprob: -2.257005214691162
    4. 'tuple' → logprob: -5.132005214691162
    5. '(tuple' → logprob: -5.757005214691162
    6. ' pair' → logprob: -5.757005214691162
    7. ' ' → logprob: -6.757005214691162
    8. 's' → logprob: -7.132005214691162
    9. 'de' → logprob: -7.257005214691162
    10. '(n' → logprob: -7.257005214691162

Token 70: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.24672770500183105
    2. '(u' → logprob: -1.996727705001831
    3. ' de' → logprob: -3.496727705001831
    4. ' d' → logprob: -4.12172794342041
    5. '<|end|>' → logprob: -4.12172794342041
    6. '(n' → logprob: -5.12172794342041
    7. ' of' → logprob: -5.37172794342041
    8. '(s' → logprob: -5.74672794342041
    9. '(d' → logprob: -6.49672794342041
    10. '(v' → logprob: -6.74672794342041

Token 71: 'a' (ID: 64)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2813301384449005
    2. ' u' → logprob: -1.4063301086425781
    3. ')' → logprob: -9.531330108642578
    4. '(u' → logprob: -10.281330108642578
    5. ' sommet' → logprob: -10.906330108642578
    6. ' (' → logprob: -11.281330108642578
    7. 'a' → logprob: -11.406330108642578
    8. 'int' → logprob: -12.156330108642578
    9. 's' → logprob: -12.281330108642578
    10. '   ' → logprob: -12.406330108642578

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008465526043437421
    2. ' ,' → logprob: -7.1258463859558105
    3. 'a' → logprob: -10.750846862792969
    4. ',b' → logprob: -12.000846862792969
    5. ')' → logprob: -12.250846862792969
    6. 's' → logprob: -12.750846862792969
    7. 'u' → logprob: -14.125846862792969
    8. '<|end|>' → logprob: -14.250846862792969
    9. ',a' → logprob: -14.375846862792969
    10. ',u' → logprob: -14.625846862792969

Token 73: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759416222572327
    2. 'b' → logprob: -0.8259416222572327
    3. ' ' → logprob: -13.575942039489746
    4. '   ' → logprob: -14.700942039489746
    5. '  ' → logprob: -15.450942039489746
    6. '	b' → logprob: -16.20094108581543
    7. '```' → logprob: -16.20094108581543
    8. ')b' → logprob: -16.95094108581543
    9. ',b' → logprob: -17.20094108581543
    10. ',' → logprob: -17.20094108581543

Token 74: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021915239631198347
    2. '),' → logprob: -9.000219345092773
    3. '):' → logprob: -9.625219345092773
    4. ' )' → logprob: -11.500219345092773
    5. ').' → logprob: -11.875219345092773
    6. '):
' → logprob: -12.250219345092773
    7. ')
' → logprob: -12.500219345092773
    8. '   ' → logprob: -13.750219345092773
    9. '))' → logprob: -13.750219345092773
    10. ',' → logprob: -15.000219345092773

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03884987533092499
    2. ')' → logprob: -3.6638498306274414
    3. '```' → logprob: -4.538849830627441
    4. '"""' → logprob: -7.413849830627441
    5. ')
' → logprob: -8.413849830627441
    6. '"""
' → logprob: -8.413849830627441
    7. '    
' → logprob: -8.663849830627441
    8. '``' → logprob: -8.788849830627441
    9. '
' → logprob: -9.288849830627441
    10. '    ' → logprob: -9.663849830627441

Token 76: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027193646878004074
    2. ' adjacency' → logprob: -4.402193546295166
    3. '```' → logprob: -5.027193546295166
    4. 'adj' → logprob: -6.277193546295166
    5. '    
' → logprob: -6.402193546295166
    6. ' adj' → logprob: -6.527193546295166
    7. ' """
' → logprob: -7.027193546295166
    8. ' graph' → logprob: -7.652193546295166
    9. 'graph' → logprob: -7.652193546295166
    10. '    ' → logprob: -8.152194023132324

Token 77: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6196930408477783
    2. ' [' → logprob: -1.4946930408477783
    3. ' []' → logprob: -2.6196930408477783
    4. ' [
' → logprob: -2.9946930408477783
    5. '[]' → logprob: -3.6196930408477783
    6. ' ' → logprob: -4.119692802429199
    7. ':' → logprob: -4.244692802429199
    8. ' :' → logprob: -4.244692802429199
    9. '[:]' → logprob: -4.369692802429199
    10. '[n' → logprob: -4.744692802429199

Token 78: '       ' (ID: 309)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.7603997588157654
    2. ' [' → logprob: -1.3853998184204102
    3. ' adjacency' → logprob: -2.13539981842041
    4. ' []' → logprob: -2.63539981842041
    5. '[' → logprob: -2.76039981842041
    6. ' [
' → logprob: -4.38539981842041
    7. ' adj' → logprob: -5.26039981842041
    8. '   ' → logprob: -5.51039981842041
    9. 'adj' → logprob: -6.38539981842041
    10. '[]' → logprob: -6.38539981842041

Token 79: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9308434128761292
    2. 'list' (adapté à ' list') → logprob: -1.4308433532714844
    3. ' adjacency' → logprob: -1.4308433532714844
    4. 'adj' → logprob: -2.9308433532714844
    5. ' dict' → logprob: -3.3058433532714844
    6. ' adj' → logprob: -4.055843353271484
    7. 'dict' → logprob: -4.555843353271484
    8. ' defaultdict' → logprob: -5.930843353271484
    9. 'List' → logprob: -6.180843353271484
    10. '   ' → logprob: -6.680843353271484

Token 80: ':' (ID: 25)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7287793159484863
    2. '[' → logprob: -1.2287793159484863
    3. '[]' → logprob: -2.1037793159484863
    4. '[List' → logprob: -2.9787793159484863
    5. '[list' → logprob: -3.6037793159484863
    6. ':' → logprob: -5.353779315948486
    7. ']' → logprob: -5.728779315948486
    8. '_' → logprob: -5.853779315948486
    9. '_of' → logprob: -5.978779315948486
    10. 'of' → logprob: -6.103779315948486

Token 81: ' Liste' (ID: 61030)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.07186657935380936
    2. ' [' → logprob: -2.821866512298584
    3. ' adjacency' → logprob: -5.571866512298584
    4. ' []' → logprob: -5.696866512298584
    5. '[' → logprob: -6.696866512298584
    6. ' [[' → logprob: -7.696866512298584
    7. ' [
' → logprob: -7.821866512298584
    8. '[]' → logprob: -8.696866989135742
    9. ' adj' → logprob: -9.071866989135742
    10. ' of' → logprob: -9.321866989135742

Token 82: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12502381205558777
    2. ' of' → logprob: -2.50002384185791
    3. ' de' → logprob: -4.12502384185791
    4. '[]' → logprob: -5.12502384185791
    5. 'es' → logprob: -5.75002384185791
    6. '_' → logprob: -5.75002384185791
    7. ' des' → logprob: -6.12502384185791
    8. 's' → logprob: -6.87502384185791
    9. 'd' → logprob: -7.37502384185791
    10. 'e' → logprob: -7.62502384185791

Token 83: ''ad' (ID: 36162)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6044329404830933
    2. ''' → logprob: -1.3544329404830933
    3. 'es' → logprob: -1.7294329404830933
    4. '[' → logprob: -4.479433059692383
    5. '[]' → logprob: -5.979433059692383
    6. ''ad' → logprob: -7.104433059692383
    7. '[e' → logprob: -7.854433059692383
    8. ''s' → logprob: -8.104433059692383
    9. 'de' → logprob: -8.229433059692383
    10. '_lists' → logprob: -8.229433059692383

Token 84: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16029663383960724
    2. 'jac' → logprob: -1.9102966785430908
    3. 'ja' → logprob: -10.785296440124512
    4. 'jec' → logprob: -11.285296440124512
    5. '[j' → logprob: -11.535296440124512
    6. 'jc' → logprob: -11.660296440124512
    7. 'já' → logprob: -12.660296440124512
    8. ' jac' → logprob: -13.410296440124512
    9. '	j' → logprob: -13.410296440124512
    10. '"' → logprob: -13.535296440124512

Token 85: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.29721760749816895
    2. 'es' → logprob: -2.047217607498169
    3. 'acency' → logprob: -2.547217607498169
    4. 'escence' → logprob: -3.297217607498169
    5. 'ance' → logprob: -4.67221736907959
    6. 'e' → logprob: -6.67221736907959
    7. 'a' → logprob: -7.54721736907959
    8. 'ences' → logprob: -7.92221736907959
    9. 'ency' → logprob: -7.92221736907959
    10. 'cence' → logprob: -8.04721736907959

Token 86: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03161811828613281
    2. ':' → logprob: -5.281618118286133
    3. '=' → logprob: -5.406618118286133
    4. 's' → logprob: -5.406618118286133
    5. ']' → logprob: -5.531618118286133
    6. '_' → logprob: -5.656618118286133
    7. '[
' → logprob: -5.656618118286133
    8. '[n' → logprob: -6.031618118286133
    9. '(' → logprob: -7.406618118286133
    10. '[]' → logprob: -7.656618118286133

Token 87: ' chaque' (ID: 21194)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7777960896492004
    2. '[]' → logprob: -1.5277960300445557
    3. ' [[]' → logprob: -1.5277960300445557
    4. ' des' → logprob: -3.6527960300445557
    5. ' [' → logprob: -4.277796268463135
    6. ' chaque' → logprob: -4.277796268463135
    7. ' ' → logprob: -4.527796268463135
    8. '   ' → logprob: -4.777796268463135
    9. '[' → logprob: -4.777796268463135
    10. ' n' → logprob: -5.652796268463135

Token 88: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7004515528678894
    2. ' _' → logprob: -1.2004516124725342
    3. ' ' → logprob: -2.575451612472534
    4. '[' → logprob: -2.825451612472534
    5. 's' → logprob: -4.450451374053955
    6. ' des' → logprob: -4.825451374053955
    7. ' élément' → logprob: -4.825451374053955
    8. ' []' → logprob: -5.325451374053955
    9. ' [' → logprob: -5.325451374053955
    10. ' liste' → logprob: -5.450451374053955

Token 89: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021588575094938278
    2. 's' → logprob: -4.7715888023376465
    3. 'e' → logprob: -5.3965888023376465
    4. '[' → logprob: -6.2715888023376465
    5. 'es' → logprob: -6.6465888023376465
    6. '<|end|>' → logprob: -6.6465888023376465
    7. '  ' → logprob: -7.7715888023376465
    8. ' de' → logprob: -7.8965888023376465
    9. '```' → logprob: -7.8965888023376465
    10. ' s' → logprob: -8.146588325500488

Token 90: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.512077271938324
    2. ' correspond' → logprob: -1.3870773315429688
    3. ' est' → logprob: -2.7620773315429688
    4. ' représente' → logprob: -3.5120773315429688
    5. ' ' → logprob: -3.7620773315429688
    6. ' cont' → logprob: -5.012077331542969
    7. ' corresponds' → logprob: -5.012077331542969
    8. ' contains' → logprob: -5.512077331542969
    9. 's' → logprob: -6.012077331542969
    10. 'e' → logprob: -6.387077331542969

Token 91: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.32144662737846375
    2. ' les' → logprob: -1.8214466571807861
    3. ' une' → logprob: -2.696446657180786
    4. ' ' → logprob: -4.071446418762207
    5. 's' → logprob: -4.696446418762207
    6. '[]' → logprob: -5.196446418762207
    7. ' l' → logprob: -6.071446418762207
    8. 'une' → logprob: -6.446446418762207
    9. ' []' → logprob: -6.571446418762207
    10. 'les' → logprob: -6.696446418762207

Token 92: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.013786517083644867
    2. ' list' → logprob: -4.638786315917969
    3. 'liste' → logprob: -6.138786315917969
    4. ' ' → logprob: -7.513786315917969
    5. 's' → logprob: -8.513786315917969
    6. ' listes' → logprob: -8.638786315917969
    7. '_' → logprob: -8.888786315917969
    8. 'list' → logprob: -8.888786315917969
    9. ' de' → logprob: -8.888786315917969
    10. 'de' → logprob: -9.388786315917969

Token 93: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' somm' (ID: 44830)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.009730353020131588
    2. ' somm' → logprob: -4.884730339050293
    3. ' voisin' → logprob: -7.509730339050293
    4. 's' → logprob: -7.634730339050293
    5. 'vo' → logprob: -8.759730339050293
    6. ' neighbors' → logprob: -8.759730339050293
    7. ' vois' → logprob: -9.134730339050293
    8. '-' → logprob: -9.134730339050293
    9. ' noe' → logprob: -9.134730339050293
    10. ' nodes' → logprob: -9.509730339050293

Token 95: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.7116438746452332
    2. 'es' → logprob: -0.8366438746452332
    3. 'è' → logprob: -3.961643934249878
    4. 'tes' → logprob: -4.336643695831299
    5. 'ètes' → logprob: -4.586643695831299
    6. 'és' → logprob: -4.711643695831299
    7. 'ées' → logprob: -5.461643695831299
    8. 'êtes' → logprob: -5.836643695831299
    9. 'etes' → logprob: -5.836643695831299
    10. 'e' → logprob: -6.086643695831299

Token 96: ' adj' (ID: 20251)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.42770349979400635
    2. ' adj' → logprob: -1.4277034997940063
    3. 'adj' → logprob: -2.677703380584717
    4. ' connect' → logprob: -4.177703380584717
    5. ' adjacent' → logprob: -4.427703380584717
    6. ' ' → logprob: -6.052703380584717
    7. '   ' → logprob: -6.302703380584717
    8. 'connect' → logprob: -6.302703380584717
    9. ' adjacency' → logprob: -6.677703380584717
    10. '_adj' → logprob: -7.052703380584717

Token 97: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.001224274281412363
    2. 'acent' → logprob: -7.251224040985107
    3. 'acency' → logprob: -8.751224517822266
    4. '```' → logprob: -8.751224517822266
    5. 'a' → logprob: -9.626224517822266
    6. 'oints' → logprob: -10.376224517822266
    7. ' ac' → logprob: -10.751224517822266
    8. 'acement' → logprob: -11.751224517822266
    9. ''ac' → logprob: -11.751224517822266
    10. 'aces' → logprob: -11.876224517822266

Token 98: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3771664798259735
    2. 'entes' → logprob: -1.752166509628296
    3. 'ents' → logprob: -2.127166509628296
    4. 'tes' → logprob: -4.752166271209717
    5. 'f' → logprob: -4.877166271209717
    6. 't' → logprob: -6.002166271209717
    7. 'es' → logprob: -7.877166271209717
    8. '   ' → logprob: -8.502166748046875
    9. 'd' → logprob: -8.627166748046875
    10. ')' → logprob: -8.627166748046875

Token 99: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5554903745651245
    2. ']' → logprob: -1.5554903745651245
    3. '[' → logprob: -1.5554903745651245
    4. 's' → logprob: -2.555490493774414
    5. '```' → logprob: -2.555490493774414
    6. ',' → logprob: -2.680490493774414
    7. ')' → logprob: -2.930490493774414
    8. '[i' → logprob: -3.430490493774414
    9. '[]' → logprob: -4.805490493774414
    10. ' à' → logprob: -4.805490493774414

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02994740568101406
    2. 'i' → logprob: -3.529947519302368
    3. ' ' → logprob: -9.279947280883789
    4. ' ' → logprob: -10.279947280883789
    5. '[i' → logprob: -10.529947280883789
    6. 'l' → logprob: -11.529947280883789
    7. ' l' → logprob: -11.904947280883789
    8. 's' → logprob: -12.029947280883789
    9. '`' → logprob: -12.154947280883789
    10. ' `' → logprob: -13.029947280883789

Token 101: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005195511621423066
    2. ')' → logprob: -9.000519752502441
    3. '.' → logprob: -9.000519752502441
    4. '}' → logprob: -9.125519752502441
    5. '[' → logprob: -9.500519752502441
    6. 's' → logprob: -10.500519752502441
    7. 'e' → logprob: -11.125519752502441
    8. ',' → logprob: -11.250519752502441
    9. ' ]' → logprob: -11.375519752502441
    10. '```' → logprob: -11.750519752502441

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16827517747879028
    2. ')' → logprob: -2.2932751178741455
    3. '```' → logprob: -3.9182751178741455
    4. '
' → logprob: -4.168275356292725
    5. ']' → logprob: -4.918275356292725
    6. '    
' → logprob: -5.543275356292725
    7. '\n' → logprob: -6.043275356292725
    8. ')
' → logprob: -6.793275356292725
    9. 'n' → logprob: -7.293275356292725
    10. '"""' → logprob: -7.543275356292725

Token 103: ' """
' (ID: 7037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3766380846500397
    2. '```' → logprob: -2.126638174057007
    3. '"""' → logprob: -2.376638174057007
    4. '"""
' (adapté à ' """
') → logprob: -2.876638174057007
    5. ')
' → logprob: -3.751638174057007
    6. ']' → logprob: -5.376637935638428
    7. '   ' → logprob: -5.501637935638428
    8. '):
' → logprob: -5.876637935638428
    9. '):' → logprob: -6.001637935638428
    10. 'n' → logprob: -6.501637935638428

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19947175681591034
    2. ' 
' → logprob: -2.3244717121124268
    3. '    
' → logprob: -3.3244717121124268
    4. ' adjacency' → logprob: -3.3244717121124268
    5. '
' → logprob: -6.074471950531006
    6. 'adj' → logprob: -6.199471950531006
    7. 'n' → logprob: -6.324471950531006
    8. ' adj' → logprob: -6.949471950531006
    9. '     
' → logprob: -7.199471950531006
    10. '   
' → logprob: -7.324471950531006

Token 105: ' tree' (ID: 8165)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.7838277816772461
    2. 'adj' → logprob: -0.7838277816772461
    3. ' adjacency' → logprob: -2.908827781677246
    4. '   ' → logprob: -4.033827781677246
    5. ' graph' → logprob: -4.658827781677246
    6. 'graph' → logprob: -5.408827781677246
    7. ' tree' → logprob: -7.908827781677246
    8. 'tree' (adapté à ' tree') → logprob: -9.408827781677246
    9. ' adjacent' → logprob: -11.533827781677246
    10. ' ' → logprob: -12.283827781677246

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004635184071958065
    2. '=' → logprob: -5.379635334014893
    3. 's' → logprob: -12.129634857177734
    4. '[' → logprob: -12.129634857177734
    5. '_' → logprob: -13.004634857177734
    6. '   ' → logprob: -14.754634857177734
    7. ' ' → logprob: -14.879634857177734
    8. ' =[' → logprob: -15.004634857177734
    9. ' =
' → logprob: -15.379634857177734
    10. '[]' → logprob: -15.629634857177734

Token 107: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.39923661947250366
    2. '[' → logprob: -1.1492366790771484
    3. ' [' → logprob: -4.399236679077148
    4. '[n' → logprob: -13.399236679077148
    5. '[node' → logprob: -14.899236679077148
    6. ' ' → logprob: -15.274236679077148
    7. '[]' → logprob: -15.649236679077148
    8. '   ' → logprob: -15.899236679077148
    9. '[new' → logprob: -16.27423667907715
    10. '[s' → logprob: -17.27423667907715

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741147756576538
    2. ' for' → logprob: -0.9741147756576538
    3. ')' → logprob: -10.724114418029785
    4. ' ' → logprob: -11.724114418029785
    5. '	for' → logprob: -12.849114418029785
    6. ']' → logprob: -13.099114418029785
    7. '   ' → logprob: -14.099114418029785
    8. 'n' → logprob: -14.099114418029785
    9. '
' → logprob: -14.599114418029785
    10. 'f' → logprob: -15.224114418029785

Token 109: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.645862877368927
    2. ' _' → logprob: -0.770862877368927
    3. ' i' → logprob: -4.895863056182861
    4. ' range' → logprob: -5.395863056182861
    5. ' in' → logprob: -7.645863056182861
    6. 'range' → logprob: -8.020862579345703
    7. ' ' → logprob: -8.145862579345703
    8. 'i' → logprob: -9.770862579345703
    9. '_range' → logprob: -12.645862579345703
    10. '_i' → logprob: -13.270862579345703

Token 110: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2601125240325928
    2. 'in' → logprob: -2.0101125240325928
    3. ' in' → logprob: -2.3851125240325928
    4. ' range' → logprob: -6.010112762451172
    5. 'ange' → logprob: -8.135112762451172
    6. 'n' → logprob: -8.885112762451172
    7. 'i' → logprob: -10.010112762451172
    8. ' ' → logprob: -10.260112762451172
    9. '(range' → logprob: -11.510112762451172
    10. '  ' → logprob: -14.010112762451172

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006271334132179618
    2. ' range' → logprob: -7.375627040863037
    3. '(range' → logprob: -15.250627517700195
    4. 'rang' → logprob: -15.500627517700195
    5. ' ' → logprob: -17.000627517700195
    6. '   ' → logprob: -17.250627517700195
    7. '	range' → logprob: -17.250627517700195
    8. 'r' → logprob: -17.875627517700195
    9. 'ran' → logprob: -18.125627517700195
    10. '```' → logprob: -18.250627517700195

Token 112: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.542423165636137e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -15.125085830688477
    4. 'n' → logprob: -15.125085830688477
    5. ')n' → logprob: -17.125085830688477
    6. ' n' → logprob: -18.375085830688477
    7. ')' → logprob: -18.875085830688477
    8. '(
' → logprob: -19.500085830688477
    9. '(nn' → logprob: -20.125085830688477
    10. ')(' → logprob: -20.125085830688477

Token 113: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.0087516784551553e-05
    2. ')' → logprob: -12.00001049041748
    3. ')]
' → logprob: -13.12501049041748
    4. ' )' → logprob: -14.00001049041748
    5. ']' → logprob: -14.25001049041748
    6. ')]
' → logprob: -16.250009536743164
    7. ')]

' → logprob: -16.625009536743164
    8. '))' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.000009536743164
    10. ')])' → logprob: -17.250009536743164

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036006635054945946
    2. ' ' → logprob: -5.628600597381592
    3. '2' → logprob: -14.62860107421875
    4. '   ' → logprob: -17.25360107421875
    5. '  ' → logprob: -17.87860107421875
    6. '0' → logprob: -18.25360107421875
    7. ')' → logprob: -18.25360107421875
    8. '(' → logprob: -18.69110107421875
    9. '```' → logprob: -18.81610107421875
    10. '
' → logprob: -19.62860107421875

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -17.7500057220459
    4. '0' → logprob: -18.2500057220459
    5. '   ' → logprob: -18.7500057220459
    6. '```' → logprob: -20.6250057220459
    7. '  ' → logprob: -21.0000057220459
    8. '１' → logprob: -21.3750057220459
    9. '
' → logprob: -21.8750057220459
    10. '(' → logprob: -21.8750057220459

Token 116: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01033084373921156
    2. ')' → logprob: -4.635330677032471
    3. ']' → logprob: -7.635330677032471
    4. '])' → logprob: -9.510331153869629
    5. ')])' → logprob: -11.760331153869629
    6. ' )' → logprob: -12.135331153869629
    7. ')]
' → logprob: -13.385331153869629
    8. '])]' → logprob: -14.260331153869629
    9. ' ]' → logprob: -15.010331153869629
    10. ')],' → logprob: -15.010331153869629

Token 117: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13877926766872406
    2. ' for' → logprob: -2.7637791633605957
    3. '
' → logprob: -3.0137791633605957
    4. 'for' → logprob: -4.638779163360596
    5. '    
' → logprob: -5.013779163360596
    6. '  
' → logprob: -7.763779163360596
    7. ' 
' → logprob: -8.388779640197754
    8. '	for' → logprob: -8.388779640197754
    9. '\n' → logprob: -9.263779640197754
    10. '   
' → logprob: -10.013779640197754

Token 118: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3351864814758301
    2. '   ' → logprob: -2.08518648147583
    3. ' for' → logprob: -2.08518648147583
    4. '
' → logprob: -3.33518648147583
    5. '    
' → logprob: -7.96018648147583
    6. '	for' → logprob: -8.460186004638672
    7. ' ' → logprob: -10.835186004638672
    8. '  
' → logprob: -11.335186004638672
    9. ' 
' → logprob: -12.085186004638672
    10. '   
' → logprob: -12.210186004638672

Token 119: ' Initial' (ID: 9209)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1609552800655365
    2. 'for' → logprob: -1.9109553098678589
    3. ' 
' → logprob: -8.160955429077148
    4. '  
' → logprob: -9.410955429077148
    5. '    
' → logprob: -9.535955429077148
    6. '
' → logprob: -9.535955429077148
    7. '   ' → logprob: -9.535955429077148
    8. ' ' → logprob: -9.785955429077148
    9. ' ' → logprob: -10.035955429077148
    10. '```' → logprob: -11.160955429077148

Token 120: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.7468543648719788
    2. 'ize' → logprob: -1.371854305267334
    3. 'ized' → logprob: -1.621854305267334
    4. 'ization' → logprob: -3.996854305267334
    5. 'isé' → logprob: -4.121854305267334
    6. 'er' → logprob: -4.246854305267334
    7. 'isation' → logprob: -5.121854305267334
    8. 'izer' → logprob: -5.371854305267334
    9. 'izing' → logprob: -5.496854305267334
    10. 'e' → logprob: -5.746854305267334

Token 121: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1651502549648285
    2. 'es' → logprob: -2.6651501655578613
    3. ''' → logprob: -3.4151501655578613
    4. ' ' → logprob: -4.165150165557861
    5. '[' → logprob: -5.040150165557861
    6. '[]' → logprob: -5.165150165557861
    7. ''une' → logprob: -5.415150165557861
    8. ' la' → logprob: -5.540150165557861
    9. 'u' → logprob: -6.040150165557861
    10. ' e' → logprob: -6.415150165557861

Token 123: ' liste' (ID: 31719)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.4185028076171875
    2. ' liste' → logprob: -1.4185028076171875
    3. 'liste' → logprob: -3.6685028076171875
    4. ' list' → logprob: -4.1685028076171875
    5. 'adj' → logprob: -4.1685028076171875
    6. 'range' → logprob: -4.9185028076171875
    7. ' range' → logprob: -5.2935028076171875
    8. 'n' → logprob: -5.4185028076171875
    9. ' ' → logprob: -5.5435028076171875
    10. ' tree' → logprob: -5.6685028076171875

Token 124: ' vide' (ID: 21835)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8862291574478149
    2. ' for' → logprob: -1.011229157447815
    3. ' of' → logprob: -2.3862290382385254
    4. '   ' → logprob: -3.2612290382385254
    5. 'for' → logprob: -3.6362290382385254
    6. ' des' → logprob: -3.8862290382385254
    7. '[' → logprob: -3.8862290382385254
    8. ' d' → logprob: -5.136229038238525
    9. '[]' → logprob: -5.261229038238525
    10. 'de' → logprob: -6.261229038238525

Token 125: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11488482356071472
    2. 'for' → logprob: -2.614884853363037
    3. ' ' → logprob: -4.364884853363037
    4. '
' → logprob: -4.614884853363037
    5. '<|end|>' → logprob: -5.614884853363037
    6. '  
' → logprob: -5.864884853363037
    7. ' pour' → logprob: -5.864884853363037
    8. '   ' → logprob: -6.864884853363037
    9. ',' → logprob: -7.489884853363037
    10. '    
' → logprob: -7.739884853363037

Token 126: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1614701896905899
    2. ' _' → logprob: -2.5364701747894287
    3. ' each' → logprob: -3.0364701747894287
    4. ' i' → logprob: -4.661470413208008
    5. '_' → logprob: -4.911470413208008
    6. 'each' → logprob: -5.786470413208008
    7. ' ' → logprob: -7.536470413208008
    8. 'i' → logprob: -7.661470413208008
    9. ' chacun' → logprob: -8.286470413208008
    10. ' range' → logprob: -8.661470413208008

Token 127: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.051225315779447556
    2. ' node' → logprob: -3.301225423812866
    3. ' i' → logprob: -5.051225185394287
    4. 'i' → logprob: -6.426225185394287
    5. 'node' → logprob: -6.551225185394287
    6. ' somm' → logprob: -7.301225185394287
    7. ' noe' → logprob: -7.551225185394287
    8. 'som' → logprob: -7.676225185394287
    9. 's' → logprob: -7.801225185394287
    10. ' vertex' → logprob: -7.801225185394287

Token 128: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3024803698062897
    2. '   ' → logprob: -1.4274803400039673
    3. ' for' → logprob: -4.802480220794678
    4. '    
' → logprob: -5.052480220794678
    5. 'for' → logprob: -5.927480220794678
    6. '  
' → logprob: -5.927480220794678
    7. '
' → logprob: -7.927480220794678
    8. '\n' → logprob: -8.177480697631836
    9. '   
' → logprob: -8.802480697631836
    10. ' 
' → logprob: -8.927480697631836

Token 129: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24610905349254608
    2. ' n' → logprob: -2.1211090087890625
    3. ' )' → logprob: -2.8711090087890625
    4. 'n' → logprob: -3.3711090087890625
    5. ')n' → logprob: -5.8711090087890625
    6. '0' → logprob: -7.1211090087890625
    7. ' ' → logprob: -7.3711090087890625
    8. ' i' → logprob: -7.3711090087890625
    9. ' for' → logprob: -7.7461090087890625
    10. '1' → logprob: -7.9961090087890625

Token 130: '-ind' (ID: 26698)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5830199718475342
    2. ')' → logprob: -0.8330199718475342
    3. ',' → logprob: -5.958020210266113
    4. ' to' → logprob: -6.083020210266113
    5. ' ,' → logprob: -7.458020210266113
    6. ' à' → logprob: -7.583020210266113
    7. 'to' → logprob: -7.958020210266113
    8. ',)' → logprob: -8.958020210266113
    9. ')n' → logprob: -9.833020210266113
    10. '):' → logprob: -9.833020210266113

Token 131: 'ic' (ID: 291)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -4.632542913896032e-05
    2. 'é' → logprob: -10.875046730041504
    3. 'e' → logprob: -12.125046730041504
    4. 'exe' → logprob: -12.250046730041504
    5. '```' → logprob: -12.750046730041504
    6. 'exc' → logprob: -12.875046730041504
    7. 'ed' → logprob: -12.875046730041504
    8. 'exp' → logprob: -13.500046730041504
    9. '(ex' → logprob: -14.250046730041504
    10. '_ex' → logprob: -14.625046730041504

Token 132: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9097784161567688
    2. 'ex' → logprob: -1.409778356552124
    3. 'ed' → logprob: -1.909778356552124
    4. 'ée' → logprob: -2.159778356552124
    5. 'e' → logprob: -2.534778356552124
    6. 'es' → logprob: -5.034778594970703
    7. 'ées' → logprob: -6.784778594970703
    8. 'és' → logprob: -6.909778594970703
    9. 'isé' → logprob: -7.909778594970703
    10. 'éd' → logprob: -8.534778594970703

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004709580447524786
    2. ' )' → logprob: -5.504709720611572
    3. ')]' → logprob: -7.629709720611572
    4. ']' → logprob: -9.004709243774414
    5. ' ]' → logprob: -11.879709243774414
    6. ')
' → logprob: -12.629709243774414
    7. '])' → logprob: -12.629709243774414
    8. ')])' → logprob: -12.754709243774414
    9. '))' → logprob: -13.879709243774414
    10. '[' → logprob: -14.004709243774414

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1282906532287598
    2. '
' → logprob: -1.6282906532287598
    3. '    
' → logprob: -2.0032906532287598
    4. '  
' → logprob: -2.2532906532287598
    5. ' 
' → logprob: -2.3782906532287598
    6. ' for' → logprob: -2.7532906532287598
    7. '\n' → logprob: -2.8782906532287598
    8. 'for' → logprob: -4.25329065322876
    9. '   
' → logprob: -5.00329065322876
    10. ' ' → logprob: -5.25329065322876

Token 135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16152171790599823
    2. ' for' → logprob: -1.9115216732025146
    3. '   ' → logprob: -6.661521911621094
    4. '	for' → logprob: -11.786521911621094
    5. '    
' → logprob: -12.036521911621094
    6. ' 
' → logprob: -13.786521911621094
    7. ' ' → logprob: -13.786521911621094
    8. '
' → logprob: -13.911521911621094
    9. '  
' → logprob: -14.536521911621094
    10. '  ' → logprob: -15.411521911621094

Token 136: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.005177662707865238
    2. 'a' → logprob: -5.3801774978637695
    3. ' u' → logprob: -8.38017749786377
    4. ' (' → logprob: -8.38017749786377
    5. '   ' → logprob: -9.75517749786377
    6. ' edge' → logprob: -11.50517749786377
    7. '(a' → logprob: -11.50517749786377
    8. ' ' → logprob: -11.88017749786377
    9. '	a' → logprob: -12.25517749786377
    10. 'u' → logprob: -12.38017749786377

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021331508469302207
    2. ' ,' → logprob: -8.500213623046875
    3. ',b' → logprob: -11.750213623046875
    4. ',a' → logprob: -13.375213623046875
    5. 'a' → logprob: -16.125213623046875
    6. ' in' → logprob: -16.875213623046875
    7. ',
' → logprob: -17.375213623046875
    8. ',int' → logprob: -17.500213623046875
    9. ',v' → logprob: -17.500213623046875
    10. '‌,' → logprob: -17.625213623046875

Token 138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. '<|end|>' → logprob: -18.47520637512207
    4. ' ' → logprob: -18.72520637512207
    5. ')b' → logprob: -20.22520637512207
    6. 's' → logprob: -21.10020637512207
    7. '	b' → logprob: -21.35020637512207
    8. '_b' → logprob: -21.47520637512207
    9. '>b' → logprob: -21.72520637512207
    10. ' ' → logprob: -22.10020637512207

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011056780815124512
    2. 'in' → logprob: -4.511056900024414
    3. ',' → logprob: -12.636056900024414
    4. ' ' → logprob: -12.761056900024414
    5. ' i' → logprob: -14.261056900024414
    6. '	in' → logprob: -14.761056900024414
    7. ' ' → logprob: -15.136056900024414
    8. 'a' → logprob: -15.136056900024414
    9. '   ' → logprob: -15.511056900024414
    10. '  ' → logprob: -15.636056900024414

Token 140: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.0181526318192482
    2. 'edge' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.893152236938477
    4. '(edge' → logprob: -14.268152236938477
    5. '=edge' → logprob: -14.643152236938477
    6. '_edge' → logprob: -15.268152236938477
    7. ' edges' → logprob: -15.268152236938477
    8. 'edges' → logprob: -16.518152236938477
    9. '.edge' → logprob: -16.518152236938477
    10. 'Edge' → logprob: -17.268152236938477

Token 141: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0010990150040015578
    2. '_' → logprob: -7.001099109649658
    3. 's' → logprob: -8.6260986328125
    4. '       ' → logprob: -13.3760986328125
    5. '_l' → logprob: -13.7510986328125
    6. '_lists' → logprob: -13.8760986328125
    7. '   ' → logprob: -14.1260986328125
    8. 'list' → logprob: -14.1260986328125
    9. ' _' → logprob: -14.3760986328125
    10. 'List' → logprob: -15.2510986328125

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001137947037932463
    2. ':
' → logprob: -9.250113487243652
    3. ' :' → logprob: -11.000113487243652
    4. '):' → logprob: -14.750113487243652
    5. ',' → logprob: -15.375113487243652
    6. '   ' → logprob: -16.50011444091797
    7. ':**' → logprob: -16.50011444091797
    8. ':
' → logprob: -16.75011444091797
    9. ':

' → logprob: -17.87511444091797
    10. ')' → logprob: -18.00011444091797

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028970264247618616
    2. '   ' → logprob: -8.375289916992188
    3. '    
' → logprob: -11.125289916992188
    4. '        
' → logprob: -11.375289916992188
    5. '
' → logprob: -11.500289916992188
    6. ':' → logprob: -12.125289916992188
    7. ',' → logprob: -12.750289916992188
    8. '```' → logprob: -12.875289916992188
    9. '<|end|>' → logprob: -13.500289916992188
    10. '      ' → logprob: -13.750289916992188

Token 144: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.059942472726106644
    2. 'tree' (adapté à ' tree') → logprob: -3.4349424839019775
    3. '       ' → logprob: -3.9349424839019775
    4. '   ' → logprob: -5.184942245483398
    5. '	tree' → logprob: -8.184942245483398
    6. ' 
' → logprob: -8.684942245483398
    7. '
' → logprob: -9.059942245483398
    8. '(tree' → logprob: -9.184942245483398
    9. '```' → logprob: -10.684942245483398
    10. '/tree' → logprob: -10.809942245483398

Token 145: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.375004768371582
    3. ' [' → logprob: -14.625004768371582
    4. 'a' → logprob: -17.750003814697266
    5. '[b' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '[i' → logprob: -19.125003814697266
    8. '[A' → logprob: -20.125003814697266
    9. '```' → logprob: -20.375003814697266
    10. ' a' → logprob: -20.375003814697266

Token 146: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.2723104848410003e-05
    2. '.append' → logprob: -11.250022888183594
    3. ']' → logprob: -12.375022888183594
    4. ' ].' → logprob: -12.625022888183594
    5. '.' → logprob: -13.125022888183594
    6. ').' → logprob: -16.625022888183594
    7. '   ' → logprob: -17.250022888183594
    8. ''].' → logprob: -17.875022888183594
    9. 'append' → logprob: -18.250022888183594
    10. '[' → logprob: -18.375022888183594

Token 147: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -16.750001907348633
    4. 'appen' → logprob: -18.250001907348633
    5. '	append' → logprob: -20.000001907348633
    6. 'Append' → logprob: -20.500001907348633
    7. 'app' → logprob: -20.500001907348633
    8. '_append' → logprob: -21.375001907348633
    9. 'push' → logprob: -21.500001907348633
    10. ' ' → logprob: -22.125001907348633

Token 148: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0002072357019642368
    2. 'b' → logprob: -9.12520694732666
    3. '(' → logprob: -9.62520694732666
    4. ' b' → logprob: -10.37520694732666
    5. ' (' → logprob: -14.12520694732666
    6. '(
' → logprob: -15.62520694732666
    7. '	b' → logprob: -16.000207901000977
    8. ')b' → logprob: -17.250207901000977
    9. ',b' → logprob: -19.875207901000977
    10. '(B' → logprob: -20.375207901000977

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029881233349442482
    2. ')
' → logprob: -3.529881238937378
    3. ' )' → logprob: -9.279881477355957
    4. ' )
' → logprob: -10.529881477355957
    5. '       ' → logprob: -12.154881477355957
    6. ')
' → logprob: -12.404881477355957
    7. '   ' → logprob: -13.904881477355957
    8. ')

' → logprob: -15.654881477355957
    9. ')b' → logprob: -16.90488052368164
    10. '),' → logprob: -17.02988052368164

Token 150: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012201975914649665
    2. '
' → logprob: -9.6251220703125
    3. '        
' → logprob: -10.3751220703125
    4. '   ' → logprob: -12.3751220703125
    5. ' 
' → logprob: -12.3751220703125
    6. '\' → logprob: -12.6251220703125
    7. '' → logprob: -12.8751220703125
    8. '  
' → logprob: -13.1251220703125
    9. '    
' → logprob: -13.6251220703125
    10. '<|end|>' → logprob: -13.8751220703125

Token 151: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005919939721934497
    2. '
' → logprob: -7.625592231750488
    3. '        
' → logprob: -10.500592231750488
    4. '   ' → logprob: -10.500592231750488
    5. ' 
' → logprob: -11.375592231750488
    6. '  
' → logprob: -11.625592231750488
    7. '    
' → logprob: -12.375592231750488
    8. ' ' → logprob: -12.625592231750488
    9. '<|end|>' → logprob: -12.875592231750488
    10. '' → logprob: -13.000592231750488

Token 152: ' Aj' (ID: 28294)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.09321136772632599
    2. 'tree' → logprob: -2.4682114124298096
    3. ' 
' → logprob: -5.7182111740112305
    4. ' ' → logprob: -7.0932111740112305
    5. '	tree' → logprob: -10.21821117401123
    6. '    
' → logprob: -10.96821117401123
    7. '  
' → logprob: -11.09321117401123
    8. '(tree' → logprob: -11.21821117401123
    9. ' ' → logprob: -11.34321117401123
    10. '
' → logprob: -11.46821117401123

Token 153: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.5472590923309326
    2. 'out' → logprob: -0.9222590923309326
    3. 'outer' → logprob: -3.7972590923309326
    4. 'outez' → logprob: -6.672259330749512
    5. 'o' → logprob: -9.672259330749512
    6. 'ou' → logprob: -9.922259330749512
    7. 'outes' → logprob: -11.922259330749512
    8. 'ut' → logprob: -12.547259330749512
    9. '_out' → logprob: -12.922259330749512
    10. 'OUT' → logprob: -12.922259330749512

Token 154: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.019697170704603195
    2. 'b' → logprob: -4.019697189331055
    3. '(b' → logprob: -6.769697189331055
    4. ' a' → logprob: -8.394697189331055
    5. ' (' → logprob: -9.394697189331055
    6. '	b' → logprob: -11.519697189331055
    7. 'a' → logprob: -11.769697189331055
    8. '(' → logprob: -12.019697189331055
    9. ')b' → logprob: -12.019697189331055
    10. ' un' → logprob: -12.144697189331055

Token 155: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' la' (ID: 557)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.533067524433136
    2. ' la' → logprob: -1.6580674648284912
    3. 'tree' → logprob: -1.7830674648284912
    4. ' l' → logprob: -3.158067464828491
    5. ' ' → logprob: -4.65806770324707
    6. 'l' → logprob: -6.90806770324707
    7. ' ' → logprob: -7.65806770324707
    8. 'la' → logprob: -8.28306770324707
    9. ' adjacency' → logprob: -8.78306770324707
    10. ' the' → logprob: -8.90806770324707

Token 157: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.005907938349992037
    2. 'liste' → logprob: -5.755908012390137
    3. ' adjacency' → logprob: -6.380908012390137
    4. 'adj' → logprob: -7.505908012390137
    5. ' list' → logprob: -8.505908012390137
    6. 'list' → logprob: -10.130908012390137
    7. 's' → logprob: -10.255908012390137
    8. ' ' → logprob: -10.380908012390137
    9. ' adj' → logprob: -10.505908012390137
    10. '[' → logprob: -10.630908012390137

Token 158: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.0572366863489151
    2. 'adj' → logprob: -3.182236671447754
    3. ' adj' → logprob: -4.682236671447754
    4. ' adjacency' → logprob: -5.682236671447754
    5. ' voisin' → logprob: -7.682236671447754
    6. ' adjacent' → logprob: -7.932236671447754
    7. ' neighbors' → logprob: -8.807236671447754
    8. ' ' → logprob: -8.807236671447754
    9. 'neighbors' → logprob: -9.057236671447754
    10. ' somm' → logprob: -9.682236671447754

Token 160: ' de' (ID: 334)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2826347351074219
    2. '[' → logprob: -2.157634735107422
    3. '   ' → logprob: -2.657634735107422
    4. '       ' → logprob: -3.782634735107422
    5. 'a' → logprob: -4.032634735107422
    6. ' a' → logprob: -5.407634735107422
    7. '.' → logprob: -5.782634735107422
    8. ' de' → logprob: -5.907634735107422
    9. ',' → logprob: -6.282634735107422
    10. 's' → logprob: -6.657634735107422

Token 161: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519318461418152
    2. ' a' → logprob: -1.50193190574646
    3. '	a' → logprob: -13.251932144165039
    4. ' ' → logprob: -14.626932144165039
    5. ' ' → logprob: -15.501932144165039
    6. '   ' → logprob: -15.626932144165039
    7. '[a' → logprob: -16.25193214416504
    8. ''a' → logprob: -17.00193214416504
    9. '_a' → logprob: -18.12693214416504
    10. '    ' → logprob: -18.12693214416504

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012251086300238967
    2. '<|end|>' → logprob: -6.876224994659424
    3. '
' → logprob: -9.251225471496582
    4. '        
' → logprob: -9.876225471496582
    5. '   ' → logprob: -11.376225471496582
    6. ',' → logprob: -12.251225471496582
    7. ' 
' → logprob: -12.376225471496582
    8. '  
' → logprob: -12.501225471496582
    9. '      ' → logprob: -12.626225471496582
    10. ')' → logprob: -13.001225471496582

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005176475970074534
    2. '
' → logprob: -8.625517845153809
    3. '        
' → logprob: -8.750517845153809
    4. '<|end|>' → logprob: -9.625517845153809
    5. ' 
' → logprob: -10.125517845153809
    6. '   ' → logprob: -10.500517845153809
    7. '  
' → logprob: -11.500517845153809
    8. ' ' → logprob: -12.250517845153809
    9. '    
' → logprob: -12.500517845153809
    10. '\' → logprob: -12.500517845153809

Token 164: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.07050928473472595
    2. 'tree' (adapté à ' tree') → logprob: -2.695509195327759
    3. '       ' → logprob: -8.32050895690918
    4. '	tree' → logprob: -8.82050895690918
    5. '(tree' → logprob: -9.19550895690918
    6. '.tree' → logprob: -10.69550895690918
    7. ' ' → logprob: -11.57050895690918
    8. '_tree' → logprob: -11.69550895690918
    9. ' ' → logprob: -11.69550895690918
    10. ' 
' → logprob: -11.82050895690918

Token 165: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -15.75000286102295
    4. 'b' → logprob: -16.000001907348633
    5. '[a' → logprob: -17.500001907348633
    6. '```' → logprob: -18.125001907348633
    7. '[B' → logprob: -19.625001907348633
    8. '   ' → logprob: -20.125001907348633
    9. ' ' → logprob: -20.500001907348633
    10. '[s' → logprob: -20.500001907348633

Token 166: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0006102138431742787
    2. ').' → logprob: -7.6256103515625
    3. '.' → logprob: -9.7506103515625
    4. '[a' → logprob: -10.2506103515625
    5. '.append' → logprob: -11.3756103515625
    6. ']' → logprob: -11.7506103515625
    7. ' ].' → logprob: -11.8756103515625
    8. '}.' → logprob: -14.3756103515625
    9. '[' → logprob: -14.3756103515625
    10. 'a' → logprob: -15.0006103515625

Token 167: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.375000953674316
    3. 'appen' → logprob: -14.625000953674316
    4. '.append' → logprob: -17.750001907348633
    5. 'app' → logprob: -18.625001907348633
    6. '	append' → logprob: -19.125001907348633
    7. 'a' → logprob: -20.500001907348633
    8. '```' → logprob: -20.875001907348633
    9. 'add' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.250001907348633

Token 168: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009139667963609099
    2. '(' → logprob: -7.000914096832275
    3. ' (' → logprob: -13.250913619995117
    4. '(
' → logprob: -14.375913619995117
    5. 'a' → logprob: -17.625913619995117
    6. '(A' → logprob: -18.000913619995117
    7. '(s' → logprob: -18.125913619995117
    8. '((' → logprob: -18.875913619995117
    9. '(

' → logprob: -19.875913619995117
    10. '(ai' → logprob: -20.375913619995117

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1928003813372925e-05
    2. ' )' → logprob: -9.875051498413086
    3. ')
' → logprob: -15.125051498413086
    4. '   ' → logprob: -17.000051498413086
    5. ')#' → logprob: -18.250051498413086
    6. ')

' → logprob: -18.500051498413086
    7. ')a' → logprob: -18.875051498413086
    8. ')`' → logprob: -19.375051498413086
    9. '))' → logprob: -19.500051498413086
    10. '       ' → logprob: -19.625051498413086

Token 170: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029002929106354713
    2. ' 
' → logprob: -3.7790029048919678
    3. '  
' → logprob: -6.529003143310547
    4. 'return' → logprob: -6.529003143310547
    5. ' return' → logprob: -6.779003143310547
    6. '    
' → logprob: -7.279003143310547
    7. '   ' → logprob: -7.529003143310547
    8. '
' → logprob: -8.779003143310547
    9. '   
' → logprob: -9.404003143310547
    10. ' ' → logprob: -9.779003143310547

Token 171: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17976363003253937
    2. '#' → logprob: -2.6797635555267334
    3. '(' → logprob: -3.6797635555267334
    4. '
' → logprob: -3.9297635555267334
    5. '<|end|>' → logprob: -4.0547637939453125
    6. ' ' → logprob: -4.4297637939453125
    7. 'return' → logprob: -4.9297637939453125
    8. ' return' → logprob: -5.9297637939453125
    9. 'def' → logprob: -6.4297637939453125
    10. '   ' → logprob: -6.4297637939453125

Token 172: ' Aj' (ID: 28294)
  Prédit: ' append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' append' → logprob: -0.46122899651527405
    2. 'append' → logprob: -1.3362289667129517
    3. '.append' → logprob: -2.336229085922241
    4. ' tree' → logprob: -5.211228847503662
    5. 'tree' → logprob: -6.336228847503662
    6. 'Append' → logprob: -6.711228847503662
    7. ' Append' → logprob: -8.08622932434082
    8. '_append' → logprob: -8.58622932434082
    9. ' ' → logprob: -9.08622932434082
    10. ' a' → logprob: -9.21122932434082

Token 173: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -1.5048530030981055e-06
    2. 'outer' → logprob: -14.625001907348633
    3. 'o' → logprob: -14.875001907348633
    4. 'out' → logprob: -15.250001907348633
    5. 'outez' → logprob: -15.625001907348633
    6. 'ute' → logprob: -16.625001907348633
    7. 'outes' → logprob: -17.250001907348633
    8. 'd' → logprob: -17.500001907348633
    9. 'ou' → logprob: -17.625001907348633
    10. 'ote' → logprob: -17.875001907348633

Token 174: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020732134580612
    2. ' a' → logprob: -2.3502073287963867
    3. '(a' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '	a' → logprob: -15.725207328796387
    6. '_a' → logprob: -17.60020637512207
    7. '   ' → logprob: -18.10020637512207
    8. '[a' → logprob: -18.10020637512207
    9. ')a' → logprob: -18.72520637512207
    10. ' b' → logprob: -19.22520637512207

Token 175: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43903419375419617
    2. ')' → logprob: -1.0640342235565186
    3. ' )' → logprob: -5.0640339851379395
    4. ' to' → logprob: -6.3140339851379395
    5. '   ' → logprob: -6.9390339851379395
    6. ' a' → logprob: -7.8140339851379395
    7. ' ' → logprob: -8.314034461975098
    8. 'à' → logprob: -8.939034461975098
    9. '[' → logprob: -9.564034461975098
    10. '[a' → logprob: -9.564034461975098

Token 176: ' la' (ID: 557)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5034686326980591
    2. ' la' → logprob: -1.628468632698059
    3. 'tree' → logprob: -1.628468632698059
    4. ' the' → logprob: -6.7534685134887695
    5. 'la' → logprob: -7.0034685134887695
    6. ' l' → logprob: -8.00346851348877
    7. 'l' → logprob: -8.25346851348877
    8. 'the' → logprob: -8.62846851348877
    9. '(tree' → logprob: -9.62846851348877
    10. '	tree' → logprob: -9.87846851348877

Token 177: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.4745368957519531
    2. 'liste' → logprob: -0.9745368957519531
    3. 'list' → logprob: -7.724536895751953
    4. ' list' → logprob: -11.349536895751953
    5. 'Liste' → logprob: -12.974536895751953
    6. 'lista' → logprob: -13.849536895751953
    7. '[' → logprob: -13.974536895751953
    8. 'l' → logprob: -14.849536895751953
    9. ' ' → logprob: -15.349536895751953
    10. ' ' → logprob: -15.599536895751953

Token 178: ' des' (ID: 731)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.14587752521038055
    2. ' des' → logprob: -2.2708775997161865
    3. '[b' → logprob: -4.395877361297607
    4. 'des' → logprob: -4.645877361297607
    5. '[' → logprob: -5.270877361297607
    6. ' de' → logprob: -6.270877361297607
    7. ' of' → logprob: -7.145877361297607
    8. 'a' → logprob: -7.145877361297607
    9. 'de' → logprob: -8.395877838134766
    10. '[c' → logprob: -8.395877838134766

Token 179: ' voisins' (ID: 166720)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.38949111104011536
    2. ' voisins' → logprob: -1.139491081237793
    3. ' vo' → logprob: -6.514491081237793
    4. ' voisin' → logprob: -7.264491081237793
    5. 'neighbors' → logprob: -8.014491081237793
    6. ' vois' → logprob: -10.389491081237793
    7. 'a' → logprob: -10.514491081237793
    8. ' neighbors' → logprob: -10.764491081237793
    9. 'Vo' → logprob: -12.139491081237793
    10. ' a' → logprob: -12.139491081237793

Token 180: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004574430640786886
    2. ']' → logprob: -6.379574298858643
    3. '(b' → logprob: -6.629574298858643
    4. ' de' → logprob: -8.0045747756958
    5. 'b' → logprob: -8.3795747756958
    6. '}' → logprob: -8.3795747756958
    7. '   ' → logprob: -8.5045747756958
    8. '(' → logprob: -9.2545747756958
    9. ')b' → logprob: -9.2545747756958
    10. '(a' → logprob: -9.5045747756958

Token 181: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3136058747768402
    2. ' b' → logprob: -1.3136059045791626
    3. 'a' → logprob: -8.188606262207031
    4. ' a' → logprob: -10.313606262207031
    5. 's' → logprob: -10.438606262207031
    6. ' s' → logprob: -13.813606262207031
    7. ' ' → logprob: -14.188606262207031
    8. 't' → logprob: -14.938606262207031
    9. ')b' → logprob: -15.188606262207031
    10. ')' → logprob: -15.313606262207031

Token 182: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006988515146076679
    2. '   ' → logprob: -5.131988525390625
    3. 'return' → logprob: -8.131988525390625
    4. '    
' → logprob: -8.256988525390625
    5. '\n' → logprob: -8.631988525390625
    6. ' return' → logprob: -8.756988525390625
    7. '  
' → logprob: -9.381988525390625
    8. ' 
' → logprob: -10.006988525390625
    9. '
' → logprob: -10.881988525390625
    10. '	return' → logprob: -12.006988525390625

Token 183: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03735349327325821
    2. ' )' → logprob: -3.537353515625
    3. ')
' → logprob: -5.037353515625
    4. ' )
' → logprob: -7.162353515625
    5. '   ' → logprob: -8.537353515625
    6. '```' → logprob: -10.287353515625
    7. ' ' → logprob: -10.537353515625
    8. ')return' → logprob: -11.287353515625
    9. 'return' → logprob: -11.787353515625
    10. ')
' → logprob: -12.037353515625

Token 184: ' non' (ID: 2893)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.044718995690345764
    2. ' non' → logprob: -3.9197189807891846
    3. 'l' → logprob: -4.669719219207764
    4. ' arbre' → logprob: -5.419719219207764
    5. ' ' → logprob: -5.544719219207764
    6. ' ' → logprob: -6.044719219207764
    7. ' un' → logprob: -6.669719219207764
    8. ' the' → logprob: -7.169719219207764
    9. ' c' → logprob: -7.544719219207764
    10. ' tree' → logprob: -8.294718742370605

Token 185: ' orient' (ID: 13198)
  Prédit: ' orient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.03654273599386215
    2. 'orient' → logprob: -3.4115426540374756
    3. ' oriented' → logprob: -6.661542892456055
    4. 'or' → logprob: -6.661542892456055
    5. ' dirig' → logprob: -8.161542892456055
    6. ' orientation' → logprob: -10.661542892456055
    7. '   ' → logprob: -11.786542892456055
    8. ' ' → logprob: -12.411542892456055
    9. '-or' → logprob: -12.661542892456055
    10. ' ' → logprob: -12.786542892456055

Token 186: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.664371848164592e-05
    2. 'ée' → logprob: -11.125016212463379
    3. 'ed' → logprob: -14.125016212463379
    4. ')' → logprob: -14.250016212463379
    5. 'è' → logprob: -15.375016212463379
    6. 'e' → logprob: -16.250017166137695
    7. 'É' → logprob: -16.375017166137695
    8. 'éd' → logprob: -16.625017166137695
    9. 'és' → logprob: -16.875017166137695
    10. ']' → logprob: -17.750017166137695

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046296243090182543
    2. ')
' → logprob: -7.750463008880615
    3. ' )' → logprob: -10.500462532043457
    4. '   ' → logprob: -13.250462532043457
    5. ')
' → logprob: -13.750462532043457
    6. ')

' → logprob: -15.000462532043457
    7. '")' → logprob: -15.250462532043457
    8. ')`' → logprob: -15.500462532043457
    9. '))' → logprob: -15.875462532043457
    10. '       ' → logprob: -15.875462532043457

Token 188: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05898234620690346
    2. '   ' → logprob: -2.9339823722839355
    3. '    
' → logprob: -6.0589823722839355
    4. ' return' → logprob: -7.5589823722839355
    5. '\n' → logprob: -7.8089823722839355
    6. 'return' → logprob: -8.058981895446777
    7. '  
' → logprob: -8.183981895446777
    8. ' 
' → logprob: -8.808981895446777
    9. '
' → logprob: -10.058981895446777
    10. '	return' → logprob: -11.183981895446777

Token 189: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.640922486782074
    2. 'return' (adapté à ' return') → logprob: -1.1409225463867188
    3. ' return' → logprob: -2.1409225463867188
    4. '   ' → logprob: -3.3909225463867188
    5. '    
' → logprob: -6.640922546386719
    6. ' 
' → logprob: -7.640922546386719
    7. '\n' → logprob: -8.390922546386719
    8. '	return' → logprob: -8.765922546386719
    9. '  
' → logprob: -9.140922546386719
    10. '
' → logprob: -9.140922546386719

Token 190: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.00523612555116415
    2. 'tree' → logprob: -5.2552361488342285
    3. '	tree' → logprob: -13.88023567199707
    4. '(tree' → logprob: -14.00523567199707
    5. ' ' → logprob: -14.88023567199707
    6. ' tre' → logprob: -16.00523567199707
    7. 'tre' → logprob: -17.00523567199707
    8. '_tree' → logprob: -17.13023567199707
    9. 'Tree' → logprob: -17.38023567199707
    10. ' t' → logprob: -18.50523567199707

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5205409526824951
    2. '

' → logprob: -1.0205409526824951
    3. 'def' → logprob: -3.270540952682495
    4. '<|end|>' → logprob: -5.520541191101074
    5. '```' → logprob: -6.145541191101074
    6. '\n' → logprob: -8.020541191101074
    7. '
' → logprob: -8.145541191101074
    8. '
    
' → logprob: -9.270541191101074
    9. '  
' → logprob: -9.520541191101074
    10. '<|end|>' → logprob: -9.520541191101074

Token 192: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.297520250082016
    2. '
' → logprob: -1.6725202798843384
    3. '

' → logprob: -2.672520160675049
    4. '
' → logprob: -8.797520637512207
    5. '  
' → logprob: -9.672520637512207
    6. '\n' → logprob: -10.047520637512207
    7. '```' → logprob: -10.047520637512207
    8. '#' → logprob: -10.422520637512207
    9. '    
' → logprob: -10.672520637512207
    10. ' def' → logprob: -11.047520637512207

Token 193: ' propagate' (ID: 125190)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.003447660943493247
    2. 'b' → logprob: -6.378447532653809
    3. ' shortest' → logprob: -6.753447532653809
    4. ' find' → logprob: -8.753447532653809
    5. ' dfs' → logprob: -9.253447532653809
    6. ' BFS' → logprob: -9.378447532653809
    7. ' calculate' → logprob: -9.628447532653809
    8. ' distance' → logprob: -9.753447532653809
    9. ' breadth' → logprob: -10.753447532653809
    10. ' compute' → logprob: -11.503447532653809

Token 194: '_counts' (ID: 61971)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.9599789977073669
    2. '_dist' → logprob: -1.5849790573120117
    3. '_colors' → logprob: -1.7099790573120117
    4. '_values' → logprob: -2.5849790573120117
    5. '_distance' → logprob: -3.4599790573120117
    6. '_value' → logprob: -3.4599790573120117
    7. '_signal' → logprob: -4.084979057312012
    8. '_depth' → logprob: -4.209979057312012
    9. '(' → logprob: -4.459979057312012
    10. '_levels' → logprob: -4.834979057312012

Token 195: '(n' (ID: 2406)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.29936036467552185
    2. '(n' → logprob: -1.4243603944778442
    3. '(root' → logprob: -4.674360275268555
    4. '(node' → logprob: -5.299360275268555
    5. '(' → logprob: -6.049360275268555
    6. ' (' → logprob: -7.674360275268555
    7. '(graph' → logprob: -8.299360275268555
    8. '(parent' → logprob: -8.299360275268555
    9. '(start' → logprob: -8.799360275268555
    10. '(s' → logprob: -9.549360275268555

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.636475493200123e-05
    2. ' ,' → logprob: -9.500076293945312
    3. ')' → logprob: -14.125076293945312
    4. ',n' → logprob: -15.750076293945312
    5. ',
' → logprob: -16.250076293945312
    6. ',int' → logprob: -16.625076293945312
    7. '‌,' → logprob: -16.750076293945312
    8. ',start' → logprob: -17.250076293945312
    9. ',p' → logprob: -17.312576293945312
    10. 's' → logprob: -17.312576293945312

Token 197: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.6202980875968933
    2. ' tree' → logprob: -1.245298147201538
    3. 'root' → logprob: -2.620298147201538
    4. ' root' → logprob: -3.245298147201538
    5. 'start' → logprob: -4.370297908782959
    6. 'edges' → logprob: -4.495297908782959
    7. 'edge' → logprob: -4.870297908782959
    8. 'counts' → logprob: -4.995297908782959
    9. ' edges' → logprob: -5.245297908782959
    10. ' counts' → logprob: -5.245297908782959

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013803521869704127
    2. '):' → logprob: -6.626380443572998
    3. ')' → logprob: -10.50137996673584
    4. ' ,' → logprob: -11.25137996673584
    5. '):
' → logprob: -12.00137996673584
    6. ',start' → logprob: -13.25137996673584
    7. 's' → logprob: -14.00137996673584
    8. '   ' → logprob: -14.12637996673584
    9. ',node' → logprob: -14.62637996673584
    10. '):
' → logprob: -14.75137996673584

Token 199: ' cnt' (ID: 27340)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.5884211659431458
    2. 'root' → logprob: -1.713421106338501
    3. ' counts' → logprob: -2.338421106338501
    4. 'start' → logprob: -2.588421106338501
    5. ' root' → logprob: -3.213421106338501
    6. ' start' → logprob: -4.08842134475708
    7. 'values' → logprob: -4.33842134475708
    8. 'initial' → logprob: -4.71342134475708
    9. ' initial' → logprob: -6.08842134475708
    10. 'count' → logprob: -6.21342134475708

Token 200: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06696254760026932
    2. ',' → logprob: -2.816962480545044
    3. '):
' → logprob: -6.191962718963623
    4. '):' → logprob: -6.316962718963623
    5. 'u' → logprob: -7.941962718963623
    6. ')' → logprob: -8.191962242126465
    7. '_counts' → logprob: -8.566962242126465
    8. 'eurs' → logprob: -9.441962242126465
    9. ' ,' → logprob: -10.566962242126465
    10. '):

' → logprob: -10.816962242126465

Token 201: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037685781717300415
    2. '   ' → logprob: -3.4126858711242676
    3. '):' → logprob: -5.787685871124268
    4. ',' → logprob: -7.537685871124268
    5. ' :' → logprob: -8.91268539428711
    6. ')' → logprob: -9.03768539428711
    7. '():' → logprob: -9.28768539428711
    8. ':
' → logprob: -10.16268539428711
    9. '):
' → logprob: -11.53768539428711
    10. '(' → logprob: -11.66268539428711

Token 202: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014260227791965008
    2. ' visited' → logprob: -4.639260292053223
    3. 'visited' → logprob: -5.764260292053223
    4. ' queue' → logprob: -7.139260292053223
    5. 'queue' → logprob: -8.514260292053223
    6. 'dist' → logprob: -9.264260292053223
    7. ' dist' → logprob: -9.514260292053223
    8. ' ' → logprob: -10.014260292053223
    9. '    
' → logprob: -10.514260292053223
    10. 'q' → logprob: -11.264260292053223

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002389325760304928
    2. ' """' → logprob: -7.127389430999756
    3. '    ' → logprob: -7.252389430999756
    4. ' """
' → logprob: -8.127388954162598
    5. ' def' → logprob: -8.502388954162598
    6. 'def' → logprob: -9.252388954162598
    7. ' ' → logprob: -10.002388954162598
    8. ' ' → logprob: -10.752388954162598
    9. '"""' → logprob: -10.877388954162598
    10. '  ' → logprob: -10.877388954162598

Token 204: ' Prop' (ID: 12978)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5611342191696167
    2. ' visited' → logprob: -0.9361342191696167
    3. '   ' → logprob: -3.6861343383789062
    4. 'queue' → logprob: -5.561134338378906
    5. ' queue' → logprob: -5.811134338378906
    6. 'dist' → logprob: -6.186134338378906
    7. 'def' → logprob: -6.811134338378906
    8. ' dist' → logprob: -7.311134338378906
    9. 'vis' → logprob: -8.561134338378906
    10. 'distance' → logprob: -8.686134338378906

Token 205: 'agation' (ID: 53023)
  Prédit: 'agate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'agate' → logprob: -0.01678065024316311
    2. 'ag' → logprob: -4.516780853271484
    3. 'age' → logprob: -5.766780853271484
    4. 'ague' → logprob: -7.141780853271484
    5. 'ager' → logprob: -7.266780853271484
    6. 'aga' → logprob: -8.391780853271484
    7. 'agat' → logprob: -8.516780853271484
    8. 'agte' → logprob: -8.766780853271484
    9. 'agé' → logprob: -9.266780853271484
    10. 'og' → logprob: -9.766780853271484

Token 206: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18619444966316223
    2. ' de' → logprob: -3.18619441986084
    3. ' of' → logprob: -3.56119441986084
    4. ' du' → logprob: -3.68619441986084
    5. ' des' → logprob: -3.68619441986084
    6. '(n' → logprob: -4.06119441986084
    7. 'def' → logprob: -4.68619441986084
    8. ' (' → logprob: -4.68619441986084
    9. '(' → logprob: -5.56119441986084
    10. '(
' → logprob: -6.93619441986084

Token 207: ' valeurs' (ID: 73668)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6898113489151001
    2. 'counts' → logprob: -0.8148113489151001
    3. ' distances' → logprob: -4.5648112297058105
    4. ' visited' → logprob: -4.6898112297058105
    5. 'visited' → logprob: -5.0648112297058105
    6. 'values' → logprob: -5.1898112297058105
    7. 'count' → logprob: -5.3148112297058105
    8. ' values' → logprob: -5.6898112297058105
    9. ' valeurs' → logprob: -6.0648112297058105
    10. ' changes' → logprob: -6.1898112297058105

Token 208: ' cumul' (ID: 163119)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6428160667419434
    2. ' des' → logprob: -1.6428160667419434
    3. '   ' → logprob: -2.2678160667419434
    4. ' ' → logprob: -3.0178160667419434
    5. ' du' → logprob: -3.3928160667419434
    6. ' à' → logprob: -3.8928160667419434
    7. ' aux' → logprob: -4.642816066741943
    8. 'de' → logprob: -4.767816066741943
    9. ' (' → logprob: -5.392816066741943
    10. ' au' → logprob: -5.642816066741943

Token 209: 'ées' (ID: 5161)
  Prédit: 'atives'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.04932418093085289
    2. 'ées' → logprob: -3.4243242740631104
    3. 'ative' → logprob: -4.549324035644531
    4. 'def' → logprob: -5.799324035644531
    5. 't' → logprob: -7.299324035644531
    6. '   ' → logprob: -8.424324035644531
    7. 'at' → logprob: -9.049324035644531
    8. 'es' → logprob: -9.049324035644531
    9. 'ul' → logprob: -9.299324035644531
    10. 'a' → logprob: -9.674324035644531

Token 210: ' le' (ID: 505)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4130163192749023
    2. ' à' → logprob: -1.4130163192749023
    3. ' de' → logprob: -2.5380163192749023
    4. '   ' → logprob: -2.6630163192749023
    5. ' du' → logprob: -2.7880163192749023
    6. ' via' → logprob: -2.7880163192749023
    7. ' aux' → logprob: -3.1630163192749023
    8. ' ' → logprob: -3.2880163192749023
    9. ' dans' → logprob: -3.7880163192749023
    10. ' depuis' → logprob: -3.9130163192749023

Token 211: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.9542871713638306
    2. 'ng' → logprob: -1.2042871713638306
    3. ' long' → logprob: -1.5792871713638306
    4. 'ft' → logprob: -2.829287052154541
    5. 's' → logprob: -3.829287052154541
    6. 'vel' → logprob: -4.454287052154541
    7. 'n' → logprob: -4.579287052154541
    8. 'ss' → logprob: -6.454287052154541
    9. 'd' → logprob: -7.579287052154541
    10. '_long' → logprob: -7.579287052154541

Token 212: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18819157779216766
    2. ' d' → logprob: -2.0631916522979736
    3. ' de' → logprob: -3.6881916522979736
    4. ' du' → logprob: -4.5631914138793945
    5. 'd' → logprob: -5.4381914138793945
    6. 'des' → logprob: -5.5631914138793945
    7. ' ' → logprob: -8.188191413879395
    8. 'de' → logprob: -8.688191413879395
    9. 's' → logprob: -8.813191413879395
    10. ' of' → logprob: -9.438191413879395

Token 213: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.46229490637779236
    2. 'les' → logprob: -1.3372949361801147
    3. 'l' → logprob: -3.712294816970825
    4. ' une' → logprob: -3.712294816970825
    5. ' la' → logprob: -3.712294816970825
    6. ' l' → logprob: -4.212295055389404
    7. 'la' → logprob: -5.087295055389404
    8. 'une' → logprob: -5.462295055389404
    9. ' un' → logprob: -5.712295055389404
    10. ' edges' → logprob: -6.712295055389404

Token 214: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.04455266892910004
    2. 'ar' → logprob: -3.9195525646209717
    3. ' arbre' → logprob: -3.9195525646209717
    4. 'a' → logprob: -6.294552803039551
    5. '’ar' → logprob: -7.419552803039551
    6. ''' → logprob: -7.419552803039551
    7. 'e' → logprob: -8.66955280303955
    8. 'tree' → logprob: -8.79455280303955
    9. ' ar' → logprob: -8.91955280303955
    10. '_ar' → logprob: -9.66955280303955

Token 215: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0048150536604225636
    2. 'bres' → logprob: -5.379815101623535
    3. 'êtes' → logprob: -10.254815101623535
    4. 'ête' → logprob: -10.504815101623535
    5. 'tes' → logprob: -10.629815101623535
    6. 'e' → logprob: -10.629815101623535
    7. 'bo' → logprob: -11.254815101623535
    8. '```' → logprob: -11.504815101623535
    9. 'b' → logprob: -11.629815101623535
    10. 'te' → logprob: -11.754815101623535

Token 216: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3193344473838806
    2. ':' → logprob: -1.5693345069885254
    3. '(' → logprob: -3.0693345069885254
    4. '(n' → logprob: -4.819334506988525
    5. ',' → logprob: -5.694334506988525
    6. '(node' → logprob: -6.569334506988525
    7. ':
' → logprob: -6.569334506988525
    8. 'def' → logprob: -6.694334506988525
    9. '(tree' → logprob: -6.944334506988525
    10. '.' → logprob: -7.319334506988525

Token 217: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.00834139995276928
    2. ' l' → logprob: -5.133341312408447
    3. 'l' → logprob: -6.758341312408447
    4. 'part' → logprob: -7.008341312408447
    5. ' partire' → logprob: -9.508341789245605
    6. 'rac' → logprob: -9.758341789245605
    7. ' travers' → logprob: -10.258341789245605
    8. ' une' → logprob: -10.508341789245605
    9. ' rac' → logprob: -10.633341789245605
    10. ' la' → logprob: -11.258341789245605

Token 218: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10633362829685211
    2. 'd' → logprob: -3.1063337326049805
    3. ' de' → logprob: -3.9813337326049805
    4. ' du' → logprob: -4.1063337326049805
    5. '   ' → logprob: -4.6063337326049805
    6. ' des' → logprob: -5.3563337326049805
    7. 'de' → logprob: -5.7313337326049805
    8. 'def' → logprob: -5.9813337326049805
    9. 'du' → logprob: -8.10633373260498
    10. ' of' → logprob: -9.73133373260498

Token 219: ' sommet' (ID: 130502)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43251657485961914
    2. 'root' → logprob: -2.182516574859619
    3. '0' → logprob: -2.682516574859619
    4. ' sommet' → logprob: -2.807516574859619
    5. ' noe' → logprob: -3.557516574859619
    6. ' ' → logprob: -4.057516574859619
    7. ' root' → logprob: -4.057516574859619
    8. 'n' → logprob: -4.307516574859619
    9. ' node' → logprob: -4.682516574859619
    10. ' n' → logprob: -4.932516574859619

Token 220: ' rac' (ID: 12334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030780652537941933
    2. ' ' → logprob: -3.530780553817749
    3. '0' → logprob: -6.905780792236328
    4. 's' → logprob: -11.655780792236328
    5. ' root' → logprob: -11.780780792236328
    6. 'root' → logprob: -12.155780792236328
    7. ' s' → logprob: -13.780780792236328
    8. ',' → logprob: -14.155780792236328
    9. '   ' → logprob: -14.405780792236328
    10. 'def' → logprob: -14.905780792236328

Token 221: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.02117210626602173
    2. 'o' → logprob: -4.646172046661377
    3. 'e' → logprob: -5.021172046661377
    4. '#' → logprob: -7.021172046661377
    5. '```' → logprob: -7.021172046661377
    6. 'i' → logprob: -7.271172046661377
    7. '   ' → logprob: -7.896172046661377
    8. 'ôte' → logprob: -8.146172523498535
    9. 'ot' → logprob: -8.521172523498535
    10. 'ïne' → logprob: -8.521172523498535

Token 222: ' (' (ID: 350)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.7561300992965698
    2. '   ' → logprob: -0.8811300992965698
    3. '(' → logprob: -2.8811302185058594
    4. ' (' → logprob: -3.2561302185058594
    5. '(start' → logprob: -5.506130218505859
    6. ',' → logprob: -5.631130218505859
    7. 'def' → logprob: -5.756130218505859
    8. '(n' → logprob: -6.131130218505859
    9. '(s' → logprob: -6.256130218505859
    10. '(u' → logprob: -6.631130218505859

Token 223: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5608382821083069
    2. '1' → logprob: -0.9358382821083069
    3. ' ' → logprob: -3.560838222503662
    4. ')' → logprob: -4.810838222503662
    5. ' )' → logprob: -8.18583869934082
    6. ')
' → logprob: -10.31083869934082
    7. 'def' → logprob: -10.43583869934082
    8. ',' → logprob: -10.81083869934082
    9. '):
' → logprob: -10.93583869934082
    10. '   ' → logprob: -10.93583869934082

Token 224: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17168694734573364
    2. '):' → logprob: -1.9216868877410889
    3. ').' → logprob: -5.046687126159668
    4. '):
' → logprob: -5.796687126159668
    5. ' )' → logprob: -6.796687126159668
    6. ',' → logprob: -8.171687126159668
    7. '):

' → logprob: -8.546687126159668
    8. ' ):' → logprob: -8.921687126159668
    9. '),' → logprob: -9.796687126159668
    10. '):
' → logprob: -10.296687126159668

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.248469718324486e-05
    2. '
' → logprob: -11.500022888183594
    3. 'visited' → logprob: -12.250022888183594
    4. ')' → logprob: -13.125022888183594
    5. '    
' → logprob: -13.125022888183594
    6. ' visited' → logprob: -13.375022888183594
    7. 'def' → logprob: -13.375022888183594
    8. '```' → logprob: -16.125022888183594
    9. '   ' → logprob: -16.500022888183594
    10. '):
' → logprob: -16.625022888183594

Token 226: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47772789001464844
    2. 'visited' → logprob: -0.9777278900146484
    3. ' visited' → logprob: -5.727727890014648
    4. 'def' → logprob: -8.602727890014648
    5. 'parent' → logprob: -9.727727890014648
    6. 'queue' → logprob: -10.477727890014648
    7. ' ' → logprob: -10.602727890014648
    8. 'vis' → logprob: -10.852727890014648
    9. '
' → logprob: -10.977727890014648
    10. '  ' → logprob: -11.352727890014648

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09827259182929993
    2. '):' → logprob: -3.0982725620269775
    3. '   ' → logprob: -3.4732725620269775
    4. '):
' → logprob: -4.473272800445557
    5. ':
' → logprob: -5.473272800445557
    6. ' :' → logprob: -6.598272800445557
    7. ',' → logprob: -8.848272323608398
    8. ')' → logprob: -8.848272323608398
    9. '(n' → logprob: -9.098272323608398
    10. '=' → logprob: -10.598272323608398

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011356205679476261
    2. 'n' → logprob: -4.511356353759766
    3. ' n' → logprob: -8.261356353759766
    4. '    ' → logprob: -11.011356353759766
    5. '
' → logprob: -11.636356353759766
    6. '    
' → logprob: -12.261356353759766
    7. '```' → logprob: -12.261356353759766
    8. '	n' → logprob: -12.636356353759766
    9. '  ' → logprob: -12.761356353759766
    10. '       ' → logprob: -12.886356353759766

Token 229: ' n' (ID: 297)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8955647349357605
    2. 'n' (adapté à ' n') → logprob: -1.3955647945404053
    3. '   ' → logprob: -1.6455647945404053
    4. ' cnt' → logprob: -3.1455647945404053
    5. 'tree' → logprob: -3.5205647945404053
    6. ' n' → logprob: -3.8955647945404053
    7. 'counts' → logprob: -4.645564556121826
    8. 'visited' → logprob: -4.770564556121826
    9. 'int' → logprob: -5.020564556121826
    10. 'deque' → logprob: -5.520564556121826

Token 230: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.11397569626569748
    2. '(int' → logprob: -2.238975763320923
    3. ':' → logprob: -7.988975524902344
    4. ',' → logprob: -8.363975524902344
    5. ':int' → logprob: -8.488975524902344
    6. '   ' → logprob: -8.613975524902344
    7. '```' → logprob: -9.738975524902344
    8. ')' → logprob: -9.988975524902344
    9. '  ' → logprob: -10.988975524902344
    10. '[int' → logprob: -10.988975524902344

Token 231: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7848862373502925e-05
    2. ' int' → logprob: -10.500027656555176
    3. ')' → logprob: -15.750027656555176
    4. '   ' → logprob: -18.000028610229492
    5. ':int' → logprob: -18.125028610229492
    6. '
' → logprob: -18.125028610229492
    7. '```' → logprob: -18.375028610229492
    8. 'n' → logprob: -18.625028610229492
    9. '[int' → logprob: -18.875028610229492
    10. ',' → logprob: -19.500028610229492

Token 232: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008793042507022619
    2. ':' → logprob: -7.875879287719727
    3. ',' → logprob: -8.000879287719727
    4. ':int' → logprob: -9.500879287719727
    5. ')' → logprob: -10.375879287719727
    6. '):
' → logprob: -10.625879287719727
    7. 'int' → logprob: -10.750879287719727
    8. ' ):' → logprob: -12.125879287719727
    9. '   ' → logprob: -12.625879287719727
    10. ',int' → logprob: -13.875879287719727

Token 233: ' Nombre' (ID: 70208)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14291955530643463
    2. 'int' → logprob: -2.0179195404052734
    3. '   ' → logprob: -9.267919540405273
    4. ' ' → logprob: -9.642919540405273
    5. ' n' → logprob: -10.767919540405273
    6. '[int' → logprob: -11.517919540405273
    7. '(int' → logprob: -11.642919540405273
    8. 'n' → logprob: -11.642919540405273
    9. 'Number' → logprob: -12.142919540405273
    10. ' Number' → logprob: -12.142919540405273

Token 234: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03025163523852825
    2. ' des' → logprob: -4.030251502990723
    3. ' d' → logprob: -4.655251502990723
    4. 'de' → logprob: -6.530251502990723
    5. '=' → logprob: -8.280251502990723
    6. '   ' → logprob: -8.405251502990723
    7. '_de' → logprob: -8.530251502990723
    8. ' of' → logprob: -9.155251502990723
    9. ' =' → logprob: -9.405251502990723
    10. 'des' → logprob: -9.405251502990723

Token 235: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3900701701641083
    2. ' somm' → logprob: -1.2650701999664307
    3. ' nodes' → logprob: -4.765069961547852
    4. 'nodes' → logprob: -4.890069961547852
    5. ' noe' → logprob: -5.140069961547852
    6. 'som' → logprob: -5.390069961547852
    7. 'vertices' → logprob: -5.515069961547852
    8. ' vertices' → logprob: -5.640069961547852
    9. 'n' → logprob: -5.640069961547852
    10. ' sommet' → logprob: -6.390069961547852

Token 236: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.07075410336256027
    2. 'et' → logprob: -3.195754051208496
    3. 'ettes' → logprob: -4.945754051208496
    4. 'ètres' → logprob: -5.445754051208496
    5. 'e' → logprob: -5.820754051208496
    6. '\xc2' → logprob: -5.820754051208496
    7. 'verts' → logprob: -6.195754051208496
    8. 'eurs' → logprob: -6.820754051208496
    9. 'mets' → logprob: -7.195754051208496
    10. 'vertices' → logprob: -7.445754051208496

Token 237: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27485573291778564
    2. '   ' → logprob: -1.6498557329177856
    3. ')' → logprob: -4.024855613708496
    4. ',
' → logprob: -4.774855613708496
    5. '):' → logprob: -4.774855613708496
    6. ':' → logprob: -5.399855613708496
    7. '):
' → logprob: -5.649855613708496
    8. ' dans' → logprob: -6.399855613708496
    9. ' ,' → logprob: -7.524855613708496
    10. '=' → logprob: -7.649855613708496

Token 238: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5693104267120361
    2. 'tree' → logprob: -1.8193104267120361
    3. ' range' → logprob: -1.9443104267120361
    4. ' la' → logprob: -2.319310426712036
    5. ' le' → logprob: -2.694310426712036
    6. 'l' → logprob: -2.819310426712036
    7. 'le' → logprob: -2.819310426712036
    8. ' tree' → logprob: -2.944310426712036
    9. ' n' → logprob: -3.194310426712036
    10. 'n' → logprob: -3.569310426712036

Token 239: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.09238230437040329
    2. 'ar' → logprob: -2.5923821926116943
    3. ' arbre' → logprob: -4.967382431030273
    4. ')' → logprob: -5.842382431030273
    5. 'tree' → logprob: -6.217382431030273
    6. '’ar' → logprob: -7.217382431030273
    7. '')' → logprob: -8.092382431030273
    8. ')
' → logprob: -9.092382431030273
    9. ' tree' → logprob: -9.217382431030273
    10. 'arb' → logprob: -9.842382431030273

Token 240: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.021358249709010124
    2. 'bres' → logprob: -4.021358013153076
    3. 'e' → logprob: -5.896358013153076
    4. 'êtes' → logprob: -9.271358489990234
    5. 'es' → logprob: -9.896358489990234
    6. ')
' → logprob: -10.146358489990234
    7. 'être' → logprob: -10.271358489990234
    8. 'êtres' → logprob: -10.396358489990234
    9. '**' → logprob: -10.646358489990234
    10. 'ête' → logprob: -11.146358489990234

Token 241: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.476875364780426
    2. '   ' → logprob: -1.8518753051757812
    3. ',' → logprob: -2.3518753051757812
    4. '):' → logprob: -2.6018753051757812
    5. '):
' → logprob: -3.3518753051757812
    6. ',
' → logprob: -5.226875305175781
    7. ')
' → logprob: -5.351875305175781
    8. ').' → logprob: -5.476875305175781
    9. '),' → logprob: -6.101875305175781
    10. '.' → logprob: -7.351875305175781

Token 242: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016103466972708702
    2. '
' → logprob: -4.391103267669678
    3. '       ' → logprob: -7.141103267669678
    4. 'tree' → logprob: -7.141103267669678
    5. '```' → logprob: -7.266103267669678
    6. '    
' → logprob: -7.891103267669678
    7. ',' → logprob: -8.391103744506836
    8. ' tree' → logprob: -8.641103744506836
    9. ')' → logprob: -8.891103744506836
    10. '	tree' → logprob: -9.141103744506836

Token 243: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.01852073334157467
    2. ' tree' → logprob: -4.768520832061768
    3. 'cnt' → logprob: -4.893520832061768
    4. '   ' → logprob: -6.518520832061768
    5. 'visited' → logprob: -8.89352035522461
    6. 'root' → logprob: -8.89352035522461
    7. ' cnt' → logprob: -8.89352035522461
    8. 'deque' → logprob: -9.14352035522461
    9. 'queue' → logprob: -9.26852035522461
    10. 'counts' → logprob: -9.76852035522461

Token 244: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5647404193878174
    2. '):' → logprob: -0.9397404193878174
    3. '):
' → logprob: -4.064740180969238
    4. ':' → logprob: -4.439740180969238
    5. ')' → logprob: -5.064740180969238
    6. '   ' → logprob: -5.439740180969238
    7. '[' → logprob: -7.689740180969238
    8. '),' → logprob: -8.939740180969238
    9. ',
' → logprob: -8.939740180969238
    10. ' =' → logprob: -9.564740180969238

Token 245: 'list' (ID: 2641)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10953236371278763
    2. ')' → logprob: -2.484532356262207
    3. '):' → logprob: -4.984532356262207
    4. '   ' → logprob: -5.484532356262207
    5. ' n' → logprob: -5.609532356262207
    6. '):
' → logprob: -6.484532356262207
    7. 'list' → logprob: -6.609532356262207
    8. 'range' → logprob: -7.359532356262207
    9. ')n' → logprob: -7.359532356262207
    10. ' )' → logprob: -8.234532356262207

Token 246: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011004313826560974
    2. ':' → logprob: -5.011004447937012
    3. '[int' → logprob: -5.886004447937012
    4. '):
' → logprob: -7.386004447937012
    5. ')' → logprob: -7.511004447937012
    6. '   ' → logprob: -8.886004447937012
    7. '[n' → logprob: -10.011004447937012
    8. '[' → logprob: -10.511004447937012
    9. ' ):' → logprob: -10.636004447937012
    10. ' of' → logprob: -10.636004447937012

Token 247: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3429187536239624
    2. '[
' → logprob: -2.717918872833252
    3. '[]' → logprob: -3.842918872833252
    4. '   ' → logprob: -3.842918872833252
    5. ' [
' → logprob: -3.967918872833252
    6. '```' → logprob: -3.967918872833252
    7. '[list' → logprob: -3.967918872833252
    8. ' ' → logprob: -4.092918872833252
    9. ' [' → logprob: -4.342918872833252
    10. '[List' → logprob: -4.342918872833252

Token 248: ' d' (ID: 272)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.610687792301178
    2. ' de' → logprob: -1.1106877326965332
    3. '[' → logprob: -2.985687732696533
    4. ' des' → logprob: -3.735687732696533
    5. ' d' → logprob: -3.985687732696533
    6. 'd' → logprob: -4.485687732696533
    7. '   ' → logprob: -4.985687732696533
    8. 'de' → logprob: -5.735687732696533
    9. 'of' → logprob: -6.110687732696533
    10. '[]' → logprob: -6.110687732696533

Token 249: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.20225408673286438
    2. 'adj' → logprob: -1.702254056930542
    3. 'list' → logprob: -8.452254295349121
    4. ' adjacency' → logprob: -8.702254295349121
    5. 'ad' → logprob: -9.327254295349121
    6. '[]' → logprob: -9.452254295349121
    7. '’ad' → logprob: -9.452254295349121
    8. 'lists' → logprob: -9.577254295349121
    9. '-ad' → logprob: -9.702254295349121
    10. ''' → logprob: -10.952254295349121

Token 250: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.002187256934121251
    2. 'j' → logprob: -6.127187252044678
    3. ' jac' → logprob: -14.377187728881836
    4. 'Jac' → logprob: -15.127187728881836
    5. 'acency' → logprob: -15.127187728881836
    6. 'jec' → logprob: -15.377187728881836
    7. 'jc' → logprob: -15.877187728881836
    8. 'iac' → logprob: -16.002187728881836
    9. 'ac' → logprob: -16.252187728881836
    10. 'yac' → logprob: -16.252187728881836

Token 251: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.043360307812690735
    2. 'ac' → logprob: -3.9183602333068848
    3. 'es' → logprob: -4.293360233306885
    4. 'ace' → logprob: -6.168360233306885
    5. 'ences' → logprob: -6.293360233306885
    6. 'ance' → logprob: -6.543360233306885
    7. 'acency' → logprob: -6.918360233306885
    8. 'n' → logprob: -7.793360233306885
    9. 'aces' → logprob: -7.793360233306885
    10. 'e' → logprob: -7.918360233306885

Token 252: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13957390189170837
    2. ':' → logprob: -3.639573812484741
    3. ' of' → logprob: -3.639573812484741
    4. ',' → logprob: -3.764573812484741
    5. ' des' → logprob: -4.38957405090332
    6. '[' → logprob: -4.51457405090332
    7. '[n' → logprob: -5.01457405090332
    8. '
' → logprob: -5.38957405090332
    9. ')' → logprob: -5.63957405090332
    10. ' de' → logprob: -6.01457405090332

Token 253: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1446060836315155
    2. 'l' → logprob: -2.019606113433838
    3. ' le' → logprob: -7.019606113433838
    4. ' la' → logprob: -7.894606113433838
    5. ' les' → logprob: -8.39460563659668
    6. 'le' → logprob: -9.26960563659668
    7. 'les' → logprob: -9.51960563659668
    8. ' lâ' → logprob: -10.01960563659668
    9. '	l' → logprob: -10.39460563659668
    10. ' ' → logprob: -10.51960563659668

Token 254: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.011388028971850872
    2. 'a' → logprob: -4.761387825012207
    3. ' arbre' → logprob: -6.761387825012207
    4. 'ar' → logprob: -7.136387825012207
    5. 'e' → logprob: -8.011387825012207
    6. '’ar' → logprob: -8.261387825012207
    7. ''' → logprob: -9.261387825012207
    8. '   ' → logprob: -10.261387825012207
    9. ''a' → logprob: -10.261387825012207
    10. ' l' → logprob: -11.011387825012207

Token 255: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -1.0325924449716695e-05
    2. 'bo' → logprob: -12.00001049041748
    3. 'b' → logprob: -13.25001049041748
    4. 'bres' → logprob: -14.12501049041748
    5. ' bre' → logprob: -14.50001049041748
    6. 'e' → logprob: -14.50001049041748
    7. 'ble' → logprob: -16.375009536743164
    8. 'bor' → logprob: -16.375009536743164
    9. 'être' → logprob: -16.375009536743164
    10. 'Bre' → logprob: -16.625009536743164

Token 256: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1469152718782425
    2. ')' → logprob: -2.2719151973724365
    3. ',' → logprob: -4.146915435791016
    4. '
' → logprob: -4.646915435791016
    5. '):
' → logprob: -5.396915435791016
    6. ',
' → logprob: -7.146915435791016
    7. '.' → logprob: -7.396915435791016
    8. ')
' → logprob: -7.521915435791016
    9. '):' → logprob: -8.021915435791016
    10. ').' → logprob: -8.521915435791016

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009789262898266315
    2. 'visited' → logprob: -6.13478946685791
    3. ' visited' → logprob: -6.25978946685791
    4. ' parent' → logprob: -6.25978946685791
    5. 'parent' → logprob: -7.00978946685791
    6. '
' → logprob: -7.38478946685791
    7. ',' → logprob: -7.50978946685791
    8. ')' → logprob: -7.50978946685791
    9. '    
' → logprob: -7.75978946685791
    10. 'def' → logprob: -8.63478946685791

Token 258: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.3939378261566162
    2. 'visited' → logprob: -1.6439378261566162
    3. 'counts' → logprob: -2.893937826156616
    4. ' cnt' → logprob: -3.893937826156616
    5. 'start' → logprob: -4.018938064575195
    6. ' visited' → logprob: -4.143938064575195
    7. 'root' → logprob: -4.643938064575195
    8. 'count' → logprob: -5.268938064575195
    9. 'parent' → logprob: -6.268938064575195
    10. '   ' → logprob: -6.893938064575195

Token 259: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4597095549106598
    2. ' =' → logprob: -1.4597095251083374
    3. ')' → logprob: -2.834709644317627
    4. '):' → logprob: -3.834709644317627
    5. '_parent' → logprob: -3.959709644317627
    6. '=' → logprob: -4.709709644317627
    7. '[' → logprob: -5.584709644317627
    8. '_' → logprob: -5.959709644317627
    9. '   ' → logprob: -6.209709644317627
    10. '):
' → logprob: -6.334709644317627

Token 260: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007077413611114025
    2. ' )' → logprob: -5.757077217102051
    3. '):' → logprob: -7.007077217102051
    4. '[' → logprob: -7.382077217102051
    5. '[int' → logprob: -7.382077217102051
    6. '   ' → logprob: -8.00707721710205
    7. '[n' → logprob: -8.13207721710205
    8. 'list' → logprob: -8.25707721710205
    9. ',' → logprob: -8.63207721710205
    10. ' list' → logprob: -8.75707721710205

Token 261: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033431174233555794
    2. '[int' → logprob: -6.253343105316162
    3. ')' → logprob: -7.378343105316162
    4. '):
' → logprob: -7.753343105316162
    5. ' ):' → logprob: -8.25334358215332
    6. '   ' → logprob: -10.50334358215332
    7. ':' → logprob: -10.62834358215332
    8. '[' → logprob: -11.75334358215332
    9. '```' → logprob: -12.00334358215332
    10. '[]):' → logprob: -12.37834358215332

Token 262: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.19454175233840942
    2. ' [' → logprob: -2.1945416927337646
    3. '[int' → logprob: -3.5695416927337646
    4. 'list' → logprob: -3.9445416927337646
    5. '[' → logprob: -4.194541931152344
    6. '[list' → logprob: -6.444541931152344
    7. 'Initial' → logprob: -7.694541931152344
    8. ' int' → logprob: -9.069541931152344
    9. 'int' → logprob: -9.444541931152344
    10. '   ' → logprob: -9.569541931152344

Token 263: ' contenant' (ID: 131049)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1309844255447388
    2. ' des' → logprob: -1.1309844255447388
    3. ' of' → logprob: -1.7559844255447388
    4. '[int' → logprob: -1.8809844255447388
    5. '[' → logprob: -4.380984306335449
    6. '   ' → logprob: -4.880984306335449
    7. '<int' → logprob: -5.880984306335449
    8. ' contenant' → logprob: -6.755984306335449
    9. ')' → logprob: -7.005984306335449
    10. ' d' → logprob: -7.505984306335449

Token 264: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1323513686656952
    2. ' des' → logprob: -2.8823513984680176
    3. ' initial' → logprob: -3.3823513984680176
    4. 'des' → logprob: -4.382351398468018
    5. 'les' → logprob: -4.632351398468018
    6. 'initial' → logprob: -4.632351398468018
    7. ' ' → logprob: -7.382351398468018
    8. '[' → logprob: -8.13235092163086
    9. ' la' → logprob: -8.88235092163086
    10. ' l' → logprob: -8.88235092163086

Token 265: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8174543380737305
    2. ' counts' → logprob: -1.8174543380737305
    3. 'counts' → logprob: -2.3174543380737305
    4. ' initial' → logprob: -2.6924543380737305
    5. ' values' → logprob: -2.6924543380737305
    6. '0' → logprob: -2.8174543380737305
    7. ' cumulative' → logprob: -2.8174543380737305
    8. ' valeurs' → logprob: -2.8174543380737305
    9. 'values' → logprob: -3.1924543380737305
    10. ' nombre' → logprob: -4.0674543380737305

Token 266: ' initial' (ID: 4871)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3678639233112335
    2. ' des' → logprob: -1.7428638935089111
    3. ' initial' → logprob: -2.992863893508911
    4. ' ' → logprob: -3.367863893508911
    5. 'des' → logprob: -4.24286413192749
    6. ' de' → logprob: -4.74286413192749
    7. 'de' → logprob: -5.36786413192749
    8. '   ' → logprob: -5.49286413192749
    9. 'initial' → logprob: -5.49286413192749
    10. ' par' → logprob: -5.74286413192749

Token 267: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3124780058860779
    2. ' des' → logprob: -2.5624780654907227
    3. 's' → logprob: -3.0624780654907227
    4. 'es' → logprob: -3.4374780654907227
    5. '   ' → logprob: -3.5624780654907227
    6. ' ' → logprob: -4.062478065490723
    7. ' de' → logprob: -4.437478065490723
    8. '_counts' → logprob: -4.437478065490723
    9. 'isée' → logprob: -4.437478065490723
    10. '_' → logprob: -4.937478065490723

Token 268: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40653157234191895
    2. ' des' → logprob: -1.906531572341919
    3. ' ' → logprob: -2.656531572341919
    4. 's' → logprob: -2.781531572341919
    5. '   ' → logprob: -4.28153133392334
    6. ' initial' → logprob: -4.53153133392334
    7. 'de' → logprob: -4.65653133392334
    8. ' s' → logprob: -5.03153133392334
    9. ' pour' → logprob: -5.53153133392334
    10. ' for' → logprob: -6.40653133392334

Token 269: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1856390237808228
    2. 's' → logprob: -1.6856390237808228
    3. 'c' → logprob: -2.435638904571533
    4. ' propagation' → logprob: -2.810638904571533
    5. ' ' → logprob: -3.185638904571533
    6. 'counts' → logprob: -3.435638904571533
    7. ' compteur' → logprob: -3.435638904571533
    8. ' l' → logprob: -3.685638904571533
    9. 'l' → logprob: -3.685638904571533
    10. '0' → logprob: -3.935638904571533

Token 270: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.48325470089912415
    2. 'som' → logprob: -1.3582546710968018
    3. ' noe' → logprob: -2.8582546710968018
    4. 's' → logprob: -2.9832546710968018
    5. 'no' → logprob: -4.733254909515381
    6. 'node' → logprob: -5.233254909515381
    7. ' node' → logprob: -7.483254909515381
    8. ' som' → logprob: -7.733254909515381
    9. 'n' → logprob: -7.858254909515381
    10. 'vertex' → logprob: -7.858254909515381

Token 271: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12885528802871704
    2. ',' → logprob: -2.7538552284240723
    3. ' )' → logprob: -3.1288552284240723
    4. ' pour' → logprob: -5.253855228424072
    5. ' à' → logprob: -5.753855228424072
    6. ' ,' → logprob: -6.128855228424072
    7. '   ' → logprob: -7.628855228424072
    8. ').' → logprob: -7.628855228424072
    9. ' (' → logprob: -8.00385570526123
    10. '.' → logprob: -8.37885570526123

Token 272: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017189674079418182
    2. ' )' → logprob: -4.5171895027160645
    3. ')
' → logprob: -7.0171895027160645
    4. ' pour' → logprob: -7.1421895027160645
    5. '   ' → logprob: -7.3921895027160645
    6. '0' → logprob: -7.3921895027160645
    7. '1' → logprob: -7.5171895027160645
    8. ' ' → logprob: -7.5171895027160645
    9. ' à' → logprob: -7.5171895027160645
    10. ',' → logprob: -8.142189979553223

Token 273: '-ind' (ID: 26698)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8400520086288452
    2. '])' → logprob: -1.2150520086288452
    3. ')' → logprob: -2.3400521278381348
    4. '])-' → logprob: -2.9650521278381348
    5. ']-' → logprob: -3.0900521278381348
    6. ' ])' → logprob: -3.9650521278381348
    7. ')-' → logprob: -4.090052127838135
    8. ' )' → logprob: -4.215052127838135
    9. ' ]' → logprob: -4.340052127838135
    10. ']+' → logprob: -4.840052127838135

Token 274: 'ic' (ID: 291)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.005527454428374767
    2. 'é' → logprob: -5.505527496337891
    3. 'cé' → logprob: -7.505527496337891
    4. 'ée' → logprob: -8.63052749633789
    5. '```' → logprob: -8.88052749633789
    6. 'x' → logprob: -8.88052749633789
    7. 'ic' → logprob: -9.88052749633789
    8. '   ' → logprob: -10.00552749633789
    9. 'éc' → logprob: -10.13052749633789
    10. 'exe' → logprob: -10.63052749633789

Token 275: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.004758342169225216
    2. 'ed' → logprob: -5.879758358001709
    3. 'e' → logprob: -6.754758358001709
    4. 'ée' → logprob: -7.379758358001709
    5. 'ex' → logprob: -9.75475788116455
    6. ')' → logprob: -10.37975788116455
    7. 'és' → logprob: -10.75475788116455
    8. 'éd' → logprob: -11.87975788116455
    9. 'isé' → logprob: -12.00475788116455
    10. '```' → logprob: -12.00475788116455

Token 276: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005916350521147251
    2. ')
' → logprob: -5.755916118621826
    3. ').' → logprob: -6.755916118621826
    4. ' )' → logprob: -7.005916118621826
    5. '):
' → logprob: -7.880916118621826
    6. '):' → logprob: -9.130916595458984
    7. ')
' → logprob: -10.005916595458984
    8. ' )
' → logprob: -10.630916595458984
    9. '   ' → logprob: -10.755916595458984
    10. ',' → logprob: -10.880916595458984

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022874101996421814
    2. '
' → logprob: -4.397873878479004
    3. ')' → logprob: -5.397873878479004
    4. ')
' → logprob: -6.397873878479004
    5. 'visited' → logprob: -6.397873878479004
    6. '):
' → logprob: -7.272873878479004
    7. '    
' → logprob: -7.397873878479004
    8. ' visited' → logprob: -7.647873878479004
    9. '):' → logprob: -9.022873878479004
    10. 'parent' → logprob: -9.022873878479004

Token 278: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3511587083339691
    2. 'visited' → logprob: -1.4761587381362915
    3. ')
' → logprob: -4.226158618927002
    4. 'def' → logprob: -4.601158618927002
    5. ' visited' → logprob: -4.726158618927002
    6. ')' → logprob: -4.851158618927002
    7. '"""
' → logprob: -4.976158618927002
    8. '):
' → logprob: -4.976158618927002
    9. 'parent' → logprob: -5.101158618927002
    10. '
' → logprob: -5.601158618927002

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009660111390985548
    2. ':
' → logprob: -7.0009660720825195
    3. ' :' → logprob: -10.75096607208252
    4. '[' → logprob: -11.12596607208252
    5. '   ' → logprob: -11.62596607208252
    6. '):' → logprob: -12.37596607208252
    7. ':
' → logprob: -14.00096607208252
    8. 'def' → logprob: -14.12596607208252
    9. ' :
' → logprob: -14.62596607208252
    10. ':void' → logprob: -14.87596607208252

Token 280: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021867557370569557
    2. ' None' → logprob: -9.000218391418457
    3. '    ' → logprob: -10.000218391418457
    4. ')' → logprob: -10.875218391418457
    5. 'None' → logprob: -11.000218391418457
    6. '    
' → logprob: -12.250218391418457
    7. '[' → logprob: -13.125218391418457
    8. ' list' → logprob: -13.250218391418457
    9. '  ' → logprob: -13.625218391418457
    10. ' ' → logprob: -13.875218391418457

Token 281: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.01125613134354353
    2. ' list' → logprob: -4.636256217956543
    3. 'None' → logprob: -6.636256217956543
    4. ' None' → logprob: -8.636256217956543
    5. '   ' → logprob: -13.011256217956543
    6. 'int' → logprob: -13.011256217956543
    7. 'List' → logprob: -13.386256217956543
    8. 'deque' → logprob: -13.886256217956543
    9. 'dict' → logprob: -14.636256217956543
    10. 'none' → logprob: -14.886256217956543

Token 282: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006138768512755632
    2. ' :' → logprob: -5.381138801574707
    3. '[' → logprob: -7.631138801574707
    4. '   ' → logprob: -8.256138801574707
    5. '[int' → logprob: -8.506138801574707
    6. ' des' → logprob: -8.756138801574707
    7. '[cnt' → logprob: -8.756138801574707
    8. '):' → logprob: -9.381138801574707
    9. ' cnt' → logprob: -10.006138801574707
    10. '[count' → logprob: -11.006138801574707

Token 283: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12145760655403137
    2. 'list' → logprob: -2.246457576751709
    3. 'int' → logprob: -5.621457576751709
    4. 'La' → logprob: -6.121457576751709
    5. ' La' → logprob: -6.621457576751709
    6. ' int' → logprob: -7.746457576751709
    7. '   ' → logprob: -8.121458053588867
    8. ' propagated' → logprob: -8.871458053588867
    9. ' la' → logprob: -9.246458053588867
    10. 'The' → logprob: -9.996458053588867

Token 284: ' mise' (ID: 25868)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.010099450126290321
    2. ' de' → logprob: -5.885099411010742
    3. 'des' → logprob: -6.260099411010742
    4. '[' → logprob: -6.385099411010742
    5. '_des' → logprob: -6.760099411010742
    6. ' of' → logprob: -6.885099411010742
    7. ' contenant' → logprob: -8.010099411010742
    8. '[]' → logprob: -9.135099411010742
    9. '```' → logprob: -9.635099411010742
    10. ' avec' → logprob: -9.760099411010742

Token 285: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22828444838523865
    2. 'à' → logprob: -1.603284478187561
    3. '   ' → logprob: -6.2282843589782715
    4. ' ' → logprob: -7.6032843589782715
    5. '```' → logprob: -9.35328483581543
    6. 'a' → logprob: -9.60328483581543
    7. '  ' → logprob: -9.72828483581543
    8. ''à' → logprob: -9.85328483581543
    9. '    ' → logprob: -10.22828483581543
    10. '-à' → logprob: -10.22828483581543

Token 286: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.016309071332216263
    2. ' jour' → logprob: -4.2663092613220215
    3. '_j' → logprob: -7.2663092613220215
    4. 'jours' → logprob: -7.5163092613220215
    5. '```' → logprob: -7.8913092613220215
    6. ' ' → logprob: -8.391308784484863
    7. 'jou' → logprob: -8.766308784484863
    8. '   ' → logprob: -9.766308784484863
    9. '_' → logprob: -11.516308784484863
    10. ' jours' → logprob: -11.641308784484863

Token 287: ' où' (ID: 15113)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.007619995623826981
    2. ' avec' → logprob: -6.257619857788086
    3. ' cnt' → logprob: -6.757619857788086
    4. '   ' → logprob: -6.882619857788086
    5. 'des' → logprob: -6.882619857788086
    6. ' contenant' → logprob: -7.007619857788086
    7. 'cnt' → logprob: -7.632619857788086
    8. ' de' → logprob: -7.632619857788086
    9. ' of' → logprob: -8.882619857788086
    10. ' ' → logprob: -9.132619857788086

Token 288: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2693581581115723
    2. 'cnt' → logprob: -1.2693581581115723
    3. 'les' → logprob: -1.5193581581115723
    4. ' cnt' → logprob: -1.8943581581115723
    5. ' la' → logprob: -3.6443581581115723
    6. ' chaque' → logprob: -4.269358158111572
    7. '   ' → logprob: -4.769358158111572
    8. 'counts' → logprob: -5.644358158111572
    9. 'la' → logprob: -5.769358158111572
    10. 'le' → logprob: -6.269358158111572

Token 289: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.1014381647109985
    2. ' valeur' → logprob: -1.4764381647109985
    3. 'val' → logprob: -1.8514381647109985
    4. ' élément' → logprob: -2.226438045501709
    5. ' element' → logprob: -3.601438045501709
    6. ' index' → logprob: -3.726438045501709
    7. 'element' → logprob: -3.851438045501709
    8. 'index' → logprob: -4.226438045501709
    9. ' node' → logprob: -4.476438045501709
    10. ' noe' → logprob: -4.601438045501709

Token 290: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08294276148080826
    2. ' has' → logprob: -3.3329427242279053
    3. ' possède' → logprob: -4.707942962646484
    4. ' ' → logprob: -4.957942962646484
    5. ' reçoit' → logprob: -5.082942962646484
    6. ''s' → logprob: -5.207942962646484
    7. '   ' → logprob: -5.332942962646484
    8. 'a' → logprob: -6.332942962646484
    9. ' contient' → logprob: -6.457942962646484
    10. '_' → logprob: -6.582942962646484

Token 291: ' contient' (ID: 89067)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1027776226401329
    2. ' has' → logprob: -3.6027777194976807
    3. ' possède' → logprob: -3.6027777194976807
    4. 'a' → logprob: -3.9777777194976807
    5. ' reçoit' → logprob: -4.477777481079102
    6. ' contient' → logprob: -5.477777481079102
    7. ' ' → logprob: -6.227777481079102
    8. 's' → logprob: -6.727777481079102
    9. ' poss' → logprob: -6.727777481079102
    10. '   ' → logprob: -7.227777481079102

Token 292: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.18522371351718903
    2. ' sa' → logprob: -2.3102238178253174
    3. ' l' → logprob: -2.9352238178253174
    4. ' les' → logprob: -4.935223579406738
    5. ' une' → logprob: -5.935223579406738
    6. ' the' → logprob: -6.435223579406738
    7. ' ' → logprob: -6.685223579406738
    8. ' son' → logprob: -6.935223579406738
    9. ' le' → logprob: -7.060223579406738
    10. ' its' → logprob: -7.185223579406738

Token 293: ' somme' (ID: 64484)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.6506054401397705
    2. ' cumulative' → logprob: -1.2756054401397705
    3. ' somme' → logprob: -2.4006054401397705
    4. 's' → logprob: -3.6506054401397705
    5. ' cnt' → logprob: -3.9006054401397705
    6. ' val' → logprob: -4.775605201721191
    7. ' value' → logprob: -5.025605201721191
    8. 'cnt' → logprob: -5.025605201721191
    9. 'c' → logprob: -5.025605201721191
    10. 'val' → logprob: -5.150605201721191

Token 294: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18524132668972015
    2. ' cumul' → logprob: -2.185241222381592
    3. ' cumulative' → logprob: -3.060241222381592
    4. ' cum' → logprob: -6.060241222381592
    5. '_des' → logprob: -6.310241222381592
    6. '   ' → logprob: -6.435241222381592
    7. ' ' → logprob: -7.060241222381592
    8. ' de' → logprob: -7.060241222381592
    9. ' accum' → logprob: -7.560241222381592
    10. ' acumul' → logprob: -7.685241222381592

Token 295: ' valeurs' (ID: 73668)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.04491230845451355
    2. 'cnt' → logprob: -3.669912338256836
    3. ' valeurs' → logprob: -4.669912338256836
    4. ' counts' → logprob: -5.044912338256836
    5. 'counts' → logprob: -7.294912338256836
    6. ' values' → logprob: -7.669912338256836
    7. ' val' → logprob: -8.169912338256836
    8. 'val' → logprob: -8.419912338256836
    9. ' descendants' → logprob: -8.794912338256836
    10. ' vals' → logprob: -8.919912338256836

Token 296: ' cumul' (ID: 163119)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18363156914710999
    2. ' de' → logprob: -1.9336315393447876
    3. ' cumul' → logprob: -4.558631420135498
    4. ' cumulative' → logprob: -6.308631420135498
    5. ' accum' → logprob: -6.558631420135498
    6. ' cum' → logprob: -6.558631420135498
    7. 'des' → logprob: -6.808631420135498
    8. 'de' → logprob: -6.933631420135498
    9. '_des' → logprob: -6.933631420135498
    10. ' reç' → logprob: -7.183631420135498

Token 297: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0223525520414114
    2. 'érées' → logprob: -4.147352695465088
    3. 'ul' → logprob: -5.522352695465088
    4. 'atives' → logprob: -7.272352695465088
    5. 'é' → logprob: -7.897352695465088
    6. 'es' → logprob: -8.64735221862793
    7. '   ' → logprob: -8.89735221862793
    8. '```' → logprob: -8.89735221862793
    9. 'ée' → logprob: -9.02235221862793
    10. 'É' → logprob: -9.64735221862793

Token 298: ' jusqu' (ID: 21961)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4198760390281677
    2. ' de' → logprob: -1.1698760986328125
    3. ' le' → logprob: -5.0448760986328125
    4. 'des' → logprob: -5.1698760986328125
    5. ' aux' → logprob: -5.5448760986328125
    6. 'de' → logprob: -5.7948760986328125
    7. ' au' → logprob: -5.7948760986328125
    8. ' jusqu' → logprob: -6.2948760986328125
    9. ' depuis' → logprob: -6.4198760986328125
    10. '   ' → logprob: -6.9198760986328125

Token 299: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.14924998581409454
    2. ''au' → logprob: -2.399250030517578
    3. 'à' → logprob: -3.399250030517578
    4. 'au' → logprob: -4.399250030517578
    5. ' à' → logprob: -7.024250030517578
    6. '’à' → logprob: -7.274250030517578
    7. ''' → logprob: -7.899250030517578
    8. ' au' → logprob: -9.149250030517578
    9. '’au' → logprob: -10.149250030517578
    10. 'a' → logprob: -10.524250030517578

Token 300: ' lui' (ID: 10623)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5930136442184448
    2. 'i' → logprob: -0.8430136442184448
    3. 'l' → logprob: -4.968013763427734
    4. ' lui' → logprob: -5.593013763427734
    5. ' ce' → logprob: -5.843013763427734
    6. ' son' → logprob: -5.968013763427734
    7. ' ' → logprob: -8.468013763427734
    8. ' l' → logprob: -8.718013763427734
    9. 'son' → logprob: -9.093013763427734
    10. ' sa' → logprob: -9.718013763427734

Token 301: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08902104198932648
    2. '   ' → logprob: -2.5890209674835205
    3. ',' → logprob: -5.3390212059021
    4. '.
' → logprob: -5.7140212059021
    5. 'def' → logprob: -7.2140212059021
    6. ' .' → logprob: -7.4640212059021
    7. ').' → logprob: -8.964020729064941
    8. ')' → logprob: -8.964020729064941
    9. '.
' → logprob: -9.839020729064941
    10. ' et' → logprob: -9.964020729064941

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043029677122831345
    2. '
' → logprob: -3.41802978515625
    3. '    
' → logprob: -4.91802978515625
    4. ')' → logprob: -6.91802978515625
    5. '  
' → logprob: -8.29302978515625
    6. 'def' → logprob: -8.54302978515625
    7. '```' → logprob: -8.91802978515625
    8. ')
' → logprob: -9.04302978515625
    9. '):
' → logprob: -9.04302978515625
    10. '   
' → logprob: -9.54302978515625

Token 303: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05628754943609238
    2. '
' → logprob: -3.0562875270843506
    3. '    
' → logprob: -6.05628776550293
    4. ')' → logprob: -6.18128776550293
    5. '"""
' (adapté à ' """
') → logprob: -6.55628776550293
    6. '):
' → logprob: -7.30628776550293
    7. '"""' → logprob: -7.68128776550293
    8. ')
' → logprob: -8.30628776550293
    9. 'def' → logprob: -8.68128776550293
    10. '```' → logprob: -9.18128776550293

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012374912621453404
    2. 'visited' → logprob: -7.251237392425537
    3. ' visited' → logprob: -7.626237392425537
    4. '    
' → logprob: -10.876237869262695
    5. 'queue' → logprob: -11.876237869262695
    6. ' queue' → logprob: -12.251237869262695
    7. '
' → logprob: -12.376237869262695
    8. '    ' → logprob: -13.501237869262695
    9. '  ' → logprob: -13.501237869262695
    10. 'parent' → logprob: -15.001237869262695

Token 305: ' stack' (ID: 10825)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03100430779159069
    2. 'queue' → logprob: -4.156004428863525
    3. '   ' → logprob: -4.906004428863525
    4. ' visited' → logprob: -5.156004428863525
    5. 'dist' → logprob: -7.656004428863525
    6. 'parent' → logprob: -8.031003952026367
    7. 'q' → logprob: -8.406003952026367
    8. 'que' → logprob: -9.281003952026367
    9. 'depth' → logprob: -9.281003952026367
    10. 'result' → logprob: -9.406003952026367

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002485884353518486
    2. '=' → logprob: -6.002485752105713
    3. ',' → logprob: -12.002486228942871
    4. ' =[' → logprob: -13.127486228942871
    5. '=[' → logprob: -14.502486228942871
    6. '   ' → logprob: -14.502486228942871
    7. ' ' → logprob: -14.627486228942871
    8. '=[]' → logprob: -14.752486228942871
    9. '.append' → logprob: -16.377485275268555
    10. ' ,' → logprob: -16.877485275268555

Token 307: ' deque' (ID: 90347)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.18600720167160034
    2. 'deque' → logprob: -1.9360072612762451
    3. '[' → logprob: -3.686007261276245
    4. ' deque' → logprob: -8.311007499694824
    5. ' [(' → logprob: -9.311007499694824
    6. '[((' → logprob: -10.936007499694824
    7. ' [' → logprob: -10.936007499694824
    8. '[]' → logprob: -13.061007499694824
    9. '[s' → logprob: -14.061007499694824
    10. '[d' → logprob: -14.186007499694824

Token 308: '()' (ID: 416)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.698745846748352
    2. '([(' → logprob: -0.698745846748352
    3. '()
' → logprob: -5.1987457275390625
    4. '()' → logprob: -9.823745727539062
    5. '((' → logprob: -13.198745727539062
    6. '(' → logprob: -13.573745727539062
    7. '[(' → logprob: -13.948745727539062
    8. '()

' → logprob: -15.073745727539062
    9. '(([' → logprob: -15.198745727539062
    10. '([
' → logprob: -15.323745727539062

Token 309: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5234436392784119
    2. '
' → logprob: -1.5234436988830566
    3. 'stack' → logprob: -2.2734436988830566
    4. ' stack' → logprob: -3.2734436988830566
    5. '(stack' → logprob: -3.6484436988830566
    6. '	stack' → logprob: -4.398443698883057
    7. '    
' → logprob: -5.273443698883057
    8. '  
' → logprob: -6.148443698883057
    9. ' 
' → logprob: -7.148443698883057
    10. '
' → logprob: -7.648443698883057

Token 310: ' #' (ID: 1069)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.3325846493244171
    2. '([' → logprob: -2.4575846195220947
    3. 'stack' → logprob: -2.5825846195220947
    4. '(stack' → logprob: -2.8325846195220947
    5. '
' → logprob: -3.7075846195220947
    6. '()
' → logprob: -4.332584857940674
    7. '()' → logprob: -4.832584857940674
    8. '   ' → logprob: -5.207584857940674
    9. '[(' → logprob: -5.457584857940674
    10. ' stack' → logprob: -5.957584857940674

Token 311: ' Util' (ID: 13564)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3872288465499878
    2. 'stack' → logprob: -1.1372288465499878
    3. 'visited' → logprob: -8.887228965759277
    4. ' visited' → logprob: -9.137228965759277
    5. '(stack' → logprob: -9.887228965759277
    6. '[(' → logprob: -11.262228965759277
    7. '	stack' → logprob: -11.387228965759277
    8. '   ' → logprob: -11.512228965759277
    9. 'append' → logprob: -12.512228965759277
    10. '(' → logprob: -12.512228965759277

Token 312: 'isé' (ID: 30065)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5870860815048218
    2. 's' → logprob: -0.9620860815048218
    3. 'ser' → logprob: -3.3370862007141113
    4. 'isé' → logprob: -5.212086200714111
    5. 'isateur' → logprob: -5.837086200714111
    6. 'iser' → logprob: -5.962086200714111
    7. '```' → logprob: -5.962086200714111
    8. 'sé' → logprob: -6.337086200714111
    9. 'isation' → logprob: -6.587086200714111
    10. '()' → logprob: -6.587086200714111

Token 313: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4517505466938019
    2. '(stack' → logprob: -1.7017505168914795
    3. ' stack' → logprob: -2.8267505168914795
    4. ' for' → logprob: -3.3267505168914795
    5. ' pour' → logprob: -3.4517505168914795
    6. 'stack' → logprob: -3.8267505168914795
    7. 'for' → logprob: -5.201750755310059
    8. '()' → logprob: -5.201750755310059
    9. '([(' → logprob: -5.326750755310059
    10. '([' → logprob: -5.326750755310059

Token 314: ' un' (ID: 537)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.4682612419128418
    2. 'stack' → logprob: -1.3432612419128418
    3. 'deque' → logprob: -3.343261241912842
    4. ' deque' → logprob: -3.843261241912842
    5. ' [(' → logprob: -4.218261241912842
    6. '[' → logprob: -4.468261241912842
    7. ' [' → logprob: -5.218261241912842
    8. ' dfs' → logprob: -5.343261241912842
    9. ' la' → logprob: -5.593261241912842
    10. 'dfs' → logprob: -5.593261241912842

Token 315: ' parcours' (ID: 62625)
  Prédit: ' parcours'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcours' → logprob: -0.027269043028354645
    2. 'par' → logprob: -4.027268886566162
    3. ' DFS' → logprob: -5.652268886566162
    4. 'e' → logprob: -6.652268886566162
    5. ' parc' → logprob: -7.152268886566162
    6. ' parcour' → logprob: -7.152268886566162
    7. '   ' → logprob: -7.277268886566162
    8. ' BFS' → logprob: -7.902268886566162
    9. ' dfs' → logprob: -8.15226936340332
    10. ' traversal' → logprob: -8.40226936340332

Token 316: ' type' (ID: 1490)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.0039522647857666
    2. ' en' → logprob: -2.0039522647857666
    3. 'en' → logprob: -2.1289522647857666
    4. 'DFS' → logprob: -2.1289522647857666
    5. 'pro' → logprob: -2.5039522647857666
    6. 'depth' → logprob: -2.7539522647857666
    7. ' DFS' → logprob: -3.3789522647857666
    8. 'prof' → logprob: -3.3789522647857666
    9. ' depth' → logprob: -4.0039520263671875
    10. ' dfs' → logprob: -4.5039520263671875

Token 317: ' DFS' (ID: 115767)
  Prédit: 'DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -0.2461419403553009
    2. ' DFS' → logprob: -2.1211419105529785
    3. 'dfs' → logprob: -2.8711419105529785
    4. 'pro' → logprob: -3.7461419105529785
    5. 'prof' → logprob: -4.3711419105529785
    6. 'depth' → logprob: -5.9961419105529785
    7. ' dfs' → logprob: -6.6211419105529785
    8. ' profondeur' → logprob: -7.4961419105529785
    9. ' depth' → logprob: -8.121142387390137
    10. '   ' → logprob: -8.621142387390137

Token 318: ' it' (ID: 480)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.4015903174877167
    2. '   ' → logprob: -1.776590347290039
    3. ' stack' → logprob: -2.026590347290039
    4. '
' → logprob: -4.276590347290039
    5. '(stack' → logprob: -4.776590347290039
    6. '	stack' → logprob: -5.401590347290039
    7. '    
' → logprob: -7.276590347290039
    8. '  
' → logprob: -7.276590347290039
    9. ' 
' → logprob: -8.276590347290039
    10. '  ' → logprob: -8.401590347290039

Token 319: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004351078998297453
    2. 'ér' → logprob: -5.5043511390686035
    3. 'ération' → logprob: -8.754350662231445
    4. 'érateur' → logprob: -9.879350662231445
    5. 'éré' → logprob: -10.379350662231445
    6. 'érée' → logprob: -11.629350662231445
    7. 'érer' → logprob: -12.504350662231445
    8. 'érant' → logprob: -12.504350662231445
    9. '=' → logprob: -12.629350662231445
    10. 'e' → logprob: -12.879350662231445

Token 320: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.13330809772014618
    2. 'ative' → logprob: -2.133308172225952
    3. 'er' → logprob: -6.258307933807373
    4. 'stack' → logprob: -6.758307933807373
    5. 'ér' → logprob: -7.258307933807373
    6. 'ativ' → logprob: -7.383307933807373
    7. 'r' → logprob: -7.758307933807373
    8. 'root' → logprob: -8.008308410644531
    9. '   ' → logprob: -8.883308410644531
    10. '```' → logprob: -8.883308410644531

Token 321: '
' (ID: 198)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.43569132685661316
    2. ' stack' → logprob: -1.1856913566589355
    3. '   ' → logprob: -3.4356913566589355
    4. '(stack' → logprob: -4.8106913566589355
    5. '
' → logprob: -5.6856913566589355
    6. '	stack' → logprob: -6.4356913566589355
    7. ' 
' → logprob: -7.6856913566589355
    8. 'visited' → logprob: -7.9356913566589355
    9. '    
' → logprob: -8.060690879821777
    10. ')' → logprob: -8.685690879821777

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5448268055915833
    2. 'stack' → logprob: -1.5448267459869385
    3. ' stack' → logprob: -1.6698267459869385
    4. 'visited' → logprob: -4.419826984405518
    5. ' visited' → logprob: -6.044826984405518
    6. '(stack' → logprob: -6.294826984405518
    7. '	stack' → logprob: -6.794826984405518
    8. '    
' → logprob: -8.04482650756836
    9. ' ' → logprob: -8.66982650756836
    10. '  ' → logprob: -9.16982650756836

Token 323: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.13608413934707642
    2. 'visited' → logprob: -2.2610840797424316
    3. ' stack' → logprob: -4.011084079742432
    4. ' visited' → logprob: -5.386084079742432
    5. 'parent' → logprob: -8.51108455657959
    6. '   ' → logprob: -10.13608455657959
    7. 'root' → logprob: -11.01108455657959
    8. 'seen' → logprob: -11.51108455657959
    9. 'parents' → logprob: -11.88608455657959
    10. ' parent' → logprob: -12.01108455657959

Token 324: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013546408154070377
    2. '.' → logprob: -6.626354694366455
    3. '.extend' → logprob: -10.751354217529297
    4. ' =' → logprob: -13.126354217529297
    5. '.push' → logprob: -13.126354217529297
    6. ' .' → logprob: -13.376354217529297
    7. '=' → logprob: -14.001354217529297
    8. '.ap' → logprob: -14.876354217529297
    9. 'append' → logprob: -15.626354217529297
    10. '.app' → logprob: -15.751354217529297

Token 325: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931481957435608
    2. '((' → logprob: -0.6931481957435608
    3. ' (' → logprob: -14.693148612976074
    4. '([' → logprob: -15.568148612976074
    5. '1' → logprob: -15.818148612976074
    6. '(
' → logprob: -16.943147659301758
    7. 'left' → logprob: -17.443147659301758
    8. ' ((' → logprob: -17.693147659301758
    9. '(('' → logprob: -17.693147659301758
    10. '[(' → logprob: -18.068147659301758

Token 326: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34875088930130005
    2. '1' → logprob: -1.2237508296966553
    3. ' (' → logprob: -8.223751068115234
    4. ' ' → logprob: -10.348751068115234
    5. '((' → logprob: -13.098751068115234
    6. '(
' → logprob: -13.723751068115234
    7. '   ' → logprob: -13.973751068115234
    8. ')' → logprob: -15.411251068115234
    9. '(i' → logprob: -15.598751068115234
    10. '```' → logprob: -15.848751068115234

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043478719890117645
    2. ',' → logprob: -5.629347801208496
    3. ' )' → logprob: -7.379347801208496
    4. ')
' → logprob: -9.629347801208496
    5. ',)' → logprob: -9.879347801208496
    6. ')
' → logprob: -13.629347801208496
    7. '),' → logprob: -13.629347801208496
    8. ' ,' → logprob: -14.004347801208496
    9. ',
' → logprob: -14.379347801208496
    10. '   ' → logprob: -14.629347801208496

Token 328: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006838510744273663
    2. ' 
' → logprob: -5.506838321685791
    3. '  
' → logprob: -6.881838321685791
    4. '   ' → logprob: -7.006838321685791
    5. '    
' → logprob: -7.506838321685791
    6. '   
' → logprob: -9.38183879852295
    7. '
' → logprob: -9.88183879852295
    8. 'while' → logprob: -10.50683879852295
    9. ' while' → logprob: -10.63183879852295
    10. ')
' → logprob: -11.13183879852295

Token 329: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0018646183889359236
    2. ' 
' → logprob: -6.751864433288574
    3. ')' → logprob: -8.376864433288574
    4. ')
' → logprob: -9.001864433288574
    5. '   ' → logprob: -9.251864433288574
    6. '  
' → logprob: -9.501864433288574
    7. '    
' → logprob: -9.626864433288574
    8. '
' → logprob: -10.501864433288574
    9. 'while' → logprob: -10.626864433288574
    10. ' ' → logprob: -11.501864433288574

Token 330: ' On' (ID: 2160)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2376372516155243
    2. 'parent' → logprob: -2.3626372814178467
    3. ' visited' → logprob: -2.4876372814178467
    4. ' parent' → logprob: -3.8626372814178467
    5. '   ' → logprob: -4.612637042999268
    6. 'parents' → logprob: -6.612637042999268
    7. 'cnt' → logprob: -7.237637042999268
    8. ' parents' → logprob: -7.737637042999268
    9. 'par' → logprob: -8.487637519836426
    10. '    
' → logprob: -8.862637519836426

Token 331: ' commence' (ID: 44755)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.25460416078567505
    2. 'visited' → logprob: -1.5046041011810303
    3. ' visit' → logprob: -7.004604339599609
    4. 'Visited' → logprob: -8.37960433959961
    5. ' visits' → logprob: -8.62960433959961
    6. ' visite' → logprob: -8.75460433959961
    7. ' ' → logprob: -9.00460433959961
    8. 'visit' → logprob: -9.12960433959961
    9. ' visites' → logprob: -9.12960433959961
    10. '[' → logprob: -9.12960433959961

Token 332: ' depuis' (ID: 16277)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.43650802969932556
    2. ' with' → logprob: -1.436508059501648
    3. ' avec' → logprob: -2.8115079402923584
    4. 'par' → logprob: -4.5615081787109375
    5. 'with' → logprob: -4.5615081787109375
    6. ' by' → logprob: -4.6865081787109375
    7. ' from' → logprob: -4.6865081787109375
    8. ' at' → logprob: -5.3115081787109375
    9. 'from' → logprob: -5.4365081787109375
    10. ' à' → logprob: -6.0615081787109375

Token 333: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17977160215377808
    2. ' ' → logprob: -1.8047716617584229
    3. '(' → logprob: -11.304771423339844
    4. ' (' → logprob: -11.429771423339844
    5. '   ' → logprob: -13.429771423339844
    6. ' la' → logprob: -15.054771423339844
    7. '[' → logprob: -15.304771423339844
    8. '```' → logprob: -15.304771423339844
    9. ' [' → logprob: -15.679771423339844
    10. ''' → logprob: -15.804771423339844

Token 334: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.5444555878639221
    2. ' rac' → logprob: -1.2944555282592773
    3. '1' → logprob: -2.0444555282592773
    4. 'root' → logprob: -4.794455528259277
    5. ' sommet' → logprob: -5.669455528259277
    6. ' ' → logprob: -5.919455528259277
    7. '0' → logprob: -7.669455528259277
    8. 's' → logprob: -7.919455528259277
    9. 'node' → logprob: -8.169455528259277
    10. ' root' → logprob: -8.544455528259277

Token 335: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.04467830806970596
    2. '   ' → logprob: -4.294678211212158
    3. '
' → logprob: -5.169678211212158
    4. '       ' → logprob: -5.419678211212158
    5. '```' → logprob: -5.919678211212158
    6. ' ' → logprob: -6.044678211212158
    7. '1' → logprob: -6.044678211212158
    8. '    ' → logprob: -6.544678211212158
    9. 'e' → logprob: -6.669678211212158
    10. '``' → logprob: -6.919678211212158

Token 336: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03667214885354042
    2. '
' → logprob: -3.4116721153259277
    3. '    
' → logprob: -6.536672115325928
    4. 'visited' → logprob: -7.286672115325928
    5. ' visited' → logprob: -7.911672115325928
    6. ',' → logprob: -8.786672592163086
    7. ' 
' → logprob: -9.286672592163086
    8. '
' → logprob: -9.911672592163086
    9. '   
' → logprob: -10.036672592163086
    10. '  
' → logprob: -10.411672592163086

Token 337: 'supp' (ID: 124665)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.599366307258606
    2. ')' → logprob: -1.099366307258606
    3. ' )' → logprob: -2.4743661880493164
    4. ' ' → logprob: -3.4743661880493164
    5. ' )
' → logprob: -6.724366188049316
    6. ')
' → logprob: -7.224366188049316
    7. ')\' → logprob: -8.349366188049316
    8. ',' → logprob: -9.224366188049316
    9. '')' → logprob: -9.599366188049316
    10. ' (' → logprob: -10.349366188049316

Token 338: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.003445641603320837
    2. 'ose' → logprob: -5.878445625305176
    3. 'osed' → logprob: -8.378445625305176
    4. ' os' → logprob: -9.003445625305176
    5. 'posé' → logprob: -10.253445625305176
    6. 'lé' → logprob: -10.628445625305176
    7. 'ort' → logprob: -10.628445625305176
    8. 'o' → logprob: -11.003445625305176
    9. 'ly' → logprob: -11.003445625305176
    10. 'oser' → logprob: -11.003445625305176

Token 339: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0609455406665802
    2. 'é' → logprob: -2.935945510864258
    3. 'ément' → logprob: -6.185945510864258
    4. 'lée' → logprob: -6.685945510864258
    5. 'onnée' → logprob: -6.935945510864258
    6. 'os' → logprob: -7.810945510864258
    7. 'éd' → logprob: -7.935945510864258
    8. '1' → logprob: -8.810945510864258
    9. 'd' → logprob: -8.810945510864258
    10. 'rée' → logprob: -9.060945510864258

Token 340: ' être' (ID: 9104)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48894068598747253
    2. ' être' → logprob: -1.988940715789795
    3. ')' → logprob: -2.238940715789795
    4. ' comme' → logprob: -3.363940715789795
    5. ' ' → logprob: -3.488940715789795
    6. ' )' → logprob: -4.238940715789795
    7. ' ici' → logprob: -4.363940715789795
    8. ' here' → logprob: -4.738940715789795
    9. 'comme' → logprob: -4.738940715789795
    10. 'être' → logprob: -5.113940715789795

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2525710165500641
    2. ' ' → logprob: -1.5025709867477417
    3. 'le' → logprob: -8.252571105957031
    4. ' le' → logprob: -8.252571105957031
    5. ')' → logprob: -10.252571105957031
    6. ' la' → logprob: -10.502571105957031
    7. '   ' → logprob: -10.752571105957031
    8. ' ' → logprob: -12.127571105957031
    9. ' node' → logprob: -12.127571105957031
    10. 'la' → logprob: -12.752571105957031

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026346514001488686
    2. ' ' → logprob: -3.651346445083618
    3. '   ' → logprob: -10.401346206665039
    4. ')' → logprob: -11.901346206665039
    5. 'le' → logprob: -13.151346206665039
    6. ' ' → logprob: -13.651346206665039
    7. ' le' → logprob: -13.901346206665039
    8. '```' → logprob: -14.026346206665039
    9. '  ' → logprob: -14.151346206665039
    10. '`' → logprob: -14.401346206665039

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01528328750282526
    2. ')
' → logprob: -4.265283107757568
    3. ' )' → logprob: -6.890283107757568
    4. ' )
' → logprob: -9.265283584594727
    5. ')
' → logprob: -12.140283584594727
    6. '   ' → logprob: -14.515283584594727
    7. ' ' → logprob: -15.015283584594727
    8. ')

' → logprob: -15.515283584594727
    9. '
' → logprob: -16.515283584594727
    10. ' )
' → logprob: -16.515283584594727

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1395646631717682
    2. ' visited' → logprob: -3.0145647525787354
    3. 'visited' → logprob: -3.2645647525787354
    4. ' parent' → logprob: -3.6395647525787354
    5. 'parent' → logprob: -4.264564514160156
    6. ' parents' → logprob: -6.889564514160156
    7. '    
' → logprob: -7.639564514160156
    8. '
' → logprob: -8.139564514160156
    9. '	parent' → logprob: -8.514564514160156
    10. ',parent' → logprob: -8.514564514160156

Token 345: ' checked' (ID: 15579)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.08322372287511826
    2. 'parent' → logprob: -2.833223819732666
    3. ' visited' → logprob: -4.083223819732666
    4. ' parent' → logprob: -5.958223819732666
    5. '   ' → logprob: -6.958223819732666
    6. 'parents' → logprob: -7.958223819732666
    7. 'par' → logprob: -8.958223342895508
    8. 'seen' → logprob: -9.583223342895508
    9. 'prev' → logprob: -10.708223342895508
    10. ' parents' → logprob: -11.083223342895508

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006727214436978102
    2. '=' → logprob: -5.00672721862793
    3. '=[' → logprob: -12.00672721862793
    4. ' =[' → logprob: -12.88172721862793
    5. ' ' → logprob: -13.63172721862793
    6. '=set' → logprob: -14.50672721862793
    7. '	' → logprob: -14.75672721862793
    8. '[' → logprob: -15.00672721862793
    9. '   ' → logprob: -15.38172721862793
    10. 's' → logprob: -15.63172721862793

Token 347: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6949891448020935
    2. ' [' → logprob: -0.6949891448020935
    3. ' set' → logprob: -7.194989204406738
    4. 'set' → logprob: -7.194989204406738
    5. '{' → logprob: -8.569989204406738
    6. '[n' → logprob: -9.694989204406738
    7. ' {' → logprob: -9.944989204406738
    8. '   ' → logprob: -10.194989204406738
    9. ' ' → logprob: -13.319989204406738
    10. '[node' → logprob: -14.944989204406738

Token 348: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14327538013458252
    2. '([' → logprob: -2.393275260925293
    3. '()
' → logprob: -3.268275260925293
    4. '(' → logprob: -5.518275260925293
    5. '({' → logprob: -10.393275260925293
    6. '()
' → logprob: -11.268275260925293
    7. '()

' → logprob: -11.268275260925293
    8. '()\' → logprob: -11.768275260925293
    9. '   ' → logprob: -13.268275260925293
    10. '{' → logprob: -13.768275260925293

Token 349: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14942729473114014
    2. '   ' → logprob: -2.6494274139404297
    3. '  
' → logprob: -4.02442741394043
    4. ' 
' → logprob: -4.02442741394043
    5. '<|end|>' → logprob: -4.27442741394043
    6. '{' → logprob: -4.89942741394043
    7. '    
' → logprob: -5.39942741394043
    8. ' ' → logprob: -6.52442741394043
    9. ' {' → logprob: -6.52442741394043
    10. '\n' → logprob: -7.27442741394043

Token 350: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03208335116505623
    2. '{' → logprob: -4.157083511352539
    3. ' 
' → logprob: -5.782083511352539
    4. '()
' → logprob: -5.782083511352539
    5. '   ' → logprob: -5.907083511352539
    6. 'checked' → logprob: -6.782083511352539
    7. '  
' → logprob: -6.907083511352539
    8. '(' → logprob: -7.032083511352539
    9. ' {' → logprob: -7.157083511352539
    10. ' checked' → logprob: -7.157083511352539

Token 351: ' G' (ID: 499)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.575973391532898
    2. ' checked' → logprob: -0.825973391532898
    3. '   ' → logprob: -12.075973510742188
    4. '
' → logprob: -12.200973510742188
    5. '{' → logprob: -12.325973510742188
    6. ' 
' → logprob: -12.575973510742188
    7. '_checked' → logprob: -12.825973510742188
    8. '.checked' → logprob: -12.950973510742188
    9. ' ' → logprob: -13.075973510742188
    10. 'stack' → logprob: -13.325973510742188

Token 352: 'arde' (ID: 11236)
  Prédit: 'enerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -1.4055306911468506
    2. 'raph' → logprob: -1.7805306911468506
    3. 'enerated' → logprob: -1.7805306911468506
    4. 'stack' → logprob: -2.7805306911468506
    5. 'roup' → logprob: -2.9055306911468506
    6. '{' → logprob: -2.9055306911468506
    7. 'iven' → logprob: -3.4055306911468506
    8. 'lobal' → logprob: -3.4055306911468506
    9. 'eneral' → logprob: -3.5305306911468506
    10. '(stack' → logprob: -3.6555306911468506

Token 353: ' trace' (ID: 21523)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1887543499469757
    2. '  ' → logprob: -2.5637543201446533
    3. '   ' → logprob: -3.1887543201446533
    4. '(' → logprob: -4.313754558563232
    5. '    ' → logprob: -4.313754558563232
    6. '<|end|>' → logprob: -5.688754558563232
    7. ')' → logprob: -5.813754558563232
    8. '{' → logprob: -6.438754558563232
    9. ' None' → logprob: -6.563754558563232
    10. '     ' → logprob: -6.688754558563232

Token 354: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2170734703540802
    2. ' ' → logprob: -1.9670734405517578
    3. ' of' → logprob: -3.842073440551758
    4. ' d' → logprob: -4.842073440551758
    5. '()' → logprob: -5.092073440551758
    6. ' de' → logprob: -5.217073440551758
    7. 'd' → logprob: -5.217073440551758
    8. 'des' → logprob: -5.842073440551758
    9. ' (' → logprob: -6.342073440551758
    10. '(' → logprob: -6.467073440551758

Token 355: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.4078826308250427
    2. ' nodes' → logprob: -2.1578826904296875
    3. '1' → logprob: -2.6578826904296875
    4. ' visited' → logprob: -3.2828826904296875
    5. 'visited' → logprob: -3.2828826904296875
    6. ' ' → logprob: -3.6578826904296875
    7. ' noe' → logprob: -4.1578826904296875
    8. ' vertices' → logprob: -4.9078826904296875
    9. ' sommet' → logprob: -4.9078826904296875
    10. 'nodes' → logprob: -5.2828826904296875

Token 356: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.005661055911332369
    2. 'et' → logprob: -5.2556610107421875
    3. 'és' → logprob: -8.380661010742188
    4. '{' → logprob: -9.630661010742188
    5. 'e' → logprob: -10.130661010742188
    6. 'etés' → logprob: -10.505661010742188
    7. 'es' → logprob: -11.255661010742188
    8. 'eté' → logprob: -11.505661010742188
    9. 'êts' → logprob: -11.630661010742188
    10. '   ' → logprob: -12.130661010742188

Token 357: ' déjà' (ID: 21229)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3519379496574402
    2. 'visited' → logprob: -1.476938009262085
    3. ' ' → logprob: -3.476938009262085
    4. '   ' → logprob: -4.476937770843506
    5. ' des' → logprob: -4.726937770843506
    6. ' visit' → logprob: -5.101937770843506
    7. ' (' → logprob: -6.601937770843506
    8. '()' → logprob: -7.101937770843506
    9. '_seen' → logprob: -7.101937770843506
    10. ' de' → logprob: -7.351937770843506

Token 358: ' parcour' (ID: 130642)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1039559841156006
    2. ' visited' → logprob: -1.4789559841156006
    3. 'vis' → logprob: -1.7289559841156006
    4. 'visit' → logprob: -1.8539559841156006
    5. ' visit' → logprob: -2.7289559841156006
    6. '_visit' → logprob: -4.35395622253418
    7. 'vist' → logprob: -4.72895622253418
    8. '_vis' → logprob: -5.10395622253418
    9. 'vus' → logprob: -5.35395622253418
    10. 'expl' → logprob: -6.22895622253418

Token 359: 'us' (ID: 385)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.026619112119078636
    2. 'is' → logprob: -4.651618957519531
    3. 'us' → logprob: -4.651618957519531
    4. 's' → logprob: -6.026618957519531
    5. 'isés' → logprob: -6.151618957519531
    6. 'illés' → logprob: -6.901618957519531
    7. 'ès' → logprob: -8.276618957519531
    8. 'nés' → logprob: -8.401618957519531
    9. 'ur' → logprob: -8.526618957519531
    10. 'i' → logprob: -8.526618957519531

Token 360: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011474884115159512
    2. '   ' → logprob: -5.261475086212158
    3. 'checked' → logprob: -5.886475086212158
    4. '  
' → logprob: -6.761475086212158
    5. '    
' → logprob: -7.136475086212158
    6. ' checked' → logprob: -7.261475086212158
    7. ' 
' → logprob: -8.011474609375
    8. '   
' → logprob: -8.636474609375
    9. '
' → logprob: -9.261474609375
    10. '\n' → logprob: -10.136474609375

Token 361: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5024185180664062
    2. '   ' → logprob: -1.0024185180664062
    3. '    
' → logprob: -4.627418518066406
    4. '  
' → logprob: -4.752418518066406
    5. ' 
' → logprob: -5.752418518066406
    6. ' checked' → logprob: -5.877418518066406
    7. '   
' → logprob: -6.377418518066406
    8. 'checked' → logprob: -7.002418518066406
    9. '\n' → logprob: -7.627418518066406
    10. '
' → logprob: -9.627418518066406

Token 362: ' while' (ID: 2049)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.1615486890077591
    2. ' checked' → logprob: -2.661548614501953
    3. 'while' (adapté à ' while') → logprob: -3.161548614501953
    4. '   ' → logprob: -3.786548614501953
    5. ' while' → logprob: -4.286548614501953
    6. 'visited' → logprob: -8.411548614501953
    7. 'cnt' → logprob: -9.661548614501953
    8. '
' → logprob: -9.786548614501953
    9. '    
' → logprob: -10.036548614501953
    10. ' ' → logprob: -10.661548614501953

Token 363: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.018218310549855232
    2. ' stack' → logprob: -4.018218517303467
    3. 'len' → logprob: -9.643218040466309
    4. ' len' → logprob: -13.018218040466309
    5. '(stack' → logprob: -14.393218040466309
    6. '	stack' → logprob: -14.768218040466309
    7. ' ' → logprob: -15.768218040466309
    8. '   ' → logprob: -15.768218040466309
    9. 'not' → logprob: -18.018218994140625
    10. 'st' → logprob: -18.393218994140625

Token 364: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009060516953468323
    2. ':
' → logprob: -5.134060382843018
    3. '.pop' → logprob: -5.884060382843018
    4. '[-' → logprob: -8.634060859680176
    5. '):' → logprob: -9.509060859680176
    6. '.' → logprob: -10.634060859680176
    7. '.append' → logprob: -10.884060859680176
    8. 'pop' → logprob: -11.009060859680176
    9. ' :' → logprob: -11.509060859680176
    10. '   ' → logprob: -12.009060859680176

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013842828571796417
    2. ' node' → logprob: -4.763843059539795
    3. '   ' → logprob: -6.388843059539795
    4. 'node' → logprob: -6.638843059539795
    5. ' current' → logprob: -7.263843059539795
    6. ' u' → logprob: -7.763843059539795
    7. 'u' → logprob: -7.763843059539795
    8. 'current' → logprob: -8.013842582702637
    9. ' v' → logprob: -8.513842582702637
    10. 'v' → logprob: -9.513842582702637

Token 366: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.37207651138305664
    2. 'u' → logprob: -1.6220765113830566
    3. 'v' → logprob: -2.8720765113830566
    4. 'current' → logprob: -3.7470765113830566
    5. ' node' → logprob: -4.122076511383057
    6. 'cur' → logprob: -4.747076511383057
    7. '   ' → logprob: -5.997076511383057
    8. 'curr' → logprob: -6.122076511383057
    9. ' u' → logprob: -6.372076511383057
    10. ' v' → logprob: -7.372076511383057

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054908569902181625
    2. '=' → logprob: -2.929908514022827
    3. ' ' → logprob: -11.179908752441406
    4. ',' → logprob: -11.679908752441406
    5. '   ' → logprob: -13.304908752441406
    6. ')' → logprob: -13.929908752441406
    7. '    ' → logprob: -15.304908752441406
    8. ')=' → logprob: -16.054908752441406
    9. ' =
' → logprob: -16.179908752441406
    10. '_stack' → logprob: -16.179908752441406

Token 368: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0380416102707386
    2. ' stack' → logprob: -3.288041591644287
    3. '	stack' → logprob: -16.663042068481445
    4. ' ' → logprob: -16.913042068481445
    5. '(stack' → logprob: -18.913042068481445
    6. '_stack' → logprob: -19.663042068481445
    7. 'Stack' → logprob: -19.913042068481445
    8. '   ' → logprob: -20.538042068481445
    9. '.stack' → logprob: -20.663042068481445
    10. 'st' → logprob: -20.663042068481445

Token 369: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00023929782037157565
    2. '.' → logprob: -8.500239372253418
    3. '.p' → logprob: -10.750239372253418
    4. 'pop' → logprob: -11.750239372253418
    5. '[-' → logprob: -12.000239372253418
    6. ' .' → logprob: -15.500239372253418
    7. '   ' → logprob: -16.7502384185791
    8. ' pop' → logprob: -19.8752384185791
    9. '.Pop' → logprob: -19.8752384185791
    10. '.peek' → logprob: -20.0002384185791

Token 370: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07818381488323212
    2. ')' → logprob: -3.953183889389038
    3. '       ' → logprob: -4.203183650970459
    4. ' 
' → logprob: -4.953183650970459
    5. '    
' → logprob: -5.078183650970459
    6. '   ' → logprob: -5.453183650970459
    7. '<|end|>' → logprob: -5.578183650970459
    8. '<|end|>' → logprob: -5.578183650970459
    9. '        
' → logprob: -5.578183650970459
    10. '()' → logprob: -5.703183650970459

Token 371: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09527157992124557
    2. '   ' → logprob: -2.845271587371826
    3. ' 
' → logprob: -4.345271587371826
    4. '    
' → logprob: -4.345271587371826
    5. '  
' → logprob: -5.845271587371826
    6. '   
' → logprob: -6.345271587371826
    7. ' if' → logprob: -6.595271587371826
    8. '        
' → logprob: -7.720271587371826
    9. '       ' → logprob: -8.720271110534668
    10. '     
' → logprob: -9.720271110534668

Token 372: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005805905908346176
    2. '       ' → logprob: -6.130805969238281
    3. ' 
' → logprob: -6.755805969238281
    4. '        
' → logprob: -7.255805969238281
    5. '    
' → logprob: -7.630805969238281
    6. '   ' → logprob: -7.755805969238281
    7. '  
' → logprob: -7.880805969238281
    8. '<|end|>' → logprob: -9.130805969238281
    9. '
' → logprob: -9.505805969238281
    10. 'if' → logprob: -9.630805969238281

Token 373: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009837429039180279
    2. 'checked' → logprob: -4.634837627410889
    3. ' if' → logprob: -10.63483715057373
    4. '   ' → logprob: -10.63483715057373
    5. '       ' → logprob: -11.25983715057373
    6. '
' → logprob: -11.50983715057373
    7. '        
' → logprob: -12.50983715057373
    8. '    
' → logprob: -13.00983715057373
    9. 'for' → logprob: -13.63483715057373
    10. ' checked' → logprob: -14.00983715057373

Token 374: ' traite' (ID: 180696)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23314033448696136
    2. ' if' → logprob: -1.6081403493881226
    3. ' continue' → logprob: -5.608140468597412
    4. 'continue' → logprob: -6.733140468597412
    5. '   ' → logprob: -7.108140468597412
    6. ' check' → logprob: -7.233140468597412
    7. '       ' → logprob: -8.233139991760254
    8. 'check' → logprob: -8.608139991760254
    9. ' checked' → logprob: -8.983139991760254
    10. ' ajoute' → logprob: -9.108139991760254

Token 375: ' le' (ID: 505)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.018150296062231064
    2. ' node' → logprob: -4.018150329589844
    3. '(node' → logprob: -15.393150329589844
    4. ' ' → logprob: -16.893150329589844
    5. '[node' → logprob: -17.143150329589844
    6. '	node' → logprob: -17.393150329589844
    7. '=node' → logprob: -18.268150329589844
    8. '   ' → logprob: -18.893150329589844
    9. '    ' → logprob: -19.518150329589844
    10. ',node' → logprob: -19.893150329589844

Token 376: ' sommet' (ID: 130502)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.35445845127105713
    2. ' node' → logprob: -1.4794584512710571
    3. ' noe' → logprob: -2.7294583320617676
    4. 'no' → logprob: -6.229458332061768
    5. 'n' → logprob: -6.604458332061768
    6. ' sommet' → logprob: -7.229458332061768
    7. ' n' → logprob: -7.979458332061768
    8. 'dern' → logprob: -8.104458808898926
    9. 'current' → logprob: -8.479458808898926
    10. ' current' → logprob: -8.979458808898926

Token 377: ' en' (ID: 469)
  Prédit: ' courant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' courant' → logprob: -0.4698547422885895
    2. ' if' → logprob: -2.3448548316955566
    3. 'node' → logprob: -2.3448548316955566
    4. ' node' → logprob: -2.7198548316955566
    5. 'if' → logprob: -3.5948548316955566
    6. 'cour' → logprob: -4.094854831695557
    7. 'current' → logprob: -4.344854831695557
    8. ' actuel' → logprob: -4.594854831695557
    9. ' current' → logprob: -4.844854831695557
    10. ' en' → logprob: -5.094854831695557

Token 378: ' haut' (ID: 28223)
  Prédit: 'cours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cours' → logprob: -0.8566250205039978
    2. 'fin' → logprob: -1.3566250801086426
    3. 't' → logprob: -2.3566250801086426
    4. 'cour' → logprob: -2.6066250801086426
    5. 'stack' → logprob: -3.7316250801086426
    6. ' ' → logprob: -3.7316250801086426
    7. '   ' → logprob: -3.9816250801086426
    8. 'node' → logprob: -4.731625080108643
    9. 'dern' → logprob: -4.731625080108643
    10. 'pro' → logprob: -4.731625080108643

Token 379: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.123769998550415
    2. '       ' → logprob: -1.123769998550415
    3. ' de' → logprob: -1.373769998550415
    4. ' du' → logprob: -2.998769998550415
    5. '    ' → logprob: -3.998769998550415
    6. ')' → logprob: -4.498769760131836
    7. ' of' → logprob: -5.248769760131836
    8. ',' → logprob: -5.873769760131836
    9. '        ' → logprob: -5.873769760131836
    10. '           ' → logprob: -7.373769760131836

Token 380: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1484658122062683
    2. 'stack' → logprob: -2.023465871810913
    3. ' la' → logprob: -5.648465633392334
    4. 'pile' → logprob: -6.273465633392334
    5. ' stack' → logprob: -8.023466110229492
    6. 'l' → logprob: -10.898466110229492
    7. ' pile' → logprob: -12.023466110229492
    8. 'the' → logprob: -12.773466110229492
    9. '   ' → logprob: -13.523466110229492
    10. 'p' → logprob: -13.523466110229492

Token 381: ' pile' (ID: 39732)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6932311058044434
    2. 'pile' → logprob: -0.6932311058044434
    3. ' pile' → logprob: -10.068231582641602
    4. 'p' → logprob: -10.568231582641602
    5. 'pil' → logprob: -12.193231582641602
    6. ' stack' → logprob: -12.193231582641602
    7. '   ' → logprob: -13.193231582641602
    8. ' ' → logprob: -14.068231582641602
    9. '_stack' → logprob: -14.443231582641602
    10. 'pu' → logprob: -14.943231582641602

Token 382: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0627576112747192
    2. '   ' → logprob: -1.1877576112747192
    3. 'if' → logprob: -1.4377576112747192
    4. '       ' → logprob: -2.4377574920654297
    5. '
' → logprob: -4.18775749206543
    6. '        
' → logprob: -5.81275749206543
    7. '    
' → logprob: -6.06275749206543
    8. ' 
' → logprob: -6.56275749206543
    9. 'checked' → logprob: -6.93775749206543
    10. ' checked' → logprob: -7.18775749206543

Token 383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.492259681224823
    2. ' if' → logprob: -1.1172597408294678
    3. 'if' → logprob: -3.1172597408294678
    4. ' checked' → logprob: -5.117259502410889
    5. '    
' → logprob: -5.492259502410889
    6. '
' → logprob: -5.867259502410889
    7. ' 
' → logprob: -6.242259502410889
    8. 'checked' → logprob: -6.992259502410889
    9. '       ' → logprob: -7.367259502410889
    10. '  
' → logprob: -8.367259979248047

Token 384: ' checked' (ID: 15579)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18053700029850006
    2. 'checked' (adapté à ' checked') → logprob: -1.8055369853973389
    3. '   ' → logprob: -7.555537223815918
    4. ' if' → logprob: -8.930537223815918
    5. 'for' → logprob: -10.055537223815918
    6. '       ' → logprob: -10.305537223815918
    7. ' checked' → logprob: -10.430537223815918
    8. '    
' → logprob: -11.680537223815918
    9. '
' → logprob: -11.805537223815918
    10. '        
' → logprob: -12.430537223815918

Token 385: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0011765359668061137
    2. '.' → logprob: -6.751176357269287
    3. ' .' → logprob: -12.001176834106445
    4. 'add' → logprob: -15.626176834106445
    5. ').' → logprob: -18.501176834106445
    6. '.append' → logprob: -18.626176834106445
    7. '	add' → logprob: -18.751176834106445
    8. '.update' → logprob: -18.876176834106445
    9. '   ' → logprob: -19.001176834106445
    10. ')add' → logprob: -19.001176834106445

Token 386: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '(
' → logprob: -17.12509536743164
    4. ' (' → logprob: -17.25009536743164
    5. '(n' → logprob: -17.75009536743164
    6. 'node' → logprob: -18.37509536743164
    7. '(token' → logprob: -19.75009536743164
    8. '=node' → logprob: -20.62509536743164
    9. '(note' → logprob: -20.62509536743164
    10. '(nodes' → logprob: -20.75009536743164

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870057463645935
    2. ')
' → logprob: -1.1370058059692383
    3. ' )
' → logprob: -9.512005805969238
    4. ')
' → logprob: -10.762005805969238
    5. ' )' → logprob: -10.887005805969238
    6. ')

' → logprob: -11.637005805969238
    7. '
' → logprob: -11.762005805969238
    8. '   ' → logprob: -13.137005805969238
    9. '       ' → logprob: -13.887005805969238
    10. ' ' → logprob: -14.262005805969238

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3553936779499054
    2. '   ' → logprob: -1.605393648147583
    3. ' for' → logprob: -2.605393648147583
    4. 'for' → logprob: -3.730393648147583
    5. '
' → logprob: -8.605393409729004
    6. '    
' → logprob: -9.230393409729004
    7. '        
' → logprob: -9.480393409729004
    8. ' 
' → logprob: -10.730393409729004
    9. ' ' → logprob: -11.105393409729004
    10. '	for' → logprob: -11.105393409729004

Token 389: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03115522302687168
    2. '   ' → logprob: -4.031155109405518
    3. ' for' → logprob: -4.406155109405518
    4. '
' → logprob: -7.656155109405518
    5. '       ' → logprob: -8.906155586242676
    6. '    
' → logprob: -9.406155586242676
    7. '  
' → logprob: -11.656155586242676
    8. '        
' → logprob: -12.031155586242676
    9. ' 
' → logprob: -12.406155586242676
    10. '	for' → logprob: -12.531155586242676

Token 390: ' Mar' (ID: 3145)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.3199920178740285e-05
    2. ' for' → logprob: -10.875022888183594
    3. '    
' → logprob: -13.125022888183594
    4. '   ' → logprob: -14.375022888183594
    5. '        
' → logprob: -14.375022888183594
    6. '
' → logprob: -14.875022888183594
    7. '       ' → logprob: -15.250022888183594
    8. 'stack' → logprob: -16.250022888183594
    9. '	for' → logprob: -16.500022888183594
    10. 'found' → logprob: -16.750022888183594

Token 391: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.1611943542957306
    2. 'quer' → logprob: -1.9111943244934082
    3. 'qu' → logprob: -8.536194801330566
    4. 'k' → logprob: -8.536194801330566
    5. 'qué' → logprob: -8.536194801330566
    6. 'ker' → logprob: -8.911194801330566
    7. 'quez' → logprob: -9.536194801330566
    8. 'ke' → logprob: -9.661194801330566
    9. 'q' → logprob: -10.161194801330566
    10. 'quée' → logprob: -10.536194801330566

Token 392: ' le' (ID: 505)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.020241115242242813
    2. ' node' → logprob: -4.3952412605285645
    3. 'node' → logprob: -4.8952412605285645
    4. '(' → logprob: -8.645240783691406
    5. '[node' → logprob: -11.270240783691406
    6. '	node' → logprob: -11.520240783691406
    7. '=node' → logprob: -11.520240783691406
    8. ' (' → logprob: -12.145240783691406
    9. ' ' → logprob: -13.395240783691406
    10. ')' → logprob: -13.645240783691406

Token 393: ' sommet' (ID: 130502)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6931617259979248
    2. 'node' → logprob: -0.6931617259979248
    3. ' noe' → logprob: -11.568161964416504
    4. 'n' → logprob: -12.943161964416504
    5. '[node' → logprob: -13.943161964416504
    6. ' nodo' → logprob: -15.068161964416504
    7. 'token' → logprob: -15.443161964416504
    8. '=node' → logprob: -15.568161964416504
    9. 'no' → logprob: -15.693161964416504
    10. '<|end|>' → logprob: -15.818161964416504

Token 394: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42206719517707825
    2. ' as' → logprob: -1.9220671653747559
    3. '<|end|>' → logprob: -2.047067165374756
    4. '  ' → logprob: -3.922067165374756
    5. ' for' → logprob: -4.797067165374756
    6. 'as' → logprob: -4.922067165374756
    7. 'for' → logprob: -5.047067165374756
    8. '[node' → logprob: -5.422067165374756
    9. '    ' → logprob: -5.922067165374756
    10. '       ' → logprob: -5.922067165374756

Token 395: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.03936678543686867
    2. ' vis' → logprob: -3.9143667221069336
    3. 'visited' → logprob: -4.414366722106934
    4. 'visit' → logprob: -6.039366722106934
    5. 'trait' → logprob: -6.289366722106934
    6. 'vu' → logprob: -7.664366722106934
    7. '_vis' → logprob: -7.789366722106934
    8. ' parcour' → logprob: -8.039366722106934
    9. ' visited' → logprob: -8.164366722106934
    10. ' traité' → logprob: -9.039366722106934

Token 396: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.144536554813385
    2. 'ited' → logprob: -2.0195364952087402
    3. 'it' → logprob: -6.39453649520874
    4. 'ités' → logprob: -10.269536972045898
    5. 'ite' → logprob: -10.394536972045898
    6. '   ' → logprob: -10.644536972045898
    7. '```' → logprob: -10.769536972045898
    8. 'itable' → logprob: -11.269536972045898
    9. 'itt' → logprob: -11.519536972045898
    10. '_' → logprob: -12.394536972045898

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7186639308929443
    2. '   ' → logprob: -1.4686639308929443
    3. ' for' → logprob: -1.8436639308929443
    4. 'for' → logprob: -2.0936639308929443
    5. '    
' → logprob: -8.218664169311523
    6. '        
' → logprob: -8.343664169311523
    7. '
' → logprob: -8.468664169311523
    8. ' 
' → logprob: -9.718664169311523
    9. ' ' → logprob: -10.218664169311523
    10. '  
' → logprob: -10.718664169311523

Token 398: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8160452842712402
    2. 'for' → logprob: -0.9410452842712402
    3. ' for' → logprob: -1.9410452842712402
    4. '       ' → logprob: -3.8160452842712402
    5. '    
' → logprob: -6.44104528427124
    6. '        
' → logprob: -8.566045761108398
    7. '
' → logprob: -8.691045761108398
    8. '	for' → logprob: -10.441045761108398
    9. '  ' → logprob: -11.316045761108398
    10. '  
' → logprob: -11.566045761108398

Token 399: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.1782583391759545e-05
    2. ' for' → logprob: -10.750031471252441
    3. '   ' → logprob: -11.625031471252441
    4. '       ' → logprob: -14.625031471252441
    5. '    
' → logprob: -14.875031471252441
    6. '
' → logprob: -15.250031471252441
    7. '        
' → logprob: -15.750031471252441
    8. '	for' → logprob: -16.875032424926758
    9. ' 
' → logprob: -17.750032424926758
    10. '  
' → logprob: -18.125032424926758

Token 400: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.06457148492336273
    2. 'adj' → logprob: -3.3145713806152344
    3. ' neighbor' → logprob: -4.064571380615234
    4. 'nei' → logprob: -5.564571380615234
    5. 'ne' → logprob: -6.064571380615234
    6. 'child' → logprob: -6.689571380615234
    7. 'nbr' → logprob: -8.189571380615234
    8. ' nei' → logprob: -8.189571380615234
    9. ' voisin' → logprob: -8.314571380615234
    10. ' adj' → logprob: -8.439571380615234

Token 401: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11283273994922638
    2. 'in' → logprob: -2.23783278465271
    3. '	in' → logprob: -12.237833023071289
    4. '   ' → logprob: -13.237833023071289
    5. ' ' → logprob: -13.612833023071289
    6. 's' → logprob: -13.737833023071289
    7. '_in' → logprob: -14.612833023071289
    8. ',' → logprob: -15.237833023071289
    9. '  ' → logprob: -15.612833023071289
    10. '    ' → logprob: -15.862833023071289

Token 402: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.020549481734633446
    2. ' tree' → logprob: -3.8955495357513428
    3. '	tree' → logprob: -12.520549774169922
    4. '   ' → logprob: -13.270549774169922
    5. ' ' → logprob: -13.895549774169922
    6. '(tree' → logprob: -14.645549774169922
    7. 't' → logprob: -15.520549774169922
    8. ' ' → logprob: -16.020549774169922
    9. 'Tree' → logprob: -16.395549774169922
    10. 'tre' → logprob: -16.520549774169922

Token 403: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. ' [' → logprob: -19.375
    4. 'node' → logprob: -20.375
    5. '(node' → logprob: -20.75
    6. '[n' → logprob: -21.875
    7. '[
' → logprob: -23.0
    8. ' node' → logprob: -23.25
    9. '[user' → logprob: -23.875
    10. '```' → logprob: -24.0

Token 404: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004042425658553839
    2. ']:
' → logprob: -5.754042625427246
    3. ']' → logprob: -7.254042625427246
    4. ':' → logprob: -9.629042625427246
    5. ']:
' → logprob: -10.254042625427246
    6. ' ]' → logprob: -10.629042625427246
    7. '):' → logprob: -10.879042625427246
    8. '   ' → logprob: -11.879042625427246
    9. '}:' → logprob: -13.629042625427246
    10. '):
' → logprob: -14.004042625427246

Token 405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006516746943816543
    2. ' if' → logprob: -7.875651836395264
    3. 'if' → logprob: -8.750651359558105
    4. '       ' → logprob: -9.125651359558105
    5. '   ' → logprob: -13.375651359558105
    6. '	       ' → logprob: -14.000651359558105
    7. '          ' → logprob: -14.625651359558105
    8. '         ' → logprob: -14.750651359558105
    9. '        ' → logprob: -15.000651359558105
    10. '               ' → logprob: -15.375651359558105

Token 406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006831409875303507
    2. ' if' → logprob: -5.006831645965576
    3. '               ' → logprob: -9.756831169128418
    4. '           ' → logprob: -9.756831169128418
    5. '   ' → logprob: -16.006832122802734
    6. '       ' → logprob: -16.256832122802734
    7. ' ' → logprob: -17.756832122802734
    8. 'If' → logprob: -17.756832122802734
    9. '	if' → logprob: -18.256832122802734
    10. '```' → logprob: -18.756832122802734

Token 407: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.008621904999017715
    2. ' neighbor' → logprob: -4.758621692657471
    3. 'ne' → logprob: -13.008622169494629
    4. 'not' → logprob: -13.633622169494629
    5. '   ' → logprob: -14.008622169494629
    6. '(ne' → logprob: -15.008622169494629
    7. '    ' → logprob: -15.008622169494629
    8. ' ' → logprob: -15.133622169494629
    9. 'nei' → logprob: -15.133622169494629
    10. 'cnt' → logprob: -15.258622169494629

Token 408: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08894480764865875
    2. 'not' → logprob: -2.463944911956787
    3. ')' → logprob: -12.713944435119629
    4. ' no' → logprob: -14.338944435119629
    5. '	not' → logprob: -14.338944435119629
    6. 'n' → logprob: -15.713944435119629
    7. 'no' → logprob: -15.838944435119629
    8. 'and' → logprob: -16.088945388793945
    9. '   ' → logprob: -16.213945388793945
    10. ' ' → logprob: -16.338945388793945

Token 409: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2650323212146759
    2. 'in' → logprob: -1.6400322914123535
    3. 'checked' → logprob: -3.6400322914123535
    4. ' checked' → logprob: -4.3900322914123535
    5. '   ' → logprob: -9.515032768249512
    6. '_checked' → logprob: -9.765032768249512
    7. ' ' → logprob: -10.515032768249512
    8. 'visited' → logprob: -11.640032768249512
    9. '.checked' → logprob: -11.640032768249512
    10. '  ' → logprob: -13.265032768249512

Token 410: ' checked' (ID: 15579)
  Prédit: 'checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checked' → logprob: -0.008615042082965374
    2. ' checked' → logprob: -4.758615016937256
    3. '_checked' → logprob: -16.008615493774414
    4. 'Checked' → logprob: -16.508615493774414
    5. '.checked' → logprob: -16.508615493774414
    6. 'check' → logprob: -16.633615493774414
    7. 'visited' → logprob: -16.883615493774414
    8. '   ' → logprob: -18.258615493774414
    9. ' ' → logprob: -18.383615493774414
    10. 'checking' → logprob: -19.383615493774414

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13837048411369324
    2. ':
' → logprob: -2.1383705139160156
    3. ' and' → logprob: -4.513370513916016
    4. 'and' → logprob: -9.138370513916016
    5. '):
' → logprob: -9.263370513916016
    6. '           ' → logprob: -9.638370513916016
    7. ' :' → logprob: -10.013370513916016
    8. '):' → logprob: -10.513370513916016
    9. '               ' → logprob: -10.763370513916016
    10. ' :
' → logprob: -10.763370513916016

Token 412: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5965388417243958
    2. 'cnt' → logprob: -0.8465388417243958
    3. ' cnt' → logprob: -4.22153902053833
    4. '           ' → logprob: -5.72153902053833
    5. 'stack' → logprob: -6.84653902053833
    6. '   ' → logprob: -7.34653902053833
    7. '       ' → logprob: -7.84653902053833
    8. '	cnt' → logprob: -9.096538543701172
    9. ' stack' → logprob: -10.096538543701172
    10. 'count' → logprob: -10.221538543701172

Token 413: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.039503272622823715
    2. '               ' → logprob: -3.289503335952759
    3. ' cnt' → logprob: -6.91450309753418
    4. '           ' → logprob: -8.16450309753418
    5. '	cnt' → logprob: -9.78950309753418
    6. '   ' → logprob: -10.03950309753418
    7. '       ' → logprob: -11.53950309753418
    8. 'count' → logprob: -11.53950309753418
    9. 'stack' → logprob: -11.66450309753418
    10. '                
' → logprob: -11.78950309753418

Token 414: ' Si' (ID: 7832)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004238904919475317
    2. '           ' → logprob: -6.504239082336426
    3. ' cnt' → logprob: -6.504239082336426
    4. '               ' → logprob: -7.254239082336426
    5. 'stack' → logprob: -7.879239082336426
    6. '   ' → logprob: -9.754239082336426
    7. '	cnt' → logprob: -10.879239082336426
    8. 'if' → logprob: -11.129239082336426
    9. '       ' → logprob: -11.629239082336426
    10. 'counter' → logprob: -12.004239082336426

Token 415: ' le' (ID: 505)
  Prédit: ' neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbor' → logprob: -0.43172481656074524
    2. 'neighbor' → logprob: -1.0567247867584229
    3. ' not' → logprob: -6.431725025177002
    4. 'cnt' → logprob: -7.681725025177002
    5. ' voisin' → logprob: -8.181724548339844
    6. ' cnt' → logprob: -8.681724548339844
    7. 'not' → logprob: -8.806724548339844
    8. ' ' → logprob: -10.056724548339844
    9. ' the' → logprob: -10.056724548339844
    10. '_neighbor' → logprob: -10.306724548339844

Token 416: ' voisin' (ID: 145411)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03447560966014862
    2. ' neighbor' → logprob: -3.534475564956665
    3. ' voisin' → logprob: -6.534475803375244
    4. 'cnt' → logprob: -6.784475803375244
    5. 'not' → logprob: -7.784475803375244
    6. 'node' → logprob: -7.784475803375244
    7. 'parent' → logprob: -8.159475326538086
    8. 'counter' → logprob: -8.784475326538086
    9. ' not' → logprob: -9.409475326538086
    10. '
' → logprob: -9.534475326538086

Token 417: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02187657169997692
    2. ' in' → logprob: -4.271876335144043
    3. ' is' → logprob: -5.521876335144043
    4. 'not' → logprob: -5.896876335144043
    5. ',' → logprob: -8.396876335144043
    6. 'in' → logprob: -8.771876335144043
    7. '   ' → logprob: -9.146876335144043
    8. ' has' → logprob: -9.146876335144043
    9. ':' → logprob: -9.521876335144043
    10. ' ' → logprob: -10.146876335144043

Token 418: ''a' (ID: 10443)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.03183915466070175
    2. ' not' → logprob: -3.53183913230896
    3. 'not' → logprob: -7.406839370727539
    4. ' pas' → logprob: -7.406839370727539
    5. 'o' → logprob: -7.531839370727539
    6. 'e' → logprob: -9.406839370727539
    7. ' in' → logprob: -9.531839370727539
    8. 'pas' → logprob: -10.156839370727539
    9. ' ot' → logprob: -10.656839370727539
    10. 'on' → logprob: -10.781839370727539

Token 419: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.03400123119354248
    2. ' pas' → logprob: -3.409001350402832
    3. 't' → logprob: -8.909001350402832
    4. 'not' → logprob: -9.034001350402832
    5. '_pas' → logprob: -10.034001350402832
    6. 'été' → logprob: -10.659001350402832
    7. '
' → logprob: -11.909001350402832
    8. '```' → logprob: -12.034001350402832
    9. '   ' → logprob: -12.409001350402832
    10. 'Pas' → logprob: -12.784001350402832

Token 420: ' encore' (ID: 14043)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.17465338110923767
    2. ' été' → logprob: -2.5496532917022705
    3. 'enc' → logprob: -3.0496532917022705
    4. ' encore' → logprob: -3.5496532917022705
    5. 'ét' → logprob: -6.29965353012085
    6. 'être' → logprob: -7.17465353012085
    7. 'been' → logprob: -7.17465353012085
    8. 'êt' → logprob: -7.54965353012085
    9. 'yet' → logprob: -8.174653053283691
    10. ' been' → logprob: -8.174653053283691

Token 421: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.011766402050852776
    2. ' été' → logprob: -4.51176643371582
    3. 'être' → logprob: -8.51176643371582
    4. 'ét' → logprob: -8.76176643371582
    5. 'êt' → logprob: -8.88676643371582
    6. 'é' → logprob: -10.01176643371582
    7. 'ê' → logprob: -10.26176643371582
    8. 'been' → logprob: -10.51176643371582
    9. 'éta' → logprob: -10.63676643371582
    10. 'visited' → logprob: -11.13676643371582

Token 422: ' traité' (ID: 160836)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.035726502537727356
    2. 'visited' → logprob: -3.535726547241211
    3. 'visit' → logprob: -5.285726547241211
    4. 'checked' → logprob: -7.535726547241211
    5. ' visited' → logprob: -8.785726547241211
    6. 'trait' → logprob: -9.035726547241211
    7. 'vist' → logprob: -10.410726547241211
    8. ' vis' → logprob: -10.910726547241211
    9. 'check' → logprob: -11.285726547241211
    10. 'vu' → logprob: -12.035726547241211

Token 423: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.893629789352417
    2. '               ' → logprob: -1.018629789352417
    3. ':
' → logprob: -1.518629789352417
    4. ',' → logprob: -5.268630027770996
    5. ' and' → logprob: -5.893630027770996
    6. '):
' → logprob: -6.518630027770996
    7. '           ' → logprob: -7.768630027770996
    8. '):' → logprob: -8.643630027770996
    9. ')' → logprob: -9.143630027770996
    10. ',
' → logprob: -9.143630027770996

Token 424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03559397533535957
    2. 'cnt' → logprob: -3.5355939865112305
    3. ' cnt' → logprob: -5.2855939865112305
    4. '           ' → logprob: -7.9105939865112305
    5. '	cnt' → logprob: -9.66059398651123
    6. '       ' → logprob: -9.78559398651123
    7. '   ' → logprob: -9.78559398651123
    8. '                
' → logprob: -10.16059398651123
    9. '                   ' → logprob: -10.66059398651123
    10. '	           ' → logprob: -10.91059398651123

Token 425: ' stack' (ID: 10825)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0009333750349469483
    2. '               ' → logprob: -7.2509331703186035
    3. ' cnt' → logprob: -9.125933647155762
    4. 'stack' (adapté à ' stack') → logprob: -10.000933647155762
    5. '                   ' → logprob: -10.375933647155762
    6. '   ' → logprob: -10.625933647155762
    7. '	cnt' → logprob: -12.000933647155762
    8. '           ' → logprob: -13.125933647155762
    9. 'count' → logprob: -14.000933647155762
    10. ' ' → logprob: -14.250933647155762

Token 426: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.704065213445574e-05
    2. '.' → logprob: -10.000046730041504
    3. '.extend' → logprob: -14.000046730041504
    4. '.app' → logprob: -15.125046730041504
    5. 'append' → logprob: -15.250046730041504
    6. '.push' → logprob: -16.00004768371582
    7. ' .' → logprob: -16.00004768371582
    8. '.add' → logprob: -19.12504768371582
    9. '   ' → logprob: -19.25004768371582
    10. '.ap' → logprob: -19.37504768371582

Token 427: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -1.9623810658231378e-05
    2. 'neighbor' → logprob: -11.125020027160645
    3. '(' → logprob: -12.875020027160645
    4. 'ne' → logprob: -13.375020027160645
    5. '((' → logprob: -15.125020027160645
    6. '(node' → logprob: -15.125020027160645
    7. '(
' → logprob: -15.625020027160645
    8. ' neighbor' → logprob: -18.250019073486328
    9. '```' → logprob: -19.000019073486328
    10. '(friend' → logprob: -19.000019073486328

Token 428: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.00037895687273703516
    2. 'gh' → logprob: -8.375378608703613
    3. 'neighbor' → logprob: -8.875378608703613
    4. ' ' → logprob: -13.000378608703613
    5. ' neighbor' → logprob: -13.125378608703613
    6. 'g' → logprob: -13.750378608703613
    7. 'r' → logprob: -14.375378608703613
    8. 'igh' → logprob: -14.500378608703613
    9. 'ighbour' → logprob: -15.000378608703613
    10. 's' → logprob: -15.000378608703613

Token 429: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21349848806858063
    2. ')' → logprob: -1.9634984731674194
    3. '               ' → logprob: -2.963498592376709
    4. ')
' → logprob: -8.71349811553955
    5. ' )
' → logprob: -10.58849811553955
    6. '
' → logprob: -11.08849811553955
    7. '                ' → logprob: -11.46349811553955
    8. '                   ' → logprob: -11.46349811553955
    9. '           ' → logprob: -12.33849811553955
    10. '              ' → logprob: -13.08849811553955

Token 430: '    ' (ID: 257)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8193366486229934e-05
    2. '           ' → logprob: -12.500018119812012
    3. 'cnt' → logprob: -13.125018119812012
    4. '              ' → logprob: -13.375018119812012
    5. '
' → logprob: -13.375018119812012
    6. '                ' → logprob: -13.625018119812012
    7. '                
' → logprob: -13.625018119812012
    8. ' cnt' → logprob: -13.750018119812012
    9. '       ' → logprob: -13.875018119812012
    10. '                   ' → logprob: -13.875018119812012

Token 431: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001764551387168467
    2. 'cnt' → logprob: -6.37676477432251
    3. ' cnt' → logprob: -10.251764297485352
    4. '
' → logprob: -12.001764297485352
    5. '           ' → logprob: -12.376764297485352
    6. ')' → logprob: -12.751764297485352
    7. '                   ' → logprob: -13.126764297485352
    8. '                
' → logprob: -13.376764297485352
    9. '              ' → logprob: -13.501764297485352
    10. '                ' → logprob: -13.626764297485352

Token 432: ' Aj' (ID: 28294)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.35557112097740173
    2. '               ' → logprob: -1.2305711507797241
    3. ' cnt' → logprob: -5.105571269989014
    4. '           ' → logprob: -7.230571269989014
    5. '   ' → logprob: -9.605570793151855
    6. '              ' → logprob: -9.855570793151855
    7. '                   ' → logprob: -10.605570793151855
    8. '       ' → logprob: -10.730570793151855
    9. '	cnt' → logprob: -10.855570793151855
    10. '
' → logprob: -10.855570793151855

Token 433: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.2252301126718521
    2. 'outer' → logprob: -1.725230097770691
    3. 'out' → logprob: -3.9752302169799805
    4. 'outez' → logprob: -5.3502302169799805
    5. 'outes' → logprob: -12.22523021697998
    6. '```' → logprob: -13.97523021697998
    7. 'uster' → logprob: -14.22523021697998
    8. '   ' → logprob: -14.22523021697998
    9. 'ust' → logprob: -14.47523021697998
    10. '       ' → logprob: -14.47523021697998

Token 434: ' le' (ID: 505)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.03214072436094284
    2. '(ne' → logprob: -4.032140731811523
    3. ' neighbor' → logprob: -4.282140731811523
    4. 'ne' → logprob: -9.532140731811523
    5. '(' → logprob: -12.282140731811523
    6. '_neighbor' → logprob: -13.782140731811523
    7. 'neighbors' → logprob: -14.532140731811523
    8. ' voisin' → logprob: -14.657140731811523
    9. 'nei' → logprob: -15.282140731811523
    10. '(
' → logprob: -15.407140731811523

Token 435: ' voisin' (ID: 145411)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.05073025822639465
    2. ' neighbor' → logprob: -3.1757302284240723
    3. ' voisin' → logprob: -5.050730228424072
    4. 'vo' → logprob: -6.675730228424072
    5. 'ne' → logprob: -11.55073070526123
    6. ' neighbour' → logprob: -11.67573070526123
    7. 'node' → logprob: -12.67573070526123
    8. ' vo' → logprob: -12.80073070526123
    9. ' ' → logprob: -12.80073070526123
    10. '_neighbor' → logprob: -13.67573070526123

Token 436: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005628820043057203
    2. '                   ' → logprob: -5.75562858581543
    3. '                ' → logprob: -6.50562858581543
    4. ' to' → logprob: -8.13062858581543
    5. 'to' → logprob: -8.63062858581543
    6. '           ' → logprob: -9.25562858581543
    7. '                
' → logprob: -9.50562858581543
    8. ')' → logprob: -9.63062858581543
    9. '
' → logprob: -10.25562858581543
    10. ' for' → logprob: -10.38062858581543

Token 437: ' la' (ID: 557)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07169626653194427
    2. ' stack' → logprob: -2.6966962814331055
    3. ' la' → logprob: -7.0716962814331055
    4. 'la' → logprob: -7.6966962814331055
    5. 'the' → logprob: -8.696696281433105
    6. ' the' → logprob: -9.321696281433105
    7. 'l' → logprob: -9.696696281433105
    8. ' ' → logprob: -10.821696281433105
    9. 'checked' → logprob: -10.946696281433105
    10. ' l' → logprob: -10.946696281433105

Token 438: ' pile' (ID: 39732)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.02979319356381893
    2. 'pile' → logprob: -3.5297932624816895
    3. ' stack' → logprob: -10.154792785644531
    4. 'deque' → logprob: -13.279792785644531
    5. ' pile' → logprob: -14.529792785644531
    6. 'queue' → logprob: -15.154792785644531
    7. '	stack' → logprob: -15.154792785644531
    8. ' ' → logprob: -15.154792785644531
    9. 'pro' → logprob: -15.279792785644531
    10. 'p' → logprob: -15.529792785644531

Token 439: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.5358694731257856e-05
    2. '           ' → logprob: -11.125035285949707
    3. '       ' → logprob: -11.625035285949707
    4. ',' → logprob: -13.000035285949707
    5. '```' → logprob: -13.250035285949707
    6. '
' → logprob: -13.625035285949707
    7. '                   ' → logprob: -13.750035285949707
    8. '   ' → logprob: -13.875035285949707
    9. '              ' → logprob: -13.875035285949707
    10. ')' → logprob: -14.125035285949707

Token 440: ' prochain' (ID: 52413)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.016143105924129486
    2. 'tr' → logprob: -5.016143321990967
    3. ' traiter' → logprob: -5.391143321990967
    4. ' visiter' → logprob: -6.141143321990967
    5. 'vis' → logprob: -7.141143321990967
    6. 'expl' → logprob: -7.266143321990967
    7. 'tra' → logprob: -8.016142845153809
    8. 'pro' → logprob: -8.266142845153809
    9. 'le' → logprob: -9.266142845153809
    10. ' explorer' → logprob: -9.266142845153809

Token 441: ' traitement' (ID: 42434)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.5026870369911194
    2. ' tour' → logprob: -1.3776869773864746
    3. ' visit' → logprob: -3.1276869773864746
    4. ')' → logprob: -3.8776869773864746
    5. ' traitement' → logprob: -3.8776869773864746
    6. 'e' → logprob: -3.8776869773864746
    7. ' visite' → logprob: -5.002686977386475
    8. 's' → logprob: -5.252686977386475
    9. ' ' → logprob: -5.502686977386475
    10. ' exploration' → logprob: -5.877686977386475

Token 442: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.872261317563243e-05
    2. '           ' → logprob: -10.125059127807617
    3. '       ' → logprob: -12.000059127807617
    4. ',' → logprob: -12.250059127807617
    5. ')' → logprob: -13.375059127807617
    6. '```' → logprob: -13.500059127807617
    7. '              ' → logprob: -14.125059127807617
    8. '
' → logprob: -14.375059127807617
    9. '                   ' → logprob: -14.500059127807617
    10. '   ' → logprob: -14.500059127807617

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014776040916331112
    2. 'cnt' → logprob: -9.625147819519043
    3. '           ' → logprob: -10.625147819519043
    4. ' cnt' → logprob: -11.000147819519043
    5. '```' → logprob: -11.125147819519043
    6. '                   ' → logprob: -11.375147819519043
    7. '              ' → logprob: -12.875147819519043
    8. '       ' → logprob: -13.125147819519043
    9. '                
' → logprob: -13.375147819519043
    10. ' ' → logprob: -13.500147819519043

Token 444: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0004947714623995125
    2. '               ' → logprob: -7.875494956970215
    3. ' cnt' → logprob: -9.125494956970215
    4. '           ' → logprob: -13.375494956970215
    5. '	cnt' → logprob: -13.375494956970215
    6. '                   ' → logprob: -13.750494956970215
    7. '   ' → logprob: -14.625494956970215
    8. '                
' → logprob: -15.250494956970215
    9. 'ct' → logprob: -15.875494956970215
    10. ' ' → logprob: -16.0004940032959

Token 445: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.500000953674316
    3. '[node' → logprob: -15.875000953674316
    4. 'neighbor' → logprob: -16.125
    5. '```' → logprob: -18.25
    6. '[
' → logprob: -18.875
    7. '[parent' → logprob: -19.0
    8. '[next' → logprob: -19.0
    9. ' ' → logprob: -19.25
    10. '[current' → logprob: -19.375

Token 446: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -2.3438327843905427e-05
    2. ' neighbor' → logprob: -11.25002384185791
    3. '[' → logprob: -11.87502384185791
    4. ']' → logprob: -13.62502384185791
    5. 'ne' → logprob: -14.00002384185791
    6. '_neighbor' → logprob: -15.00002384185791
    7. '][' → logprob: -15.12502384185791
    8. 'ighbor' → logprob: -15.62502384185791
    9. '
' → logprob: -15.75002384185791
    10. '   ' → logprob: -16.000022888183594

Token 447: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011077879928052425
    2. ']+=' → logprob: -4.511077880859375
    3. ' ]' → logprob: -10.761077880859375
    4. '+=' → logprob: -12.261077880859375
    5. ' +=' → logprob: -13.011077880859375
    6. ']+' → logprob: -14.386077880859375
    7. '[' → logprob: -14.511077880859375
    8. ']=' → logprob: -15.136077880859375
    9. ')' → logprob: -16.011077880859375
    10. '   ' → logprob: -16.136077880859375

Token 448: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760818719863892
    2. ' +=' → logprob: -0.8260818719863892
    3. '=' → logprob: -9.451082229614258
    4. ']+=' → logprob: -9.951082229614258
    5. '+' → logprob: -12.076082229614258
    6. '	' → logprob: -12.701082229614258
    7. ' =' → logprob: -12.826082229614258
    8. '   ' → logprob: -13.076082229614258
    9. '+=(' → logprob: -14.326082229614258
    10. '[' → logprob: -14.701082229614258

Token 449: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -5.967624019831419e-05
    2. ' cnt' → logprob: -9.750060081481934
    3. '	cnt' → logprob: -13.875060081481934
    4. 'ct' → logprob: -15.750060081481934
    5. '[cnt' → logprob: -16.000059127807617
    6. '(cnt' → logprob: -16.500059127807617
    7. '   ' → logprob: -18.125059127807617
    8. 'c' → logprob: -18.625059127807617
    9. '_cnt' → logprob: -19.250059127807617
    10. 'count' → logprob: -19.500059127807617

Token 450: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.00015860427811276168
    2. 'node' → logprob: -8.750158309936523
    3. ' node' → logprob: -16.000158309936523
    4. '[' → logprob: -19.500158309936523
    5. '	node' → logprob: -19.875158309936523
    6. '(node' → logprob: -20.000158309936523
    7. ' [' → logprob: -20.750158309936523
    8. '[
' → logprob: -21.875158309936523
    9. ',node' → logprob: -22.000158309936523
    10. '   ' → logprob: -22.250158309936523

Token 451: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' Pro' (ID: 1258)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.12267741560935974
    2. ' cnt' → logprob: -2.7476773262023926
    3. '1' → logprob: -3.4976773262023926
    4. ' ' → logprob: -4.372677326202393
    5. '<|end|>' → logprob: -5.997677326202393
    6. '0' → logprob: -6.372677326202393
    7. '```' → logprob: -6.997677326202393
    8. ')' → logprob: -7.247677326202393
    9. '=' → logprob: -7.872677326202393
    10. 'count' → logprob: -7.997677326202393

Token 454: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.35291069746017456
    2. 'pag' → logprob: -1.2279107570648193
    3. 'gate' → logprob: -5.72791051864624
    4. 'p' → logprob: -7.22791051864624
    5. 'pa' → logprob: -9.602910995483398
    6. 'gage' → logprob: -9.852910995483398
    7. 'agate' → logprob: -10.102910995483398
    8. 'g' → logprob: -10.352910995483398
    9. 'pat' → logprob: -10.477910995483398
    10. 'pager' → logprob: -10.602910995483398

Token 455: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07776414602994919
    2. '(' → logprob: -3.5777640342712402
    3. ' )' → logprob: -4.20276403427124
    4. ')' → logprob: -4.32776403427124
    5. '<|end|>' → logprob: -4.70276403427124
    6. ' (' → logprob: -5.57776403427124
    7. 'cnt' → logprob: -6.57776403427124
    8. '(cnt' → logprob: -6.82776403427124
    9. ' cnt' → logprob: -7.07776403427124
    10. '32' → logprob: -8.077764511108398

Token 456: ' somme' (ID: 64484)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.022509455680847168
    2. ' cnt' → logprob: -4.022509574890137
    3. 'count' → logprob: -7.022509574890137
    4. 'counts' → logprob: -7.022509574890137
    5. 'c' → logprob: -7.522509574890137
    6. 'node' → logprob: -7.897509574890137
    7. 'neighbor' → logprob: -8.272509574890137
    8. '[node' → logprob: -8.647509574890137
    9. ' node' → logprob: -8.897509574890137
    10. ' counts' → logprob: -9.022509574890137

Token 457: ' cumulative' (ID: 75628)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' voisin' (ID: 145411)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.05996784567832947
    2. 'vo' → logprob: -3.4349677562713623
    3. ' voisin' → logprob: -3.6849677562713623
    4. ' neighbor' → logprob: -7.059967994689941
    5. ' vo' → logprob: -11.184967994689941
    6. 'next' → logprob: -13.184967994689941
    7. 'ne' → logprob: -14.184967994689941
    8. 'c' → logprob: -14.684967994689941
    9. '   ' → logprob: -14.809967994689941
    10. ' ' → logprob: -15.059967994689941

Token 460: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08486422151327133
    2. '   ' → logprob: -2.5848641395568848
    3. ' return' → logprob: -5.209864139556885
    4. '<|end|>' → logprob: -7.834864139556885
    5. '	return' → logprob: -10.334864616394043
    6. ' ' → logprob: -10.959864616394043
    7. ')return' → logprob: -11.334864616394043
    8. '```' → logprob: -11.584864616394043
    9. ')' → logprob: -11.709864616394043
    10. '  ' → logprob: -12.334864616394043

Token 463: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.005234832875430584
    2. ' cnt' → logprob: -5.255234718322754
    3. '[cnt' → logprob: -14.755234718322754
    4. '	cnt' → logprob: -14.880234718322754
    5. '(cnt' → logprob: -15.380234718322754
    6. 'cn' → logprob: -18.38023567199707
    7. 'c' → logprob: -18.75523567199707
    8. 'ct' → logprob: -18.88023567199707
    9. '   ' → logprob: -19.25523567199707
    10. ' ' → logprob: -19.75523567199707

Token 464: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21639911830425262
    2. '<|end|>' → logprob: -1.841399073600769
    3. 'def' → logprob: -4.216399192810059
    4. ')' → logprob: -4.841399192810059
    5. '<|end|>' → logprob: -5.716399192810059
    6. '```' → logprob: -5.841399192810059
    7. '[' → logprob: -5.841399192810059
    8. '
' → logprob: -6.216399192810059
    9. ',' → logprob: -7.591399192810059
    10. 'n' → logprob: -7.966399192810059

Token 466: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.023495512083172798
    2. ' solve' → logprob: -5.148495674133301
    3. ' sum' → logprob: -5.773495674133301
    4. ' dfs' → logprob: -6.023495674133301
    5. ' accumulate' → logprob: -6.023495674133301
    6. ' bfs' → logprob: -6.273495674133301
    7. ' compute' → logprob: -6.398495674133301
    8. 'main' → logprob: -6.523495674133301
    9. ' apply' → logprob: -6.523495674133301
    10. ' process' → logprob: -7.523495674133301

Token 467: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.08944896562025e-05
    2. '():
' → logprob: -10.250081062316895
    3. '(' → logprob: -10.875081062316895
    4. '()' → logprob: -11.500081062316895
    5. ' ():' → logprob: -11.500081062316895
    6. '(n' → logprob: -12.250081062316895
    7. '():

' → logprob: -14.625081062316895
    8. '():
' → logprob: -14.875081062316895
    9. ':' → logprob: -15.750081062316895
    10. '_' → logprob: -15.750081062316895

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12755925953388214
    2. ' n' → logprob: -2.252559185028076
    3. 'n' → logprob: -4.252559185028076
    4. ' pass' → logprob: -8.752559661865234
    5. '```' → logprob: -9.377559661865234
    6. '(n' → logprob: -9.627559661865234
    7. '	n' → logprob: -10.127559661865234
    8. '<|end|>' → logprob: -10.752559661865234
    9. '    
' → logprob: -12.252559661865234
    10. '#' → logprob: -12.627559661865234

Token 469: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10799135267734528
    2. ' n' → logprob: -3.1079914569854736
    3. '   ' → logprob: -3.3579914569854736
    4. 'import' → logprob: -3.8579914569854736
    5. ' import' → logprob: -6.3579912185668945
    6. '#' → logprob: -11.607991218566895
    7. ' ' → logprob: -12.357991218566895
    8. '	n' → logprob: -12.357991218566895
    9. '```' → logprob: -12.607991218566895
    10. 't' → logprob: -12.857991218566895

Token 470: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21629254519939423
    2. ' n' → logprob: -1.7162925004959106
    3. '   ' → logprob: -4.216292381286621
    4. ' #' → logprob: -12.716292381286621
    5. '
' → logprob: -13.091292381286621
    6. '#' → logprob: -13.091292381286621
    7. 'import' → logprob: -13.216292381286621
    8. '```' → logprob: -13.216292381286621
    9. '	n' → logprob: -13.466292381286621
    10. '    ' → logprob: -13.591292381286621

Token 471: ' Fonction' (ID: 189149)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13879607617855072
    2. 'n' → logprob: -2.138796091079712
    3. '   ' → logprob: -4.763795852661133
    4. '#' → logprob: -6.888795852661133
    5. ' #' → logprob: -7.263795852661133
    6. ' lines' → logprob: -7.763795852661133
    7. ' input' → logprob: -7.763795852661133
    8. 'input' → logprob: -8.763795852661133
    9. ' import' → logprob: -9.013795852661133
    10. ' code' → logprob: -9.513795852661133

Token 472: ' principale' (ID: 68926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20266661047935486
    2. ' principale' → logprob: -1.8276666402816772
    3. ' principal' → logprob: -4.327666759490967
    4. '   ' → logprob: -5.952666759490967
    5. 'main' → logprob: -6.077666759490967
    6. 'def' → logprob: -6.327666759490967
    7. ' de' → logprob: -6.327666759490967
    8. ' ' → logprob: -8.702666282653809
    9. ' principales' → logprob: -9.202666282653809
    10. ' d' → logprob: -9.202666282653809

Token 473: ' pour' (ID: 1930)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7816863656044006
    2. '():
' → logprob: -0.9066863656044006
    3. '   ' → logprob: -2.281686305999756
    4. 'def' → logprob: -3.531686305999756
    5. ':' → logprob: -5.406686305999756
    6. '()' → logprob: -6.281686305999756
    7. ':
' → logprob: -7.906686305999756
    8. '
' → logprob: -9.531686782836914
    9. '():
' → logprob: -9.656686782836914
    10. '```' → logprob: -10.156686782836914

Token 474: ' gérer' (ID: 86786)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.5254366397857666
    2. ' traiter' → logprob: -1.9004366397857666
    3. ' l' → logprob: -2.9004366397857666
    4. ' gérer' → logprob: -3.1504366397857666
    5. 'l' → logprob: -3.6504366397857666
    6. ' recevoir' → logprob: -4.0254364013671875
    7. ' tester' → logprob: -4.0254364013671875
    8. ' le' → logprob: -4.5254364013671875
    9. ' la' → logprob: -4.5254364013671875
    10. ' read' → logprob: -4.7754364013671875

Token 475: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.28774720430374146
    2. ' les' → logprob: -1.9127471446990967
    3. ' la' → logprob: -3.1627471446990967
    4. 'l' → logprob: -3.7877471446990967
    5. '   ' → logprob: -4.287747383117676
    6. ' le' → logprob: -4.412747383117676
    7. ' input' → logprob: -5.287747383117676
    8. '_' → logprob: -6.037747383117676
    9. 'input' → logprob: -6.912747383117676
    10. ' ' → logprob: -7.412747383117676

Token 476: ' lecture' (ID: 31993)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7519970536231995
    2. 'n' → logprob: -1.8769969940185547
    3. 'entrée' → logprob: -2.0019969940185547
    4. 'import' → logprob: -2.2519969940185547
    5. ' if' → logprob: -2.5019969940185547
    6. '   ' → logprob: -4.251996994018555
    7. 'entr' → logprob: -5.001996994018555
    8. ' n' → logprob: -5.001996994018555
    9. 't' → logprob: -5.251996994018555
    10. ' entrée' → logprob: -5.251996994018555

Token 477: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3827560544013977
    2. ' des' → logprob: -1.382755994796753
    3. '()' → logprob: -3.257755994796753
    4. ',' → logprob: -4.257756233215332
    5. 'des' → logprob: -4.882756233215332
    6. 'import' → logprob: -6.132756233215332
    7. ' ' → logprob: -7.007756233215332
    8. ' et' → logprob: -7.007756233215332
    9. ' de' → logprob: -7.257756233215332
    10. '    ' → logprob: -7.632756233215332

Token 478: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5392158031463623
    2. 'e' → logprob: -1.0392158031463623
    3. 'es' → logprob: -3.0392158031463623
    4. 'entrée' → logprob: -5.289216041564941
    5. ' input' → logprob: -6.164216041564941
    6. 'input' → logprob: -6.289216041564941
    7. ''' → logprob: -6.539216041564941
    8. ''ent' → logprob: -6.914216041564941
    9. '   ' → logprob: -7.039216041564941
    10. ''e' → logprob: -7.789216041564941

Token 479: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1316649466753006
    2. ',' → logprob: -2.131664991378784
    3. ' et' → logprob: -5.631664752960205
    4. '()' → logprob: -8.006665229797363
    5. '```' → logprob: -9.381665229797363
    6. ' des' → logprob: -9.381665229797363
    7. 'import' → logprob: -9.506665229797363
    8. ' ,' → logprob: -9.756665229797363
    9. '    
' → logprob: -9.881665229797363
    10. ' and' → logprob: -9.881665229797363

Token 480: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0991202592849731
    2. '   ' → logprob: -1.4741202592849731
    3. ' le' → logprob: -1.4741202592849731
    4. ' la' → logprob: -1.8491202592849731
    5. 'l' → logprob: -3.4741201400756836
    6. ' traitement' → logprob: -4.599120140075684
    7. 'le' → logprob: -5.599120140075684
    8. 'la' → logprob: -6.474120140075684
    9. ' traiter' → logprob: -6.849120140075684
    10. '    ' → logprob: -7.099120140075684

Token 481: ' appels' (ID: 133870)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.479941487312317
    2. ' traitements' → logprob: -1.979941487312317
    3. 'calcul' → logprob: -2.2299413681030273
    4. 'n' → logprob: -2.2299413681030273
    5. 'aff' → logprob: -2.6049413681030273
    6. ' sorties' → logprob: -2.9799413681030273
    7. 'print' → logprob: -3.1049413681030273
    8. 'trait' → logprob: -3.3549413681030273
    9. ' appels' → logprob: -3.8549413681030273
    10. 'instructions' → logprob: -4.104941368103027

Token 482: ' aux' (ID: 5850)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02076422981917858
    2. ' aux' → logprob: -5.020764350891113
    3. ' de' → logprob: -5.520764350891113
    4. 'aux' → logprob: -5.645764350891113
    5. 'de' → logprob: -6.020764350891113
    6. ' à' → logprob: -6.145764350891113
    7. ',' → logprob: -7.895764350891113
    8. '```' → logprob: -8.145764350891113
    9. ' d' → logprob: -8.520764350891113
    10. ' des' → logprob: -8.645764350891113

Token 483: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.179508239030838
    2. 'fon' → logprob: -2.0545082092285156
    3. 'functions' → logprob: -4.054508209228516
    4. 'fonction' → logprob: -4.179508209228516
    5. ' functions' → logprob: -6.679508209228516
    6. 'calcul' → logprob: -7.804508209228516
    7. 'f' → logprob: -7.804508209228516
    8. 'def' → logprob: -7.929508209228516
    9. '```' → logprob: -8.304508209228516
    10. ' différentes' → logprob: -8.929508209228516

Token 484: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40549278259277344
    2. ',' → logprob: -1.1554927825927734
    3. 'et' → logprob: -4.655492782592773
    4. ' et' → logprob: -4.905492782592773
    5. 'de' → logprob: -7.030492782592773
    6. ' ,' → logprob: -9.030492782592773
    7. ' and' → logprob: -9.530492782592773
    8. ' ' → logprob: -9.655492782592773
    9. 'import' → logprob: -9.655492782592773
    10. ' de' → logprob: -10.030492782592773

Token 485: ' construction' (ID: 9770)
  Prédit: 'construction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'construction' → logprob: -0.3196520507335663
    2. 'fonction' → logprob: -1.9446520805358887
    3. 'lecture' → logprob: -3.1946520805358887
    4. 'trait' → logprob: -3.3196520805358887
    5. 'main' → logprob: -3.6946520805358887
    6. 'gestion' → logprob: -5.069652080535889
    7. ' traitement' → logprob: -5.069652080535889
    8. 'build' → logprob: -5.569652080535889
    9. ' construction' → logprob: -6.194652080535889
    10. 'calcul' → logprob: -6.694652080535889

Token 486: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3989957869052887
    2. ' et' → logprob: -1.6489957571029663
    3. ',' → logprob: -2.148995876312256
    4. 'et' → logprob: -4.398995876312256
    5. ' and' → logprob: -5.398995876312256
    6. ' ' → logprob: -6.773995876312256
    7. 'and' → logprob: -7.023995876312256
    8. ' ,' → logprob: -8.273995399475098
    9. 'de' → logprob: -8.648995399475098
    10. '    ' → logprob: -8.773995399475098

Token 487: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.0008548821206204593
    2. 'e' → logprob: -7.750854969024658
    3. 'ar' → logprob: -8.6258544921875
    4. ''' → logprob: -9.1258544921875
    5. ''un' → logprob: -9.6258544921875
    6. '’ar' → logprob: -10.1258544921875
    7. ' arbre' → logprob: -12.1258544921875
    8. '_ar' → logprob: -12.5008544921875
    9. ''entrée' → logprob: -12.6258544921875
    10. 'a' → logprob: -12.8758544921875

Token 488: 'bre' (ID: 9945)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9784306883811951
    2. 'bre' → logprob: -1.1034307479858398
    3. 'bres' → logprob: -1.3534307479858398
    4. 'gs' → logprob: -3.47843074798584
    5. 'gv' → logprob: -7.47843074798584
    6. 'bo' → logprob: -7.47843074798584
    7. 'b' → logprob: -7.72843074798584
    8. 'bor' → logprob: -8.35343074798584
    9. 't' → logprob: -8.72843074798584
    10. 'gue' → logprob: -8.72843074798584

Token 489: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13689544796943665
    2. ' et' → logprob: -2.6368954181671143
    3. '   ' → logprob: -3.2618954181671143
    4. 'et' → logprob: -4.136895656585693
    5. ' and' → logprob: -7.011895656585693
    6. 'and' → logprob: -7.136895656585693
    7. ' ' → logprob: -9.011895179748535
    8. ' ,' → logprob: -9.386895179748535
    9. '<|end|>' → logprob: -10.011895179748535
    10. '```' → logprob: -10.511895179748535

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2837372124195099
    2. ' la' → logprob: -2.2837371826171875
    3. ' et' → logprob: -2.4087371826171875
    4. ' l' → logprob: -3.9087371826171875
    5. 'et' → logprob: -4.2837371826171875
    6. '    ' → logprob: -4.9087371826171875
    7. ' and' → logprob: -5.1587371826171875
    8. '<|end|>' → logprob: -5.9087371826171875
    9. 'and' → logprob: -6.9087371826171875
    10. 'l' → logprob: -7.1587371826171875

Token 491: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.239044427871704
    2. ' et' → logprob: -1.364044427871704
    3. ' la' → logprob: -1.489044427871704
    4. 'et' → logprob: -1.614044427871704
    5. ' l' → logprob: -4.239044189453125
    6. 'l' → logprob: -5.239044189453125
    7. 'la' (adapté à ' la') → logprob: -5.614044189453125
    8. ' and' → logprob: -6.114044189453125
    9. '    ' → logprob: -6.864044189453125
    10. 'de' → logprob: -7.989044189453125

Token 492: ' propagation' (ID: 86772)
  Prédit: 'prop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prop' → logprob: -0.4462243616580963
    2. 'lecture' → logprob: -1.821224331855774
    3. ' propagation' → logprob: -2.1962244510650635
    4. 'gestion' → logprob: -2.6962244510650635
    5. ' lecture' → logprob: -5.071224212646484
    6. 'mise' → logprob: -5.196224212646484
    7. ' gestion' → logprob: -5.321224212646484
    8. ' mise' → logprob: -7.571224212646484
    9. 'prise' → logprob: -8.071224212646484
    10. 's' → logprob: -8.196224212646484

Token 493: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07034729421138763
    2. 'des' → logprob: -2.820347309112549
    3. '   ' → logprob: -4.945347309112549
    4. ',' → logprob: -7.320347309112549
    5. 'de' → logprob: -8.44534683227539
    6. ' de' → logprob: -9.07034683227539
    7. ' et' → logprob: -9.57034683227539
    8. '_des' → logprob: -9.69534683227539
    9. ' ' → logprob: -10.44534683227539
    10. 's' → logprob: -11.32034683227539

Token 494: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.14903247356414795
    2. 'com' → logprob: -2.5240325927734375
    3. ' valeurs' → logprob: -3.2740325927734375
    4. 'increments' → logprob: -5.3990325927734375
    5. 'counts' → logprob: -5.7740325927734375
    6. ' val' → logprob: -6.1490325927734375
    7. 'd' → logprob: -6.2740325927734375
    8. 'mod' → logprob: -6.3990325927734375
    9. 'comp' → logprob: -6.7740325927734375
    10. 'cnt' → logprob: -7.2740325927734375

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25873470306396484
    2. ' et' → logprob: -2.133734703063965
    3. ' cumul' → logprob: -3.383734703063965
    4. '   ' → logprob: -3.508734703063965
    5. ' des' → logprob: -3.883734703063965
    6. 'et' → logprob: -4.633734703063965
    7. 'c' → logprob: -5.633734703063965
    8. ' ,' → logprob: -5.883734703063965
    9. 'des' → logprob: -6.133734703063965
    10. ' cumulative' → logprob: -6.508734703063965

Token 496: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5814298987388611
    2. '   ' → logprob: -1.4564299583435059
    3. 'et' → logprob: -1.5814299583435059
    4. ' and' → logprob: -6.831429958343506
    5. ' la' → logprob: -7.331429958343506
    6. '    ' → logprob: -9.081429481506348
    7. ' ' → logprob: -9.331429481506348
    8. 'and' → logprob: -9.581429481506348
    9. ',' → logprob: -10.456429481506348
    10. ' l' → logprob: -10.581429481506348

Token 497: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.188370019197464
    2. ' la' → logprob: -1.8133699893951416
    3. ' ' → logprob: -6.063370227813721
    4. 'l' → logprob: -6.313370227813721
    5. '   ' → logprob: -6.438370227813721
    6. ' le' → logprob: -6.813370227813721
    7. ' leur' → logprob: -6.938370227813721
    8. ' ' → logprob: -7.938370227813721
    9. 'leur' → logprob: -8.938369750976562
    10. 'la' → logprob: -9.313369750976562

Token 498: ''aff' (ID: 53397)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5219162702560425
    2. 'ecture' → logprob: -1.6469162702560425
    3. ''aff' → logprob: -1.7719162702560425
    4. 'a' → logprob: -3.896916389465332
    5. ''é' → logprob: -4.646916389465332
    6. ''impression' → logprob: -5.021916389465332
    7. 'ancement' → logprob: -6.771916389465332
    8. '```' → logprob: -7.021916389465332
    9. 'ect' → logprob: -7.146916389465332
    10. ''entrée' → logprob: -7.646916389465332

Token 499: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.0005353979649953544
    2. 'iche' → logprob: -8.125535011291504
    3. 'icher' → logprob: -8.875535011291504
    4. 'ich' → logprob: -9.625535011291504
    5. '#' → logprob: -10.750535011291504
    6. 'ic' → logprob: -12.750535011291504
    7. '   ' → logprob: -12.750535011291504
    8. '```' → logprob: -12.875535011291504
    9. '_' → logprob: -14.250535011291504
    10. '``' → logprob: -14.375535011291504

Token 500: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09891431778669357
    2. '.' → logprob: -2.723914384841919
    3. '()' → logprob: -3.848914384841919
    4. '   ' → logprob: -6.09891414642334
    5. 'des' → logprob: -6.09891414642334
    6. ' de' → logprob: -6.72391414642334
    7. ' du' → logprob: -7.59891414642334
    8. '(' → logprob: -8.22391414642334
    9. ')' → logprob: -8.97391414642334
    10. '().' → logprob: -9.22391414642334

Token 501: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.24565188586711884
    2. 'result' → logprob: -1.6206518411636353
    3. ' résultat' → logprob: -4.120651721954346
    4. 'res' → logprob: -7.370651721954346
    5. ' result' → logprob: -7.370651721954346
    6. 'r' → logprob: -7.745651721954346
    7. ')' → logprob: -7.870651721954346
    8. ' résultats' → logprob: -7.870651721954346
    9. 'results' → logprob: -8.120652198791504
    10. '"' → logprob: -8.245652198791504

Token 502: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11764615029096603
    2. '():' → logprob: -2.8676462173461914
    3. '():
' → logprob: -3.4926462173461914
    4. ':' → logprob: -4.867646217346191
    5. '
' → logprob: -5.242646217346191
    6. '):' → logprob: -5.617646217346191
    7. '):
' → logprob: -5.867646217346191
    8. '```' → logprob: -6.492646217346191
    9. '()' → logprob: -6.867646217346191
    10. ':
' → logprob: -7.242646217346191

Token 503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011675556190311909
    2. '    
' → logprob: -5.0116753578186035
    3. '
' → logprob: -5.5116753578186035
    4. '```' → logprob: -7.3866753578186035
    5. 'n' → logprob: -9.511675834655762
    6. '  
' → logprob: -9.886675834655762
    7. '(n' → logprob: -10.011675834655762
    8. ':' → logprob: -10.761675834655762
    9. 'import' → logprob: -11.011675834655762
    10. '   
' → logprob: -11.386675834655762

Token 504: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007613879279233515
    2. '
' → logprob: -7.62576150894165
    3. 'import' → logprob: -9.000761032104492
    4. '    
' → logprob: -9.375761032104492
    5. '```' → logprob: -10.375761032104492
    6. 'n' → logprob: -10.500761032104492
    7. 'input' → logprob: -12.875761032104492
    8. '"""
' (adapté à ' """
') → logprob: -13.375761032104492
    9. '"""' → logprob: -14.125761032104492
    10. '\n' → logprob: -15.125761032104492

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028651393949985504
    2. 'n' → logprob: -6.127865314483643
    3. 'import' → logprob: -7.877865314483643
    4. '```' → logprob: -8.502864837646484
    5. ' n' → logprob: -9.627864837646484
    6. ' import' → logprob: -11.377864837646484
    7. '	n' → logprob: -11.627864837646484
    8. '   ' → logprob: -11.752864837646484
    9. '	import' → logprob: -14.502864837646484
    10. '    
' → logprob: -14.502864837646484

Token 506: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.27032867074012756
    2. ' n' → logprob: -1.5203286409378052
    3. '   ' → logprob: -4.270328521728516
    4. 'import' → logprob: -5.645328521728516
    5. ' import' → logprob: -7.270328521728516
    6. '```' → logprob: -11.145328521728516
    7. 't' → logprob: -12.645328521728516
    8. 'input' → logprob: -13.145328521728516
    9. '	n' → logprob: -13.395328521728516
    10. ' input' → logprob: -13.770328521728516

Token 507: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7626941800117493
    2. ' n' → logprob: -1.2626941204071045
    3. 'import' → logprob: -1.6376941204071045
    4. ' import' → logprob: -3.1376941204071045
    5. '   ' → logprob: -4.762694358825684
    6. ' input' → logprob: -6.012694358825684
    7. 'input' → logprob: -6.387694358825684
    8. '```' → logprob: -9.387694358825684
    9. '#' → logprob: -9.512694358825684
    10. 't' → logprob: -11.137694358825684

Token 508: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1299528330564499
    2. '   ' → logprob: -2.129952907562256
    3. 'import' → logprob: -6.504952907562256
    4. ' =' → logprob: -7.879952907562256
    5. 'n' → logprob: -8.129952430725098
    6. ' des' → logprob: -8.629952430725098
    7. '=' → logprob: -9.504952430725098
    8. '_' → logprob: -9.754952430725098
    9. '()
' → logprob: -9.754952430725098
    10. '(' → logprob: -9.754952430725098

Token 509: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5517477989196777
    2. 'n' → logprob: -0.9267477989196777
    3. 'import' → logprob: -4.426747798919678
    4. ' nombre' → logprob: -4.551747798919678
    5. 'input' → logprob: -6.426747798919678
    6. 't' → logprob: -6.676747798919678
    7. ' n' → logprob: -6.801747798919678
    8. 'nb' → logprob: -7.176747798919678
    9. 'int' → logprob: -8.426748275756836
    10. '```' → logprob: -8.426748275756836

Token 510: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3629363775253296
    2. '_' → logprob: -1.7379363775253296
    3. ' ' → logprob: -1.9879363775253296
    4. ' de' → logprob: -2.112936496734619
    5. '   ' → logprob: -2.237936496734619
    6. 'de' → logprob: -3.112936496734619
    7. '  ' → logprob: -3.612936496734619
    8. ' d' → logprob: -3.612936496734619
    9. '=' → logprob: -3.862936496734619
    10. '    ' → logprob: -3.987936496734619

Token 511: ' somm' (ID: 44830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6157343983650208
    2. 's' → logprob: -0.8657343983650208
    3. ' n' → logprob: -3.865734338760376
    4. ' somm' → logprob: -5.115734577178955
    5. 'no' → logprob: -5.490734577178955
    6. 'som' → logprob: -5.615734577178955
    7. 'nodes' → logprob: -5.865734577178955
    8. ' noe' → logprob: -7.240734577178955
    9. 'vertices' → logprob: -7.740734577178955
    10. '```' → logprob: -9.615734100341797

Token 512: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0033326568081974983
    2. 'et' → logprob: -6.003332614898682
    3. 'ètres' → logprob: -8.50333309173584
    4. 'è' → logprob: -8.62833309173584
    5. 'ètes' → logprob: -8.75333309173584
    6. 'verts' → logprob: -9.75333309173584
    7. '_vertices' → logprob: -10.12833309173584
    8. 'e' → logprob: -10.50333309173584
    9. 'vertices' → logprob: -10.50333309173584
    10. 'ettes' → logprob: -10.75333309173584

Token 513: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48261404037475586
    2. 'n' → logprob: -1.1076140403747559
    3. ' =' → logprob: -3.357614040374756
    4. ' n' → logprob: -4.482614040374756
    5. ',' → logprob: -5.857614040374756
    6. '    
' → logprob: -6.107614040374756
    7. '
' → logprob: -8.232614517211914
    8. '(n' → logprob: -8.357614517211914
    9. '=' → logprob: -8.732614517211914
    10. ' ,' → logprob: -9.482614517211914

Token 514: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7390353679656982
    2. 'n' → logprob: -0.9890353679656982
    3. ')n' → logprob: -1.9890353679656982
    4. ' n' → logprob: -4.614035606384277
    5. '   ' → logprob: -5.989035606384277
    6. ' )' → logprob: -6.739035606384277
    7. 'int' → logprob: -10.114035606384277
    8. '  ' → logprob: -12.989035606384277
    9. ')
' → logprob: -12.989035606384277
    10. '    ' → logprob: -13.114035606384277

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022669474128633738
    2. '   ' → logprob: -6.502266883850098
    3. ' =' → logprob: -8.502266883850098
    4. ' )' → logprob: -8.627266883850098
    5. ')
' → logprob: -8.752266883850098
    6. ',' → logprob: -8.877266883850098
    7. '=' → logprob: -10.252266883850098
    8. ')n' → logprob: -11.502266883850098
    9. '),' → logprob: -11.627266883850098
    10. 'n' → logprob: -12.002266883850098

Token 516: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05874373018741608
    2. 'n' → logprob: -3.308743715286255
    3. ' =' → logprob: -4.308743953704834
    4. ',' → logprob: -5.308743953704834
    5. '
' → logprob: -7.058743953704834
    6. '    
' → logprob: -7.308743953704834
    7. '=' → logprob: -8.308743476867676
    8. ' n' → logprob: -8.808743476867676
    9. '=n' → logprob: -10.308743476867676
    10. ',n' → logprob: -10.558743476867676

Token 517: ' du' (ID: 1462)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6892779469490051
    2. 'd' → logprob: -2.0642778873443604
    3. 'le' → logprob: -2.0642778873443604
    4. 'm' → logprob: -2.4392778873443604
    5. 'de' → logprob: -2.8142778873443604
    6. 'du' → logprob: -3.3142778873443604
    7. 'q' → logprob: -4.3142781257629395
    8. 'des' → logprob: -4.6892781257629395
    9. 'edges' → logprob: -4.6892781257629395
    10. 'la' → logprob: -4.9392781257629395

Token 518: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.029674123972654343
    2. 'm' → logprob: -4.029674053192139
    3. 'q' → logprob: -5.154674053192139
    4. ' nombre' → logprob: -5.279674053192139
    5. 'number' → logprob: -9.154674530029297
    6. 'k' → logprob: -9.154674530029297
    7. 'Q' → logprob: -9.779674530029297
    8. 'n' → logprob: -9.779674530029297
    9. 'num' → logprob: -10.154674530029297
    10. ' q' → logprob: -10.404674530029297

Token 519: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3160739541053772
    2. '_d' → logprob: -1.5660738945007324
    3. 'de' → logprob: -3.5660738945007324
    4. '_' → logprob: -4.316073894500732
    5. '_de' → logprob: -4.691073894500732
    6. ' d' → logprob: -5.066073894500732
    7. '_queries' → logprob: -6.816073894500732
    8. 'des' → logprob: -6.941073894500732
    9. '_edges' → logprob: -7.066073894500732
    10. 'def' → logprob: -8.06607437133789

Token 520: ' requ' (ID: 7028)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.11570670455694199
    2. 'q' → logprob: -2.8657066822052
    3. 'm' → logprob: -3.6157066822052
    4. 'Q' → logprob: -5.115706920623779
    5. 'requ' → logprob: -5.365706920623779
    6. 'operations' → logprob: -5.740706920623779
    7. 're' → logprob: -6.115706920623779
    8. 'query' → logprob: -6.990706920623779
    9. 'qu' → logprob: -7.365706920623779
    10. ' queries' → logprob: -7.490706920623779

Token 521: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.001510335598140955
    2. 'etes' → logprob: -6.501510143280029
    3. 'ê' → logprob: -13.251510620117188
    4. 'ètes' → logprob: -13.251510620117188
    5. 'ête' → logprob: -13.626510620117188
    6. 'es' → logprob: -13.876510620117188
    7. 'é' → logprob: -14.626510620117188
    8. 'êts' → logprob: -14.751510620117188
    9. '�' → logprob: -15.126510620117188
    10. 'êt' → logprob: -15.501510620117188

Token 522: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21575839817523956
    2. '   ' → logprob: -1.7157584428787231
    3. '=' → logprob: -4.340758323669434
    4. ',' → logprob: -7.215758323669434
    5. '(n' → logprob: -8.590758323669434
    6. 'n' → logprob: -9.715758323669434
    7. '(' → logprob: -9.965758323669434
    8. ':' → logprob: -10.215758323669434
    9. '    
' → logprob: -10.840758323669434
    10. '=n' → logprob: -10.965758323669434

Token 523: 'q' (ID: 80)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11721526086330414
    2. ' m' → logprob: -2.867215156555176
    3. 'k' → logprob: -3.492215156555176
    4. 'q' → logprob: -4.367215156555176
    5. ')' → logprob: -6.242215156555176
    6. ',' → logprob: -6.367215156555176
    7. ' q' → logprob: -6.492215156555176
    8. ' ' → logprob: -6.492215156555176
    9. ' )' → logprob: -6.492215156555176
    10. ' k' → logprob: -6.492215156555176

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006537384819239378
    2. '   ' → logprob: -5.506537437438965
    3. '):' → logprob: -6.381537437438965
    4. ')
' → logprob: -7.631537437438965
    5. '):
' → logprob: -8.631537437438965
    6. ' )' → logprob: -10.256537437438965
    7. ' =' → logprob: -10.881537437438965
    8. '```' → logprob: -11.631537437438965
    9. '')' → logprob: -11.756537437438965
    10. ',' → logprob: -12.131537437438965

Token 525: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1569918692111969
    2. '   ' → logprob: -2.406991958618164
    3. '
' → logprob: -3.531991958618164
    4. '=' → logprob: -4.156991958618164
    5. '  
' → logprob: -5.906991958618164
    6. '    
' → logprob: -5.906991958618164
    7. '```' → logprob: -6.281991958618164
    8. 'n' → logprob: -7.156991958618164
    9. ',' → logprob: -7.531991958618164
    10. '   
' → logprob: -7.656991958618164

Token 526: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4801753759384155
    2. ' n' → logprob: -0.9801753759384155
    3. '   ' → logprob: -5.105175495147705
    4. '	n' → logprob: -11.855175018310547
    5. '    
' → logprob: -13.230175018310547
    6. ' 
' → logprob: -13.730175018310547
    7. '\n' → logprob: -13.980175018310547
    8. ' line' → logprob: -14.105175018310547
    9. 'input' → logprob: -14.230175018310547
    10. ' ' → logprob: -14.480175018310547

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007107630372047424
    2. ',q' → logprob: -7.250710964202881
    3. ' ,' → logprob: -14.000710487365723
    4. 'q' → logprob: -17.00071144104004
    5. ',input' → logprob: -17.00071144104004
    6. ',Q' → logprob: -17.50071144104004
    7. ',n' → logprob: -18.12571144104004
    8. ',s' → logprob: -18.25071144104004
    9. ',user' → logprob: -18.25071144104004
    10. ',k' → logprob: -18.37571144104004

Token 528: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1602245420217514
    2. ' q' → logprob: -1.9102245569229126
    3. ' ' → logprob: -16.41022491455078
    4. ',q' → logprob: -16.53522491455078
    5. '	q' → logprob: -16.78522491455078
    6. '_q' → logprob: -16.91022491455078
    7. '=q' → logprob: -17.41022491455078
    8. '=' → logprob: -18.41022491455078
    9. '*q' → logprob: -18.41022491455078
    10. ' =' → logprob: -19.03522491455078

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132983148097992
    2. '=' → logprob: -1.3132983446121216
    3. ',' → logprob: -10.313298225402832
    4. '=input' → logprob: -13.438298225402832
    5. ')' → logprob: -13.813298225402832
    6. ')=' → logprob: -15.438298225402832
    7. ' =
' → logprob: -15.688298225402832
    8. '=int' → logprob: -15.813298225402832
    9. ' ' → logprob: -16.06329917907715
    10. ' =
' → logprob: -16.06329917907715

Token 530: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022443771362305
    2. 'map' → logprob: -1.910224437713623
    3. '	map' → logprob: -15.535224914550781
    4. 'm' → logprob: -17.53522491455078
    5. '(map' → logprob: -17.78522491455078
    6. ' ' → logprob: -17.91022491455078
    7. '[' → logprob: -18.03522491455078
    8. 'list' → logprob: -18.91022491455078
    9. ' list' → logprob: -19.16022491455078
    10. '   ' → logprob: -19.16022491455078

Token 531: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014432028867304325
    2. '(' → logprob: -4.264431953430176
    3. '(input' → logprob: -8.514431953430176
    4. '(str' → logprob: -9.639431953430176
    5. '(
' → logprob: -13.889431953430176
    6. '(list' → logprob: -14.389431953430176
    7. 'int' → logprob: -14.514431953430176
    8. '(in' → logprob: -15.514431953430176
    9. '(lambda' → logprob: -15.514431953430176
    10. '()' → logprob: -16.264432907104492

Token 532: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15756380558013916
    2. 'input' → logprob: -2.1575636863708496
    3. ',input' → logprob: -3.6575636863708496
    4. ',' → logprob: -6.03256368637085
    5. '(' → logprob: -6.53256368637085
    6. ' input' → logprob: -8.157564163208008
    7. ')' → logprob: -8.907564163208008
    8. '=input' → logprob: -9.907564163208008
    9. '(),' → logprob: -11.032564163208008
    10. '()' → logprob: -11.407564163208008

Token 533: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031777136027812958
    2. ' input' → logprob: -5.753177642822266
    3. '(input' → logprob: -21.878177642822266
    4. '=input' → logprob: -22.128177642822266
    5. '	input' → logprob: -22.253177642822266
    6. '   ' → logprob: -23.503177642822266
    7. ',input' → logprob: -23.503177642822266
    8. '<input' → logprob: -24.003177642822266
    9. '_input' → logprob: -24.878177642822266
    10. '.input' → logprob: -25.753177642822266

Token 534: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. ' ().' → logprob: -16.250001907348633
    4. '())' → logprob: -19.000001907348633
    5. '(' → logprob: -19.125001907348633
    6. ')' → logprob: -19.500001907348633
    7. '()
' → logprob: -20.250001907348633
    8. '()[' → logprob: -21.500001907348633
    9. '('').' → logprob: -21.750001907348633
    10. '().
' → logprob: -22.375001907348633

Token 535: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.229872087715194e-05
    2. 'strip' → logprob: -9.750061988830566
    3. 'rstrip' → logprob: -12.625061988830566
    4. '(split' → logprob: -14.750061988830566
    5. ' split' → logprob: -15.500061988830566
    6. 'spl' → logprob: -18.000062942504883
    7. '_split' → logprob: -19.125062942504883
    8. '().' → logprob: -19.625062942504883
    9. 'read' → logprob: -20.125062942504883
    10. 'replace' → logprob: -20.875062942504883

Token 536: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.25658300518989563
    2. ')' → logprob: -1.5065829753875732
    3. '()' → logprob: -5.381583213806152
    4. '(' → logprob: -11.006583213806152
    5. '))' → logprob: -11.006583213806152
    6. '()))' → logprob: -12.381583213806152
    7. '())
' → logprob: -13.756583213806152
    8. '('' → logprob: -13.881583213806152
    9. '().' → logprob: -14.006583213806152
    10. ' )' → logprob: -14.506583213806152

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09580802172422409
    2. 'edge' → logprob: -2.4708080291748047
    3. 'edges' → logprob: -5.345808029174805
    4. 'cnt' → logprob: -7.095808029174805
    5. '    
' → logprob: -7.470808029174805
    6. ' edge' → logprob: -7.720808029174805
    7. ' edges' → logprob: -9.470808029174805
    8. 'counts' → logprob: -10.345808029174805
    9. '  ' → logprob: -10.845808029174805
    10. '```' → logprob: -10.845808029174805

Token 538: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.013254228048026562
    2. 'edge' → logprob: -4.513254165649414
    3. 'tree' → logprob: -6.638254165649414
    4. '#' (adapté à ' #') → logprob: -7.888254165649414
    5. 'edges' → logprob: -8.263254165649414
    6. 'counter' → logprob: -9.138254165649414
    7. 'counts' → logprob: -9.513254165649414
    8. '   ' → logprob: -10.138254165649414
    9. ' cnt' → logprob: -11.138254165649414
    10. 'node' → logprob: -11.763254165649414

Token 539: ' Lecture' (ID: 106534)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1784282624721527
    2. 'tree' → logprob: -1.928428292274475
    3. 'edges' → logprob: -4.8034281730651855
    4. 'cnt' → logprob: -4.9284281730651855
    5. '#' → logprob: -6.3034281730651855
    6. '   ' → logprob: -7.6784281730651855
    7. 'counter' → logprob: -9.053428649902344
    8. ' edge' → logprob: -9.303428649902344
    9. ' tree' → logprob: -10.803428649902344
    10. 'trees' → logprob: -11.053428649902344

Token 540: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.21405017375946045
    2. '()' → logprob: -2.21405029296875
    3. '   ' → logprob: -2.83905029296875
    4. 'des' → logprob: -3.96405029296875
    5. ' of' → logprob: -5.33905029296875
    6. ' de' → logprob: -7.71405029296875
    7. '()
' → logprob: -9.08905029296875
    8. '_des' → logprob: -9.21405029296875
    9. '(n' → logprob: -9.33905029296875
    10. 'n' → logprob: -10.08905029296875

Token 541: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6767855882644653
    2. ' edges' → logprob: -0.8017855882644653
    3. 'edge' → logprob: -3.926785469055176
    4. ' edge' → logprob: -4.176785469055176
    5. 'ar' → logprob: -5.551785469055176
    6. 'n' → logprob: -6.301785469055176
    7. ' n' → logprob: -6.801785469055176
    8. ' ar' → logprob: -7.051785469055176
    9. '_edges' → logprob: -8.176785469055176
    10. 'arest' → logprob: -10.176785469055176

Token 542: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.4560888111591339
    2. 'e' → logprob: -1.0810887813568115
    3. 'es' → logprob: -4.456089019775391
    4. 'cs' → logprob: -5.331089019775391
    5. 'edges' → logprob: -5.456089019775391
    6. 'etes' → logprob: -6.706089019775391
    7. 'r' → logprob: -6.831089019775391
    8. 'ea' → logprob: -6.831089019775391
    9. 'ec' → logprob: -7.581089019775391
    10. 'gs' → logprob: -7.831089019775391

Token 543: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007339857402257621
    2. 'edge' → logprob: -8.000734329223633
    3. 'edges' → logprob: -8.375734329223633
    4. 'for' → logprob: -9.000734329223633
    5. ' for' → logprob: -10.750734329223633
    6. ' edge' → logprob: -12.000734329223633
    7. '(edge' → logprob: -12.000734329223633
    8. '    
' → logprob: -12.375734329223633
    9. ' edges' → logprob: -12.750734329223633
    10. '  ' → logprob: -14.500734329223633

Token 544: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41798996925354004
    2. '[n' → logprob: -1.41798996925354
    3. '[(' → logprob: -3.29298996925354
    4. ')' → logprob: -4.042989730834961
    5. 'edge' → logprob: -4.292989730834961
    6. ' [' → logprob: -5.042989730834961
    7. 'for' → logprob: -5.167989730834961
    8. '(edge' → logprob: -5.917989730834961
    9. '[node' → logprob: -6.042989730834961
    10. '[
' → logprob: -6.042989730834961

Token 545: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25594717264175415
    2. ' -' → logprob: -1.8809471130371094
    3. '   ' → logprob: -3.1309471130371094
    4. ')' → logprob: -3.6309471130371094
    5. ')
' → logprob: -7.380947113037109
    6. '=' → logprob: -7.380947113037109
    7. 'for' → logprob: -7.880947113037109
    8. '
' → logprob: -8.13094711303711
    9. 'edges' → logprob: -8.50594711303711
    10. ' =' → logprob: -9.00594711303711

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -14.500001907348633
    4. ')' → logprob: -16.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'lines' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '１' → logprob: -19.375001907348633
    9. '۱' → logprob: -20.000001907348633
    10. ' -' → logprob: -20.250001907348633

Token 547: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048762657679617405
    2. ')
' → logprob: -5.504876136779785
    3. ' )' → logprob: -8.129876136779785
    4. 'for' → logprob: -8.754876136779785
    5. ' lines' → logprob: -9.004876136779785
    6. 'edges' → logprob: -10.004876136779785
    7. '   ' → logprob: -10.129876136779785
    8. '):
' → logprob: -10.129876136779785
    9. ' edges' → logprob: -10.129876136779785
    10. ' for' → logprob: -11.254876136779785

Token 548: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.222920536994934
    2. 'for' → logprob: -1.972920536994934
    3. 'pass' → logprob: -2.4729204177856445
    4. ')' → logprob: -2.5979204177856445
    5. 'n' → logprob: -2.9729204177856445
    6. 'range' → logprob: -2.9729204177856445
    7. 'input' → logprob: -3.8479204177856445
    8. 'format' → logprob: -3.9729204177856445
    9. '=' → logprob: -4.0979204177856445
    10. ' total' → logprob: -4.0979204177856445

Token 549: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07911384105682373
    2. ')
' → logprob: -2.5791139602661133
    3. '   ' → logprob: -8.704113960266113
    4. '):' → logprob: -10.579113960266113
    5. '):
' → logprob: -11.454113960266113
    6. ')
' → logprob: -11.704113960266113
    7. 'for' → logprob: -11.954113960266113
    8. ' )' → logprob: -12.704113960266113
    9. ' for' → logprob: -13.204113960266113
    10. ')

' → logprob: -13.954113960266113

Token 550: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.43301355838775635
    2. '_' → logprob: -1.4330135583877563
    3. ' i' → logprob: -3.058013439178467
    4. ' _' → logprob: -3.058013439178467
    5. 'i' → logprob: -4.808013439178467
    6. ' arbre' → logprob: -5.308013439178467
    7. ' tree' → logprob: -6.558013439178467
    8. '_tree' → logprob: -6.683013439178467
    9. '_un' → logprob: -7.433013439178467
    10. 'un' → logprob: -7.558013439178467

Token 551: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.12738706171512604
    2. 'ar' → logprob: -2.127387046813965
    3. 'tree' → logprob: -8.127387046813965
    4. ' tree' → logprob: -9.252387046813965
    5. 'arb' → logprob: -10.002387046813965
    6. ''ar' → logprob: -12.002387046813965
    7. ' arbres' → logprob: -12.002387046813965
    8. '```' → logprob: -12.877387046813965
    9. 'abr' → logprob: -13.377387046813965
    10. ' ' → logprob: -13.877387046813965

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001290454383706674
    2. '):' → logprob: -9.500128746032715
    3. ')
' → logprob: -10.000128746032715
    4. ')...' → logprob: -12.875128746032715
    5. ' )' → logprob: -13.250128746032715
    6. 'for' → logprob: -13.875128746032715
    7. ')

' → logprob: -14.500128746032715
    8. '   ' → logprob: -14.625128746032715
    9. ').' → logprob: -14.750128746032715
    10. '):
' → logprob: -15.125128746032715

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030129998922348022
    2. 'edges' → logprob: -6.5030131340026855
    3. 'edge' → logprob: -6.7530131340026855
    4. ' edge' → logprob: -8.628012657165527
    5. ' edges' → logprob: -9.378012657165527
    6. '```' → logprob: -10.253012657165527
    7. 'for' → logprob: -10.628012657165527
    8. ' for' → logprob: -11.253012657165527
    9. '    
' → logprob: -12.753012657165527
    10. '(edge' → logprob: -13.753012657165527

Token 554: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.7019120454788208
    2. '   ' → logprob: -0.8269120454788208
    3. ' edge' → logprob: -2.8269119262695312
    4. 'edges' → logprob: -4.951911926269531
    5. ' edges' → logprob: -7.451911926269531
    6. '    
' → logprob: -9.826911926269531
    7. 'for' → logprob: -10.826911926269531
    8. 'tree' → logprob: -11.701911926269531
    9. '  ' → logprob: -11.951911926269531
    10. '```' → logprob: -12.076911926269531

Token 555: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2522241473197937
    2. 's' → logprob: -1.5022242069244385
    3. '_s' → logprob: -8.25222396850586
    4. '_' → logprob: -10.87722396850586
    5. '_lst' → logprob: -12.62722396850586
    6. '_lines' → logprob: -12.87722396850586
    7. '_lists' → logprob: -12.87722396850586
    8. 'list' → logprob: -13.25222396850586
    9. ' _' → logprob: -13.62722396850586
    10. '_l' → logprob: -14.12722396850586

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409170866012573
    2. ' =' → logprob: -0.9740917086601257
    3. '=[]' → logprob: -11.224091529846191
    4. '=[]
' → logprob: -13.974091529846191
    5. '=[' → logprob: -15.349091529846191
    6. ' =[' → logprob: -16.099092483520508
    7. '.append' → logprob: -16.724092483520508
    8. '[]' → logprob: -17.224092483520508
    9. '＝' → logprob: -17.349092483520508
    10. '=[]
' → logprob: -17.974092483520508

Token 557: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1648586392402649
    2. '[n' → logprob: -1.9148585796356201
    3. '[int' → logprob: -5.664858818054199
    4. '[input' → logprob: -7.914858818054199
    5. '[num' → logprob: -9.1648588180542
    6. '[array' → logprob: -9.6648588180542
    7. '[e' → logprob: -9.7898588180542
    8. '[node' → logprob: -9.9148588180542
    9. '[event' → logprob: -10.0398588180542
    10. '[next' → logprob: -10.0398588180542

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002690032823011279
    2. 'for' → logprob: -6.502689838409424
    3. ' for' → logprob: -6.752689838409424
    4. '	for' → logprob: -11.502690315246582
    5. '    
' → logprob: -12.252690315246582
    6. '
' → logprob: -12.627690315246582
    7. '   ' → logprob: -15.127690315246582
    8. '       ' → logprob: -15.502690315246582
    9. '```' → logprob: -15.752690315246582
    10. '[' → logprob: -15.877690315246582

Token 559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03167148306965828
    2. ' for' → logprob: -3.7816715240478516
    3. '   ' → logprob: -4.781671524047852
    4. '
' → logprob: -11.906671524047852
    5. '	for' → logprob: -13.781671524047852
    6. '    
' → logprob: -14.531671524047852
    7. '```' → logprob: -15.656671524047852
    8. ' 
' → logprob: -16.53167152404785
    9. ' ' → logprob: -18.15667152404785
    10. '``' → logprob: -18.78167152404785

Token 560: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20142805576324463
    2. '_' → logprob: -1.7014280557632446
    3. ' i' → logprob: -11.326428413391113
    4. ' ' → logprob: -13.451428413391113
    5. 'i' → logprob: -14.451428413391113
    6. ' ' → logprob: -14.701428413391113
    7. '_i' → logprob: -15.201428413391113
    8. ' ‌' → logprob: -16.701427459716797
    9. '   ' → logprob: -17.701427459716797
    10. '  ' → logprob: -17.701427459716797

Token 561: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03652779012918472
    2. ' in' → logprob: -3.4115278720855713
    3. '_' → logprob: -6.286527633666992
    4. 'range' → logprob: -7.036527633666992
    5. 'n' → logprob: -9.286527633666992
    6. ' ' → logprob: -10.286527633666992
    7. ' range' → logprob: -12.161527633666992
    8. 'i' → logprob: -13.411527633666992
    9. '_in' → logprob: -14.286527633666992
    10. ' _' → logprob: -14.411527633666992

Token 562: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '	range' → logprob: -17.50002098083496
    4. '(range' → logprob: -19.00002098083496
    5. '_range' → logprob: -22.00002098083496
    6. '  ' → logprob: -22.12502098083496
    7. ' ' → logprob: -22.25002098083496
    8. '_' → logprob: -22.25002098083496
    9. 'rang' → logprob: -22.25002098083496
    10. '.range' → logprob: -22.25002098083496

Token 563: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.9292415749514475e-05
    2. '(' → logprob: -10.500039100646973
    3. 'n' → logprob: -11.375039100646973
    4. ' (' → logprob: -17.25004005432129
    5. ' n' → logprob: -17.37504005432129
    6. '(
' → logprob: -17.75004005432129
    7. '	n' → logprob: -19.37504005432129
    8. '((' → logprob: -19.37504005432129
    9. ')n' → logprob: -20.87504005432129
    10. ',n' → logprob: -22.00004005432129

Token 564: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20141693949699402
    2. '-' → logprob: -1.7014169692993164
    3. '   ' → logprob: -13.201416969299316
    4. '1' → logprob: -13.951416969299316
    5. '):
' → logprob: -14.951416969299316
    6. ')' → logprob: -15.201416969299316
    7. ' ' → logprob: -15.826416969299316
    8. ' -
' → logprob: -16.576416015625
    9. '()-' → logprob: -17.076416015625
    10. '-
' → logprob: -17.326416015625

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.250019073486328
    4. '<|end|>' → logprob: -18.500019073486328
    5. ')' → logprob: -19.750019073486328
    6. '```' → logprob: -19.875019073486328
    7. '2' → logprob: -20.375019073486328
    8. '0' → logprob: -21.250019073486328
    9. '  ' → logprob: -21.375019073486328
    10. '       ' → logprob: -21.562519073486328

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -19.875
    5. '১' → logprob: -20.5625
    6. '１' → logprob: -20.6875
    7. '۱' → logprob: -20.8125
    8. '2' → logprob: -21.1875
    9. '१' → logprob: -21.25
    10. ')' → logprob: -21.375

Token 567: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2526862919330597
    2. '):' → logprob: -1.5026862621307373
    3. '   ' → logprob: -8.127686500549316
    4. '):
' → logprob: -8.127686500549316
    5. ':' → logprob: -9.127686500549316
    6. ')' → logprob: -10.377686500549316
    7. ':
' → logprob: -11.127686500549316
    8. '       ' → logprob: -12.877686500549316
    9. ' ):
' → logprob: -12.877686500549316
    10. '():
' → logprob: -13.127686500549316

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003851517685689032
    2. '   ' → logprob: -8.000385284423828
    3. 'a' → logprob: -10.625385284423828
    4. ' a' → logprob: -11.125385284423828
    5. '```' → logprob: -12.875385284423828
    6. ' edge' → logprob: -13.125385284423828
    7. 'edge' → logprob: -13.500385284423828
    8. '    
' → logprob: -14.500385284423828
    9. 'input' → logprob: -14.500385284423828
    10. '           ' → logprob: -14.875385284423828

Token 569: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.001613292726688087
    2. ' a' → logprob: -6.501613140106201
    3. 'u' → logprob: -9.37661361694336
    4. '   ' → logprob: -10.62661361694336
    5. ' u' → logprob: -13.87661361694336
    6. 'edge' → logprob: -14.62661361694336
    7. '	a' → logprob: -14.87661361694336
    8. ' edge' → logprob: -16.12661361694336
    9. ' ' → logprob: -16.50161361694336
    10. 'x' → logprob: -18.00161361694336

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028386167832650244
    2. ',b' → logprob: -8.250284194946289
    3. ' ,' → logprob: -10.750284194946289
    4. 'b' → logprob: -13.750284194946289
    5. ',n' → logprob: -17.87528419494629
    6. ',v' → logprob: -18.50028419494629
    7. ',
' → logprob: -18.75028419494629
    8. ',int' → logprob: -19.37528419494629
    9. '_,' → logprob: -19.62528419494629
    10. ',a' → logprob: -19.87528419494629

Token 571: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. ' ' → logprob: -19.76104736328125
    4. '	b' → logprob: -20.88604736328125
    5. ',b' → logprob: -22.26104736328125
    6. '*b' → logprob: -23.38604736328125
    7. ' 
' → logprob: -23.51104736328125
    8. 'space' → logprob: -24.38604736328125
    9. '=b' → logprob: -24.38604736328125
    10. '=' → logprob: -24.38604736328125

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ',' → logprob: -17.88604736328125
    4. '=input' → logprob: -18.51104736328125
    5. ')' → logprob: -19.13604736328125
    6. '＝' → logprob: -19.51104736328125
    7. '=int' → logprob: -20.13604736328125
    8. '=
' → logprob: -20.26104736328125
    9. ')=' → logprob: -20.63604736328125
    10. '=

' → logprob: -20.76104736328125

Token 573: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.306760805164231e-05
    2. ' map' → logprob: -11.25001335144043
    3. '	map' → logprob: -17.87501335144043
    4. 'm' → logprob: -18.12501335144043
    5. 'tuple' → logprob: -19.62501335144043
    6. '   ' → logprob: -20.12501335144043
    7. 'ma' → logprob: -20.75001335144043
    8. '_map' → logprob: -22.00001335144043
    9. '    ' → logprob: -22.12501335144043
    10. '.map' → logprob: -22.37501335144043

Token 574: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000356199947418645
    2. 'int' → logprob: -8.000356674194336
    3. '(' → logprob: -11.000356674194336
    4. '<int' → logprob: -13.750356674194336
    5. '(input' → logprob: -13.875356674194336
    6. '[int' → logprob: -14.375356674194336
    7. '=int' → logprob: -14.500356674194336
    8. '(str' → logprob: -15.375356674194336
    9. ']int' → logprob: -15.375356674194336
    10. 'input' → logprob: -16.250356674194336

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01835665851831436
    2. ',input' → logprob: -4.018356800079346
    3. '(input' → logprob: -9.143356323242188
    4. 'input' → logprob: -9.268356323242188
    5. '(' → logprob: -12.643356323242188
    6. '(),' → logprob: -14.018356323242188
    7. ' ,' → logprob: -14.393356323242188
    8. ')' → logprob: -14.643356323242188
    9. ' input' → logprob: -16.018356323242188
    10. '=input' → logprob: -16.268356323242188

Token 576: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. '(input' → logprob: -19.625911712646484
    4. ' ' → logprob: -20.250911712646484
    5. '	input' → logprob: -20.250911712646484
    6. ')' → logprob: -20.625911712646484
    7. '=input' → logprob: -20.875911712646484
    8. '_input' → logprob: -21.250911712646484
    9. '<input' → logprob: -21.375911712646484
    10. '   ' → logprob: -21.500911712646484

Token 577: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.68022444692906e-05
    2. '()' → logprob: -10.000046730041504
    3. '(' → logprob: -14.125046730041504
    4. ' ().' → logprob: -15.375046730041504
    5. '.split' → logprob: -15.875046730041504
    6. ')' → logprob: -16.00004768371582
    7. '.' → logprob: -16.50004768371582
    8. '()
' → logprob: -17.00004768371582
    9. '.readline' → logprob: -17.25004768371582
    10. '())' → logprob: -17.50004768371582

Token 578: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'strip' → logprob: -16.75
    3. ' split' → logprob: -17.375
    4. '(split' → logprob: -19.625
    5. '.split' → logprob: -19.75
    6. 'spl' → logprob: -21.0
    7. 'rstrip' → logprob: -22.125
    8. '_split' → logprob: -22.5
    9. 'read' → logprob: -23.75
    10. 'plit' → logprob: -24.875

Token 579: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010532920714467764
    2. '())' → logprob: -7.376053333282471
    3. '()' → logprob: -8.001052856445312
    4. '))' → logprob: -9.751052856445312
    5. ')
' → logprob: -10.376052856445312
    6. ' )' → logprob: -14.501052856445312
    7. '(' → logprob: -14.751052856445312
    8. '())
' → logprob: -15.126052856445312
    9. ')`' → logprob: -15.251052856445312
    10. '   ' → logprob: -15.376052856445312

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002072357019642368
    2. '   ' → logprob: -8.50020694732666
    3. '	' → logprob: -14.12520694732666
    4. '           ' → logprob: -14.12520694732666
    5. '<|end|>' → logprob: -14.37520694732666
    6. 'edge' → logprob: -14.62520694732666
    7. '	   ' → logprob: -15.37520694732666
    8. ',' → logprob: -15.50020694732666
    9. '```' → logprob: -15.87520694732666
    10. ' edge' → logprob: -16.000207901000977

Token 581: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.0007544778054580092
    2. '       ' → logprob: -7.750754356384277
    3. ' edge' → logprob: -8.125754356384277
    4. '   ' → logprob: -10.500754356384277
    5. 'edges' → logprob: -16.250755310058594
    6. '(edge' → logprob: -16.250755310058594
    7. '=edge' → logprob: -16.875755310058594
    8. '           ' → logprob: -17.000755310058594
    9. '```' → logprob: -17.500755310058594
    10. '.edge' → logprob: -17.750755310058594

Token 582: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: 0.0
    2. 'list' → logprob: -17.25
    3. '_l' → logprob: -18.5
    4. '_' → logprob: -19.875
    5. '_lists' → logprob: -20.375
    6. 'List' → logprob: -20.75
    7. ' _' → logprob: -20.875
    8. '_LIST' → logprob: -21.25
    9. '_List' → logprob: -22.125
    10. 's' → logprob: -22.25

Token 583: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00527016120031476
    2. '.' → logprob: -5.255270004272461
    3. '.app' → logprob: -10.880270004272461
    4. '.ap' → logprob: -11.755270004272461
    5. ' .' → logprob: -11.880270004272461
    6. '.extend' → logprob: -14.130270004272461
    7. '.add' → logprob: -14.630270004272461
    8. ').' → logprob: -14.755270004272461
    9. '.Append' → logprob: -15.630270004272461
    10. '.setdefault' → logprob: -15.630270004272461

Token 584: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '(
' → logprob: -17.00020408630371
    4. '(a' → logprob: -17.37520408630371
    5. ' (' → logprob: -20.00020408630371
    6. ' ((' → logprob: -20.75020408630371
    7. '([' → logprob: -21.25020408630371
    8. '(b' → logprob: -21.62520408630371
    9. '(tuple' → logprob: -21.87520408630371
    10. '()' → logprob: -22.12520408630371

Token 585: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.246537173457909e-06
    2. ' a' → logprob: -12.375003814697266
    3. '	a' → logprob: -19.250003814697266
    4. '   ' → logprob: -19.750003814697266
    5. ')a' → logprob: -19.750003814697266
    6. '_a' → logprob: -22.375003814697266
    7. ' ' → logprob: -23.125003814697266
    8. ''a' → logprob: -23.250003814697266
    9. 'а' → logprob: -23.375003814697266
    10. '    ' → logprob: -23.375003814697266

Token 586: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007635258603841066
    2. ',b' → logprob: -4.882635116577148
    3. ' ,' → logprob: -10.507635116577148
    4. ',
' → logprob: -14.257635116577148
    5. ',a' → logprob: -14.882635116577148
    6. 'b' → logprob: -15.132635116577148
    7. '<|end|>' → logprob: -15.632635116577148
    8. '‌,' → logprob: -16.13263511657715
    9. ',p' → logprob: -18.13263511657715
    10. ')' → logprob: -18.25763511657715

Token 587: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ')b' → logprob: -18.37747573852539
    4. '   ' → logprob: -18.87747573852539
    5. '	b' → logprob: -19.25247573852539
    6. '    ' → logprob: -19.50247573852539
    7. ' ' → logprob: -19.75247573852539
    8. ' ' → logprob: -21.00247573852539
    9. '```' → logprob: -21.50247573852539
    10. ',b' → logprob: -21.62747573852539

Token 588: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859350249171257
    2. ')' → logprob: -3.048593521118164
    3. '))
' → logprob: -12.423593521118164
    4. ')
' → logprob: -13.548593521118164
    5. ')))' → logprob: -15.298593521118164
    6. ' ))' → logprob: -15.548593521118164
    7. '   ' → logprob: -15.798593521118164
    8. '),' → logprob: -16.798593521118164
    9. '));' → logprob: -17.298593521118164
    10. '       ' → logprob: -17.423593521118164

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005695947329513729
    2. '
' → logprob: -8.250569343566895
    3. '    
' → logprob: -8.500569343566895
    4. '```' → logprob: -9.625569343566895
    5. 'cnt' → logprob: -10.250569343566895
    6. '   ' → logprob: -13.750569343566895
    7. '#' → logprob: -14.375569343566895
    8. '``' → logprob: -14.500569343566895
    9. '       ' → logprob: -15.375569343566895
    10. '  
' → logprob: -15.625569343566895

Token 590: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3236067295074463
    2. 'cnt' → logprob: -1.4486067295074463
    3. '#' (adapté à ' #') → logprob: -3.1986067295074463
    4. '```' → logprob: -8.073606491088867
    5. '
' → logprob: -8.698606491088867
    6. ' cnt' → logprob: -9.698606491088867
    7. '    
' → logprob: -9.698606491088867
    8. 'counts' → logprob: -10.323606491088867
    9. '  ' → logprob: -10.698606491088867
    10. ' ' → logprob: -10.823606491088867

Token 591: ' Construction' (ID: 31452)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06371686607599258
    2. '#' → logprob: -2.8137168884277344
    3. '   ' → logprob: -6.688716888427734
    4. 'values' → logprob: -8.938716888427734
    5. 'counts' → logprob: -8.938716888427734
    6. ' cnt' → logprob: -9.938716888427734
    7. 'q' → logprob: -10.438716888427734
    8. 'count' → logprob: -10.438716888427734
    9. 'vals' → logprob: -10.938716888427734
    10. 'counter' → logprob: -11.063716888427734

Token 592: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020722290500998497
    2. 'de' → logprob: -7.252072334289551
    3. 'tree' → logprob: -7.377072334289551
    4. 'du' → logprob: -7.877072334289551
    5. ' de' → logprob: -8.87707233428955
    6. ' of' → logprob: -10.00207233428955
    7. ' du' → logprob: -10.25207233428955
    8. '  ' → logprob: -10.50207233428955
    9. '=' → logprob: -10.62707233428955
    10. ' tree' → logprob: -10.75207233428955

Token 593: ' la' (ID: 557)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.001930301426909864
    2. ' tree' → logprob: -6.251930236816406
    3. '(tree' → logprob: -14.126930236816406
    4. 'the' → logprob: -14.876930236816406
    5. '	tree' → logprob: -15.001930236816406
    6. '_tree' → logprob: -16.751930236816406
    7. '   ' → logprob: -17.001930236816406
    8. '```' → logprob: -17.126930236816406
    9. ' arbre' → logprob: -17.501930236816406
    10. ' ' → logprob: -17.751930236816406

Token 594: ' représentation' (ID: 162614)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0008658452425152063
    2. ' tree' → logprob: -7.250865936279297
    3. 'ar' → logprob: -9.000865936279297
    4. '_tree' → logprob: -12.000865936279297
    5. '	tree' → logprob: -12.500865936279297
    6. ' arbre' → logprob: -12.875865936279297
    7. '
' → logprob: -13.000865936279297
    8. '(tree' → logprob: -13.125865936279297
    9. '#' → logprob: -13.125865936279297
    10. '```' → logprob: -13.250865936279297

Token 595: ' de' (ID: 334)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.1940832138061523
    2. 'de' → logprob: -1.6940832138061523
    3. ' de' → logprob: -1.9440832138061523
    4. ' par' → logprob: -2.0690832138061523
    5. '   ' → logprob: -2.1940832138061523
    6. 'tree' → logprob: -2.5690832138061523
    7. ' du' → logprob: -3.5690832138061523
    8. 'du' → logprob: -4.069083213806152
    9. ' tree' → logprob: -5.069083213806152
    10. 'd' → logprob: -6.694083213806152

Token 596: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008771154098212719
    2. ' l' → logprob: -4.758770942687988
    3. 'tree' → logprob: -9.758770942687988
    4. ' arbre' → logprob: -10.008770942687988
    5. 'ar' → logprob: -10.508770942687988
    6. 'lar' → logprob: -12.258770942687988
    7. 'la' → logprob: -12.633770942687988
    8. ' tree' → logprob: -12.758770942687988
    9. 'lap' → logprob: -13.258770942687988
    10. 'the' → logprob: -13.258770942687988

Token 597: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.04887155070900917
    2. 'ar' → logprob: -3.0488715171813965
    3. 'tree' → logprob: -8.673871994018555
    4. ' arbre' → logprob: -9.923871994018555
    5. '’ar' → logprob: -10.048871994018555
    6. 'arb' → logprob: -11.048871994018555
    7. '_ar' → logprob: -13.048871994018555
    8. ''' → logprob: -14.423871994018555
    9. ''ab' → logprob: -14.673871994018555
    10. 'a' → logprob: -15.298871994018555

Token 598: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -5.3358446166384965e-05
    2. 'b' → logprob: -10.750053405761719
    3. 'bo' → logprob: -11.750053405761719
    4. 'bres' → logprob: -11.750053405761719
    5. 'tree' → logprob: -11.875053405761719
    6. 're' → logprob: -12.750053405761719
    7. 'r' → logprob: -13.250053405761719
    8. 'e' → logprob: -13.750053405761719
    9. 'bor' → logprob: -14.250053405761719
    10. 'br' → logprob: -14.625053405761719

Token 599: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003404428483918309
    2. 'tree' → logprob: -6.25340461730957
    3. ' tree' → logprob: -6.75340461730957
    4. '
' → logprob: -9.12840461730957
    5. '	tree' → logprob: -9.25340461730957
    6. '    
' → logprob: -10.00340461730957
    7. '(tree' → logprob: -10.37840461730957
    8. '```' → logprob: -11.87840461730957
    9. '  ' → logprob: -12.25340461730957
    10. ' ' → logprob: -12.62840461730957

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013603554107248783
    2. 'tree' → logprob: -7.0013604164123535
    3. ' tree' → logprob: -7.7513604164123535
    4. '	tree' → logprob: -11.501359939575195
    5. '(tree' → logprob: -13.001359939575195
    6. '    
' → logprob: -13.376359939575195
    7. '   ' → logprob: -13.626359939575195
    8. '```' → logprob: -13.626359939575195
    9. '
' → logprob: -14.126359939575195
    10. '_tree' → logprob: -15.001359939575195

Token 601: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.30637067556381226
    2. ' tree' → logprob: -1.806370735168457
    3. '   ' → logprob: -2.306370735168457
    4. '	tree' → logprob: -11.431370735168457
    5. '  ' → logprob: -13.681370735168457
    6. '```' → logprob: -14.056370735168457
    7. ' ' → logprob: -14.431370735168457
    8. '(tree' → logprob: -15.056370735168457
    9. '_tree' → logprob: -15.181370735168457
    10. '    
' → logprob: -15.681370735168457

Token 602: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. '=create' → logprob: -18.576414108276367
    4. '＝' → logprob: -19.201414108276367
    5. ')' → logprob: -19.451414108276367
    6. ' ' → logprob: -19.576414108276367
    7. '=b' → logprob: -19.826414108276367
    8. ',' → logprob: -20.076414108276367
    9. ' =
' → logprob: -20.201414108276367
    10. ' ' → logprob: -20.576414108276367

Token 603: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.014163628220558167
    2. ' build' → logprob: -4.264163494110107
    3. '(build' → logprob: -16.639163970947266
    4. '	build' → logprob: -16.889163970947266
    5. '.build' → logprob: -19.014163970947266
    6. 'building' → logprob: -19.514163970947266
    7. '   ' → logprob: -20.139163970947266
    8. '_build' → logprob: -20.264163970947266
    9. ' ' → logprob: -20.639163970947266
    10. 'builder' → logprob: -20.764163970947266

Token 604: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -6.704273118884885e-07
    2. 'tree' → logprob: -15.000000953674316
    3. '_' → logprob: -16.5
    4. '_t' → logprob: -16.875
    5. '(tree' → logprob: -17.375
    6. '_TREE' → logprob: -18.375
    7. '_ar' → logprob: -19.125
    8. ' _' → logprob: -19.75
    9. ' tree' → logprob: -20.25
    10. '_array' → logprob: -20.25

Token 605: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -15.250001907348633
    4. 'n' → logprob: -18.000001907348633
    5. '(
' → logprob: -18.875001907348633
    6. '```' → logprob: -21.000001907348633
    7. ' n' → logprob: -22.375001907348633
    8. '   ' → logprob: -22.750001907348633
    9. ')' → logprob: -23.125001907348633
    10. '<n' → logprob: -23.375001907348633

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9186317482963204e-05
    2. ',n' → logprob: -10.250049591064453
    3. ' ,' → logprob: -11.375049591064453
    4. ',q' → logprob: -13.500049591064453
    5. ',
' → logprob: -14.125049591064453
    6. '(n' → logprob: -16.875049591064453
    7. '‌,' → logprob: -18.000049591064453
    8. ')' → logprob: -18.125049591064453
    9. ' ' → logprob: -18.375049591064453
    10. 'q' → logprob: -19.125049591064453

Token 607: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.26207560300827026
    2. ' edge' → logprob: -1.762075662612915
    3. 'q' → logprob: -2.887075662612915
    4. ' q' → logprob: -5.887075424194336
    5. 'tree' → logprob: -8.512075424194336
    6. 'n' → logprob: -9.887075424194336
    7. ' n' → logprob: -10.262075424194336
    8. ' tree' → logprob: -10.762075424194336
    9. '   ' → logprob: -11.387075424194336
    10. ')' → logprob: -11.512075424194336

Token 608: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.392202976712724e-06
    2. 'list' → logprob: -12.875006675720215
    3. ',' → logprob: -13.375006675720215
    4. ')_' → logprob: -14.375006675720215
    5. ',_' → logprob: -14.500006675720215
    6. '   ' → logprob: -14.875006675720215
    7. 'List' → logprob: -15.375006675720215
    8. ')' → logprob: -15.750006675720215
    9. '_' → logprob: -16.3750057220459
    10. '_,' → logprob: -16.8750057220459

Token 609: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. '   ' → logprob: -12.125006675720215
    3. ' )' → logprob: -14.625006675720215
    4. ')
' → logprob: -14.875006675720215
    5. ')

' → logprob: -16.1250057220459
    6. ' ' → logprob: -17.6250057220459
    7. '  ' → logprob: -19.0000057220459
    8. ',' → logprob: -19.2500057220459
    9. '),' → logprob: -19.3750057220459
    10. ')`' → logprob: -20.2500057220459

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008989636786282063
    2. 'cnt' → logprob: -5.3839898109436035
    3. '
' → logprob: -5.7589898109436035
    4. '```' → logprob: -6.8839898109436035
    5. '    
' → logprob: -8.883989334106445
    6. '``' → logprob: -11.008989334106445
    7. '  ' → logprob: -12.008989334106445
    8. '#' → logprob: -12.633989334106445
    9. '	cnt' → logprob: -12.758989334106445
    10. '
' → logprob: -13.008989334106445

Token 611: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20218028128147125
    2. '   ' → logprob: -1.70218026638031
    3. '```' → logprob: -7.4521803855896
    4. '#' (adapté à ' #') → logprob: -9.327179908752441
    5. ' cnt' → logprob: -9.952179908752441
    6. '    
' → logprob: -11.077179908752441
    7. '``' → logprob: -11.202179908752441
    8. ' ' → logprob: -11.952179908752441
    9. '
' → logprob: -12.452179908752441
    10. '	cnt' → logprob: -12.827179908752441

Token 612: ' Initial' (ID: 9209)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.006147769279778004
    2. '#' → logprob: -5.131147861480713
    3. '   ' → logprob: -8.506147384643555
    4. ' cnt' → logprob: -12.006147384643555
    5. 'counts' → logprob: -12.881147384643555
    6. 'counter' → logprob: -13.131147384643555
    7. '```' → logprob: -13.381147384643555
    8. 'count' → logprob: -13.631147384643555
    9. '	cnt' → logprob: -14.256147384643555
    10. '
' → logprob: -15.006147384643555

Token 613: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.6799375414848328
    2. '_cnt' → logprob: -1.5549376010894775
    3. 'cnt' → logprob: -2.5549376010894775
    4. 'iser' → logprob: -3.3049376010894775
    5. 'ization' → logprob: -3.3049376010894775
    6. 'isation' → logprob: -3.4299376010894775
    7. 'izing' → logprob: -3.5549376010894775
    8. '_count' → logprob: -4.304937362670898
    9. '_counts' → logprob: -4.304937362670898
    10. 'e' → logprob: -4.429937362670898

Token 614: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002561864908784628
    2. 'cnt' → logprob: -6.002562046051025
    3. ' cnt' → logprob: -10.002561569213867
    4. '  ' → logprob: -11.002561569213867
    5. 'de' → logprob: -11.877561569213867
    6. '(cnt' → logprob: -12.252561569213867
    7. ' de' → logprob: -12.377561569213867
    8. ' ' → logprob: -12.877561569213867
    9. '    ' → logprob: -13.752561569213867
    10. ' of' → logprob: -14.127561569213867

Token 615: ' tableau' (ID: 67053)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.842555426876061e-06
    2. 'counts' → logprob: -12.625004768371582
    3. ' cnt' → logprob: -14.375004768371582
    4. 'count' → logprob: -15.000004768371582
    5. 'counter' → logprob: -15.125004768371582
    6. 'c' → logprob: -16.1250057220459
    7. 'cn' → logprob: -16.7500057220459
    8. '```' → logprob: -17.2500057220459
    9. '[cnt' → logprob: -17.3750057220459
    10. '	cnt' → logprob: -17.5000057220459

Token 616: ' de' (ID: 334)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.87529057264328
    2. 'cnt' → logprob: -1.3752906322479248
    3. '   ' → logprob: -1.6252906322479248
    4. ' des' → logprob: -2.125290632247925
    5. 'des' → logprob: -5.000290393829346
    6. ' de' → logprob: -5.875290393829346
    7. '(cnt' → logprob: -6.750290393829346
    8. '_cnt' → logprob: -7.250290393829346
    9. '	cnt' → logprob: -7.250290393829346
    10. 'de' → logprob: -7.500290393829346

Token 617: ' compt' (ID: 39238)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3369600474834442
    2. 'counts' → logprob: -1.4619600772857666
    3. '0' → logprob: -3.8369600772857666
    4. 'val' → logprob: -4.3369598388671875
    5. 'com' → logprob: -4.9619598388671875
    6. 'z' → logprob: -5.5869598388671875
    7. 'zeros' → logprob: -6.2119598388671875
    8. 'c' → logprob: -6.2119598388671875
    9. 'comp' → logprob: -6.3369598388671875
    10. 'cont' → logprob: -6.8369598388671875

Token 618: 'age' (ID: 477)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.7911668419837952
    2. 's' → logprob: -1.6661667823791504
    3. '_cnt' → logprob: -1.6661667823791504
    4. '[' → logprob: -3.4161667823791504
    5. '_counts' → logprob: -3.4161667823791504
    6. 'e' → logprob: -3.5411667823791504
    7. ' cnt' → logprob: -3.9161667823791504
    8. '   ' → logprob: -4.41616678237915
    9. '(cnt' → logprob: -4.54116678237915
    10. 'es' → logprob: -5.04116678237915

Token 619: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06735413521528244
    2. 'cnt' → logprob: -3.192354202270508
    3. ' cnt' → logprob: -3.817354202270508
    4. '(cnt' → logprob: -6.317354202270508
    5. '[cnt' → logprob: -9.067354202270508
    6. '	cnt' → logprob: -9.817354202270508
    7. ' with' → logprob: -10.442354202270508
    8. ',' → logprob: -11.192354202270508
    9. '  ' → logprob: -11.317354202270508
    10. ' ' → logprob: -11.317354202270508

Token 620: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8446695804595947
    2. '[' → logprob: -1.7196695804595947
    3. '[n' → logprob: -1.9696695804595947
    4. 'q' → logprob: -2.2196695804595947
    5. 'cnt' → logprob: -2.3446695804595947
    6. '_' → logprob: -4.094669342041016
    7. '[q' → logprob: -4.844669342041016
    8. ' n' → logprob: -5.219669342041016
    9. '(n' → logprob: -5.594669342041016
    10. ' q' → logprob: -5.969669342041016

Token 621: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.11663992702960968
    2. ' node' → logprob: -2.3666398525238037
    3. 'node' → logprob: -4.741640090942383
    4. ' i' → logprob: -5.866640090942383
    5. ' noe' → logprob: -7.241640090942383
    6. ' somm' → logprob: -7.241640090942383
    7. ' vertex' → logprob: -7.366640090942383
    8. 'vertex' → logprob: -7.491640090942383
    9. ' cnt' → logprob: -7.741640090942383
    10. 'cnt' → logprob: -7.741640090942383

Token 622: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00559041416272521
    2. 'cnt' → logprob: -5.380590438842773
    3. ' cnt' → logprob: -7.005590438842773
    4. '(cnt' → logprob: -10.755590438842773
    5. '	cnt' → logprob: -11.130590438842773
    6. '  ' → logprob: -11.630590438842773
    7. ' ' → logprob: -11.630590438842773
    8. '    
' → logprob: -13.380590438842773
    9. '    ' → logprob: -13.380590438842773
    10. '   ' → logprob: -13.505590438842773

Token 623: '1' (ID: 16)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.7838329076766968
    2. 'cnt' → logprob: -0.9088329076766968
    3. ' q' → logprob: -2.7838330268859863
    4. 'q' → logprob: -3.4088330268859863
    5. ' [' → logprob: -4.533833026885986
    6. '   ' → logprob: -4.658833026885986
    7. ')' → logprob: -4.783833026885986
    8. '[' → logprob: -5.033833026885986
    9. '0' → logprob: -5.533833026885986
    10. 'n' → logprob: -7.158833026885986

Token 624: '-ind' (ID: 26698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07905568927526474
    2. ')' → logprob: -3.0790557861328125
    3. ' =' → logprob: -5.2040557861328125
    4. '
' → logprob: -5.2040557861328125
    5. ')
' → logprob: -5.5790557861328125
    6. ' n' → logprob: -6.5790557861328125
    7. ' )' → logprob: -6.7040557861328125
    8. '+' → logprob: -6.8290557861328125
    9. '    ' → logprob: -6.9540557861328125
    10. ' ' → logprob: -6.9540557861328125

Token 625: 'ic' (ID: 291)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0013059526681900024
    2. 'é' → logprob: -7.376306056976318
    3. 'x' → logprob: -7.751306056976318
    4. 'cé' → logprob: -8.75130558013916
    5. '```' → logprob: -11.12630558013916
    6. '   ' → logprob: -11.37630558013916
    7. 'ed' → logprob: -11.75130558013916
    8. '-' → logprob: -12.12630558013916
    9. 'ic' → logprob: -12.12630558013916
    10. '(ex' → logprob: -12.25130558013916

Token 626: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.20220491290092468
    2. 'ed' → logprob: -1.827204942703247
    3. 'e' → logprob: -3.952204942703247
    4. 'es' → logprob: -5.952204704284668
    5. 'és' → logprob: -9.452204704284668
    6. 'isé' → logprob: -9.452204704284668
    7. '```' → logprob: -9.952204704284668
    8. 'ex' → logprob: -9.952204704284668
    9. 'x' → logprob: -10.702204704284668
    10. '   ' → logprob: -11.202204704284668

Token 627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04166272282600403
    2. ',' → logprob: -3.5416626930236816
    3. ')
' → logprob: -4.666662693023682
    4. '   ' → logprob: -6.166662693023682
    5. ' )' → logprob: -8.54166316986084
    6. ' ,' → logprob: -10.54166316986084
    7. '[' → logprob: -10.54166316986084
    8. ')
' → logprob: -11.04166316986084
    9. ' with' → logprob: -11.04166316986084
    10. ' )
' → logprob: -11.29166316986084

Token 628: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002326767658814788
    2. ' cnt' → logprob: -6.502326965332031
    3. 'cnt' → logprob: -7.252326965332031
    4. '    
' → logprob: -9.627326965332031
    5. '
' → logprob: -11.502326965332031
    6. '  ' → logprob: -11.502326965332031
    7. ' ' → logprob: -12.002326965332031
    8. '    ' → logprob: -12.127326965332031
    9. '	cnt' → logprob: -12.377326965332031
    10. ',' → logprob: -13.252326965332031

Token 629: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.21574227511882782
    2. ' cnt' → logprob: -2.215742349624634
    3. '   ' → logprob: -2.465742349624634
    4. '	cnt' → logprob: -11.340742111206055
    5. ' ' → logprob: -11.715742111206055
    6. 'count' → logprob: -12.340742111206055
    7. '  ' → logprob: -13.090742111206055
    8. '(cnt' → logprob: -13.215742111206055
    9. '[cnt' → logprob: -13.340742111206055
    10. 'counter' → logprob: -13.465742111206055

Token 630: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859020933508873
    2. '=' → logprob: -3.0485901832580566
    3. '=[' → logprob: -13.423590660095215
    4. ' =[' → logprob: -13.798590660095215
    5. ' ' → logprob: -16.1735897064209
    6. '   ' → logprob: -16.4235897064209
    7. '[' → logprob: -17.0485897064209
    8. '  ' → logprob: -18.5485897064209
    9. '＝' → logprob: -18.7985897064209
    10. '=[]' → logprob: -18.9235897064209

Token 631: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1002088338136673
    2. ' [' → logprob: -2.3502087593078613
    3. '[n' → logprob: -13.22520923614502
    4. '   ' → logprob: -15.85020923614502
    5. '[int' → logprob: -16.225208282470703
    6. ' ' → logprob: -17.850208282470703
    7. '[num' → logprob: -17.975208282470703
    8. '[a' → logprob: -18.225208282470703
    9. '[node' → logprob: -18.725208282470703
    10. '([' → logprob: -18.975208282470703

Token 632: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '000' → logprob: -20.75
    4. '00' → logprob: -20.875
    5. '۰' → logprob: -21.0
    6. '   ' → logprob: -21.25
    7. '```' → logprob: -22.875
    8. '０' → logprob: -23.25
    9. 'int' → logprob: -23.3125
    10. '  ' → logprob: -23.6875

Token 633: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033121041487902403
    2. ' for' → logprob: -6.003312110900879
    3. ' ]' → logprob: -7.628312110900879
    4. ']*(' → logprob: -8.128312110900879
    5. ']+' → logprob: -10.878312110900879
    6. 'for' → logprob: -11.253312110900879
    7. ')' → logprob: -11.503312110900879
    8. ']*' → logprob: -11.878312110900879
    9. ',' → logprob: -12.628312110900879
    10. ' ' → logprob: -13.878312110900879

Token 634: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06196869537234306
    2. ' _' → logprob: -2.8119688034057617
    3. ' i' → logprob: -15.061968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ' range' → logprob: -15.311968803405762
    6. '_range' → logprob: -16.186967849731445
    7. 'range' → logprob: -16.686967849731445
    8. ' ' → logprob: -17.436967849731445
    9. '_i' → logprob: -18.561967849731445
    10. '_=' → logprob: -18.686967849731445

Token 635: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02484104223549366
    2. ' range' → logprob: -3.774841070175171
    3. 'in' → logprob: -6.649840831756592
    4. ' in' → logprob: -8.14984130859375
    5. '_' → logprob: -11.89984130859375
    6. 'ange' → logprob: -13.27484130859375
    7. '(range' → logprob: -13.52484130859375
    8. 'n' → logprob: -15.02484130859375
    9. '_range' → logprob: -15.02484130859375
    10. '	range' → logprob: -15.02484130859375

Token 636: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165511354804039
    2. ' range' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.514165878295898
    4. '(range' → logprob: -15.139165878295898
    5. 'in' → logprob: -15.264165878295898
    6. '_' → logprob: -15.514165878295898
    7. '	range' → logprob: -15.514165878295898
    8. 'ange' → logprob: -15.639165878295898
    9. '   ' → logprob: -16.0141658782959
    10. ' in' → logprob: -16.1391658782959

Token 637: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0023455615155398846
    2. '(' → logprob: -7.002345561981201
    3. 'range' → logprob: -7.627345561981201
    4. ' range' → logprob: -8.002345085144043
    5. ' (' → logprob: -8.252345085144043
    6. 'n' → logprob: -8.627345085144043
    7. '_' → logprob: -9.252345085144043
    8. '(range' → logprob: -10.127345085144043
    9. ' n' → logprob: -11.002345085144043
    10. '   ' → logprob: -12.377345085144043

Token 638: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693965435028076
    2. ' +' → logprob: -2.1269397735595703
    3. '+
' → logprob: -12.25193977355957
    4. ')' → logprob: -13.50193977355957
    5. ')]' → logprob: -13.50193977355957
    6. ' ' → logprob: -13.62693977355957
    7. ' +
' → logprob: -13.75193977355957
    8. '   ' → logprob: -14.50193977355957
    9. '(' → logprob: -14.62693977355957
    10. '＋' → logprob: -16.25193977355957

Token 639: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.625051498413086
    4. '0' → logprob: -16.375051498413086
    5. ')' → logprob: -16.875051498413086
    6. '2' → logprob: -17.625051498413086
    7. '(' → logprob: -18.187551498413086
    8. '=' → logprob: -18.687551498413086
    9. '  ' → logprob: -19.000051498413086
    10. '```' → logprob: -19.125051498413086

Token 640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.250028610229492
    4. '2' → logprob: -16.562528610229492
    5. ')' → logprob: -17.375028610229492
    6. '```' → logprob: -17.562528610229492
    7. '0' → logprob: -17.875028610229492
    8. '  ' → logprob: -17.875028610229492
    9. '１' → logprob: -18.062528610229492
    10. '(' → logprob: -18.187528610229492

Token 641: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3928520977497101
    2. ']' → logprob: -1.1428520679473877
    3. ')' → logprob: -5.142852306365967
    4. ' ]' → logprob: -9.142851829528809
    5. '   ' → logprob: -12.142851829528809
    6. '])' → logprob: -12.767851829528809
    7. ' )' → logprob: -13.142851829528809
    8. ']
' → logprob: -13.392851829528809
    9. ')],' → logprob: -13.642851829528809
    10. '()]' → logprob: -14.017851829528809

Token 642: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2483004927635193
    2. 'for' → logprob: -1.623300552368164
    3. ' for' → logprob: -3.998300552368164
    4. '    
' → logprob: -6.248300552368164
    5. '
' → logprob: -6.623300552368164
    6. '```' → logprob: -7.873300552368164
    7. '	for' → logprob: -8.123300552368164
    8. '<|end|>' → logprob: -8.498300552368164
    9. '  
' → logprob: -9.748300552368164
    10. '  ' → logprob: -10.498300552368164

Token 643: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40280967950820923
    2. '   ' → logprob: -1.1528096199035645
    3. ' for' → logprob: -4.1528096199035645
    4. '	for' → logprob: -9.402810096740723
    5. '    
' → logprob: -11.777810096740723
    6. '```' → logprob: -14.027810096740723
    7. '  ' → logprob: -14.777810096740723
    8. '    ' → logprob: -15.152810096740723
    9. ' ' → logprob: -15.527810096740723
    10. '_for' → logprob: -16.527809143066406

Token 644: ' Lecture' (ID: 106534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.822646693966817e-06
    2. ' for' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.125007629394531
    4. '
' → logprob: -20.00000762939453
    5. '	for' → logprob: -20.00000762939453
    6. '    
' → logprob: -20.50000762939453
    7. '```' → logprob: -20.62500762939453
    8. '#' → logprob: -21.00000762939453
    9. ' ' → logprob: -22.12500762939453
    10. 'For' → logprob: -22.25000762939453

Token 645: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7642635107040405
    2. 'for' → logprob: -1.3892635107040405
    3. ' des' → logprob: -1.7642635107040405
    4. 'des' → logprob: -3.13926362991333
    5. '()' → logprob: -3.51426362991333
    6. ' for' → logprob: -3.51426362991333
    7. ' of' → logprob: -5.01426362991333
    8. 'of' → logprob: -6.38926362991333
    9. '(' → logprob: -7.38926362991333
    10. '_des' → logprob: -8.264263153076172

Token 646: ' application' (ID: 5200)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010891360230743885
    2. 'application' → logprob: -5.135891437530518
    3. ' for' → logprob: -6.135891437530518
    4. 'processing' → logprob: -6.635891437530518
    5. 'apply' → logprob: -7.635891437530518
    6. ' traitement' → logprob: -8.01089096069336
    7. ' application' → logprob: -8.38589096069336
    8. ' processing' → logprob: -9.26089096069336
    9. 'process' → logprob: -9.76089096069336
    10. 'trait' → logprob: -10.01089096069336

Token 647: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2930397093296051
    2. ' des' → logprob: -1.7930396795272827
    3. 'for' → logprob: -2.9180397987365723
    4. ' for' → logprob: -4.168039798736572
    5. 'des' → logprob: -4.418039798736572
    6. ' of' → logprob: -5.918039798736572
    7. '()' → logprob: -6.668039798736572
    8. '(' → logprob: -7.418039798736572
    9. '       ' → logprob: -7.668039798736572
    10. ' de' → logprob: -8.293039321899414

Token 648: ' requ' (ID: 7028)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0580198764801025
    2. 'for' → logprob: -1.3080198764801025
    3. 'queries' → logprob: -1.8080198764801025
    4. ' for' → logprob: -2.3080198764801025
    5. ' q' → logprob: -2.5580198764801025
    6. ' queries' → logprob: -3.9330198764801025
    7. '[' → logprob: -5.308019638061523
    8. '[q' → logprob: -5.308019638061523
    9. 'range' → logprob: -6.058019638061523
    10. 'ranges' → logprob: -6.558019638061523

Token 649: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0019857329316437244
    2. 'etes' → logprob: -6.501985549926758
    3. 'ets' → logprob: -7.876985549926758
    4. 'et' → logprob: -10.126985549926758
    5. 'êts' → logprob: -11.126985549926758
    6. '   ' → logprob: -11.251985549926758
    7. 'q' → logprob: -12.001985549926758
    8. 'ête' → logprob: -12.251985549926758
    9. 'ètes' → logprob: -12.501985549926758
    10. 'êt' → logprob: -12.876985549926758

Token 650: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038364212960004807
    2. 'for' → logprob: -5.628836631774902
    3. ' for' → logprob: -8.378836631774902
    4. '	for' → logprob: -12.753836631774902
    5. '
' → logprob: -13.503836631774902
    6. '    
' → logprob: -13.753836631774902
    7. '<|end|>' → logprob: -14.003836631774902
    8. '```' → logprob: -15.003836631774902
    9. ' ' → logprob: -17.503835678100586
    10. '<|end|>' → logprob: -17.503835678100586

Token 651: ' mise' (ID: 25868)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.440669298171997
    2. ' input' → logprob: -1.440669298171997
    3. ' q' → logprob: -1.815669298171997
    4. 'input' → logprob: -1.940669298171997
    5. 'range' → logprob: -3.065669298171997
    6. ' range' → logprob: -3.315669298171997
    7. 'queries' → logprob: -4.065669059753418
    8. ' propagation' → logprob: -4.190669059753418
    9. '_' → logprob: -4.440669059753418
    10. ' queries' → logprob: -4.565669059753418

Token 652: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.08593388646841049
    2. ' à' → logprob: -2.5859339237213135
    3. '_' → logprob: -6.460933685302734
    4. '```' → logprob: -6.585933685302734
    5. '   ' → logprob: -6.960933685302734
    6. '_a' → logprob: -7.335933685302734
    7. 'aj' → logprob: -7.710933685302734
    8. 'a' → logprob: -7.960933685302734
    9. 'au' → logprob: -8.460933685302734
    10. 'À' → logprob: -8.585933685302734

Token 653: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.000548387470189482
    2. 'jours' → logprob: -8.250548362731934
    3. ' jour' → logprob: -9.000548362731934
    4. 'jou' → logprob: -9.625548362731934
    5. '```' → logprob: -10.250548362731934
    6. 'journ' → logprob: -10.875548362731934
    7. ' ' → logprob: -11.500548362731934
    8. 'Jour' → logprob: -11.750548362731934
    9. 'day' → logprob: -12.500548362731934
    10. '
' → logprob: -12.500548362731934

Token 654: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47226738929748535
    2. 'for' → logprob: -1.3472673892974854
    3. ' for' → logprob: -2.4722673892974854
    4. '
' → logprob: -3.8472673892974854
    5. '    
' → logprob: -4.847267150878906
    6. '  
' → logprob: -6.597267150878906
    7. '	for' → logprob: -7.222267150878906
    8. '   
' → logprob: -7.972267150878906
    9. ' 
' → logprob: -8.347267150878906
    10. ' ' → logprob: -9.597267150878906

Token 655: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004227985627949238
    2. 'for' → logprob: -5.879228115081787
    3. ' for' → logprob: -6.629228115081787
    4. '    
' → logprob: -9.629227638244629
    5. '
' → logprob: -11.004227638244629
    6. '```' → logprob: -11.379227638244629
    7. '	for' → logprob: -12.254227638244629
    8. '  
' → logprob: -14.129227638244629
    9. '<|end|>' → logprob: -14.629227638244629
    10. ' 
' → logprob: -14.879227638244629

Token 656: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06590048968791962
    2. ' for' → logprob: -3.0659005641937256
    3. '   ' → logprob: -4.0659003257751465
    4. '	for' → logprob: -11.690900802612305
    5. '    
' → logprob: -12.440900802612305
    6. '```' → logprob: -13.065900802612305
    7. '
' → logprob: -13.940900802612305
    8. ' 
' → logprob: -14.065900802612305
    9. '  
' → logprob: -15.190900802612305
    10. ' ' → logprob: -15.690900802612305

Token 657: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.4391956685576588e-05
    2. ' _' → logprob: -10.625024795532227
    3. '_in' → logprob: -19.125024795532227
    4. '_i' → logprob: -19.125024795532227
    5. '_range' → logprob: -19.250024795532227
    6. ' in' → logprob: -19.250024795532227
    7. '_=' → logprob: -19.750024795532227
    8. '_

' → logprob: -19.875024795532227
    9. '_
' → logprob: -21.250024795532227
    10. '_s' → logprob: -21.375024795532227

Token 658: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6333168745040894
    2. ' in' → logprob: -0.7583168745040894
    3. ' ' → logprob: -8.008316993713379
    4. 'i' → logprob: -8.883316993713379
    5. 'n' → logprob: -9.008316993713379
    6. 's' → logprob: -9.883316993713379
    7. '_' → logprob: -11.133316993713379
    8. ' i' → logprob: -11.133316993713379
    9. 'range' → logprob: -11.133316993713379
    10. ',' → logprob: -12.008316993713379

Token 659: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.750911712646484
    4. 'in' → logprob: -17.750911712646484
    5. '(range' → logprob: -17.875911712646484
    6. 'ange' → logprob: -18.375911712646484
    7. '	range' → logprob: -18.375911712646484
    8. 'rang' → logprob: -18.875911712646484
    9. 'input' → logprob: -19.000911712646484
    10. 'r' → logprob: -19.500911712646484

Token 660: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.002901997184380889
    2. '(' → logprob: -6.127902030944824
    3. ' (' → logprob: -7.252902030944824
    4. ' q' → logprob: -12.127902030944824
    5. ' range' → logprob: -13.627902030944824
    6. '(range' → logprob: -13.627902030944824
    7. ' ' → logprob: -15.877902030944824
    8. 'q' → logprob: -16.002901077270508
    9. '(Q' → logprob: -16.252901077270508
    10. ',' → logprob: -16.377901077270508

Token 661: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18093350529670715
    2. '):' → logprob: -1.9309334754943848
    3. '):
' → logprob: -4.055933475494385
    4. ' ,' → logprob: -5.930933475494385
    5. ')' → logprob: -8.430933952331543
    6. '   ' → logprob: -8.805933952331543
    7. '):
' → logprob: -10.180933952331543
    8. ' ):' → logprob: -10.180933952331543
    9. '),' → logprob: -10.305933952331543
    10. ':' → logprob: -11.305933952331543

Token 662: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6587913036346436
    2. '   ' → logprob: -1.2837913036346436
    3. '       ' → logprob: -1.7837913036346436
    4. ' a' → logprob: -3.4087913036346436
    5. ',' → logprob: -6.533791542053223
    6. 'x' → logprob: -7.158791542053223
    7. ',a' → logprob: -8.158791542053223
    8. '(a' → logprob: -8.283791542053223
    9. '```' → logprob: -8.533791542053223
    10. ' ' → logprob: -8.658791542053223

Token 663: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.00013619766104966402
    2. ' p' → logprob: -9.000136375427246
    3. 'node' → logprob: -11.750136375427246
    4. 'v' → logprob: -13.250136375427246
    5. '   ' → logprob: -13.500136375427246
    6. 'x' → logprob: -14.625136375427246
    7. 'i' → logprob: -14.750136375427246
    8. '
' → logprob: -15.250136375427246
    9. ' ' → logprob: -15.500136375427246
    10. ' ' → logprob: -16.50013542175293

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001018398441374302
    2. ' ,' → logprob: -7.001018524169922
    3. 'r' → logprob: -11.001018524169922
    4. 's' → logprob: -11.126018524169922
    5. 'os' → logprob: -11.126018524169922
    6. ',v' → logprob: -11.626018524169922
    7. ',k' → logprob: -11.751018524169922
    8. 'osition' → logprob: -11.876018524169922
    9. ',x' → logprob: -12.251018524169922
    10. 'ar' → logprob: -12.626018524169922

Token 665: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000158842682139948
    2. ' x' → logprob: -8.75015926361084
    3. 'val' → logprob: -16.250158309936523
    4. 'v' → logprob: -16.250158309936523
    5. '	x' → logprob: -17.125158309936523
    6. ',x' → logprob: -17.500158309936523
    7. '```' → logprob: -17.625158309936523
    8. '_x' → logprob: -18.000158309936523
    9. ' ' → logprob: -18.125158309936523
    10. '.x' → logprob: -18.625158309936523

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.061967849731445
    4. ')' → logprob: -16.936967849731445
    5. '=input' → logprob: -17.186967849731445
    6. ')=' → logprob: -17.561967849731445
    7. '=int' → logprob: -17.811967849731445
    8. '   ' → logprob: -18.436967849731445
    9. '  ' → logprob: -18.811967849731445
    10. '=line' → logprob: -19.436967849731445

Token 667: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.061967913061380386
    2. ' map' → logprob: -2.8119678497314453
    3. '	map' → logprob: -15.686967849731445
    4. '   ' → logprob: -18.061967849731445
    5. ' ' → logprob: -18.186967849731445
    6. 'm' → logprob: -18.561967849731445
    7. '_map' → logprob: -18.561967849731445
    8. '(map' → logprob: -19.436967849731445
    9. '.map' → logprob: -19.811967849731445
    10. 'list' → logprob: -20.436967849731445

Token 668: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.7491250875755213e-05
    2. 'int' → logprob: -11.000027656555176
    3. '(' → logprob: -11.625027656555176
    4. '=int' → logprob: -14.250027656555176
    5. ',int' → logprob: -14.750027656555176
    6. '<int' → logprob: -15.000027656555176
    7. '[int' → logprob: -16.00002670288086
    8. ' (' → logprob: -16.50002670288086
    9. ':int' → logprob: -17.12502670288086
    10. ']int' → logprob: -17.12502670288086

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16109643876552582
    2. ',input' → logprob: -1.911096453666687
    3. '(input' → logprob: -7.536096572875977
    4. ',int' → logprob: -8.661096572875977
    5. 'input' → logprob: -8.911096572875977
    6. ' ,' → logprob: -11.411096572875977
    7. '(' → logprob: -11.411096572875977
    8. '=input' → logprob: -12.911096572875977
    9. '(int' → logprob: -13.411096572875977
    10. ' input' → logprob: -13.911096572875977

Token 670: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006715370807796717
    2. ' input' → logprob: -5.006715297698975
    3. '(input' → logprob: -21.256715774536133
    4. '=input' → logprob: -21.256715774536133
    5. '	input' → logprob: -22.256715774536133
    6. ',input' → logprob: -22.381715774536133
    7. '_input' → logprob: -22.381715774536133
    8. ' ' → logprob: -22.506715774536133
    9. '<input' → logprob: -22.631715774536133
    10. 'int' → logprob: -22.881715774536133

Token 671: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.650518920039758e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -16.375003814697266
    4. ')' → logprob: -16.500003814697266
    5. '(' → logprob: -16.750003814697266
    6. '()
' → logprob: -17.625003814697266
    7. '())' → logprob: -17.750003814697266
    8. '()[' → logprob: -18.500003814697266
    9. '.split' → logprob: -18.750003814697266
    10. '().
' → logprob: -19.125003814697266

Token 672: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.375000953674316
    3. '(split' → logprob: -15.875000953674316
    4. 'strip' → logprob: -16.5
    5. 'spl' → logprob: -17.75
    6. ')' → logprob: -18.625
    7. '.split' → logprob: -19.25
    8. 'plit' → logprob: -19.375
    9. 'rstrip' → logprob: -20.75
    10. '_split' → logprob: -20.875

Token 673: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789046585559845
    2. ')
' → logprob: -2.578904628753662
    3. ')
' → logprob: -11.45390510559082
    4. '()' → logprob: -13.20390510559082
    5. ')`
' → logprob: -14.20390510559082
    6. ')`' → logprob: -14.70390510559082
    7. ' )' → logprob: -15.45390510559082
    8. '())
' → logprob: -15.57890510559082
    9. '())' → logprob: -15.70390510559082
    10. ')

' → logprob: -16.07890510559082

Token 674: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5275775194168091
    2. '       ' → logprob: -0.9025775194168091
    3. '    
' → logprob: -6.5275774002075195
    4. '  
' → logprob: -7.0275774002075195
    5. '        
' → logprob: -7.0275774002075195
    6. '
' → logprob: -8.65257740020752
    7. 'cnt' → logprob: -8.77757740020752
    8. ' ' → logprob: -8.90257740020752
    9. '   
' → logprob: -8.90257740020752
    10. '  ' → logprob: -9.02757740020752

Token 675: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.05241619050502777
    2. '       ' → logprob: -3.0524160861968994
    3. '   ' → logprob: -5.8024163246154785
    4. ' cnt' → logprob: -7.1774163246154785
    5. '	cnt' → logprob: -10.80241584777832
    6. ' ' → logprob: -12.55241584777832
    7. 'count' → logprob: -12.67741584777832
    8. '[cnt' → logprob: -13.30241584777832
    9. '      ' → logprob: -13.55241584777832
    10. '(cnt' → logprob: -13.67741584777832

Token 676: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. ' [' → logprob: -19.250001907348633
    4. 'p' → logprob: -19.250001907348633
    5. '[P' → logprob: -20.250001907348633
    6. '[c' → logprob: -20.875001907348633
    7. '[
' → logprob: -22.125001907348633
    8. '```' → logprob: -22.375001907348633
    9. '	p' → logprob: -22.625001907348633
    10. '[i' → logprob: -22.750001907348633

Token 677: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001933873863890767
    2. ']+=' → logprob: -6.251934051513672
    3. ')' → logprob: -13.001934051513672
    4. ' ]' → logprob: -13.251934051513672
    5. '+=' → logprob: -14.001934051513672
    6. '[' → logprob: -15.501934051513672
    7. '   ' → logprob: -16.376934051513672
    8. ']+' → logprob: -16.876934051513672
    9. ' +=' → logprob: -17.126934051513672
    10. '+]' → logprob: -17.251934051513672

Token 678: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003178901970386505
    2. ' +=' → logprob: -5.75317907333374
    3. ']+=' → logprob: -13.753178596496582
    4. '+' → logprob: -17.0031795501709
    5. '=' → logprob: -18.3781795501709
    6. '+=(' → logprob: -19.5031795501709
    7. '   ' → logprob: -19.8781795501709
    8. '+="' → logprob: -19.8781795501709
    9. '+='' → logprob: -20.0031795501709
    10. '[' → logprob: -21.2531795501709

Token 679: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -21.875335693359375
    4. '$x' → logprob: -25.875335693359375
    5. '   ' → logprob: -26.125335693359375
    6. ' ' → logprob: -26.750335693359375
    7. ')x' → logprob: -27.000335693359375
    8. '_x' → logprob: -27.000335693359375
    9. '"x' → logprob: -27.250335693359375
    10. '(x' → logprob: -27.500335693359375

Token 680: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09363602101802826
    2. '
' → logprob: -2.5936360359191895
    3. '    
' → logprob: -4.8436360359191895
    4. '<|end|>' → logprob: -5.0936360359191895
    5. '  
' → logprob: -7.7186360359191895
    6. '   
' → logprob: -10.343635559082031
    7. ' 
' → logprob: -10.343635559082031
    8. '        
' → logprob: -10.468635559082031
    9. '<|end|>' → logprob: -10.968635559082031
    10. '
' → logprob: -11.093635559082031

Token 681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010719647631049156
    2. 'prop' → logprob: -4.8857197761535645
    3. '```' → logprob: -6.6357197761535645
    4. '
' → logprob: -6.8857197761535645
    5. '    
' → logprob: -7.6357197761535645
    6. '  
' → logprob: -10.135719299316406
    7. 'tree' → logprob: -10.385719299316406
    8. ' ' → logprob: -10.385719299316406
    9. ' for' → logprob: -10.510719299316406
    10. '  ' → logprob: -10.510719299316406

Token 682: ' #' (ID: 1069)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.28269293904304504
    2. '   ' → logprob: -1.4076929092407227
    3. ' cnt' → logprob: -6.907692909240723
    4. 'updated' → logprob: -9.032692909240723
    5. 'count' → logprob: -9.282692909240723
    6. '```' → logprob: -9.532692909240723
    7. '    
' → logprob: -9.907692909240723
    8. 'result' → logprob: -9.907692909240723
    9. 'prop' → logprob: -9.907692909240723
    10. 'counter' → logprob: -10.282692909240723

Token 683: ' Prop' (ID: 12978)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.012347174808382988
    2. 'prop' → logprob: -4.637347221374512
    3. 'result' → logprob: -6.887347221374512
    4. '#' → logprob: -7.762347221374512
    5. 'updated' → logprob: -7.762347221374512
    6. 'counts' → logprob: -8.262347221374512
    7. 'res' → logprob: -8.762347221374512
    8. 'new' → logprob: -9.137347221374512
    9. '   ' → logprob: -9.387347221374512
    10. 'count' → logprob: -10.012347221374512

Token 684: 'agation' (ID: 53023)
  Prédit: 'agate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'agate' → logprob: -0.0006920627201907337
    2. 'ag' → logprob: -7.750691890716553
    3. 'og' → logprob: -8.500692367553711
    4. '   ' → logprob: -10.000692367553711
    5. 'agat' → logprob: -12.375692367553711
    6. 'er' → logprob: -13.000692367553711
    7. 'igate' → logprob: -13.375692367553711
    8. 'agte' → logprob: -14.125692367553711
    9. 'agg' → logprob: -14.250692367553711
    10. 'ate' → logprob: -14.375692367553711

Token 685: ' des' (ID: 731)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.11829584836959839
    2. '   ' → logprob: -2.743295907974243
    3. 'counts' → logprob: -3.743295907974243
    4. 'cnt' → logprob: -4.118295669555664
    5. '(cnt' → logprob: -5.743295669555664
    6. '(' → logprob: -6.868295669555664
    7. 'des' → logprob: -7.243295669555664
    8. '_cnt' → logprob: -7.243295669555664
    9. '_' → logprob: -7.993295669555664
    10. '_results' → logprob: -8.868295669555664

Token 686: ' valeurs' (ID: 73668)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4870573580265045
    2. 'counts' → logprob: -0.9870573282241821
    3. '_counts' → logprob: -4.362057209014893
    4. '_cnt' → logprob: -10.11205768585205
    5. ' counts' → logprob: -10.11205768585205
    6. 'Counts' → logprob: -10.48705768585205
    7. ' cnt' → logprob: -11.11205768585205
    8. 'count' → logprob: -11.11205768585205
    9. 'c' → logprob: -13.86205768585205
    10. '_' → logprob: -13.98705768585205

Token 687: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012622426263988018
    2. 'cnt' → logprob: -4.887622356414795
    3. '(cnt' → logprob: -6.637622356414795
    4. ' cnt' → logprob: -6.762622356414795
    5. ' =' → logprob: -7.137622356414795
    6. ',' → logprob: -7.387622356414795
    7. '(' → logprob: -7.637622356414795
    8. '=' → logprob: -8.637622833251953
    9. '(n' → logprob: -9.137622833251953
    10. 'result' → logprob: -9.762622833251953

Token 688: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035482268780469894
    2. 'la' → logprob: -4.160482406616211
    3. 'the' → logprob: -4.410482406616211
    4. ' la' → logprob: -5.910482406616211
    5. 'l' → logprob: -6.660482406616211
    6. ' ' → logprob: -6.785482406616211
    7. 'tree' → logprob: -7.535482406616211
    8. ' the' → logprob: -7.910482406616211
    9. 'root' → logprob: -8.160482406616211
    10. '<|end|>' → logprob: -8.410482406616211

Token 689: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.03408072516322136
    2. 'root' → logprob: -3.534080743789673
    3. '1' → logprob: -5.909080505371094
    4. ' rac' → logprob: -6.534080505371094
    5. 'som' → logprob: -9.159080505371094
    6. 'node' → logprob: -11.534080505371094
    7. 'prem' → logprob: -11.909080505371094
    8. 'source' → logprob: -12.534080505371094
    9. ' ' → logprob: -12.784080505371094
    10. '```' → logprob: -12.909080505371094

Token 690: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -2.3676733690081164e-05
    2. '1' → logprob: -11.25002384185791
    3. 'i' → logprob: -12.62502384185791
    4. '```' → logprob: -13.00002384185791
    5. '   ' → logprob: -13.62502384185791
    6. '
' → logprob: -13.75002384185791
    7. '``' → logprob: -14.75002384185791
    8. 'e' → logprob: -14.87502384185791
    9. '=' → logprob: -15.00002384185791
    10. '>' → logprob: -15.00002384185791

Token 691: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028648413717746735
    2. 'cnt' → logprob: -8.750286102294922
    3. ' cnt' → logprob: -9.500286102294922
    4. '
' → logprob: -10.250286102294922
    5. '    
' → logprob: -12.375286102294922
    6. 'result' → logprob: -13.125286102294922
    7. '```' → logprob: -13.125286102294922
    8. '(cnt' → logprob: -13.250286102294922
    9. ' result' → logprob: -13.750286102294922
    10. 'count' → logprob: -14.125286102294922

Token 692: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.09911103546619415
    2. 'le' → logprob: -3.4741110801696777
    3. 'all' → logprob: -4.224111080169678
    4. 't' → logprob: -4.349111080169678
    5. ' les' → logprob: -4.349111080169678
    6. '1' → logprob: -4.599111080169678
    7. 'l' → logprob: -5.099111080169678
    8. 'la' → logprob: -5.349111080169678
    9. 's' → logprob: -8.09911060333252
    10. ' tous' → logprob: -8.22411060333252

Token 693: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.007493284996598959
    2. 'les' → logprob: -5.007493495941162
    3. '   ' → logprob: -7.507493495941162
    4. '<|end|>' → logprob: -8.882493019104004
    5. 'es' → logprob: -10.507493019104004
    6. ' ' → logprob: -11.257493019104004
    7. 's' → logprob: -11.507493019104004
    8. 'Les' → logprob: -11.757493019104004
    9. '```' → logprob: -12.507493019104004
    10. '       ' → logprob: -12.632493019104004

Token 694: ' somm' (ID: 44830)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.2025548219680786
    2. 'som' → logprob: -1.3275548219680786
    3. 'vo' → logprob: -1.5775548219680786
    4. 's' → logprob: -1.5775548219680786
    5. ' somm' → logprob: -4.952554702758789
    6. ' noe' → logprob: -5.577554702758789
    7. 'n' → logprob: -5.952554702758789
    8. ' voisins' → logprob: -5.952554702758789
    9. 'nodes' → logprob: -6.077554702758789
    10. 'adj' → logprob: -6.827554702758789

Token 695: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.00015205175441224128
    2. 'mets' → logprob: -8.875151634216309
    3. 'êts' → logprob: -12.750151634216309
    4. 'è' → logprob: -13.000151634216309
    5. '```' → logprob: -13.375151634216309
    6. 'et' → logprob: -14.125151634216309
    7. '`' → logprob: -14.750151634216309
    8. 'e' → logprob: -14.750151634216309
    9. '#' → logprob: -14.875151634216309
    10. 'met' → logprob: -14.875151634216309

Token 696: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019771684892475605
    2. 'cnt' → logprob: -6.62697696685791
    3. ' cnt' → logprob: -7.75197696685791
    4. '
' → logprob: -9.00197696685791
    5. '    
' → logprob: -10.37697696685791
    6. 'result' → logprob: -10.87697696685791
    7. ' result' → logprob: -11.50197696685791
    8. '```' → logprob: -11.50197696685791
    9. 'final' → logprob: -12.50197696685791
    10. '	cnt' → logprob: -12.50197696685791

Token 697: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03451995551586151
    2. ' l' → logprob: -3.409519910812378
    3. 'the' → logprob: -8.159520149230957
    4. '1' → logprob: -8.284520149230957
    5. ' the' → logprob: -8.534520149230957
    6. ' ' → logprob: -10.034520149230957
    7. 'tree' → logprob: -10.409520149230957
    8. '```' → logprob: -10.534520149230957
    9. ' la' → logprob: -11.159520149230957
    10. 'la' → logprob: -11.534520149230957

Token 698: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.25259149074554443
    2. ''ar' → logprob: -1.5025914907455444
    3. 'arb' → logprob: -7.877591609954834
    4. ' arbre' → logprob: -8.377591133117676
    5. '’ar' → logprob: -11.502591133117676
    6. 'a' → logprob: -11.752591133117676
    7. '_ar' → logprob: -11.752591133117676
    8. '39' → logprob: -12.377591133117676
    9. ''' → logprob: -12.877591133117676
    10. ''ab' → logprob: -13.002591133117676

Token 699: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -5.676981345459353e-06
    2. 'e' → logprob: -12.500005722045898
    3. 'Bre' → logprob: -14.500005722045898
    4. ' bre' → logprob: -14.500005722045898
    5. 'bo' → logprob: -14.875005722045898
    6. 'b' → logprob: -15.625005722045898
    7. 'ble' → logprob: -15.625005722045898
    8. '```' → logprob: -17.0000057220459
    9. 'BRE' → logprob: -17.7500057220459
    10. '
' → logprob: -17.7500057220459

Token 700: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019882326014339924
    2. '
' → logprob: -7.126988410949707
    3. 'cnt' → logprob: -7.126988410949707
    4. ' cnt' → logprob: -8.376988410949707
    5. '    
' → logprob: -9.626988410949707
    6. 'result' → logprob: -10.376988410949707
    7. '```' → logprob: -11.376988410949707
    8. ' result' → logprob: -11.626988410949707
    9. 'final' → logprob: -12.126988410949707
    10. ' propagated' → logprob: -12.876988410949707

Token 701: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004665680229663849
    2. 'cnt' → logprob: -5.879665851593018
    3. ' cnt' → logprob: -6.754665851593018
    4. 'result' → logprob: -7.879665851593018
    5. ' result' → logprob: -9.37966537475586
    6. 'final' → logprob: -9.75466537475586
    7. 'prop' → logprob: -10.12966537475586
    8. ' propagated' → logprob: -10.50466537475586
    9. ' final' → logprob: -10.87966537475586
    10. 'counts' → logprob: -11.50466537475586

Token 702: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.26726922392845154
    2. 'prop' → logprob: -2.0172691345214844
    3. '   ' → logprob: -3.2672691345214844
    4. ' cnt' → logprob: -3.6422691345214844
    5. 'result' → logprob: -3.8922691345214844
    6. 'res' → logprob: -5.392269134521484
    7. ' propagated' → logprob: -5.767269134521484
    8. 'final' → logprob: -6.017269134521484
    9. 'updated' → logprob: -6.142269134521484
    10. 'counts' → logprob: -6.517269134521484

Token 703: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687655329704285
    2. '=' → logprob: -1.1368765830993652
    3. ',' → logprob: -12.261876106262207
    4. ')' → logprob: -16.136877059936523
    5. '＝' → logprob: -16.261877059936523
    6. '[' → logprob: -16.511877059936523
    7. '   ' → logprob: -16.636877059936523
    8. 'final' → logprob: -16.761877059936523
    9. '[:]' → logprob: -16.886877059936523
    10. '=p' → logprob: -17.261877059936523

Token 704: ' propagate' (ID: 125190)
  Prédit: 'prop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prop' → logprob: -1.700132997939363e-05
    2. ' propagate' → logprob: -11.000017166137695
    3. 'pro' → logprob: -15.500017166137695
    4. 'populate' → logprob: -18.500017166137695
    5. 'Prop' → logprob: -19.125017166137695
    6. '   ' → logprob: -20.125017166137695
    7. '```' → logprob: -22.000017166137695
    8. 'pass' → logprob: -22.625017166137695
    9. 'persist' → logprob: -22.625017166137695
    10. 'prove' → logprob: -22.625017166137695

Token 705: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. 'counts' → logprob: -18.375
    4. '\' → logprob: -19.5
    5. 's' → logprob: -19.5
    6. '_cost' → logprob: -19.875
    7. '`' → logprob: -20.0
    8. '_codes' → logprob: -20.0
    9. 'Counts' → logprob: -20.25
    10. '_' → logprob: -20.25

Token 706: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -13.625011444091797
    4. '```' → logprob: -15.000011444091797
    5. '(len' → logprob: -17.750011444091797
    6. '   ' → logprob: -17.875011444091797
    7. 'n' → logprob: -17.875011444091797
    8. ',n' → logprob: -18.125011444091797
    9. '(
' → logprob: -18.250011444091797
    10. ',' → logprob: -18.750011444091797

Token 707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',n' → logprob: -14.750004768371582
    4. ',
' → logprob: -15.375004768371582
    5. '(tree' → logprob: -16.6250057220459
    6. ')' → logprob: -17.0000057220459
    7. '(' → logprob: -17.3750057220459
    8. '```' → logprob: -17.3750057220459
    9. '(n' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.3750057220459

Token 708: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0031777136027812958
    2. ' tree' → logprob: -5.753177642822266
    3. '	tree' → logprob: -17.128177642822266
    4. '(tree' → logprob: -17.878177642822266
    5. 'Tree' → logprob: -20.378177642822266
    6. 't' → logprob: -20.503177642822266
    7. '.tree' → logprob: -20.503177642822266
    8. '_tree' → logprob: -20.628177642822266
    9. '/tree' → logprob: -20.878177642822266
    10. '-tree' → logprob: -21.003177642822266

Token 709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',n' → logprob: -16.000003814697266
    4. ',
' → logprob: -16.375003814697266
    5. ')' → logprob: -16.375003814697266
    6. ',c' → logprob: -16.750003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '```' → logprob: -19.500003814697266
    9. '‌,' → logprob: -19.500003814697266
    10. ',count' → logprob: -19.625003814697266

Token 710: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -9.65101717156358e-05
    2. ' cnt' → logprob: -9.250096321105957
    3. '(cnt' → logprob: -15.875096321105957
    4. 'count' → logprob: -16.375097274780273
    5. '	cnt' → logprob: -17.375097274780273
    6. '[cnt' → logprob: -18.250097274780273
    7. 'ct' → logprob: -19.000097274780273
    8. '   ' → logprob: -19.250097274780273
    9. 'c' → logprob: -19.500097274780273
    10. '_cnt' → logprob: -19.625097274780273

Token 711: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3140657842159271
    2. '   ' → logprob: -1.3140658140182495
    3. '
' → logprob: -9.064065933227539
    4. ')

' → logprob: -9.189065933227539
    5. ')
' → logprob: -9.314065933227539
    6. '```' → logprob: -9.439065933227539
    7. '    
' → logprob: -9.564065933227539
    8. '(' → logprob: -9.689065933227539
    9. '<|end|>' → logprob: -9.689065933227539
    10. '

' → logprob: -9.939065933227539

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019882326014339924
    2. '```' → logprob: -6.501988410949707
    3. 'for' → logprob: -8.001988410949707
    4. ' for' → logprob: -9.001988410949707
    5. '
' → logprob: -10.751988410949707
    6. 'print' → logprob: -12.251988410949707
    7. '``' → logprob: -14.251988410949707
    8. '    
' → logprob: -14.376988410949707
    9. ' print' → logprob: -14.751988410949707
    10. '	for' → logprob: -18.25198745727539

Token 713: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16112078726291656
    2. '   ' → logprob: -1.9111207723617554
    3. 'print' → logprob: -7.411120891571045
    4. ' for' → logprob: -8.286120414733887
    5. '```' → logprob: -10.411120414733887
    6. '
' → logprob: -11.661120414733887
    7. '	for' → logprob: -14.661120414733887
    8. '    
' → logprob: -15.036120414733887
    9. '``' → logprob: -16.161121368408203
    10. '#' (adapté à ' #') → logprob: -16.286121368408203

Token 714: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2016073614358902
    2. 'for' → logprob: -1.701607346534729
    3. '   ' → logprob: -8.701607704162598
    4. ' for' → logprob: -11.076607704162598
    5. ' print' → logprob: -11.326607704162598
    6. '#' → logprob: -16.32660675048828
    7. '```' → logprob: -17.32660675048828
    8. 'return' → logprob: -17.70160675048828
    9. '    
' → logprob: -17.82660675048828
    10. '
' → logprob: -17.95160675048828

Token 715: 'ichage' (ID: 118475)
  Prédit: 'ich'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.5656799077987671
    2. 'icher' → logprob: -1.565679907798767
    3. 'iche' → logprob: -1.690679907798767
    4. 'ichage' → logprob: -4.065680027008057
    5. 'ic' → logprob: -4.315680027008057
    6. 'print' → logprob: -5.315680027008057
    7. '   ' → logprob: -5.940680027008057
    8. ' print' → logprob: -8.315679550170898
    9. '#' → logprob: -8.815679550170898
    10. '_print' → logprob: -10.065679550170898

Token 716: ' de' (ID: 334)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4485286772251129
    2. '(*' → logprob: -1.3235286474227905
    3. '("' → logprob: -2.57352876663208
    4. '(' → logprob: -4.69852876663208
    5. '   ' → logprob: -4.69852876663208
    6. '(*(' → logprob: -8.073528289794922
    7. '('\' → logprob: -8.823528289794922
    8. '()
' → logprob: -9.448528289794922
    9. '(
' → logprob: -9.823528289794922
    10. '()' → logprob: -9.823528289794922

Token 717: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.048747580498456955
    2. '"' → logprob: -3.0487475395202637
    3. ' '' → logprob: -9.548748016357422
    4. '*' → logprob: -10.048748016357422
    5. 'print' → logprob: -10.923748016357422
    6. ' "' → logprob: -12.173748016357422
    7. '(' → logprob: -12.423748016357422
    8. ''s' → logprob: -12.548748016357422
    9. '   ' → logprob: -12.673748016357422
    10. '(*' → logprob: -12.673748016357422

Token 718: ' valeur' (ID: 41664)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05276523157954216
    2. 'print' → logprob: -3.427765130996704
    3. 'cnt' → logprob: -4.677765369415283
    4. '"' → logprob: -4.927765369415283
    5. 'result' → logprob: -7.052765369415283
    6. ' '' → logprob: -7.427765369415283
    7. ''s' → logprob: -8.427764892578125
    8. ' print' → logprob: -8.802764892578125
    9. '*' → logprob: -9.052764892578125
    10. 'count' → logprob: -9.427764892578125

Token 719: ' finale' (ID: 37759)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06857582926750183
    2. '(' → logprob: -3.568575859069824
    3. '   ' → logprob: -3.943575859069824
    4. 'for' → logprob: -4.568575859069824
    5. ' for' → logprob: -5.443575859069824
    6. '[' → logprob: -6.443575859069824
    7. ' s' → logprob: -7.943575859069824
    8. '('' → logprob: -7.943575859069824
    9. ' =' → logprob: -8.193575859069824
    10. 'cnt' → logprob: -8.693575859069824

Token 720: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060115355998277664
    2. '('' → logprob: -3.435115337371826
    3. 'for' → logprob: -4.560115337371826
    4. '(' → logprob: -4.935115337371826
    5. 'print' → logprob: -5.560115337371826
    6. '("' → logprob: -5.935115337371826
    7. '(*' → logprob: -6.560115337371826
    8. ' for' → logprob: -8.560115814208984
    9. '()
' → logprob: -9.310115814208984
    10. '```' → logprob: -9.435115814208984

Token 721: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01818283461034298
    2. ' i' → logprob: -4.018182754516602
    3. '_' → logprob: -11.268182754516602
    4. '_i' → logprob: -11.393182754516602
    5. '1' → logprob: -11.768182754516602
    6. ' ' → logprob: -15.393182754516602
    7. 'v' → logprob: -15.393182754516602
    8. 's' → logprob: -15.518182754516602
    9. '(i' → logprob: -16.0181827545166
    10. '	i' → logprob: -16.1431827545166

Token 722: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06256616115570068
    2. ' i' → logprob: -2.8125662803649902
    3. ' sommet' → logprob: -7.93756628036499
    4. 'som' → logprob: -9.187565803527832
    5. ' node' → logprob: -9.812565803527832
    6. 'node' → logprob: -10.562565803527832
    7. ' som' → logprob: -10.687565803527832
    8. 'vertex' → logprob: -11.562565803527832
    9. ' vertex' → logprob: -12.187565803527832
    10. 'v' → logprob: -12.187565803527832

Token 723: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00047487911069765687
    2. ' for' → logprob: -8.25047492980957
    3. 'for' → logprob: -8.75047492980957
    4. '
' → logprob: -9.87547492980957
    5. '    
' → logprob: -13.12547492980957
    6. '```' → logprob: -13.62547492980957
    7. '	for' → logprob: -15.87547492980957
    8. '(' → logprob: -16.25047492980957
    9. '       ' → logprob: -16.87547492980957
    10. ',' → logprob: -17.00047492980957

Token 724: 'en' (ID: 262)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2443711906671524
    2. 'i' → logprob: -1.6193711757659912
    3. ' range' → logprob: -4.49437141418457
    4. ' for' → logprob: -5.49437141418457
    5. '   ' → logprob: -7.11937141418457
    6. '1' → logprob: -7.24437141418457
    7. 'range' → logprob: -7.24437141418457
    8. 'for' → logprob: -7.49437141418457
    9. ' print' → logprob: -8.74437141418457
    10. 'print' → logprob: -8.74437141418457

Token 725: ' ignorant' (ID: 89043)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31335529685020447
    2. 'range' → logprob: -1.3133553266525269
    3. '   ' → logprob: -9.813355445861816
    4. ')' → logprob: -10.563355445861816
    5. 'print' → logprob: -12.688355445861816
    6. ' ' → logprob: -13.188355445861816
    7. 'for' → logprob: -13.313355445861816
    8. 'space' → logprob: -13.688355445861816
    9. '```' → logprob: -13.688355445861816
    10. '(range' → logprob: -13.813355445861816

Token 726: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5656898021697998
    2. ' range' → logprob: -1.1906898021697998
    3. 'range' → logprob: -2.1906898021698
    4. '1' → logprob: -4.565690040588379
    5. ' ' → logprob: -5.565690040588379
    6. '   ' → logprob: -6.690690040588379
    7. ' la' → logprob: -7.815690040588379
    8. 'le' → logprob: -10.190690040588379
    9. '[' → logprob: -10.315690040588379
    10. ' l' → logprob: -10.315690040588379

Token 727: ''ind' (ID: 82245)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0791751891374588
    2. '[' → logprob: -3.2041752338409424
    3. 'range' → logprob: -3.9541752338409424
    4. '0' → logprob: -4.954174995422363
    5. '1' → logprob: -4.954174995422363
    6. ' ' → logprob: -6.954174995422363
    7. ' i' → logprob: -8.079174995422363
    8. 'i' → logprob: -8.454174995422363
    9. '   ' → logprob: -8.579174995422363
    10. 'e' → logprob: -8.704174995422363

Token 728: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0010993726318702102
    2. '0' → logprob: -7.501099586486816
    3. 'ice' → logprob: -8.001099586486816
    4. 'e' → logprob: -8.626099586486816
    5. '[' → logprob: -11.751099586486816
    6. 'é' → logprob: -11.876099586486816
    7. 'i' → logprob: -11.876099586486816
    8. 'exe' → logprob: -12.626099586486816
    9. '1' → logprob: -13.501099586486816
    10. 'eks' → logprob: -13.876099586486816

Token 729: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061972957104444504
    2. ' ' → logprob: -2.8119728565216064
    3. '[' → logprob: -13.186972618103027
    4. '=' → logprob: -13.561972618103027
    5. '1' → logprob: -14.061972618103027
    6. ' zero' → logprob: -14.936972618103027
    7. ' =' → logprob: -15.436972618103027
    8. ' ' → logprob: -15.561972618103027
    9. '`' → logprob: -16.061973571777344
    10. ' zéro' → logprob: -16.061973571777344

Token 730: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006100255064666271
    2. ' ' → logprob: -5.131100177764893
    3. '1' → logprob: -8.88110065460205
    4. '[' → logprob: -10.88110065460205
    5. ',' → logprob: -12.50610065460205
    6. '   ' → logprob: -12.75610065460205
    7. '=' → logprob: -13.50610065460205
    8. '
' → logprob: -13.88110065460205
    9. '```' → logprob: -14.00610065460205
    10. '`' → logprob: -14.25610065460205

Token 731: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6169036030769348
    2. '   ' → logprob: -0.8669036030769348
    3. ')
' → logprob: -3.86690354347229
    4. ',' → logprob: -3.99190354347229
    5. '[' → logprob: -8.616903305053711
    6. ' ,' → logprob: -9.366903305053711
    7. '1' → logprob: -9.491903305053711
    8. ',
' → logprob: -9.491903305053711
    9. ' )' → logprob: -9.491903305053711
    10. 'for' → logprob: -9.866903305053711

Token 732: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009163398644886911
    2. 'for' → logprob: -7.250916481018066
    3. ' for' → logprob: -8.500916481018066
    4. '```' → logprob: -12.750916481018066
    5. '
' → logprob: -15.875916481018066
    6. '    
' → logprob: -18.50091552734375
    7. '	for' → logprob: -18.50091552734375
    8. '``' → logprob: -18.62591552734375
    9. '       ' → logprob: -18.75091552734375
    10. '`' → logprob: -20.37591552734375

Token 733: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006094808224588633
    2. ' for' → logprob: -5.506094932556152
    3. '   ' → logprob: -6.256094932556152
    4. 'print' (adapté à ' print') → logprob: -9.256094932556152
    5. ' print' → logprob: -15.881094932556152
    6. '	for' → logprob: -17.756093978881836
    7. '```' → logprob: -19.381093978881836
    8. '
' → logprob: -21.381093978881836
    9. '_for' → logprob: -21.631093978881836
    10. 'For' → logprob: -21.756093978881836

Token 734: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.010208014398813248
    2. '(' → logprob: -4.6352081298828125
    3. '(*(' → logprob: -8.385208129882812
    4. '('' → logprob: -8.760208129882812
    5. '("' → logprob: -9.885208129882812
    6. '(*)' → logprob: -11.760208129882812
    7. '()' → logprob: -12.635208129882812
    8. ' (*' → logprob: -13.385208129882812
    9. '((*' → logprob: -13.760208129882812
    10. '('\' → logprob: -13.885208129882812

Token 735: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -4.320199877838604e-07
    2. ' cnt' → logprob: -15.25
    3. '(cnt' → logprob: -16.375
    4. '	cnt' → logprob: -18.75
    5. '[cnt' → logprob: -19.0
    6. 'cn' → logprob: -20.125
    7. '_cnt' → logprob: -21.625
    8. 'c' → logprob: -21.875
    9. '   ' → logprob: -21.875
    10. 'count' → logprob: -22.875

Token 736: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.500000953674316
    3. ' [' → logprob: -19.0
    4. ')' → logprob: -19.25
    5. '```' → logprob: -19.5
    6. '(' → logprob: -19.75
    7. '   ' → logprob: -21.375
    8. ')[' → logprob: -21.375
    9. '2' → logprob: -21.5
    10. '[
' → logprob: -21.75

Token 737: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '
' → logprob: -20.25
    4. '   ' → logprob: -20.375
    5. '１' → logprob: -21.625
    6. '```' → logprob: -22.875
    7. '۱' → logprob: -23.375
    8. ':' → logprob: -23.625
    9. '

' → logprob: -24.0
    10. '১' → logprob: -24.75

Token 738: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.273621405242011e-05
    2. ':],' → logprob: -11.000032424926758
    3. ':]' → logprob: -11.375032424926758
    4. '])' → logprob: -12.875032424926758
    5. ':])
' → logprob: -13.750032424926758
    6. ':)' → logprob: -14.875032424926758
    7. ' :' → logprob: -15.000032424926758
    8. ':].' → logprob: -16.125032424926758
    9. ':end' → logprob: -16.500032424926758
    10. '1' → logprob: -18.250032424926758

Token 739: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -9.610702363715973e-06
    2. ')' → logprob: -12.500009536743164
    3. '],' → logprob: -13.000009536743164
    4. ' ])' → logprob: -13.000009536743164
    5. ']' → logprob: -13.750009536743164
    6. '])
' → logprob: -16.750009536743164
    7. ')])' → logprob: -17.375009536743164
    8. ''])' → logprob: -17.750009536743164
    9. ')]' → logprob: -18.250009536743164
    10. ']])' → logprob: -18.500009536743164

Token 740: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012720365077257156
    2. '__' → logprob: -4.387720584869385
    3. '_' → logprob: -8.887720108032227
    4. ' _' → logprob: -9.887720108032227
    5. ' ' → logprob: -12.012720108032227
    6. ' ' → logprob: -12.262720108032227
    7. ' ___' → logprob: -12.637720108032227
    8. '___' → logprob: -13.137720108032227
    9. '_name' → logprob: -13.887720108032227
    10. '  ' → logprob: -13.887720108032227

Token 742: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08021058142185211
    2. ' ==' → logprob: -2.7052106857299805
    3. '==' → logprob: -4.8302106857299805
    4. ' __' → logprob: -6.4552106857299805
    5. '.__' → logprob: -8.20521068572998
    6. '=="' → logprob: -9.33021068572998
    7. '[' → logprob: -9.33021068572998
    8. '_' → logprob: -9.70521068572998
    9. '__[' → logprob: -10.58021068572998
    10. '__.' → logprob: -10.70521068572998

Token 743: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. '__.__' → logprob: -13.25000286102295
    3. '==' → logprob: -14.62500286102295
    4. '__.' → logprob: -16.250001907348633
    5. '____' → logprob: -17.000001907348633
    6. '___' → logprob: -17.125001907348633
    7. ' ==' → logprob: -17.500001907348633
    8. '__["' → logprob: -18.000001907348633
    9. '_' → logprob: -18.250001907348633
    10. '__
' → logprob: -18.750001907348633

Token 744: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8634682297706604
    2. '__' → logprob: -0.8634682297706604
    3. ' ==' → logprob: -1.8634681701660156
    4. '=="' → logprob: -6.613468170166016
    5. '=='' → logprob: -9.488468170166016
    6. '=' → logprob: -10.613468170166016
    7. '_' → logprob: -11.988468170166016
    8. '"' → logprob: -12.238468170166016
    9. '==
' → logprob: -12.613468170166016
    10. '===' → logprob: -12.863468170166016

Token 745: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04862154647707939
    2. ''' → logprob: -3.048621654510498
    3. '__' → logprob: -10.54862117767334
    4. ' "__' → logprob: -11.79862117767334
    5. ' '__' → logprob: -15.04862117767334
    6. ''"' → logprob: -17.173622131347656
    7. '"user' → logprob: -17.423622131347656
    8. '   ' → logprob: -17.548622131347656
    9. '"name' → logprob: -17.548622131347656
    10. '"'' → logprob: -18.048622131347656

Token 746: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.682846287731081e-05
    2. 'name' → logprob: -10.000066757202148
    3. '__' → logprob: -10.875066757202148
    4. '"' → logprob: -13.500066757202148
    5. ''' → logprob: -14.500066757202148
    6. ' main' → logprob: -15.375066757202148
    7. '_main' → logprob: -16.00006675720215
    8. 'built' → logprob: -16.37506675720215
    9. '(main' → logprob: -17.75006675720215
    10. 'python' → logprob: -17.87506675720215

Token 747: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6945183277130127
    2. '__":
' → logprob: -0.6945183277130127
    3. '__':
' → logprob: -6.694518089294434
    4. '__.' → logprob: -9.569518089294434
    5. '__.__' → logprob: -10.694518089294434
    6. '__:' → logprob: -10.819518089294434
    7. '__["' → logprob: -11.194518089294434
    8. '__
' → logprob: -13.069518089294434
    9. '__",' → logprob: -13.694518089294434
    10. '__
' → logprob: -14.569518089294434

Token 748: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03579412400722504
    2. '   ' → logprob: -4.160794258117676
    3. ' main' → logprob: -4.160794258117676
    4. '	main' → logprob: -5.535794258117676
    5. '_main' → logprob: -11.160794258117676
    6. '    
' → logprob: -12.910794258117676
    7. '  ' → logprob: -13.035794258117676
    8. ' ' → logprob: -13.285794258117676
    9. '   ' → logprob: -13.285794258117676
    10. ' ' → logprob: -13.910794258117676

Token 749: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.0
    4. '	main' → logprob: -19.75
    5. '_main' → logprob: -24.125
    6. '(main' → logprob: -25.25
    7. '.main' → logprob: -25.25
    8. 'import' → logprob: -26.5
    9. '```' → logprob: -26.75
    10. '  ' → logprob: -27.625

Token 750: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 748
Tokens correctement prédits (1ère position, stricte): 250
Tokens correctement prédits (1ère position, avec adaptation): 273
Tokens correctement prédits (top 10): 533
Précision stricte (1ère position): 33.42%
Précision adaptée (1ère position): 36.50%
Précision (top 10): 71.26%
================================================================================
