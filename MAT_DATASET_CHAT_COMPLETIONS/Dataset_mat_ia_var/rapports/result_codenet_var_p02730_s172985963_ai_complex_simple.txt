================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul

s = input()
n = len(s)

palindrome = lambda x: reduce(lambda a,b: a and b, map(lambda i: x[i]==x[~i], range(len(x)//2)), True)
halves = [(slice(0, n//2), slice(0, n//2)), (slice((n+2)//2, None), slice((n+2)//2, None))]

if palindrome(s) and all(palindrome(s[slc]) for slc,_ in halves):
    print("Yes")
    raise SystemExit
print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.47569698095321655
    2. 'partial' → logprob: -1.2256970405578613
    3. ' wraps' → logprob: -3.1006970405578613
    4. 'reduce' → logprob: -3.3506970405578613
    5. 'l' → logprob: -6.100697040557861
    6. ' partial' → logprob: -6.475697040557861
    7. 'cached' → logprob: -7.975697040557861
    8. 'cache' → logprob: -8.600696563720703
    9. 'cmp' → logprob: -8.725696563720703
    10. '```' → logprob: -8.975696563720703

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02032417245209217
    2. '(lambda' → logprob: -4.645324230194092
    3. ',' → logprob: -5.895324230194092
    4. '.' → logprob: -6.145324230194092
    5. '\' → logprob: -6.145324230194092
    6. ' (' → logprob: -6.520324230194092
    7. '```' → logprob: -7.520324230194092
    8. '(
' → logprob: -8.645323753356934
    9. ' ' → logprob: -8.645323753356934
    10. '\(' → logprob: -8.770323753356934

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10492284595966339
    2. '\' → logprob: -2.7299227714538574
    3. 'def' → logprob: -4.104922771453857
    4. '```' → logprob: -5.604922771453857
    5. '(lambda' → logprob: -5.729922771453857
    6. ',' → logprob: -5.979922771453857
    7. '\n' → logprob: -6.229922771453857
    8. '(
' → logprob: -6.604922771453857
    9. '\(' → logprob: -6.854922771453857
    10. '.' → logprob: -7.229922771453857

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.0728386640548706
    2. ' math' → logprob: -1.0728386640548706
    3. ' itertools' → logprob: -1.6978386640548706
    4. ' collections' → logprob: -2.07283878326416
    5. ' os' → logprob: -5.69783878326416
    6. 'operator' → logprob: -6.19783878326416
    7. ' ' → logprob: -7.82283878326416
    8. 'math' → logprob: -7.94783878326416
    9. 'collections' → logprob: -8.44783878326416
    10. ' typing' → logprob: -8.44783878326416

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02283634804189205
    2. 'import' → logprob: -3.897836446762085
    3. '.' → logprob: -6.647836208343506
    4. ' ' → logprob: -7.147836208343506
    5. ' .' → logprob: -9.022836685180664
    6. '.import' → logprob: -9.647836685180664
    7. '	import' → logprob: -11.397836685180664
    8. '_import' → logprob: -13.022836685180664
    9. '-import' → logprob: -13.272836685180664
    10. '<|end|>' → logprob: -13.522836685180664

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1052219495177269
    2. ' import' → logprob: -3.35522198677063
    3. 'add' → logprob: -3.48022198677063
    4. ' mul' → logprob: -3.60522198677063
    5. ' ' → logprob: -5.605221748352051
    6. 'mul' → logprob: -6.605221748352051
    7. 'import' → logprob: -6.855221748352051
    8. ' item' → logprob: -7.730221748352051
    9. ' icon' → logprob: -9.48022174835205
    10. 'item' → logprob: -9.98022174835205

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0457409620285034
    2. '\n' → logprob: -1.0457409620285034
    3. '(
' → logprob: -2.170741081237793
    4. '\' → logprob: -2.295741081237793
    5. 'result' → logprob: -4.295741081237793
    6. 'def' → logprob: -4.420741081237793
    7. 'a' → logprob: -5.045741081237793
    8. '*' → logprob: -5.170741081237793
    9. '
' → logprob: -5.295741081237793
    10. ',' → logprob: -5.295741081237793

Token 10: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5853413939476013
    2. 'def' → logprob: -1.835341453552246
    3. '(
' → logprob: -2.210341453552246
    4. '\' → logprob: -2.585341453552246
    5. 'a' → logprob: -4.085341453552246
    6. 'result' → logprob: -4.085341453552246
    7. '#' → logprob: -4.460341453552246
    8. '`' → logprob: -4.710341453552246
    9. '\n' → logprob: -4.835341453552246
    10. 'x' → logprob: -5.210341453552246

Token 11: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7266596555709839
    2. 'e' → logprob: -1.8516596555709839
    3. 'u' → logprob: -2.2266597747802734
    4. 'et' → logprob: -2.8516597747802734
    5. 't' → logprob: -3.1016597747802734
    6. 'q' → logprob: -3.3516597747802734
    7. 'reduce' → logprob: -3.4766597747802734
    8. '```' → logprob: -3.9766597747802734
    9. '=' → logprob: -4.351659774780273
    10. 'tr' → logprob: -4.976659774780273

Token 12: ' input' (ID: 3422)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8309172987937927
    2. ' ' → logprob: -1.8309173583984375
    3. ' '' → logprob: -1.8309173583984375
    4. ' "' → logprob: -2.3309173583984375
    5. ' []' → logprob: -3.8309173583984375
    6. '[' → logprob: -3.8309173583984375
    7. '"' → logprob: -4.0809173583984375
    8. ' input' → logprob: -4.5809173583984375
    9. ' reduce' → logprob: -4.5809173583984375
    10. '1' → logprob: -4.8309173583984375

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010119688231498003
    2. '('' → logprob: -7.501011848449707
    3. '(
' → logprob: -9.001011848449707
    4. '`' → logprob: -9.251011848449707
    5. ''' → logprob: -9.751011848449707
    6. '```' → logprob: -10.376011848449707
    7. '("("' → logprob: -10.626011848449707
    8. ')' → logprob: -10.626011848449707
    9. 's' → logprob: -10.876011848449707
    10. '(

' → logprob: -11.251011848449707

Token 14: 'n' (ID: 77)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09739287942647934
    2. 'print' → logprob: -4.347393035888672
    3. 'product' → logprob: -4.597393035888672
    4. '*' → logprob: -4.847393035888672
    5. 'res' → logprob: -4.847393035888672
    6. 'numbers' → logprob: -4.847393035888672
    7. '[' → logprob: -4.972393035888672
    8. 'tokens' → logprob: -5.097393035888672
    9. 'nums' → logprob: -5.222393035888672
    10. 'words' → logprob: -5.347393035888672

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09424091875553131
    2. '=' → logprob: -2.46924090385437
    3. ' ' → logprob: -5.719241142272949
    4. 'um' → logprob: -7.094241142272949
    5. '_' → logprob: -7.594241142272949
    6. '.' → logprob: -8.21924114227295
    7. '=int' → logprob: -8.71924114227295
    8. '  ' → logprob: -10.09424114227295
    9. ',' → logprob: -10.34424114227295
    10. 'u' → logprob: -10.46924114227295

Token 16: ' len' (ID: 4631)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2157665640115738
    2. ' len' → logprob: -1.7157665491104126
    3. 'int' → logprob: -4.465766429901123
    4. 'len' → logprob: -6.340766429901123
    5. ' ' → logprob: -6.965766429901123
    6. '10' → logprob: -10.840766906738281
    7. ' s' → logprob: -11.840766906738281
    8. '  ' → logprob: -12.340766906738281
    9. '1' → logprob: -12.465766906738281
    10. '0' → logprob: -12.590766906738281

Token 17: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.038161750882864
    2. '(' → logprob: -3.2881617546081543
    3. '(n' → logprob: -9.288161277770996
    4. 's' → logprob: -10.788161277770996
    5. '(
' → logprob: -12.413161277770996
    6. '(x' → logprob: -14.538161277770996
    7. '(

' → logprob: -14.663161277770996
    8. ' (' → logprob: -15.038161277770996
    9. '(t' → logprob: -15.413161277770996
    10. '()' → logprob: -15.788161277770996

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.786196975852363e-05
    2. '))' → logprob: -10.750038146972656
    3. ' )' → logprob: -11.625038146972656
    4. ')))' → logprob: -13.375038146972656
    5. ')
' → logprob: -13.500038146972656
    6. '')' → logprob: -13.875038146972656
    7. '**' → logprob: -14.750038146972656
    8. '-' → logprob: -14.750038146972656
    9. '`)' → logprob: -14.750038146972656
    10. ')n' → logprob: -15.125038146972656

Token 19: 'pal' (ID: 18413)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.403358817100525
    2. 'if' → logprob: -2.0283589363098145
    3. ' 
' → logprob: -2.4033589363098145
    4. '*' → logprob: -3.1533589363098145
    5. 'r' → logprob: -3.2783589363098145
    6. 'for' → logprob: -3.2783589363098145
    7. '_' → logprob: -3.5283589363098145
    8. ')' → logprob: -3.5283589363098145
    9. ' ' → logprob: -3.6533589363098145
    10. 'k' → logprob: -3.6533589363098145

Token 20: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.20901785790920258
    2. 'ind' → logprob: -1.7090178728103638
    3. ' =' → logprob: -6.084017753601074
    4. '```' → logprob: -6.459017753601074
    5. '=' → logprob: -7.209017753601074
    6. 'in' → logprob: -7.459017753601074
    7. '_' → logprob: -7.584017753601074
    8. 'i' → logprob: -8.084017753601074
    9. '[' → logprob: -8.209017753601074
    10. '()' → logprob: -8.459017753601074

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27820777893066406
    2. 's' → logprob: -1.528207778930664
    3. '_count' → logprob: -4.153207778930664
    4. '_counts' → logprob: -5.153207778930664
    5. '(' → logprob: -6.903207778930664
    6. '_s' → logprob: -6.903207778930664
    7. '=' → logprob: -7.028207778930664
    8. ' =' → logprob: -7.903207778930664
    9. '_sub' → logprob: -8.653207778930664
    10. '_list' → logprob: -9.153207778930664

Token 22: ' lambda' (ID: 27871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6337453722953796
    2. '[s' → logprob: -1.8837454319000244
    3. ' [' → logprob: -2.5087454319000244
    4. 'False' → logprob: -2.6337454319000244
    5. 'True' → logprob: -3.2587454319000244
    6. '[n' → logprob: -3.2587454319000244
    7. '[]' → logprob: -3.6337454319000244
    8. 'lambda' → logprob: -4.258745193481445
    9. '0' → logprob: -4.883745193481445
    10. 's' → logprob: -5.008745193481445

Token 23: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7910153865814209
    2. 's' → logprob: -1.666015386581421
    3. ' x' → logprob: -1.666015386581421
    4. 'x' → logprob: -1.791015386581421
    5. 'w' → logprob: -7.666015625
    6. ' w' → logprob: -7.916015625
    7. 'a' → logprob: -8.291015625
    8. ' a' → logprob: -8.791015625
    9. 'c' → logprob: -8.916015625
    10. ' c' → logprob: -9.166015625

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013822594191879034
    2. ' :' → logprob: -6.751382350921631
    3. ',' → logprob: -9.626381874084473
    4. ':x' → logprob: -9.626381874084473
    5. 'x' → logprob: -9.751381874084473
    6. ' x' → logprob: -12.001381874084473
    7. 's' → logprob: -13.001381874084473
    8. '=' → logprob: -13.126381874084473
    9. '==' → logprob: -13.126381874084473
    10. '[::-' → logprob: -13.501381874084473

Token 25: ' reduce' (ID: 10389)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02975199744105339
    2. ' x' → logprob: -3.529752016067505
    3. 'str' → logprob: -13.779751777648926
    4. 's' → logprob: -15.279751777648926
    5. ' ' → logprob: -16.404752731323242
    6. '(x' → logprob: -16.904752731323242
    7. ' str' → logprob: -17.154752731323242
    8. '	x' → logprob: -17.279752731323242
    9. ' all' → logprob: -18.279752731323242
    10. 'all' → logprob: -18.654752731323242

Token 26: '(lambda' (ID: 43341)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.695610761642456
    2. '(' → logprob: -0.945610761642456
    3. '(lambda' → logprob: -2.195610761642456
    4. '(operator' → logprob: -6.570611000061035
    5. '((' → logprob: -9.945611000061035
    6. '(mu' → logprob: -11.195611000061035
    7. '(p' → logprob: -11.945611000061035
    8. '(
' → logprob: -12.070611000061035
    9. '(len' → logprob: -12.445611000061035
    10. '(op' → logprob: -12.820611000061035

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42401447892189026
    2. ' x' → logprob: -1.6740144491195679
    3. ' ' → logprob: -2.1740145683288574
    4. 'a' → logprob: -4.174014568328857
    5. ' c' → logprob: -5.049014568328857
    6. ' acc' → logprob: -5.174014568328857
    7. ' lambda' → logprob: -5.549014568328857
    8. ' mul' → logprob: -5.924014568328857
    9. ',' → logprob: -6.299014568328857
    10. 'x' → logprob: -6.299014568328857

Token 28: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03010520339012146
    2. 'a' → logprob: -3.9051051139831543
    3. 'mul' → logprob: -5.905105113983154
    4. ',a' → logprob: -6.155105113983154
    5. ' ,' → logprob: -6.280105113983154
    6. ',m' → logprob: -7.030105113983154
    7. 'x' → logprob: -7.780105113983154
    8. ',x' → logprob: -7.780105113983154
    9. 'lambda' → logprob: -8.655105590820312
    10. ',b' → logprob: -9.155105590820312

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28613951802253723
    2. ',' → logprob: -1.7861394882202148
    3. ',a' → logprob: -2.911139488220215
    4. ',:' → logprob: -4.661139488220215
    5. 'a' → logprob: -4.786139488220215
    6. ':a' → logprob: -5.036139488220215
    7. ' :' → logprob: -7.411139488220215
    8. ',b' → logprob: -8.036139488220215
    9. ',x' → logprob: -8.161139488220215
    10. ':,' → logprob: -8.411139488220215

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5767576098442078
    2. ' a' → logprob: -0.8267576098442078
    3. '(a' → logprob: -8.451757431030273
    4. ' (' → logprob: -8.576757431030273
    5. 'mul' → logprob: -9.201757431030273
    6. ' ' → logprob: -9.326757431030273
    7. '	a' → logprob: -9.326757431030273
    8. '(' → logprob: -10.326757431030273
    9. '  ' → logprob: -10.451757431030273
    10. ' mul' → logprob: -10.826757431030273

Token 31: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0146522521972656
    2. '+b' → logprob: -1.3896522521972656
    3. ' and' → logprob: -1.5146522521972656
    4. ' +' → logprob: -2.2646522521972656
    5. '*' → logprob: -3.5146522521972656
    6. 'and' → logprob: -3.8896522521972656
    7. '==' → logprob: -5.514652252197266
    8. ' *' → logprob: -6.139652252197266
    9. '*b' → logprob: -6.264652252197266
    10. 'b' → logprob: -6.264652252197266

Token 32: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3244107961654663
    2. ' b' → logprob: -1.5744107961654663
    3. '(b' → logprob: -3.574410915374756
    4. ' (' → logprob: -3.574410915374756
    5. '(' → logprob: -4.574410915374756
    6. ' ' → logprob: -6.699410915374756
    7. 'a' → logprob: -7.199410915374756
    8. '(a' → logprob: -7.199410915374756
    9. '(x' → logprob: -7.949410915374756
    10. 'x' → logprob: -8.699410438537598

Token 33: ',' (ID: 11)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5326604843139648
    2. ' ==' → logprob: -0.9076604843139648
    3. '[' → logprob: -5.907660484313965
    4. '==(' → logprob: -6.032660484313965
    5. ' and' → logprob: -6.157660484313965
    6. ')' → logprob: -7.157660484313965
    7. '(' → logprob: -8.032660484313965
    8. ',' → logprob: -8.282660484313965
    9. ')==' → logprob: -9.032660484313965
    10. '(x' → logprob: -9.407660484313965

Token 34: ' map' (ID: 4014)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.7120038270950317
    2. '(x' → logprob: -1.2120038270950317
    3. '[' → logprob: -2.212003707885742
    4. 'map' → logprob: -4.212003707885742
    5. '[i' → logprob: -4.337003707885742
    6. '(s' → logprob: -4.337003707885742
    7. '[(' → logprob: -4.462003707885742
    8. '(map' → logprob: -4.587003707885742
    9. '[b' → logprob: -4.587003707885742
    10. ' [' → logprob: -4.712003707885742

Token 35: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004005503375083208
    2. '(' → logprob: -5.754005432128906
    3. '(str' → logprob: -7.129005432128906
    4. 'lambda' → logprob: -11.629005432128906
    5. '(operator' → logprob: -12.504005432128906
    6. '(s' → logprob: -12.629005432128906
    7. '2' → logprob: -12.879005432128906
    8. '(int' → logprob: -13.129005432128906
    9. '(bool' → logprob: -13.754005432128906
    10. '((' → logprob: -13.754005432128906

Token 36: ' i' (ID: 575)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5757147073745728
    2. 'lambda' → logprob: -1.3257147073745728
    3. '(lambda' → logprob: -1.8257147073745728
    4. ' str' → logprob: -5.200714588165283
    5. 'str' → logprob: -6.075714588165283
    6. '=lambda' → logprob: -6.325714588165283
    7. 's' → logprob: -8.450715065002441
    8. '(str' → logprob: -8.450715065002441
    9. ' x' → logprob: -8.450715065002441
    10. 'x' → logprob: -8.825715065002441

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011434932239353657
    2. 's' → logprob: -5.636435031890869
    3. ' :' → logprob: -5.886435031890869
    4. ',' → logprob: -6.511435031890869
    5. '(lambda' → logprob: -7.011435031890869
    6. ' s' → logprob: -7.386435031890869
    7. 'lambda' → logprob: -7.511435031890869
    8. '<|end|>' → logprob: -7.636435031890869
    9. '=lambda' → logprob: -7.761435031890869
    10. ' lambda' → logprob: -7.886435031890869

Token 38: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.32589244842529297
    2. 's' → logprob: -1.325892448425293
    3. ' (' → logprob: -5.825892448425293
    4. '(s' → logprob: -5.950892448425293
    5. ' x' → logprob: -6.450892448425293
    6. 'x' → logprob: -6.700892448425293
    7. ' lambda' → logprob: -6.950892448425293
    8. ' ' → logprob: -7.075892448425293
    9. 'lambda' → logprob: -7.700892448425293
    10. ' i' → logprob: -7.825892448425293

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000193527273950167
    2. '==' → logprob: -9.00019359588623
    3. '[' → logprob: -10.37519359588623
    4. '[len' → logprob: -10.50019359588623
    5. '[n' → logprob: -12.12519359588623
    6. ' ==' → logprob: -12.50019359588623
    7. ' [' → logprob: -15.00019359588623
    8. '[I' → logprob: -15.12519359588623
    9. '[]' → logprob: -15.25019359588623
    10. '[int' → logprob: -15.50019359588623

Token 40: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42883357405662537
    2. ']==' → logprob: -1.0538336038589478
    3. ' ]' → logprob: -9.303833961486816
    4. '==' → logprob: -10.803833961486816
    5. '],' → logprob: -11.803833961486816
    6. ']!=' → logprob: -12.428833961486816
    7. ']=='' → logprob: -13.303833961486816
    8. ':]' → logprob: -13.803833961486816
    9. ']
' → logprob: -14.178833961486816
    10. ':' → logprob: -14.178833961486816

Token 41: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013501148205250502
    2. ' x' → logprob: -6.626349925994873
    3. 's' → logprob: -10.751350402832031
    4. ' ' → logprob: -14.376350402832031
    5. '(' → logprob: -14.501350402832031
    6. '	x' → logprob: -15.376350402832031
    7. ')' → logprob: -15.501350402832031
    8. 'n' → logprob: -15.501350402832031
    9. ')x' → logprob: -15.626350402832031
    10. 'len' → logprob: -15.626350402832031

Token 42: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1283602714538574
    2. '[len' → logprob: -1.3783602714538574
    3. '[' → logprob: -1.5033602714538574
    4. '[-' → logprob: -1.6283602714538574
    5. 'n' → logprob: -5.628360271453857
    6. '[::-' → logprob: -6.753360271453857
    7. 'len' → logprob: -8.253360748291016
    8. '-' → logprob: -9.003360748291016
    9. '[length' → logprob: -9.378360748291016
    10. ')' → logprob: -9.628360748291016

Token 43: '~' (ID: 93)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2886620759963989
    2. '-' → logprob: -1.913662075996399
    3. 'len' → logprob: -2.6636619567871094
    4. '-n' → logprob: -3.5386619567871094
    5. '-l' → logprob: -6.288661956787109
    6. '(len' → logprob: -7.538661956787109
    7. '-i' → logprob: -7.913661956787109
    8. '~' → logprob: -8.53866195678711
    9. '<len' → logprob: -8.53866195678711
    10. '[len' → logprob: -8.66366195678711

Token 44: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.584239938296378e-06
    2. ' i' → logprob: -12.000007629394531
    3. '	i' → logprob: -14.875007629394531
    4. ' ' → logprob: -16.25000762939453
    5. '   ' → logprob: -16.37500762939453
    6. '{i' → logprob: -16.56250762939453
    7. '(i' → logprob: -16.56250762939453
    8. ')i' → logprob: -16.93750762939453
    9. ''i' → logprob: -17.06250762939453
    10. ',i' → logprob: -17.06250762939453

Token 45: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.012339410372078419
    2. '),' → logprob: -4.6373395919799805
    3. ' ],' → logprob: -7.2623395919799805
    4. ']' → logprob: -7.2623395919799805
    5. ' ' → logprob: -7.6373395919799805
    6. ',' → logprob: -7.6373395919799805
    7. ']),' → logprob: -9.88733959197998
    8. ' ),' → logprob: -10.63733959197998
    9. ']))' → logprob: -10.88733959197998
    10. ')' → logprob: -11.13733959197998

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033674053847789764
    2. ' range' → logprob: -3.4086740016937256
    3. ' ' → logprob: -12.033674240112305
    4. '(range' → logprob: -12.033674240112305
    5. ')' → logprob: -12.533674240112305
    6. 'list' → logprob: -12.658674240112305
    7. '  ' → logprob: -12.783674240112305
    8. '	range' → logprob: -12.783674240112305
    9. '   ' → logprob: -13.408674240112305
    10. '[' → logprob: -14.033674240112305

Token 47: '(len' (ID: 14990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0038264375180006027
    2. '(' → logprob: -5.87882661819458
    3. '((' → logprob: -7.62882661819458
    4. '(len' → logprob: -7.75382661819458
    5. 'n' → logprob: -9.378826141357422
    6. '(
' → logprob: -11.878826141357422
    7. ' (' → logprob: -12.628826141357422
    8. 's' → logprob: -12.878826141357422
    9. '(s' → logprob: -13.128826141357422
    10. '(int' → logprob: -13.253826141357422

Token 48: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007934243185445666
    2. '(s' → logprob: -7.87579345703125
    3. '(' → logprob: -8.00079345703125
    4. 'x' → logprob: -9.50079345703125
    5. 's' → logprob: -13.87579345703125
    6. '(n' → logprob: -14.62579345703125
    7. ')' → logprob: -14.62579345703125
    8. '(
' → logprob: -15.25079345703125
    9. '(i' → logprob: -15.37579345703125
    10. ')x' → logprob: -15.50079345703125

Token 49: ')//' (ID: 60375)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4102479815483093
    2. '))))' → logprob: -1.410248041152954
    3. '))),' → logprob: -3.285248041152954
    4. ')' → logprob: -3.785248041152954
    5. '))' → logprob: -4.035247802734375
    6. ')))),' → logprob: -4.910247802734375
    7. ')),' → logprob: -5.410247802734375
    8. '//' → logprob: -6.410247802734375
    9. ')//' → logprob: -7.660247802734375
    10. ' ' → logprob: -8.785247802734375

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.125110626220703
    3. '1' → logprob: -13.375110626220703
    4. '3' → logprob: -15.500110626220703
    5. ')' → logprob: -15.875110626220703
    6. '   ' → logprob: -17.125110626220703
    7. '```' → logprob: -17.375110626220703
    8. '(' → logprob: -17.500110626220703
    9. '  ' → logprob: -17.562610626220703
    10. '22' → logprob: -18.062610626220703

Token 51: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.007604146841913462
    2. ')' → logprob: -5.632604122161865
    3. '))' → logprob: -5.882604122161865
    4. ')),' → logprob: -7.757604122161865
    5. '),' → logprob: -7.882604122161865
    6. '))))' → logprob: -8.132604598999023
    7. '))),' → logprob: -10.507604598999023
    8. ')));' → logprob: -10.507604598999023
    9. ' ' → logprob: -11.007604598999023
    10. ')))
' → logprob: -11.007604598999023

Token 52: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04859543219208717
    2. ' True' → logprob: -3.048595428466797
    3. '=True' → logprob: -12.298595428466797
    4. '(True' → logprob: -13.423595428466797
    5. '   ' → logprob: -13.548595428466797
    6. '       ' → logprob: -15.548595428466797
    7. '           ' → logprob: -15.673595428466797
    8. '  ' → logprob: -16.048595428466797
    9. '    ' → logprob: -16.673595428466797
    10. '1' → logprob: -17.298595428466797

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024215869780164212
    2. '))' → logprob: -8.375242233276367
    3. ')))' → logprob: -12.125242233276367
    4. ' )' → logprob: -12.250242233276367
    5. ')
' → logprob: -14.250242233276367
    6. ')`' → logprob: -15.375242233276367
    7. '),' → logprob: -15.750242233276367
    8. ')

' → logprob: -16.125242233276367
    9. ')#' → logprob: -17.000242233276367
    10. ')**' → logprob: -17.125242233276367

Token 54: 'hal' (ID: 5512)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6302646994590759
    2. 'for' → logprob: -1.7552647590637207
    3. ')' → logprob: -2.3802647590637207
    4. '#' → logprob: -3.2552647590637207
    5. 'i' → logprob: -3.3802647590637207
    6. 'print' → logprob: -4.005264759063721
    7. ' if' → logprob: -4.130264759063721
    8. 'result' → logprob: -4.505264759063721
    9. ' 
' → logprob: -4.505264759063721
    10. 'def' → logprob: -4.755264759063721

Token 55: 'ves' (ID: 3350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017616904806345701
    2. 'flen' → logprob: -6.5017619132995605
    3. 'fl' → logprob: -9.751761436462402
    4. '```' → logprob: -10.501761436462402
    5. 'fn' → logprob: -11.001761436462402
    6. 'ves' → logprob: -11.064261436462402
    7. 'ftime' → logprob: -11.251761436462402
    8. 'fname' → logprob: -11.376761436462402
    9. '=f' → logprob: -11.376761436462402
    10. 'ving' → logprob: -11.876761436462402

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3630727231502533
    2. '=' → logprob: -1.4880727529525757
    3. '_' → logprob: -2.613072633743286
    4. 's' → logprob: -6.238072872161865
    5. '_s' → logprob: -6.988072872161865
    6. '_len' → logprob: -7.738072872161865
    7. '_equal' → logprob: -7.863072872161865
    8. '1' → logprob: -8.113072395324707
    9. '_length' → logprob: -8.488072395324707
    10. '_split' → logprob: -9.113072395324707

Token 57: ' [(' (ID: 43900)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.6120071411132812
    2. '[s' → logprob: -1.4870071411132812
    3. ' (' → logprob: -2.1120071411132812
    4. ' [' → logprob: -2.8620071411132812
    5. '[(' → logprob: -3.8620071411132812
    6. '[' → logprob: -4.612007141113281
    7. '([' → logprob: -5.487007141113281
    8. '(' → logprob: -5.612007141113281
    9. 's' → logprob: -5.862007141113281
    10. ' [(' → logprob: -5.987007141113281

Token 58: 'slice' (ID: 49515)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05491432547569275
    2. ' s' → logprob: -3.9299142360687256
    3. '0' → logprob: -4.304914474487305
    4. '(s' → logprob: -4.554914474487305
    5. 'i' → logprob: -6.304914474487305
    6. '(' → logprob: -6.304914474487305
    7. ' ' → logprob: -6.804914474487305
    8. 'x' → logprob: -6.929914474487305
    9. ' (' → logprob: -7.554914474487305
    10. 'len' → logprob: -7.679914474487305

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13069233298301697
    2. '(n' → logprob: -2.25569224357605
    3. '(None' → logprob: -4.380692481994629
    4. '(i' → logprob: -5.505692481994629
    5. '(len' → logprob: -7.380692481994629
    6. '(s' → logprob: -8.755692481994629
    7. '(
' → logprob: -8.880692481994629
    8. '(-' → logprob: -9.505692481994629
    9. '(a' → logprob: -10.380692481994629
    10. '((' → logprob: -10.505692481994629

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05705057829618454
    2. 'n' → logprob: -3.0570504665374756
    3. ' ' → logprob: -5.557050704956055
    4. ' n' → logprob: -6.682050704956055
    5. '(n' → logprob: -6.807050704956055
    6. 'None' → logprob: -7.182050704956055
    7. 'i' → logprob: -7.557050704956055
    8. '(' → logprob: -7.932050704956055
    9. 'len' → logprob: -9.182050704956055
    10. 's' → logprob: -9.682050704956055

Token 61: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.39002716541290283
    2. ',' → logprob: -1.1400271654129028
    3. ',len' → logprob: -5.890027046203613
    4. ' ,' → logprob: -8.015027046203613
    5. 'n' → logprob: -10.265027046203613
    6. ',i' → logprob: -12.140027046203613
    7. ',
' → logprob: -12.515027046203613
    8. 'len' → logprob: -12.640027046203613
    9. ',(' → logprob: -13.765027046203613
    10. '   ' → logprob: -13.765027046203613

Token 62: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007398741785436869
    2. ' n' → logprob: -5.25739860534668
    3. 'len' → logprob: -7.00739860534668
    4. 'i' → logprob: -7.88239860534668
    5. ' ' → logprob: -7.88239860534668
    6. '(n' → logprob: -8.50739860534668
    7. '   ' → logprob: -8.75739860534668
    8. '1' → logprob: -11.00739860534668
    9. '  ' → logprob: -11.38239860534668
    10. '3' → logprob: -11.38239860534668

Token 63: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0006301135290414095
    2. ' //' → logprob: -7.375629901885986
    3. '#' → logprob: -13.000630378723145
    4. '   ' → logprob: -14.750630378723145
    5. '),' → logprob: -15.125630378723145
    6. ' ' → logprob: -15.375630378723145
    7. '2' → logprob: -16.125629425048828
    8. ',' → logprob: -16.250629425048828
    9. '/' → logprob: -16.750629425048828
    10. '>>' → logprob: -16.750629425048828

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010032468708232045
    2. ' ' → logprob: -9.250100135803223
    3. ')' → logprob: -13.375100135803223
    4. '1' → logprob: -13.875100135803223
    5. '3' → logprob: -14.500100135803223
    6. '   ' → logprob: -15.000100135803223
    7. '4' → logprob: -15.250100135803223
    8. '```' → logprob: -15.875100135803223
    9. '),' → logprob: -16.62510108947754
    10. '/' → logprob: -17.06260108947754

Token 65: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03406402841210365
    2. '),
' → logprob: -3.7840640544891357
    3. '))' → logprob: -5.909063816070557
    4. ')' → logprob: -6.034063816070557
    5. ')),' → logprob: -6.034063816070557
    6. ',' → logprob: -6.409063816070557
    7. ' ),' → logprob: -7.534063816070557
    8. '),

' → logprob: -7.659063816070557
    9. ',),' → logprob: -8.534064292907715
    10. ')),
' → logprob: -9.034064292907715

Token 66: ' slice' (ID: 30288)
  Prédit: ' slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slice' → logprob: -0.6338164210319519
    2. 'slice' → logprob: -0.7588164210319519
    3. '(slice' → logprob: -7.258816242218018
    4. '   ' → logprob: -8.758816719055176
    5. ' ' → logprob: -9.133816719055176
    6. '    ' → logprob: -9.383816719055176
    7. '  ' → logprob: -9.883816719055176
    8. ')' → logprob: -10.883816719055176
    9. ' (' → logprob: -11.071316719055176
    10. ' ' → logprob: -11.821316719055176

Token 67: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032430703286081553
    2. '(' → logprob: -5.8782429695129395
    3. '((' → logprob: -8.128243446350098
    4. '(-' → logprob: -9.378243446350098
    5. 'n' → logprob: -10.253243446350098
    6. ' (' → logprob: -11.628243446350098
    7. '(
' → logprob: -12.378243446350098
    8. '(s' → logprob: -12.878243446350098
    9. '(-(' → logprob: -14.003243446350098
    10. ')' → logprob: -14.503243446350098

Token 68: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19014878571033478
    2. '(n' → logprob: -1.8151488304138184
    3. ' n' → logprob: -5.940148830413818
    4. '-' → logprob: -6.315148830413818
    5. '(' → logprob: -6.565148830413818
    6. ' (' → logprob: -6.565148830413818
    7. '-n' → logprob: -6.690148830413818
    8. ' ' → logprob: -8.06514835357666
    9. '   ' → logprob: -8.44014835357666
    10. '((' → logprob: -8.56514835357666

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005834594834595919
    2. ',n' → logprob: -5.255834579467773
    3. ' ,' → logprob: -7.755834579467773
    4. 'n' → logprob: -9.005834579467773
    5. '+' → logprob: -10.630834579467773
    6. '   ' → logprob: -11.880834579467773
    7. '	' → logprob: -12.755834579467773
    8. ',
' → logprob: -13.255834579467773
    9. ' ' → logprob: -13.505834579467773
    10. '    ' → logprob: -13.630834579467773

Token 70: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2614700496196747
    2. ' n' → logprob: -1.511470079421997
    3. 'None' → logprob: -5.761469841003418
    4. ' ' → logprob: -6.386469841003418
    5. '(n' → logprob: -6.761469841003418
    6. ' None' → logprob: -7.511469841003418
    7. ' (' → logprob: -7.636469841003418
    8. '   ' → logprob: -8.136469841003418
    9. '(' → logprob: -8.198969841003418
    10. '2' → logprob: -8.323969841003418

Token 71: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.019264601171016693
    2. '2' → logprob: -4.0192646980285645
    3. ' //' → logprob: -7.6442646980285645
    4. '/' → logprob: -7.8942646980285645
    5. ' ' → logprob: -10.456764221191406
    6. ')' → logprob: -10.581764221191406
    7. '1' → logprob: -10.581764221191406
    8. '   ' → logprob: -10.831764221191406
    9. '-' → logprob: -10.894264221191406
    10. '```' → logprob: -11.144264221191406

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013131031300872564
    2. '1' → logprob: -9.750131607055664
    3. ' ' → logprob: -10.500131607055664
    4. '/' → logprob: -11.125131607055664
    5. '```' → logprob: -11.875131607055664
    6. '3' → logprob: -12.062631607055664
    7. ')' → logprob: -12.187631607055664
    8. '//' → logprob: -13.500131607055664
    9. '4' → logprob: -13.625131607055664
    10. '))' → logprob: -13.812631607055664

Token 73: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8270918726921082
    2. ')),' → logprob: -1.452091932296753
    3. ')),
' → logprob: -1.952091932296753
    4. '+' → logprob: -2.077091932296753
    5. ' +' → logprob: -4.077091693878174
    6. '),' → logprob: -4.327091693878174
    7. '-' → logprob: -4.827091693878174
    8. '))
' → logprob: -5.327091693878174
    9. '+n' → logprob: -5.327091693878174
    10. '),
' → logprob: -5.702091693878174

Token 74: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08898243308067322
    2. '(slice' → logprob: -2.463982343673706
    3. ' ' → logprob: -11.463982582092285
    4. '(' → logprob: -12.088982582092285
    5. ' ' → logprob: -12.338982582092285
    6. '   ' → logprob: -12.338982582092285
    7. ' ((' → logprob: -12.588982582092285
    8. '(s' → logprob: -12.588982582092285
    9. ' slice' → logprob: -12.713982582092285
    10. '(sl' → logprob: -13.213982582092285

Token 75: 'slice' (ID: 49515)
  Prédit: 'slice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.04033200442790985
    2. ' slice' → logprob: -3.290332078933716
    3. '(slice' → logprob: -6.540331840515137
    4. 'n' → logprob: -7.915331840515137
    5. '0' → logprob: -8.540331840515137
    6. ' n' → logprob: -9.165331840515137
    7. ' ' → logprob: -9.415331840515137
    8. '   ' → logprob: -10.415331840515137
    9. '	s' → logprob: -11.915331840515137
    10. ' (' → logprob: -12.040331840515137

Token 76: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00990978628396988
    2. '(' → logprob: -4.634909629821777
    3. '(-' → logprob: -9.509909629821777
    4. '((' → logprob: -9.884909629821777
    5. 'n' → logprob: -11.009909629821777
    6. '(None' → logprob: -13.134909629821777
    7. ' (' → logprob: -13.259909629821777
    8. '(
' → logprob: -13.634909629821777
    9. '(s' → logprob: -13.884909629821777
    10. '0' → logprob: -14.009909629821777

Token 77: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007803345564752817
    2. '(n' → logprob: -4.882803440093994
    3. ' n' → logprob: -9.757802963256836
    4. '-n' → logprob: -10.007802963256836
    5. '(' → logprob: -10.757802963256836
    6. '-' → logprob: -11.132802963256836
    7. '3' → logprob: -11.257802963256836
    8. '2' → logprob: -11.757802963256836
    9. '	n' → logprob: -12.257802963256836
    10. ')n' → logprob: -12.507802963256836

Token 78: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.005468893796205521
    2. '2' → logprob: -5.630468845367432
    3. ' //' → logprob: -6.630468845367432
    4. ')//' → logprob: -8.75546932220459
    5. ' ' → logprob: -9.25546932220459
    6. '#' → logprob: -9.50546932220459
    7. '1' → logprob: -9.63046932220459
    8. '+' → logprob: -10.38046932220459
    9. '-' → logprob: -10.50546932220459
    10. '3' → logprob: -10.88046932220459

Token 79: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022210339084267616
    2. '2' → logprob: -6.12722110748291
    3. ' ' → logprob: -11.12722110748291
    4. '0' → logprob: -11.62722110748291
    5. '3' → logprob: -11.87722110748291
    6. '```' → logprob: -13.75222110748291
    7. '4' → logprob: -14.25222110748291
    8. '//' → logprob: -14.37722110748291
    9. '
' → logprob: -14.43972110748291
    10. '   ' → logprob: -14.68972110748291

Token 80: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06362010538578033
    2. ')//' → logprob: -2.813620090484619
    3. ' //' → logprob: -7.688620090484619
    4. ')' → logprob: -7.813620090484619
    5. '2' → logprob: -8.188620567321777
    6. '1' → logprob: -8.813620567321777
    7. '0' → logprob: -9.438620567321777
    8. '-' → logprob: -9.813620567321777
    9. ' ' → logprob: -10.438620567321777
    10. '   ' → logprob: -10.563620567321777

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.625109672546387
    3. '1' → logprob: -10.125109672546387
    4. '3' → logprob: -13.125109672546387
    5. '//' → logprob: -14.500109672546387
    6. '   ' → logprob: -15.125109672546387
    7. '4' → logprob: -15.625109672546387
    8. '0' → logprob: -15.750109672546387
    9. '```' → logprob: -16.375110626220703
    10. '  ' → logprob: -16.750110626220703

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013822606764733791
    2. ',n' → logprob: -4.888822555541992
    3. ' ,' → logprob: -5.763822555541992
    4. '(),' → logprob: -6.013822555541992
    5. '(n' → logprob: -7.888822555541992
    6. '),' → logprob: -8.888822555541992
    7. 'n' → logprob: -10.888822555541992
    8. ',None' → logprob: -10.888822555541992
    9. ' ' → logprob: -11.263822555541992
    10. '(' → logprob: -11.513822555541992

Token 83: ' None' (ID: 4662)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023085903376340866
    2. ' n' → logprob: -4.273086071014404
    3. 'None' → logprob: -4.898086071014404
    4. ' None' → logprob: -7.023086071014404
    5. ')' → logprob: -8.523085594177246
    6. '),' → logprob: -9.523085594177246
    7. ')n' → logprob: -9.523085594177246
    8. ' ' → logprob: -10.023085594177246
    9. 'len' → logprob: -10.523085594177246
    10. '	n' → logprob: -10.648085594177246

Token 84: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0038554170168936253
    2. ',' → logprob: -6.503855228424072
    3. ' ),' → logprob: -6.753855228424072
    4. ')' → logprob: -7.628855228424072
    5. ')),' → logprob: -8.12885570526123
    6. '))' → logprob: -8.37885570526123
    7. ',),' → logprob: -9.75385570526123
    8. ')))' → logprob: -11.00385570526123
    9. 'None' → logprob: -11.12885570526123
    10. ' ' → logprob: -11.37885570526123

Token 85: ' slice' (ID: 30288)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.4578295648097992
    2. ' slice' → logprob: -1.7078295946121216
    3. 'None' → logprob: -2.457829475402832
    4. ' n' → logprob: -3.207829475402832
    5. ' None' → logprob: -3.457829475402832
    6. 'n' → logprob: -3.957829475402832
    7. ' (' → logprob: -5.707829475402832
    8. '(slice' → logprob: -6.207829475402832
    9. '(n' → logprob: -6.332829475402832
    10. '(None' → logprob: -7.457829475402832

Token 86: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6308184862136841
    2. '(n' → logprob: -0.8808184862136841
    3. '(' → logprob: -3.0058183670043945
    4. '(
' → logprob: -6.6308183670043945
    5. ' (' → logprob: -6.6308183670043945
    6. ' ((' → logprob: -8.005818367004395
    7. '(((' → logprob: -8.255818367004395
    8. 'n' → logprob: -8.630818367004395
    9. '(s' → logprob: -9.130818367004395
    10. '(-(' → logprob: -9.505818367004395

Token 87: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4911137521266937
    2. '(n' → logprob: -0.9911137819290161
    3. '0' → logprob: -5.366113662719727
    4. '(' → logprob: -5.491113662719727
    5. '((' → logprob: -5.741113662719727
    6. ' n' → logprob: -6.991113662719727
    7. ' (' → logprob: -7.366113662719727
    8. '~' → logprob: -7.491113662719727
    9. '2' → logprob: -7.491113662719727
    10. '-n' → logprob: -7.991113662719727

Token 88: '+' (ID: 10)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5367832779884338
    2. '+' → logprob: -0.9117832779884338
    3. '2' → logprob: -5.786783218383789
    4. '(' → logprob: -5.911783218383789
    5. '-' → logprob: -6.161783218383789
    6. '   ' → logprob: -6.411783218383789
    7. ')//' → logprob: -6.536783218383789
    8. '(n' → logprob: -7.286783218383789
    9. '1' → logprob: -7.911783218383789
    10. ' +' → logprob: -8.161783218383789

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004439493641257286
    2. '1' → logprob: -5.504439353942871
    3. 'n' → logprob: -8.629439353942871
    4. ' ' → logprob: -9.879439353942871
    5. '(' → logprob: -10.254439353942871
    6. '0' → logprob: -10.629439353942871
    7. '4' → logprob: -11.129439353942871
    8. '/' → logprob: -11.504439353942871
    9. '   ' → logprob: -11.816939353942871
    10. '(n' → logprob: -11.941939353942871

Token 90: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.031061159446835518
    2. '//' → logprob: -3.5310611724853516
    3. ')' → logprob: -6.781061172485352
    4. '2' → logprob: -10.281061172485352
    5. '```' → logprob: -10.281061172485352
    6. '   ' → logprob: -10.656061172485352
    7. '}//' → logprob: -10.906061172485352
    8. '-' → logprob: -11.281061172485352
    9. ' )' → logprob: -11.281061172485352
    10. ')#' → logprob: -12.156061172485352

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001647326396778226
    2. 'None' → logprob: -6.626647472381592
    3. '1' → logprob: -8.626646995544434
    4. '(None' → logprob: -9.751646995544434
    5. 'n' → logprob: -9.876646995544434
    6. ')' → logprob: -11.751646995544434
    7. ' ' → logprob: -11.876646995544434
    8. ' None' → logprob: -12.751646995544434
    9. '```' → logprob: -13.001646995544434
    10. '   ' → logprob: -13.814146995544434

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02162882126867771
    2. ',None' → logprob: -4.1466288566589355
    3. 'None' → logprob: -5.8966288566589355
    4. '(None' → logprob: -6.6466288566589355
    5. '),' → logprob: -7.6466288566589355
    6. ' ,' → logprob: -8.146628379821777
    7. ' None' → logprob: -8.271628379821777
    8. '))' → logprob: -8.396628379821777
    9. '(),' → logprob: -8.896628379821777
    10. ')' → logprob: -9.646628379821777

Token 93: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.11942841112613678
    2. 'n' → logprob: -2.2444283962249756
    3. ' None' → logprob: -5.369428634643555
    4. ' n' → logprob: -6.994428634643555
    5. '(n' → logprob: -8.369428634643555
    6. '(None' → logprob: -8.369428634643555
    7. '   ' → logprob: -8.994428634643555
    8. 'len' → logprob: -9.369428634643555
    9. ' ' → logprob: -9.369428634643555
    10. ')' → logprob: -10.494428634643555

Token 94: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02799275703728199
    2. ')' → logprob: -4.0279927253723145
    3. ')]' → logprob: -4.7779927253723145
    4. '),' → logprob: -7.6529927253723145
    5. ')])' → logprob: -7.7779927253723145
    6. ')))' → logprob: -8.027993202209473
    7. ')),' → logprob: -9.027993202209473
    8. ' ))' → logprob: -10.777993202209473
    9. ')],' → logprob: -12.152993202209473
    10. ' )' → logprob: -12.527993202209473

Token 95: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001874262816272676
    2. ')]' → logprob: -6.8768744468688965
    3. '),' → logprob: -8.126873970031738
    4. ')])' → logprob: -8.876873970031738
    5. ',' → logprob: -9.001873970031738
    6. '])' → logprob: -9.376873970031738
    7. '))' → logprob: -9.376873970031738
    8. ']' → logprob: -9.501873970031738
    9. ' )' → logprob: -10.626873970031738
    10. ',)' → logprob: -12.001873970031738

Token 96: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6369872093200684
    2. 'res' → logprob: -2.0119872093200684
    3. 'result' → logprob: -2.6369872093200684
    4. 'ans' → logprob: -2.7619872093200684
    5. 'count' → logprob: -3.2619872093200684
    6. 'counts' → logprob: -3.8869872093200684
    7. 'valid' → logprob: -4.011987209320068
    8. 'answer' → logprob: -4.011987209320068
    9. 'i' → logprob: -4.511987209320068
    10. 'max' → logprob: -4.886987209320068

Token 97: ' palindrome' (ID: 160469)
  Prédit: ' palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.17710556089878082
    2. ' n' → logprob: -3.052105665206909
    3. ' len' → logprob: -3.427105665206909
    4. ' any' → logprob: -3.552105665206909
    5. ' all' → logprob: -3.802105665206909
    6. ' not' → logprob: -4.92710542678833
    7. ' s' → logprob: -4.92710542678833
    8. 'pal' → logprob: -5.05210542678833
    9. 'n' → logprob: -5.55210542678833
    10. 'len' → logprob: -6.30210542678833

Token 98: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00011653638648567721
    2. ' (' → logprob: -9.500116348266602
    3. '(' → logprob: -10.125116348266602
    4. 's' → logprob: -13.875116348266602
    5. '(n' → logprob: -14.625116348266602
    6. '((' → logprob: -16.0001163482666
    7. '(ss' → logprob: -17.7501163482666
    8. '(x' → logprob: -17.8751163482666
    9. '(
' → logprob: -18.3751163482666
    10. ' ' → logprob: -19.0001163482666

Token 99: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033015317749232054
    2. ')' → logprob: -5.753301620483398
    3. ' ):' → logprob: -9.628301620483398
    4. '):
' → logprob: -10.003301620483398
    5. ':' → logprob: -12.503301620483398
    6. ')):' → logprob: -13.253301620483398
    7. ')==' → logprob: -13.628301620483398
    8. '):

' → logprob: -13.753301620483398
    9. '[' → logprob: -14.003301620483398
    10. ' and' → logprob: -14.003301620483398

Token 100: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008455827832221985
    2. ' :' → logprob: -4.883455753326416
    3. ':
' → logprob: -7.633455753326416
    4. ' and' → logprob: -8.008456230163574
    5. 'and' → logprob: -11.383456230163574
    6. ' :
' → logprob: -11.633456230163574
    7. ' ==' → logprob: -13.008456230163574
    8. '==' → logprob: -13.008456230163574
    9. '):' → logprob: -13.633456230163574
    10. ':

' → logprob: -14.133456230163574

Token 101: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7508044242858887
    2. ' any' → logprob: -1.8758044242858887
    3. 'all' → logprob: -2.2508044242858887
    4. ' s' → logprob: -2.8758044242858887
    5. 'any' → logprob: -3.5008044242858887
    6. ' len' → logprob: -3.5008044242858887
    7. ' (' → logprob: -3.5008044242858887
    8. 's' → logprob: -3.7508044242858887
    9. '(all' → logprob: -4.250804424285889
    10. 'len' → logprob: -4.375804424285889

Token 102: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00370851531624794
    2. '(lambda' → logprob: -6.128708362579346
    3. '(' → logprob: -6.628708362579346
    4. '((' → logprob: -8.753708839416504
    5. '(s' → logprob: -10.878708839416504
    6. '(map' → logprob: -11.503708839416504
    7. '(not' → logprob: -12.378708839416504
    8. '(len' → logprob: -12.753708839416504
    9. '(
' → logprob: -13.753708839416504
    10. '([' → logprob: -14.253708839416504

Token 103: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.01610603928565979
    2. '(s' → logprob: -4.766106128692627
    3. '(p' → logprob: -5.266106128692627
    4. '(al' → logprob: -7.141106128692627
    5. '(' → logprob: -7.766106128692627
    6. 'alid' → logprob: -8.891105651855469
    7. '[' → logprob: -9.266105651855469
    8. '
' → logprob: -9.516105651855469
    9. 'all' → logprob: -9.641105651855469
    10. 'pal' → logprob: -9.766105651855469

Token 104: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0011430763406679034
    2. 'ind' → logprob: -7.001142978668213
    3. 'ndrome' → logprob: -8.626143455505371
    4. 'id' → logprob: -10.251143455505371
    5. '(s' → logprob: -11.626143455505371
    6. '(ind' → logprob: -12.876143455505371
    7. 'in' → logprob: -13.376143455505371
    8. '(' → logprob: -14.376143455505371
    9. 'indle' → logprob: -15.376143455505371
    10. 'i' → logprob: -15.626143455505371

Token 105: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002383441897109151
    2. 's' → logprob: -9.250238418579102
    3. '(' → logprob: -9.750238418579102
    4. '((' → logprob: -10.125238418579102
    5. ')' → logprob: -11.000238418579102
    6. '(
' → logprob: -12.000238418579102
    7. ')(' → logprob: -12.375238418579102
    8. '([' → logprob: -12.375238418579102
    9. '(x' → logprob: -12.750238418579102
    10. '(slice' → logprob: -12.875238418579102

Token 106: '[' (ID: 58)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.23440824449062347
    2. '[' → logprob: -1.6094082593917847
    3. '[x' → logprob: -5.484408378601074
    4. '[start' → logprob: -6.984408378601074
    5. '[y' → logprob: -7.484408378601074
    6. '[h' → logprob: -7.734408378601074
    7. '[a' → logprob: -7.859408378601074
    8. '[k' → logprob: -7.984408378601074
    9. '[i' → logprob: -7.984408378601074
    10. '[sub' → logprob: -8.109408378601074

Token 107: 'sl' (ID: 4500)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20562228560447693
    2. 'hs' → logprob: -2.5806221961975098
    3. 'start' → logprob: -3.2056221961975098
    4. 'a' → logprob: -3.7056221961975098
    5. 'i' → logprob: -4.70562219619751
    6. 'hl' → logprob: -4.70562219619751
    7. 'hi' → logprob: -4.95562219619751
    8. 'l' → logprob: -5.20562219619751
    9. 'sl' → logprob: -5.70562219619751
    10. 'half' → logprob: -5.83062219619751

Token 108: 'c' (ID: 66)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7121624946594238
    2. '])' → logprob: -1.0871624946594238
    3. 'ice' → logprob: -2.087162494659424
    4. 'c' → logprob: -4.337162494659424
    5. '][' → logprob: -4.587162494659424
    6. '1' → logprob: -4.962162494659424
    7. ']))' → logprob: -5.587162494659424
    8. '[i' → logprob: -5.712162494659424
    9. ']' → logprob: -6.087162494659424
    10. '].' → logprob: -6.462162494659424

Token 109: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8747326135635376
    2. '[' → logprob: -1.1247326135635376
    3. '[i' → logprob: -1.4997326135635376
    4. '1' → logprob: -4.499732494354248
    5. ']))' → logprob: -4.624732494354248
    6. '[j' → logprob: -5.874732494354248
    7. '[idx' → logprob: -5.874732494354248
    8. '[x' → logprob: -6.499732494354248
    9. 'i' → logprob: -6.874732494354248
    10. '[k' → logprob: -7.249732494354248

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5766406059265137
    2. ' for' → logprob: -0.8266406059265137
    3. ')' → logprob: -8.326641082763672
    4. 'sl' → logprob: -8.326641082763672
    5. '   ' → logprob: -9.951641082763672
    6. ' ' → logprob: -10.201641082763672
    7. '(sl' → logprob: -10.701641082763672
    8. '(s' → logprob: -10.826641082763672
    9. '    ' → logprob: -10.826641082763672
    10. '(' → logprob: -11.201641082763672

Token 111: ' sl' (ID: 1925)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.931769609451294
    2. 'sl' → logprob: -1.181769609451294
    3. ' sl' → logprob: -1.556769609451294
    4. ' _,' → logprob: -2.556769609451294
    5. ',' → logprob: -5.806769371032715
    6. '(_,' → logprob: -5.931769371032715
    7. '(sl' → logprob: -7.056769371032715
    8. 'slice' → logprob: -8.119269371032715
    9. '__,' → logprob: -8.181769371032715
    10. ' (' → logprob: -8.181769371032715

Token 112: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011779663618654013
    2. 'cs' → logprob: -7.126177787780762
    3. ' in' → logprob: -8.501177787780762
    4. 's' → logprob: -9.751177787780762
    5. ',' → logprob: -10.626177787780762
    6. 'in' → logprob: -10.626177787780762
    7. 'с' → logprob: -11.313677787780762
    8. 'cl' → logprob: -11.438677787780762
    9. 'sl' → logprob: -12.688677787780762
    10. '_c' → logprob: -12.751177787780762

Token 113: ',_' (ID: 46431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4622378647327423
    2. 'in' → logprob: -1.08723783493042
    3. ' in' → logprob: -3.58723783493042
    4. ',_' → logprob: -5.83723783493042
    5. ' ,' → logprob: -6.58723783493042
    6. ')' → logprob: -7.71223783493042
    7. ',s' → logprob: -8.712238311767578
    8. ',in' → logprob: -8.837238311767578
    9. 's' → logprob: -9.962238311767578
    10. ',i' → logprob: -10.087238311767578

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010508636012673378
    2. ')' → logprob: -5.2605085372924805
    3. 'in' → logprob: -5.2605085372924805
    4. ' )' → logprob: -10.26050853729248
    5. '),' → logprob: -10.88550853729248
    6. ',' → logprob: -11.76050853729248
    7. ' ' → logprob: -13.38550853729248
    8. '))' → logprob: -14.01050853729248
    9. ' ),' → logprob: -14.01050853729248
    10. 's' → logprob: -14.38550853729248

Token 115: ' halves' (ID: 149071)
  Prédit: 'hal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hal' → logprob: -0.02981899492442608
    2. ' halves' → logprob: -3.5298190116882324
    3. 'halve' → logprob: -9.779818534851074
    4. 'pal' → logprob: -12.654818534851074
    5. ' hal' → logprob: -13.029818534851074
    6. '[' → logprob: -13.529818534851074
    7. 'halb' → logprob: -14.154818534851074
    8. 'half' → logprob: -14.279818534851074
    9. ' ' → logprob: -14.779818534851074
    10. '_hal' → logprob: -14.779818534851074

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009869301691651344
    2. ' and' → logprob: -5.25986909866333
    3. ':' → logprob: -6.00986909866333
    4. ')' → logprob: -6.38486909866333
    5. '):
' → logprob: -8.134869575500488
    6. ' ):' → logprob: -9.134869575500488
    7. 'and' → logprob: -9.509869575500488
    8. ',' → logprob: -12.884869575500488
    9. ':)' → logprob: -13.634869575500488
    10. '):

' → logprob: -14.134869575500488

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17012670636177063
    2. ' print' → logprob: -1.9201266765594482
    3. ':' → logprob: -4.920126914978027
    4. 'print' → logprob: -6.545126914978027
    5. '	print' → logprob: -7.420126914978027
    6. ' :' → logprob: -9.295126914978027
    7. '    ' → logprob: -10.045126914978027
    8. '    
' → logprob: -10.170126914978027
    9. ':
' → logprob: -10.170126914978027
    10. ' s' → logprob: -10.170126914978027

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.039550140500068665
    2. ' print' → logprob: -3.5395500659942627
    3. '   ' → logprob: -4.789550304412842
    4. 'for' → logprob: -7.539550304412842
    5. 'if' → logprob: -8.289549827575684
    6. 'result' → logprob: -8.789549827575684
    7. ' for' → logprob: -9.164549827575684
    8. 'answer' → logprob: -9.664549827575684
    9. ' if' → logprob: -9.914549827575684
    10. 'ans' → logprob: -10.289549827575684

Token 119: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1609610617160797
    2. '(' → logprob: -2.285961151123047
    3. '('' → logprob: -3.285961151123047
    4. '(s' → logprob: -5.035961151123047
    5. '(True' → logprob: -6.035961151123047
    6. '()' → logprob: -8.535961151123047
    7. '("'' → logprob: -9.035961151123047
    8. '("("' → logprob: -9.285961151123047
    9. '(len' → logprob: -9.535961151123047
    10. '(-' → logprob: -10.160961151123047

Token 120: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.10683265328407288
    2. 'YES' → logprob: -2.73183274269104
    3. '"' → logprob: -4.356832504272461
    4. 'Three' → logprob: -4.731832504272461
    5. 'Palindrome' → logprob: -6.356832504272461
    6. 'OK' → logprob: -6.606832504272461
    7. 'Triple' → logprob: -6.731832504272461
    8. 'True' → logprob: -6.856832504272461
    9. 'yes' → logprob: -7.356832504272461
    10. 'Possible' → logprob: -7.356832504272461

Token 121: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.13063594698905945
    2. '")
' → logprob: -2.130635976791382
    3. ')' → logprob: -5.880635738372803
    4. ')")' → logprob: -7.630635738372803
    5. ')
' → logprob: -8.380636215209961
    6. ')")
' → logprob: -9.630636215209961
    7. '!")' → logprob: -9.880636215209961
    8. 'else' → logprob: -9.880636215209961
    9. '!")
' → logprob: -11.755636215209961
    10. '")
' → logprob: -12.255636215209961

Token 122: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0004944138927385211
    2. ' else' → logprob: -8.000494003295898
    3. 'elif' → logprob: -8.750494003295898
    4. 'elser' → logprob: -16.0004940032959
    5. 'el' → logprob: -16.2504940032959
    6. 'elses' → logprob: -16.3754940032959
    7. '<|end|>' → logprob: -16.5004940032959
    8. 'e' → logprob: -16.7504940032959
    9. ')' → logprob: -17.0004940032959
    10. '```' → logprob: -17.2504940032959

Token 123: ' raise' (ID: 9338)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.004123753868043423
    2. 'elif' → logprob: -5.504123687744141
    3. ' else' → logprob: -10.00412368774414
    4. ' elif' → logprob: -16.75412368774414
    5. 'el' → logprob: -17.00412368774414
    6. 'els' → logprob: -17.12912368774414
    7. 'elseif' → logprob: -18.00412368774414
    8. 'elser' → logprob: -18.25412368774414
    9. 'elses' → logprob: -19.25412368774414
    10. 'e' → logprob: -20.12912368774414

Token 124: ' System' (ID: 1219)
  Prédit: ' System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' System' → logprob: -0.0025585419498384
    2. 'System' → logprob: -6.002558708190918
    3. '(System' → logprob: -9.502558708190918
    4. ' Stop' → logprob: -12.502558708190918
    5. 'Stop' → logprob: -13.002558708190918
    6. ' Exception' → logprob: -14.127558708190918
    7. '<System' → logprob: -14.502558708190918
    8. ' Runtime' → logprob: -15.502558708190918
    9. 'EOF' → logprob: -15.877558708190918
    10. 'Exception' → logprob: -16.2525577545166

Token 125: 'Exit' (ID: 23779)
  Prédit: 'Exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exit' → logprob: 0.0
    2. 'Error' → logprob: -17.25
    3. 'exit' → logprob: -17.375
    4. '_exit' → logprob: -20.375
    5. '.exit' → logprob: -20.625
    6. '.Exit' → logprob: -21.25
    7. '[' → logprob: -21.875
    8. 'Stop' → logprob: -22.0
    9. '_EXIT' → logprob: -22.0
    10. '
' → logprob: -22.25

Token 126: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14403298497200012
    2. 'if' → logprob: -3.0190329551696777
    3. 'for' → logprob: -3.1440329551696777
    4. 'else' → logprob: -4.394032955169678
    5. 's' → logprob: -4.769032955169678
    6. '#' → logprob: -5.019032955169678
    7. 'i' → logprob: -6.269032955169678
    8. 'rest' → logprob: -6.769032955169678
    9. 'idx' → logprob: -7.019032955169678
    10. 'x' → logprob: -7.144032955169678

Token 127: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1388552188873291
    2. 'print' → logprob: -2.763855218887329
    3. 'from' → logprob: -4.26385498046875
    4. 'count' → logprob: -5.13885498046875
    5. 'if' → logprob: -5.76385498046875
    6. 'counts' → logprob: -5.88885498046875
    7. 'k' → logprob: -6.01385498046875
    8. 'import' → logprob: -6.13885498046875
    9. 'c' → logprob: -6.51385498046875
    10. 's' → logprob: -6.63885498046875

Token 128: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.26355743408203125
    2. '(' → logprob: -1.5135574340820312
    3. '()' → logprob: -4.513557434082031
    4. '('' → logprob: -8.013557434082031
    5. '("")' → logprob: -8.888557434082031
    6. '("("' → logprob: -9.138557434082031
    7. '(False' → logprob: -11.138557434082031
    8. '(None' → logprob: -12.763557434082031
    9. '("""' → logprob: -13.638557434082031
    10. '"' → logprob: -14.138557434082031

Token 129: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.054981011897325516
    2. '"No' → logprob: -2.929980993270874
    3. '"' → logprob: -9.429981231689453
    4. 'NO' → logprob: -12.429981231689453
    5. '“No' → logprob: -12.554981231689453
    6. '("' → logprob: -12.679981231689453
    7. ' No' → logprob: -13.054981231689453
    8. '(No' → logprob: -13.429981231689453
    9. '.No' → logprob: -13.804981231689453
    10. ''' → logprob: -13.929981231689453

Token 130: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0001710014621494338
    2. ')")' → logprob: -9.250170707702637
    3. ')' → logprob: -9.500170707702637
    4. '}")' → logprob: -16.875171661376953
    5. '')' → logprob: -17.250171661376953
    6. '!")' → logprob: -17.500171661376953
    7. '")
' → logprob: -18.125171661376953
    8. '”)' → logprob: -18.625171661376953
    9. '\")' → logprob: -18.750171661376953
    10. '()' → logprob: -19.125171661376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 128
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 106
Précision stricte (1ère position): 44.53%
Précision adaptée (1ère position): 45.31%
Précision (top 10): 82.81%
================================================================================
