================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input_string_length = int(input())

input_character_list = list(str(input()))

if input_string_length % 2 == 1:
    print("No")
else:
    half_length = input_string_length // 2

    for index in range(half_length):
        if input_character_list[index] != input_character_list[index + half_length]:
            print("No")
            sys.exit()
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: '_string' (ID: 8609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01459955982863903
    2. '.' → logprob: -4.264599323272705
    3. '[' → logprob: -9.139599800109863
    4. ')' → logprob: -9.139599800109863
    5. ' (' → logprob: -9.764599800109863
    6. '()' → logprob: -9.764599800109863
    7. '_' → logprob: -10.764599800109863
    8. '(
' → logprob: -10.764599800109863
    9. '(.)' → logprob: -11.639599800109863
    10. ' ' → logprob: -11.764599800109863

Token 5: '_length' (ID: 11514)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7575422525405884
    2. '[' → logprob: -1.5075422525405884
    3. '(' → logprob: -1.7575422525405884
    4. '=' → logprob: -2.132542133331299
    5. ')' → logprob: -5.132542133331299
    6. '_' → logprob: -5.757542133331299
    7. ':' → logprob: -6.132542133331299
    8. 's' → logprob: -6.507542133331299
    9. ',' → logprob: -6.757542133331299
    10. ' =' → logprob: -6.757542133331299

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4527517855167389
    2. '_' → logprob: -1.4527517557144165
    3. '=' → logprob: -2.327751874923706
    4. ')' → logprob: -3.827751874923706
    5. ' =' → logprob: -5.577751636505127
    6. ' (' → logprob: -6.577751636505127
    7. '[' → logprob: -6.702751636505127
    8. '.' → logprob: -6.827751636505127
    9. '>' → logprob: -6.952751636505127
    10. ' ' → logprob: -7.077751636505127

Token 7: ' int' (ID: 677)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4477512836456299
    2. ' int' → logprob: -1.4477512836456299
    3. ' ' → logprob: -2.19775128364563
    4. 'len' → logprob: -4.947751045227051
    5. 'int' → logprob: -5.072751045227051
    6. '0' → logprob: -6.822751045227051
    7. ' input' → logprob: -8.82275104522705
    8. '1' → logprob: -10.57275104522705
    9. '10' → logprob: -10.69775104522705
    10. 'input' → logprob: -10.82275104522705

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029112942866049707
    2. '```' → logprob: -9.250290870666504
    3. ' (' → logprob: -10.125290870666504
    4. '(input' → logprob: -10.250290870666504
    5. '`' → logprob: -10.500290870666504
    6. ''' → logprob: -11.125290870666504
    7. '<|end|>' → logprob: -11.375290870666504
    8. ' ' → logprob: -11.500290870666504
    9. '40' → logprob: -11.500290870666504
    10. '()' → logprob: -12.250290870666504

Token 9: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5571626424789429
    2. '(' → logprob: -0.9321626424789429
    3. '())' → logprob: -3.9321627616882324
    4. ')' → logprob: -4.307162761688232
    5. '(
' → logprob: -9.307162284851074
    6. '('' → logprob: -9.307162284851074
    7. ' ' → logprob: -10.307162284851074
    8. '("("' → logprob: -10.557162284851074
    9. '(

' → logprob: -10.682162284851074
    10. '(()' → logprob: -11.182162284851074

Token 10: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4470857083797455
    2. 'input' → logprob: -1.9470857381820679
    3. 'for' → logprob: -2.1970856189727783
    4. ')' → logprob: -3.6970856189727783
    5. '\n' → logprob: -3.9470856189727783
    6. '_' → logprob: -4.697085857391357
    7. 'n' → logprob: -4.697085857391357
    8. '\' → logprob: -4.947085857391357
    9. '#' → logprob: -5.072085857391357
    10. 'i' → logprob: -5.197085857391357

Token 11: '_character' (ID: 99888)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26746484637260437
    2. '(' → logprob: -2.1424648761749268
    3. '_string' → logprob: -2.5174648761749268
    4. '_' → logprob: -3.5174648761749268
    5. '().' → logprob: -6.392464637756348
    6. '_str' → logprob: -6.767464637756348
    7. '('' → logprob: -6.892464637756348
    8. '('_' → logprob: -7.517464637756348
    9. '_data' → logprob: -7.892464637756348
    10. '_strings' → logprob: -8.142464637756348

Token 12: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27749836444854736
    2. 's' → logprob: -1.5274983644485474
    3. ' =' → logprob: -4.277498245239258
    4. '_s' → logprob: -4.652498245239258
    5. '()' → logprob: -7.527498245239258
    6. '=' → logprob: -7.527498245239258
    7. '_=' → logprob: -8.902498245239258
    8. '(' → logprob: -9.152498245239258
    9. '_index' → logprob: -9.402498245239258
    10. '_length' → logprob: -9.652498245239258

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40702372789382935
    2. ' =' → logprob: -2.0320236682891846
    3. '.append' → logprob: -2.7820236682891846
    4. '=' → logprob: -3.1570236682891846
    5. '[' → logprob: -3.1570236682891846
    6. '_' → logprob: -3.4070236682891846
    7. '[:]' → logprob: -4.157023906707764
    8. '.setdefault' → logprob: -6.032023906707764
    9. '.=' → logprob: -7.407023906707764
    10. ')' → logprob: -7.532023906707764

Token 14: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6529894471168518
    2. ' list' → logprob: -0.7779894471168518
    3. 'input' → logprob: -4.277989387512207
    4. ' input' → logprob: -5.777989387512207
    5. '[]' → logprob: -6.652989387512207
    6. ' []' → logprob: -6.902989387512207
    7. '[input' → logprob: -7.777989387512207
    8. '[list' → logprob: -8.527989387512207
    9. ' [' → logprob: -9.027989387512207
    10. '[' → logprob: -9.152989387512207

Token 15: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0701104924082756
    2. '(input' → logprob: -2.695110559463501
    3. ' (' → logprob: -10.445110321044922
    4. '(`' → logprob: -11.070110321044922
    5. '("("' → logprob: -11.070110321044922
    6. '()' → logprob: -11.195110321044922
    7. '(user' → logprob: -11.320110321044922
    8. '('' → logprob: -11.445110321044922
    9. '(open' → logprob: -11.570110321044922
    10. '(s' → logprob: -11.695110321044922

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0022702778223901987
    2. '(' → logprob: -6.127270221710205
    3. 'input' → logprob: -9.877270698547363
    4. '(sys' → logprob: -11.377270698547363
    5. '_input' → logprob: -12.627270698547363
    6. ' (' → logprob: -12.752270698547363
    7. ')' → logprob: -12.877270698547363
    8. '(inp' → logprob: -12.877270698547363
    9. '(in' → logprob: -13.002270698547363
    10. '=input' → logprob: -14.002270698547363

Token 17: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.32641029357910156
    2. '())' → logprob: -1.3264102935791016
    3. '()' → logprob: -4.701410293579102
    4. '(' → logprob: -5.701410293579102
    5. '(input' → logprob: -8.451410293579102
    6. '(""))' → logprob: -8.951410293579102
    7. '_input' → logprob: -9.701410293579102
    8. '_' → logprob: -9.951410293579102
    9. '))' → logprob: -10.076410293579102
    10. '().' → logprob: -10.076410293579102

Token 18: 'if' (ID: 366)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.924068033695221
    2. ')' → logprob: -1.2990679740905762
    3. '(' → logprob: -1.7990679740905762
    4. ' ' → logprob: -2.924067974090576
    5. '_' → logprob: -3.174067974090576
    6. 'if' → logprob: -4.549067974090576
    7. '.' → logprob: -4.549067974090576
    8. '#' → logprob: -4.799067974090576
    9. '\n' → logprob: -5.049067974090576
    10. 'input' → logprob: -5.299067974090576

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2303045690059662
    2. ' len' → logprob: -2.230304479598999
    3. 'input' → logprob: -2.980304479598999
    4. ' ' → logprob: -3.105304479598999
    5. 'len' → logprob: -6.230304718017578
    6. '  ' → logprob: -8.605304718017578
    7. '(input' → logprob: -9.230304718017578
    8. '_input' → logprob: -9.480304718017578
    9. ' ' → logprob: -9.730304718017578
    10. '_' → logprob: -9.730304718017578

Token 20: '_string' (ID: 8609)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.37976619601249695
    2. '_string' → logprob: -1.2547662258148193
    3. '_' → logprob: -3.5047662258148193
    4. '_char' → logprob: -7.50476598739624
    5. ' _' → logprob: -8.754766464233398
    6. 'string' → logprob: -11.504766464233398
    7. '_str' → logprob: -12.004766464233398
    8. '_s' → logprob: -12.004766464233398
    9. 'character' → logprob: -12.129766464233398
    10. '__' → logprob: -12.129766464233398

Token 21: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003103175258729607
    2. '_l' → logprob: -8.750309944152832
    3. '_' → logprob: -9.125309944152832
    4. '_le' → logprob: -11.375309944152832
    5. ' _' → logprob: -11.750309944152832
    6. '_len' → logprob: -11.750309944152832
    7. '_lengths' → logprob: -12.000309944152832
    8. '_string' → logprob: -13.375309944152832
    9. '```' → logprob: -13.750309944152832
    10. '__' → logprob: -13.875309944152832

Token 22: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1717928797006607
    2. ' <' → logprob: -2.421792984008789
    3. ' ' → logprob: -3.671792984008789
    4. ' <=' → logprob: -3.796792984008789
    5. ' ==' → logprob: -4.421792984008789
    6. ' >=' → logprob: -5.296792984008789
    7. '>' → logprob: -5.921792984008789
    8. '  ' → logprob: -7.546792984008789
    9. '<' → logprob: -7.921792984008789
    10. '==' → logprob: -8.296792984008789

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11283401399850845
    2. '2' → logprob: -2.2378339767456055
    3. '3' → logprob: -12.987833976745605
    4. '  ' → logprob: -13.112833976745605
    5. '1' → logprob: -13.362833976745605
    6. '4' → logprob: -13.612833976745605
    7. ' ' → logprob: -13.862833976745605
    8. '32' → logprob: -14.237833976745605
    9. '==' → logprob: -14.737833976745605
    10. '```' → logprob: -14.987833976745605

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001217974815517664
    2. ' ' → logprob: -7.126217842102051
    3. '3' → logprob: -8.00121784210205
    4. '4' → logprob: -10.25121784210205
    5. '10' → logprob: -10.87621784210205
    6. '5' → logprob: -11.87621784210205
    7. '1' → logprob: -12.12621784210205
    8. '6' → logprob: -13.37621784210205
    9. '7' → logprob: -13.62621784210205
    10. '26' → logprob: -14.00121784210205

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2518884837627411
    2. ' !=' → logprob: -1.7518885135650635
    3. '==' → logprob: -3.1268885135650635
    4. '!=' → logprob: -5.376888275146484
    5. '=' → logprob: -8.001888275146484
    6. ' ' → logprob: -8.501888275146484
    7. ' =' → logprob: -9.001888275146484
    8. ':' → logprob: -10.126888275146484
    9. ')' → logprob: -11.126888275146484
    10. '>' → logprob: -11.501888275146484

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06201518699526787
    2. '0' → logprob: -2.8120152950286865
    3. '2' → logprob: -10.562015533447266
    4. '1' → logprob: -10.812015533447266
    5. '==' → logprob: -14.687015533447266
    6. ' ' → logprob: -15.187015533447266
    7. '=' → logprob: -15.312015533447266
    8. ' ==' → logprob: -15.812015533447266
    9. '  ' → logprob: -16.312015533447266
    10. '3' → logprob: -16.874515533447266

Token 27: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07268310338258743
    2. ' ' → logprob: -2.697683095932007
    3. '2' → logprob: -5.947683334350586
    4. '1' → logprob: -8.947683334350586
    5. '==' → logprob: -14.697683334350586
    6. '  ' → logprob: -15.322683334350586
    7. '   ' → logprob: -16.135183334350586
    8. '```' → logprob: -16.635183334350586
    9. '=' → logprob: -17.072683334350586
    10. '3' → logprob: -17.072683334350586

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008066523587331176
    2. ' :' → logprob: -7.12580680847168
    3. ':**' → logprob: -14.00080680847168
    4. '):' → logprob: -14.50080680847168
    5. ':
' → logprob: -14.87580680847168
    6. '：' → logprob: -15.87580680847168
    7. '>:' → logprob: -16.00080680847168
    8. ':return' → logprob: -16.37580680847168
    9. ':def' → logprob: -17.37580680847168
    10. 'colon' → logprob: -17.87580680847168

Token 29: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.47490209341049194
    2. ' ' → logprob: -2.0999021530151367
    3. '    ' → logprob: -2.0999021530151367
    4. 'print' → logprob: -2.4749021530151367
    5. ' input' → logprob: -4.349902153015137
    6. '_' → logprob: -4.849902153015137
    7. '   ' → logprob: -4.849902153015137
    8. 'input' → logprob: -5.099902153015137
    9. '     
' → logprob: -5.349902153015137
    10. ' :' → logprob: -6.724902153015137

Token 30: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.037826407700777054
    2. '    ' → logprob: -4.2878265380859375
    3. 'print' (adapté à ' print') → logprob: -4.5378265380859375
    4. ' input' → logprob: -4.6628265380859375
    5. ' ' → logprob: -6.5378265380859375
    6. '   ' → logprob: -7.9128265380859375
    7. ' for' → logprob: -8.037826538085938
    8. ' ```' → logprob: -8.912826538085938
    9. 'input' → logprob: -9.037826538085938
    10. ' sys' → logprob: -9.162826538085938

Token 31: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23554719984531403
    2. '("' → logprob: -2.7355473041534424
    3. '('' → logprob: -2.7355473041534424
    4. '(input' → logprob: -3.2355473041534424
    5. '("("' → logprob: -3.2355473041534424
    6. '((' → logprob: -7.235547065734863
    7. '("")' → logprob: -8.235547065734863
    8. '("(' → logprob: -8.735547065734863
    9. '(len' → logprob: -9.360547065734863
    10. '()' → logprob: -9.735547065734863

Token 32: 'No' (ID: 3160)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0863029956817627
    2. 'No' → logprob: -1.9613029956817627
    3. 'Yes' → logprob: -2.3363029956817627
    4. '")' → logprob: -2.9613029956817627
    5. 'NO' → logprob: -2.9613029956817627
    6. ' ")' → logprob: -3.3363029956817627
    7. 'YES' → logprob: -3.7113029956817627
    8. '(' → logprob: -3.8363029956817627
    9. '(input' → logprob: -3.8363029956817627
    10. '"' → logprob: -3.9613029956817627

Token 33: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7323370575904846
    2. ' ")' → logprob: -0.8573370575904846
    3. ')' → logprob: -2.60733699798584
    4. ' ' → logprob: -4.85733699798584
    5. ' )' → logprob: -5.35733699798584
    6. 't' → logprob: -5.98233699798584
    7. '"' → logprob: -6.73233699798584
    8. ' else' → logprob: -7.23233699798584
    9. '\n' → logprob: -7.73233699798584
    10. ' "' → logprob: -7.85733699798584

Token 34: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3253374695777893
    2. ' else' → logprob: -1.3253374099731445
    3. 'elif' → logprob: -5.0753374099731445
    4. '<|end|>' → logprob: -5.9503374099731445
    5. ' ' → logprob: -7.0753374099731445
    6. ')' → logprob: -7.2003374099731445
    7. ' elif' → logprob: -7.4503374099731445
    8. '   ' → logprob: -7.5753374099731445
    9. '
' → logprob: -9.450337409973145
    10. '	else' → logprob: -9.825337409973145

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8908587662735954e-05
    2. ' :' → logprob: -11.500019073486328
    3. ':
' → logprob: -11.750019073486328
    4. '   ' → logprob: -15.000019073486328
    5. ':**' → logprob: -16.375019073486328
    6. '):' → logprob: -16.500019073486328
    7. '：' → logprob: -16.625019073486328
    8. ':def' → logprob: -16.750019073486328
    9. ':return' → logprob: -16.875019073486328
    10. ':

' → logprob: -17.125019073486328

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004841273184865713
    2. '    ' → logprob: -5.504841327667236
    3. ' ' → logprob: -8.379840850830078
    4. '    
' → logprob: -9.004840850830078
    5. '   ' → logprob: -9.254840850830078
    6. '[' → logprob: -9.379840850830078
    7. '```' → logprob: -10.129840850830078
    8. '   ' → logprob: -10.629840850830078
    9. '       ' → logprob: -11.004840850830078
    10. ' four' → logprob: -11.379840850830078

Token 37: ' half' (ID: 6375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02895302139222622
    2. '    ' → logprob: -4.2789530754089355
    3. ' for' → logprob: -6.1539530754089355
    4. ' if' → logprob: -6.2789530754089355
    5. 'for' → logprob: -6.6539530754089355
    6. ' ' → logprob: -6.9039530754089355
    7. ' count' → logprob: -7.2789530754089355
    8. 'count' → logprob: -7.4039530754089355
    9. ' stack' → logprob: -7.5289530754089355
    10. ' input' → logprob: -7.7789530754089355

Token 38: '_length' (ID: 11514)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6441115736961365
    2. '_length' → logprob: -0.7691115736961365
    3. '_len' → logprob: -5.019111633300781
    4. '_input' → logprob: -6.019111633300781
    5. '_index' → logprob: -7.519111633300781
    6. ' =' → logprob: -7.894111633300781
    7. '_size' → logprob: -8.019111633300781
    8. '=' → logprob: -8.144111633300781
    9. '_count' → logprob: -8.269111633300781
    10. '_string' → logprob: -8.769111633300781

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021594911813736
    2. '=' → logprob: -2.3502159118652344
    3. '   ' → logprob: -12.100215911865234
    4. '_' → logprob: -13.475215911865234
    5. '=input' → logprob: -13.725215911865234
    6. ' ' → logprob: -15.100215911865234
    7. '    ' → logprob: -15.225215911865234
    8. '=int' → logprob: -15.600215911865234
    9. 's' → logprob: -16.600215911865234
    10. '＝' → logprob: -16.725215911865234

Token 40: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31333306431770325
    2. 'input' → logprob: -1.3133330345153809
    3. 'int' → logprob: -9.688333511352539
    4. ' int' → logprob: -11.688333511352539
    5. '(input' → logprob: -15.313333511352539
    6. '=input' → logprob: -15.563333511352539
    7. ' ' → logprob: -15.813333511352539
    8. '	input' → logprob: -16.56333351135254
    9. 'len' → logprob: -16.56333351135254
    10. '   ' → logprob: -16.68833351135254

Token 41: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0009132515988312662
    2. '_character' → logprob: -7.000913143157959
    3. '_length' → logprob: -14.250913619995117
    4. '_' → logprob: -14.250913619995117
    5. 'string' → logprob: -15.250913619995117
    6. '_char' → logprob: -16.500913619995117
    7. '_strings' → logprob: -16.875913619995117
    8. 'character' → logprob: -18.250913619995117
    9. '_STRING' → logprob: -18.375913619995117
    10. 'String' → logprob: -18.375913619995117

Token 42: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.3782830137643032e-05
    2. '_list' → logprob: -11.25001335144043
    3. 'length' → logprob: -15.12501335144043
    4. '_' → logprob: -15.50001335144043
    5. '_lengths' → logprob: -16.25001335144043
    6. '_l' → logprob: -16.87501335144043
    7. '_LENGTH' → logprob: -17.25001335144043
    8. '_len' → logprob: -17.37501335144043
    9. '```' → logprob: -17.62501335144043
    10. '_count' → logprob: -17.75001335144043

Token 43: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.011073639616370201
    2. '//' → logprob: -4.511073589324951
    3. ' ' → logprob: -11.26107406616211
    4. ' ' → logprob: -12.13607406616211
    5. '```' → logprob: -12.76107406616211
    6. '   ' → logprob: -13.63607406616211
    7. ' /' → logprob: -14.01107406616211
    8. '`' → logprob: -14.38607406616211
    9. '#' → logprob: -14.63607406616211
    10. ' `' → logprob: -15.13607406616211

Token 44: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.62548828125
    4. '```' → logprob: -16.37548828125
    5. '  ' → logprob: -16.87548828125
    6. '<|end|>' → logprob: -18.12548828125
    7. '۲' → logprob: -18.62548828125
    8. '２' → logprob: -19.12548828125
    9. ' ' → logprob: -20.06298828125
    10. '=' → logprob: -20.25048828125

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.25009536743164
    4. '```' → logprob: -17.50009536743164
    5. '  ' → logprob: -17.62509536743164
    6. '２' → logprob: -18.75009536743164
    7. '۲' → logprob: -18.75009536743164
    8. '<|end|>' → logprob: -19.87509536743164
    9. '२' → logprob: -20.43759536743164
    10. '    ' → logprob: -20.68759536743164

Token 46: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6600940227508545
    2. '<|end|>' → logprob: -0.9100940227508545
    3. '
' → logprob: -3.0350940227508545
    4. 'if' → logprob: -4.660094261169434
    5. '    
' → logprob: -4.785094261169434
    6. '<|end|>' → logprob: -6.035094261169434
    7. '```' → logprob: -6.410094261169434
    8. ' ' → logprob: -6.535094261169434
    9. 'for' → logprob: -6.785094261169434
    10. '    ' → logprob: -6.910094261169434

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8456921577453613
    2. 'if' → logprob: -0.8456921577453613
    3. '
' → logprob: -2.9706921577453613
    4. 'for' → logprob: -3.5956921577453613
    5. '    
' → logprob: -3.8456921577453613
    6. 'first' → logprob: -4.970692157745361
    7. 's' → logprob: -5.345692157745361
    8. 'a' → logprob: -5.470692157745361
    9. '<|end|>' → logprob: -5.595692157745361
    10. ' if' → logprob: -5.845692157745361

Token 48: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.36244234442710876
    2. 'first' → logprob: -1.4874423742294312
    3. 'for' (adapté à ' for') → logprob: -2.6124422550201416
    4. 'left' → logprob: -5.612442493438721
    5. 'count' → logprob: -8.612442016601562
    6. 'print' → logprob: -8.862442016601562
    7. 'result' → logprob: -9.237442016601562
    8. 'answer' → logprob: -9.487442016601562
    9. 'half' → logprob: -9.612442016601562
    10. '   ' → logprob: -9.737442016601562

Token 49: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001286544487811625
    2. 'i' → logprob: -6.876286506652832
    3. ' index' → logprob: -9.376286506652832
    4. ' ' → logprob: -9.376286506652832
    5. ' _' → logprob: -9.626286506652832
    6. ' idx' → logprob: -11.876286506652832
    7. '_' → logprob: -12.126286506652832
    8. 'index' → logprob: -13.001286506652832
    9. '	i' → logprob: -14.251286506652832
    10. '  ' → logprob: -14.376286506652832

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011160651221871376
    2. 'in' → logprob: -4.511160850524902
    3. ' ' → logprob: -9.261160850524902
    4. ',' → logprob: -11.761160850524902
    5. '	in' → logprob: -12.386160850524902
    6. '   ' → logprob: -13.761160850524902
    7. '  ' → logprob: -14.261160850524902
    8. 'In' → logprob: -14.386160850524902
    9. '_in' → logprob: -14.511160850524902
    10. '    ' → logprob: -14.886160850524902

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868746757507324
    2. 'range' → logprob: -1.1368746757507324
    3. '	range' → logprob: -13.01187515258789
    4. '(range' → logprob: -14.26187515258789
    5. ' ' → logprob: -14.63687515258789
    6. '   ' → logprob: -15.88687515258789
    7. '  ' → logprob: -16.01187515258789
    8. '_range' → logprob: -17.26187515258789
    9. ' xrange' → logprob: -17.63687515258789
    10. '.range' → logprob: -17.63687515258789

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000158842682139948
    2. ' (' → logprob: -8.75015926361084
    3. '(
' → logprob: -15.87515926361084
    4. '(len' → logprob: -17.625158309936523
    5. ' half' → logprob: -17.625158309936523
    6. 'half' → logprob: -17.625158309936523
    7. '(int' → logprob: -18.125158309936523
    8. ' ' → logprob: -18.375158309936523
    9. '()' → logprob: -18.500158309936523
    10. '(input' → logprob: -18.625158309936523

Token 53: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.002884641056880355
    2. ' half' → logprob: -6.127884864807129
    3. '0' → logprob: -7.377884864807129
    4. 'hal' → logprob: -10.252884864807129
    5. '   ' → logprob: -11.002884864807129
    6. ' ' → logprob: -11.377884864807129
    7. 'input' → logprob: -12.127884864807129
    8. '1' → logprob: -13.877884864807129
    9. 'len' → logprob: -14.252884864807129
    10. 'int' → logprob: -14.252884864807129

Token 54: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.6789137084269896e-05
    2. 'length' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.75003719329834
    4. ')' → logprob: -13.50003719329834
    5. '_l' → logprob: -13.62503719329834
    6. ')_' → logprob: -14.37503719329834
    7. '_index' → logprob: -14.50003719329834
    8. ' _' → logprob: -14.62503719329834
    9. '_size' → logprob: -15.00003719329834
    10. '_len' → logprob: -15.12503719329834

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030888281762599945
    2. '):
' → logprob: -5.87808895111084
    3. ' ):' → logprob: -8.25308895111084
    4. '   ' → logprob: -11.37808895111084
    5. ':' → logprob: -12.25308895111084
    6. '):
' → logprob: -13.62808895111084
    7. ')' → logprob: -14.00308895111084
    8. ' ' → logprob: -14.12808895111084
    9. ' ):
' → logprob: -14.12808895111084
    10. '():' → logprob: -14.25308895111084

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17065387964248657
    2. '   ' → logprob: -2.670653820037842
    3. ' ' → logprob: -3.295653820037842
    4. '    ' → logprob: -3.670653820037842
    5. '<|end|>' → logprob: -3.795653820037842
    6. ' if' → logprob: -7.420653820037842
    7. '        ' → logprob: -7.670653820037842
    8. ':' → logprob: -8.420654296875
    9. '        
' → logprob: -8.670654296875
    10. '  ' → logprob: -8.670654296875

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3377954959869385
    2. '       ' → logprob: -1.7127954959869385
    3. ' ' → logprob: -1.8377954959869385
    4. '    ' → logprob: -1.8377954959869385
    5. 'if' (adapté à ' if') → logprob: -1.9627954959869385
    6. '   ' → logprob: -2.8377954959869385
    7. '        ' → logprob: -3.9627954959869385
    8. '<|end|>' → logprob: -4.212795257568359
    9. '  ' → logprob: -6.712795257568359
    10. '_' → logprob: -6.712795257568359

Token 58: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0789218470454216
    2. 'input' → logprob: -2.5789217948913574
    3. '   ' → logprob: -11.328922271728516
    4. ' not' → logprob: -11.453922271728516
    5. '    ' → logprob: -13.078922271728516
    6. '(input' → logprob: -13.203922271728516
    7. ' ' → logprob: -13.703922271728516
    8. '	input' → logprob: -13.828922271728516
    9. '<input' → logprob: -13.953922271728516
    10. '[input' → logprob: -14.078922271728516

Token 59: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -7.896309739408025e-07
    2. '_string' → logprob: -15.000000953674316
    3. 'character' → logprob: -15.250000953674316
    4. '_' → logprob: -15.875000953674316
    5. '_char' → logprob: -16.625
    6. '_CHARACTER' → logprob: -17.25
    7. '<Character' → logprob: -18.875
    8. 'Character' → logprob: -19.375
    9. ' _' → logprob: -19.375
    10. '   ' → logprob: -20.0

Token 60: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.127333340875339e-06
    2. 's' → logprob: -12.500003814697266
    3. '[_' → logprob: -16.750003814697266
    4. 'list' → logprob: -16.750003814697266
    5. 'List' → logprob: -17.250003814697266
    6. '_array' → logprob: -17.625003814697266
    7. '_' → logprob: -17.875003814697266
    8. '[' → logprob: -18.000003814697266
    9. '_lists' → logprob: -18.000003814697266
    10. '_List' → logprob: -18.375003814697266

Token 61: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0004329341172706336
    2. '[' → logprob: -7.875432968139648
    3. ' [' → logprob: -10.500432968139648
    4. '[i' → logprob: -11.750432968139648
    5. '```' → logprob: -12.375432968139648
    6. '[in' → logprob: -12.750432968139648
    7. 'index' → logprob: -13.000432968139648
    8. '[input' → logprob: -13.375432968139648
    9. '[ind' → logprob: -13.500432968139648
    10. '[
' → logprob: -14.000432968139648

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028861884027719498
    2. ']!=' → logprob: -3.6538619995117188
    3. '!=' → logprob: -6.403861999511719
    4. ' ]' → logprob: -7.153861999511719
    5. ']==' → logprob: -9.778861999511719
    6. ' !=' → logprob: -10.028861999511719
    7. '   ' → logprob: -11.278861999511719
    8. ' ' → logprob: -13.403861999511719
    9. '==' → logprob: -13.653861999511719
    10. ')!=' → logprob: -13.653861999511719

Token 63: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.013952046632766724
    2. ' !=' → logprob: -4.388952255249023
    3. '==' → logprob: -6.638952255249023
    4. ']!=' → logprob: -9.763952255249023
    5. '   ' → logprob: -11.013952255249023
    6. '()!=' → logprob: -11.638952255249023
    7. ' not' → logprob: -11.638952255249023
    8. ' ' → logprob: -11.763952255249023
    9. 'not' → logprob: -12.013952255249023
    10. ' ==' → logprob: -12.263952255249023

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005240872036665678
    2. ' input' → logprob: -5.2552409172058105
    3. ' ' → logprob: -13.255240440368652
    4. '<input' → logprob: -13.505240440368652
    5. '   ' → logprob: -14.005240440368652
    6. '	input' → logprob: -14.380240440368652
    7. '=input' → logprob: -14.505240440368652
    8. '(input' → logprob: -14.630240440368652
    9. '[input' → logprob: -15.130240440368652
    10. '       ' → logprob: -15.255240440368652

Token 65: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -8.061054359131958e-06
    2. 'character' → logprob: -11.875007629394531
    3. 'Character' → logprob: -14.750007629394531
    4. '_char' → logprob: -15.250007629394531
    5. '_CHARACTER' → logprob: -15.875007629394531
    6. '_' → logprob: -16.25000762939453
    7. '<Character' → logprob: -17.00000762939453
    8. '-character' → logprob: -17.37500762939453
    9. '[' → logprob: -17.50000762939453
    10. '_string' → logprob: -18.75000762939453

Token 66: '_list' (ID: 4162)
  Prédit: '_character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.3871408700942993
    2. '_list' → logprob: -1.1371408700942993
    3. 'character' → logprob: -9.012141227722168
    4. '_string' → logprob: -9.262141227722168
    5. '_length' → logprob: -10.262141227722168
    6. '_char' → logprob: -11.762141227722168
    7. 'list' → logprob: -12.887141227722168
    8. '_CHARACTER' → logprob: -13.637141227722168
    9. '_' → logprob: -13.887141227722168
    10. 'List' → logprob: -14.012141227722168

Token 67: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.10131713002920151
    2. '[' → logprob: -2.3513171672821045
    3. 'index' → logprob: -6.851316928863525
    4. '[input' → logprob: -11.101317405700684
    5. 'half' → logprob: -11.601317405700684
    6. '```' → logprob: -12.226317405700684
    7. '[-' → logprob: -12.601317405700684
    8. '[Index' → logprob: -12.726317405700684
    9. '[ind' → logprob: -12.976317405700684
    10. ' index' → logprob: -13.101317405700684

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008617054671049118
    2. ' +' → logprob: -4.758616924285889
    3. '   ' → logprob: -13.758617401123047
    4. '+n' → logprob: -14.383617401123047
    5. '+x' → logprob: -16.008617401123047
    6. ' ' → logprob: -16.008617401123047
    7. ']' → logprob: -16.258617401123047
    8. 'nd' → logprob: -16.258617401123047
    9. '＋' → logprob: -16.258617401123047
    10. '+self' → logprob: -16.758617401123047

Token 69: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.07892118394374847
    2. ' half' → logprob: -2.57892107963562
    3. '_half' → logprob: -10.7039213180542
    4. 'hal' → logprob: -12.2039213180542
    5. ' ' → logprob: -13.4539213180542
    6. '-half' → logprob: -13.7039213180542
    7. '   ' → logprob: -14.7039213180542
    8. '<|end|>' → logprob: -14.9539213180542
    9. 'halve' → logprob: -16.078920364379883
    10. ' halftime' → logprob: -16.078920364379883

Token 70: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -5.204720582696609e-05
    2. 'length' → logprob: -9.875052452087402
    3. 'ength' → logprob: -15.000052452087402
    4. '-length' → logprob: -16.250051498413086
    5. '```' → logprob: -17.625051498413086
    6. '   ' → logprob: -17.750051498413086
    7. 'else' → logprob: -17.875051498413086
    8. '_LENGTH' → logprob: -18.000051498413086
    9. '_width' → logprob: -18.125051498413086
    10. ' length' → logprob: -18.375051498413086

Token 71: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04251731187105179
    2. '):' → logprob: -3.4175174236297607
    3. ':
' → logprob: -4.917517185211182
    4. '):
' → logprob: -6.792517185211182
    5. ']:' → logprob: -8.16751766204834
    6. ')' → logprob: -10.29251766204834
    7. '   ' → logprob: -10.41751766204834
    8. '       ' → logprob: -10.91751766204834
    9. '```' → logprob: -11.91751766204834
    10. ']:
' → logprob: -12.29251766204834

Token 72: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10420378297567368
    2. 'print' → logprob: -3.229203701019287
    3. '   ' → logprob: -3.604203701019287
    4. ':' → logprob: -4.104203701019287
    5. '           ' → logprob: -4.479203701019287
    6. ':
' → logprob: -6.104203701019287
    7. ' print' → logprob: -6.854203701019287
    8. '```' → logprob: -8.104204177856445
    9. '               ' → logprob: -9.229204177856445
    10. 'break' → logprob: -9.729204177856445

Token 73: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16149848699569702
    2. '           ' → logprob: -2.536498546600342
    3. ' print' → logprob: -3.286498546600342
    4. '               ' → logprob: -3.661498546600342
    5. '       ' → logprob: -5.286498546600342
    6. '   ' → logprob: -6.411498546600342
    7. '	print' → logprob: -9.536498069763184
    8. '```' → logprob: -9.786498069763184
    9. 'break' → logprob: -10.536498069763184
    10. ' ' → logprob: -10.661498069763184

Token 74: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006782504729926586
    2. '(' → logprob: -5.006782531738281
    3. '(No' → logprob: -9.756782531738281
    4. '('' → logprob: -12.006782531738281
    5. 'No' → logprob: -13.631782531738281
    6. '("("' → logprob: -13.881782531738281
    7. '(NO' → logprob: -15.006782531738281
    8. '"No' → logprob: -15.381782531738281
    9. '(`' → logprob: -16.00678253173828
    10. '(no' → logprob: -16.25678253173828

Token 75: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0011883260449394584
    2. '"No' → logprob: -6.751188278198242
    3. '"' → logprob: -11.376188278198242
    4. ' No' → logprob: -12.501188278198242
    5. '("' → logprob: -14.376188278198242
    6. '“No' → logprob: -15.126188278198242
    7. '```' → logprob: -15.126188278198242
    8. 'Yes' → logprob: -15.376188278198242
    9. 'N' → logprob: -15.501188278198242
    10. 'NO' → logprob: -15.501188278198242

Token 76: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05265847593545914
    2. '               ' → logprob: -3.6776585578918457
    3. '")' → logprob: -3.8026585578918457
    4. '")
' → logprob: -6.302658557891846
    5. ')' → logprob: -6.552658557891846
    6. '       ' → logprob: -8.177658081054688
    7. ')
' → logprob: -9.052658081054688
    8. '   ' → logprob: -11.052658081054688
    9. '```' → logprob: -11.802658081054688
    10. '                   ' → logprob: -12.177658081054688

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041458409396000206
    2. '               ' → logprob: -8.625414848327637
    3. '       ' → logprob: -8.750414848327637
    4. '            
' → logprob: -10.750414848327637
    5. '<|end|>' → logprob: -11.125414848327637
    6. '```' → logprob: -11.625414848327637
    7. '
' → logprob: -11.750414848327637
    8. '		' → logprob: -12.250414848327637
    9. '   ' → logprob: -12.375414848327637
    10. '          ' → logprob: -13.000414848327637

Token 78: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028862981707789004
    2. 'break' → logprob: -9.500288963317871
    3. 'exit' → logprob: -9.625288963317871
    4. '		' → logprob: -10.375288963317871
    5. '       ' → logprob: -10.625288963317871
    6. '            
' → logprob: -10.875288963317871
    7. '               ' → logprob: -11.000288963317871
    8. '```' → logprob: -11.375288963317871
    9. '   ' → logprob: -11.500288963317871
    10. ' break' → logprob: -11.625288963317871

Token 79: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0004011177225038409
    2. '.' → logprob: -8.000401496887207
    3. 'exit' → logprob: -10.000401496887207
    4. '.ex' → logprob: -11.625401496887207
    5. '	exit' → logprob: -12.000401496887207
    6. '.stdout' → logprob: -13.625401496887207
    7. ' exit' → logprob: -14.125401496887207
    8. '_exit' → logprob: -14.125401496887207
    9. '.e' → logprob: -14.750401496887207
    10. '.Exit' → logprob: -14.750401496887207

Token 80: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005729094613343477
    2. '(' → logprob: -5.2557291984558105
    3. '()
' → logprob: -7.6307291984558105
    4. '()

' → logprob: -12.505728721618652
    5. '(
' → logprob: -13.130728721618652
    6. '()`' → logprob: -13.130728721618652
    7. '()\' → logprob: -14.755728721618652
    8. ' ()' → logprob: -14.755728721618652
    9. '())' → logprob: -15.255728721618652
    10. '().' → logprob: -15.755728721618652

Token 81: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015109316445887089
    2. '   ' → logprob: -6.626511096954346
    3. '    
' → logprob: -9.376510620117188
    4. ' print' → logprob: -10.126510620117188
    5. 'else' → logprob: -10.376510620117188
    6. '```' → logprob: -11.126510620117188
    7. '  
' → logprob: -12.376510620117188
    8. '       ' → logprob: -12.876510620117188
    9. '        
' → logprob: -13.251510620117188
    10. '            
' → logprob: -13.376510620117188

Token 82: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.4285862057004124e-05
    2. '   ' → logprob: -11.25003433227539
    3. '    
' → logprob: -11.25003433227539
    4. ' print' → logprob: -12.75003433227539
    5. 'else' → logprob: -13.00003433227539
    6. '
' → logprob: -14.00003433227539
    7. '  
' → logprob: -14.12503433227539
    8. '```' → logprob: -14.12503433227539
    9. 'Print' → logprob: -15.50003433227539
    10. '        
' → logprob: -15.62503433227539

Token 83: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.015328600071370602
    2. '(' → logprob: -4.265328407287598
    3. '("("' → logprob: -6.765328407287598
    4. '('' → logprob: -11.890328407287598
    5. '("(' → logprob: -12.765328407287598
    6. '(
' → logprob: -14.140328407287598
    7. ' ("' → logprob: -15.140328407287598
    8. '("")' → logprob: -15.640328407287598
    9. '("""' → logprob: -16.265329360961914
    10. '(

' → logprob: -16.515329360961914

Token 84: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00016384923947043717
    2. '"' → logprob: -8.750164031982422
    3. ' Yes' → logprob: -13.250164031982422
    4. '("' → logprob: -13.500164031982422
    5. 'YES' → logprob: -13.875164031982422
    6. 'Ye' → logprob: -14.500164031982422
    7. '“Yes' → logprob: -15.750164031982422
    8. '")' → logprob: -16.375164031982422
    9. '""' → logprob: -16.625164031982422
    10. 'Ok' → logprob: -16.750164031982422

Token 85: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004090393427759409
    2. ')' → logprob: -5.504090309143066
    3. ')")' → logprob: -11.379090309143066
    4. '")
' → logprob: -14.879090309143066
    5. '')' → logprob: -15.629090309143066
    6. '()' → logprob: -17.129091262817383
    7. '`)' → logprob: -17.754091262817383
    8. '())' → logprob: -18.254091262817383
    9. '!")' → logprob: -18.254091262817383
    10. '```' → logprob: -18.379091262817383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 46.99%
Précision adaptée (1ère position): 49.40%
Précision (top 10): 84.34%
================================================================================
