================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import reduce, lru_cache
from operator import itemgetter, add
from itertools import chain, starmap, compress

_ = sys.setrecursionlimit(10**4 // 2 + 1500)

def recursive_identity(x): return x
def decorator_chain(*decorators): return lambda f: reduce(lambda g, dec: dec(g), reversed(decorators), f)

def matrix_apply(func):
    def wrapper(*args, **kwargs):
        return func(*args, **kwargs)
    return wrapper

N, M = map(int, input().split())
p = list(map(int, input().split()))
d = [-1] * N

@lru_cache(maxsize=None)
def find(n):
    # create a fake stack context
    return n if d[n] < 0 else (d.__setitem__(n, find(d[n)]) or d[n])

def union(a, b):
    a, b = map(find, (a, b))
    if a == b:
        return False
    # Complex weight balancing:
    swap = (d[a] > d[b])
    if swap: a, b = b, a
    # Using slice assignment for "no reason"
    d[a:a+1] = [d[a] + d[b]]
    d[b:b+1] = [a]
    return True

def members(n):
    root = find(n)
    # Unnecessarily using compress and starmap
    return list(compress(range(N), starmap(lambda i, _: find(i) == root, enumerate(range(N)))))

def same(a, b):
    return (lambda x, y: x == y)(find(a), find(b))

for _ in map(recursive_identity, range(M)):
    x, y = map(int, input().split())
    union(x-1, y-1)

q = list(map(lambda z: next(i for i, e in enumerate(p) if e == z+1), range(N)))

ans = sum(starmap(lambda i, j: same(i, j), enumerate(q)))
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11625275760889053
    2. 'import' → logprob: -2.2412526607513428
    3. '.' → logprob: -5.991252899169922
    4. ' ' → logprob: -7.366252899169922
    5. '_import' → logprob: -9.116252899169922
    6. '	import' → logprob: -10.116252899169922
    7. '_' → logprob: -10.366252899169922
    8. ' .' → logprob: -10.366252899169922
    9. '.import' → logprob: -10.491252899169922
    10. '```' → logprob: -10.741252899169922

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6477278470993042
    2. ' wraps' → logprob: -1.0227278470993042
    3. 'partial' → logprob: -2.6477279663085938
    4. 'l' → logprob: -4.272727966308594
    5. ' l' → logprob: -4.272727966308594
    6. ' partial' → logprob: -4.647727966308594
    7. 'reduce' → logprob: -4.897727966308594
    8. 'cmp' → logprob: -7.772727966308594
    9. ' reduce' → logprob: -7.897727966308594
    10. 'cache' → logprob: -8.647727966308594

Token 7: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8878608345985413
    2. '(' → logprob: -1.5128607749938965
    3. '\n' → logprob: -2.0128607749938965
    4. '\' → logprob: -2.2628607749938965
    5. ',' → logprob: -2.6378607749938965
    6. '' → logprob: -4.1378607749938965
    7. ' ' → logprob: -4.5128607749938965
    8. 'def' → logprob: -5.2628607749938965
    9. '.' → logprob: -5.5128607749938965
    10. '[' → logprob: -5.7628607749938965

Token 8: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.22961366176605225
    2. ' partial' → logprob: -1.6046136617660522
    3. 'wrap' → logprob: -5.979613780975342
    4. ' wraps' → logprob: -7.104613780975342
    5. 'l' → logprob: -8.229613304138184
    6. ' l' → logprob: -8.604613304138184
    7. 'cmp' → logprob: -8.854613304138184
    8. '.partial' → logprob: -9.729613304138184
    9. ' cmp' → logprob: -10.104613304138184
    10. 'wr' → logprob: -10.479613304138184

Token 9: 'ru' (ID: 1942)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.8644692897796631
    2. 'ist' → logprob: -1.114469289779663
    3. 'amb' → logprob: -1.739469289779663
    4. 'a' → logprob: -2.989469289779663
    5. 'am' → logprob: -4.114469528198242
    6. 'is' → logprob: -6.114469528198242
    7. 'st' → logprob: -6.364469528198242
    8. 'en' → logprob: -6.989469528198242
    9. 'ru' → logprob: -7.239469528198242
    10. 'map' → logprob: -7.739469528198242

Token 10: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00038872790173627436
    2. '_c' → logprob: -8.375389099121094
    3. 'cache' → logprob: -9.375389099121094
    4. '_' → logprob: -10.375389099121094
    5. '_cached' → logprob: -11.250389099121094
    6. 'c' → logprob: -11.625389099121094
    7. '_CACHE' → logprob: -11.875389099121094
    8. '_ca' → logprob: -12.000389099121094
    9. 'Cache' → logprob: -13.750389099121094
    10. '```' → logprob: -13.875389099121094

Token 11: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1069583892822266
    2. 'import' → logprob: -1.3569583892822266
    3. '
' → logprob: -2.4819583892822266
    4. '```' → logprob: -2.6069583892822266
    5. '<|end|>' → logprob: -2.7319583892822266
    6. '' → logprob: -3.1069583892822266
    7. '\' → logprob: -3.2319583892822266
    8. '

' → logprob: -3.4819583892822266
    9. '[' → logprob: -4.481958389282227
    10. ' 

' → logprob: -4.606958389282227

Token 12: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3125811815261841
    2. 'import' → logprob: -2.0625810623168945
    3. '\n' → logprob: -3.1875810623168945
    4. '
' → logprob: -3.3125810623168945
    5. '```' → logprob: -4.3125810623168945
    6. '' → logprob: -4.6875810623168945
    7. ',' → logprob: -4.6875810623168945
    8. ' 

' → logprob: -5.0625810623168945
    9. '\' → logprob: -5.0625810623168945
    10. '


' → logprob: -5.3125810623168945

Token 13: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.42354559898376465
    2. ' math' → logprob: -1.7985455989837646
    3. ' os' → logprob: -2.4235455989837646
    4. ' typing' → logprob: -2.9235455989837646
    5. ' itertools' → logprob: -4.048545837402344
    6. ' operator' → logprob: -4.673545837402344
    7. 'collections' → logprob: -5.048545837402344
    8. ' ' → logprob: -6.798545837402344
    9. 'math' → logprob: -6.798545837402344
    10. 'os' → logprob: -7.298545837402344

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04875779524445534
    2. 'import' → logprob: -3.048757791519165
    3. '.' → logprob: -9.298757553100586
    4. '	import' → logprob: -10.173757553100586
    5. ' ' → logprob: -11.548757553100586
    6. '_import' → logprob: -11.798757553100586
    7. '<|end|>' → logprob: -11.923757553100586
    8. ' .' → logprob: -12.423757553100586
    9. ' as' → logprob: -13.048757553100586
    10. '.import' → logprob: -13.298757553100586

Token 15: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22355376183986664
    2. ' import' → logprob: -1.8485537767410278
    3. ' ' → logprob: -4.098553657531738
    4. ' mul' → logprob: -4.598553657531738
    5. ' item' → logprob: -5.098553657531738
    6. 'import' → logprob: -5.473553657531738
    7. 'add' → logprob: -5.598553657531738
    8. ' attr' → logprob: -7.973553657531738
    9. ' method' → logprob: -8.348553657531738
    10. 'item' → logprob: -8.473553657531738

Token 16: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0013696423266083002
    2. 'get' → logprob: -6.626369476318359
    3. 'g' → logprob: -10.75136947631836
    4. 'getitem' → logprob: -11.25136947631836
    5. 'gett' → logprob: -12.12636947631836
    6. 's' → logprob: -13.00136947631836
    7. '_get' → logprob: -15.25136947631836
    8. 'attr' → logprob: -15.37636947631836
    9. 'Getter' → logprob: -15.37636947631836
    10. 'ge' → logprob: -15.62636947631836

Token 17: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8060833811759949
    2. '

' → logprob: -1.5560834407806396
    3. 'import' → logprob: -2.3060834407806396
    4. '\' → logprob: -2.3060834407806396
    5. '
' → logprob: -3.4310834407806396
    6. ',' → logprob: -3.4310834407806396
    7. '```' → logprob: -3.5560834407806396
    8. '' → logprob: -4.1810832023620605
    9. '<|end|>' → logprob: -5.1810832023620605
    10. '


' → logprob: -5.4310832023620605

Token 18: ' add' (ID: 1147)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.478829026222229
    2. ' attr' → logprob: -1.103829026222229
    3. 'add' → logprob: -4.1038289070129395
    4. ' mul' → logprob: -4.4788289070129395
    5. 'method' → logprob: -4.7288289070129395
    6. 'mul' → logprob: -4.8538289070129395
    7. ' method' → logprob: -6.6038289070129395
    8. ' add' → logprob: -6.8538289070129395
    9. '```' → logprob: -7.8538289070129395
    10. 'gt' → logprob: -8.478829383850098

Token 19: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6409248113632202
    2. '

' → logprob: -1.3909248113632202
    3. 'import' → logprob: -2.3909249305725098
    4. '
' → logprob: -2.6409249305725098
    5. '\n' → logprob: -4.26592493057251
    6. ',
' → logprob: -4.76592493057251
    7. ',

' → logprob: -4.89092493057251
    8. '' → logprob: -5.14092493057251
    9. '


' → logprob: -5.14092493057251
    10. ' ' → logprob: -5.76592493057251

Token 20: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.45523273944854736
    2. ',' → logprob: -1.7052327394485474
    3. 'import' → logprob: -2.580232620239258
    4. '
' → logprob: -3.080232620239258
    5. ',

' → logprob: -4.455232620239258
    6. '```' → logprob: -4.455232620239258
    7. '\n' → logprob: -4.580232620239258
    8. '


' → logprob: -4.955232620239258
    9. ',
' → logprob: -5.830232620239258
    10. '' → logprob: -5.830232620239258

Token 21: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.46131816506385803
    2. ' collections' → logprob: -1.3363181352615356
    3. ' math' → logprob: -2.961318254470825
    4. 'collections' → logprob: -3.211318254470825
    5. 'math' → logprob: -4.711318016052246
    6. ' os' → logprob: -5.961318016052246
    7. ' typing' → logprob: -6.711318016052246
    8. ' functools' → logprob: -7.336318016052246
    9. 'os' → logprob: -7.961318016052246
    10. 'it' → logprob: -8.086318016052246

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0922498032450676
    2. 'import' → logprob: -2.467249870300293
    3. '.' → logprob: -6.342249870300293
    4. ' .' → logprob: -6.717249870300293
    5. '	import' → logprob: -8.717249870300293
    6. '.import' → logprob: -9.092249870300293
    7. ' ' → logprob: -11.217249870300293
    8. '.im' → logprob: -11.592249870300293
    9. ' itertools' → logprob: -11.592249870300293
    10. '_import' → logprob: -12.092249870300293

Token 23: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7168880701065063
    2. ' group' → logprob: -1.8418880701065063
    3. ' product' → logprob: -2.341887950897217
    4. ' permutations' → logprob: -2.966887950897217
    5. ' cycle' → logprob: -3.216887950897217
    6. ' accumulate' → logprob: -3.341887950897217
    7. ' count' → logprob: -3.591887950897217
    8. 'chain' → logprob: -3.966887950897217
    9. 'count' → logprob: -4.216887950897217
    10. ' combinations' → logprob: -4.216887950897217

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17643699049949646
    2. 'import' → logprob: -2.3014369010925293
    3. '

' → logprob: -3.3014369010925293
    4. '
' → logprob: -4.801436901092529
    5. ',
' → logprob: -5.176436901092529
    6. ',

' → logprob: -5.426436901092529
    7. '<|end|>' → logprob: -6.051436901092529
    8. '```' → logprob: -6.926436901092529
    9. 'from' → logprob: -7.301436901092529
    10. '\n' → logprob: -7.676436901092529

Token 25: ' st' (ID: 420)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3828415274620056
    2. ' group' → logprob: -2.7578415870666504
    3. ' is' → logprob: -3.2578415870666504
    4. 'group' → logprob: -3.2578415870666504
    5. 'cycle' → logprob: -3.3828415870666504
    6. 'count' → logprob: -3.3828415870666504
    7. ' cycle' → logprob: -4.00784158706665
    8. 'product' → logprob: -4.13284158706665
    9. 'acc' → logprob: -4.38284158706665
    10. 'is' → logprob: -4.38284158706665

Token 26: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.062485527247190475
    2. 'ar' → logprob: -2.812485456466675
    3. 'art' → logprob: -8.687485694885254
    4. 'arp' → logprob: -8.937485694885254
    5. 'arl' → logprob: -10.437485694885254
    6. 'r' → logprob: -10.562485694885254
    7. 'a' → logprob: -10.687485694885254
    8. 'ertools' → logprob: -10.687485694885254
    9. 'er' → logprob: -11.312485694885254
    10. 'arts' → logprob: -11.437485694885254

Token 27: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.0280383548888494e-06
    2. 'ep' → logprob: -15.625000953674316
    3. 'apse' → logprob: -16.250001907348633
    4. 'ап' → logprob: -16.375001907348633
    5. 'ethod' → logprob: -16.625001907348633
    6. 'e' → logprob: -16.625001907348633
    7. '	ap' → logprob: -16.625001907348633
    8. ' ap' → logprob: -16.750001907348633
    9. 'a' → logprob: -17.125001907348633
    10. 'up' → logprob: -17.125001907348633

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20539729297161102
    2. 'import' → logprob: -2.955397367477417
    3. '\n' → logprob: -3.080397367477417
    4. ',
' → logprob: -3.455397367477417
    5. '
' → logprob: -4.080397129058838
    6. '\' → logprob: -4.705397129058838
    7. '

' → logprob: -4.955397129058838
    8. '' → logprob: -5.330397129058838
    9. '```' → logprob: -5.455397129058838
    10. ',

' → logprob: -5.580397129058838

Token 29: ' compress' (ID: 34112)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -1.3197100162506104
    2. ' product' → logprob: -1.8197100162506104
    3. 'group' → logprob: -2.5697100162506104
    4. ' is' → logprob: -2.5697100162506104
    5. ' accumulate' → logprob: -2.8197100162506104
    6. 'product' → logprob: -2.9447100162506104
    7. 'tee' → logprob: -3.1947100162506104
    8. 'com' → logprob: -3.1947100162506104
    9. 'acc' → logprob: -3.1947100162506104
    10. ' cycle' → logprob: -3.4447100162506104

Token 30: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5697311162948608
    2. '

' → logprob: -1.5697311162948608
    3. '
' → logprob: -2.3197312355041504
    4. 'import' → logprob: -3.0697312355041504
    5. ',
' → logprob: -3.4447312355041504
    6. ',

' → logprob: -3.6947312355041504
    7. '\n' → logprob: -5.44473123550415
    8. '' → logprob: -5.56973123550415
    9. '


' → logprob: -5.69473123550415
    10. '```' → logprob: -5.69473123550415

Token 31: '_' (ID: 62)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3534488677978516
    2. '@' → logprob: -1.4784488677978516
    3. '#' → logprob: -1.8534488677978516
    4. 'def' → logprob: -1.8534488677978516
    5. 'import' → logprob: -2.4784488677978516
    6. 'from' → logprob: -3.9784488677978516
    7. '\' → logprob: -4.228448867797852
    8. '
' → logprob: -4.353448867797852
    9. '' → logprob: -4.603448867797852
    10. 'class' → logprob: -4.603448867797852

Token 32: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03637147322297096
    2. 'cache' → logprob: -4.16137170791626
    3. '_cache' → logprob: -5.91137170791626
    4. 'CACHE' → logprob: -5.91137170791626
    5. ' =' → logprob: -6.16137170791626
    6. 'c' → logprob: -6.16137170791626
    7. 'l' → logprob: -6.78637170791626
    8. '_c' → logprob: -6.91137170791626
    9. '_l' → logprob: -7.28637170791626
    10. 'import' → logprob: -7.41137170791626

Token 33: ' sys' (ID: 12228)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.383766233921051
    2. '[]' → logprob: -2.3837661743164062
    3. 'chain' → logprob: -2.6337661743164062
    4. 'list' → logprob: -3.3837661743164062
    5. '_' → logprob: -3.5087661743164062
    6. ' lambda' → logprob: -4.258766174316406
    7. 'sys' → logprob: -4.383766174316406
    8. 'None' → logprob: -5.008766174316406
    9. 'len' → logprob: -5.258766174316406
    10. 'int' → logprob: -5.258766174316406

Token 34: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03841129317879677
    2. '.version' → logprob: -3.6634113788604736
    3. '.argv' → logprob: -4.9134111404418945
    4. '.ex' → logprob: -5.9134111404418945
    5. '.path' → logprob: -7.2884111404418945
    6. '.exit' → logprob: -7.6634111404418945
    7. '._' → logprob: -8.413411140441895
    8. '.stdout' → logprob: -8.913411140441895
    9. '.modules' → logprob: -9.413411140441895
    10. '.stdin' → logprob: -9.538411140441895

Token 35: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.4272855520248413
    2. 'trace' → logprob: -2.052285671234131
    3. 'default' → logprob: -2.427285671234131
    4. 'profile' → logprob: -3.802285671234131
    5. 'execution' → logprob: -3.802285671234131
    6. 's' → logprob: -4.552285671234131
    7. 'e' → logprob: -4.552285671234131
    8. 'ex' → logprob: -4.802285671234131
    9. 'switch' → logprob: -4.927285671234131
    10. 't' → logprob: -4.927285671234131

Token 36: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0004825081559829414
    2. 'ursive' → logprob: -7.875482559204102
    3. 'urs' → logprob: -9.500482559204102
    4. 'ur' → logprob: -11.375482559204102
    5. 'urse' → logprob: -11.875482559204102
    6. '_' → logprob: -12.500482559204102
    7. 'usion' → logprob: -14.000482559204102
    8. 'ursor' → logprob: -14.125482559204102
    9. 'urf' → logprob: -14.250482559204102
    10. '[' → logprob: -14.375482559204102

Token 37: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -4.36574100604048e-06
    2. 'lim' → logprob: -13.375004768371582
    3. 'depth' → logprob: -13.375004768371582
    4. ' limit' → logprob: -14.500004768371582
    5. 'imit' → logprob: -15.125004768371582
    6. 'Limit' → logprob: -15.375004768371582
    7. '_limit' → logprob: -16.125003814697266
    8. '(limit' → logprob: -17.125003814697266
    9. 'enabled' → logprob: -17.625003814697266
    10. 'limited' → logprob: -17.625003814697266

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.538490950129926e-05
    2. ' (' → logprob: -10.750055313110352
    3. '40' → logprob: -11.125055313110352
    4. '(
' → logprob: -12.000055313110352
    5. ' ' → logprob: -13.000055313110352
    6. '50' → logprob: -13.375055313110352
    7. '(int' → logprob: -13.500055313110352
    8. '(_)' → logprob: -13.625055313110352
    9. ')' → logprob: -13.750055313110352
    10. '()' → logprob: -14.000055313110352

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20456141233444214
    2. '100' → logprob: -1.704561471939087
    3. '300' → logprob: -6.204561233520508
    4. '999' → logprob: -7.579561233520508
    5. '500' → logprob: -9.079561233520508
    6. ' ' → logprob: -9.204561233520508
    7. '200' → logprob: -9.204561233520508
    8. '9' → logprob: -9.579561233520508
    9. '1' → logprob: -9.829561233520508
    10. '250' → logprob: -10.079561233520508

Token 40: '**' (ID: 410)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.259341299533844
    2. '000' → logprob: -1.5093412399291992
    3. '0' → logprob: -5.509341239929199
    4. '5' → logprob: -7.009341239929199
    5. '7' → logprob: -7.009341239929199
    6. '6' → logprob: -7.384341239929199
    7. '007' → logprob: -7.759341239929199
    8. '4' → logprob: -8.0093412399292
    9. '**' → logprob: -9.3843412399292
    10. '005' → logprob: -10.6343412399292

Token 41: '4' (ID: 19)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0066744014620780945
    2. '9' → logprob: -5.756674289703369
    3. '6' → logprob: -6.006674289703369
    4. '8' → logprob: -6.881674289703369
    5. '**' → logprob: -13.631674766540527
    6. '5' → logprob: -15.131674766540527
    7. '```' → logprob: -15.381674766540527
    8. '4' → logprob: -16.25667381286621
    9. ' ' → logprob: -17.38167381286621
    10. ')' → logprob: -17.88167381286621

Token 42: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.372916686814278e-05
    2. '0' → logprob: -10.3750638961792
    3. '))' → logprob: -10.7500638961792
    4. '6' → logprob: -13.1250638961792
    5. '9' → logprob: -13.1250638961792
    6. ' )' → logprob: -13.1250638961792
    7. '4' → logprob: -13.3750638961792
    8. '5' → logprob: -14.2500638961792
    9. '3' → logprob: -14.5000638961792
    10. '1' → logprob: -14.6250638961792

Token 43: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0610259585082531
    2. '3' → logprob: -4.061026096343994
    3. ' ' → logprob: -4.061026096343994
    4. '9' → logprob: -4.561026096343994
    5. '5' → logprob: -5.436026096343994
    6. '4' → logprob: -5.436026096343994
    7. '8' → logprob: -6.686026096343994
    8. '6' → logprob: -6.811026096343994
    9. '7' → logprob: -6.936026096343994
    10. '10' → logprob: -7.061026096343994

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028266875073313713
    2. '4' → logprob: -4.528266906738281
    3. '3' → logprob: -4.903266906738281
    4. '5' → logprob: -5.403266906738281
    5. '8' → logprob: -6.028266906738281
    6. '6' → logprob: -7.028266906738281
    7. ' ' → logprob: -7.403266906738281
    8. '7' → logprob: -7.778266906738281
    9. '10' → logprob: -8.153266906738281
    10. '9' → logprob: -8.653266906738281

Token 45: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021248033735901117
    2. '0' → logprob: -7.127124786376953
    3. '5' → logprob: -7.752124786376953
    4. '6' → logprob: -8.502124786376953
    5. '4' → logprob: -8.627124786376953
    6. '(' → logprob: -9.002124786376953
    7. '1' → logprob: -9.752124786376953
    8. '+' → logprob: -10.002124786376953
    9. '**' → logprob: -10.002124786376953
    10. ' )' → logprob: -10.002124786376953

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9106223583221436
    2. '500' → logprob: -1.7856223583221436
    3. '10' → logprob: -2.1606223583221436
    4. '5' → logprob: -2.2856223583221436
    5. '100' → logprob: -2.4106223583221436
    6. '2' → logprob: -3.7856223583221436
    7. ' ' → logprob: -3.9106223583221436
    8. '50' → logprob: -4.035622596740723
    9. '200' → logprob: -4.535622596740723
    10. '7' → logprob: -4.910622596740723

Token 47: '150' (ID: 5215)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0348868370056152
    2. '1' → logprob: -1.5348868370056152
    3. '500' → logprob: -2.1598868370056152
    4. '100' → logprob: -2.1598868370056152
    5. '5' → logprob: -2.2848868370056152
    6. '50' → logprob: -2.7848868370056152
    7. '2' → logprob: -4.659886837005615
    8. '7' → logprob: -5.659886837005615
    9. '200' → logprob: -5.784886837005615
    10. '512' → logprob: -5.909886837005615

Token 48: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077749681659042835
    2. '0' → logprob: -5.007774829864502
    3. '1' → logprob: -8.13277530670166
    4. '5' → logprob: -8.63277530670166
    5. '4' → logprob: -8.88277530670166
    6. '6' → logprob: -9.25777530670166
    7. '))' → logprob: -9.50777530670166
    8. '9' → logprob: -9.75777530670166
    9. '41' → logprob: -10.13277530670166
    10. ' )' → logprob: -10.38277530670166

Token 49: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '))' → logprob: -13.000007629394531
    3. ')
' → logprob: -13.125007629394531
    4. ' )' → logprob: -13.625007629394531
    5. '0' → logprob: -14.375007629394531
    6. '_' → logprob: -15.000007629394531
    7. '(' → logprob: -15.875007629394531
    8. '6' → logprob: -16.12500762939453
    9. ')

' → logprob: -16.25000762939453
    10. '1' → logprob: -16.25000762939453

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9417461156845093
    2. '_' → logprob: -1.5667461156845093
    3. 'd' → logprob: -2.066746234893799
    4. '@' → logprob: -2.316746234893799
    5. '#' → logprob: -2.441746234893799
    6. '
' → logprob: -3.441746234893799
    7. '

' → logprob: -4.691746234893799
    8. 'class' → logprob: -4.816746234893799
    9. '\' → logprob: -4.941746234893799
    10. 'de' → logprob: -4.941746234893799

Token 51: ' recursive' (ID: 66711)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.0388565063476562
    2. ' fibonacci' → logprob: -1.9138565063476562
    3. ' ' → logprob: -2.1638565063476562
    4. ' _' → logprob: -2.5388565063476562
    5. '_' → logprob: -2.6638565063476562
    6. ' fib' → logprob: -3.2888565063476562
    7. ' f' → logprob: -3.4138565063476562
    8. ' solve' → logprob: -3.6638565063476562
    9. ' factor' → logprob: -4.163856506347656
    10. ' main' → logprob: -4.288856506347656

Token 52: '_identity' (ID: 111655)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0621611624956131
    2. '_sum' → logprob: -4.187160968780518
    3. '_factor' → logprob: -4.312160968780518
    4. '_f' → logprob: -4.562160968780518
    5. '_add' → logprob: -5.687160968780518
    6. '_div' → logprob: -5.812160968780518
    7. '_reduce' → logprob: -5.812160968780518
    8. '_function' → logprob: -6.062160968780518
    9. '_call' → logprob: -6.312160968780518
    10. '_search' → logprob: -7.062160968780518

Token 53: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023213446140289307
    2. '(x' → logprob: -4.2732133865356445
    3. ' (' → logprob: -6.0232133865356445
    4. '():' → logprob: -6.3982133865356445
    5. '(:' → logprob: -7.0232133865356445
    6. '(a' → logprob: -7.0232133865356445
    7. '(lambda' → logprob: -7.7732133865356445
    8. '(n' → logprob: -8.023213386535645
    9. '(_:' → logprob: -8.148213386535645
    10. '(*' → logprob: -8.148213386535645

Token 54: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035058727953583
    2. ':' → logprob: -6.253505706787109
    3. ')' → logprob: -6.628505706787109
    4. '):
' → logprob: -8.87850570678711
    5. ',' → logprob: -9.50350570678711
    6. ' ):' → logprob: -10.50350570678711
    7. '   ' → logprob: -12.50350570678711
    8. '=' → logprob: -12.75350570678711
    9. ' :' → logprob: -13.25350570678711
    10. '}:' → logprob: -14.87850570678711

Token 55: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02283913642168045
    2. '    ' → logprob: -5.147839069366455
    3. '    
' → logprob: -5.272839069366455
    4. ' return' → logprob: -5.397839069366455
    5. '\n' → logprob: -6.022839069366455
    6. '
' → logprob: -6.397839069366455
    7. ':return' → logprob: -7.272839069366455
    8. 'return' → logprob: -7.522839069366455
    9. '\' → logprob: -7.772839069366455
    10. ' 
' → logprob: -8.147839546203613

Token 56: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931869983673096
    2. ' x' → logprob: -0.6931869983673096
    3. ' ' → logprob: -11.06818675994873
    4. ' recursive' → logprob: -11.81818675994873
    5. '	x' → logprob: -12.19318675994873
    6. ' ' → logprob: -12.31818675994873
    7. 'recursive' → logprob: -12.56818675994873
    8. '   ' → logprob: -13.56818675994873
    9. '    ' → logprob: -14.44318675994873
    10. ' None' → logprob: -15.63068675994873

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4935583472251892
    2. ':' → logprob: -2.368558406829834
    3. '\' → logprob: -2.618558406829834
    4. 'def' → logprob: -2.993558406829834
    5. '_' → logprob: -3.118558406829834
    6. '\n' → logprob: -3.243558406829834
    7. '

' → logprob: -3.743558406829834
    8. '(' → logprob: -4.368558406829834
    9. '<|end|>' → logprob: -4.493558406829834
    10. '' → logprob: -4.618558406829834

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0686898231506348
    2. '
' → logprob: -1.3186898231506348
    3. '

' → logprob: -1.8186898231506348
    4. '\' → logprob: -2.3186898231506348
    5. '\n' → logprob: -2.8186898231506348
    6. ':' → logprob: -3.8186898231506348
    7. '' → logprob: -4.568689823150635
    8. '_' → logprob: -4.818689823150635
    9. '#' → logprob: -5.568689823150635
    10. ':def' → logprob: -5.693689823150635

Token 59: ' decorator' (ID: 108169)
  Prédit: ' recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursive' → logprob: -0.1024865061044693
    2. ' _' → logprob: -2.9774866104125977
    3. ' ' → logprob: -4.477486610412598
    4. ' factorial' → logprob: -4.727486610412598
    5. '_recursive' → logprob: -5.227486610412598
    6. ' def' → logprob: -5.477486610412598
    7. ' add' → logprob: -6.227486610412598
    8. ' l' → logprob: -6.477486610412598
    9. ' identity' → logprob: -6.602486610412598
    10. 'recursive' → logprob: -6.852486610412598

Token 60: '_chain' (ID: 74449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2449049949645996
    2. '(func' → logprob: -1.8699049949645996
    3. '_' → logprob: -3.4949049949645996
    4. '(f' → logprob: -4.6199049949646
    5. '(_' → logprob: -4.9949049949646
    6. 'def' → logprob: -5.6199049949646
    7. '(function' → logprob: -6.2449049949646
    8. '(def' → logprob: -6.8699049949646
    9. '(_)' → logprob: -7.2449049949646
    10. '(fun' → logprob: -7.2449049949646

Token 61: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036068400368094444
    2. '(*' → logprob: -6.628606796264648
    3. '(func' → logprob: -7.628606796264648
    4. '(chain' → logprob: -8.128606796264648
    5. '():' → logprob: -8.503606796264648
    6. '(f' → logprob: -8.878606796264648
    7. '(lambda' → logprob: -9.003606796264648
    8. '(_' → logprob: -9.128606796264648
    9. '_' → logprob: -9.253606796264648
    10. '(de' → logprob: -9.378606796264648

Token 62: 'decor' (ID: 58175)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.35941213369369507
    2. 'decor' → logprob: -1.4844121932983398
    3. 'fs' → logprob: -3.48441219329834
    4. 'args' → logprob: -4.23441219329834
    5. 'functions' → logprob: -4.60941219329834
    6. 'dec' → logprob: -5.23441219329834
    7. 'de' → logprob: -5.23441219329834
    8. 'ds' → logprob: -5.35941219329834
    9. ' funcs' → logprob: -6.10941219329834
    10. ' decorators' → logprob: -6.35941219329834

Token 63: 'ators' (ID: 4840)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.05740194395184517
    2. 'ators' → logprob: -2.9324018955230713
    3. 's' → logprob: -6.18240213394165
    4. ')' → logprob: -9.432401657104492
    5. 'orat' → logprob: -9.807401657104492
    6. 'ar' → logprob: -9.807401657104492
    7. 'ator' → logprob: -10.057401657104492
    8. 'tor' → logprob: -10.307401657104492
    9. '```' → logprob: -10.557401657104492
    10. ' or' → logprob: -10.682401657104492

Token 64: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015800826076883823
    2. '):
' → logprob: -9.375158309936523
    3. ' ):' → logprob: -10.000158309936523
    4. ',' → logprob: -11.000158309936523
    5. ':' → logprob: -12.375158309936523
    6. ')' → logprob: -12.750158309936523
    7. '():' → logprob: -13.375158309936523
    8. 'def' → logprob: -14.750158309936523
    9. '):
' → logprob: -15.000158309936523
    10. ' ' → logprob: -15.250158309936523

Token 65: ' return' (ID: 622)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10872825980186462
    2. '   ' → logprob: -2.8587281703948975
    3. 'def' → logprob: -3.2337281703948975
    4. ' return' → logprob: -5.358728408813477
    5. '    
' → logprob: -7.608728408813477
    6. '
' → logprob: -8.233728408813477
    7. '    ' → logprob: -8.358728408813477
    8. '```' → logprob: -8.858728408813477
    9. '	def' → logprob: -8.983728408813477
    10. 'return' → logprob: -9.733728408813477

Token 66: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.4208705723285675
    2. 'lambda' → logprob: -1.1708705425262451
    3. '(lambda' → logprob: -3.795870542526245
    4. ' chain' → logprob: -6.170870780944824
    5. ' lamb' → logprob: -6.420870780944824
    6. ' (' → logprob: -6.795870780944824
    7. ' compose' → logprob: -6.795870780944824
    8. 'chain' → logprob: -6.920870780944824
    9. ' reduce' → logprob: -7.045870780944824
    10. 'decor' → logprob: -7.295870780944824

Token 67: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0893562063574791
    2. 'f' → logprob: -2.4643561840057373
    3. ' func' → logprob: -8.714356422424316
    4. ' g' → logprob: -9.839356422424316
    5. '	f' → logprob: -10.214356422424316
    6. ' x' → logprob: -10.464356422424316
    7. ' lambda' → logprob: -10.589356422424316
    8. ' fn' → logprob: -10.714356422424316
    9. ' ' → logprob: -10.714356422424316
    10. 'func' → logprob: -10.964356422424316

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026407750556245446
    2. ' :' → logprob: -8.250264167785645
    3. ':f' → logprob: -14.250264167785645
    4. ':
' → logprob: -14.625264167785645
    5. 'decor' → logprob: -15.500264167785645
    6. '=' → logprob: -15.875264167785645
    7. ' ' → logprob: -15.875264167785645
    8. ' f' → logprob: -15.937764167785645
    9. '   ' → logprob: -16.125263214111328
    10. '1' → logprob: -16.312763214111328

Token 69: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5501996874809265
    2. ' reduce' → logprob: -0.9251996874809265
    3. ' functools' → logprob: -3.8001997470855713
    4. 'decor' → logprob: -6.675199508666992
    5. ' ' → logprob: -7.675199508666992
    6. '   ' → logprob: -7.800199508666992
    7. ' chain' → logprob: -7.800199508666992
    8. 'fun' → logprob: -8.050199508666992
    9. ' decorate' → logprob: -8.425199508666992
    10. 'decorate' → logprob: -8.550199508666992

Token 70: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.002304889028891921
    2. '(operator' → logprob: -6.752305030822754
    3. ' (' → logprob: -7.627305030822754
    4. '(' → logprob: -7.627305030822754
    5. '(add' → logprob: -9.252305030822754
    6. '(l' → logprob: -10.377305030822754
    7. ' lambda' → logprob: -11.627305030822754
    8. 'lambda' → logprob: -12.127305030822754
    9. '(
' → logprob: -12.377305030822754
    10. '(de' → logprob: -12.752305030822754

Token 71: ' g' (ID: 329)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7572447657585144
    2. ' f' → logprob: -0.8822447657585144
    3. 'f' → logprob: -2.757244825363159
    4. 'lambda' → logprob: -3.132244825363159
    5. '(lambda' → logprob: -5.63224458694458
    6. 'decor' → logprob: -5.75724458694458
    7. ' g' → logprob: -6.25724458694458
    8. ' (' → logprob: -8.382245063781738
    9. ' decorator' → logprob: -8.507245063781738
    10. 'g' → logprob: -8.632245063781738

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018887832993641496
    2. ' ,' → logprob: -9.500188827514648
    3. 'f' → logprob: -9.750188827514648
    4. 'lambda' → logprob: -10.875188827514648
    5. ',f' → logprob: -11.375188827514648
    6. 'ambda' → logprob: -12.125188827514648
    7. ',g' → logprob: -12.250188827514648
    8. ' f' → logprob: -12.875188827514648
    9. '(lambda' → logprob: -13.000188827514648
    10. '=lambda' → logprob: -13.625188827514648

Token 73: ' dec' (ID: 1885)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.010063648223877
    2. 'f' → logprob: -1.260063648223877
    3. 'decor' → logprob: -2.010063648223877
    4. 'h' → logprob: -2.635063648223877
    5. 'dec' → logprob: -3.010063648223877
    6. ' d' → logprob: -3.385063648223877
    7. ' f' → logprob: -3.635063648223877
    8. ' dec' → logprob: -4.010063648223877
    9. ' h' → logprob: -4.260063648223877
    10. ' decorator' → logprob: -6.385063648223877

Token 74: ':' (ID: 25)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0009062222670763731
    2. ':' → logprob: -7.125905990600586
    3. ' or' → logprob: -10.375905990600586
    4. 'corator' → logprob: -10.375905990600586
    5. '(or' → logprob: -11.125905990600586
    6. 'f' → logprob: -12.500905990600586
    7. 's' → logprob: -12.625905990600586
    8. 'er' → logprob: -12.875905990600586
    9. 'ator' → logprob: -13.250905990600586
    10. '_or' → logprob: -13.500905990600586

Token 75: ' dec' (ID: 1885)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.038134556263685226
    2. ' dec' → logprob: -3.2881345748901367
    3. '(dec' → logprob: -10.163134574890137
    4. 'lambda' → logprob: -10.663134574890137
    5. 'decor' → logprob: -11.538134574890137
    6. '   ' → logprob: -12.288134574890137
    7. ' lambda' → logprob: -12.413134574890137
    8. 'de' → logprob: -12.538134574890137
    9. ' ' → logprob: -13.163134574890137
    10. 'd' → logprob: -13.288134574890137

Token 76: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.003091081976890564
    2. '(lambda' → logprob: -6.128090858459473
    3. '(' → logprob: -7.128090858459473
    4. '(
' → logprob: -10.128090858459473
    5. ' (' → logprob: -10.253090858459473
    6. '(f' → logprob: -10.753090858459473
    7. ')' → logprob: -13.003090858459473
    8. ')(' → logprob: -14.128090858459473
    9. '
' → logprob: -14.378090858459473
    10. ' ' → logprob: -14.628090858459473

Token 77: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37721481919288635
    2. '),' → logprob: -1.252214789390564
    3. ')' → logprob: -4.1272149085998535
    4. '(f' → logprob: -5.3772149085998535
    5. ' ,' → logprob: -5.7522149085998535
    6. ',f' → logprob: -5.7522149085998535
    7. '(g' → logprob: -8.252214431762695
    8. ')(' → logprob: -8.377214431762695
    9. ' ),' → logprob: -8.627214431762695
    10. '(' → logprob: -8.627214431762695

Token 78: ' reversed' (ID: 57184)
  Prédit: ' decorators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decorators' → logprob: -0.0622091107070446
    2. 'decor' → logprob: -2.812209129333496
    3. '[' → logprob: -9.562209129333496
    4. ' ' → logprob: -10.437209129333496
    5. ' reversed' → logprob: -10.562209129333496
    6. ')' → logprob: -10.937209129333496
    7. '.decorators' → logprob: -11.062209129333496
    8. ' [' → logprob: -11.187209129333496
    9. 'de' → logprob: -11.187209129333496
    10. '   ' → logprob: -11.437209129333496

Token 79: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.00042864278657361865
    2. 'decor' → logprob: -8.250428199768066
    3. '(' → logprob: -9.125428199768066
    4. ' decorators' → logprob: -10.000428199768066
    5. '(dec' → logprob: -11.750428199768066
    6. 'de' → logprob: -13.125428199768066
    7. ')' → logprob: -13.750428199768066
    8. ' (' → logprob: -14.375428199768066
    9. '/de' → logprob: -15.125428199768066
    10. '	de' → logprob: -15.375428199768066

Token 80: 'cor' (ID: 11111)
  Prédit: 'cor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.00023846338444855064
    2. 'corator' → logprob: -9.000238418579102
    3. ' cor' → logprob: -9.375238418579102
    4. 'cors' → logprob: -11.500238418579102
    5. 'c' → logprob: -12.250238418579102
    6. 'Cor' → logprob: -12.500238418579102
    7. 'corn' → logprob: -13.000238418579102
    8. 'decor' → logprob: -13.000238418579102
    9. '_cor' → logprob: -13.250238418579102
    10. '```' → logprob: -14.125238418579102

Token 81: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.024296557530760765
    2. ')' → logprob: -4.274296760559082
    3. 's' → logprob: -4.899296760559082
    4. '_' → logprob: -6.774296760559082
    5. 'tors' → logprob: -7.274296760559082
    6. '))' → logprob: -8.774296760559082
    7. '_)' → logprob: -9.649296760559082
    8. 'ator' → logprob: -9.774296760559082
    9. 'ors' → logprob: -9.899296760559082
    10. 'a' → logprob: -10.024296760559082

Token 82: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005156435072422028
    2. ',' → logprob: -5.505156517028809
    3. '),' → logprob: -7.005156517028809
    4. '))' → logprob: -9.630156517028809
    5. ' )' → logprob: -10.130156517028809
    6. ')>' → logprob: -10.755156517028809
    7. ',)' → logprob: -11.255156517028809
    8. ')))' → logprob: -11.880156517028809
    9. ')">' → logprob: -12.380156517028809
    10. ')}}' → logprob: -12.505156517028809

Token 83: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4740893542766571
    2. 'f' → logprob: -0.9740893840789795
    3. ')' → logprob: -11.849089622497559
    4. ' ' → logprob: -12.849089622497559
    5. '	f' → logprob: -13.724089622497559
    6. ' )' → logprob: -14.224089622497559
    7. ' ' → logprob: -15.099089622497559
    8. '(f' → logprob: -16.224088668823242
    9. '_f' → logprob: -16.724088668823242
    10. '   ' → logprob: -16.849088668823242

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. '))' → logprob: -15.125003814697266
    4. ')
' → logprob: -16.250003814697266
    5. ')`' → logprob: -17.125003814697266
    6. ')))' → logprob: -17.750003814697266
    7. ')return' → logprob: -18.125003814697266
    8. ')**' → logprob: -18.250003814697266
    9. ')

' → logprob: -18.500003814697266
    10. ')}}' → logprob: -18.625003814697266

Token 85: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18622997403144836
    2. ':' → logprob: -2.561229944229126
    3. '@' → logprob: -3.311229944229126
    4. '
' → logprob: -4.311230182647705
    5. 'def' → logprob: -4.436230182647705
    6. '.' → logprob: -4.811230182647705
    7. '(
' → logprob: -5.186230182647705
    8. '#' → logprob: -5.311230182647705
    9. ',' → logprob: -5.936230182647705
    10. '\' → logprob: -6.186230182647705

Token 86: ' matrix' (ID: 12248)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6647331118583679
    2. '_' → logprob: -1.1647331714630127
    3. ' ' → logprob: -3.2897331714630127
    4. ' decorator' → logprob: -3.4147331714630127
    5. ' recursive' → logprob: -3.7897331714630127
    6. ' add' → logprob: -3.7897331714630127
    7. ' space' → logprob: -4.414732933044434
    8. ' map' → logprob: -4.664732933044434
    9. ' ' → logprob: -5.914732933044434
    10. ' dfs' → logprob: -6.539732933044434

Token 87: '_apply' (ID: 97891)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1071251854300499
    2. '(' → logprob: -2.6071252822875977
    3. '_m' → logprob: -5.357125282287598
    4. '_trans' → logprob: -5.982125282287598
    5. '_transform' → logprob: -6.107125282287598
    6. '_size' → logprob: -6.107125282287598
    7. '_factor' → logprob: -6.357125282287598
    8. '_matrix' → logprob: -6.357125282287598
    9. '_mul' → logprob: -6.982125282287598
    10. '_to' → logprob: -7.107125282287598

Token 88: '(func' (ID: 40416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000995295005850494
    2. '("("' → logprob: -8.125995635986328
    3. '(lambda' → logprob: -8.500995635986328
    4. '(matrix' → logprob: -9.875995635986328
    5. '_' → logprob: -9.875995635986328
    6. '(func' → logprob: -10.000995635986328
    7. '_parent' → logprob: -10.375995635986328
    8. '('' → logprob: -11.000995635986328
    9. '(operator' → logprob: -11.250995635986328
    10. '(parent' → logprob: -11.375995635986328

Token 89: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. '):' → logprob: -10.750043869018555
    3. ',row' → logprob: -12.500043869018555
    4. ')' → logprob: -13.125043869018555
    5. ',n' → logprob: -13.125043869018555
    6. ',array' → logprob: -13.375043869018555
    7. ',column' → logprob: -13.750043869018555
    8. '_matrix' → logprob: -13.875043869018555
    9. '_,' → logprob: -14.000043869018555
    10. 's' → logprob: -14.000043869018555

Token 90: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7964514493942261
    2. '(' → logprob: -1.046451449394226
    3. '   ' → logprob: -1.796451449394226
    4. '(n' → logprob: -4.421451568603516
    5. '(func' → logprob: -5.421451568603516
    6. '():' → logprob: -6.421451568603516
    7. '\' → logprob: -6.421451568603516
    8. ':def' → logprob: -6.796451568603516
    9. 'def' → logprob: -7.046451568603516
    10. '(def' → logprob: -7.296451568603516

Token 91: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14602258801460266
    2. '   ' → logprob: -2.5210225582122803
    3. 'def' (adapté à ' def') → logprob: -3.6460225582122803
    4. '    ' → logprob: -3.6460225582122803
    5. ' ' → logprob: -7.021022796630859
    6. ' func' → logprob: -7.396022796630859
    7. '\' → logprob: -7.646022796630859
    8. '	def' → logprob: -8.52102279663086
    9. ' n' → logprob: -9.02102279663086
    10. '\n' → logprob: -9.14602279663086

Token 92: ' wrapper' (ID: 26504)
  Prédit: ' wrapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.30971285700798035
    2. ' matrix' → logprob: -1.5597128868103027
    3. ' decorator' → logprob: -3.3097128868103027
    4. ' apply' → logprob: -4.684712886810303
    5. '_wrapper' → logprob: -5.559712886810303
    6. ' mat' → logprob: -5.809712886810303
    7. ' func' → logprob: -6.934712886810303
    8. 'wrapper' → logprob: -7.059712886810303
    9. '_apply' → logprob: -7.559712886810303
    10. ' f' → logprob: -7.684712886810303

Token 93: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48492109775543213
    2. '(matrix' → logprob: -0.9849210977554321
    3. '(row' → logprob: -5.734920978546143
    4. '(mat' → logprob: -6.109920978546143
    5. '(rows' → logprob: -6.234920978546143
    6. '(x' → logprob: -7.109920978546143
    7. '(func' → logprob: -7.609920978546143
    8. '(*' → logprob: -7.859920978546143
    9. '(m' → logprob: -7.859920978546143
    10. '(data' → logprob: -7.984920978546143

Token 94: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.11591862887144089
    2. 'mat' → logprob: -2.8659186363220215
    3. 'matrix' → logprob: -2.9909186363220215
    4. 'rows' → logprob: -6.7409186363220215
    5. 'arrays' → logprob: -7.6159186363220215
    6. 'x' → logprob: -8.490918159484863
    7. 'arg' → logprob: -8.865918159484863
    8. 'm' → logprob: -9.615918159484863
    9. 'a' → logprob: -9.865918159484863
    10. 'arr' → logprob: -10.615918159484863

Token 95: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14318788051605225
    2. ',' → logprob: -2.018187999725342
    3. '):
' → logprob: -7.893187999725342
    4. ':' → logprob: -9.268187522888184
    5. ')' → logprob: -10.893187522888184
    6. '   ' → logprob: -11.768187522888184
    7. ' ):' → logprob: -12.393187522888184
    8. ',
' → logprob: -12.643187522888184
    9. '():' → logprob: -13.643187522888184
    10. '):
' → logprob: -13.893187522888184

Token 96: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.7519004344940186
    2. '**' → logprob: -1.0019004344940186
    3. ' matrix' → logprob: -2.2519004344940186
    4. ')' → logprob: -3.6269004344940186
    5. ' ' → logprob: -4.751900672912598
    6. 'matrix' → logprob: -5.001900672912598
    7. ' row' → logprob: -5.376900672912598
    8. '**)' → logprob: -6.251900672912598
    9. '   ' → logprob: -6.626900672912598
    10. ' **)' → logprob: -6.626900672912598

Token 97: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.22586315870285034
    2. 's' → logprob: -1.7258632183074951
    3. ')' → logprob: -5.225862979888916
    4. 'kwargs' → logprob: -5.850862979888916
    5. '):
' → logprob: -6.225862979888916
    6. 'tuple' → logprob: -6.600862979888916
    7. 'r' → logprob: -6.725862979888916
    8. ' args' → logprob: -6.850862979888916
    9. 'arrays' → logprob: -6.975862979888916
    10. '1' → logprob: -7.100862979888916

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011367550177965313
    2. ':' → logprob: -9.500113487243652
    3. ')' → logprob: -10.625113487243652
    4. ',' → logprob: -11.875113487243652
    5. '):
' → logprob: -12.250113487243652
    6. ' ):' → logprob: -13.250113487243652
    7. '   ' → logprob: -15.000113487243652
    8. '():' → logprob: -15.125113487243652
    9. ' ' → logprob: -15.500113487243652
    10. '}:' → logprob: -16.62511444091797

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001434516510926187
    2. '   ' → logprob: -7.751434326171875
    3. '<|end|>' → logprob: -8.126434326171875
    4. '    ' → logprob: -8.501434326171875
    5. 'return' → logprob: -8.626434326171875
    6. ' return' → logprob: -9.501434326171875
    7. '        ' → logprob: -10.126434326171875
    8. '      ' → logprob: -10.251434326171875
    9. ' ' → logprob: -10.626434326171875
    10. ',' → logprob: -10.751434326171875

Token 100: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36508744955062866
    2. '       ' → logprob: -1.4900875091552734
    3. 'args' → logprob: -3.1150875091552734
    4. ' return' → logprob: -3.6150875091552734
    5. 'result' → logprob: -5.490087509155273
    6. 'if' → logprob: -6.365087509155273
    7. ' args' → logprob: -6.740087509155273
    8. 'new' → logprob: -7.615087509155273
    9. ' if' → logprob: -7.865087509155273
    10. 'results' → logprob: -8.115087509155273

Token 101: ' func' (ID: 4660)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6406533718109131
    2. '[list' → logprob: -1.140653371810913
    3. ' [' → logprob: -2.515653371810913
    4. '[[' → logprob: -3.140653371810913
    5. 'list' → logprob: -4.640653610229492
    6. '[
' → logprob: -4.890653610229492
    7. '[type' → logprob: -5.265653610229492
    8. ' [[' → logprob: -6.140653610229492
    9. ' list' → logprob: -6.390653610229492
    10. '[l' → logprob: -7.640653610229492

Token 102: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3123942017555237
    2. '(*(' → logprob: -2.062394142150879
    3. '(' → logprob: -2.562394142150879
    4. '(chain' → logprob: -3.062394142150879
    5. '(
' → logprob: -5.187394142150879
    6. '(args' → logprob: -5.437394142150879
    7. '([' → logprob: -5.687394142150879
    8. 'chain' → logprob: -6.812394142150879
    9. '(next' → logprob: -7.562394142150879
    10. '(list' → logprob: -7.562394142150879

Token 103: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.020886708050966263
    2. '[' → logprob: -4.7708868980407715
    3. '(args' → logprob: -5.7708868980407715
    4. 'map' → logprob: -5.7708868980407715
    5. 'chain' → logprob: -6.2708868980407715
    6. ' args' → logprob: -7.6458868980407715
    7. 'tuple' → logprob: -7.7708868980407715
    8. '[[' → logprob: -8.020886421203613
    9. '[
' → logprob: -8.020886421203613
    10. '[i' → logprob: -8.145886421203613

Token 104: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40166860818862915
    2. '[' → logprob: -1.1516685485839844
    3. ',' → logprob: -4.401668548583984
    4. '.' → logprob: -7.276668548583984
    5. ' )' → logprob: -8.026668548583984
    6. ',)' → logprob: -8.651668548583984
    7. ')[' → logprob: -8.901668548583984
    8. ')
' → logprob: -9.026668548583984
    9. '[])' → logprob: -9.401668548583984
    10. '),' → logprob: -9.401668548583984

Token 105: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6703005433082581
    2. 'args' → logprob: -1.6703004837036133
    3. '*[' → logprob: -2.2953004837036133
    4. '[' → logprob: -2.6703004837036133
    5. ' args' → logprob: -2.7953004837036133
    6. 'kwargs' → logprob: -3.6703004837036133
    7. ' kwargs' → logprob: -4.795300483703613
    8. '*(' → logprob: -5.045300483703613
    9. ' *' → logprob: -5.670300483703613
    10. ' [' → logprob: -5.670300483703613

Token 106: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0057309940457344055
    2. 'map' → logprob: -6.130731105804443
    3. 'kwargs' → logprob: -6.130731105804443
    4. 'rows' → logprob: -8.130730628967285
    5. 'matrix' → logprob: -8.130730628967285
    6. '*' → logprob: -8.880730628967285
    7. 'tuple' → logprob: -9.630730628967285
    8. '(args' → logprob: -9.755730628967285
    9. 'chain' → logprob: -9.755730628967285
    10. 'mat' → logprob: -9.755730628967285

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1451321542263031
    2. ')
' → logprob: -2.020132064819336
    3. '   ' → logprob: -6.770132064819336
    4. ').' → logprob: -7.395132064819336
    5. ' )' → logprob: -8.895132064819336
    6. ')

' → logprob: -9.020132064819336
    7. ' )
' → logprob: -9.270132064819336
    8. ').__' → logprob: -9.395132064819336
    9. ' ' → logprob: -9.520132064819336
    10. '       ' → logprob: -9.895132064819336

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6300747394561768
    2. '
' → logprob: -1.1300747394561768
    3. '    
' → logprob: -2.6300747394561768
    4. '       ' → logprob: -3.3800747394561768
    5. '<|end|>' → logprob: -3.5050747394561768
    6. 'return' → logprob: -5.755074501037598
    7. '        
' → logprob: -6.255074501037598
    8. '  
' → logprob: -7.380074501037598
    9. '<|end|>' → logprob: -7.505074501037598
    10. ' return' → logprob: -8.130074501037598

Token 109: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7083777189254761
    2. '
' → logprob: -0.9583777189254761
    3. 'return' (adapté à ' return') → logprob: -2.4583778381347656
    4. ' return' → logprob: -3.9583778381347656
    5. '<|end|>' → logprob: -4.708377838134766
    6. '    
' → logprob: -5.083377838134766
    7. '  
' → logprob: -6.583377838134766
    8. ' ' → logprob: -6.958377838134766
    9. ' 
' → logprob: -7.208377838134766
    10. '	return' → logprob: -8.208377838134766

Token 110: ' wrapper' (ID: 26504)
  Prédit: ' wrapper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.023268425837159157
    2. 'wrapper' → logprob: -3.773268461227417
    3. '(wrapper' → logprob: -10.773268699645996
    4. '_wrapper' → logprob: -13.898268699645996
    5. '.wrapper' → logprob: -14.523268699645996
    6. ' wrap' → logprob: -14.898268699645996
    7. 'wrap' → logprob: -15.273268699645996
    8. 'Wrapper' → logprob: -16.64826774597168
    9. '-wrapper' → logprob: -17.64826774597168
    10. ' decorator' → logprob: -17.89826774597168

Token 111: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14378780126571655
    2. '\n' → logprob: -2.3937878608703613
    3. '<|end|>' → logprob: -3.5187878608703613
    4. '' → logprob: -5.643787860870361
    5. ':' → logprob: -5.768787860870361
    6. 'newline' → logprob: -6.393787860870361
    7. '   ' → logprob: -6.768787860870361
    8. '

' → logprob: -7.018787860870361
    9. '    
' → logprob: -7.643787860870361
    10. '\' → logprob: -7.768787860870361

Token 112: 'N' (ID: 45)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.20230072736740112
    2. '
' → logprob: -1.952300786972046
    3. 'def' → logprob: -4.577300548553467
    4. '@
' → logprob: -4.827300548553467
    5. '_' → logprob: -4.952300548553467
    6. '\' → logprob: -5.452300548553467
    7. '\n' → logprob: -5.702300548553467
    8. ':' → logprob: -5.702300548553467
    9. '[' → logprob: -6.827300548553467
    10. '<|end|>' → logprob: -6.827300548553467

Token 113: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4887293875217438
    2. '=' → logprob: -0.9887293577194214
    3. ',' → logprob: -4.488729476928711
    4. ':' → logprob: -6.363729476928711
    5. ' ' → logprob: -7.488729476928711
    6. '_' → logprob: -7.863729476928711
    7. '<|end|>' → logprob: -8.863729476928711
    8. '=int' → logprob: -8.988729476928711
    9. 'um' → logprob: -9.613729476928711
    10. '.' → logprob: -9.613729476928711

Token 114: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.35069334506988525
    2. ' M' → logprob: -1.6006933450698853
    3. 'K' → logprob: -2.7256932258605957
    4. ' K' → logprob: -3.9756932258605957
    5. ' =' → logprob: -5.475693225860596
    6. '=' → logprob: -6.350693225860596
    7. '*' → logprob: -6.975693225860596
    8. '_' → logprob: -7.600693225860596
    9. ' ' → logprob: -7.725693225860596
    10. '*M' → logprob: -8.100693702697754

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.281482458114624
    2. ' =' → logprob: -1.406482458114624
    3. ',' → logprob: -8.031482696533203
    4. '=

' → logprob: -13.656482696533203
    5. '=input' → logprob: -13.781482696533203
    6. ' ' → logprob: -13.781482696533203
    7. '<|end|>' → logprob: -14.031482696533203
    8. '=int' → logprob: -14.406482696533203
    9. ')' → logprob: -14.531482696533203
    10. ' =
' → logprob: -14.906482696533203

Token 116: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2408423274755478
    2. 'map' → logprob: -1.615842342376709
    3. ' ' → logprob: -4.865842342376709
    4. '10' → logprob: -5.115842342376709
    5. '5' → logprob: -7.490842342376709
    6. '100' → logprob: -8.24084186553955
    7. '20' → logprob: -8.86584186553955
    8. '0' → logprob: -8.99084186553955
    9. '(map' → logprob: -9.99084186553955
    10. 'int' → logprob: -9.99084186553955

Token 117: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036636104341596365
    2. '(' → logprob: -5.628663539886475
    3. 'int' → logprob: -10.378664016723633
    4. '(input' → logprob: -11.128664016723633
    5. '(str' → logprob: -11.753664016723633
    6. '(lambda' → logprob: -12.378664016723633
    7. '[int' → logprob: -13.128664016723633
    8. '(list' → logprob: -14.128664016723633
    9. '<int' → logprob: -14.128664016723633
    10. '(tuple' → logprob: -14.628664016723633

Token 118: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5553547739982605
    2. ',input' → logprob: -1.8053548336029053
    3. ',' → logprob: -2.0553548336029053
    4. '(input' → logprob: -2.4303548336029053
    5. 'input' → logprob: -3.3053548336029053
    6. ' ,' → logprob: -6.430354595184326
    7. ')' → logprob: -6.555354595184326
    8. '(int' → logprob: -6.680354595184326
    9. '```' → logprob: -6.930354595184326
    10. ',int' → logprob: -7.055354595184326

Token 119: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07942438870668411
    2. ' input' → logprob: -2.5794243812561035
    3. 'sys' → logprob: -7.8294243812561035
    4. ' sys' → logprob: -8.954424858093262
    5. 'open' → logprob: -13.204424858093262
    6. 'str' → logprob: -13.329424858093262
    7. 'int' → logprob: -13.454424858093262
    8. ' ' → logprob: -13.954424858093262
    9. 'lambda' → logprob: -13.954424858093262
    10. '=input' → logprob: -15.704424858093262

Token 120: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.805981972021982e-05
    2. '()' → logprob: -9.37509822845459
    3. '())' → logprob: -11.75009822845459
    4. '(' → logprob: -13.00009822845459
    5. ')' → logprob: -13.25009822845459
    6. ' ().' → logprob: -14.62509822845459
    7. '(),' → logprob: -15.37509822845459
    8. '()
' → logprob: -15.75009822845459
    9. '()[' → logprob: -16.000097274780273
    10. 'split' → logprob: -16.250097274780273

Token 121: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006718452088534832
    2. 'strip' → logprob: -5.006718635559082
    3. 'rstrip' → logprob: -13.506718635559082
    4. 'read' → logprob: -13.756718635559082
    5. ' split' → logprob: -14.881718635559082
    6. ')' → logprob: -15.756718635559082
    7. 'spl' → logprob: -16.256717681884766
    8. '().' → logprob: -17.131717681884766
    9. '(split' → logprob: -17.756717681884766
    10. ' strip' → logprob: -19.006717681884766

Token 122: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22929657995700836
    2. ')' → logprob: -1.7292965650558472
    3. '()' → logprob: -3.6042966842651367
    4. '(' → logprob: -8.354296684265137
    5. '(),' → logprob: -10.354296684265137
    6. '('' → logprob: -11.729296684265137
    7. '))' → logprob: -13.104296684265137
    8. '())
' → logprob: -13.229296684265137
    9. '(','' → logprob: -13.354296684265137
    10. ' )' → logprob: -13.479296684265137

Token 123: 'p' (ID: 79)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.09656693041324615
    2. '
' → logprob: -3.721566915512085
    3. '<|end|>' → logprob: -3.721566915512085
    4. 'data' → logprob: -3.971566915512085
    5. ' matrix' → logprob: -4.596567153930664
    6. '_matrix' → logprob: -5.846567153930664
    7. '[' → logprob: -5.971567153930664
    8. 'A' → logprob: -6.346567153930664
    9. '[
' → logprob: -6.346567153930664
    10. 'a' → logprob: -7.096567153930664

Token 124: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.1524066925048828
    2. 'layers' → logprob: -1.9024066925048828
    3. '_matrix' → logprob: -2.277406692504883
    4. ' =' → logprob: -2.652406692504883
    5. 'matrix' → logprob: -2.777406692504883
    6. 'aths' → logprob: -3.152406692504883
    7. '=' → logprob: -3.777406692504883
    8. 'ermut' → logprob: -4.027406692504883
    9. 'l' → logprob: -4.152406692504883
    10. '_arr' → logprob: -4.277406692504883

Token 125: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3282977342605591
    2. '[]' → logprob: -2.0782976150512695
    3. '[' → logprob: -2.5782976150512695
    4. '[list' → logprob: -3.0782976150512695
    5. ' list' → logprob: -4.0782976150512695
    6. ' [' → logprob: -4.7032976150512695
    7. '[int' → logprob: -5.7032976150512695
    8. '[p' → logprob: -6.7032976150512695
    9. ' []' → logprob: -6.8282976150512695
    10. '[input' → logprob: -8.32829761505127

Token 126: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002748884493485093
    2. '(' → logprob: -6.002748966217041
    3. '(int' → logprob: -8.877748489379883
    4. '(range' → logprob: -9.502748489379883
    5. '(chain' → logprob: -10.627748489379883
    6. '(input' → logprob: -11.252748489379883
    7. '(p' → logprob: -12.002748489379883
    8. '()' → logprob: -12.252748489379883
    9. '(filter' → logprob: -12.752748489379883
    10. 'map' → logprob: -12.877748489379883

Token 127: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010533124441280961
    2. '(' → logprob: -9.375104904174805
    3. 'int' → logprob: -11.250104904174805
    4. '[int' → logprob: -12.250104904174805
    5. '<int' → logprob: -13.375104904174805
    6. ',int' → logprob: -15.500104904174805
    7. ']int' → logprob: -15.625104904174805
    8. '(
' → logprob: -15.625104904174805
    9. '<|end|>' → logprob: -15.625104904174805
    10. '=int' → logprob: -15.750104904174805

Token 128: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.421392023563385
    2. ',' → logprob: -1.1713919639587402
    3. '(input' → logprob: -3.4213919639587402
    4. 'input' → logprob: -7.04639196395874
    5. '(' → logprob: -8.421392440795898
    6. '(),' → logprob: -9.296392440795898
    7. ' ,' → logprob: -9.796392440795898
    8. '=input' → logprob: -11.796392440795898
    9. '```' → logprob: -12.796392440795898
    10. ' input' → logprob: -12.921392440795898

Token 129: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380830392241478
    2. ' input' → logprob: -3.288083076477051
    3. '(input' → logprob: -10.28808307647705
    4. 'sys' → logprob: -12.53808307647705
    5. ' sys' → logprob: -14.03808307647705
    6. ',input' → logprob: -14.16308307647705
    7. ' ' → logprob: -14.41308307647705
    8. ')' → logprob: -14.66308307647705
    9. '=input' → logprob: -14.66308307647705
    10. '[input' → logprob: -15.41308307647705

Token 130: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.56364209135063e-05
    2. '()' → logprob: -10.125065803527832
    3. ')' → logprob: -11.000065803527832
    4. '(' → logprob: -12.750065803527832
    5. '.' → logprob: -13.000065803527832
    6. '))' → logprob: -14.250065803527832
    7. ' ().' → logprob: -14.250065803527832
    8. ',' → logprob: -14.875065803527832
    9. 'input' → logprob: -15.500065803527832
    10. '())' → logprob: -15.500065803527832

Token 131: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000559108448214829
    2. 'strip' → logprob: -7.500559329986572
    3. 'read' → logprob: -13.125558853149414
    4. '(split' → logprob: -13.125558853149414
    5. ' split' → logprob: -13.750558853149414
    6. 'rstrip' → logprob: -14.000558853149414
    7. 'spl' → logprob: -16.250558853149414
    8. 's' → logprob: -17.500558853149414
    9. ')' → logprob: -18.250558853149414
    10. 'str' → logprob: -18.750558853149414

Token 132: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.584469735622406
    2. '()))' → logprob: -0.834469735622406
    3. '())' → logprob: -5.709469795227051
    4. '()' → logprob: -5.959469795227051
    5. ')' → logprob: -6.209469795227051
    6. '(' → logprob: -7.584469795227051
    7. '()));' → logprob: -10.33446979522705
    8. '(),' → logprob: -11.45946979522705
    9. '()))
' → logprob: -11.83446979522705
    10. '().' → logprob: -11.83446979522705

Token 133: 'd' (ID: 67)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05547216907143593
    2. '=' → logprob: -3.1804721355438232
    3. 'p' → logprob: -4.680472373962402
    4. 'ef' → logprob: -6.430472373962402
    5. 'efs' → logprob: -7.680472373962402
    6. ' ' → logprob: -8.180472373962402
    7. 'ist' → logprob: -8.555472373962402
    8. '=[]' → logprob: -9.305472373962402
    9. ' =[' → logprob: -9.430472373962402
    10. 'is' → logprob: -9.805472373962402

Token 135: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2689872086048126
    2. 'list' → logprob: -2.1439871788024902
    3. ' [' → logprob: -2.3939871788024902
    4. ' list' → logprob: -5.26898717880249
    5. '[N' → logprob: -5.26898717880249
    6. '[]' → logprob: -5.39398717880249
    7. '[p' → logprob: -5.39398717880249
    8. '[list' → logprob: -5.89398717880249
    9. '[M' → logprob: -6.39398717880249
    10. '{}' → logprob: -6.76898717880249

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3283625543117523
    2. 'float' → logprob: -1.5783625841140747
    3. '10' → logprob: -3.828362464904785
    4. '0' → logprob: -3.828362464904785
    5. '(' → logprob: -4.328362464904785
    6. 'int' → logprob: -5.078362464904785
    7. '100' → logprob: -6.203362464904785
    8. '-' → logprob: -6.578362464904785
    9. '999' → logprob: -6.578362464904785
    10. 'N' → logprob: -6.953362464904785

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00881440844386816
    2. ' for' → logprob: -5.383814334869385
    3. ']*' → logprob: -5.758814334869385
    4. 'for' → logprob: -7.383814334869385
    5. ']*(' → logprob: -8.758814811706543
    6. ' ]' → logprob: -8.758814811706543
    7. ']+' → logprob: -10.633814811706543
    8. ',' → logprob: -10.633814811706543
    9. '1' → logprob: -11.008814811706543
    10. '0' → logprob: -11.383814811706543

Token 138: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15355736017227173
    2. '*' → logprob: -3.153557300567627
    3. ' for' → logprob: -3.153557300567627
    4. ' *' → logprob: -3.403557300567627
    5. ']*' → logprob: -5.028557300567627
    6. '0' → logprob: -5.528557300567627
    7. ']*(' → logprob: -5.653557300567627
    8. 'for' → logprob: -5.903557300567627
    9. '+' → logprob: -6.028557300567627
    10. ' ]' → logprob: -6.653557300567627

Token 139: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08531880378723145
    2. '(N' → logprob: -2.5853188037872314
    3. '(' → logprob: -5.335318565368652
    4. '(M' → logprob: -7.335318565368652
    5. 'M' → logprob: -7.710318565368652
    6. ' N' → logprob: -8.460318565368652
    7. ' (' → logprob: -8.585318565368652
    8. '100' → logprob: -11.210318565368652
    9. 'n' → logprob: -11.585318565368652
    10. ' ' → logprob: -11.710318565368652

Token 140: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04357363283634186
    2. '<|end|>' → logprob: -3.2935736179351807
    3. 'for' → logprob: -5.79357385635376
    4. ' 
' → logprob: -6.79357385635376
    5. ' for' → logprob: -8.043573379516602
    6. '
' → logprob: -8.543573379516602
    7. '\n' → logprob: -8.668573379516602
    8. 'def' → logprob: -8.918573379516602
    9. '```' → logprob: -9.418573379516602
    10. ')' → logprob: -9.668573379516602

Token 141: '@' (ID: 31)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18685950338840485
    2. '<|end|>' → logprob: -2.061859607696533
    3. ')' → logprob: -4.186859607696533
    4. 'def' → logprob: -4.311859607696533
    5. 'for' → logprob: -4.561859607696533
    6. ',' → logprob: -6.936859607696533
    7. 'd' → logprob: -7.311859607696533
    8. '#' → logprob: -8.061859130859375
    9. ' for' → logprob: -8.186859130859375
    10. '\n' → logprob: -8.311859130859375

Token 142: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04900006204843521
    2. 'matrix' → logprob: -3.0490000247955322
    3. 'recursive' → logprob: -8.173999786376953
    4. 'decor' → logprob: -9.048999786376953
    5. 'memo' → logprob: -11.548999786376953
    6. 'staticmethod' → logprob: -13.548999786376953
    7. 'dat' → logprob: -14.173999786376953
    8. 'cache' → logprob: -14.548999786376953
    9. ' l' → logprob: -15.298999786376953
    10. 'classmethod' → logprob: -16.173999786376953

Token 143: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.01110889296978712
    2. 'r' → logprob: -4.511108875274658
    3. '@' → logprob: -9.886109352111816
    4. '```' → logprob: -12.761109352111816
    5. 'cache' → logprob: -13.261109352111816
    6. 'u' → logprob: -14.386109352111816
    7. 'rc' → logprob: -14.511109352111816
    8. '   ' → logprob: -14.636109352111816
    9. '_ru' → logprob: -14.636109352111816
    10. 'rug' → logprob: -14.761109352111816

Token 144: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.00017958412354346365
    2. '@' → logprob: -8.750179290771484
    3. '_c' → logprob: -11.625179290771484
    4. '_cached' → logprob: -11.750179290771484
    5. 'cache' → logprob: -12.875179290771484
    6. '_' → logprob: -14.250179290771484
    7. 'Cache' → logprob: -15.250179290771484
    8. 'def' → logprob: -15.375179290771484
    9. '_CACHE' → logprob: -15.500179290771484
    10. '```' → logprob: -16.250179290771484

Token 145: '(max' (ID: 17178)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.36852821707725525
    2. 'def' → logprob: -1.9935282468795776
    3. '(max' → logprob: -2.493528127670288
    4. '()' → logprob: -2.618528127670288
    5. '()
' → logprob: -4.493528366088867
    6. '(def' → logprob: -6.243528366088867
    7. '(False' → logprob: -6.493528366088867
    8. '(True' → logprob: -7.743528366088867
    9. '(' → logprob: -7.868528366088867
    10. 'None' → logprob: -8.243528366088867

Token 146: 'size' (ID: 4461)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.3153083920478821
    2. 'size' → logprob: -1.4403083324432373
    3. '=' → logprob: -3.5653083324432373
    4. '_size' → logprob: -6.315308570861816
    5. 'None' → logprob: -6.440308570861816
    6. '(None' → logprob: -6.940308570861816
    7. ')' → logprob: -7.440308570861816
    8. '(' → logprob: -9.440308570861816
    9. '_None' → logprob: -10.065308570861816
    10. ' None' → logprob: -10.565308570861816

Token 147: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.12693209946155548
    2. '=' → logprob: -2.126932144165039
    3. 'None' → logprob: -13.126932144165039
    4. '=
' → logprob: -14.376932144165039
    5. '=N' → logprob: -14.626932144165039
    6. '=

' → logprob: -15.376932144165039
    7. '=int' → logprob: -15.501932144165039
    8. '=True' → logprob: -15.876932144165039
    9. '='' → logprob: -16.62693214416504
    10. ')' → logprob: -16.75193214416504

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00762934610247612
    2. ')
' → logprob: -4.88262939453125
    3. 'def' → logprob: -11.00762939453125
    4. ' )' → logprob: -13.00762939453125
    5. ')\
' → logprob: -14.25762939453125
    6. ')
' → logprob: -14.50762939453125
    7. '<|end|>' → logprob: -14.88262939453125
    8. ')`' → logprob: -15.25762939453125
    9. ')return' → logprob: -15.25762939453125
    10. ')#' → logprob: -15.75762939453125

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017424124525859952
    2. '
' → logprob: -6.376742362976074
    3. '<|end|>' → logprob: -10.626742362976074
    4. ' def' → logprob: -11.501742362976074
    5. '(def' → logprob: -13.001742362976074
    6. '(' → logprob: -13.501742362976074
    7. '<|end|>' → logprob: -14.626742362976074
    8. '
' → logprob: -15.001742362976074
    9. '0' → logprob: -15.001742362976074
    10. 'ndef' → logprob: -16.25174331665039

Token 150: ' find' (ID: 1646)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.09534938633441925
    2. 'dp' → logprob: -3.0953493118286133
    3. ' dfs' → logprob: -4.220349311828613
    4. 'solve' → logprob: -4.470349311828613
    5. 'f' → logprob: -4.970349311828613
    6. 'depth' → logprob: -5.470349311828613
    7. 'count' → logprob: -5.845349311828613
    8. 'find' → logprob: -6.595349311828613
    9. 'get' → logprob: -7.470349311828613
    10. 'calc' → logprob: -7.595349311828613

Token 151: '(n' (ID: 2406)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.893969714641571
    2. '(x' → logprob: -1.2689697742462158
    3. '(i' → logprob: -1.7689697742462158
    4. '_cycle' → logprob: -3.018969774246216
    5. '_path' → logprob: -3.143969774246216
    6. '_root' → logprob: -4.143969535827637
    7. '_depth' → logprob: -4.893969535827637
    8. '(u' → logprob: -5.268969535827637
    9. '(node' → logprob: -5.518969535827637
    10. '_set' → logprob: -5.518969535827637

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004108924185857177
    2. '):
' → logprob: -7.875411033630371
    3. ')' → logprob: -10.625411033630371
    4. ':' → logprob: -12.750411033630371
    5. ' ):' → logprob: -13.375411033630371
    6. '_' → logprob: -14.500411033630371
    7. 'n' → logprob: -15.625411033630371
    8. '):
' → logprob: -15.875411033630371
    9. '):

' → logprob: -16.000410079956055
    10. '():' → logprob: -16.125410079956055

Token 153: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23337748646736145
    2. 'if' → logprob: -1.733377456665039
    3. '   ' → logprob: -3.483377456665039
    4. ' p' → logprob: -8.108377456665039
    5. 'd' → logprob: -8.733377456665039
    6. ' d' → logprob: -8.858377456665039
    7. 'p' → logprob: -9.608377456665039
    8. '0' → logprob: -11.108377456665039
    9. ' return' → logprob: -11.233377456665039
    10. ' ' → logprob: -11.358377456665039

Token 154: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00030829108436591923
    2. ' if' → logprob: -8.1253080368042
    3. '0' → logprob: -12.6253080368042
    4. 'p' → logprob: -13.0003080368042
    5. '   ' → logprob: -13.0003080368042
    6. '-' → logprob: -13.3753080368042
    7. 'return' → logprob: -13.6253080368042
    8. 'n' → logprob: -14.2503080368042
    9. '
' → logprob: -14.6253080368042
    10. '-p' → logprob: -15.1253080368042

Token 155: ' create' (ID: 2501)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005087109748274088
    2. ' if' → logprob: -7.625508785247803
    3. 'global' → logprob: -11.375508308410645
    4. 'return' → logprob: -12.250508308410645
    5. '   ' → logprob: -12.625508308410645
    6. 'i' → logprob: -14.250508308410645
    7. 'If' → logprob: -16.62550926208496
    8. '```' → logprob: -16.75050926208496
    9. 'pass' → logprob: -16.87550926208496
    10. '#' → logprob: -17.12550926208496

Token 156: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5197523236274719
    2. ' if' → logprob: -2.644752264022827
    3. 'stack' → logprob: -3.019752264022827
    4. 'p' → logprob: -3.269752264022827
    5. ' stack' → logprob: -4.144752502441406
    6. ' ' → logprob: -4.144752502441406
    7. 'i' → logprob: -4.269752502441406
    8. ' p' → logprob: -4.394752502441406
    9. 'next' → logprob: -4.519752502441406
    10. 'n' → logprob: -4.519752502441406

Token 157: ' fake' (ID: 20774)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7336644530296326
    2. ' stack' → logprob: -1.6086645126342773
    3. ' if' → logprob: -1.7336645126342773
    4. 'path' → logprob: -2.8586645126342773
    5. 'stack' → logprob: -2.9836645126342773
    6. ' path' → logprob: -4.483664512634277
    7. ' queue' → logprob: -5.108664512634277
    8. 'queue' → logprob: -5.858664512634277
    9. 'def' → logprob: -5.983664512634277
    10. '   ' → logprob: -5.983664512634277

Token 158: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -1.3513127565383911
    2. ' if' → logprob: -1.8513127565383911
    3. 'if' → logprob: -2.6013126373291016
    4. 'stack' → logprob: -2.6013126373291016
    5. 'node' → logprob: -2.7263126373291016
    6. 'return' → logprob: -2.9763126373291016
    7. ' node' → logprob: -2.9763126373291016
    8. 'def' → logprob: -3.2263126373291016
    9. ' chain' → logprob: -3.6013126373291016
    10. ' return' → logprob: -3.9763126373291016

Token 159: ' context' (ID: 3814)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45367342233657837
    2. ':' → logprob: -1.3286733627319336
    3. ' =' → logprob: -3.2036733627319336
    4. ',' → logprob: -4.328673362731934
    5. '=[]' → logprob: -4.828673362731934
    6. ' stack' → logprob: -5.328673362731934
    7. '(stack' → logprob: -5.328673362731934
    8. '[]' → logprob: -5.328673362731934
    9. 'stack' → logprob: -5.578673362731934
    10. ' :' → logprob: -5.578673362731934

Token 160: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15299661457538605
    2. ':' → logprob: -2.77799654006958
    3. '
' → logprob: -3.77799654006958
    4. ' :' → logprob: -4.27799654006958
    5. ' if' → logprob: -4.27799654006958
    6. ' for' → logprob: -4.90299654006958
    7. ':
' → logprob: -5.52799654006958
    8. '    
' → logprob: -5.77799654006958
    9. ' 
' → logprob: -5.77799654006958
    10. ',' → logprob: -6.27799654006958

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5609279274940491
    2. ' if' → logprob: -1.0609278678894043
    3. 'if' → logprob: -3.3109278678894043
    4. ':' → logprob: -3.9359278678894043
    5. ' stack' → logprob: -4.185927867889404
    6. 'stack' → logprob: -5.310927867889404
    7. ' for' → logprob: -5.935927867889404
    8. '):' → logprob: -6.935927867889404
    9. ' :' → logprob: -6.935927867889404
    10. 'for' → logprob: -7.935927867889404

Token 162: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10384389013051987
    2. ' if' → logprob: -2.603843927383423
    3. 'stack' → logprob: -4.103843688964844
    4. ' stack' → logprob: -6.103843688964844
    5. '   ' → logprob: -6.228843688964844
    6. 'while' → logprob: -6.728843688964844
    7. 'i' → logprob: -6.853843688964844
    8. ' while' → logprob: -7.728843688964844
    9. 'q' → logprob: -8.103843688964844
    10. 's' → logprob: -8.478843688964844

Token 163: ' n' (ID: 297)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.1323614120483398
    2. 'n' → logprob: -1.6323614120483398
    3. 'p' → logprob: -1.8823614120483398
    4. ' find' → logprob: -2.25736141204834
    5. ' n' → logprob: -2.63236141204834
    6. ' p' → logprob: -2.75736141204834
    7. 'd' → logprob: -3.50736141204834
    8. ' d' → logprob: -4.38236141204834
    9. '0' → logprob: -4.38236141204834
    10. '-' → logprob: -4.50736141204834

Token 164: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12819914519786835
    2. 'p' → logprob: -2.3781991004943848
    3. ' d' → logprob: -4.253199100494385
    4. 'n' → logprob: -4.628199100494385
    5. ' p' → logprob: -5.753199100494385
    6. ' n' → logprob: -7.753199100494385
    7. '(p' → logprob: -13.253199577331543
    8. '(d' → logprob: -13.253199577331543
    9. '(n' → logprob: -13.628199577331543
    10. '	d' → logprob: -13.815699577331543

Token 166: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1994775377388578e-05
    2. 'n' → logprob: -11.875012397766113
    3. '[' → logprob: -12.625012397766113
    4. '[d' → logprob: -14.500012397766113
    5. ' [' → logprob: -14.875012397766113
    6. '[
' → logprob: -15.750012397766113
    7. '
' → logprob: -15.875012397766113
    8. '[N' → logprob: -16.125011444091797
    9. '<n' → logprob: -16.125011444091797
    10. '[node' → logprob: -16.375011444091797

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0779457688331604
    2. ']==' → logprob: -2.7029457092285156
    3. ']!=' → logprob: -4.952945709228516
    4. ']>=' → logprob: -7.827945709228516
    5. ']<' → logprob: -8.202945709228516
    6. '==' → logprob: -9.327945709228516
    7. ' ]' → logprob: -9.452945709228516
    8. '[' → logprob: -10.702945709228516
    9. '<' → logprob: -11.452945709228516
    10. '!=' → logprob: -11.827945709228516

Token 168: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24462977051734924
    2. '<' → logprob: -2.4946298599243164
    3. ' ==' → logprob: -2.4946298599243164
    4. '!=' → logprob: -3.4946298599243164
    5. '>=' → logprob: -4.744629859924316
    6. ' !=' → logprob: -4.994629859924316
    7. '==-' → logprob: -5.869629859924316
    8. ' <' → logprob: -6.119629859924316
    9. '!=-' → logprob: -8.244629859924316
    10. '[' → logprob: -8.244629859924316

Token 169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004709580447524786
    2. ' ' → logprob: -5.379709720611572
    3. '1' → logprob: -9.754709243774414
    4. '=' → logprob: -11.504709243774414
    5. '>' → logprob: -12.442209243774414
    6. '  ' → logprob: -12.817209243774414
    7. '   ' → logprob: -12.942209243774414
    8. '2' → logprob: -13.129709243774414
    9. '
' → logprob: -13.692209243774414
    10. '```' → logprob: -13.879709243774414

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035095500061288476
    2. ' ' → logprob: -8.000350952148438
    3. '1' → logprob: -11.500350952148438
    4. '2' → logprob: -13.750350952148438
    5. '   ' → logprob: -14.375350952148438
    6. '-' → logprob: -14.500350952148438
    7. '
' → logprob: -14.750350952148438
    8. '[' → logprob: -15.000350952148438
    9. '```' → logprob: -15.250350952148438
    10. '  ' → logprob: -15.312850952148438

Token 171: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12707404792308807
    2. 'else' → logprob: -2.1270740032196045
    3. '   ' → logprob: -9.252074241638184
    4. ' or' → logprob: -10.252074241638184
    5. '  ' → logprob: -12.127074241638184
    6. '    ' → logprob: -12.877074241638184
    7. 'or' → logprob: -13.377074241638184
    8. ' ' → logprob: -13.377074241638184
    9. '	else' → logprob: -13.877074241638184
    10. '
' → logprob: -14.127074241638184

Token 172: ' (' (ID: 350)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.005939105991274118
    2. ' find' → logprob: -5.13093900680542
    3. '(find' → logprob: -11.880939483642578
    4. '   ' → logprob: -13.380939483642578
    5. '	find' → logprob: -13.755939483642578
    6. ' ' → logprob: -15.130939483642578
    7. '
' → logprob: -15.630939483642578
    8. '=find' → logprob: -15.630939483642578
    9. '  ' → logprob: -16.630939483642578
    10. 'd' → logprob: -16.755939483642578

Token 173: 'd' (ID: 67)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0161890909075737
    2. ' find' → logprob: -4.516189098358154
    3. 'd' → logprob: -5.641189098358154
    4. ' d' → logprob: -7.516189098358154
    5. 'p' → logprob: -8.016188621520996
    6. '(find' → logprob: -8.641188621520996
    7. '   ' → logprob: -9.141188621520996
    8. 'set' → logprob: -9.141188621520996
    9. ' p' → logprob: -9.391188621520996
    10. ')' → logprob: -10.016188621520996

Token 174: '.__' (ID: 10210)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0018139402382075787
    2. ')[' → logprob: -7.626813888549805
    3. ')' → logprob: -8.376813888549805
    4. '[' → logprob: -8.376813888549805
    5. 'n' → logprob: -8.626813888549805
    6. '[d' → logprob: -9.251813888549805
    7. 'find' → logprob: -9.376813888549805
    8. '=' → logprob: -9.626813888549805
    9. '[
' → logprob: -9.876813888549805
    10. ' =' → logprob: -10.001813888549805

Token 175: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0019368429202586412
    2. 'getitem' → logprob: -6.251936912536621
    3. 'sets' → logprob: -12.501936912536621
    4. ' set' → logprob: -12.876936912536621
    5. '```' → logprob: -13.251936912536621
    6. 'del' → logprob: -16.251935958862305
    7. '	set' → logprob: -16.876935958862305
    8. '``' → logprob: -17.876935958862305
    9. 'contains' → logprob: -18.251935958862305
    10. '
' → logprob: -18.376935958862305

Token 176: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.1472419600977446e-06
    2. '__(' → logprob: -15.625000953674316
    3. 'attr' → logprob: -15.875000953674316
    4. '(n' → logprob: -15.875000953674316
    5. '_item' → logprob: -16.000001907348633
    6. '(item' → logprob: -16.250001907348633
    7. ' item' → logprob: -16.500001907348633
    8. 'ite' → logprob: -16.500001907348633
    9. '__' → logprob: -16.875001907348633
    10. 'Item' → logprob: -17.000001907348633

Token 177: '__(' (ID: 8241)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008405959815718234
    2. '(' → logprob: -7.125840663909912
    3. ')(' → logprob: -10.375840187072754
    4. ')' → logprob: -13.375840187072754
    5. '<|end|>' → logprob: -14.000840187072754
    6. ')n' → logprob: -14.250840187072754
    7. ' (' → logprob: -14.375840187072754
    8. 'n' → logprob: -15.000840187072754
    9. '(
' → logprob: -15.125840187072754
    10. ',n' → logprob: -15.500840187072754

Token 178: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01248870138078928
    2. '(n' → logprob: -5.012488842010498
    3. ' n' → logprob: -5.637488842010498
    4. '<|end|>' → logprob: -6.887488842010498
    5. ')n' → logprob: -7.762488842010498
    6. '[n' → logprob: -8.01248836517334
    7. ',n' → logprob: -8.63748836517334
    8. ')' → logprob: -9.13748836517334
    9. '(' → logprob: -9.76248836517334
    10. ',' → logprob: -11.13748836517334

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000261216628132388
    2. 'find' → logprob: -8.375261306762695
    3. ' ,' → logprob: -11.250261306762695
    4. '(find' → logprob: -11.625261306762695
    5. ',
' → logprob: -12.875261306762695
    6. ',d' → logprob: -13.625261306762695
    7. ' find' → logprob: -13.625261306762695
    8. ')' → logprob: -13.875261306762695
    9. '),' → logprob: -14.125261306762695
    10. ')find' → logprob: -14.500261306762695

Token 180: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.007649688050150871
    2. ' find' → logprob: -4.882649898529053
    3. '(find' → logprob: -10.507649421691895
    4. '
' → logprob: -12.257649421691895
    5. '	find' → logprob: -12.632649421691895
    6. ')find' → logprob: -12.757649421691895
    7. '   ' → logprob: -13.007649421691895
    8. ')' → logprob: -13.632649421691895
    9. '=find' → logprob: -14.257649421691895
    10. ' ' → logprob: -14.507649421691895

Token 181: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.650518920039758e-06
    2. 'd' → logprob: -12.750003814697266
    3. '(' → logprob: -14.625003814697266
    4. ' (' → logprob: -16.000003814697266
    5. '((' → logprob: -16.625003814697266
    6. '(
' → logprob: -17.375003814697266
    7. ' d' → logprob: -18.250003814697266
    8. ')d' → logprob: -18.875003814697266
    9. '	d' → logprob: -19.750003814697266
    10. ',d' → logprob: -20.750003814697266

Token 182: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.318681188422488e-05
    2. '(n' → logprob: -12.00001335144043
    3. '[d' → logprob: -12.37501335144043
    4. 'n' → logprob: -12.87501335144043
    5. '[
' → logprob: -16.00001335144043
    6. 'd' → logprob: -16.50001335144043
    7. '	n' → logprob: -17.12501335144043
    8. '```' → logprob: -17.25001335144043
    9. '[' → logprob: -17.62501335144043
    10. ' [' → logprob: -17.62501335144043

Token 183: ')])' (ID: 99066)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010544026270508766
    2. ']))' → logprob: -5.0105438232421875
    3. '[n' → logprob: -6.3855438232421875
    4. 'n' → logprob: -6.6355438232421875
    5. ']' → logprob: -8.385543823242188
    6. '])))' → logprob: -8.635543823242188
    7. '(d' → logprob: -9.260543823242188
    8. '(' → logprob: -9.385543823242188
    9. 'd' → logprob: -9.510543823242188
    10. '](' → logprob: -10.760543823242188

Token 184: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022296691895462573
    2. ' )' → logprob: -9.000223159790039
    3. ')n' → logprob: -9.875223159790039
    4. ')d' → logprob: -10.500223159790039
    5. ')return' → logprob: -11.375223159790039
    6. ')
' → logprob: -12.125223159790039
    7. '))' → logprob: -14.250223159790039
    8. ')`' → logprob: -14.625223159790039
    9. ')#' → logprob: -14.875223159790039
    10. '())' → logprob: -15.125223159790039

Token 185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07895489037036896
    2. ' d' → logprob: -2.5789549350738525
    3. 'find' → logprob: -10.453954696655273
    4. ' ' → logprob: -10.953954696655273
    5. ' find' → logprob: -11.453954696655273
    6. '  ' → logprob: -13.328954696655273
    7. '   ' → logprob: -13.453954696655273
    8. '    ' → logprob: -13.828954696655273
    9. ')' → logprob: -13.953954696655273
    10. ')d' → logprob: -14.453954696655273

Token 186: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.128163257315464e-07
    2. 'n' → logprob: -17.125
    3. ')[' → logprob: -17.125
    4. '(n' → logprob: -17.375
    5. '[' → logprob: -17.5
    6. '.__' → logprob: -17.625
    7. ')' → logprob: -19.25
    8. '[N' → logprob: -19.375
    9. ')n' → logprob: -19.5
    10. '[
' → logprob: -19.5

Token 187: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25248581171035767
    2. '])' → logprob: -1.502485752105713
    3. '})' → logprob: -8.377486228942871
    4. ' )' → logprob: -8.877486228942871
    5. ']' → logprob: -9.502486228942871
    6. ')])' → logprob: -10.502486228942871
    7. '))' → logprob: -10.752486228942871
    8. ')
' → logprob: -11.127486228942871
    9. '   ' → logprob: -11.252486228942871
    10. ')]' → logprob: -11.752486228942871

Token 188: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' union' (ID: 22208)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2610796391963959
    2. ' find' → logprob: -1.6360796689987183
    3. ' solve' → logprob: -4.261079788208008
    4. ' p' → logprob: -5.261079788208008
    5. 'main' → logprob: -5.511079788208008
    6. ' max' → logprob: -6.511079788208008
    7. ' ' → logprob: -6.761079788208008
    8. ' dfs' → logprob: -6.886079788208008
    9. ' union' → logprob: -7.136079788208008
    10. '_' → logprob: -7.261079788208008

Token 190: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.022220579907298088
    2. '(n' → logprob: -3.8972206115722656
    3. '(u' → logprob: -7.397220611572266
    4. '(x' → logprob: -7.397220611572266
    5. '(' → logprob: -7.772220611572266
    6. '(i' → logprob: -11.647220611572266
    7. '(p' → logprob: -12.272220611572266
    8. ' (' → logprob: -12.397220611572266
    9. '(A' → logprob: -12.897220611572266
    10. '(N' → logprob: -13.022220611572266

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016301481809932739
    2. ' ,' → logprob: -8.875163078308105
    3. ',b' → logprob: -10.875163078308105
    4. ',n' → logprob: -13.250163078308105
    5. ',a' → logprob: -13.500163078308105
    6. ',
' → logprob: -14.750163078308105
    7. '<|end|>' → logprob: -15.875163078308105
    8. '‌,' → logprob: -16.12516212463379
    9. 'a' → logprob: -16.37516212463379
    10. 'b' → logprob: -16.62516212463379

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ')b' → logprob: -17.764163970947266
    4. '   ' → logprob: -18.514163970947266
    5. ')' → logprob: -18.514163970947266
    6. ' ' → logprob: -18.639163970947266
    7. '	b' → logprob: -19.139163970947266
    8. '  ' → logprob: -19.764163970947266
    9. ',b' → logprob: -20.639163970947266
    10. '>b' → logprob: -20.764163970947266

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016921341011766344
    2. '):
' → logprob: -8.875168800354004
    3. ' ):' → logprob: -10.875168800354004
    4. ')' → logprob: -11.625168800354004
    5. ':' → logprob: -13.625168800354004
    6. '):
' → logprob: -16.12516975402832
    7. '):

' → logprob: -16.37516975402832
    8. ']:' → logprob: -18.00016975402832
    9. '   ' → logprob: -18.37516975402832
    10. '}:' → logprob: -18.50016975402832

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7441308498382568
    2. ' a' → logprob: -1.1191308498382568
    3. 'a' → logprob: -1.6191308498382568
    4. '	a' → logprob: -10.119131088256836
    5. ' pa' → logprob: -10.244131088256836
    6. ' root' → logprob: -10.494131088256836
    7. '```' → logprob: -10.619131088256836
    8. 'pa' → logprob: -10.869131088256836
    9. 'A' → logprob: -11.244131088256836
    10. ' fa' → logprob: -11.369131088256836

Token 195: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0007591230678372085
    2. ' a' → logprob: -7.750759124755859
    3. '   ' → logprob: -9.00075912475586
    4. 'ra' → logprob: -9.50075912475586
    5. 'fa' → logprob: -9.62575912475586
    6. 'pa' → logprob: -9.75075912475586
    7. 'root' → logprob: -13.12575912475586
    8. 'def' → logprob: -14.12575912475586
    9. '(a' → logprob: -14.37575912475586
    10. '```' → logprob: -14.37575912475586

Token 196: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1669231355190277
    2. ' =' → logprob: -2.1669230461120605
    3. '_root' → logprob: -4.2919230461120605
    4. ',' → logprob: -4.5419230461120605
    5. 'root' → logprob: -4.5419230461120605
    6. '=find' → logprob: -5.9169230461120605
    7. 'a' → logprob: -6.9169230461120605
    8. 'find' → logprob: -8.791923522949219
    9. '=root' → logprob: -9.291923522949219
    10. ' root' → logprob: -9.666923522949219

Token 197: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006701439269818366
    2. ' b' → logprob: -7.625669956207275
    3. 'find' → logprob: -8.750670433044434
    4. '=find' → logprob: -11.750670433044434
    5. ' find' → logprob: -12.000670433044434
    6. 'a' → logprob: -12.625670433044434
    7. '=' → logprob: -12.750670433044434
    8. '   ' → logprob: -14.000670433044434
    9. '=b' → logprob: -14.625670433044434
    10. '
' → logprob: -14.625670433044434

Token 198: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12748435139656067
    2. ' =' → logprob: -2.1274843215942383
    3. '=find' → logprob: -7.502484321594238
    4. ')' → logprob: -12.877484321594238
    5. 'find' → logprob: -14.252484321594238
    6. ')=' → logprob: -14.377484321594238
    7. ' ' → logprob: -15.002484321594238
    8. ' find' → logprob: -16.377485275268555
    9. ',' → logprob: -17.502485275268555
    10. '=get' → logprob: -17.627485275268555

Token 199: ' map' (ID: 4014)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.014700944535434246
    2. ' find' → logprob: -4.264700889587402
    3. '(find' → logprob: -7.639700889587402
    4. 'map' → logprob: -10.389700889587402
    5. 'a' → logprob: -11.264700889587402
    6. '	find' → logprob: -12.139700889587402
    7. ' map' → logprob: -13.139700889587402
    8. ' (' → logprob: -13.639700889587402
    9. 'list' → logprob: -13.764700889587402
    10. ' a' → logprob: -14.139700889587402

Token 200: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.006715967319905758
    2. 'find' → logprob: -5.006715774536133
    3. ' find' → logprob: -15.131715774536133
    4. '(lambda' → logprob: -15.256715774536133
    5. '	find' → logprob: -16.256715774536133
    6. '=find' → logprob: -17.631715774536133
    7. ')find' → logprob: -17.756715774536133
    8. '(' → logprob: -17.756715774536133
    9. '(
' → logprob: -18.756715774536133
    10. '   ' → logprob: -19.506715774536133

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005302419885993004
    2. ',a' → logprob: -5.880302429199219
    3. ' ,' → logprob: -6.255302429199219
    4. ',b' → logprob: -8.005302429199219
    5. ',(' → logprob: -9.005302429199219
    6. ',int' → logprob: -9.630302429199219
    7. ',n' → logprob: -11.630302429199219
    8. 'a' → logprob: -11.755302429199219
    9. ',[' → logprob: -12.130302429199219
    10. '(a' → logprob: -12.380302429199219

Token 202: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.27032777667045593
    2. ' (' → logprob: -2.0203278064727783
    3. '[a' → logprob: -2.2703278064727783
    4. ' [' → logprob: -7.645327568054199
    5. '   ' → logprob: -8.5203275680542
    6. '(' → logprob: -9.1453275680542
    7. '[' → logprob: -9.8953275680542
    8. '(ab' → logprob: -10.2703275680542
    9. ' ' → logprob: -10.3953275680542
    10. '([' → logprob: -10.3953275680542

Token 203: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018125296628568321
    2. ' a' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.000181198120117
    4. '(a' → logprob: -14.750181198120117
    5. ' ' → logprob: -15.500181198120117
    6. '	a' → logprob: -16.125181198120117
    7. ')a' → logprob: -16.750181198120117
    8. '  ' → logprob: -17.375181198120117
    9. '[a' → logprob: -18.125181198120117
    10. ')' → logprob: -18.125181198120117

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012182132340967655
    2. ',b' → logprob: -7.126218318939209
    3. ' ,' → logprob: -8.00121784210205
    4. 'b' → logprob: -9.50121784210205
    5. ' b' → logprob: -12.62621784210205
    6. ',
' → logprob: -15.62621784210205
    7. 'a' → logprob: -15.75121784210205
    8. '),' → logprob: -16.251218795776367
    9. ' ' → logprob: -16.751218795776367
    10. ')' → logprob: -17.001218795776367

Token 205: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04860202223062515
    2. ' b' → logprob: -3.0486021041870117
    3. '   ' → logprob: -11.798602104187012
    4. ' ' → logprob: -12.548602104187012
    5. '  ' → logprob: -13.548602104187012
    6. '    ' → logprob: -13.923602104187012
    7. ')b' → logprob: -14.173602104187012
    8. ')' → logprob: -15.048602104187012
    9. '	b' → logprob: -15.736102104187012
    10. '(b' → logprob: -17.423601150512695

Token 206: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023787387181073427
    2. '))' → logprob: -6.127378940582275
    3. ')
' → logprob: -8.627378463745117
    4. ' )' → logprob: -11.627378463745117
    5. ')

' → logprob: -13.002378463745117
    6. '))
' → logprob: -14.252378463745117
    7. '   ' → logprob: -14.752378463745117
    8. ')))' → logprob: -14.877378463745117
    9. ')}' → logprob: -14.877378463745117
    10. ',' → logprob: -15.752378463745117

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043048176914453506
    2. ' if' → logprob: -3.293048143386841
    3. 'if' → logprob: -5.66804838180542
    4. '<|end|>' → logprob: -7.04304838180542
    5. '    
' → logprob: -8.793047904968262
    6. ' ' → logprob: -8.793047904968262
    7. '	if' → logprob: -9.168047904968262
    8. ')' → logprob: -9.168047904968262
    9. ',' → logprob: -10.043047904968262
    10. '    ' → logprob: -10.793047904968262

Token 208: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008395540527999401
    2. '   ' → logprob: -5.258395671844482
    3. ' if' → logprob: -5.758395671844482
    4. '	if' → logprob: -15.258395195007324
    5. 'd' → logprob: -15.883395195007324
    6. '```' → logprob: -16.25839614868164
    7. '
' → logprob: -16.38339614868164
    8. '    
' → logprob: -16.88339614868164
    9. 'If' → logprob: -17.75839614868164
    10. '1' → logprob: -18.00839614868164

Token 209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0076079354621469975
    2. ' a' → logprob: -4.882607936859131
    3. '   ' → logprob: -14.257607460021973
    4. ' ' → logprob: -14.382607460021973
    5. '	a' → logprob: -15.132607460021973
    6. '(a' → logprob: -16.25760841369629
    7. 'd' → logprob: -16.75760841369629
    8. '  ' → logprob: -16.88260841369629
    9. '_a' → logprob: -17.82010841369629
    10. ' ' → logprob: -18.00760841369629

Token 210: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.43612754344940186
    2. '==' → logprob: -1.0611275434494019
    3. ' !=' → logprob: -5.311127662658691
    4. ' ==' → logprob: -6.061127662658691
    5. '=' → logprob: -9.436127662658691
    6. '<' → logprob: -10.811127662658691
    7. '>' → logprob: -11.186127662658691
    8. '!==' → logprob: -12.686127662658691
    9. '==
' → logprob: -12.811127662658691
    10. '[' → logprob: -13.061127662658691

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012368128227535635
    2. ' b' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. ' ' → logprob: -17.125123977661133
    5. '  ' → logprob: -18.750123977661133
    6. '	b' → logprob: -19.375123977661133
    7. '    ' → logprob: -19.875123977661133
    8. '=b' → logprob: -20.125123977661133
    9. '>b' → logprob: -20.500123977661133
    10. ')b' → logprob: -21.125123977661133

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018630728125572205
    2. ':return' → logprob: -4.018630504608154
    3. ' :' → logprob: -7.768630504608154
    4. ':
' → logprob: -10.268630981445312
    5. 'return' → logprob: -11.518630981445312
    6. '   ' → logprob: -11.643630981445312
    7. ' or' → logprob: -13.393630981445312
    8. ' return' → logprob: -13.893630981445312
    9. ' ' → logprob: -14.268630981445312
    10. '    ' → logprob: -15.018630981445312

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23227375745773315
    2. ' d' → logprob: -1.982273817062378
    3. '   ' → logprob: -3.607273817062378
    4. 'd' → logprob: -3.982273817062378
    5. ' return' → logprob: -3.982273817062378
    6. '-' → logprob: -6.232273578643799
    7. 'return' → logprob: -7.107273578643799
    8. '    ' → logprob: -7.357273578643799
    9. ' -' → logprob: -7.607273578643799
    10. ' False' → logprob: -7.857273578643799

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25901445746421814
    2. ' return' → logprob: -2.009014368057251
    3. '   ' → logprob: -2.384014368057251
    4. '       ' → logprob: -6.38401460647583
    5. '	return' → logprob: -9.009014129638672
    6. ':return' → logprob: -10.759014129638672
    7. 'd' → logprob: -11.259014129638672
    8. '    ' → logprob: -11.384014129638672
    9. '
' → logprob: -11.634014129638672
    10. '0' → logprob: -12.384014129638672

Token 215: ' False' (ID: 7983)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1939762830734253
    2. 'False' → logprob: -1.3189762830734253
    3. 'None' → logprob: -2.193976402282715
    4. '
' → logprob: -2.193976402282715
    5. ' None' → logprob: -2.693976402282715
    6. ' False' → logprob: -3.193976402282715
    7. ' d' → logprob: -3.193976402282715
    8. '0' → logprob: -3.443976402282715
    9. '   ' → logprob: -4.318976402282715
    10. '    
' → logprob: -6.068976402282715

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02008923888206482
    2. '
' → logprob: -4.395089149475098
    3. '    
' → logprob: -5.020089149475098
    4. '<|end|>' → logprob: -8.145089149475098
    5. 'd' → logprob: -8.645089149475098
    6. '  
' → logprob: -9.395089149475098
    7. ')' → logprob: -9.520089149475098
    8. '   
' → logprob: -9.520089149475098
    9. '  ' → logprob: -10.020089149475098
    10. ' d' → logprob: -10.020089149475098

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01789858192205429
    2. 'd' → logprob: -4.7678985595703125
    3. ' d' → logprob: -5.0178985595703125
    4. ' if' → logprob: -6.6428985595703125
    5. '    
' → logprob: -7.2678985595703125
    6. '
' → logprob: -8.142898559570312
    7. 'if' → logprob: -8.392898559570312
    8. ')' → logprob: -10.642898559570312
    9. ')d' → logprob: -11.517898559570312
    10. ' 
' → logprob: -11.642898559570312

Token 218: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42747026681900024
    2. '   ' → logprob: -1.9274702072143555
    3. ' d' → logprob: -2.1774702072143555
    4. 'if' → logprob: -3.0524702072143555
    5. 'd' → logprob: -3.1774702072143555
    6. '    
' → logprob: -11.302470207214355
    7. ' elif' → logprob: -11.802470207214355
    8. '    ' → logprob: -12.052470207214355
    9. 'elif' → logprob: -12.052470207214355
    10. ' ' → logprob: -12.177470207214355

Token 219: ' Complex' (ID: 35812)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5005276799201965
    2. ' if' → logprob: -1.1255276203155518
    3. 'd' → logprob: -3.0005276203155518
    4. ' d' → logprob: -4.250527858734131
    5. '   ' → logprob: -5.250527858734131
    6. 'elif' → logprob: -10.875527381896973
    7. ' ' → logprob: -12.125527381896973
    8. '```' → logprob: -12.250527381896973
    9. '  ' → logprob: -12.500527381896973
    10. 'else' → logprob: -13.000527381896973

Token 220: ' weight' (ID: 6049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5303396582603455
    2. ' if' → logprob: -0.9053396582603455
    3. ' logic' → logprob: -6.03033971786499
    4. ' =' → logprob: -6.78033971786499
    5. ':' → logprob: -7.03033971786499
    6. 'd' → logprob: -7.53033971786499
    7. '   ' → logprob: -7.90533971786499
    8. ' code' → logprob: -8.030339241027832
    9. '=' → logprob: -8.405339241027832
    10. 'def' → logprob: -8.655339241027832

Token 221: ' balancing' (ID: 70959)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.0389280319213867
    2. 'a' → logprob: -1.9139280319213867
    3. ' adjustment' → logprob: -2.1639280319213867
    4. 's' → logprob: -2.7889280319213867
    5. '=' → logprob: -3.1639280319213867
    6. ' difference' → logprob: -3.2889280319213867
    7. ' update' → logprob: -3.5389280319213867
    8. 'd' → logprob: -3.6639280319213867
    9. '[b' → logprob: -4.038928031921387
    10. ' =' → logprob: -4.038928031921387

Token 222: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2429385930299759
    2. ' if' → logprob: -1.6179386377334595
    3. 'if' → logprob: -4.36793851852417
    4. '
' → logprob: -7.24293851852417
    5. 'd' → logprob: -7.36793851852417
    6. ',' → logprob: -7.49293851852417
    7. '    ' → logprob: -7.61793851852417
    8. '<|end|>' → logprob: -7.61793851852417
    9. '    
' → logprob: -7.74293851852417
    10. ' d' → logprob: -8.492938995361328

Token 223: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.533117949962616
    2. '   ' → logprob: -1.2831180095672607
    3. 'if' → logprob: -2.4081180095672607
    4. ' d' → logprob: -3.6581180095672607
    5. 'd' → logprob: -3.9081180095672607
    6. '```' → logprob: -9.65811824798584
    7. ' weight' → logprob: -10.03311824798584
    8. 'weight' → logprob: -10.90811824798584
    9. 'w' → logprob: -11.03311824798584
    10. ' w' → logprob: -11.53311824798584

Token 224: ' swap' (ID: 25489)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6034310460090637
    2. ' if' → logprob: -1.478430986404419
    3. 'd' → logprob: -1.728430986404419
    4. '   ' → logprob: -3.478430986404419
    5. ' d' → logprob: -4.103431224822998
    6. '    
' → logprob: -10.72843074798584
    7. 'elif' → logprob: -10.72843074798584
    8. 'weight' → logprob: -11.22843074798584
    9. ' ' → logprob: -11.85343074798584
    10. '```' → logprob: -11.97843074798584

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014114730060100555
    2. ' =' → logprob: -4.389114856719971
    3. 'if' → logprob: -7.139114856719971
    4. '(a' → logprob: -8.264114379882812
    5. ' if' → logprob: -8.639114379882812
    6. 'a' → logprob: -9.139114379882812
    7. '=a' → logprob: -9.264114379882812
    8. ',' → logprob: -9.764114379882812
    9. '   ' → logprob: -10.889114379882812
    10. '=False' → logprob: -11.139114379882812

Token 226: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7835633754730225
    2. 'a' → logprob: -1.0335633754730225
    3. '(a' → logprob: -2.4085633754730225
    4. '(d' → logprob: -2.5335633754730225
    5. ' d' → logprob: -5.658563613891602
    6. '(p' → logprob: -5.783563613891602
    7. 'p' → logprob: -5.783563613891602
    8. ' a' → logprob: -6.533563613891602
    9. 'False' → logprob: -7.033563613891602
    10. ' (' → logprob: -7.033563613891602

Token 227: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07379839569330215
    2. 'a' → logprob: -3.323798418045044
    3. 'p' → logprob: -3.823798418045044
    4. ' d' → logprob: -5.823798179626465
    5. '(d' → logprob: -6.073798179626465
    6. '-d' → logprob: -6.323798179626465
    7. '-' → logprob: -6.573798179626465
    8. 'M' → logprob: -6.823798179626465
    9. '(p' → logprob: -6.948798179626465
    10. 'N' → logprob: -7.323798179626465

Token 228: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.005473163444548845
    2. '[b' → logprob: -5.8804731369018555
    3. 'a' → logprob: -6.0054731369018555
    4. '[' → logprob: -9.880473136901855
    5. ')[' → logprob: -9.880473136901855
    6. 'b' → logprob: -10.380473136901855
    7. ')' → logprob: -10.505473136901855
    8. ')a' → logprob: -11.505473136901855
    9. '```' → logprob: -12.255473136901855
    10. ' a' → logprob: -12.255473136901855

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4864664375782013
    2. '[a' → logprob: -0.9864664077758789
    3. '[b' → logprob: -4.611466407775879
    4. 'a' → logprob: -6.736466407775879
    5. ']<' → logprob: -7.736466407775879
    6. ']>' → logprob: -7.861466407775879
    7. '[' → logprob: -8.986466407775879
    8. ' ]' → logprob: -9.111466407775879
    9. '][' → logprob: -9.486466407775879
    10. 'b' → logprob: -11.361466407775879

Token 230: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.21613743901252747
    2. ' >' → logprob: -2.591137409210205
    3. '[a' → logprob: -2.966137409210205
    4. '[' → logprob: -4.216137409210205
    5. '>a' → logprob: -4.216137409210205
    6. '<' → logprob: -4.341137409210205
    7. '>b' → logprob: -4.466137409210205
    8. ' <' → logprob: -4.841137409210205
    9. '[b' → logprob: -5.716137409210205
    10. '<a' → logprob: -6.966137409210205

Token 231: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06514976918697357
    2. ' d' → logprob: -2.8151497840881348
    3. 'b' → logprob: -5.815149784088135
    4. ' b' → logprob: -8.815149307250977
    5. '   ' → logprob: -10.565149307250977
    6. '  ' → logprob: -12.190149307250977
    7. ' ' → logprob: -12.315149307250977
    8. '	d' → logprob: -12.690149307250977
    9. '    ' → logprob: -13.690149307250977
    10. ')d' → logprob: -13.815149307250977

Token 232: '[b' (ID: 40800)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11057108640670776
    2. '[b' → logprob: -2.7355711460113525
    3. ' b' → logprob: -3.2355711460113525
    4. ',' → logprob: -8.485570907592773
    5. ')' → logprob: -10.110570907592773
    6. 'a' → logprob: -10.110570907592773
    7. 'swap' → logprob: -10.360570907592773
    8. '	b' → logprob: -10.485570907592773
    9. '[a' → logprob: -10.735570907592773
    10. ')b' → logprob: -10.735570907592773

Token 233: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01445741020143032
    2. ')
' → logprob: -4.5144572257995605
    3. ' )' → logprob: -5.8894572257995605
    4. '])' → logprob: -8.014457702636719
    5. ' )
' → logprob: -9.764457702636719
    6. ',' → logprob: -9.889457702636719
    7. '),' → logprob: -10.014457702636719
    8. ')a' → logprob: -10.014457702636719
    9. '   ' → logprob: -10.389457702636719
    10. ']' → logprob: -11.764457702636719

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024820692837238312
    2. ' if' → logprob: -3.8998208045959473
    3. 'if' → logprob: -6.149820804595947
    4. '
' → logprob: -6.649820804595947
    5. ' and' → logprob: -7.899820804595947
    6. 'and' → logprob: -8.649820327758789
    7. ';' → logprob: -9.399820327758789
    8. '<|end|>' → logprob: -9.649820327758789
    9. ';if' → logprob: -10.149820327758789
    10. ',' → logprob: -10.524820327758789

Token 235: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15717056393623352
    2. 'if' (adapté à ' if') → logprob: -2.157170534133911
    3. '   ' → logprob: -3.532170534133911
    4. 'a' → logprob: -7.78217077255249
    5. ' a' → logprob: -10.157170295715332
    6. '
' → logprob: -10.407170295715332
    7. 'd' → logprob: -10.907170295715332
    8. ',' → logprob: -11.407170295715332
    9. '	if' → logprob: -11.407170295715332
    10. ' d' → logprob: -12.157170295715332

Token 236: ' swap' (ID: 25489)
  Prédit: ' swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.029818760231137276
    2. 'swap' → logprob: -3.5298187732696533
    3. '	swap' → logprob: -10.154818534851074
    4. ' not' → logprob: -10.779818534851074
    5. '   ' → logprob: -12.029818534851074
    6. '    ' → logprob: -13.404818534851074
    7. '  ' → logprob: -14.779818534851074
    8. 'not' → logprob: -15.279818534851074
    9. '.swap' → logprob: -15.279818534851074
    10. ' ' → logprob: -15.529818534851074

Token 237: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000804745068307966
    2. ':
' → logprob: -7.250804901123047
    3. ' :' → logprob: -9.375804901123047
    4. '):' → logprob: -12.750804901123047
    5. '   ' → logprob: -13.000804901123047
    6. 'else' → logprob: -13.625804901123047
    7. ',' → logprob: -13.750804901123047
    8. ' else' → logprob: -14.375804901123047
    9. ':

' → logprob: -14.625804901123047
    10. ' and' → logprob: -15.500804901123047

Token 238: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16243456304073334
    2. ' a' → logprob: -2.2874345779418945
    3. '   ' → logprob: -3.0374345779418945
    4. '       ' → logprob: -8.162434577941895
    5. 'd' → logprob: -9.412434577941895
    6. '    ' → logprob: -10.537434577941895
    7. '	a' → logprob: -10.912434577941895
    8. ' d' → logprob: -11.662434577941895
    9. ',' → logprob: -12.037434577941895
    10. '(a' → logprob: -12.287434577941895

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030161935137584805
    2. ',b' → logprob: -8.125301361083984
    3. ' ,' → logprob: -12.125301361083984
    4. 'b' → logprob: -15.750301361083984
    5. ',a' → logprob: -19.250301361083984
    6. '<|end|>' → logprob: -19.250301361083984
    7. '‌,' → logprob: -19.625301361083984
    8. ' b' → logprob: -20.000301361083984
    9. ',d' → logprob: -20.625301361083984
    10. 'a' → logprob: -20.875301361083984

Token 240: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.40475082397461
    4. ' ' → logprob: -18.15475082397461
    5. '    ' → logprob: -18.90475082397461
    6. '  ' → logprob: -19.27975082397461
    7. '	b' → logprob: -19.65475082397461
    8. '<|end|>' → logprob: -20.02975082397461
    9. '>b' → logprob: -21.27975082397461
    10. ',b' → logprob: -21.40475082397461

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0297548845410347
    2. ' =' → logprob: -3.529754877090454
    3. ',' → logprob: -12.404754638671875
    4. '=a' → logprob: -15.404754638671875
    5. '=}' → logprob: -16.654754638671875
    6. '.=' → logprob: -16.779754638671875
    7. '=

' → logprob: -17.529754638671875
    8. ')' → logprob: -18.154754638671875
    9. '=b' → logprob: -18.154754638671875
    10. ')=' → logprob: -18.279754638671875

Token 242: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05490022152662277
    2. ' b' → logprob: -2.9299001693725586
    3. '   ' → logprob: -11.179900169372559
    4. '	b' → logprob: -13.304900169372559
    5. '    ' → logprob: -13.804900169372559
    6. ' ' → logprob: -14.179900169372559
    7. '  ' → logprob: -15.054900169372559
    8. '>b' → logprob: -16.554901123046875
    9. ',' → logprob: -16.679901123046875
    10. ')b' → logprob: -16.867401123046875

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002523992152418941
    2. ',a' → logprob: -8.375252723693848
    3. 'a' → logprob: -10.875252723693848
    4. ' ,' → logprob: -13.000252723693848
    5. ',b' → logprob: -15.375252723693848
    6. ' a' → logprob: -15.625252723693848
    7. ',
' → logprob: -16.25025177001953
    8. '<|end|>' → logprob: -17.12525177001953
    9. ',s' → logprob: -17.37525177001953
    10. '[' → logprob: -18.00025177001953

Token 244: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004620241466909647
    2. ' a' → logprob: -5.37962007522583
    3. ' ' → logprob: -16.879619598388672
    4. '	a' → logprob: -16.879619598388672
    5. '   ' → logprob: -17.754619598388672
    6. '  ' → logprob: -18.754619598388672
    7. ',a' → logprob: -18.754619598388672
    8. '_a' → logprob: -19.129619598388672
    9. '    ' → logprob: -20.004619598388672
    10. 'а' → logprob: -20.254619598388672

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0944363996386528
    2. '   ' → logprob: -2.5944364070892334
    3. '    
' → logprob: -4.969436168670654
    4. '  
' → logprob: -5.844436168670654
    5. '
' → logprob: -6.594436168670654
    6. ' 
' → logprob: -6.844436168670654
    7. 'd' → logprob: -6.969436168670654
    8. ',' → logprob: -7.344436168670654
    9. '<|end|>' → logprob: -7.719436168670654
    10. ' ' → logprob: -8.344436645507812

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07556842267513275
    2. ' d' → logprob: -3.075568437576294
    3. 'd' → logprob: -3.700568437576294
    4. '
' → logprob: -6.700568199157715
    5. '    
' → logprob: -7.575568199157715
    6. '    ' → logprob: -10.825568199157715
    7. '  
' → logprob: -10.825568199157715
    8. '_d' → logprob: -10.825568199157715
    9. '  ' → logprob: -10.950568199157715
    10. ' 
' → logprob: -11.075568199157715

Token 247: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1337088644504547
    2. ' d' → logprob: -2.258708953857422
    3. '   ' → logprob: -3.883708953857422
    4. ' ' → logprob: -10.508708953857422
    5. ' if' → logprob: -11.133708953857422
    6. '
' → logprob: -11.258708953857422
    7. '    ' → logprob: -11.758708953857422
    8. '  ' → logprob: -11.883708953857422
    9. 'if' → logprob: -11.883708953857422
    10. '    
' → logprob: -12.258708953857422

Token 248: ' Using' (ID: 17511)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014444254338741302
    2. ' d' → logprob: -4.264444351196289
    3. '   ' → logprob: -8.389444351196289
    4. 'if' → logprob: -10.514444351196289
    5. ' if' → logprob: -11.639444351196289
    6. ' ' → logprob: -12.389444351196289
    7. '  ' → logprob: -12.764444351196289
    8. '_' → logprob: -13.139444351196289
    9. '#' → logprob: -13.514444351196289
    10. '    ' → logprob: -13.639444351196289

Token 249: ' slice' (ID: 30288)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.019740179181098938
    2. ' d' → logprob: -4.144740104675293
    3. 'a' → logprob: -6.644740104675293
    4. ' ' → logprob: -8.269740104675293
    5. '+=' → logprob: -8.644740104675293
    6. '   ' → logprob: -8.769740104675293
    7. ' +=' → logprob: -8.894740104675293
    8. ' a' → logprob: -9.019740104675293
    9. 'add' → logprob: -9.269740104675293
    10. 'b' → logprob: -9.269740104675293

Token 250: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.1592966616153717
    2. 'assignment' → logprob: -2.534296751022339
    3. 'd' → logprob: -3.284296751022339
    4. 'assign' → logprob: -5.03429651260376
    5. '[:]' → logprob: -5.28429651260376
    6. '_assignment' → logprob: -5.28429651260376
    7. ' assignments' → logprob: -5.53429651260376
    8. '[' → logprob: -6.53429651260376
    9. '[:' → logprob: -6.65929651260376
    10. ' notation' → logprob: -6.78429651260376

Token 251: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5684672594070435
    2. 'd' → logprob: -1.3184672594070435
    3. ' d' → logprob: -1.8184672594070435
    4. ':' → logprob: -6.943467140197754
    5. '
' → logprob: -7.443467140197754
    6. '[d' → logprob: -7.443467140197754
    7. '[' → logprob: -8.193467140197754
    8. ' =' → logprob: -8.568467140197754
    9. '[:' → logprob: -8.693467140197754
    10. ',' → logprob: -8.818467140197754

Token 252: ' "' (ID: 392)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0349450446665287
    2. ' d' → logprob: -3.409945011138916
    3. '   ' → logprob: -7.284945011138916
    4. '[d' → logprob: -7.784945011138916
    5. '[' → logprob: -10.409945487976074
    6. ' ' → logprob: -10.659945487976074
    7. '...' → logprob: -10.784945487976074
    8. '#' → logprob: -11.159945487976074
    9. '(d' → logprob: -11.159945487976074
    10. '	d' → logprob: -11.284945487976074

Token 253: 'no' (ID: 1750)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02322765439748764
    2. ' d' → logprob: -3.8982276916503906
    3. '[d' → logprob: -6.898227691650391
    4. '   ' → logprob: -7.523227691650391
    5. '...' → logprob: -8.89822769165039
    6. 'list' → logprob: -9.14822769165039
    7. '[-' → logprob: -9.27322769165039
    8. ' ' → logprob: -9.52322769165039
    9. '[' → logprob: -9.64822769165039
    10. 'slice' → logprob: -9.64822769165039

Token 254: ' reason' (ID: 5207)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9639340043067932
    2. 'a' → logprob: -1.9639339447021484
    3. ' d' → logprob: -2.4639339447021484
    4. ' side' → logprob: -2.7139339447021484
    5. '[:]' → logprob: -3.2139339447021484
    6. ' copy' → logprob: -3.3389339447021484
    7. ' return' → logprob: -3.3389339447021484
    8. ' del' → logprob: -3.7139339447021484
    9. 'del' → logprob: -3.7139339447021484
    10. 'copy' → logprob: -3.9639339447021484

Token 255: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21062904596328735
    2. ' "' → logprob: -3.0856289863586426
    3. '"
' → logprob: -3.4606289863586426
    4. 'd' → logprob: -3.8356289863586426
    5. '[' → logprob: -3.8356289863586426
    6. 'a' → logprob: -4.335628986358643
    7. '":' → logprob: -4.335628986358643
    8. 's' → logprob: -4.585628986358643
    9. '[d' → logprob: -4.835628986358643
    10. ' d' → logprob: -5.835628986358643

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.524044394493103
    2. 'd' → logprob: -1.024044394493103
    3. ' d' → logprob: -3.0240445137023926
    4. '```' → logprob: -10.024044036865234
    5. ',' → logprob: -11.274044036865234
    6. '    
' → logprob: -11.399044036865234
    7. '[d' → logprob: -12.024044036865234
    8. '	d' → logprob: -12.274044036865234
    9. ' ' → logprob: -12.399044036865234
    10. '
' → logprob: -12.399044036865234

Token 257: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.07951247692108154
    2. ' d' → logprob: -3.204512596130371
    3. '   ' → logprob: -3.329512596130371
    4. ' ' → logprob: -11.329512596130371
    5. '	d' → logprob: -11.454512596130371
    6. '  ' → logprob: -11.954512596130371
    7. '_d' → logprob: -12.704512596130371
    8. '```' → logprob: -12.954512596130371
    9. '       ' → logprob: -13.079512596130371
    10. '    ' → logprob: -13.204512596130371

Token 258: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5789356827735901
    2. '[:' → logprob: -0.8289356827735901
    3. '[:]' → logprob: -6.328935623168945
    4. '[d' → logprob: -7.328935623168945
    5. ' [:' → logprob: -8.828935623168945
    6. '[' → logprob: -8.828935623168945
    7. '[:-' → logprob: -9.078935623168945
    8. '[-' → logprob: -9.953935623168945
    9. 'a' → logprob: -10.203935623168945
    10. '[b' → logprob: -10.953935623168945

Token 259: ':a' (ID: 77025)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.3504221439361572
    2. ':' → logprob: -1.6004221439361572
    3. '][:' → logprob: -2.9754221439361572
    4. '[' → logprob: -3.7254221439361572
    5. ':d' → logprob: -4.600421905517578
    6. ':a' → logprob: -6.100421905517578
    7. ':b' → logprob: -7.100421905517578
    8. ']' → logprob: -7.100421905517578
    9. ' :' → logprob: -7.225421905517578
    10. '[:]' → logprob: -7.225421905517578

Token 260: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4001586139202118
    2. '1' → logprob: -1.2751586437225342
    3. '[' → logprob: -3.775158643722534
    4. ']' → logprob: -4.775158405303955
    5. '=' → logprob: -4.900158405303955
    6. ' ' → logprob: -5.400158405303955
    7. 'len' → logprob: -6.400158405303955
    8. '+' → logprob: -6.650158405303955
    9. 'a' → logprob: -6.900158405303955
    10. ']=' → logprob: -7.275158405303955

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. '2' → logprob: -10.375040054321289
    3. ' ' → logprob: -12.625040054321289
    4. '-' → logprob: -13.250040054321289
    5. 'len' → logprob: -13.625040054321289
    6. 'abs' → logprob: -14.125040054321289
    7. '[' → logprob: -14.375040054321289
    8. '
' → logprob: -14.875040054321289
    9. '   ' → logprob: -15.875040054321289
    10. '=' → logprob: -15.875040054321289

Token 262: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07211494445800781
    2. '=' → logprob: -3.447114944458008
    3. ']=' → logprob: -3.447114944458008
    4. '[' → logprob: -5.947114944458008
    5. ' =' → logprob: -6.322114944458008
    6. ' ]' → logprob: -6.697114944458008
    7. ']=-' → logprob: -9.447114944458008
    8. '[-' → logprob: -10.322114944458008
    9. '=[' → logprob: -10.447114944458008
    10. 'd' → logprob: -10.572114944458008

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009066780097782612
    2. ' =' → logprob: -4.759066581726074
    3. '[' → logprob: -8.134066581726074
    4. '=[' → logprob: -9.009066581726074
    5. ']=' → logprob: -11.509066581726074
    6. '[:]' → logprob: -11.634066581726074
    7. '[:' → logprob: -12.259066581726074
    8. '[-' → logprob: -12.884066581726074
    9. ']' → logprob: -13.009066581726074
    10. ' =[' → logprob: -13.259066581726074

Token 264: ' [' (ID: 723)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.10607592016458511
    2. '[-' → logprob: -3.3560760021209717
    3. '[b' → logprob: -3.4810760021209717
    4. '[(' → logprob: -4.606075763702393
    5. ' [' → logprob: -4.731075763702393
    6. '[' → logprob: -4.731075763702393
    7. '[int' → logprob: -6.106075763702393
    8. '[a' → logprob: -6.856075763702393
    9. 'd' → logprob: -7.106075763702393
    10. '[p' → logprob: -7.231075763702393

Token 265: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.055762529373168945
    2. '[d' → logprob: -3.180762529373169
    3. '[' → logprob: -4.55576229095459
    4. ' [' → logprob: -7.18076229095459
    5. ' d' → logprob: -7.55576229095459
    6. '[a' → logprob: -7.68076229095459
    7. '[(' → logprob: -9.43076229095459
    8. '[-' → logprob: -9.80576229095459
    9. ' ' → logprob: -10.05576229095459
    10. '[
' → logprob: -10.55576229095459

Token 266: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.007629226893186569
    2. 'a' → logprob: -4.88262939453125
    3. '[b' → logprob: -11.63262939453125
    4. '[' → logprob: -12.75762939453125
    5. '	a' → logprob: -12.88262939453125
    6. '[
' → logprob: -13.00762939453125
    7. ' a' → logprob: -13.50762939453125
    8. '   ' → logprob: -14.00762939453125
    9. 'b' → logprob: -14.00762939453125
    10. '```' → logprob: -14.38262939453125

Token 267: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5320240259170532
    2. 'a' → logprob: -1.6570240259170532
    3. '[' → logprob: -2.4070239067077637
    4. ' +' → logprob: -2.7820239067077637
    5. '+' → logprob: -3.9070239067077637
    6. ']+' → logprob: -3.9070239067077637
    7. ']' → logprob: -4.157023906707764
    8. '+a' → logprob: -4.907023906707764
    9. '[:' → logprob: -5.907023906707764
    10. '+b' → logprob: -6.032023906707764

Token 268: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2923431694507599
    2. '+d' → logprob: -2.1673431396484375
    3. ' +' → logprob: -2.5423431396484375
    4. '+b' → logprob: -2.9173431396484375
    5. '[' → logprob: -5.5423431396484375
    6. '[:-' → logprob: -7.2923431396484375
    7. ' ' → logprob: -7.6673431396484375
    8. '[:' → logprob: -7.9173431396484375
    9. ']' → logprob: -8.167343139648438
    10. '+[' → logprob: -9.042343139648438

Token 269: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02332514151930809
    2. ' d' → logprob: -3.773325204849243
    3. ' ' → logprob: -10.023324966430664
    4. '  ' → logprob: -11.148324966430664
    5. '   ' → logprob: -11.148324966430664
    6. '	d' → logprob: -13.148324966430664
    7. '(d' → logprob: -13.648324966430664
    8. '    ' → logprob: -14.398324966430664
    9. ' (' → logprob: -15.148324966430664
    10. '
' → logprob: -15.148324966430664

Token 270: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.176947600673884e-05
    2. 'b' → logprob: -10.875021934509277
    3. '	b' → logprob: -13.750021934509277
    4. '[' → logprob: -14.250021934509277
    5. '[a' → logprob: -15.250021934509277
    6. ' [' → logprob: -15.625021934509277
    7. ',b' → logprob: -15.875021934509277
    8. '[
' → logprob: -16.00002098083496
    9. ' b' → logprob: -16.25002098083496
    10. '_b' → logprob: -16.62502098083496

Token 271: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003124632057733834
    2. ' ]' → logprob: -9.250312805175781
    3. '[' → logprob: -9.625312805175781
    4. '[:' → logprob: -10.125312805175781
    5. ']]' → logprob: -10.250312805175781
    6. ']
' → logprob: -10.750312805175781
    7. 'a' → logprob: -11.125312805175781
    8. ':]' → logprob: -11.250312805175781
    9. ']

' → logprob: -12.375312805175781
    10. ':b' → logprob: -13.125312805175781

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01836942508816719
    2. 'd' → logprob: -4.018369197845459
    3. ' d' → logprob: -8.518369674682617
    4. ',' → logprob: -11.643369674682617
    5. ';' → logprob: -12.643369674682617
    6. ' ' → logprob: -12.893369674682617
    7. '
' → logprob: -13.518369674682617
    8. '  ' → logprob: -13.643369674682617
    9. '    
' → logprob: -13.768369674682617
    10. '	d' → logprob: -15.143369674682617

Token 273: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31884631514549255
    2. 'd' (adapté à ' d') → logprob: -1.318846344947815
    3. ' d' → logprob: -5.193846225738525
    4. ' ' → logprob: -12.068846702575684
    5. '  ' → logprob: -12.318846702575684
    6. '    
' → logprob: -13.193846702575684
    7. '    ' → logprob: -13.818846702575684
    8. '
' → logprob: -13.943846702575684
    9. '	d' → logprob: -14.193846702575684
    10. ',' → logprob: -14.443846702575684

Token 274: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0005959240952506661
    2. 'b' → logprob: -7.625596046447754
    3. '[a' → logprob: -9.375596046447754
    4. '[' → logprob: -12.375596046447754
    5. ' b' → logprob: -12.375596046447754
    6. ' [' → logprob: -12.750596046447754
    7. ':b' → logprob: -13.250596046447754
    8. '=b' → logprob: -13.375596046447754
    9. '[d' → logprob: -13.875596046447754
    10. '	b' → logprob: -13.875596046447754

Token 275: ':b' (ID: 87246)
  Prédit: ':b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.0008278522291220725
    2. ':' → logprob: -8.00082778930664
    3. ' :' → logprob: -8.50082778930664
    4. ']' → logprob: -8.62582778930664
    5. ':]' → logprob: -10.12582778930664
    6. '[' → logprob: -10.87582778930664
    7. 'b' → logprob: -10.87582778930664
    8. '[b' → logprob: -11.00082778930664
    9. ':a' → logprob: -12.12582778930664
    10. ']=' → logprob: -13.37582778930664

Token 276: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008756620809435844
    2. '1' → logprob: -4.758756637573242
    3. '=' → logprob: -9.383756637573242
    4. ':' → logprob: -10.008756637573242
    5. '[' → logprob: -12.508756637573242
    6. '+b' → logprob: -12.508756637573242
    7. ' +' → logprob: -13.008756637573242
    8. ' =' → logprob: -13.883756637573242
    9. ':b' → logprob: -14.883756637573242
    10. ' ' → logprob: -14.883756637573242

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ']' → logprob: -12.750009536743164
    3. ' ' → logprob: -12.875009536743164
    4. '=' → logprob: -13.875009536743164
    5. '[' → logprob: -14.375009536743164
    6. '-' → logprob: -14.500009536743164
    7. '   ' → logprob: -14.750009536743164
    8. 'a' → logprob: -15.000009536743164
    9. '```' → logprob: -15.562509536743164
    10. '+' → logprob: -16.062509536743164

Token 278: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7133575677871704
    2. ' =' → logprob: -0.7133575677871704
    3. ']' → logprob: -3.963357448577881
    4. ']=' → logprob: -6.963357448577881
    5. ' ]' → logprob: -10.713357925415039
    6. '[' → logprob: -10.963357925415039
    7. '=[' → logprob: -11.713357925415039
    8. ' =[' → logprob: -11.838357925415039
    9. ')' → logprob: -12.963357925415039
    10. ' ' → logprob: -13.338357925415039

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01814994215965271
    2. ' =' → logprob: -4.0181498527526855
    3. '[' → logprob: -17.018150329589844
    4. '=[' → logprob: -17.643150329589844
    5. ' =[' → logprob: -18.268150329589844
    6. '[:]' → logprob: -18.268150329589844
    7. ' ' → logprob: -19.393150329589844
    8. ']=' → logprob: -19.518150329589844
    9. '＝' → logprob: -20.143150329589844
    10. ')=' → logprob: -20.268150329589844

Token 280: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.4021237802808173e-05
    2. ' [' → logprob: -12.000014305114746
    3. '[' → logprob: -12.875014305114746
    4. 'a' → logprob: -13.125014305114746
    5. '[d' → logprob: -14.125014305114746
    6. '[b' → logprob: -14.750014305114746
    7. '=[' → logprob: -14.750014305114746
    8. '   ' → logprob: -15.000014305114746
    9. '[n' → logprob: -15.125014305114746
    10. '[int' → logprob: -15.250014305114746

Token 281: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.943783253314905e-05
    2. ' a' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.000059127807617
    4. '	a' → logprob: -16.250059127807617
    5. ' ' → logprob: -18.125059127807617
    6. '#a' → logprob: -18.125059127807617
    7. '[a' → logprob: -18.125059127807617
    8. '  ' → logprob: -18.125059127807617
    9. ')a' → logprob: -18.375059127807617
    10. 'а' → logprob: -18.500059127807617

Token 282: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03832639381289482
    2. ')' → logprob: -3.4133265018463135
    3. '<|end|>' → logprob: -5.913326263427734
    4. ']
' → logprob: -6.663326263427734
    5. '   ' → logprob: -8.163326263427734
    6. ' ]' → logprob: -9.038326263427734
    7. 'return' → logprob: -9.538326263427734
    8. ')
' → logprob: -9.788326263427734
    9. '}' → logprob: -9.913326263427734
    10. ')return' → logprob: -10.663326263427734

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1911253035068512
    2. 'True' → logprob: -2.1911253929138184
    3. ' True' → logprob: -2.8161253929138184
    4. '<|end|>' → logprob: -6.816125392913818
    5. 'return' → logprob: -7.816125392913818
    6. '(True' → logprob: -8.19112491607666
    7. 'False' → logprob: -8.56612491607666
    8. ' return' → logprob: -9.06612491607666
    9. ')' → logprob: -9.81612491607666
    10. 'true' → logprob: -9.94112491607666

Token 284: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003178273618686944
    2. 'return' (adapté à ' return') → logprob: -8.375317573547363
    3. 'True' → logprob: -10.000317573547363
    4. ' True' → logprob: -10.750317573547363
    5. ' return' → logprob: -11.000317573547363
    6. '<|end|>' → logprob: -14.500317573547363
    7. '    
' → logprob: -14.625317573547363
    8. '	return' → logprob: -14.625317573547363
    9. 'False' → logprob: -14.750317573547363
    10. 'true' → logprob: -14.875317573547363

Token 285: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. '(True' → logprob: -18.131715774536133
    4. '   ' → logprob: -19.506715774536133
    5. 'False' → logprob: -20.256715774536133
    6. 'None' → logprob: -20.506715774536133
    7. '=True' → logprob: -20.506715774536133
    8. ' ' → logprob: -20.881715774536133
    9. 'true' → logprob: -21.256715774536133
    10. 'Tr' → logprob: -21.506715774536133

Token 286: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2319749891757965
    2. 'p' → logprob: -1.8569749593734741
    3. 'i' → logprob: -4.981975078582764
    4. 'result' → logprob: -5.106975078582764
    5. 'def' → logprob: -5.231975078582764
    6. '#' → logprob: -5.606975078582764
    7. 'res' → logprob: -5.731975078582764
    8. '_' → logprob: -5.856975078582764
    9. 'answer' → logprob: -5.856975078582764
    10. 'print' → logprob: -5.981975078582764

Token 288: ' members' (ID: 5000)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6193550825119019
    2. 'main' → logprob: -0.8693550825119019
    3. ' decorator' → logprob: -4.619355201721191
    4. 'decor' → logprob: -4.869355201721191
    5. 'solve' → logprob: -5.244355201721191
    6. ' solve' → logprob: -5.494355201721191
    7. 'decorate' → logprob: -6.619355201721191
    8. 'kr' → logprob: -6.744355201721191
    9. 'union' → logprob: -6.744355201721191
    10. ' union' → logprob: -6.994355201721191

Token 289: '(n' (ID: 2406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4363744854927063
    2. '(' → logprob: -1.1863744258880615
    3. '(n' → logprob: -3.0613744258880615
    4. '(s' → logprob: -7.686374664306641
    5. '(b' → logprob: -8.06137466430664
    6. '(d' → logprob: -8.18637466430664
    7. ' (' → logprob: -9.81137466430664
    8. '(
' → logprob: -10.18637466430664
    9. '(node' → logprob: -10.18637466430664
    10. '(o' → logprob: -10.31137466430664

Token 290: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0890117809176445
    2. '):
' → logprob: -2.4640116691589355
    3. ')' → logprob: -10.089012145996094
    4. '):
' → logprob: -10.964012145996094
    5. '(n' → logprob: -11.714012145996094
    6. '):

' → logprob: -13.464012145996094
    7. ' ):' → logprob: -13.464012145996094
    8. '   ' → logprob: -14.464012145996094
    9. 'n' → logprob: -14.464012145996094
    10. ':' → logprob: -14.964012145996094

Token 291: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8218057155609131
    2. '   ' → logprob: -1.571805715560913
    3. 'a' → logprob: -1.946805715560913
    4. 'stack' → logprob: -2.446805715560913
    5. 'if' → logprob: -3.071805715560913
    6. 'while' → logprob: -3.821805715560913
    7. 's' → logprob: -4.571805953979492
    8. 'find' → logprob: -5.196805953979492
    9. 'root' → logprob: -5.571805953979492
    10. 'result' → logprob: -5.696805953979492

Token 292: ' root' (ID: 6577)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.1480655670166016
    2. 'while' → logprob: -1.8980655670166016
    3. 'res' → logprob: -2.2730655670166016
    4. 'result' → logprob: -2.2730655670166016
    5. '   ' → logprob: -2.3980655670166016
    6. 'def' → logprob: -2.8980655670166016
    7. 'yield' → logprob: -3.3980655670166016
    8. 'return' → logprob: -3.3980655670166016
    9. 'x' → logprob: -4.273065567016602
    10. 'seen' → logprob: -4.398065567016602

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36315426230430603
    2. '=' → logprob: -1.2381542921066284
    3. '=find' → logprob: -4.238154411315918
    4. '=n' → logprob: -9.363154411315918
    5. '=int' → logprob: -10.988154411315918
    6. '(find' → logprob: -11.238154411315918
    7. 'find' → logprob: -11.988154411315918
    8. ' ' → logprob: -12.238154411315918
    9. ' find' → logprob: -12.488154411315918
    10. ')' → logprob: -12.488154411315918

Token 294: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00020020268857479095
    2. ' find' → logprob: -8.750200271606445
    3. '(find' → logprob: -10.125200271606445
    4. '	find' → logprob: -13.875200271606445
    5. 'n' → logprob: -14.875200271606445
    6. '(n' → logprob: -16.250200271606445
    7. '   ' → logprob: -16.500200271606445
    8. '=find' → logprob: -16.625200271606445
    9. '
' → logprob: -17.875200271606445
    10. '(' → logprob: -18.000200271606445

Token 295: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012582694762386382
    2. '(' → logprob: -9.000125885009766
    3. '(
' → logprob: -13.625125885009766
    4. 'n' → logprob: -14.375125885009766
    5. '(root' → logprob: -14.625125885009766
    6. ' (' → logprob: -16.375125885009766
    7. '((' → logprob: -17.250125885009766
    8. '(

' → logprob: -18.250125885009766
    9. '```' → logprob: -18.500125885009766
    10. 'root' → logprob: -18.625125885009766

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133331537246704
    2. ')
' → logprob: -1.3133331537246704
    3. '(n' → logprob: -10.438333511352539
    4. '   ' → logprob: -10.813333511352539
    5. ')
' → logprob: -11.563333511352539
    6. '()' → logprob: -12.938333511352539
    7. ')

' → logprob: -13.188333511352539
    8. ')n' → logprob: -13.188333511352539
    9. ' )
' → logprob: -13.688333511352539
    10. '())
' → logprob: -13.813333511352539

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050583045929670334
    2. 'return' → logprob: -3.3005831241607666
    3. ' return' → logprob: -5.0505828857421875
    4. 'for' → logprob: -5.6755828857421875
    5. ' for' → logprob: -6.3005828857421875
    6. '[]' → logprob: -8.050582885742188
    7. '[' → logprob: -8.800582885742188
    8. 'def' → logprob: -9.800582885742188
    9. '       ' → logprob: -9.925582885742188
    10. '[i' → logprob: -10.300582885742188

Token 298: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16547289490699768
    2. '   ' → logprob: -1.9154728651046753
    3. ' return' → logprob: -5.290472984313965
    4. 'for' → logprob: -8.790472984313965
    5. ' ' → logprob: -10.915472984313965
    6. '	return' → logprob: -12.165472984313965
    7. 'yield' → logprob: -12.290472984313965
    8. '```' → logprob: -12.415472984313965
    9. '       ' → logprob: -12.790472984313965
    10. ' for' → logprob: -13.165472984313965

Token 299: ' Un' (ID: 1367)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.010123764164745808
    2. '   ' → logprob: -4.8851237297058105
    3. ' return' → logprob: -6.3851237297058105
    4. 'for' → logprob: -8.510124206542969
    5. 'yield' → logprob: -8.760124206542969
    6. '[' → logprob: -9.260124206542969
    7. '[i' → logprob: -9.510124206542969
    8. 'filter' → logprob: -10.385124206542969
    9. 'result' → logprob: -10.885124206542969
    10. 'def' → logprob: -11.010124206542969

Token 300: 'necessarily' (ID: 154732)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9080588221549988
    2. 'ion' → logprob: -1.2830588817596436
    3. 'der' → logprob: -1.5330588817596436
    4. 'til' → logprob: -3.4080588817596436
    5. 'pack' → logprob: -3.9080588817596436
    6. 'ders' → logprob: -4.4080586433410645
    7. 'd' → logprob: -5.1580586433410645
    8. 'ique' → logprob: -5.6580586433410645
    9. 'yield' → logprob: -5.7830586433410645
    10. 'r' → logprob: -5.9080586433410645

Token 301: ' using' (ID: 2360)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6032593846321106
    2. 'yield' → logprob: -1.9782593250274658
    3. 'chain' → logprob: -2.228259325027466
    4. 'members' → logprob: -2.353259325027466
    5. '   ' → logprob: -3.603259325027466
    6. 'result' → logprob: -4.728259563446045
    7. ' return' → logprob: -4.853259563446045
    8. ' =' → logprob: -4.978259563446045
    9. 'member' → logprob: -5.228259563446045
    10. 'complex' → logprob: -5.478259563446045

Token 302: ' compress' (ID: 34112)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.41979262232780457
    2. 'list' → logprob: -2.169792652130127
    3. 'filter' → logprob: -2.169792652130127
    4. 'compress' → logprob: -3.044792652130127
    5. 'st' → logprob: -3.794792652130127
    6. '(chain' → logprob: -4.669792652130127
    7. 'map' → logprob: -4.794792652130127
    8. 'd' → logprob: -4.919792652130127
    9. '(filter' → logprob: -5.044792652130127
    10. '[d' → logprob: -5.794792652130127

Token 303: ' and' (ID: 326)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.939662516117096
    2. '(d' → logprob: -1.1896624565124512
    3. '(range' → logprob: -1.6896624565124512
    4. '(chain' → logprob: -2.939662456512451
    5. ' for' → logprob: -3.439662456512451
    6. '   ' → logprob: -4.689662456512451
    7. '(' → logprob: -5.314662456512451
    8. '(list' → logprob: -5.314662456512451
    9. ',' → logprob: -5.689662456512451
    10. '((' → logprob: -5.689662456512451

Token 304: ' st' (ID: 420)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.11717093735933304
    2. 'st' → logprob: -2.367171049118042
    3. 'map' → logprob: -4.742170810699463
    4. 'filter' → logprob: -5.492170810699463
    5. ' chain' → logprob: -6.617170810699463
    6. 'compress' → logprob: -6.992170810699463
    7. 'list' → logprob: -7.617170810699463
    8. 'range' → logprob: -8.367171287536621
    9. ' st' → logprob: -8.742171287536621
    10. 'com' → logprob: -9.242171287536621

Token 305: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -9.460291767027229e-05
    2. 'ar' → logprob: -9.500094413757324
    3. 'art' → logprob: -11.625094413757324
    4. 'r' → logprob: -12.875094413757324
    5. 'a' → logprob: -13.875094413757324
    6. 'armat' → logprob: -13.875094413757324
    7. 'map' → logprob: -14.000094413757324
    8. 'arp' → logprob: -14.125094413757324
    9. 'arr' → logprob: -14.375094413757324
    10. '(' → logprob: -14.625094413757324

Token 306: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.0002137882256647572
    2. 'map' → logprob: -8.625213623046875
    3. 'app' → logprob: -10.625213623046875
    4. 'ar' → logprob: -12.000213623046875
    5. '```' → logprob: -14.250213623046875
    6. '   ' → logprob: -14.500213623046875
    7. 'apped' → logprob: -14.875213623046875
    8. 'arm' → logprob: -15.000213623046875
    9. 'p' → logprob: -15.875213623046875
    10. 'chain' → logprob: -15.875213623046875

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20363692939281464
    2. ' for' → logprob: -3.078636884689331
    3. 'return' → logprob: -3.203636884689331
    4. ' to' → logprob: -3.953636884689331
    5. ',' → logprob: -4.45363712310791
    6. 'def' → logprob: -4.57863712310791
    7. '(root' → logprob: -4.70363712310791
    8. ' return' → logprob: -4.95363712310791
    9. 'for' → logprob: -5.07863712310791
    10. '```' → logprob: -5.32863712310791

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08058613538742065
    2. 'return' → logprob: -3.3305861949920654
    3. ',' → logprob: -3.9555861949920654
    4. ' return' → logprob: -4.455585956573486
    5. ' for' → logprob: -5.705585956573486
    6. 'def' → logprob: -6.705585956573486
    7. '```' → logprob: -6.705585956573486
    8. ' to' → logprob: -6.830585956573486
    9. 'for' → logprob: -7.580585956573486
    10. '(n' → logprob: -7.580585956573486

Token 309: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.016474062576889992
    2. '   ' → logprob: -4.39147424697876
    3. ' return' → logprob: -6.14147424697876
    4. 'compress' → logprob: -7.26647424697876
    5. 'chain' → logprob: -7.39147424697876
    6. 'list' → logprob: -8.766473770141602
    7. 'def' → logprob: -9.766473770141602
    8. 'com' → logprob: -9.766473770141602
    9. 'compressed' → logprob: -10.266473770141602
    10. '       ' → logprob: -10.266473770141602

Token 310: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3909393846988678
    2. 'compress' → logprob: -1.1409393548965454
    3. 'chain' → logprob: -6.390939235687256
    4. 'com' → logprob: -7.015939235687256
    5. 'filter' → logprob: -8.265939712524414
    6. ' compress' → logprob: -8.265939712524414
    7. 'set' → logprob: -8.640939712524414
    8. '(com' → logprob: -8.765939712524414
    9. 'compressed' → logprob: -9.390939712524414
    10. '[' → logprob: -9.390939712524414

Token 311: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.005436400882899761
    2. 'compress' → logprob: -5.255436420440674
    3. '(' → logprob: -9.505435943603516
    4. '(st' → logprob: -9.630435943603516
    5. '(chain' → logprob: -10.505435943603516
    6. '(filter' → logprob: -11.005435943603516
    7. '(
' → logprob: -11.505435943603516
    8. '   ' → logprob: -13.255435943603516
    9. 'com' → logprob: -13.880435943603516
    10. ' compress' → logprob: -13.880435943603516

Token 312: 'press' (ID: 2020)
  Prédit: 'press'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'press' → logprob: -0.002941209590062499
    2. '(' → logprob: -6.002941131591797
    3. 'compress' → logprob: -8.127941131591797
    4. '(com' → logprob: -9.627941131591797
    5. 'ress' → logprob: -10.252941131591797
    6. '[' → logprob: -10.877941131591797
    7. 'pres' → logprob: -11.377941131591797
    8. 'p' → logprob: -11.502941131591797
    9. '```' → logprob: -12.252941131591797
    10. '(chain' → logprob: -12.627941131591797

Token 313: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.021581804379820824
    2. '(p' → logprob: -3.8965818881988525
    3. 'range' → logprob: -7.271581649780273
    4. '(' → logprob: -8.521581649780273
    5. 'p' → logprob: -9.396581649780273
    6. '(chain' → logprob: -10.146581649780273
    7. '(
' → logprob: -11.271581649780273
    8. '((' → logprob: -12.396581649780273
    9. '(r' → logprob: -14.146581649780273
    10. '   ' → logprob: -14.396581649780273

Token 314: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010591294849291444
    2. 'N' → logprob: -7.876059055328369
    3. '(len' → logprob: -8.001059532165527
    4. '(' → logprob: -8.126059532165527
    5. 'len' → logprob: -11.251059532165527
    6. '(n' → logprob: -11.501059532165527
    7. '(
' → logprob: -11.626059532165527
    8. '   ' → logprob: -12.126059532165527
    9. ' (' → logprob: -13.251059532165527
    10. ',N' → logprob: -13.751059532165527

Token 315: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05897323414683342
    2. '),' → logprob: -2.9339733123779297
    3. '(),' → logprob: -6.30897331237793
    4. ' ,' → logprob: -6.68397331237793
    5. ',),' → logprob: -7.18397331237793
    6. '   ' → logprob: -9.43397331237793
    7. ',d' → logprob: -10.80897331237793
    8. ' ),' → logprob: -10.93397331237793
    9. ',n' → logprob: -11.05897331237793
    10. ',
' → logprob: -11.18397331237793

Token 316: ' st' (ID: 420)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7500266432762146
    2. 'st' → logprob: -1.0000267028808594
    3. '(st' → logprob: -2.3750267028808594
    4. '[' → logprob: -3.8750267028808594
    5. '(map' → logprob: -4.250026702880859
    6. '[d' → logprob: -4.375026702880859
    7. 'chain' → logprob: -5.500026702880859
    8. ' st' → logprob: -5.625026702880859
    9. 'list' → logprob: -6.375026702880859
    10. '[(' → logprob: -6.375026702880859

Token 317: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -6.194110756041482e-05
    2. 'ar' → logprob: -9.875061988830566
    3. 'map' → logprob: -12.125061988830566
    4. 'arp' → logprob: -12.625061988830566
    5. 'art' → logprob: -15.125061988830566
    6. 'amp' → logprob: -15.125061988830566
    7. 'ap' → logprob: -15.375061988830566
    8. 'am' → logprob: -16.12506103515625
    9. '[' → logprob: -16.25006103515625
    10. 'a' → logprob: -16.25006103515625

Token 318: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -7.584239938296378e-06
    2. 'map' → logprob: -11.875007629394531
    3. 'app' → logprob: -15.000007629394531
    4. ' map' → logprob: -16.75000762939453
    5. 'p' → logprob: -16.87500762939453
    6. '(ap' → logprob: -17.00000762939453
    7. ' ap' → logprob: -17.25000762939453
    8. '_map' → logprob: -17.37500762939453
    9. 'a' → logprob: -17.50000762939453
    10. 'at' → logprob: -17.62500762939453

Token 319: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.007345723453909159
    2. '(' → logprob: -6.257345676422119
    3. '(operator' → logprob: -6.507345676422119
    4. '(rec' → logprob: -7.007345676422119
    5. '(equal' → logprob: -7.007345676422119
    6. '((' → logprob: -7.507345676422119
    7. 'lambda' → logprob: -8.132346153259277
    8. '(item' → logprob: -8.382346153259277
    9. 'recursive' → logprob: -8.507346153259277
    10. '(add' → logprob: -8.757346153259277

Token 320: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13265593349933624
    2. 'operator' → logprob: -2.1326558589935303
    3. '(lambda' → logprob: -6.257656097412109
    4. 'eq' → logprob: -6.632656097412109
    5. 'add' → logprob: -7.507656097412109
    6. 'item' → logprob: -7.507656097412109
    7. ' lambda' → logprob: -7.757656097412109
    8. '   ' → logprob: -8.63265609741211
    9. 'find' → logprob: -8.63265609741211
    10. '=lambda' → logprob: -8.75765609741211

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36429929733276367
    2. 'lambda' → logprob: -1.9892992973327637
    3. ' lambda' → logprob: -2.2392992973327637
    4. '(lambda' → logprob: -3.2392992973327637
    5. '=lambda' → logprob: -4.739299297332764
    6. ' ,' → logprob: -4.989299297332764
    7. '   ' → logprob: -5.739299297332764
    8. 'find' → logprob: -7.989299297332764
    9. '  ' → logprob: -8.114299774169922
    10. '    ' → logprob: -8.364299774169922

Token 322: ' _:' (ID: 133568)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5215831995010376
    2. 'root' → logprob: -1.2715831995010376
    3. 'x' → logprob: -3.271583080291748
    4. 'd' → logprob: -4.021583080291748
    5. 'find' → logprob: -4.646583080291748
    6. ' j' → logprob: -4.646583080291748
    7. 'm' → logprob: -4.771583080291748
    8. ' root' → logprob: -5.146583080291748
    9. 'p' → logprob: -5.271583080291748
    10. 'i' → logprob: -5.271583080291748

Token 323: ' find' (ID: 1646)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07568436861038208
    2. '(lambda' → logprob: -2.9506843090057373
    3. 'operator' → logprob: -4.825684547424316
    4. 'find' → logprob: -5.825684547424316
    5. ' lambda' → logprob: -6.200684547424316
    6. 'item' → logprob: -6.450684547424316
    7. 'eq' → logprob: -6.450684547424316
    8. 'root' → logprob: -6.950684547424316
    9. 'add' → logprob: -7.200684547424316
    10. 'chain' → logprob: -7.450684547424316

Token 324: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.038939543068408966
    2. ',' → logprob: -3.5389394760131836
    3. 'i' → logprob: -5.163939476013184
    4. '(range' → logprob: -7.163939476013184
    5. '(' → logprob: -7.663939476013184
    6. '((' → logprob: -7.913939476013184
    7. 'range' → logprob: -8.163939476013184
    8. ',i' → logprob: -8.288939476013184
    9. ' (' → logprob: -8.538939476013184
    10. '_,' → logprob: -8.788939476013184

Token 325: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002593492390587926
    2. ' ,' → logprob: -7.127593517303467
    3. ',d' → logprob: -7.127593517303467
    4. ',p' → logprob: -7.752593517303467
    5. '),' → logprob: -8.752593040466309
    6. ',n' → logprob: -8.877593040466309
    7. '   ' → logprob: -10.377593040466309
    8. 'd' → logprob: -10.377593040466309
    9. ',i' → logprob: -10.377593040466309
    10. 'p' → logprob: -10.627593040466309

Token 326: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034405344631522894
    2. ',d' → logprob: -6.0034403800964355
    3. '(d' → logprob: -7.3784403800964355
    4. ' ,' → logprob: -9.378440856933594
    5. 'd' → logprob: -9.628440856933594
    6. ',p' → logprob: -10.003440856933594
    7. '(range' → logprob: -10.253440856933594
    8. ',(' → logprob: -10.503440856933594
    9. '(p' → logprob: -10.628440856933594
    10. 'range' → logprob: -11.253440856933594

Token 327: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.001961701549589634
    2. ' root' → logprob: -6.251961708068848
    3. 'n' → logprob: -11.376961708068848
    4. '(root' → logprob: -11.501961708068848
    5. '[root' → logprob: -12.626961708068848
    6. 'lambda' → logprob: -13.001961708068848
    7. '   ' → logprob: -13.501961708068848
    8. ' ' → logprob: -13.751961708068848
    9. '	root' → logprob: -14.126961708068848
    10. '
' → logprob: -14.376961708068848

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013277375837787986
    2. 'enumer' → logprob: -7.0013275146484375
    3. ' ,' → logprob: -8.126327514648438
    4. 'd' → logprob: -10.126327514648438
    5. ',d' → logprob: -10.501327514648438
    6. 'zip' → logprob: -10.876327514648438
    7. 'p' → logprob: -11.376327514648438
    8. ' enumerate' → logprob: -12.001327514648438
    9. ',p' → logprob: -12.126327514648438
    10. '   ' → logprob: -12.376327514648438

Token 329: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07987760752439499
    2. 'zip' → logprob: -2.8298776149749756
    3. ' enumerate' → logprob: -4.9548773765563965
    4. '[(' → logprob: -5.3298773765563965
    5. '((' → logprob: -5.3298773765563965
    6. ' zip' → logprob: -8.079877853393555
    7. 'chain' → logprob: -8.454877853393555
    8. ' ((' → logprob: -8.829877853393555
    9. 'range' → logprob: -9.454877853393555
    10. ' [(' → logprob: -9.829877853393555

Token 330: '(range' (ID: 50017)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.045097265392541885
    2. '(p' → logprob: -3.1700973510742188
    3. '(range' → logprob: -6.920097351074219
    4. 'd' → logprob: -7.170097351074219
    5. 'p' → logprob: -8.670097351074219
    6. '([' → logprob: -9.295097351074219
    7. '(' → logprob: -10.295097351074219
    8. '(N' → logprob: -11.545097351074219
    9. '((' → logprob: -11.920097351074219
    10. '([-' → logprob: -12.045097351074219

Token 331: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.18008649349212646
    2. 'N' → logprob: -1.8050864934921265
    3. '(' → logprob: -8.805086135864258
    4. 'd' → logprob: -9.555086135864258
    5. '(len' → logprob: -10.680086135864258
    6. ' N' → logprob: -10.680086135864258
    7. '   ' → logprob: -11.555086135864258
    8. '(n' → logprob: -11.680086135864258
    9. 'len' → logprob: -12.055086135864258
    10. '	N' → logprob: -12.180086135864258

Token 332: '))' (ID: 915)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.01697990857064724
    2. ')))' → logprob: -4.641979694366455
    3. '))' → logprob: -5.016979694366455
    4. ')' → logprob: -7.891979694366455
    5. ')))))
' → logprob: -9.766980171203613
    6. '))))
' → logprob: -9.891980171203613
    7. ')))),' → logprob: -10.266980171203613
    8. '))))

' → logprob: -11.016980171203613
    9. ' ))' → logprob: -11.266980171203613
    10. '   ' → logprob: -11.391980171203613

Token 333: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00017886889690998942
    2. '))' → logprob: -9.625179290771484
    3. '))))' → logprob: -10.000179290771484
    4. ')))
' → logprob: -10.375179290771484
    5. ')' → logprob: -10.500179290771484
    6. ' ' → logprob: -12.625179290771484
    7. '   ' → logprob: -12.750179290771484
    8. ')));' → logprob: -13.875179290771484
    9. ')))

' → logprob: -14.500179290771484
    10. '())))' → logprob: -15.375179290771484

Token 334: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7624083757400513
    2. 'for' → logprob: -1.2624083757400513
    3. '@' → logprob: -2.0124082565307617
    4. 'print' → logprob: -3.2624082565307617
    5. '#' → logprob: -3.7624082565307617
    6. 'p' → logprob: -4.012408256530762
    7. 'result' → logprob: -5.137408256530762
    8. 'answer' → logprob: -5.637408256530762
    9. 'res' → logprob: -5.887408256530762
    10. 'Q' → logprob: -6.137408256530762

Token 335: ' same' (ID: 2684)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6298108696937561
    2. ' main' → logprob: -2.1298108100891113
    3. 'members' → logprob: -2.6298108100891113
    4. 'connected' → logprob: -3.2548108100891113
    5. 'matrix' → logprob: -3.7548108100891113
    6. ' connected' → logprob: -4.004810810089111
    7. 'components' → logprob: -4.004810810089111
    8. ' members' → logprob: -4.129810810089111
    9. 'solve' → logprob: -4.129810810089111
    10. 'sorted' → logprob: -4.629810810089111

Token 336: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024429545737802982
    2. '_' → logprob: -6.627442836761475
    3. '(n' → logprob: -8.127443313598633
    4. '(a' → logprob: -8.377443313598633
    5. ')' → logprob: -8.752443313598633
    6. '?' → logprob: -9.377443313598633
    7. '(_' → logprob: -10.127443313598633
    8. '<|end|>' → logprob: -10.127443313598633
    9. '(_)' → logprob: -10.752443313598633
    10. '(i' → logprob: -11.127443313598633

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010067274561151862
    2. ',b' → logprob: -7.001006603240967
    3. ' ,' → logprob: -9.376007080078125
    4. ',a' → logprob: -11.751007080078125
    5. ',s' → logprob: -13.501007080078125
    6. 'b' → logprob: -14.626007080078125
    7. 'a' → logprob: -15.751007080078125
    8. ',n' → logprob: -15.751007080078125
    9. 's' → logprob: -16.501007080078125
    10. ',
' → logprob: -16.626007080078125

Token 338: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047935113310814
    2. ' b' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.88604736328125
    4. ' ' → logprob: -17.63604736328125
    5. '	b' → logprob: -17.88604736328125
    6. '  ' → logprob: -18.26104736328125
    7. ')b' → logprob: -18.26104736328125
    8. '    ' → logprob: -19.01104736328125
    9. ' ' → logprob: -20.26104736328125
    10. ',b' → logprob: -20.51104736328125

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028928478714078665
    2. '):
' → logprob: -5.877892971038818
    3. ')' → logprob: -9.37789249420166
    4. '):

' → logprob: -13.75289249420166
    5. '(a' → logprob: -14.00289249420166
    6. ' ):' → logprob: -14.25289249420166
    7. '):
' → logprob: -14.50289249420166
    8. ')):' → logprob: -16.377893447875977
    9. '(n' → logprob: -16.627893447875977
    10. ':' → logprob: -16.627893447875977

Token 340: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6446694135665894
    2. 'find' → logprob: -1.3946694135665894
    3. ' return' → logprob: -1.6446694135665894
    4. ' find' → logprob: -3.644669532775879
    5. '   ' → logprob: -5.144669532775879
    6. 'def' → logprob: -6.519669532775879
    7. '(find' → logprob: -7.894669532775879
    8. '=find' → logprob: -8.769669532775879
    9. 'a' → logprob: -9.769669532775879
    10. '
' → logprob: -10.144669532775879

Token 341: ' return' (ID: 622)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.011930029839277267
    2. 'return' (adapté à ' return') → logprob: -4.761929988861084
    3. ' find' → logprob: -5.761929988861084
    4. ' return' → logprob: -9.386930465698242
    5. '(find' → logprob: -9.511930465698242
    6. 'a' → logprob: -12.386930465698242
    7. 'union' → logprob: -13.136930465698242
    8. '	find' → logprob: -15.261930465698242
    9. '   ' → logprob: -15.386930465698242
    10. '=find' → logprob: -15.761930465698242

Token 342: ' (' (ID: 350)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.005275737959891558
    2. ' find' → logprob: -5.880275726318359
    3. '(find' → logprob: -6.005275726318359
    4. '	find' → logprob: -13.38027572631836
    5. 'a' → logprob: -14.88027572631836
    6. ')find' → logprob: -16.38027572631836
    7. '=find' → logprob: -16.38027572631836
    8. ' (' → logprob: -17.25527572631836
    9. '_find' → logprob: -17.75527572631836
    10. 'union' → logprob: -18.00527572631836

Token 343: 'lambda' (ID: 35280)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.00019102399528492242
    2. ' find' → logprob: -9.250190734863281
    3. ')' → logprob: -10.500190734863281
    4. 'a' → logprob: -10.625190734863281
    5. '(find' → logprob: -10.625190734863281
    6. ')find' → logprob: -11.375190734863281
    7. '	find' → logprob: -12.500190734863281
    8. '   ' → logprob: -14.000190734863281
    9. 'union' → logprob: -14.625190734863281
    10. '=find' → logprob: -15.000190734863281

Token 344: ' x' (ID: 1215)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.605137288570404
    2. 'find' → logprob: -0.980137288570404
    3. ' x' → logprob: -3.605137348175049
    4. 'x' → logprob: -3.730137348175049
    5. 'a' → logprob: -4.230137348175049
    6. ' a' → logprob: -5.480137348175049
    7. ':' → logprob: -5.480137348175049
    8. '(find' → logprob: -6.855137348175049
    9. ' True' → logprob: -7.355137348175049
    10. 'True' → logprob: -7.730137348175049

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2670152187347412
    2. ':' → logprob: -1.5170152187347412
    3. '=find' → logprob: -4.76701545715332
    4. ',y' → logprob: -5.51701545715332
    5. ' :' → logprob: -7.26701545715332
    6. '=' → logprob: -7.39201545715332
    7. 'a' → logprob: -7.64201545715332
    8. 'find' → logprob: -8.14201545715332
    9. ',x' → logprob: -9.51701545715332
    10. 'x' → logprob: -9.51701545715332

Token 346: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00801115483045578
    2. ' y' → logprob: -4.883011341094971
    3. 'find' → logprob: -9.133010864257812
    4. 'a' → logprob: -9.258010864257812
    5. 'x' → logprob: -9.383010864257812
    6. 'lambda' → logprob: -9.508010864257812
    7. '   ' → logprob: -11.883010864257812
    8. ' lambda' → logprob: -12.133010864257812
    9. '    ' → logprob: -12.383010864257812
    10. ' find' → logprob: -12.508010864257812

Token 347: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002312145894393325
    2. ' :' → logprob: -6.252312183380127
    3. '=' → logprob: -8.877311706542969
    4. ':x' → logprob: -9.252311706542969
    5. ':(' → logprob: -9.377311706542969
    6. ',' → logprob: -9.877311706542969
    7. '=x' → logprob: -12.627311706542969
    8. '=(' → logprob: -13.502311706542969
    9. '   ' → logprob: -13.877311706542969
    10. ' :(' → logprob: -14.002311706542969

Token 348: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06887264549732208
    2. ' x' → logprob: -3.1938726902008057
    3. 'find' → logprob: -3.8188726902008057
    4. ' find' → logprob: -5.818872451782227
    5. '(x' → logprob: -8.193872451782227
    6. 'a' → logprob: -8.568872451782227
    7. 'True' → logprob: -9.943872451782227
    8. '(find' → logprob: -10.068872451782227
    9. '   ' → logprob: -10.943872451782227
    10. ' True' → logprob: -11.818872451782227

Token 349: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05516502633690834
    2. ' ==' → logprob: -2.9301650524139404
    3. ')' → logprob: -9.30516529083252
    4. ':=' → logprob: -9.80516529083252
    5. ')==' → logprob: -10.55516529083252
    6. 'and' → logprob: -10.68016529083252
    7. ',' → logprob: -10.68016529083252
    8. '=' → logprob: -11.43016529083252
    9. '(x' → logprob: -11.55516529083252
    10. 'x' → logprob: -11.93016529083252

Token 350: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00462688785046339
    2. ' y' → logprob: -5.379626750946045
    3. ' ' → logprob: -13.004627227783203
    4. 'find' → logprob: -14.004627227783203
    5. '   ' → logprob: -14.254627227783203
    6. ')' → logprob: -14.379627227783203
    7. '    ' → logprob: -14.629627227783203
    8. '  ' → logprob: -14.754627227783203
    9. ''y' → logprob: -15.129627227783203
    10. '	y' → logprob: -15.379627227783203

Token 351: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.5280159711837769
    2. '(find' → logprob: -0.9030159711837769
    3. ' (' → logprob: -6.528016090393066
    4. ')' → logprob: -6.528016090393066
    5. '   ' → logprob: -7.153016090393066
    6. ' )(' → logprob: -8.278016090393066
    7. '(' → logprob: -8.778016090393066
    8. ',' → logprob: -9.028016090393066
    9. '):' → logprob: -9.153016090393066
    10. ')(
' → logprob: -9.778016090393066

Token 352: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0001696902181720361
    2. ' find' → logprob: -8.75016975402832
    3. 'a' → logprob: -12.12516975402832
    4. '(find' → logprob: -12.37516975402832
    5. ')' → logprob: -14.62516975402832
    6. '	find' → logprob: -15.00016975402832
    7. '   ' → logprob: -15.12516975402832
    8. ')find' → logprob: -15.50016975402832
    9. ' ' → logprob: -16.37516975402832
    10. '  ' → logprob: -17.00016975402832

Token 353: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003115095605608076
    2. ',' → logprob: -8.625311851501465
    3. 'a' → logprob: -9.000311851501465
    4. ',a' → logprob: -12.000311851501465
    5. '(' → logprob: -13.250311851501465
    6. ' (' → logprob: -15.500311851501465
    7. '   ' → logprob: -15.875311851501465
    8. ' a' → logprob: -16.00031089782715
    9. ')' → logprob: -16.25031089782715
    10. ' ' → logprob: -17.25031089782715

Token 354: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002303816145285964
    2. '),' → logprob: -6.752303600311279
    3. ' ,' → logprob: -7.002303600311279
    4. ',b' → logprob: -8.502304077148438
    5. ')' → logprob: -11.752304077148438
    6. ' ),' → logprob: -12.002304077148438
    7. '(),' → logprob: -13.127304077148438
    8. '(b' → logprob: -13.127304077148438
    9. 'b' → logprob: -14.252304077148438
    10. '(' → logprob: -14.627304077148438

Token 355: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5832599401473999
    2. 'b' → logprob: -0.8332599401473999
    3. ' find' → logprob: -5.0832600593566895
    4. ' b' → logprob: -6.8332600593566895
    5. '   ' → logprob: -12.333259582519531
    6. '  ' → logprob: -12.458259582519531
    7. ' ' → logprob: -13.083259582519531
    8. '(find' → logprob: -13.208259582519531
    9. '    ' → logprob: -13.333259582519531
    10. ')' → logprob: -14.333259582519531

Token 356: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.023278439417481422
    2. 'b' → logprob: -3.7732784748077393
    3. ' b' → logprob: -10.89827823638916
    4. ' (' → logprob: -11.64827823638916
    5. ')' → logprob: -13.02327823638916
    6. '	b' → logprob: -13.77327823638916
    7. '(' → logprob: -13.89827823638916
    8. ')b' → logprob: -14.02327823638916
    9. '   ' → logprob: -14.77327823638916
    10. ')(' → logprob: -16.398279190063477

Token 357: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010362643515691161
    2. '))' → logprob: -6.876036167144775
    3. ')
' → logprob: -13.376036643981934
    4. ' )' → logprob: -13.751036643981934
    5. ')}' → logprob: -15.376036643981934
    6. '})' → logprob: -15.876036643981934
    7. ')))' → logprob: -16.001035690307617
    8. '])' → logprob: -17.126035690307617
    9. ')b' → logprob: -17.126035690307617
    10. ')return' → logprob: -17.251035690307617

Token 358: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3363159894943237
    2. 'for' → logprob: -1.3363159894943237
    3. 'def' → logprob: -1.5863159894943237
    4. 'p' → logprob: -1.8363159894943237
    5. 'print' → logprob: -2.5863161087036133
    6. 'result' → logprob: -5.086316108703613
    7. 'answer' → logprob: -5.211316108703613
    8. '@' → logprob: -5.336316108703613
    9. '```' → logprob: -6.086316108703613
    10. 'Q' → logprob: -6.336316108703613

Token 359: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0025587803684175014
    2. '_' → logprob: -6.252558708190918
    3. ' i' → logprob: -7.502558708190918
    4. ' ' → logprob: -9.502558708190918
    5. ' range' → logprob: -12.627558708190918
    6. '  ' → logprob: -15.627558708190918
    7. '_i' → logprob: -16.252559661865234
    8. ' _
' → logprob: -16.752559661865234
    9. 'range' → logprob: -16.877559661865234
    10. 'i' → logprob: -16.877559661865234

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07934378832578659
    2. 'in' → logprob: -2.579343795776367
    3. ' ' → logprob: -7.954343795776367
    4. '_' → logprob: -9.579343795776367
    5. 'range' → logprob: -11.579343795776367
    6. ' _' → logprob: -11.704343795776367
    7. '_in' → logprob: -12.329343795776367
    8. 'import' → logprob: -12.454343795776367
    9. ',' → logprob: -13.204343795776367
    10. '	in' → logprob: -13.329343795776367

Token 361: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004896456957794726
    2. ' range' → logprob: -7.625489711761475
    3. '(range' → logprob: -14.500489234924316
    4. '_' → logprob: -14.750489234924316
    5. 'rang' → logprob: -15.875489234924316
    6. 'r' → logprob: -16.125490188598633
    7. '0' → logprob: -16.250490188598633
    8. '	range' → logprob: -16.375490188598633
    9. '[' → logprob: -16.625490188598633
    10. 'ran' → logprob: -16.750490188598633

Token 362: '(rec' (ID: 67620)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006906322669237852
    2. '(lambda' → logprob: -8.000690460205078
    3. 'int' → logprob: -8.625690460205078
    4. '(str' → logprob: -9.500690460205078
    5. '(' → logprob: -9.625690460205078
    6. 'range' → logprob: -11.500690460205078
    7. '(input' → logprob: -11.625690460205078
    8. '(range' → logprob: -12.000690460205078
    9. '(
' → logprob: -13.000690460205078
    10. '(eval' → logprob: -14.000690460205078

Token 363: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.0004259084234945476
    2. 'urse' → logprob: -8.750426292419434
    3. 'ursion' → logprob: -9.500426292419434
    4. '```' → logprob: -10.125426292419434
    5. '(' → logprob: -10.250426292419434
    6. 'r' → logprob: -10.625426292419434
    7. 'urs' → logprob: -11.125426292419434
    8. 'ur' → logprob: -11.625426292419434
    9. 'ursively' → logprob: -11.625426292419434
    10. '   ' → logprob: -11.750426292419434

Token 364: '_identity' (ID: 111655)
  Prédit: '_identity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_identity' → logprob: -0.10276169329881668
    2. 'identity' → logprob: -2.352761745452881
    3. 'union' → logprob: -6.227761745452881
    4. 'int' → logprob: -8.477761268615723
    5. '_union' → logprob: -8.977761268615723
    6. ' identity' → logprob: -8.977761268615723
    7. '(lambda' → logprob: -10.477761268615723
    8. '(identity' → logprob: -10.477761268615723
    9. 'lambda' → logprob: -11.227761268615723
    10. '   ' → logprob: -11.852761268615723

Token 365: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4293859004974365
    2. '(range' → logprob: -1.8043859004974365
    3. ',' → logprob: -2.1793859004974365
    4. '(lambda' → logprob: -3.0543859004974365
    5. 'range' → logprob: -4.804386138916016
    6. '(' → logprob: -4.804386138916016
    7. ',int' → logprob: -5.179386138916016
    8. 'int' → logprob: -7.179386138916016
    9. '(iter' → logprob: -7.929386138916016
    10. '(),' → logprob: -8.179386138916016

Token 366: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005082341376692057
    2. ' range' → logprob: -7.6255083084106445
    3. '[' → logprob: -11.625508308410645
    4. 'iter' → logprob: -12.625508308410645
    5. '(range' → logprob: -12.625508308410645
    6. 'p' → logprob: -12.750508308410645
    7. 'sys' → logprob: -14.625508308410645
    8. '   ' → logprob: -15.125508308410645
    9. 'chain' → logprob: -15.750508308410645
    10. 'input' → logprob: -15.750508308410645

Token 367: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0058409953489899635
    2. '(N' → logprob: -5.38084077835083
    3. '(' → logprob: -6.75584077835083
    4. '(int' → logprob: -10.380841255187988
    5. '((' → logprob: -11.505841255187988
    6. 'M' → logprob: -12.130841255187988
    7. '(
' → logprob: -12.505841255187988
    8. ' (' → logprob: -13.255841255187988
    9. '   ' → logprob: -14.630841255187988
    10. '(len' → logprob: -14.755841255187988

Token 368: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6484740972518921
    2. '):' → logprob: -0.7734740972518921
    3. ')):
' → logprob: -5.273474216461182
    4. ')' → logprob: -5.523474216461182
    5. '):
' → logprob: -5.648474216461182
    6. '))' → logprob: -5.898474216461182
    7. ',' → logprob: -8.523473739624023
    8. ')):
' → logprob: -9.398473739624023
    9. ' ):' → logprob: -10.648473739624023
    10. '>):' → logprob: -11.648473739624023

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23582173883914948
    2. 'a' → logprob: -1.7358217239379883
    3. ' a' → logprob: -3.6108217239379883
    4. '(a' → logprob: -5.860821723937988
    5. ',' → logprob: -7.110821723937988
    6. ',a' → logprob: -7.610821723937988
    7. '    
' → logprob: -7.860821723937988
    8. '       ' → logprob: -8.235821723937988
    9. '```' → logprob: -8.360821723937988
    10. 'A' → logprob: -8.360821723937988

Token 370: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006279279012233019
    2. 'x' (adapté à ' x') → logprob: -5.256279468536377
    3. 'u' → logprob: -7.631279468536377
    4. 'i' → logprob: -8.131278991699219
    5. 'A' → logprob: -8.756278991699219
    6. ' a' → logprob: -9.756278991699219
    7. '   ' → logprob: -10.506278991699219
    8. 's' → logprob: -12.006278991699219
    9. 't' → logprob: -12.506278991699219
    10. 'l' → logprob: -12.631278991699219

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002680112374946475
    2. ',b' → logprob: -8.62526798248291
    3. ' ,' → logprob: -9.75026798248291
    4. ',y' → logprob: -10.87526798248291
    5. '=' → logprob: -12.62526798248291
    6. 'b' → logprob: -13.00026798248291
    7. ',s' → logprob: -13.87526798248291
    8. ',x' → logprob: -14.00026798248291
    9. ' =' → logprob: -14.50026798248291
    10. '_,' → logprob: -14.50026798248291

Token 372: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0059343669563531876
    2. ' y' → logprob: -5.130934238433838
    3. '*y' → logprob: -13.255934715270996
    4. ' ' → logprob: -14.255934715270996
    5. '<|end|>' → logprob: -14.380934715270996
    6. ',y' → logprob: -14.380934715270996
    7. '=' → logprob: -14.505934715270996
    8. '*' → logprob: -14.630934715270996
    9. '_y' → logprob: -15.130934715270996
    10. 'x' → logprob: -15.255934715270996

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021880913991481066
    2. ' =' → logprob: -6.127188205718994
    3. '=input' → logprob: -13.627187728881836
    4. ',' → logprob: -14.252187728881836
    5. 'x' → logprob: -14.502187728881836
    6. '=x' → logprob: -15.377187728881836
    7. '=int' → logprob: -16.252187728881836
    8. '＝' → logprob: -17.002187728881836
    9. '=
' → logprob: -17.002187728881836
    10. '=line' → logprob: -17.252187728881836

Token 374: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31327390670776367
    2. ' map' → logprob: -1.3132739067077637
    3. '	map' → logprob: -12.188274383544922
    4. '(map' → logprob: -12.688274383544922
    5. ' ' → logprob: -14.063274383544922
    6. '[' → logprob: -14.188274383544922
    7. '   ' → logprob: -14.313274383544922
    8. ' [' → logprob: -14.438274383544922
    9. 'list' → logprob: -15.313274383544922
    10. 'sorted' → logprob: -15.563274383544922

Token 375: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20160892605781555
    2. 'int' → logprob: -1.7016088962554932
    3. '(' → logprob: -8.826608657836914
    4. ' int' → logprob: -10.326608657836914
    5. '[int' → logprob: -12.076608657836914
    6. '<int' → logprob: -13.201608657836914
    7. '(lambda' → logprob: -13.451608657836914
    8. '   ' → logprob: -13.576608657836914
    9. ' (' → logprob: -13.576608657836914
    10. '=int' → logprob: -13.826608657836914

Token 376: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6022747159004211
    2. ',' → logprob: -0.8522747159004211
    3. 'input' → logprob: -4.2272748947143555
    4. '(input' → logprob: -5.2272748947143555
    5. '(' → logprob: -5.4772748947143555
    6. ')' → logprob: -6.9772748947143555
    7. ' input' → logprob: -8.227274894714355
    8. '   ' → logprob: -8.477274894714355
    9. ' ' → logprob: -9.977274894714355
    10. '()' → logprob: -10.102274894714355

Token 377: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0052354102954268456
    2. ' input' → logprob: -5.255235195159912
    3. 'sys' → logprob: -14.13023567199707
    4. '(input' → logprob: -15.13023567199707
    5. ' ' → logprob: -15.50523567199707
    6. ')' → logprob: -15.63023567199707
    7. ' sys' → logprob: -16.25523567199707
    8. '   ' → logprob: -16.75523567199707
    9. '=input' → logprob: -16.88023567199707
    10. '	input' → logprob: -17.38023567199707

Token 378: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.3199920178740285e-05
    2. ')' → logprob: -10.875022888183594
    3. '()' → logprob: -13.125022888183594
    4. '.split' → logprob: -14.625022888183594
    5. '.' → logprob: -14.875022888183594
    6. '())' → logprob: -15.000022888183594
    7. '(' → logprob: -15.125022888183594
    8. '   ' → logprob: -15.375022888183594
    9. 'split' → logprob: -15.625022888183594
    10. ' .' → logprob: -16.250022888183594

Token 379: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'strip' → logprob: -13.00000286102295
    3. '().' → logprob: -14.25000286102295
    4. ' split' → logprob: -15.75000286102295
    5. '(split' → logprob: -17.375003814697266
    6. 'spl' → logprob: -18.375003814697266
    7. '.split' → logprob: -18.500003814697266
    8. 'rstrip' → logprob: -19.125003814697266
    9. 'read' → logprob: -21.000003814697266
    10. ').' → logprob: -21.250003814697266

Token 380: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007153172045946121
    2. '())' → logprob: -5.257153034210205
    3. ')
' → logprob: -6.632153034210205
    4. '()' → logprob: -7.507153034210205
    5. '())
' → logprob: -10.757153511047363
    6. '(' → logprob: -11.882153511047363
    7. ')`' → logprob: -11.882153511047363
    8. ' )' → logprob: -12.007153511047363
    9. ')
' → logprob: -13.257153511047363
    10. '()
' → logprob: -13.632153511047363

Token 381: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2611194849014282
    2. 'union' → logprob: -2.3861193656921387
    3. '<|end|>' → logprob: -2.6361193656921387
    4. ' union' → logprob: -3.5111193656921387
    5. '	union' → logprob: -4.261119365692139
    6. '.union' → logprob: -4.761119365692139
    7. ' ' → logprob: -5.011119365692139
    8. '    
' → logprob: -6.511119365692139
    9. '_union' → logprob: -6.511119365692139
    10. '  ' → logprob: -7.011119365692139

Token 382: ' union' (ID: 22208)
  Prédit: ' union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.6872144937515259
    2. 'union' (adapté à ' union') → logprob: -1.1872144937515259
    3. '   ' → logprob: -1.6872144937515259
    4. 'print' → logprob: -5.937214374542236
    5. ' if' → logprob: -6.062214374542236
    6. 'if' → logprob: -6.937214374542236
    7. ' print' → logprob: -7.187214374542236
    8. '	union' → logprob: -9.187214851379395
    9. '.union' → logprob: -10.187214851379395
    10. '    
' → logprob: -10.812214851379395

Token 383: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00021366903092712164
    2. '(' → logprob: -8.500213623046875
    3. 'x' → logprob: -11.625213623046875
    4. '((' → logprob: -14.500213623046875
    5. ' (' → logprob: -14.875213623046875
    6. '(
' → logprob: -15.000213623046875
    7. ' x' → logprob: -18.250213623046875
    8. '(int' → logprob: -18.375213623046875
    9. '<|end|>' → logprob: -18.875213623046875
    10. '(abs' → logprob: -19.000213623046875

Token 384: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03284129127860069
    2. ',y' → logprob: -3.907841205596924
    3. ' ,' → logprob: -4.407841205596924
    4. 'y' → logprob: -11.282841682434082
    5. '   ' → logprob: -11.532841682434082
    6. ' y' → logprob: -11.657841682434082
    7. ' ' → logprob: -12.907841682434082
    8. '(),' → logprob: -13.032841682434082
    9. '-' → logprob: -13.407841682434082
    10. ',
' → logprob: -13.907841682434082

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.500012397766113
    3. ',' → logprob: -14.250012397766113
    4. 'y' → logprob: -14.375012397766113
    5. ' y' → logprob: -15.000012397766113
    6. ',y' → logprob: -15.750012397766113
    7. '   ' → logprob: -17.000011444091797
    8. '```' → logprob: -17.375011444091797
    9. '2' → logprob: -17.937511444091797
    10. ')' → logprob: -18.437511444091797

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002619774080812931
    2. ',y' → logprob: -6.377619743347168
    3. ' ,' → logprob: -7.002619743347168
    4. '   ' → logprob: -12.627619743347168
    5. ',
' → logprob: -13.127619743347168
    6. 'y' → logprob: -13.252619743347168
    7. ' y' → logprob: -15.002619743347168
    8. '```' → logprob: -16.377620697021484
    9. '-' → logprob: -16.627620697021484
    10. ' ' → logprob: -16.752620697021484

Token 387: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009117019944824278
    2. ' y' → logprob: -7.000911712646484
    3. '	y' → logprob: -16.000911712646484
    4. '   ' → logprob: -17.000911712646484
    5. ')y' → logprob: -18.000911712646484
    6. '(y' → logprob: -18.125911712646484
    7. 'y's' → logprob: -19.000911712646484
    8. ''y' → logprob: -19.000911712646484
    9. '[y' → logprob: -19.375911712646484
    10. ' ' → logprob: -20.000911712646484

Token 388: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.941850526549388e-06
    2. ' -' → logprob: -11.875007629394531
    3. '1' → logprob: -14.000007629394531
    4. ')' → logprob: -16.62500762939453
    5. '2' → logprob: -18.00000762939453
    6. ')-' → logprob: -18.75000762939453
    7. '-)' → logprob: -19.50000762939453
    8. '()-' → logprob: -19.62500762939453
    9. '[' → logprob: -20.12500762939453
    10. '   ' → logprob: -20.25000762939453

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.125007629394531
    3. '2' → logprob: -13.500007629394531
    4. '   ' → logprob: -15.875007629394531
    5. '-' → logprob: -16.00000762939453
    6. '```' → logprob: -16.18750762939453
    7. ')' → logprob: -17.75000762939453
    8. '  ' → logprob: -17.87500762939453
    9. '۱' → logprob: -18.81250762939453
    10. '0' → logprob: -18.87500762939453

Token 390: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.875008583068848
    4. '))' → logprob: -16.25000762939453
    5. '   ' → logprob: -16.37500762939453
    6. ')

' → logprob: -18.00000762939453
    7. ')
' → logprob: -18.75000762939453
    8. '),' → logprob: -19.25000762939453
    9. '())' → logprob: -19.25000762939453
    10. '')' → logprob: -19.37500762939453

Token 391: 'q' (ID: 80)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39206403493881226
    2. 'for' → logprob: -1.267064094543457
    3. 'q' → logprob: -4.392064094543457
    4. 'answer' → logprob: -4.892064094543457
    5. 'p' → logprob: -5.142064094543457
    6. 'result' → logprob: -5.267064094543457
    7. 'Q' → logprob: -5.892064094543457
    8. 'res' → logprob: -6.517064094543457
    9. '_' → logprob: -6.517064094543457
    10. 'z' → logprob: -6.642064094543457

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25212210416793823
    2. '=' → logprob: -1.502122163772583
    3. ',' → logprob: -10.002121925354004
    4. 'u' → logprob: -10.252121925354004
    5. '   ' → logprob: -10.252121925354004
    6. '  ' → logprob: -10.627121925354004
    7. ' ' → logprob: -10.752121925354004
    8. '=int' → logprob: -11.127121925354004
    9. '    ' → logprob: -12.127121925354004
    10. '.' → logprob: -13.127121925354004

Token 393: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031830633524805307
    2. ' int' → logprob: -5.753182888031006
    3. '[int' → logprob: -12.753183364868164
    4. '(int' → logprob: -14.003183364868164
    5. '   ' → logprob: -14.753183364868164
    6. ' ' → logprob: -15.253183364868164
    7. '  ' → logprob: -15.503183364868164
    8. '    ' → logprob: -15.628183364868164
    9. '<int' → logprob: -15.753183364868164
    10. '=int' → logprob: -16.253183364868164

Token 394: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00013905855303164572
    2. '(int' → logprob: -9.125139236450195
    3. '(list' → logprob: -11.250139236450195
    4. '(' → logprob: -12.250139236450195
    5. 'map' → logprob: -12.375139236450195
    6. '(tuple' → logprob: -12.625139236450195
    7. '(range' → logprob: -13.250139236450195
    8. '(sys' → logprob: -13.500139236450195
    9. '(input' → logprob: -14.875139236450195
    10. '()' → logprob: -15.250139236450195

Token 395: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014569011982530355
    2. 'int' → logprob: -6.8764567375183105
    3. '(lambda' → logprob: -7.8764567375183105
    4. '(' → logprob: -10.376457214355469
    5. 'lambda' → logprob: -12.376457214355469
    6. ',int' → logprob: -12.751457214355469
    7. '(str' → logprob: -13.501457214355469
    8. 'list' → logprob: -14.126457214355469
    9. '[int' → logprob: -14.126457214355469
    10. '(tuple' → logprob: -14.376457214355469

Token 396: ' z' (ID: 579)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0035538622178137302
    2. 'lambda' → logprob: -6.003553867340088
    3. '(int' → logprob: -7.003553867340088
    4. ' int' → logprob: -9.50355339050293
    5. ':int' → logprob: -9.87855339050293
    6. '_:' → logprob: -10.62855339050293
    7. '(lambda' → logprob: -12.00355339050293
    8. 'str' → logprob: -12.37855339050293
    9. '   ' → logprob: -12.75355339050293
    10. '_' → logprob: -13.25355339050293

Token 397: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07232964783906937
    2. ':int' → logprob: -2.8223297595977783
    3. 'int' → logprob: -5.197329521179199
    4. ' :' → logprob: -5.572329521179199
    5. '=int' → logprob: -7.697329521179199
    6. '   ' → logprob: -8.8223295211792
    7. 'lambda' → logprob: -9.1973295211792
    8. '(int' → logprob: -9.5723295211792
    9. ',int' → logprob: -9.8223295211792
    10. ',' → logprob: -9.8223295211792

Token 398: ' next' (ID: 2613)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.09804770350456238
    2. 'int' → logprob: -3.4730477333068848
    3. 'list' → logprob: -3.4730477333068848
    4. ' tuple' → logprob: -4.348047733306885
    5. 'find' → logprob: -4.598047733306885
    6. '(tuple' → logprob: -6.223047733306885
    7. 'map' → logprob: -6.598047733306885
    8. '(int' → logprob: -6.848047733306885
    9. 'lambda' → logprob: -7.223047733306885
    10. 'same' → logprob: -7.223047733306885

Token 399: '(i' (ID: 3649)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.039739761501550674
    2. '(sys' → logprob: -3.9147398471832275
    3. '(input' → logprob: -4.414739608764648
    4. '(z' → logprob: -6.164739608764648
    5. '(lambda' → logprob: -6.414739608764648
    6. '(map' → logprob: -6.414739608764648
    7. '(chain' → logprob: -8.039739608764648
    8. '(zip' → logprob: -8.164739608764648
    9. 'iter' → logprob: -8.914739608764648
    10. '(' → logprob: -9.039739608764648

Token 400: ' for' (ID: 395)
  Prédit: '(iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(iter' → logprob: -0.37553611397743225
    2. '(z' → logprob: -1.3755360841751099
    3. '(chain' → logprob: -4.12553596496582
    4. '(i' → logprob: -5.00053596496582
    5. '(map' → logprob: -5.12553596496582
    6. '(p' → logprob: -5.37553596496582
    7. '(input' → logprob: -5.37553596496582
    8. '(sys' → logprob: -5.75053596496582
    9. '(range' → logprob: -6.12553596496582
    10. '(zip' → logprob: -6.25053596496582

Token 401: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00326517247594893
    2. ' i' → logprob: -5.753265380859375
    3. '(i' → logprob: -10.128265380859375
    4. 'range' → logprob: -11.003265380859375
    5. ' in' → logprob: -11.378265380859375
    6. 'in' → logprob: -12.253265380859375
    7. '(' → logprob: -12.503265380859375
    8. ',' → logprob: -13.378265380859375
    9. '	i' → logprob: -14.003265380859375
    10. ' ' → logprob: -14.128265380859375

Token 402: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9560568928718567
    2. ',' → logprob: -1.206056833267212
    3. ' in' → logprob: -1.206056833267212
    4. 'i' → logprob: -4.581057071685791
    5. ',i' → logprob: -5.206057071685791
    6. ' i' → logprob: -7.581057071685791
    7. ' ,' → logprob: -8.581056594848633
    8. ',z' → logprob: -9.706056594848633
    9. ',x' → logprob: -9.831056594848633
    10. ',in' → logprob: -10.081056594848633

Token 403: ' e' (ID: 319)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07655542343854904
    2. 'x' → logprob: -4.201555252075195
    3. 'val' → logprob: -4.201555252075195
    4. 'c' → logprob: -4.576555252075195
    5. 'i' → logprob: -4.701555252075195
    6. 'e' → logprob: -4.701555252075195
    7. 'j' → logprob: -5.951555252075195
    8. ' v' → logprob: -5.951555252075195
    9. 's' → logprob: -6.826555252075195
    10. 'a' → logprob: -6.826555252075195

Token 404: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8569665551185608
    2. ' in' → logprob: -0.9819665551185608
    3. ',' → logprob: -1.606966495513916
    4. 'n' → logprob: -8.606966972351074
    5. ' ,' → logprob: -9.356966972351074
    6. ',e' → logprob: -10.356966972351074
    7. ' ' → logprob: -10.481966972351074
    8. ',n' → logprob: -10.856966972351074
    9. 'enumer' → logprob: -11.106966972351074
    10. ')' → logprob: -11.481966972351074

Token 405: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.029788101091980934
    2. ' enumerate' → logprob: -3.529788017272949
    3. '
' → logprob: -10.90478801727295
    4. '(en' → logprob: -11.40478801727295
    5. 'zip' → logprob: -13.40478801727295
    6. 'en' → logprob: -13.90478801727295
    7. '```' → logprob: -14.15478801727295
    8. ',' → logprob: -14.40478801727295
    9. 'filter' → logprob: -14.40478801727295
    10. ' ' → logprob: -14.52978801727295

Token 406: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12511122226715088
    2. '(q' → logprob: -2.8751111030578613
    3. '(d' → logprob: -3.0001111030578613
    4. '(s' → logprob: -5.875111103057861
    5. '(range' → logprob: -6.125111103057861
    6. 'p' → logprob: -6.625111103057861
    7. '(chain' → logprob: -7.000111103057861
    8. '(z' → logprob: -7.000111103057861
    9. '(zip' → logprob: -7.375111103057861
    10. '(re' → logprob: -7.625111103057861

Token 407: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06641420722007751
    2. 'if' → logprob: -2.8164141178131104
    3. ')' → logprob: -5.4414143562316895
    4. '   ' → logprob: -10.066413879394531
    5. ' ' → logprob: -10.566413879394531
    6. '  ' → logprob: -11.316413879394531
    7. 'd' → logprob: -12.441413879394531
    8. 'p' → logprob: -12.816413879394531
    9. '[::-' → logprob: -12.816413879394531
    10. '[' → logprob: -13.066413879394531

Token 408: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20150525867938995
    2. 'if' → logprob: -1.7015053033828735
    3. '   ' → logprob: -10.076505661010742
    4. '(p' → logprob: -11.701505661010742
    5. ' ' → logprob: -11.826505661010742
    6. 'in' → logprob: -11.951505661010742
    7. ' in' → logprob: -11.951505661010742
    8. '  ' → logprob: -12.326505661010742
    9. '()' → logprob: -12.576505661010742
    10. '    ' → logprob: -12.951505661010742

Token 409: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0046495418064296246
    2. ' e' → logprob: -5.379649639129639
    3. 'p' → logprob: -10.87964916229248
    4. 'same' → logprob: -12.00464916229248
    5. ' p' → logprob: -14.50464916229248
    6. '
' → logprob: -14.62964916229248
    7. 'not' → logprob: -14.62964916229248
    8. '	e' → logprob: -14.75464916229248
    9. 'lambda' → logprob: -14.75464916229248
    10. '   ' → logprob: -14.87964916229248

Token 410: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2254994809627533
    2. '==' → logprob: -1.6004995107650757
    3. ')' → logprob: -10.225499153137207
    4. ')==' → logprob: -10.600499153137207
    5. ' ' → logprob: -12.225499153137207
    6. ']==' → logprob: -12.600499153137207
    7. ' <=' → logprob: -12.600499153137207
    8. '[' → logprob: -12.975499153137207
    9. '<=' → logprob: -13.225499153137207
    10. '==
' → logprob: -13.225499153137207

Token 411: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.012522606179118156
    2. ' z' → logprob: -4.3875226974487305
    3. ' ' → logprob: -12.88752269744873
    4. '  ' → logprob: -13.01252269744873
    5. '   ' → logprob: -13.38752269744873
    6. '    ' → logprob: -13.51252269744873
    7. 'q' → logprob: -13.76252269744873
    8. 'p' → logprob: -13.76252269744873
    9. '
' → logprob: -14.01252269744873
    10. '	z' → logprob: -14.76252269744873

Token 412: '+' (ID: 10)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0027680248022079468
    2. ' ),' → logprob: -6.127768039703369
    3. ' if' → logprob: -8.252767562866211
    4. '   ' → logprob: -9.252767562866211
    5. '),
' → logprob: -10.002767562866211
    6. ')))' → logprob: -10.127767562866211
    7. ' ' → logprob: -10.502767562866211
    8. ')' → logprob: -10.502767562866211
    9. 'if' → logprob: -10.627767562866211
    10. ',' → logprob: -11.002767562866211

Token 413: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7442017793655396
    2. '1' → logprob: -1.1192017793655396
    3. 'z' → logprob: -2.24420166015625
    4. '_' → logprob: -3.61920166015625
    5. ' q' → logprob: -4.11920166015625
    6. 'p' → logprob: -4.24420166015625
    7. '0' → logprob: -4.24420166015625
    8. ' ' → logprob: -5.24420166015625
    9. ' z' → logprob: -5.36920166015625
    10. '-' → logprob: -5.61920166015625

Token 414: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.08150536566972733
    2. ',' → logprob: -2.581505298614502
    3. ')))' → logprob: -7.331505298614502
    4. ' ,' → logprob: -7.456505298614502
    5. ' ),' → logprob: -7.581505298614502
    6. ')' → logprob: -8.20650577545166
    7. 'q' → logprob: -9.08150577545166
    8. ',q' → logprob: -9.20650577545166
    9. ')),' → logprob: -9.58150577545166
    10. '   ' → logprob: -9.70650577545166

Token 415: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01417115144431591
    2. ' range' → logprob: -4.264171123504639
    3. 'chain' → logprob: -12.264171600341797
    4. '(range' → logprob: -13.264171600341797
    5. 'p' → logprob: -14.639171600341797
    6. 'map' → logprob: -15.389171600341797
    7. '   ' → logprob: -15.889171600341797
    8. ' ' → logprob: -16.264171600341797
    9. ' chain' → logprob: -16.764171600341797
    10. 'filter' → logprob: -17.014171600341797

Token 416: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01019752211868763
    2. 'N' → logprob: -4.635197639465332
    3. '(len' → logprob: -8.510197639465332
    4. '(' → logprob: -9.260197639465332
    5. '(M' → logprob: -9.385197639465332
    6. ' (' → logprob: -10.635197639465332
    7. ' N' → logprob: -11.010197639465332
    8. '(
' → logprob: -12.135197639465332
    9. 'len' → logprob: -12.385197639465332
    10. '(Q' → logprob: -12.885197639465332

Token 417: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0027428159955888987
    2. ')))' → logprob: -6.002742767333984
    3. '))
' → logprob: -8.752742767333984
    4. ')' → logprob: -9.252742767333984
    5. ' ))' → logprob: -12.002742767333984
    6. '))

' → logprob: -13.502742767333984
    7. '))))' → logprob: -13.502742767333984
    8. '),' → logprob: -14.252742767333984
    9. ']))' → logprob: -14.377742767333984
    10. '()))' → logprob: -14.877742767333984

Token 418: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08675245940685272
    2. 'for' → logprob: -3.586752414703369
    3. 'p' → logprob: -4.336752414703369
    4. 'result' → logprob: -4.461752414703369
    5. 'answer' → logprob: -4.586752414703369
    6. 'q' → logprob: -4.961752414703369
    7. '_' → logprob: -5.586752414703369
    8. '[' → logprob: -6.211752414703369
    9. 'count' → logprob: -6.711752414703369
    10. 'ans' → logprob: -6.836752414703369

Token 419: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6986840963363647
    2. ' =' → logprob: -0.6986840963363647
    3. '[' → logprob: -6.198684215545654
    4. '(' → logprob: -6.948684215545654
    5. '[:]' → logprob: -7.323684215545654
    6. '=[]' → logprob: -7.823684215545654
    7. '=[' → logprob: -7.823684215545654
    8. '_' → logprob: -8.198683738708496
    9. '<|end|>' → logprob: -8.323683738708496
    10. ',' → logprob: -8.573683738708496

Token 420: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5577152371406555
    2. '[' → logprob: -1.6827151775360107
    3. 'sum' → logprob: -2.3077151775360107
    4. '[]' → logprob: -2.4327151775360107
    5. 'list' → logprob: -3.8077151775360107
    6. '[]
' → logprob: -5.18271541595459
    7. 'max' → logprob: -5.55771541595459
    8. '[p' → logprob: -5.93271541595459
    9. '[N' → logprob: -6.05771541595459
    10. 'all' → logprob: -6.30771541595459

Token 421: '(st' (ID: 4065)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.41185685992240906
    2. '(' → logprob: -1.1618568897247314
    3. '(p' → logprob: -4.786856651306152
    4. '(int' → logprob: -5.286856651306152
    5. '(not' → logprob: -5.786856651306152
    6. '(i' → logprob: -5.911856651306152
    7. '(x' → logprob: -6.286856651306152
    8. '((' → logprob: -6.911856651306152
    9. '(len' → logprob: -7.536856651306152
    10. '(abs' → logprob: -7.786856651306152

Token 422: 'arm' (ID: 2218)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.4625271558761597
    2. '(a' → logprob: -1.4625271558761597
    3. '(' → logprob: -2.087527275085449
    4. '(map' → logprob: -2.587527275085449
    5. '(p' → logprob: -2.837527275085449
    6. '((' → logprob: -3.087527275085449
    7. '(range' → logprob: -3.087527275085449
    8. '(len' → logprob: -3.337527275085449
    9. '(s' → logprob: -3.337527275085449
    10. '(zip' → logprob: -3.462527275085449

Token 423: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -4.320199877838604e-07
    2. '(ap' → logprob: -15.875
    3. 'apped' → logprob: -16.375
    4. 'map' → logprob: -17.625
    5. '
' → logprob: -18.5
    6. 'a' → logprob: -18.625
    7. 'up' → logprob: -18.875
    8. 'app' → logprob: -18.875
    9. 'apper' → logprob: -18.875
    10. 'aps' → logprob: -18.875

Token 424: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.41974663734436035
    2. '(add' → logprob: -1.5447466373443604
    3. '(s' → logprob: -2.6697466373443604
    4. 'add' → logprob: -3.1697466373443604
    5. '(item' → logprob: -4.544746398925781
    6. 'lambda' → logprob: -5.919746398925781
    7. '(operator' → logprob: -6.169746398925781
    8. 'item' → logprob: -7.544746398925781
    9. 'same' → logprob: -7.544746398925781
    10. '(' → logprob: -7.544746398925781

Token 425: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.12333559989929199
    2. 'item' → logprob: -3.123335599899292
    3. 'operator' → logprob: -3.373335599899292
    4. 'add' → logprob: -3.998335599899292
    5. 'int' → logprob: -4.998335838317871
    6. '(lambda' → logprob: -4.998335838317871
    7. 'same' → logprob: -5.748335838317871
    8. ' lambda' → logprob: -6.623335838317871
    9. '   ' → logprob: -7.623335838317871
    10. 'getitem' → logprob: -8.748335838317871

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006103816442191601
    2. 'lambda' → logprob: -6.381103992462158
    3. ' ,' → logprob: -6.756103992462158
    4. 'x' → logprob: -6.881103992462158
    5. ',i' → logprob: -7.381103992462158
    6. ',x' → logprob: -7.881103992462158
    7. 'i' → logprob: -8.506103515625
    8. 'a' → logprob: -8.631103515625
    9. '   ' → logprob: -8.881103515625
    10. ',y' → logprob: -9.506103515625

Token 427: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25734424591064453
    2. 'x' → logprob: -1.8823442459106445
    3. 'a' → logprob: -3.1323442459106445
    4. ' j' → logprob: -4.0073442459106445
    5. '_,' → logprob: -6.1323442459106445
    6. ' x' → logprob: -6.3823442459106445
    7. 'v' → logprob: -6.3823442459106445
    8. '   ' → logprob: -7.2573442459106445
    9. 'idx' → logprob: -7.2573442459106445
    10. 'c' → logprob: -7.5073442459106445

Token 428: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47775599360466003
    2. ',' → logprob: -0.9777560234069824
    3. ' :' → logprob: -6.352756023406982
    4. '   ' → logprob: -6.852756023406982
    5. ' ,' → logprob: -7.852756023406982
    6. '  ' → logprob: -9.352755546569824
    7. '    ' → logprob: -9.477755546569824
    8. ',i' → logprob: -10.227755546569824
    9. '=' → logprob: -10.352755546569824
    10. ' ' → logprob: -10.727755546569824

Token 429: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.745984673500061
    2. 'int' → logprob: -1.995984673500061
    3. '1' → logprob: -2.3709845542907715
    4. 'add' → logprob: -2.6209845542907715
    5. 'abs' → logprob: -2.8709845542907715
    6. '(' → logprob: -3.1209845542907715
    7. '(i' → logprob: -3.2459845542907715
    8. 'lambda' → logprob: -3.3709845542907715
    9. 'i' → logprob: -3.7459845542907715
    10. '(lambda' → logprob: -5.1209845542907715

Token 430: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002843384863808751
    2. '(q' → logprob: -8.250284194946289
    3. '(' → logprob: -11.375284194946289
    4. 'i' → logprob: -12.500284194946289
    5. '(p' → logprob: -12.500284194946289
    6. '(j' → logprob: -13.625284194946289
    7. ' (' → logprob: -14.125284194946289
    8. '((' → logprob: -14.500284194946289
    9. '(
' → logprob: -15.000284194946289
    10. '   ' → logprob: -15.625284194946289

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05383284389972687
    2. '(j' → logprob: -3.303832769393921
    3. ',j' → logprob: -4.6788330078125
    4. '(i' → logprob: -5.8038330078125
    5. ' ,' → logprob: -6.0538330078125
    6. '(' → logprob: -7.9288330078125
    7. '(q' → logprob: -8.0538330078125
    8. '(p' → logprob: -9.1788330078125
    9. ',q' → logprob: -9.3038330078125
    10. ' (' → logprob: -10.1788330078125

Token 432: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012543906457722187
    2. ' j' → logprob: -5.262543678283691
    3. 'i' → logprob: -5.512543678283691
    4. 'q' → logprob: -6.012543678283691
    5. ' ' → logprob: -8.512543678283691
    6. '   ' → logprob: -8.637543678283691
    7. '  ' → logprob: -8.887543678283691
    8. 'p' → logprob: -9.387543678283691
    9. ' i' → logprob: -9.512543678283691
    10. 'ans' → logprob: -10.262543678283691

Token 433: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003826914355158806
    2. ' ,' → logprob: -5.878827095031738
    3. ',i' → logprob: -7.628827095031738
    4. ',p' → logprob: -8.128827095031738
    5. '   ' → logprob: -9.503827095031738
    6. '),' → logprob: -9.753827095031738
    7. ',q' → logprob: -10.503827095031738
    8. 'p' → logprob: -11.003827095031738
    9. ' ' → logprob: -11.378827095031738
    10. ')' → logprob: -11.503827095031738

Token 434: ' enumerate' (ID: 29671)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.17400678992271423
    2. 'enumer' → logprob: -2.049006700515747
    3. ' zip' → logprob: -4.174006938934326
    4. ' enumerate' → logprob: -4.799006938934326
    5. '(zip' → logprob: -5.924006938934326
    6. '   ' → logprob: -6.299006938934326
    7. 'chain' → logprob: -6.549006938934326
    8. 'compress' → logprob: -7.799006938934326
    9. ' ' → logprob: -8.549006462097168
    10. 'p' → logprob: -9.049006462097168

Token 435: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0013382164761424065
    2. '(zip' → logprob: -7.626338005065918
    3. '(range' → logprob: -7.626338005065918
    4. '(' → logprob: -8.626338005065918
    5. 'q' → logprob: -9.251338005065918
    6. '((' → logprob: -10.376338005065918
    7. '(p' → logprob: -10.376338005065918
    8. '(en' → logprob: -12.626338005065918
    9. ',' → logprob: -12.751338005065918
    10. '(z' → logprob: -12.876338005065918

Token 436: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015052208909764886
    2. '()))' → logprob: -7.126505374908447
    3. '))
' → logprob: -8.251504898071289
    4. ',' → logprob: -8.501504898071289
    5. ')' → logprob: -9.126504898071289
    6. ')))' → logprob: -9.751504898071289
    7. '(' → logprob: -10.876504898071289
    8. '   ' → logprob: -11.126504898071289
    9. '()' → logprob: -11.626504898071289
    10. ' ))' → logprob: -12.126504898071289

Token 437: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. 'pr' → logprob: -18.0
    4. 'ans' → logprob: -18.375
    5. '#print' → logprob: -18.625
    6. 'prin' → logprob: -19.375
    7. '#' → logprob: -19.75
    8. 'pri' → logprob: -20.0
    9. ')' → logprob: -20.375
    10. '(print' → logprob: -20.625

Token 438: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.375006675720215
    3. 'ans' → logprob: -13.250006675720215
    4. '(f' → logprob: -16.5000057220459
    5. ' (' → logprob: -16.6250057220459
    6. '(sum' → logprob: -17.0000057220459
    7. '(
' → logprob: -17.2500057220459
    8. '(answer' → logprob: -18.0000057220459
    9. '(abs' → logprob: -18.1250057220459
    10. '((' → logprob: -18.1250057220459

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.47495681833243e-05
    2. ' )' → logprob: -11.000024795532227
    3. ')
' → logprob: -12.375024795532227
    4. ')`' → logprob: -13.625024795532227
    5. '+' → logprob: -13.875024795532227
    6. '))' → logprob: -14.375024795532227
    7. '`)' → logprob: -15.125024795532227
    8. '```' → logprob: -15.875024795532227
    9. '())' → logprob: -16.000024795532227
    10. '')' → logprob: -16.375024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 437
Tokens correctement prédits (1ère position, stricte): 166
Tokens correctement prédits (1ère position, avec adaptation): 172
Tokens correctement prédits (top 10): 344
Précision stricte (1ère position): 37.99%
Précision adaptée (1ère position): 39.36%
Précision (top 10): 78.72%
================================================================================
