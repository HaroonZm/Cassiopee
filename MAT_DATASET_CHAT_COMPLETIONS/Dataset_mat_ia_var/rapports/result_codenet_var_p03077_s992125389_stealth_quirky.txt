================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

fetch = lambda: int(input())
totalPpl, vesselCapacities = fetch(), [fetch() for _ in "abcde"]

findSmallest = lambda lst: reduce(lambda x, y: x if x < y else y, lst)
minimumCapacity = findSmallest(vesselCapacities)

chunks, extra = divmod(totalPpl, minimumCapacity)
answer = chunks + 4 if extra else chunks + 3 + 1
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'fetch' (ID: 19843)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014666754752397537
    2. '(lambda' → logprob: -4.514666557312012
    3. 'def' → logprob: -6.139666557312012
    4. ',' → logprob: -7.389666557312012
    5. '(
' → logprob: -8.389666557312012
    6. '.' → logprob: -8.889666557312012
    7. '\' → logprob: -9.139666557312012
    8. '```' → logprob: -9.639666557312012
    9. 'd' → logprob: -9.889666557312012
    10. '\(' → logprob: -10.264666557312012

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8502307534217834
    2. '_' → logprob: -0.9752307534217834
    3. '_fetch' → logprob: -1.8502306938171387
    4. '_data' → logprob: -4.475230693817139
    5. 'fetch' → logprob: -5.100230693817139
    6. ' (' → logprob: -5.225230693817139
    7. 'r' → logprob: -5.475230693817139
    8. '_url' → logprob: -6.350230693817139
    9. '(fetch' → logprob: -6.350230693817139
    10. 'data' → logprob: -7.100230693817139

Token 7: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.633280336856842
    2. ' fetch' → logprob: -1.2582802772521973
    3. 'fetch' → logprob: -2.0082802772521973
    4. 'lambda' → logprob: -3.1332802772521973
    5. '(lambda' → logprob: -5.633280277252197
    6. ' []' → logprob: -7.133280277252197
    7. 'reduce' → logprob: -7.883280277252197
    8. ' ' → logprob: -8.008280754089355
    9. ' map' → logprob: -8.133280754089355
    10. '(fetch' → logprob: -8.258280754089355

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4758763015270233
    2. ' lst' → logprob: -1.4758763313293457
    3. ' data' → logprob: -3.2258763313293457
    4. ' fetch' → logprob: -3.6008763313293457
    5. ' obj' → logprob: -3.8508763313293457
    6. ' f' → logprob: -3.9758763313293457
    7. ' url' → logprob: -4.350876331329346
    8. ' s' → logprob: -5.100876331329346
    9. ' func' → logprob: -5.850876331329346
    10. ' ' → logprob: -5.850876331329346

Token 9: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6349112391471863
    2. ' []' → logprob: -1.384911298751831
    3. ' __' → logprob: -2.884911298751831
    4. ' fetch' → logprob: -3.509911298751831
    5. ' iter' → logprob: -3.634911298751831
    6. 'input' → logprob: -3.634911298751831
    7. ' list' → logprob: -3.759911298751831
    8. ' map' → logprob: -4.634911060333252
    9. '[]' → logprob: -4.884911060333252
    10. ' [' → logprob: -5.009911060333252

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0109196612611413
    2. '(input' → logprob: -4.885919570922852
    3. '('' → logprob: -5.885919570922852
    4. '(fetch' → logprob: -8.385919570922852
    5. '(open' → logprob: -9.510919570922852
    6. '("("' → logprob: -9.510919570922852
    7. '(
' → logprob: -10.385919570922852
    8. ''' → logprob: -10.885919570922852
    9. 'input' → logprob: -11.010919570922852
    10. '("' → logprob: -11.260919570922852

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.22298188507556915
    2. ')' → logprob: -1.9729819297790527
    3. '()' → logprob: -3.5979819297790527
    4. '(' → logprob: -3.7229819297790527
    5. '()))' → logprob: -5.472981929779053
    6. '))' → logprob: -5.597981929779053
    7. '`)' → logprob: -8.347981452941895
    8. '`()' → logprob: -8.472981452941895
    9. '(()' → logprob: -8.597981452941895
    10. ' ())' → logprob: -8.722981452941895

Token 12: 'total' (ID: 9577)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0231915470212698
    2. 'x' → logprob: -5.273191452026367
    3. '(
' → logprob: -5.898191452026367
    4. ')' → logprob: -6.023191452026367
    5. 'result' → logprob: -6.273191452026367
    6. 'data' → logprob: -6.273191452026367
    7. 'a' → logprob: -6.398191452026367
    8. '()' → logprob: -6.898191452026367
    9. 'num' → logprob: -6.898191452026367
    10. 'def' → logprob: -7.523191452026367

Token 13: 'P' (ID: 47)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09580877423286438
    2. '_' → logprob: -2.720808744430542
    3. '=' → logprob: -3.845808744430542
    4. '.' → logprob: -7.095808982849121
    5. ')' → logprob: -7.470808982849121
    6. ' =' → logprob: -7.470808982849121
    7. '+' → logprob: -7.595808982849121
    8. 's' → logprob: -8.345808982849121
    9. '_space' → logprob: -8.595808982849121
    10. '(_)' → logprob: -8.970808982849121

Token 14: 'pl' (ID: 528)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.16801129281520844
    2. 'rices' → logprob: -2.04301118850708
    3. 'urchases' → logprob: -5.41801118850708
    4. 'ay' → logprob: -5.54301118850708
    5. 'urchase' → logprob: -5.66801118850708
    6. 'r' → logprob: -5.79301118850708
    7. '_' → logprob: -6.16801118850708
    8. 'oints' → logprob: -6.54301118850708
    9. '_r' → logprob: -6.79301118850708
    10. 'Rice' → logprob: -6.91801118850708

Token 15: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.589331865310669
    2. ' =' → logprob: -0.839331865310669
    3. ' +=' → logprob: -5.46433162689209
    4. '[' → logprob: -6.08933162689209
    5. '+' → logprob: -6.33933162689209
    6. '+=' → logprob: -6.58933162689209
    7. ' ' → logprob: -6.71433162689209
    8. '_' → logprob: -7.21433162689209
    9. '.' → logprob: -7.21433162689209
    10. ')' → logprob: -7.71433162689209

Token 16: ' vessel' (ID: 44069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5282331109046936
    2. ' total' → logprob: -1.1532330513000488
    3. ' =' → logprob: -4.653233051300049
    4. 'max' → logprob: -4.653233051300049
    5. '=' → logprob: -4.903233051300049
    6. 'fetch' → logprob: -5.153233051300049
    7. 'p' → logprob: -5.278233051300049
    8. 'space' → logprob: -5.278233051300049
    9. ' max' → logprob: -5.403233051300049
    10. ' fetch' → logprob: -5.965733051300049

Token 17: 'Cap' (ID: 12168)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28824174404144287
    2. ' =' → logprob: -1.7882417440414429
    3. '=' → logprob: -2.6632418632507324
    4. '_' → logprob: -4.538241863250732
    5. '_count' → logprob: -6.913241863250732
    6. ')' → logprob: -7.538241863250732
    7. '_s' → logprob: -8.163241386413574
    8. ' ' → logprob: -8.538241386413574
    9. ',' → logprob: -8.538241386413574
    10. '_space' → logprob: -9.038241386413574

Token 18: 'ac' (ID: 359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02345929853618145
    2. '=' → logprob: -3.7734591960906982
    3. ' ' → logprob: -9.273459434509277
    4. ',' → logprob: -9.273459434509277
    5. ')' → logprob: -11.523459434509277
    6. ' =
' → logprob: -12.273459434509277
    7. ' ,' → logprob: -12.273459434509277
    8. '  ' → logprob: -13.023459434509277
    9. 's' → logprob: -13.273459434509277
    10. ' =
' → logprob: -14.148459434509277

Token 19: 'ities' (ID: 1629)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ity' → logprob: -8.2994620242971e-06
    2. 'ities' → logprob: -12.375008583068848
    3. 'y' → logprob: -13.875008583068848
    4. 'it' → logprob: -14.000008583068848
    5. 'itty' → logprob: -14.125008583068848
    6. '```' → logprob: -14.750008583068848
    7. 'acity' → logprob: -15.250008583068848
    8. ' ity' → logprob: -15.750008583068848
    9. 's' → logprob: -16.00000762939453
    10. ')' → logprob: -16.25000762939453

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032312572002411
    2. '=' → logprob: -2.35032320022583
    3. ',' → logprob: -9.350322723388672
    4. '[' → logprob: -11.975322723388672
    5. ' ' → logprob: -12.350322723388672
    6. ')' → logprob: -12.350322723388672
    7. ' ,' → logprob: -12.600322723388672
    8. ' =
' → logprob: -12.975322723388672
    9. ' =[' → logprob: -13.100322723388672
    10. '<|end|>' → logprob: -13.850322723388672

Token 21: ' fetch' (ID: 12011)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.946689784526825
    2. ' map' → logprob: -1.1966898441314697
    3. 'fetch' → logprob: -1.5716898441314697
    4. 'list' → logprob: -2.9466898441314697
    5. ' fetch' → logprob: -3.4466898441314697
    6. ' list' → logprob: -4.196689605712891
    7. '[' → logprob: -7.446689605712891
    8. '[]' → logprob: -7.571689605712891
    9. 'tuple' → logprob: -7.946689605712891
    10. ' tuple' → logprob: -8.32168960571289

Token 22: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26248112320899963
    2. '(),' → logprob: -1.5124810934066772
    3. '(' → logprob: -4.637481212615967
    4. '()[' → logprob: -8.262480735778809
    5. '())' → logprob: -9.262480735778809
    6. ',' → logprob: -9.387480735778809
    7. ' ()' → logprob: -9.762480735778809
    8. '()`' → logprob: -10.262480735778809
    9. '(()' → logprob: -10.387480735778809
    10. '().' → logprob: -10.387480735778809

Token 23: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4132576882839203
    2. 'list' → logprob: -1.4132577180862427
    3. '[list' → logprob: -3.538257598876953
    4. '[]' → logprob: -3.663257598876953
    5. '[int' → logprob: -3.788257598876953
    6. ' [' → logprob: -5.038257598876953
    7. ' list' → logprob: -5.288257598876953
    8. '[input' → logprob: -5.788257598876953
    9. 'fetch' → logprob: -6.913257598876953
    10. '[f' → logprob: -7.788257598876953

Token 24: 'fetch' (ID: 19843)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5846436619758606
    2. 'int' → logprob: -1.0846436023712158
    3. 'fetch' → logprob: -2.959643602371216
    4. ']int' → logprob: -3.209643602371216
    5. '0' → logprob: -4.959643840789795
    6. ']*' → logprob: -6.459643840789795
    7. '*' → logprob: -7.959643840789795
    8. '1' → logprob: -8.084643363952637
    9. ' ' → logprob: -8.209643363952637
    10. ' int' → logprob: -8.334643363952637

Token 25: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01791742444038391
    2. '()]' → logprob: -4.267917633056641
    3. ']()' → logprob: -5.642917633056641
    4. '`()' → logprob: -9.14291763305664
    5. '())' → logprob: -9.89291763305664
    6. ')' → logprob: -10.51791763305664
    7. ']' → logprob: -12.01791763305664
    8. '>()' → logprob: -12.26791763305664
    9. '()`' → logprob: -13.14291763305664
    10. ' ()' → logprob: -13.39291763305664

Token 26: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0376562774181366
    2. ')' → logprob: -4.162656307220459
    3. '()]' → logprob: -4.787656307220459
    4. 'for' → logprob: -4.912656307220459
    5. '())' → logprob: -5.287656307220459
    6. ' for' → logprob: -8.1626558303833
    7. ']' → logprob: -9.0376558303833
    8. ')]' → logprob: -9.1626558303833
    9. ' ()' → logprob: -10.1626558303833
    10. ']()' → logprob: -10.4126558303833

Token 27: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07853752374649048
    2. '_' → logprob: -2.7035374641418457
    3. 'range' → logprob: -5.203537464141846
    4. ' _' → logprob: -5.953537464141846
    5. ' ' → logprob: -8.328537940979004
    6. '_range' → logprob: -9.203537940979004
    7. '	range' → logprob: -9.453537940979004
    8. ' in' → logprob: -10.328537940979004
    9. ' xrange' → logprob: -11.953537940979004
    10. '(range' → logprob: -13.078537940979004

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373052552342415
    2. 'in' → logprob: -3.4087305068969727
    3. 'range' → logprob: -9.658730506896973
    4. ' ' → logprob: -11.408730506896973
    5. ' range' → logprob: -12.283730506896973
    6. '	in' → logprob: -12.908730506896973
    7. 'import' → logprob: -14.033730506896973
    8. '  ' → logprob: -14.158730506896973
    9. 'i' → logprob: -15.283730506896973
    10. '<|end|>' → logprob: -16.15873146057129

Token 29: ' "' (ID: 392)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018154388293623924
    2. ' range' → logprob: -4.018154621124268
    3. '	range' → logprob: -13.89315414428711
    4. ' ' → logprob: -14.14315414428711
    5. '[' → logprob: -14.26815414428711
    6. '   ' → logprob: -14.39315414428711
    7. '  ' → logprob: -14.76815414428711
    8. '(range' → logprob: -15.14315414428711
    9. '```' → logprob: -16.14315414428711
    10. 'iter' → logprob: -16.26815414428711

Token 30: 'abc' (ID: 26682)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18346728384494781
    2. '"' → logprob: -2.933467388153076
    3. '_"' → logprob: -3.433467388153076
    4. ' range' → logprob: -3.683467388153076
    5. '123' → logprob: -4.308467388153076
    6. '12' → logprob: -4.308467388153076
    7. '_' → logprob: -5.058467388153076
    8. '0' → logprob: -5.058467388153076
    9. '"*' → logprob: -5.433467388153076
    10. '012' → logprob: -5.558467388153076

Token 31: 'de' (ID: 613)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.00021962920436635613
    2. '"' → logprob: -9.125219345092773
    3. ']' → logprob: -9.875219345092773
    4. 'def' → logprob: -11.125219345092773
    5. '"]]' → logprob: -11.250219345092773
    6. '"]
' → logprob: -12.125219345092773
    7. '"]

' → logprob: -12.125219345092773
    8. ' "]' → logprob: -12.500219345092773
    9. '']' → logprob: -12.625219345092773
    10. '"],' → logprob: -13.125219345092773

Token 32: '"]

' (ID: 57728)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0002879145904444158
    2. '"' → logprob: -9.000288009643555
    3. ']' → logprob: -9.875288009643555
    4. 'f' → logprob: -10.625288009643555
    5. '"]
' → logprob: -10.625288009643555
    6. '"]

' → logprob: -10.750288009643555
    7. ' "]' → logprob: -10.875288009643555
    8. '']' → logprob: -12.125288009643555
    9. '"]
' → logprob: -12.125288009643555
    10. '"]]' → logprob: -12.625288009643555

Token 33: 'find' (ID: 6555)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1253412514925003
    2. '.sort' → logprob: -3.6253411769866943
    3. 'sorted' → logprob: -3.7503411769866943
    4. '.' → logprob: -4.000341415405273
    5. ')' → logprob: -4.750341415405273
    6. '.reduce' → logprob: -4.750341415405273
    7. '\n' → logprob: -5.000341415405273
    8. '
' → logprob: -5.625341415405273
    9. 'total' → logprob: -6.000341415405273
    10. 'v' → logprob: -6.125341415405273

Token 34: 'Small' (ID: 26886)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06537948548793793
    2. '(' → logprob: -3.1903793811798096
    3. '_max' → logprob: -4.315379619598389
    4. '(lambda' → logprob: -6.065379619598389
    5. 'Max' → logprob: -7.440379619598389
    6. '_cap' → logprob: -7.815379619598389
    7. '=' → logprob: -7.815379619598389
    8. ' =' → logprob: -7.940379619598389
    9. '_opt' → logprob: -7.940379619598389
    10. '_sum' → logprob: -7.940379619598389

Token 35: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000305310997646302
    2. 'er' → logprob: -8.25030517578125
    3. 'e' → logprob: -10.25030517578125
    4. '_est' → logprob: -12.50030517578125
    5. 'erst' → logprob: -13.12530517578125
    6. '```' → logprob: -13.62530517578125
    7. '_' → logprob: -14.62530517578125
    8. '(est' → logprob: -15.75030517578125
    9. '=' → logprob: -16.00030517578125
    10. '``' → logprob: -16.12530517578125

Token 36: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8381189703941345
    2. '_' → logprob: -0.9631189703941345
    3. 'Cap' → logprob: -3.0881190299987793
    4. 'Index' → logprob: -4.213119029998779
    5. '=' → logprob: -4.713119029998779
    6. '_cap' → logprob: -4.713119029998779
    7. 'V' → logprob: -4.838119029998779
    8. '_v' → logprob: -4.838119029998779
    9. '()' → logprob: -5.088119029998779
    10. 'Equal' → logprob: -5.338119029998779

Token 37: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6769951581954956
    2. 'min' → logprob: -0.9269951581954956
    3. ' min' → logprob: -2.926995277404785
    4. ' lambda' → logprob: -3.801995277404785
    5. '(lambda' → logprob: -3.926995277404785
    6. 'max' → logprob: -8.176995277404785
    7. '(min' → logprob: -8.551995277404785
    8. '(' → logprob: -11.176995277404785
    9. '=lambda' → logprob: -11.551995277404785
    10. ' ' → logprob: -11.676995277404785

Token 38: ' lst' (ID: 33384)
  Prédit: ' vessel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vessel' → logprob: -0.19307856261730194
    2. ' lambda' → logprob: -2.0680785179138184
    3. ' vessels' → logprob: -4.068078517913818
    4. ' min' → logprob: -4.443078517913818
    5. 'lambda' → logprob: -4.943078517913818
    6. '(lambda' → logprob: -5.568078517913818
    7. ' x' → logprob: -6.068078517913818
    8. ' ' → logprob: -6.443078517913818
    9. ' max' → logprob: -6.693078517913818
    10. ' (' → logprob: -6.943078517913818

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03410066291689873
    2. ' :' → logprob: -3.5341007709503174
    3. ' lst' → logprob: -6.034100532531738
    4. ':min' → logprob: -7.409100532531738
    5. 'lst' → logprob: -7.784100532531738
    6. 'min' → logprob: -8.034100532531738
    7. ',' → logprob: -8.784100532531738
    8. ' min' → logprob: -8.784100532531738
    9. '(lst' → logprob: -9.409100532531738
    10. ':list' → logprob: -9.534100532531738

Token 40: ' reduce' (ID: 10389)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.16075290739536285
    2. 'min' → logprob: -1.9107528924942017
    3. 'reduce' → logprob: -8.41075325012207
    4. ' reduce' → logprob: -8.66075325012207
    5. '(min' → logprob: -9.53575325012207
    6. ' lst' → logprob: -11.53575325012207
    7. ' max' → logprob: -11.53575325012207
    8. 'sorted' → logprob: -11.78575325012207
    9. '[min' → logprob: -11.78575325012207
    10. 'max' → logprob: -12.03575325012207

Token 41: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06265182048082352
    2. '(' → logprob: -2.8126518726348877
    3. '(min' → logprob: -7.312651634216309
    4. '(
' → logprob: -12.187651634216309
    5. 'lambda' → logprob: -12.187651634216309
    6. '(max' → logprob: -12.937651634216309
    7. '(int' → logprob: -13.812651634216309
    8. '(operator' → logprob: -14.062651634216309
    9. '```' → logprob: -14.312651634216309
    10. '((' → logprob: -14.687651634216309

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5704200863838196
    2. ' a' → logprob: -1.0704200267791748
    3. 'x' → logprob: -3.445420026779175
    4. 'a' → logprob: -3.445420026779175
    5. ' acc' → logprob: -3.695420026779175
    6. ' lambda' → logprob: -7.070420265197754
    7. ' ' → logprob: -7.445420265197754
    8. ' s' → logprob: -8.320420265197754
    9. ' y' → logprob: -8.320420265197754
    10. ' lst' → logprob: -8.695420265197754

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005616719368845224
    2. ',y' → logprob: -5.880616664886475
    3. ',x' → logprob: -6.005616664886475
    4. ' ,' → logprob: -8.130617141723633
    5. ',a' → logprob: -11.255617141723633
    6. ',l' → logprob: -11.880617141723633
    7. ',n' → logprob: -12.755617141723633
    8. ',v' → logprob: -12.880617141723633
    9. ',min' → logprob: -12.880617141723633
    10. ',value' → logprob: -13.005617141723633

Token 44: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.4287278354167938
    2. 'y' → logprob: -1.0537278652191162
    3. ' ' → logprob: -11.053728103637695
    4. '	y' → logprob: -13.053728103637695
    5. ' min' → logprob: -13.178728103637695
    6. 'min' → logprob: -13.803728103637695
    7. ' lambda' → logprob: -13.928728103637695
    8. 'lambda' → logprob: -13.928728103637695
    9. ',y' → logprob: -14.053728103637695
    10. '  ' → logprob: -14.741228103637695

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011113370768725872
    2. ',' → logprob: -5.386113166809082
    3. ' :' → logprob: -5.511113166809082
    4. ':x' → logprob: -6.136113166809082
    5. ' if' → logprob: -9.511113166809082
    6. 'x' → logprob: -10.011113166809082
    7. ':min' → logprob: -10.136113166809082
    8. ',x' → logprob: -10.136113166809082
    9. 'if' → logprob: -11.636113166809082
    10. ',:' → logprob: -11.886113166809082

Token 46: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25407782196998596
    2. 'x' → logprob: -1.5040777921676636
    3. ' ' → logprob: -6.629077911376953
    4. ' min' → logprob: -8.254077911376953
    5. ' y' → logprob: -9.254077911376953
    6. '   ' → logprob: -9.254077911376953
    7. 'min' → logprob: -9.379077911376953
    8. '  ' → logprob: -9.504077911376953
    9. '	x' → logprob: -9.629077911376953
    10. ')' → logprob: -10.879077911376953

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.061989083886146545
    2. 'if' → logprob: -2.8119890689849854
    3. ' ' → logprob: -11.561988830566406
    4. '	if' → logprob: -12.811988830566406
    5. '```' → logprob: -12.936988830566406
    6. ',' → logprob: -13.311988830566406
    7. '<' → logprob: -14.686988830566406
    8. '|' → logprob: -14.749488830566406
    9. 'min' → logprob: -14.811988830566406
    10. ' ' → logprob: -15.249488830566406

Token 48: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14269468188285828
    2. ' x' → logprob: -2.0176947116851807
    3. ' ' → logprob: -11.392694473266602
    4. 'len' → logprob: -13.017694473266602
    5. '  ' → logprob: -13.142694473266602
    6. '	x' → logprob: -13.642694473266602
    7. ' len' → logprob: -14.392694473266602
    8. '(x' → logprob: -14.517694473266602
    9. '   ' → logprob: -14.517694473266602
    10. 'y' → logprob: -15.142694473266602

Token 49: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16147801280021667
    2. ' <' → logprob: -1.911478042602539
    3. '<=' → logprob: -7.411478042602539
    4. '>' → logprob: -8.286478042602539
    5. ' <=' → logprob: -8.911478042602539
    6. ' ' → logprob: -9.536478042602539
    7. ' >' → logprob: -9.786478042602539
    8. '<size' → logprob: -10.536478042602539
    9. ' if' → logprob: -10.661478042602539
    10. '<len' → logprob: -10.661478042602539

Token 50: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14267916977405548
    2. ' y' → logprob: -2.017679214477539
    3. ' ' → logprob: -13.642679214477539
    4. ' ' → logprob: -13.767679214477539
    5. '=' → logprob: -14.642679214477539
    6. '	y' → logprob: -14.767679214477539
    7. '=y' → logprob: -15.142679214477539
    8. '<|end|>' → logprob: -16.14267921447754
    9. '  ' → logprob: -16.45517921447754
    10. 'x' → logprob: -16.45517921447754

Token 51: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004657849203795195
    2. 'else' → logprob: -5.379657745361328
    3. ' ' → logprob: -10.504657745361328
    4. '	else' → logprob: -13.254657745361328
    5. ' and' → logprob: -13.379657745361328
    6. 'y' → logprob: -13.754657745361328
    7. '  ' → logprob: -14.004657745361328
    8. 'x' → logprob: -14.379657745361328
    9. ' x' → logprob: -14.692157745361328
    10. ',' → logprob: -14.817157745361328

Token 52: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04859498515725136
    2. 'y' → logprob: -3.0485949516296387
    3. ' ' → logprob: -12.798595428466797
    4. ' ' → logprob: -13.298595428466797
    5. '    ' → logprob: -13.798595428466797
    6. '	y' → logprob: -14.048595428466797
    7. ',' → logprob: -14.673595428466797
    8. '   ' → logprob: -15.986095428466797
    9. '  ' → logprob: -16.736095428466797
    10. ' x' → logprob: -16.736095428466797

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022640345618128777
    2. ',l' → logprob: -4.397640228271484
    3. ' ,' → logprob: -5.147640228271484
    4. ' lst' → logprob: -5.772640228271484
    5. 'lst' → logprob: -7.647640228271484
    6. '(lst' → logprob: -7.897640228271484
    7. ')' → logprob: -8.397640228271484
    8. ',list' → logprob: -10.522640228271484
    9. '   ' → logprob: -11.022640228271484
    10. '),' → logprob: -11.272640228271484

Token 54: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.061973292380571365
    2. 'lst' → logprob: -2.8119733333587646
    3. '(lst' → logprob: -13.311973571777344
    4. ' vessel' → logprob: -13.686973571777344
    5. 'l' → logprob: -14.436973571777344
    6. 'list' → logprob: -14.561973571777344
    7. ' list' → logprob: -14.561973571777344
    8. '_lst' → logprob: -14.686973571777344
    9. '.lst' → logprob: -15.061973571777344
    10. ' ls' → logprob: -15.311973571777344

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ' )' → logprob: -12.125007629394531
    3. ')
' → logprob: -14.375007629394531
    4. '<|end|>' → logprob: -14.875007629394531
    5. '))' → logprob: -15.500007629394531
    6. ')

' → logprob: -16.12500762939453
    7. ' ' → logprob: -16.12500762939453
    8. '),' → logprob: -16.25000762939453
    9. ')}' → logprob: -16.25000762939453
    10. ')return' → logprob: -16.87500762939453

Token 56: 'minimum' (ID: 80931)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11890675127506256
    2. ')' → logprob: -3.2439067363739014
    3. '<|end|>' → logprob: -3.6189067363739014
    4. 'v' → logprob: -4.4939069747924805
    5. '(
' → logprob: -4.4939069747924805
    6. '_' → logprob: -5.2439069747924805
    7. ',' → logprob: -5.4939069747924805
    8. '[' → logprob: -5.7439069747924805
    9. '
' → logprob: -6.2439069747924805
    10. '```' → logprob: -6.7439069747924805

Token 57: 'Capacity' (ID: 37114)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4426320791244507
    2. '=' → logprob: -1.8176320791244507
    3. '_' → logprob: -2.0676321983337402
    4. 'Cap' → logprob: -3.1926321983337402
    5. '(' → logprob: -4.56763219833374
    6. ' ' → logprob: -5.44263219833374
    7. 'Capacity' → logprob: -6.06763219833374
    8. '_capacity' → logprob: -6.06763219833374
    9. '_cap' → logprob: -6.44263219833374
    10. '_=' → logprob: -6.56763219833374

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06202952563762665
    2. '=' → logprob: -2.8120296001434326
    3. '_' → logprob: -10.187029838562012
    4. ' ' → logprob: -11.062029838562012
    5. '(' → logprob: -13.062029838562012
    6. ' =
' → logprob: -13.812029838562012
    7. '_=' → logprob: -13.937029838562012
    8. '=find' → logprob: -14.062029838562012
    9. 's' → logprob: -14.187029838562012
    10. ',' → logprob: -14.562029838562012

Token 59: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.018848352134227753
    2. 'find' → logprob: -4.018848419189453
    3. ' min' → logprob: -8.018848419189453
    4. ' vessel' → logprob: -8.393848419189453
    5. ' ' → logprob: -10.018848419189453
    6. '(find' → logprob: -10.143848419189453
    7. 'min' → logprob: -11.518848419189453
    8. ' total' → logprob: -11.893848419189453
    9. ' max' → logprob: -12.018848419189453
    10. ' minimum' → logprob: -12.268848419189453

Token 60: 'Small' (ID: 26886)
  Prédit: 'Small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Small' → logprob: -1.5570885807392187e-05
    2. 'S' → logprob: -12.375015258789062
    3. 'small' → logprob: -12.625015258789062
    4. 'Sm' → logprob: -13.125015258789062
    5. '(v' → logprob: -13.375015258789062
    6. '(' → logprob: -13.875015258789062
    7. ' Small' → logprob: -14.000015258789062
    8. 's' → logprob: -14.750015258789062
    9. '_small' → logprob: -14.750015258789062
    10. '(find' → logprob: -14.875015258789062

Token 61: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -4.3822154111694545e-05
    2. 'Capacity' → logprob: -11.875043869018555
    3. 'ist' → logprob: -12.125043869018555
    4. 'ar' → logprob: -12.250043869018555
    5. 'all' → logprob: -12.625043869018555
    6. 'lest' → logprob: -12.875043869018555
    7. 'a' → logprob: -13.000043869018555
    8. 'Small' → logprob: -13.000043869018555
    9. 'e' → logprob: -13.500043869018555
    10. 'ost' → logprob: -13.500043869018555

Token 62: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00862143188714981
    2. '(' → logprob: -4.7586212158203125
    3. '(total' → logprob: -13.133621215820312
    4. '(
' → logprob: -13.633621215820312
    5. '([' → logprob: -13.883621215820312
    6. ' (' → logprob: -14.258621215820312
    7. '((' → logprob: -14.383621215820312
    8. '(vehicle' → logprob: -14.508621215820312
    9. '(max' → logprob: -16.008621215820312
    10. '(list' → logprob: -16.008621215820312

Token 63: 'essel' (ID: 52293)
  Prédit: 'essel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'essel' → logprob: -4.537180211627856e-05
    2. 'ess' → logprob: -10.625045776367188
    3. 'ssel' → logprob: -11.500045776367188
    4. 'es' → logprob: -11.750045776367188
    5. 'esse' → logprob: -13.875045776367188
    6. '```' → logprob: -14.250045776367188
    7. '#' → logprob: -15.500045776367188
    8. '``' → logprob: -16.125045776367188
    9. '{' → logprob: -16.125045776367188
    10. '1' → logprob: -16.125045776367188

Token 64: 'Cap' (ID: 12168)
  Prédit: 'Cap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cap' → logprob: -7.226628895296017e-06
    2. 'Capabilities' → logprob: -13.125007629394531
    3. 'capac' → logprob: -13.375007629394531
    4. 'C' → logprob: -13.750007629394531
    5. 'Ca' → logprob: -14.375007629394531
    6. ' capacities' → logprob: -14.500007629394531
    7. ')' → logprob: -14.500007629394531
    8. 'Capacity' → logprob: -15.125007629394531
    9. ' Cap' → logprob: -15.875007629394531
    10. '_cap' → logprob: -16.00000762939453

Token 65: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0013652353081852198
    2. 'ities' → logprob: -6.7513651847839355
    3. 'acity' → logprob: -10.001365661621094
    4. 'cities' → logprob: -10.001365661621094
    5. 'Cap' → logprob: -10.001365661621094
    6. 'al' → logprob: -10.876365661621094
    7. 'ap' → logprob: -11.876365661621094
    8. 'ocities' → logprob: -12.251365661621094
    9. 'abilities' → logprob: -12.376365661621094
    10. 'acit' → logprob: -12.876365661621094

Token 66: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -7.421908958349377e-05
    2. 'ity' → logprob: -9.62507438659668
    3. 'it' → logprob: -12.25007438659668
    4. 'ties' → logprob: -13.75007438659668
    5. 'ies' → logprob: -14.25007438659668
    6. 'ilities' → logprob: -15.25007438659668
    7. 's' → logprob: -15.50007438659668
    8. 'ap' → logprob: -16.00007438659668
    9. 'itie' → logprob: -16.12507438659668
    10. 'ac' → logprob: -16.12507438659668

Token 67: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010449681576574221
    2. ' )' → logprob: -9.250104904174805
    3. '))' → logprob: -12.500104904174805
    4. ')
' → logprob: -12.750104904174805
    5. '[' → logprob: -15.125104904174805
    6. ')))' → logprob: -15.375104904174805
    7. ')+' → logprob: -15.625104904174805
    8. ')`' → logprob: -15.625104904174805
    9. ',' → logprob: -16.125104904174805
    10. '),' → logprob: -16.250104904174805

Token 68: 'chunks' (ID: 190370)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5490308403968811
    2. '=' → logprob: -0.9240308403968811
    3. '_' → logprob: -3.9240307807922363
    4. '(' → logprob: -5.299030780792236
    5. ',' → logprob: -8.674031257629395
    6. '=[]' → logprob: -8.924031257629395
    7. '_size' → logprob: -9.049031257629395
    8. ' ' → logprob: -9.049031257629395
    9. '_=' → logprob: -9.924031257629395
    10. ' (' → logprob: -10.174031257629395

Token 70: ' extra' (ID: 5018)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9045562744140625
    2. ' =' → logprob: -1.2795562744140625
    3. 'total' → logprob: -1.5295562744140625
    4. ' total' → logprob: -2.6545562744140625
    5. '[]' → logprob: -4.5295562744140625
    6. 'remaining' → logprob: -5.5295562744140625
    7. 'rest' → logprob: -6.2795562744140625
    8. ' []' → logprob: -6.2795562744140625
    9. ' ' → logprob: -6.2795562744140625
    10. 'minimum' → logprob: -6.9045562744140625

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028007864952087
    2. '=' → logprob: -1.9102801084518433
    3. ',' → logprob: -10.660280227661133
    4. '_' → logprob: -11.160280227661133
    5. 's' → logprob: -12.410280227661133
    6. ' ' → logprob: -12.410280227661133
    7. 'Cap' → logprob: -12.785280227661133
    8. 'P' → logprob: -14.035280227661133
    9. '_=' → logprob: -14.160280227661133
    10. '  ' → logprob: -14.285280227661133

Token 72: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.36534056067466736
    2. 'div' → logprob: -1.8653405904769897
    3. ' total' → logprob: -2.1153404712677
    4. 'total' → logprob: -3.4903404712677
    5. '(total' → logprob: -9.615340232849121
    6. '   ' → logprob: -10.865340232849121
    7. '(div' → logprob: -11.615340232849121
    8. ' ' → logprob: -12.365340232849121
    9. ',total' → logprob: -13.365340232849121
    10. '	div' → logprob: -13.365340232849121

Token 73: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00038956227945163846
    2. 'ide' → logprob: -8.125389099121094
    3. 'total' → logprob: -10.000389099121094
    4. '(total' → logprob: -10.250389099121094
    5. 'ision' → logprob: -12.250389099121094
    6. ' mod' → logprob: -12.500389099121094
    7. ' total' → logprob: -13.500389099121094
    8. '_mod' → logprob: -13.750389099121094
    9. 'Mod' → logprob: -15.000389099121094
    10. ',total' → logprob: -15.125389099121094

Token 74: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00013464801304508
    2. '(' → logprob: -9.500134468078613
    3. 'total' → logprob: -9.875134468078613
    4. ' total' → logprob: -12.000134468078613
    5. ' (' → logprob: -13.250134468078613
    6. ',total' → logprob: -15.750134468078613
    7. '	total' → logprob: -16.87513542175293
    8. '(
' → logprob: -17.37513542175293
    9. '(t' → logprob: -17.50013542175293
    10. 'Total' → logprob: -17.50013542175293

Token 75: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -3.292907877039397e-06
    2. 'People' → logprob: -13.87500286102295
    3. '<|end|>' → logprob: -14.50000286102295
    4. ',' → logprob: -14.62500286102295
    5. 'p' → logprob: -14.75000286102295
    6. '  ' → logprob: -15.75000286102295
    7. ' ' → logprob: -15.87500286102295
    8. ')' → logprob: -16.000003814697266
    9. ' P' → logprob: -16.250003814697266
    10. '_p' → logprob: -16.250003814697266

Token 76: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.001430355361662805
    2. 'p' → logprob: -6.626430511474609
    3. 'l' → logprob: -9.87643051147461
    4. 'Pl' → logprob: -10.37643051147461
    5. 'plt' → logprob: -12.37643051147461
    6. 'pls' → logprob: -12.50143051147461
    7. 'ple' → logprob: -12.75143051147461
    8. '	pl' → logprob: -13.00143051147461
    9. 'e' → logprob: -13.12643051147461
    10. ' pl' → logprob: -13.50143051147461

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019477950409054756
    2. ' ,' → logprob: -6.25194787979126
    3. ',total' → logprob: -11.626947402954102
    4. ',min' → logprob: -12.501947402954102
    5. ' ' → logprob: -13.376947402954102
    6. ')' → logprob: -14.376947402954102
    7. '‌,' → logprob: -14.376947402954102
    8. 'minimum' → logprob: -14.626947402954102
    9. ',m' → logprob: -14.751947402954102
    10. ',
' → logprob: -14.876947402954102

Token 78: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.014172795228660107
    2. 'minimum' → logprob: -4.2641730308532715
    3. '.minimum' → logprob: -12.889172554016113
    4. ' ' → logprob: -13.764172554016113
    5. ' ' → logprob: -14.014172554016113
    6. 'Minimum' → logprob: -14.139172554016113
    7. ')' → logprob: -14.139172554016113
    8. ' minimal' → logprob: -14.514172554016113
    9. 'space' → logprob: -15.264172554016113
    10. ' total' → logprob: -15.389172554016113

Token 79: 'Capacity' (ID: 37114)
  Prédit: 'Capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Capacity' → logprob: -0.00021176543668843806
    2. 'Cap' → logprob: -8.625211715698242
    3. 'capacity' → logprob: -11.250211715698242
    4. ' Capacity' → logprob: -11.750211715698242
    5. ')' → logprob: -12.750211715698242
    6. '_capacity' → logprob: -12.750211715698242
    7. ' capacity' → logprob: -13.125211715698242
    8. 'C' → logprob: -13.250211715698242
    9. 'Capability' → logprob: -14.750211715698242
    10. 'Ca' → logprob: -15.625211715698242

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ')
' → logprob: -11.12502670288086
    3. '+' → logprob: -11.87502670288086
    4. ' )' → logprob: -12.87502670288086
    5. ')

' → logprob: -14.12502670288086
    6. '+)' → logprob: -15.75002670288086
    7. '),' → logprob: -15.87502670288086
    8. ' +' → logprob: -16.12502670288086
    9. '))' → logprob: -16.25002670288086
    10. '```' → logprob: -16.50002670288086

Token 81: 'answer' (ID: 17021)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6141016483306885
    2. '+' → logprob: -1.7391016483306885
    3. ' ' → logprob: -2.6141016483306885
    4. 'chunks' → logprob: -2.7391016483306885
    5. '```' → logprob: -2.7391016483306885
    6. 'v' → logprob: -2.9891016483306885
    7. 'if' → logprob: -2.9891016483306885
    8. 'total' → logprob: -3.2391016483306885
    9. 'print' → logprob: -3.2391016483306885
    10. ' total' → logprob: -3.4891016483306885

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5619895458221436
    2. '=' → logprob: -1.5619895458221436
    3. '<|end|>' → logprob: -1.5619895458221436
    4. '+' → logprob: -5.561989784240723
    5. ' ' → logprob: -5.686989784240723
    6. '<|end|>' → logprob: -6.561989784240723
    7. ' +' → logprob: -7.436989784240723
    8. ' +=' → logprob: -7.811989784240723
    9. ',' → logprob: -7.936989784240723
    10. '```' → logprob: -9.061989784240723

Token 83: ' chunks' (ID: 53440)
  Prédit: ' chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chunks' → logprob: -0.5248014330863953
    2. 'chunks' → logprob: -0.8998014330863953
    3. ' [' → logprob: -8.399801254272461
    4. ' (' → logprob: -8.524801254272461
    5. '[' → logprob: -8.649801254272461
    6. '"' → logprob: -8.649801254272461
    7. '(ch' → logprob: -8.774801254272461
    8. ' chunk' → logprob: -9.524801254272461
    9. ' extra' → logprob: -9.524801254272461
    10. 'chunk' → logprob: -9.649801254272461

Token 84: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31689536571502686
    2. '<|end|>' → logprob: -1.8168953657150269
    3. ' +' → logprob: -2.9418954849243164
    4. '
' → logprob: -3.6918954849243164
    5. ' if' → logprob: -4.316895484924316
    6. '+
' → logprob: -5.066895484924316
    7. '*' → logprob: -5.316895484924316
    8. 'if' → logprob: -5.566895484924316
    9. ' +
' → logprob: -7.066895484924316
    10. '<|end|>' → logprob: -7.566895484924316

Token 85: ' ' (ID: 220)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.8177186250686646
    2. '(extra' → logprob: -1.8177186250686646
    3. '(' → logprob: -2.317718505859375
    4. '(int' → logprob: -2.442718505859375
    5. '1' → logprob: -2.442718505859375
    6. 'bool' → logprob: -3.067718505859375
    7. ' (' → logprob: -3.067718505859375
    8. ' bool' → logprob: -4.192718505859375
    9. 'int' → logprob: -4.567718505859375
    10. 'extra' → logprob: -5.817718505859375

Token 86: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6271479725837708
    2. '(extra' → logprob: -2.002147912979126
    3. '(bool' → logprob: -2.127147912979126
    4. '1' → logprob: -2.127147912979126
    5. '(int' → logprob: -2.627147912979126
    6. 'bool' → logprob: -4.877148151397705
    7. 'int' → logprob: -5.252148151397705
    8. ' (' → logprob: -5.252148151397705
    9. 'extra' → logprob: -7.377148151397705
    10. '(min' → logprob: -7.627148151397705

Token 87: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3935653567314148
    2. '<|end|>' → logprob: -1.7685654163360596
    3. '
' → logprob: -2.1435654163360596
    4. '+
' → logprob: -4.2685651779174805
    5. 'if' → logprob: -5.0185651779174805
    6. ' if' → logprob: -5.2685651779174805
    7. ' +' → logprob: -5.6435651779174805
    8. '\n' → logprob: -6.0185651779174805
    9. '1' → logprob: -6.6435651779174805
    10. ' ' → logprob: -6.6435651779174805

Token 88: ' extra' (ID: 5018)
  Prédit: ' extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.0871170312166214
    2. 'extra' → logprob: -2.8371169567108154
    3. ' total' → logprob: -3.8371169567108154
    4. 'total' → logprob: -6.7121171951293945
    5. ' chunks' → logprob: -6.7121171951293945
    6. ' minimum' → logprob: -8.212117195129395
    7. 'chunks' → logprob: -8.587117195129395
    8. '(extra' → logprob: -8.712117195129395
    9. ' not' → logprob: -9.087117195129395
    10. 'minimum' → logprob: -10.587117195129395

Token 89: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3336900770664215
    2. 'else' → logprob: -2.0836901664733887
    3. '>' → logprob: -2.2086901664733887
    4. '!=' → logprob: -3.4586901664733887
    5. ' >' → logprob: -4.833690166473389
    6. '==' → logprob: -5.083690166473389
    7. ' !=' → logprob: -5.708690166473389
    8. ' ==' → logprob: -7.958690166473389
    9. ' ' → logprob: -10.08368968963623
    10. ' ' → logprob: -11.70868968963623

Token 90: ' chunks' (ID: 53440)
  Prédit: ' chunks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chunks' → logprob: -0.42877262830734253
    2. 'chunks' → logprob: -1.0537726879119873
    3. '4' → logprob: -10.303772926330566
    4. '_chunks' → logprob: -11.178772926330566
    5. 'chunk' → logprob: -11.678772926330566
    6. ' chunk' → logprob: -12.053772926330566
    7. ' ' → logprob: -12.428772926330566
    8. 'Chunks' → logprob: -13.428772926330566
    9. '0' → logprob: -13.553772926330566
    10. '	ch' → logprob: -14.553772926330566

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3926144540309906
    2. '<|end|>' → logprob: -1.142614483833313
    3. ' ' → logprob: -6.017614364624023
    4. ' +' → logprob: -6.017614364624023
    5. '<|end|>' → logprob: -7.892614364624023
    6. '4' → logprob: -8.892614364624023
    7. '```' → logprob: -9.142614364624023
    8. '+
' → logprob: -9.767614364624023
    9. '0' → logprob: -10.142614364624023
    10. '*' → logprob: -10.267614364624023

Token 92: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004454923793673515
    2. '4' → logprob: -6.379455089569092
    3. '3' → logprob: -6.629455089569092
    4. ' ' → logprob: -6.629455089569092
    5. '1' → logprob: -9.379454612731934
    6. '0' → logprob: -10.879454612731934
    7. '  ' → logprob: -13.504454612731934
    8. '...' → logprob: -13.879454612731934
    9. '   ' → logprob: -14.254454612731934
    10. 'len' → logprob: -15.504454612731934

Token 93: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004918262362480164
    2. '4' → logprob: -5.379918098449707
    3. '1' → logprob: -8.754918098449707
    4. '0' → logprob: -9.254918098449707
    5. ' ' → logprob: -10.254918098449707
    6. '3' → logprob: -11.754918098449707
    7. '<|end|>' → logprob: -14.504918098449707
    8. '  ' → logprob: -15.254918098449707
    9. 'chunks' → logprob: -15.254918098449707
    10. '-' → logprob: -15.879918098449707

Token 94: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004767834208905697
    2. '0' → logprob: -6.129767894744873
    3. ' ' → logprob: -6.629767894744873
    4. 'len' → logprob: -7.129767894744873
    5. '2' → logprob: -9.129767417907715
    6. '5' → logprob: -9.879767417907715
    7. 'minimum' → logprob: -9.879767417907715
    8. 'total' → logprob: -10.379767417907715
    9. 'extra' → logprob: -10.379767417907715
    10. 'chunks' → logprob: -10.629767417907715

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04617779701948166
    2. 'len' → logprob: -3.546177864074707
    3. '0' → logprob: -4.921177864074707
    4. 'v' → logprob: -5.921177864074707
    5. 'total' → logprob: -7.296177864074707
    6. 'minimum' → logprob: -7.296177864074707
    7. '5' → logprob: -7.421177864074707
    8. '2' → logprob: -7.546177864074707
    9. '(len' → logprob: -7.671177864074707
    10. 'sum' → logprob: -7.671177864074707

Token 97: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.5760698914527893
    2. '(' → logprob: -0.8260698914527893
    3. '(ans' → logprob: -10.201069831848145
    4. '(print' → logprob: -10.826069831848145
    5. '(total' → logprob: -10.951069831848145
    6. '('' → logprob: -11.576069831848145
    7. ' (' → logprob: -11.701069831848145
    8. '()' → logprob: -11.826069831848145
    9. '("("' → logprob: -12.076069831848145
    10. '(
' → logprob: -12.451069831848145

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.500001907348633
    4. ')`' → logprob: -15.250001907348633
    5. ')
' → logprob: -15.375001907348633
    6. '`)' → logprob: -16.500001907348633
    7. ')#' → logprob: -17.125001907348633
    8. '#' → logprob: -17.625001907348633
    9. '')' → logprob: -18.375001907348633
    10. ')**' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 43.88%
Précision adaptée (1ère position): 43.88%
Précision (top 10): 68.37%
================================================================================
