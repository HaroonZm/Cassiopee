================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
strength_value, weight_value = map(int, input().split())
if strength_value > weight_value:
    print('safe')
else:
    print('unsafe')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'strength' (ID: 146921)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' weight' (ID: 6049)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6983842253684998
    2. '=' → logprob: -1.1983842849731445
    3. '_strength' → logprob: -2.0733842849731445
    4. ',' → logprob: -3.0733842849731445
    5. '_max' → logprob: -4.9483842849731445
    6. '```' → logprob: -5.1983842849731445
    7. ' =' → logprob: -5.9483842849731445
    8. ')' → logprob: -5.9483842849731445
    9. '_score' → logprob: -6.8233842849731445
    10. '.' → logprob: -7.0733842849731445

Token 4: '_value' (ID: 6734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13921114802360535
    2. '_' → logprob: -2.3892111778259277
    3. ' =' → logprob: -4.014211177825928
    4. ',' → logprob: -4.764211177825928
    5. '*' → logprob: -5.514211177825928
    6. ')' → logprob: -5.639211177825928
    7. '```' → logprob: -6.139211177825928
    8. '.' → logprob: -8.01421070098877
    9. '**' → logprob: -8.38921070098877
    10. '<|end|>' → logprob: -8.76421070098877

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6944507360458374
    2. '_' → logprob: -1.1944507360458374
    3. ',' → logprob: -1.6944507360458374
    4. ')' → logprob: -5.569450855255127
    5. ' =' → logprob: -5.819450855255127
    6. '```' → logprob: -5.944450855255127
    7. '*' → logprob: -6.194450855255127
    8. '+' → logprob: -6.694450855255127
    9. '.' → logprob: -7.819450855255127
    10. '[' → logprob: -8.444450378417969

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1991177797317505
    2. ' map' → logprob: -1.4491177797317505
    3. ' ' → logprob: -1.6991177797317505
    4. ' input' → logprob: -2.324117660522461
    5. 'input' → logprob: -2.699117660522461
    6. 'map' → logprob: -3.449117660522461
    7. 'strength' → logprob: -4.449117660522461
    8. ' [' → logprob: -4.574117660522461
    9. ' None' → logprob: -4.699117660522461
    10. '[' → logprob: -5.199117660522461

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5333772897720337
    2. '(lambda' → logprob: -1.1583772897720337
    3. '<|end|>' → logprob: -3.033377170562744
    4. '(str' → logprob: -3.658377170562744
    5. '(int' → logprob: -3.908377170562744
    6. '<|end|>' → logprob: -6.908377170562744
    7. '```' → logprob: -7.408377170562744
    8. '(eval' → logprob: -7.533377170562744
    9. '(user' → logprob: -7.908377170562744
    10. '(len' → logprob: -8.283377647399902

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1156017929315567
    2. '(' → logprob: -2.3656017780303955
    3. '(user' → logprob: -4.990602016448975
    4. ')' → logprob: -5.240602016448975
    5. '(str' → logprob: -6.865602016448975
    6. '('' → logprob: -7.240602016448975
    7. '(value' → logprob: -7.615602016448975
    8. '(raw' → logprob: -7.990602016448975
    9. '(range' → logprob: -9.240601539611816
    10. '(`' → logprob: -9.740601539611816

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04869433119893074
    2. ' input' → logprob: -3.048694372177124
    3. 'strength' → logprob: -9.923694610595703
    4. '(input' → logprob: -10.673694610595703
    5. ')' → logprob: -11.048694610595703
    6. ' strength' → logprob: -12.048694610595703
    7. 'str' → logprob: -12.673694610595703
    8. 'user' → logprob: -13.548694610595703
    9. '```' → logprob: -13.673694610595703
    10. '[input' → logprob: -14.173694610595703

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5469117760658264
    2. '(' → logprob: -1.7969117164611816
    3. '())' → logprob: -1.9219117164611816
    4. '('' → logprob: -3.2969117164611816
    5. ')' → logprob: -3.4219117164611816
    6. '(()' → logprob: -4.171911716461182
    7. '().' → logprob: -4.421911716461182
    8. '(""))' → logprob: -6.421911716461182
    9. '`()' → logprob: -6.421911716461182
    10. '```' → logprob: -7.171911716461182

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003397535183466971
    2. 'strip' → logprob: -8.00033950805664
    3. 'rstrip' → logprob: -12.62533950805664
    4. ' split' → logprob: -14.25033950805664
    5. '(split' → logprob: -16.25033950805664
    6. 'read' → logprob: -16.50033950805664
    7. '```' → logprob: -17.12533950805664
    8. 'spl' → logprob: -17.37533950805664
    9. 'replace' → logprob: -17.50033950805664
    10. 'startswith' → logprob: -17.62533950805664

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017376672476530075
    2. ')' → logprob: -4.642376899719238
    3. '()))' → logprob: -5.392376899719238
    4. '()' → logprob: -6.142376899719238
    5. '))' → logprob: -7.142376899719238
    6. ' ())' → logprob: -10.517376899719238
    7. '(' → logprob: -11.142376899719238
    8. '`)' → logprob: -11.267376899719238
    9. '('' → logprob: -11.642376899719238
    10. '`()' → logprob: -12.267376899719238

Token 13: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12429197877645493
    2. '*' → logprob: -3.3742918968200684
    3. '#' → logprob: -3.7492918968200684
    4. ')' → logprob: -3.8742918968200684
    5. 'if' → logprob: -4.749291896820068
    6. '+
' → logprob: -4.999291896820068
    7. ',' → logprob: -5.374291896820068
    8. '\n' → logprob: -5.624291896820068
    9. '<|end|>' → logprob: -5.749291896820068
    10. '.' → logprob: -6.249291896820068

Token 14: ' strength' (ID: 9386)
  Prédit: ' strength'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strength' → logprob: -0.006869882810860872
    2. ' weight' → logprob: -5.256869792938232
    3. 'strength' → logprob: -6.506869792938232
    4. ' ' → logprob: -9.63187026977539
    5. ' not' → logprob: -10.25687026977539
    6. ' strong' → logprob: -11.63187026977539
    7. ' streng' → logprob: -12.13187026977539
    8. '_strength' → logprob: -12.38187026977539
    9. ' strengths' → logprob: -12.50687026977539
    10. ' len' → logprob: -12.50687026977539

Token 15: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.12487620115280151
    2. '_' → logprob: -2.2498762607574463
    3. ' _' → logprob: -4.499876022338867
    4. ' ' → logprob: -8.499876022338867
    5. '>' → logprob: -8.999876022338867
    6. ' >' → logprob: -8.999876022338867
    7. '_val' → logprob: -9.374876022338867
    8. '_strength' → logprob: -9.749876022338867
    9. '_values' → logprob: -10.499876022338867
    10. '```' → logprob: -10.624876022338867

Token 16: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.060352057218551636
    2. '>' → logprob: -3.310352087020874
    3. ' >=' → logprob: -4.185351848602295
    4. ' <' → logprob: -5.435351848602295
    5. ' ' → logprob: -7.310351848602295
    6. ' <=' → logprob: -7.560351848602295
    7. ' ==' → logprob: -7.935351848602295
    8. '<' → logprob: -8.310352325439453
    9. '>=' → logprob: -8.685352325439453
    10. ')' → logprob: -8.935352325439453

Token 17: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.16064530611038208
    2. 'weight' → logprob: -1.9106452465057373
    3. ' ' → logprob: -8.910645484924316
    4. '=' → logprob: -9.035645484924316
    5. '0' → logprob: -9.660645484924316
    6. '10' → logprob: -10.910645484924316
    7. '20' → logprob: -11.035645484924316
    8. '50' → logprob: -11.285645484924316
    9. '(weight' → logprob: -11.535645484924316
    10. '100' → logprob: -11.535645484924316

Token 18: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.4974866644479334e-05
    2. '_' → logprob: -12.125015258789062
    3. ''_' → logprob: -13.125015258789062
    4. ')_' → logprob: -13.625015258789062
    5. '_values' → logprob: -13.750015258789062
    6. '"_' → logprob: -14.000015258789062
    7. ' _' → logprob: -14.625015258789062
    8. '_val' → logprob: -14.750015258789062
    9. '_weight' → logprob: -15.000015258789062
    10. '```' → logprob: -15.000015258789062

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9385402993066236e-05
    2. ' :' → logprob: -11.625019073486328
    3. ':
' → logprob: -12.250019073486328
    4. ':**' → logprob: -12.875019073486328
    5. '>' → logprob: -13.625019073486328
    6. '):' → logprob: -15.000019073486328
    7. ',' → logprob: -15.250019073486328
    8. '':' → logprob: -15.375019073486328
    9. '>:' → logprob: -15.625019073486328
    10. '.' → logprob: -16.125019073486328

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.860289454460144
    2. '\n' → logprob: -1.235289454460144
    3. '\' → logprob: -2.4852895736694336
    4. ':' → logprob: -3.1102895736694336
    5. 'print' → logprob: -3.2352895736694336
    6. ' print' → logprob: -3.4852895736694336
    7. '    ' → logprob: -3.7352895736694336
    8. ' ' → logprob: -4.360289573669434
    9. '    
' → logprob: -4.610289573669434
    10. ' 
' → logprob: -4.735289573669434

Token 21: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09404584020376205
    2. 'print' (adapté à ' print') → logprob: -2.469045877456665
    3. '   ' → logprob: -5.844045639038086
    4. '    ' → logprob: -6.844045639038086
    5. '```' → logprob: -8.094045639038086
    6. '`' → logprob: -8.469045639038086
    7. ''' → logprob: -8.719045639038086
    8. ' pass' → logprob: -9.344045639038086
    9. ' return' → logprob: -10.094045639038086
    10. '"' → logprob: -10.156545639038086

Token 22: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007824279367923737
    2. '("' → logprob: -5.632824420928955
    3. '("("' → logprob: -5.882824420928955
    4. '('' → logprob: -6.632824420928955
    5. '(True' → logprob: -10.007823944091797
    6. '(str' → logprob: -11.007823944091797
    7. '()' → logprob: -11.632823944091797
    8. '("")' → logprob: -11.882823944091797
    9. '(">' → logprob: -12.007823944091797
    10. '"' → logprob: -12.382823944091797

Token 23: 'safe' (ID: 46891)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.224280595779419
    2. '"' → logprob: -1.974280595779419
    3. 'Strong' → logprob: -2.099280595779419
    4. 'Yes' → logprob: -2.474280595779419
    5. 'Strength' → logprob: -2.724280595779419
    6. 'strength' → logprob: -2.724280595779419
    7. 'strong' → logprob: -2.974280595779419
    8. 'YES' → logprob: -2.974280595779419
    9. 'You' → logprob: -4.34928035736084
    10. ''s' → logprob: -4.59928035736084

Token 24: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007519744685851038
    2. ')' → logprob: -7.250751972198486
    3. ''' → logprob: -11.125752449035645
    4. '!' → logprob: -11.500752449035645
    5. '')
' → logprob: -11.875752449035645
    6. '")' → logprob: -12.500752449035645
    7. ' ')' → logprob: -12.750752449035645
    8. '')
' → logprob: -13.125752449035645
    9. '')

' → logprob: -15.250752449035645
    10. '('' → logprob: -15.750752449035645

Token 25: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.056231770664453506
    2. ' else' → logprob: -2.931231737136841
    3. 'elif' → logprob: -6.68123197555542
    4. '```' → logprob: -10.306231498718262
    5. ' elif' → logprob: -10.931231498718262
    6. '_else' → logprob: -11.181231498718262
    7. '<|end|>' → logprob: -11.806231498718262
    8. 'e' → logprob: -12.556231498718262
    9. '	else' → logprob: -12.681231498718262
    10. 's' → logprob: -12.681231498718262

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3425219549390022e-05
    2. ':
' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.87501335144043
    4. ' :' → logprob: -14.37501335144043
    5. '):' → logprob: -16.37501335144043
    6. ':return' → logprob: -16.37501335144043
    7. ':**' → logprob: -17.25001335144043
    8. '```' → logprob: -17.62501335144043
    9. '():' → logprob: -17.75001335144043
    10. '':' → logprob: -17.87501335144043

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11497249454259872
    2. ' print' → logprob: -2.7399725914001465
    3. 'print' → logprob: -3.6149725914001465
    4. '    ' → logprob: -4.1149725914001465
    5. '```' → logprob: -8.489972114562988
    6. ''' → logprob: -8.614972114562988
    7. ' safe' → logprob: -8.614972114562988
    8. ' ' → logprob: -9.864972114562988
    9. '    
' → logprob: -11.114972114562988
    10. '`' → logprob: -11.239972114562988

Token 28: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5401132106781006
    2. ' print' → logprob: -0.9151132106781006
    3. ''' → logprob: -4.54011344909668
    4. ''s' → logprob: -6.29011344909668
    5. ' safe' → logprob: -6.41511344909668
    6. '   ' → logprob: -6.66511344909668
    7. 'safe' → logprob: -7.54011344909668
    8. 'unsafe' → logprob: -8.29011344909668
    9. ' unsafe' → logprob: -8.79011344909668
    10. ' '' → logprob: -9.72761344909668

Token 29: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16024331748485565
    2. '(' → logprob: -1.910243272781372
    3. '()' → logprob: -11.160243034362793
    4. '("' → logprob: -13.285243034362793
    5. '('(' → logprob: -13.785243034362793
    6. '(('' → logprob: -14.410243034362793
    7. ''' → logprob: -15.410243034362793
    8. '(
' → logprob: -15.535243034362793
    9. '('.')' → logprob: -15.660243034362793
    10. '(False' → logprob: -15.660243034362793

Token 30: 'unsafe' (ID: 66907)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2904643714427948
    2. 'unsafe' → logprob: -1.9154644012451172
    3. ''un' → logprob: -2.790464401245117
    4. ''d' → logprob: -4.040464401245117
    5. 'danger' → logprob: -4.415464401245117
    6. 'not' → logprob: -5.915464401245117
    7. ''s' → logprob: -6.665464401245117
    8. ''r' → logprob: -6.915464401245117
    9. ''ex' → logprob: -7.290464401245117
    10. ''ins' → logprob: -7.290464401245117

Token 31: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -2.2007883671903983e-05
    2. ')' → logprob: -10.750021934509277
    3. ''' → logprob: -15.250021934509277
    4. '')
' → logprob: -15.750021934509277
    5. '")' → logprob: -16.625022888183594
    6. '}')' → logprob: -18.625022888183594
    7. '('' → logprob: -18.875022888183594
    8. '')

' → logprob: -19.375022888183594
    9. '')
' → logprob: -19.625022888183594
    10. ''))' → logprob: -19.750022888183594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 41.38%
Précision adaptée (1ère position): 44.83%
Précision (top 10): 82.76%
================================================================================
