================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import count, takewhile, islice, accumulate, chain
from operator import matmul
from math import ceil

L, A, B, M = map(int, input().split())

def identity_matrix(n):
    return [[int(i==j) for j in range(n)] for i in range(n)]

def mat_mul(a, b):
    f = lambda r, c: sum(x*y for x, y in zip(r, c)) % M
    return [[f(row, col) for col in zip(*b)] for row in a]

def mat_pow(mat, exp):
    return reduce(lambda acc, _: mat_mul(acc, mat) if (_ & 1) else acc, accumulate(((exp >> i) & 1 for i in range(64)), lambda s, _: s), identity_matrix(len(mat))) if exp else identity_matrix(len(mat))

def magic_floor(x, y):
    return -(x//-y)

def digits(n):  # This is not used here, but fits the style.
    return len(str(abs(n)))

gen = (magic_floor(10**d - A, B) for d in count(0))
ranges = list(islice(gen, 20))
ret = [[0], [A], [1]]

def minclip(x, l=L):
    return min(x, l)

for d in range(1, 19):
    mat = [[10**d, 1, 0], [0, 1, B], [0, 0, 1]]
    n0, n1 = ranges[d-1], ranges[d]
    n1 = minclip(n1)
    if n0 < 0 < n1:
        n0 = 0
    if 0 <= n0 < n1:
        ret = mat_mul(mat_pow(mat, n1 - n0), ret)
ranges = ranges[1:] + [minclip(magic_floor(10**20 - A, B))]
print(ret[0][0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.019087785854935646
    2. 'import' → logprob: -4.019087791442871
    3. '.' → logprob: -7.394087791442871
    4. ' ' → logprob: -8.644087791442871
    5. ' .' → logprob: -9.519087791442871
    6. '.import' → logprob: -10.019087791442871
    7. '	import' → logprob: -11.269087791442871
    8. '_import' → logprob: -12.144087791442871
    9. '<|end|>' → logprob: -13.519087791442871
    10. '.groupby' → logprob: -13.769087791442871

Token 8: ' count' (ID: 3605)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003563965205103159
    2. '(
' → logprob: -6.50356388092041
    3. '\n' → logprob: -6.75356388092041
    4. '\' → logprob: -8.00356388092041
    5. '\(' → logprob: -8.50356388092041
    6. ',' → logprob: -9.12856388092041
    7. '```' → logprob: -9.87856388092041
    8. '()' → logprob: -10.50356388092041
    9. '(

' → logprob: -10.62856388092041
    10. 'import' → logprob: -10.87856388092041

Token 10: ' take' (ID: 2304)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.7061612606048584
    2. 'cycle' → logprob: -1.4561612606048584
    3. 'take' → logprob: -2.2061612606048584
    4. ' take' → logprob: -2.7061612606048584
    5. 'acc' → logprob: -3.8311612606048584
    6. ' is' → logprob: -3.8311612606048584
    7. ' accumulate' → logprob: -4.2061614990234375
    8. ' chain' → logprob: -4.7061614990234375
    9. 'chain' → logprob: -4.7061614990234375
    10. 'is' → logprob: -5.4561614990234375

Token 11: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004529808182269335
    2. '_' → logprob: -5.50452995300293
    3. 'n' → logprob: -9.00452995300293
    4. 'w' → logprob: -9.62952995300293
    5. 'While' → logprob: -9.62952995300293
    6. 'exact' → logprob: -10.37952995300293
    7. '_n' → logprob: -10.50452995300293
    8. 'import' → logprob: -10.62952995300293
    9. '```' → logprob: -10.62952995300293
    10. 'hile' → logprob: -11.12952995300293

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0199815072119236
    2. '(
' → logprob: -4.144981384277344
    3. 'def' → logprob: -6.019981384277344
    4. ',' → logprob: -7.644981384277344
    5. '\' → logprob: -8.519981384277344
    6. '(lambda' → logprob: -8.769981384277344
    7. '#' → logprob: -8.894981384277344
    8. '`' → logprob: -10.019981384277344
    9. '(

' → logprob: -10.019981384277344
    10. ')' → logprob: -10.144981384277344

Token 13: ' is' (ID: 382)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filter' → logprob: -1.372814655303955
    2. 'drop' → logprob: -1.497814655303955
    3. ' is' → logprob: -1.747814655303955
    4. 'is' → logprob: -2.497814655303955
    5. 'acc' → logprob: -2.747814655303955
    6. 'cycle' → logprob: -2.872814655303955
    7. ' drop' → logprob: -2.872814655303955
    8. ' filter' → logprob: -3.372814655303955
    9. 'chain' → logprob: -3.872814655303955
    10. ' cycle' → logprob: -4.497814655303955

Token 14: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.282920129597187e-05
    2. 'lic' → logprob: -11.875012397766113
    3. '```' → logprob: -13.500012397766113
    4. 'instance' → logprob: -14.000012397766113
    5. 'l' → logprob: -14.375012397766113
    6. 'n' → logprob: -14.375012397766113
    7. 'slice' → logprob: -14.625012397766113
    8. 'liced' → logprob: -14.750012397766113
    9. 'licing' → logprob: -15.375012397766113
    10. '
' → logprob: -15.625012397766113

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03169631212949753
    2. '(
' → logprob: -3.531696319580078
    3. 'def' → logprob: -7.156696319580078
    4. '\' → logprob: -8.281696319580078
    5. ',' → logprob: -8.906696319580078
    6. '(

' → logprob: -9.031696319580078
    7. 'for' → logprob: -9.281696319580078
    8. '\(' → logprob: -9.406696319580078
    9. '(lambda' → logprob: -9.656696319580078
    10. '(
' → logprob: -9.906696319580078

Token 16: ' accumulate' (ID: 74226)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.2467706203460693
    2. 'filter' → logprob: -1.7467706203460693
    3. 'acc' → logprob: -1.9967706203460693
    4. 'chain' → logprob: -2.3717706203460693
    5. ' cycle' → logprob: -2.3717706203460693
    6. 'group' → logprob: -2.4967706203460693
    7. 'drop' → logprob: -3.6217706203460693
    8. ' chain' → logprob: -3.8717706203460693
    9. ' accumulate' → logprob: -4.121770858764648
    10. ' group' → logprob: -4.246770858764648

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07441239804029465
    2. '(
' → logprob: -3.1994123458862305
    3. '\' → logprob: -4.6994123458862305
    4. 'def' → logprob: -4.8244123458862305
    5. '#' → logprob: -5.6994123458862305
    6. '\n' → logprob: -5.6994123458862305
    7. ',' → logprob: -6.4494123458862305
    8. '`' → logprob: -6.9494123458862305
    9. '```' → logprob: -7.1994123458862305
    10. '[' → logprob: -7.3244123458862305

Token 18: ' chain' (ID: 13464)
  Prédit: ' chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.0118236541748047
    2. 'group' → logprob: -1.6368236541748047
    3. 'chain' → logprob: -1.7618236541748047
    4. ' group' → logprob: -2.3868236541748047
    5. 'filter' → logprob: -2.7618236541748047
    6. 'com' → logprob: -3.5118236541748047
    7. ' product' → logprob: -4.136823654174805
    8. ' filter' → logprob: -4.386823654174805
    9. 'product' → logprob: -4.511823654174805
    10. ' cycle' → logprob: -4.511823654174805

Token 19: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11090019345283508
    2. '(
' → logprob: -2.4859001636505127
    3. ',' → logprob: -5.110900402069092
    4. '\' → logprob: -5.235900402069092
    5. 'def' → logprob: -5.735900402069092
    6. '.' → logprob: -6.235900402069092
    7. '#' → logprob: -7.235900402069092
    8. '\n' → logprob: -7.610900402069092
    9. '`' → logprob: -7.735900402069092
    10. '(

' → logprob: -7.735900402069092

Token 20: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0266268253326416
    2. '(' → logprob: -1.2766268253326416
    3. '(
' → logprob: -2.4016268253326416
    4. 'd' → logprob: -2.4016268253326416
    5. '#' → logprob: -3.1516268253326416
    6. '\' → logprob: -3.2766268253326416
    7. ',' → logprob: -3.9016268253326416
    8. '\n' → logprob: -4.7766265869140625
    9. 'for' → logprob: -4.9016265869140625
    10. '`' → logprob: -4.9016265869140625

Token 21: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.6778272986412048
    2. ' operator' → logprob: -0.8028272986412048
    3. 'math' → logprob: -3.9278273582458496
    4. 'collections' → logprob: -4.30282735824585
    5. ' math' → logprob: -4.92782735824585
    6. ' collections' → logprob: -5.92782735824585
    7. ' ' → logprob: -7.67782735824585
    8. '_operator' → logprob: -9.052826881408691
    9. 'heap' → logprob: -9.427826881408691
    10. ' typing' → logprob: -9.802826881408691

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11562865972518921
    2. 'import' → logprob: -2.365628719329834
    3. '.' → logprob: -4.615628719329834
    4. ' ' → logprob: -5.615628719329834
    5. '<|end|>' → logprob: -6.615628719329834
    6. ' as' → logprob: -9.240628242492676
    7. '<|end|>' → logprob: -9.740628242492676
    8. ',' → logprob: -9.990628242492676
    9. ' .' → logprob: -9.990628242492676
    10. '	import' → logprob: -10.115628242492676

Token 23: ' mat' (ID: 2450)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.09405528008937836
    2. ' ' → logprob: -2.84405517578125
    3. ' mul' → logprob: -3.71905517578125
    4. ' import' → logprob: -5.84405517578125
    5. 'add' → logprob: -6.21905517578125
    6. ' item' → logprob: -7.59405517578125
    7. '.add' → logprob: -8.21905517578125
    8. 'mul' → logprob: -8.46905517578125
    9. '<|end|>' → logprob: -8.59405517578125
    10. ' ad' → logprob: -8.84405517578125

Token 24: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.005767734721302986
    2. 'r' → logprob: -6.255767822265625
    3. 'ul' → logprob: -6.505767822265625
    4. 'rix' → logprob: -6.755767822265625
    5. '.mul' → logprob: -7.130767822265625
    6. 'mat' → logprob: -9.880767822265625
    7. '*' → logprob: -9.880767822265625
    8. '```' → logprob: -10.130767822265625
    9. '**' → logprob: -10.380767822265625
    10. 'mult' → logprob: -10.880767822265625

Token 25: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14678281545639038
    2. '(
' → logprob: -2.771782875061035
    3. ',' → logprob: -3.146782875061035
    4. '.' → logprob: -4.896782875061035
    5. ',
' → logprob: -5.646782875061035
    6. '\' → logprob: -5.771782875061035
    7. '#' → logprob: -6.146782875061035
    8. 'def' → logprob: -6.146782875061035
    9. '\n' → logprob: -6.146782875061035
    10. '
' → logprob: -6.396782875061035

Token 26: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7537309527397156
    2. 'def' → logprob: -1.7537310123443604
    3. '
' → logprob: -2.1287310123443604
    4. ',' → logprob: -2.8787310123443604
    5. '```' → logprob: -3.3787310123443604
    6. '(
' → logprob: -3.6287310123443604
    7. ',
' → logprob: -3.8787310123443604
    8. '(' → logprob: -3.8787310123443604
    9. '

' → logprob: -4.128730773925781
    10. '#' → logprob: -4.628730773925781

Token 27: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.4408720135688782
    2. ' math' → logprob: -1.6908719539642334
    3. ' numpy' → logprob: -2.3158719539642334
    4. ' itertools' → logprob: -3.9408719539642334
    5. ' collections' → logprob: -4.1908721923828125
    6. 'numpy' → logprob: -4.8158721923828125
    7. ' random' → logprob: -5.0658721923828125
    8. 'math' → logprob: -5.0658721923828125
    9. ' sym' → logprob: -5.1908721923828125
    10. ' typing' → logprob: -5.5658721923828125

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6171082854270935
    2. '.' → logprob: -1.1171083450317383
    3. 'import' → logprob: -2.1171083450317383
    4. ' ' → logprob: -4.617108345031738
    5. '<|end|>' → logprob: -6.367108345031738
    6. ',' → logprob: -7.992108345031738
    7. ' .' → logprob: -8.742108345031738
    8. '.sqrt' → logprob: -8.742108345031738
    9. '<|end|>' → logprob: -9.492108345031738
    10. '.import' → logprob: -9.742108345031738

Token 29: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.691448450088501
    2. ' sqrt' → logprob: -1.566448450088501
    3. ' factorial' → logprob: -2.316448450088501
    4. ' inf' → logprob: -3.566448450088501
    5. 'inf' → logprob: -3.691448450088501
    6. ' ceil' → logprob: -3.816448450088501
    7. 'ceil' → logprob: -4.066448211669922
    8. 'factor' → logprob: -4.191448211669922
    9. 'prod' → logprob: -4.691448211669922
    10. ' gcd' → logprob: -4.816448211669922

Token 30: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1643526554107666
    2. 'def' → logprob: -1.1643526554107666
    3. ',' → logprob: -1.9143526554107666
    4. 'import' → logprob: -3.0393526554107666
    5. '
' → logprob: -3.1643526554107666
    6. '\' → logprob: -3.7893526554107666
    7. '.' → logprob: -3.9143526554107666
    8. ',
' → logprob: -4.4143524169921875
    9. '

' → logprob: -4.6643524169921875
    10. '<|end|>' → logprob: -4.6643524169921875

Token 31: 'L' (ID: 43)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8939862251281738
    2. 'd' → logprob: -1.1439862251281738
    3. '#' → logprob: -1.7689862251281738
    4. '\' → logprob: -3.768986225128174
    5. 'import' → logprob: -3.893986225128174
    6. 'a' → logprob: -4.893986225128174
    7. '```' → logprob: -5.018986225128174
    8. 'n' → logprob: -5.268986225128174
    9. '
' → logprob: -5.393986225128174
    10. '`' → logprob: -5.518986225128174

Token 32: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3842860460281372
    2. 'IST' → logprob: -1.5092860460281372
    3. 'ambda' → logprob: -2.1342859268188477
    4. ' =' → logprob: -2.6342859268188477
    5. 'ist' → logprob: -2.8842859268188477
    6. 'AMB' → logprob: -3.2592859268188477
    7. 'EN' → logprob: -3.5092859268188477
    8. '_' → logprob: -3.6342859268188477
    9. 'E' → logprob: -3.8842859268188477
    10. '=[]' → logprob: -4.009285926818848

Token 33: ' A' (ID: 355)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.0015766620635986
    2. 'R' → logprob: -2.1265766620635986
    3. 'U' → logprob: -2.5015766620635986
    4. ' R' → logprob: -2.7515766620635986
    5. 'W' → logprob: -2.7515766620635986
    6. 'M' → logprob: -2.8765766620635986
    7. ' N' → logprob: -2.8765766620635986
    8. ' M' → logprob: -3.1265766620635986
    9. ' W' → logprob: -3.1265766620635986
    10. ' U' → logprob: -3.2515766620635986

Token 34: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7546248435974121
    2. ' =' → logprob: -0.8796248435974121
    3. ',' → logprob: -2.379624843597412
    4. ' ' → logprob: -6.004624843597412
    5. 'I' → logprob: -6.379624843597412
    6. 'rray' → logprob: -6.504624843597412
    7. 'pp' → logprob: -7.254624843597412
    8. 'L' → logprob: -7.504624843597412
    9. 'ir' → logprob: -7.504624843597412
    10. 'P' → logprob: -7.504624843597412

Token 35: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.673965334892273
    2. ' B' → logprob: -2.1739654541015625
    3. 'R' → logprob: -2.9239654541015625
    4. '_' → logprob: -3.1739654541015625
    5. 'N' → logprob: -3.4239654541015625
    6. 'T' → logprob: -3.5489654541015625
    7. ' =' → logprob: -3.6739654541015625
    8. 'M' → logprob: -4.1739654541015625
    9. 'I' → logprob: -4.2989654541015625
    10. 'P' → logprob: -4.4239654541015625

Token 36: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40738049149513245
    2. '=' → logprob: -1.15738046169281
    3. ',' → logprob: -3.9073805809020996
    4. ' ,' → logprob: -9.282380104064941
    5. ' ' → logprob: -9.657380104064941
    6. ')' → logprob: -11.157380104064941
    7. '  ' → logprob: -11.532380104064941
    8. '[' → logprob: -12.532380104064941
    9. '=

' → logprob: -12.782380104064941
    10. ' =
' → logprob: -12.969880104064941

Token 37: ' M' (ID: 391)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4951499402523041
    2. ' C' → logprob: -1.2451499700546265
    3. ' =' → logprob: -3.995149850845337
    4. 'N' → logprob: -4.370150089263916
    5. 'T' → logprob: -5.120150089263916
    6. '=' → logprob: -5.245150089263916
    7. ' N' → logprob: -5.245150089263916
    8. 'K' → logprob: -5.620150089263916
    9. 'n' → logprob: -5.745150089263916
    10. 'M' → logprob: -5.745150089263916

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5814517736434937
    2. '=' → logprob: -0.8314517736434937
    3. ',' → logprob: -5.206451892852783
    4. ' ,' → logprob: -12.331451416015625
    5. ')' → logprob: -12.706451416015625
    6. ' ' → logprob: -13.581451416015625
    7. '<|end|>' → logprob: -13.831451416015625
    8. '  ' → logprob: -14.206451416015625
    9. '.' → logprob: -14.456451416015625
    10. '=

' → logprob: -14.518951416015625

Token 39: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24070429801940918
    2. '0' → logprob: -2.365704298019409
    3. '10' → logprob: -3.115704298019409
    4. '100' → logprob: -3.865704298019409
    5. ' map' → logprob: -3.990704298019409
    6. '1' → logprob: -4.740704536437988
    7. 'map' → logprob: -5.490704536437988
    8. '5' → logprob: -5.615704536437988
    9. 'range' → logprob: -5.990704536437988
    10. '20' → logprob: -6.115704536437988

Token 40: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00983436219394207
    2. '(' → logprob: -4.759834289550781
    3. '(lambda' → logprob: -7.259834289550781
    4. 'int' → logprob: -8.634834289550781
    5. '(str' → logprob: -8.759834289550781
    6. '(input' → logprob: -9.259834289550781
    7. '(map' → logprob: -10.384834289550781
    8. '(eval' → logprob: -11.009834289550781
    9. '[int' → logprob: -11.384834289550781
    10. '<int' → logprob: -12.009834289550781

Token 41: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5920715928077698
    2. ',' → logprob: -1.217071533203125
    3. '(input' → logprob: -2.592071533203125
    4. '(' → logprob: -3.217071533203125
    5. ',input' → logprob: -4.217071533203125
    6. 'input' → logprob: -4.467071533203125
    7. '<|end|>' → logprob: -5.092071533203125
    8. '```' → logprob: -6.592071533203125
    9. ')(' → logprob: -8.217071533203125
    10. ' input' → logprob: -8.467071533203125

Token 42: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038245294243097305
    2. ' input' → logprob: -3.28824520111084
    3. ')' → logprob: -8.66324520111084
    4. '(input' → logprob: -11.41324520111084
    5. '=input' → logprob: -12.16324520111084
    6. ',input' → logprob: -12.53824520111084
    7. 'open' → logprob: -12.91324520111084
    8. '	input' → logprob: -13.03824520111084
    9. '```' → logprob: -13.28824520111084
    10. 'lambda' → logprob: -13.41324520111084

Token 43: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0054572708904743195
    2. '())' → logprob: -5.505457401275635
    3. '()' → logprob: -7.005457401275635
    4. ')' → logprob: -7.755457401275635
    5. '(' → logprob: -11.005456924438477
    6. '());' → logprob: -11.255456924438477
    7. '(),' → logprob: -12.755456924438477
    8. '();)' → logprob: -13.005456924438477
    9. '();' → logprob: -13.380456924438477
    10. '()>' → logprob: -13.880456924438477

Token 44: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.179569077678025e-05
    2. 'strip' → logprob: -10.250041961669922
    3. ' split' → logprob: -12.750041961669922
    4. '(split' → logprob: -13.375041961669922
    5. '().' → logprob: -14.250041961669922
    6. ')' → logprob: -14.625041961669922
    7. 'rstrip' → logprob: -14.750041961669922
    8. 'spl' → logprob: -15.875041961669922
    9. 's' → logprob: -16.000041961669922
    10. 'read' → logprob: -16.875041961669922

Token 45: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06253267824649811
    2. '))' → logprob: -3.312532663345337
    3. '())' → logprob: -3.937532663345337
    4. '(' → logprob: -6.312532901763916
    5. '('' → logprob: -6.562532901763916
    6. '()' → logprob: -7.187532901763916
    7. '(','' → logprob: -8.437532424926758
    8. '()))' → logprob: -8.812532424926758
    9. '),' → logprob: -9.187532424926758
    10. '`)' → logprob: -10.187532424926758

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0188955068588257
    2. 'n' → logprob: -1.7688955068588257
    3. 'a' → logprob: -2.0188956260681152
    4. 'for' → logprob: -2.3938956260681152
    5. 'd' → logprob: -4.018895626068115
    6. 'x' → logprob: -4.018895626068115
    7. 'arr' → logprob: -4.143895626068115
    8. 'matrix' → logprob: -4.143895626068115
    9. 'dp' → logprob: -4.268895626068115
    10. 'data' → logprob: -4.268895626068115

Token 47: ' identity' (ID: 16696)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.21614138782024384
    2. ' f' → logprob: -2.96614146232605
    3. ' ceil' → logprob: -3.59114146232605
    4. ' matrix' → logprob: -3.71614146232605
    5. ' solution' → logprob: -4.466141223907471
    6. ' factorial' → logprob: -4.716141223907471
    7. ' max' → logprob: -4.841141223907471
    8. ' fibonacci' → logprob: -4.966141223907471
    9. ' dfs' → logprob: -5.216141223907471
    10. ' calculate' → logprob: -5.341141223907471

Token 48: '_matrix' (ID: 23431)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014199115335941315
    2. '(matrix' → logprob: -5.014199256896973
    3. '(' → logprob: -5.764199256896973
    4. '(n' → logprob: -6.264199256896973
    5. ' (' → logprob: -6.764199256896973
    6. '(a' → logprob: -8.014199256896973
    7. '(m' → logprob: -8.889199256896973
    8. '(mat' → logprob: -9.014199256896973
    9. '(A' → logprob: -9.139199256896973
    10. '():' → logprob: -9.139199256896973

Token 49: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2019706666469574
    2. '(' → logprob: -1.7019706964492798
    3. '(N' → logprob: -8.076971054077148
    4. '(size' → logprob: -8.576971054077148
    5. ' (' → logprob: -10.826971054077148
    6. '(k' → logprob: -10.951971054077148
    7. '((' → logprob: -12.451971054077148
    8. '(
' → logprob: -12.576971054077148
    9. '(dim' → logprob: -12.951971054077148
    10. '(d' → logprob: -13.326971054077148

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00037561915814876556
    2. ')' → logprob: -8.125375747680664
    3. '):
' → logprob: -10.000375747680664
    4. ' ):' → logprob: -11.250375747680664
    5. '(n' → logprob: -11.500375747680664
    6. ':' → logprob: -11.875375747680664
    7. ',' → logprob: -14.250375747680664
    8. '):
' → logprob: -14.500375747680664
    9. '}:' → logprob: -14.500375747680664
    10. 'n' → logprob: -14.750375747680664

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02416483871638775
    2. ':
' → logprob: -4.52416467666626
    3. '(' → logprob: -5.27416467666626
    4. '   ' → logprob: -5.77416467666626
    5. '(n' → logprob: -6.27416467666626
    6. ':return' → logprob: -7.27416467666626
    7. '):' → logprob: -7.39916467666626
    8. ' return' → logprob: -7.89916467666626
    9. '():' → logprob: -8.024165153503418
    10. ' :' → logprob: -8.274165153503418

Token 52: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48029235005378723
    2. 'return' (adapté à ' return') → logprob: -0.9802923202514648
    3. '   ' → logprob: -5.230292320251465
    4. ' [' → logprob: -8.105292320251465
    5. ' [[' → logprob: -8.480292320251465
    6. '[' → logprob: -8.605292320251465
    7. '[[' → logprob: -9.480292320251465
    8. ' ' → logprob: -10.230292320251465
    9. '  ' → logprob: -11.730292320251465
    10. '[
' → logprob: -11.855292320251465

Token 53: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.12722522020339966
    2. '[' → logprob: -2.627225160598755
    3. ' [[' → logprob: -3.377225160598755
    4. ' [' → logprob: -4.502225399017334
    5. '[list' → logprob: -6.627225399017334
    6. '[type' → logprob: -8.752224922180176
    7. '[np' → logprob: -9.502224922180176
    8. '[m' → logprob: -9.627224922180176
    9. '[array' → logprob: -10.002224922180176
    10. '[id' → logprob: -10.002224922180176

Token 54: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008373201824724674
    2. 'int' → logprob: -5.383373260498047
    3. '0' → logprob: -5.633373260498047
    4. '(' → logprob: -9.258373260498047
    5. ' ' → logprob: -10.133373260498047
    6. '(int' → logprob: -10.758373260498047
    7. ' int' → logprob: -11.633373260498047
    8. 'float' → logprob: -13.258373260498047
    9. '[int' → logprob: -14.133373260498047
    10. ' (' → logprob: -14.883373260498047

Token 55: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.417976379045285e-05
    2. '(' → logprob: -10.375043869018555
    3. '(x' → logprob: -12.625043869018555
    4. 'i' → logprob: -12.750043869018555
    5. '(j' → logprob: -13.125043869018555
    6. '(k' → logprob: -14.125043869018555
    7. '
' → logprob: -14.375043869018555
    8. '(row' → logprob: -14.625043869018555
    9. '(r' → logprob: -14.750043869018555
    10. ' (' → logprob: -14.875043869018555

Token 56: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008638797327876091
    2. ' ==' → logprob: -4.758638858795166
    3. '=j' → logprob: -11.258638381958008
    4. ' ' → logprob: -12.633638381958008
    5. 'j' → logprob: -12.633638381958008
    6. '==(' → logprob: -13.258638381958008
    7. 'n' → logprob: -14.008638381958008
    8. '==
' → logprob: -14.133638381958008
    9. '=' → logprob: -15.008638381958008
    10. ' j' → logprob: -15.383638381958008

Token 57: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00029959288076497614
    2. ' j' → logprob: -8.125299453735352
    3. '	j' → logprob: -12.750299453735352
    4. 'n' → logprob: -15.250299453735352
    5. '=j' → logprob: -16.00029945373535
    6. ':j' → logprob: -16.12529945373535
    7. '_j' → logprob: -16.62529945373535
    8. '$j' → logprob: -17.00029945373535
    9. ' ' → logprob: -17.37529945373535
    10. ',j' → logprob: -17.37529945373535

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013774730905424803
    2. ' )' → logprob: -9.000137329101562
    3. ')]' → logprob: -13.000137329101562
    4. ' for' → logprob: -13.125137329101562
    5. ')
' → logprob: -13.125137329101562
    6. '}' → logprob: -13.250137329101562
    7. '   ' → logprob: -13.375137329101562
    8. ' ' → logprob: -13.500137329101562
    9. ']' → logprob: -14.125137329101562
    10. 'for' → logprob: -14.375137329101562

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005947640631347895
    2. 'for' → logprob: -5.130947589874268
    3. ' ' → logprob: -11.005948066711426
    4. ')' → logprob: -13.755948066711426
    5. '   ' → logprob: -14.255948066711426
    6. '	for' → logprob: -15.005948066711426
    7. '  ' → logprob: -15.880948066711426
    8. '    ' → logprob: -16.38094711303711
    9. ' if' → logprob: -16.50594711303711
    10. ' ' → logprob: -16.75594711303711

Token 60: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1791837364435196
    2. ' j' → logprob: -2.0541837215423584
    3. 'j' → logprob: -3.5541837215423584
    4. 'range' → logprob: -4.9291839599609375
    5. '	range' → logprob: -12.429183959960938
    6. '	j' → logprob: -13.429183959960938
    7. ' ' → logprob: -13.554183959960938
    8. '(range' → logprob: -13.679183959960938
    9. ' in' → logprob: -13.804183959960938
    10. 'Range' → logprob: -13.929183959960938

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04881967604160309
    2. 'in' → logprob: -3.0488197803497314
    3. 'range' → logprob: -8.673819541931152
    4. '<|end|>' → logprob: -10.298819541931152
    5. ' range' → logprob: -11.173819541931152
    6. ' ' → logprob: -12.048819541931152
    7. ',' → logprob: -13.423819541931152
    8. 's' → logprob: -13.798819541931152
    9. 'n' → logprob: -13.798819541931152
    10. '<|end|>' → logprob: -14.048819541931152

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141392946243286
    2. ' range' → logprob: -1.701413869857788
    3. '(range' → logprob: -15.076414108276367
    4. '	range' → logprob: -15.201414108276367
    5. '_range' → logprob: -18.201414108276367
    6. '.range' → logprob: -18.326414108276367
    7. ' xrange' → logprob: -18.326414108276367
    8. 'Range' → logprob: -19.326414108276367
    9. ')' → logprob: -19.451414108276367
    10. ' ' → logprob: -19.576414108276367

Token 63: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002217748697148636
    2. 'n' → logprob: -8.625222206115723
    3. '(' → logprob: -10.125222206115723
    4. ' n' → logprob: -13.625222206115723
    5. ' (' → logprob: -14.250222206115723
    6. ')n' → logprob: -15.875222206115723
    7. '	n' → logprob: -16.625221252441406
    8. ')' → logprob: -18.625221252441406
    9. ',n' → logprob: -18.625221252441406
    10. '(
' → logprob: -18.625221252441406

Token 64: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012248923303559422
    2. ' )' → logprob: -9.8751220703125
    3. '   ' → logprob: -10.6251220703125
    4. ']' → logprob: -10.7501220703125
    5. ')' → logprob: -11.7501220703125
    6. ' ' → logprob: -12.0001220703125
    7. ' ]' → logprob: -12.2501220703125
    8. ')]
' → logprob: -13.1251220703125
    9. '       ' → logprob: -13.7501220703125
    10. '])' → logprob: -14.6251220703125

Token 65: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014186070300638676
    2. ' ]' → logprob: -4.264185905456543
    3. '   ' → logprob: -10.889185905456543
    4. ')]' → logprob: -13.389185905456543
    5. '       ' → logprob: -14.014185905456543
    6. '    ' → logprob: -14.264185905456543
    7. ' ' → logprob: -15.264185905456543
    8. ']]' → logprob: -15.639185905456543
    9. '()]' → logprob: -15.639185905456543
    10. ']
' → logprob: -16.38918685913086

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012670806609094143
    2. 'i' → logprob: -4.637670993804932
    3. ' range' → logprob: -5.887670993804932
    4. 'range' → logprob: -9.012670516967773
    5. '	i' → logprob: -12.012670516967773
    6. ' ' → logprob: -12.262670516967773
    7. ' in' → logprob: -13.512670516967773
    8. ' ' → logprob: -13.887670516967773
    9. '_i' → logprob: -14.012670516967773
    10. '<|end|>' → logprob: -14.762670516967773

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005676822271198034
    2. 'in' → logprob: -5.255676746368408
    3. '<|end|>' → logprob: -7.755676746368408
    4. ' ' → logprob: -12.505677223205566
    5. '<|end|>' → logprob: -12.630677223205566
    6. 'range' → logprob: -12.630677223205566
    7. '	in' → logprob: -13.255677223205566
    8. ' range' → logprob: -13.630677223205566
    9. '  ' → logprob: -15.505677223205566
    10. '_in' → logprob: -15.630677223205566

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048589639365673065
    2. ' range' → logprob: -3.0485897064208984
    3. '(range' → logprob: -13.048589706420898
    4. '	range' → logprob: -16.5485897064209
    5. ')' → logprob: -19.2985897064209
    6. 'n' → logprob: -19.5485897064209
    7. ' ' → logprob: -19.6735897064209
    8. '.range' → logprob: -20.1735897064209
    9. '   ' → logprob: -20.4235897064209
    10. ' xrange' → logprob: -20.6735897064209

Token 69: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -10.750021934509277
    3. 'n' → logprob: -14.250021934509277
    4. ' (' → logprob: -16.125022888183594
    5. ')n' → logprob: -17.750022888183594
    6. ')(' → logprob: -19.000022888183594
    7. '(nn' → logprob: -19.250022888183594
    8. '(s' → logprob: -19.375022888183594
    9. ' n' → logprob: -19.375022888183594
    10. '(N' → logprob: -19.625022888183594

Token 70: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.5570885807392187e-05
    2. '])]' → logprob: -11.875015258789062
    3. ')])' → logprob: -12.125015258789062
    4. ')' → logprob: -13.750015258789062
    5. ')]
' → logprob: -14.625015258789062
    6. '])' → logprob: -14.875015258789062
    7. ']' → logprob: -15.250015258789062
    8. ' )' → logprob: -15.375015258789062
    9. ')}' → logprob: -16.125015258789062
    10. ')],' → logprob: -16.250015258789062

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5454614162445068
    2. '
' → logprob: -0.9204614162445068
    3. '<|end|>' → logprob: -4.295461654663086
    4. '

' → logprob: -5.295461654663086
    5. '<|end|>' → logprob: -6.670461654663086
    6. '*' → logprob: -7.795461654663086
    7. ')' → logprob: -8.170461654663086
    8. '```' → logprob: -8.295461654663086
    9. '
' → logprob: -8.420461654663086
    10. '[' → logprob: -9.170461654663086

Token 72: ' mat' (ID: 2450)
  Prédit: ' mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.2996941804885864
    2. 'mat' → logprob: -2.049694061279297
    3. ' matrix' → logprob: -2.174694061279297
    4. 'matrix' → logprob: -4.299694061279297
    5. ' multiply' → logprob: -7.049694061279297
    6. '_mat' → logprob: -7.799694061279297
    7. '_matrix' → logprob: -8.174694061279297
    8. ' pow' → logprob: -8.549694061279297
    9. 'multiply' → logprob: -8.549694061279297
    10. 'mul' → logprob: -8.674694061279297

Token 73: '_mul' (ID: 75111)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -6.825890159234405e-05
    2. 'rix' → logprob: -10.500068664550781
    3. '_mul' → logprob: -11.500068664550781
    4. 'm' → logprob: -11.625068664550781
    5. 'r' → logprob: -12.250068664550781
    6. 'mult' → logprob: -12.250068664550781
    7. 'mat' → logprob: -12.375068664550781
    8. '```' → logprob: -13.250068664550781
    9. 'multiply' → logprob: -13.875068664550781
    10. 'h' → logprob: -14.125068664550781

Token 74: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02952459268271923
    2. '(A' → logprob: -3.654524564743042
    3. '(matrix' → logprob: -6.154524803161621
    4. '(mat' → logprob: -7.529524803161621
    5. '(x' → logprob: -8.279524803161621
    6. 'x' → logprob: -9.279524803161621
    7. '(m' → logprob: -9.404524803161621
    8. 'ip' → logprob: -10.029524803161621
    9. ' (' → logprob: -10.904524803161621
    10. '(' → logprob: -11.779524803161621

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002537104592192918
    2. ',a' → logprob: -8.625253677368164
    3. ' ,' → logprob: -10.625253677368164
    4. ',b' → logprob: -11.000253677368164
    5. ')' → logprob: -11.500253677368164
    6. 'a' → logprob: -11.625253677368164
    7. '<|end|>' → logprob: -12.750253677368164
    8. '[],' → logprob: -13.250253677368164
    9. '):' → logprob: -13.375253677368164
    10. ',n' → logprob: -13.750253677368164

Token 76: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061967913061380386
    2. ' b' → logprob: -2.8119678497314453
    3. '<|end|>' → logprob: -15.811967849731445
    4. '   ' → logprob: -16.936967849731445
    5. ' ' → logprob: -17.186967849731445
    6. ',b' → logprob: -17.436967849731445
    7. ')b' → logprob: -17.436967849731445
    8. '    ' → logprob: -18.061967849731445
    9. '	b' → logprob: -18.686967849731445
    10. '  ' → logprob: -18.686967849731445

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015860427811276168
    2. '):
' → logprob: -8.875158309936523
    3. ')' → logprob: -11.125158309936523
    4. '):
' → logprob: -13.750158309936523
    5. ' ):' → logprob: -13.875158309936523
    6. ':' → logprob: -14.250158309936523
    7. '[]):' → logprob: -15.000158309936523
    8. ',' → logprob: -15.875158309936523
    9. ']:' → logprob: -16.000158309936523
    10. '=' → logprob: -16.250158309936523

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011755209416151047
    2. '[[' → logprob: -5.386754989624023
    3. '[' → logprob: -5.761754989624023
    4. 'return' → logprob: -6.761754989624023
    5. '[
' → logprob: -6.761754989624023
    6. ' return' → logprob: -7.636754989624023
    7. ' [[' → logprob: -8.011754989624023
    8. '=' → logprob: -8.761754989624023
    9. '=[[' → logprob: -8.886754989624023
    10. ' [' → logprob: -9.261754989624023

Token 79: ' f' (ID: 285)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.3991583287715912
    2. '[' → logprob: -1.1491583585739136
    3. '[
' → logprob: -4.524158477783203
    4. '[n' → logprob: -7.399158477783203
    5. ' [[' → logprob: -8.274158477783203
    6. ' [' → logprob: -8.774158477783203
    7. 'return' → logprob: -9.024158477783203
    8. '   ' → logprob: -9.649158477783203
    9. '[len' → logprob: -10.274158477783203
    10. '[m' → logprob: -10.899158477783203

Token 80: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.004704237915575504
    2. 'o' → logprob: -6.004704475402832
    3. '=' → logprob: -6.629704475402832
    4. ' =' → logprob: -8.879704475402832
    5. '   ' → logprob: -9.129704475402832
    6. 'a' → logprob: -9.379704475402832
    7. '```' → logprob: -9.754704475402832
    8. '=lambda' → logprob: -10.004704475402832
    9. 'i' → logprob: -10.129704475402832
    10. '=[[' → logprob: -10.254704475402832

Token 81: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07664033025503159
    2. ' lambda' → logprob: -3.2016403675079346
    3. '(lambda' → logprob: -4.3266401290893555
    4. '[[' → logprob: -4.5766401290893555
    5. 'len' → logprob: -5.0766401290893555
    6. '[' → logprob: -6.3266401290893555
    7. '[len' → logprob: -7.7016401290893555
    8. ' len' → logprob: -8.201640129089355
    9. '[]' → logprob: -8.326640129089355
    10. ' [[' → logprob: -8.451640129089355

Token 82: ' r' (ID: 428)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5933411121368408
    2. ' i' → logprob: -1.2183411121368408
    3. ' lambda' → logprob: -2.718341112136841
    4. 'x' → logprob: -3.343341112136841
    5. ' a' → logprob: -4.218340873718262
    6. 'i' → logprob: -4.593340873718262
    7. ' row' → logprob: -4.718340873718262
    8. 'lambda' → logprob: -5.343340873718262
    9. ' r' → logprob: -5.593340873718262
    10. 'a' → logprob: -6.343340873718262

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034243978559970856
    2. ':' → logprob: -3.5342440605163574
    3. 'a' → logprob: -6.409244060516357
    4. ' in' → logprob: -6.909244060516357
    5. '[' → logprob: -8.0342435836792
    6. '=lambda' → logprob: -8.9092435836792
    7. ' ,' → logprob: -9.0342435836792
    8. 's' → logprob: -9.1592435836792
    9. ',row' → logprob: -9.1592435836792
    10. 'ow' → logprob: -9.2842435836792

Token 84: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06601052731275558
    2. ' c' → logprob: -3.6910104751586914
    3. 'lambda' → logprob: -3.8160104751586914
    4. 's' → logprob: -5.191010475158691
    5. 'a' → logprob: -5.691010475158691
    6. 'i' → logprob: -6.566010475158691
    7. ' lambda' → logprob: -6.816010475158691
    8. 'range' → logprob: -6.941010475158691
    9. 'x' → logprob: -7.066010475158691
    10. 'f' → logprob: -7.066010475158691

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008095058728940785
    2. ' :' → logprob: -7.375809669494629
    3. ':[' → logprob: -9.000809669494629
    4. ',' → logprob: -11.000809669494629
    5. ':a' → logprob: -11.500809669494629
    6. '=' → logprob: -11.625809669494629
    7. 'a' → logprob: -12.375809669494629
    8. ':[[' → logprob: -12.750809669494629
    9. ',:' → logprob: -13.125809669494629
    10. 's' → logprob: -13.250809669494629

Token 86: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2256414294242859
    2. ' sum' → logprob: -1.6006414890289307
    3. 'reduce' → logprob: -8.600641250610352
    4. ' reduce' → logprob: -10.600641250610352
    5. '   ' → logprob: -11.975641250610352
    6. ' ' → logprob: -12.225641250610352
    7. '    ' → logprob: -12.850641250610352
    8. '  ' → logprob: -12.850641250610352
    9. '(sum' → logprob: -13.475641250610352
    10. '	sum' → logprob: -14.600641250610352

Token 87: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4417322874069214
    2. '(x' → logprob: -1.0667322874069214
    3. '(' → logprob: -4.691732406616211
    4. '([' → logprob: -6.191732406616211
    5. '(ai' → logprob: -6.816732406616211
    6. '(i' → logprob: -8.566732406616211
    7. '(r' → logprob: -8.691732406616211
    8. '(map' → logprob: -9.691732406616211
    9. '((' → logprob: -9.691732406616211
    10. '(mat' → logprob: -10.441732406616211

Token 88: '*y' (ID: 83575)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.491212010383606
    2. '[r' → logprob: -1.491212010383606
    3. '*r' → logprob: -1.491212010383606
    4. '*a' → logprob: -1.616212010383606
    5. '[a' → logprob: -2.4912118911743164
    6. '[i' → logprob: -3.7412118911743164
    7. '*' → logprob: -4.991211891174316
    8. '*y' → logprob: -5.616211891174316
    9. 'a' → logprob: -6.116211891174316
    10. '[k' → logprob: -6.741211891174316

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1271330565214157
    2. 'for' → logprob: -2.1271331310272217
    3. '	for' → logprob: -9.3771333694458
    4. ' ' → logprob: -9.8771333694458
    5. 'r' → logprob: -11.7521333694458
    6. 'x' → logprob: -11.7521333694458
    7. '  ' → logprob: -11.7521333694458
    8. '   ' → logprob: -12.0021333694458
    9. '[' → logprob: -12.1271333694458
    10. '[r' → logprob: -12.1271333694458

Token 90: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08915244787931442
    2. ' x' → logprob: -2.4641523361206055
    3. '(x' → logprob: -8.839152336120605
    4. ',x' → logprob: -10.214152336120605
    5. ',' → logprob: -10.714152336120605
    6. '	x' → logprob: -11.964152336120605
    7. ' (' → logprob: -13.464152336120605
    8. '(' → logprob: -14.964152336120605
    9. ' ' → logprob: -15.714152336120605
    10. '  ' → logprob: -15.839152336120605

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011715970002114773
    2. ',x' → logprob: -4.636715888977051
    3. ',y' → logprob: -6.511715888977051
    4. ' ,' → logprob: -7.886715888977051
    5. 'x' → logprob: -9.76171588897705
    6. ',b' → logprob: -11.63671588897705
    7. ' in' → logprob: -12.38671588897705
    8. ',z' → logprob: -12.38671588897705
    9. ',r' → logprob: -12.63671588897705
    10. ',s' → logprob: -12.76171588897705

Token 92: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004920298233628273
    2. 'y' → logprob: -7.750492095947266
    3. ' x' → logprob: -10.625492095947266
    4. ',' → logprob: -11.000492095947266
    5. 'z' → logprob: -11.625492095947266
    6. 'r' → logprob: -12.000492095947266
    7. ',x' → logprob: -13.250492095947266
    8. 'zip' → logprob: -13.375492095947266
    9. '(x' → logprob: -14.375492095947266
    10. ' y' → logprob: -15.375492095947266

Token 93: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01617560163140297
    2. 'in' → logprob: -4.141175746917725
    3. '<|end|>' → logprob: -10.141175270080566
    4. ' zip' → logprob: -10.266175270080566
    5. 'zip' → logprob: -10.391175270080566
    6. ',' → logprob: -11.266175270080566
    7. 's' → logprob: -11.516175270080566
    8. ' ' → logprob: -11.766175270080566
    9. '(zip' → logprob: -13.516175270080566
    10. '<|end|>' → logprob: -14.141175270080566

Token 94: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.0076286387629806995
    2. 'zip' → logprob: -4.882628440856934
    3. '(zip' → logprob: -10.757628440856934
    4. '.zip' → logprob: -14.382628440856934
    5. ' ' → logprob: -15.632628440856934
    6. '_zip' → logprob: -16.25762939453125
    7. ')' → logprob: -16.50762939453125
    8. '```' → logprob: -16.75762939453125
    9. ' z' → logprob: -17.00762939453125
    10. ' map' → logprob: -17.50762939453125

Token 95: '(r' (ID: 4729)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -10.500028610229492
    3. '(
' → logprob: -15.500028610229492
    4. '(row' → logprob: -15.625028610229492
    5. '((' → logprob: -15.875028610229492
    6. '(r' → logprob: -16.125028610229492
    7. 'a' → logprob: -18.250028610229492
    8. '(b' → logprob: -18.625028610229492
    9. '(ai' → logprob: -19.000028610229492
    10. '(x' → logprob: -19.250028610229492

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5259515047073364
    2. ',b' → logprob: -0.9009515047073364
    3. '(b' → logprob: -6.775951385498047
    4. ',a' → logprob: -7.525951385498047
    5. ' ,' → logprob: -7.650951385498047
    6. '[' → logprob: -8.650951385498047
    7. 'a' → logprob: -8.650951385498047
    8. '(a' → logprob: -8.775951385498047
    9. 'b' → logprob: -9.400951385498047
    10. ' b' → logprob: -10.650951385498047

Token 97: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.118830107152462
    2. ' c' → logprob: -2.4938302040100098
    3. 'b' → logprob: -3.8688302040100098
    4. '(c' → logprob: -5.86883020401001
    5. ' b' → logprob: -5.99383020401001
    6. '[c' → logprob: -6.74383020401001
    7. '(b' → logprob: -8.118829727172852
    8. ' (' → logprob: -8.243829727172852
    9. '[' → logprob: -8.618829727172852
    10. '[b' → logprob: -8.743829727172852

Token 98: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.019999973475933075
    2. 'b' → logprob: -5.394999980926514
    3. '))
' → logprob: -5.394999980926514
    4. '[' → logprob: -6.269999980926514
    5. 'a' → logprob: -6.519999980926514
    6. ')' → logprob: -6.769999980926514
    7. '(b' → logprob: -6.894999980926514
    8. '.transpose' → logprob: -7.019999980926514
    9. ' ))' → logprob: -7.519999980926514
    10. 'transpose' → logprob: -7.519999980926514

Token 99: ' %' (ID: 1851)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5850932598114014
    2. ')' → logprob: -1.2100932598114014
    3. '(
' → logprob: -3.0850932598114014
    4. '(a' → logprob: -3.2100932598114014
    5. ',' → logprob: -4.4600934982299805
    6. '(mat' → logprob: -4.4600934982299805
    7. '([' → logprob: -5.5850934982299805
    8. 'for' → logprob: -5.8350934982299805
    9. '   ' → logprob: -5.8350934982299805
    10. 'def' → logprob: -6.0850934982299805

Token 100: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01611894741654396
    2. ' M' → logprob: -4.141119003295898
    3. 'm' → logprob: -10.141119003295898
    4. '100' → logprob: -10.266119003295898
    5. ' ' → logprob: -12.141119003295898
    6. '10' → logprob: -13.016119003295898
    7. '   ' → logprob: -14.766119003295898
    8. 'B' → logprob: -15.016119003295898
    9. ' ' → logprob: -15.016119003295898
    10. '998' → logprob: -15.516119003295898

Token 101: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.818875789642334
    2. '(' → logprob: -1.193875789642334
    3. '(
' → logprob: -2.193875789642334
    4. ',' → logprob: -3.318875789642334
    5. '   ' → logprob: -3.693875789642334
    6. ')
' → logprob: -4.068875789642334
    7. ',
' → logprob: -4.193875789642334
    8. '(a' → logprob: -4.443875789642334
    9. 'def' → logprob: -4.943875789642334
    10. ' ' → logprob: -5.318875789642334

Token 102: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4139920473098755
    2. '(
' → logprob: -2.163991928100586
    3. '   ' → logprob: -2.413991928100586
    4. ')' → logprob: -3.038991928100586
    5. ' ' → logprob: -3.538991928100586
    6. '<|end|>' → logprob: -4.163991928100586
    7. ',' → logprob: -4.288991928100586
    8. ',
' → logprob: -5.538991928100586
    9. '(a' → logprob: -5.663991928100586
    10. '[' → logprob: -5.788991928100586

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.22714069485664368
    2. '   ' → logprob: -1.8521406650543213
    3. ' return' → logprob: -3.1021406650543213
    4. 'def' → logprob: -7.4771409034729
    5. '
' → logprob: -7.8521409034729
    6. '[' → logprob: -9.227140426635742
    7. '    
' → logprob: -10.227140426635742
    8. '[
' → logprob: -10.227140426635742
    9. 'matrix' → logprob: -10.477140426635742
    10. '  ' → logprob: -10.602140426635742

Token 104: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.07026940584182739
    2. ' [[' → logprob: -2.8202693462371826
    3. ' [' → logprob: -5.445269584655762
    4. '[' → logprob: -5.820269584655762
    5. '[
' → logprob: -7.195269584655762
    6. '[list' → logprob: -8.570269584655762
    7. ' [
' → logprob: -10.570269584655762
    8. '[new' → logprob: -12.320269584655762
    9. '[to' → logprob: -13.195269584655762
    10. '[array' → logprob: -13.820269584655762

Token 105: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.6240566083070007e-06
    2. 'mat' → logprob: -13.750001907348633
    3. ' f' → logprob: -15.000001907348633
    4. '[f' → logprob: -16.375001907348633
    5. '
' → logprob: -17.250001907348633
    6. 'int' → logprob: -17.500001907348633
    7. '(f' → logprob: -17.750001907348633
    8. '[' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '	f' → logprob: -19.000001907348633

Token 106: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.23595111072063446
    2. '(a' → logprob: -1.6109510660171509
    3. '(r' → logprob: -4.985950946807861
    4. '(ai' → logprob: -5.735950946807861
    5. '(' → logprob: -9.11095142364502
    6. ' (' → logprob: -9.36095142364502
    7. '(i' → logprob: -9.73595142364502
    8. 'row' → logprob: -9.86095142364502
    9. '(ar' → logprob: -10.48595142364502
    10. '(rows' → logprob: -10.48595142364502

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006555263884365559
    2. '(row' → logprob: -5.631555080413818
    3. ',row' → logprob: -6.506555080413818
    4. ',b' → logprob: -7.256555080413818
    5. 'a' → logprob: -8.631555557250977
    6. '(a' → logprob: -8.881555557250977
    7. '(b' → logprob: -9.131555557250977
    8. ',column' → logprob: -9.256555557250977
    9. ' ,' → logprob: -9.631555557250977
    10. 'b' → logprob: -9.881555557250977

Token 108: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.32231074571609497
    2. ' col' → logprob: -1.3223106861114502
    3. 'column' → logprob: -5.822310924530029
    4. '[col' → logprob: -6.072310924530029
    5. 'zip' → logprob: -6.322310924530029
    6. '(col' → logprob: -7.072310924530029
    7. ' zip' → logprob: -7.447310924530029
    8. ' column' → logprob: -7.822310924530029
    9. '[column' → logprob: -10.572310447692871
    10. ' [' → logprob: -10.697310447692871

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15483875572681427
    2. ' for' → logprob: -2.154838800430298
    3. 'for' → logprob: -4.404838562011719
    4. ' in' → logprob: -4.529838562011719
    5. '(row' → logprob: -7.154838562011719
    6. '[::-' → logprob: -7.279838562011719
    7. '[col' → logprob: -7.404838562011719
    8. ']' → logprob: -7.529838562011719
    9. 'in' → logprob: -8.529838562011719
    10. ' )' → logprob: -8.529838562011719

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.540095329284668
    2. 'for' → logprob: -0.915095329284668
    3. ' in' → logprob: -4.540095329284668
    4. 'in' → logprob: -5.915095329284668
    5. ')' → logprob: -6.665095329284668
    6. '(row' → logprob: -6.665095329284668
    7. '(col' → logprob: -8.790095329284668
    8. '(zip' → logprob: -9.040095329284668
    9. '([' → logprob: -9.165095329284668
    10. '   ' → logprob: -9.665095329284668

Token 111: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.06994999200105667
    2. 'col' → logprob: -2.6949501037597656
    3. ',col' → logprob: -12.444950103759766
    4. '(col' → logprob: -12.819950103759766
    5. ' in' → logprob: -13.069950103759766
    6. '	col' → logprob: -13.694950103759766
    7. ' zip' → logprob: -13.819950103759766
    8. '[col' → logprob: -13.944950103759766
    9. 'c' → logprob: -15.444950103759766
    10. '.col' → logprob: -15.569950103759766

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.348464697599411
    2. 'in' → logprob: -1.2234647274017334
    3. 'a' → logprob: -12.598464965820312
    4. 's' → logprob: -12.848464965820312
    5. 'In' → logprob: -13.223464965820312
    6. ')' → logprob: -13.535964965820312
    7. '  ' → logprob: -13.785964965820312
    8. '<|end|>' → logprob: -13.848464965820312
    9. ' ' → logprob: -14.160964965820312
    10. 'inv' → logprob: -14.410964965820312

Token 113: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.011087908409535885
    2. ' zip' → logprob: -4.511087894439697
    3. '(zip' → logprob: -10.511088371276855
    4. '
' → logprob: -12.386088371276855
    5. 'map' → logprob: -12.511088371276855
    6. '   ' → logprob: -13.011088371276855
    7. ' ' → logprob: -13.511088371276855
    8. 'range' → logprob: -14.011088371276855
    9. '  ' → logprob: -15.136088371276855
    10. '.zip' → logprob: -16.26108741760254

Token 114: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -4.246537173457909e-06
    2. '(*)' → logprob: -12.625003814697266
    3. '(' → logprob: -14.750003814697266
    4. '(*(' → logprob: -15.375003814697266
    5. ' (*' → logprob: -16.000003814697266
    6. '(
' → logprob: -16.375003814697266
    7. '*' → logprob: -16.750003814697266
    8. '*b' → logprob: -17.375003814697266
    9. 'b' → logprob: -17.500003814697266
    10. '(b' → logprob: -18.750003814697266

Token 115: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00048763392260298133
    2. ' b' → logprob: -7.750487804412842
    3. '(b' → logprob: -9.875487327575684
    4. '   ' → logprob: -12.750487327575684
    5. ')b' → logprob: -13.625487327575684
    6. ' ' → logprob: -15.125487327575684
    7. '	b' → logprob: -15.375487327575684
    8. 'a' → logprob: -15.500487327575684
    9. '  ' → logprob: -15.750487327575684
    10. '(' → logprob: -16.25048828125

Token 116: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.615255839889869e-05
    2. ' )' → logprob: -10.000096321105957
    3. '   ' → logprob: -10.500096321105957
    4. ')' → logprob: -11.625096321105957
    5. ')]
' → logprob: -11.750096321105957
    6. '       ' → logprob: -13.625096321105957
    7. ' ' → logprob: -13.625096321105957
    8. ']' → logprob: -13.875096321105957
    9. '  ' → logprob: -14.625096321105957
    10. 'a' → logprob: -14.875096321105957

Token 117: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4474397301673889
    2. 'for' → logprob: -1.0724396705627441
    3. '   ' → logprob: -4.697439670562744
    4. ']' → logprob: -5.072439670562744
    5. ' in' → logprob: -6.572439670562744
    6. '       ' → logprob: -6.572439670562744
    7. ' ' → logprob: -9.322440147399902
    8. ')' → logprob: -9.572440147399902
    9. '    ' → logprob: -9.822440147399902
    10. '	for' → logprob: -9.822440147399902

Token 118: ' row' (ID: 5225)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006715728435665369
    2. ' a' → logprob: -5.006715774536133
    3. 'range' → logprob: -15.631715774536133
    4. '	a' → logprob: -15.881715774536133
    5. 'b' → logprob: -17.256715774536133
    6. '(a' → logprob: -17.381715774536133
    7. ' range' → logprob: -17.756715774536133
    8. ' ' → logprob: -18.506715774536133
    9. '_a' → logprob: -19.881715774536133
    10. '  ' → logprob: -20.131715774536133

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3258023262023926
    2. 'in' → logprob: -1.5758023262023926
    3. 'a' → logprob: -2.7008023262023926
    4. '(a' → logprob: -5.700802326202393
    5. ' a' → logprob: -7.325802326202393
    6. ' (' → logprob: -10.200801849365234
    7. '   ' → logprob: -12.075801849365234
    8. '(' → logprob: -12.700801849365234
    9. '(in' → logprob: -13.450801849365234
    10. '_a' → logprob: -13.575801849365234

Token 120: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.64708495605737e-05
    2. ' a' → logprob: -9.625066757202148
    3. '(a' → logprob: -15.125066757202148
    4. ')a' → logprob: -16.50006675720215
    5. '	a' → logprob: -17.25006675720215
    6. '[a' → logprob: -19.12506675720215
    7. '_a' → logprob: -20.25006675720215
    8. 'а' → logprob: -20.62506675720215
    9. ')' → logprob: -20.62506675720215
    10. '*a' → logprob: -21.00006675720215

Token 121: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028817837592214346
    2. ')]' → logprob: -5.87788200378418
    3. ' ]' → logprob: -9.62788200378418
    4. '()]' → logprob: -13.50288200378418
    5. ']}' → logprob: -13.50288200378418
    6. '}]' → logprob: -13.50288200378418
    7. '<|end|>' → logprob: -13.50288200378418
    8. ')' → logprob: -13.62788200378418
    9. '`]' → logprob: -13.87788200378418
    10. ']]' → logprob: -14.37788200378418

Token 122: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022788578644394875
    2. '<|end|>' → logprob: -4.0227885246276855
    3. '
' → logprob: -5.8977885246276855
    4. '#' → logprob: -7.7727885246276855
    5. ')' → logprob: -8.397789001464844
    6. '[' → logprob: -8.522789001464844
    7. ']' → logprob: -8.647789001464844
    8. '```' → logprob: -9.147789001464844
    9. '<|end|>' → logprob: -9.147789001464844
    10. '  
' → logprob: -9.272789001464844

Token 123: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.3963966369628906
    2. ' mat' → logprob: -1.1463966369628906
    3. 'pow' → logprob: -5.021396636962891
    4. 'matrix' → logprob: -6.521396636962891
    5. ' matrix' → logprob: -7.896396636962891
    6. ' pow' → logprob: -8.64639663696289
    7. 'power' → logprob: -8.77139663696289
    8. 'def' → logprob: -9.14639663696289
    9. 'mod' → logprob: -9.52139663696289
    10. 'exp' → logprob: -9.58389663696289

Token 124: '_pow' (ID: 160965)
  Prédit: '_mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.015328487381339073
    2. 'mul' → logprob: -4.890328407287598
    3. '_mat' → logprob: -5.265328407287598
    4. '_add' → logprob: -7.640328407287598
    5. '_' → logprob: -8.015328407287598
    6. '_mult' → logprob: -8.265328407287598
    7. '_apply' → logprob: -8.765328407287598
    8. 'ul' → logprob: -8.890328407287598
    9. '_sub' → logprob: -9.015328407287598
    10. '_ul' → logprob: -9.015328407287598

Token 125: '(mat' (ID: 83002)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06622800976037979
    2. '(mat' → logprob: -3.066227912902832
    3. '(' → logprob: -4.816227912902832
    4. '(m' → logprob: -5.441227912902832
    5. '(matrix' → logprob: -5.566227912902832
    6. '(n' → logprob: -7.316227912902832
    7. ' (' → logprob: -7.941227912902832
    8. '(x' → logprob: -8.816227912902832
    9. '(A' → logprob: -10.566227912902832
    10. '(M' → logprob: -11.691227912902832

Token 126: ',' (ID: 11)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.2017085999250412
    2. ',' → logprob: -1.7017085552215576
    3. '(n' → logprob: -8.576708793640137
    4. ' ,' → logprob: -9.951708793640137
    5. '(matrix' → logprob: -10.326708793640137
    6. ' (' → logprob: -11.076708793640137
    7. '(m' → logprob: -12.826708793640137
    8. ',
' → logprob: -13.201708793640137
    9. 'mat' → logprob: -13.576708793640137
    10. '   ' → logprob: -13.701708793640137

Token 127: ' exp' (ID: 2794)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29207196831703186
    2. ' n' → logprob: -1.4170719385147095
    3. 'k' → logprob: -5.04207181930542
    4. ' k' → logprob: -6.41707181930542
    5. 'exp' → logprob: -6.54207181930542
    6. 'pow' → logprob: -7.79207181930542
    7. ' exp' → logprob: -8.542072296142578
    8. 'e' → logprob: -8.917072296142578
    9. ' ' → logprob: -9.167072296142578
    10. 'p' → logprob: -9.167072296142578

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018983196059707552
    2. '):
' → logprob: -8.625189781188965
    3. ')' → logprob: -12.000189781188965
    4. ' ):' → logprob: -12.625189781188965
    5. ':' → logprob: -14.500189781188965
    6. '):

' → logprob: -16.25019073486328
    7. '):
' → logprob: -16.50019073486328
    8. '=' → logprob: -17.25019073486328
    9. ',' → logprob: -17.50019073486328
    10. '}:' → logprob: -17.62519073486328

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003640692448243499
    2. ' if' → logprob: -6.378640651702881
    3. 'def' → logprob: -6.503640651702881
    4. 'if' → logprob: -7.878640651702881
    5. ' def' → logprob: -10.128641128540039
    6. 'result' → logprob: -11.378641128540039
    7. ' result' → logprob: -12.378641128540039
    8. ' res' → logprob: -13.378641128540039
    9. '```' → logprob: -13.378641128540039
    10. 'res' → logprob: -14.128641128540039

Token 130: ' return' (ID: 622)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7919613122940063
    2. ' identity' → logprob: -1.5419613122940063
    3. 'result' → logprob: -1.9169613122940063
    4. 'identity' → logprob: -2.041961193084717
    5. ' res' → logprob: -3.916961193084717
    6. 'res' → logprob: -4.166961193084717
    7. '   ' → logprob: -4.291961193084717
    8. 'def' → logprob: -5.791961193084717
    9. ' if' → logprob: -6.791961193084717
    10. 'if' → logprob: -7.291961193084717

Token 131: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12239445745944977
    2. ' reduce' → logprob: -2.372394561767578
    3. 'identity' → logprob: -4.122394561767578
    4. ' identity' → logprob: -5.247394561767578
    5. 'acc' → logprob: -8.747394561767578
    6. 'mat' → logprob: -9.247394561767578
    7. ' ' → logprob: -9.622394561767578
    8. ' mat' → logprob: -9.872394561767578
    9. '   ' → logprob: -10.372394561767578
    10. '(identity' → logprob: -10.747394561767578

Token 132: '(lambda' (ID: 43341)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.1416456699371338
    2. '(lambda' → logprob: -2.141645669937134
    3. '(' → logprob: -4.266645431518555
    4. '(
' → logprob: -7.516645431518555
    5. ' (' → logprob: -11.016645431518555
    6. 'mat' → logprob: -11.516645431518555
    7. 'lambda' → logprob: -13.141645431518555
    8. '(

' → logprob: -13.641645431518555
    9. '(Mat' → logprob: -13.891645431518555
    10. '(m' → logprob: -14.016645431518555

Token 133: ' acc' (ID: 1259)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -1.0940890312194824
    2. 'mat' → logprob: -1.4690890312194824
    3. ' lambda' → logprob: -1.5940890312194824
    4. 'lambda' → logprob: -2.3440890312194824
    5. 'a' → logprob: -3.2190890312194824
    6. ' a' → logprob: -3.3440890312194824
    7. ' x' → logprob: -3.5940890312194824
    8. 'x' → logprob: -4.094089031219482
    9. '(lambda' → logprob: -5.094089031219482
    10. ' acc' → logprob: -5.844089031219482

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002707529056351632
    2. ' ,' → logprob: -8.25027084350586
    3. 'mat' → logprob: -12.50027084350586
    4. ',
' → logprob: -13.25027084350586
    5. '(mat' → logprob: -13.25027084350586
    6. ' mat' → logprob: -13.62527084350586
    7. ',m' → logprob: -14.75027084350586
    8. ':' → logprob: -15.75027084350586
    9. 'a' → logprob: -16.12527084350586
    10. '_mat' → logprob: -17.12527084350586

Token 135: ' _:' (ID: 133568)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mat' → logprob: -1.4032316207885742
    2. ' lambda' → logprob: -1.6532316207885742
    3. 'mat' → logprob: -1.6532316207885742
    4. 'lambda' → logprob: -1.9032316207885742
    5. ' x' → logprob: -2.403231620788574
    6. ' _:' → logprob: -3.153231620788574
    7. '_:' → logprob: -3.528231620788574
    8. 'x' → logprob: -4.028231620788574
    9. ' ' → logprob: -4.653231620788574
    10. '_' → logprob: -4.778231620788574

Token 136: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.07945962995290756
    2. ' mat' → logprob: -2.5794596672058105
    3. 'lambda' → logprob: -7.8294596672058105
    4. ' lambda' → logprob: -9.329459190368652
    5. '   ' → logprob: -10.454459190368652
    6. '(mat' → logprob: -10.454459190368652
    7. '	mat' → logprob: -10.829459190368652
    8. '(lambda' → logprob: -13.454459190368652
    9. ' ' → logprob: -13.579459190368652
    10. '    ' → logprob: -14.204459190368652

Token 137: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.001529620960354805
    2. 'mul' → logprob: -6.501529693603516
    3. '_mat' → logprob: -10.626529693603516
    4. '_' → logprob: -13.626529693603516
    5. '_pow' → logprob: -13.751529693603516
    6. 'Mul' → logprob: -15.376529693603516
    7. '_mult' → logprob: -16.626529693603516
    8. 'amul' → logprob: -16.626529693603516
    9. 'a' → logprob: -16.751529693603516
    10. '_mux' → logprob: -17.126529693603516

Token 138: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -6.432518421206623e-05
    2. '(' → logprob: -10.3750638961792
    3. '(mat' → logprob: -10.5000638961792
    4. 'acc' → logprob: -12.5000638961792
    5. ' (' → logprob: -13.7500638961792
    6. '(
' → logprob: -15.2500638961792
    7. '(ac' → logprob: -16.125064849853516
    8. 'mat' → logprob: -16.375064849853516
    9. '	acc' → logprob: -16.375064849853516
    10. '(m' → logprob: -16.625064849853516

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3935569226741791
    2. '(mat' → logprob: -1.1435569524765015
    3. ' mat' → logprob: -5.643557071685791
    4. 'mat' → logprob: -5.893557071685791
    5. ' ,' → logprob: -8.393556594848633
    6. ',
' → logprob: -10.268556594848633
    7. ')' → logprob: -10.768556594848633
    8. '(' → logprob: -11.018556594848633
    9. '	mat' → logprob: -11.018556594848633
    10. '   ' → logprob: -11.643556594848633

Token 140: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.005950252525508404
    2. ' mat' → logprob: -5.130950450897217
    3. 'acc' → logprob: -11.005949974060059
    4. '	mat' → logprob: -13.255949974060059
    5. '(mat' → logprob: -13.630949974060059
    6. ' ' → logprob: -14.505949974060059
    7. ' ' → logprob: -15.630949974060059
    8. '   ' → logprob: -15.630949974060059
    9. ' acc' → logprob: -15.818449974060059
    10. 'm' → logprob: -15.880949974060059

Token 141: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.044468291103839874
    2. ',' → logprob: -3.169468402862549
    3. 'mat' → logprob: -6.794468402862549
    4. ')' → logprob: -9.16946792602539
    5. '(mat' → logprob: -9.29446792602539
    6. '),
' → logprob: -9.79446792602539
    7. 'if' → logprob: -10.79446792602539
    8. ' mat' → logprob: -11.29446792602539
    9. ' if' → logprob: -11.54446792602539
    10. ' ),' → logprob: -11.79446792602539

Token 142: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004003127105534077
    2. ' if' → logprob: -6.004003047943115
    3. ' ,' → logprob: -7.129003047943115
    4. 'if' → logprob: -7.754003047943115
    5. ',
' → logprob: -8.754003524780273
    6. ')' → logprob: -10.629003524780273
    7. 'mat' → logprob: -10.754003524780273
    8. '),' → logprob: -11.004003524780273
    9. 'exp' → logprob: -11.004003524780273
    10. '(mat' → logprob: -11.129003524780273

Token 143: ' (_' (ID: 11350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16458970308303833
    2. 'False' → logprob: -2.7895896434783936
    3. 'exp' → logprob: -3.4145896434783936
    4. ' _' → logprob: -3.5395896434783936
    5. ' False' → logprob: -4.539589881896973
    6. ' exp' → logprob: -4.789589881896973
    7. 'acc' → logprob: -5.789589881896973
    8. '_exp' → logprob: -6.164589881896973
    9. '0' → logprob: -7.852089881896973
    10. ' ' → logprob: -7.914589881896973

Token 144: ' &' (ID: 827)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0648167133331299
    2. ' ==' → logprob: -1.3148167133331299
    3. ' !=' → logprob: -1.9398167133331299
    4. ' &' → logprob: -2.43981671333313
    5. '&' → logprob: -3.43981671333313
    6. '!=' → logprob: -3.43981671333313
    7. ')' → logprob: -3.81481671333313
    8. ' ' → logprob: -4.564816474914551
    9. ' %' → logprob: -4.564816474914551
    10. 'and' → logprob: -4.689816474914551

Token 145: ' ' (ID: 220)
  Prédit: ' exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.9103565812110901
    2. 'exp' → logprob: -0.9103565812110901
    3. '1' → logprob: -1.7853565216064453
    4. ' ' → logprob: -4.160356521606445
    5. '_' → logprob: -5.285356521606445
    6. '2' → logprob: -6.160356521606445
    7. '_)' → logprob: -7.160356521606445
    8. '(exp' → logprob: -7.160356521606445
    9. '_exp' → logprob: -7.660356521606445
    10. ' (' → logprob: -7.910356521606445

Token 146: '1' (ID: 16)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.09972557425498962
    2. '1' → logprob: -2.9747254848480225
    3. ' exp' → logprob: -3.2247254848480225
    4. '_' → logprob: -6.724725723266602
    5. ' ' → logprob: -7.099725723266602
    6. '0' → logprob: -7.474725723266602
    7. '(exp' → logprob: -7.599725723266602
    8. '_)' → logprob: -8.099725723266602
    9. '_exp' → logprob: -8.474725723266602
    10. ')' → logprob: -9.474725723266602

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11105670034885406
    2. ' else' → logprob: -3.1110568046569824
    3. '==' → logprob: -3.7360568046569824
    4. ')==' → logprob: -3.8610568046569824
    5. 'else' → logprob: -4.986056804656982
    6. ' ==' → logprob: -5.236056804656982
    7. ' )' → logprob: -5.861056804656982
    8. ' ' → logprob: -8.736056327819824
    9. '0' → logprob: -9.361056327819824
    10. '   ' → logprob: -9.986056327819824

Token 148: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4917627274990082
    2. '==' → logprob: -1.3667627573013306
    3. 'else' → logprob: -2.116762638092041
    4. ' ==' → logprob: -4.366762638092041
    5. ' ' → logprob: -9.1167631149292
    6. '=' → logprob: -9.6167631149292
    7. '0' → logprob: -10.3667631149292
    8. ')' → logprob: -10.3667631149292
    9. '<|end|>' → logprob: -10.3667631149292
    10. '!=' → logprob: -11.2417631149292

Token 149: ' acc' (ID: 1259)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.5651899576187134
    2. ' mat' → logprob: -1.4401899576187134
    3. 'acc' → logprob: -1.8151899576187134
    4. ' acc' → logprob: -3.565189838409424
    5. ' identity' → logprob: -6.690189838409424
    6. 'identity' → logprob: -6.815189838409424
    7. '(mat' → logprob: -8.315190315246582
    8. '(acc' → logprob: -8.565190315246582
    9. '   ' → logprob: -8.815190315246582
    10. ' ' → logprob: -9.252690315246582

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018859582021832466
    2. ' if' → logprob: -4.643859386444092
    3. ' ,' → logprob: -4.893859386444092
    4. '   ' → logprob: -7.643859386444092
    5. '(mat' → logprob: -8.39385986328125
    6. ')' → logprob: -8.76885986328125
    7. 'if' → logprob: -8.76885986328125
    8. '    ' → logprob: -9.64385986328125
    9. '),' → logprob: -9.76885986328125
    10. 'exp' → logprob: -9.89385986328125

Token 151: ' accumulate' (ID: 74226)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3850509226322174
    2. ' range' → logprob: -2.0100510120391846
    3. '[' → logprob: -2.1350510120391846
    4. '(range' → logprob: -3.3850510120391846
    5. ' [' → logprob: -3.6350510120391846
    6. '[count' → logprob: -5.6350507736206055
    7. '[(' → logprob: -7.3850507736206055
    8. '	range' → logprob: -7.3850507736206055
    9. ')' → logprob: -7.8850507736206055
    10. '   ' → logprob: -8.385050773620605

Token 152: '(((' (ID: 13163)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06077650189399719
    2. '(range' → logprob: -3.560776472091675
    3. '([' → logprob: -4.310776710510254
    4. '(' → logprob: -5.060776710510254
    5. '(is' → logprob: -5.810776710510254
    6. '(count' → logprob: -6.185776710510254
    7. '(pow' → logprob: -6.310776710510254
    8. '<|end|>' → logprob: -6.310776710510254
    9. '(
' → logprob: -8.185776710510254
    10. '(mat' → logprob: -8.435776710510254

Token 153: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.3133411705493927
    2. '1' → logprob: -1.6883411407470703
    3. '2' → logprob: -2.9383411407470703
    4. '(' → logprob: -5.18834114074707
    5. 'lambda' → logprob: -5.81334114074707
    6. 'x' → logprob: -5.93834114074707
    7. ')' → logprob: -5.93834114074707
    8. '[' → logprob: -6.18834114074707
    9. '0' → logprob: -6.31334114074707
    10. '_' → logprob: -6.31334114074707

Token 154: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.1581641286611557
    2. ')' → logprob: -2.5331640243530273
    3. ' >>' → logprob: -3.4081640243530273
    4. ')>>' → logprob: -3.5331640243530273
    5. ' )' → logprob: -6.658164024353027
    6. ' ' → logprob: -7.283164024353027
    7. ' >>=' → logprob: -7.658164024353027
    8. '>>)' → logprob: -7.658164024353027
    9. '>>(' → logprob: -8.658164024353027
    10. '[' → logprob: -8.783164024353027

Token 155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6509381532669067
    2. '1' → logprob: -0.7759381532669067
    3. 'k' → logprob: -4.900938034057617
    4. '0' → logprob: -5.775938034057617
    5. ' ' → logprob: -5.900938034057617
    6. 'n' → logprob: -6.900938034057617
    7. '(' → logprob: -7.150938034057617
    8. '_' → logprob: -7.150938034057617
    9. ' i' → logprob: -7.150938034057617
    10. '(i' → logprob: -7.900938034057617

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03037409484386444
    2. ' for' → logprob: -4.530374050140381
    3. 'for' → logprob: -4.655374050140381
    4. '1' → logprob: -4.780374050140381
    5. ' )' → logprob: -8.155374526977539
    6. ' ' → logprob: -8.155374526977539
    7. '0' → logprob: -8.280374526977539
    8. '(' → logprob: -9.530374526977539
    9. 'i' → logprob: -9.530374526977539
    10. ' i' → logprob: -9.655374526977539

Token 157: ' &' (ID: 827)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2026849091053009
    2. 'for' → logprob: -1.7026848793029785
    3. ')' → logprob: -6.8276848793029785
    4. ',' → logprob: -9.702685356140137
    5. ' ' → logprob: -9.827685356140137
    6. '	for' → logprob: -10.702685356140137
    7. '<|end|>' → logprob: -10.952685356140137
    8. '),' → logprob: -11.702685356140137
    9. '1' → logprob: -12.577685356140137
    10. '```' → logprob: -12.827685356140137

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0098861800506711
    2. ' ' → logprob: -4.634886264801025
    3. 'i' → logprob: -9.634885787963867
    4. '0' → logprob: -10.634885787963867
    5. ' i' → logprob: -11.384885787963867
    6. '(' → logprob: -11.759885787963867
    7. '(i' → logprob: -11.884885787963867
    8. ' (' → logprob: -12.384885787963867
    9. '
' → logprob: -12.759885787963867
    10. '   ' → logprob: -13.509885787963867

Token 159: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23208871483802795
    2. '1' → logprob: -1.6070886850357056
    3. '0' → logprob: -5.107088565826416
    4. '(' → logprob: -8.357089042663574
    5. ' i' → logprob: -8.732089042663574
    6. '(i' → logprob: -9.232089042663574
    7. ' ' → logprob: -9.482089042663574
    8. ')' → logprob: -12.482089042663574
    9. '
' → logprob: -12.607089042663574
    10. '{i' → logprob: -12.607089042663574

Token 160: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17184990644454956
    2. 'for' → logprob: -2.0468499660491943
    3. ',' → logprob: -3.7968499660491943
    4. ')' → logprob: -5.296849727630615
    5. 'range' → logprob: -8.296850204467773
    6. ' ,' → logprob: -8.421850204467773
    7. '),' → logprob: -8.671850204467773
    8. '(range' → logprob: -9.296850204467773
    9. ' in' → logprob: -9.421850204467773
    10. ' i' → logprob: -9.421850204467773

Token 161: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5454621315002441
    2. 'range' → logprob: -0.9204621315002441
    3. 'count' → logprob: -4.045462131500244
    4. ' count' → logprob: -5.420462131500244
    5. ' ' → logprob: -9.170461654663086
    6. 're' → logprob: -11.045461654663086
    7. 'is' → logprob: -11.295461654663086
    8. ' is' → logprob: -12.045461654663086
    9. '	range' → logprob: -12.170461654663086
    10. '   ' → logprob: -12.545461654663086

Token 162: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2060927003622055
    2. ' in' → logprob: -1.7060927152633667
    3. 'range' → logprob: -5.581092834472656
    4. ',' → logprob: -8.206092834472656
    5. '(range' → logprob: -8.706092834472656
    6. '<|end|>' → logprob: -8.706092834472656
    7. '	range' → logprob: -9.331092834472656
    8. ' xrange' → logprob: -9.581092834472656
    9. ' ' → logprob: -9.956092834472656
    10. 'in' → logprob: -10.331092834472656

Token 163: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6952524185180664
    2. 'count' → logprob: -1.0702524185180664
    3. ' range' → logprob: -1.9452524185180664
    4. ' count' → logprob: -4.195252418518066
    5. ' ' → logprob: -9.945252418518066
    6. 're' → logprob: -10.820252418518066
    7. 'is' → logprob: -10.945252418518066
    8. '	range' → logprob: -12.070252418518066
    9. ' xrange' → logprob: -12.820252418518066
    10. 'reverse' → logprob: -13.195252418518066

Token 164: '(' (ID: 7)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.7676611542701721
    2. 'exp' → logprob: -1.0176610946655273
    3. ' ceil' → logprob: -3.2676610946655273
    4. ' exp' → logprob: -3.6426610946655273
    5. '(exp' → logprob: -3.8926610946655273
    6. '32' → logprob: -3.8926610946655273
    7. '64' → logprob: -4.267661094665527
    8. ' ' → logprob: -4.767661094665527
    9. '(' → logprob: -4.892661094665527
    10. '   ' → logprob: -5.142661094665527

Token 165: '64' (ID: 2220)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.5198349952697754
    2. 'exp' → logprob: -1.7698349952697754
    3. '64' → logprob: -2.3948349952697754
    4. '31' → logprob: -3.3948349952697754
    5. '32' → logprob: -3.8948349952697754
    6. 'L' → logprob: -4.019834995269775
    7. '(' → logprob: -4.394834995269775
    8. '30' → logprob: -4.644834995269775
    9. 'int' → logprob: -4.644834995269775
    10. '63' → logprob: -5.019834995269775

Token 166: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7027302980422974
    2. ')),' → logprob: -0.7027302980422974
    3. ')))' → logprob: -5.827730178833008
    4. '))' → logprob: -5.827730178833008
    5. ',' → logprob: -6.827730178833008
    6. ' ),' → logprob: -7.202730178833008
    7. '))),' → logprob: -7.202730178833008
    8. ')' → logprob: -7.577730178833008
    9. ' ' → logprob: -8.827730178833008
    10. ')),
' → logprob: -9.452730178833008

Token 167: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.09287726134061813
    2. ' lambda' → logprob: -2.717877149581909
    3. '(lambda' → logprob: -3.842877149581909
    4. '=lambda' → logprob: -8.342877388000488
    5. '0' → logprob: -8.967877388000488
    6. '[' → logprob: -8.967877388000488
    7. 'initial' → logprob: -9.092877388000488
    8. '1' → logprob: -9.217877388000488
    9. '2' → logprob: -9.342877388000488
    10. ')' → logprob: -9.717877388000488

Token 168: ' s' (ID: 265)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.33674144744873047
    2. 'x' → logprob: -1.8367414474487305
    3. ' x' → logprob: -2.8367414474487305
    4. 'acc' → logprob: -2.8367414474487305
    5. 'a' → logprob: -5.2117414474487305
    6. 's' → logprob: -6.9617414474487305
    7. '_,' → logprob: -7.2117414474487305
    8. 'e' → logprob: -7.5867414474487305
    9. ' a' → logprob: -7.7117414474487305
    10. ' s' → logprob: -8.21174144744873

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48851585388183594
    2. 's' → logprob: -1.488515853881836
    3. ' s' → logprob: -2.613515853881836
    4. ':' → logprob: -2.738515853881836
    5. ',s' → logprob: -3.988515853881836
    6. ':s' → logprob: -6.113515853881836
    7. ' :' → logprob: -6.863515853881836
    8. ' ,' → logprob: -7.363515853881836
    9. 'a' → logprob: -9.238515853881836
    10. 'x' → logprob: -10.113515853881836

Token 170: ' _:' (ID: 133568)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6155998110771179
    2. 'b' → logprob: -1.1155998706817627
    3. 'i' → logprob: -2.2405998706817627
    4. ' b' → logprob: -4.615599632263184
    5. ' x' → logprob: -5.115599632263184
    6. ' i' → logprob: -5.990599632263184
    7. 's' → logprob: -6.240599632263184
    8. 'bit' → logprob: -6.490599632263184
    9. 'e' → logprob: -6.740599632263184
    10. 'a' → logprob: -7.365599632263184

Token 171: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6799494028091431
    2. '(s' → logprob: -0.9299494028091431
    3. ' (' → logprob: -3.3049492835998535
    4. '(' → logprob: -3.5549492835998535
    5. ' s' → logprob: -3.6799492835998535
    6. '(mat' → logprob: -6.3049492835998535
    7. '((' → logprob: -6.4299492835998535
    8. '2' → logprob: -6.8049492835998535
    9. ' ' → logprob: -7.4299492835998535
    10. '(M' → logprob: -7.6799492835998535

Token 172: '),' (ID: 936)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.310263454914093
    2. '*' → logprob: -2.1852633953094482
    3. ' <<' → logprob: -3.3102633953094482
    4. ' |' → logprob: -3.4352633953094482
    5. '|' → logprob: -3.4352633953094482
    6. ' *' → logprob: -3.6852633953094482
    7. '+' → logprob: -3.9352633953094482
    8. ' +' → logprob: -5.060263633728027
    9. ')' → logprob: -6.685263633728027
    10. ' <<=' → logprob: -8.435263633728027

Token 173: ' identity' (ID: 16696)
  Prédit: 'identity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identity' → logprob: -0.11283912509679794
    2. ' identity' → logprob: -2.2378392219543457
    3. '(identity' → logprob: -11.237838745117188
    4. ' ' → logprob: -14.112838745117188
    5. '.identity' → logprob: -14.362838745117188
    6. '[[' → logprob: -14.737838745117188
    7. '   ' → logprob: -14.862838745117188
    8. '  ' → logprob: -14.987838745117188
    9. '[' → logprob: -15.237838745117188
    10. ' [[' → logprob: -15.362838745117188

Token 174: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -3.054500666621607e-06
    2. 'matrix' → logprob: -13.12500286102295
    3. '(' → logprob: -15.25000286102295
    4. 'Matrix' → logprob: -15.62500286102295
    5. '_MATRIX' → logprob: -15.62500286102295
    6. '_mat' → logprob: -16.125003814697266
    7. ' matrix' → logprob: -16.125003814697266
    8. '(L' → logprob: -16.500003814697266
    9. '_' → logprob: -17.000003814697266
    10. '(n' → logprob: -17.375003814697266

Token 175: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.015058208256959915
    2. '(' → logprob: -4.3900580406188965
    3. '(L' → logprob: -6.6400580406188965
    4. 'len' → logprob: -6.7650580406188965
    5. '4' → logprob: -9.890058517456055
    6. '3' → logprob: -11.640058517456055
    7. '(n' → logprob: -12.390058517456055
    8. 'L' → logprob: -12.390058517456055
    9. '6' → logprob: -12.640058517456055
    10. '[len' → logprob: -12.890058517456055

Token 176: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -2.45848218582978e-06
    2. 'mat' → logprob: -13.50000286102295
    3. '(' → logprob: -14.75000286102295
    4. '	mat' → logprob: -15.25000286102295
    5. ' mat' → logprob: -15.75000286102295
    6. '(a' → logprob: -16.250001907348633
    7. '(ma' → logprob: -17.500001907348633
    8. '(identity' → logprob: -18.000001907348633
    9. '(Mat' → logprob: -18.125001907348633
    10. '(m' → logprob: -18.250001907348633

Token 177: ')))' (ID: 15975)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.00016241880075540394
    2. '))' → logprob: -8.875162124633789
    3. '(a' → logprob: -11.875162124633789
    4. 'mat' → logprob: -12.000162124633789
    5. '(' → logprob: -12.000162124633789
    6. ' mat' → logprob: -14.125162124633789
    7. '[' → logprob: -14.500162124633789
    8. ')))' → logprob: -14.500162124633789
    9. ')' → logprob: -14.500162124633789
    10. '	mat' → logprob: -15.375162124633789

Token 178: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27788856625556946
    2. '<|end|>' → logprob: -2.402888536453247
    3. ')' → logprob: -2.652888536453247
    4. '[' → logprob: -4.277888774871826
    5. '(
' → logprob: -4.277888774871826
    6. '(lambda' → logprob: -4.652888774871826
    7. '(exp' → logprob: -4.652888774871826
    8. ':' → logprob: -4.902888774871826
    9. ' ' → logprob: -5.152888774871826
    10. ' (' → logprob: -5.277888774871826

Token 179: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.38719743490219116
    2. 'exp' → logprob: -1.137197494506836
    3. 'False' → logprob: -9.137197494506836
    4. ' False' → logprob: -9.262197494506836
    5. ' ' → logprob: -10.387197494506836
    6. '(exp' → logprob: -10.512197494506836
    7. '	exp' → logprob: -11.262197494506836
    8. ' True' → logprob: -11.637197494506836
    9. 'True' → logprob: -11.637197494506836
    10. '0' → logprob: -11.637197494506836

Token 180: ' else' (ID: 1203)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4323502779006958
    2. ' >' → logprob: -1.0573502779006958
    3. 'else' → logprob: -6.307350158691406
    4. ' else' → logprob: -6.432350158691406
    5. '!=' → logprob: -9.307350158691406
    6. ' !=' → logprob: -9.557350158691406
    7. '>=' → logprob: -11.182350158691406
    8. '==' → logprob: -11.432350158691406
    9. ' >=' → logprob: -11.682350158691406
    10. ' ==' → logprob: -12.307350158691406

Token 181: ' identity' (ID: 16696)
  Prédit: 'identity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identity' → logprob: -0.003178306156769395
    2. ' identity' → logprob: -5.753178119659424
    3. '(identity' → logprob: -15.003178596496582
    4. '   ' → logprob: -15.753178596496582
    5. ' ' → logprob: -17.378177642822266
    6. '  ' → logprob: -17.503177642822266
    7. '.identity' → logprob: -18.378177642822266
    8. 'ident' → logprob: -18.878177642822266
    9. 'Identity' → logprob: -19.128177642822266
    10. '    ' → logprob: -19.503177642822266

Token 182: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.0012194052105769515
    2. '_identity' → logprob: -7.126219272613525
    3. '_token' → logprob: -8.626219749450684
    4. '_' → logprob: -9.251219749450684
    5. 'identity' → logprob: -9.626219749450684
    6. '<|end|>' → logprob: -10.501219749450684
    7. 'matrix' → logprob: -11.001219749450684
    8. '_space' → logprob: -12.501219749450684
    9. '_vector' → logprob: -12.501219749450684
    10. 'Matrix' → logprob: -12.751219749450684

Token 183: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -6.051066520740278e-05
    2. 'len' → logprob: -9.750060081481934
    3. '(L' → logprob: -13.375060081481934
    4. '(' → logprob: -14.500060081481934
    5. ' len' → logprob: -16.75006103515625
    6. '[len' → logprob: -17.00006103515625
    7. '<len' → logprob: -17.87506103515625
    8. '(l' → logprob: -19.50006103515625
    9. '=len' → logprob: -19.62506103515625
    10. '```' → logprob: -19.75006103515625

Token 184: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -9.610702363715973e-06
    2. 'mat' → logprob: -11.875009536743164
    3. '(' → logprob: -13.250009536743164
    4. '	mat' → logprob: -14.625009536743164
    5. ' mat' → logprob: -15.375009536743164
    6. '(m' → logprob: -17.625009536743164
    7. '(matrix' → logprob: -17.625009536743164
    8. '(
' → logprob: -18.000009536743164
    9. '.mat' → logprob: -18.125009536743164
    10. '(ma' → logprob: -18.125009536743164

Token 185: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003346314188092947
    2. ')))' → logprob: -8.500334739685059
    3. ')' → logprob: -9.250334739685059
    4. '))
' → logprob: -11.250334739685059
    5. '[' → logprob: -11.500334739685059
    6. '()))' → logprob: -12.125334739685059
    7. ' ))' → logprob: -13.875334739685059
    8. '(' → logprob: -14.125334739685059
    9. '));' → logprob: -14.250334739685059
    10. '))-' → logprob: -14.625334739685059

Token 186: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6240097880363464
    2. '<|end|>' → logprob: -0.9990097880363464
    3. '(' → logprob: -3.124009847640991
    4. ' (' → logprob: -4.374009609222412
    5. '[' → logprob: -4.624009609222412
    6. ')' → logprob: -4.749009609222412
    7. 'def' → logprob: -5.124009609222412
    8. ' )' → logprob: -5.999009609222412
    9. '  ' → logprob: -6.374009609222412
    10. ' L' → logprob: -6.874009609222412

Token 187: ' magic' (ID: 19745)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mat' → logprob: -1.4914623498916626
    2. ' main' → logprob: -1.8664623498916626
    3. 'mat' → logprob: -1.8664623498916626
    4. ' fib' → logprob: -1.9914623498916626
    5. 'main' → logprob: -2.491462230682373
    6. 'fib' → logprob: -2.491462230682373
    7. 'pow' → logprob: -3.491462230682373
    8. ' solve' → logprob: -3.741462230682373
    9. 'solve' → logprob: -3.866462230682373
    10. ' matrix' → logprob: -4.116462230682373

Token 188: '_floor' (ID: 152330)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6742755174636841
    2. '(L' → logprob: -1.549275517463684
    3. '_matrix' → logprob: -2.2992753982543945
    4. '(n' → logprob: -2.4242753982543945
    5. '_number' → logprob: -3.0492753982543945
    6. '(N' → logprob: -5.0492753982543945
    7. '(A' → logprob: -5.4242753982543945
    8. '_sequence' → logprob: -5.5492753982543945
    9. '_power' → logprob: -5.5492753982543945
    10. ':' → logprob: -6.0492753982543945

Token 189: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5053833723068237
    2. '(x' → logprob: -1.1303833723068237
    3. '(' → logprob: -3.3803834915161133
    4. '(L' → logprob: -4.005383491516113
    5. '(s' → logprob: -4.755383491516113
    6. '(a' → logprob: -5.130383491516113
    7. '(k' → logprob: -6.130383491516113
    8. '(A' → logprob: -7.130383491516113
    9. '(num' → logprob: -7.130383491516113
    10. '(value' → logprob: -7.255383491516113

Token 190: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2547662556171417
    2. ',' → logprob: -1.5047662258148193
    3. ':' → logprob: -6.254766464233398
    4. '):
' → logprob: -7.379766464233398
    5. ')' → logprob: -9.129766464233398
    6. 's' → logprob: -10.504766464233398
    7. ' ):' → logprob: -10.504766464233398
    8. '):
' → logprob: -10.879766464233398
    9. '=' → logprob: -11.129766464233398
    10. ' ,' → logprob: -11.379766464233398

Token 191: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5721136927604675
    2. ' y' → logprob: -1.6971137523651123
    3. 'L' → logprob: -1.9471137523651123
    4. ' L' → logprob: -3.5721137523651123
    5. 'n' → logprob: -4.072113513946533
    6. 'M' → logprob: -4.322113513946533
    7. '1' → logprob: -5.072113513946533
    8. ' n' → logprob: -5.072113513946533
    9. ' M' → logprob: -5.197113513946533
    10. 'k' → logprob: -5.197113513946533

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003005464968737215
    2. '):
' → logprob: -8.375300407409668
    3. ',' → logprob: -9.875300407409668
    4. ')' → logprob: -11.750300407409668
    5. ':' → logprob: -12.000300407409668
    6. ' ):' → logprob: -12.875300407409668
    7. '):
' → logprob: -13.750300407409668
    8. '=' → logprob: -14.875300407409668
    9. '}:' → logprob: -15.625300407409668
    10. '):

' → logprob: -16.375301361083984

Token 193: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7447810769081116
    2. '   ' → logprob: -0.8697810769081116
    3. ' return' → logprob: -2.244781017303467
    4. ':
' → logprob: -10.119781494140625
    5. '	return' → logprob: -10.244781494140625
    6. ':return' → logprob: -10.744781494140625
    7. 'x' → logprob: -11.244781494140625
    8. 'if' → logprob: -11.244781494140625
    9. ' ' → logprob: -11.494781494140625
    10. ':' → logprob: -12.119781494140625

Token 194: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19856946170330048
    2. 'x' → logprob: -2.3235695362091064
    3. 'if' → logprob: -2.9485695362091064
    4. '(x' → logprob: -3.8235695362091064
    5. ' return' → logprob: -5.198569297790527
    6. 'q' → logprob: -7.948569297790527
    7. '(y' → logprob: -8.073569297790527
    8. '0' → logprob: -8.323569297790527
    9. 'def' → logprob: -8.323569297790527
    10. 'while' → logprob: -8.573569297790527

Token 195: ' -(' (ID: 66319)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.43390658497810364
    2. 'x' → logprob: -1.0589065551757812
    3. ' (' → logprob: -6.058906555175781
    4. '(' → logprob: -6.933906555175781
    5. ' x' → logprob: -7.433906555175781
    6. '((' → logprob: -7.683906555175781
    7. '(y' → logprob: -7.683906555175781
    8. 'ceil' → logprob: -9.308906555175781
    9. 'y' → logprob: -10.058906555175781
    10. 'floor' → logprob: -10.308906555175781

Token 196: 'x' (ID: 87)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.39949551224708557
    2. '-' → logprob: -1.2744954824447632
    3. '-x' → logprob: -3.8994956016540527
    4. '-(' → logprob: -4.524495601654053
    5. '-y' → logprob: -5.149495601654053
    6. '((-' → logprob: -5.399495601654053
    7. '(-(' → logprob: -5.524495601654053
    8. '(' → logprob: -6.399495601654053
    9. 'x' → logprob: -6.649495601654053
    10. '((' → logprob: -7.524495601654053

Token 197: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02641257271170616
    2. ' //' → logprob: -3.6514124870300293
    3. ')' → logprob: -10.276412963867188
    4. '#' → logprob: -10.401412963867188
    5. ' ' → logprob: -11.276412963867188
    6. '-' → logprob: -11.401412963867188
    7. ')//' → logprob: -11.901412963867188
    8. 'x' → logprob: -12.776412963867188
    9. 'y' → logprob: -12.901412963867188
    10. '   ' → logprob: -13.151412963867188

Token 198: '-' (ID: 12)
  Prédit: '-y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.08440877497196198
    2. 'y' → logprob: -2.834408760070801
    3. '-' → logprob: -4.459408760070801
    4. '(-' → logprob: -5.084408760070801
    5. ' -' → logprob: -5.459408760070801
    6. ' y' → logprob: -9.8344087600708
    7. ' ' → logprob: -10.7094087600708
    8. '-(' → logprob: -10.8344087600708
    9. ' (-' → logprob: -11.0844087600708
    10. '((-' → logprob: -11.0844087600708

Token 199: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.15310683415737e-05
    2. ' y' → logprob: -10.750021934509277
    3. 'x' → logprob: -19.37502098083496
    4. '	y' → logprob: -20.75002098083496
    5. ' ' → logprob: -20.87502098083496
    6. '(y' → logprob: -21.75002098083496
    7. '   ' → logprob: -22.00002098083496
    8. ',y' → logprob: -22.12502098083496
    9. ')y' → logprob: -22.37502098083496
    10. '<|end|>' → logprob: -23.00002098083496

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')x' → logprob: -15.250001907348633
    4. ')
' → logprob: -15.375001907348633
    5. '))' → logprob: -16.375001907348633
    6. ')#' → logprob: -16.500001907348633
    7. ')}' → logprob: -16.750001907348633
    8. ')}}' → logprob: -17.125001907348633
    9. '<|end|>' → logprob: -17.125001907348633
    10. '}' → logprob: -17.250001907348633

Token 201: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.703744113445282
    2. 'def' → logprob: -1.0787441730499268
    3. ')' → logprob: -2.4537441730499268
    4. '#' → logprob: -3.5787441730499268
    5. '(
' → logprob: -5.078743934631348
    6. '<|end|>' → logprob: -5.078743934631348
    7. '
' → logprob: -5.203743934631348
    8. 'x' → logprob: -5.203743934631348
    9. '=' → logprob: -5.328743934631348
    10. '\n' → logprob: -5.828743934631348

Token 202: ' digits' (ID: 37806)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.9467941522598267
    2. 'main' → logprob: -1.6967941522598267
    3. 'ceil' → logprob: -1.8217941522598267
    4. 'magic' → logprob: -3.321794033050537
    5. 'count' → logprob: -3.696794033050537
    6. 'floor' → logprob: -3.821794033050537
    7. ' solve' → logprob: -3.821794033050537
    8. ' main' → logprob: -4.071794033050537
    9. ' ceil' → logprob: -4.071794033050537
    10. 'mod' → logprob: -4.571794033050537

Token 203: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.046784427016973495
    2. '(x' → logprob: -3.4217844009399414
    3. '(' → logprob: -4.546784400939941
    4. '(num' → logprob: -7.171784400939941
    5. ' (' → logprob: -7.296784400939941
    6. '(s' → logprob: -8.421784400939941
    7. '(number' → logprob: -8.421784400939941
    8. '(N' → logprob: -8.921784400939941
    9. '(length' → logprob: -9.546784400939941
    10. '(k' → logprob: -9.921784400939941

Token 204: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02028142660856247
    2. '):
' → logprob: -4.2702813148498535
    3. ',' → logprob: -5.1452813148498535
    4. ')' → logprob: -9.145281791687012
    5. '(n' → logprob: -9.520281791687012
    6. ' ):' → logprob: -9.770281791687012
    7. ',n' → logprob: -11.270281791687012
    8. ':' → logprob: -12.645281791687012
    9. '):
' → logprob: -12.645281791687012
    10. '=' → logprob: -12.645281791687012

Token 205: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0193005800247192
    2. ' return' → logprob: -1.0193005800247192
    3. ' while' → logprob: -1.7693005800247192
    4. 'while' → logprob: -2.6443004608154297
    5. 'return' → logprob: -3.5193004608154297
    6. ' yield' → logprob: -6.26930046081543
    7. 'def' → logprob: -6.51930046081543
    8. 'yield' → logprob: -6.64430046081543
    9. ' def' → logprob: -7.26930046081543
    10. ' [' → logprob: -8.26930046081543

Token 206: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8742569088935852
    2. '   ' → logprob: -1.6242568492889404
    3. 'return' → logprob: -1.7492568492889404
    4. ' while' → logprob: -2.2492568492889404
    5. ' return' → logprob: -2.3742568492889404
    6. 'yield' → logprob: -4.7492570877075195
    7. 'if' → logprob: -6.7492570877075195
    8. ' yield' → logprob: -7.1242570877075195
    9. 'def' → logprob: -7.6242570877075195
    10. ' if' → logprob: -7.7492570877075195

Token 207: ' This' (ID: 1328)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2778571546077728
    2. 'while' → logprob: -1.5278571844100952
    3. 'def' → logprob: -4.152857303619385
    4. ' return' → logprob: -5.777857303619385
    5. 'yield' → logprob: -6.527857303619385
    6. 'map' → logprob: -6.652857303619385
    7. ' while' → logprob: -7.027857303619385
    8. 'from' → logprob: -7.152857303619385
    9. '   ' → logprob: -7.902857303619385
    10. 'lambda' → logprob: -8.277856826782227

Token 208: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.678252100944519
    2. 'returns' → logprob: -1.678252100944519
    3. ':' → logprob: -2.3032522201538086
    4. 'return' → logprob: -2.6782522201538086
    5. ' returns' → logprob: -2.9282522201538086
    6. ':return' → logprob: -4.053252220153809
    7. 'is' → logprob: -4.553252220153809
    8. 'contin' → logprob: -5.053252220153809
    9. ' yields' → logprob: -5.303252220153809
    10. '=' → logprob: -5.428252220153809

Token 209: ' not' (ID: 625)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.11202190816402435
    2. 'def' → logprob: -2.8620219230651855
    3. '(lambda' → logprob: -3.3620219230651855
    4. 'a' → logprob: -5.7370219230651855
    5. 'is' → logprob: -6.1120219230651855
    6. 'not' → logprob: -6.4870219230651855
    7. 'list' → logprob: -6.4870219230651855
    8. ' lambda' → logprob: -6.7370219230651855
    9. 'iter' → logprob: -7.3620219230651855
    10. 'digits' → logprob: -7.3620219230651855

Token 210: ' used' (ID: 2061)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5225894451141357
    2. 'def' → logprob: -1.8975894451141357
    3. 'complete' → logprob: -2.2725894451141357
    4. 'the' → logprob: -2.8975894451141357
    5. 'used' → logprob: -3.0225894451141357
    6. 'implemented' → logprob: -4.647589683532715
    7. 'an' → logprob: -5.397589683532715
    8. ' a' → logprob: -5.897589683532715
    9. 'len' → logprob: -5.897589683532715
    10. 'needed' → logprob: -6.147589683532715

Token 211: ' here' (ID: 2105)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014864679425954819
    2. 'def' → logprob: -4.889864444732666
    3. '(' → logprob: -6.139864444732666
    4. ':' → logprob: -6.639864444732666
    5. ',' → logprob: -6.889864444732666
    6. '.' → logprob: -7.264864444732666
    7. '(
' → logprob: -7.514864444732666
    8. '<|end|>' → logprob: -7.639864444732666
    9. ':
' → logprob: -8.139864921569824
    10. ' def' → logprob: -8.889864921569824

Token 212: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28760021924972534
    2. ':' → logprob: -2.03760027885437
    3. ',' → logprob: -2.91260027885437
    4. '<|end|>' → logprob: -4.037600040435791
    5. 'def' → logprob: -4.287600040435791
    6. '.' → logprob: -4.412600040435791
    7. ':
' → logprob: -5.037600040435791
    8. '(' → logprob: -5.412600040435791
    9. '<|end|>' → logprob: -6.037600040435791
    10. ' but' → logprob: -6.037600040435791

Token 213: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.2825580835342407
    2. 'def' → logprob: -1.6575580835342407
    3. ' def' → logprob: -3.657557964324951
    4. 'but' → logprob: -4.282557964324951
    5. ' pass' → logprob: -5.532557964324951
    6. 'pass' → logprob: -6.032557964324951
    7. 'n' → logprob: -6.282557964324951
    8. ' return' → logprob: -6.407557964324951
    9. 'return' → logprob: -6.657557964324951
    10. ' n' → logprob: -6.657557964324951

Token 214: ' fits' (ID: 23440)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009585258550941944
    2. 'pass' → logprob: -4.759585380554199
    3. ' def' → logprob: -9.0095853805542
    4. 'is' → logprob: -9.0095853805542
    5. 'could' → logprob: -9.0095853805542
    6. ' is' → logprob: -9.2595853805542
    7. '...' → logprob: -9.3845853805542
    8. '   ' → logprob: -9.6345853805542
    9. ' could' → logprob: -9.8845853805542
    10. 'it' → logprob: -9.8845853805542

Token 215: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6297715902328491
    2. '<|end|>' → logprob: -2.1297717094421387
    3. 'with' → logprob: -2.7547717094421387
    4. 'in' → logprob: -2.7547717094421387
    5. '(n' → logprob: -2.7547717094421387
    6. 'def' → logprob: -2.8797717094421387
    7. 'for' → logprob: -3.5047717094421387
    8. ' the' → logprob: -3.6297717094421387
    9. 'into' → logprob: -4.879771709442139
    10. '[n' → logprob: -5.004771709442139

Token 216: ' style' (ID: 2713)
  Prédit: 'context'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.6325759887695312
    2. 'description' → logprob: -2.3825759887695312
    3. 'common' → logprob: -2.5075759887695312
    4. 'pattern' → logprob: -2.7575759887695312
    5. 'problem' → logprob: -2.8825759887695312
    6. 'purpose' → logprob: -2.8825759887695312
    7. 'code' → logprob: -3.6325759887695312
    8. 'int' → logprob: -4.507575988769531
    9. 'usual' → logprob: -5.132575988769531
    10. 'signature' → logprob: -5.382575988769531

Token 217: '.
' (ID: 558)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14907324314117432
    2. 'def' → logprob: -3.1490731239318848
    3. ':' → logprob: -3.7740731239318848
    4. '(' → logprob: -3.7740731239318848
    5. '   ' → logprob: -4.024073123931885
    6. ':
' → logprob: -4.399073123931885
    7. ',' → logprob: -5.149073123931885
    8. '(
' → logprob: -5.649073123931885
    9. '
' → logprob: -5.774073123931885
    10. '<|end|>' → logprob: -6.524073123931885

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001832015230320394
    2. 'def' → logprob: -6.626832008361816
    3. ' return' → logprob: -8.001832008361816
    4. ' def' → logprob: -9.001832008361816
    5. 'return' → logprob: -10.501832008361816
    6. ' for' → logprob: -12.001832008361816
    7. ' while' → logprob: -13.126832008361816
    8. ' yield' → logprob: -13.251832008361816
    9. 'yield' → logprob: -13.251832008361816
    10. 'n' → logprob: -13.376832008361816

Token 219: ' return' (ID: 622)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.587444543838501
    2. 'return' (adapté à ' return') → logprob: -1.087444543838501
    3. ' while' → logprob: -2.837444543838501
    4. ' return' → logprob: -3.212444543838501
    5. 'def' → logprob: -5.462444305419922
    6. 's' → logprob: -6.712444305419922
    7. 'yield' → logprob: -6.837444305419922
    8. '   ' → logprob: -7.587444305419922
    9. 'res' → logprob: -7.962444305419922
    10. 'for' → logprob: -8.087444305419922

Token 220: ' len' (ID: 4631)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.173773854970932
    2. 'map' → logprob: -3.673773765563965
    3. '[n' → logprob: -3.798773765563965
    4. '[len' → logprob: -3.798773765563965
    5. '[]' → logprob: -3.923773765563965
    6. '[str' → logprob: -3.923773765563965
    7. ' list' → logprob: -4.173773765563965
    8. '[int' → logprob: -4.673773765563965
    9. 'len' → logprob: -5.048773765563965
    10. 'str' → logprob: -5.423773765563965

Token 221: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00011510594777064398
    2. '(' → logprob: -9.500115394592285
    3. 'str' → logprob: -10.125115394592285
    4. '(f' → logprob: -17.00011444091797
    5. '[str' → logprob: -17.37511444091797
    6. '```' → logprob: -17.50011444091797
    7. '(list' → logprob: -17.62511444091797
    8. '(s' → logprob: -17.75011444091797
    9. '(`' → logprob: -17.87511444091797
    10. ' str' → logprob: -18.00011444091797

Token 222: '(abs' (ID: 71957)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016229959146585315
    2. 'n' → logprob: -9.250162124633789
    3. '(abs' → logprob: -10.000162124633789
    4. '(' → logprob: -11.000162124633789
    5. 'abs' → logprob: -12.750162124633789
    6. ')n' → logprob: -14.875162124633789
    7. ' (' → logprob: -15.500162124633789
    8. ')' → logprob: -15.750162124633789
    9. ' n' → logprob: -16.37516212463379
    10. '(int' → logprob: -16.50016212463379

Token 223: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.070975071750581e-05
    2. 'n' → logprob: -10.500030517578125
    3. '(' → logprob: -12.750030517578125
    4. '(int' → logprob: -15.875030517578125
    5. 'int' → logprob: -16.875030517578125
    6. '(
' → logprob: -18.750030517578125
    7. ')n' → logprob: -19.000030517578125
    8. '((' → logprob: -19.500030517578125
    9. ' n' → logprob: -19.625030517578125
    10. '	n' → logprob: -19.875030517578125

Token 224: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0008779930067248642
    2. '))' → logprob: -7.250877857208252
    3. '())))' → logprob: -9.12587833404541
    4. ')' → logprob: -10.75087833404541
    5. '))))' → logprob: -11.12587833404541
    6. ' ' → logprob: -11.37587833404541
    7. ')))
' → logprob: -12.50087833404541
    8. '()' → logprob: -13.37587833404541
    9. ')));' → logprob: -13.62587833404541
    10. ')))

' → logprob: -14.12587833404541

Token 225: 'gen' (ID: 2468)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5652344822883606
    2. '<|end|>' → logprob: -1.6902344226837158
    3. ')' → logprob: -1.9402344226837158
    4. '[' → logprob: -3.940234422683716
    5. '#' → logprob: -4.065234661102295
    6. '...' → logprob: -4.440234661102295
    7. '```' → logprob: -4.690234661102295
    8. '(' → logprob: -4.815234661102295
    9. ' ' → logprob: -4.815234661102295
    10. ':' → logprob: -5.065234661102295

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.565445601940155
    2. 'er' → logprob: -1.1904456615447998
    3. '=' → logprob: -2.3154456615448
    4. '=lambda' → logprob: -4.315445423126221
    5. 'ERATOR' → logprob: -5.565445423126221
    6. 'eral' → logprob: -5.815445423126221
    7. '_' → logprob: -5.940445423126221
    8. '=L' → logprob: -6.315445423126221
    9. 'def' → logprob: -7.315445423126221
    10. '_=' → logprob: -8.315445899963379

Token 227: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5074160695075989
    2. '(count' → logprob: -1.382416009902954
    3. '(is' → logprob: -3.007416009902954
    4. '(i' → logprob: -3.632416009902954
    5. 'chain' → logprob: -3.757416009902954
    6. '(chain' → logprob: -4.382416248321533
    7. 'is' → logprob: -4.632416248321533
    8. '(lambda' → logprob: -4.632416248321533
    9. '(range' → logprob: -5.757416248321533
    10. '(x' → logprob: -5.757416248321533

Token 228: 'magic' (ID: 82292)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7621862888336182
    2. 'i' → logprob: -1.1371862888336182
    3. 'x' → logprob: -2.387186288833618
    4. '(x' → logprob: -3.012186288833618
    5. '(' → logprob: -4.387186050415039
    6. 'range' → logprob: -5.012186050415039
    7. 'n' → logprob: -5.262186050415039
    8. '(n' → logprob: -5.262186050415039
    9. '(L' → logprob: -5.512186050415039
    10. '[i' → logprob: -5.637186050415039

Token 229: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -2.6656825866666622e-05
    2. 'floor' → logprob: -10.62502670288086
    3. '_' → logprob: -13.62502670288086
    4. 'Floor' → logprob: -15.37502670288086
    5. '(x' → logprob: -15.62502670288086
    6. ' floor' → logprob: -16.25002670288086
    7. '(' → logprob: -16.37502670288086
    8. '_f' → logprob: -16.50002670288086
    9. '   ' → logprob: -16.87502670288086
    10. '
' → logprob: -17.00002670288086

Token 230: '(' (ID: 7)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.5540058612823486
    2. '(A' → logprob: -1.0540058612823486
    3. '(B' → logprob: -3.3040058612823486
    4. '((' → logprob: -3.4290058612823486
    5. '(' → logprob: -5.0540056228637695
    6. '(i' → logprob: -8.05400562286377
    7. '(a' → logprob: -8.42900562286377
    8. '(x' → logprob: -8.67900562286377
    9. '(-' → logprob: -8.80400562286377
    10. '(((' → logprob: -9.80400562286377

Token 231: '10' (ID: 702)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.41556230187416077
    2. 'A' → logprob: -1.2905622720718384
    3. 'B' → logprob: -3.040562391281128
    4. '(L' → logprob: -5.040562152862549
    5. '(A' → logprob: -6.290562152862549
    6. '(B' → logprob: -6.415562152862549
    7. 'i' → logprob: -6.540562152862549
    8. '(' → logprob: -6.540562152862549
    9. 'x' → logprob: -7.040562152862549
    10. ' L' → logprob: -7.665562152862549

Token 232: '**' (ID: 410)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34114834666252136
    2. '**' → logprob: -1.8411483764648438
    3. 'L' → logprob: -3.2161483764648438
    4. ' ,' → logprob: -3.3411483764648438
    5. ',L' → logprob: -3.3411483764648438
    6. '(L' → logprob: -5.466148376464844
    7. 'A' → logprob: -5.591148376464844
    8. ' **' → logprob: -5.966148376464844
    9. ',A' → logprob: -5.966148376464844
    10. ',B' → logprob: -6.216148376464844

Token 233: 'd' (ID: 67)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.320875883102417
    2. '(L' → logprob: -2.070875883102417
    3. 'A' → logprob: -2.570875883102417
    4. '(' → logprob: -3.570875883102417
    5. '(A' → logprob: -3.820875883102417
    6. 'i' → logprob: -5.695876121520996
    7. '18' → logprob: -5.695876121520996
    8. '(B' → logprob: -5.820876121520996
    9. '9' → logprob: -6.070876121520996
    10. '(i' → logprob: -6.570876121520996

Token 234: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12744446098804474
    2. ',d' → logprob: -2.3774445056915283
    3. ' ,' → logprob: -4.377444267272949
    4. '(d' → logprob: -4.752444267272949
    5. '(' → logprob: -6.127444267272949
    6. 'd' → logprob: -6.252444267272949
    7. ',-' → logprob: -8.12744426727295
    8. '-' → logprob: -8.25244426727295
    9. '(-' → logprob: -9.00244426727295
    10. ',L' → logprob: -9.12744426727295

Token 235: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5862808227539062
    2. 'L' → logprob: -0.9612808227539062
    3. 'A' → logprob: -3.0862808227539062
    4. '(L' → logprob: -4.961280822753906
    5. 'B' → logprob: -5.711280822753906
    6. '(' → logprob: -5.961280822753906
    7. '(A' → logprob: -7.711280822753906
    8. '10' → logprob: -7.836280822753906
    9. '((' → logprob: -7.961280822753906
    10. 'd' → logprob: -7.961280822753906

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01189657486975193
    2. ' ,' → logprob: -4.51189661026001
    3. '+' → logprob: -8.511896133422852
    4. ',d' → logprob: -8.636896133422852
    5. 'd' → logprob: -9.386896133422852
    6. '*' → logprob: -9.511896133422852
    7. ' +' → logprob: -9.636896133422852
    8. '10' → logprob: -9.636896133422852
    9. '),' → logprob: -10.511896133422852
    10. '1' → logprob: -10.886896133422852

Token 237: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004988962784409523
    2. ' B' → logprob: -5.504989147186279
    3. '10' → logprob: -7.254989147186279
    4. '   ' → logprob: -9.879988670349121
    5. 'L' → logprob: -10.254988670349121
    6. '9' → logprob: -10.629988670349121
    7. '1' → logprob: -11.254988670349121
    8. ' ' → logprob: -11.254988670349121
    9. '2' → logprob: -12.004988670349121
    10. '    ' → logprob: -12.254988670349121

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4753090441226959
    2. ',' → logprob: -0.9753090143203735
    3. ',d' → logprob: -7.725308895111084
    4. ' ' → logprob: -9.100309371948242
    5. 'for' → logprob: -9.225309371948242
    6. 'd' → logprob: -9.350309371948242
    7. ' ,' → logprob: -9.475309371948242
    8. ' )' → logprob: -9.600309371948242
    9. ' for' → logprob: -9.725309371948242
    10. '))' → logprob: -9.975309371948242

Token 239: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38757720589637756
    2. 'for' → logprob: -1.1375771760940552
    3. ' d' → logprob: -8.012577056884766
    4. 'd' → logprob: -8.387577056884766
    5. '   ' → logprob: -9.512577056884766
    6. ')' → logprob: -10.387577056884766
    7. ' ' → logprob: -11.262577056884766
    8. '    ' → logprob: -11.637577056884766
    9. '  ' → logprob: -12.012577056884766
    10. '	for' → logprob: -12.387577056884766

Token 240: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38688531517982483
    2. ' d' → logprob: -1.1368852853775024
    3. '	d' → logprob: -11.636885643005371
    4. ')d' → logprob: -12.511885643005371
    5. ' ' → logprob: -14.886885643005371
    6. '_d' → logprob: -14.886885643005371
    7. ' ' → logprob: -14.886885643005371
    8. ')' → logprob: -15.511885643005371
    9. '
' → logprob: -16.136884689331055
    10. '_' → logprob: -16.136884689331055

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08914469927549362
    2. 'in' → logprob: -2.464144706726074
    3. ')' → logprob: -8.714144706726074
    4. 'd' → logprob: -11.089144706726074
    5. ' ' → logprob: -11.589144706726074
    6. '=' → logprob: -12.589144706726074
    7. ' )' → logprob: -12.839144706726074
    8. '<|end|>' → logprob: -13.464144706726074
    9. ',' → logprob: -13.714144706726074
    10. 'n' → logprob: -13.964144706726074

Token 242: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1624470204114914
    2. 'range' → logprob: -1.9124469757080078
    3. ' range' → logprob: -6.662446975708008
    4. ' count' → logprob: -7.037446975708008
    5. 'chain' → logprob: -10.287446975708008
    6. 'it' → logprob: -11.162446975708008
    7. 'iter' → logprob: -11.787446975708008
    8. '(count' → logprob: -13.537446975708008
    9. 'is' → logprob: -13.787446975708008
    10. 'filter' → logprob: -14.537446975708008

Token 243: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18038859963417053
    2. '())' → logprob: -1.8053885698318481
    3. '()' → logprob: -7.680388450622559
    4. '0' → logprob: -10.180388450622559
    5. '=' → logprob: -10.305388450622559
    6. ')' → logprob: -10.680388450622559
    7. '1' → logprob: -11.055388450622559
    8. '()(' → logprob: -11.805388450622559
    9. '();)' → logprob: -11.930388450622559
    10. '(
' → logprob: -12.305388450622559

Token 244: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020876195281744003
    2. '0' → logprob: -4.020876407623291
    3. '(' → logprob: -6.020876407623291
    4. '))' → logprob: -9.145875930786133
    5. '2' → logprob: -10.020875930786133
    6. ')' → logprob: -10.020875930786133
    7. '())' → logprob: -10.020875930786133
    8. '()))' → logprob: -10.520875930786133
    9. '()' → logprob: -12.145875930786133
    10. 'start' → logprob: -12.520875930786133

Token 245: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04977615550160408
    2. ')' → logprob: -3.049776077270508
    3. ',' → logprob: -7.549776077270508
    4. '+' → logprob: -7.799776077270508
    5. '):' → logprob: -9.674776077270508
    6. '()))' → logprob: -9.924776077270508
    7. ' ))' → logprob: -10.674776077270508
    8. ')))' → logprob: -10.924776077270508
    9. '1' → logprob: -11.174776077270508
    10. ')+' → logprob: -11.674776077270508

Token 246: 'ranges' (ID: 175054)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5295173525810242
    2. 'next' → logprob: -1.529517412185669
    3. 'for' → logprob: -3.154517412185669
    4. 'take' → logprob: -3.279517412185669
    5. 'print' → logprob: -3.904517412185669
    6. ' for' → logprob: -4.65451717376709
    7. ',' → logprob: -4.77951717376709
    8. '...' → logprob: -5.02951717376709
    9. 'd' → logprob: -5.27951717376709
    10. '10' → logprob: -5.27951717376709

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22559738159179688
    2. ' =' → logprob: -1.6005973815917969
    3. '_' → logprob: -9.225597381591797
    4. ',' → logprob: -9.725597381591797
    5. '_=' → logprob: -11.850597381591797
    6. 's' → logprob: -11.975597381591797
    7. '_ranges' → logprob: -12.225597381591797
    8. '=
' → logprob: -13.600597381591797
    9. '=

' → logprob: -13.600597381591797
    10. ' =
' → logprob: -14.100597381591797

Token 248: ' list' (ID: 1562)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.4105561673641205
    2. 'list' → logprob: -1.2855561971664429
    3. '(t' → logprob: -3.5355560779571533
    4. ' take' → logprob: -4.910556316375732
    5. '[t' → logprob: -5.160556316375732
    6. ' list' → logprob: -5.160556316375732
    7. '(list' → logprob: -5.660556316375732
    8. 'tuple' → logprob: -6.160556316375732
    9. 'is' → logprob: -6.535556316375732
    10. '[]' → logprob: -6.785556316375732

Token 249: '(is' (ID: 16171)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.12698239088058472
    2. '(is' → logprob: -2.1269824504852295
    3. '(' → logprob: -10.001982688903809
    4. '(
' → logprob: -12.751982688903809
    5. 'is' → logprob: -13.376982688903809
    6. '(acc' → logprob: -13.501982688903809
    7. 'take' → logprob: -14.251982688903809
    8. '	t' → logprob: -14.376982688903809
    9. '((' → logprob: -14.876982688903809
    10. '(gen' → logprob: -15.251982688903809

Token 250: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.0003995680599473417
    2. 'slice' → logprob: -7.875399589538574
    3. 'take' → logprob: -11.250399589538574
    4. 'ice' → logprob: -13.375399589538574
    5. 'liced' → logprob: -14.500399589538574
    6. '_slice' → logprob: -14.500399589538574
    7. 'lices' → logprob: -14.500399589538574
    8. '(' → logprob: -14.625399589538574
    9. 'lic' → logprob: -14.625399589538574
    10. 'chain' → logprob: -15.125399589538574

Token 251: '(gen' (ID: 80178)
  Prédit: '(gen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -1.4974866644479334e-05
    2. '(' → logprob: -11.750015258789062
    3. 'gen' → logprob: -12.500015258789062
    4. '(
' → logprob: -13.250015258789062
    5. '(lambda' → logprob: -14.375015258789062
    6. '	gen' → logprob: -15.125015258789062
    7. '(t' → logprob: -15.625015258789062
    8. ' (' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.750015258789062
    10. ')' → logprob: -17.125015258789062

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08013059943914413
    2. '(' → logprob: -2.5801305770874023
    3. ' ,' → logprob: -7.330130577087402
    4. '(lambda' → logprob: -7.955130577087402
    5. '(L' → logprob: -9.205130577087402
    6. 'while' → logprob: -10.580130577087402
    7. ' (' → logprob: -10.830130577087402
    8. ',
' → logprob: -11.455130577087402
    9. ',L' → logprob: -11.455130577087402
    10. '(len' → logprob: -12.080130577087402

Token 253: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8984265923500061
    2. '1' → logprob: -1.7734265327453613
    3. 'digits' → logprob: -1.7734265327453613
    4. '19' → logprob: -2.8984265327453613
    5. '18' → logprob: -3.0234265327453613
    6. 'ceil' → logprob: -3.1484265327453613
    7. '20' → logprob: -3.6484265327453613
    8. '60' → logprob: -4.023426532745361
    9. '10' → logprob: -4.523426532745361
    10. '30' → logprob: -5.273426532745361

Token 254: '20' (ID: 455)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -1.774337887763977
    2. 'digits' → logprob: -2.0243377685546875
    3. '20' → logprob: -2.1493377685546875
    4. '18' → logprob: -2.2743377685546875
    5. '19' → logprob: -2.3993377685546875
    6. 'ceil' → logprob: -2.5243377685546875
    7. 'L' → logprob: -3.0243377685546875
    8. '1' → logprob: -3.0243377685546875
    9. '10' → logprob: -3.2743377685546875
    10. '61' → logprob: -3.7743377685546875

Token 255: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.688212614681106e-05
    2. '))
' → logprob: -12.000017166137695
    3. '()))' → logprob: -12.375017166137695
    4. ')' → logprob: -13.000017166137695
    5. '(' → logprob: -13.500017166137695
    6. ' ))' → logprob: -14.000017166137695
    7. ',' → logprob: -14.500017166137695
    8. ')))' → logprob: -14.750017166137695
    9. '))

' → logprob: -15.125017166137695
    10. '+' → logprob: -15.125017166137695

Token 256: 'ret' (ID: 3431)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0892929807305336
    2. '=' → logprob: -2.4642930030822754
    3. 'urn' → logprob: -9.214292526245117
    4. 'val' → logprob: -9.964292526245117
    5. 'u' → logprob: -10.089292526245117
    6. ' ' → logprob: -10.589292526245117
    7. '_val' → logprob: -10.714292526245117
    8. 's' → logprob: -10.839292526245117
    9. 'ranges' → logprob: -11.089292526245117
    10. '=[]' → logprob: -11.464292526245117

Token 258: ' [[' (ID: 9237)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0277934074401855
    2. '0' → logprob: -1.2777934074401855
    3. 'ranges' → logprob: -1.9027934074401855
    4. 'L' → logprob: -3.2777934074401855
    5. ' ' → logprob: -3.5277934074401855
    6. ' ranges' → logprob: -3.9027934074401855
    7. 'identity' → logprob: -3.9027934074401855
    8. '[' → logprob: -4.1527934074401855
    9. 'A' → logprob: -4.5277934074401855
    10. ' L' → logprob: -4.6527934074401855

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3150772750377655
    2. '1' → logprob: -1.565077304840088
    3. '(' → logprob: -4.440077304840088
    4. 'int' → logprob: -4.690077304840088
    5. 'A' → logprob: -4.815077304840088
    6. 'L' → logprob: -4.940077304840088
    7. 'magic' → logprob: -5.065077304840088
    8. 'ceil' → logprob: -5.940077304840088
    9. 'B' → logprob: -6.065077304840088
    10. '10' → logprob: -6.440077304840088

Token 260: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5638379454612732
    2. ']*' → logprob: -1.313838005065918
    3. 'for' → logprob: -2.938838005065918
    4. ' for' → logprob: -3.188838005065918
    5. ']*(' → logprob: -3.438838005065918
    6. ']]' → logprob: -3.563838005065918
    7. ',' → logprob: -5.813838005065918
    8. ']+' → logprob: -6.313838005065918
    9. '0' → logprob: -7.063838005065918
    10. ']]]' → logprob: -7.313838005065918

Token 261: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6657503247261047
    2. '1' → logprob: -1.29075026512146
    3. '[' → logprob: -2.41575026512146
    4. '[L' → logprob: -3.16575026512146
    5. 'L' → logprob: -3.66575026512146
    6. 'A' → logprob: -4.165750503540039
    7. '10' → logprob: -4.790750503540039
    8. '[A' → logprob: -4.790750503540039
    9. ' [' → logprob: -5.540750503540039
    10. '(' → logprob: -5.540750503540039

Token 262: 'A' (ID: 32)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06057951599359512
    2. '0' → logprob: -3.310579538345337
    3. 'L' → logprob: -4.435579299926758
    4. 'A' → logprob: -5.435579299926758
    5. '(' → logprob: -5.935579299926758
    6. 'ranges' → logprob: -6.560579299926758
    7. '10' → logprob: -7.310579299926758
    8. '(L' → logprob: -8.185579299926758
    9. 'int' → logprob: -8.435579299926758
    10. 'B' → logprob: -8.560579299926758

Token 263: '],' (ID: 2155)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.1436910629272461
    2. ']]
' → logprob: -2.393691062927246
    3. '],' → logprob: -3.768691062927246
    4. ']' → logprob: -5.018691062927246
    5. '+' → logprob: -5.143691062927246
    6. '],
' → logprob: -6.268691062927246
    7. '[' → logprob: -6.768691062927246
    8. ' ]]' → logprob: -6.768691062927246
    9. ']]

' → logprob: -7.018691062927246
    10. ' +' → logprob: -7.518691062927246

Token 264: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7107202410697937
    2. '[B' → logprob: -1.5857203006744385
    3. '[A' → logprob: -1.9607203006744385
    4. '[L' → logprob: -2.5857203006744385
    5. '[(' → logprob: -2.7107203006744385
    6. ' [' → logprob: -4.585720062255859
    7. '[M' → logprob: -5.960720062255859
    8. '[m' → logprob: -5.960720062255859
    9. 'ranges' → logprob: -6.835720062255859
    10. '[-' → logprob: -6.960720062255859

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7389876246452332
    2. 'B' → logprob: -0.7389876246452332
    3. 'L' → logprob: -3.863987684249878
    4. '10' → logprob: -5.238987445831299
    5. '0' → logprob: -5.363987445831299
    6. '(' → logprob: -5.363987445831299
    7. 'A' → logprob: -6.363987445831299
    8. '(L' → logprob: -6.488987445831299
    9. '[' → logprob: -6.863987445831299
    10. '(B' → logprob: -6.988987445831299

Token 266: ']]

' (ID: 84024)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.15916308760643005
    2. '],' → logprob: -2.159162998199463
    3. ']]
' → logprob: -3.784162998199463
    4. ']' → logprob: -5.284162998199463
    5. '],
' → logprob: -7.034162998199463
    6. '0' → logprob: -7.159162998199463
    7. ']]

' → logprob: -7.159162998199463
    8. ' ]]' → logprob: -7.409162998199463
    9. '],[' → logprob: -7.784162998199463
    10. ']]]' → logprob: -9.284163475036621

Token 267: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010501441545784473
    2. 'def' → logprob: -6.135501384735107
    3. 'while' → logprob: -6.260501384735107
    4. ')' → logprob: -6.635501384735107
    5. 'i' → logprob: -7.010501384735107
    6. 'ranges' → logprob: -7.260501384735107
    7. ' for' → logprob: -7.385501384735107
    8. '#' → logprob: -8.010501861572266
    9. 'range' → logprob: -8.010501861572266
    10. 'step' → logprob: -8.135501861572266

Token 268: ' min' (ID: 1349)
  Prédit: ' mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mat' → logprob: -0.11479789018630981
    2. 'mat' → logprob: -3.989797830581665
    3. ' solve' → logprob: -4.614798069000244
    4. ' matrix' → logprob: -4.614798069000244
    5. ' main' → logprob: -4.864798069000244
    6. ' calc' → logprob: -4.989798069000244
    7. ' def' → logprob: -5.239798069000244
    8. ' ' → logprob: -5.239798069000244
    9. ' multiply' → logprob: -5.614798069000244
    10. ' lambda' → logprob: -5.614798069000244

Token 269: 'clip' (ID: 11945)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3737274408340454
    2. '_length' → logprob: -2.748727321624756
    3. '_range' → logprob: -3.123727321624756
    4. '_val' → logprob: -3.373727321624756
    5. 'imize' → logprob: -3.373727321624756
    6. '_pow' → logprob: -3.373727321624756
    7. '_ranges' → logprob: -3.498727321624756
    8. '_diff' → logprob: -3.623727321624756
    9. '_count' → logprob: -3.623727321624756
    10. 'imal' → logprob: -3.748727321624756

Token 270: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2746378183364868
    2. '(a' → logprob: -2.0246376991271973
    3. '(arr' → logprob: -3.1496376991271973
    4. '(lst' → logprob: -3.3996376991271973
    5. '(n' → logprob: -4.274637699127197
    6. '(' → logprob: -6.024637699127197
    7. '(seq' → logprob: -6.024637699127197
    8. '(s' → logprob: -6.524637699127197
    9. '(row' → logprob: -6.524637699127197
    10. '(k' → logprob: -6.774637699127197

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020926215802319348
    2. ' ,' → logprob: -9.250208854675293
    3. '):' → logprob: -10.000208854675293
    4. ',x' → logprob: -10.250208854675293
    5. ',n' → logprob: -11.750208854675293
    6. ',y' → logprob: -12.000208854675293
    7. '):
' → logprob: -12.500208854675293
    8. ':' → logprob: -13.375208854675293
    9. 'x' → logprob: -13.500208854675293
    10. '   ' → logprob: -13.750208854675293

Token 272: ' l' (ID: 305)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04603824391961098
    2. ' y' → logprob: -4.2960381507873535
    3. 'limit' → logprob: -4.9210381507873535
    4. '0' → logprob: -5.2960381507873535
    5. 'max' → logprob: -5.7960381507873535
    6. 'lo' → logprob: -6.0460381507873535
    7. 'lower' → logprob: -6.0460381507873535
    8. 'm' → logprob: -6.6710381507873535
    9. 'low' → logprob: -6.7960381507873535
    10. 'upper' → logprob: -7.0460381507873535

Token 273: '=L' (ID: 170129)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008096250821836293
    2. '):' → logprob: -8.125809669494629
    3. ' ,' → logprob: -8.375809669494629
    4. '):
' → logprob: -8.750809669494629
    5. ',x' → logprob: -9.875809669494629
    6. 'x' → logprob: -10.125809669494629
    7. ',
' → logprob: -12.375809669494629
    8. ',y' → logprob: -12.375809669494629
    9. ',v' → logprob: -13.125809669494629
    10. ' ' → logprob: -13.250809669494629

Token 274: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6011810302734375
    2. ',' → logprob: -1.2261810302734375
    3. '):
' → logprob: -1.8511810302734375
    4. ')' → logprob: -7.4761810302734375
    5. '):

' → logprob: -8.226181030273438
    6. '):
' → logprob: -9.476181030273438
    7. ' ,' → logprob: -9.726181030273438
    8. '-' → logprob: -9.976181030273438
    9. '   ' → logprob: -9.976181030273438
    10. ',
' → logprob: -10.101181030273438

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059470487758517265
    2. ' return' → logprob: -5.255947113037109
    3. 'return' → logprob: -7.255947113037109
    4. '	return' → logprob: -12.75594711303711
    5. ' if' → logprob: -13.38094711303711
    6. '    
' → logprob: -14.63094711303711
    7. '  ' → logprob: -14.88094711303711
    8. '    ' → logprob: -15.00594711303711
    9. '   ' → logprob: -15.00594711303711
    10. ' ' → logprob: -15.13094711303711

Token 276: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1382906436920166
    2. 'return' (adapté à ' return') → logprob: -2.1382906436920166
    3. ' return' → logprob: -4.5132904052734375
    4. 'if' → logprob: -8.763290405273438
    5. '	return' → logprob: -8.763290405273438
    6. ' ' → logprob: -11.263290405273438
    7. ' if' → logprob: -11.763290405273438
    8. '       ' → logprob: -14.013290405273438
    9. '  ' → logprob: -14.513290405273438
    10. 'def' → logprob: -15.513290405273438

Token 277: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6154630780220032
    2. 'x' → logprob: -1.3654630184173584
    3. 'min' → logprob: -1.6154630184173584
    4. '0' → logprob: -5.6154632568359375
    5. 'l' → logprob: -6.8654632568359375
    6. ' max' → logprob: -8.365463256835938
    7. '(x' → logprob: -9.115463256835938
    8. '(min' → logprob: -9.115463256835938
    9. '(max' → logprob: -9.240463256835938
    10. ' x' → logprob: -9.240463256835938

Token 278: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003693013568408787
    2. '(max' → logprob: -8.12536907196045
    3. '(' → logprob: -9.87536907196045
    4. '(l' → logprob: -11.12536907196045
    5. '(L' → logprob: -13.00036907196045
    6. 'x' → logprob: -13.12536907196045
    7. '((' → logprob: -14.00036907196045
    8. '(min' → logprob: -14.37536907196045
    9. '(abs' → logprob: -14.37536907196045
    10. '(len' → logprob: -15.37536907196045

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008815691107884049
    2. ',l' → logprob: -7.250881671905518
    3. ' ,' → logprob: -8.75088119506836
    4. 'l' → logprob: -11.87588119506836
    5. ',L' → logprob: -12.75088119506836
    6. ',
' → logprob: -14.37588119506836
    7. ')' → logprob: -14.50088119506836
    8. ',ll' → logprob: -14.62588119506836
    9. ',x' → logprob: -15.00088119506836
    10. '+' → logprob: -15.50088119506836

Token 280: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007213685312308371
    2. ' l' → logprob: -7.625721454620361
    3. 'L' → logprob: -8.375720977783203
    4. ' L' → logprob: -14.125720977783203
    5. '	l' → logprob: -14.625720977783203
    6. ' ' → logprob: -14.875720977783203
    7. '0' → logprob: -15.750720977783203
    8. '1' → logprob: -15.875720977783203
    9. '   ' → logprob: -16.000720977783203
    10. ')' → logprob: -16.125720977783203

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -13.000005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '))' → logprob: -14.625005722045898
    5. ' ' → logprob: -15.875005722045898
    6. '())' → logprob: -16.0000057220459
    7. '-' → logprob: -16.1250057220459
    8. ')}' → logprob: -16.5000057220459
    9. ')return' → logprob: -16.5000057220459
    10. ')

' → logprob: -16.8750057220459

Token 282: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2405269145965576
    2. 'def' → logprob: -1.4905269145965576
    3. ')' → logprob: -1.6155269145965576
    4. ']' → logprob: -1.9905269145965576
    5. 'ret' → logprob: -3.7405269145965576
    6. 'next' → logprob: -4.240527153015137
    7. '+' → logprob: -4.365527153015137
    8. 'min' → logprob: -4.490527153015137
    9. '[' → logprob: -4.865527153015137
    10. '#' → logprob: -4.865527153015137

Token 283: ' d' (ID: 272)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8170619606971741
    2. 'r' → logprob: -0.9420619606971741
    3. 'x' → logprob: -2.0670619010925293
    4. 'd' → logprob: -4.067061901092529
    5. 'n' → logprob: -5.942061901092529
    6. 'idx' → logprob: -6.067061901092529
    7. '_i' → logprob: -6.192061901092529
    8. 'rng' → logprob: -6.192061901092529
    9. 'v' → logprob: -6.317061901092529
    10. ' i' → logprob: -6.317061901092529

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5329167246818542
    2. 'in' → logprob: -0.9079167246818542
    3. ',' → logprob: -4.65791654586792
    4. ' ' → logprob: -9.032917022705078
    5. ' ,' → logprob: -9.532917022705078
    6. '_in' → logprob: -11.657917022705078
    7. 'd' → logprob: -11.782917022705078
    8. '1' → logprob: -12.032917022705078
    9. 'range' → logprob: -12.282917022705078
    10. '_' → logprob: -12.532917022705078

Token 285: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07128507643938065
    2. 'count' → logprob: -2.6962850093841553
    3. ' range' → logprob: -6.946285247802734
    4. 'ranges' → logprob: -8.321285247802734
    5. 'chain' → logprob: -9.071285247802734
    6. ' count' → logprob: -11.196285247802734
    7. 'take' → logprob: -12.071285247802734
    8. '(range' → logprob: -12.946285247802734
    9. ' ranges' → logprob: -13.946285247802734
    10. '(count' → logprob: -14.196285247802734

Token 286: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015109812375158072
    2. '1' → logprob: -8.875150680541992
    3. '20' → logprob: -11.500150680541992
    4. '(len' → logprob: -14.000150680541992
    5. '2' → logprob: -16.875150680541992
    6. ',' → logprob: -17.375150680541992
    7. '   ' → logprob: -17.500150680541992
    8. '(
' → logprob: -17.500150680541992
    9. ' (' → logprob: -17.750150680541992
    10. '10' → logprob: -17.750150680541992

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5242985486984253
    2. '20' → logprob: -0.8992985486984253
    3. 'len' → logprob: -6.899298667907715
    4. '2' → logprob: -9.399298667907715
    5. '21' → logprob: -10.524298667907715
    6. '0' → logprob: -10.524298667907715
    7. '19' → logprob: -11.024298667907715
    8. ' ' → logprob: -12.899298667907715
    9. '(' → logprob: -13.274298667907715
    10. '10' → logprob: -13.399298667907715

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.375538163818419e-05
    2. ' ,' → logprob: -10.125083923339844
    3. '20' → logprob: -10.625083923339844
    4. '1' → logprob: -11.625083923339844
    5. '0' → logprob: -12.500083923339844
    6. ',len' → logprob: -13.750083923339844
    7. '   ' → logprob: -13.875083923339844
    8. ' ' → logprob: -14.125083923339844
    9. '2' → logprob: -14.375083923339844
    10. ',
' → logprob: -14.750083923339844

Token 289: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0665830746293068
    2. '21' → logprob: -2.8165831565856934
    3. 'len' → logprob: -5.441583156585693
    4. '11' → logprob: -8.816582679748535
    5. ' ' → logprob: -9.691582679748535
    6. '19' → logprob: -10.816582679748535
    7. '10' → logprob: -10.941582679748535
    8. ' len' → logprob: -11.941582679748535
    9. '201' → logprob: -12.816582679748535
    10. '18' → logprob: -12.816582679748535

Token 290: '19' (ID: 858)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.08020464330911636
    2. '21' → logprob: -2.955204725265503
    3. 'len' → logprob: -3.705204725265503
    4. '11' → logprob: -8.330204963684082
    5. '19' → logprob: -9.830204963684082
    6. '10' → logprob: -9.955204963684082
    7. '18' → logprob: -11.330204963684082
    8. '22' → logprob: -11.830204963684082
    9. 'min' → logprob: -12.080204963684082
    10. '15' → logprob: -12.330204963684082

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22909390926361084
    2. '):
' → logprob: -1.6040939092636108
    3. '+' → logprob: -5.7290940284729
    4. ':' → logprob: -8.229093551635742
    5. '):
' → logprob: -9.354093551635742
    6. ')' → logprob: -10.729093551635742
    7. ' +' → logprob: -10.979093551635742
    8. '   ' → logprob: -11.104093551635742
    9. ',' → logprob: -11.729093551635742
    10. ' ):' → logprob: -13.104093551635742

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009137284359894693
    2. ' if' → logprob: -7.750913619995117
    3. ' ret' → logprob: -9.625913619995117
    4. ' ind' → logprob: -9.625913619995117
    5. '    
' → logprob: -9.750913619995117
    6. ' for' → logprob: -9.750913619995117
    7. ' ranges' → logprob: -10.125913619995117
    8. ' s' → logprob: -10.250913619995117
    9. '```' → logprob: -10.375913619995117
    10. '    ' → logprob: -10.625913619995117

Token 293: ' mat' (ID: 2450)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6691362857818604
    2. 'x' → logprob: -2.2941362857818604
    3. 'ret' → logprob: -2.4191362857818604
    4. 'r' → logprob: -3.1691362857818604
    5. 'if' → logprob: -3.4191362857818604
    6. 'l' → logprob: -3.6691362857818604
    7. 'c' → logprob: -4.044136047363281
    8. 'ranges' → logprob: -4.044136047363281
    9. 'low' → logprob: -4.419136047363281
    10. 'start' → logprob: -4.544136047363281

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2987498939037323
    2. '=' → logprob: -2.0487499237060547
    3. '_mul' → logprob: -2.6737499237060547
    4. '[' → logprob: -3.4237499237060547
    5. '[d' → logprob: -5.048749923706055
    6. '=[' → logprob: -5.048749923706055
    7. '   ' → logprob: -5.798749923706055
    8. '_pow' → logprob: -6.048749923706055
    9. '=d' → logprob: -6.673749923706055
    10. ' =[' → logprob: -6.923749923706055

Token 295: ' [[' (ID: 9237)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.3786841928958893
    2. '[[' → logprob: -1.628684163093567
    3. '[' → logprob: -2.1286842823028564
    4. 'mat' → logprob: -10.253684043884277
    5. ' [[' → logprob: -11.503684043884277
    6. ' [
' → logprob: -12.128684043884277
    7. ' [' → logprob: -13.003684043884277
    8. '   ' → logprob: -13.128684043884277
    9. '[\' → logprob: -15.253684043884277
    10. '[(' → logprob: -15.253684043884277

Token 296: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8086060881614685
    2. 'd' → logprob: -1.4336061477661133
    3. '0' → logprob: -2.1836061477661133
    4. 'min' → logprob: -2.8086061477661133
    5. '1' → logprob: -3.4336061477661133
    6. 'ceil' → logprob: -3.4336061477661133
    7. '(' → logprob: -4.058606147766113
    8. 'digits' → logprob: -4.183606147766113
    9. '9' → logprob: -4.683606147766113
    10. '(d' → logprob: -4.933606147766113

Token 297: '**' (ID: 410)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.226704403758049
    2. ',' → logprob: -2.2267043590545654
    3. '**' → logprob: -3.2267043590545654
    4. '%d' → logprob: -3.2267043590545654
    5. '0' → logprob: -5.8517045974731445
    6. 'B' → logprob: -5.9767045974731445
    7. '   ' → logprob: -6.3517045974731445
    8. ',d' → logprob: -6.4767045974731445
    9. '[d' → logprob: -6.7267045974731445
    10. '9' → logprob: -6.9767045974731445

Token 298: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.143574059009552
    2. '1' → logprob: -2.0185739994049072
    3. '9' → logprob: -8.643573760986328
    4. '0' → logprob: -9.018573760986328
    5. '6' → logprob: -9.018573760986328
    6. '   ' → logprob: -9.143573760986328
    7. '(' → logprob: -9.393573760986328
    8. ' d' → logprob: -9.518573760986328
    9. '3' → logprob: -9.893573760986328
    10. '(d' → logprob: -10.143573760986328

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6813319325447083
    2. '%' → logprob: -0.8063319325447083
    3. ' %' → logprob: -3.4313318729400635
    4. '%d' → logprob: -4.556332111358643
    5. ' ,' → logprob: -6.556332111358643
    6. '  ' → logprob: -7.556332111358643
    7. '   ' → logprob: -7.556332111358643
    8. '%B' → logprob: -8.056331634521484
    9. '%D' → logprob: -8.181331634521484
    10. '    ' → logprob: -8.681331634521484

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5592519044876099
    2. '-' → logprob: -1.9342519044876099
    3. 'min' → logprob: -2.4342517852783203
    4. '0' → logprob: -2.6842517852783203
    5. 'B' → logprob: -3.0592517852783203
    6. '-m' → logprob: -3.8092517852783203
    7. 'M' → logprob: -3.9342517852783203
    8. '(-' → logprob: -5.30925178527832
    9. '10' → logprob: -5.30925178527832
    10. '(' → logprob: -5.80925178527832

Token 301: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0687952041625977
    2. '-m' → logprob: -1.8187952041625977
    3. '1' → logprob: -1.9437952041625977
    4. '-' → logprob: -2.3187952041625977
    5. '-B' → logprob: -2.5687952041625977
    6. 'min' → logprob: -2.6937952041625977
    7. '0' → logprob: -3.6937952041625977
    8. '-min' → logprob: -3.6937952041625977
    9. '(-' → logprob: -4.193795204162598
    10. '(' → logprob: -4.943795204162598

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06955030560493469
    2. '],
' → logprob: -3.8195502758026123
    3. '],' → logprob: -4.319550514221191
    4. '0' → logprob: -4.444550514221191
    5. '],[' → logprob: -4.694550514221191
    6. ' ,' → logprob: -5.194550514221191
    7. ' ' → logprob: -6.694550514221191
    8. '   ' → logprob: -6.819550514221191
    9. '    ' → logprob: -6.944550514221191
    10. '  ' → logprob: -7.319550514221191

Token 303: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002037964528426528
    2. '1' → logprob: -6.75203800201416
    3. ' ' → logprob: -8.00203800201416
    4. 'min' → logprob: -8.50203800201416
    5. '10' → logprob: -8.62703800201416
    6. 'd' → logprob: -10.00203800201416
    7. 'digits' → logprob: -10.50203800201416
    8. 'B' → logprob: -10.87703800201416
    9. '   ' → logprob: -11.62703800201416
    10. 'A' → logprob: -11.62703800201416

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015707025304436684
    2. 'min' → logprob: -4.890707015991211
    3. '1' → logprob: -5.765707015991211
    4. 'digits' → logprob: -5.765707015991211
    5. '10' → logprob: -6.890707015991211
    6. ' ' → logprob: -8.390707015991211
    7. 'magic' → logprob: -8.640707015991211
    8. 'max' → logprob: -9.640707015991211
    9. 'd' → logprob: -10.140707015991211
    10. 'ranges' → logprob: -10.265707015991211

Token 305: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7055326104164124
    2. '],
' → logprob: -0.7055326104164124
    3. '],[' → logprob: -4.455532550811768
    4. '],

' → logprob: -8.080533027648926
    5. ']' → logprob: -8.830533027648926
    6. '],
' → logprob: -9.455533027648926
    7. '   ' → logprob: -10.330533027648926
    8. '    ' → logprob: -10.830533027648926
    9. '[' → logprob: -10.955533027648926
    10. ',' → logprob: -10.955533027648926

Token 306: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010197168216109276
    2. ' [' → logprob: -4.635197162628174
    3. '[B' → logprob: -8.760197639465332
    4. '   ' → logprob: -9.510197639465332
    5. '      ' → logprob: -10.135197639465332
    6. '[A' → logprob: -10.260197639465332
    7. '    ' → logprob: -10.635197639465332
    8. '        ' → logprob: -10.635197639465332
    9. '         ' → logprob: -11.010197639465332
    10. '          ' → logprob: -11.010197639465332

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011343709047650918
    2. ' ' → logprob: -10.000113487243652
    3. '   ' → logprob: -10.375113487243652
    4. '1' → logprob: -10.875113487243652
    5. '    ' → logprob: -12.625113487243652
    6. '     ' → logprob: -12.750113487243652
    7. 'B' → logprob: -12.875113487243652
    8. '  ' → logprob: -12.875113487243652
    9. '       ' → logprob: -13.750113487243652
    10. '      ' → logprob: -14.000113487243652

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030293059535324574
    2. ' ,' → logprob: -8.750303268432617
    3. '10' → logprob: -9.750303268432617
    4. '0' → logprob: -10.750303268432617
    5. '1' → logprob: -10.875303268432617
    6. '   ' → logprob: -10.875303268432617
    7. ',B' → logprob: -12.250303268432617
    8. '       ' → logprob: -12.500303268432617
    9. '    ' → logprob: -12.750303268432617
    10. 'B' → logprob: -12.875303268432617

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025394887779839337
    2. ' ' → logprob: -9.000253677368164
    3. '   ' → logprob: -9.625253677368164
    4. '  ' → logprob: -11.000253677368164
    5. '10' → logprob: -11.000253677368164
    6. '     ' → logprob: -12.000253677368164
    7. '    ' → logprob: -12.125253677368164
    8. '0' → logprob: -12.125253677368164
    9. '
' → logprob: -12.750253677368164
    10. '       ' → logprob: -13.125253677368164

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01539902575314045
    2. '10' → logprob: -4.640398979187012
    3. 'B' → logprob: -5.265398979187012
    4. 'min' → logprob: -8.265398979187012
    5. '0' → logprob: -9.515398979187012
    6. ' ' → logprob: -10.015398979187012
    7. '   ' → logprob: -10.515398979187012
    8. '  ' → logprob: -11.765398979187012
    9. '     ' → logprob: -11.890398979187012
    10. 'max' → logprob: -12.265398979187012

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004106658045202494
    2. ' ,' → logprob: -6.004106521606445
    3. '0' → logprob: -6.504106521606445
    4. '1' → logprob: -9.129106521606445
    5. ' ' → logprob: -10.754106521606445
    6. '  ' → logprob: -14.629106521606445
    7. '```' → logprob: -15.129106521606445
    8. '   ' → logprob: -15.129106521606445
    9. ',
' → logprob: -15.379106521606445
    10. '2' → logprob: -15.754106521606445

Token 312: ' B' (ID: 418)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06979858875274658
    2. '0' → logprob: -2.944798469543457
    3. 'B' → logprob: -4.819798469543457
    4. '10' → logprob: -5.694798469543457
    5. 'min' → logprob: -6.069798469543457
    6. ' ' → logprob: -8.069798469543457
    7. '   ' → logprob: -8.819798469543457
    8. 'd' → logprob: -9.194798469543457
    9. 'b' → logprob: -9.569798469543457
    10. 'magic' → logprob: -9.694798469543457

Token 313: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.007579178083688021
    2. ']]' → logprob: -5.257579326629639
    3. ' ],' → logprob: -6.757579326629639
    4. '],[' → logprob: -7.382579326629639
    5. '],
' → logprob: -7.632579326629639
    6. '   ' → logprob: -10.88257884979248
    7. ']]
' → logprob: -10.88257884979248
    8. '[' → logprob: -11.75757884979248
    9. ']' → logprob: -11.75757884979248
    10. ' ]]' → logprob: -12.13257884979248

Token 314: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020651664584875107
    2. ' [' → logprob: -3.8956515789031982
    3. '   ' → logprob: -9.645651817321777
    4. '0' → logprob: -11.020651817321777
    5. ' ' → logprob: -11.770651817321777
    6. '       ' → logprob: -12.395651817321777
    7. '  ' → logprob: -12.770651817321777
    8. '    ' → logprob: -12.770651817321777
    9. '      ' → logprob: -13.270651817321777
    10. ']' → logprob: -13.645651817321777

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.906711546937004e-05
    2. ' ' → logprob: -10.625048637390137
    3. '[' → logprob: -10.875048637390137
    4. '1' → logprob: -12.750048637390137
    5. '000' → logprob: -13.625048637390137
    6. '   ' → logprob: -13.875048637390137
    7. '00' → logprob: -16.250049591064453
    8. '-' → logprob: -16.375049591064453
    9. '001' → logprob: -16.375049591064453
    10. '  ' → logprob: -16.750049591064453

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16042497754096985
    2. '0' → logprob: -1.9104249477386475
    3. ' ,' → logprob: -8.910425186157227
    4. ' ' → logprob: -10.035425186157227
    5. '[' → logprob: -11.910425186157227
    6. '   ' → logprob: -12.160425186157227
    7. '1' → logprob: -12.410425186157227
    8. '       ' → logprob: -14.160425186157227
    9. '```' → logprob: -14.160425186157227
    10. '  ' → logprob: -14.535425186157227

Token 317: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002572090830653906
    2. '1' → logprob: -6.002572059631348
    3. ' ' → logprob: -9.377572059631348
    4. '   ' → logprob: -12.627572059631348
    5. '10' → logprob: -13.502572059631348
    6. 'A' → logprob: -13.690072059631348
    7. 'M' → logprob: -14.565072059631348
    8. 'B' → logprob: -14.752572059631348
    9. '-' → logprob: -14.877572059631348
    10. '  ' → logprob: -14.877572059631348

Token 318: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006740946788340807
    2. '1' → logprob: -5.006741046905518
    3. ' ' → logprob: -10.75674057006836
    4. '   ' → logprob: -13.38174057006836
    5. '  ' → logprob: -15.56924057006836
    6. '     ' → logprob: -15.75674057006836
    7. '
' → logprob: -15.75674057006836
    8. '       ' → logprob: -15.81924057006836
    9. '```' → logprob: -16.00674057006836
    10. 'int' → logprob: -16.06924057006836

Token 319: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47413742542266846
    2. ',' → logprob: -0.9741374254226685
    3. ' ,' → logprob: -10.099137306213379
    4. ' ' → logprob: -11.849137306213379
    5. '[' → logprob: -12.599137306213379
    6. '   ' → logprob: -12.849137306213379
    7. '```' → logprob: -13.224137306213379
    8. '           ' → logprob: -13.974137306213379
    9. '3' → logprob: -14.474137306213379
    10. 'M' → logprob: -14.849137306213379

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.250021934509277
    4. '  ' → logprob: -15.625021934509277
    5. '     ' → logprob: -16.12502098083496
    6. '    ' → logprob: -16.43752098083496
    7. '       ' → logprob: -16.81252098083496
    8. '
' → logprob: -17.00002098083496
    9. '```' → logprob: -17.00002098083496
    10. '           ' → logprob: -17.56252098083496

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -17.875001907348633
    4. '   ' → logprob: -17.937501907348633
    5. 'M' → logprob: -18.125001907348633
    6. '```' → logprob: -18.687501907348633
    7. '[' → logprob: -18.875001907348633
    8. '0' → logprob: -19.000001907348633
    9. '2' → logprob: -19.062501907348633
    10. 'A' → logprob: -19.187501907348633

Token 322: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.001546406652778387
    2. ']' → logprob: -7.251546382904053
    3. ']]
' → logprob: -7.251546382904053
    4. ' ]]' → logprob: -9.251546859741211
    5. ']]

' → logprob: -11.501546859741211
    6. ']]]' → logprob: -11.501546859741211
    7. ')]' → logprob: -12.501546859741211
    8. '']]' → logprob: -13.126546859741211
    9. ' ]' → logprob: -13.751546859741211
    10. '   ' → logprob: -14.126546859741211

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004519958049058914
    2. 'ret' → logprob: -5.629519939422607
    3. ' ret' → logprob: -8.254520416259766
    4. '    
' → logprob: -8.629520416259766
    5. '
' → logprob: -9.004520416259766
    6. 'mat' → logprob: -9.504520416259766
    7. 'for' → logprob: -9.629520416259766
    8. 'min' → logprob: -10.379520416259766
    9. 'if' → logprob: -10.504520416259766
    10. 'rows' → logprob: -10.754520416259766

Token 324: ' n' (ID: 297)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.07002557814121246
    2. 'pow' → logprob: -3.945025682449341
    3. 'mat' → logprob: -3.945025682449341
    4. 'vec' → logprob: -4.695025444030762
    5. '   ' → logprob: -5.695025444030762
    6. 'tmp' → logprob: -6.195025444030762
    7. 'exp' → logprob: -6.195025444030762
    8. 'mul' → logprob: -6.320025444030762
    9. 'v' → logprob: -6.695025444030762
    10. 'if' → logprob: -6.945025444030762

Token 325: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742075800895691
    2. ' =' → logprob: -0.9742075800895691
    3. '   ' → logprob: -10.349207878112793
    4. 'ext' → logprob: -10.474207878112793
    5. 'um' → logprob: -10.974207878112793
    6. 'ows' → logprob: -11.849207878112793
    7. 'ow' → logprob: -11.974207878112793
    8. '_ranges' → logprob: -12.474207878112793
    9. '=
' → logprob: -12.599207878112793
    10. 'w' → logprob: -12.599207878112793

Token 326: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11290110647678375
    2. ' =' → logprob: -2.237901210784912
    3. 'w' → logprob: -9.737900733947754
    4. '   ' → logprob: -12.487900733947754
    5. 'x' → logprob: -12.987900733947754
    6. '=d' → logprob: -12.987900733947754
    7. '=int' → logprob: -13.112900733947754
    8. 'd' → logprob: -13.362900733947754
    9. 'ow' → logprob: -13.362900733947754
    10. '=
' → logprob: -13.987900733947754

Token 327: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01964082568883896
    2. ' n' → logprob: -4.144640922546387
    3. 'ranges' → logprob: -6.519640922546387
    4. 'm' → logprob: -7.519640922546387
    5. 'r' → logprob: -7.644640922546387
    6. 'range' → logprob: -8.769640922546387
    7. ' =' → logprob: -8.894640922546387
    8. ' ranges' → logprob: -9.019640922546387
    9. '=' → logprob: -9.269640922546387
    10. 'ret' → logprob: -9.644640922546387

Token 328: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44686970114707947
    2. ' =' → logprob: -1.0718697309494019
    3. ',' → logprob: -4.571869850158691
    4. '0' → logprob: -4.946869850158691
    5. 'ext' → logprob: -8.571869850158691
    6. '=n' → logprob: -9.321869850158691
    7. 'x' → logprob: -9.696869850158691
    8. '   ' → logprob: -10.446869850158691
    9. ',n' → logprob: -10.821869850158691
    10. '=_' → logprob: -10.946869850158691

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023259690031409264
    2. ' =' → logprob: -3.7732596397399902
    3. ',' → logprob: -11.398260116577148
    4. '=n' → logprob: -13.523260116577148
    5. '=min' → logprob: -14.398260116577148
    6. '=int' → logprob: -15.398260116577148
    7. '=

' → logprob: -15.898260116577148
    8. '=}' → logprob: -16.02326011657715
    9. '=
' → logprob: -16.14826011657715
    10. '=num' → logprob: -16.52326011657715

Token 330: ' ranges' (ID: 33269)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.004291015211492777
    2. ' ranges' → logprob: -6.25429105758667
    3. 'min' → logprob: -6.75429105758667
    4. 'ret' → logprob: -7.37929105758667
    5. 'max' → logprob: -8.379290580749512
    6. 'magic' → logprob: -9.129290580749512
    7. '   ' → logprob: -9.629290580749512
    8. 'range' → logprob: -9.879290580749512
    9. '(min' → logprob: -10.879290580749512
    10. ' min' → logprob: -11.004290580749512

Token 331: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00022654302301816642
    2. 'd' → logprob: -8.750226974487305
    3. ' =' → logprob: -10.000226974487305
    4. '=d' → logprob: -12.125226974487305
    5. '[' → logprob: -12.250226974487305
    6. '=' → logprob: -12.375226974487305
    7. '=[' → logprob: -13.000226974487305
    8. '[
' → logprob: -13.250226974487305
    9. '   ' → logprob: -13.500226974487305
    10. '	d' → logprob: -14.375226974487305

Token 332: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6556730270385742
    2. '],' → logprob: -0.7806730270385742
    3. ']' → logprob: -4.280673027038574
    4. ' -' → logprob: -4.780673027038574
    5. ']-' → logprob: -7.655673027038574
    6. 'd' → logprob: -10.030673027038574
    7. '   ' → logprob: -10.530673027038574
    8. ' ],' → logprob: -11.530673027038574
    9. ']
' → logprob: -11.780673027038574
    10. ' ' → logprob: -12.405673027038574

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010922349756583571
    2. ']' → logprob: -7.876092433929443
    3. '],' → logprob: -8.001091957092285
    4. 'd' → logprob: -8.376091957092285
    5. '0' → logprob: -9.751091957092285
    6. '2' → logprob: -10.501091957092285
    7. ' ' → logprob: -10.626091957092285
    8. '   ' → logprob: -11.751091957092285
    9. '-' → logprob: -12.001091957092285
    10. '][' → logprob: -12.126091957092285

Token 334: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.023769350722432137
    2. ',' → logprob: -4.398769378662109
    3. ']' → logprob: -4.773769378662109
    4. '-' → logprob: -6.148769378662109
    5. '+' → logprob: -8.89876937866211
    6. ' -' → logprob: -9.14876937866211
    7. '][' → logprob: -9.52376937866211
    8. '   ' → logprob: -9.64876937866211
    9. 'd' → logprob: -9.77376937866211
    10. ':' → logprob: -10.52376937866211

Token 335: ' ranges' (ID: 33269)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.003634873079136014
    2. ' ranges' → logprob: -5.878634929656982
    3. 'min' → logprob: -7.253634929656982
    4. '   ' → logprob: -9.628634452819824
    5. 'range' → logprob: -10.753634452819824
    6. 'r' → logprob: -11.253634452819824
    7. ' min' → logprob: -11.503634452819824
    8. '       ' → logprob: -12.503634452819824
    9. '(min' → logprob: -13.253634452819824
    10. 'max' → logprob: -13.378634452819824

Token 336: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -3.8889261304575484e-06
    2. 'd' → logprob: -12.500003814697266
    3. '[' → logprob: -16.000003814697266
    4. ' [' → logprob: -18.750003814697266
    5. '[
' → logprob: -18.875003814697266
    6. '(d' → logprob: -19.750003814697266
    7. '```' → logprob: -20.000003814697266
    8. '	d' → logprob: -20.500003814697266
    9. '
' → logprob: -21.000003814697266
    10. '[f' → logprob: -21.875003814697266

Token 337: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009856504620984197
    2. '-' → logprob: -7.250985622406006
    3. 'd' → logprob: -9.125986099243164
    4. '])' → logprob: -10.500986099243164
    5. '   ' → logprob: -10.500986099243164
    6. '<|end|>' → logprob: -10.750986099243164
    7. ' ]' → logprob: -10.875986099243164
    8. ' -' → logprob: -11.375986099243164
    9. ')' → logprob: -11.750986099243164
    10. ']]' → logprob: -11.875986099243164

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00986410491168499
    2. '
' → logprob: -5.384864330291748
    3. ',' → logprob: -6.384864330291748
    4. '    
' → logprob: -7.134864330291748
    5. '```' → logprob: -7.384864330291748
    6. 'n' → logprob: -7.884864330291748
    7. '<|end|>' → logprob: -7.884864330291748
    8. ')' → logprob: -8.63486385345459
    9. ' if' → logprob: -8.75986385345459
    10. '[' → logprob: -8.75986385345459

Token 339: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6346340179443359
    2. 'if' → logprob: -2.259634017944336
    3. 'cnt' → logprob: -2.384634017944336
    4. 'steps' → logprob: -2.759634017944336
    5. 'ret' → logprob: -3.259634017944336
    6. 'count' → logprob: -3.509634017944336
    7. 'step' → logprob: -3.634634017944336
    8. 'diff' → logprob: -3.884634017944336
    9. 'x' → logprob: -4.134634017944336
    10. 'dp' → logprob: -4.759634017944336

Token 340: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9546098113059998
    2. ' =' → logprob: -1.0796098709106445
    3. '0' → logprob: -1.3296098709106445
    4. '[' → logprob: -5.3296098709106445
    5. 'd' → logprob: -6.5796098709106445
    6. '-' → logprob: -6.8296098709106445
    7. '_' → logprob: -7.2046098709106445
    8. '1' → logprob: -7.7046098709106445
    9. '   ' → logprob: -8.329609870910645
    10. '_diff' → logprob: -8.579609870910645

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8251883387565613
    2. '-' → logprob: -1.700188398361206
    3. '-=' → logprob: -1.700188398361206
    4. ' =' → logprob: -2.075188398361206
    5. ' -=' → logprob: -3.200188398361206
    6. ' -' → logprob: -3.575188398361206
    7. '=min' → logprob: -7.325188159942627
    8. '-n' → logprob: -7.825188159942627
    9. ',' → logprob: -8.200188636779785
    10. '-min' → logprob: -8.325188636779785

Token 342: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.003606959478929639
    2. 'magic' → logprob: -6.128606796264648
    3. 'max' → logprob: -7.003606796264648
    4. 'L' → logprob: -8.503606796264648
    5. ' min' → logprob: -8.753606796264648
    6. 'n' → logprob: -9.628606796264648
    7. 'mag' → logprob: -11.003606796264648
    8. '(min' → logprob: -11.253606796264648
    9. 'ceil' → logprob: -11.628606796264648
    10. 'ret' → logprob: -11.628606796264648

Token 343: 'clip' (ID: 11945)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5761740803718567
    2. 'clip' → logprob: -0.8261740803718567
    3. '(' → logprob: -8.701173782348633
    4. 'clips' → logprob: -10.701173782348633
    5. 'cl' → logprob: -10.951173782348633
    6. '(min' → logprob: -11.451173782348633
    7. '_clip' → logprob: -11.826173782348633
    8. '([' → logprob: -13.576173782348633
    9. ' (' → logprob: -13.576173782348633
    10. '(
' → logprob: -13.701173782348633

Token 344: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.7697225252486533e-06
    2. 'n' → logprob: -13.000003814697266
    3. '(' → logprob: -13.625003814697266
    4. ' (' → logprob: -15.500003814697266
    5. '(range' → logprob: -17.750003814697266
    6. '((' → logprob: -18.375003814697266
    7. '(r' → logprob: -18.500003814697266
    8. '(
' → logprob: -18.500003814697266
    9. ' n' → logprob: -19.000003814697266
    10. 'ranges' → logprob: -19.125003814697266

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000375380739569664
    2. '(n' → logprob: -8.000375747680664
    3. '(x' → logprob: -11.250375747680664
    4. '(' → logprob: -11.250375747680664
    5. ')' → logprob: -12.375375747680664
    6. '[n' → logprob: -12.500375747680664
    7. 'n' → logprob: -13.125375747680664
    8. '[' → logprob: -13.875375747680664
    9. 'ranges' → logprob: -14.875375747680664
    10. '
' → logprob: -15.125375747680664

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0172526016831398
    2. ',' → logprob: -4.517252445220947
    3. ')
' → logprob: -5.767252445220947
    4. ',n' → logprob: -5.892252445220947
    5. ')n' → logprob: -8.767252922058105
    6. ' )' → logprob: -10.142252922058105
    7. 'n' → logprob: -10.642252922058105
    8. '(n' → logprob: -10.892252922058105
    9. ' -' → logprob: -11.767252922058105
    10. '[n' → logprob: -12.142252922058105

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3005985617637634
    2. '```' → logprob: -2.050598621368408
    3. '+' → logprob: -3.050598621368408
    4. 'n' → logprob: -4.175598621368408
    5. '[' → logprob: -4.425598621368408
    6. ',' → logprob: -4.675598621368408
    7. '[n' → logprob: -4.925598621368408
    8. '=' → logprob: -5.050598621368408
    9. '-' → logprob: -5.425598621368408
    10. ' n' → logprob: -5.675598621368408

Token 348: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9406284093856812
    2. 'if' (adapté à ' if') → logprob: -2.3156285285949707
    3. 'steps' → logprob: -2.3156285285949707
    4. 'diff' → logprob: -2.6906285285949707
    5. '   ' → logprob: -2.8156285285949707
    6. 'cnt' → logprob: -2.9406285285949707
    7. 'ret' → logprob: -3.3156285285949707
    8. 'mat' → logprob: -3.3156285285949707
    9. 'dp' → logprob: -3.3156285285949707
    10. 'step' → logprob: -3.6906285285949707

Token 349: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3497714102268219
    2. 'n' → logprob: -1.2247713804244995
    3. 'd' → logprob: -7.474771499633789
    4. ' d' → logprob: -8.099771499633789
    5. '   ' → logprob: -9.099771499633789
    6. ' not' → logprob: -9.099771499633789
    7. 'not' → logprob: -10.224771499633789
    8. 'L' → logprob: -10.349771499633789
    9. '(n' → logprob: -10.349771499633789
    10. ' L' → logprob: -10.599771499633789

Token 350: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007214006967842579
    2. '>' → logprob: -5.882214069366455
    3. '<=' → logprob: -7.007214069366455
    4. '```' → logprob: -7.007214069366455
    5. '<n' → logprob: -7.257214069366455
    6. 'n' → logprob: -7.757214069366455
    7. '0' → logprob: -7.757214069366455
    8. '<' → logprob: -8.382213592529297
    9. '_' → logprob: -8.382213592529297
    10. ' <=' → logprob: -9.007213592529297

Token 351: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16742663085460663
    2. '<' → logprob: -2.167426586151123
    3. '<n' → logprob: -3.667426586151123
    4. ' >=' → logprob: -5.042426586151123
    5. '>=' → logprob: -5.917426586151123
    6. ' !=' → logprob: -6.667426586151123
    7. '!=' → logprob: -7.042426586151123
    8. ' <=' → logprob: -7.417426586151123
    9. '==' → logprob: -7.667426586151123
    10. '<=' → logprob: -7.792426586151123

Token 352: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017313873395323753
    2. 'L' → logprob: -4.1423139572143555
    3. 'ret' → logprob: -7.5173139572143555
    4. ' n' → logprob: -7.8923139572143555
    5. 'l' → logprob: -8.642313957214355
    6. ' L' → logprob: -10.142313957214355
    7. 'min' → logprob: -10.517313957214355
    8. '1' → logprob: -10.642313957214355
    9. 'M' → logprob: -11.142313957214355
    10. '=' → logprob: -11.517313957214355

Token 353: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04670161008834839
    2. 'L' → logprob: -3.171701669692993
    3. 'l' → logprob: -6.171701431274414
    4. 'min' → logprob: -7.421701431274414
    5. 'ret' → logprob: -7.421701431274414
    6. 'd' → logprob: -8.796701431274414
    7. '1' → logprob: -9.421701431274414
    8. ' n' → logprob: -9.921701431274414
    9. 'A' → logprob: -10.046701431274414
    10. '0' → logprob: -10.546701431274414

Token 354: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2292865365743637
    2. ':
' → logprob: -2.3542864322662354
    3. ' and' → logprob: -2.8542864322662354
    4. '   ' → logprob: -3.3542864322662354
    5. '       ' → logprob: -4.3542866706848145
    6. ' or' → logprob: -6.3542866706848145
    7. 'and' → logprob: -6.6042866706848145
    8. ',' → logprob: -7.6042866706848145
    9. '<|end|>' → logprob: -7.7292866706848145
    10. '==' → logprob: -9.479286193847656

Token 355: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04111979529261589
    2. '=' → logprob: -3.4161198139190674
    3. ' n' → logprob: -5.541119575500488
    4. 'L' → logprob: -6.916119575500488
    5. '1' → logprob: -7.166119575500488
    6. 'A' → logprob: -7.291119575500488
    7. '=n' → logprob: -8.166119575500488
    8. '=A' → logprob: -8.166119575500488
    9. '=L' → logprob: -8.916119575500488
    10. 'l' → logprob: -9.666119575500488

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. '0' → logprob: -10.750032424926758
    3. 'n' → logprob: -12.625032424926758
    4. '```' → logprob: -13.250032424926758
    5. 'd' → logprob: -13.500032424926758
    6. '=' → logprob: -14.250032424926758
    7. ' ' → logprob: -14.375032424926758
    8. '   ' → logprob: -14.375032424926758
    9. ':' → logprob: -14.625032424926758
    10. ',' → logprob: -15.125032424926758

Token 357: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22932671010494232
    2. ':
' → logprob: -1.6043267250061035
    3. ' and' → logprob: -5.8543267250061035
    4. '   ' → logprob: -7.4793267250061035
    5. '       ' → logprob: -8.479326248168945
    6. 'and' → logprob: -9.479326248168945
    7. '):
' → logprob: -10.229326248168945
    8. ',' → logprob: -10.479326248168945
    9. ':

' → logprob: -10.729326248168945
    10. '==' → logprob: -11.229326248168945

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02836942858994007
    2. '   ' → logprob: -4.403369426727295
    3. ' ret' → logprob: -4.903369426727295
    4. ' mat' → logprob: -6.278369426727295
    5. 'ret' → logprob: -6.403369426727295
    6. 'mat' → logprob: -6.528369426727295
    7. 'n' → logprob: -6.653369426727295
    8. ' n' → logprob: -7.278369426727295
    9. ' s' → logprob: -8.028369903564453
    10. '    ' → logprob: -9.528369903564453

Token 359: ' n' (ID: 297)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.6053149104118347
    2. 'ret' → logprob: -1.3553149700164795
    3. '       ' → logprob: -2.2303149700164795
    4. '   ' → logprob: -3.4803149700164795
    5. ' for' → logprob: -4.2303147315979
    6. ' n' → logprob: -4.3553147315979
    7. 'n' (adapté à ' n') → logprob: -4.9803147315979
    8. 'for' → logprob: -4.9803147315979
    9. 'mat' → logprob: -5.6053147315979
    10. ' mat' → logprob: -5.6053147315979

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0904201790690422
    2. '1' → logprob: -2.4654202461242676
    3. '=' → logprob: -7.590420246124268
    4. ' =' → logprob: -8.84041976928711
    5. '_' → logprob: -8.84041976928711
    6. '+=' → logprob: -9.71541976928711
    7. '2' → logprob: -10.09041976928711
    8. '[' → logprob: -10.15291976928711
    9. ' +=' → logprob: -10.15291976928711
    10. '```' → logprob: -10.59041976928711

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22555038332939148
    2. ' =' → logprob: -1.6005504131317139
    3. '+=' → logprob: -9.725550651550293
    4. ',' → logprob: -9.850550651550293
    5. ' +=' → logprob: -11.725550651550293
    6. '=max' → logprob: -12.475550651550293
    7. '+' → logprob: -12.600550651550293
    8. '=n' → logprob: -12.975550651550293
    9. '=min' → logprob: -13.600550651550293
    10. '   ' → logprob: -13.975550651550293

Token 362: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006681152619421482
    2. ' ' → logprob: -5.131680965423584
    3. '1' → logprob: -7.506680965423584
    4. 'max' → logprob: -8.756681442260742
    5. 'min' → logprob: -10.756681442260742
    6. ' max' → logprob: -10.881681442260742
    7. ' min' → logprob: -12.756681442260742
    8. '   ' → logprob: -14.381681442260742
    9. 'magic' → logprob: -14.694181442260742
    10. '  ' → logprob: -15.381681442260742

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015727103454992175
    2. 'min' → logprob: -6.876572608947754
    3. 'max' → logprob: -8.126572608947754
    4. '1' → logprob: -8.626572608947754
    5. ' ' → logprob: -9.751572608947754
    6. ' min' → logprob: -12.751572608947754
    7. 'magic' → logprob: -13.751572608947754
    8. ' max' → logprob: -14.501572608947754
    9. '-' → logprob: -15.251572608947754
    10. 'math' → logprob: -15.564072608947754

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005280007608234882
    2. '
' → logprob: -5.630280017852783
    3. '    
' → logprob: -6.880280017852783
    4. ',' → logprob: -8.380279541015625
    5. '<|end|>' → logprob: -8.755279541015625
    6. '        
' → logprob: -9.255279541015625
    7. '       ' → logprob: -10.130279541015625
    8. 'n' → logprob: -11.255279541015625
    9. ' else' → logprob: -11.380279541015625
    10. '.' → logprob: -11.505279541015625

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008323782822117209
    2. '       ' → logprob: -8.250832557678223
    3. '
' → logprob: -9.000832557678223
    4. ',' → logprob: -9.125832557678223
    5. 'n' → logprob: -9.500832557678223
    6. 'else' → logprob: -9.875832557678223
    7. '    
' → logprob: -9.875832557678223
    8. 'mat' → logprob: -10.375832557678223
    9. 'if' → logprob: -11.000832557678223
    10. 'for' → logprob: -11.375832557678223

Token 366: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08159392327070236
    2. 'if' (adapté à ' if') → logprob: -3.3315939903259277
    3. 'ret' → logprob: -4.081593990325928
    4. 'mat' → logprob: -4.831593990325928
    5. ' if' → logprob: -5.081593990325928
    6. ' ret' → logprob: -6.331593990325928
    7. ' mat' → logprob: -6.581593990325928
    8. 'n' → logprob: -6.706593990325928
    9. 'for' → logprob: -7.081593990325928
    10. 's' → logprob: -7.206593990325928

Token 367: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4003191292285919
    2. ' n' → logprob: -1.1503190994262695
    3. '0' → logprob: -5.0253190994262695
    4. ' ' → logprob: -6.4003190994262695
    5. ' not' → logprob: -7.0253190994262695
    6. 'not' → logprob: -7.0253190994262695
    7. 'min' → logprob: -7.1503190994262695
    8. '   ' → logprob: -7.2753190994262695
    9. ' min' → logprob: -8.02531909942627
    10. 'L' → logprob: -8.40031909942627

Token 368: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0026383185759186745
    2. ' n' → logprob: -6.627638339996338
    3. 'not' → logprob: -7.877638339996338
    4. '0' → logprob: -8.00263786315918
    5. 'min' → logprob: -8.25263786315918
    6. 'L' → logprob: -9.50263786315918
    7. 'ret' → logprob: -9.62763786315918
    8. '   ' → logprob: -9.75263786315918
    9. 'd' → logprob: -11.00263786315918
    10. 'A' → logprob: -11.12763786315918

Token 369: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9759607315063477
    2. ' <' → logprob: -0.9759607315063477
    3. '<=' → logprob: -2.2259607315063477
    4. ' <=' → logprob: -2.4759607315063477
    5. ' in' → logprob: -4.225960731506348
    6. '>' → logprob: -4.350960731506348
    7. '>=' → logprob: -4.600960731506348
    8. ' >=' → logprob: -5.350960731506348
    9. '==' → logprob: -5.600960731506348
    10. ' >' → logprob: -5.850960731506348

Token 370: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.375538163818419e-05
    2. ' n' → logprob: -9.750083923339844
    3. '   ' → logprob: -10.750083923339844
    4. '       ' → logprob: -13.000083923339844
    5. '  ' → logprob: -14.250083923339844
    6. ' ' → logprob: -14.750083923339844
    7. '     ' → logprob: -15.500083923339844
    8. 'min' → logprob: -16.250083923339844
    9. '      ' → logprob: -16.375083923339844
    10. '    ' → logprob: -16.500083923339844

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25200507044792175
    2. '1' → logprob: -1.5020051002502441
    3. 'd' → logprob: -11.002004623413086
    4. '   ' → logprob: -11.877004623413086
    5. ' ' → logprob: -11.877004623413086
    6. '```' → logprob: -11.877004623413086
    7. 'n' → logprob: -12.252004623413086
    8. 'o' → logprob: -12.564504623413086
    9. '_' → logprob: -12.814504623413086
    10. '<' → logprob: -13.314504623413086

Token 372: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09061867743730545
    2. ' <=' → logprob: -3.59061861038208
    3. '<n' → logprob: -3.96561861038208
    4. '<' → logprob: -4.34061861038208
    5. ' and' → logprob: -4.59061861038208
    6. '<|end|>' → logprob: -4.84061861038208
    7. '<=' → logprob: -5.84061861038208
    8. '[' → logprob: -6.71561861038208
    9. 'and' → logprob: -6.71561861038208
    10. '   ' → logprob: -7.09061861038208

Token 373: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00016671013145241886
    2. 'L' → logprob: -9.250166893005371
    3. ' n' → logprob: -10.375166893005371
    4. '1' → logprob: -11.125166893005371
    5. '=' → logprob: -11.375166893005371
    6. 'ret' → logprob: -12.250166893005371
    7. 'M' → logprob: -12.750166893005371
    8. '=n' → logprob: -13.750166893005371
    9. 'l' → logprob: -14.000166893005371
    10. '   ' → logprob: -14.000166893005371

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. '0' → logprob: -12.12501335144043
    3. 'd' → logprob: -12.12501335144043
    4. ' ' → logprob: -14.62501335144043
    5. 'n' → logprob: -15.00001335144043
    6. '   ' → logprob: -15.37501335144043
    7. ' d' → logprob: -15.50001335144043
    8. '```' → logprob: -16.00001335144043
    9. '     ' → logprob: -16.81251335144043
    10. '[' → logprob: -17.25001335144043

Token 375: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6328483819961548
    2. ':' → logprob: -0.7578483819961548
    3. ',' → logprob: -9.257848739624023
    4. ' and' → logprob: -9.882848739624023
    5. '   ' → logprob: -10.257848739624023
    6. '       ' → logprob: -10.507848739624023
    7. ':

' → logprob: -11.132848739624023
    8. '):
' → logprob: -11.632848739624023
    9. '[' → logprob: -12.382848739624023
    10. 'and' → logprob: -12.507848739624023

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002155018737539649
    2. '   ' → logprob: -7.12715482711792
    3. 'mat' → logprob: -7.12715482711792
    4. ' mat' → logprob: -8.252155303955078
    5. 'ret' → logprob: -9.127155303955078
    6. ' ret' → logprob: -9.252155303955078
    7. 'n' → logprob: -11.002155303955078
    8. '```' → logprob: -11.377155303955078
    9. ' for' → logprob: -11.502155303955078
    10. 'result' → logprob: -12.377155303955078

Token 377: ' ret' (ID: 2881)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.749405026435852
    2. 'ret' (adapté à ' ret') → logprob: -1.624405026435852
    3. '       ' → logprob: -2.2494049072265625
    4. 'pow' → logprob: -2.6244049072265625
    5. '   ' → logprob: -2.9994049072265625
    6. 'p' → logprob: -4.1244049072265625
    7. 'exp' → logprob: -4.3744049072265625
    8. 'm' → logprob: -4.6244049072265625
    9. 'n' → logprob: -4.9994049072265625
    10. 'tmp' → logprob: -5.2494049072265625

Token 378: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.45780062675476074
    2. '[-' → logprob: -1.0828006267547607
    3. '=' → logprob: -4.20780086517334
    4. ' =' → logprob: -5.45780086517334
    5. ' +=' → logprob: -5.58280086517334
    6. '+=' → logprob: -5.70780086517334
    7. '[' → logprob: -6.95780086517334
    8. '.extend' → logprob: -7.08280086517334
    9. '_mat' → logprob: -9.08280086517334
    10. '[len' → logprob: -9.70780086517334

Token 379: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.034607354551553726
    2. ' mat' → logprob: -3.409607410430908
    3. '[' → logprob: -7.284607410430908
    4. '   ' → logprob: -8.53460693359375
    5. ' [' → logprob: -10.90960693359375
    6. '	mat' → logprob: -11.15960693359375
    7. '(mat' → logprob: -11.65960693359375
    8. '[
' → logprob: -11.90960693359375
    9. ' ' → logprob: -12.15960693359375
    10. '    ' → logprob: -12.40960693359375

Token 380: '_mul' (ID: 75111)
  Prédit: '_mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mul' → logprob: -0.5013840794563293
    2. '_pow' → logprob: -1.0013840198516846
    3. 'mul' → logprob: -3.8763840198516846
    4. '_mat' → logprob: -5.876384258270264
    5. 'pow' → logprob: -7.126384258270264
    6. '=' → logprob: -7.251384258270264
    7. 'ul' → logprob: -7.626384258270264
    8. '[' → logprob: -8.126383781433105
    9. 'p' → logprob: -8.501383781433105
    10. 'mat' → logprob: -9.251383781433105

Token 381: '(mat' (ID: 83002)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.00469569955021143
    2. '(mat' → logprob: -5.754695892333984
    3. 'ret' → logprob: -6.504695892333984
    4. '([' → logprob: -11.504695892333984
    5. 'mat' → logprob: -11.879695892333984
    6. ' ret' → logprob: -14.004695892333984
    7. '(' → logprob: -14.254695892333984
    8. '[' → logprob: -14.254695892333984
    9. '(m' → logprob: -14.754695892333984
    10. '(
' → logprob: -15.129695892333984

Token 382: '_pow' (ID: 160965)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15145614743232727
    2. '(ret' → logprob: -2.026456117630005
    3. 'ret' → logprob: -4.776456356048584
    4. '(mat' → logprob: -9.401455879211426
    5. ' ret' → logprob: -9.526455879211426
    6. ' ,' → logprob: -9.526455879211426
    7. ')' → logprob: -10.401455879211426
    8. ',
' → logprob: -10.901455879211426
    9. 'mat' → logprob: -11.526455879211426
    10. '[' → logprob: -12.526455879211426

Token 383: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.0001519325451226905
    2. 'mat' → logprob: -9.000151634216309
    3. '(
' → logprob: -10.875151634216309
    4. '(' → logprob: -12.375151634216309
    5. ' mat' → logprob: -13.125151634216309
    6. '	mat' → logprob: -13.500151634216309
    7. ')' → logprob: -14.250151634216309
    8. '
' → logprob: -14.375151634216309
    9. '.mat' → logprob: -16.000152587890625
    10. ',' → logprob: -16.000152587890625

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004992051050066948
    2. '(mat' → logprob: -5.6299920082092285
    3. 'mat' → logprob: -6.8799920082092285
    4. ',[' → logprob: -9.129992485046387
    5. ' ,' → logprob: -9.254992485046387
    6. ',
' → logprob: -9.879992485046387
    7. '[' → logprob: -10.254992485046387
    8. ' mat' → logprob: -10.254992485046387
    9. '),' → logprob: -11.504992485046387
    10. '
' → logprob: -12.004992485046387

Token 385: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10236717760562897
    2. ' n' → logprob: -2.3523671627044678
    3. '(n' → logprob: -6.227367401123047
    4. ')n' → logprob: -9.352367401123047
    5. '[n' → logprob: -10.102367401123047
    6. ')' → logprob: -10.852367401123047
    7. '   ' → logprob: -11.102367401123047
    8. ' (' → logprob: -12.227367401123047
    9. '       ' → logprob: -12.352367401123047
    10. '(' → logprob: -13.102367401123047

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002344969194382429
    2. '0' → logprob: -6.127345085144043
    3. ')' → logprob: -9.377345085144043
    4. 'd' → logprob: -10.752345085144043
    5. 'ranges' → logprob: -11.127345085144043
    6. '   ' → logprob: -11.502345085144043
    7. '```' → logprob: -12.252345085144043
    8. '[d' → logprob: -12.252345085144043
    9. '       ' → logprob: -13.127345085144043
    10. '_ranges' → logprob: -13.127345085144043

Token 387: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6374626159667969
    2. ' -' → logprob: -0.7624626159667969
    3. '[n' → logprob: -6.512462615966797
    4. '-n' → logprob: -6.637462615966797
    5. '[' → logprob: -6.762462615966797
    6. '),' → logprob: -7.637462615966797
    7. ')' → logprob: -9.262462615966797
    8. '[-' → logprob: -9.512462615966797
    9. '-[' → logprob: -9.637462615966797
    10. '-
' → logprob: -10.137462615966797

Token 388: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020413640595506877
    2. ' n' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.500204086303711
    4. '	n' → logprob: -16.12520408630371
    5. '    ' → logprob: -17.25020408630371
    6. '       ' → logprob: -17.87520408630371
    7. ' ' → logprob: -18.25020408630371
    8. '  ' → logprob: -18.37520408630371
    9. ')' → logprob: -18.75020408630371
    10. '
' → logprob: -19.12520408630371

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.5
    3. ')' → logprob: -17.0
    4. ' ' → logprob: -17.875
    5. '۰' → logprob: -18.25
    6. 'o' → logprob: -18.375
    7. '   ' → logprob: -18.375
    8. 'n' → logprob: -19.125
    9. '```' → logprob: -19.5
    10. ',' → logprob: -20.0

Token 390: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0003920655872207135
    2. ',' → logprob: -8.625391960144043
    3. ' ),' → logprob: -9.625391960144043
    4. '(ret' → logprob: -9.625391960144043
    5. ')' → logprob: -10.500391960144043
    6. '   ' → logprob: -11.000391960144043
    7. '],' → logprob: -11.750391960144043
    8. 'ret' → logprob: -11.875391960144043
    9. '-' → logprob: -12.375391960144043
    10. '[' → logprob: -12.750391960144043

Token 391: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.006715967319905758
    2. ' ret' → logprob: -5.006715774536133
    3. '(ret' → logprob: -15.131715774536133
    4. '	ret' → logprob: -16.631715774536133
    5. '   ' → logprob: -16.756715774536133
    6. '[' → logprob: -17.131715774536133
    7. '$ret' → logprob: -17.256715774536133
    8. ')' → logprob: -18.006715774536133
    9. '
' → logprob: -18.756715774536133
    10. '       ' → logprob: -19.381715774536133

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.460291767027229e-05
    2. ')
' → logprob: -9.375094413757324
    3. ' )' → logprob: -12.125094413757324
    4. '   ' → logprob: -13.875094413757324
    5. '[' → logprob: -14.250094413757324
    6. '))' → logprob: -14.375094413757324
    7. '<|end|>' → logprob: -15.375094413757324
    8. ')`' → logprob: -15.500094413757324
    9. ')

' → logprob: -15.750094413757324
    10. '),' → logprob: -15.750094413757324

Token 393: 'ranges' (ID: 175054)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5764846801757812
    2. '<|end|>' → logprob: -1.0764846801757812
    3. '[' → logprob: -3.2014846801757812
    4. ' ' → logprob: -3.7014846801757812
    5. ' )' → logprob: -4.701484680175781
    6. '    ' → logprob: -5.451484680175781
    7. '   ' → logprob: -5.951484680175781
    8. ',' → logprob: -6.201484680175781
    9. '```' → logprob: -6.201484680175781
    10. ':' → logprob: -6.326484680175781

Token 394: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005931860650889575
    2. '[[' → logprob: -8.125593185424805
    3. '[n' → logprob: -9.625593185424805
    4. '[(' → logprob: -9.750593185424805
    5. '[-' → logprob: -10.000593185424805
    6. '[]' → logprob: -10.375593185424805
    7. '[...,' → logprob: -10.500593185424805
    8. 'Out' → logprob: -11.125593185424805
    9. '[out' → logprob: -11.250593185424805
    10. '[...]' → logprob: -11.625593185424805

Token 395: ' ranges' (ID: 33269)
  Prédit: 'ranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ranges' → logprob: -0.0645429790019989
    2. 'list' → logprob: -3.6895430088043213
    3. '[' → logprob: -4.439542770385742
    4. 'ret' → logprob: -4.939542770385742
    5. '[r' → logprob: -5.064542770385742
    6. ' ranges' → logprob: -5.189542770385742
    7. 'range' → logprob: -6.439542770385742
    8. '[]' → logprob: -6.814542770385742
    9. ' [' → logprob: -7.064542770385742
    10. '[list' → logprob: -7.439542770385742

Token 396: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002368631772696972
    2. '2' → logprob: -6.502368450164795
    3. '-' → logprob: -7.627368450164795
    4. '3' → logprob: -9.377368927001953
    5. '19' → logprob: -9.502368927001953
    6. '10' → logprob: -9.877368927001953
    7. ':-' → logprob: -10.252368927001953
    8. ':' → logprob: -10.502368927001953
    9. 'len' → logprob: -10.627368927001953
    10. '::-' → logprob: -11.252368927001953

Token 398: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.001714093261398375
    2. ':' → logprob: -6.37671422958374
    3. ':]
' → logprob: -12.001713752746582
    4. ':]

' → logprob: -13.251713752746582
    5. ':],' → logprob: -13.251713752746582
    6. ':].' → logprob: -14.001713752746582
    7. ' :]' → logprob: -14.376713752746582
    8. '1' → logprob: -15.501713752746582
    9. ':-' → logprob: -15.876713752746582
    10. '19' → logprob: -16.3767147064209

Token 399: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28131043910980225
    2. 'ret' → logprob: -2.031310558319092
    3. 'for' → logprob: -2.656310558319092
    4. 'ranges' → logprob: -3.906310558319092
    5. '<|end|>' → logprob: -4.656310558319092
    6. 'range' → logprob: -5.781310558319092
    7. 'result' → logprob: -6.031310558319092
    8. 'if' → logprob: -6.156310558319092
    9. '[' → logprob: -6.656310558319092
    10. '#' → logprob: -7.156310558319092

Token 400: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06231709197163582
    2. '[r' → logprob: -2.812317132949829
    3. '[-' → logprob: -9.18731689453125
    4. '[min' → logprob: -9.56231689453125
    5. '[L' → logprob: -10.31231689453125
    6. '[List' → logprob: -10.56231689453125
    7. '[n' → logprob: -10.81231689453125
    8. '[(' → logprob: -10.81231689453125
    9. 'ranges' → logprob: -11.18731689453125
    10. '[max' → logprob: -11.18731689453125

Token 401: 'min' (ID: 1493)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.29861849546432495
    2. 'magic' → logprob: -2.1736185550689697
    3. 'min' → logprob: -2.7986185550689697
    4. '10' → logprob: -3.6736185550689697
    5. 'float' → logprob: -3.6736185550689697
    6. 'ceil' → logprob: -4.423618316650391
    7. '0' → logprob: -5.673618316650391
    8. 'max' → logprob: -6.173618316650391
    9. 'math' → logprob: -6.298618316650391
    10. '100' → logprob: -6.548618316650391

Token 402: 'clip' (ID: 11945)
  Prédit: 'clip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clip' → logprob: -0.03000698983669281
    2. '(L' → logprob: -3.5300068855285645
    3. '(' → logprob: -8.905007362365723
    4. '(A' → logprob: -9.655007362365723
    5. 'clips' → logprob: -11.530007362365723
    6. '(min' → logprob: -11.905007362365723
    7. '([' → logprob: -11.905007362365723
    8. '(x' → logprob: -12.155007362365723
    9. 'range' → logprob: -12.405007362365723
    10. '(l' → logprob: -12.530007362365723

Token 403: '(m' (ID: 2145)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.424530435353518e-05
    2. 'L' → logprob: -9.750094413757324
    3. '(' → logprob: -10.500094413757324
    4. '(M' → logprob: -12.750094413757324
    5. 'ranges' → logprob: -13.500094413757324
    6. '(ret' → logprob: -13.750094413757324
    7. '(r' → logprob: -14.750094413757324
    8. '(A' → logprob: -14.750094413757324
    9. ')' → logprob: -15.000094413757324
    10. '((' → logprob: -15.125094413757324

Token 404: 'agic' (ID: 52619)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0935266986489296
    2. 'L' → logprob: -2.843526601791382
    3. 'ranges' → logprob: -3.843526601791382
    4. 'ax' → logprob: -6.343526840209961
    5. '(' → logprob: -6.593526840209961
    6. 'ret' → logprob: -6.593526840209961
    7. ')' → logprob: -6.718526840209961
    8. '(ret' → logprob: -7.343526840209961
    9. '(M' → logprob: -7.593526840209961
    10. 'range' → logprob: -7.718526840209961

Token 405: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -0.000386701402021572
    2. 'floor' → logprob: -7.875386714935303
    3. 'Floor' → logprob: -12.125386238098145
    4. '_range' → logprob: -14.125386238098145
    5. 'loor' → logprob: -16.75038719177246
    6. 'range' → logprob: -16.75038719177246
    7. '```' → logprob: -16.75038719177246
    8. 'ceil' → logprob: -16.87538719177246
    9. 'flo' → logprob: -16.87538719177246
    10. 'ranges' → logprob: -17.37538719177246

Token 406: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011336666066199541
    2. '(A' → logprob: -7.626133441925049
    3. '((' → logprob: -8.126133918762207
    4. '(L' → logprob: -8.501133918762207
    5. '10' → logprob: -9.251133918762207
    6. '(B' → logprob: -10.501133918762207
    7. ' (' → logprob: -11.876133918762207
    8. 'A' → logprob: -12.626133918762207
    9. '(-' → logprob: -13.001133918762207
    10. '(int' → logprob: -13.251133918762207

Token 407: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.542215883731842
    2. '(' → logprob: -0.917215883731842
    3. 'L' → logprob: -4.417215824127197
    4. 'A' → logprob: -5.667215824127197
    5. '(L' → logprob: -6.167215824127197
    6. '(A' → logprob: -7.042215824127197
    7. 'B' → logprob: -9.667216300964355
    8. ' ' → logprob: -9.917216300964355
    9. ' (' → logprob: -9.917216300964355
    10. '1' → logprob: -10.167216300964355

Token 408: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.09921520948410034
    2. '19' → logprob: -3.099215269088745
    3. '20' → logprob: -3.724215269088745
    4. '18' → logprob: -3.974215269088745
    5. '(B' → logprob: -5.974215030670166
    6. '(' → logprob: -6.099215030670166
    7. '(A' → logprob: -6.974215030670166
    8. '```' → logprob: -8.724215507507324
    9. 'd' → logprob: -8.849215507507324
    10. 'B' → logprob: -9.599215507507324

Token 409: '20' (ID: 455)
  Prédit: '19'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '19' → logprob: -0.013530761934816837
    2. '20' → logprob: -4.888530731201172
    3. '18' → logprob: -5.138530731201172
    4. 'd' → logprob: -11.263530731201172
    5. '(' → logprob: -11.513530731201172
    6. ' ' → logprob: -12.263530731201172
    7. '1' → logprob: -12.763530731201172
    8. '``' → logprob: -13.388530731201172
    9. '```' → logprob: -13.638530731201172
    10. '0' → logprob: -14.013530731201172

Token 410: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2379734069108963
    2. ' -' → logprob: -2.11297345161438
    3. ',' → logprob: -2.86297345161438
    4. '(' → logprob: -3.61297345161438
    5. '(A' → logprob: -5.862973213195801
    6. '-A' → logprob: -6.737973213195801
    7. '(-' → logprob: -6.737973213195801
    8. ' ' → logprob: -7.237973213195801
    9. ' ,' → logprob: -7.612973213195801
    10. ' (' → logprob: -8.3629732131958

Token 411: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0021998595912009478
    2. ' A' → logprob: -6.127199649810791
    3. 'B' → logprob: -11.50220012664795
    4. '   ' → logprob: -12.75220012664795
    5. ' ' → logprob: -14.50220012664795
    6. ',' → logprob: -15.50220012664795
    7. '  ' → logprob: -15.75220012664795
    8. '	A' → logprob: -15.87720012664795
    9. '(A' → logprob: -16.127199172973633
    10. '       ' → logprob: -16.127199172973633

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4894986785948277e-05
    2. ',B' → logprob: -10.500044822692871
    3. ' ,' → logprob: -11.375044822692871
    4. 'B' → logprob: -12.500044822692871
    5. ',
' → logprob: -14.000044822692871
    6. '),' → logprob: -14.375044822692871
    7. '```' → logprob: -15.625044822692871
    8. '(),' → logprob: -16.250045776367188
    9. '(' → logprob: -16.375045776367188
    10. '   ' → logprob: -16.500045776367188

Token 413: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009250381262972951
    2. ' B' → logprob: -7.000925064086914
    3. '   ' → logprob: -12.000925064086914
    4. '       ' → logprob: -13.125925064086914
    5. '           ' → logprob: -13.375925064086914
    6. '    ' → logprob: -14.375925064086914
    7. '               ' → logprob: -14.750925064086914
    8. '        ' → logprob: -14.875925064086914
    9. '     ' → logprob: -15.125925064086914
    10. '         ' → logprob: -15.250925064086914

Token 414: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005883526057004929
    2. ')]' → logprob: -5.255883693695068
    3. '))]
' → logprob: -8.00588321685791
    4. '),' → logprob: -8.88088321685791
    5. ')' → logprob: -8.88088321685791
    6. '()))' → logprob: -11.00588321685791
    7. ')])' → logprob: -12.13088321685791
    8. ')))' → logprob: -12.38088321685791
    9. ' ))' → logprob: -13.00588321685791
    10. '])]' → logprob: -13.00588321685791

Token 415: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.810407817363739
    2. 'for' → logprob: -1.0604078769683838
    3. 'ret' → logprob: -2.185407876968384
    4. 'if' → logprob: -3.185407876968384
    5. 'result' → logprob: -4.060407638549805
    6. 'res' → logprob: -4.560407638549805
    7. 'ans' → logprob: -4.810407638549805
    8. 's' → logprob: -5.560407638549805
    9. 'r' → logprob: -5.685407638549805
    10. 'total' → logprob: -5.810407638549805

Token 416: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.0009739940869621933
    2. 'ret' → logprob: -7.000974178314209
    3. '(sum' → logprob: -10.62597370147705
    4. '(*' → logprob: -10.62597370147705
    5. '(min' → logprob: -12.37597370147705
    6. ' ret' → logprob: -13.12597370147705
    7. '((' → logprob: -13.25097370147705
    8. '(' → logprob: -13.62597370147705
    9. '(int' → logprob: -13.75097370147705
    10. '(re' → logprob: -14.25097370147705

Token 417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013798571308143437
    2. '[-' → logprob: -9.000138282775879
    3. ')' → logprob: -12.125138282775879
    4. ')[' → logprob: -12.750138282775879
    5. '0' → logprob: -12.875138282775879
    6. '][' → logprob: -13.250138282775879
    7. '```' → logprob: -14.000138282775879
    8. '[
' → logprob: -14.875138282775879
    9. ' [' → logprob: -15.500138282775879
    10. ')
' → logprob: -16.375137329101562

Token 418: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048877913504838943
    2. '1' → logprob: -3.0488779544830322
    3. '-' → logprob: -8.423877716064453
    4. '2' → logprob: -9.673877716064453
    5. '[' → logprob: -12.423877716064453
    6. ' ' → logprob: -13.423877716064453
    7. '
' → logprob: -13.798877716064453
    8. '][' → logprob: -14.798877716064453
    9. '```' → logprob: -14.986377716064453
    10. '5' → logprob: -15.548877716064453

Token 419: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002058903919532895
    2. '[' → logprob: -6.252058982849121
    3. '0' → logprob: -9.002058982849121
    4. ']' → logprob: -12.127058982849121
    5. '])' → logprob: -13.627058982849121
    6. '][-' → logprob: -15.502058982849121
    7. '-' → logprob: -16.002058029174805
    8. ' ][' → logprob: -16.252058029174805
    9. ''][' → logprob: -17.252058029174805
    10. '```' → logprob: -17.377058029174805

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. '1' → logprob: -17.875
    4. ' ' → logprob: -17.875
    5. '])' → logprob: -18.375
    6. '   ' → logprob: -19.5
    7. '
' → logprob: -19.625
    8. '```' → logprob: -20.125
    9. '۰' → logprob: -20.5625
    10. '2' → logprob: -20.8125

Token 421: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06952463090419769
    2. ')' → logprob: -3.0695245265960693
    3. '%' → logprob: -4.319524765014648
    4. ']' → logprob: -5.069524765014648
    5. ']%' → logprob: -7.319524765014648
    6. ')%' → logprob: -8.444524765014648
    7. ' %' → logprob: -9.194524765014648
    8. ')])' → logprob: -9.944524765014648
    9. '%)' → logprob: -10.194524765014648
    10. ' ])' → logprob: -10.569524765014648


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 419
Tokens correctement prédits (1ère position, stricte): 161
Tokens correctement prédits (1ère position, avec adaptation): 164
Tokens correctement prédits (top 10): 334
Précision stricte (1ère position): 38.42%
Précision adaptée (1ère position): 39.14%
Précision (top 10): 79.71%
================================================================================
