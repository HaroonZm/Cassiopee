================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier depuis l'entrée standard (clavier)
# int() convertit la chaîne lue en nombre entier (base 10).
n = int(input())

# Demande à l'utilisateur une chaîne de caractères composée de symboles (caractères)
# list() transforme la chaîne en une liste de caractères pour l'accès indexé.
s = list(input())

# Prend les n premiers caractères de la liste s et les stocke dans 'l'
# s[:n] signifie "tous les éléments de s, depuis l'indice 0 jusqu'à mais non inclus n"
l = s[:n]

# Prend les n caractères suivants (de la position n à la fin de s), puis inverse leur ordre à l'aide de [::-1]
r = s[n:][::-1]

# Crée un dictionnaire vide nommé 'd' qui va stocker des paires (chaînes, chaînes) comme clés, et des entiers comme valeurs (compteurs)
d = {}

# Crée un autre dictionnaire vide nommé 'e', ayant le même but que 'd' mais pour les sous-chaînes inversées
e = {}

# Boucle sur tous les entiers i compris entre 0 et 2^n - 1 (soit 1<<n possibilités).
# "1 << n" équivaut à 2 puissance n, car << est l'opérateur de décalage binaire à gauche.
for i in range(1 << n):
    # Initialise quatre chaînes vides: s, t, u, v
    # Ces chaînes serviront à accumuler différents caractères à chaque itération
    s = ''
    t = ''
    u = ''
    v = ''

    # Pour chaque position j parmi les n positions (de 0 à n-1)
    for j in range(n):
        # (i >> j) & 1 extrait le j-ième bit de i (compris comme un masque de sélection)
        # Si ce bit est à 1, la condition est vraie, sinon fausse.
        if (i >> j) & 1:
            # Ajoute le j-ième caractère de 'l' à la chaîne s
            s += l[j]
            # Ajoute le j-ième caractère de 'r' à la chaîne t
            t += r[j]
        else:
            # Sinon, ajoute le j-ième caractère de 'l' à la chaîne u
            u += l[j]
            # Ajoute le j-ième caractère de 'r' à la chaîne v
            v += r[j]

    # On utilise le couple (s, u) comme clé dans le dictionnaire 'd'
    # Si cette clé existe déjà, incrémente sa valeur, sinon utilise 0 comme valeur par défaut grâce à la méthode get()
    d[(s, u)] = d.get((s, u), 0) + 1

    # On fait de même pour (t, v) dans le dictionnaire 'e'
    e[(t, v)] = e.get((t, v), 0) + 1

# Initialise un compteur à zéro; il servira à compter le nombre final recherché
a = 0

# Parcourt toutes les clés du dictionnaire 'd'
for i in d.keys():
    # Ajoute à 'a' le produit du nombre d'occurrences de la clé dans 'd' par le nombre d'occurrences de cette clé dans 'e'
    # La méthode get(i,0) retourne 0 si la clé n'est pas présente dans 'e'
    a += d[i] * e.get(i, 0)

# Affiche le résultat final à l'écran (le nombre total calculé)
print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16772253811359406
    2. ' l' → logprob: -1.9177225828170776
    3. ' ' → logprob: -5.667722702026367
    4. ' user' → logprob: -6.667722702026367
    5. 'user' → logprob: -7.167722702026367
    6. ''' → logprob: -7.917722702026367
    7. 'u' → logprob: -8.167722702026367
    8. '_' → logprob: -8.417722702026367
    9. ' ' → logprob: -8.917722702026367
    10. ' utilisateur' → logprob: -8.917722702026367

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028796790167689323
    2. 'entr' → logprob: -4.153796672821045
    3. ' saisir' → logprob: -5.153796672821045
    4. '```' → logprob: -6.028796672821045
    5. 'r' → logprob: -6.153796672821045
    6. 'sa' → logprob: -7.903796672821045
    7. 'don' → logprob: -8.153797149658203
    8. 'entrée' → logprob: -8.403797149658203
    9. '#' → logprob: -8.403797149658203
    10. ' entrer' → logprob: -8.653797149658203

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028100790455937386
    2. ' un' → logprob: -4.403100967407227
    3. ' une' → logprob: -5.528100967407227
    4. ''' → logprob: -5.778100967407227
    5. '_' → logprob: -6.153100967407227
    6. 's' → logprob: -6.403100967407227
    7. ' ' → logprob: -7.028100967407227
    8. ' :' → logprob: -7.153100967407227
    9. 'u' → logprob: -7.528100967407227
    10. ' u' → logprob: -7.653100967407227

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7890444993972778
    2. ' espace' → logprob: -1.2890444993972778
    3. 'e' → logprob: -2.7890443801879883
    4. 'nombre' → logprob: -3.1640443801879883
    5. ' nombre' → logprob: -3.2890443801879883
    6. 'a' → logprob: -3.7890443801879883
    7. ' nom' → logprob: -4.289044380187988
    8. 'é' → logprob: -4.539044380187988
    9. 'es' → logprob: -4.539044380187988
    10. '_' → logprob: -4.664044380187988

Token 10: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055841222405433655
    2. 'x' → logprob: -3.4308412075042725
    3. 'e' → logprob: -5.055841445922852
    4. 'i' → logprob: -5.055841445922852
    5. '\' → logprob: -6.055841445922852
    6. 'ent' → logprob: -6.555841445922852
    7. '\n' → logprob: -6.555841445922852
    8. '#' → logprob: -6.930841445922852
    9. '```' → logprob: -7.555841445922852
    10. 's' → logprob: -7.930841445922852

Token 11: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9652179479598999
    2. 'l' → logprob: -1.3402179479599
    3. 'le' → logprob: -1.5902179479599
    4. 'input' → logprob: -2.4652180671691895
    5. ' le' → logprob: -3.4652180671691895
    6. ' l' → logprob: -3.8402180671691895
    7. ' ' → logprob: -5.0902180671691895
    8. '=input' → logprob: -6.4652180671691895
    9. 'la' → logprob: -6.7152180671691895
    10. 'cl' → logprob: -6.7152180671691895

Token 12: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6226696372032166
    2. ''' → logprob: -1.2476696968078613
    3. ''entrée' → logprob: -1.8726696968078613
    4. ''a' → logprob: -4.497669696807861
    5. ''utilisateur' → logprob: -5.622669696807861
    6. '')' → logprob: -5.747669696807861
    7. 'e' → logprob: -6.622669696807861
    8. 'entrée' → logprob: -7.622669696807861
    9. 'input' → logprob: -7.747669696807861
    10. 'u' → logprob: -7.997669696807861

Token 13: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17601929605007172
    2. 'x' → logprob: -2.4260191917419434
    3. 'i' → logprob: -3.3010191917419434
    4. '_' → logprob: -4.551019191741943
    5. 'e' → logprob: -4.676019191741943
    6. '```' → logprob: -5.926019191741943
    7. 'ent' → logprob: -6.051019191741943
    8. '`' → logprob: -6.176019191741943
    9. 's' → logprob: -6.176019191741943
    10. 'a' → logprob: -6.676019191741943

Token 14: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05089477822184563
    2. 'i' → logprob: -3.6758947372436523
    3. 'x' → logprob: -4.550894737243652
    4. 'e' → logprob: -5.175894737243652
    5. '```' → logprob: -6.175894737243652
    6. '`' → logprob: -6.425894737243652
    7. 'ent' → logprob: -6.550894737243652
    8. 'a' → logprob: -7.925894737243652
    9. '_' → logprob: -8.050894737243652
    10. '\' → logprob: -8.050894737243652

Token 15: 'cl' (ID: 565)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006882676389068365
    2. '):' → logprob: -5.506882667541504
    3. ' )' → logprob: -6.506882667541504
    4. ':' → logprob: -7.756882667541504
    5. '`)' → logprob: -8.631882667541504
    6. 'n' → logprob: -9.381882667541504
    7. '')' → logprob: -9.381882667541504
    8. ',' → logprob: -9.506882667541504
    9. 'a' → logprob: -9.506882667541504
    10. '")' → logprob: -9.881882667541504

Token 16: 'avier' (ID: 37096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0974630117416382
    2. '#' → logprob: -1.9724630117416382
    3. 'a' → logprob: -2.2224631309509277
    4. ' ' → logprob: -2.2224631309509277
    5. 'n' → logprob: -2.9724631309509277
    6. 'r' → logprob: -3.2224631309509277
    7. 'i' → logprob: -3.2224631309509277
    8. ' )' → logprob: -3.4724631309509277
    9. 'e' → logprob: -3.5974631309509277
    10. ''' → logprob: -4.097463130950928

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013923770748078823
    2. '`)' → logprob: -7.626392364501953
    3. ' )' → logprob: -8.251392364501953
    4. '')' → logprob: -8.376392364501953
    5. '#' → logprob: -8.626392364501953
    6. '")' → logprob: -9.251392364501953
    7. 's' → logprob: -10.876392364501953
    8. 'e' → logprob: -11.001392364501953
    9. 'n' → logprob: -11.251392364501953
    10. ')
' → logprob: -11.376392364501953

Token 18: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023219386115670204
    2. 'x' → logprob: -4.773219585418701
    3. 'e' → logprob: -5.148219585418701
    4. 'ent' → logprob: -5.523219585418701
    5. 'i' → logprob: -6.773219585418701
    6. 'nombre' → logprob: -7.023219585418701
    7. '#' → logprob: -7.273219585418701
    8. '```' → logprob: -7.523219585418701
    9. '\' → logprob: -7.898219585418701
    10. '`' → logprob: -8.398219108581543

Token 19: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3396766781806946
    2. 'ent' → logprob: -1.8396766185760498
    3. 'nombre' → logprob: -2.33967661857605
    4. 'x' → logprob: -4.089676856994629
    5. ' entier' → logprob: -5.464676856994629
    6. 'user' → logprob: -6.214676856994629
    7. 'age' → logprob: -6.339676856994629
    8. 'num' → logprob: -6.339676856994629
    9. 'number' → logprob: -6.464676856994629
    10. ' n' → logprob: -6.839676856994629

Token 20: '()' (ID: 416)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40113523602485657
    2. '(' → logprob: -1.6511352062225342
    3. '_' → logprob: -2.526135206222534
    4. ' )' → logprob: -4.026135444641113
    5. ')' → logprob: -4.651135444641113
    6. ' (' → logprob: -5.276135444641113
    7. 'input' → logprob: -5.651135444641113
    8. ' _' → logprob: -5.776135444641113
    9. ' =' → logprob: -6.151135444641113
    10. 'i' → logprob: -6.401135444641113

Token 21: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021710782311856747
    2. ' (' → logprob: -7.502171039581299
    3. '(
' → logprob: -7.877171039581299
    4. ')' → logprob: -8.002171516418457
    5. '#' → logprob: -8.252171516418457
    6. 's' → logprob: -8.752171516418457
    7. 'a' → logprob: -9.877171516418457
    8. ' ' → logprob: -9.877171516418457
    9. 'v' → logprob: -10.252171516418457
    10. 'n' → logprob: -10.502171516418457

Token 22: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015341434627771378
    2. 'i' → logprob: -7.0015339851379395
    3. ' it' → logprob: -8.126534461975098
    4. 'ir' → logprob: -9.876534461975098
    5. 't' → logprob: -10.001534461975098
    6. 'issant' → logprob: -10.376534461975098
    7. 'er' → logprob: -10.376534461975098
    8. 'e' → logprob: -10.751534461975098
    9. 'isseur' → logprob: -10.876534461975098
    10. 'et' → logprob: -11.001534461975098

Token 23: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1202276945114136
    2. 'l' → logprob: -1.3702276945114136
    3. ' la' → logprob: -1.6202276945114136
    4. ' l' → logprob: -2.995227813720703
    5. 'la' → logprob: -3.120227813720703
    6. ' ' → logprob: -3.745227813720703
    7. '()' → logprob: -4.370227813720703
    8. 'str' → logprob: -4.620227813720703
    9. 'string' → logprob: -4.620227813720703
    10. ' (' → logprob: -4.745227813720703

Token 24: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6003916263580322
    2. 'chaine' → logprob: -1.3503916263580322
    3. 'val' → logprob: -2.2253916263580322
    4. 'cha' → logprob: -3.1003916263580322
    5. 's' → logprob: -4.225391387939453
    6. ' chaine' → logprob: -4.850391387939453
    7. 'entrée' → logprob: -4.975391387939453
    8. ' valeur' → logprob: -5.100391387939453
    9. ' ' → logprob: -6.475391387939453
    10. 'str' → logprob: -7.225391387939453

Token 25: ' l' (ID: 305)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.3231639862060547
    2. ' ' → logprob: -1.5731639862060547
    3. 'entrée' → logprob: -1.9481639862060547
    4. ' d' → logprob: -2.4481639862060547
    5. ' de' → logprob: -3.0731639862060547
    6. 's' → logprob: -3.0731639862060547
    7. 'en' → logprob: -3.4481639862060547
    8. 'd' → logprob: -3.4481639862060547
    9. ' entrée' → logprob: -4.073163986206055
    10. 'de' → logprob: -4.198163986206055

Token 26: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0003657362540252507
    2. ''utilisateur' → logprob: -8.7503662109375
    3. 'u' → logprob: -9.2503662109375
    4. ''entrée' → logprob: -9.7503662109375
    5. ''ent' → logprob: -11.2503662109375
    6. 'e' → logprob: -12.0003662109375
    7. ''' → logprob: -12.1253662109375
    8. 'ecture' → logprob: -12.6253662109375
    9. 'ancée' → logprob: -12.8753662109375
    10. '’utilisateur' → logprob: -13.2503662109375

Token 27: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7302384376525879
    2. 'n' → logprob: -1.980238437652588
    3. '(' → logprob: -2.480238437652588
    4. 'entrée' → logprob: -3.105238437652588
    5. 'ent' → logprob: -3.355238437652588
    6. 'u' → logprob: -3.730238437652588
    7. ',' → logprob: -3.730238437652588
    8. ')' → logprob: -4.105238437652588
    9. '#' → logprob: -4.230238437652588
    10. 'nombre' → logprob: -4.355238437652588

Token 28: ' nombre' (ID: 9733)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.39015111327171326
    2. ' entier' → logprob: -1.2651511430740356
    3. 'ent' → logprob: -4.140151023864746
    4. ' ' → logprob: -4.515151023864746
    5. ' int' → logprob: -5.265151023864746
    6. 'un' → logprob: -5.640151023864746
    7. ' integer' → logprob: -6.390151023864746
    8. ' nombre' → logprob: -7.015151023864746
    9. 'int' → logprob: -7.015151023864746
    10. ' ent' → logprob: -7.390151023864746

Token 29: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0602714903652668
    2. 'x' → logprob: -3.5602715015411377
    3. '#' → logprob: -4.185271263122559
    4. '\n' → logprob: -5.935271263122559
    5. 'e' → logprob: -6.060271263122559
    6. 'nombre' → logprob: -6.435271263122559
    7. 'v' → logprob: -6.560271263122559
    8. 'i' → logprob: -6.685271263122559
    9. 'u' → logprob: -6.685271263122559
    10. 'ent' → logprob: -7.060271263122559

Token 30: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0615505613386631
    2. 'x' → logprob: -3.8115506172180176
    3. '#' → logprob: -4.311550617218018
    4. '\n' → logprob: -4.811550617218018
    5. 'e' → logprob: -5.811550617218018
    6. 'i' → logprob: -6.061550617218018
    7. 'ent' → logprob: -6.186550617218018
    8. '\' → logprob: -6.311550617218018
    9. 'nombre' → logprob: -6.686550617218018
    10. 'u' → logprob: -6.811550617218018

Token 31: 'base' (ID: 5423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009648896753787994
    2. 'int' → logprob: -5.25964879989624
    3. 'ent' → logprob: -5.88464879989624
    4. ' )' → logprob: -6.88464879989624
    5. ' entier' → logprob: -8.384649276733398
    6. ' int' → logprob: -8.759649276733398
    7. ' ent' → logprob: -10.009649276733398
    8. 'integer' → logprob: -10.634649276733398
    9. '<int' → logprob: -11.134649276733398
    10. '`)' → logprob: -11.259649276733398

Token 32: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04240294173359871
    2. ' ' → logprob: -3.292402982711792
    3. ')' → logprob: -5.792402744293213
    4. '1' → logprob: -8.417403221130371
    5. ',' → logprob: -8.542403221130371
    6. 'd' → logprob: -8.667403221130371
    7. ' dix' → logprob: -8.667403221130371
    8. ' )' → logprob: -8.917403221130371
    9. ' déc' → logprob: -9.292403221130371
    10. ' ' → logprob: -10.042403221130371

Token 33: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0032154994551092386
    2. ' ' → logprob: -5.878215312957764
    3. 'd' → logprob: -8.003215789794922
    4. ')' → logprob: -10.253215789794922
    5. '1' → logprob: -11.503215789794922
    6. '```' → logprob: -11.628215789794922
    7. '2' → logprob: -12.753215789794922
    8. ' déc' → logprob: -12.878215789794922
    9. ' dix' → logprob: -13.128215789794922
    10. '１０' → logprob: -13.253215789794922

Token 34: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.146429223008454e-05
    2. ')#' → logprob: -10.50006103515625
    3. ' )' → logprob: -11.00006103515625
    4. '#' → logprob: -11.25006103515625
    5. '')' → logprob: -14.25006103515625
    6. '))' → logprob: -14.37506103515625
    7. '`)' → logprob: -14.50006103515625
    8. ',' → logprob: -14.75006103515625
    9. ' ' → logprob: -15.12506103515625
    10. ')
' → logprob: -15.25006103515625

Token 35: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07453034818172455
    2. 'nombre' → logprob: -3.1995303630828857
    3. 'x' → logprob: -3.6995303630828857
    4. 'ent' → logprob: -6.074530124664307
    5. 'a' → logprob: -6.324530124664307
    6. 'age' → logprob: -7.074530124664307
    7. '```' → logprob: -8.324530601501465
    8. '\' → logprob: -8.574530601501465
    9. 'e' → logprob: -8.824530601501465
    10. 'number' → logprob: -8.949530601501465

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027617810294032097
    2. '=' → logprob: -3.6526176929473877
    3. ' ' → logprob: -6.652617931365967
    4. ' ' → logprob: -12.027617454528809
    5. '_' → logprob: -12.527617454528809
    6. ' =
' → logprob: -12.777617454528809
    7. '=int' → logprob: -12.902617454528809
    8. 'u' → logprob: -13.277617454528809
    9. '  ' → logprob: -13.402617454528809
    10. '=input' → logprob: -13.652617454528809

Token 37: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.026332227513194084
    2. 'int' → logprob: -3.651332139968872
    3. ' input' → logprob: -10.651331901550293
    4. ' ' → logprob: -12.526331901550293
    5. 'input' → logprob: -12.901331901550293
    6. ' ' → logprob: -14.026331901550293
    7. '=int' → logprob: -14.151331901550293
    8. '<int' → logprob: -15.901331901550293
    9. '[int' → logprob: -15.901331901550293
    10. '(int' → logprob: -16.52633285522461

Token 38: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31335094571113586
    2. '(input' → logprob: -1.3133509159088135
    3. ' (' → logprob: -10.563350677490234
    4. '('' → logprob: -10.813350677490234
    5. '(user' → logprob: -11.188350677490234
    6. '(
' → logprob: -12.063350677490234
    7. 'input' → logprob: -12.188350677490234
    8. '()' → logprob: -12.313350677490234
    9. '("("' → logprob: -12.438350677490234
    10. '(raw' → logprob: -13.438350677490234

Token 39: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18625183403491974
    2. '('' → logprob: -2.5612518787384033
    3. '()' → logprob: -2.8112518787384033
    4. '())' → logprob: -3.5612518787384033
    5. '(""))' → logprob: -6.686251640319824
    6. '("("' → logprob: -7.061251640319824
    7. '("' → logprob: -7.311251640319824
    8. '()))' → logprob: -7.686251640319824
    9. ')' → logprob: -7.811251640319824
    10. '("")' → logprob: -8.936251640319824

Token 40: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15331889688968658
    2. ' ' → logprob: -3.2783188819885254
    3. '#' → logprob: -3.4033188819885254
    4. '*' → logprob: -3.5283188819885254
    5. '<|end|>' → logprob: -4.528318881988525
    6. ')' → logprob: -4.653318881988525
    7. '%' → logprob: -5.403318881988525
    8. '
' → logprob: -5.528318881988525
    9. '\' → logprob: -6.153318881988525
    10. '+
' → logprob: -6.278318881988525

Token 41: ' Dem' (ID: 9458)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2200174331665039
    2. ' if' → logprob: -1.845017433166504
    3. '#' → logprob: -3.845017433166504
    4. 'for' → logprob: -4.345017433166504
    5. ' for' → logprob: -6.470017433166504
    6. 'factor' → logprob: -6.595017433166504
    7. 'print' → logprob: -6.970017433166504
    8. 's' → logprob: -7.220017433166504
    9. ' #' → logprob: -8.220017433166504
    10. ' factorial' → logprob: -10.095017433166504

Token 42: 'ande' (ID: 4102)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0516529083251953
    2. 'e' → logprob: -1.4266529083251953
    3. '#' → logprob: -1.9266529083251953
    4. 'print' → logprob: -3.0516529083251953
    5. 'if' → logprob: -3.1766529083251953
    6. 'ande' → logprob: -3.4266529083251953
    7. 'mande' → logprob: -3.6766529083251953
    8. 'andez' → logprob: -3.8016529083251953
    9. ' if' → logprob: -4.051652908325195
    10. '_' → logprob: -4.301652908325195

Token 43: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4978826940059662
    2. '()' → logprob: -1.8728827238082886
    3. '(' → logprob: -2.622882604598999
    4. 'au' → logprob: -3.247882604598999
    5. 'à' → logprob: -3.247882604598999
    6. ')' → logprob: -4.122882843017578
    7. 'a' → logprob: -4.372882843017578
    8. '#' → logprob: -4.997882843017578
    9. 's' → logprob: -5.372882843017578
    10. ' (' → logprob: -5.622882843017578

Token 44: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35091015696525574
    2. ' l' → logprob: -1.2259101867675781
    3. 'user' → logprob: -8.100910186767578
    4. ' un' → logprob: -8.475910186767578
    5. '	l' → logprob: -8.600910186767578
    6. 'un' → logprob: -8.725910186767578
    7. ' ' → logprob: -8.975910186767578
    8. 'une' → logprob: -9.100910186767578
    9. ''utilisateur' → logprob: -9.225910186767578
    10. ' user' → logprob: -9.350910186767578

Token 45: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.004722753074020147
    2. 'util' → logprob: -6.254722595214844
    3. '’utilisateur' → logprob: -6.879722595214844
    4. ''util' → logprob: -7.379722595214844
    5. 'a' → logprob: -8.254722595214844
    6. ' utilisateur' → logprob: -8.379722595214844
    7. '_util' → logprob: -8.879722595214844
    8. ''' → logprob: -9.004722595214844
    9. 'u' → logprob: -9.254722595214844
    10. ''us' → logprob: -9.504722595214844

Token 46: ' une' (ID: 2463)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0516589991748333
    2. ' d' → logprob: -4.301659107208252
    3. ')' → logprob: -4.801659107208252
    4. ' ' → logprob: -5.051659107208252
    5. ' à' → logprob: -5.551659107208252
    6. 'de' → logprob: -5.801659107208252
    7. '<|end|>' → logprob: -6.176659107208252
    8. '  ' → logprob: -6.301659107208252
    9. ' to' → logprob: -6.426659107208252
    10. 'd' → logprob: -6.426659107208252

Token 47: ' chaîne' (ID: 89288)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.5269854068756104
    2. ' deuxième' → logprob: -2.5269854068756104
    3. ' valeur' → logprob: -2.7769854068756104
    4. ' phrase' → logprob: -3.0269854068756104
    5. ' ' → logprob: -3.2769854068756104
    6. ' chaîne' → logprob: -3.6519854068756104
    7. 'n' → logprob: -4.026985168457031
    8. ' espace' → logprob: -4.151985168457031
    9. ' second' → logprob: -4.401985168457031
    10. 'de' → logprob: -4.776985168457031

Token 48: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25517696142196655
    2. 'de' → logprob: -2.0051770210266113
    3. ' de' → logprob: -2.8801770210266113
    4. ')' → logprob: -4.005177021026611
    5. '()' → logprob: -5.380177021026611
    6. ' ' → logprob: -6.130177021026611
    7. 'chaine' → logprob: -6.755177021026611
    8. ' =' → logprob: -6.880177021026611
    9. '_' → logprob: -7.255177021026611
    10. ',' → logprob: -7.630177021026611

Token 49: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.47524914145469666
    2. ' caractères' → logprob: -0.975249171257019
    3. ' caract' → logprob: -8.100249290466309
    4. ' caractère' → logprob: -8.350249290466309
    5. ' caracteres' → logprob: -8.350249290466309
    6. ' ' → logprob: -9.475249290466309
    7. '#' → logprob: -9.600249290466309
    8. 'texte' → logprob: -9.725249290466309
    9. ' car' → logprob: -9.725249290466309
    10. 'c' → logprob: -10.100249290466309

Token 50: ' composée' (ID: 146865)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010359516367316246
    2. 'input' → logprob: -5.635359287261963
    3. 'str' → logprob: -5.885359287261963
    4. 'chaine' → logprob: -6.135359287261963
    5. 'user' → logprob: -7.510359287261963
    6. '()' → logprob: -8.260359764099121
    7. ')' → logprob: -8.385359764099121
    8. 'message' → logprob: -9.010359764099121
    9. 'n' → logprob: -9.385359764099121
    10. 'a' → logprob: -9.510359764099121

Token 51: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1805761158466339
    2. 'd' → logprob: -2.3055760860443115
    3. ' de' → logprob: -3.0555760860443115
    4. 's' → logprob: -4.930576324462891
    5. 'de' → logprob: -5.555576324462891
    6. ' ' → logprob: -6.055576324462891
    7. '()' → logprob: -7.305576324462891
    8. ')' → logprob: -7.305576324462891
    9. '  ' → logprob: -7.305576324462891
    10. ' uniquement' → logprob: -7.555576324462891

Token 52: ' symbol' (ID: 10038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4956698417663574
    2. 'car' → logprob: -1.4956698417663574
    3. ' caractères' → logprob: -1.6206698417663574
    4. '0' → logprob: -2.3706698417663574
    5. ''' → logprob: -2.9956698417663574
    6. 's' → logprob: -3.1206698417663574
    7. ' lettres' → logprob: -3.8706698417663574
    8. 'm' → logprob: -3.9956698417663574
    9. ''a' → logprob: -4.120669841766357
    10. 'a' → logprob: -4.245669841766357

Token 53: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.001603652024641633
    2. 'ès' → logprob: -6.876603603363037
    3. 'è' → logprob: -7.876603603363037
    4. '#' → logprob: -9.501604080200195
    5. '`' → logprob: -10.626604080200195
    6. 's' → logprob: -11.001604080200195
    7. '```' → logprob: -11.501604080200195
    8. ' es' → logprob: -12.001604080200195
    9. 'les' → logprob: -12.126604080200195
    10. '\xc2' → logprob: -12.251604080200195

Token 54: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19763004779815674
    2. '()' → logprob: -2.822629928588867
    3. '.' → logprob: -3.822629928588867
    4. ' s' → logprob: -4.072629928588867
    5. ' ' → logprob: -4.447629928588867
    6. ',' → logprob: -4.572629928588867
    7. '(' → logprob: -4.822629928588867
    8. ' :' → logprob: -5.072629928588867
    9. ' =' → logprob: -5.572629928588867
    10. 'symbols' → logprob: -5.697629928588867

Token 55: 'car' (ID: 6830)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1053470373153687
    2. '+' → logprob: -1.2303470373153687
    3. '+-' → logprob: -2.605347156524658
    4. '()+' → logprob: -2.730347156524658
    5. ' +' → logprob: -2.980347156524658
    6. '0' → logprob: -3.855347156524658
    7. '()' → logprob: -3.855347156524658
    8. ' )' → logprob: -3.980347156524658
    9. '*' → logprob: -4.792847156524658
    10. ')' → logprob: -4.917847156524658

Token 56: 'act' (ID: 588)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.19904229044914246
    2. 'è' → logprob: -1.9490423202514648
    3. 'ères' → logprob: -4.324042320251465
    4. 'ès' → logprob: -4.449042320251465
    5. 'à' → logprob: -5.824042320251465
    6. 's' → logprob: -6.074042320251465
    7. 'act' → logprob: -6.199042320251465
    8. '#' → logprob: -6.574042320251465
    9. 'acters' → logprob: -6.699042320251465
    10. '`' → logprob: -7.324042320251465

Token 57: 'ères' (ID: 12614)
  Prédit: 'ères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ères' → logprob: -0.023881925269961357
    2. 'è' → logprob: -3.7738819122314453
    3. 'èr' → logprob: -9.273881912231445
    4. 'ère' → logprob: -9.398881912231445
    5. '�' → logprob: -9.523881912231445
    6. 'é' → logprob: -9.898881912231445
    7. 'èrs' → logprob: -10.023881912231445
    8. '`' → logprob: -10.273881912231445
    9. 'eres' → logprob: -10.523881912231445
    10. '```' → logprob: -10.648881912231445

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48317083716392517
    2. ' )' → logprob: -1.4831708669662476
    3. 's' → logprob: -2.983170747756958
    4. ' math' → logprob: -3.858170747756958
    5. ',' → logprob: -3.983170747756958
    6. ' ' → logprob: -4.108170986175537
    7. ' ,' → logprob: -5.358170986175537
    8. ' spé' → logprob: -5.733170986175537
    9. '+' → logprob: -6.108170986175537
    10. ' d' → logprob: -6.233170986175537

Token 59: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0447087362408638
    2. ' s' → logprob: -3.669708728790283
    3. 'symbol' → logprob: -5.044708728790283
    4. 'symbols' → logprob: -5.169708728790283
    5. ' symbols' → logprob: -6.294708728790283
    6. 'chaine' → logprob: -7.169708728790283
    7. ' sym' → logprob: -7.419708728790283
    8. ' symbol' → logprob: -7.419708728790283
    9. 'sym' → logprob: -7.419708728790283
    10. ' symbole' → logprob: -8.294709205627441

Token 60: ' list' (ID: 1562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43900278210639954
    2. ' s' → logprob: -2.189002752304077
    3. 'symbol' → logprob: -2.439002752304077
    4. 'symbols' → logprob: -2.814002752304077
    5. 'sym' → logprob: -3.689002752304077
    6. ' symbols' → logprob: -4.064002990722656
    7. 'chaine' → logprob: -4.189002990722656
    8. ' symbol' → logprob: -4.814002990722656
    9. ' symbole' → logprob: -5.064002990722656
    10. ' sym' → logprob: -5.189002990722656

Token 61: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9324453473091125
    2. 's' → logprob: -1.5574452877044678
    3. '()' → logprob: -2.4324452877044678
    4. '_' → logprob: -2.8074452877044678
    5. '=' → logprob: -3.0574452877044678
    6. '_sym' → logprob: -3.0574452877044678
    7. 'sym' → logprob: -3.0574452877044678
    8. '_symbols' → logprob: -3.3074452877044678
    9. '_symbol' → logprob: -4.682445526123047
    10. ' =' → logprob: -4.807445526123047

Token 62: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2265501767396927
    2. '(input' → logprob: -1.7265502214431763
    3. '(
' → logprob: -4.976550102233887
    4. 's' → logprob: -4.976550102233887
    5. '()' → logprob: -5.476550102233887
    6. 'input' → logprob: -6.101550102233887
    7. ' converts' → logprob: -7.351550102233887
    8. '(s' → logprob: -7.601550102233887
    9. 'convert' → logprob: -7.601550102233887
    10. '('' → logprob: -8.101550102233887

Token 63: ' la' (ID: 557)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4983787536621094
    2. 'input' → logprob: -1.7483787536621094
    3. '(' → logprob: -2.7483787536621094
    4. 'l' → logprob: -3.1233787536621094
    5. ' la' → logprob: -3.6233787536621094
    6. ' l' → logprob: -3.9983787536621094
    7. ' input' → logprob: -3.9983787536621094
    8. 's' → logprob: -3.9983787536621094
    9. 'str' → logprob: -5.123378753662109
    10. ' (' → logprob: -5.873378753662109

Token 64: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.133366584777832
    2. ' chaîne' → logprob: -1.258366584777832
    3. ' input' → logprob: -1.508366584777832
    4. 'input' → logprob: -2.008366584777832
    5. 'cha' → logprob: -4.383366584777832
    6. ' chaine' → logprob: -4.508366584777832
    7. 's' → logprob: -5.633366584777832
    8. 'str' → logprob: -5.758366584777832
    9. 'entrée' → logprob: -6.008366584777832
    10. 'string' → logprob: -6.258366584777832

Token 65: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5163747668266296
    2. 's' → logprob: -1.5163748264312744
    3. '(' → logprob: -2.8913748264312744
    4. ')' → logprob: -3.7663748264312744
    5. 'en' → logprob: -4.266374588012695
    6. ' (' → logprob: -4.391374588012695
    7. '()' → logprob: -4.641374588012695
    8. '(n' → logprob: -4.641374588012695
    9. '(input' → logprob: -4.641374588012695
    10. ' de' → logprob: -5.391374588012695

Token 66: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7753788828849792
    2. ' liste' → logprob: -0.7753788828849792
    3. 'une' → logprob: -2.650378942489624
    4. 'liste' → logprob: -5.650378704071045
    5. ' list' → logprob: -5.900378704071045
    6. 'list' → logprob: -7.775378704071045
    7. 'a' → logprob: -7.900378704071045
    8. ' ['' → logprob: -8.275379180908203
    9. ' ' → logprob: -8.775379180908203
    10. ' listes' → logprob: -9.025379180908203

Token 67: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1716419756412506
    2. 'liste' → logprob: -1.9216419458389282
    3. 'list' → logprob: -4.796641826629639
    4. ' list' → logprob: -6.296641826629639
    5. 's' → logprob: -7.796641826629639
    6. 'Liste' → logprob: -8.296642303466797
    7. 'e' → logprob: -8.421642303466797
    8. '[]' → logprob: -9.546642303466797
    9. 'es' → logprob: -9.546642303466797
    10. ' listes' → logprob: -9.671642303466797

Token 68: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004194979090243578
    2. '(input' → logprob: -6.379195213317871
    3. '()' → logprob: -6.879195213317871
    4. 's' → logprob: -7.254195213317871
    5. '(s' → logprob: -9.129195213317871
    6. ' (' → logprob: -9.504195213317871
    7. '<|end|>' → logprob: -10.129195213317871
    8. '(n' → logprob: -10.129195213317871
    9. '(
' → logprob: -10.254195213317871
    10. '('' → logprob: -10.254195213317871

Token 69: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6397799849510193
    2. 'car' → logprob: -0.7647799849510193
    3. ' caracteres' → logprob: -6.389780044555664
    4. ' caract' → logprob: -6.514780044555664
    5. 'symbol' → logprob: -7.014780044555664
    6. ' symbol' → logprob: -7.264780044555664
    7. ' car' → logprob: -7.389780044555664
    8. 'c' → logprob: -7.889780044555664
    9. 's' → logprob: -8.014780044555664
    10. 'char' → logprob: -8.639780044555664

Token 70: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08169257640838623
    2. 'sym' → logprob: -2.956692695617676
    3. 'c' → logprob: -5.206692695617676
    4. 'symbols' → logprob: -5.206692695617676
    5. 'symbol' → logprob: -5.456692695617676
    6. 'car' → logprob: -5.956692695617676
    7. '(' → logprob: -6.581692695617676
    8. '(s' → logprob: -6.831692695617676
    9. 'a' → logprob: -6.956692695617676
    10. 'n' → logprob: -7.831692695617676

Token 71: ' l' (ID: 305)
  Prédit: ' faciliter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.15131832659244537
    2. ' pouvoir' → logprob: -2.151318311691284
    3. ' permettre' → logprob: -5.526318550109863
    4. ' facilitar' → logprob: -6.026318550109863
    5. 's' → logprob: -6.401318550109863
    6. '[' → logprob: -6.401318550109863
    7. ' facilite' → logprob: -6.526318550109863
    8. 'fac' → logprob: -6.651318550109863
    9. ' rendre' → logprob: -6.901318550109863
    10. ' facilitate' → logprob: -7.026318550109863

Token 72: ''accès' (ID: 116356)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5367586612701416
    2. 'a' → logprob: -0.9117586612701416
    3. ''a' → logprob: -5.2867584228515625
    4. 'ire' → logprob: -6.5367584228515625
    5. ''' → logprob: -6.7867584228515625
    6. 'es' → logprob: -7.4117584228515625
    7. '```' → logprob: -7.4117584228515625
    8. ''e' → logprob: -8.036758422851562
    9. '')' → logprob: -8.286758422851562
    10. ''é' → logprob: -8.536758422851562

Token 73: ' index' (ID: 3472)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -1.0418533086776733
    2. ' au' → logprob: -1.6668533086776733
    3. '[]' → logprob: -2.166853427886963
    4. 'au' → logprob: -2.416853427886963
    5. ' à' → logprob: -2.416853427886963
    6. '[' → logprob: -2.541853427886963
    7. ' direct' → logprob: -4.291853427886963
    8. 'aux' → logprob: -4.416853427886963
    9. ' par' → logprob: -5.416853427886963
    10. 's' → logprob: -5.416853427886963

Token 74: 'é' (ID: 377)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1082370281219482
    2. 'es' → logprob: -1.1082370281219482
    3. '[' → logprob: -1.2332370281219482
    4. '[]' → logprob: -3.6082370281219482
    5. 'eurs' → logprob: -4.483237266540527
    6. 'e' → logprob: -5.233237266540527
    7. 'és' → logprob: -7.358237266540527
    8. 'eur' → logprob: -7.483237266540527
    9. ')' → logprob: -7.733237266540527
    10. ' ' → logprob: -7.983237266540527

Token 75: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009311995469033718
    2. 'c' → logprob: -6.259312152862549
    3. 'sym' → logprob: -6.759312152862549
    4. 'symbols' → logprob: -6.884312152862549
    5. 'a' → logprob: -7.009312152862549
    6. 'symbol' → logprob: -7.009312152862549
    7. ' s' → logprob: -7.384312152862549
    8. ')' → logprob: -7.759312152862549
    9. 'chaine' → logprob: -8.00931167602539
    10. 't' → logprob: -8.50931167602539

Token 76: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3031570613384247
    2. 'symbols' → logprob: -1.803157091140747
    3. 'sym' → logprob: -2.928157091140747
    4. 'symbol' → logprob: -4.428156852722168
    5. 'c' → logprob: -5.428156852722168
    6. 'l' → logprob: -5.553156852722168
    7. 'a' → logprob: -5.553156852722168
    8. 'car' → logprob: -5.803156852722168
    9. 'p' → logprob: -5.928156852722168
    10. 'chaine' → logprob: -6.053156852722168

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05492324382066727
    2. '=' → logprob: -2.9299232959747314
    3. 's' → logprob: -10.554923057556152
    4. ' ' → logprob: -11.929923057556152
    5. '_' → logprob: -12.929923057556152
    6. ',' → logprob: -13.554923057556152
    7. '  ' → logprob: -13.929923057556152
    8. ')' → logprob: -14.054923057556152
    9. '[' → logprob: -14.179923057556152
    10. ' ' → logprob: -14.679923057556152

Token 78: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2275875061750412
    2. 'list' → logprob: -1.6025874614715576
    3. ' input' → logprob: -6.727587699890137
    4. 'input' → logprob: -6.977587699890137
    5. ' l' → logprob: -11.477587699890137
    6. ' li' → logprob: -11.852587699890137
    7. 'li' → logprob: -12.102587699890137
    8. ' str' → logprob: -12.727587699890137
    9. ' ' → logprob: -13.102587699890137
    10. 'str' → logprob: -13.102587699890137

Token 79: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3136374056339264
    2. '(' → logprob: -1.313637375831604
    3. ' (' → logprob: -8.188637733459473
    4. '(
' → logprob: -9.688637733459473
    5. '(

' → logprob: -11.188637733459473
    6. '(s' → logprob: -11.938637733459473
    7. 'input' → logprob: -12.188637733459473
    8. '(str' → logprob: -12.438637733459473
    9. '()' → logprob: -13.938637733459473
    10. '=input' → logprob: -13.938637733459473

Token 80: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011219942942261696
    2. '()' → logprob: -4.5112199783325195
    3. '()))' → logprob: -8.88621997833252
    4. ')' → logprob: -11.01121997833252
    5. ' ())' → logprob: -11.38621997833252
    6. '();)' → logprob: -12.88621997833252
    7. '(' → logprob: -13.38621997833252
    8. '())
' → logprob: -14.88621997833252
    9. '()]' → logprob: -15.38621997833252
    10. '());' → logprob: -15.51121997833252

Token 81: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.303481101989746
    2. '[' → logprob: -1.428481101989746
    3. ' ' → logprob: -1.928481101989746
    4. ' 
' → logprob: -2.053481101989746
    5. 'i' → logprob: -2.928481101989746
    6. '.' → logprob: -3.678481101989746
    7. '
' → logprob: -3.928481101989746
    8. 'n' → logprob: -4.178481101989746
    9. '  
' → logprob: -4.428481101989746
    10. '+' → logprob: -4.553481101989746

Token 82: ' Pr' (ID: 2284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8953381180763245
    2. '#' → logprob: -1.2703380584716797
    3. 'if' → logprob: -2.2703380584716797
    4. 'for' → logprob: -2.5203380584716797
    5. 'f' → logprob: -2.8953380584716797
    6. 'p' → logprob: -3.8953380584716797
    7. 'd' → logprob: -4.89533805847168
    8. 'r' → logprob: -5.14533805847168
    9. 'n' → logprob: -5.39533805847168
    10. 'c' → logprob: -5.39533805847168

Token 83: 'end' (ID: 419)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17512117326259613
    2. 'int' → logprob: -2.3001210689544678
    3. '#' → logprob: -3.8001210689544678
    4. 'e' → logprob: -4.175121307373047
    5. 'in' → logprob: -4.550121307373047
    6. 'é' → logprob: -4.925121307373047
    7. 'o' → logprob: -5.550121307373047
    8. 'í' → logprob: -8.925121307373047
    9. 'ié' → logprob: -9.050121307373047
    10. ' #' → logprob: -9.800121307373047

Token 84: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6122227311134338
    2. '()' → logprob: -2.237222671508789
    3. '(' → logprob: -2.362222671508789
    4. ' ' → logprob: -2.487222671508789
    5. 'e' → logprob: -2.862222671508789
    6. 's' → logprob: -3.237222671508789
    7. '[:]' → logprob: -4.737222671508789
    8. ' =' → logprob: -4.862222671508789
    9. ')' → logprob: -5.237222671508789
    10. '=' → logprob: -5.237222671508789

Token 85: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34654954075813293
    2. 'n' → logprob: -1.9715495109558105
    3. 's' → logprob: -3.8465495109558105
    4. 'i' → logprob: -3.8465495109558105
    5. ' s' → logprob: -3.8465495109558105
    6. ' ' → logprob: -4.0965495109558105
    7. 'élé' → logprob: -4.3465495109558105
    8. ' caractères' → logprob: -4.3465495109558105
    9. ' premières' → logprob: -5.3465495109558105
    10. ' éléments' → logprob: -5.3465495109558105

Token 86: ' premiers' (ID: 59140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7552482485771179
    2. '_' → logprob: -1.0052483081817627
    3. ' premiers' → logprob: -3.3802483081817627
    4. '+' → logprob: -3.8802483081817627
    5. '  ' → logprob: -4.130248069763184
    6. 'e' → logprob: -4.380248069763184
    7. ')' → logprob: -4.505248069763184
    8. ' )' → logprob: -4.755248069763184
    9. '[' → logprob: -4.880248069763184
    10. ' premières' → logprob: -4.880248069763184

Token 87: ' caractères' (ID: 183106)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0423487424850464
    2. 'élé' → logprob: -1.0423487424850464
    3. ' caractères' → logprob: -2.167348861694336
    4. 's' → logprob: -2.417348861694336
    5. ' éléments' → logprob: -3.292348861694336
    6. 'car' → logprob: -4.417348861694336
    7. '<|end|>' → logprob: -5.292348861694336
    8. ' caract' → logprob: -5.667348861694336
    9. ' )' → logprob: -5.667348861694336
    10. '  ' → logprob: -5.667348861694336

Token 88: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01702210120856762
    2. ' s' → logprob: -4.517022132873535
    3. '[' → logprob: -5.892022132873535
    4. ' ' → logprob: -6.517022132873535
    5. '[:]' → logprob: -7.767022132873535
    6. ' =' → logprob: -7.892022132873535
    7. '=' → logprob: -8.392022132873535
    8. '(s' → logprob: -8.642022132873535
    9. '[:' → logprob: -9.267022132873535
    10. '(' → logprob: -9.767022132873535

Token 89: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07278230786323547
    2. 's' → logprob: -2.822782278060913
    3. ' la' → logprob: -4.572782516479492
    4. 'la' → logprob: -7.822782516479492
    5. ' ' → logprob: -11.197782516479492
    6. 'l' → logprob: -12.822782516479492
    7. ' the' → logprob: -12.947782516479492
    8. ' l' → logprob: -13.447782516479492
    9. 'a' → logprob: -13.572782516479492
    10. ' ' → logprob: -13.697782516479492

Token 90: ' liste' (ID: 31719)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9736738204956055
    2. 's' → logprob: -1.0986738204956055
    3. ' chaîne' → logprob: -1.7236738204956055
    4. ' liste' → logprob: -2.8486738204956055
    5. ' ' → logprob: -3.8486738204956055
    6. ' chaine' → logprob: -4.0986738204956055
    7. ' string' → logprob: -5.0986738204956055
    8. 'chaine' → logprob: -5.7236738204956055
    9. ' list' → logprob: -6.0986738204956055
    10. 'liste' → logprob: -6.7236738204956055

Token 91: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.031052950769662857
    2. '[' → logprob: -3.906053066253662
    3. ' s' → logprob: -4.781053066253662
    4. '[:' → logprob: -6.656053066253662
    5. '[:]' → logprob: -7.781053066253662
    6. '=' → logprob: -9.656052589416504
    7. ' =' → logprob: -9.781052589416504
    8. ' [' → logprob: -10.156052589416504
    9. '(' → logprob: -10.281052589416504
    10. ' ' → logprob: -10.656052589416504

Token 92: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08509460091590881
    2. '[' → logprob: -2.960094690322876
    3. '[:' → logprob: -3.585094690322876
    4. '[:]' → logprob: -6.585094451904297
    5. 'n' → logprob: -8.585094451904297
    6. '=' → logprob: -8.960094451904297
    7. ' s' → logprob: -9.210094451904297
    8. ':' → logprob: -9.710094451904297
    9. '[n' → logprob: -10.585094451904297
    10. ']' → logprob: -10.585094451904297

Token 93: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0528978630900383
    2. 's' → logprob: -4.302897930145264
    3. ' stock' → logprob: -4.427897930145264
    4. ' crée' → logprob: -4.552897930145264
    5. 'print' → logprob: -5.677897930145264
    6. ' en' → logprob: -6.677897930145264
    7. 'les' → logprob: -6.802897930145264
    8. '#' → logprob: -6.927897930145264
    9. ' print' → logprob: -7.052897930145264
    10. ' affiche' → logprob: -7.177897930145264

Token 94: ' stock' (ID: 6546)
  Prédit: ' affiche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.8393332362174988
    2. 'aff' → logprob: -1.7143332958221436
    3. ' stock' → logprob: -2.8393332958221436
    4. ' print' → logprob: -2.9643332958221436
    5. 'print' → logprob: -3.4643332958221436
    6. ' ' → logprob: -3.7143332958221436
    7. 's' → logprob: -3.8393332958221436
    8. ' affich' → logprob: -3.8393332958221436
    9. ' afficher' → logprob: -3.8393332958221436
    10. ':' → logprob: -3.9643332958221436

Token 95: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0026580586563795805
    2. 'er' → logprob: -6.502657890319824
    3. ' =' → logprob: -7.752657890319824
    4. '=' → logprob: -8.627657890319824
    5. '[:' → logprob: -9.002657890319824
    6. 'ent' → logprob: -9.002657890319824
    7. '[:]' → logprob: -9.252657890319824
    8. ' e' → logprob: -9.627657890319824
    9. '[' → logprob: -10.252657890319824
    10. 'a' → logprob: -10.627657890319824

Token 96: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.774026095867157
    2. '[' → logprob: -1.1490261554718018
    3. '[:' → logprob: -2.0240261554718018
    4. '[:]' → logprob: -3.1490261554718018
    5. '=' → logprob: -3.2740261554718018
    6. ' s' → logprob: -5.774025917053223
    7. ' =' → logprob: -6.024025917053223
    8. ':' → logprob: -6.399025917053223
    9. ' :' → logprob: -8.274025917053223
    10. '(' → logprob: -8.399025917053223

Token 97: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28769150376319885
    2. 's' → logprob: -1.4126914739608765
    3. ' une' → logprob: -6.037691593170166
    4. ' a' → logprob: -6.412691593170166
    5. ' la' → logprob: -7.287691593170166
    6. 'a' → logprob: -7.787691593170166
    7. 'une' → logprob: -8.412691116333008
    8. ' n' → logprob: -9.037691116333008
    9. ' l' → logprob: -9.037691116333008
    10. 'n' → logprob: -9.162691116333008

Token 98: 'l' (ID: 75)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8163962364196777
    2. 'sub' → logprob: -1.4413962364196777
    3. 'prefix' → logprob: -2.3163962364196777
    4. 'result' → logprob: -3.0663962364196777
    5. ' s' → logprob: -3.1913962364196777
    6. 'p' → logprob: -3.5663962364196777
    7. 't' → logprob: -3.9413962364196777
    8. 'substring' → logprob: -4.441396236419678
    9. ' sub' → logprob: -4.566396236419678
    10. 'subset' → logprob: -4.566396236419678

Token 99: ''
' (ID: 2207)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.7503401041030884
    2. 'ist' → logprob: -0.8753401041030884
    3. 'e' → logprob: -3.375339984893799
    4. '')' → logprob: -4.125339984893799
    5. 'i' → logprob: -4.625339984893799
    6. ''' → logprob: -5.000339984893799
    7. 's' → logprob: -5.250339984893799
    8. 'is' → logprob: -5.250339984893799
    9. '```' → logprob: -5.250339984893799
    10. '']' → logprob: -5.375339984893799

Token 100: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4994354546070099
    2. '=' → logprob: -1.2494354248046875
    3. ' =' → logprob: -2.8744354248046875
    4. ' l' → logprob: -3.4994354248046875
    5. 's' → logprob: -4.2494354248046875
    6. '[' → logprob: -5.8744354248046875
    7. '[:' → logprob: -7.1244354248046875
    8. 'n' → logprob: -7.4994354248046875
    9. '=l' → logprob: -7.4994354248046875
    10. '[:]' → logprob: -7.4994354248046875

Token 101: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00041935223271138966
    2. ' l' → logprob: -8.125419616699219
    3. '=' → logprob: -9.375419616699219
    4. ' =' → logprob: -10.375419616699219
    5. '[' → logprob: -13.000419616699219
    6. '=l' → logprob: -13.625419616699219
    7. ':' → logprob: -14.000419616699219
    8. '[:' → logprob: -14.000419616699219
    9. ']' → logprob: -14.750419616699219
    10. '=
' → logprob: -15.250419616699219

Token 102: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0025926579255610704
    2. '[' → logprob: -6.62759256362915
    3. '=' → logprob: -7.12759256362915
    4. ' =' → logprob: -8.377593040466309
    5. '[:]' → logprob: -9.127593040466309
    6. '[n' → logprob: -9.627593040466309
    7. '[l' → logprob: -11.127593040466309
    8. 's' → logprob: -12.002593040466309
    9. '=l' → logprob: -12.002593040466309
    10. ' [:' → logprob: -12.377593040466309

Token 103: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.5597102396423e-05
    2. ' n' → logprob: -10.250035285949707
    3. ']' → logprob: -15.875035285949707
    4. ')n' → logprob: -16.750036239624023
    5. '	n' → logprob: -16.875036239624023
    6. ')' → logprob: -17.250036239624023
    7. '(n' → logprob: -17.500036239624023
    8. ' ' → logprob: -17.750036239624023
    9. '  ' → logprob: -19.250036239624023
    10. ',' → logprob: -19.375036239624023

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011173540260642767
    2. ' ]' → logprob: -7.00111722946167
    3. 'n' → logprob: -9.876117706298828
    4. 's' → logprob: -10.126117706298828
    5. '[:' → logprob: -10.126117706298828
    6. '][:' → logprob: -10.126117706298828
    7. ']
' → logprob: -11.376117706298828
    8. ':]' → logprob: -12.251117706298828
    9. ']

' → logprob: -12.876117706298828
    10. ':n' → logprob: -13.376117706298828

Token 105: ' signifie' (ID: 81149)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.138245940208435
    2. '[:]' → logprob: -1.513245940208435
    3. '[:' → logprob: -1.763245940208435
    4. '<|end|>' → logprob: -2.3882460594177246
    5. 'n' → logprob: -3.0132460594177246
    6. '=' → logprob: -3.3882460594177246
    7. ' l' → logprob: -3.5132460594177246
    8. ' ' → logprob: -3.6382460594177246
    9. 's' → logprob: -3.8882460594177246
    10. ')' → logprob: -4.513246059417725

Token 106: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4898017644882202
    2. ' s' → logprob: -1.7398017644882202
    3. ' la' → logprob: -1.8648017644882202
    4. ' prendre' → logprob: -2.2398018836975098
    5. 'prendre' → logprob: -2.6148018836975098
    6. 'la' → logprob: -2.6148018836975098
    7. ' les' → logprob: -2.9898018836975098
    8. 'les' → logprob: -3.1148018836975098
    9. ' "' → logprob: -3.9898018836975098
    10. '"' → logprob: -4.36480188369751

Token 107: 't' (ID: 83)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.49653202295303345
    2. 'prendre' → logprob: -1.7465319633483887
    3. 's' → logprob: -2.1215319633483887
    4. 'la' → logprob: -2.9965319633483887
    5. 'pr' → logprob: -4.121531963348389
    6. ' les' → logprob: -4.371531963348389
    7. ' prendre' → logprob: -4.871531963348389
    8. 'l' → logprob: -6.496531963348389
    9. ' s' → logprob: -6.996531963348389
    10. 'prem' → logprob: -7.121531963348389

Token 108: 'ous' (ID: 784)
  Prédit: 'ake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.06522514671087265
    2. 's' → logprob: -3.815225124359131
    3. 'he' → logprob: -4.065225124359131
    4. 'akes' → logprob: -5.315225124359131
    5. 'aking' → logprob: -5.315225124359131
    6. 'aker' → logprob: -5.440225124359131
    7. 'e' → logprob: -6.190225124359131
    8. 'r' → logprob: -6.190225124359131
    9. 'a' → logprob: -7.190225124359131
    10. 'prendre' → logprob: -7.315225124359131

Token 109: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5118134617805481
    2. ' les' → logprob: -1.2618134021759033
    3. 's' → logprob: -2.2618134021759033
    4. '(s' → logprob: -4.761813640594482
    5. ' s' → logprob: -5.761813640594482
    6. '(' → logprob: -7.511813640594482
    7. 'l' → logprob: -8.136813163757324
    8. 'le' → logprob: -8.636813163757324
    9. ' ' → logprob: -8.761813163757324
    10. 'n' → logprob: -9.386813163757324

Token 110: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.15133780241012573
    2. 'car' → logprob: -2.5263378620147705
    3. ' caractères' → logprob: -3.1513378620147705
    4. ' éléments' → logprob: -4.276337623596191
    5. 's' → logprob: -6.401337623596191
    6. 'indices' → logprob: -8.401337623596191
    7. ' ' → logprob: -8.401337623596191
    8. 'n' → logprob: -8.401337623596191
    9. ' s' → logprob: -8.526337623596191
    10. ' car' → logprob: -8.776337623596191

Token 111: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0359740257263184
    2. ' jusqu' → logprob: -1.2859740257263184
    3. 'de' → logprob: -1.5359740257263184
    4. 'jus' → logprob: -2.1609740257263184
    5. 's' → logprob: -4.160974025726318
    6. ' jusque' → logprob: -5.535974025726318
    7. ' s' → logprob: -5.785974025726318
    8. 'avant' → logprob: -5.785974025726318
    9. ' ' → logprob: -6.285974025726318
    10. ' à' → logprob: -6.410974025726318

Token 112: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.08166522532701492
    2. 's' → logprob: -2.581665277481079
    3. ' la' → logprob: -5.9566650390625
    4. 'la' → logprob: -9.3316650390625
    5. ' l' → logprob: -9.9566650390625
    6. ' ' → logprob: -10.8316650390625
    7. 'l' → logprob: -10.8316650390625
    8. '	s' → logprob: -13.8316650390625
    9. '  ' → logprob: -14.3316650390625
    10. '```' → logprob: -14.3316650390625

Token 113: ',' (ID: 11)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.5295906662940979
    2. 'jus' → logprob: -1.7795906066894531
    3. ']' → logprob: -2.029590606689453
    4. 'de' → logprob: -3.154590606689453
    5. 's' → logprob: -4.279590606689453
    6. '[:' → logprob: -4.279590606689453
    7. '][:' → logprob: -5.154590606689453
    8. ' ]' → logprob: -5.279590606689453
    9. 'n' → logprob: -5.529590606689453
    10. ' ' → logprob: -5.654590606689453

Token 114: ' depuis' (ID: 16277)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.9807508587837219
    2. 'de' → logprob: -1.6057507991790771
    3. 'jus' → logprob: -1.8557507991790771
    4. ' de' → logprob: -2.105750799179077
    5. '0' → logprob: -2.605750799179077
    6. 's' → logprob: -4.230751037597656
    7. ' ' → logprob: -4.855751037597656
    8. 'à' → logprob: -4.980751037597656
    9. ' jusque' → logprob: -5.105751037597656
    10. ' index' → logprob: -5.230751037597656

Token 115: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2712891399860382
    2. 'l' → logprob: -1.6462891101837158
    3. 'le' → logprob: -3.521289110183716
    4. ' l' → logprob: -5.021289348602295
    5. ' ' → logprob: -5.521289348602295
    6. 'index' → logprob: -6.396289348602295
    7. ' index' → logprob: -6.771289348602295
    8. ' le' → logprob: -6.896289348602295
    9. 'la' → logprob: -8.396288871765137
    10. 'indice' → logprob: -8.521288871765137

Token 116: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20270398259162903
    2. 'e' → logprob: -2.4527039527893066
    3. 'a' → logprob: -2.5777039527893066
    4. ''' → logprob: -4.452703952789307
    5. 'es' → logprob: -5.077703952789307
    6. ''ind' → logprob: -6.952703952789307
    7. ' ' → logprob: -7.452703952789307
    8. '[' → logprob: -8.077704429626465
    9. '1' → logprob: -8.202704429626465
    10. ':' → logprob: -8.327704429626465

Token 117: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.005328266881406307
    2. 'ice' → logprob: -5.505328178405762
    3. 'e' → logprob: -7.630328178405762
    4. 'ce' → logprob: -8.505328178405762
    5. '```' → logprob: -8.505328178405762
    6. '0' → logprob: -9.255328178405762
    7. '   ' → logprob: -10.505328178405762
    8. ' ' → logprob: -10.755328178405762
    9. 'exe' → logprob: -10.755328178405762
    10. 'ices' → logprob: -11.005328178405762

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620710853487253
    2. ' ' → logprob: -5.379620552062988
    3. ' ' → logprob: -15.379620552062988
    4. '  ' → logprob: -16.379621505737305
    5. ' 
' → logprob: -16.629621505737305
    6. '```' → logprob: -16.629621505737305
    7. ' zéro' → logprob: -17.254621505737305
    8. 's' → logprob: -17.254621505737305
    9. '`' → logprob: -17.754621505737305
    10. '1' → logprob: -17.754621505737305

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00103352265432477
    2. ' ' → logprob: -6.876033306121826
    3. '  ' → logprob: -15.126033782958984
    4. '1' → logprob: -15.751033782958984
    5. 's' → logprob: -16.126033782958984
    6. '```' → logprob: -17.001033782958984
    7. ' ' → logprob: -17.251033782958984
    8. '`' → logprob: -17.376033782958984
    9. ' jusqu' → logprob: -17.376033782958984
    10. '=' → logprob: -17.501033782958984

Token 120: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.8764269351959229
    2. 'jus' → logprob: -1.0014269351959229
    3. ' à' → logprob: -3.001426935195923
    4. ':' → logprob: -3.126426935195923
    5. ':n' → logprob: -3.126426935195923
    6. '0' → logprob: -3.376426935195923
    7. 'à' → logprob: -3.876426935195923
    8. 'n' → logprob: -4.876426696777344
    9. ':j' → logprob: -4.876426696777344
    10. ' ' → logprob: -5.501426696777344

Token 121: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.47114306688308716
    2. ' à' → logprob: -1.7211430072784424
    3. 'à' → logprob: -2.5961430072784424
    4. '’à' → logprob: -2.8461430072784424
    5. ''au' → logprob: -3.4711430072784424
    6. 'au' → logprob: -3.9711430072784424
    7. ' au' → logprob: -4.7211432456970215
    8. '’au' → logprob: -6.2211432456970215
    9. 'a' → logprob: -6.5961432456970215
    10. 'n' → logprob: -6.9711432456970215

Token 122: ' mais' (ID: 2899)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5762390494346619
    2. ' n' → logprob: -0.8262390494346619
    3. '	n' → logprob: -9.576238632202148
    4. 'indice' → logprob: -10.076238632202148
    5. ' ' → logprob: -10.326238632202148
    6. ' l' → logprob: -10.326238632202148
    7. 'l' → logprob: -10.576238632202148
    8. ' ' → logprob: -10.826238632202148
    9. ' indice' → logprob: -10.951238632202148
    10. ' index' → logprob: -11.326238632202148

Token 123: ' non' (ID: 2893)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.06250736862421036
    2. 'pas' → logprob: -3.187507390975952
    3. ' à' → logprob: -4.562507152557373
    4. ' au' → logprob: -5.812507152557373
    5. ' not' → logprob: -6.187507152557373
    6. ' non' → logprob: -7.187507152557373
    7. '<|end|>' → logprob: -7.312507152557373
    8. 'à' → logprob: -7.562507152557373
    9. 'sans' → logprob: -7.812507152557373
    10. '_pas' → logprob: -8.062507629394531

Token 124: ' inclus' (ID: 11891)
  Prédit: ' compris'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compris' → logprob: -0.45274487137794495
    2. ' inclus' → logprob: -1.2027448415756226
    3. '<|end|>' → logprob: -4.577744960784912
    4. ' pas' → logprob: -4.827744960784912
    5. ' inclu' → logprob: -4.952744960784912
    6. 's' → logprob: -5.077744960784912
    7. 'inclusive' → logprob: -5.327744960784912
    8. 'incl' → logprob: -5.702744960784912
    9. 'in' → logprob: -5.952744960784912
    10. ' à' → logprob: -6.077744960784912

Token 125: ' n' (ID: 297)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7325051426887512
    2. ' à' → logprob: -0.7325051426887512
    3. 'n' → logprob: -3.7325050830841064
    4. 'au' → logprob: -5.1075053215026855
    5. ' n' → logprob: -5.8575053215026855
    6. ' au' → logprob: -5.9825053215026855
    7. ''à' → logprob: -6.4825053215026855
    8. ']' → logprob: -7.7325053215026855
    9. ':n' → logprob: -8.107504844665527
    10. '(n' → logprob: -8.482504844665527

Token 126: '"
' (ID: 1092)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00545869767665863
    2. ']"' → logprob: -5.505458831787109
    3. ' ]' → logprob: -7.380458831787109
    4. 'n' → logprob: -8.63045883178711
    5. '])' → logprob: -8.75545883178711
    6. ')' → logprob: -9.25545883178711
    7. ')]' → logprob: -9.38045883178711
    8. 's' → logprob: -10.25545883178711
    9. ']'' → logprob: -10.50545883178711
    10. ':]' → logprob: -10.63045883178711

Token 127: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007929548737592995
    2. ' l' → logprob: -7.375792980194092
    3. ' =' → logprob: -9.500792503356934
    4. '=' → logprob: -10.625792503356934
    5. ']' → logprob: -11.250792503356934
    6. '[' → logprob: -11.375792503356934
    7. ')' → logprob: -12.125792503356934
    8. ' 
' → logprob: -12.375792503356934
    9. '  
' → logprob: -12.500792503356934
    10. ''' → logprob: -12.875792503356934

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3872103691101074
    2. '=' → logprob: -1.1372103691101074
    3. '[:' → logprob: -8.762210845947266
    4. 's' → logprob: -9.137210845947266
    5. '[' → logprob: -10.637210845947266
    6. '[:]' → logprob: -10.887210845947266
    7. '=s' → logprob: -11.137210845947266
    8. ' =
' → logprob: -12.762210845947266
    9. '=[]' → logprob: -13.262210845947266
    10. ' ' → logprob: -13.387210845947266

Token 129: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3868725001811981
    2. 's' → logprob: -1.1368725299835205
    3. '	s' → logprob: -14.261872291564941
    4. ' ' → logprob: -15.011872291564941
    5. '(s' → logprob: -15.886872291564941
    6. '_s' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.636873245239258
    8. '[' → logprob: -17.136873245239258
    9. '[:' → logprob: -17.261873245239258
    10. 'list' → logprob: -17.386873245239258

Token 130: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.771655115589965e-05
    2. ' [:' → logprob: -11.375018119812012
    3. '[' → logprob: -12.500018119812012
    4. '[:]' → logprob: -13.000018119812012
    5. '[n' → logprob: -16.250017166137695
    6. '][:' → logprob: -16.750017166137695
    7. '[
' → logprob: -17.000017166137695
    8. '[:-' → logprob: -18.125017166137695
    9. ':' → logprob: -19.500017166137695
    10. '
' → logprob: -20.000017166137695

Token 131: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9027791495318525e-05
    2. ' n' → logprob: -10.875019073486328
    3. ')n' → logprob: -17.000019073486328
    4. '	n' → logprob: -18.375019073486328
    5. ')' → logprob: -20.250019073486328
    6. '(n' → logprob: -20.875019073486328
    7. '_n' → logprob: -21.000019073486328
    8. '```' → logprob: -21.375019073486328
    9. '
' → logprob: -21.875019073486328
    10. ',n' → logprob: -22.000019073486328

Token 132: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01618463359773159
    2. ')' → logprob: -4.1411848068237305
    3. '])' → logprob: -8.89118480682373
    4. ')]' → logprob: -12.01618480682373
    5. ' ]' → logprob: -12.64118480682373
    6. ']
' → logprob: -13.39118480682373
    7. '']' → logprob: -14.76618480682373
    8. '}' → logprob: -14.76618480682373
    9. '）' → logprob: -14.89118480682373
    10. ']

' → logprob: -15.89118480682373

Token 133: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3989621102809906
    2. 'print' → logprob: -2.3989620208740234
    3. '[' → logprob: -2.6489620208740234
    4. '+' → logprob: -2.7739620208740234
    5. '.' → logprob: -3.7739620208740234
    6. ')' → logprob: -4.398962020874023
    7. 'for' → logprob: -4.523962020874023
    8. 'n' → logprob: -4.648962020874023
    9. 'p' → logprob: -4.773962020874023
    10. ' ' → logprob: -4.898962020874023

Token 134: ' Pr' (ID: 2284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22771719098091125
    2. 'for' → logprob: -2.352717161178589
    3. 'l' → logprob: -2.602717161178589
    4. '#' → logprob: -4.727717399597168
    5. 'result' → logprob: -5.102717399597168
    6. 'if' → logprob: -5.102717399597168
    7. 'm' → logprob: -5.602717399597168
    8. 'p' → logprob: -6.602717399597168
    9. 'sum' → logprob: -6.727717399597168
    10. 's' → logprob: -6.977717399597168

Token 135: 'end' (ID: 419)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012436824617907405
    2. '#' → logprob: -7.376243591308594
    3. 'ints' → logprob: -8.751243591308594
    4. 'i' → logprob: -9.126243591308594
    5. 'e' → logprob: -9.251243591308594
    6. 'in' → logprob: -10.251243591308594
    7. 'ov' → logprob: -10.626243591308594
    8. 'ef' → logprob: -10.751243591308594
    9. 'é' → logprob: -11.001243591308594
    10. 'end' → logprob: -11.376243591308594

Token 136: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7504268288612366
    2. ' s' → logprob: -1.8754267692565918
    3. ' l' → logprob: -2.625426769256592
    4. ' n' → logprob: -2.750426769256592
    5. ' le' → logprob: -2.750426769256592
    6. 's' → logprob: -2.875426769256592
    7. 'les' → logprob: -3.625426769256592
    8. 'l' → logprob: -3.750426769256592
    9. 'n' → logprob: -3.875426769256592
    10. ' la' → logprob: -4.000426769256592

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.793424129486084
    2. ' derniers' → logprob: -1.293424129486084
    3. 'n' → logprob: -1.543424129486084
    4. ' last' → logprob: -4.793424129486084
    5. ' caractères' → logprob: -4.918424129486084
    6. ' elements' → logprob: -5.168424129486084
    7. ' ' → logprob: -5.543424129486084
    8. ' len' → logprob: -5.668424129486084
    9. ' dernier' → logprob: -5.668424129486084
    10. 'dern' → logprob: -5.668424129486084

Token 138: ' caractères' (ID: 183106)
  Prédit: ' derniers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' derniers' → logprob: -0.01758541539311409
    2. ' dernières' → logprob: -5.767585277557373
    3. ' caractères' → logprob: -6.017585277557373
    4. ' ' → logprob: -6.142585277557373
    5. ' dernier' → logprob: -6.142585277557373
    6. '-' → logprob: -6.392585277557373
    7. ' premiers' → logprob: -6.517585277557373
    8. 'dern' → logprob: -7.017585277557373
    9. ' derni' → logprob: -7.142585277557373
    10. ' Dern' → logprob: -7.517585277557373

Token 139: ' suivants' (ID: 112219)
  Prédit: ' suivants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.3799106478691101
    2. ' suivant' → logprob: -1.3799107074737549
    3. ' suivantes' → logprob: -3.004910707473755
    4. 'su' → logprob: -5.004910469055176
    5. 's' → logprob: -6.004910469055176
    6. ' suivante' → logprob: -6.379910469055176
    7. ' following' → logprob: -6.754910469055176
    8. ' de' → logprob: -7.629910469055176
    9. '#' → logprob: -7.629910469055176
    10. ' à' → logprob: -8.629910469055176

Token 140: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2545987367630005
    2. 's' → logprob: -1.5045987367630005
    3. ' de' → logprob: -6.504598617553711
    4. '(s' → logprob: -7.629598617553711
    5. '[' → logprob: -8.129598617553711
    6. 'l' → logprob: -9.504598617553711
    7. '_s' → logprob: -9.754598617553711
    8. ',' → logprob: -10.004598617553711
    9. '#' → logprob: -10.129598617553711
    10. ' l' → logprob: -10.504598617553711

Token 141: 'de' (ID: 613)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3685987889766693
    2. 's' → logprob: -1.2435988187789917
    3. ' de' → logprob: -4.368598937988281
    4. 'n' → logprob: -6.493598937988281
    5. 'de' → logprob: -6.493598937988281
    6. ' n' → logprob: -6.493598937988281
    7. ',' → logprob: -6.993598937988281
    8. ' à' → logprob: -7.368598937988281
    9. ' dans' → logprob: -8.493598937988281
    10. ')' → logprob: -9.493598937988281

Token 142: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.673349142074585
    2. ' l' → logprob: -1.173349142074585
    3. 'n' → logprob: -2.673349142074585
    4. 'l' → logprob: -2.923349142074585
    5. ' s' → logprob: -3.923349142074585
    6. ' indice' → logprob: -4.298349380493164
    7. ' index' → logprob: -4.673349380493164
    8. 's' → logprob: -4.923349380493164
    9. 'indice' → logprob: -5.423349380493164
    10. 'index' → logprob: -6.673349380493164

Token 143: ' position' (ID: 4010)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6654585599899292
    2. 'position' → logprob: -1.0404585599899292
    3. ' position' → logprob: -2.6654586791992188
    4. 'indice' → logprob: -3.5404586791992188
    5. ' n' → logprob: -3.9154586791992188
    6. 'index' → logprob: -4.790458679199219
    7. ' index' → logprob: -6.665458679199219
    8. '
' → logprob: -7.290458679199219
    9. 'liste' → logprob: -7.290458679199219
    10. 'part' → logprob: -7.540458679199219

Token 144: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06197351589798927
    2. ' n' → logprob: -2.8119735717773438
    3. '[n' → logprob: -12.561973571777344
    4. '%n' → logprob: -14.561973571777344
    5. '	n' → logprob: -14.811973571777344
    6. ')n' → logprob: -15.186973571777344
    7. '(n' → logprob: -15.311973571777344
    8. ' ' → logprob: -15.436973571777344
    9. '
' → logprob: -16.061973571777344
    10. ',n' → logprob: -16.311973571777344

Token 145: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04192305728793144
    2. 'à' → logprob: -3.4169230461120605
    3. ' jusqu' → logprob: -5.4169230461120605
    4. ')' → logprob: -6.7919230461120605
    5. 'n' → logprob: -6.7919230461120605
    6. ':' → logprob: -8.041923522949219
    7. ':n' → logprob: -8.291923522949219
    8. ' n' → logprob: -8.291923522949219
    9. '```' → logprob: -9.041923522949219
    10. ' jusque' → logprob: -9.166923522949219

Token 146: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.041101593524217606
    2. ' ' → logprob: -3.4161016941070557
    3. 'n' → logprob: -5.291101455688477
    4. ' n' → logprob: -6.041101455688477
    5. '
' → logprob: -12.541101455688477
    6. ' ' → logprob: -12.666101455688477
    7. '```' → logprob: -13.041101455688477
    8. ')' → logprob: -14.478601455688477
    9. ' (' → logprob: -15.166101455688477
    10. '`' → logprob: -15.166101455688477

Token 147: ' fin' (ID: 2131)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026206085458397865
    2. 'n' → logprob: -6.002620697021484
    3. ' ' → logprob: -8.877620697021484
    4. ' n' → logprob: -12.252620697021484
    5. '```' → logprob: -15.752620697021484
    6. '(n' → logprob: -16.377620697021484
    7. '
' → logprob: -16.752620697021484
    8. '`' → logprob: -17.002620697021484
    9. '۲' → logprob: -17.002620697021484
    10. '(' → logprob: -17.377620697021484

Token 148: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.987830400466919
    2. 'n' → logprob: -1.112830400466919
    3. ' de' → logprob: -1.862830400466919
    4. ')' → logprob: -2.612830400466919
    5. ',' → logprob: -3.862830400466919
    6. ' ' → logprob: -4.23783016204834
    7. ' s' → logprob: -4.48783016204834
    8. '2' → logprob: -4.86283016204834
    9. 's' → logprob: -4.98783016204834
    10. ' )' → logprob: -6.61283016204834

Token 149: ' s' (ID: 265)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8702976703643799
    2. ' n' → logprob: -0.8702976703643799
    3. '2' → logprob: -1.9952976703643799
    4. ' ' → logprob: -3.87029767036438
    5. ' s' → logprob: -5.995297431945801
    6. 's' → logprob: -6.120297431945801
    7. ' la' → logprob: -7.870297431945801
    8. 'l' → logprob: -9.1202974319458
    9. ' l' → logprob: -9.7452974319458
    10. '3' → logprob: -10.1202974319458

Token 150: '),' (ID: 936)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2297665923833847
    2. ')' → logprob: -2.604766607284546
    3. '2' → logprob: -3.604766607284546
    4. 's' → logprob: -3.729766607284546
    5. ',' → logprob: -3.854766607284546
    6. ' n' → logprob: -4.229766368865967
    7. ':n' → logprob: -4.229766368865967
    8. '[n' → logprob: -4.479766368865967
    9. ']' → logprob: -4.854766368865967
    10. ':' → logprob: -6.354766368865967

Token 151: ' puis' (ID: 18766)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40083807706832886
    2. ' s' → logprob: -1.1508381366729736
    3. 'l' → logprob: -4.9008378982543945
    4. ' et' → logprob: -6.7758378982543945
    5. ' l' → logprob: -6.9008378982543945
    6. 'et' → logprob: -7.6508378982543945
    7. 'c' → logprob: -7.7758378982543945
    8. '```' → logprob: -8.025837898254395
    9. ' c' → logprob: -8.150837898254395
    10. 'n' → logprob: -8.400837898254395

Token 152: ' inverse' (ID: 53743)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8367840051651001
    2. 's' → logprob: -0.9617840051651001
    3. ' les' → logprob: -1.9617840051651
    4. 'l' → logprob: -4.4617838859558105
    5. ' l' → logprob: -4.8367838859558105
    6. 'les' → logprob: -4.8367838859558105
    7. ' list' → logprob: -5.4617838859558105
    8. 'list' → logprob: -5.9617838859558105
    9. ' stock' → logprob: -6.0867838859558105
    10. 'len' → logprob: -6.4617838859558105

Token 153: ' leur' (ID: 9853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19249185919761658
    2. ' s' → logprob: -1.817491888999939
    3. '[::-' → logprob: -5.3174920082092285
    4. '=s' → logprob: -6.3174920082092285
    5. ' =' → logprob: -6.8174920082092285
    6. 'l' → logprob: -6.9424920082092285
    7. '=' → logprob: -7.5674920082092285
    8. '(s' → logprob: -7.8174920082092285
    9. '[' → logprob: -7.9424920082092285
    10. ' l' → logprob: -8.19249153137207

Token 154: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.019976481795310974
    2. ' ordre' → logprob: -5.019976615905762
    3. ''ordre' → logprob: -5.269976615905762
    4. 's' → logprob: -6.144976615905762
    5. 'order' → logprob: -6.269976615905762
    6. 'ord' → logprob: -6.769976615905762
    7. ' order' → logprob: -7.019976615905762
    8. 'orde' → logprob: -7.519976615905762
    9. '’ordre' → logprob: -7.644976615905762
    10. '[::-' → logprob: -8.519976615905762

Token 155: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025297829881310463
    2. '[::-' → logprob: -3.7752978801727295
    3. ' s' → logprob: -6.52529764175415
    4. '[' → logprob: -8.650298118591309
    5. 'r' → logprob: -9.275298118591309
    6. '[s' → logprob: -9.400298118591309
    7. 'l' → logprob: -9.400298118591309
    8. 're' → logprob: -10.025298118591309
    9. 'list' → logprob: -11.025298118591309
    10. '(s' → logprob: -11.150298118591309

Token 156: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7048753499984741
    2. ' l' → logprob: -1.0798753499984741
    3. 's' → logprob: -2.5798754692077637
    4. ' partir' → logprob: -3.2048754692077637
    5. 'part' → logprob: -3.5798754692077637
    6. '```' → logprob: -4.954875469207764
    7. 'n' → logprob: -5.954875469207764
    8. ' part' → logprob: -6.329875469207764
    9. '[::-' → logprob: -6.454875469207764
    10. '<|end|>' → logprob: -7.204875469207764

Token 157: ''aide' (ID: 75684)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.28154444694519043
    2. '[' → logprob: -2.1565444469451904
    3. '[n' → logprob: -2.9065444469451904
    4. 'n' → logprob: -3.7815444469451904
    5. '[:]' → logprob: -4.6565446853637695
    6. ''aide' → logprob: -4.6565446853637695
    7. 's' → logprob: -5.0315446853637695
    8. 'a' → logprob: -5.2815446853637695
    9. '[:' → logprob: -5.6565446853637695
    10. '[len' → logprob: -5.9065446853637695

Token 158: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9667097926139832
    2. 's' → logprob: -1.841709852218628
    3. ' s' → logprob: -2.091709852218628
    4. 'd' → logprob: -2.341709852218628
    5. '[::-' → logprob: -2.341709852218628
    6. ' d' → logprob: -2.716709852218628
    7. 'de' → logprob: -3.091709852218628
    8. '[' → logprob: -3.841709852218628
    9. '#' → logprob: -5.341709613800049
    10. ' of' → logprob: -5.841709613800049

Token 159: ' [' (ID: 723)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.3527613580226898
    2. ' s' → logprob: -1.7277613878250122
    3. 's' → logprob: -2.3527612686157227
    4. ' reversed' → logprob: -4.602761268615723
    5. ' l' → logprob: -5.227761268615723
    6. 'l' → logprob: -5.852761268615723
    7. ' list' → logprob: -6.227761268615723
    8. 're' → logprob: -6.977761268615723
    9. 'list' → logprob: -7.227761268615723
    10. ' reverse' → logprob: -7.477761268615723

Token 160: '::-' (ID: 96612)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031018999870866537
    2. '::-' → logprob: -6.878101825714111
    3. '-n' → logprob: -7.378101825714111
    4. ':n' → logprob: -7.378101825714111
    5. ' n' → logprob: -7.628101825714111
    6. '```' → logprob: -9.75310230255127
    7. ':' → logprob: -9.87810230255127
    8. '	n' → logprob: -10.75310230255127
    9. '-' → logprob: -10.75310230255127
    10. '<n' → logprob: -11.12810230255127

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '-' → logprob: -11.500014305114746
    3. 'n' → logprob: -12.875014305114746
    4. ']' → logprob: -13.625014305114746
    5. 's' → logprob: -14.500014305114746
    6. ' ' → logprob: -16.500015258789062
    7. '１' → logprob: -16.500015258789062
    8. '```' → logprob: -17.500015258789062
    9. 'l' → logprob: -17.875015258789062
    10. '2' → logprob: -18.875015258789062

Token 162: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018527284264564514
    2. 'n' → logprob: -4.518527507781982
    3. 's' → logprob: -5.268527507781982
    4. ']
' → logprob: -6.893527507781982
    5. 'l' → logprob: -7.643527507781982
    6. ' ]' → logprob: -8.018527030944824
    7. '].' → logprob: -8.393527030944824
    8. ']

' → logprob: -9.268527030944824
    9. ' s' → logprob: -11.143527030944824
    10. '(n' → logprob: -11.268527030944824

Token 163: 'r' (ID: 81)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003718842286616564
    2. ' s' → logprob: -5.628718852996826
    3. '[::-' → logprob: -9.628718376159668
    4. '(s' → logprob: -11.378718376159668
    5. '```' → logprob: -11.753718376159668
    6. '
' → logprob: -11.878718376159668
    7. ']' → logprob: -12.628718376159668
    8. 'l' → logprob: -12.878718376159668
    9. '#' → logprob: -13.003718376159668
    10. '`s' → logprob: -13.128718376159668

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3139067590236664
    2. ' =' → logprob: -1.3139067888259888
    3. 's' → logprob: -7.938906669616699
    4. '=s' → logprob: -8.1889066696167
    5. '=r' → logprob: -13.5639066696167
    6. ' s' → logprob: -13.8139066696167
    7. '=
' → logprob: -13.8139066696167
    8. ' ' → logprob: -14.1889066696167
    9. '＝' → logprob: -14.3139066696167
    10. '```' → logprob: -14.4389066696167

Token 165: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.523147702217102
    2. ' s' → logprob: -0.898147702217102
    3. ' ' → logprob: -11.773147583007812
    4. 'list' → logprob: -12.273147583007812
    5. ' list' → logprob: -12.648147583007812
    6. '   ' → logprob: -12.898147583007812
    7. '	s' → logprob: -13.398147583007812
    8. '(s' → logprob: -13.773147583007812
    9. 'l' → logprob: -14.460647583007812
    10. ' ' → logprob: -14.710647583007812

Token 166: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.0590548703912646e-05
    2. '[' → logprob: -10.500030517578125
    3. 'n' → logprob: -13.125030517578125
    4. ' [' → logprob: -14.625030517578125
    5. '[
' → logprob: -15.375030517578125
    6. '[N' → logprob: -15.875030517578125
    7. '[:' → logprob: -16.875030517578125
    8. ' n' → logprob: -17.500030517578125
    9. '[m' → logprob: -17.625030517578125
    10. '[r' → logprob: -18.000030517578125

Token 167: ':' (ID: 25)
  Prédit: ':n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':n' → logprob: -0.3281143605709076
    2. ':' → logprob: -1.57811439037323
    3. ' :' → logprob: -2.8281142711639404
    4. ':]' → logprob: -4.3281145095825195
    5. 'n' → logprob: -7.4531145095825195
    6. ' :]' → logprob: -8.32811450958252
    7. ':]
' → logprob: -10.32811450958252
    8. ' n' → logprob: -10.45311450958252
    9. ':].' → logprob: -10.57811450958252
    10. ' ' → logprob: -11.07811450958252

Token 168: '][' (ID: 2696)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018886608304455876
    2. '2' → logprob: -7.001888751983643
    3. ' n' → logprob: -7.626888751983643
    4. ']' → logprob: -7.751888751983643
    5. ' ' → logprob: -11.126888275146484
    6. '][' → logprob: -11.876888275146484
    7. '(n' → logprob: -12.001888275146484
    8. 'None' → logprob: -12.251888275146484
    9. '	n' → logprob: -12.751888275146484
    10. '][:' → logprob: -12.751888275146484

Token 169: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.040062107145786285
    2. '[::-' → logprob: -3.415062189102173
    3. '][' → logprob: -5.665061950683594
    4. ':' → logprob: -6.915061950683594
    5. '-' → logprob: -7.665061950683594
    6. '::' → logprob: -7.790061950683594
    7. ']' → logprob: -7.915061950683594
    8. ' ::' → logprob: -9.165061950683594
    9. '
' → logprob: -9.165061950683594
    10. '1' → logprob: -9.290061950683594

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. '-' → logprob: -12.000007629394531
    3. ']' → logprob: -14.000007629394531
    4. ' ' → logprob: -15.625007629394531
    5. '::-' → logprob: -17.62500762939453
    6. '```' → logprob: -17.62500762939453
    7. '' → logprob: -18.12500762939453
    8. '])' → logprob: -18.37500762939453
    9. '１' → logprob: -18.50000762939453
    10. ':' → logprob: -18.62500762939453

Token 171: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47414320707321167
    2. ')' → logprob: -0.9741432070732117
    3. '])' → logprob: -11.349143028259277
    4. ')]' → logprob: -11.349143028259277
    5. '#' → logprob: -11.599143028259277
    6. ' ]' → logprob: -11.849143028259277
    7. ' )' → logprob: -12.099143028259277
    8. '}' → logprob: -12.349143028259277
    9. '）' → logprob: -12.349143028259277
    10. '()' → logprob: -12.474143028259277

Token 172: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7934149503707886
    2. '#' → logprob: -1.5434149503707886
    3. 'r' → logprob: -2.293415069580078
    4. '<|end|>' → logprob: -2.293415069580078
    5. 'print' → logprob: -2.418415069580078
    6. ')' → logprob: -4.418415069580078
    7. '+' → logprob: -5.043415069580078
    8. ' l' → logprob: -5.168415069580078
    9. '[' → logprob: -5.668415069580078
    10. '+l' → logprob: -6.043415069580078

Token 173: ' Cr' (ID: 5790)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.681547999382019
    2. 'print' → logprob: -1.056547999382019
    3. 'l' → logprob: -2.6815481185913086
    4. '#' → logprob: -4.181548118591309
    5. ' result' → logprob: -4.306548118591309
    6. 'for' → logprob: -4.556548118591309
    7. 'r' → logprob: -4.556548118591309
    8. 'res' → logprob: -4.556548118591309
    9. 'm' → logprob: -6.056548118591309
    10. ' print' → logprob: -6.181548118591309

Token 174: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.583230197429657
    2. 'é' → logprob: -1.4582302570343018
    3. 'e' → logprob: -2.0832302570343018
    4. 'éer' → logprob: -2.9582302570343018
    5. '#' → logprob: -4.333230018615723
    6. 'l' → logprob: -5.208230018615723
    7. 'o' → logprob: -6.208230018615723
    8. 'éd' → logprob: -6.708230018615723
    9. 'ont' → logprob: -6.833230018615723
    10. 'édit' → logprob: -6.958230018615723

Token 175: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1711252927780151
    2. ' un' → logprob: -1.7961252927780151
    3. ' a' → logprob: -1.9211252927780151
    4. 'une' → logprob: -2.2961254119873047
    5. 'a' → logprob: -2.4211254119873047
    6. '_' → logprob: -3.0461254119873047
    7. 'u' → logprob: -3.2961254119873047
    8. ' la' → logprob: -3.5461254119873047
    9. ' ' → logprob: -3.9211254119873047
    10. ' l' → logprob: -4.546125411987305

Token 176: ' diction' (ID: 155259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9914222359657288
    2. 'nou' → logprob: -1.241422176361084
    3. ' nouveau' → logprob: -1.741422176361084
    4. 'e' → logprob: -2.741422176361084
    5. 'new' → logprob: -4.491422176361084
    6. 'rés' → logprob: -4.741422176361084
    7. 'a' → logprob: -4.866422176361084
    8. ' new' → logprob: -5.116422176361084
    9. ' résultat' → logprob: -5.116422176361084
    10. 'liste' → logprob: -5.116422176361084

Token 177: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.16054317355155945
    2. 'aire' → logprob: -1.9105432033538818
    3. 'ary' → logprob: -9.535543441772461
    4. 'iaire' → logprob: -9.785543441772461
    5. 'inaire' → logprob: -10.160543441772461
    6. 'a' → logprob: -10.285543441772461
    7. '{' → logprob: -10.535543441772461
    8. 'oire' → logprob: -10.910543441772461
    9. 'aitre' → logprob: -11.785543441772461
    10. 'ion' → logprob: -11.910543441772461

Token 178: ' vide' (ID: 21835)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11684846878051758
    2. 'dict' → logprob: -2.3668484687805176
    3. 'result' → logprob: -4.741848468780518
    4. ' d' → logprob: -6.241848468780518
    5. 'freq' → logprob: -7.116848468780518
    6. 'dictionary' → logprob: -7.241848468780518
    7. '{' → logprob: -7.241848468780518
    8. 'mapping' → logprob: -7.366848468780518
    9. 'res' → logprob: -7.616848468780518
    10. 'm' → logprob: -7.741848468780518

Token 179: ' nommé' (ID: 149888)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03933526948094368
    2. 'dict' → logprob: -3.664335250854492
    3. '{}' → logprob: -4.789335250854492
    4. '{' → logprob: -5.789335250854492
    5. 'result' → logprob: -7.539335250854492
    6. 'dic' → logprob: -8.164335250854492
    7. ' d' → logprob: -8.539335250854492
    8. 'dictionary' → logprob: -8.789335250854492
    9. 'm' → logprob: -9.164335250854492
    10. 'res' → logprob: -9.664335250854492

Token 180: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0873902440071106
    2. ' d' → logprob: -2.587390184402466
    3. 'result' → logprob: -6.212390422821045
    4. 'dict' → logprob: -6.337390422821045
    5. '```' → logprob: -6.962390422821045
    6. 'res' → logprob: -7.337390422821045
    7. 'dic' → logprob: -7.462390422821045
    8. 'm' → logprob: -7.962390422821045
    9. 'freq' → logprob: -8.337389945983887
    10. ' res' → logprob: -8.962389945983887

Token 181: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02948339283466339
    2. 'result' → logprob: -4.404483318328857
    3. 'res' → logprob: -5.279483318328857
    4. 'freq' → logprob: -5.904483318328857
    5. 'dict' → logprob: -6.279483318328857
    6. 'dic' → logprob: -6.529483318328857
    7. 'counts' → logprob: -6.529483318328857
    8. 'm' → logprob: -7.279483318328857
    9. 'count' → logprob: -7.529483318328857
    10. 'char' → logprob: -7.779483318328857

Token 182: ''' (ID: 6)
  Prédit: 'iction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iction' → logprob: -1.548416256904602
    2. 'e' → logprob: -1.673416256904602
    3. '{' → logprob: -1.798416256904602
    4. '}' → logprob: -2.0484161376953125
    5. 'ict' → logprob: -2.7984161376953125
    6. '{}' → logprob: -2.9234161376953125
    7. 'ictionary' → logprob: -3.1734161376953125
    8. 'd' → logprob: -3.2984161376953125
    9. 'ic' → logprob: -3.5484161376953125
    10. ' =' → logprob: -3.9234161376953125

Token 183: ' qui' (ID: 2780)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.895480277715251e-06
    2. ' d' → logprob: -12.375008583068848
    3. '
' → logprob: -13.000008583068848
    4. '{}' → logprob: -13.625008583068848
    5. '{' → logprob: -14.625008583068848
    6. '	d' → logprob: -15.125008583068848
    7. '

' → logprob: -17.250009536743164
    8. '' → logprob: -17.375009536743164
    9. '_d' → logprob: -17.500009536743164
    10. '#' → logprob: -17.625009536743164

Token 184: ' va' (ID: 3423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' stock' (ID: 6546)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stock' → logprob: -1.2733285427093506
    2. ' stock' → logprob: -1.5233285427093506
    3. ' servir' → logprob: -2.2733285427093506
    4. 'acc' → logprob: -2.3983285427093506
    5. 'serv' → logprob: -2.3983285427093506
    6. '{}' → logprob: -3.0233285427093506
    7. ' accueillir' → logprob: -3.2733285427093506
    8. 'con' → logprob: -3.6483285427093506
    9. 'serve' → logprob: -4.27332878112793
    10. 'rec' → logprob: -4.27332878112793

Token 186: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.04206926003098488
    2. 'érer' → logprob: -3.29206919670105
    3. 'e' → logprob: -5.792069435119629
    4. 'erer' → logprob: -7.542069435119629
    5. 'errer' → logprob: -9.542069435119629
    6. 'ener' → logprob: -10.417069435119629
    7. 'ner' → logprob: -10.417069435119629
    8. 'ercer' → logprob: -10.417069435119629
    9. 'uler' → logprob: -10.542069435119629
    10. 'é' → logprob: -10.792069435119629

Token 187: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.526320457458496
    2. 'counts' → logprob: -2.026320457458496
    3. ' counts' → logprob: -2.151320457458496
    4. 'élé' → logprob: -2.276320457458496
    5. ' compte' → logprob: -2.651320457458496
    6. ' couples' → logprob: -2.776320457458496
    7. 'com' → logprob: -3.401320457458496
    8. ' fré' → logprob: -3.401320457458496
    9. 'comp' → logprob: -3.526320457458496
    10. ' compt' → logprob: -3.776320457458496

Token 189: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.18421761691570282
    2. 'airs' → logprob: -2.809217691421509
    3. 'ar' → logprob: -3.309217691421509
    4. 'a' → logprob: -3.809217691421509
    5. 'air' → logprob: -3.934217691421509
    6. 'r' → logprob: -4.30921745300293
    7. 'ai' → logprob: -4.80921745300293
    8. 'ari' → logprob: -6.93421745300293
    9. 'aire' → logprob: -7.05921745300293
    10. 'ro' → logprob: -7.68421745300293

Token 190: ' (' (ID: 350)
  Prédit: ' clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' clé' → logprob: -0.9280325174331665
    2. '<|end|>' → logprob: -1.5530325174331665
    3. ' de' → logprob: -2.053032398223877
    4. ' clés' → logprob: -2.553032398223877
    5. 'clé' → logprob: -2.928032398223877
    6. ' key' → logprob: -3.303032398223877
    7. 'key' → logprob: -3.428032398223877
    8. 'de' → logprob: -4.053032398223877
    9. ' ' → logprob: -4.678032398223877
    10. 'clave' → logprob: -5.303032398223877

Token 191: 'cha' (ID: 3836)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.33285483717918396
    2. 'clé' → logprob: -2.457854747772217
    3. 'char' → logprob: -3.457854747772217
    4. ' caract' → logprob: -3.582854747772217
    5. ' caractère' → logprob: -3.832854747772217
    6. ' clé' → logprob: -3.957854747772217
    7. ' caractères' → logprob: -4.332854747772217
    8. 'sym' → logprob: -4.457854747772217
    9. 'c' → logprob: -4.582854747772217
    10. ')' → logprob: -4.582854747772217

Token 192: 'înes' (ID: 171517)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3822457194328308
    2. 'aine' → logprob: -1.3822457790374756
    3. 'aines' → logprob: -3.6322457790374756
    4. 'és' → logprob: -4.6322455406188965
    5. 'nés' → logprob: -5.3822455406188965
    6. 'a' → logprob: -5.6322455406188965
    7. 'înes' → logprob: -5.8822455406188965
    8. 'é' → logprob: -5.8822455406188965
    9. 'nées' → logprob: -6.5072455406188965
    10. 'né' → logprob: -6.6322455406188965

Token 193: ',' (ID: 11)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3915685713291168
    2. ':' → logprob: -1.2665685415267944
    3. ' de' → logprob: -4.016568660736084
    4. 'de' → logprob: -5.141568660736084
    5. ' clés' → logprob: -5.266568660736084
    6. ')' → logprob: -5.391568660736084
    7. 'clé' → logprob: -6.016568660736084
    8. ' clé' → logprob: -6.391568660736084
    9. 's' → logprob: -6.891568660736084
    10. ':str' → logprob: -7.266568660736084

Token 194: ' chaînes' (ID: 179904)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0726035088300705
    2. 'ent' → logprob: -3.072603464126587
    3. ' int' → logprob: -3.947603464126587
    4. ' ent' → logprob: -6.697603702545166
    5. 'nombre' → logprob: -7.572603702545166
    6. 'val' → logprob: -7.697603702545166
    7. 'indices' → logprob: -8.447603225708008
    8. ' entier' → logprob: -8.572603225708008
    9. ' nombres' → logprob: -8.572603225708008
    10. ')' → logprob: -8.697603225708008

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.399378566537052e-05
    2. '):' → logprob: -10.750083923339844
    3. 'de' → logprob: -11.000083923339844
    4. ').' → logprob: -11.250083923339844
    5. ' )' → logprob: -11.750083923339844
    6. ',' → logprob: -12.625083923339844
    7. 's' → logprob: -12.750083923339844
    8. '),' → logprob: -12.750083923339844
    9. ')
' → logprob: -13.000083923339844
    10. 'v' → logprob: -13.500083923339844

Token 196: ' comme' (ID: 7971)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.306760805164231e-05
    2. '{}' → logprob: -11.62501335144043
    3. '
' → logprob: -13.25001335144043
    4. '{' → logprob: -13.50001335144043
    5. ' d' → logprob: -15.00001335144043
    6. '{
' → logprob: -15.37501335144043
    7. '{}
' → logprob: -16.00001335144043
    8. '```' → logprob: -16.50001335144043
    9. '  
' → logprob: -17.25001335144043
    10. '#' → logprob: -18.00001335144043

Token 197: ' clés' (ID: 96616)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2220718413591385
    2. 'd' → logprob: -1.847071886062622
    3. '{' → logprob: -3.472071886062622
    4. 'dict' → logprob: -5.972071647644043
    5. 'mapping' → logprob: -6.722071647644043
    6. 'pairs' → logprob: -6.847071647644043
    7. 'translations' → logprob: -6.972071647644043
    8. 'm' → logprob: -7.597071647644043
    9. 'relations' → logprob: -7.597071647644043
    10. 'strings' → logprob: -7.722071647644043

Token 198: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004097993019968271
    2. '{' → logprob: -6.504097938537598
    3. '{}' → logprob: -6.504097938537598
    4. ' d' → logprob: -7.629097938537598
    5. ' =' → logprob: -8.379097938537598
    6. ')' → logprob: -9.629097938537598
    7. '=' → logprob: -10.004097938537598
    8. ',' → logprob: -10.004097938537598
    9. '={}' → logprob: -10.004097938537598
    10. '()' → logprob: -10.129097938537598

Token 199: ' et' (ID: 859)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.37166014313697815
    2. '{}' → logprob: -1.4966601133346558
    3. 'val' → logprob: -3.1216602325439453
    4. '{' → logprob: -4.496660232543945
    5. 'd' → logprob: -4.621660232543945
    6. 'value' → logprob: -4.746660232543945
    7. ' values' → logprob: -5.621660232543945
    8. '#' → logprob: -5.871660232543945
    9. ')' → logprob: -6.371660232543945
    10. 'vals' → logprob: -7.121660232543945

Token 200: ' des' (ID: 731)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3401777446269989
    2. 'int' → logprob: -1.5901777744293213
    3. '0' → logprob: -3.4651777744293213
    4. 'val' → logprob: -3.8401777744293213
    5. 'dict' → logprob: -3.8401777744293213
    6. 'values' → logprob: -4.965177536010742
    7. '{' → logprob: -7.215177536010742
    8. '[]' → logprob: -7.340177536010742
    9. 'str' → logprob: -7.465177536010742
    10. 'd' → logprob: -7.715177536010742

Token 201: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6013767719268799
    2. 'ent' → logprob: -0.8513767719268799
    3. ' ent' → logprob: -4.976376533508301
    4. 'ints' → logprob: -4.976376533508301
    5. 'inte' → logprob: -5.351376533508301
    6. 'val' → logprob: -5.726376533508301
    7. 'n' → logprob: -6.351376533508301
    8. '0' → logprob: -7.351376533508301
    9. ' int' → logprob: -7.601376533508301
    10. 'nombre' → logprob: -8.9763765335083

Token 202: 'iers' (ID: 11012)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ices' → logprob: -1.9181593656539917
    2. 'tries' → logprob: -2.5431594848632812
    3. 't' → logprob: -2.6681594848632812
    4. 'orm' → logprob: -2.6681594848632812
    5. '{' → logprob: -2.7931594848632812
    6. 'f' → logprob: -3.1681594848632812
    7. 'ties' → logprob: -3.1681594848632812
    8. '{}' → logprob: -3.2931594848632812
    9. 'ités' → logprob: -3.2931594848632812
    10. 'd' → logprob: -3.6681594848632812

Token 203: ' comme' (ID: 7971)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.7709536552429199
    2. '()' → logprob: -0.8959536552429199
    3. 'd' → logprob: -2.14595365524292
    4. '{' → logprob: -4.64595365524292
    5. ' d' → logprob: -7.02095365524292
    6. '(d' → logprob: -7.89595365524292
    7. ')' → logprob: -8.395954132080078
    8. '={}' → logprob: -8.520954132080078
    9. '({' → logprob: -8.895954132080078
    10. '(' → logprob: -8.895954132080078

Token 204: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04873838275671005
    2. 'values' → logprob: -3.048738479614258
    3. ' valeurs' → logprob: -9.923738479614258
    4. 'vals' → logprob: -10.548738479614258
    5. 'valu' → logprob: -11.048738479614258
    6. '0' → logprob: -11.548738479614258
    7. ' values' → logprob: -11.548738479614258
    8. 'comp' → logprob: -11.923738479614258
    9. 'd' → logprob: -12.048738479614258
    10. '{}' → logprob: -12.048738479614258

Token 205: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001843485952122137
    2. '
' → logprob: -8.625184059143066
    3. ' d' → logprob: -13.125184059143066
    4. '
' → logprob: -13.750184059143066
    5. '```' → logprob: -14.500184059143066
    6. '{
' → logprob: -15.125184059143066
    7. '

' → logprob: -15.625184059143066
    8. '  
' → logprob: -15.750184059143066
    9. '`
' → logprob: -16.250185012817383
    10. ' 
' → logprob: -16.375185012817383

Token 206: 'comp' (ID: 3697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5279378294944763
    2. 'd' → logprob: -0.9029378294944763
    3. '{}' → logprob: -6.277937889099121
    4. '{})' → logprob: -6.402937889099121
    5. '{' → logprob: -7.402937889099121
    6. ')
' → logprob: -8.152937889099121
    7. ')d' → logprob: -9.402937889099121
    8. ' d' → logprob: -9.527937889099121
    9. 'dict' → logprob: -9.777937889099121
    10. ').' → logprob: -9.902937889099121

Token 207: 'teurs' (ID: 77729)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10873596370220184
    2. 'd' → logprob: -3.108736038208008
    3. 'é' → logprob: -4.358736038208008
    4. 'e' → logprob: -4.608736038208008
    5. '#' → logprob: -5.483736038208008
    6. 'ément' → logprob: -5.483736038208008
    7. 'u' → logprob: -5.608736038208008
    8. 'r' → logprob: -5.733736038208008
    9. 'l' → logprob: -5.858736038208008
    10. 'ts' → logprob: -6.171236038208008

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1803542673587799
    2. 'd' → logprob: -1.8053542375564575
    3. ')
' → logprob: -7.805354118347168
    4. '}' → logprob: -9.555354118347168
    5. ')d' → logprob: -10.055354118347168
    6. '#' → logprob: -11.055354118347168
    7. ').' → logprob: -11.305354118347168
    8. '{' → logprob: -11.305354118347168
    9. '()' → logprob: -11.430354118347168
    10. ' )' → logprob: -11.555354118347168

Token 209: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.822646693966817e-06
    2. '
' → logprob: -12.125007629394531
    3. ' d' → logprob: -13.750007629394531
    4. '```' → logprob: -13.875007629394531
    5. '
' → logprob: -16.50000762939453
    6. '#' → logprob: -16.50000762939453
    7. '  
' → logprob: -17.12500762939453
    8. '{
' → logprob: -17.25000762939453
    9. '{' → logprob: -17.37500762939453
    10. '	d' → logprob: -17.62500762939453

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20160901546478271
    2. ' =' → logprob: -1.7016090154647827
    3. '={}' → logprob: -8.576608657836914
    4. '={' → logprob: -13.076608657836914
    5. ' ' → logprob: -13.701608657836914
    6. '={}
' → logprob: -13.951608657836914
    7. ' ={' → logprob: -13.951608657836914
    8. '=[]' → logprob: -14.451608657836914
    9. '{}' → logprob: -14.826608657836914
    10. '[' → logprob: -15.326608657836914

Token 211: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.176947600673884e-05
    2. 'dict' → logprob: -10.750021934509277
    3. ' {}' → logprob: -15.875021934509277
    4. 'default' → logprob: -16.50002098083496
    5. '{}
' → logprob: -17.62502098083496
    6. '{}

' → logprob: -18.25002098083496
    7. '{})' → logprob: -19.25002098083496
    8. '{},' → logprob: -19.50002098083496
    9. '{}\' → logprob: -19.75002098083496
    10. '{' → logprob: -20.00002098083496

Token 212: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001523790997453034
    2. 'i' → logprob: -7.251523971557617
    3. '#' → logprob: -8.251523971557617
    4. 'm' → logprob: -9.001523971557617
    5. 'n' → logprob: -9.376523971557617
    6. ' for' → logprob: -9.501523971557617
    7. 'l' → logprob: -9.626523971557617
    8. 'a' → logprob: -10.251523971557617
    9. 'p' → logprob: -10.751523971557617
    10. 'if' → logprob: -10.751523971557617

Token 213: ' Cr' (ID: 5790)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2961512513575144e-05
    2. '#' → logprob: -10.875022888183594
    3. 'i' → logprob: -13.375022888183594
    4. ' for' → logprob: -14.375022888183594
    5. 'while' → logprob: -14.750022888183594
    6. 'from' → logprob: -15.125022888183594
    7. 'if' → logprob: -15.250022888183594
    8. 'def' → logprob: -15.250022888183594
    9. 'm' → logprob: -16.375022888183594
    10. 'fo' → logprob: -16.500022888183594

Token 214: 'ée' (ID: 2894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13224421441555023
    2. 'o' → logprob: -3.007244110107422
    3. 'e' → logprob: -3.132244110107422
    4. '#' → logprob: -4.257244110107422
    5. 'é' → logprob: -5.257244110107422
    6. 'f' → logprob: -5.382244110107422
    7. 'r' → logprob: -7.007244110107422
    8. 'ont' → logprob: -7.007244110107422
    9. 'or' → logprob: -7.132244110107422
    10. 'a' → logprob: -7.382244110107422

Token 215: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1932142674922943
    2. ' a' → logprob: -2.818214178085327
    3. ' une' → logprob: -2.818214178085327
    4. ' ' → logprob: -4.068214416503906
    5. 'a' → logprob: -4.443214416503906
    6. 'une' → logprob: -4.818214416503906
    7. 'un' → logprob: -5.068214416503906
    8. ' i' → logprob: -5.943214416503906
    9. ' for' → logprob: -6.318214416503906
    10. 'for' → logprob: -6.443214416503906

Token 216: ' autre' (ID: 20278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05028177425265312
    2. 'counter' → logprob: -4.300282001495361
    3. ' for' → logprob: -4.800282001495361
    4. 'default' → logprob: -4.925282001495361
    5. 'comp' → logprob: -5.300282001495361
    6. '
' → logprob: -6.050282001495361
    7. 'count' → logprob: -6.550282001495361
    8. 'b' → logprob: -6.675282001495361
    9. 'variable' → logprob: -6.675282001495361
    10. 'i' → logprob: -7.050282001495361

Token 217: ' diction' (ID: 155259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7163323163986206
    2. 'd' → logprob: -1.7163323163986206
    3. 's' → logprob: -3.21633243560791
    4. '=' → logprob: -3.34133243560791
    5. 'e' → logprob: -3.71633243560791
    6. 'es' → logprob: -3.96633243560791
    7. 'n' → logprob: -3.96633243560791
    8. 'l' → logprob: -4.34133243560791
    9. 't' → logprob: -4.34133243560791
    10. 'a' → logprob: -4.59133243560791

Token 218: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.02298186905682087
    2. 'naires' → logprob: -4.772981643676758
    3. 'aire' → logprob: -4.772981643676758
    4. 'ictionary' → logprob: -6.647981643676758
    5. '#' → logprob: -6.897981643676758
    6. 'iaire' → logprob: -7.397981643676758
    7. '{}' → logprob: -8.022981643676758
    8. 'inaire' → logprob: -8.272981643676758
    9. '{' → logprob: -8.272981643676758
    10. 'a' → logprob: -8.522981643676758

Token 219: ' vide' (ID: 21835)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3216990828514099
    2. 'e' → logprob: -1.5716991424560547
    3. 'c' → logprob: -4.446699142456055
    4. 'freq' → logprob: -4.571699142456055
    5. 'count' → logprob: -4.696699142456055
    6. 'counts' → logprob: -5.321699142456055
    7. 'g' → logprob: -5.571699142456055
    8. 'f' → logprob: -5.696699142456055
    9. ' d' → logprob: -6.196699142456055
    10. ' =' → logprob: -6.196699142456055

Token 220: ' nommé' (ID: 149888)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3232955038547516
    2. 'e' → logprob: -1.4482954740524292
    3. ' e' → logprob: -4.448295593261719
    4. ' d' → logprob: -4.698295593261719
    5. 't' → logprob: -5.573295593261719
    6. 'freq' → logprob: -5.698295593261719
    7. 'dict' → logprob: -5.823295593261719
    8. 'count' → logprob: -5.948295593261719
    9. 'f' → logprob: -6.448295593261719
    10. 'c' → logprob: -7.073295593261719

Token 221: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7634391188621521
    2. 'e' → logprob: -1.6384391784667969
    3. 'c' → logprob: -2.013439178466797
    4. 'dd' → logprob: -3.263439178466797
    5. 'count' → logprob: -3.638439178466797
    6. 'counts' → logprob: -3.638439178466797
    7. 'm' → logprob: -4.138439178466797
    8. 'r' → logprob: -4.263439178466797
    9. 'comp' → logprob: -4.763439178466797
    10. 'res' → logprob: -4.888439178466797

Token 222: 'e' (ID: 68)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3267416954040527
    2. 'd' → logprob: -1.8267416954040527
    3. 'e' → logprob: -2.0767416954040527
    4. 'r' → logprob: -2.8267416954040527
    5. 'dd' → logprob: -3.3267416954040527
    6. 'count' → logprob: -3.3267416954040527
    7. 'f' → logprob: -3.5767416954040527
    8. 'm' → logprob: -3.5767416954040527
    9. 'p' → logprob: -3.7017416954040527
    10. 'comp' → logprob: -3.8267416954040527

Token 223: '',' (ID: 787)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6338394284248352
    2. 'd' → logprob: -1.1338393688201904
    3. '=' → logprob: -3.0088393688201904
    4. ''' → logprob: -3.0088393688201904
    5. '={}' → logprob: -3.6338393688201904
    6. 'e' → logprob: -4.6338396072387695
    7. '}' → logprob: -5.6338396072387695
    8. ''}' → logprob: -5.7588396072387695
    9. '']' → logprob: -6.0088396072387695
    10. '{}' → logprob: -7.2588396072387695

Token 224: ' ayant' (ID: 45436)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.47931715846061707
    2. '{}' → logprob: -0.9793171882629395
    3. ' e' → logprob: -5.9793171882629395
    4. 'd' → logprob: -6.9793171882629395
    5. ' {}' → logprob: -7.1043171882629395
    6. '{' → logprob: -7.8543171882629395
    7. '{}
' → logprob: -8.354316711425781
    8. '[]' → logprob: -9.354316711425781
    9. '={}' → logprob: -10.104316711425781
    10. '{}

' → logprob: -10.229316711425781

Token 225: ' le' (ID: 505)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.6401985883712769
    2. '{}' → logprob: -1.0151985883712769
    3. 'des' → logprob: -3.5151987075805664
    4. 'str' → logprob: -3.6401987075805664
    5. '()' → logprob: -4.265198707580566
    6. 'd' → logprob: -4.640198707580566
    7. '{' → logprob: -5.015198707580566
    8. 'e' → logprob: -5.265198707580566
    9. '[]' → logprob: -5.765198707580566
    10. 'def' → logprob: -5.890198707580566

Token 226: ' même' (ID: 9679)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.15997882187366486
    2. ')' → logprob: -3.0349788665771484
    3. 'same' → logprob: -4.284978866577148
    4. 'e' → logprob: -4.534978866577148
    5. '{}' → logprob: -4.659978866577148
    6. ''s' → logprob: -4.784978866577148
    7. '=' → logprob: -4.909978866577148
    8. 'd' → logprob: -5.159978866577148
    9. 'def' → logprob: -5.284978866577148
    10. ''' → logprob: -5.659978866577148

Token 227: ' but' (ID: 889)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.3183731138706207
    2. 'but' → logprob: -1.8183730840682983
    3. 'objet' → logprob: -3.443373203277588
    4. ' but' → logprob: -3.693373203277588
    5. 'nom' → logprob: -4.068373203277588
    6. 'format' → logprob: -4.568373203277588
    7. 'objectif' → logprob: -5.068373203277588
    8. 'fonction' → logprob: -5.068373203277588
    9. 'usage' → logprob: -6.068373203277588
    10. 'd' → logprob: -6.443373203277588

Token 228: ' que' (ID: 661)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0010229245526716113
    2. '{}' → logprob: -7.751022815704346
    3. '=' → logprob: -8.251023292541504
    4. '={}' → logprob: -9.126023292541504
    5. ' =' → logprob: -9.626023292541504
    6. 'd' → logprob: -9.876023292541504
    7. '<|end|>' → logprob: -10.751023292541504
    8. ' e' → logprob: -11.126023292541504
    9. '_e' → logprob: -11.251023292541504
    10. '={}
' → logprob: -11.251023292541504

Token 229: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005551783833652735
    2. ' d' → logprob: -7.500555038452148
    3. ''d' → logprob: -13.750555038452148
    4. 'e' → logprob: -14.750555038452148
    5. '#' → logprob: -15.125555038452148
    6. '	d' → logprob: -15.625555038452148
    7. 'r' → logprob: -16.25055503845215
    8. '_d' → logprob: -16.62555503845215
    9. '{}' → logprob: -17.00055503845215
    10. '"d' → logprob: -17.25055503845215

Token 230: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.79811754100956e-05
    2. 'e' → logprob: -11.125038146972656
    3. ' d' → logprob: -11.500038146972656
    4. ''' → logprob: -12.250038146972656
    5. ')' → logprob: -13.125038146972656
    6. ''d' → logprob: -13.250038146972656
    7. 's' → logprob: -13.625038146972656
    8. '')' → logprob: -13.875038146972656
    9. 'r' → logprob: -14.250038146972656
    10. '}' → logprob: -15.125038146972656

Token 231: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06948648393154144
    2. ')' → logprob: -3.194486379623413
    3. '}' → logprob: -4.444486618041992
    4. '']' → logprob: -5.444486618041992
    5. '')' → logprob: -5.694486618041992
    6. ''' → logprob: -5.819486618041992
    7. 'd' → logprob: -6.194486618041992
    8. ']' → logprob: -7.069486618041992
    9. '_e' → logprob: -8.569486618041992
    10. ' e' → logprob: -8.944486618041992

Token 232: ' mais' (ID: 2899)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.650518920039758e-06
    2. ' e' → logprob: -13.000003814697266
    3. '
' → logprob: -14.375003814697266
    4. '=' → logprob: -14.750003814697266
    5. ' =' → logprob: -15.500003814697266
    6. '\e' → logprob: -16.750003814697266
    7. '<|end|>' → logprob: -16.875003814697266
    8. '=e' → logprob: -16.875003814697266
    9. '_e' → logprob: -17.000003814697266
    10. '

' → logprob: -17.000003814697266

Token 233: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6458389163017273
    2. ' pour' → logprob: -2.020838975906372
    3. 'pour' → logprob: -2.395838975906372
    4. 'e' → logprob: -3.020838975906372
    5. ' d' → logprob: -3.020838975906372
    6. '#' → logprob: -3.270838975906372
    7. ')' → logprob: -4.145838737487793
    8. 'for' → logprob: -4.270838737487793
    9. '{}' → logprob: -4.645838737487793
    10. ' avec' → logprob: -4.895838737487793

Token 234: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11561952531337738
    2. 'l' → logprob: -2.615619421005249
    3. 'les' → logprob: -4.490619659423828
    4. 'd' → logprob: -4.615619659423828
    5. 'e' → logprob: -4.990619659423828
    6. 'n' → logprob: -6.240619659423828
    7. 'le' → logprob: -6.240619659423828
    8. 'des' → logprob: -6.740619659423828
    9. 's' → logprob: -7.365619659423828
    10. 'la' → logprob: -7.615619659423828

Token 235: ' sous' (ID: 14487)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3135329484939575
    2. 'l' → logprob: -2.438532829284668
    3. 'd' → logprob: -2.813532829284668
    4. 'm' → logprob: -3.438532829284668
    5. 'e' → logprob: -3.688532829284668
    6. 'n' → logprob: -4.438532829284668
    7. 's' → logprob: -4.813532829284668
    8. 'car' → logprob: -5.688532829284668
    9. 'élé' → logprob: -6.063532829284668
    10. 't' → logprob: -6.063532829284668

Token 236: '-cha' (ID: 163177)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -1.3003009557724
    2. 's' → logprob: -1.4253009557724
    3. 'd' → logprob: -1.5503009557724
    4. 'm' → logprob: -2.5503010749816895
    5. '_' → logprob: -2.5503010749816895
    6. 't' → logprob: -3.5503010749816895
    7. 'e' → logprob: -4.1753010749816895
    8. 'r' → logprob: -4.5503010749816895
    9. 'l' → logprob: -4.5503010749816895
    10. 'dict' → logprob: -4.8003010749816895

Token 237: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.09397877752780914
    2. 'r' → logprob: -2.9689788818359375
    3. 'ines' → logprob: -3.7189788818359375
    4. 'î' → logprob: -5.3439788818359375
    5. 'ves' → logprob: -5.3439788818359375
    6. 'nes' → logprob: -6.5939788818359375
    7. 't' → logprob: -7.2189788818359375
    8. 'îne' → logprob: -7.7189788818359375
    9. 'tes' → logprob: -8.093978881835938
    10. 'ine' → logprob: -8.593978881835938

Token 238: ' invers' (ID: 38721)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3288790285587311
    2. '<|end|>' → logprob: -2.0788791179656982
    3. '={}' → logprob: -2.7038791179656982
    4. '()' → logprob: -3.0788791179656982
    5. 'e' → logprob: -4.203878879547119
    6. 'd' → logprob: -5.328878879547119
    7. '=[]' → logprob: -5.328878879547119
    8. '[]' → logprob: -5.703878879547119
    9. '=' → logprob: -5.953878879547119
    10. '{' → logprob: -6.078878879547119

Token 239: 'ées' (ID: 5161)
  Prédit: 'érées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érées' → logprob: -0.4254581034183502
    2. 'r' → logprob: -2.1754581928253174
    3. 'erv' → logprob: -2.5504581928253174
    4. 'rc' → logprob: -2.9254581928253174
    5. 'rv' → logprob: -3.5504581928253174
    6. 'ér' → logprob: -4.050457954406738
    7. 'er' → logprob: -5.050457954406738
    8. 'v' → logprob: -5.175457954406738
    9. 'ers' → logprob: -5.300457954406738
    10. 'ères' → logprob: -5.425457954406738

Token 240: '
' (ID: 198)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.816093228830141e-06
    2. ' e' → logprob: -13.50000286102295
    3. '{}' → logprob: -14.62500286102295
    4. '=' → logprob: -14.75000286102295
    5. '_e' → logprob: -16.250001907348633
    6. '{' → logprob: -16.250001907348633
    7. '=e' → logprob: -16.875001907348633
    8. 'd' → logprob: -17.125001907348633
    9. ' =' → logprob: -17.250001907348633
    10. '	e' → logprob: -17.375001907348633

Token 241: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0280383548888494e-06
    2. '{}' → logprob: -14.250000953674316
    3. ' e' → logprob: -15.750000953674316
    4. 'd' → logprob: -17.375001907348633
    5. '{' → logprob: -17.375001907348633
    6. '	e' → logprob: -18.250001907348633
    7. '_e' → logprob: -18.250001907348633
    8. '={}' → logprob: -18.250001907348633
    9. '}' → logprob: -19.250001907348633
    10. '=' → logprob: -19.500001907348633

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.160552516579628
    2. ' =' → logprob: -1.9105525016784668
    3. '={}' → logprob: -8.035552978515625
    4. '={' → logprob: -13.160552978515625
    5. ' ={' → logprob: -14.410552978515625
    6. '=[]' → logprob: -14.910552978515625
    7. ')' → logprob: -15.160552978515625
    8. '{}' → logprob: -15.285552978515625
    9. ' ' → logprob: -15.410552978515625
    10. '={}
' → logprob: -15.410552978515625

Token 243: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: 0.0
    2. ' {}' → logprob: -18.0
    3. '{}
' → logprob: -18.75
    4. '{})' → logprob: -19.0
    5. 'dict' → logprob: -19.125
    6. '{}

' → logprob: -19.625
    7. '={}' → logprob: -20.0
    8. '{}\' → logprob: -20.125
    9. 'd' → logprob: -21.25
    10. '{},' → logprob: -21.625

Token 244: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.061212893575429916
    2. '#' → logprob: -3.9362127780914307
    3. '<|end|>' → logprob: -4.31121301651001
    4. 'n' → logprob: -4.93621301651001
    5. ' for' → logprob: -5.18621301651001
    6. 'i' → logprob: -5.68621301651001
    7. 'l' → logprob: -6.56121301651001
    8. 'a' → logprob: -6.56121301651001
    9. ')' → logprob: -6.68621301651001
    10. '
' → logprob: -6.81121301651001

Token 245: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015859126579016447
    2. 'i' → logprob: -6.751585960388184
    3. '#' → logprob: -8.001585960388184
    4. 'm' → logprob: -10.501585960388184
    5. 'def' → logprob: -10.751585960388184
    6. 'while' → logprob: -12.251585960388184
    7. 'n' → logprob: -12.501585960388184
    8. 'count' → logprob: -12.751585960388184
    9. 'if' → logprob: -12.876585960388184
    10. 'from' → logprob: -12.876585960388184

Token 246: 'cle' (ID: 3170)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.25691360235214233
    2. 'for' → logprob: -1.506913661956787
    3. 'cle' → logprob: -5.631913661956787
    4. 'c' → logprob: -7.506913661956787
    5. 'f' → logprob: -7.881913661956787
    6. 't' → logprob: -8.756913185119629
    7. 'i' → logprob: -9.131913185119629
    8. 'x' → logprob: -10.006913185119629
    9. 'k' → logprob: -10.006913185119629
    10. 'cl' → logprob: -10.256913185119629

Token 247: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003646518336609006
    2. ' for' → logprob: -5.628646373748779
    3. 'i' → logprob: -10.128646850585938
    4. '_' → logprob: -13.003646850585938
    5. ' i' → logprob: -13.003646850585938
    6. '
' → logprob: -13.878646850585938
    7. '#' → logprob: -15.253646850585938
    8. 'n' → logprob: -15.628646850585938
    9. 'range' → logprob: -15.753646850585938
    10. 'r' → logprob: -16.378646850585938

Token 248: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00698081823065877
    2. ' range' → logprob: -5.631980895996094
    3. 'i' → logprob: -6.006980895996094
    4. 'r' → logprob: -8.006980895996094
    5. 's' → logprob: -8.131980895996094
    6. 'l' → logprob: -8.631980895996094
    7. '(range' → logprob: -10.006980895996094
    8. 'rang' → logprob: -11.131980895996094
    9. 'len' → logprob: -11.506980895996094
    10. ' i' → logprob: -12.381980895996094

Token 249: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018079349771142006
    2. 'range' → logprob: -4.2680792808532715
    3. ' i' → logprob: -6.2680792808532715
    4. ' range' → logprob: -7.1430792808532715
    5. '_' → logprob: -8.01807975769043
    6. 'for' → logprob: -8.14307975769043
    7. '_i' → logprob: -8.14307975769043
    8. 'k' → logprob: -9.39307975769043
    9. '_range' → logprob: -9.51807975769043
    10. 'r' → logprob: -10.26807975769043

Token 250: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09085307270288467
    2. 'range' → logprob: -2.465852975845337
    3. ' range' → logprob: -7.340853214263916
    4. ' i' → logprob: -8.090852737426758
    5. 'for' → logprob: -8.215852737426758
    6. '_i' → logprob: -9.090852737426758
    7. '_' → logprob: -9.215852737426758
    8. 'k' → logprob: -9.340852737426758
    9. 'car' → logprob: -9.715852737426758
    10. 'rang' → logprob: -9.715852737426758

Token 251: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1632299423217773
    2. 'iers' → logprob: -1.2882299423217773
    3. 'r' → logprob: -2.2882299423217773
    4. 'ières' → logprob: -2.4132299423217773
    5. 'range' → logprob: -2.6632299423217773
    6. 'ier' → logprob: -2.9132299423217773
    7. 're' → logprob: -3.6632299423217773
    8. 'rée' → logprob: -4.038229942321777
    9. 'ités' → logprob: -4.913229942321777
    10. 'ré' → logprob: -5.038229942321777

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9278749227523804
    2. 'range' → logprob: -1.3028749227523804
    3. ' i' → logprob: -1.3028749227523804
    4. ' range' → logprob: -3.05287504196167
    5. 'for' → logprob: -4.92787504196167
    6. ' for' → logprob: -6.55287504196167
    7. '(range' → logprob: -6.67787504196167
    8. ' in' → logprob: -6.80287504196167
    9. 'in' → logprob: -7.05287504196167
    10. '(i' → logprob: -7.17787504196167

Token 253: ' compris' (ID: 49173)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12108410894870758
    2. 'in' → logprob: -2.371084213256836
    3. 'range' → logprob: -4.246084213256836
    4. ' en' → logprob: -5.871084213256836
    5. ' range' → logprob: -6.871084213256836
    6. '(range' → logprob: -7.871084213256836
    7. 'en' → logprob: -7.996084213256836
    8. 'dans' → logprob: -7.996084213256836
    9. 'n' → logprob: -8.496084213256836
    10. ' dans' → logprob: -8.621084213256836

Token 254: ' entre' (ID: 3853)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.677340567111969
    2. 'dans' → logprob: -1.5523405075073242
    3. ' in' → logprob: -1.6773405075073242
    4. ' dans' → logprob: -2.927340507507324
    5. 'range' → logprob: -4.677340507507324
    6. 'entre' → logprob: -5.052340507507324
    7. ',' → logprob: -5.302340507507324
    8. 'en' → logprob: -5.677340507507324
    9. ' entre' → logprob: -5.677340507507324
    10. '(' → logprob: -6.052340507507324

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002969261258840561
    2. ' ' → logprob: -5.877969264984131
    3. 'n' → logprob: -9.127968788146973
    4. ' n' → logprob: -10.127968788146973
    5. '1' → logprob: -11.252968788146973
    6. '2' → logprob: -13.502968788146973
    7. ' range' → logprob: -14.627968788146973
    8. '(n' → logprob: -15.002968788146973
    9. '```' → logprob: -15.502968788146973
    10. 'range' → logprob: -15.627968788146973

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014406509581021965
    2. '1' → logprob: -9.250144004821777
    3. 'n' → logprob: -10.000144004821777
    4. ' ' → logprob: -13.250144004821777
    5. '(n' → logprob: -15.625144004821777
    6. '2' → logprob: -15.625144004821777
    7. 'range' → logprob: -16.125144958496094
    8. 'l' → logprob: -16.250144958496094
    9. '(' → logprob: -16.500144958496094
    10. 'len' → logprob: -17.000144958496094

Token 257: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21059370040893555
    2. ' n' → logprob: -3.0855937004089355
    3. ',n' → logprob: -3.4605937004089355
    4. ' in' → logprob: -3.7105937004089355
    5. ' ,' → logprob: -4.2105937004089355
    6. 'n' → logprob: -4.4605937004089355
    7. ' ' → logprob: -4.4605937004089355
    8. ' jusqu' → logprob: -4.5855937004089355
    9. 'in' → logprob: -4.9605937004089355
    10. '(n' → logprob: -5.2105937004089355

Token 258: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06252001971006393
    2. ' n' → logprob: -2.9375200271606445
    3. 'len' → logprob: -5.0625200271606445
    4. ' len' → logprob: -6.6875200271606445
    5. ' ' → logprob: -11.562520027160645
    6. '(n' → logprob: -12.062520027160645
    7. '(len' → logprob: -12.687520027160645
    8. '
' → logprob: -13.062520027160645
    9. 'l' → logprob: -13.062520027160645
    10. '1' → logprob: -13.187520027160645

Token 259: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06661665439605713
    2. 'len' → logprob: -3.0666165351867676
    3. ' n' → logprob: -4.191616535186768
    4. ' len' → logprob: -5.941616535186768
    5. ' ' → logprob: -9.566617012023926
    6. '(len' → logprob: -11.191617012023926
    7. '(n' → logprob: -11.316617012023926
    8. '2' → logprob: -12.066617012023926
    9. '
' → logprob: -13.191617012023926
    10. 'l' → logprob: -13.379117012023926

Token 260: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0856268405914307
    2. 'n' → logprob: -1.3356268405914307
    3. '*n' → logprob: -1.7106268405914307
    4. ' *' → logprob: -2.3356268405914307
    5. '*' → logprob: -3.2106268405914307
    6. ' **' → logprob: -3.4606268405914307
    7. ' n' → logprob: -4.210626602172852
    8. ' ' → logprob: -4.210626602172852
    9. '0' → logprob: -4.835626602172852
    10. ',' → logprob: -5.585626602172852

Token 261: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019428761675953865
    2. ' n' → logprob: -4.019428730010986
    3. '10' → logprob: -7.769428730010986
    4. '(n' → logprob: -7.894428730010986
    5. '**' → logprob: -9.144429206848145
    6. ' ' → logprob: -9.269429206848145
    7. '7' → logprob: -10.019429206848145
    8. '(' → logprob: -10.769429206848145
    9. ' (' → logprob: -10.769429206848145
    10. '	n' → logprob: -10.769429206848145

Token 262: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23447631299495697
    2. '(n' → logprob: -2.859476327896118
    3. '(range' → logprob: -2.984476327896118
    4. '**' → logprob: -3.359476327896118
    5. 'range' → logprob: -3.359476327896118
    6. ' (' → logprob: -3.734476327896118
    7. '
' → logprob: -6.484476089477539
    8. ' range' → logprob: -6.609476089477539
    9. 'import' → logprob: -7.359476089477539
    10. '2' → logprob: -7.484476089477539

Token 263: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10223373770713806
    2. ' n' → logprob: -2.352233648300171
    3. '1' → logprob: -6.22723388671875
    4. ' ' → logprob: -10.72723388671875
    5. '(n' → logprob: -11.60223388671875
    6. '```' → logprob: -11.60223388671875
    7. '	n' → logprob: -12.85223388671875
    8. '(' → logprob: -13.97723388671875
    9. ')n' → logprob: -14.28973388671875
    10. '``' → logprob: -14.35223388671875

Token 264: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012209753505885601
    2. '1' → logprob: -4.512209892272949
    3. ' n' → logprob: -6.762209892272949
    4. '```' → logprob: -13.38720989227295
    5. ' ' → logprob: -13.88720989227295
    6. '(n' → logprob: -13.88720989227295
    7. '(' → logprob: -15.76220989227295
    8. '2' → logprob: -15.88720989227295
    9. '	n' → logprob: -15.88720989227295
    10. '``' → logprob: -16.262208938598633

Token 265: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037012589164078236
    2. ' for' → logprob: -6.253701210021973
    3. '(range' → logprob: -7.003701210021973
    4. '(' → logprob: -7.753701210021973
    5. ':' → logprob: -8.628701210021973
    6. 'range' → logprob: -9.128701210021973
    7. '
' → logprob: -9.878701210021973
    8. '(n' → logprob: -10.003701210021973
    9. 'n' → logprob: -11.253701210021973
    10. ':
' → logprob: -11.503701210021973

Token 266: 'so' (ID: 786)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7506020665168762
    2. '(' → logprob: -1.5006020069122314
    3. ' (' → logprob: -2.1256020069122314
    4. ' ' → logprob: -2.2506020069122314
    5. '0' → logprob: -3.0006020069122314
    6. ')' → logprob: -4.0006022453308105
    7. '1' → logprob: -5.5006022453308105
    8. 'for' → logprob: -6.3756022453308105
    9. ' for' → logprob: -6.5006022453308105
    10. ' )' → logprob: -6.6256022453308105

Token 267: 'it' (ID: 278)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7698776721954346
    2. '+' → logprob: -1.5198776721954346
    3. ' n' → logprob: -2.8948776721954346
    4. ' range' → logprob: -2.8948776721954346
    5. 'n' → logprob: -3.1448776721954346
    6. '2' → logprob: -3.2698776721954346
    7. '**' → logprob: -3.5198776721954346
    8. ')' → logprob: -3.6448776721954346
    9. ' **' → logprob: -3.8948776721954346
    10. '1' → logprob: -3.8948776721954346

Token 268: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3122347891330719
    2. '(' → logprob: -1.9372347593307495
    3. ' (' → logprob: -2.687234878540039
    4. ' ' → logprob: -3.062234878540039
    5. '1' → logprob: -4.687234878540039
    6. ')' → logprob: -11.562234878540039
    7. '```' → logprob: -12.812234878540039
    8. '0' → logprob: -12.937234878540039
    9. '   ' → logprob: -13.312234878540039
    10. ',' → logprob: -13.312234878540039

Token 269: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38827162981033325
    2. '2' → logprob: -1.1382715702056885
    3. ' (' → logprob: -7.263271808624268
    4. '1' → logprob: -7.388271808624268
    5. ' ' → logprob: -9.63827133178711
    6. '0' → logprob: -11.51327133178711
    7. 'pow' → logprob: -13.63827133178711
    8. 'range' → logprob: -13.76327133178711
    9. '```' → logprob: -14.51327133178711
    10. ')' → logprob: -14.63827133178711

Token 270: '<<' (ID: 5354)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.24486981332302094
    2. '<<' → logprob: -1.6198698282241821
    3. ' ' → logprob: -4.369869709014893
    4. ' **' → logprob: -5.994869709014893
    5. '**' → logprob: -6.119869709014893
    6. ',' → logprob: -7.119869709014893
    7. '0' → logprob: -7.994869709014893
    8. ' <' → logprob: -9.11987018585205
    9. '2' → logprob: -9.36987018585205
    10. '<<(' → logprob: -9.49487018585205

Token 271: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34852084517478943
    2. ' n' → logprob: -1.2235208749771118
    3. '(n' → logprob: -10.59852123260498
    4. ' ' → logprob: -11.22352123260498
    5. ' ' → logprob: -11.72352123260498
    6. '	n' → logprob: -11.84852123260498
    7. '20' → logprob: -11.97352123260498
    8. '```' → logprob: -12.59852123260498
    9. ')n' → logprob: -12.72352123260498
    10. ' (' → logprob: -12.97352123260498

Token 272: ' possibilités' (ID: 119756)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1304444968700409
    2. ')' → logprob: -2.1304445266723633
    3. ' ):' → logprob: -5.880444526672363
    4. '):
' → logprob: -8.005444526672363
    5. ' )' → logprob: -8.380444526672363
    6. ':' → logprob: -9.755444526672363
    7. '+' → logprob: -10.380444526672363
    8. ',' → logprob: -11.630444526672363
    9. '),' → logprob: -12.005444526672363
    10. 'for' → logprob: -12.255444526672363

Token 273: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5401378870010376
    2. ':' → logprob: -0.9151378870010376
    3. ')' → logprob: -5.040137767791748
    4. ' :' → logprob: -5.415137767791748
    5. ' ):' → logprob: -6.165137767791748
    6. 'for' → logprob: -6.415137767791748
    7. ',' → logprob: -7.165137767791748
    8. ' for' → logprob: -7.540137767791748
    9. '):
' → logprob: -8.040138244628906
    10. 'n' → logprob: -8.790138244628906

Token 274: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003766919835470617
    2. ' for' → logprob: -8.50037670135498
    3. '
' → logprob: -8.87537670135498
    4. '(' → logprob: -11.37537670135498
    5. 'n' → logprob: -11.62537670135498
    6. '(
' → logprob: -12.50037670135498
    7. 'f' → logprob: -12.75037670135498
    8. '(n' → logprob: -13.62537670135498
    9. ':
' → logprob: -13.75037670135498
    10. ' 
' → logprob: -14.12537670135498

Token 275: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.65707261255011e-06
    2. ' for' → logprob: -12.000008583068848
    3. '
' → logprob: -13.875008583068848
    4. 'i' → logprob: -14.125008583068848
    5. 'from' → logprob: -14.750008583068848
    6. 'n' → logprob: -16.000009536743164
    7. '2' → logprob: -16.125009536743164
    8. '```' → logprob: -16.625009536743164
    9. '(' → logprob: -17.125009536743164
    10. '0' → logprob: -17.250009536743164

Token 276: '1' (ID: 16)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7425862550735474
    2. 'for' → logprob: -0.7425862550735474
    3. 'i' → logprob: -3.492586135864258
    4. ' i' → logprob: -4.992586135864258
    5. ' range' → logprob: -5.617586135864258
    6. ' ' → logprob: -6.242586135864258
    7. '1' → logprob: -6.617586135864258
    8. '2' → logprob: -6.867586135864258
    9. 'range' → logprob: -7.242586135864258
    10. ')' → logprob: -7.742586135864258

Token 277: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10076038539409637
    2. ' <<' → logprob: -2.3507604598999023
    3. ')<<' → logprob: -8.725760459899902
    4. '
' → logprob: -9.100760459899902
    5. '1' → logprob: -9.850760459899902
    6. ' <<
' → logprob: -9.975760459899902
    7. ' <<=' → logprob: -10.350760459899902
    8. '<<(' → logprob: -10.600760459899902
    9. ' ' → logprob: -10.725760459899902
    10. ')' → logprob: -10.850760459899902

Token 278: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2811644971370697
    2. ' n' → logprob: -1.406164526939392
    3. ' ' → logprob: -12.281164169311523
    4. '	n' → logprob: -12.406164169311523
    5. '1' → logprob: -13.031164169311523
    6. ')n' → logprob: -13.906164169311523
    7. '(n' → logprob: -14.281164169311523
    8. '_n' → logprob: -14.781164169311523
    9. '```' → logprob: -15.031164169311523
    10. ' ' → logprob: -15.031164169311523

Token 279: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6400260925292969
    2. '):' → logprob: -1.6400260925292969
    3. 'for' → logprob: -2.015026092529297
    4. '"' → logprob: -2.265026092529297
    5. ')"' → logprob: -3.890026092529297
    6. ' for' → logprob: -4.515026092529297
    7. ':' → logprob: -5.265026092529297
    8. '):
' → logprob: -6.015026092529297
    9. '":' → logprob: -7.140026092529297
    10. '")' → logprob: -8.515026092529297

Token 280: ' équ' (ID: 18899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35542288422584534
    2. 'for' → logprob: -1.605422854423523
    3. ' for' → logprob: -2.4804229736328125
    4. ')' → logprob: -5.2304229736328125
    5. '):' → logprob: -5.4804229736328125
    6. ' :' → logprob: -6.2304229736328125
    7. 'range' → logprob: -6.9804229736328125
    8. ' range' → logprob: -7.2304229736328125
    9. ' in' → logprob: -7.4804229736328125
    10. ':
' → logprob: -7.7304229736328125

Token 281: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.000777707842644304
    2. 'i' → logprob: -7.875777721405029
    3. 'ivalent' → logprob: -8.250777244567871
    4. 'ival' → logprob: -9.750777244567871
    5. 'a' → logprob: -9.750777244567871
    6. 'al' → logprob: -11.750777244567871
    7. '=' → logprob: -13.250777244567871
    8. '```' → logprob: -13.375777244567871
    9. '#' → logprob: -13.625777244567871
    10. '``' → logprob: -14.125777244567871

Token 282: 'aut' (ID: 1828)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8429086804389954
    2. 'val' → logprob: -1.5929086208343506
    3. 'iv' → logprob: -2.3429086208343506
    4. 'al' → logprob: -2.5929086208343506
    5. 'a' → logprob: -3.4679086208343506
    6. 'aux' → logprob: -3.4679086208343506
    7. 'aut' → logprob: -3.7179086208343506
    8. 'ale' → logprob: -3.9679086208343506
    9. 'ivalent' → logprob: -3.9679086208343506
    10. '#' → logprob: -4.09290885925293

Token 283: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0750771015882492
    2. ' to' → logprob: -2.8250770568847656
    3. 'to' → logprob: -5.325077056884766
    4. '1' → logprob: -5.700077056884766
    5. 'à' → logprob: -5.825077056884766
    6. '(' → logprob: -7.200077056884766
    7. ' a' → logprob: -7.950077056884766
    8. 'n' → logprob: -8.950077056884766
    9. ' (' → logprob: -8.950077056884766
    10. 'a' → logprob: -9.575077056884766

Token 284: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026701882015913725
    2. 'pow' → logprob: -6.0026702880859375
    3. ' ' → logprob: -9.002670288085938
    4. '(' → logprob: -9.627670288085938
    5. '1' → logprob: -13.252670288085938
    6. ' pow' → logprob: -13.377670288085938
    7. '(pow' → logprob: -14.752670288085938
    8. '`' → logprob: -15.002670288085938
    9. '```' → logprob: -15.252670288085938
    10. ' (' → logprob: -15.377670288085938

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022231759503483772
    2. 'pow' → logprob: -6.127223014831543
    3. '(' → logprob: -10.252223014831543
    4. '1' → logprob: -13.377223014831543
    5. ' ' → logprob: -14.127223014831543
    6. '(pow' → logprob: -15.252223014831543
    7. ' pow' → logprob: -16.25222396850586
    8. 'power' → logprob: -17.00222396850586
    9. '```' → logprob: -17.37722396850586
    10. 'multip' → logprob: -17.37722396850586

Token 286: ' puissance' (ID: 63494)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02326248399913311
    2. ' **' → logprob: -3.7732625007629395
    3. '
' → logprob: -12.148262023925781
    4. 'n' → logprob: -12.898262023925781
    5. '^' → logprob: -13.273262023925781
    6. '```' → logprob: -13.273262023925781
    7. ' n' → logprob: -13.398262023925781
    8. ' ' → logprob: -13.523262023925781
    9. '*' → logprob: -14.023262023925781
    10. '*n' → logprob: -14.773262023925781

Token 287: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05489063635468483
    2. ' n' → logprob: -2.9298906326293945
    3. '```' → logprob: -12.804890632629395
    4. '(n' → logprob: -13.304890632629395
    5. '	n' → logprob: -13.679890632629395
    6. ' ' → logprob: -13.804890632629395
    7. ')n' → logprob: -14.679890632629395
    8. ' ' → logprob: -15.054890632629395
    9. '   ' → logprob: -15.054890632629395
    10. '<n' → logprob: -15.929890632629395

Token 288: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005930667975917459
    2. ' for' → logprob: -7.625593185424805
    3. '
' → logprob: -9.750593185424805
    4. ':
' → logprob: -10.625593185424805
    5. ':' → logprob: -11.500593185424805
    6. '(' → logprob: -12.250593185424805
    7. 'n' → logprob: -12.875593185424805
    8. 'f' → logprob: -14.000593185424805
    9. '(n' → logprob: -14.000593185424805
    10. '(
' → logprob: -14.000593185424805

Token 289: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07903718203306198
    2. ' for' → logprob: -2.5790371894836426
    3. ':' → logprob: -9.079036712646484
    4. '
' → logprob: -11.829036712646484
    5. ' 
' → logprob: -12.204036712646484
    6. ' :' → logprob: -12.329036712646484
    7. '(' → logprob: -12.829036712646484
    8. 'n' → logprob: -12.954036712646484
    9. ',' → logprob: -13.204036712646484
    10. ':
' → logprob: -13.329036712646484

Token 290: ' <<' (ID: 2256)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5261280536651611
    2. ' ' → logprob: -0.9011280536651611
    3. ' on' → logprob: -6.526127815246582
    4. ' i' → logprob: -7.776127815246582
    5. '(' → logprob: -7.901127815246582
    6. '2' → logprob: -8.651127815246582
    7. ' (' → logprob: -9.401127815246582
    8. '   ' → logprob: -9.651127815246582
    9. ' n' → logprob: -9.651127815246582
    10. ' le' → logprob: -9.776127815246582

Token 291: ' est' (ID: 893)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6183920502662659
    2. ' ' → logprob: -1.743391990661621
    3. ' n' → logprob: -2.118391990661621
    4. ' est' → logprob: -2.743391990661621
    5. 'n' → logprob: -3.243391990661621
    6. ' is' → logprob: -4.118391990661621
    7. ' operator' → logprob: -4.743391990661621
    8. ' (' → logprob: -5.118391990661621
    9. ' permet' → logprob: -5.618391990661621
    10. '(' → logprob: -5.618391990661621

Token 292: ' l' (ID: 305)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6054747104644775
    2. ' un' → logprob: -0.9804747104644775
    3. 'un' → logprob: -3.6054747104644775
    4. ' l' → logprob: -3.8554747104644775
    5. 'une' → logprob: -3.9804747104644775
    6. 'l' → logprob: -5.230474472045898
    7. 'le' → logprob: -6.355474472045898
    8. 'a' → logprob: -6.605474472045898
    9. ' le' → logprob: -6.605474472045898
    10. '1' → logprob: -7.355474472045898

Token 293: ''op' (ID: 70747)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.7754692435264587
    2. 'e' → logprob: -1.5254693031311035
    3. 'a' → logprob: -2.0254693031311035
    4. 'eft' → logprob: -2.4004693031311035
    5. '1' → logprob: -3.9004693031311035
    6. 's' → logprob: -4.2754693031311035
    7. '<' → logprob: -4.4004693031311035
    8. 'ef' → logprob: -5.0254693031311035
    9. ' shift' → logprob: -5.2754693031311035
    10. 'é' → logprob: -5.4004693031311035

Token 294: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.48551514744758606
    2. 'ér' → logprob: -1.7355151176452637
    3. 'é' → logprob: -2.1105151176452637
    4. 'ération' → logprob: -3.2355151176452637
    5. '```' → logprob: -3.9855151176452637
    6. '=' → logprob: -4.610515117645264
    7. 'er' → logprob: -5.110515117645264
    8. '<<' → logprob: -6.235515117645264
    9. 'éré' → logprob: -6.735515117645264
    10. '**' → logprob: -6.735515117645264

Token 295: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.29104354977607727
    2. ' de' → logprob: -1.4160435199737549
    3. 'b' → logprob: -4.791043758392334
    4. 'bit' → logprob: -6.791043758392334
    5. ' bit' → logprob: -8.916043281555176
    6. 'd' → logprob: -9.291043281555176
    7. ' ' → logprob: -9.541043281555176
    8. '1' → logprob: -10.416043281555176
    9. '<<' → logprob: -10.916043281555176
    10. ' b' → logprob: -11.416043281555176

Token 296: ' dé' (ID: 2393)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7172175049781799
    2. 'bit' → logprob: -0.9672175049781799
    3. ' dé' → logprob: -3.092217445373535
    4. 'shift' → logprob: -3.217217445373535
    5. 'dé' → logprob: -3.342217445373535
    6. 'bits' → logprob: -4.842217445373535
    7. ' bit' → logprob: -6.967217445373535
    8. ' déplacement' → logprob: -7.342217445373535
    9. 'sh' → logprob: -8.092217445373535
    10. 'b' → logprob: -8.217217445373535

Token 297: 'cal' (ID: 5842)
  Prédit: 'cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.0061104511842131615
    2. 'placement' → logprob: -5.131110668182373
    3. 'cale' → logprob: -9.631110191345215
    4. '```' → logprob: -9.881110191345215
    5. 'c' → logprob: -10.506110191345215
    6. 'caler' → logprob: -11.381110191345215
    7. 'caling' → logprob: -11.756110191345215
    8. 'cision' → logprob: -12.631110191345215
    9. '``' → logprob: -13.006110191345215
    10. 'centration' → logprob: -14.006110191345215

Token 298: 'age' (ID: 477)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0261943340301514
    2. 'ift' → logprob: -2.1511943340301514
    3. ' à' → logprob: -2.2761943340301514
    4. 'é' → logprob: -3.0261943340301514
    5. 'ay' → logprob: -3.2761943340301514
    6. 'à' → logprob: -3.5261943340301514
    7. 's' → logprob: -3.5261943340301514
    8. ' ' → logprob: -3.6511943340301514
    9. 'ects' → logprob: -4.0261945724487305
    10. 't' → logprob: -4.1511945724487305

Token 299: ' b' (ID: 287)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37197446823120117
    2. 'for' → logprob: -1.4969744682312012
    3. ' i' → logprob: -3.121974468231201
    4. 'i' → logprob: -3.621974468231201
    5. 'n' → logprob: -4.746974468231201
    6. 'range' → logprob: -5.996974468231201
    7. ' range' → logprob: -6.871974468231201
    8. ' n' → logprob: -6.996974468231201
    9. ' in' → logprob: -7.746974468231201
    10. ' ' → logprob: -7.746974468231201

Token 300: 'inaire' (ID: 41465)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0032251295633614063
    2. 'its' → logprob: -6.253225326538086
    3. 'i' → logprob: -7.378225326538086
    4. '```' → logprob: -8.253225326538086
    5. '1' → logprob: -8.628225326538086
    6. '`' → logprob: -9.378225326538086
    7. '2' → logprob: -10.253225326538086
    8. 'itin' → logprob: -11.253225326538086
    9. 'itl' → logprob: -11.378225326538086
    10. '_it' → logprob: -11.378225326538086

Token 301: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09562741965055466
    2. ' for' → logprob: -2.4706273078918457
    3. '
' → logprob: -5.720627307891846
    4. ':' → logprob: -6.345627307891846
    5. 'n' → logprob: -7.095627307891846
    6. ':
' → logprob: -8.220627784729004
    7. ' 
' → logprob: -8.970627784729004
    8. 'range' → logprob: -9.220627784729004
    9. '```' → logprob: -9.845627784729004
    10. 'i' → logprob: -9.970627784729004

Token 302: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.5074793696403503
    2. 'left' → logprob: -1.2574794292449951
    3. '1' → logprob: -2.757479429244995
    4. 'n' → logprob: -4.382479190826416
    5. ' droite' → logprob: -4.507479190826416
    6. 'g' → logprob: -4.632479190826416
    7. 'dro' → logprob: -5.632479190826416
    8. 'bit' → logprob: -6.007479190826416
    9. ' ' → logprob: -6.007479190826416
    10. ' left' → logprob: -6.257479190826416

Token 303: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029809102416038513
    2. ' for' → logprob: -6.127980709075928
    3. '
' → logprob: -7.252980709075928
    4. 'n' → logprob: -10.627981185913086
    5. 'f' → logprob: -10.627981185913086
    6. 'range' → logprob: -11.502981185913086
    7. ':' → logprob: -11.752981185913086
    8. '```' → logprob: -12.002981185913086
    9. ':
' → logprob: -12.502981185913086
    10. 'i' → logprob: -12.877981185913086

Token 304: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014025058771949261
    2. ' for' → logprob: -9.500140190124512
    3. '
' → logprob: -9.875140190124512
    4. 'i' → logprob: -11.875140190124512
    5. 'f' → logprob: -12.500140190124512
    6. 'n' → logprob: -13.250140190124512
    7. '```' → logprob: -14.250140190124512
    8. 'from' → logprob: -15.625140190124512
    9. '

' → logprob: -15.875140190124512
    10. 'fo' → logprob: -16.000141143798828

Token 305: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931580901145935
    2. ' i' → logprob: -0.6931580901145935
    3. ' ' → logprob: -12.318158149719238
    4. '	i' → logprob: -12.568158149719238
    5. ' ' → logprob: -13.443158149719238
    6. '```' → logprob: -14.193158149719238
    7. '_i' → logprob: -14.818158149719238
    8. '_' → logprob: -15.568158149719238
    9. '   ' → logprob: -16.568157196044922
    10. ' _' → logprob: -16.943157196044922

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03371208906173706
    2. 'in' → logprob: -3.408712148666382
    3. ' ' → logprob: -9.783712387084961
    4. '```' → logprob: -13.033712387084961
    5. '	in' → logprob: -13.533712387084961
    6. '0' → logprob: -13.783712387084961
    7. 'In' → logprob: -14.158712387084961
    8. '1' → logprob: -14.283712387084961
    9. ' ' → logprob: -14.408712387084961
    10. 'import' → logprob: -14.658712387084961

Token 307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048408225178719
    2. ' range' → logprob: -4.511048316955566
    3. '0' → logprob: -15.011048316955566
    4. '	range' → logprob: -15.886048316955566
    5. ' ' → logprob: -16.511049270629883
    6. '(range' → logprob: -16.761049270629883
    7. 'rang' → logprob: -17.511049270629883
    8. '```' → logprob: -17.511049270629883
    9. 'r' → logprob: -17.636049270629883
    10. '   ' → logprob: -17.636049270629883

Token 308: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0445127372804563e-05
    2. ' (' → logprob: -11.75001049041748
    3. '((' → logprob: -13.25001049041748
    4. '1' → logprob: -14.25001049041748
    5. '(
' → logprob: -18.250009536743164
    6. ' ' → logprob: -18.875009536743164
    7. ')' → logprob: -19.875009536743164
    8. ',' → logprob: -20.125009536743164
    9. '```' → logprob: -20.500009536743164
    10. '   ' → logprob: -20.750009536743164

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024807697627693415
    2. '(' → logprob: -6.002480983734131
    3. ' ' → logprob: -12.252480506896973
    4. ' (' → logprob: -15.002480506896973
    5. '   ' → logprob: -16.37748146057129
    6. '0' → logprob: -17.62748146057129
    7. '2' → logprob: -19.75248146057129
    8. '
' → logprob: -20.37748146057129
    9. '```' → logprob: -20.50248146057129
    10. ')' → logprob: -21.00248146057129

Token 310: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.4747077524662018
    2. '<<' → logprob: -0.9747077226638794
    3. ',' → logprob: -7.47470760345459
    4. ' ,' → logprob: -9.97470760345459
    5. '1' → logprob: -11.84970760345459
    6. ' ' → logprob: -12.09970760345459
    7. '<<(' → logprob: -13.22470760345459
    8. '<' → logprob: -14.47470760345459
    9. ' <<
' → logprob: -14.84970760345459
    10. ' ' → logprob: -15.22470760345459

Token 311: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '	n' → logprob: -16.625553131103516
    4. ')n' → logprob: -17.875553131103516
    5. '(n' → logprob: -19.000553131103516
    6. ' ' → logprob: -19.000553131103516
    7. '   ' → logprob: -19.875553131103516
    8. '_n' → logprob: -20.625553131103516
    9. '```' → logprob: -20.625553131103516
    10. ',n' → logprob: -21.500553131103516

Token 312: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.7530574849806726e-05
    2. ' ):' → logprob: -10.125057220458984
    3. '):
' → logprob: -11.250057220458984
    4. ')' → logprob: -12.750057220458984
    5. ':' → logprob: -13.500057220458984
    6. '():' → logprob: -16.750057220458984
    7. '):
' → logprob: -17.375057220458984
    8. '}:' → logprob: -18.125057220458984
    9. ']:' → logprob: -18.375057220458984
    10. ' :' → logprob: -19.125057220458984

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011762974318116903
    2. '    
' → logprob: -8.251175880432129
    3. ' s' → logprob: -9.126175880432129
    4. ':' → logprob: -9.251175880432129
    5. '	s' → logprob: -9.501175880432129
    6. ' l' → logprob: -9.626175880432129
    7. '   ' → logprob: -9.626175880432129
    8. '	l' → logprob: -10.251175880432129
    9. '	t' → logprob: -10.376175880432129
    10. '\t' → logprob: -10.501175880432129

Token 314: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6673285961151123
    2. 'sub' → logprob: -1.7923285961151123
    3. '   ' → logprob: -2.1673285961151123
    4. 'key' → logprob: -2.2923285961151123
    5. 'x' → logprob: -2.4173285961151123
    6. 'tmp' → logprob: -3.4173285961151123
    7. 't' → logprob: -3.4173285961151123
    8. 'p' → logprob: -3.5423285961151123
    9. 'm' → logprob: -3.5423285961151123
    10. 'u' → logprob: -3.6673285961151123

Token 315: ' Initialise' (ID: 179601)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.6156480312347412
    2. 'x' → logprob: -1.9906480312347412
    3. 'a' → logprob: -2.240648031234741
    4. 'bin' → logprob: -2.615648031234741
    5. 'key' → logprob: -2.615648031234741
    6. 'tmp' → logprob: -2.740648031234741
    7. 'm' → logprob: -3.240648031234741
    8. 'u' → logprob: -3.365648031234741
    9. 'c' → logprob: -3.615648031234741
    10. 't' → logprob: -3.990648031234741

Token 316: ' quatre' (ID: 41209)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5162841081619263
    2. 'sub' → logprob: -2.0162839889526367
    3. 'tmp' → logprob: -2.5162839889526367
    4. 'x' → logprob: -2.8912839889526367
    5. '   ' → logprob: -2.8912839889526367
    6. 'c' → logprob: -2.8912839889526367
    7. 'temp' → logprob: -3.0162839889526367
    8. 'l' → logprob: -3.3912839889526367
    9. 't' → logprob: -3.3912839889526367
    10. 'count' → logprob: -3.6412839889526367

Token 317: ' chaînes' (ID: 179904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.340249538421631
    2. ' subse' → logprob: -2.465249538421631
    3. 'chaine' → logprob: -2.590249538421631
    4. ' =' → logprob: -2.590249538421631
    5. 'sub' → logprob: -2.840249538421631
    6. '=' → logprob: -3.215249538421631
    7. 'for' → logprob: -3.465249538421631
    8. 'string' → logprob: -3.590249538421631
    9. 'temp' → logprob: -3.590249538421631
    10. 'tmp' → logprob: -3.590249538421631

Token 318: ' v' (ID: 323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43819987773895264
    2. ' =' → logprob: -1.9381998777389526
    3. 'a' → logprob: -2.438199996948242
    4. ' l' → logprob: -3.063199996948242
    5. 'l' → logprob: -3.813199996948242
    6. ' a' → logprob: -3.938199996948242
    7. ' s' → logprob: -4.438199996948242
    8. ':' → logprob: -5.563199996948242
    9. '=' → logprob: -5.938199996948242
    10. '    ' → logprob: -6.438199996948242

Token 319: 'ides' (ID: 4105)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15619803965091705
    2. '=' → logprob: -2.531198024749756
    3. ',' → logprob: -3.531198024749756
    4. '   ' → logprob: -4.031198024749756
    5. 'u' → logprob: -5.156198024749756
    6. '_' → logprob: -6.031198024749756
    7. 'a' → logprob: -6.281198024749756
    8. ' ' → logprob: -6.656198024749756
    9. 'v' → logprob: -6.906198024749756
    10. '1' → logprob: -6.906198024749756

Token 320: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2127646654844284
    2. ':' → logprob: -2.7127647399902344
    3. 'v' → logprob: -2.9627647399902344
    4. ' :' → logprob: -3.3377647399902344
    5. ',' → logprob: -4.087764739990234
    6. ' =' → logprob: -4.962764739990234
    7. '    ' → logprob: -5.337764739990234
    8. ' v' → logprob: -5.462764739990234
    9. ' s' → logprob: -6.712764739990234
    10. ' ' → logprob: -7.337764739990234

Token 321: ' s' (ID: 265)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.40052929520606995
    2. '   ' → logprob: -1.6505292654037476
    3. ' v' → logprob: -2.525529384613037
    4. 'a' → logprob: -3.275529384613037
    5. 'l' → logprob: -5.025529384613037
    6. ' a' → logprob: -5.150529384613037
    7. ' l' → logprob: -5.525529384613037
    8. 'x' → logprob: -7.775529384613037
    9. 'u' → logprob: -7.775529384613037
    10. '    ' → logprob: -7.900529384613037

Token 322: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0264590978622437
    2. ',' → logprob: -1.6514590978622437
    3. 'v' → logprob: -2.276459217071533
    4. ' =' → logprob: -2.526459217071533
    5. 'u' → logprob: -2.901459217071533
    6. 'a' → logprob: -3.151459217071533
    7. 't' → logprob: -3.526459217071533
    8. '0' → logprob: -3.526459217071533
    9. 's' → logprob: -3.901459217071533
    10. 'ub' → logprob: -4.401459217071533

Token 323: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.497941255569458
    2. 't' → logprob: -1.622941255569458
    3. 'a' → logprob: -2.122941255569458
    4. 'u' → logprob: -2.247941255569458
    5. 'l' → logprob: -2.747941255569458
    6. ' l' → logprob: -2.997941255569458
    7. ' u' → logprob: -2.997941255569458
    8. 'v' → logprob: -3.122941255569458
    9. ' a' → logprob: -3.497941255569458
    10. 'x' → logprob: -3.872941255569458

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10612427443265915
    2. ' =' → logprob: -2.48112416267395
    3. ' ,' → logprob: -4.981124401092529
    4. '   ' → logprob: -5.481124401092529
    5. '=' → logprob: -5.731124401092529
    6. 's' → logprob: -6.231124401092529
    7. ' s' → logprob: -8.856123924255371
    8. ' ' → logprob: -8.856123924255371
    9. '1' → logprob: -9.356123924255371
    10. '  ' → logprob: -9.356123924255371

Token 325: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6453368663787842
    2. 'u' → logprob: -0.7703368663787842
    3. 'v' → logprob: -6.020337104797363
    4. 'a' → logprob: -6.145337104797363
    5. ' v' → logprob: -6.645337104797363
    6. 's' → logprob: -6.645337104797363
    7. ' s' → logprob: -6.770337104797363
    8. 'p' → logprob: -6.895337104797363
    9. 'x' → logprob: -7.020337104797363
    10. ' a' → logprob: -7.145337104797363

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5529962778091431
    2. ' =' → logprob: -1.552996277809143
    3. 's' → logprob: -1.802996277809143
    4. '   ' → logprob: -3.9279961585998535
    5. ' s' → logprob: -4.1779961585998535
    6. ' ,' → logprob: -4.9279961585998535
    7. '=' → logprob: -5.4279961585998535
    8. '  ' → logprob: -8.177996635437012
    9. ',s' → logprob: -8.177996635437012
    10. 'v' → logprob: -8.427996635437012

Token 327: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9185158014297485
    2. ' v' → logprob: -0.9185158014297485
    3. ' w' → logprob: -2.418515682220459
    4. 'w' → logprob: -2.918515682220459
    5. ' p' → logprob: -4.043515682220459
    6. 'p' → logprob: -4.293515682220459
    7. '   ' → logprob: -5.168515682220459
    8. 'r' → logprob: -5.543515682220459
    9. ' ' → logprob: -5.918515682220459
    10. ' s' → logprob: -6.293515682220459

Token 328: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4303782880306244
    2. 's' → logprob: -1.4303783178329468
    3. '   ' → logprob: -2.6803781986236572
    4. ' s' → logprob: -3.6803781986236572
    5. ',' → logprob: -4.805378437042236
    6. '=' → logprob: -5.430378437042236
    7. '_s' → logprob: -6.555378437042236
    8. ':' → logprob: -6.555378437042236
    9. ' ' → logprob: -7.805378437042236
    10. '  ' → logprob: -8.180377960205078

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6787483096122742
    2. ':' → logprob: -1.303748369216919
    3. 's' → logprob: -2.303748369216919
    4. ' s' → logprob: -2.553748369216919
    5. ' :' → logprob: -3.303748369216919
    6. '    ' → logprob: -5.80374813079834
    7. '    
' → logprob: -6.92874813079834
    8. '  ' → logprob: -7.42874813079834
    9. ',' → logprob: -7.67874813079834
    10. ' ' → logprob: -7.92874813079834

Token 330: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45691993832588196
    2. ' s' → logprob: -1.3319199085235596
    3. '   ' → logprob: -2.3319199085235596
    4. '    ' → logprob: -5.706920146942139
    5. '    
' → logprob: -7.081920146942139
    6. ' ' → logprob: -7.456920146942139
    7. '	s' → logprob: -8.58191967010498
    8. '_s' → logprob: -8.83191967010498
    9. ' 
' → logprob: -8.95691967010498
    10. '  ' → logprob: -9.08191967010498

Token 331: ' Ces' (ID: 35720)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32228294014930725
    2. '   ' → logprob: -1.5722829103469849
    3. ' s' → logprob: -2.6972830295562744
    4. ' ' → logprob: -8.822282791137695
    5. '	s' → logprob: -9.072282791137695
    6. '_s' → logprob: -9.447282791137695
    7. '    ' → logprob: -9.697282791137695
    8. 'v' → logprob: -9.822282791137695
    9. '  ' → logprob: -9.947282791137695
    10. 't' → logprob: -12.072282791137695

Token 332: ' chaînes' (ID: 179904)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8026447892189026
    2. ' s' → logprob: -0.9276447892189026
    3. ' =' → logprob: -2.302644729614258
    4. ' ' → logprob: -3.427644729614258
    5. '_s' → logprob: -4.427644729614258
    6. '_' → logprob: -4.802644729614258
    7. '   ' → logprob: -7.427644729614258
    8. ',' → logprob: -7.427644729614258
    9. '    ' → logprob: -7.552644729614258
    10. '=' → logprob: -7.677644729614258

Token 333: ' servir' (ID: 42557)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01736273430287838
    2. 's' → logprob: -5.017362594604492
    3. '=' → logprob: -5.142362594604492
    4. ' s' → logprob: -6.142362594604492
    5. ',' → logprob: -6.517362594604492
    6. ' ' → logprob: -7.642362594604492
    7. ' ,' → logprob: -8.642362594604492
    8. '_s' → logprob: -9.017362594604492
    9. '_' → logprob: -9.642362594604492
    10. '   ' → logprob: -9.767362594604492

Token 334: 'ont' (ID: 645)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.551912784576416
    2. '   ' → logprob: -1.426912784576416
    3. 'ont' → logprob: -2.676912784576416
    4. '=' → logprob: -2.801912784576416
    5. 's' → logprob: -4.176912784576416
    6. ' ' → logprob: -4.426912784576416
    7. 'ent' → logprob: -5.176912784576416
    8. ' à' → logprob: -5.551912784576416
    9. '  ' → logprob: -5.676912784576416
    10. 'a' → logprob: -5.676912784576416

Token 335: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1829675436019897
    2. ' à' → logprob: -1.3079675436019897
    3. ' s' → logprob: -1.5579675436019897
    4. 's' → logprob: -1.8079675436019897
    5. ' a' → logprob: -4.182967662811279
    6. ' =' → logprob: -4.557967662811279
    7. '   ' → logprob: -4.682967662811279
    8. 'à' → logprob: -5.307967662811279
    9. 'a' → logprob: -6.057967662811279
    10. '  ' → logprob: -7.057967662811279

Token 336: ' accum' (ID: 23148)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05957417190074921
    2. ' s' → logprob: -3.1845741271972656
    3. '"",' → logprob: -5.059574127197266
    4. ' ' → logprob: -5.309574127197266
    5. '"' → logprob: -6.184574127197266
    6. '""' → logprob: -6.809574127197266
    7. '   ' → logprob: -7.309574127197266
    8. ' "",' → logprob: -7.809574127197266
    9. ''',' → logprob: -8.184574127197266
    10. '  ' → logprob: -9.184574127197266

Token 337: 'uler' (ID: 11802)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005668530357070267
    2. 'e' → logprob: -8.375566482543945
    3. 'a' → logprob: -8.875566482543945
    4. '   ' → logprob: -9.875566482543945
    5. ' =' → logprob: -10.375566482543945
    6. ' s' → logprob: -10.750566482543945
    7. ' a' → logprob: -10.750566482543945
    8. ' ' → logprob: -11.000566482543945
    9. 'r' → logprob: -11.625566482543945
    10. 's' → logprob: -12.000566482543945

Token 338: ' différents' (ID: 36009)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7219680547714233
    2. 's' → logprob: -0.8469680547714233
    3. ' ' → logprob: -2.596968173980713
    4. '   ' → logprob: -5.471968173980713
    5. '    ' → logprob: -6.721968173980713
    6. ''' → logprob: -7.096968173980713
    7. ',' → logprob: -7.096968173980713
    8. ' '' → logprob: -7.471968173980713
    9. ' "' → logprob: -7.471968173980713
    10. ' ,' → logprob: -7.971968173980713

Token 339: ' caractères' (ID: 183106)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5963106155395508
    2. 's' → logprob: -0.8463106155395508
    3. '_' → logprob: -5.346310615539551
    4. 'strings' → logprob: -5.596310615539551
    5. ' strings' → logprob: -5.846310615539551
    6. ' parts' → logprob: -5.971310615539551
    7. ' ' → logprob: -6.471310615539551
    8. '   ' → logprob: -7.221310615539551
    9. ' caractères' → logprob: -7.471310615539551
    10. '_s' → logprob: -7.596310615539551

Token 340: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36799320578575134
    2. ' s' → logprob: -1.7429932355880737
    3. 's' → logprob: -2.117993116378784
    4. ':' → logprob: -5.117993354797363
    5. ',' → logprob: -5.992993354797363
    6. '    
' → logprob: -6.742993354797363
    7. '    ' → logprob: -7.117993354797363
    8. ' :' → logprob: -7.242993354797363
    9. '  ' → logprob: -7.867993354797363
    10. '	s' → logprob: -8.367993354797363

Token 341: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8365921378135681
    2. 's' → logprob: -1.211592197418213
    3. ' s' → logprob: -2.836592197418213
    4. '"' → logprob: -2.961592197418213
    5. '   ' → logprob: -3.711592197418213
    6. 'for' → logprob: -4.336592197418213
    7. ' travers' → logprob: -4.336592197418213
    8. 'append' → logprob: -4.461592197418213
    9. 'c' → logprob: -4.836592197418213
    10. 'r' → logprob: -5.086592197418213

Token 342: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8071410655975342
    2. '   ' → logprob: -1.3071410655975342
    3. '_' → logprob: -2.557141065597534
    4. '    ' → logprob: -3.432141065597534
    5. '  ' → logprob: -3.432141065597534
    6. ' i' → logprob: -3.682141065597534
    7. 's' → logprob: -3.807141065597534
    8. ' s' → logprob: -4.182141304016113
    9. ' for' → logprob: -4.557141304016113
    10. ' =' → logprob: -4.807141304016113

Token 343: 'ération' (ID: 24977)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7437917590141296
    2. '   ' → logprob: -0.8687917590141296
    3. ' ' → logprob: -3.3687918186187744
    4. 'r' → logprob: -4.368791580200195
    5. 's' → logprob: -4.618791580200195
    6. '  ' → logprob: -4.993791580200195
    7. 'for' → logprob: -4.993791580200195
    8. ' i' → logprob: -5.243791580200195
    9. 'er' → logprob: -5.493791580200195
    10. '    ' → logprob: -5.743791580200195

Token 344: '
' (ID: 198)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20617233216762543
    2. 's' → logprob: -1.8311723470687866
    3. '   ' → logprob: -4.081172466278076
    4. ',' → logprob: -5.831172466278076
    5. '    
' → logprob: -6.581172466278076
    6. ' ,' → logprob: -7.081172466278076
    7. ' 
' → logprob: -7.081172466278076
    8. ' ' → logprob: -7.206172466278076
    9. '_s' → logprob: -7.456172466278076
    10. '   
' → logprob: -7.831172466278076

Token 345: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7565146684646606
    2. '   ' → logprob: -0.8815146684646606
    3. ' s' → logprob: -2.256514549255371
    4. '    
' → logprob: -5.256514549255371
    5. '    ' → logprob: -5.631514549255371
    6. '     
' → logprob: -7.006514549255371
    7. ',' → logprob: -7.506514549255371
    8. ' 
' → logprob: -8.256514549255371
    9. '_s' → logprob: -8.381514549255371
    10. ' ,' → logprob: -8.631514549255371

Token 346: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5655591487884521
    2. ' s' → logprob: -1.1905591487884521
    3. '   ' → logprob: -2.065559148788452
    4. '	s' → logprob: -8.065559387207031
    5. '    ' → logprob: -8.190559387207031
    6. ' ' → logprob: -8.690559387207031
    7. '_s' → logprob: -9.190559387207031
    8. 'v' → logprob: -9.315559387207031
    9. '  ' → logprob: -10.065559387207031
    10. '    
' → logprob: -10.565559387207031

Token 347: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3594706952571869
    2. ' =' → logprob: -1.3594707250595093
    3. 's' → logprob: -3.9844706058502197
    4. '=' → logprob: -3.9844706058502197
    5. ' ,' → logprob: -5.234470844268799
    6. 't' → logprob: -6.984470844268799
    7. '1' → logprob: -7.234470844268799
    8. 'u' → logprob: -8.48447036743164
    9. 'a' → logprob: -8.60947036743164
    10. ',s' → logprob: -8.85947036743164

Token 348: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.039937373250722885
    2. '''' → logprob: -3.2899372577667236
    3. '"' → logprob: -6.414937496185303
    4. ' ""' → logprob: -8.789937019348145
    5. '''
' → logprob: -9.289937019348145
    6. ' ''' → logprob: -12.164937019348145
    7. ''' → logprob: -12.414937019348145
    8. '"",' → logprob: -13.914937019348145
    9. ' ""
' → logprob: -14.289937019348145
    10. '[]' → logprob: -14.414937019348145

Token 349: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9613778591156006
    2. '   ' → logprob: -1.2113778591156006
    3. ' t' → logprob: -1.2113778591156006
    4. '	t' → logprob: -4.46137809753418
    5. ' ' → logprob: -5.21137809753418
    6. ',' → logprob: -6.83637809753418
    7. '    
' → logprob: -6.83637809753418
    8. '  ' → logprob: -7.58637809753418
    9. ' ,' → logprob: -7.96137809753418
    10. 's' → logprob: -8.21137809753418

Token 350: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.10469570755958557
    2. ' t' → logprob: -2.3546957969665527
    3. '   ' → logprob: -5.604695796966553
    4. '	t' → logprob: -7.229695796966553
    5. 'v' → logprob: -10.854695320129395
    6. ' ' → logprob: -11.229695320129395
    7. 'for' → logprob: -11.604695320129395
    8. '  ' → logprob: -11.854695320129395
    9. 'u' → logprob: -12.104695320129395
    10. ' for' → logprob: -12.229695320129395

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697219848632812
    2. '=' → logprob: -2.126972198486328
    3. ',' → logprob: -10.626972198486328
    4. ' ' → logprob: -11.751972198486328
    5. 's' → logprob: -12.626972198486328
    6. '=''' → logprob: -13.251972198486328
    7. '<|end|>' → logprob: -13.876972198486328
    8. '='' → logprob: -13.876972198486328
    9. ' ='' → logprob: -14.001972198486328
    10. '   ' → logprob: -14.126972198486328

Token 352: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0015121236210688949
    2. ' ''' → logprob: -6.501512050628662
    3. '''
' → logprob: -12.25151252746582
    4. ''' → logprob: -12.37651252746582
    5. '""' → logprob: -14.25151252746582
    6. ''',' → logprob: -16.75151252746582
    7. '=''' → logprob: -17.00151252746582
    8. '''.' → logprob: -17.87651252746582
    9. ' ''
' → logprob: -18.00151252746582
    10. ''''' → logprob: -18.12651252746582

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15853247046470642
    2. 'u' → logprob: -2.6585323810577393
    3. ' u' → logprob: -2.6585323810577393
    4. '
' → logprob: -6.783532619476318
    5. '    
' → logprob: -6.783532619476318
    6. ' 
' → logprob: -6.783532619476318
    7. ' ' → logprob: -7.033532619476318
    8. '<|end|>' → logprob: -7.283532619476318
    9. '	u' → logprob: -7.408532619476318
    10. '  
' → logprob: -7.783532619476318

Token 354: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.032540637999773026
    2. ' u' → logprob: -3.5325405597686768
    3. '   ' → logprob: -5.907540798187256
    4. ' ' → logprob: -10.407540321350098
    5. '	u' → logprob: -11.282540321350098
    6. '
' → logprob: -11.407540321350098
    7. 'for' → logprob: -12.157540321350098
    8. '  ' → logprob: -12.407540321350098
    9. ' for' → logprob: -13.532540321350098
    10. '    
' → logprob: -14.282540321350098

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491839349269867
    2. '=' → logprob: -2.9299182891845703
    3. '<|end|>' → logprob: -11.80491828918457
    4. ' =
' → logprob: -11.92991828918457
    5. '=''' → logprob: -11.92991828918457
    6. ' ' → logprob: -12.05491828918457
    7. ',' → logprob: -12.67991828918457
    8. '   ' → logprob: -13.55491828918457
    9. 's' → logprob: -13.80491828918457
    10. '='' → logprob: -13.92991828918457

Token 356: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -9.491498531133402e-06
    2. '''
' → logprob: -11.875009536743164
    3. ' ''' → logprob: -13.250009536743164
    4. '""' → logprob: -14.500009536743164
    5. ''' → logprob: -15.375009536743164
    6. ''',' → logprob: -16.875009536743164
    7. '''.' → logprob: -17.500009536743164
    8. ''s' → logprob: -18.875009536743164
    9. ''''' → logprob: -18.875009536743164
    10. '"' → logprob: -19.750009536743164

Token 357: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6414695978164673
    2. '   ' → logprob: -1.1414695978164673
    3. ' v' → logprob: -2.3914694786071777
    4. ' 
' → logprob: -3.3914694786071777
    5. ' ' → logprob: -4.016469478607178
    6. ''' → logprob: -5.391469478607178
    7. '  
' → logprob: -6.141469478607178
    8. '    
' → logprob: -6.391469478607178
    9. '
' → logprob: -7.641469478607178
    10. '	v' → logprob: -7.766469478607178

Token 358: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.03805079311132431
    2. ' v' → logprob: -3.288050889968872
    3. ' ' → logprob: -11.913050651550293
    4. '	v' → logprob: -13.288050651550293
    5. ''' → logprob: -15.288050651550293
    6. ' ' → logprob: -15.788050651550293
    7. 'w' → logprob: -16.03805160522461
    8. '   ' → logprob: -16.16305160522461
    9. '  ' → logprob: -16.41305160522461
    10. ' =' → logprob: -16.78805160522461

Token 359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931796669960022
    2. ' =' → logprob: -0.6931796669960022
    3. '=''' → logprob: -10.443180084228516
    4. '='' → logprob: -13.818180084228516
    5. ' ='' → logprob: -14.568180084228516
    6. ' ' → logprob: -14.568180084228516
    7. '<|end|>' → logprob: -15.193180084228516
    8. '   ' → logprob: -15.318180084228516
    9. '=""' → logprob: -15.693180084228516
    10. 's' → logprob: -15.943180084228516

Token 360: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.1637164789135568e-05
    2. ' ''' → logprob: -11.500011444091797
    3. '""' → logprob: -14.125011444091797
    4. '''
' → logprob: -14.250011444091797
    5. ''' → logprob: -17.125011444091797
    6. ''',' → logprob: -17.500011444091797
    7. '''.' → logprob: -17.500011444091797
    8. ''''' → logprob: -20.250011444091797
    9. '''''' → logprob: -20.375011444091797
    10. '"' → logprob: -20.625011444091797

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8513045310974121
    2. 'for' → logprob: -0.8513045310974121
    3. ' for' → logprob: -1.976304531097412
    4. '<|end|>' → logprob: -5.226304531097412
    5. '	for' → logprob: -6.101304531097412
    6. ' ' → logprob: -10.47630500793457
    7. '  ' → logprob: -10.47630500793457
    8. '    ' → logprob: -11.47630500793457
    9. '<|end|>' → logprob: -11.47630500793457
    10. 'i' → logprob: -12.85130500793457

Token 362: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05363039672374725
    2. '   ' → logprob: -3.0536303520202637
    3. ' for' → logprob: -5.303630352020264
    4. '	for' → logprob: -10.303630828857422
    5. ' ' → logprob: -11.178630828857422
    6. '  ' → logprob: -12.178630828857422
    7. '    
' → logprob: -14.053630828857422
    8. '<|end|>' → logprob: -14.303630828857422
    9. '    ' → logprob: -14.428630828857422
    10. 'j' → logprob: -14.428630828857422

Token 363: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5928495486150496e-05
    2. ' for' → logprob: -11.125016212463379
    3. 'j' → logprob: -14.500016212463379
    4. '   ' → logprob: -14.625016212463379
    5. ' ' → logprob: -18.125015258789062
    6. '
' → logprob: -18.375015258789062
    7. '	for' → logprob: -18.500015258789062
    8. 'pour' → logprob: -18.625015258789062
    9. '    
' → logprob: -18.750015258789062
    10. 'fo' → logprob: -19.375015258789062

Token 364: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11297436058521271
    2. 'j' → logprob: -2.2379744052886963
    3. ' ' → logprob: -10.362974166870117
    4. ' ' → logprob: -10.487974166870117
    5. ' k' → logprob: -10.862974166870117
    6. '_' → logprob: -10.987974166870117
    7. ' _' → logprob: -11.487974166870117
    8. 'k' → logprob: -11.737974166870117
    9. ' x' → logprob: -12.237974166870117
    10. '_j' → logprob: -12.612974166870117

Token 365: ' position' (ID: 4010)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6327420473098755
    2. ' j' → logprob: -0.7577420473098755
    3. 'k' → logprob: -9.507741928100586
    4. ' k' → logprob: -11.257741928100586
    5. 'i' → logprob: -11.507741928100586
    6. ' ' → logprob: -11.882741928100586
    7. ' ' → logprob: -12.132741928100586
    8. ' i' → logprob: -12.507741928100586
    9. '_j' → logprob: -12.507741928100586
    10. 'b' → logprob: -12.507741928100586

Token 366: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.08822901546955109
    2. ' in' → logprob: -2.588228940963745
    3. 'j' → logprob: -4.838229179382324
    4. 'in' → logprob: -7.088229179382324
    5. ' ' → logprob: -8.713229179382324
    6. ' i' → logprob: -8.713229179382324
    7. '   ' → logprob: -10.338229179382324
    8. '    ' → logprob: -10.588229179382324
    9. ' for' → logprob: -10.588229179382324
    10. 'range' → logprob: -10.963229179382324

Token 367: ' parmi' (ID: 51713)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004097635392099619
    2. 'in' → logprob: -5.5040974617004395
    3. '   ' → logprob: -12.254097938537598
    4. 'range' → logprob: -12.504097938537598
    5. ' ' → logprob: -12.754097938537598
    6. ' dans' → logprob: -13.129097938537598
    7. ' en' → logprob: -13.254097938537598
    8. ' range' → logprob: -14.129097938537598
    9. 'dans' → logprob: -14.504097938537598
    10. ',' → logprob: -14.504097938537598

Token 368: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014165511354804039
    2. 'range' → logprob: -4.26416540145874
    3. '(range' → logprob: -13.639165878295898
    4. '	range' → logprob: -14.764165878295898
    5. ' ' → logprob: -15.514165878295898
    6. ' ' → logprob: -16.3891658782959
    7. ' n' → logprob: -16.7641658782959
    8. 'n' → logprob: -17.0141658782959
    9. ' la' → logprob: -17.1391658782959
    10. ' rang' → logprob: -17.7641658782959

Token 369: ' n' (ID: 297)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47429418563842773
    2. ' range' → logprob: -0.9742941856384277
    3. 'n' → logprob: -8.474294662475586
    4. '(range' → logprob: -12.974294662475586
    5. '   ' → logprob: -13.099294662475586
    6. ' n' → logprob: -13.224294662475586
    7. ' rang' → logprob: -13.974294662475586
    8. '	range' → logprob: -14.474294662475586
    9. ' ' → logprob: -14.849294662475586
    10. 'rang' → logprob: -15.474294662475586

Token 370: ' positions' (ID: 15897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04789762571454048
    2. '):' → logprob: -4.297897815704346
    3. ':
' → logprob: -4.672897815704346
    4. ' :' → logprob: -5.547897815704346
    5. '+' → logprob: -5.797897815704346
    6. '):
' → logprob: -5.922897815704346
    7. 'for' → logprob: -5.922897815704346
    8. ' in' → logprob: -6.047897815704346
    9. ')' → logprob: -6.547897815704346
    10. ' for' → logprob: -6.547897815704346

Token 371: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8101885914802551
    2. ' in' → logprob: -1.0601885318756104
    3. ':' → logprob: -1.9351885318756104
    4. ',' → logprob: -3.4351885318756104
    5. 'in' → logprob: -3.8101885318756104
    6. ':
' → logprob: -5.9351887702941895
    7. ' dans' → logprob: -6.0601887702941895
    8. ' for' → logprob: -6.1851887702941895
    9. ' :' → logprob: -7.1851887702941895
    10. ' (' → logprob: -7.5601887702941895

Token 372: 'de' (ID: 613)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47518160939216614
    2. 'range' → logprob: -0.9751815795898438
    3. 'for' → logprob: -7.350181579589844
    4. '   ' → logprob: -8.225181579589844
    5. ' for' → logprob: -8.600181579589844
    6. 'n' → logprob: -12.225181579589844
    7. ')' → logprob: -13.225181579589844
    8. ' in' → logprob: -13.975181579589844
    9. ' n' → logprob: -14.475181579589844
    10. '(range' → logprob: -14.475181579589844

Token 373: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3135179877281189
    2. 'range' → logprob: -1.3135180473327637
    3. '0' → logprob: -8.313517570495605
    4. ' ' → logprob: -12.313517570495605
    5. '   ' → logprob: -12.563517570495605
    6. 'n' → logprob: -13.813517570495605
    7. '	range' → logprob: -14.063517570495605
    8. ')' → logprob: -15.063517570495605
    9. '(range' → logprob: -15.188517570495605
    10. ' rang' → logprob: -15.813517570495605

Token 374: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.15322911739349365
    2. '0' → logprob: -2.153229236602783
    3. ' range' → logprob: -3.653229236602783
    4. ' ' → logprob: -10.278228759765625
    5. '   ' → logprob: -11.153228759765625
    6. 'for' → logprob: -13.653228759765625
    7. ')' → logprob: -15.153228759765625
    8. 'n' → logprob: -15.528228759765625
    9. '  ' → logprob: -15.903228759765625
    10. '	range' → logprob: -16.278228759765625

Token 375: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07459618151187897
    2. 'à' → logprob: -2.8245961666107178
    3. '   ' → logprob: -5.449596405029297
    4. ' to' → logprob: -5.449596405029297
    5. ' ' → logprob: -6.699596405029297
    6. 'to' → logprob: -6.949596405029297
    7. ',' → logprob: -8.074596405029297
    8. 'n' → logprob: -8.074596405029297
    9. ' jusqu' → logprob: -8.324596405029297
    10. ')' → logprob: -8.574596405029297

Token 376: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014303706586360931
    2. ' n' → logprob: -4.264303684234619
    3. '   ' → logprob: -8.889304161071777
    4. ' ' → logprob: -13.639304161071777
    5. '	n' → logprob: -15.014304161071777
    6. '(n' → logprob: -15.389304161071777
    7. '  ' → logprob: -15.514304161071777
    8. '    ' → logprob: -16.01430320739746
    9. '```' → logprob: -16.01430320739746
    10. '
' → logprob: -16.51430320739746

Token 377: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19634540379047394
    2. ' -' → logprob: -1.8213454484939575
    3. '):' → logprob: -4.321345329284668
    4. '):
' → logprob: -6.071345329284668
    5. ')' → logprob: -7.696345329284668
    6. '   ' → logprob: -8.571345329284668
    7. ' ):' → logprob: -9.071345329284668
    8. ' ' → logprob: -10.446345329284668
    9. 'n' → logprob: -11.071345329284668
    10. ' ):
' → logprob: -11.196345329284668

Token 378: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10632526129484177
    2. '1' → logprob: -2.356325149536133
    3. '-' → logprob: -5.856325149536133
    4. ' n' → logprob: -6.481325149536133
    5. '9' → logprob: -7.356325149536133
    6. '   ' → logprob: -8.356325149536133
    7. ' ' → logprob: -8.606325149536133
    8. ')' → logprob: -8.731325149536133
    9. 'm' → logprob: -8.981325149536133
    10. '```' → logprob: -8.981325149536133

Token 379: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3555523157119751
    2. '):
' → logprob: -1.230552315711975
    3. ')' → logprob: -5.4805521965026855
    4. '   ' → logprob: -6.1055521965026855
    5. ':' → logprob: -8.480552673339844
    6. ' ):' → logprob: -8.480552673339844
    7. ' ):
' → logprob: -8.605552673339844
    8. '):

' → logprob: -10.230552673339844
    9. '),' → logprob: -10.980552673339844
    10. ' )' → logprob: -10.980552673339844

Token 380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057441554963588715
    2. ' for' → logprob: -3.182441473007202
    3. ':' → logprob: -4.557441711425781
    4. 'for' → logprob: -5.932441711425781
    5. ':
' → logprob: -8.057441711425781
    6. ',' → logprob: -8.307441711425781
    7. '    
' → logprob: -9.307441711425781
    8. '	for' → logprob: -9.432441711425781
    9. '    ' → logprob: -9.557441711425781
    10. '  ' → logprob: -9.682441711425781

Token 381: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15118294954299927
    2. 'for' (adapté à ' for') → logprob: -2.1511828899383545
    3. '   ' → logprob: -3.7761828899383545
    4. ' 
' → logprob: -7.901183128356934
    5. ' j' → logprob: -8.026183128356934
    6. 'j' → logprob: -9.526183128356934
    7. '	for' → logprob: -9.526183128356934
    8. '    
' → logprob: -9.651183128356934
    9. '
' → logprob: -10.276183128356934
    10. ' ' → logprob: -10.526183128356934

Token 382: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.01815076172351837
    2. 'j' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.768150329589844
    4. ' ' → logprob: -14.893150329589844
    5. '	j' → logprob: -16.518150329589844
    6. 'space' → logprob: -18.643150329589844
    7. '_' → logprob: -18.643150329589844
    8. ' ' → logprob: -18.768150329589844
    9. ' _' → logprob: -18.768150329589844
    10. '    ' → logprob: -18.893150329589844

Token 383: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006962704472243786
    2. 'in' → logprob: -5.131962776184082
    3. ' ' → logprob: -6.881962776184082
    4. '	in' → logprob: -13.381962776184082
    5. '<|end|>' → logprob: -13.631962776184082
    6. '  ' → logprob: -14.131962776184082
    7. '    ' → logprob: -14.506962776184082
    8. '=' → logprob: -14.756962776184082
    9. ' ' → logprob: -15.006962776184082
    10. ')' → logprob: -15.194462776184082

Token 384: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269339919090271
    2. 'range' → logprob: -2.126934051513672
    3. ' in' → logprob: -12.376934051513672
    4. 'in' → logprob: -13.751934051513672
    5. ' ' → logprob: -14.751934051513672
    6. '0' → logprob: -16.251934051513672
    7. '(range' → logprob: -16.376934051513672
    8. '	range' → logprob: -17.251934051513672
    9. 'n' → logprob: -17.376934051513672
    10. ')' → logprob: -17.751934051513672

Token 385: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00042054426739923656
    2. '(' → logprob: -8.500420570373535
    3. 'n' → logprob: -8.875420570373535
    4. ' n' → logprob: -9.750420570373535
    5. ' (' → logprob: -10.875420570373535
    6. '	n' → logprob: -16.50041961669922
    7. '(
' → logprob: -17.25041961669922
    8. ')n' → logprob: -18.00041961669922
    9. '   ' → logprob: -18.50041961669922
    10. ')' → logprob: -19.00041961669922

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25207993388175964
    2. '):' → logprob: -1.502079963684082
    3. ')' → logprob: -9.877079963684082
    4. '   ' → logprob: -10.002079963684082
    5. '):
' → logprob: -10.627079963684082
    6. ' ):
' → logprob: -11.627079963684082
    7. '):

' → logprob: -11.752079963684082
    8. ':' → logprob: -12.377079963684082
    9. ' ):' → logprob: -12.377079963684082
    10. '+' → logprob: -13.002079963684082

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004672087728977203
    2. '    ' → logprob: -6.754672050476074
    3. ' if' → logprob: -7.004672050476074
    4. '   ' → logprob: -7.004672050476074
    5. '<|end|>' → logprob: -7.254672050476074
    6. ' ' → logprob: -7.629672050476074
    7. 'if' → logprob: -9.504672050476074
    8. '        
' → logprob: -9.629672050476074
    9. '      ' → logprob: -9.879672050476074
    10. ',' → logprob: -10.254672050476074

Token 388: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06993098556995392
    2. ' ' → logprob: -3.6949310302734375
    3. ' if' → logprob: -3.9449310302734375
    4. 'if' → logprob: -4.8199310302734375
    5. '    ' → logprob: -5.4449310302734375
    6. '   ' → logprob: -6.0699310302734375
    7. '        ' → logprob: -6.1949310302734375
    8. '<|end|>' → logprob: -6.1949310302734375
    9. '        
' → logprob: -6.3199310302734375
    10. ' 
' → logprob: -6.4449310302734375

Token 389: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07411126047372818
    2. ' if' → logprob: -3.074111223220825
    3. '       ' → logprob: -3.699111223220825
    4. '   ' → logprob: -8.199110984802246
    5. '    ' → logprob: -9.324110984802246
    6. ' ' → logprob: -10.199110984802246
    7. '        ' → logprob: -11.449110984802246
    8. 'i' → logprob: -11.574110984802246
    9. '  ' → logprob: -11.824110984802246
    10. '      ' → logprob: -12.199110984802246

Token 390: 'i' (ID: 72)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09660060703754425
    2. ' if' → logprob: -2.8466005325317383
    3. ' )' → logprob: -3.8466005325317383
    4. ' (' → logprob: -5.221600532531738
    5. ')' → logprob: -5.971600532531738
    6. '   ' → logprob: -6.846600532531738
    7. 'i' → logprob: -6.971600532531738
    8. '(' → logprob: -7.346600532531738
    9. '1' → logprob: -7.471600532531738
    10. '       ' → logprob: -7.721600532531738

Token 391: ' >>' (ID: 6832)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.7969798445701599
    2. ' &' → logprob: -1.0469799041748047
    3. '>>' → logprob: -1.6719799041748047
    4. ' >>' → logprob: -5.421979904174805
    5. ' ' → logprob: -5.671979904174805
    6. ')' → logprob: -6.296979904174805
    7. ' ' → logprob: -9.046979904174805
    8. ' )' → logprob: -9.421979904174805
    9. '>>&' → logprob: -9.546979904174805
    10. '	' → logprob: -9.796979904174805

Token 392: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.615255839889869e-05
    2. ' j' → logprob: -9.250096321105957
    3. '	j' → logprob: -18.75009536743164
    4. ')' → logprob: -19.37509536743164
    5. '_j' → logprob: -19.62509536743164
    6. '   ' → logprob: -19.87509536743164
    7. ' ' → logprob: -20.00009536743164
    8. ' ' → logprob: -20.12509536743164
    9. '1' → logprob: -20.37509536743164
    10. '```' → logprob: -20.50009536743164

Token 393: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000784495088737458
    2. ')&' → logprob: -7.500784397125244
    3. ' )' → logprob: -8.500784873962402
    4. '&' → logprob: -10.500784873962402
    5. ' &' → logprob: -15.125784873962402
    6. '')' → logprob: -16.250783920288086
    7. '&amp' → logprob: -16.875783920288086
    8. '&)' → logprob: -16.875783920288086
    9. ')
' → logprob: -17.000783920288086
    10. ')

' → logprob: -17.875783920288086

Token 394: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12711100280284882
    2. ' &' → logprob: -2.1271109580993652
    3. ')&' → logprob: -9.377111434936523
    4. '&amp' → logprob: -9.752111434936523
    5. ')' → logprob: -10.377111434936523
    6. '&
' → logprob: -12.627111434936523
    7. ' ' → logprob: -13.002111434936523
    8. ' &
' → logprob: -14.002111434936523
    9. '&nbsp' → logprob: -14.502111434936523
    10. ' ' → logprob: -15.002111434936523

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.000911712646484
    4. '```' → logprob: -20.250911712646484
    5. ' ' → logprob: -20.250911712646484
    6. '  ' → logprob: -20.500911712646484
    7. '' → logprob: -20.875911712646484
    8. '１' → logprob: -21.000911712646484
    9. '01' → logprob: -21.625911712646484
    10. '(' → logprob: -21.750911712646484

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '
' → logprob: -20.625001907348633
    5. '(' → logprob: -21.375001907348633
    6. '１' → logprob: -21.375001907348633
    7. '' → logprob: -21.500001907348633
    8. '```' → logprob: -21.875001907348633
    9. '

' → logprob: -22.250001907348633
    10. '01' → logprob: -22.875001907348633

Token 397: ' extrait' (ID: 194006)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6144184470176697
    2. ' ==' → logprob: -0.8644184470176697
    3. ':' → logprob: -3.7394185066223145
    4. ')' → logprob: -5.2394185066223145
    5. '=' → logprob: -5.3644185066223145
    6. ')==' → logprob: -6.2394185066223145
    7. ' =' → logprob: -7.3644185066223145
    8. '       ' → logprob: -7.8644185066223145
    9. ' ' → logprob: -8.239418029785156
    10. ':
' → logprob: -8.739418029785156

Token 398: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10753218829631805
    2. ' ' → logprob: -2.857532262802124
    3. '(' → logprob: -3.982532262802124
    4. ' (' → logprob: -3.982532262802124
    5. ')' → logprob: -5.732532024383545
    6. '((' → logprob: -6.232532024383545
    7. '       ' → logprob: -7.107532024383545
    8. ' ((' → logprob: -7.732532024383545
    9. '   ' → logprob: -8.607532501220703
    10. '<|end|>' → logprob: -8.982532501220703

Token 399: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09024657309055328
    2. ' ' → logprob: -2.5902466773986816
    3. ' (' → logprob: -5.715246677398682
    4. ' bit' → logprob: -5.965246677398682
    5. ' j' → logprob: -6.715246677398682
    6. 'j' → logprob: -7.590246677398682
    7. '(' → logprob: -7.715246677398682
    8. '0' → logprob: -7.840246677398682
    9. '  ' → logprob: -7.840246677398682
    10. '    ' → logprob: -7.965246677398682

Token 400: '-i' (ID: 18499)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17837181687355042
    2. ' ' → logprob: -3.0533719062805176
    3. ' )' → logprob: -3.3033719062805176
    4. '    ' → logprob: -3.9283719062805176
    5. '       ' → logprob: -4.553371906280518
    6. '=' → logprob: -4.803371906280518
    7. '        ' → logprob: -5.178371906280518
    8. '   ' → logprob: -5.678371906280518
    9. '+' → logprob: -5.803371906280518
    10. '1' → logprob: -5.928371906280518

Token 401: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.09233752638101578
    2. 'nd' → logprob: -3.3423376083374023
    3. 'eme' → logprob: -4.217337608337402
    4. 'è' → logprob: -4.592337608337402
    5. 'ième' → logprob: -4.717337608337402
    6. 'nde' → logprob: -5.592337608337402
    7. ' è' → logprob: -5.842337608337402
    8. 'me' → logprob: -5.967337608337402
    9. 'n' → logprob: -6.342337608337402
    10. ')' → logprob: -6.717337608337402

Token 402: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.1029745489358902
    2. 'bit' → logprob: -2.3529746532440186
    3. ' ' → logprob: -6.2279744148254395
    4. '_bit' → logprob: -8.352974891662598
    5. ' caract' → logprob: -9.477974891662598
    6. 'b' → logprob: -9.727974891662598
    7. '1' → logprob: -9.977974891662598
    8. '   ' → logprob: -9.977974891662598
    9. '-bit' → logprob: -9.977974891662598
    10. ')' → logprob: -10.227974891662598

Token 403: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.151097059249878
    2. '<|end|>' → logprob: -1.401097059249878
    3. '        ' → logprob: -1.526097059249878
    4. ')' → logprob: -2.651097059249878
    5. ' ' → logprob: -3.151097059249878
    6. '           ' → logprob: -3.651097059249878
    7. '=' → logprob: -4.901097297668457
    8. ' =' → logprob: -5.026097297668457
    9. ' )' → logprob: -5.151097297668457
    10. ' if' → logprob: -5.276097297668457

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889804989099503
    2. ' i' → logprob: -2.5788979530334473
    3. '(i' → logprob: -12.078898429870605
    4. ' ' → logprob: -13.328898429870605
    5. '	i' → logprob: -14.578898429870605
    6. ' (' → logprob: -15.953898429870605
    7. 'l' → logprob: -16.32889747619629
    8. '   ' → logprob: -16.57889747619629
    9. ''i' → logprob: -17.32889747619629
    10. ')i' → logprob: -17.45389747619629

Token 405: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24972689151763916
    2. '<|end|>' → logprob: -2.4997267723083496
    3. '==' → logprob: -3.8747267723083496
    4. ')' → logprob: -3.9997267723083496
    5. ' ==' → logprob: -4.12472677230835
    6. '        ' → logprob: -4.12472677230835
    7. '=' → logprob: -4.49972677230835
    8. ':' → logprob: -4.49972677230835
    9. ' if' → logprob: -4.74972677230835
    10. ',' → logprob: -4.99972677230835

Token 406: 'com' (ID: 639)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33813905715942383
    2. ' (' → logprob: -2.463139057159424
    3. ' )' → logprob: -2.588139057159424
    4. '1' → logprob: -2.713139057159424
    5. ' ' → logprob: -3.088139057159424
    6. '(i' → logprob: -5.713139057159424
    7. '0' → logprob: -6.213139057159424
    8. '        ' → logprob: -6.463139057159424
    9. '((' → logprob: -6.588139057159424
    10. '           ' → logprob: -6.588139057159424

Token 407: 'pris' (ID: 102339)
  Prédit: 'pute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.7635215520858765
    2. ')' → logprob: -1.7635215520858765
    3. '1' → logprob: -1.8885215520858765
    4. 'puted' → logprob: -2.513521671295166
    5. 'ment' → logprob: -3.763521671295166
    6. 'pos' → logprob: -3.888521671295166
    7. 'p' → logprob: -4.513521671295166
    8. '```' → logprob: -4.513521671295166
    9. 'put' → logprob: -4.638521671295166
    10. ''' → logprob: -5.138521671295166

Token 408: ' comme' (ID: 7971)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.0927710086107254
    2. 'entre' → logprob: -2.592771053314209
    3. ')' → logprob: -4.592771053314209
    4. 'between' → logprob: -5.967771053314209
    5. ' between' → logprob: -7.217771053314209
    6. ' ' → logprob: -9.59277057647705
    7. 'Entre' → logprob: -9.71777057647705
    8. ''entre' → logprob: -9.84277057647705
    9. ' между' → logprob: -10.09277057647705
    10. '   ' → logprob: -10.46777057647705

Token 409: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6310595870018005
    2. ' un' → logprob: -1.5060596466064453
    3. 'un' → logprob: -2.5060596466064453
    4. '0' → logprob: -2.6310596466064453
    5. ' ' → logprob: -3.6310596466064453
    6. 'une' → logprob: -4.131059646606445
    7. ')' → logprob: -4.506059646606445
    8. ' l' → logprob: -4.756059646606445
    9. ' une' → logprob: -4.756059646606445
    10. 'l' → logprob: -5.256059646606445

Token 410: ' masque' (ID: 128511)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.221300721168518
    2. 'ent' → logprob: -1.596300721168518
    3. ' entier' → logprob: -1.846300721168518
    4. ' bit' → logprob: -2.0963006019592285
    5. 'b' → logprob: -2.3463006019592285
    6. 'nombre' → logprob: -3.0963006019592285
    7. ' nombre' → logprob: -3.7213006019592285
    8. '0' → logprob: -4.7213006019592285
    9. 'bool' → logprob: -4.8463006019592285
    10. ' bool' → logprob: -5.0963006019592285

Token 411: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017694812268018723
    2. '       ' → logprob: -5.26769495010376
    3. ' )' → logprob: -5.26769495010376
    4. ')>>' → logprob: -6.51769495010376
    5. ' ' → logprob: -7.39269495010376
    6. '>>>' → logprob: -7.51769495010376
    7. '           ' → logprob: -7.51769495010376
    8. '):' → logprob: -7.89269495010376
    9. '<|end|>' → logprob: -7.89269495010376
    10. ')&' → logprob: -8.017694473266602

Token 412: ' sélection' (ID: 43472)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8395510315895081
    2. 'bits' → logprob: -0.8395510315895081
    3. ' bits' → logprob: -2.4645509719848633
    4. 'bit' → logprob: -3.3395509719848633
    5. ' ' → logprob: -4.714550971984863
    6. 'b' → logprob: -6.214550971984863
    7. ' bit' → logprob: -6.339550971984863
    8. 'i' → logprob: -7.714550971984863
    9. 'un' → logprob: -7.714550971984863
    10. '   ' → logprob: -8.089550971984863

Token 413: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018016954883933067
    2. ' )' → logprob: -4.768016815185547
    3. '       ' → logprob: -5.393016815185547
    4. '):
' → logprob: -6.018016815185547
    5. ')
' → logprob: -7.393016815185547
    6. '):' → logprob: -7.518016815185547
    7. ' ' → logprob: -8.643016815185547
    8. '   ' → logprob: -9.018016815185547
    9. '           ' → logprob: -9.143016815185547
    10. '),' → logprob: -9.268016815185547

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003353566862642765
    2. ':' → logprob: -7.128353595733643
    3. '<|end|>' → logprob: -7.253353595733643
    4. ' ' → logprob: -7.503353595733643
    5. ' if' → logprob: -7.878353595733643
    6. '   ' → logprob: -8.378353118896484
    7. '        
' → logprob: -8.878353118896484
    8. ')' → logprob: -9.378353118896484
    9. '        ' → logprob: -9.503353118896484
    10. ',' → logprob: -9.753353118896484

Token 415: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062027398496866226
    2. ' if' → logprob: -3.1870274543762207
    3. 'if' → logprob: -4.187027454376221
    4. '        
' → logprob: -7.062027454376221
    5. '   ' → logprob: -7.312027454376221
    6. ' ' → logprob: -7.562027454376221
    7. '        ' → logprob: -7.687027454376221
    8. '    ' → logprob: -8.437026977539062
    9. '<|end|>' → logprob: -8.437026977539062
    10. ' 
' → logprob: -8.812026977539062

Token 416: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3346411883831024
    2. 'if' → logprob: -1.4596412181854248
    3. '       ' → logprob: -2.959641218185425
    4. '   ' → logprob: -9.459641456604004
    5. ' ' → logprob: -9.959641456604004
    6. ' ' → logprob: -10.334641456604004
    7. '    ' → logprob: -10.709641456604004
    8. '	if' → logprob: -11.584641456604004
    9. '        
' → logprob: -11.584641456604004
    10. '        ' → logprob: -11.709641456604004

Token 417: ' ce' (ID: 2357)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.41828688979148865
    2. ' ((' → logprob: -1.168286919593811
    3. ' (' → logprob: -3.7932868003845215
    4. '(i' → logprob: -5.0432868003845215
    5. '(' → logprob: -6.4182868003845215
    6. '(((' → logprob: -8.29328727722168
    7. ' ' → logprob: -10.04328727722168
    8. '   ' → logprob: -11.54328727722168
    9. ' (((' → logprob: -11.54328727722168
    10. '(ii' → logprob: -12.91828727722168

Token 418: ' bit' (ID: 3546)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7478852272033691
    2. '(i' → logprob: -1.6228852272033691
    3. ' ((' → logprob: -1.7478852272033691
    4. ' ' → logprob: -3.122885227203369
    5. '((' → logprob: -3.247885227203369
    6. '       ' → logprob: -3.997885227203369
    7. '(' → logprob: -4.497885227203369
    8. '        ' → logprob: -4.872885227203369
    9. '   ' → logprob: -5.497885227203369
    10. '(space' → logprob: -5.872885227203369

Token 419: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5493150949478149
    2. '==' → logprob: -1.049315094947815
    3. ':' → logprob: -2.7993149757385254
    4. '=' → logprob: -5.299314975738525
    5. ' =' → logprob: -6.299314975738525
    6. '       ' → logprob: -7.424314975738525
    7. ' ' → logprob: -7.424314975738525
    8. ' &' → logprob: -7.549314975738525
    9. ':
' → logprob: -7.549314975738525
    10. ')==' → logprob: -7.549314975738525

Token 420: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02638726495206356
    2. ' ' → logprob: -3.6513872146606445
    3. '   ' → logprob: -9.526387214660645
    4. '0' → logprob: -12.776387214660645
    5. '       ' → logprob: -12.776387214660645
    6. '(' → logprob: -13.276387214660645
    7. ' (' → logprob: -13.401387214660645
    8. '=' → logprob: -13.651387214660645
    9. ' True' → logprob: -14.276387214660645
    10. ' true' → logprob: -14.401387214660645

Token 421: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975570224225521
    2. ' ' → logprob: -3.5297555923461914
    3. '0' → logprob: -13.154755592346191
    4. '   ' → logprob: -13.279755592346191
    5. '```' → logprob: -13.904755592346191
    6. '       ' → logprob: -16.529756546020508
    7. ' ' → logprob: -16.529756546020508
    8. '=' → logprob: -16.529756546020508
    9. '    ' → logprob: -16.779756546020508
    10. '           ' → logprob: -17.279756546020508

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012487331696320325
    2. ' ' → logprob: -9.00012493133545
    3. '0' → logprob: -14.25012493133545
    4. '   ' → logprob: -14.87512493133545
    5. '```' → logprob: -15.50012493133545
    6. 'l' → logprob: -17.250123977661133
    7. '=' → logprob: -17.375123977661133
    8. 'un' → logprob: -18.250123977661133
    9. '  ' → logprob: -18.875123977661133
    10. '
' → logprob: -19.375123977661133

Token 423: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009798707440495491
    2. ',' → logprob: -5.509798526763916
    3. ' :' → logprob: -6.134798526763916
    4. ':
' → logprob: -6.134798526763916
    5. '       ' → logprob: -7.009798526763916
    6. '   ' → logprob: -9.259799003601074
    7. ' and' → logprob: -9.509799003601074
    8. '==' → logprob: -9.884799003601074
    9. '=' → logprob: -10.259799003601074
    10. '           ' → logprob: -10.259799003601074

Token 424: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3148050606250763
    2. ' if' → logprob: -2.314805030822754
    3. '       ' → logprob: -2.439805030822754
    4. 's' → logprob: -3.689805030822754
    5. ' ' → logprob: -3.814805030822754
    6. '    ' → logprob: -4.064805030822754
    7. '   ' → logprob: -4.814805030822754
    8. 'if' → logprob: -5.189805030822754
    9. '           ' → logprob: -6.314805030822754
    10. '<|end|>' → logprob: -6.439805030822754

Token 425: ' condition' (ID: 7060)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47124651074409485
    2. 's' → logprob: -1.8462464809417725
    3. '       ' → logprob: -2.7212464809417725
    4. ' t' → logprob: -3.3462464809417725
    5. '   ' → logprob: -3.8462464809417725
    6. 't' → logprob: -3.8462464809417725
    7. ' ' → logprob: -3.9712464809417725
    8. '    ' → logprob: -4.346246719360352
    9. 'v' → logprob: -4.846246719360352
    10. 'if' → logprob: -4.971246719360352

Token 426: ' est' (ID: 893)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.305691123008728
    2. ' if' → logprob: -1.930691123008728
    3. 'if' → logprob: -2.0556912422180176
    4. ' ==' → logprob: -2.0556912422180176
    5. ':' → logprob: -2.3056912422180176
    6. '==' → logprob: -2.5556912422180176
    7. ' (' → logprob: -2.9306912422180176
    8. ' i' → logprob: -3.4306912422180176
    9. 's' → logprob: -4.555691242218018
    10. ')' → logprob: -4.680691242218018

Token 427: ' vraie' (ID: 105841)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.08251705765724182
    2. 'True' → logprob: -2.582517147064209
    3. ' true' → logprob: -5.832517147064209
    4. ' (' → logprob: -8.33251667022705
    5. ' vrai' → logprob: -8.83251667022705
    6. ' vraie' → logprob: -8.83251667022705
    7. 'true' → logprob: -9.83251667022705
    8. '(True' → logprob: -9.95751667022705
    9. ' ' → logprob: -11.20751667022705
    10. 'v' → logprob: -11.70751667022705

Token 428: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2959730327129364
    2. ':' → logprob: -1.4209730625152588
    3. ',' → logprob: -5.17097282409668
    4. ' :' → logprob: -5.54597282409668
    5. '<|end|>' → logprob: -6.67097282409668
    6. ':
' → logprob: -7.29597282409668
    7. ' and' → logprob: -7.42097282409668
    8. '   ' → logprob: -7.67097282409668
    9. '):' → logprob: -7.79597282409668
    10. ')' → logprob: -7.79597282409668

Token 429: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03207699581980705
    2. '        ' → logprob: -4.407076835632324
    3. '           ' → logprob: -4.657076835632324
    4. ' ' → logprob: -5.907076835632324
    5. ' s' → logprob: -6.032076835632324
    6. '<|end|>' → logprob: -6.407076835632324
    7. '        
' → logprob: -7.282076835632324
    8. '   ' → logprob: -7.532076835632324
    9. ' ' → logprob: -8.032076835632324
    10. 's' → logprob: -8.407076835632324

Token 430: ' fa' (ID: 2229)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8907870054244995
    2. ' False' → logprob: -1.3907870054244995
    3. '    ' → logprob: -2.765787124633789
    4. '<|end|>' → logprob: -2.890787124633789
    5. ' True' → logprob: -3.265787124633789
    6. 'False' → logprob: -3.390787124633789
    7. ' ' → logprob: -3.515787124633789
    8. ':' → logprob: -3.640787124633789
    9. '   ' → logprob: -4.390787124633789
    10. ' ' → logprob: -4.640787124633789

Token 431: 'usse' (ID: 32419)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.0002153378736693412
    2. 'ls' → logprob: -9.000215530395508
    3. 'l' → logprob: -10.250215530395508
    4. 'ulse' → logprob: -10.500215530395508
    5. 'usse' → logprob: -10.750215530395508
    6. 'se' → logprob: -13.375215530395508
    7. 'ux' → logprob: -13.500215530395508
    8. 'alse' → logprob: -14.625215530395508
    9. 'lsa' → logprob: -14.875215530395508
    10. 'use' → logprob: -14.875215530395508

Token 432: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0189952589571476
    2. ':' → logprob: -4.14399528503418
    3. '   ' → logprob: -6.39399528503418
    4. '<|end|>' → logprob: -7.26899528503418
    5. ' if' → logprob: -8.39399528503418
    6. ',' → logprob: -9.64399528503418
    7. ' :' → logprob: -9.89399528503418
    8. ':
' → logprob: -9.89399528503418
    9. ')' → logprob: -10.14399528503418
    10. '):' → logprob: -10.51899528503418

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019817621796391904
    2. '        
' → logprob: -9.250198364257812
    3. '   ' → logprob: -10.000198364257812
    4. ' 
' → logprob: -11.125198364257812
    5. '<|end|>' → logprob: -12.125198364257812
    6. '	' → logprob: -12.500198364257812
    7. ' ' → logprob: -12.500198364257812
    8. '\' → logprob: -12.500198364257812
    9. '```' → logprob: -12.625198364257812
    10. ' ' → logprob: -12.750198364257812

Token 434: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1977517455816269
    2. 'if' (adapté à ' if') → logprob: -1.947751760482788
    3. ' if' → logprob: -3.322751760482788
    4. '   ' → logprob: -7.197751522064209
    5. '	if' → logprob: -11.697751998901367
    6. '	' → logprob: -12.072751998901367
    7. '           ' → logprob: -12.197751998901367
    8. '    ' → logprob: -12.322751998901367
    9. ' ' → logprob: -13.697751998901367
    10. ' ' → logprob: -13.947751998901367

Token 435: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5849401354789734
    2. ' ((' → logprob: -0.8349401354789734
    3. '((' → logprob: -4.834939956665039
    4. ' ' → logprob: -7.709939956665039
    5. '(i' → logprob: -7.834939956665039
    6. '(' → logprob: -9.459939956665039
    7. '        ' → logprob: -10.459939956665039
    8. '   ' → logprob: -10.584939956665039
    9. ' (((' → logprob: -11.584939956665039
    10. '    ' → logprob: -11.709939956665039

Token 436: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001381901791319251
    2. '(i' → logprob: -6.876381874084473
    3. ' i' → logprob: -8.001381874084473
    4. ' (' → logprob: -11.251381874084473
    5. '   ' → logprob: -13.876381874084473
    6. '	i' → logprob: -16.25138282775879
    7. ' ' → logprob: -16.75138282775879
    8. ')i' → logprob: -17.25138282775879
    9. '(' → logprob: -17.37638282775879
    10. '  ' → logprob: -18.37638282775879

Token 437: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.429310142993927
    2. '>>' → logprob: -1.0543100833892822
    3. ' ' → logprob: -9.179309844970703
    4. ' ' → logprob: -9.179309844970703
    5. '	' → logprob: -9.304309844970703
    6. ')' → logprob: -9.679309844970703
    7. '    ' → logprob: -10.054309844970703
    8. '   ' → logprob: -10.179309844970703
    9. '>>>' → logprob: -10.179309844970703
    10. '>' → logprob: -10.429309844970703

Token 438: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002614550176076591
    2. ' j' → logprob: -8.250261306762695
    3. '	j' → logprob: -16.125261306762695
    4. '   ' → logprob: -18.125261306762695
    5. '[j' → logprob: -18.125261306762695
    6. '$j' → logprob: -18.375261306762695
    7. ' ' → logprob: -19.250261306762695
    8. ')' → logprob: -19.500261306762695
    9. '(j' → logprob: -19.625261306762695
    10. ',j' → logprob: -20.375261306762695

Token 439: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.554343366995454e-05
    2. ')&' → logprob: -9.625085830688477
    3. ' )' → logprob: -10.875085830688477
    4. '&' → logprob: -15.375085830688477
    5. '   ' → logprob: -16.625085830688477
    6. '）' → logprob: -17.125085830688477
    7. '       ' → logprob: -17.500085830688477
    8. ')
' → logprob: -17.625085830688477
    9. '```' → logprob: -17.750085830688477
    10. '}' → logprob: -18.250085830688477

Token 440: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15280406177043915
    2. ')&' → logprob: -2.777804136276245
    3. '&' → logprob: -3.027804136276245
    4. ' &' → logprob: -3.527804136276245
    5. ' )' → logprob: -6.402803897857666
    6. ' ' → logprob: -10.652804374694824
    7. '&amp' → logprob: -10.902804374694824
    8. '   ' → logprob: -11.527804374694824
    9. '&)' → logprob: -12.152804374694824
    10. ' &)' → logprob: -12.277804374694824

Token 441: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234475247561932
    2. ' ' → logprob: -5.255234241485596
    3. '```' → logprob: -15.130234718322754
    4. '   ' → logprob: -15.255234718322754
    5. '  ' → logprob: -17.567733764648438
    6. ' ' → logprob: -17.942733764648438
    7. '' → logprob: -18.067733764648438
    8. '`' → logprob: -18.317733764648438
    9. '
' → logprob: -18.505233764648438
    10. ')' → logprob: -18.630233764648438

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. '```' → logprob: -15.7501802444458
    5. '  ' → logprob: -17.875179290771484
    6. '`' → logprob: -18.000179290771484
    7. '
' → logprob: -18.500179290771484
    8. '' → logprob: -19.125179290771484
    9. '0' → logprob: -19.812679290771484
    10. ')' → logprob: -19.875179290771484

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02153000235557556
    2. ' ==' → logprob: -4.7715301513671875
    3. ' :' → logprob: -5.2715301513671875
    4. '==' → logprob: -5.5215301513671875
    5. '):' → logprob: -6.0215301513671875
    6. ')' → logprob: -7.2715301513671875
    7. ':
' → logprob: -8.021530151367188
    8. ' ):' → logprob: -9.521530151367188
    9. '=' → logprob: -9.896530151367188
    10. ' ' → logprob: -10.771530151367188

Token 444: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03526248037815094
    2. ' s' → logprob: -3.6602625846862793
    3. 's' → logprob: -4.785262584686279
    4. '           ' → logprob: -8.035262107849121
    5. '   ' → logprob: -9.660262107849121
    6. 't' → logprob: -10.160262107849121
    7. '```' → logprob: -10.535262107849121
    8. '#' → logprob: -11.160262107849121
    9. '      ' → logprob: -11.660262107849121
    10. ' t' → logprob: -11.660262107849121

Token 445: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018786623841151595
    2. ' s' → logprob: -6.50187873840332
    3. 't' → logprob: -8.75187873840332
    4. 'v' → logprob: -9.00187873840332
    5. '   ' → logprob: -9.75187873840332
    6. '           ' → logprob: -10.87687873840332
    7. 'u' → logprob: -11.50187873840332
    8. '       ' → logprob: -12.12687873840332
    9. ' ' → logprob: -14.37687873840332
    10. '	s' → logprob: -14.50187873840332

Token 446: ' Aj' (ID: 28294)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0069653051905334
    2. ' s' → logprob: -5.006965160369873
    3. 't' → logprob: -9.256965637207031
    4. '           ' → logprob: -9.381965637207031
    5. '   ' → logprob: -10.381965637207031
    6. 'v' → logprob: -10.631965637207031
    7. '       ' → logprob: -11.756965637207031
    8. 'u' → logprob: -13.006965637207031
    9. ' t' → logprob: -13.631965637207031
    10. ' ' → logprob: -13.756965637207031

Token 447: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.06642201542854309
    2. 'outer' → logprob: -2.8164219856262207
    3. 'out' → logprob: -5.816421985626221
    4. 'outez' → logprob: -6.566421985626221
    5. 'outes' → logprob: -9.941422462463379
    6. 'o' → logprob: -11.691422462463379
    7. 'ute' → logprob: -13.816422462463379
    8. 's' → logprob: -14.566422462463379
    9. 'outs' → logprob: -14.566422462463379
    10. 'ou' → logprob: -15.191422462463379

Token 448: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20892943441867828
    2. 'l' → logprob: -1.708929419517517
    3. ' s' → logprob: -5.208929538726807
    4. ' r' → logprob: -6.708929538726807
    5. 's' → logprob: -8.208929061889648
    6. 'r' → logprob: -8.208929061889648
    7. ' t' → logprob: -9.208929061889648
    8. ' u' → logprob: -10.083929061889648
    9. ' ' → logprob: -10.083929061889648
    10. ' v' → logprob: -10.708929061889648

Token 449: ' j' (ID: 441)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.045018069446086884
    2. 'r' → logprob: -3.420017957687378
    3. 's' → logprob: -4.545018196105957
    4. ' l' → logprob: -7.420018196105957
    5. ' r' → logprob: -10.670018196105957
    6. ' s' → logprob: -10.670018196105957
    7. ''l' → logprob: -11.795018196105957
    8. 't' → logprob: -12.045018196105957
    9. '   ' → logprob: -12.607518196105957
    10. '	l' → logprob: -12.982518196105957

Token 450: '-i' (ID: 18499)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09801506996154785
    2. ' ]' → logprob: -2.598015069961548
    3. 'e' → logprob: -5.598014831542969
    4. 's' → logprob: -5.848014831542969
    5. ' s' → logprob: -6.723014831542969
    6. 'ème' → logprob: -7.098014831542969
    7. '']' → logprob: -7.223014831542969
    8. '   ' → logprob: -7.223014831542969
    9. ' ' → logprob: -7.348014831542969
    10. ''' → logprob: -7.348014831542969

Token 451: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.05216933414340019
    2. ']' → logprob: -4.052169322967529
    3. 'ième' → logprob: -4.302169322967529
    4. 'eme' → logprob: -5.302169322967529
    5. 'me' → logprob: -5.677169322967529
    6. 'è' → logprob: -6.302169322967529
    7. 's' → logprob: -6.427169322967529
    8. 'm' → logprob: -6.552169322967529
    9. 'e' → logprob: -6.552169322967529
    10. '```' → logprob: -6.927169322967529

Token 452: ' caractère' (ID: 80509)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.060055747628211975
    2. ' l' → logprob: -3.310055732727051
    3. 'car' → logprob: -4.060055732727051
    4. ' caractère' → logprob: -6.185055732727051
    5. ' caract' → logprob: -6.935055732727051
    6. 'élé' → logprob: -7.060055732727051
    7. 'character' → logprob: -8.43505573272705
    8. ' car' → logprob: -9.56005573272705
    9. 'char' → logprob: -9.68505573272705
    10. 'r' → logprob: -9.68505573272705

Token 453: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0009234884637407959
    2. 'r' → logprob: -7.7509236335754395
    3. ' l' → logprob: -7.8759236335754395
    4. ' de' → logprob: -9.875923156738281
    5. '   ' → logprob: -11.125923156738281
    6. '(l' → logprob: -11.500923156738281
    7. 'de' → logprob: -12.000923156738281
    8. ' à' → logprob: -12.000923156738281
    9. '	l' → logprob: -12.250923156738281
    10. ' in' → logprob: -12.625923156738281

Token 454: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0011371198343113065
    2. ' l' → logprob: -6.8761372566223145
    3. 'r' → logprob: -9.251136779785156
    4. '	l' → logprob: -13.001136779785156
    5. ' ' → logprob: -13.126136779785156
    6. '   ' → logprob: -13.251136779785156
    7. ' r' → logprob: -14.501136779785156
    8. '  ' → logprob: -14.626136779785156
    9. '```' → logprob: -14.751136779785156
    10. '`' → logprob: -15.251136779785156

Token 455: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009809806942939758
    2. 'r' → logprob: -4.634809970855713
    3. ' l' → logprob: -10.634809494018555
    4. '	l' → logprob: -11.822309494018555
    5. '`' → logprob: -12.072309494018555
    6. '```' → logprob: -12.697309494018555
    7. 's' → logprob: -13.072309494018555
    8. ''l' → logprob: -13.322309494018555
    9. '   ' → logprob: -13.759809494018555
    10. '[l' → logprob: -14.197309494018555

Token 456: ''' (ID: 6)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.946405094116926e-05
    2. ' [' → logprob: -9.875079154968262
    3. 'j' → logprob: -11.500079154968262
    4. '[v' → logprob: -12.250079154968262
    5. '```' → logprob: -13.000079154968262
    6. '[' → logprob: -13.250079154968262
    7. '   ' → logprob: -13.500079154968262
    8. ''[' → logprob: -13.625079154968262
    9. ' j' → logprob: -13.750079154968262
    10. '[l' → logprob: -14.125079154968262

Token 457: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.096075177192688
    2. ' à' → logprob: -2.0960750579833984
    3. '           ' → logprob: -2.2210750579833984
    4. 's' → logprob: -2.3460750579833984
    5. ' +' → logprob: -2.5960750579833984
    6. ' to' → logprob: -2.8460750579833984
    7. '+=' → logprob: -2.9710750579833984
    8. ')' → logprob: -3.0960750579833984
    9. ' +=' → logprob: -4.221075057983398
    10. ' s' → logprob: -4.221075057983398

Token 458: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06206291541457176
    2. ' s' → logprob: -2.812062978744507
    3. 't' → logprob: -10.187063217163086
    4. 'u' → logprob: -10.687063217163086
    5. 'v' → logprob: -11.062063217163086
    6. ' t' → logprob: -11.312063217163086
    7. ' v' → logprob: -12.687063217163086
    8. ' u' → logprob: -12.687063217163086
    9. '	s' → logprob: -15.062063217163086
    10. ' ' → logprob: -15.562063217163086

Token 459: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021946365013718605
    2. 't' → logprob: -6.877194404602051
    3. 'v' → logprob: -7.377194404602051
    4. ' s' → logprob: -7.627194404602051
    5. 'u' → logprob: -10.12719440460205
    6. ' t' → logprob: -12.75219440460205
    7. 'string' → logprob: -13.12719440460205
    8. '   ' → logprob: -13.75219440460205
    9. '```' → logprob: -14.25219440460205
    10. ' v' → logprob: -14.50219440460205

Token 460: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20160697400569916
    2. ' s' → logprob: -1.7016069889068604
    3. 't' → logprob: -9.076606750488281
    4. ' t' → logprob: -10.201606750488281
    5. 'v' → logprob: -10.326606750488281
    6. ' v' → logprob: -12.201606750488281
    7. 'u' → logprob: -12.826606750488281
    8. 'l' → logprob: -14.451606750488281
    9. '   ' → logprob: -14.826606750488281
    10. ' u' → logprob: -15.451606750488281

Token 461: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1286105513572693
    2. '+=' → logprob: -2.878610610961914
    3. '+' → logprob: -3.503610610961914
    4. ' +=' → logprob: -3.878610610961914
    5. ' +' → logprob: -4.503610610961914
    6. ' s' → logprob: -6.628610610961914
    7. '           ' → logprob: -7.253610610961914
    8. '+s' → logprob: -8.003610610961914
    9. '   ' → logprob: -9.003610610961914
    10. '       ' → logprob: -10.003610610961914

Token 462: '           ' (ID: 352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.50003582239151
    2. '+=' → logprob: -1.3750357627868652
    3. ' +=' → logprob: -2.1250357627868652
    4. '           ' → logprob: -4.375035762786865
    5. '+' → logprob: -5.375035762786865
    6. ' s' → logprob: -6.000035762786865
    7. '       ' → logprob: -7.750035762786865
    8. ' +' → logprob: -7.875035762786865
    9. '   ' → logprob: -8.625036239624023
    10. '               ' → logprob: -9.250036239624023

Token 463: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.07889232039451599
    2. ' s' → logprob: -2.578892230987549
    3. '           ' → logprob: -13.078892707824707
    4. 'l' → logprob: -15.453892707824707
    5. '       ' → logprob: -16.45389175415039
    6. '               ' → logprob: -16.70389175415039
    7. ' l' → logprob: -16.95389175415039
    8. '   ' → logprob: -17.45389175415039
    9. '_s' → logprob: -17.82889175415039
    10. '	s' → logprob: -17.95389175415039

Token 464: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.039183855056762695
    2. ' +=' → logprob: -3.2891838550567627
    3. '+' → logprob: -6.789183616638184
    4. '+='' → logprob: -12.164183616638184
    5. ' +' → logprob: -12.539183616638184
    6. ']+=' → logprob: -13.039183616638184
    7. '+="' → logprob: -13.289183616638184
    8. '=' → logprob: -13.664183616638184
    9. '           ' → logprob: -13.789183616638184
    10. '   ' → logprob: -15.414183616638184

Token 465: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004309076175559312
    2. ' l' → logprob: -7.750431060791016
    3. '	l' → logprob: -15.750431060791016
    4. '   ' → logprob: -17.875431060791016
    5. ' ' → logprob: -19.125431060791016
    6. '```' → logprob: -19.625431060791016
    7. 'str' → logprob: -19.750431060791016
    8. '[l' → logprob: -20.000431060791016
    9. '           ' → logprob: -20.375431060791016
    10. '`' → logprob: -20.375431060791016

Token 466: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -18.250001907348633
    4. 'j' → logprob: -19.000001907348633
    5. '[i' → logprob: -19.625001907348633
    6. '[n' → logprob: -20.500001907348633
    7. '[l' → logprob: -21.375001907348633
    8. '   ' → logprob: -21.875001907348633
    9. '```' → logprob: -22.375001907348633
    10. '[J' → logprob: -22.625001907348633

Token 467: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014414230827242136
    2. ')' → logprob: -6.751441478729248
    3. ' ]' → logprob: -8.87644100189209
    4. ']
' → logprob: -9.37644100189209
    5. '<|end|>' → logprob: -10.37644100189209
    6. '']' → logprob: -11.75144100189209
    7. '}' → logprob: -12.87644100189209
    8. ']

' → logprob: -14.00144100189209
    9. '])' → logprob: -14.12644100189209
    10. 's' → logprob: -14.50144100189209

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014691551215946674
    2. 'v' → logprob: -5.014691352844238
    3. 'u' → logprob: -5.264691352844238
    4. 't' → logprob: -6.014691352844238
    5. ' u' → logprob: -9.264691352844238
    6. '<|end|>' → logprob: -10.014691352844238
    7. ' t' → logprob: -10.389691352844238
    8. '	       ' → logprob: -10.514691352844238
    9. '
' → logprob: -10.764691352844238
    10. '```' → logprob: -10.764691352844238

Token 469: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4907824993133545
    2. '           ' → logprob: -1.9907824993133545
    3. 'v' → logprob: -2.1157824993133545
    4. ' u' → logprob: -2.2407824993133545
    5. 't' → logprob: -4.365782737731934
    6. ' v' → logprob: -4.615782737731934
    7. ' t' → logprob: -7.365782737731934
    8. 'r' → logprob: -7.990782737731934
    9. '       ' → logprob: -7.990782737731934
    10. '            
' → logprob: -8.365782737731934

Token 470: ' Aj' (ID: 28294)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07769863307476044
    2. 'u' → logprob: -2.7026987075805664
    3. 'v' → logprob: -5.202698707580566
    4. 'r' → logprob: -6.577698707580566
    5. '#' → logprob: -7.577698707580566
    6. ' t' → logprob: -8.827698707580566
    7. '   ' → logprob: -8.952698707580566
    8. ' u' → logprob: -10.827698707580566
    9. '       ' → logprob: -11.577698707580566
    10. '           ' → logprob: -11.827698707580566

Token 471: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0003163969377055764
    2. 'outer' → logprob: -8.750316619873047
    3. 'outez' → logprob: -9.125316619873047
    4. 'outes' → logprob: -11.125316619873047
    5. 'j' → logprob: -11.250316619873047
    6. 'v' → logprob: -12.125316619873047
    7. 'd' → logprob: -12.250316619873047
    8. 'out' → logprob: -12.375316619873047
    9. 't' → logprob: -12.875316619873047
    10. 'uste' → logprob: -13.500316619873047

Token 472: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6351594924926758
    2. ' r' → logprob: -0.7601594924926758
    3. ' l' → logprob: -6.635159492492676
    4. 'l' → logprob: -7.135159492492676
    5. ' v' → logprob: -9.010159492492676
    6. ' s' → logprob: -9.260159492492676
    7. 'v' → logprob: -9.760159492492676
    8. ' u' → logprob: -10.135159492492676
    9. 's' → logprob: -10.260159492492676
    10. ' t' → logprob: -10.510159492492676

Token 473: ' j' (ID: 441)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5440530776977539
    2. ' r' → logprob: -0.9190530776977539
    3. ' u' → logprob: -5.044053077697754
    4. 'u' → logprob: -5.544053077697754
    5. ' v' → logprob: -5.669053077697754
    6. ' t' → logprob: -5.794053077697754
    7. 'v' → logprob: -6.169053077697754
    8. 't' → logprob: -6.669053077697754
    9. ' s' → logprob: -8.794053077697754
    10. 's' → logprob: -9.419053077697754

Token 474: '-i' (ID: 18499)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.623340368270874
    2. ']-' → logprob: -1.873340368270874
    3. '-' → logprob: -2.123340368270874
    4. 'n' → logprob: -2.998340368270874
    5. 'v' → logprob: -2.998340368270874
    6. 'r' → logprob: -3.748340368270874
    7. 'th' → logprob: -4.873340606689453
    8. '-r' → logprob: -4.998340606689453
    9. 'j' → logprob: -5.248340606689453
    10. '][-' → logprob: -5.248340606689453

Token 475: 'ème' (ID: 9767)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024059994146227837
    2. 'm' → logprob: -5.149059772491455
    3. 'mé' → logprob: -5.649059772491455
    4. 'ème' → logprob: -6.024059772491455
    5. '>' → logprob: -6.649059772491455
    6. 'j' → logprob: -6.649059772491455
    7. '```' → logprob: -6.899059772491455
    8. '']' → logprob: -7.024059772491455
    9. 'n' → logprob: -7.149059772491455
    10. '   ' → logprob: -7.399059772491455

Token 476: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.2004006803035736
    2. 'r' → logprob: -2.9504005908966064
    3. 'car' → logprob: -3.2004005908966064
    4. 'v' → logprob: -3.2004005908966064
    5. ']' → logprob: -4.2004008293151855
    6. 'character' → logprob: -4.3254008293151855
    7. ' character' → logprob: -5.0754008293151855
    8. ' caract' → logprob: -5.5754008293151855
    9. 'u' → logprob: -6.3254008293151855
    10. 't' → logprob: -6.5754008293151855

Token 477: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.011806805618107319
    2. ' of' → logprob: -5.011806964874268
    3. 'de' → logprob: -6.261806964874268
    4. 'v' → logprob: -6.761806964874268
    5. 'u' → logprob: -7.386806964874268
    6. 'r' → logprob: -7.886806964874268
    7. 's' → logprob: -8.38680648803711
    8. '           ' → logprob: -8.38680648803711
    9. ' du' → logprob: -9.51180648803711
    10. '   ' → logprob: -9.76180648803711

Token 478: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005545823951251805
    2. ' r' → logprob: -7.62555456161499
    3. 'l' → logprob: -10.250555038452148
    4. 's' → logprob: -11.375555038452148
    5. 't' → logprob: -11.750555038452148
    6. 'u' → logprob: -12.750555038452148
    7. 'v' → logprob: -13.000555038452148
    8. '   ' → logprob: -13.125555038452148
    9. '	r' → logprob: -13.500555038452148
    10. ' ' → logprob: -13.750555038452148

Token 479: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004387750814203173
    2. 'l' → logprob: -7.875438690185547
    3. 's' → logprob: -10.000438690185547
    4. ' r' → logprob: -12.125438690185547
    5. 't' → logprob: -12.875438690185547
    6. 'v' → logprob: -13.250438690185547
    7. 'u' → logprob: -13.750438690185547
    8. '	r' → logprob: -14.437938690185547
    9. 'n' → logprob: -14.812938690185547
    10. '   ' → logprob: -15.750438690185547

Token 480: ''' (ID: 6)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12762999534606934
    2. ']' → logprob: -2.2526299953460693
    3. 'j' → logprob: -4.627630233764648
    4. 'v' → logprob: -6.252630233764648
    5. '][' → logprob: -7.127630233764648
    6. '           ' → logprob: -8.002630233764648
    7. '[::-' → logprob: -8.127630233764648
    8. ')' → logprob: -8.252630233764648
    9. ',j' → logprob: -8.627630233764648
    10. '(j' → logprob: -8.627630233764648

Token 481: ' à' (ID: 1221)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.06364057958126068
    2. '           ' → logprob: -3.438640594482422
    3. '[v' → logprob: -4.688640594482422
    4. 'v' → logprob: -4.813640594482422
    5. '[' → logprob: -5.438640594482422
    6. '+' → logprob: -5.563640594482422
    7. '[n' → logprob: -7.188640594482422
    8. '[u' → logprob: -7.438640594482422
    9. '[::-' → logprob: -7.813640594482422
    10. ' +' → logprob: -7.813640594482422

Token 482: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2859460115432739
    2. ' r' → logprob: -1.410946011543274
    3. 'v' → logprob: -5.910945892333984
    4. 'u' → logprob: -7.160945892333984
    5. 't' → logprob: -7.660945892333984
    6. ' v' → logprob: -7.910945892333984
    7. ' t' → logprob: -8.285945892333984
    8. ' u' → logprob: -8.910945892333984
    9. 's' → logprob: -9.910945892333984
    10. ' s' → logprob: -11.285945892333984

Token 483: ' chaîne' (ID: 89288)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003799488302320242
    2. 'u' → logprob: -5.8787994384765625
    3. 'v' → logprob: -7.5037994384765625
    4. 't' → logprob: -8.128799438476562
    5. 's' → logprob: -9.003799438476562
    6. ' r' → logprob: -10.878799438476562
    7. 'j' → logprob: -13.503799438476562
    8. 'l' → logprob: -13.628799438476562
    9. '   ' → logprob: -14.378799438476562
    10. 'e' → logprob: -14.753799438476562

Token 484: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5822328925132751
    2. 'u' → logprob: -1.20723295211792
    3. 'v' → logprob: -1.95723295211792
    4. 'r' → logprob: -7.95723295211792
    5. ' t' → logprob: -7.95723295211792
    6. ' u' → logprob: -8.332232475280762
    7. ' v' → logprob: -9.457232475280762
    8. '[u' → logprob: -10.707232475280762
    9. '   ' → logprob: -11.832232475280762
    10. '[t' → logprob: -11.832232475280762

Token 485: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050230544060468674
    2. 't' → logprob: -4.050230503082275
    3. '<|end|>' → logprob: -4.050230503082275
    4. '+' → logprob: -5.300230503082275
    5. ' +=' → logprob: -5.925230503082275
    6. 'v' → logprob: -6.175230503082275
    7. ' +' → logprob: -6.300230503082275
    8. '       ' → logprob: -7.550230503082275
    9. '<|end|>' → logprob: -7.550230503082275
    10. '+=' → logprob: -7.925230503082275

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005265769083052874
    2. 't' → logprob: -5.380265712738037
    3. 'v' → logprob: -7.505265712738037
    4. '       ' → logprob: -10.130266189575195
    5. ' t' → logprob: -10.755266189575195
    6. '   ' → logprob: -12.130266189575195
    7. '<|end|>' → logprob: -12.130266189575195
    8. '          ' → logprob: -12.630266189575195
    9. '	       ' → logprob: -12.755266189575195
    10. 'u' → logprob: -12.755266189575195

Token 487: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0017187348566949368
    2. ' t' → logprob: -6.376718521118164
    3. 'v' → logprob: -11.501718521118164
    4. 'r' → logprob: -12.876718521118164
    5. '	t' → logprob: -13.251718521118164
    6. 'u' → logprob: -13.876718521118164
    7. '           ' → logprob: -14.751718521118164
    8. '   ' → logprob: -14.876718521118164
    9. '`t' → logprob: -15.376718521118164
    10. '+' → logprob: -16.001718521118164

Token 488: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326597929000854
    2. ' +=' → logprob: -1.3132660388946533
    3. '+' → logprob: -12.688265800476074
    4. ' +' → logprob: -14.313265800476074
    5. ']+=' → logprob: -15.188265800476074
    6. '+='' → logprob: -15.938265800476074
    7. '=' → logprob: -16.68826675415039
    8. '+="' → logprob: -17.06326675415039
    9. '+=(' → logprob: -18.43826675415039
    10. '	' → logprob: -19.68826675415039

Token 489: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28115683794021606
    2. ' r' → logprob: -1.4061567783355713
    3. 'l' → logprob: -12.406156539916992
    4. '	r' → logprob: -13.656156539916992
    5. ' l' → logprob: -14.656156539916992
    6. '[r' → logprob: -15.781156539916992
    7. 's' → logprob: -15.906156539916992
    8. '_r' → logprob: -16.218656539916992
    9. ' ' → logprob: -16.281156539916992
    10. ' ' → logprob: -16.906156539916992

Token 490: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4021237802808173e-05
    2. 'j' → logprob: -11.750014305114746
    3. '[n' → logprob: -12.125014305114746
    4. '[r' → logprob: -15.250014305114746
    5. '[v' → logprob: -16.50001335144043
    6. '[u' → logprob: -16.62501335144043
    7. '[' → logprob: -17.25001335144043
    8. '	j' → logprob: -17.37501335144043
    9. '[i' → logprob: -17.62501335144043
    10. '[-' → logprob: -18.00001335144043

Token 491: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001025895617203787
    2. ')' → logprob: -9.750102996826172
    3. ']
' → logprob: -10.500102996826172
    4. '])' → logprob: -11.375102996826172
    5. ' ]' → logprob: -12.750102996826172
    6. '<|end|>' → logprob: -13.500102996826172
    7. ']

' → logprob: -15.375102996826172
    8. ')]' → logprob: -15.875102996826172
    9. '[j' → logprob: -15.875102996826172
    10. '']' → logprob: -16.000102996826172

Token 492: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06560368835926056
    2. '```' → logprob: -3.315603733062744
    3. 'u' → logprob: -4.065603733062744
    4. '       ' → logprob: -4.690603733062744
    5. 'else' → logprob: -7.565603733062744
    6. ' else' → logprob: -8.940603256225586
    7. '<|end|>' → logprob: -9.940603256225586
    8. ' u' → logprob: -10.065603256225586
    9. '``' → logprob: -10.690603256225586
    10. 'v' → logprob: -10.940603256225586

Token 493: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11913417279720306
    2. '       ' → logprob: -2.2441341876983643
    3. ' else' → logprob: -5.119133949279785
    4. '```' → logprob: -8.244133949279785
    5. '           ' → logprob: -10.744133949279785
    6. '   ' → logprob: -11.869133949279785
    7. 'v' → logprob: -12.119133949279785
    8. 'u' → logprob: -12.244133949279785
    9. 'elif' → logprob: -13.119133949279785
    10. 's' → logprob: -13.119133949279785

Token 494: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5402610898017883
    2. ':' → logprob: -1.0402610301971436
    3. ':
' → logprob: -3.0402610301971436
    4. '       ' → logprob: -4.290261268615723
    5. '   ' → logprob: -6.665261268615723
    6. 'u' → logprob: -8.415261268615723
    7. ' s' → logprob: -8.790261268615723
    8. ' :' → logprob: -8.790261268615723
    9. 's' → logprob: -8.915261268615723
    10. ',' → logprob: -8.915261268615723

Token 495: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04429006949067116
    2. '       ' → logprob: -3.294290065765381
    3. ' u' → logprob: -5.794290065765381
    4. '           ' → logprob: -6.044290065765381
    5. '   ' → logprob: -7.169290065765381
    6. '	u' → logprob: -10.419290542602539
    7. '```' → logprob: -11.794290542602539
    8. '#' → logprob: -12.794290542602539
    9. '
' → logprob: -14.419290542602539
    10. 'v' → logprob: -15.044290542602539

Token 496: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.001630909275263548
    2. ' u' → logprob: -6.501630783081055
    3. '   ' → logprob: -9.626630783081055
    4. '       ' → logprob: -9.751630783081055
    5. '	u' → logprob: -12.751630783081055
    6. '           ' → logprob: -13.501630783081055
    7. '[u' → logprob: -17.251630783081055
    8. '#' (adapté à ' #') → logprob: -17.376630783081055
    9. '    ' → logprob: -17.501630783081055
    10. '        ' → logprob: -17.751630783081055

Token 497: ' Sinon' (ID: 154924)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00014740281039848924
    2. ' u' → logprob: -8.875147819519043
    3. '       ' → logprob: -12.250147819519043
    4. '   ' → logprob: -13.125147819519043
    5. '	u' → logprob: -14.750147819519043
    6. '           ' → logprob: -15.000147819519043
    7. '_u' → logprob: -18.375146865844727
    8. '#' → logprob: -18.375146865844727
    9. '[u' → logprob: -19.500146865844727
    10. '    ' → logprob: -19.875146865844727

Token 498: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00747316749766469
    2. ' u' → logprob: -5.382472991943359
    3. '           ' → logprob: -6.382472991943359
    4. '       ' → logprob: -6.882472991943359
    5. '   ' → logprob: -9.00747299194336
    6. '	u' → logprob: -11.75747299194336
    7. ',u' → logprob: -14.75747299194336
    8. '#' → logprob: -15.13247299194336
    9. '        ' → logprob: -15.50747299194336
    10. '[u' → logprob: -15.63247299194336

Token 499: ' ajoute' (ID: 91611)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.048686154186725616
    2. ' u' → logprob: -3.0486862659454346
    3. '       ' → logprob: -9.923686027526855
    4. '           ' → logprob: -10.673686027526855
    5. '   ' → logprob: -10.923686027526855
    6. '	u' → logprob: -12.048686027526855
    7. '
' → logprob: -14.798686027526855
    8. '        ' → logprob: -14.798686027526855
    9. '            
' → logprob: -15.173686027526855
    10. '#' → logprob: -15.423686027526855

Token 500: ' le' (ID: 505)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2555898129940033
    2. ' u' → logprob: -1.5055898427963257
    3. 'l' → logprob: -5.880589962005615
    4. ' l' → logprob: -7.255589962005615
    5. '   ' → logprob: -9.630589485168457
    6. ' ' → logprob: -9.880589485168457
    7. 'v' → logprob: -11.630589485168457
    8. '	u' → logprob: -11.880589485168457
    9. '  ' → logprob: -12.380589485168457
    10. 's' → logprob: -12.630589485168457

Token 501: ' j' (ID: 441)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.019708851352334023
    2. 'u' → logprob: -4.144708633422852
    3. 'v' → logprob: -6.144708633422852
    4. ' l' → logprob: -6.769708633422852
    5. ' u' → logprob: -9.144708633422852
    6. 'j' → logprob: -9.269708633422852
    7. 's' → logprob: -9.894708633422852
    8. 'r' → logprob: -10.019708633422852
    9. ''l' → logprob: -10.519708633422852
    10. ' v' → logprob: -11.394708633422852

Token 502: '-i' (ID: 18499)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23202669620513916
    2. 'v' → logprob: -2.4820265769958496
    3. 's' → logprob: -3.4820265769958496
    4. '+=' → logprob: -3.8570265769958496
    5. ' +=' → logprob: -4.23202657699585
    6. 'else' → logprob: -4.60702657699585
    7. '=' → logprob: -4.73202657699585
    8. '+' → logprob: -5.10702657699585
    9. 'e' → logprob: -5.60702657699585
    10. '   ' → logprob: -6.10702657699585

Token 503: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.003976647276431322
    2. '```' → logprob: -6.253976821899414
    3. 'èmes' → logprob: -8.253976821899414
    4. '`' → logprob: -8.378976821899414
    5. '   ' → logprob: -8.378976821899414
    6. 'ère' → logprob: -8.878976821899414
    7. 'eme' → logprob: -9.003976821899414
    8. '+' → logprob: -9.253976821899414
    9. 'mé' → logprob: -9.253976821899414
    10. 'm' → logprob: -9.378976821899414

Token 504: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.54864102602005
    2. ' caractère' → logprob: -1.1736409664154053
    3. 'l' → logprob: -2.2986409664154053
    4. 'character' → logprob: -5.673641204833984
    5. ' caract' → logprob: -5.798641204833984
    6. 'de' → logprob: -6.548641204833984
    7. ' de' → logprob: -6.673641204833984
    8. ' character' → logprob: -7.048641204833984
    9. 'v' → logprob: -7.173641204833984
    10. 'u' → logprob: -7.173641204833984

Token 505: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.025555597618222237
    2. 'de' → logprob: -4.275555610656738
    3. '           ' → logprob: -5.025555610656738
    4. ' of' → logprob: -5.775555610656738
    5. '   ' → logprob: -7.275555610656738
    6. 'of' → logprob: -8.400555610656738
    7. 'l' → logprob: -8.775555610656738
    8. 'd' → logprob: -9.150555610656738
    9. '       ' → logprob: -9.400555610656738
    10. '#' → logprob: -9.400555610656738

Token 506: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000488811288960278
    2. ' l' → logprob: -7.625488758087158
    3. 'u' → logprob: -14.625489234924316
    4. 'r' → logprob: -15.875489234924316
    5. 'v' → logprob: -16.25048828125
    6. '	l' → logprob: -16.87548828125
    7. 's' → logprob: -17.37548828125
    8. '_l' → logprob: -17.62548828125
    9. ''l' → logprob: -19.12548828125
    10. '[l' → logprob: -20.12548828125

Token 507: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9385402993066236e-05
    2. 'r' → logprob: -11.000019073486328
    3. ' l' → logprob: -13.375019073486328
    4. 's' → logprob: -14.375019073486328
    5. '	l' → logprob: -15.125019073486328
    6. 'u' → logprob: -16.125019073486328
    7. 'v' → logprob: -17.000019073486328
    8. ''l' → logprob: -17.875019073486328
    9. '```' → logprob: -18.062519073486328
    10. '[l' → logprob: -18.187519073486328

Token 508: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3930371105670929
    2. ']' → logprob: -1.3930370807647705
    3. '[j' → logprob: -3.1430370807647705
    4. '']' → logprob: -4.14303731918335
    5. '```' → logprob: -5.01803731918335
    6. '')' → logprob: -6.01803731918335
    7. ']'' → logprob: -6.51803731918335
    8. ' à' → logprob: -6.64303731918335
    9. ')' → logprob: -6.76803731918335
    10. 'l' → logprob: -6.76803731918335

Token 509: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5265841484069824
    2. 'u' → logprob: -1.9015841484069824
    3. ' à' → logprob: -2.6515841484069824
    4. ' +=' → logprob: -3.0265841484069824
    5. ')' → logprob: -3.2765841484069824
    6. '+' → logprob: -3.7765841484069824
    7. '   ' → logprob: -4.526584148406982
    8. '```' → logprob: -4.651584148406982
    9. ' +' → logprob: -4.776584148406982
    10. ' u' → logprob: -4.901584148406982

Token 510: ' la' (ID: 557)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.25193825364112854
    2. 'u' → logprob: -1.5019382238388062
    3. ' ' → logprob: -12.626937866210938
    4. 'v' → logprob: -12.751937866210938
    5. ' v' → logprob: -13.376937866210938
    6. ' s' → logprob: -15.251937866210938
    7. 'l' → logprob: -15.251937866210938
    8. '   ' → logprob: -15.501937866210938
    9. '	u' → logprob: -15.501937866210938
    10. '```' → logprob: -15.751937866210938

Token 511: ' chaîne' (ID: 89288)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004328995011746883
    2. ' u' → logprob: -5.504329204559326
    3. 'v' → logprob: -8.379328727722168
    4. 't' → logprob: -10.879328727722168
    5. ' ' → logprob: -14.754328727722168
    6. '```' → logprob: -14.754328727722168
    7. ' v' → logprob: -15.379328727722168
    8. ' t' → logprob: -15.504328727722168
    9. 's' → logprob: -15.504328727722168
    10. '   ' → logprob: -15.629328727722168

Token 512: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.029750604182481766
    2. ' u' → logprob: -3.5297505855560303
    3. '	u' → logprob: -15.65475082397461
    4. 'v' → logprob: -17.15475082397461
    5. '   ' → logprob: -17.65475082397461
    6. ' ' → logprob: -18.27975082397461
    7. '_u' → logprob: -18.65475082397461
    8. ''u' → logprob: -19.27975082397461
    9. 't' → logprob: -20.15475082397461
    10. '  ' → logprob: -20.52975082397461

Token 513: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06276523321866989
    2. '           ' → logprob: -3.437765121459961
    3. ' u' → logprob: -3.562765121459961
    4. '<|end|>' → logprob: -8.312765121459961
    5. '       ' → logprob: -10.437765121459961
    6. '	u' → logprob: -10.687765121459961
    7. '   ' → logprob: -11.437765121459961
    8. '```' → logprob: -12.437765121459961
    9. '<|end|>' → logprob: -12.437765121459961
    10. '<u' → logprob: -12.687765121459961

Token 514: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6163033843040466
    2. '           ' → logprob: -0.8663033843040466
    3. ' u' → logprob: -3.2413034439086914
    4. '<|end|>' → logprob: -8.116303443908691
    5. '       ' → logprob: -10.116303443908691
    6. '	u' → logprob: -10.866303443908691
    7. '```' → logprob: -10.866303443908691
    8. '   ' → logprob: -11.241303443908691
    9. '
' → logprob: -11.991303443908691
    10. '          ' → logprob: -12.116303443908691

Token 515: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.023251185193657875
    2. ' u' → logprob: -3.7732512950897217
    3. '	u' → logprob: -12.2732515335083
    4. '           ' → logprob: -14.1482515335083
    5. '       ' → logprob: -15.7732515335083
    6. '   ' → logprob: -16.148250579833984
    7. '_u' → logprob: -17.898250579833984
    8. '
' → logprob: -18.148250579833984
    9. '[u' → logprob: -18.648250579833984
    10. ',u' → logprob: -18.898250579833984

Token 516: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1002098023891449
    2. '+=' → logprob: -2.3502097129821777
    3. '+='' → logprob: -13.850210189819336
    4. '=' → logprob: -14.100210189819336
    5. '+' → logprob: -14.475210189819336
    6. ' +' → logprob: -14.600210189819336
    7. '+="' → logprob: -15.475210189819336
    8. ']+=' → logprob: -15.850210189819336
    9. ' ' → logprob: -16.975210189819336
    10. ' =' → logprob: -17.100210189819336

Token 517: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5759397745132446
    2. 'l' → logprob: -0.8259397745132446
    3. '	l' → logprob: -15.325940132141113
    4. ' ' → logprob: -17.450939178466797
    5. '[l' → logprob: -18.450939178466797
    6. ' ' → logprob: -18.450939178466797
    7. 'u' → logprob: -18.950939178466797
    8. '_l' → logprob: -18.950939178466797
    9. ''l' → logprob: -19.075939178466797
    10. ' л' → logprob: -19.325939178466797

Token 518: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '```' → logprob: -18.125
    4. '[u' → logprob: -18.75
    5. 'j' → logprob: -19.5
    6. ' [' → logprob: -19.5
    7. '[
' → logprob: -19.75
    8. '[js' → logprob: -20.375
    9. '[i' → logprob: -21.125
    10. '[l' → logprob: -21.25

Token 519: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5313571095466614
    2. ')' → logprob: -0.9063571095466614
    3. ']
' → logprob: -5.531357288360596
    4. ')
' → logprob: -5.781357288360596
    5. '       ' → logprob: -6.906357288360596
    6. '}' → logprob: -9.781356811523438
    7. ' ]' → logprob: -10.906356811523438
    8. '           ' → logprob: -11.031356811523438
    9. '<|end|>' → logprob: -11.531356811523438
    10. '```' → logprob: -11.531356811523438

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001305950863752514
    2. '```' → logprob: -9.500130653381348
    3. 'v' → logprob: -10.375130653381348
    4. '<|end|>' → logprob: -10.875130653381348
    5. '
' → logprob: -13.750130653381348
    6. '          ' → logprob: -13.875130653381348
    7. '       ' → logprob: -14.000130653381348
    8. '#' → logprob: -14.125130653381348
    9. ' and' → logprob: -14.250130653381348
    10. 'u' → logprob: -15.250130653381348

Token 521: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04342776909470558
    2. 'v' → logprob: -3.1684277057647705
    3. '       ' → logprob: -8.418427467346191
    4. '#' (adapté à ' #') → logprob: -8.793427467346191
    5. '   ' → logprob: -10.793427467346191
    6. '```' → logprob: -11.543427467346191
    7. ' v' → logprob: -11.668427467346191
    8. '          ' → logprob: -11.668427467346191
    9. '         ' → logprob: -13.043427467346191
    10. 'u' → logprob: -13.793427467346191

Token 522: ' Aj' (ID: 28294)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00027682865038514137
    2. ' v' → logprob: -8.750276565551758
    3. '           ' → logprob: -9.500276565551758
    4. '   ' → logprob: -10.875276565551758
    5. 'u' → logprob: -11.250276565551758
    6. '       ' → logprob: -11.500276565551758
    7. '	v' → logprob: -14.000276565551758
    8. 'e' → logprob: -14.875276565551758
    9. '```' → logprob: -16.625276565551758
    10. '    ' → logprob: -17.125276565551758

Token 523: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0005174091784283519
    2. 'outer' → logprob: -8.625517845153809
    3. 'outez' → logprob: -8.625517845153809
    4. 'out' → logprob: -9.000517845153809
    5. '#' → logprob: -11.750517845153809
    6. 'ou' → logprob: -12.000517845153809
    7. 'v' → logprob: -12.000517845153809
    8. '+=' → logprob: -13.250517845153809
    9. '```' → logprob: -13.250517845153809
    10. 't' → logprob: -13.375517845153809

Token 524: ' le' (ID: 505)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38687971234321594
    2. 'r' → logprob: -1.1368796825408936
    3. '	r' → logprob: -12.386879920959473
    4. '           ' → logprob: -13.761879920959473
    5. '   ' → logprob: -14.011879920959473
    6. 'u' → logprob: -15.136879920959473
    7. '       ' → logprob: -15.261879920959473
    8. 'v' → logprob: -15.386879920959473
    9. '=r' → logprob: -15.386879920959473
    10. '[r' → logprob: -15.386879920959473

Token 525: ' j' (ID: 441)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005860374658368528
    2. ' r' → logprob: -7.500586032867432
    3. 'j' → logprob: -10.37558650970459
    4. '[j' → logprob: -14.50058650970459
    5. '	r' → logprob: -15.00058650970459
    6. '[r' → logprob: -15.37558650970459
    7. 'v' → logprob: -15.62558650970459
    8. ' j' → logprob: -16.000585556030273
    9. '   ' → logprob: -16.625585556030273
    10. '(r' → logprob: -16.750585556030273

Token 526: '-i' (ID: 18499)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01428268477320671
    2. '[n' → logprob: -5.639282703399658
    3. 'ème' → logprob: -5.639282703399658
    4. '[i' → logprob: -5.764282703399658
    5. 'e' → logprob: -7.264282703399658
    6. '+' → logprob: -7.764282703399658
    7. 'j' → logprob: -7.764282703399658
    8. '[' → logprob: -8.0142822265625
    9. '<|end|>' → logprob: -8.2642822265625
    10. 'jm' → logprob: -8.5142822265625

Token 527: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.0026648349594324827
    2. 'mé' → logprob: -6.877665042877197
    3. '`' → logprob: -7.752665042877197
    4. '```' → logprob: -7.877665042877197
    5. 'èmes' → logprob: -8.627664566040039
    6. 'eme' → logprob: -9.502664566040039
    7. 'm' → logprob: -9.627664566040039
    8. 'j' → logprob: -9.752664566040039
    9. 'me' → logprob: -9.877664566040039
    10. 'à' → logprob: -9.877664566040039

Token 528: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5551491975784302
    2. ' de' → logprob: -0.9301491975784302
    3. 'r' → logprob: -4.180149078369141
    4. 'de' → logprob: -5.930149078369141
    5. ' of' → logprob: -6.180149078369141
    6. ' r' → logprob: -6.180149078369141
    7. '[r' → logprob: -6.305149078369141
    8. 'car' → logprob: -6.555149078369141
    9. '   ' → logprob: -6.805149078369141
    10. ' caractères' → logprob: -7.055149078369141

Token 529: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07135356962680817
    2. 'de' → logprob: -2.6963536739349365
    3. 'r' → logprob: -7.446353435516357
    4. 'v' → logprob: -8.446353912353516
    5. '#' → logprob: -8.571353912353516
    6. ' of' → logprob: -9.321353912353516
    7. '   ' → logprob: -9.571353912353516
    8. 'd' → logprob: -9.696353912353516
    9. 's' → logprob: -10.571353912353516
    10. '>' → logprob: -10.946353912353516

Token 530: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0067154900170862675
    2. ' r' → logprob: -5.006715297698975
    3. ''r' → logprob: -16.506715774536133
    4. '	r' → logprob: -17.006715774536133
    5. '[r' → logprob: -17.131715774536133
    6. '_r' → logprob: -19.006715774536133
    7. '(r' → logprob: -19.131715774536133
    8. ''' → logprob: -19.256715774536133
    9. 's' → logprob: -19.631715774536133
    10. ' ' → logprob: -19.631715774536133

Token 531: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.463036435074173e-05
    2. ' r' → logprob: -10.625024795532227
    3. ''r' → logprob: -16.125024795532227
    4. '	r' → logprob: -16.500024795532227
    5. '[r' → logprob: -16.625024795532227
    6. 't' → logprob: -18.125024795532227
    7. 's' → logprob: -18.625024795532227
    8. 'v' → logprob: -18.625024795532227
    9. '_r' → logprob: -19.000024795532227
    10. ''' → logprob: -19.000024795532227

Token 532: ''' (ID: 6)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00036084887688048184
    2. ']' → logprob: -8.500360488891602
    3. '[v' → logprob: -9.625360488891602
    4. '[' → logprob: -9.750360488891602
    5. '[u' → logprob: -10.625360488891602
    6. '```' → logprob: -13.125360488891602
    7. '[r' → logprob: -13.250360488891602
    8. '   ' → logprob: -13.625360488891602
    9. 'v' → logprob: -13.875360488891602
    10. ' [' → logprob: -14.250360488891602

Token 533: ' à' (ID: 1221)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.026837078854441643
    2. '[u' → logprob: -4.15183687210083
    3. ' to' → logprob: -6.15183687210083
    4. '[v' → logprob: -6.27683687210083
    5. ' à' → logprob: -6.65183687210083
    6. '           ' → logprob: -6.90183687210083
    7. ']' → logprob: -7.02683687210083
    8. '[' → logprob: -7.15183687210083
    9. '[t' → logprob: -7.65183687210083
    10. '[r' → logprob: -7.65183687210083

Token 534: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39087483286857605
    2. ' r' → logprob: -1.1408748626708984
    3. 'v' → logprob: -5.890874862670898
    4. ' v' → logprob: -7.015874862670898
    5. ' e' → logprob: -8.890874862670898
    6. 'e' → logprob: -8.890874862670898
    7. '	r' → logprob: -11.015874862670898
    8. ' t' → logprob: -11.515874862670898
    9. 't' → logprob: -11.640874862670898
    10. 'u' → logprob: -12.515874862670898

Token 535: ' chaîne' (ID: 89288)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001114106344175525
    2. ' r' → logprob: -9.25011157989502
    3. 'v' → logprob: -11.37511157989502
    4. ''r' → logprob: -13.62511157989502
    5. 's' → logprob: -14.00011157989502
    6. '[r' → logprob: -14.62511157989502
    7. '	r' → logprob: -14.75011157989502
    8. '```' → logprob: -15.37511157989502
    9. '_r' → logprob: -15.50011157989502
    10. '`' → logprob: -15.87511157989502

Token 536: ' v' (ID: 323)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01297362707555294
    2. 'u' → logprob: -4.512973785400391
    3. 'v' → logprob: -6.262973785400391
    4. '[r' → logprob: -12.13797378540039
    5. ' r' → logprob: -12.26297378540039
    6. 't' → logprob: -12.38797378540039
    7. '[u' → logprob: -14.01297378540039
    8. 'e' → logprob: -14.13797378540039
    9. 'j' → logprob: -14.38797378540039
    10. 's' → logprob: -14.63797378540039

Token 537: '
' (ID: 198)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03964340314269066
    2. ' +=' → logprob: -3.2896432876586914
    3. 'v' → logprob: -7.039643287658691
    4. '           ' → logprob: -7.664643287658691
    5. '+' → logprob: -8.414643287658691
    6. '       ' → logprob: -11.664643287658691
    7. '   ' → logprob: -12.539643287658691
    8. ']+=' → logprob: -12.539643287658691
    9. '+='' → logprob: -12.664643287658691
    10. '=' → logprob: -12.914643287658691

Token 538: '           ' (ID: 352)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.37632226943969727
    2. 'v' → logprob: -2.0013222694396973
    3. '           ' → logprob: -2.5013222694396973
    4. ' +=' → logprob: -2.6263222694396973
    5. '+' → logprob: -4.001322269439697
    6. ' v' → logprob: -5.251322269439697
    7. '=' → logprob: -8.751321792602539
    8. '       ' → logprob: -9.251321792602539
    9. '   ' → logprob: -9.501321792602539
    10. '          ' → logprob: -9.751321792602539

Token 539: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.004177171736955643
    2. ' v' → logprob: -5.504177093505859
    3. 'r' → logprob: -9.25417709350586
    4. ' r' → logprob: -12.87917709350586
    5. '	v' → logprob: -14.50417709350586
    6. '   ' → logprob: -17.12917709350586
    7. ' ' → logprob: -19.25417709350586
    8. '  ' → logprob: -19.75417709350586
    9. '	r' → logprob: -20.75417709350586
    10. '       ' → logprob: -20.87917709350586

Token 540: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032541234977543354
    2. ' +=' → logprob: -5.753253936767578
    3. '+' → logprob: -9.628253936767578
    4. '+='' → logprob: -11.878253936767578
    5. ']+=' → logprob: -12.753253936767578
    6. '+="' → logprob: -15.003253936767578
    7. '=' → logprob: -16.628253936767578
    8. ' +' → logprob: -16.753253936767578
    9. '+=(' → logprob: -16.753253936767578
    10. '```' → logprob: -16.878253936767578

Token 541: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009120595059357584
    2. ' r' → logprob: -7.000912189483643
    3. '	r' → logprob: -14.750911712646484
    4. '[r' → logprob: -16.000911712646484
    5. '   ' → logprob: -16.750911712646484
    6. ' ' → logprob: -17.375911712646484
    7. '=r' → logprob: -19.125911712646484
    8. '(r' → logprob: -19.125911712646484
    9. '  ' → logprob: -19.375911712646484
    10. ''r' → logprob: -19.750911712646484

Token 542: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. 'j' → logprob: -14.625000953674316
    3. '[v' → logprob: -15.500000953674316
    4. '[' → logprob: -18.25
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '	j' → logprob: -19.25
    8. '[i' → logprob: -19.875
    9. '[u' → logprob: -19.875
    10. 'v' → logprob: -20.75

Token 543: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49357080459594727
    2. '<|end|>' → logprob: -1.1185708045959473
    3. ']' → logprob: -2.8685708045959473
    4. '```' → logprob: -5.993570804595947
    5. '}' → logprob: -6.368570804595947
    6. '<|end|>' → logprob: -7.618570804595947
    7. '#' → logprob: -7.618570804595947
    8. '   ' → logprob: -8.493570327758789
    9. '       ' → logprob: -8.493570327758789
    10. '
' → logprob: -9.368570327758789

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074974242597818375
    2. '
' → logprob: -5.882497310638428
    3. '       ' → logprob: -6.132497310638428
    4. '```' → logprob: -6.507497310638428
    5. 'if' → logprob: -7.882497310638428
    6. '    
' → logprob: -8.132497787475586
    7. ' if' → logprob: -8.132497787475586
    8. '        
' → logprob: -11.007497787475586
    9. '  
' → logprob: -11.382497787475586
    10. '   
' → logprob: -11.757497787475586

Token 545: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.589783787727356
    2. '   ' → logprob: -0.839783787727356
    3. 'if' → logprob: -4.339783668518066
    4. ' d' → logprob: -8.589783668518066
    5. 'key' → logprob: -8.964783668518066
    6. '```' → logprob: -9.089783668518066
    7. ' if' → logprob: -9.589783668518066
    8. 'print' → logprob: -9.589783668518066
    9. 's' → logprob: -9.839783668518066
    10. 'for' → logprob: -10.214783668518066

Token 546: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16342443227767944
    2. 'if' → logprob: -1.9134244918823242
    3. '   ' → logprob: -6.413424491882324
    4. 'key' → logprob: -6.663424491882324
    5. 'for' → logprob: -8.538424491882324
    6. ' if' → logprob: -10.163424491882324
    7. ' d' → logprob: -10.913424491882324
    8. '#' → logprob: -11.163424491882324
    9. 'k' → logprob: -13.038424491882324
    10. 'from' → logprob: -13.288424491882324

Token 547: ' utilise' (ID: 70283)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3027209937572479
    2. 'if' → logprob: -1.9277210235595703
    3. '   ' → logprob: -2.3027210235595703
    4. '#' → logprob: -5.17772102355957
    5. '    ' → logprob: -5.67772102355957
    6. ' for' → logprob: -6.55272102355957
    7. 'for' → logprob: -6.80272102355957
    8. ' #' → logprob: -7.05272102355957
    9. ' try' → logprob: -7.30272102355957
    10. 's' → logprob: -7.55272102355957

Token 548: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13517074286937714
    2. ' d' → logprob: -2.1351706981658936
    3. '   ' → logprob: -5.635170936584473
    4. 'if' → logprob: -6.635170936584473
    5. 's' → logprob: -6.760170936584473
    6. ' if' → logprob: -6.760170936584473
    7. ' s' → logprob: -7.135170936584473
    8. 'for' → logprob: -9.885170936584473
    9. ' for' → logprob: -10.510170936584473
    10. '
' → logprob: -10.760170936584473

Token 549: ' couple' (ID: 7167)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18781909346580505
    2. 'len' → logprob: -2.187819004058838
    3. 's' → logprob: -3.437819004058838
    4. 'for' → logprob: -3.812819004058838
    5. 'try' → logprob: -6.562819004058838
    6. ' if' → logprob: -7.062819004058838
    7. '```' → logprob: -7.187819004058838
    8. '
' → logprob: -7.687819004058838
    9. 'd' → logprob: -8.437819480895996
    10. '#' → logprob: -8.437819480895996

Token 550: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.028816821053624153
    2. ' (' → logprob: -3.6538169384002686
    3. '   ' → logprob: -7.1538166999816895
    4. 's' → logprob: -7.7788166999816895
    5. 'key' → logprob: -7.9038166999816895
    6. '(' → logprob: -7.9038166999816895
    7. '(d' → logprob: -8.778817176818848
    8. '
' → logprob: -9.778817176818848
    9. ' key' → logprob: -9.778817176818848
    10. 'if' → logprob: -9.903817176818848

Token 551: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10042630881071091
    2. 's' → logprob: -2.350426197052002
    3. ' (' → logprob: -8.60042667388916
    4. ' s' → logprob: -10.85042667388916
    5. '(' → logprob: -11.60042667388916
    6. '   ' → logprob: -13.35042667388916
    7. ' ' → logprob: -14.22542667388916
    8. '{s' → logprob: -14.60042667388916
    9. 'tuple' → logprob: -14.72542667388916
    10. '(t' → logprob: -14.72542667388916

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.131498783826828
    2. ',t' → logprob: -2.1314988136291504
    3. ',v' → logprob: -5.88149881362915
    4. ',u' → logprob: -6.38149881362915
    5. ',s' → logprob: -10.381498336791992
    6. ' ,' → logprob: -11.881498336791992
    7. ',r' → logprob: -12.131498336791992
    8. ',
' → logprob: -12.256498336791992
    9. ',y' → logprob: -12.381498336791992
    10. ',(' → logprob: -12.756498336791992

Token 553: ' u' (ID: 337)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39552775025367737
    2. 'u' → logprob: -1.145527720451355
    3. ' t' → logprob: -5.8955278396606445
    4. '(u' → logprob: -6.2705278396606445
    5. '(t' → logprob: -6.6455278396606445
    6. ' u' → logprob: -6.6455278396606445
    7. 's' → logprob: -6.8955278396606445
    8. ')' → logprob: -9.270527839660645
    9. '(' → logprob: -9.770527839660645
    10. ' (' → logprob: -9.770527839660645

Token 554: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018885416211560369
    2. ')
' → logprob: -7.126888751983643
    3. ')]' → logprob: -7.876888751983643
    4. ',' → logprob: -8.751888275146484
    5. '):' → logprob: -8.751888275146484
    6. ']' → logprob: -8.751888275146484
    7. '),' → logprob: -9.251888275146484
    8. 'if' → logprob: -10.626888275146484
    9. '):
' → logprob: -10.876888275146484
    10. ')=' → logprob: -11.001888275146484

Token 555: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5469405651092529
    2. ')' → logprob: -1.046940565109253
    3. ']' → logprob: -3.796940565109253
    4. 'if' → logprob: -3.921940565109253
    5. '    
' → logprob: -5.046940803527832
    6. ':' → logprob: -5.546940803527832
    7. ',' → logprob: -6.296940803527832
    8. '
' → logprob: -6.421940803527832
    9. 'in' → logprob: -6.421940803527832
    10. '#' → logprob: -6.421940803527832

Token 556: ' clé' (ID: 83188)
  Prédit: 'clé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clé' → logprob: -0.04093248024582863
    2. 'key' → logprob: -3.2909324169158936
    3. ' clé' → logprob: -6.415932655334473
    4. 'cle' → logprob: -7.040932655334473
    5. 'cl' → logprob: -8.665932655334473
    6. ' key' → logprob: -8.665932655334473
    7. 'd' → logprob: -11.290932655334473
    8. ' ключ' → logprob: -12.165932655334473
    9. 'c' → logprob: -12.540932655334473
    10. 'clave' → logprob: -13.040932655334473

Token 557: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004348586779087782
    2. ':' → logprob: -5.6293487548828125
    3. ':
' → logprob: -9.004348754882812
    4. ')' → logprob: -9.504348754882812
    5. '    
' → logprob: -9.504348754882812
    6. 'd' → logprob: -9.629348754882812
    7. '):
' → logprob: -9.629348754882812
    8. '
' → logprob: -9.754348754882812
    9. '):' → logprob: -9.879348754882812
    10. ' in' → logprob: -10.129348754882812

Token 558: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.547789674485102e-05
    2. ' d' → logprob: -10.250035285949707
    3. '```' → logprob: -17.250036239624023
    4. '#' → logprob: -18.750036239624023
    5. '`' → logprob: -19.625036239624023
    6. 'if' → logprob: -19.750036239624023
    7. '   ' → logprob: -19.750036239624023
    8. 'the' → logprob: -20.375036239624023
    9. '	d' → logprob: -20.500036239624023
    10. '
' → logprob: -20.500036239624023

Token 559: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0017845372203737497
    2. 'if' → logprob: -6.376784324645996
    3. 'for' → logprob: -10.376784324645996
    4. 'dict' → logprob: -10.376784324645996
    5. 'dictionary' → logprob: -11.501784324645996
    6. ' d' → logprob: -12.126784324645996
    7. ' if' → logprob: -13.376784324645996
    8. 'try' → logprob: -13.876784324645996
    9. '```' → logprob: -14.001784324645996
    10. '#' → logprob: -14.876784324645996

Token 560: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.014349774457514286
    2. 'aire' → logprob: -4.514349937438965
    3. 'ary' → logprob: -5.889349937438965
    4. 'd' → logprob: -8.764349937438965
    5. 'ar' → logprob: -9.139349937438965
    6. 'a' → logprob: -9.264349937438965
    7. 'n' → logprob: -9.389349937438965
    8. '{' → logprob: -10.889349937438965
    9. 'na' → logprob: -11.139349937438965
    10. 'naires' → logprob: -11.264349937438965

Token 561: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0367543064057827
    2. '   ' → logprob: -3.7867543697357178
    3. 'if' → logprob: -5.411754131317139
    4. ')
' → logprob: -6.036754131317139
    5. '):
' → logprob: -6.286754131317139
    6. 'key' → logprob: -6.536754131317139
    7. '
' → logprob: -7.036754131317139
    8. ')' → logprob: -7.411754131317139
    9. ':
' → logprob: -7.411754131317139
    10. ' d' → logprob: -8.536754608154297

Token 562: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -17.5
    3. '`' → logprob: -24.5
    4. '
' → logprob: -24.625
    5. ' ' → logprob: -24.625
    6. ')' → logprob: -24.875
    7. ')d' → logprob: -25.0
    8. '```' → logprob: -25.125
    9. '  ' → logprob: -25.375
    10. '	d' → logprob: -25.5

Token 563: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006075856741517782
    2. 'd' → logprob: -6.256075859069824
    3. ')' → logprob: -6.506075859069824
    4. '
' → logprob: -7.631075859069824
    5. ':' → logprob: -7.881075859069824
    6. '[d' → logprob: -7.881075859069824
    7. ']' → logprob: -8.006075859069824
    8. 'if' → logprob: -8.506075859069824
    9. '    
' → logprob: -8.631075859069824
    10. ')
' → logprob: -9.006075859069824

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020445059053599834
    2. 'd' → logprob: -6.877044677734375
    3. '
' → logprob: -7.252044677734375
    4. 'if' → logprob: -9.127044677734375
    5. '    
' → logprob: -10.002044677734375
    6. '```' → logprob: -10.377044677734375
    7. ':' → logprob: -10.502044677734375
    8. '[d' → logprob: -10.877044677734375
    9. '[' → logprob: -11.377044677734375
    10. ' if' → logprob: -11.377044677734375

Token 565: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006745471036992967
    2. 'd' → logprob: -8.2506742477417
    3. 'if' → logprob: -8.2506742477417
    4. ' if' → logprob: -9.6256742477417
    5. '    
' → logprob: -10.6256742477417
    6. '
' → logprob: -10.7506742477417
    7. ':' → logprob: -11.3756742477417
    8. ')' → logprob: -11.5006742477417
    9. '```' → logprob: -12.6256742477417
    10. ')
' → logprob: -13.1256742477417

Token 566: ' Si' (ID: 7832)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004369002301245928
    2. '   ' → logprob: -5.504368782043457
    3. 'if' → logprob: -8.254368782043457
    4. ' d' → logprob: -10.504368782043457
    5. ' if' → logprob: -13.379368782043457
    6. '       ' → logprob: -14.629368782043457
    7. '
' → logprob: -15.129368782043457
    8. '	d' → logprob: -15.254368782043457
    9. 'key' → logprob: -15.629368782043457
    10. '  ' → logprob: -16.254369735717773

Token 567: ' cette' (ID: 7696)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001189510803669691
    2. ' (' → logprob: -6.751189708709717
    3. 'd' → logprob: -12.001189231872559
    4. '   ' → logprob: -12.501189231872559
    5. ' ' → logprob: -12.501189231872559
    6. '(d' → logprob: -12.751189231872559
    7. '(' → logprob: -13.126189231872559
    8. '(S' → logprob: -15.126189231872559
    9. '
' → logprob: -15.751189231872559
    10. '((' → logprob: -16.001190185546875

Token 568: ' clé' (ID: 83188)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.008231926709413528
    2. ' (' → logprob: -5.008232116699219
    3. '(' → logprob: -7.508232116699219
    4. 'cou' → logprob: -7.633232116699219
    5. '   ' → logprob: -8.883232116699219
    6. 'clé' → logprob: -9.133232116699219
    7. ' ' → logprob: -9.258232116699219
    8. 'key' → logprob: -10.508232116699219
    9. ' clé' → logprob: -10.508232116699219
    10. 's' → logprob: -11.258232116699219

Token 569: ' existe' (ID: 19498)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3193778693675995
    2. 'in' → logprob: -2.194377899169922
    3. ' in' → logprob: -2.194377899169922
    4. 'not' → logprob: -3.069377899169922
    5. '(s' → logprob: -5.819377899169922
    6. ')' → logprob: -6.944377899169922
    7. '(n' → logprob: -10.319377899169922
    8. ']' → logprob: -10.569377899169922
    9. 's' → logprob: -10.819377899169922
    10. '(not' → logprob: -10.944377899169922

Token 570: ' déjà' (ID: 21229)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.810298502445221
    2. ':' → logprob: -1.4352984428405762
    3. ':
' → logprob: -1.5602984428405762
    4. 'in' → logprob: -2.435298442840576
    5. '   ' → logprob: -5.435298442840576
    6. ',' → logprob: -5.435298442840576
    7. 'd' → logprob: -5.685298442840576
    8. ' not' → logprob: -5.935298442840576
    9. ' d' → logprob: -6.310298442840576
    10. ':d' → logprob: -6.935298442840576

Token 571: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07128218561410904
    2. ':
' → logprob: -2.696282148361206
    3. ':d' → logprob: -7.696282386779785
    4. '):' → logprob: -7.946282386779785
    5. '):
' → logprob: -8.696282386779785
    6. 'in' → logprob: -9.196282386779785
    7. '   ' → logprob: -10.071282386779785
    8. 'd' → logprob: -10.071282386779785
    9. ')' → logprob: -10.071282386779785
    10. ' in' → logprob: -10.196282386779785

Token 572: ' incr' (ID: 52395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01629934087395668
    2. ' d' → logprob: -4.141299247741699
    3. '       ' → logprob: -8.6412992477417
    4. '   ' → logprob: -9.3912992477417
    5. '    ' → logprob: -13.8912992477417
    6. '  ' → logprob: -13.8912992477417
    7. '	d' → logprob: -14.0162992477417
    8. '           ' → logprob: -14.3912992477417
    9. '
' → logprob: -14.5162992477417
    10. ' ' → logprob: -14.6412992477417

Token 573: 'é' (ID: 377)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.9138380885124207
    2. 'é' → logprob: -1.0388381481170654
    3. 'mente' → logprob: -1.5388381481170654
    4. 'emente' → logprob: -3.6638381481170654
    5. 'ement' → logprob: -5.913837909698486
    6. 'ment' → logprob: -7.538837909698486
    7. 'ém' → logprob: -7.788837909698486
    8. 'éments' → logprob: -8.163838386535645
    9. 'd' → logprob: -8.413838386535645
    10. 'l' → logprob: -9.038838386535645

Token 574: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.023105710744857788
    2. 'ment' → logprob: -3.8981056213378906
    3. 'm' → logprob: -7.273105621337891
    4. 'me' → logprob: -7.648105621337891
    5. 'mentation' → logprob: -7.773105621337891
    6. 'nte' → logprob: -8.39810562133789
    7. '#' → logprob: -8.77310562133789
    8. 'mental' → logprob: -9.27310562133789
    9. 'mented' → logprob: -9.89810562133789
    10. 'men' → logprob: -10.02310562133789

Token 575: ' sa' (ID: 880)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029757659882307053
    2. ' d' → logprob: -3.5297577381134033
    3. '1' → logprob: -12.654757499694824
    4. '(d' → logprob: -13.529757499694824
    5. ' ' → logprob: -13.779757499694824
    6. '   ' → logprob: -13.779757499694824
    7. '	d' → logprob: -15.029757499694824
    8. '[d' → logprob: -16.77975845336914
    9. '
' → logprob: -17.52975845336914
    10. ')d' → logprob: -17.77975845336914

Token 576: ' valeur' (ID: 41664)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.0611226558685303
    2. 'value' → logprob: -1.0611226558685303
    3. 'd' → logprob: -1.3111226558685303
    4. '<|end|>' → logprob: -4.436122894287109
    5. ' valeur' → logprob: -4.561122894287109
    6. ' d' → logprob: -4.686122894287109
    7. ']' → logprob: -6.186122894287109
    8. ' ' → logprob: -6.811122894287109
    9. ')' → logprob: -6.811122894287109
    10. 'val' → logprob: -7.436122894287109

Token 577: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04985294118523598
    2. '(d' → logprob: -4.1748528480529785
    3. ' d' → logprob: -4.2998528480529785
    4. '       ' → logprob: -4.2998528480529785
    5. '   ' → logprob: -5.9248528480529785
    6. '           ' → logprob: -6.9248528480529785
    7. '[d' → logprob: -7.9248528480529785
    8. '
' → logprob: -8.174853324890137
    9. ' =' → logprob: -8.299853324890137
    10. ' (' → logprob: -8.424853324890137

Token 578: ' sinon' (ID: 52915)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02182724140584469
    2. ' d' → logprob: -4.021827220916748
    3. '       ' → logprob: -6.646827220916748
    4. '   ' → logprob: -6.771827220916748
    5. 'else' → logprob: -7.396827220916748
    6. '           ' → logprob: -7.896827220916748
    7. ' else' → logprob: -8.646827697753906
    8. '               ' → logprob: -10.521827697753906
    9. '                   ' → logprob: -11.396827697753906
    10. '
' → logprob: -12.271827697753906

Token 579: ' utilise' (ID: 70283)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31330612301826477
    2. 'd' → logprob: -1.3133060932159424
    3. '   ' → logprob: -10.563305854797363
    4. '	d' → logprob: -11.188305854797363
    5. '0' → logprob: -13.438305854797363
    6. ' ' → logprob: -13.813305854797363
    7. '1' → logprob: -14.563305854797363
    8. '  ' → logprob: -15.188305854797363
    9. ')d' → logprob: -15.188305854797363
    10. '_d' → logprob: -15.313305854797363

Token 580: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15656547248363495
    2. '1' → logprob: -2.1565654277801514
    3. ' d' → logprob: -3.9065654277801514
    4. '0' → logprob: -5.1565656661987305
    5. '=' → logprob: -6.2815656661987305
    6. ' ' → logprob: -6.6565656661987305
    7. '   ' → logprob: -9.28156566619873
    8. ' =' → logprob: -9.90656566619873
    9. '=d' → logprob: -11.65656566619873
    10. 'dict' → logprob: -11.78156566619873

Token 581: '0' (ID: 15)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23301249742507935
    2. '1' → logprob: -1.6080124378204346
    3. '0' → logprob: -5.233012676239014
    4. ' d' → logprob: -6.983012676239014
    5. '=' → logprob: -7.108012676239014
    6. '   ' → logprob: -8.108012199401855
    7. 'dict' → logprob: -9.733012199401855
    8. ' ' → logprob: -9.983012199401855
    9. 'default' → logprob: -10.483012199401855
    10. ' =' → logprob: -10.858012199401855

Token 582: ' comme' (ID: 7971)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26672282814979553
    2. '
' → logprob: -2.1417229175567627
    3. ' d' → logprob: -2.7667229175567627
    4. '   ' → logprob: -3.6417229175567627
    5. '(d' → logprob: -4.266722679138184
    6. ')d' → logprob: -5.641722679138184
    7. ')' → logprob: -6.391722679138184
    8. ' =' → logprob: -6.516722679138184
    9. ')
' → logprob: -6.516722679138184
    10. '       ' → logprob: -6.516722679138184

Token 583: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7222803235054016
    2. 'd' → logprob: -1.2222802639007568
    3. 'val' → logprob: -1.9722802639007568
    4. 'value' → logprob: -2.722280263900757
    5. 'base' → logprob: -5.222280502319336
    6. ' valeur' → logprob: -5.347280502319336
    7. 'count' → logprob: -5.597280502319336
    8. 'default' → logprob: -7.847280502319336
    9. 'dé' → logprob: -9.097280502319336
    10. ' value' → logprob: -9.097280502319336

Token 584: ' par' (ID: 686)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09755345433950424
    2. ' d' → logprob: -2.5975534915924072
    3. '   ' → logprob: -4.222553253173828
    4. '
' → logprob: -5.722553253173828
    5. '       ' → logprob: -8.347553253173828
    6. '	d' → logprob: -9.847553253173828
    7. '(d' → logprob: -10.222553253173828
    8. ')' → logprob: -10.472553253173828
    9. ')
' → logprob: -10.472553253173828
    10. ')d' → logprob: -10.847553253173828

Token 585: ' défaut' (ID: 79375)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.48020872473716736
    2. 'dé' → logprob: -0.9802087545394897
    3. ' défaut' → logprob: -5.980208873748779
    4. 'def' → logprob: -5.980208873748779
    5. 'd' → logprob: -6.855208873748779
    6. ' default' → logprob: -13.980208396911621
    7. '0' → logprob: -14.980208396911621
    8. '_default' → logprob: -15.480208396911621
    9. 'fait' → logprob: -15.730208396911621
    10. 'Dé' → logprob: -15.980208396911621

Token 586: ' grâce' (ID: 31589)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.36324918270111084
    2. '   ' → logprob: -1.2382491827011108
    3. ' d' → logprob: -4.2382493019104
    4. '
' → logprob: -9.238248825073242
    5. '       ' → logprob: -9.613248825073242
    6. '	d' → logprob: -10.613248825073242
    7. ')' → logprob: -11.238248825073242
    8. ')d' → logprob: -11.238248825073242
    9. ' ' → logprob: -11.738248825073242
    10. ')
' → logprob: -11.988248825073242

Token 587: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11735954135656357
    2. '=d' → logprob: -3.2423596382141113
    3. ' to' → logprob: -3.3673596382141113
    4. ' d' → logprob: -4.117359638214111
    5. 'to' → logprob: -4.242359638214111
    6. '(d' → logprob: -5.367359638214111
    7. '.d' → logprob: -7.242359638214111
    8. 'dict' → logprob: -8.242359161376953
    9. ')d' → logprob: -8.242359161376953
    10. ',d' → logprob: -8.867359161376953

Token 588: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004105354193598032
    2. ' d' → logprob: -5.504105567932129
    3. 'get' → logprob: -11.254105567932129
    4. 'dict' → logprob: -11.254105567932129
    5. ' get' → logprob: -14.629105567932129
    6. '   ' → logprob: -15.004105567932129
    7. '	d' → logprob: -16.254104614257812
    8. '
' → logprob: -16.504104614257812
    9. '0' → logprob: -16.629104614257812
    10. '```' → logprob: -17.129104614257812

Token 589: ' méthode' (ID: 71490)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.02203495241701603
    2. '.get' → logprob: -4.522035121917725
    3. 'd' → logprob: -4.772035121917725
    4. 'dict' → logprob: -6.022035121917725
    5. 'default' → logprob: -10.397034645080566
    6. ' get' → logprob: -11.897034645080566
    7. '.setdefault' → logprob: -13.647034645080566
    8. '```' → logprob: -15.522034645080566
    9. '.d' → logprob: -15.647034645080566
    10. 'getitem' → logprob: -15.897034645080566

Token 590: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.002815932035446167
    2. '.get' → logprob: -6.5028157234191895
    3. ' get' → logprob: -7.1278157234191895
    4. 'd' → logprob: -7.6278157234191895
    5. 'set' → logprob: -11.502816200256348
    6. ' d' → logprob: -12.377816200256348
    7. 'dict' → logprob: -12.627816200256348
    8. '```' → logprob: -13.252816200256348
    9. '.setdefault' → logprob: -13.252816200256348
    10. '.' → logprob: -14.252816200256348

Token 591: '()
' (ID: 1234)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.046234484761953354
    2. '(d' → logprob: -4.046234607696533
    3. ' d' → logprob: -4.171234607696533
    4. '   ' → logprob: -5.171234607696533
    5. ')d' → logprob: -6.296234607696533
    6. '[(' → logprob: -7.046234607696533
    7. ')' → logprob: -7.171234607696533
    8. ']' → logprob: -7.296234607696533
    9. '
' → logprob: -7.546234607696533
    10. ')
' → logprob: -7.921234607696533

Token 592: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2063138633966446
    2. '   ' → logprob: -1.7063138484954834
    3. ' d' → logprob: -5.3313140869140625
    4. '       ' → logprob: -10.831314086914062
    5. '```' → logprob: -11.456314086914062
    6. ' ' → logprob: -11.706314086914062
    7. '	d' → logprob: -11.831314086914062
    8. '  ' → logprob: -12.831314086914062
    9. '[d' → logprob: -14.206314086914062
    10. '
' → logprob: -14.331314086914062

Token 593: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.12128739058971405
    2. '   ' → logprob: -2.3712873458862305
    3. ' d' → logprob: -3.8712873458862305
    4. '       ' → logprob: -10.87128734588623
    5. ' ' → logprob: -12.62128734588623
    6. '	d' → logprob: -12.99628734588623
    7. '
' → logprob: -13.24628734588623
    8. '  ' → logprob: -13.49628734588623
    9. '           ' → logprob: -14.62128734588623
    10. '    
' → logprob: -16.246288299560547

Token 594: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0005899675306864083
    2. '[s' → logprob: -7.500589847564697
    3. '[' → logprob: -10.375590324401855
    4. '.setdefault' → logprob: -13.250590324401855
    5. ' [(' → logprob: -13.875590324401855
    6. '(s' → logprob: -14.000590324401855
    7. '_key' → logprob: -14.625590324401855
    8. '[((' → logprob: -14.750590324401855
    9. '
' → logprob: -15.500590324401855
    10. ' (' → logprob: -15.625590324401855

Token 595: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ' s' → logprob: -15.25
    3. '(s' → logprob: -17.5
    4. ''s' → logprob: -18.375
    5. '`s' → logprob: -18.625
    6. ' ' → logprob: -19.75
    7. ')' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. ')s' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01819840632379055
    2. ',u' → logprob: -4.018198490142822
    3. ' ,' → logprob: -10.143198013305664
    4. ',s' → logprob: -12.268198013305664
    5. ',
' → logprob: -12.893198013305664
    6. ',v' → logprob: -14.768198013305664
    7. ' ' → logprob: -15.018198013305664
    8. 'u' → logprob: -15.268198013305664
    9. ',t' → logprob: -15.268198013305664
    10. ',user' → logprob: -15.518198013305664

Token 597: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.941850526549388e-06
    2. ' u' → logprob: -11.750007629394531
    3. '	u' → logprob: -19.00000762939453
    4. '   ' → logprob: -19.87500762939453
    5. ' ' → logprob: -21.62500762939453
    6. '
' → logprob: -21.75000762939453
    7. '_u' → logprob: -22.00000762939453
    8. '[u' → logprob: -22.25000762939453
    9. ''u' → logprob: -22.25000762939453
    10. ')' → logprob: -22.87500762939453

Token 598: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010556964843999594
    2. ')' → logprob: -9.375105857849121
    3. ']' → logprob: -10.875105857849121
    4. ' )' → logprob: -14.500105857849121
    5. '])' → logprob: -15.000105857849121
    6. ',' → logprob: -15.375105857849121
    7. '))' → logprob: -15.375105857849121
    8. '')]' → logprob: -15.500105857849121
    9. '")]' → logprob: -15.750105857849121
    10. ']]' → logprob: -17.125104904174805

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007106438861228526
    2. ' =' → logprob: -7.250710487365723
    3. '=d' → logprob: -14.375710487365723
    4. '+=' → logprob: -16.25071144104004
    5. ' +=' → logprob: -20.62571144104004
    6. '=
' → logprob: -21.12571144104004
    7. ')' → logprob: -21.37571144104004
    8. '=

' → logprob: -21.37571144104004
    9. '=s' → logprob: -22.12571144104004
    10. 'd' → logprob: -22.12571144104004

Token 600: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003180094063282013
    2. ' d' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.253180503845215
    4. '	d' → logprob: -14.628180503845215
    5. ' ' → logprob: -17.1281795501709
    6. '1' → logprob: -17.1281795501709
    7. '  ' → logprob: -17.8781795501709
    8. '(d' → logprob: -18.2531795501709
    9. '       ' → logprob: -18.2531795501709
    10. '    ' → logprob: -19.0031795501709

Token 601: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.37500286102295
    3. 'get' → logprob: -14.00000286102295
    4. ' .' → logprob: -15.12500286102295
    5. '[(' → logprob: -16.875001907348633
    6. '   ' → logprob: -20.250001907348633
    7. ').' → logprob: -20.375001907348633
    8. '().' → logprob: -20.625001907348633
    9. ' ' → logprob: -20.750001907348633
    10. '(' → logprob: -21.250001907348633

Token 602: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. '[(' → logprob: -18.75
    4. ' ((' → logprob: -20.0
    5. ' ' → logprob: -20.375
    6. '(
' → logprob: -20.75
    7. '(((' → logprob: -22.125
    8. '(s' → logprob: -22.625
    9. '(d' → logprob: -23.625
    10. '([(' → logprob: -23.625

Token 603: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.988221684878226e-06
    2. '(s' → logprob: -12.125006675720215
    3. ' s' → logprob: -13.500006675720215
    4. '	s' → logprob: -17.62500762939453
    5. ' (' → logprob: -17.62500762939453
    6. '(' → logprob: -18.00000762939453
    7. ')s' → logprob: -18.50000762939453
    8. ')' → logprob: -18.50000762939453
    9. '   ' → logprob: -18.62500762939453
    10. ' ' → logprob: -18.62500762939453

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02389366924762726
    2. ',s' → logprob: -3.7738935947418213
    3. 's' → logprob: -7.3988938331604
    4. ' ,' → logprob: -11.023893356323242
    5. '(s' → logprob: -11.273893356323242
    6. ' s' → logprob: -12.023893356323242
    7. ' ' → logprob: -15.148893356323242
    8. '(' → logprob: -15.398893356323242
    9. ',v' → logprob: -15.523893356323242
    10. ',t' → logprob: -16.023893356323242

Token 605: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0002966127940453589
    2. ' u' → logprob: -8.125296592712402
    3. ' ' → logprob: -15.250296592712402
    4. '   ' → logprob: -15.625296592712402
    5. '	u' → logprob: -16.12529754638672
    6. '  ' → logprob: -18.00029754638672
    7. ',u' → logprob: -18.37529754638672
    8. '_u' → logprob: -18.62529754638672
    9. ')' → logprob: -18.75029754638672
    10. 's' → logprob: -19.37529754638672

Token 606: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -6.825890159234405e-05
    2. ',' → logprob: -10.000068664550781
    3. ')' → logprob: -11.250068664550781
    4. ' ),' → logprob: -11.750068664550781
    5. ' ' → logprob: -15.000068664550781
    6. ',),' → logprob: -15.000068664550781
    7. '),(' → logprob: -15.125068664550781
    8. '   ' → logprob: -15.250068664550781
    9. ')+' → logprob: -15.375068664550781
    10. '},' → logprob: -15.500068664550781

Token 607: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.375003814697266
    4. ')' → logprob: -18.000003814697266
    5. '۰' → logprob: -20.000003814697266
    6. '```' → logprob: -20.375003814697266
    7. '       ' → logprob: -20.750003814697266
    8. '  ' → logprob: -21.312503814697266
    9. '	' → logprob: -21.437503814697266
    10. '    ' → logprob: -21.750003814697266

Token 608: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. ')' → logprob: -18.750001907348633
    4. '۰' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '

' → logprob: -20.750001907348633
    7. '```' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.625001907348633
    9. '  
' → logprob: -22.062501907348633
    10. '０' → logprob: -22.187501907348633

Token 609: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')+' → logprob: -12.500003814697266
    3. ' )' → logprob: -17.000003814697266
    4. ']' → logprob: -17.750003814697266
    5. '+' → logprob: -17.875003814697266
    6. '```' → logprob: -18.500003814697266
    7. '()' → logprob: -19.250003814697266
    8. '）' → logprob: -19.250003814697266
    9. '')' → logprob: -19.625003814697266
    10. '}' → logprob: -19.750003814697266

Token 610: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741702675819397
    2. ' +' → logprob: -0.9741702675819397
    3. '+d' → logprob: -9.599170684814453
    4. '()+' → logprob: -11.724170684814453
    5. 'd' → logprob: -12.099170684814453
    6. '0' → logprob: -13.099170684814453
    7. ')' → logprob: -13.099170684814453
    8. '1' → logprob: -13.224170684814453
    9. ')+' → logprob: -13.599170684814453
    10. ' ' → logprob: -13.724170684814453

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -15.62510871887207
    4. '  ' → logprob: -19.62510871887207
    5. '```' → logprob: -20.00010871887207
    6. ' ' → logprob: -21.37510871887207
    7. '	' → logprob: -22.62510871887207
    8. '
' → logprob: -23.00010871887207
    9. '0' → logprob: -23.25010871887207
    10. '       ' → logprob: -23.37510871887207

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.625011444091797
    4. '  ' → logprob: -20.625011444091797
    5. '```' → logprob: -21.375011444091797
    6. '       ' → logprob: -23.000011444091797
    7. '    ' → logprob: -23.125011444091797
    8. '     ' → logprob: -23.500011444091797
    9. '１' → logprob: -23.625011444091797
    10. '۱' → logprob: -23.750011444091797

Token 613: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016861737822182477
    2. 'e' → logprob: -8.750168800354004
    3. '#' → logprob: -12.000168800354004
    4. '       ' → logprob: -13.625168800354004
    5. '(e' → logprob: -13.750168800354004
    6. '    
' → logprob: -14.625168800354004
    7. ' e' → logprob: -14.625168800354004
    8. '```' → logprob: -15.875168800354004
    9. '	e' → logprob: -15.875168800354004
    10. '  ' → logprob: -16.375167846679688

Token 614: '   ' (ID: 271)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.9040898880339228e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' e' → logprob: -13.500028610229492
    4. '	e' → logprob: -18.125028610229492
    5. '    
' → logprob: -19.250028610229492
    6. '       ' → logprob: -19.625028610229492
    7. '```' → logprob: -20.000028610229492
    8. ' ' → logprob: -20.125028610229492
    9. '  ' → logprob: -20.125028610229492
    10. '(e' → logprob: -20.750028610229492

Token 615: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0001314295077463612
    2. '   ' → logprob: -9.000131607055664
    3. ' e' → logprob: -11.750131607055664
    4. '	e' → logprob: -17.375131607055664
    5. 'if' → logprob: -17.625131607055664
    6. '       ' → logprob: -17.750131607055664
    7. ' ' → logprob: -17.750131607055664
    8. '  ' → logprob: -18.250131607055664
    9. '    
' → logprob: -18.375131607055664
    10. '
' → logprob: -18.875131607055664

Token 616: ' On' (ID: 2160)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0445127372804563e-05
    2. ' e' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.50001049041748
    4. '#' → logprob: -18.625009536743164
    5. '
' → logprob: -19.375009536743164
    6. ' ' → logprob: -19.625009536743164
    7. 'if' → logprob: -20.250009536743164
    8. '	e' → logprob: -20.250009536743164
    9. '       ' → logprob: -21.125009536743164
    10. '  ' → logprob: -21.500009536743164

Token 617: ' fait' (ID: 7473)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.43029603362083435
    2. 'e' → logprob: -1.5552960634231567
    3. '[e' → logprob: -2.055295944213867
    4. '[' → logprob: -4.680295944213867
    5. ' e' → logprob: -7.680295944213867
    6. '[
' → logprob: -8.180295944213867
    7. '   ' → logprob: -8.680295944213867
    8. ' [(' → logprob: -8.680295944213867
    9. '(e' → logprob: -10.430295944213867
    10. ' [' → logprob: -10.805295944213867

Token 618: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008664090186357498
    2. ' e' → logprob: -4.758664131164551
    3. '(e' → logprob: -10.13366413116455
    4. '(' → logprob: -13.13366413116455
    5. '[(' → logprob: -13.13366413116455
    6. '   ' → logprob: -13.50866413116455
    7. '[e' → logprob: -13.50866413116455
    8. '	e' → logprob: -13.88366413116455
    9. '#' → logprob: -14.88366413116455
    10. ' ' → logprob: -15.00866413116455

Token 619: ' même' (ID: 9679)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04840327426791191
    2. 'm' → logprob: -3.548403263092041
    3. 'l' → logprob: -5.298403263092041
    4. ' e' → logprob: -5.423403263092041
    5. ' même' → logprob: -5.923403263092041
    6. '#' → logprob: -6.423403263092041
    7. 'lex' → logprob: -7.048403263092041
    8. '(e' → logprob: -7.298403263092041
    9. '[(' → logprob: -7.423403263092041
    10. '[e' → logprob: -7.673403263092041

Token 620: ' pour' (ID: 1930)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.7118786573410034
    2. '((' → logprob: -1.2118786573410034
    3. '   ' → logprob: -1.5868786573410034
    4. '(e' → logprob: -5.711878776550293
    5. 'for' → logprob: -5.711878776550293
    6. 'e' → logprob: -8.961878776550293
    7. '(' → logprob: -9.336878776550293
    8. ' for' → logprob: -9.336878776550293
    9. ' (' → logprob: -10.086878776550293
    10. 'if' → logprob: -10.211878776550293

Token 621: ' (' (ID: 350)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03838903456926346
    2. '(e' → logprob: -3.288388967514038
    3. '((' → logprob: -9.038389205932617
    4. ' e' → logprob: -9.163389205932617
    5. ' (' → logprob: -9.413389205932617
    6. '   ' → logprob: -10.413389205932617
    7. '(' → logprob: -12.538389205932617
    8. '(d' → logprob: -13.788389205932617
    9. '
' → logprob: -13.788389205932617
    10. 'd' → logprob: -13.913389205932617

Token 622: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0005182435852475464
    2. '(v' → logprob: -7.875518321990967
    3. '(s' → logprob: -9.500517845153809
    4. '(u' → logprob: -10.000517845153809
    5. ' (' → logprob: -11.000517845153809
    6. '(' → logprob: -15.125517845153809
    7. 't' → logprob: -15.375517845153809
    8. '((' → logprob: -15.750517845153809
    9. '   ' → logprob: -15.875517845153809
    10. '(tuple' → logprob: -16.375518798828125

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024834630312398076
    2. ',v' → logprob: -8.375247955322266
    3. ' ,' → logprob: -11.250247955322266
    4. 'v' → logprob: -12.375247955322266
    5. ',
' → logprob: -15.000247955322266
    6. ',t' → logprob: -15.750247955322266
    7. ',u' → logprob: -16.250247955322266
    8. '[::-' → logprob: -17.375247955322266
    9. ',r' → logprob: -17.625247955322266
    10. '   ' → logprob: -18.250247955322266

Token 624: ' v' (ID: 323)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.039371829479932785
    2. 'v' → logprob: -3.5393717288970947
    3. '(t' → logprob: -4.664371967315674
    4. ' (' → logprob: -9.039371490478516
    5. '(' → logprob: -10.789371490478516
    6. ' v' → logprob: -11.789371490478516
    7. 't' → logprob: -13.289371490478516
    8. '(u' → logprob: -14.664371490478516
    9. '(r' → logprob: -15.289371490478516
    10. '(s' → logprob: -15.914371490478516

Token 625: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1724110096693039
    2. '),' → logprob: -2.0474109649658203
    3. ',' → logprob: -3.6724109649658203
    4. ')]' → logprob: -6.42241096496582
    5. '],' → logprob: -6.79741096496582
    6. ']' → logprob: -7.67241096496582
    7. ' ,' → logprob: -9.17241096496582
    8. '   ' → logprob: -9.67241096496582
    9. ' )' → logprob: -9.79741096496582
    10. '])' → logprob: -9.79741096496582

Token 626: ' dans' (ID: 2671)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.051523249596357346
    2. '[e' → logprob: -3.051523208618164
    3. '   ' → logprob: -6.176523208618164
    4. ' e' → logprob: -7.301523208618164
    5. '[(' → logprob: -9.051523208618164
    6. '(e' → logprob: -10.426523208618164
    7. '```' → logprob: -11.551523208618164
    8. '	e' → logprob: -11.801523208618164
    9. '    
' → logprob: -13.051523208618164
    10. '
' → logprob: -13.176523208618164

Token 627: ' le' (ID: 505)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023248855024576187
    2. ' e' → logprob: -3.7732489109039307
    3. '(e' → logprob: -12.898248672485352
    4. '   ' → logprob: -14.648248672485352
    5. ' ' → logprob: -15.273248672485352
    6. '	e' → logprob: -16.02324867248535
    7. '
' → logprob: -17.27324867248535
    8. '  ' → logprob: -17.52324867248535
    9. '(' → logprob: -18.52324867248535
    10. '    ' → logprob: -18.89824867248535

Token 628: ' diction' (ID: 155259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00015872348740231246
    2. ' e' → logprob: -8.750158309936523
    3. '
' → logprob: -16.250158309936523
    4. '   ' → logprob: -16.750158309936523
    5. ' ' → logprob: -16.875158309936523
    6. ''e' → logprob: -17.500158309936523
    7. '	e' → logprob: -17.625158309936523
    8. '  ' → logprob: -17.875158309936523
    9. 'е' → logprob: -18.875158309936523
    10. '`' → logprob: -18.875158309936523

Token 629: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.4180607497692108
    2. 'aire' → logprob: -1.9180607795715332
    3. 'a' → logprob: -2.168060779571533
    4. 'e' → logprob: -2.918060779571533
    5. 'ary' → logprob: -3.793060779571533
    6. 'n' → logprob: -6.793060779571533
    7. 'ar' → logprob: -6.918060779571533
    8. 'er' → logprob: -8.043060302734375
    9. ' e' → logprob: -8.418060302734375
    10. 'r' → logprob: -8.668060302734375

Token 630: ' '' (ID: 461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.253713218029588e-05
    2. ' e' → logprob: -10.000062942504883
    3. '(e' → logprob: -11.125062942504883
    4. '   ' → logprob: -13.250062942504883
    5. '	e' → logprob: -15.375062942504883
    6. '[e' → logprob: -15.625062942504883
    7. '
' → logprob: -16.250062942504883
    8. '  ' → logprob: -17.125062942504883
    9. ' ' → logprob: -17.375062942504883
    10. '       ' → logprob: -17.750062942504883

Token 631: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.054500666621607e-06
    2. ' e' → logprob: -12.75000286102295
    3. '
' → logprob: -17.625003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '(e' → logprob: -17.750003814697266
    6. '	e' → logprob: -19.000003814697266
    7. 'е' → logprob: -19.500003814697266
    8. '  ' → logprob: -19.625003814697266
    9. ' ' → logprob: -19.750003814697266
    10. '```' → logprob: -19.875003814697266

Token 632: ''
' (ID: 2207)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09177138656377792
    2. '   ' → logprob: -2.466771364212036
    3. '[e' → logprob: -6.716771602630615
    4. ' e' → logprob: -7.091771602630615
    5. ')' → logprob: -7.591771602630615
    6. ')e' → logprob: -9.091771125793457
    7. '(e' → logprob: -10.091771125793457
    8. ']' → logprob: -10.216771125793457
    9. '	e' → logprob: -10.591771125793457
    10. '
' → logprob: -10.716771125793457

Token 633: '   ' (ID: 271)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03924667090177536
    2. ' e' → logprob: -3.5392465591430664
    3. '   ' → logprob: -4.664246559143066
    4. '	e' → logprob: -11.414246559143066
    5. '[e' → logprob: -12.539246559143066
    6. ')e' → logprob: -12.789246559143066
    7. ' ' → logprob: -13.539246559143066
    8. '
' → logprob: -13.539246559143066
    9. '```' → logprob: -13.539246559143066
    10. ',e' → logprob: -13.664246559143066

Token 634: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -1.9361264946837764e-07
    2. ' e' → logprob: -15.75
    3. '   ' → logprob: -20.625
    4. '	e' → logprob: -24.125
    5. '       ' → logprob: -24.625
    6. '(e' → logprob: -25.375
    7. 'е' → logprob: -25.625
    8. 'ｅ' → logprob: -26.25
    9. '[e' → logprob: -26.5
    10. '_e' → logprob: -27.125

Token 635: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. '[t' → logprob: -16.125
    4. '((' → logprob: -18.75
    5. ' [(' → logprob: -19.375
    6. '(t' → logprob: -19.5
    7. '.setdefault' → logprob: -19.5
    8. '
' → logprob: -19.875
    9. '[((' → logprob: -20.0
    10. '(' → logprob: -20.25

Token 636: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2664456789934775e-06
    2. '(t' → logprob: -14.250000953674316
    3. ' t' → logprob: -14.375000953674316
    4. '	t' → logprob: -17.375001907348633
    5. 's' → logprob: -19.000001907348633
    6. ')t' → logprob: -19.500001907348633
    7. ''t' → logprob: -20.375001907348633
    8. '`t' → logprob: -20.625001907348633
    9. ')' → logprob: -20.875001907348633
    10. '   ' → logprob: -20.875001907348633

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.138441237155348e-05
    2. ',v' → logprob: -9.375091552734375
    3. ' ,' → logprob: -12.250091552734375
    4. ',t' → logprob: -13.375091552734375
    5. ',
' → logprob: -16.000091552734375
    6. ',u' → logprob: -17.750091552734375
    7. 'v' → logprob: -19.125091552734375
    8. ',y' → logprob: -19.375091552734375
    9. ',e' → logprob: -19.625091552734375
    10. ',
' → logprob: -20.625091552734375

Token 638: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015023599844425917
    2. ' v' → logprob: -6.501502513885498
    3. '	v' → logprob: -17.376502990722656
    4. ')v' → logprob: -19.126502990722656
    5. '(v' → logprob: -19.876502990722656
    6. ' ' → logprob: -20.376502990722656
    7. ',v' → logprob: -20.751502990722656
    8. '$v' → logprob: -21.126502990722656
    9. ')' → logprob: -21.251502990722656
    10. 'u' → logprob: -21.376502990722656

Token 639: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02977016009390354
    2. ']' → logprob: -3.5297701358795166
    3. ')' → logprob: -11.029769897460938
    4. ']=' → logprob: -12.904769897460938
    5. '])' → logprob: -14.779769897460938
    6. ',' → logprob: -15.404769897460938
    7. ' ]' → logprob: -15.654769897460938
    8. ']]' → logprob: -15.779769897460938
    9. '],' → logprob: -16.904769897460938
    10. '')]' → logprob: -17.779769897460938

Token 640: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011724866926670074
    2. ' =' → logprob: -6.7511725425720215
    3. '=e' → logprob: -13.001172065734863
    4. ']' → logprob: -16.87617301940918
    5. ']=' → logprob: -18.50117301940918
    6. ')' → logprob: -19.00117301940918
    7. 'e' → logprob: -19.50117301940918
    8. ' ' → logprob: -20.50117301940918
    9. '=d' → logprob: -21.12617301940918
    10. ')=' → logprob: -21.12617301940918

Token 641: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005532711511477828
    2. ' e' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.625553131103516
    4. '	e' → logprob: -16.500553131103516
    5. '  ' → logprob: -18.625553131103516
    6. ' ' → logprob: -18.750553131103516
    7. '       ' → logprob: -19.750553131103516
    8. '    ' → logprob: -19.750553131103516
    9. '(e' → logprob: -20.250553131103516
    10. 'ｅ' → logprob: -21.000553131103516

Token 642: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.37500286102295
    3. 'get' → logprob: -13.50000286102295
    4. ' .' → logprob: -16.125003814697266
    5. '.setdefault' → logprob: -16.750003814697266
    6. 'e' → logprob: -17.750003814697266
    7. '   ' → logprob: -20.750003814697266
    8. '{}.' → logprob: -21.000003814697266
    9. '..' → logprob: -21.250003814697266
    10. '```' → logprob: -21.250003814697266

Token 643: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.500000953674316
    3. '(t' → logprob: -15.625000953674316
    4. ' ((' → logprob: -16.0
    5. ' ' → logprob: -17.25
    6. '[(' → logprob: -17.5
    7. '(e' → logprob: -18.5
    8. '(
' → logprob: -19.125
    9. 'e' → logprob: -19.25
    10. ')((' → logprob: -19.625

Token 644: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5759627223014832
    2. '(t' → logprob: -0.8259627223014832
    3. ' (' → logprob: -11.200963020324707
    4. ' t' → logprob: -12.200963020324707
    5. '(' → logprob: -13.200963020324707
    6. 's' → logprob: -14.325963020324707
    7. '	t' → logprob: -14.450963020324707
    8. '   ' → logprob: -14.700963020324707
    9. ')' → logprob: -15.075963020324707
    10. ' ' → logprob: -15.575963020324707

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030072962399572134
    2. ',t' → logprob: -6.253007411956787
    3. ',v' → logprob: -6.878007411956787
    4. 't' → logprob: -10.503006935119629
    5. ' ,' → logprob: -11.878006935119629
    6. 'v' → logprob: -11.878006935119629
    7. '(t' → logprob: -12.378006935119629
    8. '[t' → logprob: -14.253006935119629
    9. ' t' → logprob: -14.628006935119629
    10. ',
' → logprob: -14.878006935119629

Token 646: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.968934758333489e-05
    2. ' v' → logprob: -9.625069618225098
    3. '(v' → logprob: -12.750069618225098
    4. 'u' → logprob: -15.250069618225098
    5. '1' → logprob: -16.750070571899414
    6. ')v' → logprob: -16.750070571899414
    7. '0' → logprob: -16.875070571899414
    8. '(t' → logprob: -17.250070571899414
    9. '	v' → logprob: -17.250070571899414
    10. ')' → logprob: -17.500070571899414

Token 647: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010080387583002448
    2. '),' → logprob: -7.001008033752441
    3. ' ,' → logprob: -9.751008033752441
    4. '(),' → logprob: -10.376008033752441
    5. ')' → logprob: -12.251008033752441
    6. ' ' → logprob: -14.126008033752441
    7. '   ' → logprob: -15.376008033752441
    8. '],' → logprob: -15.376008033752441
    9. '',' → logprob: -15.626008033752441
    10. ',),' → logprob: -15.751008033752441

Token 648: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.50004005432129
    4. '۰' → logprob: -20.12504005432129
    5. '  ' → logprob: -20.75004005432129
    6. ' ' → logprob: -21.25004005432129
    7. '    ' → logprob: -21.50004005432129
    8. ')' → logprob: -21.50004005432129
    9. '０' → logprob: -21.75004005432129
    10. '1' → logprob: -22.00004005432129

Token 649: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.750001907348633
    4. '۰' → logprob: -20.500001907348633
    5. '０' → logprob: -21.625001907348633
    6. 'e' → logprob: -21.625001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '    ' → logprob: -22.250001907348633
    9. '     ' → logprob: -22.625001907348633
    10. ')' → logprob: -22.875001907348633

Token 650: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001963881659321487
    2. ' ,' → logprob: -8.75019645690918
    3. ',(' → logprob: -10.87519645690918
    4. ')' → logprob: -11.12519645690918
    5. '(),' → logprob: -13.50019645690918
    6. '),' → logprob: -13.62519645690918
    7. '((' → logprob: -14.00019645690918
    8. '(' → logprob: -14.87519645690918
    9. '   ' → logprob: -15.62519645690918
    10. ',t' → logprob: -16.62519645690918

Token 651: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31327295303344727
    2. ' +' → logprob: -1.3132729530334473
    3. ')' → logprob: -12.563272476196289
    4. '=' → logprob: -12.688272476196289
    5. '1' → logprob: -13.313272476196289
    6. ' ' → logprob: -13.688272476196289
    7. '0' → logprob: -14.188272476196289
    8. '()+' → logprob: -14.938272476196289
    9. '   ' → logprob: -15.688272476196289
    10. '(' → logprob: -15.938272476196289

Token 652: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.25002670288086
    4. ')' → logprob: -19.75002670288086
    5. '+' → logprob: -20.50002670288086
    6. '(' → logprob: -20.75002670288086
    7. '0' → logprob: -21.12502670288086
    8. '  ' → logprob: -21.12502670288086
    9. 'e' → logprob: -21.37502670288086
    10. '```' → logprob: -21.75002670288086

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -20.625
    5. '
' → logprob: -22.6875
    6. '１' → logprob: -22.75
    7. '0' → logprob: -22.8125
    8. '۱' → logprob: -22.875
    9. '  ' → logprob: -22.9375
    10. '=' → logprob: -23.0625

Token 654: '

' (ID: 279)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.34816741943359375
    2. 'res' → logprob: -1.8481674194335938
    3. 'result' → logprob: -2.3481674194335938
    4. 'answer' → logprob: -3.4731674194335938
    5. 'r' → logprob: -5.473167419433594
    6. 'rés' → logprob: -6.348167419433594
    7. '#' → logprob: -6.848167419433594
    8. 'total' → logprob: -7.223167419433594
    9. 'cnt' → logprob: -7.473167419433594
    10. 'count' → logprob: -7.473167419433594

Token 655: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.36305543780326843
    2. 'result' → logprob: -1.9880554676055908
    3. 'res' → logprob: -2.113055467605591
    4. 'answer' → logprob: -3.238055467605591
    5. 'r' → logprob: -5.488055229187012
    6. 'rés' → logprob: -6.988055229187012
    7. 'total' → logprob: -7.113055229187012
    8. 'count' → logprob: -8.238055229187012
    9. 'x' → logprob: -8.238055229187012
    10. 's' → logprob: -8.738055229187012

Token 656: ' Initialise' (ID: 179601)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4706481099128723
    2. 'res' → logprob: -1.7206480503082275
    3. 'result' → logprob: -2.3456480503082275
    4. 'answer' → logprob: -2.8456480503082275
    5. 'r' → logprob: -3.3456480503082275
    6. 'count' → logprob: -6.220648288726807
    7. 'a' → logprob: -7.095648288726807
    8. 'c' → logprob: -7.220648288726807
    9. 'total' → logprob: -7.220648288726807
    10. 'rés' → logprob: -7.470648288726807

Token 657: ' un' (ID: 537)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38521379232406616
    2. 'res' → logprob: -2.010213851928711
    3. 'result' → logprob: -2.385213851928711
    4. 'answer' → logprob: -2.635213851928711
    5. 'r' → logprob: -4.010213851928711
    6. 'count' → logprob: -6.260213851928711
    7. 'rez' → logprob: -7.885213851928711
    8. 'total' → logprob: -8.260213851928711
    9. 'cnt' → logprob: -8.260213851928711
    10. 'a' → logprob: -8.385213851928711

Token 658: ' compteur' (ID: 163344)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11930336058139801
    2. 'res' → logprob: -3.3693034648895264
    3. 'ans' → logprob: -3.6193034648895264
    4. 'total' → logprob: -3.6193034648895264
    5. 'answer' → logprob: -4.244303226470947
    6. 'count' → logprob: -4.994303226470947
    7. 'r' → logprob: -6.744303226470947
    8. 'rés' → logprob: -6.994303226470947
    9. 'counter' → logprob: -7.369303226470947
    10. 'comp' → logprob: -8.494303703308105

Token 659: ' à' (ID: 1221)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6737726330757141
    2. 'ans' → logprob: -0.9237726330757141
    3. 'answer' → logprob: -2.9237725734710693
    4. 'res' → logprob: -3.9237725734710693
    5. 'result' → logprob: -4.673772811889648
    6. 'cnt' → logprob: -5.173772811889648
    7. 'counter' → logprob: -6.298772811889648
    8. 'total' → logprob: -6.923772811889648
    9. 'comp' → logprob: -7.048772811889648
    10. 'c' → logprob: -7.048772811889648

Token 660: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '=' → logprob: -21.375
    4. 'zero' → logprob: -23.125
    5. '```' → logprob: -23.875
    6. '۰' → logprob: -24.25
    7. 'int' → logprob: -24.25
    8. '_' → logprob: -24.375
    9. '
' → logprob: -24.75
    10. '000' → logprob: -24.75

Token 661: ';' (ID: 26)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7849698066711426
    2. 'ans' → logprob: -1.0349698066711426
    3. 'res' → logprob: -2.4099698066711426
    4. 'answer' → logprob: -2.9099698066711426
    5. 'result' → logprob: -3.9099698066711426
    6. 'cnt' → logprob: -4.409969806671143
    7. 'c' → logprob: -5.534969806671143
    8. 'counter' → logprob: -5.534969806671143
    9. 'comp' → logprob: -6.034969806671143
    10. 'total' → logprob: -7.284969806671143

Token 662: ' il' (ID: 1793)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5355458855628967
    2. 'ans' → logprob: -1.410545825958252
    3. 'res' → logprob: -2.785545825958252
    4. 'answer' → logprob: -3.035545825958252
    5. 'result' → logprob: -3.785545825958252
    6. 'cnt' → logprob: -4.410545825958252
    7. 'c' → logprob: -4.785545825958252
    8. 'counter' → logprob: -4.785545825958252
    9. 'comp' → logprob: -5.035545825958252
    10. 'r' → logprob: -6.660545825958252

Token 663: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002478273818269372
    2. ' =' → logprob: -6.002478122711182
    3. '=
' → logprob: -14.37747859954834
    4. '+=' → logprob: -14.62747859954834
    5. '=

' → logprob: -14.62747859954834
    6. 'count' → logprob: -14.75247859954834
    7. '=count' → logprob: -15.50247859954834
    8. ',' → logprob: -15.50247859954834
    9. 's' → logprob: -16.002477645874023
    10. '=sum' → logprob: -17.377477645874023

Token 664: 'ira' (ID: 2633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3731560707092285
    2. 'a' → logprob: -1.3731560707092285
    3. ' =' → logprob: -4.1231560707092285
    4. '#' → logprob: -4.3731560707092285
    5. 'ant' → logprob: -4.9981560707092285
    6. 'count' → logprob: -5.1231560707092285
    7. 'ent' → logprob: -5.4981560707092285
    8. 'ait' → logprob: -5.7481560707092285
    9. 'i' → logprob: -6.6231560707092285
    10. 'à' → logprob: -7.1231560707092285

Token 665: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9394692182540894
    2. 'count' → logprob: -1.4394692182540894
    3. 'ans' → logprob: -2.189469337463379
    4. 'a' → logprob: -2.564469337463379
    5. '0' → logprob: -2.814469337463379
    6. 'total' → logprob: -3.314469337463379
    7. '=' → logprob: -3.814469337463379
    8. 'result' → logprob: -3.814469337463379
    9. 'answer' → logprob: -3.814469337463379
    10. 'comp' → logprob: -5.314469337463379

Token 666: ' compter' (ID: 81694)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050263404846191406
    2. 'comp' → logprob: -3.1752634048461914
    3. 'count' → logprob: -5.675263404846191
    4. 'result' → logprob: -6.050263404846191
    5. 'com' → logprob: -7.800263404846191
    6. 'ans' → logprob: -8.300263404846191
    7. 'sum' → logprob: -8.425263404846191
    8. 'res' → logprob: -9.050263404846191
    9. 's' → logprob: -9.175263404846191
    10. 'cnt' → logprob: -9.425263404846191

Token 667: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.37334391474723816
    2. 'count' → logprob: -1.6233439445495605
    3. 'res' → logprob: -2.8733439445495605
    4. 'result' → logprob: -3.6233439445495605
    5. 'answer' → logprob: -3.8733439445495605
    6. 'cnt' → logprob: -4.8733439445495605
    7. 'total' → logprob: -6.7483439445495605
    8. 'comp' → logprob: -7.3733439445495605
    9. 'counter' → logprob: -7.6233439445495605
    10. 'c' → logprob: -8.248343467712402

Token 668: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11726783961057663
    2. 'total' → logprob: -2.8672678470611572
    3. '0' → logprob: -4.117267608642578
    4. 'res' → logprob: -4.867267608642578
    5. 'count' → logprob: -4.992267608642578
    6. 'rés' → logprob: -4.992267608642578
    7. 'comp' → logprob: -5.492267608642578
    8. 'ans' → logprob: -5.742267608642578
    9. 'nombre' → logprob: -5.742267608642578
    10. 'answer' → logprob: -6.117267608642578

Token 669: ' final' (ID: 1721)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.536835789680481
    2. 'total' → logprob: -1.286835789680481
    3. 'res' → logprob: -2.7868356704711914
    4. 'ans' → logprob: -3.1618356704711914
    5. 'answer' → logprob: -4.661835670471191
    6. 'count' → logprob: -4.661835670471191
    7. '#' → logprob: -4.661835670471191
    8. 'rés' → logprob: -6.161835670471191
    9. '=' → logprob: -6.536835670471191
    10. 'de' → logprob: -6.661835670471191

Token 670: ' recher' (ID: 19259)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5825860500335693
    2. 'count' → logprob: -1.0825860500335693
    3. 'res' → logprob: -3.4575860500335693
    4. 'result' → logprob: -3.4575860500335693
    5. 'answer' → logprob: -3.4575860500335693
    6. 'cnt' → logprob: -5.332586288452148
    7. 'counter' → logprob: -6.582586288452148
    8. 'total' → logprob: -6.582586288452148
    9. 'comp' → logprob: -7.707586288452148
    10. 'c' → logprob: -8.832586288452148

Token 671: 'ché' (ID: 27299)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.2508101165294647
    2. 'e' → logprob: -2.625810146331787
    3. 'u' → logprob: -2.875810146331787
    4. 'é' → logprob: -3.250810146331787
    5. 'er' → logprob: -3.500810146331787
    6. 'ateur' → logprob: -4.625810146331787
    7. 'ur' → logprob: -4.750810146331787
    8. '=' → logprob: -5.875810146331787
    9. 'uer' → logprob: -7.250810146331787
    10. 'count' → logprob: -8.125809669494629

Token 672: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2185877412557602
    2. 'ans' → logprob: -1.9685877561569214
    3. 'res' → logprob: -4.093587875366211
    4. 'result' → logprob: -4.093587875366211
    5. 'answer' → logprob: -4.468587875366211
    6. 'cnt' → logprob: -4.593587875366211
    7. 'counter' → logprob: -7.343587875366211
    8. 'c' → logprob: -7.468587875366211
    9. 'total' → logprob: -8.343587875366211
    10. 'comp' → logprob: -8.468587875366211

Token 673: 'a' (ID: 64)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2009868621826172
    2. 'ans' → logprob: -2.700986862182617
    3. 'result' → logprob: -3.075986862182617
    4. 'answer' → logprob: -3.575986862182617
    5. 'res' → logprob: -3.825986862182617
    6. 'counter' → logprob: -4.700986862182617
    7. 'cnt' → logprob: -5.325986862182617
    8. 'comp' → logprob: -5.825986862182617
    9. 'c' → logprob: -6.825986862182617
    10. 'total' → logprob: -7.075986862182617

Token 674: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07924523204565048
    2. '=' → logprob: -2.5792453289031982
    3. ' ' → logprob: -8.329245567321777
    4. 'a' → logprob: -9.829245567321777
    5. '   ' → logprob: -11.329245567321777
    6. ' +=' → logprob: -11.579245567321777
    7. '  ' → logprob: -11.829245567321777
    8. ',' → logprob: -12.079245567321777
    9. ' ' → logprob: -12.329245567321777
    10. '	' → logprob: -12.579245567321777

Token 675: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '000' → logprob: -21.625001907348633
    5. '۰' → logprob: -21.750001907348633
    6. '=' → logprob: -22.125001907348633
    7. '０' → logprob: -23.000001907348633
    8. '  ' → logprob: -23.250001907348633
    9. '```' → logprob: -23.375001907348633
    10. 'a' → logprob: -23.750001907348633

Token 676: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '000' → logprob: -21.0
    4. '   ' → logprob: -22.375
    5. '０' → logprob: -22.5
    6. '۰' → logprob: -22.5
    7. 'int' → logprob: -23.125
    8. '00' → logprob: -23.125
    9. '=' → logprob: -23.625
    10. '```' → logprob: -23.875

Token 677: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.491498531133402e-06
    2. ' for' → logprob: -11.750009536743164
    3. '
' → logprob: -13.750009536743164
    4. '<|end|>' → logprob: -15.250009536743164
    5. '#' → logprob: -16.250009536743164
    6. '```' → logprob: -16.625009536743164
    7. '   ' → logprob: -17.500009536743164
    8. '  
' → logprob: -18.125009536743164
    9. '    
' → logprob: -18.500009536743164
    10. '	for' → logprob: -20.250009536743164

Token 678: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -16.125
    3. '
' → logprob: -16.375
    4. '```' → logprob: -19.125
    5. '#' → logprob: -19.625
    6. '   ' → logprob: -21.5
    7. '	for' → logprob: -22.875
    8. '    
' → logprob: -23.125
    9. '``' → logprob: -23.5
    10. '

' → logprob: -23.875

Token 679: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -19.75
    3. '#' → logprob: -22.125
    4. '
' → logprob: -22.375
    5. '   ' → logprob: -25.625
    6. '```' → logprob: -25.625
    7. '	for' → logprob: -26.75
    8. 'from' → logprob: -27.25
    9. '

' → logprob: -27.375
    10. 'For' → logprob: -28.375

Token 680: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0660705715417862
    2. 'ours' → logprob: -2.941070556640625
    3. 'ourt' → logprob: -4.566070556640625
    4. 'for' → logprob: -8.316070556640625
    5. 'ou' → logprob: -9.316070556640625
    6. '#' → logprob: -9.316070556640625
    7. 'oure' → logprob: -9.691070556640625
    8. 'or' → logprob: -10.066070556640625
    9. 'orr' → logprob: -10.441070556640625
    10. 'ous' → logprob: -10.566070556640625

Token 681: ' toutes' (ID: 17502)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029505150392651558
    2. ' d' → logprob: -3.6545052528381348
    3. 'for' → logprob: -5.904505252838135
    4. ' for' → logprob: -8.154504776000977
    5. '(d' → logprob: -10.279504776000977
    6. '((' → logprob: -10.279504776000977
    7. '(' → logprob: -10.279504776000977
    8. 'e' → logprob: -10.404504776000977
    9. ' (' → logprob: -10.904504776000977
    10. 'key' → logprob: -11.029504776000977

Token 682: ' les' (ID: 1341)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.22337624430656433
    2. 'for' → logprob: -2.4733762741088867
    3. ' key' → logprob: -3.7233762741088867
    4. '(key' → logprob: -3.8483762741088867
    5. 'd' → logprob: -3.9733762741088867
    6. 'keys' → logprob: -4.598376274108887
    7. 'clé' → logprob: -4.723376274108887
    8. '(d' → logprob: -4.723376274108887
    9. '((' → logprob: -4.848376274108887
    10. '(' → logprob: -5.848376274108887

Token 683: ' clés' (ID: 96616)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2022293508052826
    2. 'clé' → logprob: -2.4522292613983154
    3. 'k' → logprob: -3.0772292613983154
    4. 'keys' → logprob: -3.3272292613983154
    5. 'cl' → logprob: -4.9522294998168945
    6. 'for' → logprob: -6.7022294998168945
    7. '(k' → logprob: -6.7022294998168945
    8. 'cle' → logprob: -6.9522294998168945
    9. '(key' → logprob: -7.0772294998168945
    10. ' clés' → logprob: -7.0772294998168945

Token 684: ' du' (ID: 1462)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12829174101352692
    2. ' in' → logprob: -2.7532918453216553
    3. 'for' → logprob: -2.8782918453216553
    4. ' for' → logprob: -8.253292083740234
    5. 'dans' → logprob: -10.003292083740234
    6. '((' → logprob: -10.753292083740234
    7. '   ' → logprob: -11.378292083740234
    8. 'key' → logprob: -11.503292083740234
    9. '```' → logprob: -11.628292083740234
    10. 'd' → logprob: -11.628292083740234

Token 685: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. ' d' → logprob: -13.500001907348633
    3. '	d' → logprob: -20.500001907348633
    4. 'e' → logprob: -20.875001907348633
    5. '
' → logprob: -21.375001907348633
    6. '```' → logprob: -22.500001907348633
    7. '$d' → logprob: -22.625001907348633
    8. 'dict' → logprob: -23.375001907348633
    9. '"d' → logprob: -23.375001907348633
    10. 'for' → logprob: -23.500001907348633

Token 686: 'naire' (ID: 30464)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.5762373805046082
    2. 'naire' → logprob: -0.8262373805046082
    3. 'a' → logprob: -9.201237678527832
    4. 'aires' → logprob: -10.076237678527832
    5. 'naires' → logprob: -10.201237678527832
    6. 'e' → logprob: -10.451237678527832
    7. 'na' → logprob: -10.701237678527832
    8. 'ary' → logprob: -11.201237678527832
    9. '#' → logprob: -11.576237678527832
    10. 'iaire' → logprob: -12.076237678527832

Token 687: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016206118743866682
    2. 'for' → logprob: -8.750162124633789
    3. ' d' → logprob: -12.625162124633789
    4. ' for' → logprob: -15.250162124633789
    5. 'e' → logprob: -18.00016212463379
    6. '
' → logprob: -19.37516212463379
    7. '(d' → logprob: -19.50016212463379
    8. 'in' → logprob: -19.75016212463379
    9. 'a' → logprob: -20.25016212463379
    10. '```' → logprob: -20.50016212463379

Token 688: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.226628895296017e-06
    2. ' d' → logprob: -11.875007629394531
    3. 'e' → logprob: -16.62500762939453
    4. '	d' → logprob: -18.12500762939453
    5. '```' → logprob: -19.25000762939453
    6. '
' → logprob: -19.50000762939453
    7. ')d' → logprob: -20.25000762939453
    8. '_d' → logprob: -20.62500762939453
    9. 'a' → logprob: -21.00000762939453
    10. '   ' → logprob: -21.25000762939453

Token 689: ''
' (ID: 2207)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000353100651409477
    2. ' for' → logprob: -8.00035285949707
    3. 'in' → logprob: -11.00035285949707
    4. ':' → logprob: -14.50035285949707
    5. ' in' → logprob: -15.37535285949707
    6. ':
' → logprob: -15.50035285949707
    7. 'd' → logprob: -16.62535285949707
    8. '   ' → logprob: -18.37535285949707
    9. ')' → logprob: -20.12535285949707
    10. 'or' → logprob: -20.12535285949707

Token 690: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -18.5
    3. '```' → logprob: -21.375
    4. '   ' → logprob: -23.375
    5. '
' → logprob: -24.25
    6. 'fo' → logprob: -24.5
    7. '	for' → logprob: -25.875
    8. 'from' → logprob: -26.75
    9. 'in' → logprob: -26.875
    10. 'f' → logprob: -27.0

Token 691: ' i' (ID: 575)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06648458540439606
    2. 'k' → logprob: -3.1914846897125244
    3. 'x' → logprob: -3.8164846897125244
    4. ' key' → logprob: -6.816484451293945
    5. 'p' → logprob: -10.566484451293945
    6. 'pair' → logprob: -10.941484451293945
    7. 'clé' → logprob: -11.066484451293945
    8. 'c' → logprob: -11.816484451293945
    9. ' clé' → logprob: -12.066484451293945
    10. 'cl' → logprob: -12.191484451293945

Token 692: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5237584114074707
    2. 'in' → logprob: -0.8987584114074707
    3. 'd' → logprob: -7.523758411407471
    4. ',' → logprob: -11.023757934570312
    5. 's' → logprob: -11.273757934570312
    6. 'a' → logprob: -11.398757934570312
    7. 'key' → logprob: -11.398757934570312
    8. '   ' → logprob: -11.398757934570312
    9. 'import' → logprob: -11.898757934570312
    10. 'i' → logprob: -12.148757934570312

Token 693: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861456897109747
    2. ' d' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.758615493774414
    4. '	d' → logprob: -19.258615493774414
    5. ' ' → logprob: -19.508615493774414
    6. '  ' → logprob: -20.258615493774414
    7. '
' → logprob: -23.633615493774414
    8. ')d' → logprob: -23.758615493774414
    9. '    ' → logprob: -23.883615493774414
    10. '(d' → logprob: -24.133615493774414

Token 694: '.keys' (ID: 18392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1292270421981812
    2. 'in' → logprob: -1.1292270421981812
    3. ' in' → logprob: -1.8792270421981812
    4. '.keys' → logprob: -1.8792270421981812
    5. '):' → logprob: -4.004227161407471
    6. ',' → logprob: -4.754227161407471
    7. ')' → logprob: -5.004227161407471
    8. 's' → logprob: -5.879227161407471
    9. ':
' → logprob: -6.004227161407471
    10. '):
' → logprob: -6.129227161407471

Token 695: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.399378566537052e-05
    2. '()' → logprob: -9.625083923339844
    3. '():
' → logprob: -11.000083923339844
    4. ' ():' → logprob: -14.500083923339844
    5. '(' → logprob: -14.625083923339844
    6. '():
' → logprob: -15.875083923339844
    7. ':' → logprob: -17.500083923339844
    8. '(),' → logprob: -18.375083923339844
    9. '():

' → logprob: -18.750083923339844
    10. '()>' → logprob: -19.125083923339844

Token 696: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036792904138565063
    2. 'a' → logprob: -5.628679275512695
    3. ' a' → logprob: -9.503679275512695
    4. '	a' → logprob: -12.878679275512695
    5. 'if' → logprob: -14.003679275512695
    6. '   ' → logprob: -14.878679275512695
    7. ' if' → logprob: -15.003679275512695
    8. '       ' → logprob: -15.003679275512695
    9. '#a' → logprob: -16.003679275512695
    10. '_a' → logprob: -16.628679275512695

Token 697: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18012173473834991
    2. '   ' → logprob: -1.9301217794418335
    3. 'if' → logprob: -3.930121660232544
    4. ' if' → logprob: -10.180121421813965
    5. ' a' → logprob: -10.930121421813965
    6. '	a' → logprob: -13.055121421813965
    7. '	if' → logprob: -14.555121421813965
    8. '       ' → logprob: -14.930121421813965
    9. ' ' → logprob: -15.180121421813965
    10. '   ' → logprob: -15.430121421813965

Token 698: ' Aj' (ID: 28294)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47427430748939514
    2. 'if' → logprob: -0.9742742776870728
    3. '   ' → logprob: -8.599274635314941
    4. ' if' → logprob: -11.599274635314941
    5. ' a' → logprob: -13.724274635314941
    6. '    
' → logprob: -13.724274635314941
    7. ' ' → logprob: -14.849274635314941
    8. '  ' → logprob: -15.349274635314941
    9. '	if' → logprob: -15.474274635314941
    10. 'j' → logprob: -15.724274635314941

Token 699: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0699712336063385
    2. 'outez' → logprob: -3.3199713230133057
    3. 'outer' → logprob: -3.5699713230133057
    4. 'f' → logprob: -6.819971084594727
    5. 'out' → logprob: -7.069971084594727
    6. 'a' → logprob: -7.569971084594727
    7. '   ' → logprob: -7.944971084594727
    8. 'uste' → logprob: -8.319971084594727
    9. 'outes' → logprob: -9.069971084594727
    10. '       ' → logprob: -11.194971084594727

Token 700: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16087734699249268
    2. ' d' → logprob: -1.9108773469924927
    3. '   ' → logprob: -7.785877227783203
    4. 'e' → logprob: -9.035877227783203
    5. 'a' → logprob: -9.660877227783203
    6. ' e' → logprob: -10.160877227783203
    7. ' a' → logprob: -11.535877227783203
    8. ' ' → logprob: -13.410877227783203
    9. '       ' → logprob: -13.410877227783203
    10. '	d' → logprob: -13.910877227783203

Token 701: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001805377542041242
    2. ' a' → logprob: -8.6251802444458
    3. 'd' → logprob: -14.5001802444458
    4. 'e' → logprob: -14.5001802444458
    5. '   ' → logprob: -18.125181198120117
    6. '	a' → logprob: -18.875181198120117
    7. ' e' → logprob: -19.125181198120117
    8. ' d' → logprob: -19.500181198120117
    9. ' ' → logprob: -20.375181198120117
    10. '
' → logprob: -21.875181198120117

Token 702: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4855663721391466e-05
    2. ' a' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.000015258789062
    4. '	a' → logprob: -17.250015258789062
    5. 'e' → logprob: -19.250015258789062
    6. '_a' → logprob: -20.250015258789062
    7. ''a' → logprob: -20.625015258789062
    8. ' ' → logprob: -20.875015258789062
    9. '  ' → logprob: -21.750015258789062
    10. '
' → logprob: -21.875015258789062

Token 703: ''' (ID: 6)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5511797070503235
    2. 'd' → logprob: -1.1761796474456787
    3. '+=' → logprob: -2.6761796474456787
    4. ' +=' → logprob: -3.8011796474456787
    5. ' e' → logprob: -4.176179885864258
    6. 'e' → logprob: -4.926179885864258
    7. ' the' → logprob: -6.926179885864258
    8. '   ' → logprob: -8.801179885864258
    9. ' ' → logprob: -9.301179885864258
    10. ']+=' → logprob: -9.676179885864258

Token 704: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.48557814955711365
    2. 'd' → logprob: -0.985578179359436
    3. ' e' → logprob: -4.9855780601501465
    4. 'e' → logprob: -5.4855780601501465
    5. '   ' → logprob: -7.8605780601501465
    6. ' the' → logprob: -10.610578536987305
    7. ' =' → logprob: -10.985578536987305
    8. '=' → logprob: -11.610578536987305
    9. ' +=' → logprob: -12.360578536987305
    10. '=d' → logprob: -12.485578536987305

Token 705: ' produit' (ID: 29429)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02451922371983528
    2. ' d' → logprob: -4.024519443511963
    3. 'e' → logprob: -5.149519443511963
    4. ' e' → logprob: -7.524519443511963
    5. 'min' → logprob: -13.149518966674805
    6. ' ' → logprob: -13.524518966674805
    7. '   ' → logprob: -13.649518966674805
    8. 'a' → logprob: -13.774518966674805
    9. ' min' → logprob: -13.899518966674805
    10. '	d' → logprob: -16.024518966674805

Token 706: ' du' (ID: 1462)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012567342258989811
    2. ' d' → logprob: -4.637567520141602
    3. '(d' → logprob: -6.137567520141602
    4. '   ' → logprob: -7.762567520141602
    5. '=d' → logprob: -9.387567520141602
    6. '=' → logprob: -9.762567520141602
    7. '(' → logprob: -10.262567520141602
    8. ' =' → logprob: -10.512567520141602
    9. '(
' → logprob: -12.262567520141602
    10. ' (' → logprob: -12.637567520141602

Token 707: ' nombre' (ID: 9733)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.493430894101039e-05
    2. ' d' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. 'a' → logprob: -17.50007438659668
    5. '
' → logprob: -18.00007438659668
    6. ' ' → logprob: -18.37507438659668
    7. '(d' → logprob: -18.50007438659668
    8. '	d' → logprob: -18.62507438659668
    9. '```' → logprob: -19.12507438659668
    10. '_d' → logprob: -19.25007438659668

Token 708: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12708579003810883
    2. ' d' → logprob: -2.1270856857299805
    3. '_d' → logprob: -9.87708568572998
    4. '   ' → logprob: -10.25208568572998
    5. '(d' → logprob: -11.00208568572998
    6. 'a' → logprob: -11.25208568572998
    7. ')d' → logprob: -11.50208568572998
    8. ' ' → logprob: -12.00208568572998
    9. ')' → logprob: -12.37708568572998
    10. '=d' → logprob: -12.50208568572998

Token 709: ''occ' (ID: 158932)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011089086532592773
    2. ' d' → logprob: -4.511089324951172
    3. '(d' → logprob: -11.636089324951172
    4. ')d' → logprob: -12.386089324951172
    5. '	d' → logprob: -12.511089324951172
    6. 'a' → logprob: -12.511089324951172
    7. 'i' → logprob: -12.636089324951172
    8. '_d' → logprob: -12.636089324951172
    9. ' ' → logprob: -12.761089324951172
    10. 's' → logprob: -12.886089324951172

Token 710: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -5.908022285439074e-05
    2. 'ur' → logprob: -10.500059127807617
    3. 'urr' → logprob: -10.875059127807617
    4. 'urrence' → logprob: -12.625059127807617
    5. 'curr' → logprob: -12.625059127807617
    6. 'u' → logprob: -13.500059127807617
    7. 'urances' → logprob: -13.500059127807617
    8. 'r' → logprob: -13.875059127807617
    9. 'cur' → logprob: -14.375059127807617
    10. 'urrencies' → logprob: -14.625059127807617

Token 711: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010492119938135147
    2. ' d' → logprob: -5.135492324829102
    3. '(d' → logprob: -5.760492324829102
    4. '   ' → logprob: -6.885492324829102
    5. 'a' → logprob: -8.510492324829102
    6. 'e' → logprob: -9.760492324829102
    7. '```' → logprob: -10.885492324829102
    8. ' ' → logprob: -11.010492324829102
    9. 'i' → logprob: -11.385492324829102
    10. 'de' → logprob: -11.385492324829102

Token 712: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008130824193358421
    2. 'i' → logprob: -5.00813102722168
    3. ' d' → logprob: -7.38313102722168
    4. 'e' → logprob: -7.50813102722168
    5. '(i' → logprob: -9.50813102722168
    6. 'a' → logprob: -9.88313102722168
    7. ' i' → logprob: -10.13313102722168
    8. '(d' → logprob: -10.50813102722168
    9. '(' → logprob: -12.13313102722168
    10. '[i' → logprob: -12.32063102722168

Token 713: ' clé' (ID: 83188)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12827862799167633
    2. 'i' → logprob: -2.1282787322998047
    3. ' i' → logprob: -7.878278732299805
    4. ' d' → logprob: -8.503278732299805
    5. 'a' → logprob: -8.753278732299805
    6. '(i' → logprob: -8.878278732299805
    7. 'e' → logprob: -9.128278732299805
    8. 's' → logprob: -9.753278732299805
    9. '#' → logprob: -10.003278732299805
    10. 'code' → logprob: -10.128278732299805

Token 714: ' dans' (ID: 2671)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.083133764564991
    2. ' i' → logprob: -2.7081336975097656
    3. 'd' → logprob: -4.583133697509766
    4. '(i' → logprob: -6.833133697509766
    5. '   ' → logprob: -7.333133697509766
    6. '[i' → logprob: -7.958133697509766
    7. ' d' → logprob: -7.958133697509766
    8. ' dans' → logprob: -8.708133697509766
    9. 'dans' → logprob: -9.083133697509766
    10. 'e' → logprob: -10.083133697509766

Token 715: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003224890911951661
    2. ' d' → logprob: -6.378224849700928
    3. 'e' → logprob: -6.503224849700928
    4. ' e' → logprob: -11.003225326538086
    5. '
' → logprob: -13.253225326538086
    6. ' ' → logprob: -13.878225326538086
    7. 'a' → logprob: -14.503225326538086
    8. '   ' → logprob: -14.503225326538086
    9. '	d' → logprob: -14.628225326538086
    10. '```' → logprob: -15.003225326538086

Token 716: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008321399218402803
    2. 'e' → logprob: -7.1258320808410645
    3. ' d' → logprob: -10.750832557678223
    4. ''d' → logprob: -13.500832557678223
    5. 'a' → logprob: -13.750832557678223
    6. '```' → logprob: -14.250832557678223
    7. '`' → logprob: -14.688332557678223
    8. '	d' → logprob: -14.688332557678223
    9. ' e' → logprob: -15.125832557678223
    10. '#' → logprob: -15.188332557678223

Token 717: ''' (ID: 6)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8912379145622253
    2. ' and' → logprob: -1.6412379741668701
    3. ' i' → logprob: -1.7662379741668701
    4. '   ' → logprob: -2.51623797416687
    5. '[i' → logprob: -2.51623797416687
    6. ' et' → logprob: -4.016237735748291
    7. ',' → logprob: -4.641237735748291
    8. ')' → logprob: -4.891237735748291
    9. ' d' → logprob: -5.266237735748291
    10. 'i' → logprob: -5.391237735748291

Token 718: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4873691499233246
    2. ' *' → logprob: -1.237369179725647
    3. ' and' → logprob: -3.2373690605163574
    4. '*d' → logprob: -3.8623690605163574
    5. '*' → logprob: -4.237369060516357
    6. ' d' → logprob: -4.487369060516357
    7. 'd' → logprob: -5.112369060516357
    8. ' by' → logprob: -6.737369060516357
    9. ' et' → logprob: -7.487369060516357
    10. 'and' → logprob: -7.737369060516357

Token 719: ' le' (ID: 505)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4740923047065735
    2. ' e' → logprob: -0.9740923047065735
    3. 'd' → logprob: -11.974092483520508
    4. '   ' → logprob: -12.474092483520508
    5. '(e' → logprob: -13.724092483520508
    6. '
' → logprob: -14.099092483520508
    7. '	e' → logprob: -14.224092483520508
    8. ' the' → logprob: -14.974092483520508
    9. ' d' → logprob: -15.099092483520508
    10. ' ' → logprob: -15.099092483520508

Token 720: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02325328253209591
    2. ' e' → logprob: -3.7732532024383545
    3. '   ' → logprob: -12.023253440856934
    4. 'd' → logprob: -14.648253440856934
    5. ''e' → logprob: -15.273253440856934
    6. '`' → logprob: -15.773253440856934
    7. '```' → logprob: -16.273252487182617
    8. '(e' → logprob: -16.523252487182617
    9. '	e' → logprob: -16.648252487182617
    10. ' ' → logprob: -16.648252487182617

Token 721: ' d' (ID: 272)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1357014924287796
    2. '   ' → logprob: -2.7607014179229736
    3. ' e' → logprob: -3.5107014179229736
    4. '(e' → logprob: -3.6357014179229736
    5. 'd' → logprob: -5.385701656341553
    6. 'de' → logprob: -7.260701656341553
    7. '[e' → logprob: -7.885701656341553
    8. ' d' → logprob: -8.010701179504395
    9. '	e' → logprob: -8.010701179504395
    10. ' de' → logprob: -8.260701179504395

Token 722: ''occ' (ID: 158932)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0014027404831722379
    2. '(e' → logprob: -7.251402854919434
    3. ' e' → logprob: -8.376402854919434
    4. 'a' → logprob: -8.751402854919434
    5. '[e' → logprob: -8.751402854919434
    6. 'd' → logprob: -9.001402854919434
    7. 'o' → logprob: -12.126402854919434
    8. 'é' → logprob: -12.876402854919434
    9. '	e' → logprob: -13.001402854919434
    10. ''e' → logprob: -13.001402854919434

Token 723: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0016004408244043589
    2. 'ur' → logprob: -6.50160026550293
    3. 'urr' → logprob: -10.12660026550293
    4. 'orr' → logprob: -10.25160026550293
    5. 'curr' → logprob: -12.25160026550293
    6. 'ences' → logprob: -12.37660026550293
    7. 'érences' → logprob: -13.25160026550293
    8. 'or' → logprob: -13.50160026550293
    9. 'urrencies' → logprob: -13.50160026550293
    10. 'es' → logprob: -13.50160026550293

Token 724: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36143696308135986
    2. 'e' → logprob: -1.9864369630813599
    3. '(e' → logprob: -2.7364368438720703
    4. ' e' → logprob: -2.9864368438720703
    5. ' dans' → logprob: -4.11143684387207
    6. 'dans' → logprob: -4.36143684387207
    7. ' de' → logprob: -4.73643684387207
    8. ' in' → logprob: -5.48643684387207
    9. '  ' → logprob: -5.73643684387207
    10. 'de' → logprob: -6.61143684387207

Token 725: ' cette' (ID: 7696)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.049903515726327896
    2. ' e' → logprob: -3.049903631210327
    3. '   ' → logprob: -7.424903392791748
    4. '(e' → logprob: -7.549903392791748
    5. ' (' → logprob: -9.674903869628906
    6. '(' → logprob: -9.924903869628906
    7. ' ' → logprob: -10.674903869628906
    8. ''e' → logprob: -11.799903869628906
    9. '  ' → logprob: -12.049903869628906
    10. '	e' → logprob: -12.174903869628906

Token 726: ' clé' (ID: 83188)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.054844822734594345
    2. ' e' → logprob: -3.429844856262207
    3. 'i' → logprob: -5.429844856262207
    4. 'clé' → logprob: -5.554844856262207
    5. 'key' → logprob: -5.804844856262207
    6. '   ' → logprob: -6.429844856262207
    7. '(e' → logprob: -6.429844856262207
    8. ' clé' → logprob: -6.429844856262207
    9. ' ' → logprob: -7.179844856262207
    10. 'cle' → logprob: -7.429844856262207

Token 727: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.9090054035186768
    2. 'in' → logprob: -1.7840054035186768
    3. '   ' → logprob: -1.7840054035186768
    4. ' dans' → logprob: -2.0340054035186768
    5. ' in' → logprob: -2.1590054035186768
    6. 'e' → logprob: -4.534005165100098
    7. 'en' → logprob: -7.159005165100098
    8. 'd' → logprob: -7.409005165100098
    9. ' en' → logprob: -7.534005165100098
    10. ' e' → logprob: -7.534005165100098

Token 728: ' '' (ID: 461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011048289015889168
    2. ' e' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.386048316955566
    4. ' ' → logprob: -16.26104736328125
    5. '	e' → logprob: -16.51104736328125
    6. '
' → logprob: -17.38604736328125
    7. '(e' → logprob: -17.76104736328125
    8. ''e' → logprob: -18.76104736328125
    9. '`' → logprob: -18.88604736328125
    10. '[e' → logprob: -18.88604736328125

Token 729: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0040785204619169235
    2. ' e' → logprob: -5.504078388214111
    3. '	e' → logprob: -18.004077911376953
    4. ''e' → logprob: -18.629077911376953
    5. '   ' → logprob: -19.129077911376953
    6. ' ' → logprob: -19.254077911376953
    7. '
' → logprob: -19.379077911376953
    8. '`' → logprob: -19.879077911376953
    9. 'е' → logprob: -20.254077911376953
    10. '%e' → logprob: -20.879077911376953

Token 730: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6463268399238586
    2. '[i' → logprob: -1.3963267803192139
    3. '(i' → logprob: -1.7713267803192139
    4. '.get' → logprob: -2.896326780319214
    5. ' (' → logprob: -6.771327018737793
    6. ',' → logprob: -7.771327018737793
    7. '       ' → logprob: -8.021327018737793
    8. 'd' → logprob: -8.396327018737793
    9. ' if' → logprob: -8.646327018737793
    10. '  ' → logprob: -8.896327018737793

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20402108132839203
    2. 'a' → logprob: -1.7040210962295532
    3. ' a' → logprob: -5.954020977020264
    4. '	a' → logprob: -12.454021453857422
    5. '(a' → logprob: -13.454021453857422
    6. '       ' → logprob: -13.579021453857422
    7. '_a' → logprob: -14.204021453857422
    8. '.a' → logprob: -15.204021453857422
    9. '
' → logprob: -15.329021453857422
    10. ',a' → logprob: -15.454021453857422

Token 732: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0026373686268925667
    2. '   ' → logprob: -6.2526373863220215
    3. ' a' → logprob: -7.2526373863220215
    4. '	a' → logprob: -15.877636909484863
    5. '  ' → logprob: -16.37763786315918
    6. ' ' → logprob: -17.75263786315918
    7. '       ' → logprob: -19.37763786315918
    8. 'if' → logprob: -20.00263786315918
    9. '_a' → logprob: -20.12763786315918
    10. '    ' → logprob: -20.25263786315918

Token 733: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5822385549545288
    2. '   ' → logprob: -0.8322385549545288
    3. ' a' → logprob: -5.082238674163818
    4. 'if' → logprob: -9.83223819732666
    5. ' if' → logprob: -11.70723819732666
    6. '	a' → logprob: -11.70723819732666
    7. '       ' → logprob: -13.70723819732666
    8. ' ' → logprob: -14.45723819732666
    9. '  ' → logprob: -14.58223819732666
    10. '_a' → logprob: -14.70723819732666

Token 734: ' méthode' (ID: 71490)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00672211404889822
    2. ' a' → logprob: -5.0067219734191895
    3. '   ' → logprob: -12.881722450256348
    4. 'd' → logprob: -13.381722450256348
    5. ' ' → logprob: -13.756722450256348
    6. 'e' → logprob: -15.006722450256348
    7. ' d' → logprob: -15.256722450256348
    8. '
' → logprob: -15.756722450256348
    9. ')' → logprob: -15.881722450256348
    10. '_a' → logprob: -16.13172149658203

Token 735: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004568611737340689
    2. '.get' → logprob: -6.129568576812744
    3. 'e' → logprob: -6.379568576812744
    4. ' get' → logprob: -7.379568576812744
    5. 'd' → logprob: -10.379569053649902
    6. ' e' → logprob: -10.629569053649902
    7. '   ' → logprob: -12.504569053649902
    8. ' ' → logprob: -14.754569053649902
    9. '.' → logprob: -14.879569053649902
    10. ' .' → logprob: -15.129569053649902

Token 736: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.583550642360933e-05
    2. ' (' → logprob: -10.750036239624023
    3. '(' → logprob: -11.375036239624023
    4. '   ' → logprob: -13.875036239624023
    5. '  ' → logprob: -14.250036239624023
    6. ' ' → logprob: -14.750036239624023
    7. '(
' → logprob: -15.375036239624023
    8. '((' → logprob: -15.875036239624023
    9. '(ii' → logprob: -16.375036239624023
    10. ')' → logprob: -16.500036239624023

Token 737: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.46900245547294617
    2. ')' → logprob: -1.0940024852752686
    3. ',' → logprob: -3.5940024852752686
    4. ',i' → logprob: -4.8440022468566895
    5. '(' → logprob: -6.5940022468566895
    6. '())' → logprob: -6.7190022468566895
    7. ' ,' → logprob: -7.5940022468566895
    8. '()' → logprob: -7.7190022468566895
    9. ')i' → logprob: -8.594002723693848
    10. ' )' → logprob: -8.844002723693848

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. ')' → logprob: -13.875036239624023
    4. '   ' → logprob: -17.000036239624023
    5. '  ' → logprob: -18.750036239624023
    6. '1' → logprob: -19.000036239624023
    7. 'a' → logprob: -20.250036239624023
    8. ' )' → logprob: -20.250036239624023
    9. '    ' → logprob: -20.500036239624023
    10. 'e' → logprob: -20.625036239624023

Token 739: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030935779213905334
    2. '())' → logprob: -5.878093719482422
    3. '))' → logprob: -8.878093719482422
    4. '()' → logprob: -9.628093719482422
    5. ' )' → logprob: -10.128093719482422
    6. ')`' → logprob: -10.753093719482422
    7. ')))' → logprob: -12.878093719482422
    8. '')' → logprob: -13.003093719482422
    9. ')
' → logprob: -13.128093719482422
    10. '   ' → logprob: -13.253093719482422

Token 740: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02786605805158615
    2. '))' → logprob: -5.152865886688232
    3. 'a' → logprob: -5.277865886688232
    4. ' permet' → logprob: -5.277865886688232
    5. ')a' → logprob: -6.027865886688232
    6. '()' → logprob: -6.402865886688232
    7. '())' → logprob: -6.652865886688232
    8. ')return' → logprob: -6.902865886688232
    9. ')))' → logprob: -7.027865886688232
    10. ' garantit' → logprob: -7.277865886688232

Token 741: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2441190630197525
    2. 'e' → logprob: -1.7441190481185913
    3. ' e' → logprob: -3.619119167327881
    4. ' ' → logprob: -4.244119167327881
    5. '(' → logprob: -8.494118690490723
    6. '(e' → logprob: -8.744118690490723
    7. '   ' → logprob: -9.244118690490723
    8. 'd' → logprob: -9.369118690490723
    9. '  ' → logprob: -10.994118690490723
    10. ' la' → logprob: -11.119118690490723

Token 742: '0' (ID: 15)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05697423219680786
    2. '0' → logprob: -3.056974172592163
    3. ' e' → logprob: -4.806974411010742
    4. ' ' → logprob: -9.431974411010742
    5. '(e' → logprob: -10.056974411010742
    6. 'd' → logprob: -10.431974411010742
    7. '(' → logprob: -11.306974411010742
    8. '   ' → logprob: -11.806974411010742
    9. ')e' → logprob: -13.181974411010742
    10. '  ' → logprob: -13.931974411010742

Token 743: ' si' (ID: 1784)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05175238847732544
    2. '(e' → logprob: -3.8017523288726807
    3. '   ' → logprob: -4.05175256729126
    4. ')' → logprob: -5.17675256729126
    5. '(d' → logprob: -5.92675256729126
    6. '(a' → logprob: -7.42675256729126
    7. 'e' → logprob: -7.67675256729126
    8. '()' → logprob: -8.051752090454102
    9. 'd' → logprob: -8.426752090454102
    10. ',' → logprob: -8.676752090454102

Token 744: ' la' (ID: 557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18251147866249084
    2. 'i' → logprob: -2.432511568069458
    3. ' e' → logprob: -2.682511568069458
    4. ' i' → logprob: -4.557511329650879
    5. ' ' → logprob: -10.182511329650879
    6. 'd' → logprob: -10.557511329650879
    7. '   ' → logprob: -10.932511329650879
    8. '(e' → logprob: -11.057511329650879
    9. '(i' → logprob: -11.432511329650879
    10. ' d' → logprob: -11.557511329650879

Token 745: ' clé' (ID: 83188)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07013627141714096
    2. 'e' → logprob: -3.070136308670044
    3. ' i' → logprob: -4.570136070251465
    4. 'clé' → logprob: -5.320136070251465
    5. ' e' → logprob: -6.320136070251465
    6. ' clé' → logprob: -6.445136070251465
    7. 'd' → logprob: -6.945136070251465
    8. 'key' → logprob: -7.070136070251465
    9. ' key' → logprob: -7.945136070251465
    10. ' d' → logprob: -9.570136070251465

Token 746: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19327124953269958
    2. '(i' → logprob: -2.6932711601257324
    3. ' n' → logprob: -2.8182711601257324
    4. 'i' → logprob: -3.3182711601257324
    5. ')' → logprob: -4.818271160125732
    6. ' i' → logprob: -6.568271160125732
    7. 'not' → logprob: -6.943271160125732
    8. '(n' → logprob: -7.568271160125732
    9. ' not' → logprob: -7.943271160125732
    10. ' est' → logprob: -8.31827163696289

Token 747: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7967783808708191
    2. 'not' → logprob: -1.9217784404754639
    3. ' pas' → logprob: -2.046778440475464
    4. 'n' → logprob: -2.296778440475464
    5. ' not' → logprob: -2.671778440475464
    6. 'pas' → logprob: -4.046778202056885
    7. '(i' → logprob: -4.171778202056885
    8. ' n' → logprob: -4.171778202056885
    9. 'e' → logprob: -4.421778202056885
    10. 'ot' → logprob: -4.421778202056885

Token 748: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04226250201463699
    2. 'not' → logprob: -4.292262554168701
    3. 'abs' → logprob: -4.417262554168701
    4. ' pas' → logprob: -4.417262554168701
    5. 'e' → logprob: -6.542262554168701
    6. ' not' → logprob: -7.292262554168701
    7. 'in' → logprob: -7.667262554168701
    8. 'i' → logprob: -8.542262077331543
    9. 'prés' → logprob: -8.542262077331543
    10. 'present' → logprob: -9.167262077331543

Token 749: ' présente' (ID: 44828)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.11631070077419281
    2. 'pas' → logprob: -2.6163105964660645
    3. ' abs' → logprob: -3.4913105964660645
    4. 'intr' → logprob: -6.2413105964660645
    5. ' pas' → logprob: -6.7413105964660645
    6. 'in' → logprob: -6.9913105964660645
    7. 'prés' → logprob: -6.9913105964660645
    8. 'not' → logprob: -7.2413105964660645
    9. ' intr' → logprob: -8.616311073303223
    10. ' présente' → logprob: -8.741311073303223

Token 750: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027462869882583618
    2. 'a' → logprob: -3.652462959289551
    3. ' a' → logprob: -7.402462959289551
    4. '(a' → logprob: -7.652462959289551
    5. ')' → logprob: -11.65246295928955
    6. '(' → logprob: -11.65246295928955
    7. '	a' → logprob: -11.65246295928955
    8. '       ' → logprob: -11.77746295928955
    9. ',a' → logprob: -12.15246295928955
    10. ')a' → logprob: -12.15246295928955

Token 751: ' '' (ID: 461)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011048408225178719
    2. ' e' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.886048316955566
    4. ' ' → logprob: -16.261049270629883
    5. '(e' → logprob: -16.636049270629883
    6. '	e' → logprob: -17.261049270629883
    7. ''e' → logprob: -17.386049270629883
    8. ')e' → logprob: -18.011049270629883
    9. '  ' → logprob: -18.386049270629883
    10. ')' → logprob: -19.511049270629883

Token 752: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003600782947614789
    2. ' e' → logprob: -5.628600597381592
    3. ''e' → logprob: -15.00360107421875
    4. ' ' → logprob: -16.12860107421875
    5. ')e' → logprob: -16.37860107421875
    6. '	e' → logprob: -16.50360107421875
    7. '   ' → logprob: -16.87860107421875
    8. '
' → logprob: -17.62860107421875
    9. ')' → logprob: -18.12860107421875
    10. 'е' → logprob: -18.87860107421875

Token 753: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4521254897117615
    2. '   ' → logprob: -1.0771255493164062
    3. '):' → logprob: -3.9521255493164062
    4. ')
' → logprob: -6.327125549316406
    5. ':' → logprob: -7.577125549316406
    6. '):
' → logprob: -7.702125549316406
    7. '(a' → logprob: -8.452125549316406
    8. ' )' → logprob: -8.702125549316406
    9. 'a' → logprob: -8.702125549316406
    10. '(i' → logprob: -9.077125549316406

Token 754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3150779902935028
    2. 'a' → logprob: -1.3150780200958252
    3. ' a' → logprob: -6.315077781677246
    4. '	a' → logprob: -12.315077781677246
    5. '       ' → logprob: -14.940077781677246
    6. '_a' → logprob: -15.190077781677246
    7. '(a' → logprob: -15.690077781677246
    8. '  ' → logprob: -16.440078735351562
    9. ',a' → logprob: -16.440078735351562
    10. '#a' → logprob: -16.815078735351562

Token 755: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0005745976231992245
    2. '   ' → logprob: -7.500574588775635
    3. ' a' → logprob: -10.750575065612793
    4. '	a' → logprob: -15.875575065612793
    5. ' ' → logprob: -18.875574111938477
    6. '  ' → logprob: -19.000574111938477
    7. '_a' → logprob: -20.875574111938477
    8. '    
' → logprob: -21.250574111938477
    9. '
' → logprob: -21.750574111938477
    10. '       ' → logprob: -22.500574111938477

Token 756: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142756402492523
    2. '+=' → logprob: -1.7014275789260864
    3. '=' → logprob: -11.701427459716797
    4. ']+=' → logprob: -13.201427459716797
    5. '+=(' → logprob: -13.451427459716797
    6. '+' → logprob: -13.576427459716797
    7. ' =' → logprob: -13.951427459716797
    8. '   ' → logprob: -15.076427459716797
    9. ' ' → logprob: -16.201427459716797
    10. '	' → logprob: -16.451427459716797

Token 757: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001931970240548253
    2. ' d' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.751932144165039
    4. '	d' → logprob: -15.376932144165039
    5. '  ' → logprob: -16.25193214416504
    6. ' ' → logprob: -16.50193214416504
    7. '    ' → logprob: -17.00193214416504
    8. '     ' → logprob: -17.62693214416504
    9. '       ' → logprob: -18.25193214416504
    10. '(d' → logprob: -18.37693214416504

Token 758: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38695356249809265
    2. '.get' → logprob: -1.136953592300415
    3. '(i' → logprob: -9.761953353881836
    4. '[(' → logprob: -11.011953353881836
    5. ' .' → logprob: -12.261953353881836
    6. 'get' → logprob: -13.386953353881836
    7. '.' → logprob: -13.511953353881836
    8. '[get' → logprob: -14.886953353881836
    9. '[' → logprob: -15.886953353881836
    10. '   ' → logprob: -16.636953353881836

Token 759: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005598236457444727
    2. ']*' → logprob: -7.5005598068237305
    3. ' ]' → logprob: -12.00055980682373
    4. '   ' → logprob: -15.12555980682373
    5. '*' → logprob: -15.25055980682373
    6. ' *' → logprob: -16.250560760498047
    7. ' ' → logprob: -16.875560760498047
    8. '"]' → logprob: -17.500560760498047
    9. '']' → logprob: -17.750560760498047
    10. ']
' → logprob: -18.500560760498047

Token 760: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014165511354804039
    2. ' *' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.264165878295898
    4. 'e' → logprob: -14.764165878295898
    5. '*
' → logprob: -14.764165878295898
    6. '**' → logprob: -15.014165878295898
    7. ' ' → logprob: -15.764165878295898
    8. '   ' → logprob: -17.1391658782959
    9. ' e' → logprob: -17.3891658782959
    10. '```' → logprob: -17.7641658782959

Token 761: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0015023599844425917
    2. ' e' → logprob: -6.501502513885498
    3. '   ' → logprob: -20.626502990722656
    4. '	e' → logprob: -20.751502990722656
    5. '(e' → logprob: -22.876502990722656
    6. ' ' → logprob: -23.501502990722656
    7. ')e' → logprob: -24.001502990722656
    8. '  ' → logprob: -24.501502990722656
    9. '%e' → logprob: -25.001502990722656
    10. '
' → logprob: -25.251502990722656

Token 762: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.4849443838757e-06
    2. ' .' → logprob: -12.875004768371582
    3. '.' → logprob: -13.375004768371582
    4. '[i' → logprob: -15.000004768371582
    5. 'get' → logprob: -16.375003814697266
    6. '`.' → logprob: -18.625003814697266
    7. '(i' → logprob: -19.125003814697266
    8. '.setdefault' → logprob: -19.375003814697266
    9. '.ge' → logprob: -19.750003814697266
    10. '```' → logprob: -19.750003814697266

Token 763: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.896309739408025e-07
    2. ' (' → logprob: -14.875000953674316
    3. '(' → logprob: -15.000000953674316
    4. '(
' → logprob: -18.125
    5. '((' → logprob: -18.375
    6. '(ii' → logprob: -20.25
    7. '(I' → logprob: -20.375
    8. '[i' → logprob: -20.5
    9. '(a' → logprob: -20.625
    10. 'i' → logprob: -21.125

Token 764: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04326144978404045
    2. '(i' → logprob: -3.2932615280151367
    3. ',i' → logprob: -5.293261528015137
    4. ' ,' → logprob: -9.418261528015137
    5. ')' → logprob: -9.668261528015137
    6. ',(' → logprob: -11.168261528015137
    7. 'i' → logprob: -11.543261528015137
    8. '[i' → logprob: -12.043261528015137
    9. ')i' → logprob: -13.043261528015137
    10. '(' → logprob: -13.168261528015137

Token 765: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '۰' → logprob: -20.875001907348633
    5. ')' → logprob: -21.000001907348633
    6. '```' → logprob: -21.250001907348633
    7. '
' → logprob: -22.375001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '０' → logprob: -22.750001907348633
    10. ' ' → logprob: -23.250001907348633

Token 766: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.25
    4. '   ' → logprob: -20.875
    5. '۰' → logprob: -20.875
    6. ')' → logprob: -21.0
    7. '00' → logprob: -23.0625
    8. '０' → logprob: -23.1875
    9. ' ' → logprob: -23.4375
    10. '=' → logprob: -23.4375

Token 767: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -16.625
    4. '))' → logprob: -17.875
    5. ')#' → logprob: -19.5
    6. ')
' → logprob: -19.625
    7. '）' → logprob: -19.625
    8. ')

' → logprob: -19.625
    9. ')`' → logprob: -19.75
    10. ']' → logprob: -19.75

Token 768: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.0868278524139896e-05
    2. '
' → logprob: -9.75006103515625
    3. ' print' → logprob: -13.37506103515625
    4. '```' → logprob: -14.25006103515625
    5. '#print' → logprob: -16.37506103515625
    6. '  
' → logprob: -16.62506103515625
    7. '#' → logprob: -17.37506103515625
    8. 'a' → logprob: -17.37506103515625
    9. '<|end|>' → logprob: -18.00006103515625
    10. '(print' → logprob: -18.12506103515625

Token 769: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.625
    3. '
' → logprob: -19.875
    4. '#print' → logprob: -21.0
    5. 'prin' → logprob: -22.125
    6. 'pr' → logprob: -22.25
    7. '```' → logprob: -22.75
    8. 'a' → logprob: -23.875
    9. '#' → logprob: -23.875
    10. '  
' → logprob: -24.75

Token 770: 'iche' (ID: 7509)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36131751537323
    2. 'iche' → logprob: -1.48631751537323
    3. 'icher' → logprob: -3.4863176345825195
    4. 'ichage' → logprob: -3.9863176345825195
    5. 'print' → logprob: -4.6113176345825195
    6. 'ich' → logprob: -5.2363176345825195
    7. 'f' → logprob: -5.3613176345825195
    8. '#print' → logprob: -5.4863176345825195
    9. '```' → logprob: -6.7363176345825195
    10. 'ic' → logprob: -7.1113176345825195

Token 771: ' le' (ID: 505)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.015305552864447e-05
    2. 'a' → logprob: -9.750060081481934
    3. '(' → logprob: -13.250060081481934
    4. '(
' → logprob: -18.87506103515625
    5. ' a' → logprob: -20.12506103515625
    6. ' (' → logprob: -20.12506103515625
    7. 'print' → logprob: -20.50006103515625
    8. '(A' → logprob: -20.75006103515625
    9. '()' → logprob: -21.87506103515625
    10. '((' → logprob: -22.75006103515625

Token 772: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048621319234371185
    2. '(a' → logprob: -3.048621416091919
    3. ' a' → logprob: -10.92362117767334
    4. '(' → logprob: -11.17362117767334
    5. '(
' → logprob: -14.67362117767334
    6. 'print' → logprob: -14.92362117767334
    7. '()' → logprob: -15.17362117767334
    8. 'r' → logprob: -15.54862117767334
    9. 's' → logprob: -15.92362117767334
    10. 'а' → logprob: -16.048622131347656

Token 773: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.0
    3. ' print' → logprob: -17.25
    4. 'a' → logprob: -18.625
    5. '```' → logprob: -18.625
    6. '(print' → logprob: -21.75
    7. '#print' → logprob: -22.25
    8. '``' → logprob: -22.375
    9. '
' → logprob: -24.375
    10. '.print' → logprob: -25.0

Token 774: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.843177233240567e-05
    2. '```' → logprob: -11.000018119812012
    3. '
' → logprob: -14.250018119812012
    4. 'a' → logprob: -14.250018119812012
    5. '``' → logprob: -15.375018119812012
    6. ' print' → logprob: -15.750018119812012
    7. '(print' → logprob: -18.250019073486328
    8. '#print' → logprob: -18.375019073486328
    9. '.print' → logprob: -20.625019073486328
    10. '\' → logprob: -21.375019073486328

Token 775: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013122227042913437
    2. 'print' → logprob: -4.763122081756592
    3. ' a' → logprob: -5.763122081756592
    4. '(a' → logprob: -7.013122081756592
    5. ')' → logprob: -8.38812255859375
    6. '()' → logprob: -9.38812255859375
    7. ' ' → logprob: -10.13812255859375
    8. 'la' → logprob: -10.26312255859375
    9. '```' → logprob: -11.26312255859375
    10. ' print' → logprob: -11.26312255859375

Token 776: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.035656094551086426
    2. ''écran' → logprob: -3.660655975341797
    3. 'print' → logprob: -5.035655975341797
    4. 'é' → logprob: -6.910655975341797
    5. '#' → logprob: -7.160655975341797
    6. 'e' → logprob: -8.785655975341797
    7. 'aise' → logprob: -8.785655975341797
    8. 'stdout' → logprob: -9.035655975341797
    9. 'à' → logprob: -9.660655975341797
    10. '’écran' → logprob: -9.785655975341797

Token 777: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.253090865968261e-06
    2. '```' → logprob: -12.000009536743164
    3. '
' → logprob: -13.000009536743164
    4. 'a' → logprob: -15.000009536743164
    5. '``' → logprob: -15.500009536743164
    6. ' print' → logprob: -15.625009536743164
    7. '(print' → logprob: -18.750009536743164
    8. '#print' → logprob: -19.875009536743164
    9. '`
' → logprob: -20.250009536743164
    10. '
' → logprob: -20.875009536743164

Token 778: 'le' (ID: 282)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3132672905921936
    2. 'a' → logprob: -1.3132672309875488
    3. ' print' → logprob: -12.813267707824707
    4. ' a' → logprob: -13.063267707824707
    5. ')' → logprob: -15.313267707824707
    6. '```' → logprob: -15.813267707824707
    7. '
' → logprob: -16.06326675415039
    8. ')a' → logprob: -16.68826675415039
    9. ')
' → logprob: -16.81326675415039
    10. '(a' → logprob: -17.18826675415039

Token 779: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7044069766998291
    2. 'print' → logprob: -0.7044069766998291
    3. 'a' → logprob: -4.70440673828125
    4. ' )' → logprob: -7.20440673828125
    5. ')a' → logprob: -7.57940673828125
    6. ')
' → logprob: -7.95440673828125
    7. '")' → logprob: -9.20440673828125
    8. ' print' → logprob: -9.57940673828125
    9. '')' → logprob: -9.82940673828125
    10. '#' → logprob: -10.20440673828125

Token 780: ' total' (ID: 3609)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20106494426727295
    2. ')' → logprob: -2.5760650634765625
    3. '(a' → logprob: -2.7010650634765625
    4. 'a' → logprob: -3.7010650634765625
    5. '()' → logprob: -5.0760650634765625
    6. '(
' → logprob: -5.0760650634765625
    7. ' )' → logprob: -7.7010650634765625
    8. '())' → logprob: -7.9510650634765625
    9. '('' → logprob: -8.701065063476562
    10. '("' → logprob: -9.076065063476562

Token 781: ' calcul' (ID: 7559)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.18135789036750793
    2. '(' → logprob: -2.1813578605651855
    3. ')' → logprob: -3.1813578605651855
    4. 'a' → logprob: -5.0563578605651855
    5. '(
' → logprob: -5.4313578605651855
    6. 'print' → logprob: -8.431358337402344
    7. '()' → logprob: -8.556358337402344
    8. ' )' → logprob: -9.556358337402344
    9. '())' → logprob: -10.181358337402344
    10. '('' → logprob: -10.431358337402344

Token 782: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -7.20734242349863e-05
    2. ')' → logprob: -9.875072479248047
    3. '#' → logprob: -11.125072479248047
    4. 'e' → logprob: -13.375072479248047
    5. 'ée' → logprob: -14.125072479248047
    6. 'ré' → logprob: -14.375072479248047
    7. '(' → logprob: -14.500072479248047
    8. 'è' → logprob: -14.750072479248047
    9. '()' → logprob: -15.000072479248047
    10. 'er' → logprob: -15.125072479248047

Token 783: ')
' (ID: 446)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6319721341133118
    2. ')' → logprob: -0.8819721341133118
    3. ')
' → logprob: -3.631972074508667
    4. 'a' → logprob: -4.131972312927246
    5. 'print' → logprob: -5.381972312927246
    6. '()' → logprob: -5.506972312927246
    7. '(' → logprob: -6.881972312927246
    8. '()
' → logprob: -7.006972312927246
    9. ')a' → logprob: -7.756972312927246
    10. ',a' → logprob: -7.881972312927246

Token 784: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. '
' → logprob: -19.625
    4. ' print' → logprob: -20.125
    5. 'a' → logprob: -23.875
    6. '``' → logprob: -24.25
    7. '#print' → logprob: -24.75
    8. 'pr' → logprob: -25.5
    9. 'prin' → logprob: -25.875
    10. '  
' → logprob: -25.875

Token 785: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00033546582562848926
    2. '(' → logprob: -8.000335693359375
    3. 'a' → logprob: -17.375335693359375
    4. '('' → logprob: -17.750335693359375
    5. '()' → logprob: -18.125335693359375
    6. '(A' → logprob: -18.250335693359375
    7. ' (' → logprob: -18.875335693359375
    8. '((' → logprob: -19.125335693359375
    9. '(
' → logprob: -19.750335693359375
    10. '("("' → logprob: -20.625335693359375

Token 786: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')`' → logprob: -15.250001907348633
    5. '())' → logprob: -16.500001907348633
    6. '()' → logprob: -16.625001907348633
    7. ')#' → logprob: -18.750001907348633
    8. '`)' → logprob: -19.125001907348633
    9. ')
' → logprob: -19.125001907348633
    10. ')**' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 784
Tokens correctement prédits (1ère position, stricte): 194
Tokens correctement prédits (1ère position, avec adaptation): 206
Tokens correctement prédits (top 10): 436
Précision stricte (1ère position): 24.74%
Précision adaptée (1ère position): 26.28%
Précision (top 10): 55.61%
================================================================================
