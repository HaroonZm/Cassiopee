================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def input():
    # Petite fonction pour lire l'entrée plus facilement (merci sys)
    return sys.stdin.readline().strip()  # bon, normalement ça marche

N, M = map(int, input().split())

edges = [[] for j in range(N)]

for mn in range(M):
    things = list(map(int, input().split()))
    x1 = things[0] - 1
    y1 = things[1] - 1
    # z ne sert à rien dans ce contexte ?
    edges[x1].append(y1)
    edges[y1].append(x1)

from collections import deque as dq

def bfs(start, clr, clr_list):
    # Pas sûr du style de la signature, mais passons
    q = dq([start])
    clr_list[start] = clr
    while q:
        vv = q.pop()
        # je fais ça comme ça, ça devrait aller
        for v2 in edges[vv]:
            # couleurs non visités :
            if clr_list[v2] == -1:
                clr_list[v2] = clr
                q.appendleft(v2)

clrs = [-1 for _ in range(N)]
cur_clr = 0

for idx in range(N):
    if clrs[idx] == -1:
        bfs(idx, cur_clr, clrs)
        cur_clr += 1

print(cur_clr)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010993726318702102
    2. '_' → logprob: -7.001099586486816
    3. ' (' → logprob: -10.001099586486816
    4. '("("' → logprob: -10.251099586486816
    5. '('' → logprob: -10.751099586486816
    6. '("' → logprob: -11.626099586486816
    7. 's' → logprob: -11.626099586486816
    8. ')' → logprob: -11.876099586486816
    9. '(
' → logprob: -12.251099586486816
    10. '()' → logprob: -12.501099586486816

Token 6: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7809922695159912
    2. ' ' → logprob: -1.2809922695159912
    3. '(' → logprob: -1.5309922695159912
    4. '"' → logprob: -3.905992269515991
    5. '()' → logprob: -5.28099250793457
    6. '<|end|>' → logprob: -5.40599250793457
    7. ' )' → logprob: -5.53099250793457
    8. ' (' → logprob: -5.90599250793457
    9. '_' → logprob: -6.03099250793457
    10. '  ' → logprob: -6.15599250793457

Token 7: ' #' (ID: 1069)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.39204269647598267
    2. ' return' → logprob: -1.892042636871338
    3. 'sys' → logprob: -2.517042636871338
    4. 'return' → logprob: -2.642042636871338
    5. '   ' → logprob: -4.517042636871338
    6. ' input' → logprob: -5.517042636871338
    7. 'input' → logprob: -5.767042636871338
    8. ' ' → logprob: -6.642042636871338
    9. ' pass' → logprob: -7.392042636871338
    10. 'pass' → logprob: -7.642042636871338

Token 8: ' Petite' (ID: 129719)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8315775394439697
    2. ' ' → logprob: -1.0815775394439697
    3. ' pass' → logprob: -1.8315775394439697
    4. '   ' → logprob: -3.8315775394439697
    5. ' sys' → logprob: -4.456577301025391
    6. 'pass' → logprob: -4.706577301025391
    7. 'return' → logprob: -4.706577301025391
    8. '  ' → logprob: -4.831577301025391
    9. '    ' → logprob: -5.706577301025391
    10. ' input' → logprob: -6.831577301025391

Token 9: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06530746072530746
    2. '   ' → logprob: -3.315307378768921
    3. '(' → logprob: -4.9403076171875
    4. '_' → logprob: -5.0653076171875
    5. '  ' → logprob: -5.3153076171875
    6. ' (' → logprob: -5.8153076171875
    7. 'r' → logprob: -6.6903076171875
    8. '    ' → logprob: -7.0653076171875
    9. 's' → logprob: -7.4403076171875
    10. ' )' → logprob: -8.3153076171875

Token 10: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13281816244125366
    2. '    ' → logprob: -2.8828182220458984
    3. '  ' → logprob: -3.3828182220458984
    4. '(' → logprob: -5.007818222045898
    5. '<|end|>' → logprob: -5.382818222045898
    6. '   ' → logprob: -5.507818222045898
    7. '\' → logprob: -5.882818222045898
    8. ' (' → logprob: -6.132818222045898
    9. '     
' → logprob: -6.132818222045898
    10. ' pass' → logprob: -6.632818222045898

Token 11: ' lire' (ID: 46082)
  Prédit: ' récupérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récupérer' → logprob: -0.48137474060058594
    2. 'r' → logprob: -1.731374740600586
    3. ' lire' → logprob: -3.356374740600586
    4. ' recuper' → logprob: -4.106374740600586
    5. ' remplacer' → logprob: -4.356374740600586
    6. 'return' → logprob: -4.606374740600586
    7. ' récup' → logprob: -4.731374740600586
    8. 'rec' → logprob: -4.856374740600586
    9. '()' → logprob: -4.981374740600586
    10. ' gérer' → logprob: -5.106374740600586

Token 12: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5877010226249695
    2. ' ' → logprob: -0.9627010226249695
    3. ' une' → logprob: -4.337700843811035
    4. ' la' → logprob: -4.587700843811035
    5. 'input' → logprob: -5.212700843811035
    6. '   ' → logprob: -5.337700843811035
    7. '<|end|>' → logprob: -5.462700843811035
    8. ' l' → logprob: -5.712700843811035
    9. '(' → logprob: -5.712700843811035
    10. ' un' → logprob: -5.837700843811035

Token 13: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1618327498435974
    2. ''entrée' → logprob: -2.536832809448242
    3. 'e' → logprob: -2.911832809448242
    4. 'es' → logprob: -4.536832809448242
    5. 'input' → logprob: -5.911832809448242
    6. 'entrée' → logprob: -7.036832809448242
    7. ''' → logprob: -8.036832809448242
    8. '’entrée' → logprob: -8.411832809448242
    9. ''utilisateur' → logprob: -8.911832809448242
    10. 'igne' → logprob: -9.036832809448242

Token 14: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49827733635902405
    2. '()' → logprob: -1.4982773065567017
    3. '   ' → logprob: -3.248277425765991
    4. '  ' → logprob: -3.748277425765991
    5. ' )' → logprob: -4.373277187347412
    6. ' utilisateur' → logprob: -4.498277187347412
    7. 's' → logprob: -4.748277187347412
    8. 'user' → logprob: -4.748277187347412
    9. '<|end|>' → logprob: -4.998277187347412
    10. ' user' → logprob: -4.998277187347412

Token 15: ' facilement' (ID: 54086)
  Prédit: ' facilement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facilement' → logprob: -0.3517819046974182
    2. ' rapidement' → logprob: -2.1017818450927734
    3. 'fac' → logprob: -2.9767818450927734
    4. ' simplement' → logprob: -2.9767818450927734
    5. ' efficacement' → logprob: -3.3517818450927734
    6. ' vite' → logprob: -4.851781845092773
    7. ' ais' → logprob: -5.476781845092773
    8. 'rap' → logprob: -5.601781845092773
    9. 'vite' → logprob: -5.726781845092773
    10. 'pro' → logprob: -5.726781845092773

Token 16: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12831617891788483
    2. 'return' → logprob: -3.1283161640167236
    3. ' ' → logprob: -3.3783161640167236
    4. ' return' → logprob: -3.8783161640167236
    5. '    
' → logprob: -5.628316402435303
    6. '\n' → logprob: -5.753316402435303
    7. '\' → logprob: -6.003316402435303
    8. '  ' → logprob: -6.128316402435303
    9. '    ' → logprob: -6.128316402435303
    10. 'pass' → logprob: -6.378316402435303

Token 17: 'merci' (ID: 111357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030174029991030693
    2. '   ' → logprob: -3.6551740169525146
    3. ' )' → logprob: -6.530174255371094
    4. ' ' → logprob: -7.280174255371094
    5. 'return' → logprob: -7.405174255371094
    6. 'pass' → logprob: -8.280174255371094
    7. ' ' → logprob: -8.405174255371094
    8. ' pass' → logprob: -9.030174255371094
    9. ' return' → logprob: -9.405174255371094
    10. '    ' → logprob: -9.655174255371094

Token 18: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.11147651076316833
    2. 'sys' → logprob: -2.486476421356201
    3. ' de' → logprob: -5.111476421356201
    4. ')' → logprob: -5.611476421356201
    5. ' la' → logprob: -5.861476421356201
    6. ' à' → logprob: -6.361476421356201
    7. ' le' → logprob: -6.736476421356201
    8. ',' → logprob: -6.986476421356201
    9. '!' → logprob: -6.986476421356201
    10. ' )' → logprob: -7.111476421356201

Token 19: ')
' (ID: 446)
  Prédit: '.stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1317037045955658
    2. ')' → logprob: -2.2567036151885986
    3. '.' → logprob: -4.381703853607178
    4. '.stdout' → logprob: -5.881703853607178
    5. '.argv' → logprob: -7.256703853607178
    6. '   ' → logprob: -7.756703853607178
    7. '.)' → logprob: -7.756703853607178
    8. ' )' → logprob: -7.881703853607178
    9. '.stderr' → logprob: -7.881703853607178
    10. ' .' → logprob: -8.38170337677002

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17013905942440033
    2. ' ' → logprob: -2.7951390743255615
    3. 'return' → logprob: -3.6701390743255615
    4. ' return' → logprob: -3.7951390743255615
    5. '()' → logprob: -4.170138835906982
    6. '    ' → logprob: -4.670138835906982
    7. '(' → logprob: -5.545138835906982
    8. ')' → logprob: -5.795138835906982
    9. '  ' → logprob: -6.170138835906982
    10. '\' → logprob: -6.420138835906982

Token 21: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3388545513153076
    2. 'return' (adapté à ' return') → logprob: -1.7138545513153076
    3. '   ' → logprob: -2.4638545513153076
    4. ' sys' → logprob: -3.9638545513153076
    5. 'sys' → logprob: -6.463854789733887
    6. ' ' → logprob: -7.213854789733887
    7. '    ' → logprob: -8.088854789733887
    8. ' line' → logprob: -9.338854789733887
    9. '  ' → logprob: -9.338854789733887
    10. ')' → logprob: -9.963854789733887

Token 22: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07890157401561737
    2. 'sys' → logprob: -2.578901529312134
    3. '=sys' → logprob: -12.578901290893555
    4. ' input' → logprob: -12.703901290893555
    5. 'input' → logprob: -12.828901290893555
    6. '(sys' → logprob: -13.828901290893555
    7. '	sys' → logprob: -14.078901290893555
    8. ' ' → logprob: -14.578901290893555
    9. '_sys' → logprob: -16.078901290893555
    10. '   ' → logprob: -16.578901290893555

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00017672323156148195
    2. '.stdout' → logprob: -9.125176429748535
    3. '.' → logprob: -9.750176429748535
    4. '.argv' → logprob: -12.625176429748535
    5. '.std' → logprob: -12.625176429748535
    6. '.stderr' → logprob: -14.000176429748535
    7. '.readline' → logprob: -14.500176429748535
    8. '.st' → logprob: -14.750176429748535
    9. '.input' → logprob: -15.250176429748535
    10. '.exit' → logprob: -15.250176429748535

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0020573579240590334
    2. '.read' → logprob: -6.5020575523376465
    3. '.' → logprob: -7.5020575523376465
    4. '.readlines' → logprob: -13.377057075500488
    5. ' readline' → logprob: -14.502057075500488
    6. 'read' → logprob: -14.877057075500488
    7. '.Read' → logprob: -15.002057075500488
    8. '.write' → logprob: -16.627058029174805
    9. ' .' → logprob: -16.627058029174805
    10. '.buffer' → logprob: -17.252058029174805

Token 25: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006122402846813202
    2. '().' → logprob: -7.625612258911133
    3. '()
' → logprob: -9.500612258911133
    4. '(' → logprob: -10.750612258911133
    5. ' ()' → logprob: -11.125612258911133
    6. '()\' → logprob: -11.750612258911133
    7. '()

' → logprob: -13.000612258911133
    8. '()(' → logprob: -14.625612258911133
    9. '())' → logprob: -14.625612258911133
    10. '()+' → logprob: -14.750612258911133

Token 26: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011714138090610504
    2. 'rstrip' → logprob: -6.751171588897705
    3. ' strip' → logprob: -13.751171112060547
    4. '_strip' → logprob: -16.876171112060547
    5. 'replace' → logprob: -17.626171112060547
    6. '(strip' → logprob: -17.751171112060547
    7. 'str' → logprob: -18.126171112060547
    8. '-strip' → logprob: -18.751171112060547
    9. '```' → logprob: -19.251171112060547
    10. '.strip' → logprob: -19.376171112060547

Token 27: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005017190705984831
    2. '(' → logprob: -5.380017280578613
    3. '()
' → logprob: -8.005017280578613
    4. '()

' → logprob: -10.505017280578613
    5. '()\' → logprob: -11.255017280578613
    6. ' ()' → logprob: -12.005017280578613
    7. '(
' → logprob: -12.005017280578613
    8. '()`' → logprob: -13.380017280578613
    9. '(\' → logprob: -13.755017280578613
    10. '(

' → logprob: -13.880017280578613

Token 28: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46878862380981445
    2. '\n' → logprob: -1.5937886238098145
    3. '

' → logprob: -2.3437886238098145
    4. '<|end|>' → logprob: -3.4687886238098145
    5. '()' → logprob: -4.5937886238098145
    6. '(' → logprob: -4.9687886238098145
    7. '```' → logprob: -5.4687886238098145
    8. '\' → logprob: -5.8437886238098145
    9. ' ' → logprob: -6.0937886238098145
    10. '#' → logprob: -6.2187886238098145

Token 29: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34578561782836914
    2. '\n' → logprob: -1.5957856178283691
    3. '

' → logprob: -3.595785617828369
    4. ' ' → logprob: -4.345785617828369
    5. '\' → logprob: -4.720785617828369
    6. '<|end|>' → logprob: -4.845785617828369
    7. ':' → logprob: -5.470785617828369
    8. ' 
' → logprob: -5.595785617828369
    9. '  
' → logprob: -5.595785617828369
    10. '(' → logprob: -5.720785617828369

Token 30: ' bon' (ID: 4846)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.915411651134491
    2. '<|end|>' → logprob: -1.2904117107391357
    3. '\n' → logprob: -2.5404117107391357
    4. ')' → logprob: -2.7904117107391357
    5. '#' → logprob: -2.7904117107391357
    6. '<|end|>' → logprob: -3.2904117107391357
    7. '(' → logprob: -4.165411472320557
    8. '()' → logprob: -4.290411472320557
    9. ' ' → logprob: -4.415411472320557
    10. '

' → logprob: -4.540411472320557

Token 31: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' normalement' (ID: 164432)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.8968144655227661
    2. ' mais' → logprob: -2.0218143463134766
    3. ' ' → logprob: -2.2718143463134766
    4. ')' → logprob: -2.5218143463134766
    5. ''' → logprob: -2.6468143463134766
    6. '()' → logprob: -3.2718143463134766
    7. '"' → logprob: -3.6468143463134766
    8. 'cela' → logprob: -3.6468143463134766
    9. ' sauf' → logprob: -3.8968143463134766
    10. 'c' → logprob: -4.021814346313477

Token 33: ' ça' (ID: 13590)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27187642455101013
    2. '

' → logprob: -2.396876335144043
    3. '\n' → logprob: -2.896876335144043
    4. '<|end|>' → logprob: -3.021876335144043
    5. '<|end|>' → logprob: -4.521876335144043
    6. '```' → logprob: -5.021876335144043
    7. '\' → logprob: -5.146876335144043
    8. ' ' → logprob: -5.771876335144043
    9. ' 

' → logprob: -6.021876335144043
    10. '


' → logprob: -6.021876335144043

Token 34: ' marche' (ID: 58191)
  Prédit: ' suff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suff' → logprob: -0.7179057598114014
    2. ' suffit' → logprob: -1.0929057598114014
    3. ' marche' → logprob: -2.7179057598114014
    4. 's' → logprob: -3.0929057598114014
    5. ' devrait' → logprob: -3.5929057598114014
    6. ' s' → logprob: -4.7179059982299805
    7. ' va' → logprob: -5.3429059982299805
    8. ' doit' → logprob: -5.5929059982299805
    9. ' should' → logprob: -5.9679059982299805
    10. 'do' → logprob: -6.0929059982299805

Token 35: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16097363829612732
    2. '

' → logprob: -2.66097354888916
    3. '\n' → logprob: -2.78597354888916
    4. '<|end|>' → logprob: -5.03597354888916
    5. '\' → logprob: -6.03597354888916
    6. '<|end|>' → logprob: -6.28597354888916
    7. '


' → logprob: -6.78597354888916
    8. '#' → logprob: -7.28597354888916
    9. '```' → logprob: -7.41097354888916
    10. ' 

' → logprob: -7.53597354888916

Token 36: 'N' (ID: 45)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15196122229099274
    2. '\n' → logprob: -2.651961326599121
    3. '

' → logprob: -3.026961326599121
    4. 'def' → logprob: -5.401961326599121
    5. '\' → logprob: -5.526961326599121
    6. '#' → logprob: -5.776961326599121
    7. '<|end|>' → logprob: -6.026961326599121
    8. '```' → logprob: -6.151961326599121
    9. '<|end|>' → logprob: -7.276961326599121
    10. '    
' → logprob: -7.276961326599121

Token 37: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2791193127632141
    2. ' =' → logprob: -2.4041192531585693
    3. 'umber' → logprob: -2.9041192531585693
    4. 'um' → logprob: -3.5291192531585693
    5. '+' → logprob: -4.154119491577148
    6. '*' → logprob: -4.779119491577148
    7. '-' → logprob: -5.029119491577148
    8. 'u' → logprob: -5.529119491577148
    9. 'ame' → logprob: -5.654119491577148
    10. 'ext' → logprob: -6.029119491577148

Token 38: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9345071911811829
    2. ' ' → logprob: -1.434507131576538
    3. ' M' → logprob: -1.434507131576538
    4. 'K' → logprob: -2.684507131576538
    5. 'M' → logprob: -3.184507131576538
    6. ' k' → logprob: -5.934507369995117
    7. 'x' → logprob: -6.059507369995117
    8. ' x' → logprob: -6.559507369995117
    9. ' =' → logprob: -6.684507369995117
    10. '_' → logprob: -6.684507369995117

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007630874402821064
    2. '=' → logprob: -4.882630825042725
    3. ',' → logprob: -10.757631301879883
    4. ' ' → logprob: -14.007631301879883
    5. '=int' → logprob: -14.257631301879883
    6. '=input' → logprob: -14.757631301879883
    7. ')' → logprob: -14.882631301879883
    8. '  ' → logprob: -15.007631301879883
    9. '<|end|>' → logprob: -15.382631301879883
    10. ' ,' → logprob: -15.882631301879883

Token 40: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.11644259840250015
    2. 'map' → logprob: -2.2414426803588867
    3. ' input' → logprob: -6.116442680358887
    4. 'input' → logprob: -6.616442680358887
    5. ' ' → logprob: -10.116442680358887
    6. ' [' → logprob: -11.491442680358887
    7. ' list' → logprob: -12.491442680358887
    8. '[' → logprob: -12.491442680358887
    9. 'list' → logprob: -12.616442680358887
    10. ' tuple' → logprob: -13.616442680358887

Token 41: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0694567859172821
    2. '(int' → logprob: -2.8194568157196045
    3. '(lambda' → logprob: -5.194456577301025
    4. '(str' → logprob: -6.319456577301025
    5. '(input' → logprob: -10.194457054138184
    6. '(
' → logprob: -10.819457054138184
    7. '(tuple' → logprob: -11.819457054138184
    8. '(list' → logprob: -11.944457054138184
    9. ' (' → logprob: -12.069457054138184
    10. '(eval' → logprob: -12.444457054138184

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5582244992256165
    2. ',input' → logprob: -1.3082244396209717
    3. '(input' → logprob: -1.9332244396209717
    4. '(' → logprob: -4.683224678039551
    5. ')' → logprob: -6.558224678039551
    6. 'input' → logprob: -6.808224678039551
    7. ' ,' → logprob: -7.308224678039551
    8. '=input' → logprob: -9.30822467803955
    9. '```' → logprob: -9.68322467803955
    10. ' input' → logprob: -9.68322467803955

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009758921340107918
    2. ' input' → logprob: -4.634758949279785
    3. ')' → logprob: -13.384758949279785
    4. '(input' → logprob: -13.634758949279785
    5. '=input' → logprob: -16.38475799560547
    6. ',input' → logprob: -17.00975799560547
    7. ' ' → logprob: -17.13475799560547
    8. '	input' → logprob: -17.13475799560547
    9. '<input' → logprob: -17.25975799560547
    10. '```' → logprob: -18.00975799560547

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4485591948032379
    2. '())' → logprob: -1.1985591650009155
    3. '()' → logprob: -2.823559284210205
    4. '()))' → logprob: -8.573558807373047
    5. ')' → logprob: -8.823558807373047
    6. '()
' → logprob: -10.823558807373047
    7. '());' → logprob: -10.823558807373047
    8. ' ())' → logprob: -12.198558807373047
    9. '()[' → logprob: -12.323558807373047
    10. '()]' → logprob: -12.448558807373047

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.85366350505501e-05
    2. 'strip' → logprob: -9.25009822845459
    3. 'rstrip' → logprob: -14.00009822845459
    4. ')' → logprob: -14.12509822845459
    5. '(split' → logprob: -14.25009822845459
    6. ' split' → logprob: -16.000099182128906
    7. '())' → logprob: -18.125099182128906
    8. 'spl' → logprob: -18.750099182128906
    9. '()' → logprob: -19.000099182128906
    10. '.split' → logprob: -19.125099182128906

Token 46: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2725585699081421
    2. '())' → logprob: -1.522558569908142
    3. '))' → logprob: -4.397558689117432
    4. '()' → logprob: -4.897558689117432
    5. '()))' → logprob: -7.397558689117432
    6. '(' → logprob: -10.772558212280273
    7. '())
' → logprob: -13.147558212280273
    8. ')))' → logprob: -13.147558212280273
    9. '),' → logprob: -14.022558212280273
    10. ' ())' → logprob: -14.147558212280273

Token 47: 'edges' (ID: 39127)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9137741923332214
    2. 'graph' → logprob: -1.1637742519378662
    3. '[' → logprob: -2.913774251937866
    4. 'd' → logprob: -3.288774251937866
    5. 'for' → logprob: -3.288774251937866
    6. 'result' → logprob: -3.663774251937866
    7. ')' → logprob: -3.663774251937866
    8. '#' → logprob: -3.913774251937866
    9. 'data' → logprob: -4.538774013519287
    10. '
' → logprob: -4.913774013519287

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023965368047356606
    2. '=' → logprob: -3.773965358734131
    3. '[' → logprob: -8.773965835571289
    4. '_' → logprob: -8.773965835571289
    5. '[]' → logprob: -9.148965835571289
    6. '.' → logprob: -9.148965835571289
    7. '=[]' → logprob: -9.398965835571289
    8. '[:]' → logprob: -9.523965835571289
    9. ')' → logprob: -11.898965835571289
    10. ' ' → logprob: -12.023965835571289

Token 49: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0009898189455270767
    2. '[' → logprob: -7.50098991394043
    3. ' []' → logprob: -7.75098991394043
    4. '{}' → logprob: -13.00098991394043
    5. '[]}' → logprob: -13.37598991394043
    6. '[]
' → logprob: -14.12598991394043
    7. '[][]' → logprob: -14.37598991394043
    8. '[]=' → logprob: -15.12598991394043
    9. '[]>' → logprob: -15.12598991394043
    10. '[int' → logprob: -16.12598991394043

Token 50: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6396815776824951
    2. '(' → logprob: -1.6396815776824951
    3. ']' → logprob: -1.7646815776824951
    4. '(N' → logprob: -2.264681577682495
    5. '()' → logprob: -6.014681816101074
    6. '[' → logprob: -8.389681816101074
    7. 'for' → logprob: -8.639681816101074
    8. '(M' → logprob: -8.764681816101074
    9. '[N' → logprob: -9.514681816101074
    10. ',' → logprob: -9.514681816101074

Token 51: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06876960396766663
    2. ' range' → logprob: -3.443769693374634
    3. 'range' → logprob: -3.568769693374634
    4. '(' → logprob: -5.693769454956055
    5. ' _' → logprob: -6.693769454956055
    6. '(range' → logprob: -7.068769454956055
    7. ' i' → logprob: -8.443769454956055
    8. '_range' → logprob: -8.568769454956055
    9. ' ' → logprob: -8.693769454956055
    10. '()' → logprob: -8.818769454956055

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4046168923377991
    2. 'in' → logprob: -1.1546168327331543
    3. '(' → logprob: -4.154616832733154
    4. '(range' → logprob: -7.404616832733154
    5. '(in' → logprob: -7.779616832733154
    6. '(n' → logprob: -8.404617309570312
    7. ')' → logprob: -8.529617309570312
    8. ' (' → logprob: -8.779617309570312
    9. 'range' → logprob: -9.154617309570312
    10. '_' → logprob: -10.029617309570312

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717147771269083
    2. ' range' → logprob: -5.006717205047607
    3. '(range' → logprob: -13.50671672821045
    4. '	range' → logprob: -16.131717681884766
    5. 'ange' → logprob: -16.256717681884766
    6. 'rang' → logprob: -16.506717681884766
    7. ')' → logprob: -17.756717681884766
    8. 'ran' → logprob: -18.506717681884766
    9. '```' → logprob: -18.756717681884766
    10. 'in' → logprob: -19.006717681884766

Token 54: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03162389621138573
    2. '(M' → logprob: -3.5316238403320312
    3. '(' → logprob: -6.281623840332031
    4. '(n' → logprob: -14.531623840332031
    5. ' (' → logprob: -15.531623840332031
    6. '(
' → logprob: -15.781623840332031
    7. '((' → logprob: -15.781623840332031
    8. 'N' → logprob: -16.03162384033203
    9. ')' → logprob: -16.40662384033203
    10. 'M' → logprob: -16.53162384033203

Token 55: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.9266199160483666e-05
    2. ' )' → logprob: -11.500019073486328
    3. ')' → logprob: -11.750019073486328
    4. ')])' → logprob: -15.000019073486328
    5. ']' → logprob: -15.375019073486328
    6. '+' → logprob: -15.750019073486328
    7. ')]
' → logprob: -16.125019073486328
    8. '])' → logprob: -16.375019073486328
    9. '))' → logprob: -16.375019073486328
    10. ')],' → logprob: -16.750019073486328

Token 56: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007493520388379693
    2. ' for' → logprob: -7.625749588012695
    3. 'i' → logprob: -8.625749588012695
    4. '_' → logprob: -9.750749588012695
    5. '<|end|>' → logprob: -11.625749588012695
    6. 'j' → logprob: -12.875749588012695
    7. 'f' → logprob: -12.875749588012695
    8. 'F' → logprob: -13.375749588012695
    9. 'For' → logprob: -13.375749588012695
    10. '0' → logprob: -14.125749588012695

Token 57: ' mn' (ID: 34208)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07017550617456436
    2. '_' → logprob: -2.9451754093170166
    3. ' i' → logprob: -4.195175647735596
    4. '_i' → logprob: -9.695175170898438
    5. ' ' → logprob: -10.195175170898438
    6. 'i' → logprob: -11.820175170898438
    7. ' ‌' → logprob: -13.820175170898438
    8. ' j' → logprob: -14.445175170898438
    9. ' ' → logprob: -15.070175170898438
    10. ' ▁' → logprob: -15.445175170898438

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023681337013840675
    2. 'in' → logprob: -3.898681402206421
    3. '_' → logprob: -6.273681163787842
    4. ' ' → logprob: -7.773681163787842
    5. 's' → logprob: -7.898681163787842
    6. '1' → logprob: -9.648681640625
    7. ' _' → logprob: -9.773681640625
    8. '_in' → logprob: -9.898681640625
    9. ',' → logprob: -10.023681640625
    10. 'o' → logprob: -10.398681640625

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016079535707831383
    2. ' range' → logprob: -4.141079425811768
    3. 'input' → logprob: -10.516079902648926
    4. '(range' → logprob: -11.641079902648926
    5. 'm' → logprob: -13.016079902648926
    6. '	range' → logprob: -13.391079902648926
    7. 'rang' → logprob: -13.766079902648926
    8. ' ' → logprob: -13.766079902648926
    9. '[' → logprob: -14.391079902648926
    10. ' input' → logprob: -14.516079902648926

Token 60: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.004312853328883648
    2. '(' → logprob: -5.504312992095947
    3. '(N' → logprob: -8.379312515258789
    4. '(m' → logprob: -12.879312515258789
    5. 'M' → logprob: -13.504312515258789
    6. ' (' → logprob: -15.129312515258789
    7. '((' → logprob: -15.754312515258789
    8. '(int' → logprob: -16.25431251525879
    9. '(I' → logprob: -16.75431251525879
    10. '(len' → logprob: -17.00431251525879

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012464241590350866
    2. ' ):' → logprob: -7.251246452331543
    3. ')' → logprob: -7.626246452331543
    4. '):
' → logprob: -10.376246452331543
    5. ':' → logprob: -11.126246452331543
    6. ' )' → logprob: -14.376246452331543
    7. ']:' → logprob: -14.501246452331543
    8. '():' → logprob: -14.751246452331543
    9. '+' → logprob: -14.876246452331543
    10. ',' → logprob: -15.126246452331543

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028599759563803673
    2. '    
' → logprob: -5.403599739074707
    3. ' edges' → logprob: -5.403599739074707
    4. ' ,' → logprob: -5.653599739074707
    5. '<|end|>' → logprob: -5.778599739074707
    6. ' 
' → logprob: -6.153599739074707
    7. ' ' → logprob: -6.653599739074707
    8. ' n' → logprob: -7.278599739074707
    9. '    ' → logprob: -7.403599739074707
    10. 'edges' → logprob: -7.403599739074707

Token 63: ' things' (ID: 3283)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.12728913128376007
    2. 'u' → logprob: -2.127289056777954
    3. ' a' → logprob: -9.252288818359375
    4. 'a' → logprob: -9.252288818359375
    5. '   ' → logprob: -9.752288818359375
    6. ' line' → logprob: -10.377288818359375
    7. ' node' → logprob: -10.877288818359375
    8. '	u' → logprob: -11.502288818359375
    9. ' i' → logprob: -11.627288818359375
    10. 'i' → logprob: -12.377288818359375

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05670857056975365
    2. '=' → logprob: -3.056708574295044
    3. '.' → logprob: -5.181708335876465
    4. ',' → logprob: -6.931708335876465
    5. '   ' → logprob: -6.931708335876465
    6. ' .' → logprob: -9.306708335876465
    7. ' ' → logprob: -9.681708335876465
    8. '    ' → logprob: -9.806708335876465
    9. ' ,' → logprob: -9.806708335876465
    10. 's' → logprob: -9.931708335876465

Token 65: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1812080442905426
    2. 'list' → logprob: -2.0562081336975098
    3. ' input' → logprob: -3.4312081336975098
    4. ' list' → logprob: -5.30620813369751
    5. 'map' → logprob: -7.68120813369751
    6. '   ' → logprob: -11.306207656860352
    7. ' map' → logprob: -11.431207656860352
    8. 'int' → logprob: -12.931207656860352
    9. ' ' → logprob: -14.056207656860352
    10. 'tuple' → logprob: -14.181207656860352

Token 66: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0019426802173256874
    2. '(' → logprob: -6.2519426345825195
    3. '(int' → logprob: -11.37694263458252
    4. '(input' → logprob: -13.62694263458252
    5. '(
' → logprob: -14.25194263458252
    6. '()' → logprob: -14.87694263458252
    7. '(

' → logprob: -16.126943588256836
    8. 'map' → logprob: -16.376943588256836
    9. '(range' → logprob: -16.751943588256836
    10. '(filter' → logprob: -16.876943588256836

Token 67: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010513884481042624
    2. '(' → logprob: -6.876051425933838
    3. '<int' → logprob: -12.37605094909668
    4. 'int' → logprob: -12.50105094909668
    5. '[int' → logprob: -12.50105094909668
    6. '(lambda' → logprob: -13.37605094909668
    7. '(str' → logprob: -13.87605094909668
    8. ' (' → logprob: -13.87605094909668
    9. '=int' → logprob: -14.00105094909668
    10. '(input' → logprob: -14.37605094909668

Token 68: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3148009777069092
    2. ',' → logprob: -1.3148009777069092
    3. '(input' → logprob: -6.564801216125488
    4. '(),' → logprob: -9.314801216125488
    5. '(' → logprob: -10.439801216125488
    6. 'input' → logprob: -12.564801216125488
    7. ' ,' → logprob: -12.689801216125488
    8. ',int' → logprob: -13.814801216125488
    9. ',x' → logprob: -14.439801216125488
    10. '   ' → logprob: -15.814801216125488

Token 69: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17977897822856903
    2. ' input' → logprob: -1.8047789335250854
    3. '(input' → logprob: -10.804779052734375
    4. ',input' → logprob: -11.804779052734375
    5. '	input' → logprob: -12.804779052734375
    6. '   ' → logprob: -13.429779052734375
    7. '=input' → logprob: -14.804779052734375
    8. ')' → logprob: -14.804779052734375
    9. '_input' → logprob: -14.929779052734375
    10. '[input' → logprob: -15.054779052734375

Token 70: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -15.500005722045898
    4. '()));' → logprob: -16.7500057220459
    5. '()))' → logprob: -17.2500057220459
    6. ')' → logprob: -17.2500057220459
    7. '().'' → logprob: -17.8750057220459
    8. '(' → logprob: -17.8750057220459
    9. '()
' → logprob: -18.1250057220459
    10. '())' → logprob: -18.1250057220459

Token 71: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.842555426876061e-06
    2. 'strip' → logprob: -13.000004768371582
    3. ' split' → logprob: -13.250004768371582
    4. '(split' → logprob: -14.875004768371582
    5. ')' → logprob: -15.000004768371582
    6. 'spl' → logprob: -17.2500057220459
    7. 'rstrip' → logprob: -17.7500057220459
    8. '.split' → logprob: -18.0000057220459
    9. 'plit' → logprob: -18.7500057220459
    10. ' ' → logprob: -18.7500057220459

Token 72: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01375641580671072
    2. '()' → logprob: -5.138756275177002
    3. '())' → logprob: -5.388756275177002
    4. '))' → logprob: -5.763756275177002
    5. '()))
' → logprob: -9.88875675201416
    6. ')' → logprob: -10.88875675201416
    7. '(' → logprob: -11.76375675201416
    8. '()));' → logprob: -11.88875675201416
    9. '()))

' → logprob: -13.38875675201416
    10. '())))' → logprob: -13.38875675201416

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15919287502765656
    2. '<|end|>' → logprob: -3.2841928005218506
    3. ')' → logprob: -3.5341928005218506
    4. ' for' → logprob: -3.9091928005218506
    5. 'for' → logprob: -4.15919303894043
    6. ' ' → logprob: -4.15919303894043
    7. '[' → logprob: -4.28419303894043
    8. '    
' → logprob: -5.65919303894043
    9. '  ' → logprob: -6.15919303894043
    10. '    ' → logprob: -6.15919303894043

Token 74: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36158230900764465
    2. '   ' → logprob: -1.7365822792053223
    3. 'for' → logprob: -2.3615822792053223
    4. ' edges' → logprob: -3.9865822792053223
    5. 'edges' → logprob: -4.736582279205322
    6. '    
' → logprob: -6.736582279205322
    7. '<|end|>' → logprob: -6.861582279205322
    8. ' 
' → logprob: -7.361582279205322
    9. '[' → logprob: -7.486582279205322
    10. ')' → logprob: -8.23658275604248

Token 75: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5277311205863953
    2. ',' → logprob: -1.02773118019104
    3. ' ,' → logprob: -3.90273118019104
    4. '_edges' → logprob: -4.402730941772461
    5. '=' → logprob: -4.902730941772461
    6. '1' → logprob: -6.027730941772461
    7. ' -=' → logprob: -6.277730941772461
    8. 's' → logprob: -6.652730941772461
    9. '[' → logprob: -6.902730941772461
    10. '-' → logprob: -6.902730941772461

Token 76: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13870196044445038
    2. ' =' → logprob: -2.638701915740967
    3. '-' → logprob: -3.263701915740967
    4. '=' → logprob: -4.638701915740967
    5. ' ,' → logprob: -5.263701915740967
    6. ' -=' → logprob: -6.388701915740967
    7. ' -' → logprob: -7.513701915740967
    8. ',x' → logprob: -7.513701915740967
    9. ',y' → logprob: -7.763701915740967
    10. ')' → logprob: -7.888701915740967

Token 77: ' things' (ID: 3283)
  Prédit: 'things'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'things' → logprob: -0.16064155101776123
    2. ' things' → logprob: -1.9106415510177612
    3. 'th' → logprob: -7.910641670227051
    4. 'thing' → logprob: -10.53564167022705
    5. ' thing' → logprob: -12.16064167022705
    6. ' th' → logprob: -12.53564167022705
    7. '0' → logprob: -13.16064167022705
    8. '   ' → logprob: -13.41064167022705
    9. '(th' → logprob: -13.66064167022705
    10. ' thoughts' → logprob: -13.66064167022705

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.3464544432936236e-05
    2. '0' → logprob: -10.625043869018555
    3. '-' → logprob: -11.625043869018555
    4. '[-' → logprob: -12.125043869018555
    5. ' [' → logprob: -13.250043869018555
    6. '   ' → logprob: -13.750043869018555
    7. '(' → logprob: -14.500043869018555
    8. '[
' → logprob: -14.875043869018555
    9. ' ' → logprob: -15.500043869018555
    10. ' -' → logprob: -15.625043869018555

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005650650127790868
    2. ' ' → logprob: -7.500565052032471
    3. '1' → logprob: -11.500565528869629
    4. '   ' → logprob: -14.375565528869629
    5. '2' → logprob: -15.000565528869629
    6. '-' → logprob: -15.000565528869629
    7. '[' → logprob: -15.563065528869629
    8. '۰' → logprob: -16.625564575195312
    9. '    ' → logprob: -16.688064575195312
    10. '  ' → logprob: -16.688064575195312

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043207455426454544
    2. ']-' → logprob: -3.6682074069976807
    3. '-' → logprob: -4.29320764541626
    4. ' ]' → logprob: -6.41820764541626
    5. ' -' → logprob: -6.54320764541626
    6. '[' → logprob: -11.293207168579102
    7. '1' → logprob: -11.918207168579102
    8. ']
' → logprob: -12.543207168579102
    9. ')' → logprob: -13.293207168579102
    10. ' ' → logprob: -13.793207168579102

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20172975957393646
    2. ' -' → logprob: -1.7017297744750977
    3. '<|end|>' → logprob: -8.951729774475098
    4. ' ' → logprob: -9.326729774475098
    5. ' -
' → logprob: -10.326729774475098
    6. '-
' → logprob: -10.701729774475098
    7. '   ' → logprob: -11.326729774475098
    8. '[' → logprob: -12.701729774475098
    9. '<|end|>' → logprob: -12.701729774475098
    10. '1' → logprob: -12.826729774475098

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01104935072362423
    2. ' ' → logprob: -4.511049270629883
    3. '<|end|>' → logprob: -13.386049270629883
    4. '<|end|>' → logprob: -17.886049270629883
    5. '```' → logprob: -18.136049270629883
    6. '   ' → logprob: -19.136049270629883
    7. '１' → logprob: -19.198549270629883
    8. 'x' → logprob: -19.386049270629883
    9. '...' → logprob: -19.448549270629883
    10. '[' → logprob: -19.448549270629883

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '<|end|>' → logprob: -19.500003814697266
    4. '   ' → logprob: -20.625003814697266
    5. '[' → logprob: -20.875003814697266
    6. '１' → logprob: -21.375003814697266
    7. '১' → logprob: -21.437503814697266
    8. '```' → logprob: -21.562503814697266
    9. '...' → logprob: -21.625003814697266
    10. '2' → logprob: -21.750003814697266

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000580792548134923
    2. ' x' → logprob: -8.000580787658691
    3. '<|end|>' → logprob: -8.875580787658691
    4. ' ' → logprob: -10.125580787658691
    5. '   ' → logprob: -10.625580787658691
    6. '	x' → logprob: -10.750580787658691
    7. '<|end|>' → logprob: -12.375580787658691
    8. '  ' → logprob: -12.375580787658691
    9. ',' → logprob: -12.750580787658691
    10. '    ' → logprob: -12.875580787658691

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019354235846549273
    2. ' =' → logprob: -6.6269354820251465
    3. '=' → logprob: -7.5019354820251465
    4. '_' → logprob: -10.376935005187988
    5. '0' → logprob: -11.001935005187988
    6. '2' → logprob: -12.501935005187988
    7. ' ' → logprob: -13.126935005187988
    8. '-' → logprob: -14.251935005187988
    9. '_=' → logprob: -14.376935005187988
    10. '<|end|>' → logprob: -14.876935005187988

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033656761050224304
    2. '=' → logprob: -3.4086568355560303
    3. ' ' → logprob: -11.90865707397461
    4. ',' → logprob: -13.65865707397461
    5. '[' → logprob: -14.53365707397461
    6. '_' → logprob: -14.78365707397461
    7. ')' → logprob: -14.90865707397461
    8. '.' → logprob: -15.65865707397461
    9. ']' → logprob: -15.65865707397461
    10. '  ' → logprob: -16.03365707397461

Token 89: ' things' (ID: 3283)
  Prédit: ' things'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' things' → logprob: -0.018193021416664124
    2. 'things' → logprob: -4.018193244934082
    3. '<|end|>' → logprob: -11.268193244934082
    4. ' ' → logprob: -11.768193244934082
    5. ' spaces' → logprob: -12.018193244934082
    6. 'th' → logprob: -12.393193244934082
    7. ' cosas' → logprob: -12.893193244934082
    8. ' thing' → logprob: -13.143193244934082
    9. ' th' → logprob: -13.768193244934082
    10. 'Things' → logprob: -13.768193244934082

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.506661833962426e-05
    2. '1' → logprob: -9.62508487701416
    3. ' =' → logprob: -11.87508487701416
    4. '-' → logprob: -12.50008487701416
    5. '[-' → logprob: -13.00008487701416
    6. '[
' → logprob: -13.25008487701416
    7. '=' → logprob: -13.37508487701416
    8. ' [' → logprob: -14.12508487701416
    9. '0' → logprob: -14.75008487701416
    10. ' ' → logprob: -15.12508487701416

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10082031041383743
    2. '0' → logprob: -2.350820302963257
    3. ' ' → logprob: -7.475820541381836
    4. '2' → logprob: -10.725820541381836
    5. '-' → logprob: -11.475820541381836
    6. ']' → logprob: -11.850820541381836
    7. '[' → logprob: -13.350820541381836
    8. ' -' → logprob: -13.350820541381836
    9. '   ' → logprob: -13.475820541381836
    10. '3' → logprob: -13.850820541381836

Token 92: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20367425680160522
    2. '-' → logprob: -1.70367431640625
    3. ' ' → logprob: -6.45367431640625
    4. ')' → logprob: -7.45367431640625
    5. ']' → logprob: -10.82867431640625
    6. '   ' → logprob: -11.07867431640625
    7. '<|end|>' → logprob: -11.20367431640625
    8. '[' → logprob: -11.57867431640625
    9. ' )' → logprob: -11.70367431640625
    10. '1' → logprob: -11.70367431640625

Token 93: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.577278196811676
    2. '-' → logprob: -0.827278196811676
    3. ' ' → logprob: -6.702278137207031
    4. '<|end|>' → logprob: -9.452278137207031
    5. ' -
' → logprob: -11.827278137207031
    6. '[' → logprob: -12.077278137207031
    7. ' ' → logprob: -12.327278137207031
    8. ')' → logprob: -12.702278137207031
    9. '<|end|>' → logprob: -13.452278137207031
    10. '−' → logprob: -13.577278137207031

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080301150679588
    2. ' ' → logprob: -5.504080295562744
    3. '<|end|>' → logprob: -13.504080772399902
    4. '2' → logprob: -15.754080772399902
    5. '0' → logprob: -16.129079818725586
    6. '   ' → logprob: -16.879079818725586
    7. '```' → logprob: -17.129079818725586
    8. '<|end|>' → logprob: -17.566579818725586
    9. '`' → logprob: -17.691579818725586
    10. ' ' → logprob: -17.816579818725586

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.090760431718081e-05
    2. ' ' → logprob: -10.000090599060059
    3. '14' → logprob: -11.750090599060059
    4. '11' → logprob: -12.250090599060059
    5. '146' → logprob: -12.500090599060059
    6. '13' → logprob: -12.750090599060059
    7. '116' → logprob: -13.000090599060059
    8. '18' → logprob: -13.000090599060059
    9. '145' → logprob: -13.375090599060059
    10. '118' → logprob: -13.375090599060059

Token 96: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19086305797100067
    2. '<|end|>' → logprob: -2.3158631324768066
    3. ' ' → logprob: -3.8158631324768066
    4. ')' → logprob: -3.9408631324768066
    5. '    
' → logprob: -4.815863132476807
    6. '
' → logprob: -5.315863132476807
    7. ' edges' → logprob: -5.440863132476807
    8. 'edges' → logprob: -5.565863132476807
    9. ' 
' → logprob: -5.565863132476807
    10. '  
' → logprob: -6.565863132476807

Token 98: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.85956209897995
    2. 'edges' → logprob: -0.98456209897995
    3. '<|end|>' → logprob: -2.6095621585845947
    4. ')' → logprob: -2.9845621585845947
    5. ' ' → logprob: -3.9845621585845947
    6. '   ' → logprob: -4.109561920166016
    7. '
' → logprob: -4.484561920166016
    8. '(edges' → logprob: -4.734561920166016
    9. ' 
' → logprob: -4.859561920166016
    10. '\n' → logprob: -5.859561920166016

Token 99: ' z' (ID: 579)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.5841622948646545
    2. 'edges' → logprob: -0.8341622948646545
    3. 'x' → logprob: -5.08416223526001
    4. ' x' → logprob: -6.70916223526001
    5. 'z' → logprob: -8.584162712097168
    6. ' if' → logprob: -9.459162712097168
    7. '   ' → logprob: -9.459162712097168
    8. 'if' → logprob: -9.834162712097168
    9. ' z' → logprob: -10.334162712097168
    10. '```' → logprob: -10.334162712097168

Token 100: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09785541892051697
    2. '1' → logprob: -2.59785532951355
    3. '=' → logprob: -4.472855567932129
    4. '2' → logprob: -4.972855567932129
    5. ' ' → logprob: -9.222855567932129
    6. ',' → logprob: -9.597855567932129
    7. '  ' → logprob: -9.847855567932129
    8. '   ' → logprob: -9.972855567932129
    9. '0' → logprob: -10.222855567932129
    10. '=int' → logprob: -10.847855567932129

Token 101: ' sert' (ID: 52405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47606614232063293
    2. 'st' → logprob: -1.7260661125183105
    3. '=' → logprob: -2.2260661125183105
    4. 't' → logprob: -4.1010661125183105
    5. '1' → logprob: -4.2260661125183105
    6. 'g' → logprob: -4.4760661125183105
    7. 'x' → logprob: -4.6010661125183105
    8. 'w' → logprob: -4.8510661125183105
    9. 'q' → logprob: -4.9760661125183105
    10. 'd' → logprob: -5.7260661125183105

Token 102: ' à' (ID: 1221)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.7743606567382812
    2. 'pas' → logprob: -0.7743606567382812
    3. ' =' → logprob: -3.2743606567382812
    4. '=' → logprob: -3.7743606567382812
    5. ' ' → logprob: -5.899360656738281
    6. '<|end|>' → logprob: -5.899360656738281
    7. '_pas' → logprob: -5.899360656738281
    8. 'a' → logprob: -6.524360656738281
    9. 'à' → logprob: -7.024360656738281
    10. ' à' → logprob: -7.274360656738281

Token 103: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.010388544760644436
    2. ' rien' → logprob: -4.635388374328613
    3. 'pas' → logprob: -7.510388374328613
    4. 'quoi' → logprob: -10.760388374328613
    5. 'ri' → logprob: -11.385388374328613
    6. 'pe' → logprob: -11.885388374328613
    7. '```' → logprob: -12.135388374328613
    8. 'ras' → logprob: -12.510388374328613
    9. 'person' → logprob: -12.510388374328613
    10. ' r' → logprob: -12.885388374328613

Token 104: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' ce' (ID: 2357)
  Prédit: 'things'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'things' → logprob: -0.1819058209657669
    2. ' things' → logprob: -2.056905746459961
    3. 'the' → logprob: -4.181905746459961
    4. 'this' → logprob: -4.431905746459961
    5. ' this' → logprob: -5.681905746459961
    6. ' the' → logprob: -6.181905746459961
    7. 'th' → logprob: -6.681905746459961
    8. ' la' → logprob: -6.806905746459961
    9. 'la' → logprob: -7.556905746459961
    10. 'thing' → logprob: -7.681905746459961

Token 106: ' contexte' (ID: 82673)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.19302546977996826
    2. ' code' → logprob: -2.443025588989258
    3. ' contexte' → logprob: -3.568025588989258
    4. 'context' → logprob: -4.193025588989258
    5. 'for' → logprob: -5.193025588989258
    6. 'con' → logprob: -5.318025588989258
    7. '```' → logprob: -5.318025588989258
    8. 'c' → logprob: -5.443025588989258
    9. 'm' → logprob: -5.693025588989258
    10. 'ligne' → logprob: -5.818025588989258

Token 107: ' ?
' (ID: 19740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7751690149307251
    2. '   ' → logprob: -1.400169014930725
    3. '<|end|>' → logprob: -1.400169014930725
    4. ' 
' → logprob: -4.6501688957214355
    5. '  ' → logprob: -4.7751688957214355
    6. '    
' → logprob: -5.1501688957214355
    7. '\n' → logprob: -5.2751688957214355
    8. '    ' → logprob: -5.6501688957214355
    9. '  
' → logprob: -5.7751688957214355
    10. ')' → logprob: -5.7751688957214355

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7032769322395325
    2. ' ' → logprob: -1.8282768726348877
    3. '<|end|>' → logprob: -1.8282768726348877
    4. '\n' → logprob: -3.0782768726348877
    5. '    
' → logprob: -3.4532768726348877
    6. ' 
' → logprob: -3.4532768726348877
    7. '    ' → logprob: -4.578277111053467
    8. '  ' → logprob: -4.578277111053467
    9. '
' → logprob: -4.578277111053467
    10. '\' → logprob: -4.828277111053467

Token 109: ' edges' (ID: 22569)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11651749163866043
    2. '   ' → logprob: -2.8665175437927246
    3. ' ' → logprob: -3.6165175437927246
    4. ' z' → logprob: -4.741517543792725
    5. '<|end|>' → logprob: -5.991517543792725
    6. '  ' → logprob: -6.116517543792725
    7. ' 
' → logprob: -6.116517543792725
    8. '	z' → logprob: -6.241517543792725
    9. '    ' → logprob: -6.866517543792725
    10. 'edges' (adapté à ' edges') → logprob: -6.991517543792725

Token 110: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00045379105722531676
    2. '[' → logprob: -7.875453948974609
    3. '[y' → logprob: -9.62545394897461
    4. '[
' → logprob: -13.00045394897461
    5. '[s' → logprob: -13.25045394897461
    6. '```' → logprob: -13.62545394897461
    7. '[z' → logprob: -14.12545394897461
    8. '[j' → logprob: -15.00045394897461
    9. '\[' → logprob: -15.75045394897461
    10. 'x' → logprob: -15.75045394897461

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05050688982009888
    2. '][' → logprob: -3.050506830215454
    3. ']' → logprob: -6.925507068634033
    4. '[' → logprob: -7.175507068634033
    5. '"][' → logprob: -10.425506591796875
    6. '[x' → logprob: -10.425506591796875
    7. ''][' → logprob: -11.300506591796875
    8. '```' → logprob: -11.300506591796875
    9. '()][' → logprob: -11.425506591796875
    10. ' ][' → logprob: -11.425506591796875

Token 112: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00023977462842594832
    2. ']' → logprob: -8.375239372253418
    3. '.append' → logprob: -11.875239372253418
    4. ' ].' → logprob: -13.375239372253418
    5. '.' → logprob: -14.875239372253418
    6. ').' → logprob: -15.625239372253418
    7. '][' → logprob: -17.250240325927734
    8. ''].' → logprob: -17.250240325927734
    9. '[' → logprob: -17.625240325927734
    10. '}.' → logprob: -18.500240325927734

Token 113: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -14.125000953674316
    3. '.append' → logprob: -15.125000953674316
    4. 'appen' → logprob: -15.500000953674316
    5. 'add' → logprob: -17.625001907348633
    6. '_append' → logprob: -18.375001907348633
    7. '	append' → logprob: -18.375001907348633
    8. 'Append' → logprob: -18.875001907348633
    9. 'app' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.750001907348633

Token 114: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0022345937322825193
    2. '(' → logprob: -6.25223445892334
    3. '((' → logprob: -8.12723445892334
    4. 'y' → logprob: -11.50223445892334
    5. '(
' → logprob: -15.62723445892334
    6. '(x' → logprob: -16.627235412597656
    7. ' (' → logprob: -16.752235412597656
    8. '('' → logprob: -17.752235412597656
    9. '([' → logprob: -17.752235412597656
    10. ')y' → logprob: -18.252235412597656

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ')' → logprob: -17.0
    3. '```' → logprob: -18.375
    4. '])' → logprob: -18.5
    5. '<|end|>' → logprob: -18.75
    6. '１' → logprob: -19.0
    7. ' ' → logprob: -19.125
    8. '১' → logprob: -19.25
    9. '[' → logprob: -19.375
    10. ']' → logprob: -19.9375

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001789881061995402
    2. ' )' → logprob: -9.000179290771484
    3. ')
' → logprob: -9.875179290771484
    4. '<|end|>' → logprob: -13.125179290771484
    5. ')

' → logprob: -15.125179290771484
    6. '   ' → logprob: -15.125179290771484
    7. ')return' → logprob: -15.375179290771484
    8. ')#' → logprob: -15.625179290771484
    9. '),' → logprob: -15.875179290771484
    10. ',' → logprob: -16.125179290771484

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.062250327318906784
    2. '   ' → logprob: -3.0622503757476807
    3. ' edges' → logprob: -4.812250137329102
    4. '<|end|>' → logprob: -5.812250137329102
    5. '(edges' → logprob: -7.937250137329102
    6. '[' → logprob: -8.187250137329102
    7. '```' → logprob: -8.187250137329102
    8. ')' → logprob: -8.312250137329102
    9. '    
' → logprob: -8.687250137329102
    10. 'x' → logprob: -8.812250137329102

Token 119: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.13019701838493347
    2. '[y' → logprob: -2.130197048187256
    3. '[' → logprob: -5.755197048187256
    4. '[
' → logprob: -10.755196571350098
    5. '[s' → logprob: -10.880196571350098
    6. '```' → logprob: -11.255196571350098
    7. '[z' → logprob: -11.755196571350098
    8. 'x' → logprob: -12.380196571350098
    9. '[u' → logprob: -13.005196571350098
    10. '[j' → logprob: -13.005196571350098

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000536828360054642
    2. '[' → logprob: -8.000536918640137
    3. '].' → logprob: -9.625536918640137
    4. ']' → logprob: -10.500536918640137
    5. '][' → logprob: -10.500536918640137
    6. '2' → logprob: -11.125536918640137
    7. '```' → logprob: -11.375536918640137
    8. '[
' → logprob: -11.625536918640137
    9. '])' → logprob: -12.250536918640137
    10. '.' → logprob: -12.375536918640137

Token 121: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06221628561615944
    2. ').' → logprob: -3.187216281890869
    3. '.' → logprob: -4.187216281890869
    4. '.append' → logprob: -5.687216281890869
    5. ']' → logprob: -8.437216758728027
    6. ')' → logprob: -8.937216758728027
    7. '}.' → logprob: -10.187216758728027
    8. ' .' → logprob: -10.312216758728027
    9. ' ].' → logprob: -11.187216758728027
    10. '<|end|>' → logprob: -12.062216758728027

Token 122: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.723352049040841e-06
    2. '.append' → logprob: -12.625004768371582
    3. 'appen' → logprob: -14.375004768371582
    4. ' append' → logprob: -15.000004768371582
    5. '	append' → logprob: -15.000004768371582
    6. '_append' → logprob: -16.625003814697266
    7. 'app' → logprob: -17.125003814697266
    8. 'Append' → logprob: -17.125003814697266
    9. 'x' → logprob: -18.125003814697266
    10. 'prepend' → logprob: -18.500003814697266

Token 123: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00015908108616713434
    2. '(' → logprob: -8.75015926361084
    3. '(
' → logprob: -14.75015926361084
    4. 'x' → logprob: -15.75015926361084
    5. ' (' → logprob: -18.000158309936523
    6. ',x' → logprob: -19.500158309936523
    7. '(xs' → logprob: -19.750158309936523
    8. '((' → logprob: -20.125158309936523
    9. '(s' → logprob: -20.125158309936523
    10. '<|end|>' → logprob: -20.750158309936523

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -12.375011444091797
    3. 'x' → logprob: -12.750011444091797
    4. '[' → logprob: -14.000011444091797
    5. 's' → logprob: -14.125011444091797
    6. '])' → logprob: -14.500011444091797
    7. ']' → logprob: -14.750011444091797
    8. '```' → logprob: -14.750011444091797
    9. '_' → logprob: -14.937511444091797
    10. '[x' → logprob: -15.312511444091797

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.625022888183594
    4. ')

' → logprob: -15.500022888183594
    5. '   ' → logprob: -16.000022888183594
    6. ')return' → logprob: -16.250022888183594
    7. ')n' → logprob: -16.375022888183594
    8. '<|end|>' → logprob: -16.375022888183594
    9. '))' → logprob: -16.500022888183594
    10. '),' → logprob: -16.625022888183594

Token 126: 'from' (ID: 2845)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.039338018745183945
    2. 'def' → logprob: -4.539338111877441
    3. 'dist' → logprob: -4.789338111877441
    4. 'distance' → logprob: -4.914338111877441
    5. 'from' → logprob: -5.664338111877441
    6. 'color' → logprob: -6.039338111877441
    7. '#' → logprob: -6.539338111877441
    8. 'colors' → logprob: -7.039338111877441
    9. 'for' → logprob: -7.289338111877441
    10. 'vis' → logprob: -7.414338111877441

Token 127: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.00011188744247192517
    2. ' queue' → logprob: -10.00011157989502
    3. 'collections' → logprob: -10.12511157989502
    4. ' collection' → logprob: -10.87511157989502
    5. ' colle' → logprob: -13.25011157989502
    6. ' heap' → logprob: -13.37511157989502
    7. ' sys' → logprob: -13.50011157989502
    8. '_' → logprob: -13.75011157989502
    9. '_collection' → logprob: -14.50011157989502
    10. ' cole' → logprob: -15.00011157989502

Token 128: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.05565722659230232
    2. ' import' → logprob: -2.930657148361206
    3. 'port' → logprob: -7.805657386779785
    4. 'deque' → logprob: -9.930657386779785
    5. '```' → logprob: -9.930657386779785
    6. 'n' → logprob: -10.305657386779785
    7. 'ections' → logprob: -10.305657386779785
    8. 'ort' → logprob: -10.805657386779785
    9. 'ection' → logprob: -10.805657386779785
    10. '.' → logprob: -11.055657386779785

Token 129: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023262832313776016
    2. ' deque' → logprob: -3.7732627391815186
    3. 'de' → logprob: -11.898262977600098
    4. 'collections' → logprob: -12.273262977600098
    5. 'default' → logprob: -12.523262977600098
    6. ' defaultdict' → logprob: -13.023262977600098
    7. 'queue' → logprob: -15.898262977600098
    8. 'Deque' → logprob: -18.14826202392578
    9. ' de' → logprob: -19.02326202392578
    10. 'd' → logprob: -19.02326202392578

Token 130: ' as' (ID: 472)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8351220488548279
    2. '
' → logprob: -1.3351221084594727
    3. 'distance' → logprob: -1.8351221084594727
    4. 'dist' → logprob: -3.2101221084594727
    5. '

' → logprob: -3.2101221084594727
    6. 'queue' → logprob: -3.5851221084594727
    7. 'def' → logprob: -3.7101221084594727
    8. 'deque' → logprob: -5.460122108459473
    9. 'q' → logprob: -6.335122108459473
    10. ' visited' → logprob: -6.710122108459473

Token 131: ' dq' (ID: 164235)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.3659772574901581
    2. ' deque' → logprob: -1.2409772872924805
    3. 'Deque' → logprob: -4.6159772872924805
    4. ' dq' → logprob: -5.9909772872924805
    5. 'dq' → logprob: -6.2409772872924805
    6. '_de' → logprob: -6.9909772872924805
    7. 'de' → logprob: -7.1159772872924805
    8. ' De' → logprob: -7.3659772872924805
    9. ' de' → logprob: -8.61597728729248
    10. 'De' → logprob: -8.61597728729248

Token 132: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3353753089904785
    2. '

' → logprob: -1.5853753089904785
    3. 'queue' → logprob: -3.4603753089904785
    4. 'def' → logprob: -4.3353753089904785
    5. 'deque' → logprob: -4.9603753089904785
    6. 'q' → logprob: -5.0853753089904785
    7. 'ue' → logprob: -5.3353753089904785
    8. 'e' → logprob: -5.5853753089904785
    9. 'u' → logprob: -5.7103753089904785
    10. '
' → logprob: -6.0853753089904785

Token 133: 'def' (ID: 1314)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5397634506225586
    2. 'dist' → logprob: -1.0397634506225586
    3. 'def' → logprob: -3.4147634506225586
    4. 'distance' → logprob: -4.414763450622559
    5. 'vis' → logprob: -5.164763450622559
    6. 'queue' → logprob: -5.414763450622559
    7. 'q' → logprob: -5.914763450622559
    8. 'color' → logprob: -6.414763450622559
    9. 'visit' → logprob: -7.039763450622559
    10. '
' → logprob: -7.289763450622559

Token 134: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.008834020234644413
    2. 'b' → logprob: -4.758833885192871
    3. ' BFS' → logprob: -9.008833885192871
    4. ' shortest' → logprob: -10.133833885192871
    5. '	b' → logprob: -11.133833885192871
    6. ' dfs' → logprob: -11.758833885192871
    7. ' ' → logprob: -11.758833885192871
    8. 'B' → logprob: -11.758833885192871
    9. ' b' → logprob: -12.508833885192871
    10. '_b' → logprob: -12.508833885192871

Token 135: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01552851963788271
    2. '(N' → logprob: -5.265528678894043
    3. '(node' → logprob: -5.390528678894043
    4. '(start' → logprob: -6.140528678894043
    5. '(n' → logprob: -6.640528678894043
    6. '(s' → logprob: -7.015528678894043
    7. '(nodes' → logprob: -8.140528678894043
    8. '(x' → logprob: -8.640528678894043
    9. '(queue' → logprob: -8.640528678894043
    10. '(graph' → logprob: -8.765528678894043

Token 136: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.166467547416687
    2. ',' → logprob: -1.916467547416687
    3. '):
' → logprob: -5.541467666625977
    4. ')' → logprob: -6.416467666625977
    5. ',start' → logprob: -8.041467666625977
    6. ' ):' → logprob: -9.041467666625977
    7. '(start' → logprob: -9.166467666625977
    8. ',node' → logprob: -10.166467666625977
    9. '):
' → logprob: -10.541467666625977
    10. ':' → logprob: -11.041467666625977

Token 137: ' clr' (ID: 149987)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.5744900107383728
    2. 'visited' → logprob: -1.0744900703430176
    3. ' distances' → logprob: -3.0744900703430176
    4. 'N' → logprob: -4.324490070343018
    5. ' N' → logprob: -4.699490070343018
    6. ' n' → logprob: -4.824490070343018
    7. 'n' → logprob: -4.949490070343018
    8. 'dist' → logprob: -5.449490070343018
    9. ' graph' → logprob: -6.199490070343018
    10. ')' → logprob: -6.699490070343018

Token 138: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005947406403720379
    2. 'y' → logprob: -6.255947589874268
    3. '):
' → logprob: -6.505947589874268
    4. ',' → logprob: -6.880947589874268
    5. ')' → logprob: -7.755947589874268
    6. 'ation' → logprob: -8.00594711303711
    7. 'u' → logprob: -9.00594711303711
    8. 'ay' → logprob: -9.25594711303711
    9. 'er' → logprob: -9.50594711303711
    10. '):

' → logprob: -10.00594711303711

Token 139: ' clr' (ID: 149987)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.7521814107894897
    2. 'color' → logprob: -0.8771814107894897
    3. ' colors' → logprob: -3.0021815299987793
    4. 'graph' → logprob: -3.6271815299987793
    5. ' color' → logprob: -4.002181529998779
    6. 'visited' → logprob: -5.002181529998779
    7. 'edges' → logprob: -6.127181529998779
    8. ' graph' → logprob: -6.627181529998779
    9. 'adj' → logprob: -6.752181529998779
    10. ' edges' → logprob: -6.877181529998779

Token 140: '_list' (ID: 4162)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.758929431438446
    2. 's' → logprob: -1.3839294910430908
    3. '):' → logprob: -1.3839294910430908
    4. ',' → logprob: -4.383929252624512
    5. '_list' → logprob: -5.633929252624512
    6. 'es' → logprob: -5.758929252624512
    7. '[' → logprob: -5.883929252624512
    8. '_map' → logprob: -5.883929252624512
    9. '_array' → logprob: -7.008929252624512
    10. '[]):' → logprob: -7.633929252624512

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00506392540410161
    2. ')' → logprob: -5.630064010620117
    3. ',' → logprob: -6.630064010620117
    4. '):
' → logprob: -9.255064010620117
    5. ' ):' → logprob: -10.630064010620117
    6. '[' → logprob: -12.130064010620117
    7. ':' → logprob: -12.255064010620117
    8. '[]):' → logprob: -12.505064010620117
    9. '=' → logprob: -13.380064010620117
    10. ')):' → logprob: -13.880064010620117

Token 142: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030982229858636856
    2. '):' → logprob: -4.03098201751709
    3. '   ' → logprob: -4.65598201751709
    4. ':
' → logprob: -6.78098201751709
    5. ' :' → logprob: -7.15598201751709
    6. '():' → logprob: -7.40598201751709
    7. ' ' → logprob: -8.78098201751709
    8. ':return' → logprob: -8.90598201751709
    9. '(' → logprob: -9.28098201751709
    10. '<|end|>' → logprob: -9.40598201751709

Token 143: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.9613898396492004
    2. 'queue' → logprob: -1.2113897800445557
    3. '   ' → logprob: -1.4613897800445557
    4. 'q' → logprob: -2.9613897800445557
    5. ' q' → logprob: -3.4613897800445557
    6. ' ' → logprob: -6.836390018463135
    7. ' que' → logprob: -7.336390018463135
    8. '	queue' → logprob: -7.586390018463135
    9. ' dq' → logprob: -7.836390018463135
    10. 'deque' → logprob: -8.211389541625977

Token 144: ' Pas' (ID: 18323)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5081220865249634
    2. 'q' → logprob: -1.0081220865249634
    3. ' queue' → logprob: -4.383121967315674
    4. 'que' → logprob: -5.508121967315674
    5. ' q' → logprob: -5.758121967315674
    6. 'file' → logprob: -5.758121967315674
    7. 'visited' → logprob: -6.008121967315674
    8. '   ' → logprob: -6.258121967315674
    9. 'd' → logprob: -7.008121967315674
    10. 'dq' → logprob: -7.133121967315674

Token 145: ' sûr' (ID: 46415)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9575797915458679
    2. '   ' → logprob: -1.2075798511505127
    3. ' un' → logprob: -2.4575798511505127
    4. 'de' → logprob: -2.9575798511505127
    5. ' une' → logprob: -3.0825798511505127
    6. ' encore' → logprob: -3.2075798511505127
    7. ' ' → logprob: -3.3325798511505127
    8. 'd' → logprob: -4.707579612731934
    9. ' la' → logprob: -4.957579612731934
    10. ' d' → logprob: -4.957579612731934

Token 146: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10451339930295944
    2. ':' → logprob: -2.60451340675354
    3. '(' → logprob: -4.479513168334961
    4. ' ' → logprob: -5.229513168334961
    5. ' :' → logprob: -6.229513168334961
    6. ')' → logprob: -6.479513168334961
    7. ',' → logprob: -6.854513168334961
    8. '  ' → logprob: -6.979513168334961
    9. '    ' → logprob: -7.479513168334961
    10. '[' → logprob: -8.354513168334961

Token 147: ' style' (ID: 2713)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -1.15776526927948
    2. 'code' → logprob: -1.65776526927948
    3. 'b' → logprob: -2.6577653884887695
    4. 'fonction' → logprob: -2.7827653884887695
    5. 'sens' → logprob: -3.0327653884887695
    6. 'result' → logprob: -3.1577653884887695
    7. ' tout' → logprob: -3.6577653884887695
    8. 'graph' → logprob: -3.6577653884887695
    9. 'niveau' → logprob: -3.6577653884887695
    10. 'color' → logprob: -4.0327653884887695

Token 148: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18359099328517914
    2. ':' → logprob: -2.183590888977051
    3. '<|end|>' → logprob: -3.308590888977051
    4. ' ' → logprob: -4.683590888977051
    5. ' :' → logprob: -5.933590888977051
    6. '  ' → logprob: -6.433590888977051
    7. '<|end|>' → logprob: -6.808590888977051
    8. '	queue' → logprob: -6.933590888977051
    9. ' queue' → logprob: -7.808590888977051
    10. ':
' → logprob: -8.05859088897705

Token 149: ' la' (ID: 557)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.343338280916214
    2. 'cod' → logprob: -2.2183382511138916
    3. ' code' → logprob: -2.4683382511138916
    4. 'indent' → logprob: -3.4683382511138916
    5. 'la' → logprob: -4.968338489532471
    6. 'l' → logprob: -4.968338489532471
    7. 'fonction' → logprob: -5.093338489532471
    8. '   ' → logprob: -5.218338489532471
    9. ' ' → logprob: -5.468338489532471
    10. 'coding' → logprob: -5.593338489532471

Token 150: ' signature' (ID: 18960)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.0715327113866806
    2. 'function' → logprob: -2.946532726287842
    3. ' fonction' → logprob: -5.321532726287842
    4. 'color' → logprob: -5.946532726287842
    5. 'def' → logprob: -6.696532726287842
    6. 'code' → logprob: -6.946532726287842
    7. 'fon' → logprob: -7.196532726287842
    8. 'graph' → logprob: -7.446532726287842
    9. 'ligne' → logprob: -7.446532726287842
    10. 'f' → logprob: -7.446532726287842

Token 151: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045580048114061356
    2. '   ' → logprob: -3.6705801486968994
    3. '):' → logprob: -4.67057991027832
    4. '<|end|>' → logprob: -5.79557991027832
    5. ' :' → logprob: -6.29557991027832
    6. '(' → logprob: -6.79557991027832
    7. ':
' → logprob: -6.92057991027832
    8. ')' → logprob: -7.17057991027832
    9. ',' → logprob: -7.79557991027832
    10. ' ' → logprob: -7.79557991027832

Token 152: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6574800610542297
    2. ' queue' → logprob: -1.782480001449585
    3. ' but' → logprob: -2.657480001449585
    4. 'queue' → logprob: -2.782480001449585
    5. ' que' → logprob: -3.532480001449585
    6. ' distance' → logprob: -4.157480239868164
    7. 'def' → logprob: -4.157480239868164
    8. ' start' → logprob: -4.157480239868164
    9. 'distance' → logprob: -4.282480239868164
    10. ' level' → logprob: -4.532480239868164

Token 153: ' pass' (ID: 1853)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.42129501700401306
    2. 'queue' → logprob: -1.2962950468063354
    3. '   ' → logprob: -2.921294927597046
    4. ' file' → logprob: -5.046295166015625
    5. ' q' → logprob: -5.296295166015625
    6. 'file' → logprob: -6.421295166015625
    7. 'q' → logprob: -6.671295166015625
    8. ' que' → logprob: -8.046295166015625
    9. 'def' → logprob: -8.296295166015625
    10. ' ' → logprob: -8.671295166015625

Token 154: 'ons' (ID: 1808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4978458881378174
    2. ':' → logprob: -2.1228458881378174
    3. '):' → logprob: -2.2478458881378174
    4. ')' → logprob: -2.3728458881378174
    5. '<|end|>' → logprob: -3.1228458881378174
    6. '
' → logprob: -3.7478458881378174
    7. '):
' → logprob: -6.622845649719238
    8. '<|end|>' → logprob: -7.497845649719238
    9. '  ' → logprob: -7.622845649719238
    10. '    
' → logprob: -7.622845649719238

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23827309906482697
    2. ':' → logprob: -1.6132731437683105
    3. ')' → logprob: -5.8632731437683105
    4. '<|end|>' → logprob: -5.8632731437683105
    5. '):' → logprob: -6.1132731437683105
    6. ' :' → logprob: -6.6132731437683105
    7. ' ' → logprob: -7.2382731437683105
    8. '
' → logprob: -7.2382731437683105
    9. '    
' → logprob: -7.6132731437683105
    10. '  ' → logprob: -7.8632731437683105

Token 157: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5718033909797668
    2. ' queue' → logprob: -0.9468033909797668
    3. '   ' → logprob: -3.696803331375122
    4. 'q' (adapté à ' q') → logprob: -4.321803569793701
    5. ' q' → logprob: -5.071803569793701
    6. 'deque' → logprob: -7.196803569793701
    7. ' que' → logprob: -7.571803569793701
    8. '	queue' → logprob: -7.821803569793701
    9. 'que' → logprob: -8.071803092956543
    10. ' ' → logprob: -8.571803092956543

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14277301728725433
    2. '=' → logprob: -2.017772912979126
    3. 'ue' → logprob: -9.642772674560547
    4. '.' → logprob: -11.267772674560547
    5. 'u' → logprob: -11.517772674560547
    6. ',' → logprob: -12.892772674560547
    7. ' ' → logprob: -13.142772674560547
    8. '=u' → logprob: -13.642772674560547
    9. 'uer' → logprob: -14.267772674560547
    10. ')' → logprob: -14.267772674560547

Token 159: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.6328126788139343
    2. ' dq' → logprob: -0.7578126788139343
    3. 'd' → logprob: -8.7578125
    4. '	d' → logprob: -10.7578125
    5. ' d' → logprob: -11.0078125
    6. ' ' → logprob: -12.7578125
    7. '
' → logprob: -12.8828125
    8. 'deque' → logprob: -13.0078125
    9. '=d' → logprob: -13.3828125
    10. '[d' → logprob: -13.3828125

Token 160: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.580215334892273
    2. '()' → logprob: -0.830215334892273
    3. '([(' → logprob: -5.5802154541015625
    4. '()
' → logprob: -8.080215454101562
    5. '(' → logprob: -9.080215454101562
    6. '[(' → logprob: -10.580215454101562
    7. '()

' → logprob: -10.830215454101562
    8. '[' → logprob: -11.705215454101562
    9. '();' → logprob: -12.580215454101562
    10. '()
' → logprob: -13.080215454101562

Token 161: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00193458900321275
    2. '(start' → logprob: -6.50193452835083
    3. ' start' → logprob: -7.75193452835083
    4. '[start' → logprob: -13.376935005187988
    5. ' (' → logprob: -15.001935005187988
    6. '	start' → logprob: -15.751935005187988
    7. ',start' → logprob: -16.751934051513672
    8. '(' → logprob: -16.876934051513672
    9. '   ' → logprob: -16.876934051513672
    10. ':start' → logprob: -17.251934051513672

Token 162: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005200279993005097
    2. '])
' → logprob: -7.7505202293396
    3. ' ])' → logprob: -9.500519752502441
    4. ')' → logprob: -12.125519752502441
    5. '])

' → logprob: -12.250519752502441
    6. '])
' → logprob: -13.375519752502441
    7. ')])' → logprob: -13.875519752502441
    8. ']' → logprob: -14.125519752502441
    9. '],' → logprob: -15.625519752502441
    10. ')]' → logprob: -16.125520706176758

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39749613404273987
    2. '
' → logprob: -1.5224961042404175
    3. '<|end|>' → logprob: -2.522496223449707
    4. '    
' → logprob: -4.647496223449707
    5. ')' → logprob: -5.272496223449707
    6. '  
' → logprob: -5.522496223449707
    7. '	while' → logprob: -5.772496223449707
    8. ' 
' → logprob: -6.272496223449707
    9. ' ' → logprob: -6.647496223449707
    10. '   
' → logprob: -7.272496223449707

Token 164: ' clr' (ID: 149987)
  Prédit: 'clr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clr' (adapté à ' clr') → logprob: -0.027511928230524063
    2. '   ' → logprob: -3.9025118350982666
    3. 'while' → logprob: -5.527512073516846
    4. ' clr' → logprob: -5.902512073516846
    5. ' while' → logprob: -9.777511596679688
    6. 'color' → logprob: -10.027511596679688
    7. 'colors' → logprob: -10.777511596679688
    8. 'cl' → logprob: -10.777511596679688
    9. '	while' → logprob: -10.777511596679688
    10. '  ' → logprob: -11.027511596679688

Token 165: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0006572735728695989
    2. '[start' → logprob: -7.375657081604004
    3. '[' → logprob: -11.375657081604004
    4. '[_' → logprob: -11.750657081604004
    5. 'list' → logprob: -12.875657081604004
    6. '```' → logprob: -13.125657081604004
    7. '[List' → logprob: -13.625657081604004
    8. '_LIST' → logprob: -13.750657081604004
    9. 'List' → logprob: -14.125657081604004
    10. '[list' → logprob: -15.000657081604004

Token 166: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -8.983476436696947e-05
    2. '[' → logprob: -9.375089645385742
    3. '[s' → logprob: -13.625089645385742
    4. 'start' → logprob: -14.125089645385742
    5. '```' → logprob: -14.500089645385742
    6. '[
' → logprob: -14.750089645385742
    7. '[end' → logprob: -14.750089645385742
    8. '
' → logprob: -15.125089645385742
    9. '[:]' → logprob: -15.750089645385742
    10. '=start' → logprob: -16.000089645385742

Token 167: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011808603449026123
    2. ']=' → logprob: -9.750118255615234
    3. ' ]' → logprob: -9.750118255615234
    4. '])' → logprob: -14.375118255615234
    5. ')' → logprob: -15.500118255615234
    6. '=' → logprob: -15.750118255615234
    7. '[' → logprob: -16.125118255615234
    8. ']
' → logprob: -16.250118255615234
    9. ' ' → logprob: -16.500118255615234
    10. ']==' → logprob: -16.875118255615234

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. '=
' → logprob: -14.76815128326416
    4. ' ' → logprob: -15.89315128326416
    5. '[' → logprob: -15.89315128326416
    6. '=

' → logprob: -16.518150329589844
    7. ' =
' → logprob: -17.143150329589844
    8. '=int' → logprob: -17.143150329589844
    9. '=color' → logprob: -17.768150329589844
    10. ',' → logprob: -17.768150329589844

Token 169: ' clr' (ID: 149987)
  Prédit: 'clr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clr' → logprob: -0.001706247916445136
    2. ' clr' → logprob: -6.376706123352051
    3. '1' → logprob: -14.12670612335205
    4. 'cl' → logprob: -14.25170612335205
    5. '0' → logprob: -14.50170612335205
    6. '   ' → logprob: -14.87670612335205
    7. 'color' → logprob: -14.87670612335205
    8. 'clf' → logprob: -15.12670612335205
    9. ' ' → logprob: -15.37670612335205
    10. 'clar' → logprob: -15.50170612335205

Token 170: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2839740812778473
    2. '<|end|>' → logprob: -1.408974051475525
    3. '<|end|>' → logprob: -7.1589741706848145
    4. '\n' → logprob: -7.6589741706848145
    5. '  
' → logprob: -7.7839741706848145
    6. '   ' → logprob: -8.033973693847656
    7. ' 
' → logprob: -8.408973693847656
    8. '    
' → logprob: -8.533973693847656
    9. ')' → logprob: -8.658973693847656
    10. ' ' → logprob: -10.283973693847656

Token 171: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023525435477495193
    2. '   ' → logprob: -4.523525238037109
    3. '    
' → logprob: -5.273525238037109
    4. ' 
' → logprob: -5.898525238037109
    5. '  
' → logprob: -6.398525238037109
    6. '<|end|>' → logprob: -6.773525238037109
    7. ' while' → logprob: -7.273525238037109
    8. 'while' → logprob: -8.39852523803711
    9. '	while' → logprob: -8.77352523803711
    10. '   
' → logprob: -8.89852523803711

Token 172: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.16069342195987701
    2. ' while' → logprob: -1.9106934070587158
    3. '   ' → logprob: -7.785693645477295
    4. '	while' → logprob: -10.160693168640137
    5. ' ' → logprob: -11.535693168640137
    6. '  ' → logprob: -13.160693168640137
    7. ' 
' → logprob: -13.660693168640137
    8. '    
' → logprob: -14.410693168640137
    9. '
' → logprob: -14.535693168640137
    10. 'While' → logprob: -15.285693168640137

Token 173: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2528419494628906
    2. ' q' → logprob: -1.5028419494628906
    3. ' len' → logprob: -7.502841949462891
    4. 'len' → logprob: -8.00284194946289
    5. ' ' → logprob: -11.62784194946289
    6. '	q' → logprob: -11.62784194946289
    7. '   ' → logprob: -13.00284194946289
    8. '(q' → logprob: -13.37784194946289
    9. '(len' → logprob: -13.75284194946289
    10. '  ' → logprob: -13.87784194946289

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003759228391572833
    2. '):' → logprob: -5.753759384155273
    3. '>:' → logprob: -8.378759384155273
    4. '():' → logprob: -8.753759384155273
    5. ')' → logprob: -10.378759384155273
    6. '.' → logprob: -10.503759384155273
    7. ':not' → logprob: -10.628759384155273
    8. '.pop' → logprob: -10.753759384155273
    9. '.:' → logprob: -11.253759384155273
    10. '<|end|>' → logprob: -11.753759384155273

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9716063141822815
    2. '   ' → logprob: -1.0966062545776367
    3. ':' → logprob: -1.7216062545776367
    4. '<|end|>' → logprob: -2.7216062545776367
    5. ',' → logprob: -4.721606254577637
    6. ':
' → logprob: -4.846606254577637
    7. '    ' → logprob: -5.096606254577637
    8. ' ' → logprob: -5.596606254577637
    9. '<|end|>' → logprob: -5.971606254577637
    10. '  ' → logprob: -5.971606254577637

Token 176: ' vv' (ID: 107521)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1021528244018555
    2. 'node' → logprob: -1.1021528244018555
    3. 'v' → logprob: -2.3521528244018555
    4. ' node' → logprob: -2.4771528244018555
    5. 'current' → logprob: -2.8521528244018555
    6. 'cur' → logprob: -3.3521528244018555
    7. ' u' → logprob: -3.7271528244018555
    8. ' v' → logprob: -4.2271528244018555
    9. 'curr' → logprob: -4.7271528244018555
    10. ' current' → logprob: -4.8521528244018555

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937124729156494
    2. ' =' → logprob: -0.6937124729156494
    3. ' ' → logprob: -8.81871223449707
    4. '.' → logprob: -9.06871223449707
    5. ',' → logprob: -9.69371223449707
    6. '_' → logprob: -9.94371223449707
    7. '.pop' → logprob: -10.06871223449707
    8. '   ' → logprob: -10.19371223449707
    9. ')' → logprob: -11.06871223449707
    10. '[' → logprob: -11.44371223449707

Token 178: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.31326377391815186
    2. ' q' → logprob: -1.3132637739181519
    3. '	q' → logprob: -13.438263893127441
    4. ' ' → logprob: -15.563263893127441
    5. '[q' → logprob: -16.188262939453125
    6. '   ' → logprob: -17.063262939453125
    7. '=q' → logprob: -17.063262939453125
    8. '    ' → logprob: -17.438262939453125
    9. ' ' → logprob: -17.438262939453125
    10. '*q' → logprob: -17.688262939453125

Token 179: '.pop' (ID: 15746)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.949026571121067e-05
    2. '.pop' → logprob: -9.500099182128906
    3. '.' → logprob: -10.625099182128906
    4. ' .' → logprob: -16.125099182128906
    5. ').' → logprob: -17.125099182128906
    6. '].' → logprob: -17.250099182128906
    7. 'p' → logprob: -17.625099182128906
    8. '>.' → logprob: -17.625099182128906
    9. 'opleft' → logprob: -18.250099182128906
    10. 'pop' → logprob: -20.000099182128906

Token 180: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04401712492108345
    2. 'left' → logprob: -3.1690170764923096
    3. 'le' → logprob: -7.544017314910889
    4. 'lef' → logprob: -8.16901683807373
    5. '())' → logprob: -10.16901683807373
    6. '(' → logprob: -10.16901683807373
    7. '()
' → logprob: -10.41901683807373
    8. ')' → logprob: -10.54401683807373
    9. ' lef' → logprob: -11.16901683807373
    10. '()]' → logprob: -11.29401683807373

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.107867531478405
    2. '
' → logprob: -3.107867479324341
    3. '<|end|>' → logprob: -3.482867479324341
    4. '   ' → logprob: -4.85786771774292
    5. ' if' → logprob: -4.85786771774292
    6. '  
' → logprob: -6.23286771774292
    7. ' 
' → logprob: -6.23286771774292
    8. '        
' → logprob: -6.35786771774292
    9. 'if' → logprob: -6.98286771774292
    10. ' for' → logprob: -7.10786771774292

Token 182: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04303332790732384
    2. ' for' → logprob: -3.1680333614349365
    3. '   ' → logprob: -10.793033599853516
    4. 'while' → logprob: -12.793033599853516
    5. '	for' → logprob: -12.918033599853516
    6. 'if' → logprob: -12.918033599853516
    7. 'v' → logprob: -13.168033599853516
    8. '
' → logprob: -13.418033599853516
    9. '    
' → logprob: -13.793033599853516
    10. '       ' → logprob: -14.918033599853516

Token 183: ' je' (ID: 1264)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000667044660076499
    2. 'while' → logprob: -7.500667095184326
    3. ' for' → logprob: -9.875666618347168
    4. 'if' → logprob: -10.000666618347168
    5. 'v' → logprob: -11.250666618347168
    6. '
' → logprob: -13.375666618347168
    7. '   ' → logprob: -14.000666618347168
    8. 'next' → logprob: -14.750666618347168
    9. '	for' → logprob: -15.125666618347168
    10. 'For' → logprob: -15.250666618347168

Token 184: ' fais' (ID: 24376)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.515800952911377
    2. 'f' → logprob: -1.140800952911377
    3. ' for' → logprob: -3.265800952911377
    4. 's' → logprob: -3.640800952911377
    5. 'n' → logprob: -4.640800952911377
    6. 'nd' → logprob: -6.015800952911377
    7. 'm' → logprob: -6.765800952911377
    8. 'v' → logprob: -7.140800952911377
    9. 'if' → logprob: -7.265800952911377
    10. '   ' → logprob: -7.265800952911377

Token 185: ' ça' (ID: 13590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31847137212753296
    2. 'v' → logprob: -1.8184714317321777
    3. ' for' → logprob: -3.4434714317321777
    4. 'un' → logprob: -4.568471431732178
    5. 'not' → logprob: -4.568471431732178
    6. 'vq' → logprob: -4.943471431732178
    7. 'q' → logprob: -5.318471431732178
    8. '   ' → logprob: -5.568471431732178
    9. 'une' → logprob: -5.568471431732178
    10. ' ' → logprob: -5.568471431732178

Token 186: ' comme' (ID: 7971)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47169771790504456
    2. 'for' → logprob: -1.0966976881027222
    3. '<|end|>' → logprob: -4.096697807312012
    4. '   ' → logprob: -4.846697807312012
    5. ' ' → logprob: -5.346697807312012
    6. '
' → logprob: -6.346697807312012
    7. '  ' → logprob: -6.596697807312012
    8. ' if' → logprob: -6.721697807312012
    9. ',' → logprob: -6.721697807312012
    10. '       ' → logprob: -6.971697807312012

Token 187: ' ça' (ID: 13590)
  Prédit: ' ça'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ça' → logprob: -0.32068854570388794
    2. 'ça' → logprob: -1.4456884860992432
    3. 'cela' → logprob: -4.070688724517822
    4. 'ç' → logprob: -5.820688724517822
    5. 'ca' → logprob: -6.195688724517822
    6. 'this' → logprob: -6.320688724517822
    7. 'for' → logprob: -6.445688724517822
    8. 'if' → logprob: -6.445688724517822
    9. 'pop' → logprob: -6.570688724517822
    10. 'q' → logprob: -6.570688724517822

Token 188: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6569004654884338
    2. '<|end|>' → logprob: -1.781900405883789
    3. '       ' → logprob: -2.406900405883789
    4. '   ' → logprob: -2.531900405883789
    5. ' if' → logprob: -3.031900405883789
    6. 'for' → logprob: -3.031900405883789
    7. '<|end|>' → logprob: -4.906900405883789
    8. ',' → logprob: -4.906900405883789
    9. '  ' → logprob: -5.406900405883789
    10. ' ' → logprob: -5.781900405883789

Token 189: ' ça' (ID: 13590)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.355541467666626
    2. ' but' → logprob: -2.730541467666626
    3. '       ' → logprob: -2.980541467666626
    4. '   ' → logprob: -3.105541467666626
    5. 'for' → logprob: -3.230541467666626
    6. ' car' → logprob: -3.480541467666626
    7. ' mais' → logprob: -3.480541467666626
    8. ' not' → logprob: -4.730541229248047
    9. ' because' → logprob: -5.105541229248047
    10. ' parce' → logprob: -5.480541229248047

Token 190: ' devrait' (ID: 52773)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -1.1569092273712158
    2. ' va' → logprob: -1.4069092273712158
    3. 'mar' → logprob: -2.531909227371216
    4. ' marche' → logprob: -2.656909227371216
    5. 'n' → logprob: -3.656909227371216
    6. 'a' → logprob: -3.656909227371216
    7. 'ne' → logprob: -3.781909227371216
    8. 'v' → logprob: -4.156908988952637
    9. ' n' → logprob: -4.406908988952637
    10. 'rev' → logprob: -4.531908988952637

Token 191: ' aller' (ID: 18383)
  Prédit: 'aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aller' → logprob: -0.6723331212997437
    2. ' marcher' → logprob: -0.9223331212997437
    3. 'march' → logprob: -2.922333240509033
    4. ' aller' → logprob: -4.547333240509033
    5. 'fonction' → logprob: -5.047333240509033
    6. ' fonctionner' → logprob: -5.172333240509033
    7. 'bien' → logprob: -5.297333240509033
    8. 'mar' → logprob: -6.047333240509033
    9. 'le' → logprob: -6.547333240509033
    10. 'être' → logprob: -6.797333240509033

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0850144624710083
    2. '<|end|>' → logprob: -1.3350144624710083
    3. ' for' → logprob: -1.5850144624710083
    4. '   ' → logprob: -2.4600143432617188
    5. '
' → logprob: -3.8350143432617188
    6. 'for' → logprob: -4.210014343261719
    7. ' if' → logprob: -4.335014343261719
    8. '        
' → logprob: -4.960014343261719
    9. '    
' → logprob: -5.085014343261719
    10. '  
' → logprob: -5.210014343261719

Token 193: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06198651343584061
    2. ' for' → logprob: -2.8119864463806152
    3. 'if' → logprob: -11.811986923217773
    4. '   ' → logprob: -12.311986923217773
    5. '	for' → logprob: -12.311986923217773
    6. '
' → logprob: -14.436986923217773
    7. '       ' → logprob: -14.436986923217773
    8. 'v' → logprob: -15.186986923217773
    9. ' ' → logprob: -15.436986923217773
    10. '    
' → logprob: -15.686986923217773

Token 195: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9061139822006226
    2. 'u' → logprob: -2.406114101409912
    3. ' v' → logprob: -2.406114101409912
    4. ' nxt' → logprob: -2.406114101409912
    5. 'w' → logprob: -2.656114101409912
    6. 'vv' → logprob: -2.781114101409912
    7. ' vv' → logprob: -2.781114101409912
    8. ' w' → logprob: -3.031114101409912
    9. ' u' → logprob: -3.281114101409912
    10. 'neighbor' → logprob: -3.281114101409912

Token 196: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09217805415391922
    2. 'v' → logprob: -2.5921781063079834
    3. 'in' → logprob: -4.342177867889404
    4. ' ' → logprob: -9.217178344726562
    5. '_' → logprob: -10.842178344726562
    6. 'vi' → logprob: -10.967178344726562
    7. '_v' → logprob: -11.592178344726562
    8. 'vv' → logprob: -11.842178344726562
    9. '_in' → logprob: -11.967178344726562
    10. 'w' → logprob: -12.217178344726562

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994632631540298
    2. 'in' → logprob: -2.6949462890625
    3. ' ' → logprob: -12.4449462890625
    4. '	in' → logprob: -13.0699462890625
    5. 'v' → logprob: -13.3199462890625
    6. ' ' → logprob: -14.1949462890625
    7. '_in' → logprob: -14.9449462890625
    8. 's' → logprob: -15.0699462890625
    9. 'n' → logprob: -15.4449462890625
    10. 'In' → logprob: -15.6949462890625

Token 198: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17978554964065552
    2. ' edges' → logprob: -1.8047854900360107
    3. '(edges' → logprob: -10.55478572845459
    4. '.edges' → logprob: -12.42978572845459
    5. '   ' → logprob: -12.55478572845459
    6. '_edges' → logprob: -12.92978572845459
    7. ' ' → logprob: -13.42978572845459
    8. ' ' → logprob: -14.05478572845459
    9. 'edge' → logprob: -14.42978572845459
    10. '
' → logprob: -14.67978572845459

Token 199: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.173704271830502e-06
    2. 'vv' → logprob: -13.00000286102295
    3. '[' → logprob: -15.25000286102295
    4. ' vv' → logprob: -16.000003814697266
    5. '[[' → logprob: -16.500003814697266
    6. '[j' → logprob: -16.625003814697266
    7. '```' → logprob: -16.625003814697266
    8. ' [' → logprob: -16.875003814697266
    9. '[val' → logprob: -17.000003814697266
    10. '[
' → logprob: -17.250003814697266

Token 200: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.47626737493556e-05
    2. '[v' → logprob: -10.87503433227539
    3. '[' → logprob: -11.37503433227539
    4. 'w' → logprob: -14.37503433227539
    5. '```' → logprob: -14.37503433227539
    6. '   ' → logprob: -14.50003433227539
    7. '[val' → logprob: -15.00003433227539
    8. 's' → logprob: -15.25003433227539
    9. 'vv' → logprob: -15.50003433227539
    10. 'в' → logprob: -15.50003433227539

Token 201: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.1517960956552997e-05
    2. ']:
' → logprob: -12.250011444091797
    3. ']' → logprob: -12.625011444091797
    4. '}:' → logprob: -13.875011444091797
    5. ']:
' → logprob: -14.000011444091797
    6. ':' → logprob: -14.375011444091797
    7. '):' → logprob: -15.250011444091797
    8. ']>' → logprob: -15.375011444091797
    9. '>:' → logprob: -15.625011444091797
    10. ']:

' → logprob: -15.750011444091797

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024288181215524673
    2. ':' → logprob: -4.774288177490234
    3. ' if' → logprob: -4.774288177490234
    4. '   ' → logprob: -6.649288177490234
    5. '	       ' → logprob: -6.649288177490234
    6. ':
' → logprob: -7.024288177490234
    7. '<|end|>' → logprob: -7.149288177490234
    8. '       ' → logprob: -7.524288177490234
    9. '    	' → logprob: -8.149288177490234
    10. '		' → logprob: -8.274288177490234

Token 203: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4785510003566742
    2. 'if' → logprob: -0.9785510301589966
    3. '           ' → logprob: -5.603550910949707
    4. '               ' → logprob: -7.478550910949707
    5. '   ' → logprob: -9.478550910949707
    6. '	if' → logprob: -10.103550910949707
    7. ' ' → logprob: -10.228550910949707
    8. '       ' → logprob: -10.478550910949707
    9. '            ' → logprob: -11.853550910949707
    10. '  ' → logprob: -12.228550910949707

Token 204: ' couleurs' (ID: 54001)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20147298276424408
    2. ' if' → logprob: -1.7014729976654053
    3. '           ' → logprob: -10.076473236083984
    4. '               ' → logprob: -11.326473236083984
    5. '   ' → logprob: -13.826473236083984
    6. ' ' → logprob: -13.951473236083984
    7. 'If' → logprob: -14.076473236083984
    8. '
' → logprob: -14.701473236083984
    9. '            ' → logprob: -15.076473236083984
    10. '            
' → logprob: -15.201473236083984

Token 205: ' non' (ID: 2893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8005580306053162
    2. ' =' → logprob: -1.550558090209961
    3. '=' → logprob: -1.800558090209961
    4. 'if' → logprob: -2.050558090209961
    5. ' ==' → logprob: -4.300558090209961
    6. '==' → logprob: -4.550558090209961
    7. ' !=' → logprob: -4.925558090209961
    8. '!=' → logprob: -4.925558090209961
    9. '=None' → logprob: -6.550558090209961
    10. ':' → logprob: -6.675558090209961

Token 206: ' visit' (ID: 4030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3113226592540741
    2. 'e' → logprob: -3.1863226890563965
    3. '[:]' → logprob: -3.3113226890563965
    4. ']' → logprob: -3.4363226890563965
    5. '.' → logprob: -3.5613226890563965
    6. '<|end|>' → logprob: -3.6863226890563965
    7. ' ' → logprob: -4.3113226890563965
    8. '[v' → logprob: -4.4363226890563965
    9. '[u' → logprob: -5.1863226890563965
    10. ')' → logprob: -5.3113226890563965

Token 207: 'és' (ID: 1756)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.08589921146631241
    2. 'és' → logprob: -2.9608991146087646
    3. 'é' → logprob: -3.7108991146087646
    4. 'es' → logprob: -5.835899353027344
    5. 'ée' → logprob: -6.210899353027344
    6. 'ited' → logprob: -7.335899353027344
    7. 'ed' → logprob: -8.585899353027344
    8. ']' → logprob: -9.960899353027344
    9. 'nées' → logprob: -10.085899353027344
    10. 'ité' → logprob: -10.210899353027344

Token 208: ' :
' (ID: 10039)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4526917636394501
    2. '           ' → logprob: -1.4526917934417725
    3. ' ==' → logprob: -3.2026917934417725
    4. '               ' → logprob: -3.4526917934417725
    5. '=' → logprob: -4.702691555023193
    6. ',' → logprob: -4.702691555023193
    7. ' =' → logprob: -4.827691555023193
    8. ' ' → logprob: -5.202691555023193
    9. 'if' → logprob: -5.202691555023193
    10. '==' → logprob: -5.452691555023193

Token 209: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02927282825112343
    2. '           ' → logprob: -4.27927303314209
    3. 'if' → logprob: -4.27927303314209
    4. '               ' → logprob: -8.02927303314209
    5. ' ' → logprob: -8.27927303314209
    6. '0' → logprob: -8.77927303314209
    7. ' =' → logprob: -9.27927303314209
    8. '=' → logprob: -9.52927303314209
    9. ' not' → logprob: -9.90427303314209
    10. ' None' → logprob: -10.02927303314209

Token 210: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5759755969047546
    2. 'if' (adapté à ' if') → logprob: -0.8259755969047546
    3. '           ' → logprob: -10.57597541809082
    4. '               ' → logprob: -12.57597541809082
    5. 'None' → logprob: -13.20097541809082
    6. ' None' → logprob: -13.82597541809082
    7. ' ' → logprob: -13.82597541809082
    8. '=' → logprob: -14.07597541809082
    9. 'If' → logprob: -14.45097541809082
    10. ' =' → logprob: -14.82597541809082

Token 211: ' clr' (ID: 149987)
  Prédit: ' clr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clr' → logprob: -0.14272849261760712
    2. 'clr' → logprob: -2.017728567123413
    3. 'cl' → logprob: -10.517728805541992
    4. '(cl' → logprob: -11.642728805541992
    5. ' not' → logprob: -11.892728805541992
    6. '	cl' → logprob: -12.517728805541992
    7. '   ' → logprob: -13.142728805541992
    8. 'Clr' → logprob: -13.267728805541992
    9. ' ' → logprob: -13.892728805541992
    10. 'not' → logprob: -14.642728805541992

Token 212: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.6240566083070007e-06
    2. '[v' → logprob: -14.375001907348633
    3. '[' → logprob: -15.250001907348633
    4. 'list' → logprob: -15.375001907348633
    5. '[_' → logprob: -15.500001907348633
    6. '_l' → logprob: -16.750001907348633
    7. '_lst' → logprob: -16.750001907348633
    8. '_' → logprob: -16.875001907348633
    9. 'l' → logprob: -17.500001907348633
    10. 'List' → logprob: -17.750001907348633

Token 213: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. 'v' → logprob: -14.250003814697266
    4. ' [' → logprob: -16.375003814697266
    5. '[
' → logprob: -16.625003814697266
    6. '[u' → logprob: -18.000003814697266
    7. '```' → logprob: -18.625003814697266
    8. '[i' → logprob: -19.250003814697266
    9. '
' → logprob: -19.250003814697266
    10. '<v' → logprob: -20.000003814697266

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001149867384810932
    2. '[v' → logprob: -9.250115394592285
    3. 'v' → logprob: -11.250115394592285
    4. '```' → logprob: -13.937615394592285
    5. ']' → logprob: -14.125115394592285
    6. '[' → logprob: -14.375115394592285
    7. '   ' → logprob: -14.562615394592285
    8. '1' → logprob: -15.062615394592285
    9. ' ' → logprob: -15.187615394592285
    10. '<v' → logprob: -15.562615394592285

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09085046499967575
    2. ']==' → logprob: -2.590850353240967
    3. '==' → logprob: -5.215850353240967
    4. ' ]' → logprob: -6.090850353240967
    5. ' ==' → logprob: -6.340850353240967
    6. '[' → logprob: -6.840850353240967
    7. ' ' → logprob: -7.840850353240967
    8. ' is' → logprob: -7.840850353240967
    9. '==-' → logprob: -8.590850830078125
    10. ')' → logprob: -8.715850830078125

Token 216: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.336489200592041
    2. ' ==' → logprob: -1.336489200592041
    3. ' is' → logprob: -4.336489200592041
    4. '==-' → logprob: -4.711489200592041
    5. 'is' → logprob: -7.586489200592041
    6. '[' → logprob: -9.211488723754883
    7. ' ' → logprob: -9.586488723754883
    8. ')' → logprob: -9.711488723754883
    9. ']==' → logprob: -9.836488723754883
    10. '=' → logprob: -10.336488723754883

Token 217: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5803481340408325
    2. '-' → logprob: -0.8303481340408325
    3. ' ' → logprob: -6.205348014831543
    4. ' -' → logprob: -6.330348014831543
    5. 'None' → logprob: -7.580348014831543
    6. 'False' → logprob: -10.705348014831543
    7. ' None' → logprob: -10.830348014831543
    8. '3' → logprob: -11.455348014831543
    9. '   ' → logprob: -11.580348014831543
    10. '2' → logprob: -12.330348014831543

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.250032424926758
    4. '   ' → logprob: -15.750032424926758
    5. '  ' → logprob: -16.625032424926758
    6. '```' → logprob: -17.375032424926758
    7. '    ' → logprob: -18.250032424926758
    8. '.' → logprob: -18.437532424926758
    9. '-' → logprob: -18.625032424926758
    10. '0' → logprob: -18.625032424926758

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004824907053261995
    2. ':
' → logprob: -5.629825115203857
    3. '):' → logprob: -7.504825115203857
    4. ' and' → logprob: -7.879825115203857
    5. ')' → logprob: -9.6298246383667
    6. ' :' → logprob: -9.6298246383667
    7. '               ' → logprob: -9.7548246383667
    8. '):
' → logprob: -10.0048246383667
    9. '<|end|>' → logprob: -10.8798246383667
    10. '           ' → logprob: -11.6298246383667

Token 220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000963627069722861
    2. ' clr' → logprob: -8.00096321105957
    3. ':
' → logprob: -8.37596321105957
    4. 'clr' → logprob: -9.25096321105957
    5. '           ' → logprob: -9.62596321105957
    6. '):
' → logprob: -9.75096321105957
    7. ':' → logprob: -10.00096321105957
    8. '                
' → logprob: -10.25096321105957
    9. ' :
' → logprob: -10.87596321105957
    10. ')' → logprob: -11.25096321105957

Token 221: ' clr' (ID: 149987)
  Prédit: 'clr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clr' (adapté à ' clr') → logprob: -0.08621487766504288
    2. ' clr' → logprob: -2.836214780807495
    3. 'q' → logprob: -4.211215019226074
    4. '               ' → logprob: -5.086215019226074
    5. '                   ' → logprob: -6.086215019226074
    6. ' q' → logprob: -7.586215019226074
    7. 'cl' → logprob: -9.836215019226074
    8. '           ' → logprob: -10.336215019226074
    9. '   ' → logprob: -10.711215019226074
    10. 'ql' → logprob: -12.086215019226074

Token 222: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.226628895296017e-06
    2. ')_' → logprob: -12.500007629394531
    3. '_lst' → logprob: -14.375007629394531
    4. ')' → logprob: -14.750007629394531
    5. '_' → logprob: -14.750007629394531
    6. '[_' → logprob: -15.125007629394531
    7. '_li' → logprob: -15.250007629394531
    8. '[' → logprob: -15.250007629394531
    9. ']_' → logprob: -15.250007629394531
    10. '_l' → logprob: -15.875007629394531

Token 223: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -15.750000953674316
    3. '[' → logprob: -15.875000953674316
    4. '```' → logprob: -16.75
    5. '=v' → logprob: -17.125
    6. ' [' → logprob: -17.5
    7. '[V' → logprob: -18.25
    8. '][' → logprob: -19.125
    9. '(v' → logprob: -19.25
    10. ' =' → logprob: -19.375

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.000020027160645
    3. '   ' → logprob: -13.875020027160645
    4. ']' → logprob: -14.375020027160645
    5. 'v' → logprob: -14.500020027160645
    6. ' v' → logprob: -14.875020027160645
    7. '[v' → logprob: -15.250020027160645
    8. '1' → logprob: -15.375020027160645
    9. '```' → logprob: -15.375020027160645
    10. '    ' → logprob: -16.31252098083496

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08622537553310394
    2. '=' → logprob: -2.7112252712249756
    3. ']=' → logprob: -4.961225509643555
    4. ' =' → logprob: -5.336225509643555
    5. ')' → logprob: -5.461225509643555
    6. ' ]' → logprob: -10.086225509643555
    7. ')=' → logprob: -10.211225509643555
    8. ' ' → logprob: -13.211225509643555
    9. ')]' → logprob: -13.211225509643555
    10. ',' → logprob: -13.461225509643555

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.561968803405762
    4. '=color' → logprob: -16.186967849731445
    5. ',' → logprob: -16.311967849731445
    6. ')' → logprob: -16.811967849731445
    7. ']=' → logprob: -16.936967849731445
    8. '=
' → logprob: -17.061967849731445
    9. ']' → logprob: -17.061967849731445
    10. ')=' → logprob: -17.186967849731445

Token 227: ' clr' (ID: 149987)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018011096864938736
    2. 'clr' → logprob: -4.143011093139648
    3. ' ' → logprob: -6.768011093139648
    4. '   ' → logprob: -7.768011093139648
    5. ' clr' → logprob: -8.518011093139648
    6. '(' → logprob: -9.268011093139648
    7. 'cl' → logprob: -11.018011093139648
    8. '
' → logprob: -11.143011093139648
    9. ' (' → logprob: -11.518011093139648
    10. '(cl' → logprob: -11.518011093139648

Token 228: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020136944949626923
    2. '
' → logprob: -7.002013683319092
    3. '<|end|>' → logprob: -7.127013683319092
    4. '			' → logprob: -9.87701416015625
    5. '<|end|>' → logprob: -9.87701416015625
    6. 'q' → logprob: -10.37701416015625
    7. '
' → logprob: -10.62701416015625
    8. '		       ' → logprob: -10.62701416015625
    9. ',' → logprob: -10.87701416015625
    10. '                
' → logprob: -10.87701416015625

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002251125843031332
    2. '			' → logprob: -9.500225067138672
    3. '<|end|>' → logprob: -10.250225067138672
    4. '		       ' → logprob: -10.375225067138672
    5. 'q' → logprob: -10.875225067138672
    6. '       ' → logprob: -11.250225067138672
    7. '	           ' → logprob: -11.750225067138672
    8. '                
' → logprob: -12.250225067138672
    9. '	' → logprob: -12.250225067138672
    10. '
' → logprob: -12.375225067138672

Token 230: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -9.877503907773644e-05
    2. ' q' → logprob: -9.250099182128906
    3. '                   ' → logprob: -14.375099182128906
    4. '
' → logprob: -14.500099182128906
    5. '               ' → logprob: -14.500099182128906
    6. '	q' → logprob: -14.625099182128906
    7. '   ' → logprob: -15.375099182128906
    8. '           ' → logprob: -15.625099182128906
    9. '       ' → logprob: -16.750099182128906
    10. 'qq' → logprob: -17.125099182128906

Token 231: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014251544780563563
    2. '.' → logprob: -9.375142097473145
    3. 'append' → logprob: -10.375142097473145
    4. '.extend' → logprob: -11.250142097473145
    5. '.app' → logprob: -11.750142097473145
    6. ' .' → logprob: -12.875142097473145
    7. '.push' → logprob: -14.750142097473145
    8. '].' → logprob: -14.875142097473145
    9. '_append' → logprob: -15.250142097473145
    10. ').' → logprob: -15.250142097473145

Token 232: 'left' (ID: 4530)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.018156616017222404
    2. 'left' → logprob: -4.0181565284729
    3. '(' → logprob: -12.143157005310059
    4. '(
' → logprob: -14.143157005310059
    5. 'v' → logprob: -15.893157005310059
    6. '((' → logprob: -16.143156051635742
    7. '()' → logprob: -16.393156051635742
    8. '(left' → logprob: -16.393156051635742
    9. 'Left' → logprob: -16.643156051635742
    10. ' (' → logprob: -16.893156051635742

Token 233: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.375031471252441
    3. '(
' → logprob: -15.500031471252441
    4. '()' → logprob: -16.500032424926758
    5. '((' → logprob: -16.500032424926758
    6. ' (' → logprob: -16.750032424926758
    7. 'v' → logprob: -18.125032424926758
    8. '<|end|>' → logprob: -18.625032424926758
    9. '(value' → logprob: -19.375032424926758
    10. '(V' → logprob: -19.625032424926758

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.5
    3. ')' → logprob: -17.5
    4. 'al' → logprob: -18.75
    5. 'alue' → logprob: -19.0
    6. '```' → logprob: -19.125
    7. ']' → logprob: -19.25
    8. '
' → logprob: -19.25
    9. '[v' → logprob: -19.375
    10. '1' → logprob: -19.875

Token 235: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. '<|end|>' → logprob: -11.250018119812012
    3. ')
' → logprob: -12.750018119812012
    4. ')return' → logprob: -13.625018119812012
    5. '<|end|>' → logprob: -15.500018119812012
    6. ' )' → logprob: -16.000019073486328
    7. '       ' → logprob: -16.375019073486328
    8. '())' → logprob: -16.375019073486328
    9. ')}}' → logprob: -16.625019073486328
    10. '')' → logprob: -16.625019073486328

Token 236: 'cl' (ID: 565)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: 'rs' (ID: 6435)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003200922510586679
    2. 'ass' → logprob: -9.250320434570312
    3. 'ar' → logprob: -9.375320434570312
    4. 'ear' → logprob: -9.500320434570312
    5. 'def' → logprob: -11.375320434570312
    6. 'rs' → logprob: -11.500320434570312
    7. 'ri' → logprob: -12.000320434570312
    8. '#' → logprob: -12.500320434570312
    9. 'rl' → logprob: -12.500320434570312
    10. 'f' → logprob: -12.875320434570312

Token 238: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007989077712409198
    2. '_' → logprob: -7.50079870223999
    3. 't' → logprob: -8.625799179077148
    4. ' =' → logprob: -10.500799179077148
    5. '_t' → logprob: -11.000799179077148
    6. 'ist' → logprob: -12.125799179077148
    7. '=_' → logprob: -12.250799179077148
    8. '=' → logprob: -12.250799179077148
    9. '_lst' → logprob: -12.875799179077148
    10. '=[]' → logprob: -13.750799179077148

Token 239: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.6240566083070007e-06
    2. ' [-' → logprob: -13.500001907348633
    3. '[' → logprob: -16.500001907348633
    4. '[]' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '[:]' → logprob: -21.250001907348633
    7. '([-' → logprob: -21.375001907348633
    8. '[N' → logprob: -21.375001907348633
    9. '[:-' → logprob: -21.625001907348633
    10. '-' → logprob: -21.750001907348633

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -17.875
    4. '-' → logprob: -18.9375
    5. '2' → logprob: -19.125
    6. '   ' → logprob: -19.1875
    7. ']' → logprob: -19.375
    8. ',' → logprob: -19.875
    9. '`' → logprob: -20.0625
    10. '.' → logprob: -20.0625

Token 241: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06907637417316437
    2. ']*' → logprob: -3.0690762996673584
    3. ' for' → logprob: -3.9440762996673584
    4. 'for' → logprob: -7.0690765380859375
    5. ' ]' → logprob: -9.944076538085938
    6. ']*(' → logprob: -12.319076538085938
    7. ')' → logprob: -12.819076538085938
    8. '	for' → logprob: -13.819076538085938
    9. '*' → logprob: -13.819076538085938
    10. ']+' → logprob: -14.444076538085938

Token 242: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031166546046733856
    2. ' range' → logprob: -4.1561665534973145
    3. 'range' → logprob: -4.4061665534973145
    4. ' _' → logprob: -6.9061665534973145
    5. 'i' → logprob: -7.5311665534973145
    6. '_range' → logprob: -7.7811665534973145
    7. '(range' → logprob: -7.7811665534973145
    8. '_i' → logprob: -8.156166076660156
    9. ' i' → logprob: -9.406166076660156
    10. '_j' → logprob: -10.281166076660156

Token 243: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31813177466392517
    2. 'in' → logprob: -1.5681318044662476
    3. ' in' → logprob: -2.818131685256958
    4. ' range' → logprob: -5.443131923675537
    5. ' ' → logprob: -11.318131446838379
    6. '(range' → logprob: -13.443131446838379
    7. '  ' → logprob: -13.943131446838379
    8. 'n' → logprob: -15.568131446838379
    9. 'ange' → logprob: -15.693131446838379
    10. '_' → logprob: -16.193132400512695

Token 244: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. 'edges' → logprob: -18.000911712646484
    4. '(range' → logprob: -18.375911712646484
    5. 'rang' → logprob: -19.875911712646484
    6. ' ' → logprob: -20.375911712646484
    7. 'ranges' → logprob: -20.625911712646484
    8. '	range' → logprob: -20.750911712646484
    9. '   ' → logprob: -20.875911712646484
    10. '  ' → logprob: -21.125911712646484

Token 245: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.4259644558478612e-05
    2. 'N' → logprob: -11.375014305114746
    3. '(' → logprob: -12.875014305114746
    4. '(n' → logprob: -16.62501335144043
    5. '(
' → logprob: -17.12501335144043
    6. ' (' → logprob: -17.37501335144043
    7. '((' → logprob: -19.75001335144043
    8. '(M' → logprob: -20.50001335144043
    9. '	N' → logprob: -20.50001335144043
    10. '(int' → logprob: -21.00001335144043

Token 246: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.372294698550832e-06
    2. ']' → logprob: -11.625009536743164
    3. ')' → logprob: -15.875009536743164
    4. ')]
' → logprob: -16.375009536743164
    5. '])]' → logprob: -18.000009536743164
    6. '])' → logprob: -18.125009536743164
    7. ')],' → logprob: -18.250009536743164
    8. ' ]' → logprob: -18.500009536743164
    9. '}]' → logprob: -18.625009536743164
    10. ']]' → logprob: -18.875009536743164

Token 247: 'cur' (ID: 3264)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008730157278478146
    2. 'clr' → logprob: -6.008729934692383
    3. 'b' → logprob: -6.133729934692383
    4. 'color' → logprob: -7.133729934692383
    5. 'current' → logprob: -7.133729934692383
    6. 'component' → logprob: -8.133729934692383
    7. 'cnt' → logprob: -8.133729934692383
    8. 'count' → logprob: -8.258729934692383
    9. 'cl' → logprob: -8.258729934692383
    10. 'ans' → logprob: -8.883729934692383

Token 248: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.7516576051712036
    2. '_color' → logprob: -0.7516576051712036
    3. '_' → logprob: -3.626657485961914
    4. 'clr' → logprob: -3.626657485961914
    5. 'Clr' → logprob: -6.751657485961914
    6. '_col' → logprob: -7.376657485961914
    7. 'color' → logprob: -7.626657485961914
    8. 'Color' → logprob: -8.001657485961914
    9. '=' → logprob: -8.251657485961914
    10. ' =' → logprob: -8.751657485961914

Token 249: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006396461394615471
    2. 'ass' → logprob: -7.62563943862915
    3. 'uster' → logprob: -9.500639915466309
    4. 's' → logprob: -10.750639915466309
    5. '=' → logprob: -10.750639915466309
    6. 'rs' → logprob: -11.250639915466309
    7. 'f' → logprob: -13.125639915466309
    8. 'ust' → logprob: -13.125639915466309
    9. ']' → logprob: -13.375639915466309
    10. 'ar' → logprob: -13.500639915466309

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269301027059555
    2. ' =' → logprob: -2.126929998397827
    3. ',' → logprob: -13.376930236816406
    4. ' ' → logprob: -15.626930236816406
    5. '0' → logprob: -16.251930236816406
    6. 's' → logprob: -16.376930236816406
    7. ')' → logprob: -17.251930236816406
    8. '.' → logprob: -17.501930236816406
    9. ' ' → logprob: -17.751930236816406
    10. '=
' → logprob: -17.751930236816406

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016480287013109773
    2. ' ' → logprob: -8.875164985656738
    3. '1' → logprob: -10.875164985656738
    4. '-' → logprob: -12.125164985656738
    5. '2' → logprob: -15.125164985656738
    6. ' -' → logprob: -15.937664985656738
    7. '   ' → logprob: -17.375164031982422
    8. '=' → logprob: -17.687664031982422
    9. '  ' → logprob: -17.937664031982422
    10. ' ' → logprob: -18.062664031982422

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. '-' → logprob: -11.875017166137695
    3. ' ' → logprob: -11.875017166137695
    4. '1' → logprob: -12.625017166137695
    5. '2' → logprob: -15.750017166137695
    6. ' -' → logprob: -17.562517166137695
    7. '[' → logprob: -18.937517166137695
    8. '۰' → logprob: -18.937517166137695
    9. '   ' → logprob: -19.000017166137695
    10. '(' → logprob: -19.125017166137695

Token 253: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13112308084964752
    2. '
' → logprob: -2.1311230659484863
    3. ' for' → logprob: -5.506123065948486
    4. '<|end|>' → logprob: -9.256123542785645
    5. '

' → logprob: -11.131123542785645
    6. '
' → logprob: -11.631123542785645
    7. ' 
' → logprob: -14.131123542785645
    8. '  
' → logprob: -14.131123542785645
    9. '0' → logprob: -14.131123542785645
    10. '```' → logprob: -14.256123542785645

Token 254: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.25
    3. 'while' → logprob: -19.625
    4. '
' → logprob: -21.75
    5. '	for' → logprob: -23.375
    6. 'i' → logprob: -23.5
    7. 'For' → logprob: -24.5
    8. '0' → logprob: -24.625
    9. 'from' → logprob: -24.75
    10. 'def' → logprob: -25.0

Token 255: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20622354745864868
    2. ' v' → logprob: -2.206223487854004
    3. 'i' → logprob: -2.831223487854004
    4. 'v' → logprob: -4.331223487854004
    5. ' node' → logprob: -5.956223487854004
    6. ' u' → logprob: -7.581223487854004
    7. 'node' → logprob: -8.206223487854004
    8. ' vv' → logprob: -8.831223487854004
    9. 'u' → logprob: -8.956223487854004
    10. ' j' → logprob: -10.206223487854004

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038044244050979614
    2. 'in' → logprob: -3.2880442142486572
    3. ' ' → logprob: -13.163043975830078
    4. '	in' → logprob: -15.413043975830078
    5. 'range' → logprob: -15.663043975830078
    6. 'In' → logprob: -15.788043975830078
    7. ',' → logprob: -16.163043975830078
    8. '_in' → logprob: -16.788043975830078
    9. 'import' → logprob: -17.288043975830078
    10. ' ' → logprob: -17.413043975830078

Token 257: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -19.12509536743164
    4. '   ' → logprob: -19.75009536743164
    5. '	range' → logprob: -20.62509536743164
    6. 'cl' → logprob: -21.12509536743164
    7. '```' → logprob: -21.75009536743164
    8. 'rang' → logprob: -21.75009536743164
    9. '
' → logprob: -21.87509536743164
    10. ' ' → logprob: -22.12509536743164

Token 258: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -11.250015258789062
    3. 'N' → logprob: -13.125015258789062
    4. '(n' → logprob: -15.375015258789062
    5. '(
' → logprob: -15.625015258789062
    6. '(len' → logprob: -16.750015258789062
    7. ' (' → logprob: -16.875015258789062
    8. ' N' → logprob: -19.375015258789062
    9. '   ' → logprob: -19.375015258789062
    10. '	N' → logprob: -19.875015258789062

Token 259: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760226249694824
    2. '):' → logprob: -0.8260226249694824
    3. ')' → logprob: -9.82602310180664
    4. '):
' → logprob: -11.20102310180664
    5. ' ):' → logprob: -11.95102310180664
    6. ':' → logprob: -12.45102310180664
    7. ' ):
' → logprob: -12.70102310180664
    8. '):

' → logprob: -13.82602310180664
    9. ':
' → logprob: -14.57602310180664
    10. '   ' → logprob: -14.95102310180664

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020421291701495647
    2. ' if' → logprob: -6.377042293548584
    3. '    
' → logprob: -8.627041816711426
    4. 'if' → logprob: -9.127041816711426
    5. '<|end|>' → logprob: -10.502041816711426
    6. '	if' → logprob: -11.252041816711426
    7. '<|end|>' → logprob: -13.252041816711426
    8. ':' → logprob: -13.377041816711426
    9. '```' → logprob: -13.502041816711426
    10. 'If' → logprob: -13.627041816711426

Token 261: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1239076480269432
    2. 'if' (adapté à ' if') → logprob: -2.6239075660705566
    3. ' if' → logprob: -3.1239075660705566
    4. '	if' → logprob: -10.498908042907715
    5. '    
' → logprob: -13.123908042907715
    6. ' ' → logprob: -13.748908042907715
    7. '       ' → logprob: -13.873908042907715
    8. '
' → logprob: -13.998908042907715
    9. 'If' → logprob: -14.123908042907715
    10. '   ' → logprob: -14.748908042907715

Token 262: ' cl' (ID: 567)
  Prédit: ' cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.1002136841416359
    2. 'cl' → logprob: -2.3502137660980225
    3. '	cl' → logprob: -11.975214004516602
    4. '_cl' → logprob: -15.100214004516602
    5. '(cl' → logprob: -15.350214004516602
    6. '   ' → logprob: -16.2252140045166
    7. ' cur' → logprob: -16.9752140045166
    8. ' ' → logprob: -17.6002140045166
    9. ' clr' → logprob: -17.7252140045166
    10. '.cl' → logprob: -17.8502140045166

Token 263: 'rs' (ID: 6435)
  Prédit: 'rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.0011732018319889903
    2. 's' → logprob: -6.75117301940918
    3. 'r' → logprob: -13.37617301940918
    4. 'cl' → logprob: -14.62617301940918
    5. 'cs' → logprob: -14.75117301940918
    6. '[' → logprob: -15.50117301940918
    7. ' rs' → logprob: -16.75117301940918
    8. 'cr' → logprob: -16.87617301940918
    9. '```' → logprob: -16.87617301940918
    10. '   ' → logprob: -17.00117301940918

Token 264: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.723973582556937e-05
    2. '[' → logprob: -11.250017166137695
    3. ' [' → logprob: -12.625017166137695
    4. 'idx' → logprob: -14.750017166137695
    5. '[id' → logprob: -15.875017166137695
    6. ' idx' → logprob: -16.375017166137695
    7. '==' → logprob: -16.375017166137695
    8. '```' → logprob: -16.500017166137695
    9. '[
' → logprob: -17.125017166137695
    10. '(idx' → logprob: -17.375017166137695

Token 265: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6020615100860596
    2. ']' → logprob: -1.1020615100860596
    3. ' ==' → logprob: -2.4770615100860596
    4. ']==' → logprob: -3.8520615100860596
    5. '==-' → logprob: -4.8520612716674805
    6. ')' → logprob: -4.9770612716674805
    7. ')==' → logprob: -9.22706127166748
    8. ' ]' → logprob: -9.60206127166748
    9. '==
' → logprob: -11.85206127166748
    10. ' )' → logprob: -11.97706127166748

Token 266: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.649398684501648
    2. ' ==' → logprob: -0.899398684501648
    3. '==-' → logprob: -2.6493988037109375
    4. ')==' → logprob: -9.899398803710938
    5. ']==' → logprob: -10.524398803710938
    6. '=' → logprob: -10.524398803710938
    7. ')' → logprob: -11.274398803710938
    8. '==
' → logprob: -12.024398803710938
    9. ' ' → logprob: -12.149398803710938
    10. '===' → logprob: -13.649398803710938

Token 267: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04858759790658951
    2. ' -' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.673587799072266
    4. '   ' → logprob: -16.923587799072266
    5. '	' → logprob: -17.673587799072266
    6. '−' → logprob: -18.048587799072266
    7. '  ' → logprob: -18.423587799072266
    8. ' ' → logprob: -20.173587799072266
    9. '-
' → logprob: -20.298587799072266
    10. '
' → logprob: -20.298587799072266

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.875003814697266
    4. '-' → logprob: -16.937503814697266
    5. '   ' → logprob: -17.687503814697266
    6. '  ' → logprob: -18.250003814697266
    7. '2' → logprob: -18.312503814697266
    8. '１' → logprob: -19.000003814697266
    9. '۱' → logprob: -19.625003814697266
    10. '১' → logprob: -19.875003814697266

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023258758708834648
    2. ':
' → logprob: -3.773258686065674
    3. '):' → logprob: -11.773259162902832
    4. '):
' → logprob: -13.023259162902832
    5. ')' → logprob: -13.523259162902832
    6. ' :' → logprob: -14.148259162902832
    7. '   ' → logprob: -14.398259162902832
    8. ' :
' → logprob: -14.648259162902832
    9. ':

' → logprob: -16.023258209228516
    10. ':
' → logprob: -16.148258209228516

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6722039580345154
    2. '       ' → logprob: -1.0472040176391602
    3. ':
' → logprob: -2.29720401763916
    4. ' bfs' → logprob: -3.79720401763916
    5. 'b' → logprob: -4.79720401763916
    6. ':' → logprob: -5.67220401763916
    7. '):
' → logprob: -5.92220401763916
    8. ' b' → logprob: -8.42220401763916
    9. ')' → logprob: -8.54720401763916
    10. ' :
' → logprob: -8.67220401763916

Token 271: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04058306664228439
    2. '   ' → logprob: -3.2905831336975098
    3. ' bfs' → logprob: -6.04058313369751
    4. '       ' → logprob: -9.165582656860352
    5. ' b' → logprob: -10.040582656860352
    6. '	b' → logprob: -12.290582656860352
    7. '  ' → logprob: -12.915582656860352
    8. ' ' → logprob: -13.665582656860352
    9. '```' → logprob: -14.540582656860352
    10. '           ' → logprob: -14.915582656860352

Token 272: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0005031120381318033
    2. '(' → logprob: -7.625503063201904
    3. ' (' → logprob: -11.250503540039062
    4. '(index' → logprob: -13.625503540039062
    5. '(
' → logprob: -14.875503540039062
    6. '(i' → logprob: -15.500503540039062
    7. '```' → logprob: -16.500503540039062
    8. ')' → logprob: -16.875503540039062
    9. 'idx' → logprob: -17.125503540039062
    10. '(indices' → logprob: -17.250503540039062

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035083942930214107
    2. ' ,' → logprob: -8.000350952148438
    3. '   ' → logprob: -12.625350952148438
    4. '       ' → logprob: -12.625350952148438
    5. '(cur' → logprob: -12.625350952148438
    6. '           ' → logprob: -13.125350952148438
    7. ',current' → logprob: -13.750350952148438
    8. ',
' → logprob: -14.625350952148438
    9. '```' → logprob: -14.625350952148438
    10. 'cur' → logprob: -14.875350952148438

Token 274: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -5.860340752406046e-05
    2. ' cur' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.5000581741333
    4. '       ' → logprob: -17.125059127807617
    5. '	cur' → logprob: -17.250059127807617
    6. '[cur' → logprob: -18.375059127807617
    7. '(cur' → logprob: -19.750059127807617
    8. ' ' → logprob: -20.375059127807617
    9. '           ' → logprob: -20.750059127807617
    10. '.cur' → logprob: -21.375059127807617

Token 275: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.000001907348633
    3. '_c' → logprob: -14.125001907348633
    4. 'clr' → logprob: -14.750001907348633
    5. ' _' → logprob: -16.625001907348633
    6. '_col' → logprob: -16.875001907348633
    7. 'cl' → logprob: -16.875001907348633
    8. '_bl' → logprob: -17.250001907348633
    9. '_cr' → logprob: -17.500001907348633
    10. '_ct' → logprob: -18.000001907348633

Token 276: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.704273118884885e-07
    2. 'or' → logprob: -15.250000953674316
    3. 'ur' → logprob: -15.875000953674316
    4. '_r' → logprob: -16.75
    5. ' r' → logprob: -16.875
    6. '   ' → logprob: -17.25
    7. ' ' → logprob: -17.5
    8. '
' → logprob: -17.625
    9. ' ' → logprob: -17.875
    10. 'р' → logprob: -18.0

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008328551193699241
    2. ' ,' → logprob: -7.500833034515381
    3. ')' → logprob: -8.500832557678223
    4. ',
' → logprob: -9.625832557678223
    5. ')
' → logprob: -12.500832557678223
    6. ',current' → logprob: -12.875832557678223
    7. ',c' → logprob: -13.500832557678223
    8. '   ' → logprob: -14.250832557678223
    9. '
' → logprob: -14.625832557678223
    10. ',)' → logprob: -16.00083351135254

Token 278: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0015023599844425917
    2. ' cl' → logprob: -6.501502513885498
    3. '	cl' → logprob: -18.376502990722656
    4. 'c' → logprob: -20.376502990722656
    5. '(cl' → logprob: -21.126502990722656
    6. 'cr' → logprob: -21.126502990722656
    7. '.cl' → logprob: -22.751502990722656
    8. 'Cl' → logprob: -22.751502990722656
    9. '_cl' → logprob: -22.876502990722656
    10. ')' → logprob: -22.876502990722656

Token 279: 'rs' (ID: 6435)
  Prédit: 'rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -5.9153885558771435e-06
    2. 'r' → logprob: -12.500005722045898
    3. 's' → logprob: -13.625005722045898
    4. ' rs' → logprob: -15.000005722045898
    5. '$rs' → logprob: -15.875005722045898
    6. '	rs' → logprob: -16.0000057220459
    7. '```' → logprob: -16.5000057220459
    8. '_rs' → logprob: -16.6250057220459
    9. '.rs' → logprob: -17.7500057220459
    10. 'Rs' → logprob: -17.8750057220459

Token 280: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.000561373308300972
    2. ')' → logprob: -7.500561237335205
    3. ')
' → logprob: -11.750561714172363
    4. ' )
' → logprob: -14.625561714172363
    5. ')

' → logprob: -16.500560760498047
    6. '   ' → logprob: -18.000560760498047
    7. ');
' → logprob: -18.125560760498047
    8. '       ' → logprob: -18.250560760498047
    9. ')`
' → logprob: -19.250560760498047
    10. '),' → logprob: -20.250560760498047

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007450680714100599
    2. '   ' → logprob: -7.6257452964782715
    3. '
' → logprob: -8.500744819641113
    4. '<|end|>' → logprob: -10.875744819641113
    5. '	' → logprob: -11.375744819641113
    6. ' ' → logprob: -12.750744819641113
    7. '        
' → logprob: -12.875744819641113
    8. ',' → logprob: -12.875744819641113
    9. '	cur' → logprob: -13.000744819641113
    10. '[cur' → logprob: -13.125744819641113

Token 282: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -5.7888184528565034e-05
    2. ' cur' → logprob: -10.0000581741333
    3. '       ' → logprob: -11.5000581741333
    4. '   ' → logprob: -13.1250581741333
    5. '	cur' → logprob: -15.1250581741333
    6. '
' → logprob: -18.375057220458984
    7. '[cur' → logprob: -19.250057220458984
    8. '_cur' → logprob: -19.250057220458984
    9. '           ' → logprob: -20.000057220458984
    10. '++' → logprob: -20.125057220458984

Token 283: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.750003814697266
    3. '_c' → logprob: -13.750003814697266
    4. ' _' → logprob: -15.875003814697266
    5. '_cur' → logprob: -17.125003814697266
    6. '_color' → logprob: -17.750003814697266
    7. '_cr' → logprob: -18.625003814697266
    8. '._' → logprob: -19.125003814697266
    9. '_
' → logprob: -19.250003814697266
    10. '_col' → logprob: -19.625003814697266

Token 284: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2664456789934775e-06
    2. 'clr' → logprob: -14.125000953674316
    3. 'or' → logprob: -15.375000953674316
    4. '_r' → logprob: -15.625000953674316
    5. 'rs' → logprob: -16.875001907348633
    6. 'р' → logprob: -17.625001907348633
    7. 'cl' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '	r' → logprob: -18.250001907348633
    10. 'rz' → logprob: -18.375001907348633

Token 285: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001142241875641048
    2. ' +=' → logprob: -7.1261420249938965
    3. '+' → logprob: -8.001142501831055
    4. '+="' → logprob: -13.876142501831055
    5. '+='' → logprob: -14.626142501831055
    6. ']+=' → logprob: -14.751142501831055
    7. '++' → logprob: -14.751142501831055
    8. '=' → logprob: -15.751142501831055
    9. '```' → logprob: -16.126142501831055
    10. '+++' → logprob: -16.876142501831055

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.87502098083496
    4. '  ' → logprob: -19.87502098083496
    5. '```' → logprob: -21.12502098083496
    6. ' ' → logprob: -21.62502098083496
    7. '
' → logprob: -21.62502098083496
    8. '１' → logprob: -21.75002098083496
    9. '۱' → logprob: -23.12502098083496
    10. '2' → logprob: -23.31252098083496

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '  ' → logprob: -20.125001907348633
    5. '```' → logprob: -20.375001907348633
    6. '１' → logprob: -20.437501907348633
    7. '۱' → logprob: -21.750001907348633
    8. '...' → logprob: -21.812501907348633
    9. 'int' → logprob: -21.937501907348633
    10. '2' → logprob: -22.125001907348633

Token 288: '

' (ID: 279)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0031602533999830484
    2. 'for' → logprob: -6.75316047668457
    3. 'K' → logprob: -7.75316047668457
    4. 'P' → logprob: -8.00316047668457
    5. 'q' → logprob: -8.00316047668457
    6. 'print' → logprob: -8.25316047668457
    7. 'query' → logprob: -9.62816047668457
    8. 'import' → logprob: -10.00316047668457
    9. 'a' → logprob: -10.12816047668457
    10. 'T' → logprob: -10.12816047668457

Token 289: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016195304691791534
    2. 'if' → logprob: -4.891195297241211
    3. 'for' → logprob: -5.016195297241211
    4. 'Q' → logprob: -7.516195297241211
    5. 'answer' → logprob: -8.141195297241211
    6. 'colors' → logprob: -8.516195297241211
    7. 'result' → logprob: -8.891195297241211
    8. 'answers' → logprob: -9.266195297241211
    9. 'pr' → logprob: -9.391195297241211
    10. 'possible' → logprob: -9.516195297241211

Token 290: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.6058347821235657
    2. '(' → logprob: -0.9808347821235657
    3. '(len' → logprob: -2.605834722518921
    4. '(cl' → logprob: -6.7308349609375
    5. '()' → logprob: -6.7308349609375
    6. '(max' → logprob: -6.9808349609375
    7. '('' → logprob: -7.2308349609375
    8. '(sum' → logprob: -7.7308349609375
    9. '((' → logprob: -7.8558349609375
    10. '("' → logprob: -8.3558349609375

Token 291: '_cl' (ID: 11209)
  Prédit: '_cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cl' → logprob: -0.0022427968215197325
    2. '_' → logprob: -6.627242565155029
    3. 's' → logprob: -7.377242565155029
    4. '_)' → logprob: -9.877243041992188
    5. '(' → logprob: -10.127243041992188
    6. '(_' → logprob: -10.752243041992188
    7. ')' → logprob: -10.752243041992188
    8. '_clusters' → logprob: -10.752243041992188
    9. '_st' → logprob: -11.127243041992188
    10. '_sl' → logprob: -11.127243041992188

Token 292: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.8550976164988242e-05
    2. 'rs' → logprob: -11.000018119812012
    3. 'р' → logprob: -14.500018119812012
    4. ' r' → logprob: -15.625018119812012
    5. '_r' → logprob: -15.625018119812012
    6. ')' → logprob: -16.062519073486328
    7. '_' → logprob: -16.125019073486328
    8. '```' → logprob: -16.562519073486328
    9. 's' → logprob: -16.625019073486328
    10. 'rtype' → logprob: -17.062519073486328

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -16.5
    4. ')#' → logprob: -16.75
    5. ')`' → logprob: -16.875
    6. '))' → logprob: -17.5
    7. '())' → logprob: -18.125
    8. ')}' → logprob: -18.125
    9. '*' → logprob: -18.375
    10. '()' → logprob: -18.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 291
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 122
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 39.52%
Précision adaptée (1ère position): 41.92%
Précision (top 10): 74.57%
================================================================================
