================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, product, combinations, chain

N = int(input())

vec = lambda l, n: list(accumulate([0] + l, lambda x, y: x + [0]*n)[:n])
A = [vec([0], N) for _ in range(N)]
Al = [vec([0], N+1) for _ in range(N+1)]
Ar = [vec([0], N+1) for _ in range(N+1)]

def paternize(i, j, arr, a):
    arr[i][j] = a[j-1] if i < j else (a[j] if i > j else arr[i][j])
    return arr

for idx, i in enumerate(range(N)):
    a = list(map(int, input().split()))
    # heavy use of functools.reduce to mimic normal loops - unnecessary
    A = reduce(lambda arr, j: paternize(i, j, arr, a), range(N), A)

for j, i in product(range(N), range(N)):
    if j <= i: continue
    Al[j][i+1] = [Al[j][i], A[j][i]]
    Al[j][i+1] = sum(chain(*Al[j][i+1])) if isinstance(Al[j][i+1], list) else Al[j][i+1]
    Ar[i][j] = sum(filter(None, [Ar[i-1][j] if i-1>=0 else 0, A[i][j]]))

dp = [[float('inf')] * (N+1) for _ in range(N+1)]
dp[0][0] = 0

for i in range(N+1):
    for j in range(i, N+1):
        if dp[i][j] == float('inf'): continue
        l, r = 0, 0
        for k in range(j+1, N+1):
            l = reduce(lambda acc, ind: acc + Al[ind][i], range(j, k), 0)
            r = sum(map(lambda m: Ar[m-1][m] - (Ar[j-1][m] if j-1>=0 else 0), range(j+1, k+1)))
            dp[j][k] = min(dp[j][k], dp[i][j] + l + r)

print(min(map(lambda idx: dp[idx][N], range(N+1))))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.4987817108631134
    2. 'partial' → logprob: -1.248781681060791
    3. 'reduce' → logprob: -2.498781681060791
    4. ' wraps' → logprob: -3.998781681060791
    5. 'l' → logprob: -5.748781681060791
    6. ' partial' → logprob: -7.248781681060791
    7. 'cached' → logprob: -7.623781681060791
    8. 'cache' → logprob: -7.623781681060791
    9. 'cmp' → logprob: -8.74878215789795
    10. ' reduce' → logprob: -9.37378215789795

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5336539149284363
    2. ' math' → logprob: -1.158653974533081
    3. ' itertools' → logprob: -2.658653974533081
    4. ' collections' → logprob: -3.783653974533081
    5. 'operator' → logprob: -5.408653736114502
    6. ' os' → logprob: -7.033653736114502
    7. 'math' → logprob: -7.033653736114502
    8. ' ' → logprob: -8.28365421295166
    9. ' typing' → logprob: -8.78365421295166
    10. 'collections' → logprob: -9.15865421295166

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10213418304920197
    2. 'import' → logprob: -2.3521342277526855
    3. '.' → logprob: -6.6021342277526855
    4. ' .' → logprob: -8.227133750915527
    5. '.import' → logprob: -8.477133750915527
    6. ' ' → logprob: -10.352133750915527
    7. '	import' → logprob: -10.602133750915527
    8. '.groupby' → logprob: -11.727133750915527
    9. '_import' → logprob: -11.977133750915527
    10. '.im' → logprob: -12.352133750915527

Token 8: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.8000409603118896
    2. 'group' → logprob: -2.0500409603118896
    3. 'acc' → logprob: -2.3000409603118896
    4. 'count' → logprob: -2.4250409603118896
    5. ' cycle' → logprob: -2.6750409603118896
    6. ' accumulate' → logprob: -3.1750409603118896
    7. 'cycle' → logprob: -3.3000409603118896
    8. ' chain' → logprob: -3.6750409603118896
    9. 'chain' → logprob: -4.175041198730469
    10. 'com' → logprob: -4.300041198730469

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033279210329055786
    2. '(
' → logprob: -3.5332791805267334
    3. 'def' → logprob: -6.4082794189453125
    4. ',' → logprob: -7.2832794189453125
    5. '```' → logprob: -8.158279418945312
    6. '\' → logprob: -8.533279418945312
    7. '\n' → logprob: -8.658279418945312
    8. '`' → logprob: -9.533279418945312
    9. '(

' → logprob: -9.533279418945312
    10. '\(' → logprob: -9.783279418945312

Token 10: ' product' (ID: 1888)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.42702800035476685
    2. ' group' → logprob: -1.927027940750122
    3. 'chain' → logprob: -2.302027940750122
    4. ' chain' → logprob: -3.052027940750122
    5. 'product' → logprob: -4.177028179168701
    6. 'com' → logprob: -4.302028179168701
    7. 'count' → logprob: -4.427028179168701
    8. ' product' → logprob: -5.427028179168701
    9. 'tee' → logprob: -6.177028179168701
    10. 'per' → logprob: -6.677028179168701

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042122047394514084
    2. '(
' → logprob: -3.4171221256256104
    3. ',' → logprob: -5.792121887207031
    4. 'def' → logprob: -6.167121887207031
    5. '\' → logprob: -7.167121887207031
    6. '```' → logprob: -7.667121887207031
    7. '\n' → logprob: -7.792121887207031
    8. '.' → logprob: -7.917121887207031
    9. 'import' → logprob: -8.292121887207031
    10. '`' → logprob: -8.542121887207031

Token 12: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.6572598814964294
    2. ' permutations' → logprob: -1.1572599411010742
    3. 'per' → logprob: -2.532259941101074
    4. ' chain' → logprob: -3.782259941101074
    5. ' combinations' → logprob: -4.032259941101074
    6. 'chain' → logprob: -4.782259941101074
    7. '```' → logprob: -4.782259941101074
    8. ' group' → logprob: -5.282259941101074
    9. ' cycle' → logprob: -5.407259941101074
    10. 'st' → logprob: -5.907259941101074

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29279130697250366
    2. '(
' → logprob: -1.7927913665771484
    3. ',' → logprob: -3.0427913665771484
    4. 'def' → logprob: -4.542791366577148
    5. '
' → logprob: -5.167791366577148
    6. 'import' → logprob: -5.292791366577148
    7. '\' → logprob: -5.292791366577148
    8. '\n' → logprob: -6.167791366577148
    9. '```' → logprob: -6.292791366577148
    10. '(

' → logprob: -6.542791366577148

Token 14: ' chain' (ID: 13464)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6478899121284485
    2. 'per' → logprob: -0.8978899121284485
    3. 'com' → logprob: -3.1478898525238037
    4. 'chain' → logprob: -4.397890090942383
    5. ' chain' → logprob: -4.897890090942383
    6. 'group' → logprob: -6.022890090942383
    7. '```' → logprob: -6.272890090942383
    8. ' group' → logprob: -7.147890090942383
    9. 'filter' → logprob: -7.897890090942383
    10. 'compress' → logprob: -8.272890090942383

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43566229939460754
    2. ',' → logprob: -1.6856622695922852
    3. '(
' → logprob: -2.310662269592285
    4. '
' → logprob: -4.310662269592285
    5. 'def' → logprob: -4.435662269592285
    6. '<|end|>' → logprob: -4.435662269592285
    7. 'import' → logprob: -4.935662269592285
    8. '.' → logprob: -5.060662269592285
    9. '\' → logprob: -5.560662269592285
    10. ' (' → logprob: -6.185662269592285

Token 16: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.699644923210144
    2. '(' → logprob: -1.199644923210144
    3. 'd' → logprob: -2.3246450424194336
    4. '#' → logprob: -3.4496450424194336
    5. '.' → logprob: -4.199645042419434
    6. '[' → logprob: -4.699645042419434
    7. '(
' → logprob: -5.074645042419434
    8. ',' → logprob: -5.324645042419434
    9. '\' → logprob: -5.324645042419434
    10. '```' → logprob: -5.324645042419434

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07344566285610199
    2. '=' → logprob: -3.1984455585479736
    3. ' ' → logprob: -3.9484455585479736
    4. ',' → logprob: -5.073445796966553
    5. '_' → logprob: -6.698445796966553
    6. '.' → logprob: -6.948445796966553
    7. '  ' → logprob: -7.198445796966553
    8. ' ,' → logprob: -7.198445796966553
    9. ')' → logprob: -8.198445320129395
    10. ' )' → logprob: -9.948445320129395

Token 18: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018888462334871292
    2. '10' → logprob: -4.518888473510742
    3. '5' → logprob: -5.768888473510742
    4. ' int' → logprob: -6.018888473510742
    5. 'int' → logprob: -6.393888473510742
    6. '100' → logprob: -8.643888473510742
    7. '0' → logprob: -9.143888473510742
    8. '20' → logprob: -9.268888473510742
    9. '3' → logprob: -9.768888473510742
    10. '4' → logprob: -10.018888473510742

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010819945018738508
    2. '('' → logprob: -7.251081943511963
    3. '(input' → logprob: -8.751082420349121
    4. '(N' → logprob: -9.626082420349121
    5. '()' → logprob: -10.126082420349121
    6. '(`' → logprob: -10.501082420349121
    7. '(
' → logprob: -11.001082420349121
    8. '("' → logprob: -11.001082420349121
    9. ''' → logprob: -11.876082420349121
    10. '`' → logprob: -12.126082420349121

Token 20: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03411909565329552
    2. '()' → logprob: -4.284119129180908
    3. '())' → logprob: -4.284119129180908
    4. '(' → logprob: -5.159119129180908
    5. '))' → logprob: -9.03411865234375
    6. '`)' → logprob: -9.90911865234375
    7. '(
' → logprob: -11.15911865234375
    8. '')' → logprob: -12.03411865234375
    9. '```' → logprob: -12.03411865234375
    10. '(

' → logprob: -12.53411865234375

Token 21: 'vec' (ID: 3192)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.413387417793274
    2. 'data' → logprob: -1.413387417793274
    3. 'result' → logprob: -2.4133872985839844
    4. ')' → logprob: -2.4133872985839844
    5. 'arr' → logprob: -2.7883872985839844
    6. 's' → logprob: -3.1633872985839844
    7. 'numbers' → logprob: -3.2883872985839844
    8. 'for' → logprob: -3.5383872985839844
    9. 'nums' → logprob: -3.9133872985839844
    10. 'n' → logprob: -4.038387298583984

Token 22: ' =' (ID: 314)
  Prédit: 'tor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tor' → logprob: -0.12096486240625381
    2. 'tors' → logprob: -2.370964765548706
    3. ' =' → logprob: -3.995964765548706
    4. 's' → logprob: -6.745965003967285
    5. '   ' → logprob: -8.495965003967285
    6. '=' → logprob: -8.495965003967285
    7. '[' → logprob: -8.870965003967285
    8. '```' → logprob: -9.120965003967285
    9. '_' → logprob: -9.745965003967285
    10. ' ' → logprob: -9.870965003967285

Token 23: ' lambda' (ID: 27871)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2108425348997116
    2. '[list' → logprob: -2.7108426094055176
    3. '[]' → logprob: -2.9608426094055176
    4. '[' → logprob: -2.9608426094055176
    5. ' list' → logprob: -4.335842609405518
    6. '[int' → logprob: -5.585842609405518
    7. ' [' → logprob: -6.585842609405518
    8. ' []' → logprob: -7.710842609405518
    9. '[input' → logprob: -7.960842609405518
    10. '(list' → logprob: -8.21084213256836

Token 24: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0759563148021698
    2. 'x' → logprob: -2.825956344604492
    3. ' a' → logprob: -5.200956344604492
    4. ' s' → logprob: -5.825956344604492
    5. 'a' → logprob: -6.575956344604492
    6. ' lst' → logprob: -6.575956344604492
    7. 's' → logprob: -7.200956344604492
    8. ' lambda' → logprob: -7.950956344604492
    9. ' t' → logprob: -8.075956344604492
    10. ' arr' → logprob: -8.825956344604492

Token 25: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009913798421621323
    2. ' :' → logprob: -5.509913921356201
    3. ',' → logprob: -5.634913921356201
    4. ':[' → logprob: -7.134913921356201
    5. ':list' → logprob: -7.259913921356201
    6. '[:' → logprob: -8.384913444519043
    7. '[:]' → logprob: -8.634913444519043
    8. ':l' → logprob: -9.509913444519043
    9. '[' → logprob: -10.009913444519043
    10. ',:' → logprob: -10.009913444519043

Token 26: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8737577199935913
    2. 'n' → logprob: -1.9987577199935913
    3. ' x' → logprob: -2.373757839202881
    4. ':' → logprob: -2.498757839202881
    5. 'lst' → logprob: -2.498757839202881
    6. 'lambda' → logprob: -2.748757839202881
    7. 'f' → logprob: -2.998757839202881
    8. ' f' → logprob: -3.248757839202881
    9. ' n' → logprob: -3.248757839202881
    10. ' lambda' → logprob: -3.373757839202881

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007460500579327345
    2. ':[' → logprob: -5.757460594177246
    3. ' :' → logprob: -6.132460594177246
    4. ',' → logprob: -6.757460594177246
    5. ':list' → logprob: -7.882460594177246
    6. ':l' → logprob: -8.882460594177246
    7. '[:' → logprob: -9.632460594177246
    8. ',:' → logprob: -9.632460594177246
    9. ':(' → logprob: -9.632460594177246
    10. '=[' → logprob: -10.132460594177246

Token 28: ' list' (ID: 1562)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.8244464993476868
    2. ' [' → logprob: -1.199446439743042
    3. '[' → logprob: -2.574446439743042
    4. '[(' → logprob: -2.949446439743042
    5. 'list' → logprob: -3.324446439743042
    6. 'l' → logprob: -3.824446439743042
    7. ' list' → logprob: -4.324446678161621
    8. '[i' → logprob: -4.574446678161621
    9. ' l' → logprob: -4.699446678161621
    10. '[n' → logprob: -4.824446678161621

Token 29: '(acc' (ID: 82668)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.23895569145679474
    2. '(chain' → logprob: -1.8639557361602783
    3. '(filter' → logprob: -4.113955497741699
    4. '(' → logprob: -4.363955497741699
    5. '(acc' → logprob: -4.363955497741699
    6. '(com' → logprob: -4.988955497741699
    7. '(product' → logprob: -5.363955497741699
    8. '(zip' → logprob: -6.363955497741699
    9. '(t' → logprob: -7.113955497741699
    10. '(re' → logprob: -7.488955497741699

Token 30: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0005181243759579957
    2. 'um' → logprob: -7.875518321990967
    3. 'om' → logprob: -9.250517845153809
    4. 'umul' → logprob: -11.000517845153809
    5. 'umu' → logprob: -12.125517845153809
    6. 'eler' → logprob: -12.500517845153809
    7. 'umal' → logprob: -12.875517845153809
    8. 'umulator' → logprob: -13.000517845153809
    9. 'ount' → logprob: -13.000517845153809
    10. 'ulate' → logprob: -13.375517845153809

Token 31: '([' (ID: 5194)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5169478058815002
    2. '(l' → logprob: -1.1419477462768555
    3. '(' → logprob: -2.7669477462768555
    4. '(chain' → logprob: -4.1419477462768555
    5. '([' → logprob: -5.3919477462768555
    6. '(list' → logprob: -8.391947746276855
    7. '(map' → logprob: -8.391947746276855
    8. '(iter' → logprob: -9.141947746276855
    9. ' (' → logprob: -9.266947746276855
    10. '(
' → logprob: -9.516947746276855

Token 32: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3212425112724304
    2. 'x' → logprob: -2.071242570877075
    3. '0' → logprob: -3.321242570877075
    4. '1' → logprob: -3.696242570877075
    5. 'n' → logprob: -4.321242332458496
    6. ' l' → logprob: -4.571242332458496
    7. ' x' → logprob: -4.946242332458496
    8. 'abs' → logprob: -4.946242332458496
    9. 'map' → logprob: -5.071242332458496
    10. 'i' → logprob: -5.071242332458496

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23092365264892578
    2. ']+' → logprob: -1.6059236526489258
    3. ' if' → logprob: -5.605923652648926
    4. ',' → logprob: -7.105923652648926
    5. ' ]' → logprob: -7.855923652648926
    6. 'if' → logprob: -8.230923652648926
    7. ']*' → logprob: -8.605923652648926
    8. ']*(' → logprob: -9.480923652648926
    9. ']+=' → logprob: -10.605923652648926
    10. ']-' → logprob: -11.355923652648926

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7039251327514648
    2. '+[' → logprob: -1.3289251327514648
    3. ']+' → logprob: -2.078925132751465
    4. ' +' → logprob: -3.578925132751465
    5. ')+' → logprob: -3.953925132751465
    6. ',' → logprob: -3.953925132751465
    7. '+l' → logprob: -4.203925132751465
    8. ']' → logprob: -4.453925132751465
    9. ' if' → logprob: -5.703925132751465
    10. ')' → logprob: -5.828925132751465

Token 35: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016187917441129684
    2. ' l' → logprob: -4.891188144683838
    3. '[l' → logprob: -5.266188144683838
    4. '[' → logprob: -6.516188144683838
    5. ' [' → logprob: -7.016188144683838
    6. '[(' → logprob: -8.39118766784668
    7. 'list' → logprob: -8.64118766784668
    8. '[i' → logprob: -8.89118766784668
    9. '[-' → logprob: -9.01618766784668
    10. 'chain' → logprob: -9.26618766784668

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31717631220817566
    2. '[-' → logprob: -2.067176342010498
    3. '[:' → logprob: -3.067176342010498
    4. '*' → logprob: -3.317176342010498
    5. '[n' → logprob: -3.317176342010498
    6. '[' → logprob: -4.317176342010498
    7. '[i' → logprob: -6.067176342010498
    8. '[:-' → logprob: -6.567176342010498
    9. '[::-' → logprob: -6.567176342010498
    10. '*,' → logprob: -6.817176342010498

Token 37: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2527530789375305
    2. 'lambda' → logprob: -1.5027530193328857
    3. '(lambda' → logprob: -7.752753257751465
    4. '=lambda' → logprob: -8.877753257751465
    5. ')' → logprob: -9.502753257751465
    6. ' ' → logprob: -10.002753257751465
    7. '   ' → logprob: -10.627753257751465
    8. '  ' → logprob: -10.752753257751465
    9. ' key' → logprob: -11.127753257751465
    10. '    ' → logprob: -11.127753257751465

Token 38: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17897363007068634
    2. ' a' → logprob: -2.42897367477417
    3. 'x' → logprob: -2.80397367477417
    4. 'a' → logprob: -4.42897367477417
    5. ' s' → logprob: -6.42897367477417
    6. ' acc' → logprob: -7.05397367477417
    7. 's' → logprob: -8.303973197937012
    8. ' ' → logprob: -8.303973197937012
    9. ' u' → logprob: -10.428973197937012
    10. ' i' → logprob: -10.428973197937012

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047356789582408965
    2. ',x' → logprob: -8.000473976135254
    3. ',n' → logprob: -9.750473976135254
    4. ' ,' → logprob: -10.125473976135254
    5. ',y' → logprob: -11.750473976135254
    6. ',i' → logprob: -12.000473976135254
    7. 'x' → logprob: -12.500473976135254
    8. ',k' → logprob: -12.750473976135254
    9. ',a' → logprob: -12.875473976135254
    10. ',index' → logprob: -12.875473976135254

Token 40: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759469866752625
    2. ' y' → logprob: -0.8259469866752625
    3. '	y' → logprob: -12.700946807861328
    4. ' ' → logprob: -13.700946807861328
    5. 'a' → logprob: -13.950946807861328
    6. '_y' → logprob: -14.700946807861328
    7. 'x' → logprob: -15.200946807861328
    8. '  ' → logprob: -15.700946807861328
    9. 'q' → logprob: -15.825946807861328
    10. 'z' → logprob: -15.950946807861328

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009542173356749117
    2. ',' → logprob: -7.3759541511535645
    3. ' :' → logprob: -8.375954627990723
    4. '+' → logprob: -9.875954627990723
    5. '+:' → logprob: -11.125954627990723
    6. 'y' → logprob: -11.750954627990723
    7. 's' → logprob: -12.000954627990723
    8. ' +' → logprob: -12.250954627990723
    9. 'x' → logprob: -12.875954627990723
    10. ':x' → logprob: -13.500954627990723

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3695890009403229
    2. 'x' → logprob: -1.2445889711380005
    3. ' (' → logprob: -4.119588851928711
    4. '(x' → logprob: -6.244588851928711
    5. ' max' → logprob: -6.994588851928711
    6. '(' → logprob: -7.369588851928711
    7. ' ' → logprob: -7.869588851928711
    8. ' y' → logprob: -8.369588851928711
    9. 'max' → logprob: -9.244588851928711
    10. ' n' → logprob: -9.369588851928711

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07376418262720108
    2. ' +' → logprob: -2.6987640857696533
    3. '+y' → logprob: -5.948764324188232
    4. '+n' → logprob: -7.323764324188232
    5. '-' → logprob: -8.948763847351074
    6. ' if' → logprob: -9.073763847351074
    7. '%' → logprob: -9.323763847351074
    8. '+x' → logprob: -9.573763847351074
    9. '*' → logprob: -10.448763847351074
    10. 'if' → logprob: -10.948763847351074

Token 44: ' [' (ID: 723)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5748921632766724
    2. 'y' → logprob: -0.9498921632766724
    3. ' (' → logprob: -3.949892044067383
    4. '(' → logprob: -4.449892044067383
    5. '1' → logprob: -4.949892044067383
    6. '(y' → logprob: -5.074892044067383
    7. ' ' → logprob: -6.324892044067383
    8. 'n' → logprob: -6.699892044067383
    9. ' n' → logprob: -6.699892044067383
    10. '(n' → logprob: -6.949892044067383

Token 45: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07644984871149063
    2. '[y' → logprob: -3.0764498710632324
    3. '[' → logprob: -4.076449871063232
    4. '[n' → logprob: -5.451449871063232
    5. ' y' → logprob: -5.951449871063232
    6. '(y' → logprob: -6.201449871063232
    7. ' [' → logprob: -7.576449871063232
    8. '(' → logprob: -8.826449394226074
    9. '[int' → logprob: -8.951449394226074
    10. 'n' → logprob: -8.951449394226074

Token 46: ']*' (ID: 18579)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11483732610940933
    2. ']' → logprob: -3.114837408065796
    3. '*y' → logprob: -3.614837408065796
    4. ' y' → logprob: -4.114837169647217
    5. ' if' → logprob: -4.989837169647217
    6. ']*' → logprob: -5.489837169647217
    7. ',y' → logprob: -6.239837169647217
    8. 'if' → logprob: -6.364837169647217
    9. ']+' → logprob: -6.364837169647217
    10. '][' → logprob: -6.489837169647217

Token 47: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31950274109840393
    2. '(n' → logprob: -1.4445027112960815
    3. 'len' → logprob: -4.694502830505371
    4. '(' → logprob: -4.694502830505371
    5. '(len' → logprob: -4.944502830505371
    6. '(y' → logprob: -5.694502830505371
    7. ' n' → logprob: -5.944502830505371
    8. 'y' → logprob: -6.069502830505371
    9. ' (' → logprob: -6.694502830505371
    10. '1' → logprob: -6.944502830505371

Token 48: ')' (ID: 8)
  Prédit: '+y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -1.2211074829101562
    2. '+' → logprob: -1.3461074829101562
    3. '+[' → logprob: -1.7211074829101562
    4. ' +' → logprob: -2.3461074829101562
    5. '[y' → logprob: -2.4711074829101562
    6. '[' → logprob: -3.3461074829101562
    7. '[-' → logprob: -4.096107482910156
    8. '[len' → logprob: -4.346107482910156
    9. ')' → logprob: -5.471107482910156
    10. 'len' → logprob: -5.721107482910156

Token 49: '[:' (ID: 7808)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22056008875370026
    2. '+' → logprob: -2.720560073852539
    3. '[' → logprob: -2.970560073852539
    4. '))' → logprob: -3.595560073852539
    5. ')' → logprob: -3.720560073852539
    6. ' +' → logprob: -4.220560073852539
    7. '+[' → logprob: -5.845560073852539
    8. ' ,' → logprob: -5.970560073852539
    9. '[:-' → logprob: -7.220560073852539
    10. ')))' → logprob: -7.220560073852539

Token 50: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2794532775878906
    2. '1' → logprob: -2.2794532775878906
    3. '-' → logprob: -2.7794532775878906
    4. 'len' → logprob: -3.0294532775878906
    5. 'N' → logprob: -4.529453277587891
    6. ' -' → logprob: -4.904453277587891
    7. ' n' → logprob: -5.654453277587891
    8. '])' → logprob: -6.279453277587891
    9. ']' → logprob: -6.529453277587891
    10. ')' → logprob: -7.029453277587891

Token 51: '])
' (ID: 5169)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.9692578315734863
    2. ']' → logprob: -1.5942578315734863
    3. '])' → logprob: -1.5942578315734863
    4. '+' → logprob: -1.8442578315734863
    5. '],' → logprob: -3.5942578315734863
    6. ')' → logprob: -4.969257831573486
    7. '1' → logprob: -5.469257831573486
    8. '))' → logprob: -6.094257831573486
    9. '-' → logprob: -6.219257831573486
    10. ':' → logprob: -6.344257831573486

Token 52: 'A' (ID: 32)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3074633479118347
    2. '[' → logprob: -1.4324634075164795
    3. '(' → logprob: -3.9324634075164795
    4. ' ' → logprob: -6.1824631690979
    5. ']' → logprob: -6.4324631690979
    6. 'Trace' → logprob: -7.8074631690979
    7. ',' → logprob: -8.057463645935059
    8. '(n' → logprob: -8.432463645935059
    9. 'Index' → logprob: -8.557463645935059
    10. ':' → logprob: -8.682463645935059

Token 53: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01562698744237423
    2. ')' → logprob: -5.640626907348633
    3. ',' → logprob: -5.890626907348633
    4. '.' → logprob: -5.890626907348633
    5. '=' → logprob: -6.390626907348633
    6. '<|end|>' → logprob: -7.265626907348633
    7. '[:]' → logprob: -7.265626907348633
    8. 'A' → logprob: -7.640626907348633
    9. '[]' → logprob: -7.640626907348633
    10. '[:' → logprob: -7.890626907348633

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8248948454856873
    2. '[]' → logprob: -1.699894905090332
    3. 'list' → logprob: -1.949894905090332
    4. ' [' → logprob: -2.074894905090332
    5. ' list' → logprob: -3.324894905090332
    6. ' []' → logprob: -3.449894905090332
    7. '[int' → logprob: -3.824894905090332
    8. '[list' → logprob: -4.449894905090332
    9. '[input' → logprob: -5.324894905090332
    10. '[N' → logprob: -6.199894905090332

Token 55: 'vec' (ID: 3192)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06972509622573853
    2. '0' → logprob: -3.1947250366210938
    3. 'list' → logprob: -4.569725036621094
    4. ' int' → logprob: -4.819725036621094
    5. ']' → logprob: -6.069725036621094
    6. '[]' → logprob: -6.569725036621094
    7. 'N' → logprob: -7.069725036621094
    8. ']int' → logprob: -7.069725036621094
    9. ' list' → logprob: -7.569725036621094
    10. '[int' → logprob: -7.694725036621094

Token 56: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.114135503768921
    2. '(map' → logprob: -1.364135503768921
    3. '(list' → logprob: -1.739135503768921
    4. '(range' → logprob: -2.114135503768921
    5. '(input' → logprob: -2.489135503768921
    6. '(A' → logprob: -4.1141357421875
    7. '(' → logprob: -4.2391357421875
    8. '(int' → logprob: -6.6141357421875
    9. 'input' → logprob: -7.2391357421875
    10. '((' → logprob: -7.6141357421875

Token 57: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.736549437046051
    2. '0' → logprob: -1.7365493774414062
    3. 'N' → logprob: -1.8615493774414062
    4. '1' → logprob: -1.8615493774414062
    5. 'i' → logprob: -3.8615493774414062
    6. '*' → logprob: -5.236549377441406
    7. 'A' → logprob: -6.861549377441406
    8. 'input' → logprob: -6.861549377441406
    9. '2' → logprob: -6.986549377441406
    10. '-' → logprob: -7.611549377441406

Token 58: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7969269752502441
    2. ']*' → logprob: -0.9219269752502441
    3. '],' → logprob: -2.171926975250244
    4. ',' → logprob: -3.921926975250244
    5. ']+' → logprob: -4.796926975250244
    6. ']*(' → logprob: -4.796926975250244
    7. '1' → logprob: -8.171926498413086
    8. ' for' → logprob: -8.171926498413086
    9. '0' → logprob: -8.421926498413086
    10. '])' → logprob: -9.296926498413086

Token 59: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011076119728386402
    2. ' N' → logprob: -4.636075973510742
    3. '0' → logprob: -8.261075973510742
    4. ' ' → logprob: -8.261075973510742
    5. '1' → logprob: -8.386075973510742
    6. 'n' → logprob: -9.011075973510742
    7. '10' → logprob: -9.261075973510742
    8. '2' → logprob: -9.636075973510742
    9. '3' → logprob: -10.136075973510742
    10. '100' → logprob: -10.386075973510742

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22004641592502594
    2. ')]' → logprob: -1.8450464010238647
    3. '))' → logprob: -4.220046520233154
    4. '-' → logprob: -4.595046520233154
    5. ')])' → logprob: -5.095046520233154
    6. '),' → logprob: -5.220046520233154
    7. ' -' → logprob: -7.095046520233154
    8. ' )' → logprob: -7.220046520233154
    9. '+' → logprob: -7.720046520233154
    10. ')[' → logprob: -8.595046043395996

Token 61: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47453272342681885
    2. ')]' → logprob: -0.9745327234268188
    3. ']' → logprob: -8.474533081054688
    4. ')])' → logprob: -9.599533081054688
    5. '[' → logprob: -9.974533081054688
    6. ' )' → logprob: -10.099533081054688
    7. ')
' → logprob: -11.224533081054688
    8. '))' → logprob: -11.224533081054688
    9. '),' → logprob: -11.724533081054688
    10. ')[' → logprob: -11.724533081054688

Token 62: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6244542598724365
    2. ' _' → logprob: -0.8744542598724365
    3. ' range' → logprob: -3.1244542598724365
    4. ' ' → logprob: -6.249454498291016
    5. 'range' → logprob: -6.749454498291016
    6. ' i' → logprob: -8.874454498291016
    7. '_range' → logprob: -9.249454498291016
    8. 'i' → logprob: -10.249454498291016
    9. '0' → logprob: -13.124454498291016
    10. '(range' → logprob: -13.249454498291016

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009858673438429832
    2. 'in' → logprob: -4.63485860824585
    3. ' ' → logprob: -10.384859085083008
    4. 'range' → logprob: -10.634859085083008
    5. 'i' → logprob: -10.759859085083008
    6. 'n' → logprob: -12.134859085083008
    7. ')' → logprob: -12.259859085083008
    8. ' _' → logprob: -12.384859085083008
    9. ' range' → logprob: -13.009859085083008
    10. ' )' → logprob: -13.384859085083008

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023374641314148903
    2. ' range' → logprob: -3.773374557495117
    3. '[' → logprob: -9.398374557495117
    4. 'ran' → logprob: -11.148374557495117
    5. '(range' → logprob: -12.148374557495117
    6. ')' → logprob: -12.523374557495117
    7. 'rang' → logprob: -12.648374557495117
    8. 'r' → logprob: -12.773374557495117
    9. '```' → logprob: -13.273374557495117
    10. '	range' → logprob: -13.398374557495117

Token 65: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.026388075202703476
    2. '(' → logprob: -3.651388168334961
    3. '(n' → logprob: -10.026388168334961
    4. ' (' → logprob: -11.276388168334961
    5. '(len' → logprob: -11.401388168334961
    6. '(
' → logprob: -11.776388168334961
    7. 'N' → logprob: -13.026388168334961
    8. '(M' → logprob: -13.026388168334961
    9. '(A' → logprob: -13.401388168334961
    10. '((' → logprob: -13.526388168334961

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017755765293259174
    2. ')' → logprob: -9.125177383422852
    3. ']' → logprob: -9.875177383422852
    4. '])]' → logprob: -12.375177383422852
    5. ')])' → logprob: -12.375177383422852
    6. '])' → logprob: -12.625177383422852
    7. ')]
' → logprob: -13.375177383422852
    8. ' )' → logprob: -13.750177383422852
    9. '))' → logprob: -14.125177383422852
    10. ')}' → logprob: -15.000177383422852

Token 67: 'Al' (ID: 2348)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33789315819740295
    2. '[' → logprob: -1.4628931283950806
    3. '(' → logprob: -3.21289324760437
    4. ']' → logprob: -5.087893009185791
    5. '.' → logprob: -6.212893009185791
    6. ')]' → logprob: -6.837893009185791
    7. ':' → logprob: -7.337893009185791
    8. ',' → logprob: -7.587893009185791
    9. ' ' → logprob: -7.587893009185791
    10. '#' → logprob: -7.712893009185791

Token 68: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9857048392295837
    2. ' =' → logprob: -1.2357048988342285
    3. '=' → logprob: -1.4857048988342285
    4. ']' → logprob: -3.7357048988342285
    5. 'ist' → logprob: -4.2357048988342285
    6. ')' → logprob: -4.3607048988342285
    7. 'A' → logprob: -4.4857048988342285
    8. '=[]' → logprob: -5.1107048988342285
    9. '[N' → logprob: -5.8607048988342285
    10. 'N' → logprob: -5.8607048988342285

Token 69: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7476822733879089
    2. '[]' → logprob: -1.1226823329925537
    3. ' [' → logprob: -2.9976823329925537
    4. ' []' → logprob: -2.9976823329925537
    5. 'range' → logprob: -3.6226823329925537
    6. 'list' → logprob: -4.497682094573975
    7. '0' → logprob: -4.997682094573975
    8. '[len' → logprob: -4.997682094573975
    9. '[N' → logprob: -4.997682094573975
    10. '[int' → logprob: -5.247682094573975

Token 70: 'vec' (ID: 3192)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1334296464920044
    2. 'vec' → logprob: -1.5084296464920044
    3. '0' → logprob: -2.133429527282715
    4. '[' → logprob: -2.133429527282715
    5. 'range' → logprob: -2.508429527282715
    6. 'list' → logprob: -2.758429527282715
    7. 'A' → logprob: -4.883429527282715
    8. ' [' → logprob: -4.883429527282715
    9. ']' → logprob: -4.883429527282715
    10. ' []' → logprob: -5.008429527282715

Token 71: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.04444240778684616
    2. '(A' → logprob: -4.544442176818848
    3. '([]' → logprob: -4.794442176818848
    4. '(' → logprob: -5.044442176818848
    5. '([],' → logprob: -5.294442176818848
    6. '(range' → logprob: -5.294442176818848
    7. '(lambda' → logprob: -5.419442176818848
    8. '(chain' → logprob: -7.544442176818848
    9. '((' → logprob: -7.669442176818848
    10. '(([' → logprob: -7.919442176818848

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01660092920064926
    2. '1' → logprob: -4.266601085662842
    3. ')' → logprob: -7.016601085662842
    4. '(' → logprob: -7.516601085662842
    5. 'A' → logprob: -8.516600608825684
    6. ' ' → logprob: -9.016600608825684
    7. '[' → logprob: -9.141600608825684
    8. 'N' → logprob: -9.954100608825684
    9. '<|end|>' → logprob: -10.016600608825684
    10. ']' → logprob: -10.141600608825684

Token 73: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00020902375399600714
    2. '(N' → logprob: -9.875208854675293
    3. ' ],' → logprob: -9.875208854675293
    4. '()],' → logprob: -10.500208854675293
    5. '],[' → logprob: -11.125208854675293
    6. ']' → logprob: -11.250208854675293
    7. '(' → logprob: -11.875208854675293
    8. '[' → logprob: -12.000208854675293
    9. ',' → logprob: -12.250208854675293
    10. '(len' → logprob: -12.250208854675293

Token 74: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22822238504886627
    2. ' N' → logprob: -1.603222370147705
    3. '1' → logprob: -7.103222370147705
    4. ' ' → logprob: -7.103222370147705
    5. '0' → logprob: -7.728222370147705
    6. 'n' → logprob: -8.478222846984863
    7. '2' → logprob: -8.728222846984863
    8. ' n' → logprob: -9.728222846984863
    9. '3' → logprob: -10.228222846984863
    10. ')' → logprob: -10.228222846984863

Token 75: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023970557376742363
    2. ')]' → logprob: -6.752397060394287
    3. '[' → logprob: -7.627397060394287
    4. '+' → logprob: -8.627396583557129
    5. 'for' → logprob: -9.252396583557129
    6. '-' → logprob: -9.252396583557129
    7. ']' → logprob: -10.127396583557129
    8. ')]
' → logprob: -10.127396583557129
    9. ')[' → logprob: -10.377396583557129
    10. ' )' → logprob: -10.502396583557129

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006635082419961691
    2. ')' → logprob: -5.8816351890563965
    3. ' ' → logprob: -6.5066351890563965
    4. '2' → logprob: -6.8816351890563965
    5. 'N' → logprob: -7.3816351890563965
    6. '+' → logprob: -8.631634712219238
    7. '-' → logprob: -9.256634712219238
    8. '0' → logprob: -9.506634712219238
    9. ' N' → logprob: -10.131634712219238
    10. ')])' → logprob: -10.506634712219238

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05495292320847511
    2. ')]' → logprob: -2.92995285987854
    3. ']' → logprob: -10.929952621459961
    4. ')
' → logprob: -10.929952621459961
    5. '))' → logprob: -11.679952621459961
    6. ')])' → logprob: -12.054952621459961
    7. ' )' → logprob: -12.179952621459961
    8. ')`' → logprob: -12.804952621459961
    9. ')[' → logprob: -13.179952621459961
    10. '),' → logprob: -13.679952621459961

Token 78: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010418510064482689
    2. ')]' → logprob: -4.63541841506958
    3. ']' → logprob: -8.760418891906738
    4. '[' → logprob: -9.010418891906738
    5. 'for' → logprob: -9.010418891906738
    6. ' for' → logprob: -9.260418891906738
    7. '))' → logprob: -10.260418891906738
    8. ')])' → logprob: -10.385418891906738
    9. ')[' → logprob: -10.510418891906738
    10. ' )' → logprob: -11.010418891906738

Token 79: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20955277979373932
    2. ' _' → logprob: -1.7095527648925781
    3. ' range' → logprob: -4.834552764892578
    4. 'range' → logprob: -8.834552764892578
    5. ' in' → logprob: -11.959552764892578
    6. ' ' → logprob: -13.334552764892578
    7. '_range' → logprob: -13.459552764892578
    8. 'A' → logprob: -16.084552764892578
    9. ' ' → logprob: -16.084552764892578
    10. 'in' → logprob: -16.209552764892578

Token 80: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1467117965221405
    2. '_' → logprob: -2.396711826324463
    3. 'range' → logprob: -3.146711826324463
    4. ' in' → logprob: -6.396711826324463
    5. ' _' → logprob: -7.271711826324463
    6. ' ' → logprob: -10.771711349487305
    7. 'in' → logprob: -11.021711349487305
    8. ' ran' → logprob: -11.021711349487305
    9. '_range' → logprob: -12.271711349487305
    10. '	range' → logprob: -12.521711349487305

Token 81: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0059302207082509995
    2. ' range' → logprob: -5.130930423736572
    3. '[' → logprob: -13.630929946899414
    4. '(range' → logprob: -15.255929946899414
    5. '	range' → logprob: -16.755929946899414
    6. '_' → logprob: -17.130929946899414
    7. '```' → logprob: -18.130929946899414
    8. 'A' → logprob: -18.505929946899414
    9. '_range' → logprob: -18.630929946899414
    10. '`' → logprob: -18.755929946899414

Token 82: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.031151754781603813
    2. 'range' → logprob: -4.15615177154541
    3. 'N' → logprob: -4.40615177154541
    4. '(' → logprob: -6.78115177154541
    5. ' range' → logprob: -6.90615177154541
    6. '(range' → logprob: -7.78115177154541
    7. 'A' → logprob: -9.40615177154541
    8. '(A' → logprob: -9.90615177154541
    9. ' (' → logprob: -10.40615177154541
    10. ')' → logprob: -11.15615177154541

Token 83: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011963568249484524
    2. ')' → logprob: -10.12511920928955
    3. ']' → logprob: -10.50011920928955
    4. ')])' → logprob: -11.37511920928955
    5. ')]
' → logprob: -11.62511920928955
    6. '])]' → logprob: -11.62511920928955
    7. '+' → logprob: -11.87511920928955
    8. ')][' → logprob: -12.50011920928955
    9. '')]' → logprob: -13.25011920928955
    10. '[' → logprob: -13.50011920928955

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002153949812054634
    2. '2' → logprob: -6.6271538734436035
    3. '+' → logprob: -7.8771538734436035
    4. ')' → logprob: -8.752154350280762
    5. ' ' → logprob: -8.752154350280762
    6. '0' → logprob: -10.252154350280762
    7. '```' → logprob: -10.877154350280762
    8. '`)' → logprob: -11.627154350280762
    9. '-' → logprob: -11.752154350280762
    10. '))' → logprob: -12.189654350280762

Token 85: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3873508870601654
    2. ')' → logprob: -1.1373509168624878
    3. ')])' → logprob: -8.387351036071777
    4. '))' → logprob: -8.637351036071777
    5. ']' → logprob: -10.137351036071777
    6. '])' → logprob: -10.887351036071777
    7. ')
' → logprob: -12.512351036071777
    8. '])]' → logprob: -12.887351036071777
    9. ' )' → logprob: -13.137351036071777
    10. '）' → logprob: -13.512351036071777

Token 86: 'Ar' (ID: 2326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4695037305355072
    2. '(' → logprob: -1.4695037603378296
    3. '[' → logprob: -2.21950364112854
    4. ',' → logprob: -4.719503879547119
    5. ']' → logprob: -5.219503879547119
    6. 'def' → logprob: -5.469503879547119
    7. '   ' → logprob: -5.844503879547119
    8. '(lambda' → logprob: -5.969503879547119
    9. '(
' → logprob: -6.469503879547119
    10. ' ' → logprob: -6.719503879547119

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3947596549987793
    2. '=' → logprob: -1.1447596549987793
    3. '[' → logprob: -4.894759654998779
    4. '=[' → logprob: -8.769760131835938
    5. ' ' → logprob: -9.644760131835938
    6. ' [' → logprob: -10.144760131835938
    7. 'vec' → logprob: -10.894760131835938
    8. ' =[' → logprob: -11.019760131835938
    9. '=[]' → logprob: -11.144760131835938
    10. ',' → logprob: -11.394760131835938

Token 88: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03968454524874687
    2. ' [' → logprob: -3.289684534072876
    3. 'vec' → logprob: -6.539684772491455
    4. ' vec' → logprob: -9.039684295654297
    5. '[[' → logprob: -10.789684295654297
    6. 'lambda' → logprob: -11.414684295654297
    7. 'A' → logprob: -11.664684295654297
    8. ' ' → logprob: -12.164684295654297
    9. '(vec' → logprob: -12.414684295654297
    10. '0' → logprob: -12.789684295654297

Token 89: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.06266245245933533
    2. '[' → logprob: -2.812662363052368
    3. '(vec' → logprob: -7.937662601470947
    4. ' vec' → logprob: -8.437662124633789
    5. ' [' → logprob: -9.812662124633789
    6. '	vec' → logprob: -11.062662124633789
    7. '0' → logprob: -11.187662124633789
    8. '(' → logprob: -11.312662124633789
    9. '([' → logprob: -12.562662124633789
    10. 've' → logprob: -13.062662124633789

Token 90: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0006308287265710533
    2. '[' → logprob: -7.625630855560303
    3. '(' → logprob: -9.000630378723145
    4. '(([' → logprob: -12.250630378723145
    5. '<|end|>' → logprob: -12.500630378723145
    6. 'A' → logprob: -12.750630378723145
    7. '([]' → logprob: -13.250630378723145
    8. '```' → logprob: -13.625630378723145
    9. '([],' → logprob: -13.875630378723145
    10. ' ([' → logprob: -13.875630378723145

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05506417900323868
    2. '[' → logprob: -2.9300642013549805
    3. ' ' → logprob: -9.93006420135498
    4. ' [' → logprob: -10.05506420135498
    5. 'A' → logprob: -10.68006420135498
    6. '1' → logprob: -11.55506420135498
    7. '[]' → logprob: -11.74256420135498
    8. ')' → logprob: -11.80506420135498
    9. '(' → logprob: -11.99256420135498
    10. ']' → logprob: -12.43006420135498

Token 92: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.017810048535466194
    2. '],[' → logprob: -4.517809867858887
    3. '([' → logprob: -5.892809867858887
    4. '[' → logprob: -6.017809867858887
    5. ',' → logprob: -6.892809867858887
    6. ']' → logprob: -8.517809867858887
    7. '(' → logprob: -9.767809867858887
    8. ' ],' → logprob: -9.892809867858887
    9. '),' → logprob: -10.267809867858887
    10. '+' → logprob: -10.892809867858887

Token 93: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0028536133468151093
    2. ' N' → logprob: -5.8778533935546875
    3. '1' → logprob: -10.752853393554688
    4. '0' → logprob: -12.002853393554688
    5. ' ' → logprob: -12.502853393554688
    6. '2' → logprob: -12.627853393554688
    7. 'M' → logprob: -13.002853393554688
    8. '(N' → logprob: -13.252853393554688
    9. 'n' → logprob: -13.502853393554688
    10. ')' → logprob: -13.627853393554688

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000786398712079972
    2. ')' → logprob: -7.375786304473877
    3. ')]' → logprob: -9.625786781311035
    4. ' +' → logprob: -9.875786781311035
    5. '-' → logprob: -11.500786781311035
    6. '```' → logprob: -12.375786781311035
    7. ')])' → logprob: -12.500786781311035
    8. '),' → logprob: -12.563286781311035
    9. '1' → logprob: -12.938286781311035
    10. '   ' → logprob: -13.188286781311035

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022237090161070228
    2. '0' → logprob: -9.000222206115723
    3. '2' → logprob: -10.250222206115723
    4. '+' → logprob: -10.500222206115723
    5. ' ' → logprob: -11.375222206115723
    6. '```' → logprob: -11.750222206115723
    7. ')' → logprob: -12.812722206115723
    8. '(' → logprob: -13.062722206115723
    9. 'N' → logprob: -13.375222206115723
    10. '`' → logprob: -13.812722206115723

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00129785411991179
    2. '),' → logprob: -7.751297950744629
    3. ',' → logprob: -8.001297950744629
    4. '+' → logprob: -8.626297950744629
    5. ')[' → logprob: -8.876297950744629
    6. '[' → logprob: -10.001297950744629
    7. 'for' → logprob: -10.126297950744629
    8. ' for' → logprob: -10.501297950744629
    9. ')+' → logprob: -10.501297950744629
    10. '+)' → logprob: -11.251297950744629

Token 97: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47801440954208374
    2. 'for' → logprob: -1.1030144691467285
    3. ')' → logprob: -3.1030144691467285
    4. '[' → logprob: -6.1030144691467285
    5. ',' → logprob: -7.7280144691467285
    6. '[N' → logprob: -8.60301399230957
    7. '+' → logprob: -8.72801399230957
    8. ' ' → logprob: -9.35301399230957
    9. ' [' → logprob: -11.47801399230957
    10. '),' → logprob: -11.60301399230957

Token 98: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22559452056884766
    2. ' _' → logprob: -1.6005945205688477
    3. ' in' → logprob: -9.225594520568848
    4. ' range' → logprob: -9.850594520568848
    5. 'in' → logprob: -11.600594520568848
    6. 'range' → logprob: -11.850594520568848
    7. ' ' → logprob: -12.600594520568848
    8. '_in' → logprob: -12.850594520568848
    9. ' i' → logprob: -13.850594520568848
    10. '_range' → logprob: -13.975594520568848

Token 99: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016797883436083794
    2. ' range' → logprob: -4.26679801940918
    3. 'in' → logprob: -6.39179801940918
    4. ' in' → logprob: -7.89179801940918
    5. '_' → logprob: -8.01679801940918
    6. '(range' → logprob: -9.14179801940918
    7. '_range' → logprob: -10.14179801940918
    8. '(' → logprob: -10.39179801940918
    9. '1' → logprob: -10.89179801940918
    10. 'N' → logprob: -11.51679801940918

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7492408752441406
    2. 'range' → logprob: -0.9992408752441406
    3. '(N' → logprob: -1.9992408752441406
    4. 'N' → logprob: -3.9992408752441406
    5. '1' → logprob: -5.874240875244141
    6. ' N' → logprob: -6.874240875244141
    7. ' (' → logprob: -7.249240875244141
    8. '2' → logprob: -8.24924087524414
    9. '0' → logprob: -8.49924087524414
    10. '[N' → logprob: -9.49924087524414

Token 101: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003909795545041561
    2. ' (' → logprob: -6.003909587860107
    3. '(' → logprob: -7.503909587860107
    4. 'range' → logprob: -7.878909587860107
    5. 'N' → logprob: -8.878910064697266
    6. '1' → logprob: -9.253910064697266
    7. ' range' → logprob: -9.253910064697266
    8. '[N' → logprob: -9.753910064697266
    9. ')' → logprob: -10.503910064697266
    10. '0' → logprob: -11.253910064697266

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025322602596133947
    2. ')]' → logprob: -6.127532482147217
    3. ')' → logprob: -8.627532005310059
    4. ')])' → logprob: -9.127532005310059
    5. ' +' → logprob: -11.127532005310059
    6. '1' → logprob: -11.377532005310059
    7. ')+' → logprob: -11.877532005310059
    8. ')][' → logprob: -12.752532005310059
    9. '-' → logprob: -13.002532005310059
    10. '])]' → logprob: -13.127532005310059

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001696902181720361
    2. '+' → logprob: -9.50016975402832
    3. '2' → logprob: -9.75016975402832
    4. ' ' → logprob: -10.75016975402832
    5. '```' → logprob: -12.25016975402832
    6. '0' → logprob: -12.75016975402832
    7. ')' → logprob: -13.12516975402832
    8. '   ' → logprob: -14.06266975402832
    9. '-' → logprob: -14.75016975402832
    10. '`)' → logprob: -15.18766975402832

Token 104: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47753408551216125
    2. ')]' → logprob: -0.9775340557098389
    3. ')])' → logprob: -6.352534294128418
    4. '])' → logprob: -6.977534294128418
    5. '))' → logprob: -7.352534294128418
    6. ']' → logprob: -9.477534294128418
    7. '])]' → logprob: -10.477534294128418
    8. ')
' → logprob: -11.977534294128418
    9. ' )' → logprob: -12.477534294128418
    10. ')],' → logprob: -12.852534294128418

Token 105: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28990626335144043
    2. ')' → logprob: -1.7899062633514404
    3. '[' → logprob: -2.7899062633514404
    4. ',' → logprob: -4.7899065017700195
    5. ']' → logprob: -5.2899065017700195
    6. '(lambda' → logprob: -5.5399065017700195
    7. 'def' → logprob: -7.2899065017700195
    8. '(
' → logprob: -7.2899065017700195
    9. ' ' → logprob: -7.5399065017700195
    10. '+' → logprob: -7.6649065017700195

Token 106: ' p' (ID: 275)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.4177459478378296
    2. ' ' → logprob: -1.7927459478378296
    3. ' calculate' → logprob: -2.167746067047119
    4. ' compute' → logprob: -2.167746067047119
    5. ' dfs' → logprob: -2.292746067047119
    6. ' solve' → logprob: -3.042746067047119
    7. ' _' → logprob: -3.667746067047119
    8. ' multiply' → logprob: -3.792746067047119
    9. ' f' → logprob: -3.917746067047119
    10. ' combine' → logprob: -3.917746067047119

Token 107: 'atern' (ID: 23633)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5092291831970215
    2. 'refix' → logprob: -1.5092291831970215
    3. 'ro' → logprob: -1.7592291831970215
    4. 'rod' → logprob: -2.2592291831970215
    5. 'art' → logprob: -3.1342291831970215
    6. 'ow' → logprob: -3.3842291831970215
    7. 'rocess' → logprob: -3.8842291831970215
    8. 'lay' → logprob: -3.8842291831970215
    9. 're' → logprob: -4.0092291831970215
    10. 'lus' → logprob: -4.1342291831970215

Token 108: 'ize' (ID: 750)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23545704782009125
    2. '(' → logprob: -2.235456943511963
    3. 'e' → logprob: -2.735456943511963
    4. '(a' → logprob: -3.485456943511963
    5. 'o' → logprob: -6.110456943511963
    6. 't' → logprob: -6.485456943511963
    7. '_' → logprob: -7.235456943511963
    8. '(e' → logprob: -7.360456943511963
    9. 'd' → logprob: -7.735456943511963
    10. '(_:' → logprob: -7.860456943511963

Token 109: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033043816220015287
    2. '_' → logprob: -5.878304481506348
    3. '(_' → logprob: -9.003304481506348
    4. '(a' → logprob: -9.753304481506348
    5. '(_:' → logprob: -10.003304481506348
    6. '():' → logprob: -10.503304481506348
    7. '(p' → logprob: -10.878304481506348
    8. ' (' → logprob: -11.003304481506348
    9. '("("' → logprob: -11.253304481506348
    10. '<|end|>' → logprob: -11.378304481506348

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014677559956908226
    2. '):' → logprob: -4.26467752456665
    3. ' ,' → logprob: -7.88967752456665
    4. ')' → logprob: -9.764678001403809
    5. '):
' → logprob: -10.764678001403809
    6. '   ' → logprob: -12.014678001403809
    7. ',i' → logprob: -12.264678001403809
    8. '_,' → logprob: -12.264678001403809
    9. ',n' → logprob: -12.264678001403809
    10. ',p' → logprob: -12.264678001403809

Token 111: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020278269425034523
    2. ' j' → logprob: -4.645278453826904
    3. 'A' → logprob: -6.145278453826904
    4. 'n' → logprob: -6.770278453826904
    5. ')' → logprob: -6.770278453826904
    6. 'a' → logprob: -7.145278453826904
    7. 'arr' → logprob: -7.145278453826904
    8. 'x' → logprob: -7.520278453826904
    9. 'l' → logprob: -7.645278453826904
    10. 's' → logprob: -8.020277976989746

Token 112: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12729795277118683
    2. ',' → logprob: -2.127297878265381
    3. ')' → logprob: -8.252298355102539
    4. '):
' → logprob: -10.127298355102539
    5. ':' → logprob: -10.377298355102539
    6. ' ,' → logprob: -11.752298355102539
    7. ' ):' → logprob: -12.002298355102539
    8. '   ' → logprob: -12.252298355102539
    9. ' ' → logprob: -13.502298355102539
    10. ',k' → logprob: -13.752298355102539

Token 113: ' arr' (ID: 1724)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.34026122093200684
    2. ' k' → logprob: -2.340261220932007
    3. 'n' → logprob: -3.340261220932007
    4. 'A' → logprob: -3.840261220932007
    5. 'l' → logprob: -4.090261459350586
    6. 'arr' → logprob: -4.340261459350586
    7. 'a' → logprob: -4.465261459350586
    8. ' A' → logprob: -4.840261459350586
    9. ' n' → logprob: -4.840261459350586
    10. ' arr' → logprob: -5.215261459350586

Token 114: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003072187304496765
    2. ',' → logprob: -6.253072261810303
    3. ')' → logprob: -6.878072261810303
    4. '):
' → logprob: -9.878071784973145
    5. ':' → logprob: -10.628071784973145
    6. ' ):' → logprob: -11.003071784973145
    7. '[]):' → logprob: -13.003071784973145
    8. ')):' → logprob: -13.378071784973145
    9. 'def' → logprob: -13.503071784973145
    10. '=' → logprob: -13.503071784973145

Token 115: ' a' (ID: 261)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.5395147800445557
    2. ' k' → logprob: -1.6645147800445557
    3. 'k' → logprob: -1.7895147800445557
    4. 'n' → logprob: -2.0395147800445557
    5. ' val' → logprob: -3.1645147800445557
    6. ' res' → logprob: -3.6645147800445557
    7. ' A' → logprob: -3.9145147800445557
    8. 'A' → logprob: -4.539514541625977
    9. ' arr' → logprob: -4.539514541625977
    10. ' func' → logprob: -4.664514541625977

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28751078248023987
    2. ',' → logprob: -2.287510871887207
    3. '):
' → logprob: -2.662510871887207
    4. 'rray' → logprob: -3.662510871887207
    5. 'r' → logprob: -3.787510871887207
    6. 'rr' → logprob: -4.162510871887207
    7. 's' → logprob: -5.287510871887207
    8. 'rg' → logprob: -6.662510871887207
    9. 'd' → logprob: -6.787510871887207
    10. 'ss' → logprob: -6.912510871887207

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23925772309303284
    2. ':' → logprob: -1.6142576932907104
    3. ' ' → logprob: -5.6142578125
    4. '       ' → logprob: -6.6142578125
    5. '(' → logprob: -6.7392578125
    6. ' :' → logprob: -6.7392578125
    7. '[' → logprob: -7.1142578125
    8. '):' → logprob: -7.1142578125
    9. '    ' → logprob: -7.2392578125
    10. ')' → logprob: -7.6142578125

Token 118: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5259802937507629
    2. ' if' → logprob: -2.275980234146118
    3. ':' → logprob: -2.525980234146118
    4. '[' → logprob: -2.650980234146118
    5. 'if' → logprob: -3.025980234146118
    6. ' for' → logprob: -3.775980234146118
    7. ' =' → logprob: -4.400980472564697
    8. ' ' → logprob: -4.400980472564697
    9. ' :' → logprob: -4.775980472564697
    10. 'for' → logprob: -4.775980472564697

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008823268115520477
    2. '[j' → logprob: -4.758823394775391
    3. '.append' → logprob: -9.63382339477539
    4. '=' → logprob: -10.25882339477539
    5. '[' → logprob: -10.75882339477539
    6. '[a' → logprob: -10.88382339477539
    7. '][' → logprob: -11.13382339477539
    8. '+=' → logprob: -11.63382339477539
    9. '[I' → logprob: -12.63382339477539
    10. 'i' → logprob: -12.75882339477539

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015521125867962837
    2. ']' → logprob: -4.265521049499512
    3. '[j' → logprob: -7.640521049499512
    4. ' ][' → logprob: -7.765521049499512
    5. ']+=' → logprob: -8.890521049499512
    6. '+' → logprob: -9.140521049499512
    7. ',j' → logprob: -10.640521049499512
    8. '])' → logprob: -10.640521049499512
    9. '-' → logprob: -10.640521049499512
    10. '].' → logprob: -10.890521049499512

Token 121: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.383526149671525e-05
    2. 'a' → logprob: -11.000053405761719
    3. ']' → logprob: -11.125053405761719
    4. '0' → logprob: -11.625053405761719
    5. 'i' → logprob: -12.375053405761719
    6. '][' → logprob: -12.750053405761719
    7. ' j' → logprob: -13.750053405761719
    8. '
' → logprob: -13.875053405761719
    9. '	j' → logprob: -14.125053405761719
    10. '   ' → logprob: -14.625053405761719

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029235780239105225
    2. '].' → logprob: -3.65423583984375
    3. ']+=' → logprob: -6.15423583984375
    4. ']+' → logprob: -8.15423583984375
    5. ' ]' → logprob: -8.65423583984375
    6. '][' → logprob: -9.27923583984375
    7. ']=' → logprob: -9.27923583984375
    8. '+' → logprob: -9.65423583984375
    9. ' ].' → logprob: -10.40423583984375
    10. '-' → logprob: -11.40423583984375

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3892906606197357
    2. '+=' → logprob: -1.639290690422058
    3. ' +=' → logprob: -2.5142905712127686
    4. '+' → logprob: -3.3892905712127686
    5. ' =' → logprob: -4.639290809631348
    6. '[' → logprob: -5.889290809631348
    7. '.append' → logprob: -7.139290809631348
    8. ' +' → logprob: -8.889290809631348
    9. ' ' → logprob: -10.139290809631348
    10. '.' → logprob: -10.389290809631348

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02303069271147251
    2. 'arr' → logprob: -4.273030757904053
    3. '1' → logprob: -5.023030757904053
    4. '(a' → logprob: -7.398030757904053
    5. ' a' → logprob: -7.648030757904053
    6. '[' → logprob: -8.023030281066895
    7. '[a' → logprob: -8.023030281066895
    8. '0' → logprob: -9.023030281066895
    9. '[]' → logprob: -10.023030281066895
    10. '(' → logprob: -10.023030281066895

Token 125: '[j' (ID: 7895)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05989544093608856
    2. '])' → logprob: -3.4348955154418945
    3. '[j' → logprob: -4.1848955154418945
    4. ']+' → logprob: -5.0598955154418945
    5. '-' → logprob: -6.0598955154418945
    6. '[' → logprob: -6.6848955154418945
    7. ')' → logprob: -8.184895515441895
    8. '[i' → logprob: -9.059895515441895
    9. '][' → logprob: -9.559895515441895
    10. '+' → logprob: -10.309895515441895

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.125123977661133
    3. ']' → logprob: -12.750123977661133
    4. '```' → logprob: -13.000123977661133
    5. '0' → logprob: -13.812623977661133
    6. '2' → logprob: -13.937623977661133
    7. 'a' → logprob: -14.000123977661133
    8. '   ' → logprob: -14.062623977661133
    9. '-' → logprob: -14.312623977661133
    10. '...' → logprob: -14.437623977661133

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.042219530791044235
    2. ']+' → logprob: -3.292219638824463
    3. '])' → logprob: -5.917219638824463
    4. ')' → logprob: -7.292219638824463
    5. '[' → logprob: -7.792219638824463
    6. ' ]' → logprob: -9.292219161987305
    7. '+' → logprob: -9.667219161987305
    8. '[j' → logprob: -10.042219161987305
    9. '-' → logprob: -10.417219161987305
    10. '][' → logprob: -10.542219161987305

Token 129: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.34859082102775574
    2. 'j' → logprob: -1.2235908508300781
    3. ' ' → logprob: -9.848590850830078
    4. '0' → logprob: -10.223590850830078
    5. ' n' → logprob: -11.473590850830078
    6. '1' → logprob: -11.473590850830078
    7. 'n' → logprob: -11.848590850830078
    8. '	j' → logprob: -11.848590850830078
    9. ' len' → logprob: -12.598590850830078
    10. ' a' → logprob: -12.723590850830078

Token 131: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1337567567825317
    2. '>=' → logprob: -1.2587567567825317
    3. ' >' → logprob: -1.7587567567825317
    4. ' >=' → logprob: -1.8837567567825317
    5. '==' → logprob: -3.008756637573242
    6. ' ==' → logprob: -4.633756637573242
    7. '<=' → logprob: -5.508756637573242
    8. ' ' → logprob: -5.508756637573242
    9. ' <=' → logprob: -6.508756637573242
    10. '-' → logprob: -7.883756637573242

Token 132: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2195952832698822
    2. 'len' → logprob: -1.8445953130722046
    3. 'N' → logprob: -3.344595193862915
    4. ' len' → logprob: -7.094595432281494
    5. '=len' → logprob: -7.219595432281494
    6. '=' → logprob: -7.344595432281494
    7. ' j' → logprob: -7.469595432281494
    8. '1' → logprob: -7.844595432281494
    9. 'n' → logprob: -7.969595432281494
    10. ' N' → logprob: -9.594594955444336

Token 133: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6932573318481445
    2. 'else' → logprob: -0.6932573318481445
    3. '-' → logprob: -9.443257331848145
    4. '	else' → logprob: -11.693257331848145
    5. '+' → logprob: -12.068257331848145
    6. '[]' → logprob: -12.193257331848145
    7. ' ' → logprob: -12.568257331848145
    8. ' and' → logprob: -13.693257331848145
    9. 'and' → logprob: -13.818257331848145
    10. '==' → logprob: -14.318257331848145

Token 134: ' (' (ID: 350)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.1704680323600769
    2. ' arr' → logprob: -2.4204680919647217
    3. '0' → logprob: -3.1704680919647217
    4. 'a' → logprob: -4.045467853546143
    5. ' ' → logprob: -5.545467853546143
    6. ' a' → logprob: -6.170467853546143
    7. 'i' → logprob: -7.295467853546143
    8. ' i' → logprob: -7.545467853546143
    9. '	arr' → logprob: -8.2954683303833
    10. 'None' → logprob: -8.4204683303833

Token 135: 'a' (ID: 64)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.24931560456752777
    2. ' arr' → logprob: -1.749315619468689
    3. '0' → logprob: -3.8743155002593994
    4. 'a' → logprob: -4.1243157386779785
    5. ' ' → logprob: -5.7493157386779785
    6. ' a' → logprob: -5.7493157386779785
    7. 'i' → logprob: -6.8743157386779785
    8. ' i' → logprob: -7.2493157386779785
    9. '	arr' → logprob: -7.8743157386779785
    10. '1' → logprob: -8.37431526184082

Token 136: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14632898569107056
    2. '[j' → logprob: -2.021328926086426
    3. 'i' → logprob: -6.146328926086426
    4. 'j' → logprob: -6.771328926086426
    5. ')' → logprob: -9.271328926086426
    6. '[' → logprob: -9.521328926086426
    7. '<|end|>' → logprob: -10.396328926086426
    8. '[I' → logprob: -11.521328926086426
    9. ')[' → logprob: -11.708828926086426
    10. ' i' → logprob: -11.771328926086426

Token 137: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004785276483744383
    2. ']' → logprob: -5.504785060882568
    3. 'if' → logprob: -8.629785537719727
    4. '])' → logprob: -8.879785537719727
    5. ' -' → logprob: -9.004785537719727
    6. '[i' → logprob: -9.504785537719727
    7. ']-' → logprob: -9.629785537719727
    8. '1' → logprob: -10.379785537719727
    9. '[j' → logprob: -10.754785537719727
    10. 'i' → logprob: -11.004785537719727

Token 138: ' if' (ID: 538)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6145883798599243
    2. ' if' → logprob: -1.6145883798599243
    3. 'if' → logprob: -1.7395883798599243
    4. '[i' → logprob: -2.9895882606506348
    5. '[' → logprob: -3.9895882606506348
    6. '-' → logprob: -5.489588260650635
    7. '+' → logprob: -5.489588260650635
    8. ')' → logprob: -5.739588260650635
    9. ' +' → logprob: -6.614588260650635
    10. ')[' → logprob: -7.489588260650635

Token 139: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5385484099388123
    2. 'j' → logprob: -1.413548469543457
    3. ' i' → logprob: -2.038548469543457
    4. ' j' → logprob: -3.163548469543457
    5. ' ' → logprob: -8.538548469543457
    6. '   ' → logprob: -8.538548469543457
    7. '0' → logprob: -9.163548469543457
    8. '  ' → logprob: -10.913548469543457
    9. ' ' → logprob: -10.913548469543457
    10. 'a' → logprob: -11.038548469543457

Token 140: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.745623767375946
    2. '>=' → logprob: -1.3706238269805908
    3. ' >' → logprob: -2.245623826980591
    4. ' >=' → logprob: -2.245623826980591
    5. '==' → logprob: -2.995623826980591
    6. ' ==' → logprob: -4.995623588562012
    7. '<=' → logprob: -6.245623588562012
    8. ' <=' → logprob: -7.370623588562012
    9. ' <' → logprob: -8.745623588562012
    10. ' ' → logprob: -8.870623588562012

Token 141: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07028917968273163
    2. ' j' → logprob: -2.695289134979248
    3. 'i' → logprob: -8.070289611816406
    4. ' i' → logprob: -10.195289611816406
    5. ' ' → logprob: -13.695289611816406
    6. '0' → logprob: -14.445289611816406
    7. '	j' → logprob: -14.695289611816406
    8. '<|end|>' → logprob: -14.820289611816406
    9. ' ' → logprob: -16.570289611816406
    10. '_j' → logprob: -16.945289611816406

Token 142: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.01698577031493187
    2. 'else' → logprob: -4.516985893249512
    3. ')' → logprob: -5.141985893249512
    4. ' )' → logprob: -9.766985893249512
    5. ' ' → logprob: -12.266985893249512
    6. '	else' → logprob: -12.516985893249512
    7. '<|end|>' → logprob: -13.141985893249512
    8. '),' → logprob: -13.391985893249512
    9. '-' → logprob: -14.391985893249512
    10. ' ' → logprob: -14.641985893249512

Token 143: ' arr' (ID: 1724)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49304503202438354
    2. ' ' → logprob: -1.3680450916290283
    3. 'a' → logprob: -2.6180450916290283
    4. ' a' → logprob: -2.9930450916290283
    5. ' None' → logprob: -5.493044853210449
    6. 'None' → logprob: -5.493044853210449
    7. 'arr' → logprob: -6.868044853210449
    8. ' arr' → logprob: -7.868044853210449
    9. '1' → logprob: -7.993044853210449
    10. 'A' → logprob: -8.24304485321045

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015181333583313972
    2. '[j' → logprob: -9.500151634216309
    3. '<|end|>' → logprob: -10.125151634216309
    4. '[' → logprob: -10.500151634216309
    5. 'i' → logprob: -12.375151634216309
    6. '[I' → logprob: -12.875151634216309
    7. '<|end|>' → logprob: -14.625151634216309
    8. ')' → logprob: -14.750151634216309
    9. '[
' → logprob: -15.500151634216309
    10. '][' → logprob: -15.625151634216309

Token 145: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2127448171377182
    2. '[j' → logprob: -2.08774471282959
    3. '[i' → logprob: -2.71274471282959
    4. '[' → logprob: -7.21274471282959
    5. ']' → logprob: -8.33774471282959
    6. ' ][' → logprob: -9.58774471282959
    7. 'i' → logprob: -10.33774471282959
    8. 'j' → logprob: -10.46274471282959
    9. ')[' → logprob: -10.71274471282959
    10. '])' → logprob: -10.96274471282959

Token 146: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020650619640946388
    2. 'i' → logprob: -3.895650625228882
    3. ']' → logprob: -9.520650863647461
    4. ' j' → logprob: -11.645650863647461
    5. ')' → logprob: -11.770650863647461
    6. '])' → logprob: -11.895650863647461
    7. '   ' → logprob: -13.520650863647461
    8. '<|end|>' → logprob: -13.645650863647461
    9. ' i' → logprob: -13.895650863647461
    10. '[j' → logprob: -14.020650863647461

Token 147: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6545394062995911
    2. '])' → logprob: -0.7795394062995911
    3. '-' → logprob: -4.529539585113525
    4. '+' → logprob: -5.279539585113525
    5. ']' → logprob: -6.154539585113525
    6. '<|end|>' → logprob: -6.404539585113525
    7. ' )' → logprob: -7.404539585113525
    8. ')])' → logprob: -8.654539108276367
    9. '0' → logprob: -8.779539108276367
    10. ')return' → logprob: -8.904539108276367

Token 148: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' arr' (ID: 1724)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009176989085972309
    2. ' _' → logprob: -5.134177207946777
    3. 'i' → logprob: -6.009177207946777
    4. '_' → logprob: -7.634177207946777
    5. ' ' → logprob: -8.384177207946777
    6. ' ' → logprob: -10.134177207946777
    7. '_i' → logprob: -11.134177207946777
    8. '	i' → logprob: -12.259177207946777
    9. ' j' → logprob: -13.321677207946777
    10. ' ‌' → logprob: -13.384177207946777

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0628688335418701
    2. 'in' → logprob: -1.0628688335418701
    3. ' in' → logprob: -1.1878688335418701
    4. ' ,' → logprob: -5.687869071960449
    5. ' ' → logprob: -8.18786907196045
    6. '	in' → logprob: -8.56286907196045
    7. '_' → logprob: -9.81286907196045
    8. ',in' → logprob: -9.81286907196045
    9. 'i' → logprob: -10.31286907196045
    10. '_in' → logprob: -10.68786907196045

Token 155: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34744998812675476
    2. ' a' → logprob: -1.9724500179290771
    3. ' line' → logprob: -2.222450017929077
    4. 'line' → logprob: -3.222450017929077
    5. ' row' → logprob: -6.847449779510498
    6. 'row' → logprob: -6.847449779510498
    7. ' val' → logprob: -7.597449779510498
    8. 'val' → logprob: -7.597449779510498
    9. '_a' → logprob: -7.597449779510498
    10. 'arr' → logprob: -7.847449779510498

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5829275846481323
    2. 'in' → logprob: -1.2079275846481323
    3. ',' → logprob: -1.9579275846481323
    4. ' ,' → logprob: -7.082927703857422
    5. 'n' → logprob: -7.457927703857422
    6. ',n' → logprob: -8.832927703857422
    7. 's' → logprob: -9.707927703857422
    8. '<|end|>' → logprob: -10.332927703857422
    9. ',in' → logprob: -10.582927703857422
    10. ' ' → logprob: -10.707927703857422

Token 157: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.19576111435890198
    2. 'range' → logprob: -2.570761203765869
    3. 'product' → logprob: -2.695761203765869
    4. ' enumerate' → logprob: -3.445761203765869
    5. ' range' → logprob: -6.820761203765869
    6. 'chain' → logprob: -8.070760726928711
    7. ' product' → logprob: -8.320760726928711
    8. 'com' → logprob: -8.820760726928711
    9. '```' → logprob: -10.945760726928711
    10. 'list' → logprob: -11.070760726928711

Token 158: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.21535885334014893
    2. '(product' → logprob: -1.715358853340149
    3. '(A' → logprob: -4.965358734130859
    4. '(chain' → logprob: -5.965358734130859
    5. 'range' → logprob: -6.340358734130859
    6. '(' → logprob: -6.715358734130859
    7. 'product' → logprob: -7.590358734130859
    8. '(list' → logprob: -9.09035873413086
    9. '(com' → logprob: -9.09035873413086
    10. '(en' → logprob: -9.71535873413086

Token 159: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12719644606113434
    2. '(' → logprob: -2.1271965503692627
    3. '(len' → logprob: -8.877196311950684
    4. '(n' → logprob: -9.377196311950684
    5. '(i' → logprob: -11.377196311950684
    6. '(idx' → logprob: -11.877196311950684
    7. '(A' → logprob: -12.252196311950684
    8. '(-' → logprob: -12.877196311950684
    9. ')' → logprob: -13.127196311950684
    10. '(M' → logprob: -13.502196311950684

Token 160: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046362750232219696
    2. ')):' → logprob: -3.1713626384735107
    3. '):
' → logprob: -6.42136287689209
    4. '+' → logprob: -7.92136287689209
    5. '-' → logprob: -7.92136287689209
    6. ' ):' → logprob: -8.17136287689209
    7. '**' → logprob: -8.79636287689209
    8. '*N' → logprob: -9.04636287689209
    9. ')' → logprob: -9.29636287689209
    10. '))' → logprob: -9.42136287689209

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405094265937805
    2. ':' → logprob: -1.0155093669891357
    3. '<|end|>' → logprob: -3.0155093669891357
    4. ' for' → logprob: -3.2655093669891357
    5. ':
' → logprob: -5.265509605407715
    6. ',' → logprob: -5.390509605407715
    7. 'for' → logprob: -5.515509605407715
    8. ' :' → logprob: -5.765509605407715
    9. '<|end|>' → logprob: -6.390509605407715
    10. '    
' → logprob: -6.765509605407715

Token 162: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46286311745643616
    2. ' for' → logprob: -1.0878630876541138
    3. '   ' → logprob: -4.337862968444824
    4. 'a' (adapté à ' a') → logprob: -4.962862968444824
    5. 'A' → logprob: -5.337862968444824
    6. ' a' → logprob: -5.962862968444824
    7. ' A' → logprob: -6.712862968444824
    8. ' line' → logprob: -6.837862968444824
    9. ' row' → logprob: -7.087862968444824
    10. 'line' → logprob: -7.462862968444824

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20209205150604248
    2. '=' → logprob: -1.7020920515060425
    3. '_input' → logprob: -8.202092170715332
    4. '=input' → logprob: -9.577092170715332
    5. ' =[' → logprob: -10.077092170715332
    6. '=[' → logprob: -10.327092170715332
    7. ' ' → logprob: -10.327092170715332
    8. '_' → logprob: -10.327092170715332
    9. 'input' → logprob: -10.452092170715332
    10. '=[]' → logprob: -10.702092170715332

Token 164: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11579229682683945
    2. '[' → logprob: -3.2407922744750977
    3. '[list' → logprob: -3.3657922744750977
    4. '[A' → logprob: -4.365792274475098
    5. '[p' → logprob: -4.865792274475098
    6. ' list' → logprob: -5.240792274475098
    7. 'A' → logprob: -5.865792274475098
    8. '[i' → logprob: -6.365792274475098
    9. '[input' → logprob: -6.740792274475098
    10. '[int' → logprob: -6.865792274475098

Token 165: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001535216229967773
    2. '(range' → logprob: -7.001535415649414
    3. '(product' → logprob: -7.626535415649414
    4. '(' → logprob: -9.501535415649414
    5. '(input' → logprob: -10.376535415649414
    6. 'map' → logprob: -11.251535415649414
    7. '(int' → logprob: -11.501535415649414
    8. '()' → logprob: -12.376535415649414
    9. '(filter' → logprob: -14.501535415649414
    10. '(
' → logprob: -14.876535415649414

Token 166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009542173356749117
    2. 'int' → logprob: -7.0009541511535645
    3. '(' → logprob: -10.625954627990723
    4. ',int' → logprob: -12.000954627990723
    5. '<int' → logprob: -12.625954627990723
    6. '(lambda' → logprob: -12.750954627990723
    7. '[int' → logprob: -13.000954627990723
    8. '=int' → logprob: -13.375954627990723
    9. '(
' → logprob: -14.250954627990723
    10. ' int' → logprob: -14.250954627990723

Token 167: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.063026063144207
    2. ',input' → logprob: -3.188025951385498
    3. '(' → logprob: -4.063025951385498
    4. ',' → logprob: -6.563025951385498
    5. 'input' → logprob: -6.938025951385498
    6. ' input' → logprob: -9.563026428222656
    7. ')' → logprob: -9.688026428222656
    8. ')(' → logprob: -10.313026428222656
    9. '(
' → logprob: -10.688026428222656
    10. ' (' → logprob: -11.188026428222656

Token 168: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009782418608665466
    2. ' input' → logprob: -4.634782314300537
    3. ',input' → logprob: -10.759782791137695
    4. '(input' → logprob: -12.509782791137695
    5. '   ' → logprob: -14.509782791137695
    6. '	input' → logprob: -15.009782791137695
    7. ')' → logprob: -15.384782791137695
    8. '=input' → logprob: -15.884782791137695
    9. ' ' → logprob: -16.009782791137695
    10. '_input' → logprob: -16.509782791137695

Token 169: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -12.125006675720215
    3. '()))' → logprob: -14.875006675720215
    4. ' ().' → logprob: -15.875006675720215
    5. ')' → logprob: -16.2500057220459
    6. '()));' → logprob: -16.6250057220459
    7. '(' → logprob: -17.5000057220459
    8. '())' → logprob: -17.6250057220459
    9. '())))' → logprob: -17.6250057220459
    10. '))' → logprob: -18.1250057220459

Token 170: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009137284359894693
    2. 'strip' → logprob: -7.000913619995117
    3. 'rstrip' → logprob: -13.625913619995117
    4. ' split' → logprob: -14.500913619995117
    5. '(split' → logprob: -14.750913619995117
    6. 'read' → logprob: -16.500913619995117
    7. 'str' → logprob: -17.625913619995117
    8. ')' → logprob: -18.250913619995117
    9. '().' → logprob: -18.500913619995117
    10. 'spl' → logprob: -19.125913619995117

Token 171: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02035314030945301
    2. '()' → logprob: -4.020353317260742
    3. '())' → logprob: -7.020353317260742
    4. '))' → logprob: -7.645353317260742
    5. '()))
' → logprob: -7.770353317260742
    6. '(' → logprob: -8.145353317260742
    7. '()));' → logprob: -10.145353317260742
    8. '('' → logprob: -10.895353317260742
    9. '())))' → logprob: -11.145353317260742
    10. '().' → logprob: -11.520353317260742

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1718052327632904
    2. ' for' → logprob: -2.0468051433563232
    3. 'for' → logprob: -3.7968051433563232
    4. '<|end|>' → logprob: -5.296805381774902
    5. '
' → logprob: -7.671805381774902
    6. ')' → logprob: -8.421805381774902
    7. '       ' → logprob: -9.171805381774902
    8. '    
' → logprob: -9.171805381774902
    9. ' ' → logprob: -9.796805381774902
    10. ',' → logprob: -9.921805381774902

Token 173: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5013095140457153
    2. 'for' → logprob: -1.0013095140457153
    3. '   ' → logprob: -3.751309394836426
    4. 'A' → logprob: -6.001309394836426
    5. ' A' → logprob: -7.876309394836426
    6. '[' → logprob: -9.501309394836426
    7. ' ' → logprob: -9.501309394836426
    8. '    
' → logprob: -9.626309394836426
    9. ' Al' → logprob: -9.751309394836426
    10. 'Al' → logprob: -10.251309394836426

Token 174: ' heavy' (ID: 12914)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16201534867286682
    2. ' for' → logprob: -1.9120153188705444
    3. '   ' → logprob: -6.787015438079834
    4. 'A' → logprob: -8.287014961242676
    5. 'Al' → logprob: -9.162014961242676
    6. ' Al' → logprob: -9.537014961242676
    7. 'arr' → logprob: -9.787014961242676
    8. ' A' → logprob: -10.162014961242676
    9. ' ' → logprob: -10.537014961242676
    10. ' arr' → logprob: -11.037014961242676

Token 175: ' use' (ID: 1199)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3006633222103119
    2. '   ' → logprob: -1.9256633520126343
    3. 'for' → logprob: -2.8006632328033447
    4. ')' → logprob: -3.8006632328033447
    5. '<|end|>' → logprob: -3.8006632328033447
    6. '    ' → logprob: -7.175663471221924
    7. ' A' → logprob: -7.175663471221924
    8. ',' → logprob: -7.300663471221924
    9. 'A' → logprob: -7.425663471221924
    10. ' ' → logprob: -7.800663471221924

Token 176: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8087575435638428
    2. '   ' → logprob: -1.6837575435638428
    3. 'of' → logprob: -1.9337575435638428
    4. '<|end|>' → logprob: -3.1837575435638428
    5. 'for' → logprob: -3.3087575435638428
    6. ' for' → logprob: -3.4337575435638428
    7. 'vec' → logprob: -3.5587575435638428
    8. 'A' → logprob: -3.9337575435638428
    9. 'a' → logprob: -4.933757781982422
    10. ')' → logprob: -4.933757781982422

Token 177: ' functools' (ID: 142636)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.711653470993042
    2. 'p' → logprob: -1.461653470993042
    3. 'product' → logprob: -3.086653470993042
    4. ' chain' → logprob: -3.336653470993042
    5. 'arr' → logprob: -3.461653470993042
    6. 'range' → logprob: -3.586653470993042
    7. 'com' → logprob: -3.711653470993042
    8. 'a' → logprob: -3.961653470993042
    9. 'acc' → logprob: -4.211653709411621
    10. 'list' → logprob: -4.336653709411621

Token 178: '.reduce' (ID: 49441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45118600130081177
    2. '   ' → logprob: -2.326185941696167
    3. ' for' → logprob: -2.451185941696167
    4. '):' → logprob: -3.201185941696167
    5. 'for' → logprob: -3.201185941696167
    6. ',' → logprob: -3.701185941696167
    7. '<|end|>' → logprob: -3.951185941696167
    8. '[' → logprob: -4.326186180114746
    9. ':' → logprob: -5.076186180114746
    10. '):
' → logprob: -5.951186180114746

Token 179: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1721862554550171
    2. ',' → logprob: -3.4221863746643066
    3. '   ' → logprob: -3.7971863746643066
    4. '<|end|>' → logprob: -3.7971863746643066
    5. ' for' → logprob: -4.547186374664307
    6. '[' → logprob: -4.672186374664307
    7. 'for' → logprob: -4.672186374664307
    8. 'a' → logprob: -5.172186374664307
    9. 'A' → logprob: -5.422186374664307
    10. ' )' → logprob: -5.672186374664307

Token 180: ' mimic' (ID: 107434)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.999738872051239
    2. 'p' → logprob: -1.3747389316558838
    3. 'chain' → logprob: -1.8747389316558838
    4. ' p' → logprob: -2.749738931655884
    5. 'reduce' → logprob: -3.624738931655884
    6. ' accumulate' → logprob: -3.874738931655884
    7. 'list' → logprob: -4.124738693237305
    8. 'vec' → logprob: -4.249738693237305
    9. 'combine' → logprob: -4.249738693237305
    10. 'lambda' → logprob: -4.374738693237305

Token 181: ' normal' (ID: 6078)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6275249719619751
    2. 'chain' → logprob: -1.627524971961975
    3. 'list' → logprob: -2.0025248527526855
    4. '(lambda' → logprob: -3.1275248527526855
    5. 'sum' → logprob: -4.0025248527526855
    6. 'acc' → logprob: -4.1275248527526855
    7. ' lambda' → logprob: -4.6275248527526855
    8. 'range' → logprob: -4.7525248527526855
    9. ' chain' → logprob: -5.0025248527526855
    10. 'a' → logprob: -5.0025248527526855

Token 182: ' loops' (ID: 57130)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0967938899993896
    2. 'acc' → logprob: -1.8467938899993896
    3. 'range' → logprob: -2.0967938899993896
    4. 'lambda' → logprob: -2.2217938899993896
    5. ' accumulate' → logprob: -2.4717938899993896
    6. 'list' → logprob: -3.2217938899993896
    7. 'map' → logprob: -3.5967938899993896
    8. ' lambda' → logprob: -3.9717938899993896
    9. ' sum' → logprob: -3.9717938899993896
    10. ' accumulation' → logprob: -4.096794128417969

Token 183: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32948365807533264
    2. ')' → logprob: -2.2044837474823
    3. ' for' → logprob: -2.5794837474823
    4. '<|end|>' → logprob: -3.3294837474823
    5. 'for' → logprob: -3.3294837474823
    6. '       ' → logprob: -5.079483509063721
    7. ',' → logprob: -5.329483509063721
    8. '[' → logprob: -6.454483509063721
    9. '
' → logprob: -6.829483509063721
    10. '    ' → logprob: -7.079483509063721

Token 184: ' unnecessary' (ID: 42963)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2908415794372559
    2. ')' → logprob: -1.4158415794372559
    3. 'for' → logprob: -1.9158415794372559
    4. 'vec' → logprob: -2.290841579437256
    5. '   ' → logprob: -2.915841579437256
    6. 'A' → logprob: -3.165841579437256
    7. '...' → logprob: -4.040841579437256
    8. '[' → logprob: -4.415841579437256
    9. ' A' → logprob: -4.665841579437256
    10. ' )' → logprob: -5.040841579437256

Token 185: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4261169731616974
    2. '   ' → logprob: -2.551116943359375
    3. '<|end|>' → logprob: -2.801116943359375
    4. ',' → logprob: -3.051116943359375
    5. ':' → logprob: -3.676116943359375
    6. '[' → logprob: -3.926116943359375
    7. '):' → logprob: -4.176116943359375
    8. ' ' → logprob: -4.176116943359375
    9. ']' → logprob: -4.176116943359375
    10. ' )' → logprob: -4.801116943359375

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7334403991699219
    2. '<|end|>' → logprob: -1.4834403991699219
    3. ')' → logprob: -1.7334403991699219
    4. ' for' → logprob: -2.858440399169922
    5. '[' → logprob: -4.483440399169922
    6. ',' → logprob: -4.858440399169922
    7. 'for' → logprob: -5.108440399169922
    8. ' ' → logprob: -5.983440399169922
    9. '    ' → logprob: -6.108440399169922
    10. '...' → logprob: -6.108440399169922

Token 187: ' A' (ID: 355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5172207355499268
    2. '[' → logprob: -3.1422207355499268
    3. ' )' → logprob: -3.1422207355499268
    4. ' for' → logprob: -3.6422207355499268
    5. '   ' → logprob: -3.6422207355499268
    6. 'vec' → logprob: -3.7672207355499268
    7. ',' → logprob: -3.8922207355499268
    8. '<|end|>' → logprob: -4.017220497131348
    9. ' a' → logprob: -4.142220497131348
    10. 'a' → logprob: -4.142220497131348

Token 188: ' =' (ID: 314)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0059587834402918816
    2. '[' → logprob: -5.255958557128906
    3. '[i' → logprob: -8.380958557128906
    4. '=' → logprob: -9.005958557128906
    5. '[A' → logprob: -9.255958557128906
    6. ')' → logprob: -10.630958557128906
    7. ')[' → logprob: -10.755958557128906
    8. '][' → logprob: -10.880958557128906
    9. '[index' → logprob: -10.880958557128906
    10. ' =' → logprob: -11.005958557128906

Token 189: ' reduce' (ID: 10389)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.881960391998291
    2. 'list' → logprob: -2.006960391998291
    3. ' list' → logprob: -2.131960391998291
    4. ' [' → logprob: -2.131960391998291
    5. '[p' → logprob: -2.131960391998291
    6. 'reduce' → logprob: -3.256960391998291
    7. '[list' → logprob: -3.506960391998291
    8. ' reduce' → logprob: -4.381960391998291
    9. '[i' → logprob: -5.131960391998291
    10. '[a' → logprob: -6.256960391998291

Token 190: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.000457605579867959
    2. '(' → logprob: -8.500457763671875
    3. ' (' → logprob: -9.250457763671875
    4. '(
' → logprob: -9.625457763671875
    5. '(p' → logprob: -10.000457763671875
    6. 'lambda' → logprob: -10.375457763671875
    7. '   ' → logprob: -11.750457763671875
    8. '```' → logprob: -12.750457763671875
    9. ' lambda' → logprob: -13.375457763671875
    10. '(operator' → logprob: -14.375457763671875

Token 191: ' arr' (ID: 1724)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9151959419250488
    2. 'lambda' → logprob: -1.2901959419250488
    3. ' acc' → logprob: -1.7901959419250488
    4. '(lambda' → logprob: -3.540195941925049
    5. 'f' → logprob: -3.665195941925049
    6. 'acc' → logprob: -3.915195941925049
    7. 'A' → logprob: -3.915195941925049
    8. ' arr' → logprob: -4.415195941925049
    9. ' f' → logprob: -4.540195941925049
    10. 'a' → logprob: -4.790195941925049

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008749190717935562
    2. 'lambda' → logprob: -5.758749008178711
    3. ' lambda' → logprob: -6.633749008178711
    4. ' ,' → logprob: -6.758749008178711
    5. ',p' → logprob: -6.883749008178711
    6. '(lambda' → logprob: -7.258749008178711
    7. ',
' → logprob: -7.508749008178711
    8. '[' → logprob: -8.133749008178711
    9. '=lambda' → logprob: -8.883749008178711
    10. 'p' → logprob: -9.758749008178711

Token 193: ' j' (ID: 441)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.646759033203125
    2. 'x' → logprob: -1.896759033203125
    3. ' i' → logprob: -1.896759033203125
    4. 'i' → logprob: -2.146759033203125
    5. ' j' → logprob: -2.396759033203125
    6. 'j' → logprob: -3.021759033203125
    7. ' idx' → logprob: -3.271759033203125
    8. ' row' → logprob: -3.396759033203125
    9. '_' → logprob: -3.896759033203125
    10. ' a' → logprob: -4.146759033203125

Token 194: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010607946896925569
    2. ',' → logprob: -7.001060962677002
    3. ' :' → logprob: -9.001060485839844
    4. ',j' → logprob: -12.126060485839844
    5. ':
' → logprob: -12.251060485839844
    6. '=' → logprob: -13.001060485839844
    7. 's' → logprob: -13.501060485839844
    8. ',:' → logprob: -13.751060485839844
    9. 'arr' → logprob: -13.876060485839844
    10. ':j' → logprob: -14.126060485839844

Token 195: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05011160299181938
    2. ' p' → logprob: -3.0501115322113037
    3. 'lambda' → logprob: -7.550111770629883
    4. ' lambda' → logprob: -7.675111770629883
    5. '   ' → logprob: -7.800111770629883
    6. '(p' → logprob: -10.175111770629883
    7. '(lambda' → logprob: -11.050111770629883
    8. ' ' → logprob: -11.300111770629883
    9. '       ' → logprob: -11.800111770629883
    10. '           ' → logprob: -11.925111770629883

Token 196: 'atern' (ID: 23633)
  Prédit: 'atern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atern' → logprob: -0.011281236074864864
    2. 'attern' → logprob: -4.5112810134887695
    3. '(arr' → logprob: -9.26128101348877
    4. 'at' → logprob: -10.26128101348877
    5. 'arr' → logprob: -10.38628101348877
    6. '(at' → logprob: -10.76128101348877
    7. '_arr' → logprob: -12.01128101348877
    8. 'atter' → logprob: -12.51128101348877
    9. 'r' → logprob: -12.51128101348877
    10. '(i' → logprob: -12.63628101348877

Token 197: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.00043281487887725234
    2. 'er' → logprob: -8.500432968139648
    3. 'e' → logprob: -9.750432968139648
    4. 'itize' → logprob: -10.250432968139648
    5. 'r' → logprob: -10.750432968139648
    6. 'iz' → logprob: -11.125432968139648
    7. 'a' → logprob: -11.250432968139648
    8. 'etrize' → logprob: -11.250432968139648
    9. 'imize' → logprob: -11.500432968139648
    10. 'esize' → logprob: -11.625432968139648

Token 198: '(i' (ID: 3649)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.23167358338832855
    2. '(i' → logprob: -1.6066735982894897
    3. '(arr' → logprob: -5.606673717498779
    4. '(' → logprob: -6.356673717498779
    5. '(j' → logprob: -7.606673717498779
    6. ' (' → logprob: -8.731673240661621
    7. '(index' → logprob: -10.231673240661621
    8. '(N' → logprob: -10.481673240661621
    9. '(None' → logprob: -10.731673240661621
    10. 'arr' → logprob: -11.106673240661621

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006497346796095371
    2. ' ,' → logprob: -5.631497383117676
    3. ',j' → logprob: -5.881497383117676
    4. 'j' → logprob: -9.881497383117676
    5. ' j' → logprob: -10.256497383117676
    6. ',
' → logprob: -12.256497383117676
    7. '   ' → logprob: -12.506497383117676
    8. ' ' → logprob: -13.506497383117676
    9. '    ' → logprob: -13.631497383117676
    10. '[j' → logprob: -14.131497383117676

Token 200: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001966104842722416
    2. ' j' → logprob: -6.2519659996032715
    3. '   ' → logprob: -11.50196647644043
    4. ' ' → logprob: -12.00196647644043
    5. 'arr' → logprob: -12.37696647644043
    6. '    ' → logprob: -12.62696647644043
    7. ')' → logprob: -13.25196647644043
    8. '  ' → logprob: -13.62696647644043
    9. 'lambda' → logprob: -13.62696647644043
    10. 'i' → logprob: -13.93946647644043

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003910507541149855
    2. ' ,' → logprob: -6.878910541534424
    3. '+' → logprob: -7.128910541534424
    4. ',A' → logprob: -7.378910541534424
    5. 'arr' → logprob: -8.128910064697266
    6. ',list' → logprob: -8.378910064697266
    7. 'range' → logprob: -8.878910064697266
    8. '(arr' → logprob: -9.128910064697266
    9. 'A' → logprob: -9.128910064697266
    10. ',array' → logprob: -9.503910064697266

Token 202: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.01846877858042717
    2. ' arr' → logprob: -4.018468856811523
    3. 'A' → logprob: -9.018468856811523
    4. 'range' → logprob: -9.018468856811523
    5. '   ' → logprob: -10.768468856811523
    6. ' A' → logprob: -11.268468856811523
    7. ' range' → logprob: -11.393468856811523
    8. '	arr' → logprob: -12.143468856811523
    9. 'j' → logprob: -12.518468856811523
    10. ' ' → logprob: -12.518468856811523

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005544766318053007
    2. ' ,' → logprob: -5.505544662475586
    3. ',j' → logprob: -6.880544662475586
    4. ',A' → logprob: -9.130544662475586
    5. 'A' → logprob: -9.255544662475586
    6. '[' → logprob: -10.255544662475586
    7. ',a' → logprob: -10.380544662475586
    8. ',i' → logprob: -10.755544662475586
    9. ',[' → logprob: -10.880544662475586
    10. ')' → logprob: -10.880544662475586

Token 204: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00761455949395895
    2. ' a' → logprob: -4.882614612579346
    3. '   ' → logprob: -13.132614135742188
    4. 'i' → logprob: -13.507614135742188
    5. ')' → logprob: -13.757614135742188
    6. ' ' → logprob: -13.882614135742188
    7. '[a' → logprob: -14.132614135742188
    8. ')a' → logprob: -14.757614135742188
    9. '	a' → logprob: -15.132614135742188
    10. 'A' → logprob: -15.257614135742188

Token 205: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008241970092058182
    2. ',' → logprob: -5.633242130279541
    3. ' ),' → logprob: -5.633242130279541
    4. ')' → logprob: -7.258242130279541
    5. '[j' → logprob: -8.883241653442383
    6. ' ,' → logprob: -10.508241653442383
    7. '   ' → logprob: -10.883241653442383
    8. 'j' → logprob: -10.883241653442383
    9. ',j' → logprob: -11.258241653442383
    10. ' ' → logprob: -11.258241653442383

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06994698941707611
    2. ' range' → logprob: -2.6949470043182373
    3. '   ' → logprob: -12.694947242736816
    4. '(range' → logprob: -12.694947242736816
    5. '	range' → logprob: -13.194947242736816
    6. ' ' → logprob: -13.319947242736816
    7. '  ' → logprob: -15.819947242736816
    8. 'list' → logprob: -15.944947242736816
    9. '    ' → logprob: -15.944947242736816
    10. '
' → logprob: -16.6324462890625

Token 207: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760318040847778
    2. '(N' → logprob: -0.8260318040847778
    3. '1' → logprob: -10.326031684875488
    4. '(n' → logprob: -10.826031684875488
    5. '(len' → logprob: -10.951031684875488
    6. '(
' → logprob: -11.451031684875488
    7. 'N' → logprob: -11.826031684875488
    8. '(i' → logprob: -14.451031684875488
    9. '(-' → logprob: -14.576031684875488
    10. ' (' → logprob: -14.576031684875488

Token 208: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.010004328563809395
    2. ')' → logprob: -5.01000452041626
    3. '))' → logprob: -6.38500452041626
    4. ' ),' → logprob: -6.76000452041626
    5. ')))' → logprob: -8.510004043579102
    6. ',' → logprob: -9.135004043579102
    7. '+' → logprob: -10.260004043579102
    8. ')),' → logprob: -10.885004043579102
    9. ' )' → logprob: -11.260004043579102
    10. ' ' → logprob: -11.885004043579102

Token 209: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12692873179912567
    2. ' A' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.001928329467773
    4. 'arr' → logprob: -15.751928329467773
    5. '   ' → logprob: -16.626928329467773
    6. '	A' → logprob: -16.751928329467773
    7. '_A' → logprob: -16.876928329467773
    8. 'vec' → logprob: -17.501928329467773
    9. ')' → logprob: -17.876928329467773
    10. '[A' → logprob: -18.626928329467773

Token 210: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012713817704934627
    2. ' )' → logprob: -9.375126838684082
    3. ')
' → logprob: -10.125126838684082
    4. '))' → logprob: -14.625126838684082
    5. ')

' → logprob: -15.000126838684082
    6. ',' → logprob: -15.625126838684082
    7. '   ' → logprob: -15.875126838684082
    8. '_)' → logprob: -16.1251277923584
    9. ')#' → logprob: -16.2501277923584
    10. ' ' → logprob: -16.3751277923584

Token 211: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0514458417892456
    2. 'i' → logprob: -1.1764458417892456
    3. ' idx' → logprob: -2.051445960998535
    4. 'idx' → logprob: -2.176445960998535
    5. ' j' → logprob: -2.801445960998535
    6. 'j' → logprob: -3.551445960998535
    7. '_' → logprob: -5.926445960998535
    8. ' _' → logprob: -6.301445960998535
    9. 'row' → logprob: -6.926445960998535
    10. '_i' → logprob: -7.176445960998535

Token 213: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04301859810948372
    2. 'in' → logprob: -3.1680185794830322
    3. ' ' → logprob: -11.418018341064453
    4. '<|end|>' → logprob: -13.418018341064453
    5. 'range' → logprob: -13.543018341064453
    6. ',' → logprob: -13.543018341064453
    7. '	in' → logprob: -14.418018341064453
    8. ' range' → logprob: -14.543018341064453
    9. '0' → logprob: -14.668018341064453
    10. '_' → logprob: -14.918018341064453

Token 214: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22964921593666077
    2. ' i' → logprob: -1.6046491861343384
    3. 'a' → logprob: -6.479649066925049
    4. 'j' → logprob: -6.729649066925049
    5. ' j' → logprob: -7.729649066925049
    6. ' a' → logprob: -8.104649543762207
    7. 'arr' → logprob: -8.604649543762207
    8. 'A' → logprob: -8.729649543762207
    9. ' A' → logprob: -9.479649543762207
    10. ' arr' → logprob: -9.979649543762207

Token 215: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6933364272117615
    2. ' in' → logprob: -0.6933364272117615
    3. ',' → logprob: -8.943336486816406
    4. 'range' → logprob: -9.943336486816406
    5. ' ' → logprob: -12.818336486816406
    6. '<|end|>' → logprob: -13.568336486816406
    7. '	in' → logprob: -13.943336486816406
    8. ' range' → logprob: -13.943336486816406
    9. ' ,' → logprob: -14.318336486816406
    10. ')' → logprob: -14.568336486816406

Token 216: ' product' (ID: 1888)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10151036828756332
    2. ' range' → logprob: -2.7265102863311768
    3. 'enumer' → logprob: -3.6015102863311768
    4. 'in' → logprob: -6.476510524749756
    5. ' enumerate' → logprob: -6.601510524749756
    6. ' in' → logprob: -7.476510524749756
    7. 'product' → logprob: -8.476510047912598
    8. '(range' → logprob: -10.226510047912598
    9. 're' → logprob: -10.976510047912598
    10. ' product' → logprob: -11.101510047912598

Token 217: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.45848218582978e-06
    2. 'range' → logprob: -13.25000286102295
    3. '(' → logprob: -15.00000286102295
    4. '((' → logprob: -15.25000286102295
    5. ' (' → logprob: -17.500001907348633
    6. '(re' → logprob: -18.375001907348633
    7. ' range' → logprob: -19.375001907348633
    8. '=' → logprob: -20.250001907348633
    9. '([' → logprob: -20.500001907348633
    10. '	range' → logprob: -20.750001907348633

Token 218: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001486058346927166
    2. '(' → logprob: -6.876485824584961
    3. 'N' → logprob: -7.751485824584961
    4. '(n' → logprob: -12.126485824584961
    5. '(
' → logprob: -12.626485824584961
    6. ')' → logprob: -13.126485824584961
    7. '(A' → logprob: -13.251485824584961
    8. '(len' → logprob: -13.626485824584961
    9. '```' → logprob: -13.626485824584961
    10. '(M' → logprob: -13.751485824584961

Token 219: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0015092701651155949
    2. ',' → logprob: -7.001509189605713
    3. '):
' → logprob: -8.626509666442871
    4. ')):
' → logprob: -9.126509666442871
    5. ' ),' → logprob: -9.626509666442871
    6. '):' → logprob: -9.876509666442871
    7. '(N' → logprob: -10.251509666442871
    8. '+' → logprob: -10.376509666442871
    9. '),(' → logprob: -10.626509666442871
    10. '-' → logprob: -10.751509666442871

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029790647327899933
    2. ' range' → logprob: -3.5297906398773193
    3. 'repeat' → logprob: -11.279790878295898
    4. 'N' → logprob: -11.904790878295898
    5. '(range' → logprob: -12.154790878295898
    6. '[' → logprob: -12.279790878295898
    7. '[N' → logprob: -12.904790878295898
    8. ')' → logprob: -13.029790878295898
    9. 're' → logprob: -13.404790878295898
    10. ' [' → logprob: -14.029790878295898

Token 221: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0020254701375961304
    2. '(j' → logprob: -6.377025604248047
    3. '(i' → logprob: -8.377025604248047
    4. '(' → logprob: -9.502025604248047
    5. 'N' → logprob: -11.627025604248047
    6. '(n' → logprob: -12.502025604248047
    7. '(len' → logprob: -12.877025604248047
    8. '(M' → logprob: -14.252025604248047
    9. 'j' → logprob: -14.377025604248047
    10. '((' → logprob: -14.502025604248047

Token 222: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.16216892004013062
    2. ')):
' → logprob: -2.4121689796447754
    3. '):' → logprob: -3.4121689796447754
    4. '))' → logprob: -3.9121689796447754
    5. '),' → logprob: -5.537168979644775
    6. '):
' → logprob: -6.287168979644775
    7. ')' → logprob: -7.537168979644775
    8. ')):
' → logprob: -8.287168502807617
    9. '+' → logprob: -9.037168502807617
    10. '[' → logprob: -9.912168502807617

Token 223: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4389236867427826
    2. '   ' → logprob: -1.313923716545105
    3. '):' → logprob: -3.9389235973358154
    4. '):
' → logprob: -4.1889238357543945
    5. ':
' → logprob: -4.4389238357543945
    6. ' if' → logprob: -4.5639238357543945
    7. '[' → logprob: -4.8139238357543945
    8. ' :' → logprob: -5.1889238357543945
    9. '<|end|>' → logprob: -5.3139238357543945
    10. ' A' → logprob: -6.0639238357543945

Token 224: ' if' (ID: 538)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.40056681632995605
    2. 'if' (adapté à ' if') → logprob: -1.775566816329956
    3. '   ' → logprob: -2.525566816329956
    4. ' if' → logprob: -3.525566816329956
    5. ' Al' → logprob: -3.650566816329956
    6. 'Ar' → logprob: -4.400567054748535
    7. '       ' → logprob: -4.525567054748535
    8. 'for' → logprob: -7.400567054748535
    9. ' Ar' → logprob: -7.900567054748535
    10. 'A' → logprob: -8.025567054748535

Token 225: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27931147813796997
    2. ' i' → logprob: -2.279311418533325
    3. 'A' → logprob: -2.654311418533325
    4. 'j' → logprob: -3.279311418533325
    5. ' A' → logprob: -4.029311656951904
    6. '   ' → logprob: -5.029311656951904
    7. ' j' → logprob: -5.029311656951904
    8. ' ' → logprob: -7.154311656951904
    9. 'Al' → logprob: -7.654311656951904
    10. '    ' → logprob: -8.654311180114746

Token 226: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9923190474510193
    2. ' >' → logprob: -1.617319107055664
    3. ' <=' → logprob: -1.992319107055664
    4. '>' → logprob: -2.367319107055664
    5. '<' → logprob: -2.742319107055664
    6. '<=' → logprob: -2.992319107055664
    7. '[' → logprob: -3.367319107055664
    8. ' >=' → logprob: -4.492319107055664
    9. ' !=' → logprob: -4.742319107055664
    10. '[i' → logprob: -4.742319107055664

Token 227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006407116306945682
    2. ' i' → logprob: -7.375640869140625
    3. 'N' → logprob: -11.375640869140625
    4. ' ' → logprob: -13.875640869140625
    5. '   ' → logprob: -14.250640869140625
    6. '	i' → logprob: -15.250640869140625
    7. '  ' → logprob: -15.375640869140625
    8. 'j' → logprob: -15.500640869140625
    9. '=' → logprob: -15.875640869140625
    10. ' N' → logprob: -16.875640869140625

Token 228: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1481551080942154
    2. ':
' → logprob: -2.1481552124023438
    3. ' and' → logprob: -4.273155212402344
    4. '       ' → logprob: -5.773155212402344
    5. '   ' → logprob: -6.273155212402344
    6. 'and' → logprob: -7.273155212402344
    7. '[' → logprob: -8.023155212402344
    8. ' :' → logprob: -8.273155212402344
    9. ' :
' → logprob: -9.023155212402344
    10. '           ' → logprob: -9.398155212402344

Token 229: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19316503405570984
    2. ' Al' → logprob: -2.0681650638580322
    3. 'Al' → logprob: -4.318164825439453
    4. ' Ar' → logprob: -4.318164825439453
    5. 'Ar' → logprob: -4.443164825439453
    6. '   ' → logprob: -4.943164825439453
    7. '           ' → logprob: -6.318164825439453
    8. ' for' → logprob: -7.318164825439453
    9. '```' → logprob: -8.568164825439453
    10. ' continue' → logprob: -8.818164825439453

Token 230: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7879796028137207
    2. '       ' → logprob: -1.0379796028137207
    3. 'Ar' → logprob: -2.2879796028137207
    4. 'Al' → logprob: -3.6629796028137207
    5. ' for' → logprob: -3.9129796028137207
    6. ' Al' → logprob: -4.162979602813721
    7. ' Ar' → logprob: -4.537979602813721
    8. 'for' → logprob: -5.037979602813721
    9. '        
' → logprob: -5.912979602813721
    10. '           ' → logprob: -6.287979602813721

Token 231: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6209732294082642
    2. '   ' → logprob: -1.2459732294082642
    3. 'Ar' → logprob: -2.6209731101989746
    4. 'Al' → logprob: -3.2459731101989746
    5. ' Al' → logprob: -3.7459731101989746
    6. ' for' → logprob: -3.8709731101989746
    7. ' Ar' → logprob: -4.620973110198975
    8. 'for' → logprob: -5.245973110198975
    9. '           ' → logprob: -7.120973110198975
    10. '```' → logprob: -7.370973110198975

Token 232: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' (adapté à ' Al') → logprob: -0.6609719395637512
    2. 'Ar' → logprob: -0.9109719395637512
    3. ' Al' → logprob: -3.5359718799591064
    4. ' Ar' → logprob: -3.7859718799591064
    5. '   ' → logprob: -4.1609721183776855
    6. '       ' → logprob: -4.6609721183776855
    7. 'for' → logprob: -6.7859721183776855
    8. '           ' → logprob: -7.1609721183776855
    9. 'A' → logprob: -7.2859721183776855
    10. ' for' → logprob: -7.5359721183776855

Token 233: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002215796150267124
    2. '[j' → logprob: -6.12721586227417
    3. '[' → logprob: -11.252215385437012
    4. ' =' → logprob: -12.627215385437012
    5. ' [' → logprob: -13.252215385437012
    6. '=' → logprob: -13.252215385437012
    7. '   ' → logprob: -13.502215385437012
    8. '```' → logprob: -13.502215385437012
    9. '
' → logprob: -13.627215385437012
    10. ')[' → logprob: -13.877215385437012

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.060664430260658264
    2. '[j' → logprob: -2.935664415359497
    3. '[i' → logprob: -5.435664653778076
    4. ']' → logprob: -7.310664653778076
    5. '[' → logprob: -8.560664176940918
    6. ' ][' → logprob: -9.060664176940918
    7. '=' → logprob: -9.560664176940918
    8. ',j' → logprob: -9.685664176940918
    9. ']=' → logprob: -9.685664176940918
    10. 'j' → logprob: -10.435664176940918

Token 235: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010224477155134082
    2. 'j' → logprob: -7.1260223388671875
    3. ' i' → logprob: -9.001022338867188
    4. '[i' → logprob: -10.501022338867188
    5. ']' → logprob: -10.626022338867188
    6. '0' → logprob: -11.501022338867188
    7. '   ' → logprob: -11.626022338867188
    8. '][' → logprob: -11.751022338867188
    9. '(i' → logprob: -12.501022338867188
    10. ':i' → logprob: -12.751022338867188

Token 236: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03798961266875267
    2. ']=' → logprob: -4.037989616394043
    3. '[j' → logprob: -4.412989616394043
    4. ']+=' → logprob: -5.412989616394043
    5. '][' → logprob: -6.287989616394043
    6. '+' → logprob: -8.037989616394043
    7. '[' → logprob: -8.537989616394043
    8. ' ]' → logprob: -8.537989616394043
    9. '=' → logprob: -8.912989616394043
    10. ']+' → logprob: -9.162989616394043

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00687521044164896
    2. ']' → logprob: -5.131875038146973
    3. '2' → logprob: -7.756875038146973
    4. ']=' → logprob: -8.256875038146973
    5. ' ' → logprob: -9.881875038146973
    6. ']+=' → logprob: -10.006875038146973
    7. '+' → logprob: -10.131875038146973
    8. '0' → logprob: -10.631875038146973
    9. ']+' → logprob: -10.631875038146973
    10. '   ' → logprob: -11.006875038146973

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008105282671749592
    2. ']=' → logprob: -5.008105278015137
    3. ']+=' → logprob: -7.133105278015137
    4. '[j' → logprob: -8.008105278015137
    5. ' ]' → logprob: -8.633105278015137
    6. '[' → logprob: -10.883105278015137
    7. '][' → logprob: -10.883105278015137
    8. ']+' → logprob: -11.133105278015137
    9. '-' → logprob: -12.133105278015137
    10. '=' → logprob: -12.383105278015137

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18742837011814117
    2. ' =' → logprob: -2.1874284744262695
    3. ']' → logprob: -4.0624284744262695
    4. ' +=' → logprob: -4.0624284744262695
    5. '+=' → logprob: -4.4374284744262695
    6. ']+=' → logprob: -4.9374284744262695
    7. ']=' → logprob: -5.8124284744262695
    8. '[' → logprob: -6.6874284744262695
    9. '[j' → logprob: -7.4374284744262695
    10. ' |=' → logprob: -9.18742847442627

Token 240: ' [' (ID: 723)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.02214246429502964
    2. 'Ar' → logprob: -4.52214241027832
    3. 'A' → logprob: -4.77214241027832
    4. 'max' → logprob: -6.64714241027832
    5. '1' → logprob: -8.14714241027832
    6. ' Al' → logprob: -8.27214241027832
    7. 'sum' → logprob: -8.64714241027832
    8. '(' → logprob: -8.89714241027832
    9. '0' → logprob: -9.14714241027832
    10. 'arr' → logprob: -10.02214241027832

Token 241: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.090253546833992
    2. 'x' → logprob: -2.7152535915374756
    3. 'a' → logprob: -4.9652533531188965
    4. 'sum' → logprob: -5.5902533531188965
    5. 'Ar' → logprob: -6.2152533531188965
    6. '0' → logprob: -6.7152533531188965
    7. 'al' → logprob: -6.7152533531188965
    8. 'max' → logprob: -6.9652533531188965
    9. '1' → logprob: -7.2152533531188965
    10. 'A' → logprob: -7.3402533531188965

Token 242: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005471975076943636
    2. 'j' → logprob: -5.255472183227539
    3. '[' → logprob: -9.255472183227539
    4. '[i' → logprob: -9.880472183227539
    5. '][' → logprob: -10.130472183227539
    6. ' j' → logprob: -11.255472183227539
    7. ',j' → logprob: -11.630472183227539
    8. ']' → logprob: -12.380472183227539
    9. '(j' → logprob: -12.755472183227539
    10. '[
' → logprob: -13.255472183227539

Token 243: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09082357585430145
    2. '[i' → logprob: -2.7158236503601074
    3. '[j' → logprob: -3.9658236503601074
    4. '[' → logprob: -6.715823650360107
    5. ']' → logprob: -8.59082317352295
    6. 'i' → logprob: -8.96582317352295
    7. ' ][' → logprob: -10.46582317352295
    8. '[k' → logprob: -10.59082317352295
    9. 'j' → logprob: -10.96582317352295
    10. '[I' → logprob: -11.34082317352295

Token 244: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00639477651566267
    2. '][' → logprob: -5.506394863128662
    3. '[i' → logprob: -6.256394863128662
    4. 'j' → logprob: -8.131394386291504
    5. ' i' → logprob: -9.881394386291504
    6. '0' → logprob: -11.256394386291504
    7. '   ' → logprob: -11.881394386291504
    8. '[j' → logprob: -12.006394386291504
    9. '(i' → logprob: -13.006394386291504
    10. ']' → logprob: -13.006394386291504

Token 245: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5876851677894592
    2. '[k' → logprob: -0.8376851677894592
    3. 'k' → logprob: -5.2126851081848145
    4. '[j' → logprob: -6.3376851081848145
    5. '[' → logprob: -6.5876851081848145
    6. ']' → logprob: -7.7126851081848145
    7. '[i' → logprob: -7.7126851081848145
    8. '[l' → logprob: -8.087685585021973
    9. '[m' → logprob: -8.212685585021973
    10. '[x' → logprob: -8.212685585021973

Token 246: ' A' (ID: 355)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.22917507588863373
    2. 'A' → logprob: -1.979175090789795
    3. 'Al' → logprob: -3.229175090789795
    4. ']' → logprob: -5.354175090789795
    5. 'arr' → logprob: -5.479175090789795
    6. '0' → logprob: -5.979175090789795
    7. 'i' → logprob: -6.354175090789795
    8. 'sum' → logprob: -6.354175090789795
    9. 'j' → logprob: -6.479175090789795
    10. '[' → logprob: -6.604175090789795

Token 247: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31363627314567566
    2. '[j' → logprob: -1.313636302947998
    3. '][' → logprob: -8.93863582611084
    4. 'i' → logprob: -9.18863582611084
    5. '[' → logprob: -9.81363582611084
    6. 'j' → logprob: -10.18863582611084
    7. ']' → logprob: -11.06363582611084
    8. ' [' → logprob: -11.56363582611084
    9. '   ' → logprob: -12.93863582611084
    10. '1' → logprob: -13.56363582611084

Token 248: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012936893617734313
    2. '[i' → logprob: -6.751293659210205
    3. ']' → logprob: -9.751294136047363
    4. '[' → logprob: -10.376294136047363
    5. ' ][' → logprob: -11.126294136047363
    6. 'i' → logprob: -11.626294136047363
    7. '   ' → logprob: -13.501294136047363
    8. ' [' → logprob: -13.751294136047363
    9. ''][' → logprob: -13.876294136047363
    10. '"][' → logprob: -14.001294136047363

Token 249: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004711874935310334
    2. '][' → logprob: -8.625471115112305
    3. ' i' → logprob: -8.875471115112305
    4. 'j' → logprob: -9.500471115112305
    5. '[i' → logprob: -10.375471115112305
    6. ']' → logprob: -10.875471115112305
    7. '   ' → logprob: -11.250471115112305
    8. '  ' → logprob: -13.250471115112305
    9. ' ' → logprob: -13.375471115112305
    10. '
' → logprob: -13.500471115112305

Token 250: ']]
' (ID: 29446)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022103239316493273
    2. ']' → logprob: -7.5022101402282715
    3. '][:' → logprob: -7.6272101402282715
    4. '-' → logprob: -7.7522101402282715
    5. ']]' → logprob: -8.00221061706543
    6. ']][' → logprob: -8.50221061706543
    7. '+' → logprob: -9.37721061706543
    8. ']+' → logprob: -10.12721061706543
    9. '[i' → logprob: -10.25221061706543
    10. '[' → logprob: -12.25221061706543

Token 251: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4125772714614868
    2. ' +' → logprob: -1.6625772714614868
    3. ']' → logprob: -2.0375771522521973
    4. '[' → logprob: -4.662577152252197
    5. ']+' → logprob: -5.787577152252197
    6. ' ]' → logprob: -6.662577152252197
    7. '[j' → logprob: -7.412577152252197
    8. '+[' → logprob: -7.412577152252197
    9. '<|end|>' → logprob: -7.537577152252197
    10. '][' → logprob: -7.662577152252197

Token 252: ' Al' (ID: 1667)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19600710272789001
    2. ' +' → logprob: -1.8210071325302124
    3. '+[' → logprob: -4.946007251739502
    4. ']' → logprob: -5.571007251739502
    5. '[' → logprob: -5.946007251739502
    6. ']+' → logprob: -7.196007251739502
    7. '[:]' → logprob: -7.696007251739502
    8. '+]' → logprob: -8.196006774902344
    9. '+j' → logprob: -8.571006774902344
    10. '[j' → logprob: -9.196006774902344

Token 253: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005250345566309988
    2. '[i' → logprob: -8.37552547454834
    3. '[' → logprob: -8.75052547454834
    4. '][' → logprob: -9.25052547454834
    5. ']' → logprob: -10.75052547454834
    6. '<|end|>' → logprob: -11.75052547454834
    7. ',j' → logprob: -13.50052547454834
    8. ' [' → logprob: -13.62552547454834
    9. ')[' → logprob: -13.87552547454834
    10. '[
' → logprob: -14.50052547454834

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012625131756067276
    2. '[i' → logprob: -4.887625217437744
    3. ']' → logprob: -5.762625217437744
    4. '+' → logprob: -7.387625217437744
    5. '[j' → logprob: -7.387625217437744
    6. ' ][' → logprob: -8.137624740600586
    7. '[' → logprob: -8.762624740600586
    8. '   ' → logprob: -9.762624740600586
    9. ' ' → logprob: -10.887624740600586
    10. ' [' → logprob: -11.262624740600586

Token 255: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005548207554966211
    2. ' i' → logprob: -8.250555038452148
    3. '][' → logprob: -9.000555038452148
    4. '[i' → logprob: -9.125555038452148
    5. 'j' → logprob: -10.625555038452148
    6. '[' → logprob: -11.625555038452148
    7. '   ' → logprob: -11.875555038452148
    8. ']' → logprob: -12.250555038452148
    9. ' ' → logprob: -13.250555038452148
    10. '+' → logprob: -13.250555038452148

Token 256: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2682666480541229
    2. '][' → logprob: -1.5182666778564453
    3. ']' → logprob: -4.268266677856445
    4. '[' → logprob: -7.893266677856445
    5. '[i' → logprob: -8.268266677856445
    6. '1' → logprob: -8.268266677856445
    7. '   ' → logprob: -8.393266677856445
    8. ' +' → logprob: -8.518266677856445
    9. ']+' → logprob: -8.768266677856445
    10. '][:' → logprob: -9.268266677856445

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010006568394601345
    2. ']' → logprob: -5.510006427764893
    3. '+' → logprob: -6.260006427764893
    4. '0' → logprob: -6.385006427764893
    5. ']+' → logprob: -7.010006427764893
    6. '][' → logprob: -8.13500690460205
    7. '2' → logprob: -8.38500690460205
    8. ' ' → logprob: -8.76000690460205
    9. '   ' → logprob: -9.26000690460205
    10. '```' → logprob: -9.26000690460205

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06869013607501984
    2. '=' → logprob: -3.693690061569214
    3. ' =' → logprob: -3.943690061569214
    4. ']=' → logprob: -5.193690299987793
    5. ' ]' → logprob: -5.318690299987793
    6. '][' → logprob: -5.443690299987793
    7. '+' → logprob: -5.443690299987793
    8. ']+' → logprob: -7.068690299987793
    9. ']+=' → logprob: -7.318690299987793
    10. ' +=' → logprob: -7.943690299987793

Token 259: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3048098683357239
    2. ' +' → logprob: -1.429809808731079
    3. '[' → logprob: -4.679810047149658
    4. '=' → logprob: -5.304810047149658
    5. ']' → logprob: -5.554810047149658
    6. ' =' → logprob: -6.304810047149658
    7. '<|end|>' → logprob: -6.804810047149658
    8. '[j' → logprob: -7.054810047149658
    9. '+[' → logprob: -8.0548095703125
    10. ' +=' → logprob: -8.1798095703125

Token 260: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48685380816459656
    2. 'list' → logprob: -1.236853837966919
    3. ' [' → logprob: -3.361853837966919
    4. ' list' → logprob: -3.736853837966919
    5. '[list' → logprob: -4.36185359954834
    6. '[j' → logprob: -4.98685359954834
    7. '[i' → logprob: -5.48685359954834
    8. '[(' → logprob: -5.61185359954834
    9. 'Al' → logprob: -5.86185359954834
    10. '[A' → logprob: -6.23685359954834

Token 261: '(chain' (ID: 124348)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007298283162526786
    2. '([' → logprob: -8.00072956085205
    3. '(
' → logprob: -8.75072956085205
    4. '(list' → logprob: -9.12572956085205
    5. '(sum' → logprob: -10.12572956085205
    6. 'Al' → logprob: -10.50072956085205
    7. '((' → logprob: -10.62572956085205
    8. '(chain' → logprob: -12.25072956085205
    9. '(

' → logprob: -12.50072956085205
    10. '(al' → logprob: -12.62572956085205

Token 262: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12374818325042725
    2. '.from' → logprob: -2.373748302459717
    3. '(*' → logprob: -3.873748302459717
    4. '([' → logprob: -6.623748302459717
    5. 'from' → logprob: -7.373748302459717
    6. '(chain' → logprob: -8.623747825622559
    7. '(*(' → logprob: -8.998747825622559
    8. '(from' → logprob: -9.123747825622559
    9. '((' → logprob: -10.498747825622559
    10. '(map' → logprob: -10.748747825622559

Token 263: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.14063335955142975
    2. '(' → logprob: -2.1406333446502686
    3. '[' → logprob: -4.640633583068848
    4. ' Al' → logprob: -6.140633583068848
    5. '([' → logprob: -6.890633583068848
    6. 'map' → logprob: -8.265633583068848
    7. '[[' → logprob: -8.765633583068848
    8. ' (' → logprob: -9.015633583068848
    9. '(map' → logprob: -9.640633583068848
    10. '((' → logprob: -10.640633583068848

Token 264: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.662937372922897e-05
    2. '[i' → logprob: -10.250096321105957
    3. '[[' → logprob: -10.625096321105957
    4. '[' → logprob: -11.125096321105957
    5. '))' → logprob: -11.875096321105957
    6. ')[' → logprob: -12.250096321105957
    7. '[
' → logprob: -13.250096321105957
    8. 'j' → logprob: -13.500096321105957
    9. ' [' → logprob: -14.000096321105957
    10. ')' → logprob: -14.000096321105957

Token 265: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6852686405181885
    2. '][' → logprob: -1.0602686405181885
    3. '[j' → logprob: -1.9352686405181885
    4. '[' → logprob: -5.435268402099609
    5. ' [' → logprob: -9.06026840209961
    6. '+' → logprob: -9.06026840209961
    7. ' ][' → logprob: -9.06026840209961
    8. ')[' → logprob: -9.43526840209961
    9. ']' → logprob: -9.68526840209961
    10. ']))' → logprob: -10.06026840209961

Token 266: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02802255004644394
    2. '[i' → logprob: -3.903022527694702
    3. 'j' → logprob: -5.153022766113281
    4. '[j' → logprob: -7.153022766113281
    5. '(i' → logprob: -7.778022766113281
    6. '[' → logprob: -8.778022766113281
    7. ' i' → logprob: -10.278022766113281
    8. '
' → logprob: -10.403022766113281
    9. '   ' → logprob: -10.403022766113281
    10. '][' → logprob: -10.528022766113281

Token 267: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5487233996391296
    2. '[j' → logprob: -1.1737234592437744
    3. '[i' → logprob: -2.5487234592437744
    4. '+' → logprob: -4.298723220825195
    5. '[' → logprob: -4.548723220825195
    6. ']))' → logprob: -4.923723220825195
    7. ']' → logprob: -6.798723220825195
    8. '-' → logprob: -8.298723220825195
    9. '][:' → logprob: -8.298723220825195
    10. ':j' → logprob: -8.548723220825195

Token 268: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47921741008758545
    2. 'i' → logprob: -1.2292174100875854
    3. '1' → logprob: -2.729217529296875
    4. '+' → logprob: -4.854217529296875
    5. '[j' → logprob: -5.229217529296875
    6. '[' → logprob: -5.729217529296875
    7. '(i' → logprob: -6.229217529296875
    8. '])' → logprob: -6.979217529296875
    9. ']))' → logprob: -7.104217529296875
    10. '][' → logprob: -7.479217529296875

Token 269: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0038310715463012457
    2. '[' → logprob: -6.503830909729004
    3. '),' → logprob: -6.878830909729004
    4. '))
' → logprob: -7.628830909729004
    5. '))[' → logprob: -7.878830909729004
    6. '[j' → logprob: -9.128830909729004
    7. ')))' → logprob: -9.628830909729004
    8. '[i' → logprob: -10.128830909729004
    9. ']))' → logprob: -10.253830909729004
    10. ' ))' → logprob: -10.253830909729004

Token 270: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4831005930900574
    2. '+' → logprob: -1.9831006526947021
    3. '[' → logprob: -2.108100652694702
    4. '<|end|>' → logprob: -2.233100652694702
    5. '(' → logprob: -5.733100414276123
    6. ']' → logprob: -5.983100414276123
    7. ')
' → logprob: -6.483100414276123
    8. '[
' → logprob: -6.608100414276123
    9. '.' → logprob: -6.983100414276123
    10. '
' → logprob: -7.358100414276123

Token 271: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.937950611114502
    2. 'type' → logprob: -1.437950611114502
    3. ' type' → logprob: -1.937950611114502
    4. 'is' → logprob: -1.937950611114502
    5. 'all' → logprob: -3.062950611114502
    6. ' all' → logprob: -4.187950611114502
    7. 'len' → logprob: -4.937950611114502
    8. 'j' → logprob: -5.687950611114502
    9. ' j' → logprob: -6.437950611114502
    10. 'i' → logprob: -6.687950611114502

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015790171455591917
    2. '(sum' → logprob: -7.2515788078308105
    3. '(list' → logprob: -7.2515788078308105
    4. '((' → logprob: -9.751579284667969
    5. '(chain' → logprob: -10.501579284667969
    6. '(tuple' → logprob: -10.626579284667969
    7. '(type' → logprob: -11.251579284667969
    8. '(AL' → logprob: -11.501579284667969
    9. '(A' → logprob: -11.876579284667969
    10. '(al' → logprob: -12.376579284667969

Token 273: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.002198432805016637
    2. '(' → logprob: -6.252198219299316
    3. 'list' → logprob: -8.377198219299316
    4. ' Al' → logprob: -10.877198219299316
    5. 'int' → logprob: -11.752198219299316
    6. 'sum' → logprob: -12.002198219299316
    7. '(list' → logprob: -12.627198219299316
    8. 'type' → logprob: -14.502198219299316
    9. 'tuple' → logprob: -14.627198219299316
    10. 'AL' → logprob: -14.627198219299316

Token 274: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.836499985889532e-05
    2. '[' → logprob: -10.2500581741333
    3. 'j' → logprob: -11.7500581741333
    4. '[i' → logprob: -12.0000581741333
    5. '[[' → logprob: -12.5000581741333
    6. ',j' → logprob: -13.3750581741333
    7. ' [' → logprob: -14.0000581741333
    8. ')' → logprob: -14.7500581741333
    9. '```' → logprob: -14.7500581741333
    10. '[
' → logprob: -15.1250581741333

Token 275: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02989673614501953
    2. '][' → logprob: -3.6548967361450195
    3. '[' → logprob: -6.1548967361450195
    4. '[i' → logprob: -6.6548967361450195
    5. ']' → logprob: -10.15489673614502
    6. ' [' → logprob: -10.27989673614502
    7. '   ' → logprob: -11.02989673614502
    8. '[][' → logprob: -11.15489673614502
    9. ' ][' → logprob: -11.65489673614502
    10. ',j' → logprob: -11.65489673614502

Token 276: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0076254382729530334
    2. 'j' → logprob: -5.007625579833984
    3. '0' → logprob: -7.507625579833984
    4. '[i' → logprob: -8.757625579833984
    5. '-' → logprob: -9.257625579833984
    6. '[j' → logprob: -10.257625579833984
    7. '1' → logprob: -10.632625579833984
    8. ' i' → logprob: -11.132625579833984
    9. '[' → logprob: -12.132625579833984
    10. '
' → logprob: -12.382625579833984

Token 277: '+' (ID: 10)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.25172650814056396
    2. '+' → logprob: -1.626726508140564
    3. '[' → logprob: -4.5017266273498535
    4. '[i' → logprob: -4.7517266273498535
    5. '][' → logprob: -5.2517266273498535
    6. '1' → logprob: -8.126726150512695
    7. '-' → logprob: -8.501726150512695
    8. '],' → logprob: -8.876726150512695
    9. ']+' → logprob: -9.376726150512695
    10. '[[' → logprob: -9.501726150512695

Token 278: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.060225021094083786
    2. '1' → logprob: -3.185225009918213
    3. '(i' → logprob: -5.060225009918213
    4. '[i' → logprob: -5.185225009918213
    5. '0' → logprob: -5.935225009918213
    6. 'j' → logprob: -6.560225009918213
    7. '-' → logprob: -7.685225009918213
    8. ' i' → logprob: -8.810225486755371
    9. '[j' → logprob: -9.060225486755371
    10. '])' → logprob: -9.185225486755371

Token 279: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011766752228140831
    2. ',list' → logprob: -4.7617669105529785
    3. '[' → logprob: -6.5117669105529785
    4. '],' → logprob: -6.8867669105529785
    5. ' ,' → logprob: -8.01176643371582
    6. '),' → logprob: -9.63676643371582
    7. 'list' → logprob: -9.76176643371582
    8. ',j' → logprob: -10.13676643371582
    9. ',int' → logprob: -10.26176643371582
    10. ',[' → logprob: -10.63676643371582

Token 280: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00038145645521581173
    2. '(list' → logprob: -8.750381469726562
    3. 'int' → logprob: -9.000381469726562
    4. ' list' → logprob: -9.250381469726562
    5. '(' → logprob: -13.375381469726562
    6. 'tuple' → logprob: -14.500381469726562
    7. '=list' → logprob: -15.500381469726562
    8. ' ' → logprob: -15.625381469726562
    9. '[list' → logprob: -15.625381469726562
    10. '(int' → logprob: -15.875381469726562

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006283254479058087
    2. ' )' → logprob: -8.375628471374512
    3. 'else' → logprob: -8.750628471374512
    4. '[' → logprob: -9.750628471374512
    5. ' else' → logprob: -9.750628471374512
    6. ')==' → logprob: -10.375628471374512
    7. ',' → logprob: -10.625628471374512
    8. '))' → logprob: -11.625628471374512
    9. 'and' → logprob: -11.875628471374512
    10. '   ' → logprob: -12.000628471374512

Token 282: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.63314288854599
    2. 'else' → logprob: -0.75814288854599
    3. ' ' → logprob: -8.008142471313477
    4. '[]' → logprob: -10.008142471313477
    5. '   ' → logprob: -10.383142471313477
    6. '==' → logprob: -10.508142471313477
    7. '           ' → logprob: -10.883142471313477
    8. '       ' → logprob: -11.133142471313477
    9. '[' → logprob: -11.508142471313477
    10. '  ' → logprob: -11.758142471313477

Token 283: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.11537663638591766
    2. '0' → logprob: -2.2403767108917236
    3. ' Al' → logprob: -6.7403764724731445
    4. ' ' → logprob: -7.7403764724731445
    5. '[]' → logprob: -8.115376472473145
    6. '[' → logprob: -8.365376472473145
    7. 'al' → logprob: -9.115376472473145
    8. 'sum' → logprob: -9.240376472473145
    9. 'None' → logprob: -9.490376472473145
    10. 'AL' → logprob: -10.865376472473145

Token 284: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.015910599380731583
    2. '[i' → logprob: -4.265910625457764
    3. '[' → logprob: -6.515910625457764
    4. 'A' → logprob: -10.390910148620605
    5. 'j' → logprob: -10.390910148620605
    6. ']' → logprob: -10.390910148620605
    7. '[[' → logprob: -10.515910148620605
    8. ')' → logprob: -10.890910148620605
    9. 'Al' → logprob: -10.890910148620605
    10. '[
' → logprob: -11.515910148620605

Token 285: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.591864824295044
    2. '][' → logprob: -0.841864824295044
    3. '[i' → logprob: -4.466864585876465
    4. '[' → logprob: -5.716864585876465
    5. ']' → logprob: -7.591864585876465
    6. '+' → logprob: -8.216864585876465
    7. ' ][' → logprob: -10.091864585876465
    8. ']][' → logprob: -10.216864585876465
    9. '[[' → logprob: -10.966864585876465
    10. '1' → logprob: -11.091864585876465

Token 286: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008656173013150692
    2. 'j' → logprob: -4.758656024932861
    3. '1' → logprob: -11.50865650177002
    4. '0' → logprob: -11.88365650177002
    5. '[i' → logprob: -12.25865650177002
    6. '[j' → logprob: -12.88365650177002
    7. '
' → logprob: -13.00865650177002
    8. ' i' → logprob: -13.00865650177002
    9. '(i' → logprob: -13.19615650177002
    10. '```' → logprob: -13.25865650177002

Token 287: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007621295750141144
    2. '[j' → logprob: -6.2576212882995605
    3. '[i' → logprob: -6.3826212882995605
    4. '][' → logprob: -6.5076212882995605
    5. ']' → logprob: -6.7576212882995605
    6. ']+' → logprob: -7.7576212882995605
    7. '[' → logprob: -7.7576212882995605
    8. '])' → logprob: -8.757621765136719
    9. '1' → logprob: -9.007621765136719
    10. ')' → logprob: -9.632621765136719

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014406509581021965
    2. ' ' → logprob: -9.750144004821777
    3. '0' → logprob: -10.000144004821777
    4. 'i' → logprob: -11.000144004821777
    5. 'j' → logprob: -12.000144004821777
    6. '+' → logprob: -12.750144004821777
    7. '[' → logprob: -12.875144004821777
    8. '[j' → logprob: -13.500144004821777
    9. ']' → logprob: -13.625144004821777
    10. '[i' → logprob: -13.625144004821777

Token 289: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006435725372284651
    2. '])' → logprob: -8.250643730163574
    3. ' )' → logprob: -8.750643730163574
    4. ')
' → logprob: -10.000643730163574
    5. ')+' → logprob: -10.250643730163574
    6. ']' → logprob: -10.500643730163574
    7. '[' → logprob: -10.625643730163574
    8. ')])' → logprob: -10.625643730163574
    9. ')]' → logprob: -10.750643730163574
    10. '   ' → logprob: -11.500643730163574

Token 290: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.347737193107605
    2. ')' → logprob: -1.472737193107605
    3. '[' → logprob: -1.722737193107605
    4. '<|end|>' → logprob: -1.972737193107605
    5. ']' → logprob: -2.3477373123168945
    6. '+' → logprob: -4.0977373123168945
    7. '[i' → logprob: -4.3477373123168945
    8. '   ' → logprob: -4.3477373123168945
    9. ' for' → logprob: -4.4727373123168945
    10. '```' → logprob: -4.8477373123168945

Token 291: ' Ar' (ID: 1754)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9224840998649597
    2. ']' → logprob: -1.2974841594696045
    3. '[' → logprob: -1.4224841594696045
    4. '+' → logprob: -2.9224841594696045
    5. '   ' → logprob: -4.547483921051025
    6. '<|end|>' → logprob: -5.172483921051025
    7. '[
' → logprob: -5.297483921051025
    8. ' ' → logprob: -6.297483921051025
    9. '#' → logprob: -6.297483921051025
    10. '[i' → logprob: -6.797483921051025

Token 292: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00044795009307563305
    2. '[i' → logprob: -7.875447750091553
    3. '[' → logprob: -10.125448226928711
    4. '][' → logprob: -11.750448226928711
    5. '=' → logprob: -12.125448226928711
    6. 'j' → logprob: -12.500448226928711
    7. ']' → logprob: -12.875448226928711
    8. ' [' → logprob: -13.250448226928711
    9. ' =' → logprob: -14.125448226928711
    10. '=j' → logprob: -14.250448226928711

Token 293: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002289067953824997
    2. '[j' → logprob: -6.252289295196533
    3. ']' → logprob: -8.252288818359375
    4. '[i' → logprob: -10.377288818359375
    5. ' ][' → logprob: -10.752288818359375
    6. '+' → logprob: -10.877288818359375
    7. '[' → logprob: -11.502288818359375
    8. 'j' → logprob: -12.627288818359375
    9. '   ' → logprob: -12.627288818359375
    10. ',j' → logprob: -13.002288818359375

Token 294: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0018674718448892236
    2. 'i' → logprob: -6.376867294311523
    3. ' j' → logprob: -8.876867294311523
    4. '[j' → logprob: -10.751867294311523
    5. '   ' → logprob: -13.751867294311523
    6. ' i' → logprob: -14.501867294311523
    7. 'N' → logprob: -14.626867294311523
    8. '(j' → logprob: -14.751867294311523
    9. '[i' → logprob: -14.751867294311523
    10. '	j' → logprob: -15.126867294311523

Token 295: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.39894530177116394
    2. '+' → logprob: -1.1489453315734863
    3. ']' → logprob: -4.898945331573486
    4. '[i' → logprob: -5.898945331573486
    5. '[' → logprob: -7.398945331573486
    6. ' ][' → logprob: -8.398944854736328
    7. ']+=' → logprob: -8.898944854736328
    8. '+=' → logprob: -9.023944854736328
    9. '[j' → logprob: -9.023944854736328
    10. ']+' → logprob: -9.148944854736328

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18694236874580383
    2. '[j' → logprob: -2.5619423389434814
    3. '[' → logprob: -3.1869423389434814
    4. '[i' → logprob: -3.3119423389434814
    5. '+=' → logprob: -5.3119425773620605
    6. '=[' → logprob: -5.9369425773620605
    7. '+' → logprob: -5.9369425773620605
    8. ']' → logprob: -6.0619425773620605
    9. '][' → logprob: -6.5619425773620605
    10. ' =' → logprob: -7.1869425773620605

Token 297: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3483453691005707
    2. 'Ar' → logprob: -1.598345398902893
    3. 'Al' → logprob: -2.7233452796936035
    4. 'A' → logprob: -4.7233452796936035
    5. '[A' → logprob: -4.9733452796936035
    6. 'sum' → logprob: -5.2233452796936035
    7. ' [' → logprob: -6.4733452796936035
    8. ' Ar' → logprob: -6.7233452796936035
    9. '[i' → logprob: -7.8483452796936035
    10. '[j' → logprob: -8.223345756530762

Token 298: '(filter' (ID: 36366)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.015075359493494034
    2. '([' → logprob: -4.890075206756592
    3. '(' → logprob: -5.140075206756592
    4. '(A' → logprob: -7.140075206756592
    5. 'chain' → logprob: -7.390075206756592
    6. '((' → logprob: -9.51507568359375
    7. '(list' → logprob: -9.89007568359375
    8. '(([' → logprob: -11.76507568359375
    9. '(range' → logprob: -11.89007568359375
    10. '(AL' → logprob: -12.01507568359375

Token 299: '(None' (ID: 65126)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6435443162918091
    2. '(None' → logprob: -0.8935443162918091
    3. 'None' → logprob: -3.0185441970825195
    4. 'lambda' → logprob: -4.3935441970825195
    5. '(bool' → logprob: -6.0185441970825195
    6. '(is' → logprob: -6.8935441970825195
    7. 'bool' → logprob: -7.7685441970825195
    8. 'is' → logprob: -9.64354419708252
    9. '(' → logprob: -9.89354419708252
    10. 'call' → logprob: -10.14354419708252

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035477206110954285
    2. ',[' → logprob: -4.535477161407471
    3. '(' → logprob: -4.660477161407471
    4. '([' → logprob: -4.785477161407471
    5. '(chain' → logprob: -5.910477161407471
    6. ',(' → logprob: -6.410477161407471
    7. '(A' → logprob: -7.285477161407471
    8. ',A' → logprob: -7.410477161407471
    9. ',
' → logprob: -9.035477638244629
    10. 'chain' → logprob: -9.160477638244629

Token 301: ' [' (ID: 723)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.31690850853919983
    2. 'Al' → logprob: -2.066908597946167
    3. 'A' → logprob: -2.441908597946167
    4. '[' → logprob: -3.066908597946167
    5. 'chain' → logprob: -5.566908359527588
    6. '[A' → logprob: -5.691908359527588
    7. '(' → logprob: -5.816908359527588
    8. '(A' → logprob: -7.816908359527588
    9. ' Ar' → logprob: -7.816908359527588
    10. '(chain' → logprob: -9.316908836364746

Token 302: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.012985151261091232
    2. 'Al' → logprob: -4.8879852294921875
    3. 'A' → logprob: -5.3879852294921875
    4. '[' → logprob: -7.3879852294921875
    5. ' Ar' → logprob: -9.012985229492188
    6. 'Arr' → logprob: -11.387985229492188
    7. '[A' → logprob: -11.387985229492188
    8. '(' → logprob: -11.637985229492188
    9. '*' → logprob: -12.887985229492188
    10. '   ' → logprob: -13.137985229492188

Token 303: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004185367375612259
    2. '[j' → logprob: -6.004185199737549
    3. 'i' → logprob: -6.379185199737549
    4. '[' → logprob: -12.379185676574707
    5. 'j' → logprob: -12.879185676574707
    6. ' [' → logprob: -14.129185676574707
    7. '[
' → logprob: -14.129185676574707
    8. '
' → logprob: -14.254185676574707
    9. '[k' → logprob: -15.379185676574707
    10. ' i' → logprob: -15.379185676574707

Token 304: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36513879895210266
    2. '][' → logprob: -1.6151387691497803
    3. '[j' → logprob: -2.2401387691497803
    4. 'i' → logprob: -8.61513900756836
    5. '   ' → logprob: -9.11513900756836
    6. ' [' → logprob: -9.36513900756836
    7. ']' → logprob: -10.11513900756836
    8. ' ][' → logprob: -10.11513900756836
    9. '[' → logprob: -10.24013900756836
    10. 'j' → logprob: -10.24013900756836

Token 305: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005730479606427252
    2. 'i' → logprob: -7.50057315826416
    3. ' j' → logprob: -11.62557315826416
    4. '[j' → logprob: -11.62557315826416
    5. '   ' → logprob: -14.62557315826416
    6. '1' → logprob: -15.00057315826416
    7. '
' → logprob: -15.12557315826416
    8. ' ' → logprob: -15.37557315826416
    9. '	j' → logprob: -15.50057315826416
    10. '(j' → logprob: -15.87557315826416

Token 306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04722832888364792
    2. '[j' → logprob: -3.4222283363342285
    3. '[i' → logprob: -4.4222283363342285
    4. ' ][' → logprob: -7.5472283363342285
    5. ']' → logprob: -8.04722785949707
    6. '   ' → logprob: -8.67222785949707
    7. '[' → logprob: -9.17222785949707
    8. 'j' → logprob: -9.54722785949707
    9. '],' → logprob: -9.79722785949707
    10. 'i' → logprob: -9.79722785949707

Token 307: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008265862241387367
    2. 'i' → logprob: -4.883265972137451
    3. '[j' → logprob: -7.508265972137451
    4. ' j' → logprob: -9.633265495300293
    5. '[i' → logprob: -10.883265495300293
    6. '   ' → logprob: -11.883265495300293
    7. '][' → logprob: -12.133265495300293
    8. ' ' → logprob: -13.383265495300293
    9. '(j' → logprob: -13.633265495300293
    10. ']' → logprob: -13.633265495300293

Token 308: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00844318326562643
    2. ' ,' → logprob: -5.633443355560303
    3. '[i' → logprob: -6.383443355560303
    4. ',i' → logprob: -6.508443355560303
    5. '[j' → logprob: -7.883443355560303
    6. ',j' → logprob: -8.008442878723145
    7. ',
' → logprob: -8.258442878723145
    8. '[' → logprob: -8.258442878723145
    9. '][' → logprob: -8.508442878723145
    10. ',[' → logprob: -9.633442878723145

Token 309: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0071918657049536705
    2. '[i' → logprob: -6.0071916580200195
    3. ' ,' → logprob: -6.1321916580200195
    4. '[j' → logprob: -7.0071916580200195
    5. ',i' → logprob: -7.8821916580200195
    6. '[' → logprob: -8.00719165802002
    7. ',
' → logprob: -8.13219165802002
    8. ',j' → logprob: -8.38219165802002
    9. ',[' → logprob: -9.00719165802002
    10. 'if' → logprob: -9.63219165802002

Token 310: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08697737753391266
    2. 'j' → logprob: -3.211977481842041
    3. ' i' → logprob: -3.336977481842041
    4. ' j' → logprob: -5.961977481842041
    5. 'Ar' → logprob: -6.586977481842041
    6. 'None' → logprob: -7.086977481842041
    7. '   ' → logprob: -7.586977481842041
    8. '  ' → logprob: -7.711977481842041
    9. '0' → logprob: -8.086977005004883
    10. ' ' → logprob: -8.086977005004883

Token 311: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5583801865577698
    2. '-' → logprob: -1.933380126953125
    3. '>' → logprob: -2.058380126953125
    4. '[i' → logprob: -3.058380126953125
    5. '>=' → logprob: -3.308380126953125
    6. '[j' → logprob: -3.433380126953125
    7. '[' → logprob: -4.433380126953125
    8. 'else' → logprob: -4.683380126953125
    9. '>[' → logprob: -5.183380126953125
    10. '   ' → logprob: -5.308380126953125

Token 312: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.047940004616975784
    2. '1' → logprob: -3.4229400157928467
    3. ' ' → logprob: -4.422939777374268
    4. 'j' → logprob: -6.672939777374268
    5. '>' → logprob: -7.422939777374268
    6. ' j' → logprob: -9.797940254211426
    7. '   ' → logprob: -9.797940254211426
    8. '-' → logprob: -10.047940254211426
    9. 'i' → logprob: -10.047940254211426
    10. 'None' → logprob: -10.297940254211426

Token 313: '>=' (ID: 20974)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6312223672866821
    2. '>=' → logprob: -1.0062223672866821
    3. '[' → logprob: -3.0062222480773926
    4. 'else' → logprob: -3.5062222480773926
    5. '>' → logprob: -4.631222248077393
    6. '[i' → logprob: -5.881222248077393
    7. ' else' → logprob: -5.881222248077393
    8. '[j' → logprob: -6.756222248077393
    9. ' is' → logprob: -6.881222248077393
    10. 'and' → logprob: -7.131222248077393

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018402183428406715
    2. 'j' → logprob: -4.268402099609375
    3. ' ' → logprob: -5.643402099609375
    4. ' j' → logprob: -8.143402099609375
    5. '1' → logprob: -8.393402099609375
    6. 'i' → logprob: -8.768402099609375
    7. ' i' → logprob: -12.268402099609375
    8. '   ' → logprob: -12.268402099609375
    9. '  ' → logprob: -13.018402099609375
    10. '
' → logprob: -14.080902099609375

Token 315: ' else' (ID: 1203)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5030145049095154
    2. ' else' → logprob: -1.8780145645141602
    3. '[j' → logprob: -1.8780145645141602
    4. 'else' → logprob: -2.75301456451416
    5. '[i' → logprob: -4.50301456451416
    6. ' ,' → logprob: -5.62801456451416
    7. ',j' → logprob: -6.37801456451416
    8. 'and' → logprob: -6.37801456451416
    9. '[' → logprob: -6.50301456451416
    10. ',
' → logprob: -7.37801456451416

Token 316: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4771910607814789
    2. '0' → logprob: -0.9771910905838013
    3. ' None' → logprob: -6.602190971374512
    4. ' ' → logprob: -7.352190971374512
    5. 'j' → logprob: -7.852190971374512
    6. '[]' → logprob: -8.227190971374512
    7. '   ' → logprob: -9.227190971374512
    8. 'False' → logprob: -9.352190971374512
    9. 'i' → logprob: -9.477190971374512
    10. '[' → logprob: -10.352190971374512

Token 317: '0' (ID: 15)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.8581727743148804
    2. '0' → logprob: -0.9831727743148804
    3. 'i' → logprob: -1.8581727743148804
    4. 'j' → logprob: -3.73317289352417
    5. 'None' → logprob: -4.35817289352417
    6. '1' → logprob: -5.60817289352417
    7. ' Ar' → logprob: -6.35817289352417
    8. ' ' → logprob: -6.60817289352417
    9. ' i' → logprob: -6.60817289352417
    10. ' j' → logprob: -7.98317289352417

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028680266812443733
    2. ' ,' → logprob: -3.7786803245544434
    3. ',
' → logprob: -5.778680324554443
    4. ',i' → logprob: -6.778680324554443
    5. '[i' → logprob: -7.653680324554443
    6. 'for' → logprob: -8.778679847717285
    7. ' for' → logprob: -8.778679847717285
    8. ',j' → logprob: -9.278679847717285
    9. ',[' → logprob: -10.403679847717285
    10. ' ,
' → logprob: -10.403679847717285

Token 319: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09253142029047012
    2. ' A' → logprob: -2.467531442642212
    3. 'Ar' → logprob: -5.967531204223633
    4. ' Ar' → logprob: -8.592531204223633
    5. 'Al' → logprob: -8.842531204223633
    6. '   ' → logprob: -8.967531204223633
    7. ' ' → logprob: -9.092531204223633
    8. '  ' → logprob: -9.717531204223633
    9. '      ' → logprob: -10.342531204223633
    10. '       ' → logprob: -10.342531204223633

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02046293579041958
    2. '[j' → logprob: -4.020462989807129
    3. '][' → logprob: -6.520462989807129
    4. 'i' → logprob: -7.895462989807129
    5. ' [' → logprob: -8.270462989807129
    6. '[' → logprob: -9.395462989807129
    7. ']' → logprob: -10.395462989807129
    8. '   ' → logprob: -11.145462989807129
    9. 'j' → logprob: -11.395462989807129
    10. '[
' → logprob: -11.520462989807129

Token 321: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005457649822346866
    2. '[j' → logprob: -8.375545501708984
    3. ']' → logprob: -8.750545501708984
    4. ' ][' → logprob: -9.625545501708984
    5. '[i' → logprob: -10.875545501708984
    6. '[' → logprob: -11.000545501708984
    7. '   ' → logprob: -11.250545501708984
    8. '-' → logprob: -11.250545501708984
    9. ' ' → logprob: -11.750545501708984
    10. ',j' → logprob: -12.625545501708984

Token 322: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010380283929407597
    2. 'i' → logprob: -4.635380268096924
    3. '][' → logprob: -8.635380744934082
    4. '[j' → logprob: -8.760380744934082
    5. '   ' → logprob: -9.135380744934082
    6. ' j' → logprob: -9.760380744934082
    7. '-' → logprob: -10.010380744934082
    8. ' ' → logprob: -11.385380744934082
    9. '```' → logprob: -11.510380744934082
    10. ']' → logprob: -11.760380744934082

Token 323: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.009418639354407787
    2. ']' → logprob: -5.509418487548828
    3. ']]' → logprob: -6.009418487548828
    4. '[i' → logprob: -7.259418487548828
    5. ']))
' → logprob: -7.259418487548828
    6. ' ]' → logprob: -7.634418487548828
    7. '[' → logprob: -7.759418487548828
    8. ']))

' → logprob: -9.134418487548828
    9. '[j' → logprob: -9.759418487548828
    10. ']])' → logprob: -9.884418487548828

Token 324: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.032549746334552765
    2. ')' → logprob: -3.9075498580932617
    3. '))
' → logprob: -4.532549858093262
    4. '   ' → logprob: -7.657549858093262
    5. ')
' → logprob: -8.282549858093262
    6. ')))' → logprob: -8.407549858093262
    7. ' ))' → logprob: -9.157549858093262
    8. '  ' → logprob: -10.532549858093262
    9. '])' → logprob: -10.782549858093262
    10. ' ' → logprob: -11.032549858093262

Token 325: 'dp' (ID: 19037)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20336420834064484
    2. ']' → logprob: -2.203364133834839
    3. '[' → logprob: -3.078364133834839
    4. '<|end|>' → logprob: -4.203364372253418
    5. '   ' → logprob: -5.578364372253418
    6. ' ' → logprob: -6.703364372253418
    7. '[i' → logprob: -6.703364372253418
    8. '[
' → logprob: -6.703364372253418
    9. 'A' → logprob: -6.953364372253418
    10. '+' → logprob: -7.078364372253418

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027126114815473557
    2. '=' → logprob: -3.6521260738372803
    3. '_' → logprob: -7.902126312255859
    4. '[' → logprob: -8.15212631225586
    5. '=[' → logprob: -9.77712631225586
    6. '=[[' → logprob: -10.52712631225586
    7. ' ' → logprob: -10.90212631225586
    8. ' =[' → logprob: -11.15212631225586
    9. ',' → logprob: -11.40212631225586
    10. ')' → logprob: -12.27712631225586

Token 327: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.030274299904704094
    2. '[' → logprob: -4.155274391174316
    3. ' [[' → logprob: -4.280274391174316
    4. ' [' → logprob: -8.530274391174316
    5. '[A' → logprob: -10.405274391174316
    6. 'Al' → logprob: -11.655274391174316
    7. '[]' → logprob: -11.780274391174316
    8. '[-' → logprob: -11.905274391174316
    9. '[{' → logprob: -11.905274391174316
    10. ' [[[' → logprob: -12.280274391174316

Token 328: 'float' (ID: 7829)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07105926424264908
    2. 'float' → logprob: -2.696059226989746
    3. '-' → logprob: -7.446059226989746
    4. 'False' → logprob: -8.196059226989746
    5. '[' → logprob: -9.321059226989746
    6. 'None' → logprob: -9.696059226989746
    7. '1' → logprob: -10.446059226989746
    8. ' float' → logprob: -11.446059226989746
    9. '(' → logprob: -11.571059226989746
    10. '10' → logprob: -11.696059226989746

Token 329: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.17220541834831238
    2. '('' → logprob: -1.9222054481506348
    3. ''' → logprob: -4.797205448150635
    4. ''ex' → logprob: -6.922205448150635
    5. '"' → logprob: -7.297205448150635
    6. ''ins' → logprob: -8.422204971313477
    7. 'inf' → logprob: -9.047204971313477
    8. ''i' → logprob: -9.172204971313477
    9. ''m' → logprob: -9.297204971313477
    10. ''n' → logprob: -9.422204971313477

Token 330: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02852247655391693
    2. '-inf' → logprob: -3.778522491455078
    3. ''in' → logprob: -5.403522491455078
    4. ''' → logprob: -7.278522491455078
    5. ''-' → logprob: -10.028522491455078
    6. '"' → logprob: -11.278522491455078
    7. 'in' → logprob: -12.278522491455078
    8. '-' → logprob: -13.153522491455078
    9. ''n' → logprob: -13.653522491455078
    10. '0' → logprob: -13.903522491455078

Token 331: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5234457850456238
    2. ')' → logprob: -0.8984457850456238
    3. ']' → logprob: -8.398446083068848
    4. ' )' → logprob: -9.773446083068848
    5. '')]' → logprob: -10.898446083068848
    6. ')])' → logprob: -11.898446083068848
    7. ')
' → logprob: -13.148446083068848
    8. '[' → logprob: -13.273446083068848
    9. '')' → logprob: -13.648446083068848
    10. ' for' → logprob: -13.898446083068848

Token 332: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5955299735069275
    2. 'for' → logprob: -1.0955300331115723
    3. ']' → logprob: -2.2205300331115723
    4. ']*' → logprob: -5.595530033111572
    5. ']*(' → logprob: -6.970530033111572
    6. '(N' → logprob: -7.220530033111572
    7. '[' → logprob: -8.470529556274414
    8. '[N' → logprob: -9.470529556274414
    9. ' ]' → logprob: -10.720529556274414
    10. '(' → logprob: -10.845529556274414

Token 333: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.008188173174858093
    2. 'N' → logprob: -5.133188247680664
    3. ' (' → logprob: -6.133188247680664
    4. '(' → logprob: -10.758188247680664
    5. '   ' → logprob: -10.883188247680664
    6. '(n' → logprob: -11.008188247680664
    7. ' N' → logprob: -11.133188247680664
    8. '
' → logprob: -12.633188247680664
    9. ' ' → logprob: -13.508188247680664
    10. '(M' → logprob: -13.508188247680664

Token 334: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011093381908722222
    2. '(N' → logprob: -9.500110626220703
    3. ' N' → logprob: -10.250110626220703
    4. '(' → logprob: -15.625110626220703
    5. ' ' → logprob: -15.625110626220703
    6. '   ' → logprob: -15.750110626220703
    7. ' (' → logprob: -16.000110626220703
    8. '[N' → logprob: -17.125110626220703
    9. '1' → logprob: -18.000110626220703
    10. 'n' → logprob: -18.000110626220703

Token 335: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0922871008515358
    2. ')' → logprob: -2.467287063598633
    3. ' +' → logprob: -5.842287063598633
    4. '(N' → logprob: -8.842287063598633
    5. 'for' → logprob: -8.842287063598633
    6. 'N' → logprob: -9.967287063598633
    7. ' for' → logprob: -10.342287063598633
    8. '```' → logprob: -11.217287063598633
    9. ')]' → logprob: -11.967287063598633
    10. ' ' → logprob: -11.967287063598633

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008789588697254658
    2. 'N' → logprob: -4.883789539337158
    3. '2' → logprob: -6.758789539337158
    4. '(N' → logprob: -11.258790016174316
    5. ' ' → logprob: -12.383790016174316
    6. ' N' → logprob: -12.758790016174316
    7. '+' → logprob: -13.758790016174316
    8. '
' → logprob: -14.508790016174316
    9. '   ' → logprob: -15.383790016174316
    10. ')' → logprob: -16.1337890625

Token 337: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00201999768614769
    2. 'for' → logprob: -6.377019882202148
    3. ' for' → logprob: -8.377019882202148
    4. ')]' → logprob: -10.377019882202148
    5. ']' → logprob: -10.627019882202148
    6. ' )' → logprob: -10.877019882202148
    7. ' ' → logprob: -12.377019882202148
    8. '   ' → logprob: -12.502019882202148
    9. '```' → logprob: -13.377019882202148
    10. '[' → logprob: -14.252019882202148

Token 338: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04860372841358185
    2. 'for' → logprob: -3.0486037731170654
    3. ']' → logprob: -11.423604011535645
    4. '   ' → logprob: -12.923604011535645
    5. '	for' → logprob: -13.048604011535645
    6. ' ' → logprob: -14.798604011535645
    7. ')' → logprob: -15.923604011535645
    8. '[' → logprob: -16.923603057861328
    9. '[]' → logprob: -16.923603057861328
    10. '```' → logprob: -17.173603057861328

Token 339: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009115827269852161
    2. ' _' → logprob: -7.000911712646484
    3. ' range' → logprob: -16.375911712646484
    4. ' i' → logprob: -18.250911712646484
    5. '_
' → logprob: -18.625911712646484
    6. 'range' → logprob: -18.875911712646484
    7. '_
' → logprob: -19.000911712646484
    8. '_=' → logprob: -19.250911712646484
    9. 'i' → logprob: -19.375911712646484
    10. '_

' → logprob: -19.500911712646484

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27857452630996704
    2. 'in' → logprob: -1.5285744667053223
    3. '_' → logprob: -3.7785744667053223
    4. 'range' → logprob: -5.903574466705322
    5. ' range' → logprob: -7.403574466705322
    6. ' _' → logprob: -9.65357494354248
    7. ' ' → logprob: -11.27857494354248
    8. 'N' → logprob: -11.65357494354248
    9. 'i' → logprob: -12.15357494354248
    10. '
' → logprob: -12.52857494354248

Token 341: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269284337759018
    2. ' range' → logprob: -2.1269283294677734
    3. '(range' → logprob: -15.251928329467773
    4. '_' → logprob: -16.876928329467773
    5. '	range' → logprob: -17.626928329467773
    6. '
' → logprob: -18.626928329467773
    7. 'in' → logprob: -18.751928329467773
    8. '[' → logprob: -18.876928329467773
    9. '_range' → logprob: -18.876928329467773
    10. '   ' → logprob: -19.251928329467773

Token 342: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5763307213783264
    2. ' range' → logprob: -0.8263307213783264
    3. '(range' → logprob: -7.951330661773682
    4. '(N' → logprob: -10.20133113861084
    5. '   ' → logprob: -14.20133113861084
    6. ' (' → logprob: -15.45133113861084
    7. 'N' → logprob: -15.82633113861084
    8. ')' → logprob: -15.82633113861084
    9. '	range' → logprob: -15.82633113861084
    10. '[N' → logprob: -15.82633113861084

Token 343: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016587569552939385
    2. ')]' → logprob: -8.750165939331055
    3. ' +' → logprob: -12.250165939331055
    4. '+
' → logprob: -13.625165939331055
    5. ')' → logprob: -14.500165939331055
    6. '1' → logprob: -14.750165939331055
    7. ')])' → logprob: -15.750165939331055
    8. ')][' → logprob: -15.875165939331055
    9. '()+' → logprob: -16.625165939331055
    10. '```' → logprob: -17.250165939331055

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004628772847354412
    2. '2' → logprob: -5.379628658294678
    3. 'N' → logprob: -12.004629135131836
    4. ' ' → logprob: -13.629629135131836
    5. '
' → logprob: -14.879629135131836
    6. '+' → logprob: -15.254629135131836
    7. '```' → logprob: -15.379629135131836
    8. '(N' → logprob: -16.129629135131836
    9. '   ' → logprob: -16.942129135131836
    10. ')' → logprob: -17.317129135131836

Token 345: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.226628895296017e-06
    2. ']' → logprob: -12.875007629394531
    3. ')]
' → logprob: -12.875007629394531
    4. ')' → logprob: -14.125007629394531
    5. '])]' → logprob: -14.250007629394531
    6. ')])' → logprob: -15.875007629394531
    7. ')]

' → logprob: -16.00000762939453
    8. '])' → logprob: -16.37500762939453
    9. '')]' → logprob: -16.50000762939453
    10. ')],' → logprob: -16.62500762939453

Token 346: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02324594371020794
    2. ')' → logprob: -4.523245811462402
    3. ' for' → logprob: -4.898245811462402
    4. 'dp' → logprob: -5.773245811462402
    5. '<|end|>' → logprob: -7.273245811462402
    6. 'def' → logprob: -7.898245811462402
    7. ']' → logprob: -8.273245811462402
    8. '```' → logprob: -9.273245811462402
    9. '[' → logprob: -10.898245811462402
    10. '#' → logprob: -11.273245811462402

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014105896698310971
    2. '<|end|>' → logprob: -6.876410484313965
    3. '][' → logprob: -8.876410484313965
    4. '[N' → logprob: -9.251410484313965
    5. '[
' → logprob: -9.876410484313965
    6. '0' → logprob: -11.126410484313965
    7. ']' → logprob: -11.251410484313965
    8. '
' → logprob: -11.626410484313965
    9. ')[' → logprob: -11.751410484313965
    10. ')' → logprob: -11.751410484313965

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003088871017098427
    2. 'i' → logprob: -8.625308990478516
    3. ' ' → logprob: -9.750308990478516
    4. '][' → logprob: -9.750308990478516
    5. '_' → logprob: -12.250308990478516
    6. ']' → logprob: -12.875308990478516
    7. '1' → logprob: -13.000308990478516
    8. 'j' → logprob: -14.875308990478516
    9. ' i' → logprob: -14.875308990478516
    10. '-' → logprob: -15.000308990478516

Token 349: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006690711015835404
    2. ']' → logprob: -7.500669002532959
    3. '[' → logprob: -9.625669479370117
    4. ']=' → logprob: -10.500669479370117
    5. ' ][' → logprob: -10.875669479370117
    6. '0' → logprob: -14.500669479370117
    7. '=' → logprob: -14.625669479370117
    8. '][-' → logprob: -14.750669479370117
    9. '()][' → logprob: -14.750669479370117
    10. '"][' → logprob: -14.875669479370117

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.125000953674316
    4. ']' → logprob: -15.875000953674316
    5. '```' → logprob: -16.750001907348633
    6. '-' → logprob: -17.250001907348633
    7. '۰' → logprob: -17.312501907348633
    8. '   ' → logprob: -18.812501907348633
    9. '
' → logprob: -18.812501907348633
    10. '०' → logprob: -19.000001907348633

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.610702363715973e-06
    2. ']=' → logprob: -11.875009536743164
    3. ' ]' → logprob: -12.875009536743164
    4. ']
' → logprob: -17.875009536743164
    5. '=' → logprob: -18.125009536743164
    6. ')' → logprob: -19.250009536743164
    7. ' =' → logprob: -19.625009536743164
    8. '[' → logprob: -20.125009536743164
    9. '']' → logprob: -20.250009536743164
    10. '0' → logprob: -20.625009536743164

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4300614595413208
    2. ' =' → logprob: -1.0550614595413208
    3. '<|end|>' → logprob: -7.180061340332031
    4. ')' → logprob: -8.805061340332031
    5. ']' → logprob: -8.930061340332031
    6. '=
' → logprob: -9.055061340332031
    7. ' ' → logprob: -9.805061340332031
    8. '
' → logprob: -9.930061340332031
    9. ' =
' → logprob: -10.180061340332031
    10. '[' → logprob: -10.805061340332031

Token 353: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -20.000001907348633
    4. ' ' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.875001907348633
    6. '```' → logprob: -21.375001907348633
    7. '[' → logprob: -21.812501907348633
    8. '00' → logprob: -21.812501907348633
    9. '1' → logprob: -22.062501907348633
    10. '  ' → logprob: -22.125001907348633

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -18.750001907348633
    4. '```' → logprob: -19.375001907348633
    5. '[' → logprob: -19.500001907348633
    6. '1' → logprob: -19.500001907348633
    7. ' ' → logprob: -19.812501907348633
    8. '{' → logprob: -19.875001907348633
    9. 'float' → logprob: -19.937501907348633
    10. '00' → logprob: -20.000001907348633

Token 355: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9493367075920105
    2. 'for' → logprob: -0.9493367075920105
    3. ')' → logprob: -2.1993367671966553
    4. '<|end|>' → logprob: -2.1993367671966553
    5. ']' → logprob: -6.574336528778076
    6. '   ' → logprob: -7.449336528778076
    7. ',' → logprob: -7.824336528778076
    8. ' ' → logprob: -8.449337005615234
    9. '[' → logprob: -8.699337005615234
    10. ':' → logprob: -8.699337005615234

Token 356: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0023019127547740936
    2. ' for' → logprob: -6.2523016929626465
    3. ')' → logprob: -8.002302169799805
    4. '<|end|>' → logprob: -10.377302169799805
    5. 'range' → logprob: -13.002302169799805
    6. '(' → logprob: -13.627302169799805
    7. '```' → logprob: -14.252302169799805
    8. 'def' → logprob: -14.252302169799805
    9. ']' → logprob: -14.502302169799805
    10. '   ' → logprob: -14.877302169799805

Token 357: ' i' (ID: 575)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.2428628206253052
    2. 'l' → logprob: -1.6178628206253052
    3. 'i' → logprob: -1.7428628206253052
    4. 'length' → logprob: -1.8678628206253052
    5. ' l' → logprob: -2.3678627014160156
    6. ' i' → logprob: -2.4928627014160156
    7. 'k' → logprob: -6.492862701416016
    8. ' k' → logprob: -7.117862701416016
    9. 'j' → logprob: -7.367862701416016
    10. 'L' → logprob: -7.367862701416016

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04309682175517082
    2. 'in' → logprob: -3.1680967807769775
    3. ' ' → logprob: -10.168096542358398
    4. '1' → logprob: -10.793096542358398
    5. ',' → logprob: -11.293096542358398
    6. '_' → logprob: -11.668096542358398
    7. '0' → logprob: -12.168096542358398
    8. '+' → logprob: -13.293096542358398
    9. 'range' → logprob: -13.293096542358398
    10. '	in' → logprob: -13.293096542358398

Token 359: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050531640648842
    2. ' range' → logprob: -4.511050701141357
    3. '1' → logprob: -13.1360502243042
    4. '(range' → logprob: -14.8860502243042
    5. ' ' → logprob: -15.3860502243042
    6. 'in' → logprob: -17.136051177978516
    7. '	range' → logprob: -17.261051177978516
    8. '0' → logprob: -17.636051177978516
    9. '   ' → logprob: -17.761051177978516
    10. '```' → logprob: -18.136051177978516

Token 360: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016263680532574654
    2. '(N' → logprob: -4.141263484954834
    3. '1' → logprob: -8.391263961791992
    4. 'N' → logprob: -13.266263961791992
    5. '(n' → logprob: -14.641263961791992
    6. ' ' → logprob: -15.891263961791992
    7. ' (' → logprob: -16.016263961791992
    8. '(
' → logprob: -17.266263961791992
    9. '(M' → logprob: -18.266263961791992
    10. '()' → logprob: -18.266263961791992

Token 361: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03455576300621033
    2. ' +' → logprob: -3.409555673599243
    3. '):
' → logprob: -7.659555912017822
    4. '):' → logprob: -7.784555912017822
    5. '   ' → logprob: -11.534555435180664
    6. ',' → logprob: -12.409555435180664
    7. '1' → logprob: -12.409555435180664
    8. '(' → logprob: -13.659555435180664
    9. ' ' → logprob: -14.034555435180664
    10. '
' → logprob: -15.159555435180664

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000668713531922549
    2. '+' → logprob: -7.750668525695801
    3. '2' → logprob: -9.1256685256958
    4. 'N' → logprob: -9.5006685256958
    5. '0' → logprob: -10.2506685256958
    6. '(' → logprob: -11.7506685256958
    7. ' ' → logprob: -12.3756685256958
    8. '(N' → logprob: -12.5006685256958
    9. '-' → logprob: -13.5006685256958
    10. ')' → logprob: -14.8756685256958

Token 363: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519429922103882
    2. '):
' → logprob: -1.5019429922103882
    3. '):
' → logprob: -11.37694263458252
    4. '):

' → logprob: -13.87694263458252
    5. ':' → logprob: -14.25194263458252
    6. ')' → logprob: -14.62694263458252
    7. '   ' → logprob: -15.87694263458252
    8. 'for' → logprob: -16.751943588256836
    9. ',' → logprob: -17.376943588256836
    10. ' ):' → logprob: -17.376943588256836

Token 364: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5239399075508118
    2. '   ' → logprob: -0.8989399075508118
    3. 'for' → logprob: -7.273940086364746
    4. '	for' → logprob: -9.148940086364746
    5. '   ' → logprob: -12.398940086364746
    6. ',' → logprob: -12.648940086364746
    7. ' ' → logprob: -12.898940086364746
    8. ' and' → logprob: -13.273940086364746
    9. '<|end|>' → logprob: -13.648940086364746
    10. '```' → logprob: -13.898940086364746

Token 365: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5891098380088806
    2. ' for' → logprob: -0.8391098380088806
    3. '   ' → logprob: -4.339109897613525
    4. ' ' → logprob: -10.339109420776367
    5. '	for' → logprob: -12.714109420776367
    6. '  ' → logprob: -14.964109420776367
    7. ' i' → logprob: -16.339109420776367
    8. '    ' → logprob: -16.714109420776367
    9. '       ' → logprob: -16.839109420776367
    10. 'j' → logprob: -18.089109420776367

Token 366: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04864436760544777
    2. ' j' → logprob: -3.0486443042755127
    3. 'k' → logprob: -10.423644065856934
    4. '   ' → logprob: -10.923644065856934
    5. ' k' → logprob: -13.548644065856934
    6. '0' → logprob: -13.923644065856934
    7. 'w' → logprob: -14.173644065856934
    8. '	j' → logprob: -14.173644065856934
    9. 'for' → logprob: -14.298644065856934
    10. ' ' → logprob: -14.298644065856934

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02631295472383499
    2. 'in' → logprob: -3.651313066482544
    3. '	in' → logprob: -11.901312828063965
    4. ' i' → logprob: -13.276312828063965
    5. '   ' → logprob: -14.276312828063965
    6. '    ' → logprob: -14.276312828063965
    7. ' ' → logprob: -14.276312828063965
    8. '(' → logprob: -15.026312828063965
    9. '	' → logprob: -15.276312828063965
    10. '_in' → logprob: -15.526312828063965

Token 368: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200074777007103
    2. ' range' → logprob: -2.8120007514953613
    3. '(range' → logprob: -10.812000274658203
    4. 'i' → logprob: -11.562000274658203
    5. '(i' → logprob: -13.312000274658203
    6. ' i' → logprob: -13.937000274658203
    7. '   ' → logprob: -15.187000274658203
    8. '[i' → logprob: -15.562000274658203
    9. ' ' → logprob: -15.812000274658203
    10. '	range' → logprob: -16.312000274658203

Token 369: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005815029144287109
    2. 'range' → logprob: -5.755815029144287
    3. '(range' → logprob: -6.255815029144287
    4. '(N' → logprob: -7.380815029144287
    5. '(' → logprob: -10.005815505981445
    6. 'i' → logprob: -10.505815505981445
    7. ' range' → logprob: -11.005815505981445
    8. 'Range' → logprob: -15.130815505981445
    9. '(dp' → logprob: -15.130815505981445
    10. 'dp' → logprob: -15.255815505981445

Token 370: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01516294851899147
    2. ',' → logprob: -4.640162944793701
    3. '):' → logprob: -5.890162944793701
    4. ' +' → logprob: -6.765162944793701
    5. ',N' → logprob: -7.390162944793701
    6. '):
' → logprob: -7.640162944793701
    7. ',i' → logprob: -8.14016342163086
    8. '+i' → logprob: -10.14016342163086
    9. ' ,' → logprob: -11.26516342163086
    10. ',n' → logprob: -11.51516342163086

Token 371: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017902553081512451
    2. ' N' → logprob: -6.3767900466918945
    3. 'i' → logprob: -9.376790046691895
    4. '   ' → logprob: -13.251790046691895
    5. ' i' → logprob: -14.001790046691895
    6. ' ' → logprob: -15.751790046691895
    7. '0' → logprob: -16.37679100036621
    8. '1' → logprob: -16.50179100036621
    9. '(N' → logprob: -16.50179100036621
    10. '	N' → logprob: -16.75179100036621

Token 372: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.491498531133402e-06
    2. ' +' → logprob: -11.750009536743164
    3. '+
' → logprob: -13.875009536743164
    4. '):
' → logprob: -15.250009536743164
    5. '1' → logprob: -15.875009536743164
    6. '+j' → logprob: -16.000009536743164
    7. ')+' → logprob: -16.500009536743164
    8. '   ' → logprob: -16.875009536743164
    9. '+)' → logprob: -17.375009536743164
    10. '):' → logprob: -17.625009536743164

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001171652227640152
    2. '+' → logprob: -6.751171588897705
    3. '```' → logprob: -14.376172065734863
    4. ' ' → logprob: -14.876172065734863
    5. '   ' → logprob: -15.751172065734863
    6. ')' → logprob: -15.751172065734863
    7. 'N' → logprob: -16.251171112060547
    8. '+
' → logprob: -16.626171112060547
    9. '+)' → logprob: -17.126171112060547
    10. ' +' → logprob: -17.626171112060547

Token 374: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1605016440153122
    2. '):
' → logprob: -1.9105015993118286
    3. ':' → logprob: -8.535501480102539
    4. '+' → logprob: -10.160501480102539
    5. ')' → logprob: -10.785501480102539
    6. '   ' → logprob: -11.660501480102539
    7. '):
' → logprob: -11.785501480102539
    8. '):

' → logprob: -13.535501480102539
    9. ' ):' → logprob: -14.035501480102539
    10. ':
' → logprob: -14.535501480102539

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025991995353251696
    2. ' for' → logprob: -6.127599239349365
    3. ' if' → logprob: -9.002598762512207
    4. 'for' → logprob: -9.377598762512207
    5. '   ' → logprob: -9.502598762512207
    6. 'dp' → logprob: -10.377598762512207
    7. 'if' → logprob: -10.877598762512207
    8. '```' → logprob: -11.502598762512207
    9. '    ' → logprob: -11.627598762512207
    10. '	   ' → logprob: -11.627598762512207

Token 376: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9523051977157593
    2. 'for' → logprob: -1.3273051977157593
    3. 'dp' → logprob: -2.202305316925049
    4. ' if' → logprob: -2.327305316925049
    5. ' for' → logprob: -2.702305316925049
    6. '       ' → logprob: -2.702305316925049
    7. ' dp' → logprob: -5.327305316925049
    8. 'k' → logprob: -7.577305316925049
    9. '   ' → logprob: -7.827305316925049
    10. 'pass' → logprob: -8.20230484008789

Token 377: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5517536997795105
    2. 'j' → logprob: -1.0517537593841553
    3. 'dp' → logprob: -2.9267537593841553
    4. ' i' → logprob: -4.301753520965576
    5. ' j' → logprob: -5.301753520965576
    6. '   ' → logprob: -6.426753520965576
    7. ' dp' → logprob: -7.301753520965576
    8. '       ' → logprob: -9.051753997802734
    9. 'not' → logprob: -9.551753997802734
    10. '(i' → logprob: -9.926753997802734

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003364158037584275
    2. '[j' → logprob: -8.000336647033691
    3. 'i' → logprob: -15.250336647033691
    4. ' [' → logprob: -15.375336647033691
    5. '```' → logprob: -15.500336647033691
    6. '[' → logprob: -15.875336647033691
    7. '[
' → logprob: -16.250335693359375
    8. '][' → logprob: -16.625335693359375
    9. '[I' → logprob: -17.000335693359375
    10. ')[' → logprob: -18.000335693359375

Token 379: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.12608397006988525
    2. '[i' → logprob: -2.3760838508605957
    3. '][' → logprob: -3.8760838508605957
    4. '[' → logprob: -5.376083850860596
    5. ' [' → logprob: -10.251084327697754
    6. ']' → logprob: -10.876084327697754
    7. '[I' → logprob: -11.251084327697754
    8. ' ][' → logprob: -11.376084327697754
    9. '[
' → logprob: -11.501084327697754
    10. '==' → logprob: -11.626084327697754

Token 380: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012118533049942926
    2. 'i' → logprob: -9.125121116638184
    3. 'N' → logprob: -12.375121116638184
    4. ' j' → logprob: -12.375121116638184
    5. '[j' → logprob: -13.000121116638184
    6. '0' → logprob: -14.250121116638184
    7. '   ' → logprob: -15.750121116638184
    8. '```' → logprob: -15.875121116638184
    9. ' ' → logprob: -16.0001220703125
    10. '
' → logprob: -16.7501220703125

Token 381: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6760894060134888
    2. '==' → logprob: -1.3010894060134888
    3. ' ==' → logprob: -1.8010894060134888
    4. '>' → logprob: -4.301089286804199
    5. '<' → logprob: -4.426089286804199
    6. '[' → logprob: -4.551089286804199
    7. ' <' → logprob: -5.051089286804199
    8. ']==' → logprob: -5.176089286804199
    9. '!=' → logprob: -6.551089286804199
    10. ' ]' → logprob: -7.051089286804199

Token 382: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3285458981990814
    2. '!=' → logprob: -2.2035458087921143
    3. '>' → logprob: -2.3285458087921143
    4. ' ==' → logprob: -3.0785458087921143
    5. '<' → logprob: -4.078546047210693
    6. ' !=' → logprob: -5.203546047210693
    7. ' >' → logprob: -6.078546047210693
    8. ' <' → logprob: -7.703546047210693
    9. '=' → logprob: -7.828546047210693
    10. '```' → logprob: -8.703545570373535

Token 383: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004179902374744415
    2. '0' → logprob: -6.004179954528809
    3. ' float' → logprob: -6.379179954528809
    4. '	float' → logprob: -12.754179954528809
    5. ' ' → logprob: -13.129179954528809
    6. '   ' → logprob: -14.629179954528809
    7. 'inf' → logprob: -15.004179954528809
    8. '=float' → logprob: -15.879179954528809
    9. '(float' → logprob: -16.004179000854492
    10. '<float' → logprob: -16.254179000854492

Token 384: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0002100965939462185
    2. ''in' → logprob: -8.50020980834961
    3. ''' → logprob: -12.62520980834961
    4. ''s' → logprob: -13.37520980834961
    5. '("' → logprob: -15.25020980834961
    6. ''ex' → logprob: -15.75020980834961
    7. ''i' → logprob: -15.87520980834961
    8. ''inc' → logprob: -15.87520980834961
    9. ''il' → logprob: -16.25020980834961
    10. '['' → logprob: -16.37520980834961

Token 385: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''in' → logprob: -17.0
    3. ''' → logprob: -17.125
    4. '')' → logprob: -17.875
    5. ')' → logprob: -18.75
    6. '-inf' → logprob: -19.0
    7. ' inf' → logprob: -19.125
    8. '_inf' → logprob: -19.5
    9. 'info' → logprob: -19.75
    10. '0' → logprob: -20.25

Token 386: ''):' (ID: 83830)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022141996771097183
    2. '):
' → logprob: -4.647141933441162
    3. ')' → logprob: -4.897141933441162
    4. ':' → logprob: -5.522141933441162
    5. ' or' → logprob: -7.522141933441162
    6. '       ' → logprob: -9.02214241027832
    7. ''):' → logprob: -9.64714241027832
    8. '           ' → logprob: -10.27214241027832
    9. ' and' → logprob: -10.77214241027832
    10. '   ' → logprob: -11.14714241027832

Token 387: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1856277585029602
    2. ' continue' → logprob: -1.8106276988983154
    3. 'continue' → logprob: -5.1856279373168945
    4. '       ' → logprob: -8.685627937316895
    5. '   ' → logprob: -10.060627937316895
    6. '               ' → logprob: -10.435627937316895
    7. '	continue' → logprob: -11.560627937316895
    8. ' for' → logprob: -12.435627937316895
    9. '```' → logprob: -12.685627937316895
    10. ' continues' → logprob: -12.935627937316895

Token 388: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010082454420626163
    2. ' for' → logprob: -5.385082244873047
    3. '           ' → logprob: -5.385082244873047
    4. '   ' → logprob: -8.135082244873047
    5. '<|end|>' → logprob: -8.260082244873047
    6. ',' → logprob: -8.885082244873047
    7. 'for' → logprob: -9.760082244873047
    8. ' if' → logprob: -10.760082244873047
    9. '```' → logprob: -10.885082244873047
    10. '               ' → logprob: -11.385082244873047

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4073227047920227
    2. ' for' → logprob: -1.282322645187378
    3. '<|end|>' → logprob: -4.032322883605957
    4. 'for' → logprob: -4.282322883605957
    5. '   ' → logprob: -4.532322883605957
    6. '```' → logprob: -5.032322883605957
    7. ':' → logprob: -5.782322883605957
    8. '           ' → logprob: -5.907322883605957
    9. ',' → logprob: -6.782322883605957
    10. ' if' → logprob: -8.032322883605957

Token 390: ' l' (ID: 305)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2571427822113037
    2. 'for' → logprob: -1.5071427822113037
    3. 'k' → logprob: -6.257143020629883
    4. ' k' → logprob: -6.757143020629883
    5. '           ' → logprob: -7.007143020629883
    6. ' if' → logprob: -7.507143020629883
    7. '       ' → logprob: -8.007143020629883
    8. 'if' → logprob: -8.757143020629883
    9. '   ' → logprob: -9.257143020629883
    10. '<|end|>' → logprob: -10.757143020629883

Token 391: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47522780299186707
    2. '=' → logprob: -1.7252278327941895
    3. ' =' → logprob: -2.2252278327941895
    4. ' for' → logprob: -3.3502278327941895
    5. 'range' → logprob: -3.9752278327941895
    6. 'e' → logprob: -4.1002278327941895
    7. '   ' → logprob: -5.3502278327941895
    8. 'f' → logprob: -5.8502278327941895
    9. 'ist' → logprob: -6.4752278327941895
    10. 'en' → logprob: -6.4752278327941895

Token 392: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05534776300191879
    2. ' r' → logprob: -3.3053476810455322
    3. 'for' → logprob: -5.930347919464111
    4. '=' → logprob: -6.055347919464111
    5. 'k' → logprob: -6.055347919464111
    6. ' =' → logprob: -6.180347919464111
    7. 's' → logprob: -6.305347919464111
    8. 'j' → logprob: -6.430347919464111
    9. 'N' → logprob: -7.180347919464111
    10. 'm' → logprob: -7.805347919464111

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10090555250644684
    2. ' =' → logprob: -2.350905656814575
    3. '=j' → logprob: -7.350905418395996
    4. ',' → logprob: -10.475905418395996
    5. '=i' → logprob: -11.350905418395996
    6. ',j' → logprob: -12.100905418395996
    7. '   ' → logprob: -12.600905418395996
    8. '=k' → logprob: -13.475905418395996
    9. ' ' → logprob: -14.225905418395996
    10. '=r' → logprob: -14.350905418395996

Token 394: ' ' (ID: 220)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -1.1261030435562134
    2. 'j' → logprob: -1.2511030435562134
    3. 'dp' → logprob: -1.2511030435562134
    4. '(j' → logprob: -3.876102924346924
    5. 'A' → logprob: -4.001102924346924
    6. '(' → logprob: -4.251102924346924
    7. '0' → logprob: -4.501102924346924
    8. '(dp' → logprob: -4.876102924346924
    9. 'i' → logprob: -5.376102924346924
    10. 'N' → logprob: -5.376102924346924

Token 395: '0' (ID: 15)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.28757965564727783
    2. 'j' → logprob: -2.0375795364379883
    3. 'dp' → logprob: -2.7875795364379883
    4. '(' → logprob: -3.7875795364379883
    5. '(j' → logprob: -4.787579536437988
    6. '0' → logprob: -4.912579536437988
    7. 'N' → logprob: -5.412579536437988
    8. 'A' → logprob: -5.912579536437988
    9. 'i' → logprob: -6.037579536437988
    10. '(N' → logprob: -6.287579536437988

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010494951158761978
    2. ',j' → logprob: -5.760495185852051
    3. '
' → logprob: -6.135495185852051
    4. '<|end|>' → logprob: -7.010495185852051
    5. ' ,' → logprob: -7.260495185852051
    6. ',
' → logprob: -7.260495185852051
    7. '=' → logprob: -7.635495185852051
    8. '       ' → logprob: -7.885495185852051
    9. ' =' → logprob: -8.13549518585205
    10. ',n' → logprob: -8.63549518585205

Token 397: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16794437170028687
    2. 'j' → logprob: -1.9179444313049316
    3. 'i' → logprob: -5.917944431304932
    4. '10' → logprob: -5.917944431304932
    5. 'len' → logprob: -7.542944431304932
    6. '0' → logprob: -7.542944431304932
    7. '100' → logprob: -8.167943954467773
    8. 'float' → logprob: -8.667943954467773
    9. ' N' → logprob: -8.667943954467773
    10. '1' → logprob: -8.792943954467773

Token 398: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6714160442352295
    2. 'N' → logprob: -0.9214160442352295
    3. 'i' → logprob: -3.2964160442352295
    4. '0' → logprob: -3.6714160442352295
    5. 'float' → logprob: -4.296416282653809
    6. 'len' → logprob: -4.921416282653809
    7. 'dp' → logprob: -5.671416282653809
    8. '10' → logprob: -6.296416282653809
    9. '1' → logprob: -7.171416282653809
    10. '100' → logprob: -7.921416282653809

Token 399: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 401: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.030013918876648
    2. 'for' (adapté à ' for') → logprob: -1.030013918876648
    3. '       ' → logprob: -1.405013918876648
    4. '<|end|>' → logprob: -4.4050140380859375
    5. ' if' → logprob: -4.9050140380859375
    6. 'while' → logprob: -5.1550140380859375
    7. 'if' → logprob: -5.4050140380859375
    8. 'r' → logprob: -6.1550140380859375
    9. ' while' → logprob: -6.1550140380859375
    10. ' ' → logprob: -6.4050140380859375

Token 402: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009012157097458839
    2. ' k' → logprob: -7.625901222229004
    3. 'x' → logprob: -9.125901222229004
    4. 'r' → logprob: -9.875901222229004
    5. 'm' → logprob: -10.000901222229004
    6. 'nj' → logprob: -10.250901222229004
    7. '   ' → logprob: -10.750901222229004
    8. 'n' → logprob: -11.125901222229004
    9. 'nr' → logprob: -11.375901222229004
    10. 'next' → logprob: -11.500901222229004

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019510135753080249
    2. 'in' → logprob: -6.251951217651367
    3. 'range' → logprob: -11.376951217651367
    4. ' ' → logprob: -13.126951217651367
    5. 's' → logprob: -13.376951217651367
    6. '```' → logprob: -13.876951217651367
    7. ',' → logprob: -14.126951217651367
    8. 'n' → logprob: -14.376951217651367
    9. 'd' → logprob: -14.501951217651367
    10. ' range' → logprob: -14.501951217651367

Token 404: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024331748485565
    2. ' range' → logprob: -1.910243272781372
    3. '(range' → logprob: -11.160243034362793
    4. 'chain' → logprob: -12.785243034362793
    5. '   ' → logprob: -14.285243034362793
    6. ' chain' → logprob: -14.535243034362793
    7. ' ' → logprob: -14.785243034362793
    8. '	range' → logprob: -16.03524398803711
    9. 'product' → logprob: -16.16024398803711
    10. 're' → logprob: -16.91024398803711

Token 405: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0006632337463088334
    2. 'j' → logprob: -7.5006632804870605
    3. '(N' → logprob: -9.875662803649902
    4. '(' → logprob: -11.000662803649902
    5. '(i' → logprob: -11.125662803649902
    6. ' j' → logprob: -11.250662803649902
    7. '[j' → logprob: -12.000662803649902
    8. '   ' → logprob: -13.500662803649902
    9. '(r' → logprob: -13.625662803649902
    10. ',j' → logprob: -13.625662803649902

Token 406: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04046984761953354
    2. '+' → logprob: -3.4154698848724365
    3. ',N' → logprob: -5.665469646453857
    4. ',j' → logprob: -6.665469646453857
    5. ' ,' → logprob: -6.790469646453857
    6. ' +' → logprob: -7.040469646453857
    7. '+j' → logprob: -10.665470123291016
    8. 'N' → logprob: -11.415470123291016
    9. '+,' → logprob: -11.665470123291016
    10. 'j' → logprob: -12.040470123291016

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.625016212463379
    3. 'N' → logprob: -13.000016212463379
    4. '+' → logprob: -13.875016212463379
    5. ',' → logprob: -14.000016212463379
    6. '(N' → logprob: -14.000016212463379
    7. '(' → logprob: -14.125016212463379
    8. '
' → logprob: -15.625016212463379
    9. 'k' → logprob: -15.750016212463379
    10. '   ' → logprob: -15.875016212463379

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012201977893710136
    2. '):
' → logprob: -5.01220178604126
    3. '):' → logprob: -6.13720178604126
    4. ',k' → logprob: -6.51220178604126
    5. ',j' → logprob: -7.01220178604126
    6. ' ,' → logprob: -7.63720178604126
    7. ',n' → logprob: -8.887202262878418
    8. '<|end|>' → logprob: -9.137202262878418
    9. ',N' → logprob: -9.887202262878418
    10. ',r' → logprob: -10.887202262878418

Token 409: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006681174854747951
    2. ' N' → logprob: -7.625668048858643
    3. '(N' → logprob: -8.6256685256958
    4. ',N' → logprob: -15.7506685256958
    5. ' (' → logprob: -16.125667572021484
    6. '>N' → logprob: -16.625667572021484
    7. '<N' → logprob: -16.750667572021484
    8. '
' → logprob: -16.750667572021484
    9. '	N' → logprob: -16.875667572021484
    10. ')' → logprob: -17.125667572021484

Token 410: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0921942703134846e-05
    2. ' +' → logprob: -11.50001049041748
    3. '```' → logprob: -15.12501049041748
    4. '+
' → logprob: -15.75001049041748
    5. '()+' → logprob: -16.125011444091797
    6. '1' → logprob: -16.500011444091797
    7. ')+' → logprob: -16.625011444091797
    8. '+k' → logprob: -17.875011444091797
    9. '+j' → logprob: -18.375011444091797
    10. '):
' → logprob: -18.875011444091797

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.682846287731081e-05
    2. '+' → logprob: -9.625066757202148
    3. ' ' → logprob: -15.000066757202148
    4. '```' → logprob: -15.625066757202148
    5. '2' → logprob: -15.750066757202148
    6. ' +' → logprob: -17.00006675720215
    7. '
' → logprob: -17.50006675720215
    8. '   ' → logprob: -18.12506675720215
    9. '

' → logprob: -18.25006675720215
    10. '+
' → logprob: -18.37506675720215

Token 412: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16029439866542816
    2. '):
' → logprob: -1.9102944135665894
    3. ':' → logprob: -9.910294532775879
    4. '):
' → logprob: -11.535294532775879
    5. '+' → logprob: -12.910294532775879
    6. '):

' → logprob: -13.035294532775879
    7. ')' → logprob: -13.285294532775879
    8. '       ' → logprob: -13.660294532775879
    9. '```' → logprob: -14.035294532775879
    10. '}:' → logprob: -14.910294532775879

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04430421069264412
    2. '<|end|>' → logprob: -3.419304132461548
    3. '```' → logprob: -5.669304370880127
    4. ',' → logprob: -6.044304370880127
    5. ' ' → logprob: -6.544304370880127
    6. '               ' → logprob: -7.294304370880127
    7. ' ' → logprob: -7.544304370880127
    8. '            ' → logprob: -7.669304370880127
    9. '[' → logprob: -8.169303894042969
    10. ':' → logprob: -8.544303894042969

Token 414: ' l' (ID: 305)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7922056913375854
    2. '               ' → logprob: -1.6672056913375854
    3. 'dp' → logprob: -2.292205810546875
    4. '           ' → logprob: -2.542205810546875
    5. ' l' → logprob: -2.792205810546875
    6. ' if' → logprob: -3.167205810546875
    7. '<|end|>' → logprob: -3.292205810546875
    8. ' ' → logprob: -5.167205810546875
    9. ' ' → logprob: -5.417205810546875
    10. '            ' → logprob: -5.417205810546875

Token 415: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20091119408607483
    2. ' =' → logprob: -1.9509111642837524
    3. '+=' → logprob: -3.575911283493042
    4. ' +=' → logprob: -4.450911045074463
    5. '+' → logprob: -8.950911521911621
    6. ',' → logprob: -10.450911521911621
    7. '=k' → logprob: -11.075911521911621
    8. '=int' → logprob: -11.575911521911621
    9. '=sum' → logprob: -12.200911521911621
    10. ' +' → logprob: -12.700911521911621

Token 416: ' reduce' (ID: 10389)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.04116680100560188
    2. ' Al' → logprob: -3.4161667823791504
    3. 'dp' → logprob: -5.29116678237915
    4. 'Ar' → logprob: -6.79116678237915
    5. ' dp' → logprob: -7.79116678237915
    6. 'sum' → logprob: -8.166167259216309
    7. 'l' → logprob: -8.416167259216309
    8. 'max' → logprob: -9.791167259216309
    9. ' sum' → logprob: -9.791167259216309
    10. '0' → logprob: -10.041167259216309

Token 417: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0006706207641400397
    2. '(' → logprob: -7.875670433044434
    3. 'lambda' → logprob: -8.375670433044434
    4. '(operator' → logprob: -10.000670433044434
    5. '(
' → logprob: -12.250670433044434
    6. '```' → logprob: -12.750670433044434
    7. '+' → logprob: -13.500670433044434
    8. '(int' → logprob: -13.500670433044434
    9. '=lambda' → logprob: -13.750670433044434
    10. ' (' → logprob: -14.000670433044434

Token 418: ' acc' (ID: 1259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6700006723403931
    2. 'lambda' → logprob: -0.7950006723403931
    3. ' lambda' → logprob: -3.9200005531311035
    4. ' x' → logprob: -4.1700005531311035
    5. 'a' → logprob: -7.7950005531311035
    6. 'acc' → logprob: -7.9200005531311035
    7. 'l' → logprob: -8.045001029968262
    8. 'arr' → logprob: -9.170001029968262
    9. ' acc' → logprob: -9.670001029968262
    10. '(lambda' → logprob: -9.795001029968262

Token 419: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20638532936573029
    2. 'lambda' → logprob: -1.8313853740692139
    3. ' lambda' → logprob: -3.706385374069214
    4. '(lambda' → logprob: -6.831385135650635
    5. '=lambda' → logprob: -8.831385612487793
    6. ' ,' → logprob: -9.331385612487793
    7. '               ' → logprob: -9.456385612487793
    8. '   ' → logprob: -9.581385612487793
    9. '           ' → logprob: -9.831385612487793
    10. ':' → logprob: -10.081385612487793

Token 420: ' ind' (ID: 1383)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.017813215032219887
    2. ' x' → logprob: -5.017813205718994
    3. 'idx' → logprob: -5.767813205718994
    4. 'lambda' → logprob: -5.767813205718994
    5. 'm' → logprob: -6.267813205718994
    6. 'acc' → logprob: -7.142813205718994
    7. ' idx' → logprob: -8.142813682556152
    8. 'y' → logprob: -8.267813682556152
    9. '               ' → logprob: -8.517813682556152
    10. '           ' → logprob: -8.767813682556152

Token 421: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006790801417082548
    2. ',' → logprob: -5.131790637969971
    3. ' :' → logprob: -7.131790637969971
    4. '_:' → logprob: -11.131791114807129
    5. 'acc' → logprob: -12.006791114807129
    6. 'A' → logprob: -12.256791114807129
    7. '=' → logprob: -12.506791114807129
    8. ',:' → logprob: -12.631791114807129
    9. '_acc' → logprob: -12.881791114807129
    10. '0' → logprob: -12.881791114807129

Token 422: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.632889986038208
    2. 'acc' → logprob: -0.757889986038208
    3. 'ac' → logprob: -9.507889747619629
    4. ' al' → logprob: -9.882889747619629
    5. 'al' → logprob: -10.382889747619629
    6. 'Al' → logprob: -10.632889747619629
    7. 'lambda' → logprob: -11.257889747619629
    8. 'x' → logprob: -11.507889747619629
    9. '   ' → logprob: -11.507889747619629
    10. 'Acc' → logprob: -11.507889747619629

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741736352443695
    2. ' +' → logprob: -0.9741736650466919
    3. '+l' → logprob: -10.724173545837402
    4. '+[' → logprob: -11.099173545837402
    5. ' plus' → logprob: -11.474173545837402
    6. '+A' → logprob: -11.599173545837402
    7. '+
' → logprob: -11.974173545837402
    8. '+x' → logprob: -12.849173545837402
    9. ' ' → logprob: -12.974173545837402
    10. '[' → logprob: -13.099173545837402

Token 424: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.2549043595790863
    2. 'A' → logprob: -1.6299043893814087
    3. '(' → logprob: -4.379904270172119
    4. 'Ar' → logprob: -4.504904270172119
    5. '(A' → logprob: -5.754904270172119
    6. ' Al' → logprob: -6.629904270172119
    7. ' A' → logprob: -7.879904270172119
    8. ' (' → logprob: -8.629904747009277
    9. 'sum' → logprob: -9.754904747009277
    10. 'dp' → logprob: -10.254904747009277

Token 425: '[ind' (ID: 68064)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10700736194849014
    2. '[i' → logprob: -2.6070072650909424
    3. '[ind' → logprob: -3.7320072650909424
    4. '[k' → logprob: -6.1070075035095215
    5. 'j' → logprob: -7.6070075035095215
    6. '[' → logprob: -7.7320075035095215
    7. '[l' → logprob: -7.8570075035095215
    8. 'k' → logprob: -10.232007026672363
    9. 'i' → logprob: -10.357007026672363
    10. '[r' → logprob: -10.919507026672363

Token 426: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.441169798374176
    2. '[j' → logprob: -1.1911697387695312
    3. '[i' → logprob: -3.3161697387695312
    4. '[ind' → logprob: -5.066169738769531
    5. '[k' → logprob: -5.566169738769531
    6. '[' → logprob: -5.816169738769531
    7. '[l' → logprob: -6.441169738769531
    8. '   ' → logprob: -8.316169738769531
    9. 'j' → logprob: -8.316169738769531
    10. ')[' → logprob: -8.566169738769531

Token 427: 'i' (ID: 72)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0022314980160444975
    2. 'j' → logprob: -6.377231597900391
    3. 'i' → logprob: -8.12723159790039
    4. 'r' → logprob: -8.87723159790039
    5. ' k' → logprob: -9.87723159790039
    6. 'N' → logprob: -11.25223159790039
    7. '   ' → logprob: -12.00223159790039
    8. 'l' → logprob: -12.25223159790039
    9. ' ' → logprob: -12.25223159790039
    10. ']' → logprob: -13.50223159790039

Token 428: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0011091399937868118
    2. ']' → logprob: -7.5011091232299805
    3. '[ind' → logprob: -7.7511091232299805
    4. '+' → logprob: -10.00110912322998
    5. '-' → logprob: -10.87610912322998
    6. 'if' → logprob: -11.75110912322998
    7. ' ],' → logprob: -12.00110912322998
    8. '[k' → logprob: -12.12610912322998
    9. 'k' → logprob: -12.25110912322998
    10. '[' → logprob: -12.37610912322998

Token 429: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009811222553253174
    2. ' range' → logprob: -4.6348114013671875
    3. '   ' → logprob: -10.384811401367188
    4. 're' → logprob: -12.009811401367188
    5. '	range' → logprob: -12.384811401367188
    6. ' ' → logprob: -12.634811401367188
    7. '       ' → logprob: -12.884811401367188
    8. '    ' → logprob: -13.509811401367188
    9. '           ' → logprob: -14.009811401367188
    10. 'chain' → logprob: -14.009811401367188

Token 430: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.014389962889254093
    2. '(i' → logprob: -4.639389991760254
    3. 'j' → logprob: -5.514389991760254
    4. '(k' → logprob: -7.639389991760254
    5. '(' → logprob: -9.889389991760254
    6. '(l' → logprob: -10.639389991760254
    7. 'i' → logprob: -10.889389991760254
    8. '(N' → logprob: -12.139389991760254
    9. 'k' → logprob: -12.514389991760254
    10. '[j' → logprob: -13.514389991760254

Token 431: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.11719299107789993
    2. ',' → logprob: -2.6171929836273193
    3. 'k' → logprob: -3.3671929836273193
    4. '+' → logprob: -5.867193222045898
    5. '+k' → logprob: -8.992193222045898
    6. ' ,' → logprob: -10.117193222045898
    7. ',j' → logprob: -11.367193222045898
    8. ')' → logprob: -11.492193222045898
    9. '),' → logprob: -11.867193222045898
    10. '(k' → logprob: -11.867193222045898

Token 432: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002071990631520748
    2. ' k' → logprob: -6.252071857452393
    3. 'j' → logprob: -9.25207233428955
    4. '0' → logprob: -11.37707233428955
    5. 'i' → logprob: -11.75207233428955
    6. 'N' → logprob: -12.00207233428955
    7. ' ' → logprob: -12.25207233428955
    8. '   ' → logprob: -12.50207233428955
    9. '	k' → logprob: -13.12707233428955
    10. '
' → logprob: -13.75207233428955

Token 433: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1175801232457161
    2. '+' → logprob: -2.2425801753997803
    3. ',' → logprob: -5.992579936981201
    4. ' +' → logprob: -7.117579936981201
    5. ')' → logprob: -7.992579936981201
    6. ' ),' → logprob: -8.11758041381836
    7. '))' → logprob: -8.24258041381836
    8. '1' → logprob: -9.61758041381836
    9. '```' → logprob: -9.61758041381836
    10. '0' → logprob: -9.74258041381836

Token 434: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019090941175818443
    2. 'l' → logprob: -4.0190911293029785
    3. ' ' → logprob: -7.1440911293029785
    4. ' l' → logprob: -9.26909065246582
    5. '           ' → logprob: -10.51909065246582
    6. 'dp' → logprob: -11.01909065246582
    7. '[]' → logprob: -13.26909065246582
    8. '            ' → logprob: -13.76909065246582
    9. '[' → logprob: -14.01909065246582
    10. ')' → logprob: -14.01909065246582

Token 435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007007574662566185
    2. 'l' → logprob: -5.007007598876953
    3. ' ' → logprob: -8.257007598876953
    4. ' l' → logprob: -11.507007598876953
    5. '           ' → logprob: -11.757007598876953
    6. 'dp' → logprob: -12.007007598876953
    7. '   ' → logprob: -13.757007598876953
    8. '       ' → logprob: -14.007007598876953
    9. '        ' → logprob: -14.194507598876953
    10. '1' → logprob: -14.257007598876953

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005133896600455046
    2. ')
' → logprob: -5.380134105682373
    3. '           ' → logprob: -7.630134105682373
    4. ' )' → logprob: -11.255133628845215
    5. ',' → logprob: -12.130133628845215
    6. ')
' → logprob: -12.505133628845215
    7. '          ' → logprob: -14.255133628845215
    8. ')\
' → logprob: -14.380133628845215
    9. ')+' → logprob: -14.505133628845215
    10. '       ' → logprob: -14.630133628845215

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47232118248939514
    2. ')' → logprob: -1.2223211526870728
    3. '<|end|>' → logprob: -2.7223212718963623
    4. ',' → logprob: -5.097321033477783
    5. '               ' → logprob: -5.972321033477783
    6. '            ' → logprob: -6.097321033477783
    7. '       ' → logprob: -6.722321033477783
    8. ' ' → logprob: -6.847321033477783
    9. ' l' → logprob: -7.472321033477783
    10. '          ' → logprob: -8.097321510314941

Token 438: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.629503071308136
    2. ' r' → logprob: -1.5045030117034912
    3. '           ' → logprob: -2.004503011703491
    4. ')' → logprob: -2.379503011703491
    5. '<|end|>' → logprob: -5.12950325012207
    6. ' ' → logprob: -5.37950325012207
    7. ',' → logprob: -6.12950325012207
    8. ',r' → logprob: -6.37950325012207
    9. '            ' → logprob: -7.12950325012207
    10. '               ' → logprob: -8.12950325012207

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150454342365265
    2. '=' → logprob: -1.7015045881271362
    3. ' +=' → logprob: -9.451504707336426
    4. '+=' → logprob: -11.451504707336426
    5. ' ' → logprob: -14.076504707336426
    6. ',' → logprob: -15.076504707336426
    7. '	' → logprob: -15.326504707336426
    8. '+' → logprob: -15.951504707336426
    9. '    ' → logprob: -15.951504707336426
    10. '        ' → logprob: -15.951504707336426

Token 440: ' sum' (ID: 4215)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12269891798496246
    2. ' reduce' → logprob: -2.622699022293091
    3. 'dp' → logprob: -3.497699022293091
    4. 'sum' → logprob: -5.122698783874512
    5. ' dp' → logprob: -5.497698783874512
    6. ' sum' → logprob: -6.247698783874512
    7. 'r' → logprob: -7.997698783874512
    8. 're' → logprob: -9.622698783874512
    9. '0' → logprob: -10.122698783874512
    10. ' r' → logprob: -10.747698783874512

Token 441: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03950522094964981
    2. '([' → logprob: -4.0395050048828125
    3. '(filter' → logprob: -4.6645050048828125
    4. '(A' → logprob: -5.1645050048828125
    5. '(chain' → logprob: -5.1645050048828125
    6. '(range' → logprob: -8.789505004882812
    7. '((' → logprob: -10.414505004882812
    8. '(lambda' → logprob: -10.414505004882812
    9. '(
' → logprob: -11.414505004882812
    10. '(Filter' → logprob: -12.039505004882812

Token 442: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0030908435583114624
    2. '(' → logprob: -5.878090858459473
    3. 'lambda' → logprob: -8.253090858459473
    4. '(
' → logprob: -11.878090858459473
    5. '(A' → logprob: -11.878090858459473
    6. 'Ar' → logprob: -12.253090858459473
    7. '(int' → logprob: -12.753090858459473
    8. '(float' → logprob: -14.378090858459473
    9. '=lambda' → logprob: -14.628090858459473
    10. 'A' → logprob: -15.003090858459473

Token 443: ' m' (ID: 284)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.020987575873732567
    2. ' lambda' → logprob: -4.270987510681152
    3. 'ind' → logprob: -5.895987510681152
    4. ' ind' → logprob: -6.645987510681152
    5. 'Ar' → logprob: -6.895987510681152
    6. '(lambda' → logprob: -6.895987510681152
    7. 'x' → logprob: -8.020987510681152
    8. 'A' → logprob: -8.895987510681152
    9. 'idx' → logprob: -9.395987510681152
    10. '   ' → logprob: -9.895987510681152

Token 444: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036105208564549685
    2. 'lambda' → logprob: -6.378610610961914
    3. ' :' → logprob: -7.253610610961914
    4. 'ambda' → logprob: -7.628610610961914
    5. ',' → logprob: -8.003610610961914
    6. ' lambda' → logprob: -9.003610610961914
    7. 'r' → logprob: -10.003610610961914
    8. '(lambda' → logprob: -10.628610610961914
    9. ':
' → logprob: -11.003610610961914
    10. 'Ar' → logprob: -11.128610610961914

Token 445: ' Ar' (ID: 1754)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.02933291532099247
    2. 'A' → logprob: -4.279333114624023
    3. ' Ar' → logprob: -4.779333114624023
    4. 'dp' → logprob: -5.529333114624023
    5. 'lambda' → logprob: -6.404333114624023
    6. 'Al' → logprob: -8.404333114624023
    7. '(' → logprob: -8.779333114624023
    8. ' A' → logprob: -9.029333114624023
    9. '   ' → logprob: -9.404333114624023
    10. ' dp' → logprob: -9.529333114624023

Token 446: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.0013870239490643144
    2. '[k' → logprob: -7.626387119293213
    3. 'm' → logprob: -8.001386642456055
    4. '[j' → logprob: -8.126386642456055
    5. '(m' → logprob: -8.876386642456055
    6. '[' → logprob: -10.001386642456055
    7. '[n' → logprob: -11.251386642456055
    8. ' [' → logprob: -11.626386642456055
    9. '[i' → logprob: -11.626386642456055
    10. ',m' → logprob: -12.376386642456055

Token 447: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4656412899494171
    2. '[m' → logprob: -1.5906412601470947
    3. '[j' → logprob: -1.8406412601470947
    4. ',' → logprob: -6.090641498565674
    5. ')[' → logprob: -6.215641498565674
    6. '[i' → logprob: -6.715641498565674
    7. '[k' → logprob: -6.965641498565674
    8. ',j' → logprob: -7.340641498565674
    9. '[' → logprob: -7.715641498565674
    10. 'j' → logprob: -7.715641498565674

Token 448: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.039789486676454544
    2. 'i' → logprob: -3.6647894382476807
    3. 'k' → logprob: -4.53978967666626
    4. 'm' → logprob: -6.16478967666626
    5. '1' → logprob: -8.664789199829102
    6. 'r' → logprob: -9.039789199829102
    7. '(j' → logprob: -9.289789199829102
    8. '(i' → logprob: -10.039789199829102
    9. '(m' → logprob: -10.289789199829102
    10. 'l' → logprob: -10.414789199829102

Token 449: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3835071623325348
    2. '[m' → logprob: -1.2585071325302124
    3. '[j' → logprob: -3.508507251739502
    4. '[k' → logprob: -6.258507251739502
    5. ')[' → logprob: -6.758507251739502
    6. ',' → logprob: -7.383507251739502
    7. '[' → logprob: -8.383506774902344
    8. ']' → logprob: -9.133506774902344
    9. ',j' → logprob: -9.383506774902344
    10. '[r' → logprob: -9.508506774902344

Token 450: 'm' (ID: 76)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2263023555278778
    2. 'm' → logprob: -2.2263023853302
    3. 'k' → logprob: -2.4763023853302
    4. 'i' → logprob: -4.601302146911621
    5. 'r' → logprob: -8.601302146911621
    6. ' j' → logprob: -8.976302146911621
    7. 'l' → logprob: -9.851302146911621
    8. ' m' → logprob: -10.226302146911621
    9. 'n' → logprob: -11.726302146911621
    10. '   ' → logprob: -11.726302146911621

Token 451: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0018733091419562697
    2. '-' → logprob: -6.62687349319458
    3. ']' → logprob: -8.001873016357422
    4. '+' → logprob: -9.876873016357422
    5. 'm' → logprob: -10.001873016357422
    6. ':],' → logprob: -10.501873016357422
    7. ':j' → logprob: -10.876873016357422
    8. ' ],' → logprob: -11.126873016357422
    9. ':' → logprob: -11.626873016357422
    10. '],
' → logprob: -11.876873016357422

Token 452: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004733199253678322
    2. ',m' → logprob: -6.379733085632324
    3. ' if' → logprob: -6.504733085632324
    4. '[m' → logprob: -7.504733085632324
    5. ',k' → logprob: -8.629733085632324
    6. ' ,' → logprob: -8.754733085632324
    7. 'if' → logprob: -9.129733085632324
    8. ' for' → logprob: -9.629733085632324
    9. ',r' → logprob: -9.629733085632324
    10. '[j' → logprob: -10.129733085632324

Token 453: ' (' (ID: 350)
  Prédit: 'Ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.035474441945552826
    2. ' Ar' → logprob: -3.5354745388031006
    3. 'Al' → logprob: -5.2854743003845215
    4. ' Al' → logprob: -8.53547477722168
    5. 'A' → logprob: -8.91047477722168
    6. '(' → logprob: -9.41047477722168
    7. 'r' → logprob: -9.66047477722168
    8. '   ' → logprob: -10.53547477722168
    9. ' (' → logprob: -11.16047477722168
    10. '1' → logprob: -11.16047477722168

Token 454: 'Ar' (ID: 2326)
  Prédit: 'Ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ar' → logprob: -0.0322498083114624
    2. '(' → logprob: -3.657249927520752
    3. 'Al' → logprob: -5.532249927520752
    4. '0' → logprob: -7.032249927520752
    5. ' Ar' → logprob: -7.782249927520752
    6. '(m' → logprob: -8.407249450683594
    7. '(j' → logprob: -8.782249450683594
    8. ' (' → logprob: -9.407249450683594
    9. '(i' → logprob: -10.157249450683594
    10. '(A' → logprob: -10.157249450683594

Token 455: '[j' (ID: 7895)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10432042926549911
    2. '[m' → logprob: -2.354320526123047
    3. ' m' → logprob: -5.854320526123047
    4. '(m' → logprob: -7.854320526123047
    5. 'N' → logprob: -8.229320526123047
    6. '[j' → logprob: -9.104320526123047
    7. 'k' → logprob: -9.354320526123047
    8. '[N' → logprob: -9.604320526123047
    9. '[' → logprob: -10.229320526123047
    10. 'j' → logprob: -10.354320526123047

Token 456: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19369027018547058
    2. '][' → logprob: -2.068690299987793
    3. '[m' → logprob: -3.318690299987793
    4. 'm' → logprob: -4.443690299987793
    5. ' -' → logprob: -7.193690299987793
    6. ']' → logprob: -7.943690299987793
    7. '1' → logprob: -9.068690299987793
    8. '0' → logprob: -9.568690299987793
    9. ' ][' → logprob: -9.568690299987793
    10. '(m' → logprob: -9.693690299987793

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.861651490908116e-05
    2. '2' → logprob: -10.000068664550781
    3. ' ' → logprob: -11.125068664550781
    4. '0' → logprob: -12.250068664550781
    5. '```' → logprob: -14.062568664550781
    6. 'm' → logprob: -14.312568664550781
    7. '3' → logprob: -15.000068664550781
    8. '   ' → logprob: -15.187568664550781
    9. '
' → logprob: -15.312568664550781
    10. '-' → logprob: -15.312568664550781

Token 458: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.114156074821949
    2. '[m' → logprob: -2.2391560077667236
    3. '[' → logprob: -7.989156246185303
    4. ' ][' → logprob: -8.114155769348145
    5. ']' → logprob: -8.364155769348145
    6. '[j' → logprob: -8.614155769348145
    7. 'm' → logprob: -9.114155769348145
    8. '   ' → logprob: -10.739155769348145
    9. '-' → logprob: -10.739155769348145
    10. ')[' → logprob: -11.239155769348145

Token 459: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00024263552040793002
    2. 'j' → logprob: -9.000242233276367
    3. '[m' → logprob: -9.250242233276367
    4. ' m' → logprob: -11.500242233276367
    5. 'i' → logprob: -12.375242233276367
    6. '0' → logprob: -13.000242233276367
    7. 'N' → logprob: -13.500242233276367
    8. 'k' → logprob: -13.875242233276367
    9. '(m' → logprob: -13.875242233276367
    10. '-' → logprob: -14.750242233276367

Token 460: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16399525105953217
    2. '-' → logprob: -2.0389952659606934
    3. '],' → logprob: -4.288995265960693
    4. '][' → logprob: -5.038995265960693
    5. ' -' → logprob: -8.163994789123535
    6. 'if' → logprob: -8.538994789123535
    7. ']),' → logprob: -9.163994789123535
    8. '```' → logprob: -9.413994789123535
    9. '1' → logprob: -10.163994789123535
    10. '0' → logprob: -10.288994789123535

Token 461: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08118776232004166
    2. 'if' → logprob: -2.9561877250671387
    3. '),' → logprob: -3.9561877250671387
    4. ',' → logprob: -5.456187725067139
    5. '],' → logprob: -6.581187725067139
    6. '           ' → logprob: -8.831188201904297
    7. ']),' → logprob: -8.956188201904297
    8. '       ' → logprob: -9.081188201904297
    9. ' ,' → logprob: -9.081188201904297
    10. '```' → logprob: -9.206188201904297

Token 462: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.26309508085250854
    2. 'm' → logprob: -1.5130951404571533
    3. ' j' → logprob: -4.763094902038574
    4. ' m' → logprob: -6.013094902038574
    5. '(j' → logprob: -10.513094902038574
    6. '(m' → logprob: -10.638094902038574
    7. '   ' → logprob: -11.388094902038574
    8. '  ' → logprob: -11.513094902038574
    9. ' ' → logprob: -11.513094902038574
    10. '0' → logprob: -12.138094902038574

Token 463: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011648591607809067
    2. 'else' → logprob: -5.136648654937744
    3. 'm' → logprob: -6.011648654937744
    4. '0' → logprob: -7.011648654937744
    5. '[m' → logprob: -7.636648654937744
    6. '<m' → logprob: -7.636648654937744
    7. ' else' → logprob: -7.761648654937744
    8. ' -' → logprob: -8.761648178100586
    9. ' ' → logprob: -8.886648178100586
    10. '   ' → logprob: -9.136648178100586

Token 464: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16668614745140076
    2. '1' → logprob: -2.4166860580444336
    3. '-' → logprob: -2.7916860580444336
    4. 'm' → logprob: -6.041686058044434
    5. ' ' → logprob: -8.041686058044434
    6. ' -' → logprob: -9.416686058044434
    7. '```' → logprob: -10.041686058044434
    8. '<m' → logprob: -10.416686058044434
    9. '[m' → logprob: -10.541686058044434
    10. 'None' → logprob: -10.916686058044434

Token 465: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.035790447145700455
    2. '[m' → logprob: -3.91079044342041
    3. 'else' → logprob: -4.66079044342041
    4. '>' → logprob: -6.28579044342041
    5. '<m' → logprob: -6.41079044342041
    6. ' >=' → logprob: -7.41079044342041
    7. '[' → logprob: -7.66079044342041
    8. 'm' → logprob: -7.91079044342041
    9. ' else' → logprob: -8.28579044342041
    10. '-' → logprob: -9.03579044342041

Token 466: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11118215322494507
    2. '0' → logprob: -2.48618221282959
    3. ' m' → logprob: -3.86118221282959
    4. ' ' → logprob: -6.98618221282959
    5. '   ' → logprob: -11.86118221282959
    6. 'k' → logprob: -12.36118221282959
    7. 'j' → logprob: -12.48618221282959
    8. '-' → logprob: -13.23618221282959
    9. '[m' → logprob: -13.23618221282959
    10. '1' → logprob: -13.48618221282959

Token 467: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.22735534608364105
    2. 'else' → logprob: -1.6023553609848022
    3. '[m' → logprob: -6.477355480194092
    4. 'm' → logprob: -9.227355003356934
    5. '            ' → logprob: -9.727355003356934
    6. '           ' → logprob: -9.727355003356934
    7. '        ' → logprob: -10.227355003356934
    8. ' ' → logprob: -10.352355003356934
    9. '         ' → logprob: -10.852355003356934
    10. '          ' → logprob: -11.102355003356934

Token 468: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2729639410972595
    2. '0' → logprob: -1.8979640007019043
    3. ' m' → logprob: -2.5229640007019043
    4. ' ' → logprob: -5.272964000701904
    5. 'j' → logprob: -6.522964000701904
    6. 'Ar' → logprob: -6.772964000701904
    7. ' j' → logprob: -7.272964000701904
    8. ' Ar' → logprob: -9.147963523864746
    9. 'None' → logprob: -9.772963523864746
    10. '[m' → logprob: -10.397963523864746

Token 469: '0' (ID: 15)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10447903722524643
    2. '0' → logprob: -2.3544790744781494
    3. ' m' → logprob: -5.60447883605957
    4. 'j' → logprob: -8.47947883605957
    5. 'None' → logprob: -8.60447883605957
    6. ' ' → logprob: -8.85447883605957
    7. '[m' → logprob: -10.72947883605957
    8. ' j' → logprob: -12.35447883605957
    9. '-' → logprob: -12.72947883605957
    10. 'N' → logprob: -12.91697883605957

Token 470: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.024505386129021645
    2. ')),' → logprob: -4.399505615234375
    3. ' ),' → logprob: -4.774505615234375
    4. '[m' → logprob: -7.274505615234375
    5. ')' → logprob: -7.399505615234375
    6. ',' → logprob: -7.649505615234375
    7. '           ' → logprob: -8.024505615234375
    8. '))' → logprob: -8.274505615234375
    9. ')],' → logprob: -8.649505615234375
    10. ' ' → logprob: -9.024505615234375

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018159545958042145
    2. ' range' → logprob: -4.01815938949585
    3. 'j' → logprob: -12.768159866333008
    4. '(range' → logprob: -13.268159866333008
    5. '	range' → logprob: -13.768159866333008
    6. '[j' → logprob: -13.893159866333008
    7. '   ' → logprob: -14.518159866333008
    8. 'm' → logprob: -14.768159866333008
    9. ')' → logprob: -14.768159866333008
    10. ' j' → logprob: -14.893159866333008

Token 472: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.007473636418581009
    2. 'j' → logprob: -5.382473468780518
    3. '(k' → logprob: -5.882473468780518
    4. 'k' → logprob: -10.382473945617676
    5. '(' → logprob: -11.632473945617676
    6. '(m' → logprob: -11.632473945617676
    7. ' j' → logprob: -12.007473945617676
    8. ' (' → logprob: -13.007473945617676
    9. '	j' → logprob: -13.632473945617676
    10. ',j' → logprob: -14.257473945617676

Token 473: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41420385241508484
    2. '+' → logprob: -1.1642038822174072
    3. ',k' → logprob: -3.9142038822174072
    4. ',j' → logprob: -5.664203643798828
    5. ' +' → logprob: -6.414203643798828
    6. ' ,' → logprob: -6.539203643798828
    7. ',m' → logprob: -8.664203643798828
    8. ',
' → logprob: -9.914203643798828
    9. '+k' → logprob: -9.914203643798828
    10. '   ' → logprob: -10.539203643798828

Token 474: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.007451748941093683
    2. '1' → logprob: -5.00745153427124
    3. 'j' → logprob: -7.88245153427124
    4. ' k' → logprob: -8.382452011108398
    5. '(k' → logprob: -10.757452011108398
    6. '+' → logprob: -10.757452011108398
    7. '```' → logprob: -10.757452011108398
    8. '2' → logprob: -11.132452011108398
    9. ',' → logprob: -11.757452011108398
    10. 'N' → logprob: -11.882452011108398

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01260795071721077
    2. ',k' → logprob: -4.387608051300049
    3. ' ,' → logprob: -9.38760757446289
    4. ',j' → logprob: -11.38760757446289
    5. '(k' → logprob: -14.01260757446289
    6. 'k' → logprob: -14.38760757446289
    7. ' k' → logprob: -15.01260757446289
    8. ',m' → logprob: -15.01260757446289
    9. '```' → logprob: -15.01260757446289
    10. ',
' → logprob: -15.26260757446289

Token 476: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0076184566132724285
    2. ' k' → logprob: -4.882618427276611
    3. 'N' → logprob: -13.00761890411377
    4. '           ' → logprob: -13.13261890411377
    5. '	k' → logprob: -14.00761890411377
    6. ' ' → logprob: -14.25761890411377
    7. '            ' → logprob: -14.25761890411377
    8. '               ' → logprob: -14.50761890411377
    9. '                   ' → logprob: -14.50761890411377
    10. '```' → logprob: -14.50761890411377

Token 477: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3071034550666809
    2. '+' → logprob: -1.5571033954620361
    3. ')))' → logprob: -2.932103395462036
    4. ' +' → logprob: -9.432103157043457
    5. ')' → logprob: -9.557103157043457
    6. ' ))' → logprob: -10.182103157043457
    7. '))))' → logprob: -10.307103157043457
    8. '1' → logprob: -10.682103157043457
    9. '))
' → logprob: -10.682103157043457
    10. ')));' → logprob: -10.932103157043457

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. '+' → logprob: -11.000035285949707
    3. ' ' → logprob: -11.000035285949707
    4. '```' → logprob: -14.000035285949707
    5. '2' → logprob: -14.750035285949707
    6. ')' → logprob: -16.50003433227539
    7. '``' → logprob: -16.93753433227539
    8. 'N' → logprob: -17.18753433227539
    9. '
' → logprob: -17.50003433227539
    10. ' +' → logprob: -17.56253433227539

Token 479: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06209361553192139
    2. ')))' → logprob: -2.812093734741211
    3. '))))' → logprob: -10.062093734741211
    4. '))
' → logprob: -10.062093734741211
    5. ')' → logprob: -11.312093734741211
    6. ')):' → logprob: -12.062093734741211
    7. '           ' → logprob: -12.437093734741211
    8. ' ))' → logprob: -12.562093734741211
    9. ')))
' → logprob: -12.812093734741211
    10. '```' → logprob: -12.812093734741211

Token 480: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4071568548679352
    2. ':' → logprob: -2.1571569442749023
    3. '           ' → logprob: -2.6571569442749023
    4. '):' → logprob: -2.6571569442749023
    5. '<|end|>' → logprob: -3.4071569442749023
    6. '       ' → logprob: -3.6571569442749023
    7. ',' → logprob: -5.532156944274902
    8. ' ' → logprob: -6.032156944274902
    9. '               ' → logprob: -6.282156944274902
    10. '   ' → logprob: -6.532156944274902

Token 481: ' dp' (ID: 21546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5520204901695251
    2. '           ' → logprob: -1.05202054977417
    3. '               ' → logprob: -3.92702054977417
    4. '<|end|>' → logprob: -4.42702054977417
    5. ' )' → logprob: -4.55202054977417
    6. '            ' → logprob: -5.17702054977417
    7. '\t' → logprob: -5.55202054977417
    8. ' ' → logprob: -5.67702054977417
    9. ' dp' → logprob: -5.80202054977417
    10. '       ' → logprob: -5.92702054977417

Token 482: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.2524057924747467
    2. '[i' → logprob: -1.7524057626724243
    3. '[k' → logprob: -3.002405881881714
    4. '[m' → logprob: -10.877406120300293
    5. ' [' → logprob: -11.252406120300293
    6. '[' → logprob: -12.252406120300293
    7. '][' → logprob: -12.502406120300293
    8. '[min' → logprob: -14.127406120300293
    9. '[l' → logprob: -14.377406120300293
    10. '[s' → logprob: -14.377406120300293

Token 483: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03928162530064583
    2. '[k' → logprob: -3.2892816066741943
    3. '[' → logprob: -7.039281845092773
    4. '[j' → logprob: -9.164281845092773
    5. ']' → logprob: -9.289281845092773
    6. ' ][' → logprob: -9.789281845092773
    7. ')[' → logprob: -9.914281845092773
    8. '[s' → logprob: -11.789281845092773
    9. '[m' → logprob: -11.914281845092773
    10. '[next' → logprob: -12.414281845092773

Token 484: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.5
    3. ']' → logprob: -17.125
    4. '<|end|>' → logprob: -18.625
    5. ')' → logprob: -18.75
    6. '
' → logprob: -18.875
    7. '```' → logprob: -19.375
    8. ' ' → logprob: -19.75
    9. '[k' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 485: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5153934359550476
    2. '=' → logprob: -1.0153934955596924
    3. ']' → logprob: -3.2653934955596924
    4. ']=' → logprob: -6.390393257141113
    5. ')' → logprob: -7.890393257141113
    6. '=min' → logprob: -9.140393257141113
    7. '+' → logprob: -10.640393257141113
    8. ' ]' → logprob: -10.890393257141113
    9. ')=' → logprob: -11.265393257141113
    10. 'min' → logprob: -11.515393257141113

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576033353805542
    2. ' =' → logprob: -0.826033353805542
    3. '=min' → logprob: -9.326033592224121
    4. '<=' → logprob: -12.951033592224121
    5. 'min' → logprob: -13.576033592224121
    6. '.=' → logprob: -15.326033592224121
    7. ']=' → logprob: -15.951033592224121
    8. '>=' → logprob: -16.076032638549805
    9. '.' → logprob: -16.201032638549805
    10. '	' → logprob: -16.451032638549805

Token 487: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03804183006286621
    2. ' min' → logprob: -3.288041830062866
    3. '	min' → logprob: -15.038042068481445
    4. '           ' → logprob: -17.913042068481445
    5. '(min' → logprob: -18.913042068481445
    6. '   ' → logprob: -18.913042068481445
    7. '[min' → logprob: -18.913042068481445
    8. 'max' → logprob: -19.163042068481445
    9. '=min' → logprob: -19.663042068481445
    10. '```' → logprob: -19.913042068481445

Token 488: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00020747410599142313
    2. '(' → logprob: -8.500207901000977
    3. 'dp' → logprob: -13.000207901000977
    4. '(
' → logprob: -13.375207901000977
    5. ' (' → logprob: -17.375207901000977
    6. '	dp' → logprob: -17.750207901000977
    7. ' dp' → logprob: -18.125207901000977
    8. '(

' → logprob: -18.500207901000977
    9. '(d' → logprob: -18.750207901000977
    10. '(df' → logprob: -19.125207901000977

Token 489: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.096126576769166e-05
    2. '[i' → logprob: -11.000041007995605
    3. '[' → logprob: -11.500041007995605
    4. '(j' → logprob: -12.750041007995605
    5. '[[' → logprob: -13.000041007995605
    6. 'j' → logprob: -13.375041007995605
    7. '[
' → logprob: -13.375041007995605
    8. ' [' → logprob: -13.875041007995605
    9. '```' → logprob: -13.875041007995605
    10. '
' → logprob: -13.875041007995605

Token 490: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013570250011980534
    2. '[j' → logprob: -6.751357078552246
    3. ']' → logprob: -9.501357078552246
    4. '[k' → logprob: -9.626357078552246
    5. ' ][' → logprob: -11.251357078552246
    6. '   ' → logprob: -12.376357078552246
    7. ')[' → logprob: -12.501357078552246
    8. 'j' → logprob: -12.751357078552246
    9. '[' → logprob: -13.001357078552246
    10. '```' → logprob: -13.126357078552246

Token 491: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00012868782505393028
    2. 'j' → logprob: -9.625128746032715
    3. 'i' → logprob: -11.000128746032715
    4. ']' → logprob: -11.500128746032715
    5. ')' → logprob: -11.625128746032715
    6. '[k' → logprob: -11.750128746032715
    7. '][' → logprob: -12.125128746032715
    8. '```' → logprob: -12.625128746032715
    9. 'N' → logprob: -13.750128746032715
    10. '[' → logprob: -13.750128746032715

Token 492: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024620062322355807
    2. ' ,' → logprob: -8.625246047973633
    3. ' +' → logprob: -10.125246047973633
    4. '+' → logprob: -11.250246047973633
    5. ',
' → logprob: -11.750246047973633
    6. '(dp' → logprob: -13.000246047973633
    7. 'dp' → logprob: -13.250246047973633
    8. ' dp' → logprob: -15.125246047973633
    9. '           ' → logprob: -15.375246047973633
    10. '   ' → logprob: -15.500246047973633

Token 493: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12692894041538239
    2. ' dp' → logprob: -2.1269290447235107
    3. '	dp' → logprob: -14.37692928314209
    4. '           ' → logprob: -16.001928329467773
    5. '(dp' → logprob: -16.126928329467773
    6. '               ' → logprob: -17.376928329467773
    7. '_dp' → logprob: -18.251928329467773
    8. ' ' → logprob: -18.626928329467773
    9. '                   ' → logprob: -19.126928329467773
    10. '.dp' → logprob: -19.376928329467773

Token 494: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13177591562271118
    2. 'i' → logprob: -2.6317758560180664
    3. '[j' → logprob: -3.0067758560180664
    4. 'j' → logprob: -6.381775856018066
    5. '][' → logprob: -8.756775856018066
    6. ' i' → logprob: -9.506775856018066
    7. ' [' → logprob: -9.881775856018066
    8. '   ' → logprob: -10.881775856018066
    9. '[' → logprob: -11.006775856018066
    10. ' ' → logprob: -11.881775856018066

Token 495: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1322401463985443
    2. '][' → logprob: -2.132240056991577
    3. 'j' → logprob: -5.382240295410156
    4. ']' → logprob: -7.632240295410156
    5. '[i' → logprob: -9.757240295410156
    6. '[' → logprob: -9.757240295410156
    7. ']+' → logprob: -10.882240295410156
    8. '[k' → logprob: -10.882240295410156
    9. ',j' → logprob: -11.757240295410156
    10. '])' → logprob: -11.882240295410156

Token 496: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.668304245569743e-05
    2. 'k' → logprob: -10.875046730041504
    3. ' j' → logprob: -11.000046730041504
    4. '   ' → logprob: -13.000046730041504
    5. ' ' → logprob: -13.250046730041504
    6. 'm' → logprob: -13.375046730041504
    7. '[j' → logprob: -13.500046730041504
    8. '
' → logprob: -14.000046730041504
    9. '     ' → logprob: -14.500046730041504
    10. 'i' → logprob: -14.875046730041504

Token 497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011442238464951515
    2. ']+' → logprob: -4.886442184448242
    3. '+' → logprob: -5.886442184448242
    4. ' +' → logprob: -6.886442184448242
    5. ' ]' → logprob: -10.761442184448242
    6. ')' → logprob: -12.511442184448242
    7. '+]' → logprob: -12.886442184448242
    8. '[' → logprob: -13.511442184448242
    9. '])' → logprob: -14.886442184448242
    10. ')+' → logprob: -15.261442184448242

Token 498: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016038591042160988
    2. '+' → logprob: -4.141038417816162
    3. ' +
' → logprob: -13.51603889465332
    4. ')' → logprob: -13.76603889465332
    5. '+l' → logprob: -14.64103889465332
    6. '+r' → logprob: -15.64103889465332
    7. '[' → logprob: -15.76603889465332
    8. ' ' → logprob: -15.76603889465332
    9. ' ' → logprob: -15.76603889465332
    10. '```' → logprob: -15.76603889465332

Token 499: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16037340462207794
    2. ' l' → logprob: -1.9103734493255615
    3. 'r' → logprob: -10.28537368774414
    4. ' max' → logprob: -10.53537368774414
    5. 'max' → logprob: -10.66037368774414
    6. ' ' → logprob: -11.16037368774414
    7. ' r' → logprob: -11.66037368774414
    8. 'abs' → logprob: -11.91037368774414
    9. '```' → logprob: -12.72287368774414
    10. ' ' → logprob: -12.78537368774414

Token 500: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12389595061540604
    2. '+' → logprob: -2.4988958835601807
    3. '+r' → logprob: -3.3738958835601807
    4. ')' → logprob: -10.373895645141602
    5. '+l' → logprob: -10.873895645141602
    6. '+k' → logprob: -11.248895645141602
    7. ' +
' → logprob: -11.248895645141602
    8. '+
' → logprob: -12.373895645141602
    9. ' r' → logprob: -12.623895645141602
    10. '```' → logprob: -13.123895645141602

Token 501: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004626530222594738
    2. ' r' → logprob: -5.379626750946045
    3. '
' → logprob: -13.504626274108887
    4. ' ' → logprob: -13.504626274108887
    5. '   ' → logprob: -13.879626274108887
    6. '           ' → logprob: -15.254626274108887
    7. '    ' → logprob: -15.254626274108887
    8. 'l' → logprob: -15.254626274108887
    9. '```' → logprob: -15.504626274108887
    10. '  ' → logprob: -15.629626274108887

Token 502: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000321995816193521
    2. ')
' → logprob: -8.250322341918945
    3. '))' → logprob: -10.625322341918945
    4. '           ' → logprob: -11.125322341918945
    5. ' )' → logprob: -11.125322341918945
    6. '       ' → logprob: -12.875322341918945
    7. ')))' → logprob: -14.000322341918945
    8. '               ' → logprob: -14.625322341918945
    9. '`)' → logprob: -14.625322341918945
    10. ')`' → logprob: -14.625322341918945

Token 503: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01448079477995634
    2. '<|end|>' → logprob: -4.6394805908203125
    3. ']' → logprob: -6.2644805908203125
    4. '}' → logprob: -6.6394805908203125
    5. '```' → logprob: -7.0144805908203125
    6. '[' → logprob: -8.139480590820312
    7. ':' → logprob: -9.014480590820312
    8. '#' → logprob: -9.389480590820312
    9. '\n' → logprob: -11.389480590820312
    10. ' ' → logprob: -11.514480590820312

Token 504: '(min' (ID: 26035)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.009330064989626408
    2. '(' → logprob: -4.8843302726745605
    3. '(sum' → logprob: -7.1343302726745605
    4. '('' → logprob: -7.7593302726745605
    5. '(max' → logprob: -8.384329795837402
    6. '(np' → logprob: -9.634329795837402
    7. 'dp' → logprob: -9.759329795837402
    8. '()' → logprob: -10.009329795837402
    9. '("' → logprob: -10.009329795837402
    10. '(len' → logprob: -10.634329795837402

Token 505: '(map' (ID: 16946)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.000009536743164
    3. 'dp' → logprob: -12.875009536743164
    4. ')' → logprob: -15.500009536743164
    5. '(df' → logprob: -16.000009536743164
    6. '(
' → logprob: -16.125009536743164
    7. '(dt' → logprob: -17.250009536743164
    8. '(min' → logprob: -17.375009536743164
    9. ' dp' → logprob: -17.375009536743164
    10. '(`' → logprob: -17.625009536743164

Token 506: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004134560935199261
    2. '(min' → logprob: -5.754134654998779
    3. '(dp' → logprob: -7.004134654998779
    4. '(' → logprob: -10.379134178161621
    5. 'lambda' → logprob: -11.754134178161621
    6. '(max' → logprob: -12.879134178161621
    7. 'min' → logprob: -13.004134178161621
    8. '(float' → logprob: -13.379134178161621
    9. '(int' → logprob: -13.879134178161621
    10. '(
' → logprob: -14.504134178161621

Token 507: ' idx' (ID: 14016)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06717178970575333
    2. 'lambda' → logprob: -2.817171812057495
    3. ' x' → logprob: -5.817171573638916
    4. 'dp' → logprob: -6.567171573638916
    5. ' lambda' → logprob: -7.442171573638916
    6. '(lambda' → logprob: -9.067172050476074
    7. 'min' → logprob: -10.192172050476074
    8. 'max' → logprob: -10.567172050476074
    9. 'row' → logprob: -11.442172050476074
    10. 'k' → logprob: -11.442172050476074

Token 508: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1034679189324379
    2. '(dp' → logprob: -2.4784679412841797
    3. '(' → logprob: -4.97846794128418
    4. 'dp' → logprob: -5.22846794128418
    5. 'lambda' → logprob: -6.72846794128418
    6. ':' → logprob: -7.60346794128418
    7. ' (' → logprob: -8.10346794128418
    8. '(int' → logprob: -9.85346794128418
    9. ' dp' → logprob: -9.97846794128418
    10. ' lambda' → logprob: -10.47846794128418

Token 509: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.710618905955926e-05
    2. ' dp' → logprob: -9.250097274780273
    3. 'lambda' → logprob: -14.250097274780273
    4. '(dp' → logprob: -15.250097274780273
    5. '   ' → logprob: -19.250097274780273
    6. '	dp' → logprob: -19.500097274780273
    7. 'float' → logprob: -20.750097274780273
    8. 'dx' → logprob: -21.000097274780273
    9. ' ' → logprob: -21.000097274780273
    10. 'dt' → logprob: -21.500097274780273

Token 510: '[idx' (ID: 25582)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00031949623371474445
    2. '[-' → logprob: -8.750319480895996
    3. '[idx' → logprob: -8.875319480895996
    4. '[' → logprob: -11.250319480895996
    5. 'N' → logprob: -12.125319480895996
    6. '[n' → logprob: -14.125319480895996
    7. '[len' → logprob: -14.125319480895996
    8. 'idx' → logprob: -14.750319480895996
    9. '[
' → logprob: -15.375319480895996
    10. '(N' → logprob: -15.375319480895996

Token 511: '][' (ID: 2696)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.05204780027270317
    2. '[idx' → logprob: -3.6770477294921875
    3. '][' → logprob: -4.0520477294921875
    4. '[' → logprob: -5.6770477294921875
    5. '[-' → logprob: -6.5520477294921875
    6. '[len' → logprob: -6.6770477294921875
    7. ',' → logprob: -7.5520477294921875
    8. ')[' → logprob: -7.8020477294921875
    9. '[n' → logprob: -8.427047729492188
    10. '}[' → logprob: -9.052047729492188

Token 512: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.23917081207037e-05
    2. '[N' → logprob: -10.125041961669922
    3. ' N' → logprob: -13.250041961669922
    4. 'idx' → logprob: -15.375041961669922
    5. '   ' → logprob: -16.000041961669922
    6. '[-' → logprob: -16.125041961669922
    7. '(N' → logprob: -17.000041961669922
    8. '
' → logprob: -17.625041961669922
    9. 'n' → logprob: -17.750041961669922
    10. '[idx' → logprob: -17.875041961669922

Token 513: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0005230080569162965
    2. '),' → logprob: -8.00052261352539
    3. ']))' → logprob: -9.62552261352539
    4. ':],' → logprob: -9.75052261352539
    5. ']' → logprob: -10.50052261352539
    6. '])))' → logprob: -11.12552261352539
    7. ']),' → logprob: -11.87552261352539
    8. ' ],' → logprob: -12.25052261352539
    9. '])),' → logprob: -13.12552261352539
    10. '()],' → logprob: -13.37552261352539

Token 514: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -19.125045776367188
    4. '	range' → logprob: -22.750045776367188
    5. '   ' → logprob: -23.375045776367188
    6. '```' → logprob: -24.875045776367188
    7. ' ' → logprob: -25.000045776367188
    8. 'Range' → logprob: -26.000045776367188
    9. 'ranges' → logprob: -26.250045776367188
    10. '  ' → logprob: -26.500045776367188

Token 515: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.125016212463379
    3. 'N' → logprob: -13.875016212463379
    4. '(len' → logprob: -16.750015258789062
    5. '(n' → logprob: -17.375015258789062
    6. '((' → logprob: -17.500015258789062
    7. '(M' → logprob: -17.875015258789062
    8. '(
' → logprob: -18.250015258789062
    9. '(D' → logprob: -20.125015258789062
    10. ',N' → logprob: -20.250015258789062

Token 516: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002658655575942248
    2. ')))' → logprob: -8.375266075134277
    3. ' +' → logprob: -10.375266075134277
    4. '))))' → logprob: -12.875266075134277
    5. '))' → logprob: -13.875266075134277
    6. ',' → logprob: -16.25026512145996
    7. '))),' → logprob: -16.37526512145996
    8. ')));' → logprob: -16.37526512145996
    9. '(N' → logprob: -16.75026512145996
    10. '```' → logprob: -17.25026512145996

Token 517: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5870401859283447
    2. '+' → logprob: -1.3370401859283447
    3. 'N' → logprob: -1.7120401859283447
    4. '0' → logprob: -7.712039947509766
    5. '(N' → logprob: -7.837039947509766
    6. ' N' → logprob: -10.337039947509766
    7. '(' → logprob: -11.212039947509766
    8. '11' → logprob: -12.212039947509766
    9. ' +' → logprob: -12.587039947509766
    10. '6' → logprob: -13.087039947509766

Token 518: '))))' (ID: 57459)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0005779353086836636
    2. '))' → logprob: -8.125577926635742
    3. ')' → logprob: -8.250577926635742
    4. '))))' → logprob: -11.625577926635742
    5. ')))
' → logprob: -12.500577926635742
    6. ')));' → logprob: -12.500577926635742
    7. '+' → logprob: -12.875577926635742
    8. ' ' → logprob: -14.625577926635742
    9. ')+' → logprob: -15.125577926635742
    10. ')))

' → logprob: -15.500577926635742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 516
Tokens correctement prédits (1ère position, stricte): 207
Tokens correctement prédits (1ère position, avec adaptation): 211
Tokens correctement prédits (top 10): 422
Précision stricte (1ère position): 40.12%
Précision adaptée (1ère position): 40.89%
Précision (top 10): 81.78%
================================================================================
