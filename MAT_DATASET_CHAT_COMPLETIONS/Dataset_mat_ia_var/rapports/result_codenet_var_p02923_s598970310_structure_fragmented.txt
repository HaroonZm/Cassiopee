================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_int():
    return int(input())

def read_int_list():
    return list(map(int, input().split()))

def is_non_increasing(a, b):
    return a <= b

def update_count(cnt):
    return cnt + 1

def reset_count():
    return 0

def update_ans(ans, cnt):
    return max(ans, cnt)

def get_max_of_two(a, b):
    return max(a, b)

def process_sequence(n, h):
    ans = 0
    cnt = 0
    for i in range(1, n):
        if is_non_increasing(h[i], h[i-1]):
            cnt = update_count(cnt)
        else:
            ans = update_ans(ans, cnt)
            cnt = reset_count()
    return get_max_of_two(ans, cnt)

def main():
    n = read_int()
    h = read_int_list()
    result = process_sequence(n, h)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_int' (ID: 12285)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01685965433716774
    2. '_' → logprob: -4.141859531402588
    3. '```' → logprob: -8.141860008239746
    4. ' (' → logprob: -8.266860008239746
    5. ':' → logprob: -9.391860008239746
    6. '():' → logprob: -10.266860008239746
    7. '(_' → logprob: -10.891860008239746
    8. 'def' → logprob: -10.891860008239746
    9. '(a' → logprob: -11.391860008239746
    10. '(:' → logprob: -11.766860008239746

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6814407706260681
    2. ':' → logprob: -2.056440830230713
    3. '   ' → logprob: -2.431440830230713
    4. '\' → logprob: -3.181440830230713
    5. '():' → logprob: -3.181440830230713
    6. '\n' → logprob: -3.306440830230713
    7. '    
' → logprob: -3.431440830230713
    8. ':
' → logprob: -3.681440830230713
    9. '(
' → logprob: -4.056440830230713
    10. ':return' → logprob: -4.431440830230713

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2491570711135864
    2. 'return' (adapté à ' return') → logprob: -1.3741570711135864
    3. '```' → logprob: -1.9991570711135864
    4. 'i' → logprob: -2.124156951904297
    5. 'x' → logprob: -2.124156951904297
    6. 'n' → logprob: -3.124156951904297
    7. 'r' → logprob: -4.249156951904297
    8. '`' → logprob: -4.874156951904297
    9. ' return' → logprob: -5.749156951904297
    10. 'v' → logprob: -5.749156951904297

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01089501567184925
    2. 'int' → logprob: -4.885895252227783
    3. ' ' → logprob: -5.760895252227783
    4. ' input' → logprob: -10.135894775390625
    5. '  ' → logprob: -10.635894775390625
    6. ' ' → logprob: -10.885894775390625
    7. '0' → logprob: -11.260894775390625
    8. '(int' → logprob: -11.260894775390625
    9. '<int' → logprob: -11.510894775390625
    10. 'input' → logprob: -12.260894775390625

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008386960835196078
    2. '('' → logprob: -8.000838279724121
    3. '```' → logprob: -8.875838279724121
    4. '("("' → logprob: -9.250838279724121
    5. ''' → logprob: -9.625838279724121
    6. '<|end|>' → logprob: -9.875838279724121
    7. ' (' → logprob: -10.500838279724121
    8. '40' → logprob: -10.875838279724121
    9. '()' → logprob: -10.875838279724121
    10. '(
' → logprob: -11.500838279724121

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9551222324371338
    2. '(' → logprob: -1.0801222324371338
    3. '()' → logprob: -1.3301222324371338
    4. ')' → logprob: -4.830121994018555
    5. '()))' → logprob: -6.455121994018555
    6. '(""))' → logprob: -7.455121994018555
    7. '(
' → logprob: -8.205121994018555
    8. ' ())' → logprob: -8.705121994018555
    9. '('' → logprob: -8.830121994018555
    10. '(()' → logprob: -9.205121994018555

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1121129989624023
    2. '
' → logprob: -1.4871129989624023
    3. '\n' → logprob: -1.6121129989624023
    4. '(' → logprob: -2.9871129989624023
    5. '```' → logprob: -3.1121129989624023
    6. '(
' → logprob: -3.3621129989624023
    7. '#' → logprob: -3.7371129989624023
    8. '()' → logprob: -3.9871129989624023
    9. '' → logprob: -4.112112998962402
    10. '<|end|>' → logprob: -4.862112998962402

Token 10: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.29399043321609497
    2. ' calculate' → logprob: -1.9189903736114502
    3. ' write' → logprob: -2.54399037361145
    4. ' compute' → logprob: -4.793990612030029
    5. ' space' → logprob: -5.043990612030029
    6. ' process' → logprob: -5.293990612030029
    7. ' add' → logprob: -6.418990612030029
    8. ' main' → logprob: -6.668990612030029
    9. ' user' → logprob: -7.293990612030029
    10. '_' → logprob: -7.668990612030029

Token 11: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005071613122709095
    2. '_string' → logprob: -8.250507354736328
    3. '_line' → logprob: -8.625507354736328
    4. '_str' → logprob: -11.000507354736328
    5. ' _' → logprob: -11.375507354736328
    6. '_int' → logprob: -12.375507354736328
    7. '_space' → logprob: -12.875507354736328
    8. '_token' → logprob: -13.000507354736328
    9. '_s' → logprob: -13.250507354736328
    10. '_value' → logprob: -13.250507354736328

Token 12: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2867765426635742
    2. '_' → logprob: -1.7867765426635742
    3. '_s' → logprob: -2.911776542663574
    4. '()' → logprob: -4.286776542663574
    5. '(' → logprob: -4.911776542663574
    6. '_line' → logprob: -6.036776542663574
    7. '_list' → logprob: -6.911776542663574
    8. '_array' → logprob: -7.786776542663574
    9. '_parent' → logprob: -7.911776542663574
    10. ' ' → logprob: -8.411776542663574

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0371817871928215
    2. '_' → logprob: -3.537181854248047
    3. '()' → logprob: -6.662181854248047
    4. '():' → logprob: -6.787181854248047
    5. '("("' → logprob: -6.787181854248047
    6. '```' → logprob: -7.412181854248047
    7. '(_)' → logprob: -7.912181854248047
    8. '(_' → logprob: -7.912181854248047
    9. '(()' → logprob: -8.537181854248047
    10. '<|end|>' → logprob: -8.849681854248047

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021708611398935318
    2. ' return' → logprob: -4.3967084884643555
    3. 'return' → logprob: -5.0217084884643555
    4. '(' → logprob: -7.2717084884643555
    5. '[]' → logprob: -7.5217084884643555
    6. '[' → logprob: -7.8967084884643555
    7. '()' → logprob: -8.146708488464355
    8. '    ' → logprob: -8.646708488464355
    9. '    
' → logprob: -8.896708488464355
    10. '(return' → logprob: -9.021708488464355

Token 15: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1406693011522293
    2. 'return' (adapté à ' return') → logprob: -2.140669345855713
    3. '   ' → logprob: -5.015669345855713
    4. ' list' → logprob: -5.265669345855713
    5. 'list' → logprob: -6.390669345855713
    6. '[]' → logprob: -9.265668869018555
    7. ' ' → logprob: -10.640668869018555
    8. ' []' → logprob: -11.140668869018555
    9. ' lst' → logprob: -11.890668869018555
    10. 'lst' → logprob: -12.140668869018555

Token 16: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.612435519695282
    2. 'list' → logprob: -0.987435519695282
    3. '[list' → logprob: -3.3624355792999268
    4. ' [' → logprob: -3.8624355792999268
    5. '[int' → logprob: -4.112435340881348
    6. '[' → logprob: -4.362435340881348
    7. '[input' → logprob: -7.487435340881348
    8. '[List' → logprob: -10.362435340881348
    9. 'int' → logprob: -11.612435340881348
    10. ' ' → logprob: -12.112435340881348

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00492241233587265
    2. '(int' → logprob: -5.504922389984131
    3. '(input' → logprob: -7.629922389984131
    4. '(map' → logprob: -8.254922866821289
    5. '(

' → logprob: -11.129922866821289
    6. '(range' → logprob: -11.254922866821289
    7. '(eval' → logprob: -11.379922866821289
    8. ' (' → logprob: -11.629922866821289
    9. '(read' → logprob: -12.004922866821289
    10. '("("' → logprob: -12.004922866821289

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021269454155117273
    2. '(' → logprob: -6.252127170562744
    3. 'int' → logprob: -8.627126693725586
    4. '<int' → logprob: -12.002126693725586
    5. '=int' → logprob: -12.502126693725586
    6. ',int' → logprob: -13.002126693725586
    7. ' int' → logprob: -13.002126693725586
    8. '(
' → logprob: -13.127126693725586
    9. ')' → logprob: -13.877126693725586
    10. '   ' → logprob: -14.502126693725586

Token 19: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.669369637966156
    2. '(input' → logprob: -1.1693696975708008
    3. ',' → logprob: -1.7943696975708008
    4. 'input' → logprob: -4.919369697570801
    5. '(' → logprob: -6.419369697570801
    6. ' ,' → logprob: -6.669369697570801
    7. ' input' → logprob: -7.669369697570801
    8. ' (' → logprob: -8.5443696975708
    9. '=input' → logprob: -9.2943696975708
    10. '))' → logprob: -9.6693696975708

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043121255934238434
    2. ' input' → logprob: -3.168121337890625
    3. '(input' → logprob: -9.418121337890625
    4. '   ' → logprob: -10.418121337890625
    5. ',input' → logprob: -12.543121337890625
    6. '	input' → logprob: -13.418121337890625
    7. '=input' → logprob: -13.418121337890625
    8. '<input' → logprob: -13.668121337890625
    9. ')' → logprob: -13.918121337890625
    10. ' ' → logprob: -13.918121337890625

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023298633750528097
    2. '()))' → logprob: -6.6273298263549805
    3. '()' → logprob: -7.0023298263549805
    4. '))' → logprob: -9.75232982635498
    5. '())' → logprob: -10.75232982635498
    6. ')' → logprob: -12.50232982635498
    7. ' ().' → logprob: -12.75232982635498
    8. '()));' → logprob: -13.25232982635498
    9. '())))' → logprob: -13.50232982635498
    10. ' ()' → logprob: -14.12732982635498

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011727249948307872
    2. 'strip' → logprob: -6.7511725425720215
    3. 'rstrip' → logprob: -13.00117301940918
    4. ' split' → logprob: -15.50117301940918
    5. 'spl' → logprob: -17.62617301940918
    6. '(split' → logprob: -17.75117301940918
    7. 'read' → logprob: -18.12617301940918
    8. ')' → logprob: -19.25117301940918
    9. 's' → logprob: -19.75117301940918
    10. ' strip' → logprob: -20.87617301940918

Token 23: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009819013066589832
    2. '))' → logprob: -4.884819030761719
    3. '()' → logprob: -6.384819030761719
    4. '())' → logprob: -7.884819030761719
    5. '())))' → logprob: -9.384819030761719
    6. '()))
' → logprob: -10.634819030761719
    7. '(' → logprob: -11.134819030761719
    8. ')))' → logprob: -11.384819030761719
    9. '()))

' → logprob: -12.009819030761719
    10. '   ' → logprob: -13.259819030761719

Token 24: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052327271550893784
    2. 'd' → logprob: -3.0523271560668945
    3. '#' → logprob: -5.9273271560668945
    4. 'de' → logprob: -7.5523271560668945
    5. 'n' → logprob: -9.302327156066895
    6. '\' → logprob: -9.302327156066895
    7. '
' → logprob: -9.427327156066895
    8. 'class' → logprob: -9.427327156066895
    9. '```' → logprob: -10.052327156066895
    10. 'a' → logprob: -10.427327156066895

Token 25: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0030385255813599
    2. ' write' → logprob: -1.0030385255813599
    3. ' read' → logprob: -1.3780385255813599
    4. 'write' → logprob: -5.50303840637207
    5. 'read' → logprob: -5.75303840637207
    6. ' solve' → logprob: -6.50303840637207
    7. 'main' → logprob: -6.62803840637207
    8. ' print' → logprob: -6.87803840637207
    9. ' sum' → logprob: -6.87803840637207
    10. ' factorial' → logprob: -6.87803840637207

Token 26: '_non' (ID: 52193)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.2415134161710739
    2. '_pal' → logprob: -1.6165133714675903
    3. '_' → logprob: -4.366513252258301
    4. '_valid' → logprob: -6.616513252258301
    5. '_sorted' → logprob: -7.366513252258301
    6. '_even' → logprob: -8.6165132522583
    7. ' _' → logprob: -8.9915132522583
    8. '_s' → logprob: -8.9915132522583
    9. '_pr' → logprob: -9.2415132522583
    10. '_bal' → logprob: -9.3665132522583

Token 27: '_in' (ID: 2267)
  Prédit: '_negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_negative' → logprob: -0.3928702175617218
    2. '_de' → logprob: -2.1428701877593994
    3. 'de' → logprob: -2.6428701877593994
    4. '_empty' → logprob: -2.7678701877593994
    5. 'negative' → logprob: -3.2678701877593994
    6. '_' → logprob: -4.0178704261779785
    7. 'e' → logprob: -5.0178704261779785
    8. 'empty' → logprob: -5.3928704261779785
    9. '_prime' → logprob: -6.8928704261779785
    10. '_zero' → logprob: -7.0178704261779785

Token 28: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -2.951771421066951e-05
    2. 'c' → logprob: -10.750029563903809
    3. 'crement' → logprob: -12.500029563903809
    4. 'crease' → logprob: -13.125029563903809
    5. 'cre' → logprob: -13.625029563903809
    6. 'cr' → logprob: -15.000029563903809
    7. 'de' → logprob: -15.375029563903809
    8. '_' → logprob: -16.250028610229492
    9. 't' → logprob: -16.625028610229492
    10. ' decreasing' → logprob: -16.750028610229492

Token 29: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15178753435611725
    2. '_' → logprob: -2.151787519454956
    3. '(_)' → logprob: -4.276787757873535
    4. '(_' → logprob: -4.901787757873535
    5. '_(' → logprob: -7.776787757873535
    6. '_sequence' → logprob: -8.026787757873535
    7. '()' → logprob: -8.276787757873535
    8. '('_' → logprob: -8.401787757873535
    9. ')' → logprob: -8.526787757873535
    10. '_list' → logprob: -8.651787757873535

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6108594536781311
    2. ')):' → logprob: -0.9858594536781311
    3. ')' → logprob: -3.1108593940734863
    4. '_' → logprob: -4.485859394073486
    5. '[' → logprob: -4.485859394073486
    6. '))' → logprob: -5.110859394073486
    7. '[]):' → logprob: -5.610859394073486
    8. ']):' → logprob: -6.860859394073486
    9. ' ):' → logprob: -6.860859394073486
    10. '>):' → logprob: -6.860859394073486

Token 31: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.09212696552276611
    2. 'b' → logprob: -2.4671268463134766
    3. ')' → logprob: -6.717126846313477
    4. ' a' → logprob: -6.842126846313477
    5. 'a' → logprob: -8.342126846313477
    6. ' n' → logprob: -8.592126846313477
    7. ' ' → logprob: -9.217126846313477
    8. ' )' → logprob: -9.467126846313477
    9. ')b' → logprob: -10.217126846313477
    10. ' i' → logprob: -10.342126846313477

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006368120666593313
    2. ',' → logprob: -5.506368160247803
    3. ')' → logprob: -6.381368160247803
    4. '=' → logprob: -8.131367683410645
    5. ' ):' → logprob: -8.631367683410645
    6. '):
' → logprob: -10.006367683410645
    7. '_' → logprob: -11.006367683410645
    8. ')):' → logprob: -11.131367683410645
    9. ' ' → logprob: -11.631367683410645
    10. '>):' → logprob: -11.756367683410645

Token 33: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3588213622570038
    2. '   ' → logprob: -1.6088213920593262
    3. '(a' → logprob: -2.858821392059326
    4. ':' → logprob: -3.983821392059326
    5. ',' → logprob: -5.483821392059326
    6. '(' → logprob: -5.608821392059326
    7. '  ' → logprob: -6.108821392059326
    8. '>=' → logprob: -6.233821392059326
    9. '<|end|>' → logprob: -6.358821392059326
    10. 'a' → logprob: -6.358821392059326

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.561684787273407
    2. '   ' → logprob: -0.936684787273407
    3. 'return' (adapté à ' return') → logprob: -4.311684608459473
    4. ' ' → logprob: -4.936684608459473
    5. ')' → logprob: -5.186684608459473
    6. ':' → logprob: -6.061684608459473
    7. ' )' → logprob: -6.186684608459473
    8. ' a' → logprob: -6.436684608459473
    9. '    ' → logprob: -6.686684608459473
    10. '<|end|>' → logprob: -6.686684608459473

Token 35: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.13395744562149048
    2. 'a' → logprob: -2.3839573860168457
    3. ' b' → logprob: -3.5089573860168457
    4. 'b' → logprob: -5.758957386016846
    5. ' ' → logprob: -9.508957862854004
    6. ' (' → logprob: -11.758957862854004
    7. '	a' → logprob: -11.758957862854004
    8. '(a' → logprob: -12.258957862854004
    9. '   ' → logprob: -13.008957862854004
    10. ' ' → logprob: -13.133957862854004

Token 36: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3878709375858307
    2. ' >=' → logprob: -1.1378709077835083
    3. '>' → logprob: -7.012870788574219
    4. ' >' → logprob: -10.512870788574219
    5. ' ' → logprob: -10.762870788574219
    6. '<=' → logprob: -11.387870788574219
    7. ')>=' → logprob: -11.512870788574219
    8. '">' → logprob: -11.762870788574219
    9. ']>=' → logprob: -12.387870788574219
    10. ' <=' → logprob: -12.762870788574219

Token 37: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007100477814674377
    2. ' b' → logprob: -7.2507100105285645
    3. '	b' → logprob: -16.625709533691406
    4. ' ' → logprob: -17.125709533691406
    5. ')b' → logprob: -19.125709533691406
    6. '_b' → logprob: -19.625709533691406
    7. '   ' → logprob: -19.625709533691406
    8. ' б' → logprob: -19.750709533691406
    9. '<|end|>' → logprob: -20.750709533691406
    10. '>b' → logprob: -20.875709533691406

Token 38: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09738259762525558
    2. 'def' → logprob: -2.8473825454711914
    3. ' and' → logprob: -4.222382545471191
    4. 'and' → logprob: -5.222382545471191
    5. '_' → logprob: -5.472382545471191
    6. '<|end|>' → logprob: -5.722382545471191
    7. ')' → logprob: -6.597382545471191
    8. ':return' → logprob: -7.222382545471191
    9. '```' → logprob: -7.472382545471191
    10. ':def' → logprob: -7.722382545471191

Token 40: ' update' (ID: 4027)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.43288660049438477
    2. ' is' → logprob: -1.0578866004943848
    3. ' main' → logprob: -7.307886600494385
    4. 'main' → logprob: -7.432886600494385
    5. 'non' → logprob: -7.682886600494385
    6. 'solve' → logprob: -8.182886123657227
    7. 'reverse' → logprob: -8.557886123657227
    8. ' non' → logprob: -8.682886123657227
    9. 'max' → logprob: -8.682886123657227
    10. 'i' → logprob: -8.682886123657227

Token 41: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7412658333778381
    2. '(' → logprob: -1.2412657737731934
    3. '_max' → logprob: -2.4912657737731934
    4. '(a' → logprob: -3.8662657737731934
    5. '_array' → logprob: -3.9912657737731934
    6. '_value' → logprob: -3.9912657737731934
    7. '_values' → logprob: -4.741265773773193
    8. '_list' → logprob: -4.991265773773193
    9. '(i' → logprob: -5.116265773773193
    10. '(_' → logprob: -5.616265773773193

Token 42: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5860852003097534
    2. '(count' → logprob: -0.8360852003097534
    3. '_count' → logprob: -5.711085319519043
    4. 's' → logprob: -6.086085319519043
    5. '(_' → logprob: -6.711085319519043
    6. '(a' → logprob: -7.711085319519043
    7. '(current' → logprob: -7.836085319519043
    8. '_counts' → logprob: -7.961085319519043
    9. '(prev' → logprob: -8.086085319519043
    10. '(counter' → logprob: -8.211085319519043

Token 43: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09536108374595642
    2. 's' → logprob: -2.7203609943389893
    3. '[' → logprob: -4.220361232757568
    4. '_,' → logprob: -5.220361232757568
    5. '):' → logprob: -6.095361232757568
    6. ')' → logprob: -6.720361232757568
    7. '(' → logprob: -8.34536075592041
    8. ' ,' → logprob: -8.34536075592041
    9. ',count' → logprob: -8.72036075592041
    10. '[count' → logprob: -9.59536075592041

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001673061487963423
    2. '```' → logprob: -9.625166893005371
    3. 'cnt' → logprob: -10.875166893005371
    4. '       ' → logprob: -11.375166893005371
    5. '[' → logprob: -11.500166893005371
    6. '(cnt' → logprob: -11.875166893005371
    7. '[cnt' → logprob: -11.875166893005371
    8. 'return' → logprob: -12.125166893005371
    9. ' cnt' → logprob: -12.250166893005371
    10. '    
' → logprob: -12.375166893005371

Token 45: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04852161556482315
    2. 'cnt' → logprob: -3.4235215187072754
    3. ' cnt' → logprob: -4.673521518707275
    4. ' return' → logprob: -6.048521518707275
    5. 'return' (adapté à ' return') → logprob: -6.173521518707275
    6. 'def' → logprob: -7.798521518707275
    7. '[cnt' → logprob: -9.423521995544434
    8. '```' → logprob: -9.548521995544434
    9. ' for' → logprob: -9.798521995544434
    10. ' if' → logprob: -9.923521995544434

Token 46: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5762082934379578
    2. 'cnt' → logprob: -0.8262082934379578
    3. '   ' → logprob: -9.326208114624023
    4. '(cnt' → logprob: -9.576208114624023
    5. 'count' → logprob: -10.076208114624023
    6. '	cnt' → logprob: -10.826208114624023
    7. '[cnt' → logprob: -11.451208114624023
    8. ' count' → logprob: -11.576208114624023
    9. '1' → logprob: -11.701208114624023
    10. ' ' → logprob: -12.451208114624023

Token 47: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5234395861625671
    2. '+' → logprob: -0.8984395861625671
    3. ' if' → logprob: -8.773439407348633
    4. '<|end|>' → logprob: -10.148439407348633
    5. 'if' → logprob: -10.398439407348633
    6. 'def' → logprob: -10.648439407348633
    7. ' +=' → logprob: -11.648439407348633
    8. ' ' → logprob: -11.773439407348633
    9. ' +
' → logprob: -11.773439407348633
    10. '+=' → logprob: -12.023439407348633

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017038638470694423
    2. ' ' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.001704216003418
    4. '2' → logprob: -14.501704216003418
    5. '0' → logprob: -16.1267032623291
    6. '  ' → logprob: -16.1892032623291
    7. '-' → logprob: -17.4392032623291
    8. '<|end|>' → logprob: -17.7517032623291
    9. 'def' → logprob: -18.0017032623291
    10. '+' → logprob: -18.0642032623291

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -15.50000286102295
    4. '2' → logprob: -16.625001907348633
    5. '-' → logprob: -17.375001907348633
    6. '```' → logprob: -17.625001907348633
    7. '0' → logprob: -17.625001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '<|end|>' → logprob: -18.812501907348633
    10. '  ' → logprob: -19.000001907348633

Token 50: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11555888503789902
    2. '<|end|>' → logprob: -2.2405588626861572
    3. '<|end|>' → logprob: -6.490559101104736
    4. '

' → logprob: -7.865559101104736
    5. '
' → logprob: -7.990559101104736
    6. ' def' → logprob: -9.240558624267578
    7. '```' → logprob: -9.615558624267578
    8. '\' → logprob: -9.740558624267578
    9. '_' → logprob: -10.115558624267578
    10. '\n' → logprob: -10.365558624267578

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014858200447633862
    2. '<|end|>' → logprob: -7.126485824584961
    3. '
' → logprob: -7.876485824584961
    4. 'a' → logprob: -9.001485824584961
    5. '<|end|>' → logprob: -10.251485824584961
    6. 'if' → logprob: -10.501485824584961
    7. '```' → logprob: -11.001485824584961
    8. '

' → logprob: -11.251485824584961
    9. 'n' → logprob: -11.376485824584961
    10. '#' → logprob: -11.626485824584961

Token 52: ' reset' (ID: 12820)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.34134969115257263
    2. 'main' → logprob: -2.9663496017456055
    3. ' count' → logprob: -2.9663496017456055
    4. ' find' → logprob: -3.5913496017456055
    5. ' is' → logprob: -3.7163496017456055
    6. ' solve' → logprob: -3.7163496017456055
    7. ' longest' → logprob: -4.0913496017456055
    8. ' max' → logprob: -4.0913496017456055
    9. ' check' → logprob: -4.2163496017456055
    10. 'count' → logprob: -4.5913496017456055

Token 53: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00758343655616045
    2. '_' → logprob: -5.8825836181640625
    3. '_counter' → logprob: -6.1325836181640625
    4. '_cnt' → logprob: -6.1325836181640625
    5. '_counts' → logprob: -9.007583618164062
    6. '(' → logprob: -9.632583618164062
    7. '(_' → logprob: -9.757583618164062
    8. ')_' → logprob: -10.757583618164062
    9. '_value' → logprob: -10.882583618164062
    10. '```' → logprob: -10.882583618164062

Token 54: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006824774201959372
    2. '(' → logprob: -5.506824970245361
    3. '():
' → logprob: -6.131824970245361
    4. '()' → logprob: -7.631824970245361
    5. '(cnt' → logprob: -9.756824493408203
    6. '():

' → logprob: -11.381824493408203
    7. ' ():' → logprob: -12.006824493408203
    8. '()(' → logprob: -13.131824493408203
    9. '():
' → logprob: -13.256824493408203
    10. '(
' → logprob: -13.881824493408203

Token 55: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002501698210835457
    2. '   ' → logprob: -6.002501487731934
    3. ' ' → logprob: -10.627501487731934
    4. 'return' → logprob: -13.377501487731934
    5. '  ' → logprob: -16.50250244140625
    6. 'def' → logprob: -17.25250244140625
    7. '```' → logprob: -17.50250244140625
    8. ' return' → logprob: -17.87750244140625
    9. '    ' → logprob: -17.87750244140625
    10. '1' → logprob: -18.00250244140625

Token 56: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.625007629394531
    3. 'return' (adapté à ' return') → logprob: -12.875007629394531
    4. '   ' → logprob: -13.125007629394531
    5. '1' → logprob: -16.62500762939453
    6. ' return' → logprob: -18.62500762939453
    7. '```' → logprob: -19.25000762939453
    8. '  ' → logprob: -20.00000762939453
    9. 'def' → logprob: -20.37500762939453
    10. '    ' → logprob: -20.62500762939453

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006618033512495458
    2. '1' → logprob: -7.750661849975586
    3. ' ' → logprob: -8.375661849975586
    4. '   ' → logprob: -14.250661849975586
    5. '  ' → logprob: -17.000661849975586
    6. '```' → logprob: -18.188161849975586
    7. '۰' → logprob: -18.188161849975586
    8. '    ' → logprob: -18.250661849975586
    9. ' ' → logprob: -19.313161849975586
    10. '<|end|>' → logprob: -19.375661849975586

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001505578518845141
    2. '1' → logprob: -6.501505374908447
    3. ' ' → logprob: -12.626505851745605
    4. '   ' → logprob: -17.87650489807129
    5. '۰' → logprob: -18.50150489807129
    6. '```' → logprob: -18.68900489807129
    7. '...' → logprob: -19.37650489807129
    8. '０' → logprob: -19.43900489807129
    9. '  ' → logprob: -19.50150489807129
    10. '(' → logprob: -19.56400489807129

Token 59: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002406090497970581
    2. '<|end|>' → logprob: -9.000240325927734
    3. '```' → logprob: -10.625240325927734
    4. 'n' → logprob: -11.500240325927734
    5. 'from' → logprob: -11.500240325927734
    6. '
' → logprob: -11.625240325927734
    7. 'a' → logprob: -11.750240325927734
    8. '

' → logprob: -11.750240325927734
    9. 'if' → logprob: -12.125240325927734
    10. '<|end|>' → logprob: -12.125240325927734

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017869214061647654
    2. 'n' → logprob: -6.501786708831787
    3. 'a' → logprob: -9.001787185668945
    4. '
' → logprob: -9.376787185668945
    5. '```' → logprob: -10.626787185668945
    6. '

' → logprob: -11.376787185668945
    7. '#' → logprob: -12.001787185668945
    8. 'if' → logprob: -12.126787185668945
    9. '\' → logprob: -12.376787185668945
    10. 'N' → logprob: -12.626787185668945

Token 61: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8019455671310425
    2. ' longest' → logprob: -1.5519455671310425
    3. ' count' → logprob: -2.801945686340332
    4. ' find' → logprob: -2.801945686340332
    5. 'long' → logprob: -3.051945686340332
    6. 'main' → logprob: -3.301945686340332
    7. ' check' → logprob: -3.426945686340332
    8. 'count' → logprob: -4.051945686340332
    9. ' max' → logprob: -4.301945686340332
    10. ' is' → logprob: -4.551945686340332

Token 62: '_ans' (ID: 146254)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4665164351463318
    2. '_max' → logprob: -1.0915164947509766
    3. '_' → logprob: -4.216516494750977
    4. '_counter' → logprob: -5.466516494750977
    5. '_min' → logprob: -5.716516494750977
    6. '_non' → logprob: -5.966516494750977
    7. '_value' → logprob: -5.966516494750977
    8. 'count' → logprob: -7.341516494750977
    9. '_length' → logprob: -7.341516494750977
    10. 'max' → logprob: -7.466516494750977

Token 63: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23662960529327393
    2. '(cnt' → logprob: -2.4866294860839844
    3. '(count' → logprob: -2.7366294860839844
    4. '(ans' → logprob: -3.4866294860839844
    5. '(max' → logprob: -3.9866294860839844
    6. '(prev' → logprob: -5.736629486083984
    7. '(a' → logprob: -5.861629486083984
    8. '(current' → logprob: -5.986629486083984
    9. '(value' → logprob: -7.111629486083984
    10. ' (' → logprob: -7.486629486083984

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003294871188700199
    2. ' ,' → logprob: -5.878294944763184
    3. '):' → logprob: -7.753294944763184
    4. ',count' → logprob: -11.128294944763184
    5. '   ' → logprob: -11.253294944763184
    6. ',max' → logprob: -12.503294944763184
    7. ',value' → logprob: -12.753294944763184
    8. ',
' → logprob: -12.753294944763184
    9. ',new' → logprob: -12.878294944763184
    10. ',n' → logprob: -13.003294944763184

Token 65: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.44215425848960876
    2. ' count' → logprob: -1.1921542882919312
    3. 'cnt' → logprob: -3.6921541690826416
    4. 'count' → logprob: -3.8171541690826416
    5. ' current' → logprob: -6.192154407501221
    6. ' max' → logprob: -7.442154407501221
    7. ')' → logprob: -7.567154407501221
    8. ' val' → logprob: -7.567154407501221
    9. ' new' → logprob: -7.817154407501221
    10. '   ' → logprob: -7.817154407501221

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011308702640235424
    2. '):
' → logprob: -4.636308670043945
    3. ',' → logprob: -6.511308670043945
    4. ' ):' → logprob: -10.261308670043945
    5. '   ' → logprob: -11.886308670043945
    6. '):
' → logprob: -11.886308670043945
    7. ':' → logprob: -12.136308670043945
    8. ')' → logprob: -12.261308670043945
    9. ' ' → logprob: -13.511308670043945
    10. '=' → logprob: -14.386308670043945

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003133036196231842
    2. ' return' → logprob: -6.2531328201293945
    3. 'return' → logprob: -7.5031328201293945
    4. 'max' → logprob: -7.8781328201293945
    5. ' max' → logprob: -8.253132820129395
    6. ' if' → logprob: -12.378132820129395
    7. ' ans' → logprob: -13.253132820129395
    8. ')' → logprob: -13.378132820129395
    9. '```' → logprob: -14.003132820129395
    10. '   ' → logprob: -14.128132820129395

Token 68: ' return' (ID: 622)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5687178373336792
    2. '   ' → logprob: -1.3187178373336792
    3. 'return' (adapté à ' return') → logprob: -2.4437179565429688
    4. ' max' → logprob: -2.6937179565429688
    5. ' return' → logprob: -4.443717956542969
    6. ' ' → logprob: -10.818717956542969
    7. '	max' → logprob: -11.818717956542969
    8. '  ' → logprob: -12.193717956542969
    9. '	return' → logprob: -12.193717956542969
    10. 'ans' → logprob: -12.568717956542969

Token 69: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006812931038439274
    2. ' max' → logprob: -5.006813049316406
    3. 'ans' → logprob: -9.381813049316406
    4. '   ' → logprob: -11.756813049316406
    5. ' ans' → logprob: -13.256813049316406
    6. 'min' → logprob: -13.506813049316406
    7. ' ' → logprob: -14.006813049316406
    8. '	max' → logprob: -14.256813049316406
    9. '(max' → logprob: -14.506813049316406
    10. '[max' → logprob: -15.756813049316406

Token 70: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020461321400944144
    2. '(' → logprob: -8.500205039978027
    3. '(answer' → logprob: -14.250205039978027
    4. ' (' → logprob: -14.875205039978027
    5. 'ans' → logprob: -17.12520408630371
    6. '	ans' → logprob: -17.37520408630371
    7. '_ans' → logprob: -18.00020408630371
    8. '```' → logprob: -18.12520408630371
    9. '(abs' → logprob: -18.25020408630371
    10. '(
' → logprob: -18.25020408630371

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022988072305452079
    2. ' ,' → logprob: -8.500229835510254
    3. ',c' → logprob: -10.750229835510254
    4. '(cnt' → logprob: -12.875229835510254
    5. ')' → logprob: -14.125229835510254
    6. ',count' → logprob: -14.250229835510254
    7. 'cnt' → logprob: -15.000229835510254
    8. '   ' → logprob: -16.00023078918457
    9. '	cnt' → logprob: -16.00023078918457
    10. '[cnt' → logprob: -16.25023078918457

Token 72: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.20142436027526855
    2. ' cnt' → logprob: -1.7014243602752686
    3. '	cnt' → logprob: -12.201424598693848
    4. '(cnt' → logprob: -12.451424598693848
    5. '[cnt' → logprob: -14.076424598693848
    6. '   ' → logprob: -14.076424598693848
    7. 'count' → logprob: -15.826424598693848
    8. '_cnt' → logprob: -16.07642364501953
    9. '    ' → logprob: -16.07642364501953
    10. ' ' → logprob: -16.32642364501953

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.500001907348633
    4. ')return' → logprob: -17.625001907348633
    5. '}' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '))' → logprob: -18.250001907348633
    8. ')

' → logprob: -18.250001907348633
    9. '）' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.375001907348633

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07918454706668854
    2. 'n' → logprob: -2.5791845321655273
    3. 'if' → logprob: -8.829184532165527
    4. 'N' → logprob: -9.329184532165527
    5. '(n' → logprob: -10.954184532165527
    6. 'a' → logprob: -11.204184532165527
    7. 't' → logprob: -11.579184532165527
    8. '```' → logprob: -12.204184532165527
    9. '
' → logprob: -12.454184532165527
    10. ' def' → logprob: -13.204184532165527

Token 75: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12069357931613922
    2. 'main' → logprob: -2.4956936836242676
    3. ' longest' → logprob: -4.120693683624268
    4. ' solve' → logprob: -5.370693683624268
    5. ' find' → logprob: -5.620693683624268
    6. 'long' → logprob: -5.995693683624268
    7. 'solve' → logprob: -6.370693683624268
    8. ' count' → logprob: -7.120693683624268
    9. ' max' → logprob: -7.995693683624268
    10. 'count' → logprob: -8.12069320678711

Token 76: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.8635867834091187
    2. '_input' → logprob: -1.3635867834091187
    3. '_non' → logprob: -2.113586902618408
    4. '_count' → logprob: -2.613586902618408
    5. '_length' → logprob: -3.613586902618408
    6. '_' → logprob: -4.363586902618408
    7. '_min' → logprob: -4.863586902618408
    8. '_ans' → logprob: -4.863586902618408
    9. '_next' → logprob: -4.988586902618408
    10. '_answer' → logprob: -5.113586902618408

Token 77: '_of' (ID: 8023)
  Prédit: '_non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.3582707941532135
    2. '_sub' → logprob: -1.9832707643508911
    3. '_' → logprob: -2.3582708835601807
    4. '_length' → logprob: -3.7332708835601807
    5. '_sequence' → logprob: -4.983270645141602
    6. '_cont' → logprob: -4.983270645141602
    7. '_len' → logprob: -4.983270645141602
    8. '_in' → logprob: -5.483270645141602
    9. '_segment' → logprob: -5.608270645141602
    10. '_ans' → logprob: -5.733270645141602

Token 78: '_two' (ID: 54305)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2476880550384521
    2. '_non' → logprob: -1.4976880550384521
    3. '_two' → logprob: -1.8726880550384521
    4. '_sub' → logprob: -2.497688055038452
    5. '_three' → logprob: -2.622688055038452
    6. '_array' → logprob: -3.497688055038452
    7. '_a' → logprob: -4.372688293457031
    8. '_sequence' → logprob: -4.497688293457031
    9. '_' → logprob: -4.622688293457031
    10. '_count' → logprob: -5.122688293457031

Token 79: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3544343411922455
    2. '(a' → logprob: -1.2294343709945679
    3. ' (' → logprob: -5.229434490203857
    4. '(x' → logprob: -7.854434490203857
    5. ' ' → logprob: -9.8544340133667
    6. '_' → logprob: -10.2294340133667
    7. '(_' → logprob: -10.7294340133667
    8. '(n' → logprob: -11.1044340133667
    9. '(ans' → logprob: -11.4794340133667
    10. '(num' → logprob: -11.6044340133667

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006712094182148576
    2. ' ,' → logprob: -7.37567138671875
    3. ',b' → logprob: -10.12567138671875
    4. ',a' → logprob: -13.12567138671875
    5. ')' → logprob: -13.87567138671875
    6. '_,' → logprob: -14.75067138671875
    7. 'a' → logprob: -15.50067138671875
    8. '):' → logprob: -15.50067138671875
    9. ',)' → logprob: -15.87567138671875
    10. 'b' → logprob: -16.25067138671875

Token 81: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020543403923511505
    2. ' b' → logprob: -3.895543336868286
    3. ' ' → logprob: -14.270543098449707
    4. '   ' → logprob: -14.520543098449707
    5. ' ' → logprob: -16.270544052124023
    6. ')b' → logprob: -16.270544052124023
    7. '	b' → logprob: -16.395544052124023
    8. '    ' → logprob: -16.645544052124023
    9. '  ' → logprob: -17.020544052124023
    10. ')' → logprob: -17.770544052124023

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.051066520740278e-05
    2. '):
' → logprob: -10.625060081481934
    3. ' ):' → logprob: -10.750060081481934
    4. ')' → logprob: -11.250060081481934
    5. ':' → logprob: -14.125060081481934
    6. ',' → logprob: -14.625060081481934
    7. '):
' → logprob: -15.375060081481934
    8. '=' → logprob: -16.50006103515625
    9. ']:' → logprob: -16.62506103515625
    10. '   ' → logprob: -16.62506103515625

Token 83: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.029034316539764404
    2. ' a' → logprob: -4.02903413772583
    3. 'max' → logprob: -5.15403413772583
    4. '   ' → logprob: -5.77903413772583
    5. 'a' → logprob: -6.40403413772583
    6. ' return' → logprob: -8.404034614562988
    7. ')' → logprob: -9.779034614562988
    8. ' ' → logprob: -11.529034614562988
    9. '    ' → logprob: -12.404034614562988
    10. 'return' → logprob: -13.279034614562988

Token 84: ' return' (ID: 622)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.01770874671638012
    2. 'max' → logprob: -4.142708778381348
    3. ' a' → logprob: -6.767708778381348
    4. 'a' → logprob: -7.892708778381348
    5. ' return' → logprob: -8.892708778381348
    6. 'return' (adapté à ' return') → logprob: -12.517708778381348
    7. ' ' → logprob: -12.642708778381348
    8. '   ' → logprob: -12.892708778381348
    9. '(max' → logprob: -14.392708778381348
    10. ')' → logprob: -14.517708778381348

Token 85: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3037603497505188
    2. 'max' → logprob: -1.803760290145874
    3. 'a' → logprob: -2.678760290145874
    4. ' a' → logprob: -3.553760290145874
    5. '   ' → logprob: -12.178760528564453
    6. ' ' → logprob: -12.178760528564453
    7. '(max' → logprob: -12.428760528564453
    8. '	max' → logprob: -13.678760528564453
    9. ' ' → logprob: -14.553760528564453
    10. 'amax' → logprob: -14.866260528564453

Token 86: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20142114162445068
    2. '(' → logprob: -1.7014211416244507
    3. '((' → logprob: -12.701420783996582
    4. '(max' → logprob: -13.701420783996582
    5. '(
' → logprob: -14.576420783996582
    6. '(ab' → logprob: -14.576420783996582
    7. '()' → logprob: -14.951420783996582
    8. 'a' → logprob: -15.076420783996582
    9. '(b' → logprob: -15.201420783996582
    10. ' (' → logprob: -15.201420783996582

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005433912388980389
    2. ' ,' → logprob: -5.505434036254883
    3. ',b' → logprob: -6.630434036254883
    4. 'b' → logprob: -11.005434036254883
    5. ' b' → logprob: -11.255434036254883
    6. ')' → logprob: -12.255434036254883
    7. ' )' → logprob: -14.880434036254883
    8. ',)' → logprob: -16.380434036254883
    9. ' ' → logprob: -16.880434036254883
    10. ',
' → logprob: -17.505434036254883

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1269317865371704
    2. ' b' → logprob: -2.126931667327881
    3. ' ' → logprob: -12.876932144165039
    4. ')b' → logprob: -14.501932144165039
    5. '    ' → logprob: -15.626932144165039
    6. '   ' → logprob: -15.751932144165039
    7. ' ' → logprob: -15.876932144165039
    8. ')' → logprob: -16.25193214416504
    9. '  ' → logprob: -16.87693214416504
    10. '	b' → logprob: -16.87693214416504

Token 89: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.500000953674316
    3. '}' → logprob: -16.25
    4. ' )' → logprob: -16.625
    5. '))' → logprob: -17.125
    6. '<|end|>' → logprob: -17.25
    7. '),' → logprob: -17.5
    8. ')a' → logprob: -17.75
    9. ')}' → logprob: -17.875
    10. ')

' → logprob: -18.25

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014299227041192353
    2. 'n' → logprob: -9.125143051147461
    3. '```' → logprob: -11.000143051147461
    4. 'a' → logprob: -12.500143051147461
    5. '\' → logprob: -12.875143051147461
    6. '#' → logprob: -12.875143051147461
    7. 'd' → logprob: -13.125143051147461
    8. 'if' → logprob: -14.000143051147461
    9. '  
' → logprob: -14.500143051147461
    10. '    
' → logprob: -14.500143051147461

Token 91: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.44856101274490356
    2. 'main' → logprob: -2.448560953140259
    3. ' max' → logprob: -2.573560953140259
    4. ' longest' → logprob: -2.948560953140259
    5. ' find' → logprob: -3.323560953140259
    6. 'max' → logprob: -3.573560953140259
    7. ' count' → logprob: -3.948560953140259
    8. ' solve' → logprob: -4.073561191558838
    9. 'long' → logprob: -4.698561191558838
    10. 'solve' → logprob: -5.073561191558838

Token 92: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0698561668395996
    2. '_sequence' → logprob: -1.1948561668395996
    3. '_array' → logprob: -1.9448561668395996
    4. '(' → logprob: -2.6948561668395996
    5. '_list' → logprob: -3.1948561668395996
    6. '_input' → logprob: -3.8198561668395996
    7. '()' → logprob: -3.9448561668395996
    8. '(a' → logprob: -4.8198561668396
    9. '_line' → logprob: -4.8198561668396
    10. '_sequences' → logprob: -4.9448561668396

Token 93: '(n' (ID: 2406)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.9552129507064819
    2. '(' → logprob: -1.080212950706482
    3. '(a' → logprob: -1.455212950706482
    4. '(seq' → logprob: -3.2052130699157715
    5. ' (' → logprob: -7.4552130699157715
    6. '(s' → logprob: -7.9552130699157715
    7. '():' → logprob: -8.455212593078613
    8. '(nums' → logprob: -9.080212593078613
    9. '(n' → logprob: -9.455212593078613
    10. '(input' → logprob: -9.455212593078613

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. '):' → logprob: -14.625000953674316
    3. ' ,' → logprob: -14.750000953674316
    4. ',a' → logprob: -15.375000953674316
    5. ',n' → logprob: -16.500001907348633
    6. ',
' → logprob: -18.000001907348633
    7. ',array' → logprob: -18.500001907348633
    8. ':' → logprob: -19.000001907348633
    9. ',input' → logprob: -19.250001907348633
    10. ')' → logprob: -19.750001907348633

Token 95: ' h' (ID: 312)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.585743248462677
    2. ' seq' → logprob: -1.9607431888580322
    3. ' arr' → logprob: -2.3357431888580322
    4. 'arr' → logprob: -2.7107431888580322
    5. 'seq' → logprob: -2.7107431888580322
    6. 'sequence' → logprob: -2.7107431888580322
    7. 'a' → logprob: -5.710743427276611
    8. ' a' → logprob: -6.085743427276611
    9. ' lst' → logprob: -7.960743427276611
    10. 'lst' → logprob: -8.460742950439453

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1170400008559227
    2. ',' → logprob: -2.242039918899536
    3. '):
' → logprob: -5.617040157318115
    4. 's' → logprob: -8.867039680480957
    5. '_list' → logprob: -9.242039680480957
    6. ' ):' → logprob: -9.242039680480957
    7. ')' → logprob: -9.617039680480957
    8. '):
' → logprob: -9.992039680480957
    9. ' ,' → logprob: -11.117039680480957
    10. '[]):' → logprob: -11.242039680480957

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6080006957054138
    2. '   ' → logprob: -0.8580006957054138
    3. ':
' → logprob: -3.4830007553100586
    4. '
' → logprob: -8.483000755310059
    5. '```' → logprob: -8.858000755310059
    6. ' ' → logprob: -9.233000755310059
    7. ' :' → logprob: -9.608000755310059
    8. '    
' → logprob: -9.858000755310059
    9. ' :
' → logprob: -9.983000755310059
    10. '  ' → logprob: -10.233000755310059

Token 98: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8029661774635315
    2. 'cnt' → logprob: -1.1779661178588867
    3. 'ans' (adapté à ' ans') → logprob: -2.0529661178588867
    4. ' cnt' → logprob: -2.8029661178588867
    5. ' ans' → logprob: -2.9279661178588867
    6. 'count' → logprob: -7.552966117858887
    7. ' ' → logprob: -8.052966117858887
    8. 'max' → logprob: -9.052966117858887
    9. '  ' → logprob: -9.427966117858887
    10. '    
' → logprob: -9.552966117858887

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017278953455388546
    2. ',' → logprob: -7.001728057861328
    3. '=' → logprob: -7.126728057861328
    4. ' ,' → logprob: -12.001728057861328
    5. ' ' → logprob: -12.126728057861328
    6. '   ' → logprob: -14.376728057861328
    7. '  ' → logprob: -15.376728057861328
    8. ' =
' → logprob: -16.876728057861328
    9. ' ' → logprob: -17.001728057861328
    10. ' =)' → logprob: -17.251728057861328

Token 100: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3006851375102997
    2. '1' → logprob: -1.925685167312622
    3. '0' → logprob: -2.175685167312622
    4. 'reset' → logprob: -8.550684928894043
    5. ' reset' → logprob: -9.675684928894043
    6. '   ' → logprob: -10.300684928894043
    7. 'cnt' → logprob: -10.550684928894043
    8. '  ' → logprob: -11.175684928894043
    9. ' cnt' → logprob: -11.300684928894043
    10. 'read' → logprob: -11.925684928894043

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1608155369758606
    2. '1' → logprob: -1.9108154773712158
    3. 'reset' → logprob: -8.035815238952637
    4. ' ' → logprob: -9.160815238952637
    5. 'n' → logprob: -9.410815238952637
    6. 'h' → logprob: -10.035815238952637
    7. 'read' → logprob: -11.285815238952637
    8. '[' → logprob: -12.660815238952637
    9. '   ' → logprob: -12.785815238952637
    10. 'process' → logprob: -12.910815238952637

Token 102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.969318151473999
    2. '	cnt' → logprob: -1.219318151473999
    3. '   ' → logprob: -1.469318151473999
    4. 'cnt' → logprob: -3.594318151473999
    5. '	
' → logprob: -3.719318151473999
    6. ',' → logprob: -4.094318389892578
    7. '    
' → logprob: -4.219318389892578
    8. '
' → logprob: -5.969318389892578
    9. '	count' → logprob: -6.469318389892578
    10. ' cnt' → logprob: -6.719318389892578

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31534647941589355
    2. 'cnt' → logprob: -1.3153464794158936
    3. ' cnt' → logprob: -7.065346717834473
    4. 'count' → logprob: -7.315346717834473
    5. '	cnt' → logprob: -7.690346717834473
    6. ' ' → logprob: -10.690346717834473
    7. '  ' → logprob: -10.690346717834473
    8. 'counter' → logprob: -11.690346717834473
    9. '   ' → logprob: -11.690346717834473
    10. '_cnt' → logprob: -12.190346717834473

Token 104: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0018069108482450247
    2. '   ' → logprob: -7.126806735992432
    3. ' cnt' → logprob: -7.501806735992432
    4. 'count' → logprob: -7.751806735992432
    5. '	cnt' → logprob: -12.25180721282959
    6. '```' → logprob: -12.75180721282959
    7. 'def' → logprob: -13.37680721282959
    8. ' ' → logprob: -13.37680721282959
    9. '0' → logprob: -13.87680721282959
    10. 'counter' → logprob: -14.00180721282959

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004261819180101156
    2. '=' → logprob: -5.5042619705200195
    3. ' ' → logprob: -8.62926197052002
    4. ',' → logprob: -12.87926197052002
    5. '  ' → logprob: -14.25426197052002
    6. '	' → logprob: -14.75426197052002
    7. '   ' → logprob: -15.37926197052002
    8. ' ,' → logprob: -15.50426197052002
    9. '<|end|>' → logprob: -15.50426197052002
    10. '    ' → logprob: -16.629261016845703

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5875556468963623
    2. '0' → logprob: -0.8375556468963623
    3. ' ' → logprob: -4.462555885314941
    4. '   ' → logprob: -11.712555885314941
    5. 'reset' → logprob: -12.775055885314941
    6. '<|end|>' → logprob: -13.587555885314941
    7. '  ' → logprob: -13.837555885314941
    8. 'read' → logprob: -14.775055885314941
    9. '    ' → logprob: -15.212555885314941
    10. '```' → logprob: -15.400055885314941

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3141270875930786
    2. '1' → logprob: -1.3141270875930786
    3. ' ' → logprob: -7.064126968383789
    4. 'reset' → logprob: -12.189126968383789
    5. '   ' → logprob: -13.064126968383789
    6. '  ' → logprob: -14.564126968383789
    7. '```' → logprob: -15.501626968383789
    8. 'read' → logprob: -15.564126968383789
    9. '-' → logprob: -16.00162696838379
    10. '2' → logprob: -16.18912696838379

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6792511940002441
    2. '   ' → logprob: -0.8042511940002441
    3. ' for' → logprob: -4.054251194000244
    4. '    
' → logprob: -4.054251194000244
    5. ' 
' → logprob: -5.804251194000244
    6. 'for' → logprob: -6.179251194000244
    7. '\n' → logprob: -6.304251194000244
    8. '  
' → logprob: -6.554251194000244
    9. '   
' → logprob: -7.179251194000244
    10. '<|end|>' → logprob: -7.929251194000244

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2155982255935669
    2. ' for' → logprob: -1.715598225593567
    3. 'for' → logprob: -4.590598106384277
    4. '    
' → logprob: -6.590598106384277
    5. '
' → logprob: -6.715598106384277
    6. ' prev' → logprob: -7.715598106384277
    7. 'prev' → logprob: -7.965598106384277
    8. ' i' → logprob: -8.590598106384277
    9. ' last' → logprob: -9.590598106384277
    10. '   
' → logprob: -10.090598106384277

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010568084195256233
    2. ' for' → logprob: -5.010568141937256
    3. 'prev' → logprob: -6.010568141937256
    4. '   ' → logprob: -6.885568141937256
    5. 'i' → logprob: -8.760567665100098
    6. 'previous' → logprob: -9.135567665100098
    7. 'last' → logprob: -9.385567665100098
    8. ' prev' → logprob: -11.260567665100098
    9. '	for' → logprob: -12.885567665100098
    10. ' i' → logprob: -13.135567665100098

Token 111: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.523173987865448
    2. ' i' → logprob: -0.898173987865448
    3. '	i' → logprob: -10.398174285888672
    4. ' ' → logprob: -11.273174285888672
    5. '_i' → logprob: -13.273174285888672
    6. '   ' → logprob: -13.648174285888672
    7. 'h' → logprob: -14.023174285888672
    8. '1' → logprob: -14.148174285888672
    9. '0' → logprob: -14.273174285888672
    10. '_' → logprob: -14.648174285888672

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018368251621723175
    2. 'in' → logprob: -4.268368244171143
    3. ' ' → logprob: -5.518368244171143
    4. '	in' → logprob: -9.1433687210083
    5. '  ' → logprob: -10.6433687210083
    6. ',' → logprob: -11.2683687210083
    7. '	' → logprob: -11.8933687210083
    8. '   ' → logprob: -12.1433687210083
    9. '_' → logprob: -12.2683687210083
    10. 'range' → logprob: -12.6433687210083

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023359963670372963
    2. 'range' → logprob: -3.773360013961792
    3. ' ' → logprob: -9.523360252380371
    4. '   ' → logprob: -10.898360252380371
    5. '  ' → logprob: -12.148360252380371
    6. '	range' → logprob: -12.273360252380371
    7. ' xrange' → logprob: -12.398360252380371
    8. '(range' → logprob: -12.523360252380371
    9. ' ran' → logprob: -12.898360252380371
    10. ')' → logprob: -15.148360252380371

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16028271615505219
    2. '(n' → logprob: -1.9102827310562134
    3. ' n' → logprob: -10.285283088684082
    4. ' (' → logprob: -11.160283088684082
    5. '(len' → logprob: -12.410283088684082
    6. '1' → logprob: -12.910283088684082
    7. ' ' → logprob: -13.410283088684082
    8. '   ' → logprob: -13.910283088684082
    9. '	n' → logprob: -14.410283088684082
    10. 'n' → logprob: -15.160283088684082

Token 115: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04313678294420242
    2. '1' → logprob: -3.1681368350982666
    3. 'len' → logprob: -9.543136596679688
    4. ' n' → logprob: -10.043136596679688
    5. '   ' → logprob: -11.293136596679688
    6. '0' → logprob: -12.168136596679688
    7. '	n' → logprob: -13.293136596679688
    8. '(n' → logprob: -14.168136596679688
    9. ' ' → logprob: -14.168136596679688
    10. '2' → logprob: -14.668136596679688

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004789320519194007
    2. ' ,' → logprob: -8.125478744506836
    3. ',n' → logprob: -8.625478744506836
    4. 'n' → logprob: -13.000478744506836
    5. ' n' → logprob: -14.750478744506836
    6. ' ' → logprob: -15.250478744506836
    7. ',len' → logprob: -15.250478744506836
    8. '   ' → logprob: -16.250478744506836
    9. '(n' → logprob: -16.750478744506836
    10. ',
' → logprob: -17.375478744506836

Token 117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06197642162442207
    2. ' n' → logprob: -2.811976432800293
    3. '	n' → logprob: -12.311976432800293
    4. '   ' → logprob: -13.186976432800293
    5. 'len' → logprob: -13.186976432800293
    6. ' len' → logprob: -14.936976432800293
    7. ')n' → logprob: -16.686975479125977
    8. ' ' → logprob: -16.936975479125977
    9. '    ' → logprob: -17.561975479125977
    10. '
' → logprob: -17.561975479125977

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010749688372015953
    2. '):
' → logprob: -6.87607479095459
    3. ':' → logprob: -11.25107479095459
    4. ' ):' → logprob: -11.25107479095459
    5. '+' → logprob: -11.62607479095459
    6. '():' → logprob: -12.12607479095459
    7. '):
' → logprob: -14.25107479095459
    8. '}:' → logprob: -14.75107479095459
    9. '):

' → logprob: -15.37607479095459
    10. ',' → logprob: -15.87607479095459

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18804185092449188
    2. '<|end|>' → logprob: -1.9380418062210083
    3. ' if' → logprob: -4.688041687011719
    4. ' 
' → logprob: -5.438041687011719
    5. '
' → logprob: -5.438041687011719
    6. '   ' → logprob: -6.063041687011719
    7. '<|end|>' → logprob: -6.188041687011719
    8. ' ' → logprob: -6.438041687011719
    9. '  
' → logprob: -7.188041687011719
    10. '        
' → logprob: -7.438041687011719

Token 120: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10046609491109848
    2. ' if' → logprob: -2.350466012954712
    3. '       ' → logprob: -8.350465774536133
    4. '   ' → logprob: -11.475465774536133
    5. '	if' → logprob: -12.975465774536133
    6. ' ' → logprob: -13.100465774536133
    7. '```' → logprob: -13.100465774536133
    8. '
' → logprob: -13.350465774536133
    9. 'a' → logprob: -13.725465774536133
    10. '    ' → logprob: -14.225465774536133

Token 121: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2281685769557953
    2. 'is' → logprob: -1.9781686067581177
    3. 'h' → logprob: -2.978168487548828
    4. ' h' → logprob: -4.353168487548828
    5. ' not' → logprob: -6.603168487548828
    6. '   ' → logprob: -8.603168487548828
    7. 'not' → logprob: -8.728168487548828
    8. ' ' → logprob: -9.228168487548828
    9. '	is' → logprob: -10.290668487548828
    10. '  ' → logprob: -11.353168487548828

Token 122: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -1.5094070477061905e-05
    2. 'non' → logprob: -11.375015258789062
    3. '_' → logprob: -13.625015258789062
    4. '
' → logprob: -14.750015258789062
    5. '_n' → logprob: -15.250015258789062
    6. '_in' → logprob: -15.375015258789062
    7. '```' → logprob: -15.500015258789062
    8. 'Non' → logprob: -15.750015258789062
    9. '_not' → logprob: -16.125015258789062
    10. '_
' → logprob: -16.125015258789062

Token 123: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.008010681718587875
    2. '_non' → logprob: -4.8830108642578125
    3. '_de' → logprob: -8.008010864257812
    4. 'non' → logprob: -10.383010864257812
    5. 'Increasing' → logprob: -11.883010864257812
    6. 'in' → logprob: -12.008010864257812
    7. '   ' → logprob: -12.508010864257812
    8. '_' → logprob: -12.633010864257812
    9. 'creasing' → logprob: -12.883010864257812
    10. '_less' → logprob: -13.008010864257812

Token 124: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.006087223067879677
    2. '_de' → logprob: -6.256087303161621
    3. '_cre' → logprob: -6.381087303161621
    4. 'e' → logprob: -7.006087303161621
    5. 'cre' → logprob: -8.256087303161621
    6. '_in' → logprob: -8.631087303161621
    7. '_re' → logprob: -9.006087303161621
    8. '_non' → logprob: -9.131087303161621
    9. '```' → logprob: -9.131087303161621
    10. 'i' → logprob: -9.381087303161621

Token 125: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00010187433508690447
    2. '(' → logprob: -9.250102043151855
    3. ' (' → logprob: -13.250102043151855
    4. '(get' → logprob: -13.500102043151855
    5. '(
' → logprob: -13.875102043151855
    6. ')' → logprob: -14.500102043151855
    7. '(process' → logprob: -14.750102043151855
    8. '(a' → logprob: -15.625102043151855
    9. '((' → logprob: -15.750102043151855
    10. '(s' → logprob: -16.12510108947754

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011349777923896909
    2. '[' → logprob: -6.876134872436523
    3. '[
' → logprob: -10.751134872436523
    4. '
' → logprob: -10.876134872436523
    5. '[h' → logprob: -10.876134872436523
    6. ' [' → logprob: -11.001134872436523
    7. ')' → logprob: -11.876134872436523
    8. '   ' → logprob: -12.751134872436523
    9. '```' → logprob: -12.751134872436523
    10. '[j' → logprob: -13.001134872436523

Token 127: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.018077827990055084
    2. '-' → logprob: -4.268077850341797
    3. ' ],' → logprob: -6.518077850341797
    4. ' -' → logprob: -6.768077850341797
    5. ']' → logprob: -7.143077850341797
    6. '],
' → logprob: -9.143077850341797
    7. ',' → logprob: -9.268077850341797
    8. '   ' → logprob: -9.393077850341797
    9. ' ' → logprob: -10.018077850341797
    10. '       ' → logprob: -10.518077850341797

Token 128: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011066564358770847
    2. ' h' → logprob: -4.511066436767578
    3. ')' → logprob: -11.511066436767578
    4. '	h' → logprob: -13.011066436767578
    5. '<h' → logprob: -13.636066436767578
    6. '   ' → logprob: -13.761066436767578
    7. '[h' → logprob: -14.011066436767578
    8. ' ' → logprob: -14.261066436767578
    9. '=h' → logprob: -14.511066436767578
    10. '"h' → logprob: -14.761066436767578

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. 'i' → logprob: -13.500001907348633
    3. '[' → logprob: -14.250001907348633
    4. '[h' → logprob: -15.875001907348633
    5. ' [' → logprob: -16.875001907348633
    6. 'h' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.250001907348633
    8. ')' → logprob: -17.375001907348633
    9. '
' → logprob: -17.625001907348633
    10. '-' → logprob: -17.625001907348633

Token 130: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.056956443935632706
    2. '-' → logprob: -2.9319565296173096
    3. ' -' → logprob: -6.3069562911987305
    4. '[' → logprob: -8.80695629119873
    5. 'i' → logprob: -9.80695629119873
    6. '])' → logprob: -11.30695629119873
    7. ' [' → logprob: -11.68195629119873
    8. '1' → logprob: -11.93195629119873
    9. '[-' → logprob: -12.43195629119873
    10. '(i' → logprob: -12.68195629119873

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.375025749206543
    4. '])' → logprob: -14.625025749206543
    5. '```' → logprob: -16.06252670288086
    6. ')' → logprob: -16.12502670288086
    7. ']' → logprob: -16.37502670288086
    8. '-' → logprob: -16.62502670288086
    9. '0' → logprob: -16.62502670288086
    10. ' ' → logprob: -16.87502670288086

Token 132: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030148809775710106
    2. '):
' → logprob: -3.53014874458313
    3. ')' → logprob: -8.53014850616455
    4. '       ' → logprob: -8.90514850616455
    5. '):
' → logprob: -10.78014850616455
    6. ':' → logprob: -10.90514850616455
    7. ' ):' → logprob: -11.53014850616455
    8. ')):' → logprob: -12.03014850616455
    9. '):

' → logprob: -12.53014850616455
    10. '   ' → logprob: -13.03014850616455

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09030646830797195
    2. ':' → logprob: -2.965306520462036
    3. ':
' → logprob: -3.465306520462036
    4. '
' → logprob: -6.215306282043457
    5. '):
' → logprob: -7.965306282043457
    6. '<|end|>' → logprob: -8.340306282043457
    7. '       ' → logprob: -8.465306282043457
    8. ',' → logprob: -9.340306282043457
    9. '):' → logprob: -9.465306282043457
    10. ')' → logprob: -9.590306282043457

Token 134: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.9489618539810181
    2. ' cnt' → logprob: -1.073961853981018
    3. '           ' → logprob: -1.698961853981018
    4. '       ' → logprob: -3.1989617347717285
    5. '               ' → logprob: -3.9489617347717285
    6. ' if' → logprob: -4.4489617347717285
    7. 'if' → logprob: -4.8239617347717285
    8. '
' → logprob: -5.9489617347717285
    9. '   ' → logprob: -5.9489617347717285
    10. '	cnt' → logprob: -6.3239617347717285

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16484974324703217
    2. '=' → logprob: -1.9148497581481934
    3. ' +=' → logprob: -5.539849758148193
    4. '+=' → logprob: -7.289849758148193
    5. ' ' → logprob: -12.289849281311035
    6. '    ' → logprob: -16.28985023498535
    7. '   ' → logprob: -16.28985023498535
    8. ')' → logprob: -16.41485023498535
    9. '=get' → logprob: -16.66485023498535
    10. '.=' → logprob: -16.78985023498535

Token 136: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.03804860636591911
    2. ' update' → logprob: -3.288048505783081
    3. 'cnt' → logprob: -13.41304874420166
    4. '	update' → logprob: -13.41304874420166
    5. '   ' → logprob: -13.66304874420166
    6. 'increment' → logprob: -14.03804874420166
    7. '(update' → logprob: -14.16304874420166
    8. ' ' → logprob: -14.78804874420166
    9. ' cnt' → logprob: -15.41304874420166
    10. '.update' → logprob: -16.038047790527344

Token 137: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. '_cnt' → logprob: -14.625000953674316
    3. 'count' → logprob: -15.125000953674316
    4. '_cont' → logprob: -18.375
    5. '_' → logprob: -18.875
    6. '_counter' → logprob: -19.0
    7. '_c' → logprob: -19.25
    8. '```' → logprob: -19.25
    9. 'cnt' → logprob: -20.125
    10. 'Count' → logprob: -20.125

Token 138: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -4.2987729102605954e-05
    2. '(' → logprob: -10.250042915344238
    3. '(count' → logprob: -12.125042915344238
    4. 'cnt' → logprob: -13.500042915344238
    5. '[cnt' → logprob: -14.875042915344238
    6. ' (' → logprob: -15.500042915344238
    7. '	cnt' → logprob: -16.875043869018555
    8. '(cont' → logprob: -16.875043869018555
    9. '(
' → logprob: -17.625043869018555
    10. '(counter' → logprob: -17.625043869018555

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016891045961529016
    2. ')
' → logprob: -6.5016889572143555
    3. '+' → logprob: -9.501688957214355
    4. ' )' → logprob: -9.626688957214355
    5. '   ' → logprob: -11.751688957214355
    6. ' ' → logprob: -11.876688957214355
    7. ' +' → logprob: -12.126688957214355
    8. '(' → logprob: -12.501688957214355
    9. ')

' → logprob: -12.626688957214355
    10. ')+' → logprob: -12.626688957214355

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009166952222585678
    2. ' else' → logprob: -4.884166717529297
    3. 'else' → logprob: -6.509166717529297
    4. '   ' → logprob: -10.509166717529297
    5. '<|end|>' → logprob: -11.009166717529297
    6. '
' → logprob: -11.384166717529297
    7. ')' → logprob: -12.384166717529297
    8. '```' → logprob: -12.509166717529297
    9. '           ' → logprob: -13.634166717529297
    10. '	else' → logprob: -13.759166717529297

Token 141: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2541843354701996
    2. ' else' → logprob: -1.504184365272522
    3. '       ' → logprob: -6.129184246063232
    4. '	else' → logprob: -9.75418472290039
    5. '   ' → logprob: -11.25418472290039
    6. '<|end|>' → logprob: -13.62918472290039
    7. '```' → logprob: -14.37918472290039
    8. '_else' → logprob: -15.12918472290039
    9. ':
' → logprob: -15.37918472290039
    10. 'elif' → logprob: -15.50418472290039

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2254885584115982
    2. ':
' → logprob: -1.600488543510437
    3. '           ' → logprob: -9.850488662719727
    4. '       ' → logprob: -11.350488662719727
    5. ':
' → logprob: -12.725488662719727
    6. '<|end|>' → logprob: -12.975488662719727
    7. ':

' → logprob: -13.350488662719727
    8. ',' → logprob: -13.850488662719727
    9. '):
' → logprob: -14.100488662719727
    10. '   ' → logprob: -14.600488662719727

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044258590787649155
    2. '       ' → logprob: -8.375442504882812
    3. 'cnt' → logprob: -8.875442504882812
    4. '   ' → logprob: -10.375442504882812
    5. '
' → logprob: -11.000442504882812
    6. '               ' → logprob: -12.125442504882812
    7. '	       ' → logprob: -12.250442504882812
    8. '          ' → logprob: -12.500442504882812
    9. ' cnt' → logprob: -12.750442504882812
    10. '         ' → logprob: -13.125442504882812

Token 144: ' ans' (ID: 3345)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00263249222189188
    2. '   ' → logprob: -6.3776326179504395
    3. ' cnt' → logprob: -7.5026326179504395
    4. '           ' → logprob: -8.502632141113281
    5. '
' → logprob: -9.127632141113281
    6. 'ans' (adapté à ' ans') → logprob: -10.377632141113281
    7. '       ' → logprob: -10.752632141113281
    8. ' ' → logprob: -12.127632141113281
    9. '	cnt' → logprob: -12.502632141113281
    10. 'count' → logprob: -13.502632141113281

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.798587799072266
    4. ',' → logprob: -16.423587799072266
    5. ')' → logprob: -17.548587799072266
    6. '  ' → logprob: -19.048587799072266
    7. ' +=' → logprob: -19.048587799072266
    8. '＝' → logprob: -19.548587799072266
    9. ' ' → logprob: -19.673587799072266
    10. '.' → logprob: -19.923587799072266

Token 146: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.12692904472351074
    2. 'update' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.00192928314209
    4. '	update' → logprob: -15.00192928314209
    5. '(update' → logprob: -15.87692928314209
    6. '_update' → logprob: -16.626928329467773
    7. '   ' → logprob: -16.751928329467773
    8. '.update' → logprob: -17.126928329467773
    9. ' reset' → logprob: -17.626928329467773
    10. ' ' → logprob: -17.876928329467773

Token 147: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.3856492842023727e-06
    2. '_answer' → logprob: -14.000000953674316
    3. 'ans' → logprob: -15.000000953674316
    4. '_ant' → logprob: -16.875001907348633
    5. '(ans' → logprob: -17.250001907348633
    6. '_an' → logprob: -17.375001907348633
    7. '_count' → logprob: -18.000001907348633
    8. '_' → logprob: -18.000001907348633
    9. 'Ans' → logprob: -18.000001907348633
    10. '	ans' → logprob: -18.375001907348633

Token 148: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -10.625024795532227
    3. '(answer' → logprob: -15.250024795532227
    4. ' (' → logprob: -16.375024795532227
    5. '(
' → logprob: -17.875024795532227
    6. '```' → logprob: -19.750024795532227
    7. '	ans' → logprob: -20.125024795532227
    8. '(abs' → logprob: -20.250024795532227
    9. '(cnt' → logprob: -20.375024795532227
    10. '(err' → logprob: -20.375024795532227

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005064461147412658
    2. ',c' → logprob: -8.375506401062012
    3. ' ,' → logprob: -8.375506401062012
    4. '(cnt' → logprob: -10.125506401062012
    5. 'cnt' → logprob: -13.250506401062012
    6. ',
' → logprob: -13.875506401062012
    7. '(' → logprob: -14.250506401062012
    8. ',count' → logprob: -14.500506401062012
    9. '[cnt' → logprob: -15.375506401062012
    10. ')' → logprob: -15.375506401062012

Token 150: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0019725270103663206
    2. ' cnt' → logprob: -6.251972675323486
    3. 'reset' → logprob: -10.251972198486328
    4. 'count' → logprob: -12.876972198486328
    5. '(cnt' → logprob: -12.876972198486328
    6. '	cnt' → logprob: -13.376972198486328
    7. '   ' → logprob: -14.251972198486328
    8. ' reset' → logprob: -15.376972198486328
    9. '    ' → logprob: -15.376972198486328
    10. '[cnt' → logprob: -15.626972198486328

Token 151: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00222079548984766
    2. ')' → logprob: -6.127220630645752
    3. '           ' → logprob: -10.75222110748291
    4. ')
' → logprob: -11.87722110748291
    5. ' )
' → logprob: -12.50222110748291
    6. ')

' → logprob: -13.37722110748291
    7. '               ' → logprob: -13.87722110748291
    8. '       ' → logprob: -14.12722110748291
    9. '                   ' → logprob: -16.127220153808594
    10. '   ' → logprob: -16.502220153808594

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036214668303728104
    2. '       ' → logprob: -3.661214590072632
    3. '   ' → logprob: -4.786214828491211
    4. 'cnt' → logprob: -6.661214828491211
    5. ' cnt' → logprob: -8.536214828491211
    6. '	   ' → logprob: -11.536214828491211
    7. '               ' → logprob: -11.661214828491211
    8. '
' → logprob: -11.786214828491211
    9. '
' → logprob: -12.286214828491211
    10. '	cnt' → logprob: -12.411214828491211

Token 153: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.03487136960029602
    2. ' cnt' → logprob: -3.5348713397979736
    3. '           ' → logprob: -5.659871578216553
    4. '   ' → logprob: -6.534871578216553
    5. '       ' → logprob: -8.909871101379395
    6. '	cnt' → logprob: -11.409871101379395
    7. ' ' → logprob: -11.784871101379395
    8. '
' → logprob: -12.034871101379395
    9. '               ' → logprob: -12.534871101379395
    10. 'count' → logprob: -13.284871101379395

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868713676929474
    2. ' =' → logprob: -1.136871337890625
    3. ' ' → logprob: -14.886871337890625
    4. '＝' → logprob: -18.886871337890625
    5. '=re' → logprob: -19.636871337890625
    6. ',' → logprob: -20.011871337890625
    7. 's' → logprob: -20.136871337890625
    8. ')' → logprob: -20.261871337890625
    9. '   ' → logprob: -20.261871337890625
    10. 'reset' → logprob: -20.636871337890625

Token 155: ' reset' (ID: 12820)
  Prédit: 'reset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reset' → logprob: -0.008324846625328064
    2. ' reset' → logprob: -5.38332462310791
    3. '0' → logprob: -5.63332462310791
    4. '1' → logprob: -9.25832462310791
    5. ' ' → logprob: -10.88332462310791
    6. '(reset' → logprob: -12.75832462310791
    7. '	reset' → logprob: -13.00832462310791
    8. '   ' → logprob: -14.25832462310791
    9. 'set' → logprob: -15.38332462310791
    10. '.reset' → logprob: -15.50832462310791

Token 156: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.246537173457909e-06
    2. '_cnt' → logprob: -13.000003814697266
    3. 'count' → logprob: -13.625003814697266
    4. '_' → logprob: -14.500003814697266
    5. '()' → logprob: -16.625003814697266
    6. '_counter' → logprob: -17.250003814697266
    7. '_counts' → logprob: -17.375003814697266
    8. 'cnt' → logprob: -17.500003814697266
    9. '_code' → logprob: -18.250003814697266
    10. '_c' → logprob: -18.500003814697266

Token 157: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048651404678821564
    2. '()
' → logprob: -3.0486514568328857
    3. '()

' → logprob: -9.923651695251465
    4. '()
' → logprob: -11.298651695251465
    5. '()`' → logprob: -13.423651695251465
    6. '()\' → logprob: -14.548651695251465
    7. ' ()' → logprob: -15.798651695251465
    8. '()"' → logprob: -16.04865074157715
    9. '())' → logprob: -16.29865074157715
    10. '()


' → logprob: -16.29865074157715

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005532711511477828
    2. 'ans' → logprob: -8.125553131103516
    3. '
' → logprob: -9.250553131103516
    4. ' ans' → logprob: -9.500553131103516
    5. 'return' → logprob: -10.250553131103516
    6. ' return' → logprob: -10.500553131103516
    7. '    
' → logprob: -11.750553131103516
    8. '	ans' → logprob: -12.375553131103516
    9. ')' → logprob: -12.875553131103516
    10. '```' → logprob: -12.875553131103516

Token 159: ' return' (ID: 622)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02606571651995182
    2. '   ' → logprob: -4.651065826416016
    3. ' ans' → logprob: -4.651065826416016
    4. 'return' (adapté à ' return') → logprob: -5.151065826416016
    5. ' return' → logprob: -7.276065826416016
    6. '	ans' → logprob: -9.651065826416016
    7. ' ' → logprob: -10.276065826416016
    8. '(ans' → logprob: -11.276065826416016
    9. '
' → logprob: -11.401065826416016
    10. 'answer' → logprob: -11.901065826416016

Token 160: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.14767341315746307
    2. 'ans' → logprob: -2.3976733684539795
    3. 'update' → logprob: -3.5226733684539795
    4. ' get' → logprob: -4.647673606872559
    5. 'max' → logprob: -5.147673606872559
    6. ' ans' → logprob: -6.897673606872559
    7. ' update' → logprob: -8.397673606872559
    8. ' max' → logprob: -8.772673606872559
    9. 'answer' → logprob: -11.022673606872559
    10. '0' → logprob: -11.897673606872559

Token 161: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.008656530641019344
    2. '_ans' → logprob: -4.7586565017700195
    3. 'max' → logprob: -10.13365650177002
    4. '_' → logprob: -13.38365650177002
    5. '_an' → logprob: -15.75865650177002
    6. '__' → logprob: -15.75865650177002
    7. '(max' → logprob: -16.133657455444336
    8. ' max' → logprob: -16.258657455444336
    9. 'ans' → logprob: -16.258657455444336
    10. '_val' → logprob: -17.008657455444336

Token 162: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. '_off' → logprob: -15.875
    3. 'of' → logprob: -17.375
    4. '_ans' → logprob: -18.375
    5. '_' → logprob: -18.625
    6. '_max' → logprob: -18.75
    7. '_o' → logprob: -18.75
    8. ' of' → logprob: -18.875
    9. ' _' → logprob: -19.5
    10. '__' → logprob: -19.5

Token 163: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0052377874962985516
    2. 'two' → logprob: -5.255237579345703
    3. '(two' → logprob: -13.130237579345703
    4. ' two' → logprob: -14.130237579345703
    5. '_ans' → logprob: -14.505237579345703
    6. '_tw' → logprob: -15.005237579345703
    7. 'wo' → logprob: -15.380237579345703
    8. 'Two' → logprob: -15.505237579345703
    9. '(ans' → logprob: -17.005237579345703
    10. '_TWO' → logprob: -17.505237579345703

Token 164: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.2664456789934775e-06
    2. 'ans' → logprob: -14.250000953674316
    3. '(' → logprob: -14.625000953674316
    4. '(answer' → logprob: -15.750000953674316
    5. ' (' → logprob: -17.625001907348633
    6. '	ans' → logprob: -17.750001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '```' → logprob: -19.500001907348633
    9. ' ans' → logprob: -19.875001907348633
    10. '(arr' → logprob: -20.625001907348633

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25270184874534607
    2. '(cnt' → logprob: -1.5027018785476685
    3. ' ,' → logprob: -7.627701759338379
    4. ',c' → logprob: -8.877701759338379
    5. '(' → logprob: -9.627701759338379
    6. 'cnt' → logprob: -9.877701759338379
    7. '[cnt' → logprob: -11.877701759338379
    8. ' cnt' → logprob: -12.127701759338379
    9. '(ans' → logprob: -12.252701759338379
    10. ')' → logprob: -13.252701759338379

Token 166: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0007111206650733948
    2. ' cnt' → logprob: -7.250710964202881
    3. 'count' → logprob: -14.625711441040039
    4. '(cnt' → logprob: -14.875711441040039
    5. '	cnt' → logprob: -15.125711441040039
    6. '[cnt' → logprob: -17.62571144104004
    7. 'ct' → logprob: -17.62571144104004
    8. 'c' → logprob: -18.62571144104004
    9. '_cnt' → logprob: -18.75071144104004
    10. 'counter' → logprob: -18.87571144104004

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.575563020305708e-05
    2. ' )' → logprob: -9.750065803527832
    3. ')
' → logprob: -12.125065803527832
    4. '<|end|>' → logprob: -14.000065803527832
    5. '())' → logprob: -15.250065803527832
    6. '))' → logprob: -16.000064849853516
    7. ')

' → logprob: -16.375064849853516
    8. ')return' → logprob: -16.375064849853516
    9. '`)' → logprob: -16.500064849853516
    10. '}' → logprob: -16.625064849853516

Token 168: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3123798072338104
    2. ' process' → logprob: -1.9373798370361328
    3. 'main' → logprob: -2.562379837036133
    4. 'process' → logprob: -3.187379837036133
    5. ' read' → logprob: -5.812379837036133
    6. 'read' → logprob: -6.812379837036133
    7. '__' → logprob: -6.937379837036133
    8. ' solve' → logprob: -7.937379837036133
    9. 'solve' → logprob: -9.062379837036133
    10. ' __' → logprob: -9.312379837036133

Token 170: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003022153687197715
    2. '():
' → logprob: -8.1253023147583
    3. ' ():' → logprob: -12.1253023147583
    4. '():
' → logprob: -14.8753023147583
    5. '()' → logprob: -15.0003023147583
    6. '():

' → logprob: -17.625301361083984
    7. ':' → logprob: -18.750301361083984
    8. '(' → logprob: -18.875301361083984
    9. '()>' → logprob: -19.000301361083984
    10. '().' → logprob: -21.250301361083984

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08031114190816879
    2. 'n' → logprob: -2.5803110599517822
    3. ' n' → logprob: -6.580311298370361
    4. '	n' → logprob: -10.455310821533203
    5. '
' → logprob: -13.580310821533203
    6. '```' → logprob: -13.955310821533203
    7. 'def' → logprob: -14.955310821533203
    8. '    
' → logprob: -14.955310821533203
    9. ',n' → logprob: -15.080310821533203
    10. '(n' → logprob: -15.330310821533203

Token 172: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0895015150308609
    2. ' n' → logprob: -2.8395016193389893
    3. 't' → logprob: -4.08950138092041
    4. '   ' → logprob: -5.08950138092041
    5. ' t' → logprob: -5.46450138092041
    6. ' ' → logprob: -12.21450138092041
    7. ' T' → logprob: -13.08950138092041
    8. '
' → logprob: -13.21450138092041
    9. 'T' → logprob: -13.46450138092041
    10. '	n' → logprob: -13.46450138092041

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004573480691760778
    2. '=' → logprob: -5.504573345184326
    3. ',' → logprob: -7.629573345184326
    4. ' ' → logprob: -12.629573822021484
    5. '=int' → logprob: -12.754573822021484
    6. ' =
' → logprob: -13.754573822021484
    7. '  ' → logprob: -14.504573822021484
    8. ' ,' → logprob: -14.754573822021484
    9. '   ' → logprob: -15.504573822021484
    10. ' =)' → logprob: -15.754573822021484

Token 174: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.062002088874578476
    2. 'read' → logprob: -2.812002182006836
    3. ' int' → logprob: -10.562002182006836
    4. 'int' → logprob: -11.687002182006836
    5. '	read' → logprob: -15.812002182006836
    6. '(read' → logprob: -17.562002182006836
    7. ' ' → logprob: -17.812002182006836
    8. '   ' → logprob: -17.937002182006836
    9. '  ' → logprob: -17.937002182006836
    10. '_read' → logprob: -19.187002182006836

Token 175: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -3.273621405242011e-05
    2. '_' → logprob: -11.375032424926758
    3. 'int' → logprob: -11.375032424926758
    4. '_in' → logprob: -12.625032424926758
    5. '_line' → logprob: -12.875032424926758
    6. '_integer' → logprob: -14.125032424926758
    7. '_input' → logprob: -14.625032424926758
    8. '_uint' → logprob: -14.875032424926758
    9. '_str' → logprob: -15.000032424926758
    10. '()' → logprob: -15.000032424926758

Token 176: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028084407094866037
    2. '()
' → logprob: -5.877808570861816
    3. '())' → logprob: -14.002808570861816
    4. '()
' → logprob: -14.377808570861816
    5. '()<' → logprob: -14.752808570861816
    6. '()

' → logprob: -14.752808570861816
    7. ' ()' → logprob: -14.752808570861816
    8. '()\' → logprob: -15.002808570861816
    9. '()>' → logprob: -15.377808570861816
    10. '(' → logprob: -16.3778076171875

Token 177: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13596279919147491
    2. '   ' → logprob: -2.135962724685669
    3. ' h' → logprob: -4.760962963104248
    4. '	h' → logprob: -7.885962963104248
    5. '  ' → logprob: -10.88596248626709
    6. '<|end|>' → logprob: -11.01096248626709
    7. ' ' → logprob: -11.26096248626709
    8. '
' → logprob: -12.01096248626709
    9. '    
' → logprob: -13.38596248626709
    10. '```' → logprob: -13.76096248626709

Token 178: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -4.191489642835222e-05
    2. '   ' → logprob: -10.250041961669922
    3. ' h' → logprob: -12.000041961669922
    4. '	h' → logprob: -15.125041961669922
    5. '  ' → logprob: -17.375041961669922
    6. 'a' → logprob: -18.000041961669922
    7. '_h' → logprob: -18.625041961669922
    8. ' ' → logprob: -19.000041961669922
    9. 'hs' → logprob: -19.250041961669922
    10. 'he' → logprob: -19.875041961669922

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740810692310333
    2. ' =' → logprob: -0.9740810394287109
    3. '_' → logprob: -13.099081039428711
    4. '=[]' → logprob: -15.099081039428711
    5. ' ' → logprob: -15.224081039428711
    6. ')' → logprob: -15.349081039428711
    7. '   ' → logprob: -15.349081039428711
    8. '_list' → logprob: -15.474081039428711
    9. '[' → logprob: -15.599081039428711
    10. '[]' → logprob: -15.724081039428711

Token 180: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.31326231360435486
    2. 'read' → logprob: -1.3132623434066772
    3. '	read' → logprob: -14.688261985778809
    4. '(read' → logprob: -16.688262939453125
    5. '   ' → logprob: -18.563262939453125
    6. '_read' → logprob: -18.688262939453125
    7. '.read' → logprob: -19.188262939453125
    8. '  ' → logprob: -19.313262939453125
    9. ' ' → logprob: -19.688262939453125
    10. '    ' → logprob: -20.813262939453125

Token 181: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.375001907348633
    3. '_in' → logprob: -16.375001907348633
    4. '_' → logprob: -16.375001907348633
    5. '_list' → logprob: -18.375001907348633
    6. '_uint' → logprob: -18.625001907348633
    7. '_INT' → logprob: -18.750001907348633
    8. '_line' → logprob: -18.875001907348633
    9. '```' → logprob: -19.250001907348633
    10. '_float' → logprob: -19.750001907348633

Token 182: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.625011444091797
    3. '()' → logprob: -13.375011444091797
    4. 'list' → logprob: -15.000011444091797
    5. '_lst' → logprob: -15.125011444091797
    6. '_line' → logprob: -15.250011444091797
    7. '_lista' → logprob: -16.000011444091797
    8. '_array' → logprob: -16.125011444091797
    9. '_l' → logprob: -17.000011444091797
    10. '_lists' → logprob: -17.250011444091797

Token 183: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029775485396385193
    2. '()
' → logprob: -3.529775381088257
    3. '   ' → logprob: -10.904775619506836
    4. '()
' → logprob: -12.779775619506836
    5. '()

' → logprob: -13.529775619506836
    6. '();' → logprob: -14.404775619506836
    7. '()\' → logprob: -14.654775619506836
    8. '())' → logprob: -15.029775619506836
    9. '(' → logprob: -15.279775619506836
    10. ' ()' → logprob: -15.529775619506836

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039631035178899765
    2. 'print' → logprob: -3.9146311283111572
    3. '
' → logprob: -4.539630889892578
    4. 'result' → logprob: -4.914630889892578
    5. '    
' → logprob: -7.539630889892578
    6. ' result' → logprob: -9.039630889892578
    7. ' print' → logprob: -9.164630889892578
    8. 'ans' → logprob: -10.289630889892578
    9. '```' → logprob: -10.289630889892578
    10. '<|end|>' → logprob: -11.539630889892578

Token 185: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06561139225959778
    2. '   ' → logprob: -3.1906113624572754
    3. ' print' → logprob: -4.815611362457275
    4. 'result' (adapté à ' result') → logprob: -4.940611362457275
    5. 'ans' → logprob: -5.315611362457275
    6. ' ans' → logprob: -6.815611362457275
    7. ' result' → logprob: -7.315611362457275
    8. 'res' → logprob: -8.440611839294434
    9. 'answer' → logprob: -8.815611839294434
    10. ' res' → logprob: -10.440611839294434

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011053952388465405
    2. '=' → logprob: -4.511054039001465
    3. ' ' → logprob: -12.136054039001465
    4. ')' → logprob: -15.136054039001465
    5. ' =)' → logprob: -15.886054039001465
    6. ' =
' → logprob: -16.01105308532715
    7. ' ' → logprob: -16.38605308532715
    8. '  ' → logprob: -17.13605308532715
    9. '   ' → logprob: -17.13605308532715
    10. ',' → logprob: -17.26105308532715

Token 187: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.011048170737922192
    2. 'process' → logprob: -4.511048316955566
    3. '(process' → logprob: -15.011048316955566
    4. '	process' → logprob: -16.38604736328125
    5. ' proces' → logprob: -17.76104736328125
    6. '_process' → logprob: -19.01104736328125
    7. '.process' → logprob: -19.38604736328125
    8. '   ' → logprob: -19.76104736328125
    9. ' ' → logprob: -20.13604736328125
    10. ' print' → logprob: -20.38604736328125

Token 188: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -11.875007629394531
    3. '_se' → logprob: -15.500007629394531
    4. '(sequence' → logprob: -16.12500762939453
    5. '_seq' → logprob: -16.50000762939453
    6. '_result' → logprob: -17.12500762939453
    7. 'sequence' → logprob: -17.12500762939453
    8. '_sentence' → logprob: -17.75000762939453
    9. '_sequences' → logprob: -17.75000762939453
    10. '(_' → logprob: -17.87500762939453

Token 189: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02977745607495308
    2. '(' → logprob: -3.5297775268554688
    3. ' (' → logprob: -11.404777526855469
    4. '(h' → logprob: -11.529777526855469
    5. '(
' → logprob: -12.529777526855469
    6. '(len' → logprob: -13.779777526855469
    7. '```' → logprob: -14.779777526855469
    8. '   ' → logprob: -15.654777526855469
    9. '(s' → logprob: -15.904777526855469
    10. '(result' → logprob: -16.27977752685547

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027694785967469215
    2. ',h' → logprob: -8.875276565551758
    3. '(' → logprob: -9.250276565551758
    4. ' ,' → logprob: -10.875276565551758
    5. ',n' → logprob: -11.500276565551758
    6. '(n' → logprob: -12.000276565551758
    7. '(h' → logprob: -13.125276565551758
    8. ',
' → logprob: -13.375276565551758
    9. ')' → logprob: -13.875276565551758
    10. '   ' → logprob: -14.000276565551758

Token 191: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0011703446507453918
    2. ' h' → logprob: -6.7511701583862305
    3. '   ' → logprob: -16.751171112060547
    4. '	h' → logprob: -17.876171112060547
    5. '  ' → logprob: -19.751171112060547
    6. ')' → logprob: -20.251171112060547
    7. '<h' → logprob: -20.376171112060547
    8. '(h' → logprob: -21.001171112060547
    9. '[h' → logprob: -21.626171112060547
    10. ' ' → logprob: -21.751171112060547

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932871341705322
    2. ')
' → logprob: -0.6932871341705322
    3. '   ' → logprob: -9.318286895751953
    4. '()' → logprob: -10.318286895751953
    5. '())
' → logprob: -11.943286895751953
    6. '()
' → logprob: -12.318286895751953
    7. ')
' → logprob: -12.693286895751953
    8. '())' → logprob: -13.068286895751953
    9. ' )
' → logprob: -14.943286895751953
    10. ')

' → logprob: -15.318286895751953

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0792456716299057
    2. 'print' → logprob: -2.5792455673217773
    3. '
' → logprob: -8.204245567321777
    4. ' print' → logprob: -9.829245567321777
    5. '	print' → logprob: -11.204245567321777
    6. '    
' → logprob: -11.454245567321777
    7. '```' → logprob: -12.704245567321777
    8. '(print' → logprob: -15.079245567321777
    9. '   ' → logprob: -15.454245567321777
    10. '
' → logprob: -15.829245567321777

Token 194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.8444881536415778e-05
    2. '   ' → logprob: -10.500028610229492
    3. ' print' → logprob: -14.000028610229492
    4. '	print' → logprob: -19.125028610229492
    5. '
' → logprob: -19.375028610229492
    6. '```' → logprob: -20.000028610229492
    7. '#print' → logprob: -21.875028610229492
    8. 'printf' → logprob: -22.750028610229492
    9. '_print' → logprob: -22.875028610229492
    10. '(print' → logprob: -23.500028610229492

Token 195: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.07889331132173538
    2. '(' → logprob: -2.5788934230804443
    3. ' (' → logprob: -13.953893661499023
    4. '('' → logprob: -14.203893661499023
    5. 'result' → logprob: -14.453893661499023
    6. '(f' → logprob: -14.828893661499023
    7. '(
' → logprob: -15.078893661499023
    8. '("("' → logprob: -15.078893661499023
    9. '()' → logprob: -15.578893661499023
    10. '(results' → logprob: -15.953893661499023

Token 196: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.25
    4. '()' → logprob: -17.125
    5. ')`' → logprob: -17.625
    6. '())' → logprob: -18.625
    7. '))' → logprob: -18.75
    8. '`)' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '(' → logprob: -20.125

Token 197: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015097891446202993
    2. 'main' → logprob: -8.875150680541992
    3. ' if' → logprob: -11.875150680541992
    4. '```' → logprob: -13.000150680541992
    5. '\n' → logprob: -14.250150680541992
    6. '#' → logprob: -14.625150680541992
    7. 'n' → logprob: -15.375150680541992
    8. '<|end|>' → logprob: -15.875150680541992
    9. '\' → logprob: -16.000150680541992
    10. 'def' → logprob: -16.500150680541992

Token 198: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 196
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 103
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 47.96%
Précision adaptée (1ère position): 52.55%
Précision (top 10): 87.24%
================================================================================
