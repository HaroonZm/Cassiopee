================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from functools import reduce
from operator import mul

n, k = map(int, stdin.readline().split())
mod = 10 ** 9 + 7

def make_combinations(size, m):
    numer = reduce(mul, range(m, m - size, -1), 1)
    denom = 1
    comb = [1]
    for i in range(1, size):
        numer = numer * (m - i) % mod
        denom = denom * i % mod
        val = numer * pow(denom, mod - 2, mod) % mod
        comb.append(val)
    return comb

comb0 = make_combinations(n, n)
comb1 = make_combinations(n, n - 1)

ans = sum((a * b) % mod for a, b in zip(comb0[:min(n, k + 1)], comb1[:min(n, k + 1)])) % mod
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.16639204323291779
    2. ' argv' → logprob: -2.2913920879364014
    3. 'exit' → logprob: -3.5413920879364014
    4. ' exit' → logprob: -3.9163920879364014
    5. 'stdout' → logprob: -6.791391849517822
    6. 'import' → logprob: -6.916391849517822
    7. 'path' → logprob: -7.916391849517822
    8. 'stdin' → logprob: -8.16639232635498
    9. ' import' → logprob: -8.79139232635498
    10. '.argv' → logprob: -9.29139232635498

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009244076907634735
    2. '.readline' → logprob: -4.759243965148926
    3. '.read' → logprob: -8.509243965148926
    4. '\n' → logprob: -9.259243965148926
    5. '
' → logprob: -9.509243965148926
    6. '.
' → logprob: -9.759243965148926
    7. ',' → logprob: -9.884243965148926
    8. 'import' → logprob: -10.134243965148926
    9. '```' → logprob: -10.384243965148926
    10. '.write' → logprob: -11.134243965148926

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15172699093818665
    2. '.readline' → logprob: -2.4017269611358643
    3. '\n' → logprob: -4.276727199554443
    4. 'for' → logprob: -4.901727199554443
    5. 'import' → logprob: -4.901727199554443
    6. 'print' → logprob: -4.901727199554443
    7. 'newline' → logprob: -5.526727199554443
    8. '```' → logprob: -6.026727199554443
    9. '
' → logprob: -6.151727199554443
    10. '.read' → logprob: -6.651727199554443

Token 6: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012138505466282368
    2. ' sys' → logprob: -5.137138366699219
    3. 'os' → logprob: -5.387138366699219
    4. ' io' → logprob: -6.762138366699219
    5. ' typing' → logprob: -8.762138366699219
    6. ' math' → logprob: -9.387138366699219
    7. 'sys' → logprob: -9.762138366699219
    8. 'io' → logprob: -10.637138366699219
    9. ' stdout' → logprob: -10.762138366699219
    10. ' string' → logprob: -11.137138366699219

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5905358195304871
    2. 'import' → logprob: -1.0905358791351318
    3. '_import' → logprob: -2.465535879135132
    4. '_' → logprob: -3.715535879135132
    5. ' _' → logprob: -8.090536117553711
    6. ' ' → logprob: -8.465536117553711
    7. '	import' → logprob: -10.590536117553711
    8. '_im' → logprob: -11.090536117553711
    9. '_imp' → logprob: -11.090536117553711
    10. '.' → logprob: -11.590536117553711

Token 8: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6742211580276489
    2. ' l' → logprob: -0.9242211580276489
    3. 'reduce' → logprob: -2.6742210388183594
    4. 'wrap' → logprob: -4.924221038818359
    5. ' reduce' → logprob: -5.049221038818359
    6. 'partial' → logprob: -5.174221038818359
    7. ' wraps' → logprob: -6.299221038818359
    8. ' partial' → logprob: -6.549221038818359
    9. 'cache' → logprob: -6.924221038818359
    10. 'cmp' → logprob: -8.04922103881836

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11149623990058899
    2. '\' → logprob: -2.9864962100982666
    3. '
' → logprob: -3.9864962100982666
    4. '```' → logprob: -3.9864962100982666
    5. 'import' → logprob: -4.986496448516846
    6. 'def' → logprob: -5.361496448516846
    7. '`' → logprob: -6.861496448516846
    8. 'newline' → logprob: -7.111496448516846
    9. 'print' → logprob: -7.236496448516846
    10. ',' → logprob: -7.236496448516846

Token 10: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2756803333759308
    2. '```' → logprob: -2.1506803035736084
    3. '\' → logprob: -2.6506803035736084
    4. ',' → logprob: -3.7756803035736084
    5. 'import' → logprob: -4.0256805419921875
    6. ',
' → logprob: -6.0256805419921875
    7. ',

' → logprob: -6.4006805419921875
    8. '

' → logprob: -6.5256805419921875
    9. '
' → logprob: -6.6506805419921875
    10. 'def' → logprob: -6.7756805419921875

Token 11: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2012154757976532
    2. ' math' → logprob: -2.2012155055999756
    3. ' itertools' → logprob: -3.3262155055999756
    4. 'operator' → logprob: -3.4512155055999756
    5. ' collections' → logprob: -5.9512152671813965
    6. 'math' → logprob: -6.8262152671813965
    7. ' ' → logprob: -9.451215744018555
    8. ' os' → logprob: -9.576215744018555
    9. '_operator' → logprob: -9.701215744018555
    10. 'collections' → logprob: -10.451215744018555

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02483430877327919
    2. 'import' → logprob: -3.774834394454956
    3. '.' → logprob: -6.649834156036377
    4. ' ' → logprob: -8.399834632873535
    5. ' .' → logprob: -10.149834632873535
    6. '<|end|>' → logprob: -11.399834632873535
    7. '	import' → logprob: -12.149834632873535
    8. '_import' → logprob: -13.024834632873535
    9. '.import' → logprob: -13.399834632873535
    10. ' as' → logprob: -13.649834632873535

Token 13: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.6638565063476562
    2. ' mul' → logprob: -0.9138565063476562
    3. 'add' → logprob: -3.1638565063476562
    4. ' add' → logprob: -3.6638565063476562
    5. '.mul' → logprob: -4.788856506347656
    6. 'xor' → logprob: -6.788856506347656
    7. '_mul' → logprob: -7.038856506347656
    8. '*' → logprob: -7.288856506347656
    9. '```' → logprob: -7.413856506347656
    10. ' xor' → logprob: -7.663856506347656

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28278782963752747
    2. '\n' → logprob: -2.032787799835205
    3. '(
' → logprob: -2.907787799835205
    4. ',' → logprob: -3.907787799835205
    5. '\' → logprob: -3.907787799835205
    6. 'def' → logprob: -5.532787799835205
    7. 'newline' → logprob: -5.907787799835205
    8. '*' → logprob: -6.032787799835205
    9. '`' → logprob: -6.282787799835205
    10. ' (' → logprob: -7.157787799835205

Token 15: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14347906410694122
    2. '(
' → logprob: -2.893479108810425
    3. '*' → logprob: -4.018478870391846
    4. '\' → logprob: -4.393478870391846
    5. '\n' → logprob: -4.393478870391846
    6. 'def' → logprob: -4.393478870391846
    7. ',' → logprob: -4.893478870391846
    8. 'a' → logprob: -5.768478870391846
    9. 'x' → logprob: -6.643478870391846
    10. '[' → logprob: -6.768478870391846

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16867133975028992
    2. '=' → logprob: -1.9186713695526123
    3. ' ' → logprob: -5.168671131134033
    4. ',' → logprob: -6.418671131134033
    5. '_' → logprob: -7.668671131134033
    6. ' ,' → logprob: -8.543671607971191
    7. '  ' → logprob: -8.918671607971191
    8. '.' → logprob: -9.168671607971191
    9. 's' → logprob: -9.793671607971191
    10. ')' → logprob: -10.168671607971191

Token 17: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7524620890617371
    2. ' ' → logprob: -1.3774621486663818
    3. 'm' → logprob: -1.6274621486663818
    4. ' k' → logprob: -2.627462148666382
    5. '=' → logprob: -6.127461910247803
    6. 'k' → logprob: -6.377461910247803
    7. ' =' → logprob: -7.252461910247803
    8. 'input' → logprob: -7.877461910247803
    9. 's' → logprob: -8.002462387084961
    10. ' s' → logprob: -8.252462387084961

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005237548612058163
    2. '=' → logprob: -5.255237579345703
    3. ',' → logprob: -13.005237579345703
    4. ' ' → logprob: -14.255237579345703
    5. ' ,' → logprob: -15.255237579345703
    6. ' =",' → logprob: -15.755237579345703
    7. ' =
' → logprob: -16.255237579345703
    8. '=input' → logprob: -16.380237579345703
    9. ' ='' → logprob: -16.880237579345703
    10. '<|end|>' → logprob: -16.880237579345703

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.005267076659947634
    2. 'map' → logprob: -5.255267143249512
    3. ' list' → logprob: -11.505267143249512
    4. ' stdin' → logprob: -11.630267143249512
    5. ' [' → logprob: -12.005267143249512
    6. ' ' → logprob: -12.255267143249512
    7. '[' → logprob: -13.505267143249512
    8. 'list' → logprob: -14.880267143249512
    9. '(map' → logprob: -15.005267143249512
    10. ' (' → logprob: -15.130267143249512

Token 20: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03686553239822388
    2. '(int' → logprob: -3.786865472793579
    3. '(str' → logprob: -4.786865711212158
    4. '(lambda' → logprob: -5.536865711212158
    5. '<|end|>' → logprob: -7.411865711212158
    6. '(stdin' → logprob: -8.661865234375
    7. '()' → logprob: -9.161865234375
    8. '(input' → logprob: -9.536865234375
    9. '(
' → logprob: -10.536865234375
    10. '(len' → logprob: -10.786865234375

Token 21: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.047856029123067856
    2. ',' → logprob: -3.297856092453003
    3. '(' → logprob: -5.047855854034424
    4. 'stdin' → logprob: -6.422855854034424
    5. ')' → logprob: -6.672855854034424
    6. '(st' → logprob: -8.547856330871582
    7. ' stdin' → logprob: -9.172856330871582
    8. ',std' → logprob: -10.297856330871582
    9. '(std' → logprob: -10.672856330871582
    10. '(input' → logprob: -10.797856330871582

Token 22: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.283153235912323
    2. ' stdin' → logprob: -1.4081532955169678
    3. '(stdin' → logprob: -6.408153057098389
    4. 'input' → logprob: -8.658153533935547
    5. ')' → logprob: -9.033153533935547
    6. '.stdin' → logprob: -10.158153533935547
    7. ' input' → logprob: -11.283153533935547
    8. 'str' → logprob: -13.658153533935547
    9. ' ' → logprob: -14.033153533935547
    10. 'stdout' → logprob: -14.033153533935547

Token 23: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002680112374946475
    2. '.read' → logprob: -8.25026798248291
    3. '.' → logprob: -12.37526798248291
    4. '.readlines' → logprob: -13.12526798248291
    5. '().' → logprob: -15.87526798248291
    6. ' .' → logprob: -16.125268936157227
    7. ')' → logprob: -16.625268936157227
    8. '.Read' → logprob: -17.500268936157227
    9. 'read' → logprob: -18.000268936157227
    10. '.write' → logprob: -18.250268936157227

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4384359121322632
    2. '())' → logprob: -1.0634359121322632
    3. '()' → logprob: -4.688436031341553
    4. ')' → logprob: -8.188435554504395
    5. '()))' → logprob: -8.813435554504395
    6. ' ())' → logprob: -11.063435554504395
    7. '()[' → logprob: -11.438435554504395
    8. '(' → logprob: -11.813435554504395
    9. '();)' → logprob: -12.188435554504395
    10. '());' → logprob: -12.688435554504395

Token 25: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.57975834608078
    2. 'split' → logprob: -0.82975834608078
    3. 'rstrip' → logprob: -5.579758167266846
    4. 'read' → logprob: -11.079758644104004
    5. ' split' → logprob: -11.329758644104004
    6. ')' → logprob: -12.079758644104004
    7. ' strip' → logprob: -12.454758644104004
    8. '```' → logprob: -14.454758644104004
    9. 'replace' → logprob: -15.704758644104004
    10. '(split' → logprob: -16.204757690429688

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860950633883476
    2. '))' → logprob: -3.048609495162964
    3. '),' → logprob: -11.923609733581543
    4. '()' → logprob: -12.048609733581543
    5. '())' → logprob: -12.173609733581543
    6. ')))' → logprob: -13.298609733581543
    7. ')`' → logprob: -14.923609733581543
    8. '(' → logprob: -15.048609733581543
    9. '()))' → logprob: -15.048609733581543
    10. ' )' → logprob: -15.048609733581543

Token 27: 'mod' (ID: 4847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9892882108688354
    2. 'arr' → logprob: -1.4892882108688354
    3. ')' → logprob: -2.239288330078125
    4. 'result' → logprob: -2.864288330078125
    5. 'fact' → logprob: -2.864288330078125
    6. 'numbers' → logprob: -2.989288330078125
    7. ' 
' → logprob: -3.864288330078125
    8. 'data' → logprob: -4.614288330078125
    9. 'factor' → logprob: -4.614288330078125
    10. 'nums' → logprob: -4.739288330078125

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.180206760764122
    2. '=' → logprob: -1.8052067756652832
    3. 'ulus' → logprob: -8.805206298828125
    4. ' ' → logprob: -9.430206298828125
    5. '_' → logprob: -9.805206298828125
    6. 'ulo' → logprob: -10.180206298828125
    7. 'ular' → logprob: -10.555206298828125
    8. ',' → logprob: -10.930206298828125
    9. 'ulous' → logprob: -11.305206298828125
    10. 'ulu' → logprob: -11.305206298828125

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38697734475135803
    2. '10' → logprob: -1.1369773149490356
    3. '100' → logprob: -9.261977195739746
    4. '1' → logprob: -11.511977195739746
    5. 'int' → logprob: -15.136977195739746
    6. ' ' → logprob: -15.136977195739746
    7. '998' → logprob: -15.636977195739746
    8. '0' → logprob: -15.761977195739746
    9. 'pow' → logprob: -16.261978149414062
    10. ' (' → logprob: -16.636978149414062

Token 30: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03055262751877308
    2. '100' → logprob: -3.530552625656128
    3. ' ' → logprob: -7.780552864074707
    4. '1' → logprob: -7.905552864074707
    5. '998' → logprob: -11.655552864074707
    6. 'int' → logprob: -12.280552864074707
    7. '(' → logprob: -13.780552864074707
    8. '0' → logprob: -14.655552864074707
    9. 'pow' → logprob: -15.405552864074707
    10. '101' → logprob: -16.03055191040039

Token 31: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08159787207841873
    2. '09' → logprob: -3.0815978050231934
    3. '**' → logprob: -3.4565978050231934
    4. '009' → logprob: -7.956597805023193
    5. '000' → logprob: -8.206598281860352
    6. '```' → logprob: -9.456598281860352
    7. '00' → logprob: -9.581598281860352
    8. '0' → logprob: -9.956598281860352
    9. '07' → logprob: -10.456598281860352
    10. '007' → logprob: -10.831598281860352

Token 32: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.625000953674316
    3. '```' → logprob: -16.625
    4. '+' → logprob: -16.625
    5. '10' → logprob: -17.75
    6. ' ' → logprob: -18.125
    7. '18' → logprob: -18.25
    8. '8' → logprob: -19.625
    9. '6' → logprob: -19.625
    10. '19' → logprob: -19.875

Token 33: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.2200749754119897e-06
    2. '09' → logprob: -13.750001907348633
    3. '+' → logprob: -15.250001907348633
    4. '18' → logprob: -15.375001907348633
    5. '```' → logprob: -15.875001907348633
    6. '10' → logprob: -16.625001907348633
    7. '8' → logprob: -17.000001907348633
    8. '6' → logprob: -17.062501907348633
    9. ' ' → logprob: -17.187501907348633
    10. '15' → logprob: -17.562501907348633

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008131654933094978
    2. '7' → logprob: -5.133131504058838
    3. ' +' → logprob: -6.133131504058838
    4. '```' → logprob: -11.758131980895996
    5. '+
' → logprob: -11.883131980895996
    6. ' ' → logprob: -12.508131980895996
    7. '9' → logprob: -12.633131980895996
    8. ' plus' → logprob: -13.383131980895996
    9. '+

' → logprob: -13.758131980895996
    10. '＋' → logprob: -14.508131980895996

Token 35: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. '9' → logprob: -15.375
    3. '+' → logprob: -16.125
    4. ' ' → logprob: -16.375
    5. '```' → logprob: -18.875
    6. '07' → logprob: -19.125
    7. '   ' → logprob: -20.5
    8. '' → logprob: -21.125
    9. '17' → logprob: -21.4375
    10. '

' → logprob: -21.5

Token 36: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '+' → logprob: -20.125
    4. '9' → logprob: -20.625
    5. '```' → logprob: -20.875
    6. '07' → logprob: -21.625
    7. '   ' → logprob: -22.0
    8. '７' → logprob: -22.125
    9. '' → logprob: -22.4375
    10. '۷' → logprob: -23.125

Token 37: '

' (ID: 279)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.782148003578186
    2. '
' → logprob: -1.782148003578186
    3. 'n' → logprob: -2.4071478843688965
    4. 'def' → logprob: -2.6571478843688965
    5. ' 

' → logprob: -2.7821478843688965
    6. '\n' → logprob: -3.2821478843688965
    7. 'a' → logprob: -3.6571478843688965
    8. '' → logprob: -3.7821478843688965
    9. '\' → logprob: -4.1571478843688965
    10. ' ' → logprob: -4.2821478843688965

Token 38: 'def' (ID: 1314)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6848669648170471
    2. 'factor' → logprob: -1.9348669052124023
    3. 'def' → logprob: -2.3098669052124023
    4. 'a' → logprob: -2.6848669052124023
    5. 'f' → logprob: -2.9348669052124023
    6. 'c' → logprob: -3.4348669052124023
    7. 'if' → logprob: -4.059866905212402
    8. 'result' → logprob: -4.184866905212402
    9. 'n' → logprob: -4.559866905212402
    10. 'facts' → logprob: -4.934866905212402

Token 39: ' make' (ID: 1520)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3560165464878082
    2. ' factorial' → logprob: -2.1060166358947754
    3. ' cmb' → logprob: -2.9810166358947754
    4. ' n' → logprob: -3.1060166358947754
    5. ' c' → logprob: -4.231016635894775
    6. ' ' → logprob: -4.606016635894775
    7. ' combination' → logprob: -4.606016635894775
    8. ' combine' → logprob: -4.731016635894775
    9. 'comb' → logprob: -5.231016635894775
    10. ' mod' → logprob: -5.481016635894775

Token 40: '_com' (ID: 10828)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.544041633605957
    2. '_' → logprob: -1.044041633605957
    3. '_comb' → logprob: -3.044041633605957
    4. '_fac' → logprob: -5.044041633605957
    5. '_div' → logprob: -5.419041633605957
    6. '_fact' → logprob: -5.544041633605957
    7. '_bin' → logprob: -6.794041633605957
    8. '_c' → logprob: -7.544041633605957
    9. '_f' → logprob: -7.919041633605957
    10. '_list' → logprob: -8.169041633605957

Token 41: 'binations' (ID: 113572)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03958577662706375
    2. 'bination' → logprob: -3.414585828781128
    3. 'binations' → logprob: -5.539585590362549
    4. 'bin' → logprob: -6.289585590362549
    5. '_b' → logprob: -9.789586067199707
    6. '```' → logprob: -10.164586067199707
    7. 'bine' → logprob: -11.039586067199707
    8. 'bined' → logprob: -12.164586067199707
    9. 'bi' → logprob: -12.664586067199707
    10. 'bis' → logprob: -13.039586067199707

Token 42: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5767309069633484
    2. '(n' → logprob: -0.8267309069633484
    3. '(:' → logprob: -8.951730728149414
    4. '(i' → logprob: -9.076730728149414
    5. '(_' → logprob: -9.201730728149414
    6. 's' → logprob: -9.201730728149414
    7. '(k' → logprob: -10.076730728149414
    8. '_' → logprob: -10.326730728149414
    9. '(a' → logprob: -10.576730728149414
    10. '(_:' → logprob: -10.576730728149414

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03897428512573242
    2. '):' → logprob: -3.2889742851257324
    3. ',n' → logprob: -7.663974285125732
    4. ')' → logprob: -8.41397476196289
    5. ' ,' → logprob: -8.78897476196289
    6. ' ):' → logprob: -10.53897476196289
    7. ':' → logprob: -10.91397476196289
    8. ',size' → logprob: -11.78897476196289
    9. ' ' → logprob: -12.53897476196289
    10. ',:' → logprob: -12.53897476196289

Token 44: ' m' (ID: 284)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5307546854019165
    2. 'mod' → logprob: -0.9057546854019165
    3. ' max' → logprob: -5.905754566192627
    4. 'max' → logprob: -6.405754566192627
    5. ' modulus' → logprob: -6.405754566192627
    6. ' p' → logprob: -8.280755043029785
    7. ' modulo' → logprob: -8.405755043029785
    8. 'p' → logprob: -8.905755043029785
    9. 'MOD' → logprob: -9.030755043029785
    10. ' k' → logprob: -9.155755043029785

Token 45: '):
' (ID: 1883)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.6764622926712036
    2. '):' → logprob: -0.9264622926712036
    3. 'od' → logprob: -2.551462173461914
    4. 'a' → logprob: -4.676462173461914
    5. '=' → logprob: -5.926462173461914
    6. ')' → logprob: -6.051462173461914
    7. '):
' → logprob: -6.426462173461914
    8. 'o' → logprob: -7.176462173461914
    9. 'x' → logprob: -8.176462173461914
    10. ' ):' → logprob: -9.301462173461914

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25803524255752563
    2. '   ' → logprob: -2.133035182952881
    3. '):' → logprob: -2.758035182952881
    4. ' :' → logprob: -3.508035182952881
    5. ' ' → logprob: -5.758035182952881
    6. '():' → logprob: -5.883035182952881
    7. '    ' → logprob: -6.133035182952881
    8. ':
' → logprob: -6.508035182952881
    9. '):
' → logprob: -6.633035182952881
    10. ',' → logprob: -7.008035182952881

Token 47: ' numer' (ID: 9076)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8465093374252319
    2. 'fact' → logprob: -1.346509337425232
    3. ' fact' → logprob: -2.7215094566345215
    4. 'fac' → logprob: -2.7215094566345215
    5. 'factor' → logprob: -2.7215094566345215
    6. ' fac' → logprob: -2.9715094566345215
    7. ' factorial' → logprob: -3.8465094566345215
    8. '    ' → logprob: -4.2215094566345215
    9. 'f' → logprob: -4.7215094566345215
    10. ':' → logprob: -5.5965094566345215

Token 48: ' =' (ID: 314)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.0017550260527059436
    2. 'ators' → logprob: -6.376755237579346
    3. '=' → logprob: -10.501754760742188
    4. ' =' → logprob: -10.626754760742188
    5. 'a' → logprob: -14.376754760742188
    6. 'ATOR' → logprob: -15.501754760742188
    7. 'al' → logprob: -16.376754760742188
    8. '```' → logprob: -16.751754760742188
    9. 's' → logprob: -17.251754760742188
    10. '   ' → logprob: -17.376754760742188

Token 49: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.0678688287734985
    2. '[' → logprob: -1.3178688287734985
    3. ' [' → logprob: -1.5678688287734985
    4. '1' → logprob: -2.192868709564209
    5. ' reduce' → logprob: -3.192868709564209
    6. ' ' → logprob: -4.567868709564209
    7. '[]' → logprob: -4.942868709564209
    8. 'lambda' → logprob: -5.817868709564209
    9. ' lambda' → logprob: -6.567868709564209
    10. 'range' → logprob: -6.692868709564209

Token 50: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18042513728141785
    2. '(m' → logprob: -1.8054251670837402
    3. '(lambda' → logprob: -7.80542516708374
    4. '(
' → logprob: -8.430424690246582
    5. '(operator' → logprob: -10.555424690246582
    6. '(mu' → logprob: -11.680424690246582
    7. 'mul' → logprob: -11.805424690246582
    8. '(mult' → logprob: -12.430424690246582
    9. ' (' → logprob: -12.555424690246582
    10. '(

' → logprob: -13.430424690246582

Token 51: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -4.179569077678025e-05
    2. '<ul' → logprob: -10.500041961669922
    3. 'mul' → logprob: -12.625041961669922
    4. 'u' → logprob: -13.125041961669922
    5. ' ul' → logprob: -13.125041961669922
    6. 'ул' → logprob: -13.750041961669922
    7. 'ult' → logprob: -13.750041961669922
    8. 'ultip' → logprob: -14.375041961669922
    9. ' mul' → logprob: -14.750041961669922
    10. '[' → logprob: -14.750041961669922

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010723850573413074
    2. ',[' → logprob: -9.500106811523438
    3. 'range' → logprob: -11.250106811523438
    4. ' ,' → logprob: -11.500106811523438
    5. ',(' → logprob: -12.375106811523438
    6. '(range' → logprob: -12.625106811523438
    7. ',
' → logprob: -15.250106811523438
    8. 'lambda' → logprob: -15.500106811523438
    9. ' ,[' → logprob: -15.750106811523438
    10. '(' → logprob: -16.125106811523438

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5055601000785828
    2. ' range' → logprob: -1.5055601596832275
    3. '(range' → logprob: -1.7555601596832275
    4. '[' → logprob: -6.630559921264648
    5. ' [' → logprob: -8.130559921264648
    6. '	range' → logprob: -8.880559921264648
    7. ' (' → logprob: -9.005559921264648
    8. ')' → logprob: -10.005559921264648
    9. '[i' → logprob: -10.130559921264648
    10. '(' → logprob: -10.255559921264648

Token 54: '(m' (ID: 2145)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.3661445677280426
    2. '(' → logprob: -1.3661445379257202
    3. '(n' → logprob: -2.9911446571350098
    4. '(m' → logprob: -7.24114465713501
    5. '(k' → logprob: -7.61614465713501
    6. ' (' → logprob: -10.616144180297852
    7. '(s' → logprob: -12.241144180297852
    8. ')(' → logprob: -12.366144180297852
    9. '[size' → logprob: -12.366144180297852
    10. ')' → logprob: -12.491144180297852

Token 55: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3264288604259491
    2. ',' → logprob: -1.9514288902282715
    3. '-size' → logprob: -2.8264288902282715
    4. '-' → logprob: -3.5764288902282715
    5. ',size' → logprob: -4.2014288902282715
    6. '+' → logprob: -4.9514288902282715
    7. '-n' → logprob: -5.4514288902282715
    8. '-m' → logprob: -5.4514288902282715
    9. '-k' → logprob: -5.4514288902282715
    10. 'size' → logprob: -5.7014288902282715

Token 56: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006743319798260927
    2. ' m' → logprob: -5.006743431091309
    3. '(m' → logprob: -11.256743431091309
    4. 'size' → logprob: -13.131743431091309
    5. '	m' → logprob: -13.256743431091309
    6. ')m' → logprob: -13.256743431091309
    7. ',' → logprob: -13.381743431091309
    8. '   ' → logprob: -13.819243431091309
    9. '    ' → logprob: -14.381743431091309
    10. '>' → logprob: -14.381743431091309

Token 57: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02196977101266384
    2. ' +' → logprob: -4.021969795227051
    3. ' -' → logprob: -6.146969795227051
    4. '-' → logprob: -6.646969795227051
    5. '-size' → logprob: -7.896969795227051
    6. '+-' → logprob: -14.02196979522705
    7. '+n' → logprob: -14.27196979522705
    8. '+
' → logprob: -15.39696979522705
    9. '<size' → logprob: -16.021968841552734
    10. 'size' → logprob: -16.021968841552734

Token 58: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.05950992554426193
    2. ' -' → logprob: -3.3095099925994873
    3. '-size' → logprob: -4.434509754180908
    4. ' size' → logprob: -5.184509754180908
    5. '+' → logprob: -6.184509754180908
    6. ' +' → logprob: -7.309509754180908
    7. '-' → logprob: -7.809509754180908
    8. '(size' → logprob: -7.934509754180908
    9. '<size' → logprob: -8.559510231018066
    10. ':size' → logprob: -10.684510231018066

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005519599071703851
    2. ' ,' → logprob: -8.1255521774292
    3. '+' → logprob: -8.7505521774292
    4. ',-' → logprob: -9.3755521774292
    5. ' +' → logprob: -12.5005521774292
    6. ',
' → logprob: -13.1255521774292
    7. '+,' → logprob: -13.8755521774292
    8. '0' → logprob: -14.3755521774292
    9. ',None' → logprob: -14.3755521774292
    10. ' ,-' → logprob: -14.3755521774292

Token 60: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2812492549419403
    2. ' -' → logprob: -1.4062492847442627
    3. '0' → logprob: -10.031249046325684
    4. ' ' → logprob: -11.281249046325684
    5. '1' → logprob: -11.531249046325684
    6. '-m' → logprob: -11.656249046325684
    7. '-step' → logprob: -12.406249046325684
    8. '   ' → logprob: -12.531249046325684
    9. '	' → logprob: -12.656249046325684
    10. '−' → logprob: -13.031249046325684

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.1250057220459
    4. ')' → logprob: -17.1250057220459
    5. '１' → logprob: -17.2500057220459
    6. '
' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.5000057220459
    8. '-' → logprob: -17.6250057220459
    9. ' -' → logprob: -17.6250057220459
    10. '

' → logprob: -17.7500057220459

Token 62: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0008283290662802756
    2. ')' → logprob: -7.375828266143799
    3. ' ),' → logprob: -9.000828742980957
    4. '))' → logprob: -9.500828742980957
    5. ',' → logprob: -13.750828742980957
    6. '),
' → logprob: -14.000828742980957
    7. ',),' → logprob: -14.750828742980957
    8. '),(' → logprob: -14.875828742980957
    9. '1' → logprob: -15.625828742980957
    10. ' ' → logprob: -16.25082778930664

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815146580338478
    2. ' ' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.51815128326416
    4. ')' → logprob: -15.26815128326416
    5. '  ' → logprob: -15.26815128326416
    6. ' ' → logprob: -15.51815128326416
    7. '<|end|>' → logprob: -16.830652236938477
    8. '```' → logprob: -16.955652236938477
    9. '	' → logprob: -17.143152236938477
    10. '۱' → logprob: -17.268152236938477

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -14.750296592712402
    4. ')' → logprob: -16.12529754638672
    5. '  ' → logprob: -16.62529754638672
    6. '	' → logprob: -17.37529754638672
    7. ' ' → logprob: -17.75029754638672
    8. '```' → logprob: -18.00029754638672
    9. '`' → logprob: -18.50029754638672
    10. '۱' → logprob: -18.62529754638672

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02358214743435383
    2. ')
' → logprob: -3.7735822200775146
    3. ' )' → logprob: -8.523582458496094
    4. ')
' → logprob: -9.273582458496094
    5. ' )
' → logprob: -10.648582458496094
    6. '   ' → logprob: -11.773582458496094
    7. ')

' → logprob: -11.898582458496094
    8. ',' → logprob: -12.898582458496094
    9. ')*' → logprob: -14.273582458496094
    10. ')\' → logprob: -14.773582458496094

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23011498153209686
    2. '
' → logprob: -2.8551149368286133
    3. ',' → logprob: -3.1051149368286133
    4. ')' → logprob: -3.6051149368286133
    5. '    
' → logprob: -4.230114936828613
    6. '<|end|>' → logprob: -4.730114936828613
    7. ' denom' → logprob: -4.980114936828613
    8. 'den' → logprob: -4.980114936828613
    9. ' ' → logprob: -5.230114936828613
    10. ' denominator' → logprob: -5.355114936828613

Token 67: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.5358288288116455
    2. ' denom' → logprob: -1.5358288288116455
    3. '   ' → logprob: -1.6608288288116455
    4. ' den' → logprob: -5.410828590393066
    5. '    ' → logprob: -6.035828590393066
    6. 'd' → logprob: -7.285828590393066
    7. 'dem' → logprob: -7.660828590393066
    8. '    
' → logprob: -8.160828590393066
    9. ' denomin' → logprob: -8.285828590393066
    10. '  ' → logprob: -8.660828590393066

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193077325820923
    2. '=' → logprob: -1.5019307136535645
    3. ' *=' → logprob: -13.876931190490723
    4. '  ' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.251930236816406
    6. ',' → logprob: -16.251930236816406
    7. 's' → logprob: -16.501930236816406
    8. ' =
' → logprob: -16.501930236816406
    9. '＝' → logprob: -16.751930236816406
    10. '	' → logprob: -16.751930236816406

Token 69: ' ' (ID: 220)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.016148505732417107
    2. ' reduce' → logprob: -4.141148567199707
    3. '1' → logprob: -10.016148567199707
    4. 'factor' → logprob: -11.141148567199707
    5. '   ' → logprob: -11.391148567199707
    6. ' ' → logprob: -11.391148567199707
    7. '    ' → logprob: -11.516148567199707
    8. 'redu' → logprob: -11.641148567199707
    9. 're' → logprob: -12.016148567199707
    10. '  ' → logprob: -12.766148567199707

Token 70: '1' (ID: 16)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.00013572083844337612
    2. ' reduce' → logprob: -9.12513542175293
    3. 'factor' → logprob: -10.87513542175293
    4. '1' → logprob: -12.25013542175293
    5. 'redu' → logprob: -14.25013542175293
    6. '   ' → logprob: -14.25013542175293
    7. '  ' → logprob: -14.87513542175293
    8. ' ' → logprob: -15.00013542175293
    9. 're' → logprob: -15.25013542175293
    10. '    ' → logprob: -15.37513542175293

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.270751953125
    2. '<|end|>' → logprob: -2.020751953125
    3. '    
' → logprob: -3.270751953125
    4. '1' → logprob: -4.395751953125
    5. 'def' → logprob: -4.520751953125
    6. '  
' → logprob: -5.020751953125
    7. '<|end|>' → logprob: -5.020751953125
    8. '```' → logprob: -5.145751953125
    9. '   
' → logprob: -5.270751953125
    10. 'for' → logprob: -5.770751953125

Token 72: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' comb' (ID: 4134)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003990423399955034
    2. ' for' → logprob: -5.628990650177002
    3. 'range' → logprob: -8.253990173339844
    4. '   ' → logprob: -9.503990173339844
    5. '	for' → logprob: -10.378990173339844
    6. 'from' → logprob: -11.878990173339844
    7. '```' → logprob: -12.503990173339844
    8. ' ' → logprob: -12.753990173339844
    9. '...' → logprob: -12.878990173339844
    10. '<|end|>' → logprob: -13.003990173339844

Token 74: ' =' (ID: 314)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.5021578073501587
    2. '/' → logprob: -1.8771578073501587
    3. 'inations' → logprob: -2.127157688140869
    4. '=' → logprob: -3.127157688140869
    5. 'size' → logprob: -3.252157688140869
    6. '/n' → logprob: -5.127157688140869
    7. '/=' → logprob: -5.252157688140869
    8. '   ' → logprob: -5.502157688140869
    9. ' /=' → logprob: -5.627157688140869
    10. '_size' → logprob: -5.627157688140869

Token 75: ' [' (ID: 723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13951769471168518
    2. 'size' → logprob: -3.0145177841186523
    3. ' ' → logprob: -3.8895177841186523
    4. 'numer' → logprob: -4.264517784118652
    5. '[' → logprob: -4.389517784118652
    6. ' size' → logprob: -5.014517784118652
    7. '[n' → logprob: -5.264517784118652
    8. 'mod' → logprob: -5.514517784118652
    9. '[]' → logprob: -5.764517784118652
    10. '[size' → logprob: -5.889517784118652

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034761743154376745
    2. '0' → logprob: -5.753476142883301
    3. ']' → logprob: -8.8784761428833
    4. '   ' → logprob: -10.2534761428833
    5. 'den' → logprob: -10.3784761428833
    6. 'size' → logprob: -10.7534761428833
    7. ' ' → logprob: -11.1284761428833
    8. 'm' → logprob: -11.5034761428833
    9. ')' → logprob: -12.0034761428833
    10. 'None' → logprob: -12.1284761428833

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005060368217527866
    2. ']*(' → logprob: -5.755060195922852
    3. ']
' → logprob: -6.505060195922852
    4. ']*' → logprob: -9.005060195922852
    5. ' for' → logprob: -9.130060195922852
    6. 'for' → logprob: -9.505060195922852
    7. ']+' → logprob: -10.130060195922852
    8. ']
' → logprob: -11.130060195922852
    9. ' ]' → logprob: -11.755060195922852
    10. ',' → logprob: -12.005060195922852

Token 78: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10581771284341812
    2. 'for' → logprob: -2.6058177947998047
    3. '	for' → logprob: -4.730817794799805
    4. '   ' → logprob: -4.730817794799805
    5. ',' → logprob: -5.355817794799805
    6. ' ' → logprob: -6.230817794799805
    7. '<|end|>' → logprob: -6.355817794799805
    8. ' ,' → logprob: -9.230817794799805
    9. '  ' → logprob: -9.730817794799805
    10. ' range' → logprob: -10.355817794799805

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2571216821670532
    2. 'for' (adapté à ' for') → logprob: -1.5071216821670532
    3. ' ' → logprob: -5.757121562957764
    4. '	for' → logprob: -7.132121562957764
    5. ' range' → logprob: -7.757121562957764
    6. '   ' → logprob: -8.382122039794922
    7. 'range' → logprob: -8.382122039794922
    8. ',' → logprob: -9.132122039794922
    9. 'or' → logprob: -10.007122039794922
    10. ' ' → logprob: -10.507122039794922

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13010668754577637
    2. 'i' → logprob: -2.1301066875457764
    3. ' ' → logprob: -6.1301069259643555
    4. '	i' → logprob: -7.3801069259643555
    5. ' x' → logprob: -9.255106925964355
    6. 'x' → logprob: -9.505106925964355
    7. ' d' → logprob: -9.505106925964355
    8. 'd' → logprob: -10.005106925964355
    9. ' j' → logprob: -11.005106925964355
    10. ' ' → logprob: -11.505106925964355

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006744616664946079
    2. 'in' → logprob: -5.006744384765625
    3. ' ' → logprob: -11.131744384765625
    4. ',' → logprob: -12.006744384765625
    5. '	in' → logprob: -12.631744384765625
    6. 'n' → logprob: -13.006744384765625
    7. '1' → logprob: -14.756744384765625
    8. 'In' → logprob: -15.006744384765625
    9. 'range' → logprob: -15.256744384765625
    10. '  ' → logprob: -15.256744384765625

Token 82: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005336097441613674
    2. 'range' → logprob: -5.255336284637451
    3. '	range' → logprob: -9.755335807800293
    4. ' ' → logprob: -10.380335807800293
    5. '  ' → logprob: -12.130335807800293
    6. '(range' → logprob: -13.130335807800293
    7. ' xrange' → logprob: -13.130335807800293
    8. ' ' → logprob: -13.505335807800293
    9. '```' → logprob: -14.505335807800293
    10. '[' → logprob: -15.130335807800293

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002625278721097857
    2. '(size' → logprob: -8.250262260437012
    3. '1' → logprob: -14.000262260437012
    4. '(n' → logprob: -15.750262260437012
    5. ' (' → logprob: -16.125263214111328
    6. '(k' → logprob: -16.625263214111328
    7. '(s' → logprob: -17.625263214111328
    8. '(
' → logprob: -17.750263214111328
    9. '(i' → logprob: -17.750263214111328
    10. '(

' → logprob: -18.125263214111328

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004284043679945171
    2. 'size' → logprob: -7.875428199768066
    3. ' ' → logprob: -10.250428199768066
    4. '2' → logprob: -12.000428199768066
    5. ' size' → logprob: -12.125428199768066
    6. '(' → logprob: -14.625428199768066
    7. 'n' → logprob: -15.375428199768066
    8. ')' → logprob: -16.000429153442383
    9. '	size' → logprob: -16.000429153442383
    10. '(size' → logprob: -16.375429153442383

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023643692838959396
    2. ',size' → logprob: -8.750236511230469
    3. ' ,' → logprob: -9.625236511230469
    4. ',
' → logprob: -12.000236511230469
    5. ',n' → logprob: -12.125236511230469
    6. ',k' → logprob: -16.12523651123047
    7. 'size' → logprob: -16.25023651123047
    8. ',len' → logprob: -17.62523651123047
    9. ',num' → logprob: -17.87523651123047
    10. ',int' → logprob: -18.00023651123047

Token 86: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.016236942261457443
    2. ' size' → logprob: -4.141236782073975
    3. 'k' → logprob: -9.266237258911133
    4. 'n' → logprob: -9.766237258911133
    5. ' n' → logprob: -10.891237258911133
    6. ' k' → logprob: -10.891237258911133
    7. '	size' → logprob: -12.641237258911133
    8. '(size' → logprob: -12.891237258911133
    9. ',size' → logprob: -13.266237258911133
    10. 'len' → logprob: -14.141237258911133

Token 87: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5787672996520996
    2. ' +' → logprob: -0.8287672996520996
    3. '):' → logprob: -5.9537672996521
    4. '):
' → logprob: -8.578767776489258
    5. ' ):' → logprob: -10.453767776489258
    6. ' ):
' → logprob: -12.953767776489258
    7. ' ' → logprob: -13.078767776489258
    8. ')' → logprob: -13.703767776489258
    9. '   ' → logprob: -13.703767776489258
    10. ',' → logprob: -14.078767776489258

Token 88: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3675175905227661
    2. ':' → logprob: -2.8675174713134766
    3. '    ' → logprob: -3.2425174713134766
    4. ' ' → logprob: -3.2425174713134766
    5. '       ' → logprob: -3.4925174713134766
    6. ' ,' → logprob: -3.8675174713134766
    7. ' 
' → logprob: -3.8675174713134766
    8. ' :' → logprob: -3.9925174713134766
    9. '   ' → logprob: -4.117517471313477
    10. '+' → logprob: -4.242517471313477

Token 89: ' numer' (ID: 9076)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0127044916152954
    2. '    ' → logprob: -1.3877044916152954
    3. ' denom' → logprob: -2.012704372406006
    4. '   ' → logprob: -2.387704372406006
    5. ' ' → logprob: -2.887704372406006
    6. '       ' → logprob: -3.012704372406006
    7. '        ' → logprob: -4.012704372406006
    8. 'comb' → logprob: -5.137704372406006
    9. 'den' → logprob: -5.137704372406006
    10. '```' → logprob: -5.512704372406006

Token 90: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.3984288275241852
    2. ' =' → logprob: -1.7734287977218628
    3. '=' → logprob: -2.6484289169311523
    4. '*=' → logprob: -2.7734289169311523
    5. ' //' → logprob: -4.148428916931152
    6. '//=' → logprob: -5.523428916931152
    7. '*' → logprob: -6.023428916931152
    8. ' ' → logprob: -6.773428916931152
    9. ' *' → logprob: -7.523428916931152
    10. ' /=' → logprob: -7.898428916931152

Token 91: ' numer' (ID: 9076)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4592365622520447
    2. '(n' → logprob: -1.5842366218566895
    3. ' numer' → logprob: -2.2092366218566895
    4. '(' → logprob: -3.7092366218566895
    5. 'numer' → logprob: -3.7092366218566895
    6. ' multip' → logprob: -7.0217366218566895
    7. '(com' → logprob: -7.8342366218566895
    8. 'n' → logprob: -8.146736145019531
    9. '(mult' → logprob: -8.209236145019531
    10. ' ' → logprob: -8.459236145019531

Token 92: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2520209848880768
    2. ' *' → logprob: -1.5020209550857544
    3. '	' → logprob: -11.002020835876465
    4. '**' → logprob: -11.002020835876465
    5. ' ' → logprob: -11.127020835876465
    6. ' ' → logprob: -11.252020835876465
    7. '*i' → logprob: -12.377020835876465
    8. ' **' → logprob: -12.877020835876465
    9. '*=' → logprob: -13.127020835876465
    10. ' *=' → logprob: -13.314520835876465

Token 93: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1173497885465622
    2. '(m' → logprob: -2.617349863052368
    3. '(i' → logprob: -3.867349863052368
    4. '(n' → logprob: -4.367349624633789
    5. '(' → logprob: -5.992349624633789
    6. '(k' → logprob: -6.742349624633789
    7. '(mod' → logprob: -9.367349624633789
    8. 'i' → logprob: -9.742349624633789
    9. '(s' → logprob: -9.992349624633789
    10. '(mult' → logprob: -10.242349624633789

Token 94: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6611250638961792
    2. ' m' → logprob: -0.7861250638961792
    3. ' (' → logprob: -4.161125183105469
    4. '(m' → logprob: -4.411125183105469
    5. '(' → logprob: -8.911125183105469
    6. 'k' → logprob: -9.911125183105469
    7. '    ' → logprob: -9.911125183105469
    8. ' k' → logprob: -10.286125183105469
    9. '   ' → logprob: -10.536125183105469
    10. ' ' → logprob: -11.036125183105469

Token 95: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13101370632648468
    2. '-' → logprob: -2.1310136318206787
    3. '-i' → logprob: -5.506013870239258
    4. ' ' → logprob: -11.506013870239258
    5. '-
' → logprob: -14.131013870239258
    6. '-k' → logprob: -14.131013870239258
    7. ' -
' → logprob: -14.131013870239258
    8. '-ip' → logprob: -14.631013870239258
    9. '   ' → logprob: -15.006013870239258
    10. ' i' → logprob: -15.006013870239258

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6373593807220459
    2. ' i' → logprob: -0.7623593807220459
    3. ' size' → logprob: -5.887359619140625
    4. 'size' → logprob: -6.762359619140625
    5. ' (' → logprob: -7.512359619140625
    6. '(i' → logprob: -8.762359619140625
    7. ' ' → logprob: -9.887359619140625
    8. '(size' → logprob: -11.387359619140625
    9. '1' → logprob: -11.637359619140625
    10. '   ' → logprob: -11.637359619140625

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012437247671186924
    2. ' )' → logprob: -5.387437343597412
    3. '-' → logprob: -5.637437343597412
    4. '+' → logprob: -6.262437343597412
    5. ' -' → logprob: -6.387437343597412
    6. ' +' → logprob: -7.637437343597412
    7. ')
' → logprob: -9.387436866760254
    8. ' ' → logprob: -11.512436866760254
    9. '1' → logprob: -11.637436866760254
    10. '')' → logprob: -12.137436866760254

Token 98: ' %' (ID: 1851)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9421518445014954
    2. ' ' → logprob: -1.1921517848968506
    3. ' //' → logprob: -2.0671517848968506
    4. '<|end|>' → logprob: -2.4421517848968506
    5. '       ' → logprob: -3.5671517848968506
    6. '   ' → logprob: -4.19215202331543
    7. ' *' → logprob: -4.56715202331543
    8. '/' → logprob: -5.06715202331543
    9. '//' → logprob: -5.06715202331543
    10. ')' → logprob: -5.56715202331543

Token 99: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.47422465682029724
    2. ' mod' → logprob: -0.9742246866226196
    3. '(mod' → logprob: -8.849225044250488
    4. '	mod' → logprob: -13.224225044250488
    5. ' ' → logprob: -13.849225044250488
    6. ' ' → logprob: -13.974225044250488
    7. '```' → logprob: -15.849225044250488
    8. ' (' → logprob: -16.099224090576172
    9. 'm' → logprob: -16.099224090576172
    10. '(' → logprob: -16.599224090576172

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01051866915076971
    2. '<|end|>' → logprob: -4.760518550872803
    3. ',' → logprob: -7.260518550872803
    4. '   ' → logprob: -7.385518550872803
    5. '```' → logprob: -8.760519027709961
    6. '        
' → logprob: -9.010519027709961
    7. '        ' → logprob: -9.385519027709961
    8. ' ' → logprob: -10.385519027709961
    9. '<|end|>' → logprob: -10.510519027709961
    10. '
' → logprob: -10.760519027709961

Token 102: ' denom' (ID: 73604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9309965968132019
    2. ' denom' → logprob: -1.1809966564178467
    3. 'den' → logprob: -1.9309966564178467
    4. ' den' → logprob: -2.6809966564178467
    5. ' comb' → logprob: -3.0559966564178467
    6. '   ' → logprob: -3.8059966564178467
    7. ' denominator' → logprob: -4.930996417999268
    8. ' denomin' → logprob: -5.805996417999268
    9. ' ' → logprob: -6.930996417999268
    10. '    ' → logprob: -7.055996417999268

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07270405441522598
    2. '=' → logprob: -2.6977040767669678
    3. ' *=' → logprob: -5.947703838348389
    4. '*=' → logprob: -8.947704315185547
    5. ' ' → logprob: -11.322704315185547
    6. ' *' → logprob: -12.822704315185547
    7. '*' → logprob: -12.822704315185547
    8. ' ' → logprob: -13.822704315185547
    9. '	' → logprob: -14.072704315185547
    10. '```' → logprob: -14.572704315185547

Token 104: ' denom' (ID: 73604)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.7238410115242004
    2. ' denom' → logprob: -1.0988409519195557
    3. '(' → logprob: -1.9738409519195557
    4. ' (' → logprob: -3.2238409519195557
    5. ' den' → logprob: -6.473841190338135
    6. ' denomin' → logprob: -7.098841190338135
    7. ' denominator' → logprob: -8.223840713500977
    8. ' ' → logprob: -9.973840713500977
    9. '```' → logprob: -10.161340713500977
    10. '-den' → logprob: -10.223840713500977

Token 105: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02634000964462757
    2. '*' → logprob: -3.6513400077819824
    3. '*(' → logprob: -10.65134048461914
    4. '*i' → logprob: -11.52634048461914
    5. ' ' → logprob: -13.90134048461914
    6. ' ' → logprob: -14.02634048461914
    7. '**' → logprob: -14.15134048461914
    8. '*=' → logprob: -14.40134048461914
    9. '*object' → logprob: -14.52634048461914
    10. ' (' → logprob: -14.90134048461914

Token 106: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006719282828271389
    2. ' i' → logprob: -5.00671911239624
    3. '(i' → logprob: -12.756719589233398
    4. '	i' → logprob: -14.506719589233398
    5. '   ' → logprob: -15.631719589233398
    6. 'pow' → logprob: -16.0067195892334
    7. '(' → logprob: -16.0067195892334
    8. ' (' → logprob: -16.2567195892334
    9. ' ' → logprob: -17.5067195892334
    10. 'factor' → logprob: -17.6317195892334

Token 107: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03385338559746742
    2. '%' → logprob: -3.40885329246521
    3. ' mod' → logprob: -9.783853530883789
    4. ' ' → logprob: -10.158853530883789
    5. ' ' → logprob: -10.533853530883789
    6. '   ' → logprob: -10.783853530883789
    7. ' %
' → logprob: -11.408853530883789
    8. '<|end|>' → logprob: -11.408853530883789
    9. 'mod' → logprob: -11.533853530883789
    10. ')' → logprob: -11.908853530883789

Token 108: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00015943869948387146
    2. ' mod' → logprob: -8.75015926361084
    3. '(mod' → logprob: -14.00015926361084
    4. '	mod' → logprob: -16.625160217285156
    5. '```' → logprob: -17.500160217285156
    6. 'm' → logprob: -19.375160217285156
    7. '
' → logprob: -19.500160217285156
    8. 'moder' → logprob: -21.000160217285156
    9. ' мод' → logprob: -21.250160217285156
    10. '`' → logprob: -21.250160217285156

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5377355813980103
    2. '   ' → logprob: -0.9127355813980103
    3. '<|end|>' → logprob: -5.287735462188721
    4. ' ' → logprob: -5.662735462188721
    5. ',' → logprob: -5.787735462188721
    6. ' comb' → logprob: -6.787735462188721
    7. '	' → logprob: -8.287735939025879
    8. '	com' → logprob: -8.787735939025879
    9. '	return' → logprob: -8.912735939025879
    10. ',
' → logprob: -9.037735939025879

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2173130363225937
    2. '   ' → logprob: -1.7173130512237549
    3. ' ' → logprob: -5.342312812805176
    4. '<|end|>' → logprob: -5.342312812805176
    5. '```' → logprob: -6.592312812805176
    6. ' comb' → logprob: -6.842312812805176
    7. ',' → logprob: -7.467312812805176
    8. '
' → logprob: -7.592312812805176
    9. '        
' → logprob: -7.717312812805176
    10. '    
' → logprob: -7.967312812805176

Token 111: ' val' (ID: 1459)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0885656401515007
    2. ' comb' → logprob: -2.9635655879974365
    3. '   ' → logprob: -3.5885655879974365
    4. '       ' → logprob: -5.713565826416016
    5. 'com' → logprob: -6.338565826416016
    6. '(com' → logprob: -9.713565826416016
    7. 'inv' → logprob: -9.713565826416016
    8. 'pow' → logprob: -10.338565826416016
    9. ' ' → logprob: -10.463565826416016
    10. '
' → logprob: -10.838565826416016

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23356343805789948
    2. 's' → logprob: -1.6085634231567383
    3. '=' → logprob: -4.858563423156738
    4. ' ' → logprob: -8.983563423156738
    5. ' s' → logprob: -9.108563423156738
    6. '  ' → logprob: -10.108563423156738
    7. '   ' → logprob: -10.358563423156738
    8. '.append' → logprob: -11.108563423156738
    9. '=s' → logprob: -11.108563423156738
    10. '.' → logprob: -12.108563423156738

Token 113: ' numer' (ID: 9076)
  Prédit: ' numer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numer' → logprob: -0.7156217694282532
    2. 'numer' → logprob: -0.8406217694282532
    3. '(n' → logprob: -2.8406217098236084
    4. ' (' → logprob: -3.9656217098236084
    5. 'n' → logprob: -6.5906219482421875
    6. ' numerator' → logprob: -8.215621948242188
    7. '   ' → logprob: -8.778121948242188
    8. ' n' → logprob: -9.215621948242188
    9. '	n' → logprob: -9.278121948242188
    10. '(' → logprob: -9.965621948242188

Token 114: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0003422567679081112
    2. '*' → logprob: -8.00034236907959
    3. ' ' → logprob: -13.00034236907959
    4. ' ' → logprob: -13.25034236907959
    5. 'pow' → logprob: -14.00034236907959
    6. '<|end|>' → logprob: -14.25034236907959
    7. '   ' → logprob: -15.50034236907959
    8. ' pow' → logprob: -15.62534236907959
    9. '	' → logprob: -15.62534236907959
    10. '*object' → logprob: -16.375341415405273

Token 115: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14280299842357635
    2. ' pow' → logprob: -2.0178029537200928
    3. '(pow' → logprob: -9.017803192138672
    4. '   ' → logprob: -12.642803192138672
    5. '_pow' → logprob: -14.017803192138672
    6. ' ' → logprob: -14.392803192138672
    7. '```' → logprob: -14.892803192138672
    8. '	' → logprob: -15.017803192138672
    9. '.pow' → logprob: -15.267803192138672
    10. '	p' → logprob: -15.642803192138672

Token 116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.176947600673884e-05
    2. 'den' → logprob: -10.750021934509277
    3. '(
' → logprob: -16.25002098083496
    4. '((' → logprob: -16.37502098083496
    5. '(pow' → logprob: -16.87502098083496
    6. ' (' → logprob: -18.37502098083496
    7. '(d' → logprob: -18.50002098083496
    8. '(mod' → logprob: -18.62502098083496
    9. '(val' → logprob: -19.50002098083496
    10. '(D' → logprob: -19.50002098083496

Token 117: 'den' (ID: 1660)
  Prédit: 'den'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.011049000546336174
    2. '(' → logprob: -4.511048793792725
    3. ' denom' → logprob: -14.011049270629883
    4. '-den' → logprob: -15.386049270629883
    5. ' den' → logprob: -17.011049270629883
    6. ')' → logprob: -17.011049270629883
    7. 'Den' → logprob: -17.261049270629883
    8. '   ' → logprob: -17.511049270629883
    9. '_den' → logprob: -17.511049270629883
    10. 'pow' → logprob: -17.636049270629883

Token 118: 'om' (ID: 310)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07233697175979614
    2. 'om' → logprob: -2.6973369121551514
    3. '(mod' → logprob: -7.1973371505737305
    4. '```' → logprob: -7.4473371505737305
    5. ' mod' → logprob: -8.07233715057373
    6. 'val' → logprob: -8.44733715057373
    7. 'm' → logprob: -8.57233715057373
    8. 'com' → logprob: -9.19733715057373
    9. 'omod' → logprob: -10.32233715057373
    10. '  ' → logprob: -11.19733715057373

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03441399708390236
    2. '(mod' → logprob: -3.409414052963257
    3. ',val' → logprob: -8.409414291381836
    4. '(' → logprob: -8.534414291381836
    5. ' ,' → logprob: -8.659414291381836
    6. ',(' → logprob: -9.784414291381836
    7. ',-' → logprob: -10.534414291381836
    8. 'mod' → logprob: -11.284414291381836
    9. ' (' → logprob: -11.284414291381836
    10. ',
' → logprob: -11.284414291381836

Token 120: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.009886649437248707
    2. ' mod' → logprob: -4.634886741638184
    3. '(mod' → logprob: -9.759886741638184
    4. '	mod' → logprob: -10.259886741638184
    5. '-' → logprob: -10.634886741638184
    6. '-mod' → logprob: -11.634886741638184
    7. '<|end|>' → logprob: -12.884886741638184
    8. ' -' → logprob: -14.134886741638184
    9. '.mod' → logprob: -14.634886741638184
    10. ' ' → logprob: -14.759886741638184

Token 121: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078401252627373
    2. ' -' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.379077911376953
    4. '−' → logprob: -19.629077911376953
    5. '```' → logprob: -19.879077911376953
    6. '-
' → logprob: -21.254077911376953
    7. '   ' → logprob: -21.504077911376953
    8. '  ' → logprob: -21.879077911376953
    9. '–' → logprob: -22.004077911376953
    10. '-mod' → logprob: -22.754077911376953

Token 122: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '

' → logprob: -15.375000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '-' → logprob: -15.937500953674316
    5. '```' → logprob: -16.000001907348633
    6. '
' → logprob: -17.062501907348633
    7. '۲' → logprob: -17.500001907348633
    8. '' → logprob: -18.437501907348633
    9. '...' → logprob: -18.500001907348633
    10. '२' → logprob: -18.750001907348633

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.750000953674316
    3. '

' → logprob: -15.000000953674316
    4. '
' → logprob: -15.250000953674316
    5. ' ' → logprob: -16.187501907348633
    6. '-' → logprob: -16.500001907348633
    7. '3' → logprob: -17.812501907348633
    8. '
' → logprob: -17.875001907348633
    9. '۲' → logprob: -18.000001907348633
    10. '' → logprob: -18.437501907348633

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034118397161364555
    2. ' ,' → logprob: -8.000341415405273
    3. ',
' → logprob: -12.625341415405273
    4. ')' → logprob: -13.125341415405273
    5. '%' → logprob: -15.750341415405273
    6. '%,' → logprob: -16.125341415405273
    7. ' %' → logprob: -16.500341415405273
    8. 'mod' → logprob: -16.875341415405273
    9. ',module' → logprob: -17.375341415405273
    10. '   ' → logprob: -17.625341415405273

Token 125: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003177952254191041
    2. ' mod' → logprob: -5.753178119659424
    3. '	mod' → logprob: -15.628177642822266
    4. '(mod' → logprob: -17.503177642822266
    5. ')' → logprob: -19.378177642822266
    6. ' ' → logprob: -19.878177642822266
    7. '
' → logprob: -20.003177642822266
    8. '```' → logprob: -20.378177642822266
    9. '   ' → logprob: -20.503177642822266
    10. 'moder' → logprob: -20.753177642822266

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006006922340020537
    2. ',' → logprob: -8.125600814819336
    3. ' )' → logprob: -8.375600814819336
    4. ')%' → logprob: -9.750600814819336
    5. ')
' → logprob: -11.750600814819336
    6. ' ' → logprob: -13.125600814819336
    7. '   ' → logprob: -13.500600814819336
    8. '%' → logprob: -13.500600814819336
    9. ')`' → logprob: -14.250600814819336
    10. '	' → logprob: -14.250600814819336

Token 127: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0882878303527832
    2. '%' → logprob: -3.088287830352783
    3. '       ' → logprob: -3.338287830352783
    4. '
' → logprob: -6.838287830352783
    5. '	' → logprob: -7.088287830352783
    6. '   ' → logprob: -7.838287830352783
    7. ')' → logprob: -7.963287830352783
    8. ',' → logprob: -8.338287353515625
    9. '```' → logprob: -8.588287353515625
    10. ' %
' → logprob: -9.463287353515625

Token 128: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00033558503491804004
    2. ' mod' → logprob: -8.000335693359375
    3. '(mod' → logprob: -16.500335693359375
    4. '	mod' → logprob: -19.000335693359375
    5. '
' → logprob: -22.000335693359375
    6. '```' → logprob: -22.500335693359375
    7. ' ' → logprob: -23.750335693359375
    8. ' мод' → logprob: -24.000335693359375
    9. 'm' → logprob: -24.250335693359375
    10. 'moder' → logprob: -24.500335693359375

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2705917954444885
    2. ' comb' → logprob: -1.5205917358398438
    3. '   ' → logprob: -4.895591735839844
    4. '	' → logprob: -5.270591735839844
    5. '
' → logprob: -6.145591735839844
    6. 'com' → logprob: -6.645591735839844
    7. '	com' → logprob: -6.770591735839844
    8. 'comb' → logprob: -7.770591735839844
    9. '(com' → logprob: -8.645591735839844
    10. ',' → logprob: -8.645591735839844

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010665285401046276
    2. ' comb' → logprob: -5.135665416717529
    3. '   ' → logprob: -5.385665416717529
    4. 'com' → logprob: -9.635664939880371
    5. 'comb' → logprob: -10.260664939880371
    6. '	' → logprob: -11.260664939880371
    7. '```' → logprob: -11.385664939880371
    8. '	com' → logprob: -11.885664939880371
    9. '        
' → logprob: -12.635664939880371
    10. '(com' → logprob: -13.260664939880371

Token 131: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -0.012006126344203949
    2. ' comb' → logprob: -4.7620062828063965
    3. 'com' → logprob: -6.0120062828063965
    4. '   ' → logprob: -7.0120062828063965
    5. '
' → logprob: -11.137005805969238
    6. '       ' → logprob: -11.137005805969238
    7. '	com' → logprob: -13.387005805969238
    8. 'combine' → logprob: -13.762005805969238
    9. 'combo' → logprob: -14.137005805969238
    10. '  ' → logprob: -14.637005805969238

Token 132: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933501362800598
    2. '.append' → logprob: -0.6933501362800598
    3. '.app' → logprob: -8.693349838256836
    4. '.extend' → logprob: -11.568349838256836
    5. '.ap' → logprob: -11.943349838256836
    6. ' .' → logprob: -12.068349838256836
    7. '.Append' → logprob: -12.318349838256836
    8. '​.' → logprob: -13.318349838256836
    9. '.push' → logprob: -13.568349838256836
    10. '.py' → logprob: -13.693349838256836

Token 133: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.50001335144043
    3. 'val' → logprob: -12.75001335144043
    4. ' val' → logprob: -17.62501335144043
    5. ',val' → logprob: -18.25001335144043
    6. '(
' → logprob: -18.37501335144043
    7. '[val' → logprob: -18.50001335144043
    8. ' (' → logprob: -18.87501335144043
    9. '(v' → logprob: -19.50001335144043
    10. '	val' → logprob: -20.12501335144043

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. ')
' → logprob: -10.625033378601074
    3. ' )' → logprob: -11.875033378601074
    4. ')return' → logprob: -14.500033378601074
    5. '   ' → logprob: -15.000033378601074
    6. ',' → logprob: -15.500033378601074
    7. ']' → logprob: -16.000032424926758
    8. '),' → logprob: -16.500032424926758
    9. '<|end|>' → logprob: -16.500032424926758
    10. '}' → logprob: -16.875032424926758

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005450751632452011
    2. '	return' → logprob: -5.50545072555542
    3. ' return' → logprob: -7.50545072555542
    4. 'return' → logprob: -7.75545072555542
    5. '<|end|>' → logprob: -8.255451202392578
    6. '    
' → logprob: -9.880451202392578
    7. ')' → logprob: -11.005451202392578
    8. ' ' → logprob: -11.380451202392578
    9. '
' → logprob: -11.630451202392578
    10. '   ' → logprob: -12.005451202392578

Token 136: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6782559156417847
    2. '	return' → logprob: -1.1782559156417847
    3. '<|end|>' → logprob: -2.678256034851074
    4. ' ' → logprob: -3.178256034851074
    5. ')' → logprob: -4.053256034851074
    6. ' return' → logprob: -4.303256034851074
    7. 'return' (adapté à ' return') → logprob: -4.678256034851074
    8. ']' → logprob: -5.178256034851074
    9. '\' → logprob: -5.678256034851074
    10. '[' → logprob: -5.803256034851074

Token 137: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0003424951864872128
    2. ' comb' → logprob: -8.00034236907959
    3. 'com' → logprob: -11.87534236907959
    4. 'combo' → logprob: -18.250343322753906
    5. '[' → logprob: -18.375343322753906
    6. '```' → logprob: -18.750343322753906
    7. 'Comb' → logprob: -19.125343322753906
    8. '   ' → logprob: -19.250343322753906
    9. '(com' → logprob: -19.250343322753906
    10. 'compl' → logprob: -19.500343322753906

Token 138: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'comb' (ID: 43606)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6550462245941162
    2. '#' → logprob: -1.7800462245941162
    3. '[' → logprob: -1.9050462245941162
    4. '<|end|>' → logprob: -2.030046224594116
    5. 'c' → logprob: -2.280046224594116
    6. ' ' → logprob: -2.405046224594116
    7. ')' → logprob: -2.530046224594116
    8. 'result' → logprob: -4.530046463012695
    9. 'com' → logprob: -4.655046463012695
    10. ',' → logprob: -4.655046463012695

Token 140: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13112716376781464
    2. '[' → logprob: -2.131127119064331
    3. '(n' → logprob: -6.75612735748291
    4. '<|end|>' → logprob: -7.13112735748291
    5. '(size' → logprob: -7.38112735748291
    6. '[size' → logprob: -8.13112735748291
    7. '[(' → logprob: -8.50612735748291
    8. ')' → logprob: -8.88112735748291
    9. '[n' → logprob: -9.00612735748291
    10. '(s' → logprob: -9.13112735748291

Token 141: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7973845601081848
    2. 'inations' → logprob: -0.9223845601081848
    3. 'ations' → logprob: -2.42238450050354
    4. '0' → logprob: -2.92238450050354
    5. 's' → logprob: -5.047384738922119
    6. '[size' → logprob: -7.172384738922119
    7. 'n' → logprob: -7.672384738922119
    8. '=' → logprob: -7.797384738922119
    9. 'ination' → logprob: -8.547384262084961
    10. '[n' → logprob: -8.922384262084961

Token 142: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.06209171190857887
    2. ' make' → logprob: -2.937091827392578
    3. '[' → logprob: -5.062091827392578
    4. ' [' → logprob: -7.437091827392578
    5. '[n' → logprob: -8.812091827392578
    6. '(make' → logprob: -10.062091827392578
    7. '[]' → logprob: -10.562091827392578
    8. '	make' → logprob: -11.812091827392578
    9. '[k' → logprob: -11.937091827392578
    10. 'n' → logprob: -11.937091827392578

Token 143: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.7432603272027336e-06
    2. 'com' → logprob: -14.250001907348633
    3. '_co' → logprob: -15.000001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_comb' → logprob: -15.125001907348633
    6. '_c' → logprob: -17.000001907348633
    7. '```' → logprob: -17.500001907348633
    8. '(com' → logprob: -17.625001907348633
    9. '(_' → logprob: -18.000001907348633
    10. ' combinations' → logprob: -18.250001907348633

Token 144: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.03836826607584953
    2. 'b' → logprob: -3.2883682250976562
    3. 'inations' → logprob: -8.538368225097656
    4. 'bin' → logprob: -9.288368225097656
    5. 'bi' → logprob: -11.038368225097656
    6. 'ations' → logprob: -12.288368225097656
    7. 'bits' → logprob: -12.538368225097656
    8. 'bit' → logprob: -13.038368225097656
    9. 'bn' → logprob: -13.288368225097656
    10. 'bination' → logprob: -13.663368225097656

Token 145: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03220167011022568
    2. '(n' → logprob: -3.6572017669677734
    3. '(' → logprob: -5.282201766967773
    4. '(size' → logprob: -7.282201766967773
    5. '<|end|>' → logprob: -9.407201766967773
    6. '(s' → logprob: -10.907201766967773
    7. ' (' → logprob: -12.282201766967773
    8. '((' → logprob: -13.282201766967773
    9. ')' → logprob: -13.407201766967773
    10. '(
' → logprob: -13.657201766967773

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003668959951028228
    2. ',n' → logprob: -6.753668785095215
    3. ',k' → logprob: -6.753668785095215
    4. '-' → logprob: -6.878668785095215
    5. ' -' → logprob: -9.378668785095215
    6. ' ,' → logprob: -9.503668785095215
    7. '-k' → logprob: -9.753668785095215
    8. '+' → logprob: -10.378668785095215
    9. '+k' → logprob: -11.378668785095215
    10. ')' → logprob: -11.878668785095215

Token 147: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16738125681877136
    2. ' k' → logprob: -2.0423812866210938
    3. ' n' → logprob: -4.417381286621094
    4. 'n' → logprob: -4.417381286621094
    5. ' ' → logprob: -8.917381286621094
    6. '2' → logprob: -9.917381286621094
    7. '100' → logprob: -11.604881286621094
    8. '10' → logprob: -11.604881286621094
    9. 'mod' → logprob: -11.979881286621094
    10. '	k' → logprob: -12.104881286621094

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008123258128762245
    2. '+' → logprob: -5.258123397827148
    3. '+k' → logprob: -6.508123397827148
    4. ' +' → logprob: -7.508123397827148
    5. '*' → logprob: -7.883123397827148
    6. '+n' → logprob: -8.633123397827148
    7. ' )' → logprob: -8.883123397827148
    8. ')
' → logprob: -9.758123397827148
    9. '-' → logprob: -10.758123397827148
    10. '*k' → logprob: -11.258123397827148

Token 149: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0006883674650453031
    2. 'com' → logprob: -8.125688552856445
    3. 'print' → logprob: -9.000688552856445
    4. 'for' → logprob: -9.375688552856445
    5. 'k' → logprob: -9.750688552856445
    6. ' comb' → logprob: -10.375688552856445
    7. 'c' → logprob: -11.125688552856445
    8. '#' → logprob: -11.250688552856445
    9. 'pow' → logprob: -11.625688552856445
    10. 'ans' → logprob: -12.250688552856445

Token 150: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25122034549713135
    2. '[' → logprob: -1.6262203454971313
    3. '<|end|>' → logprob: -4.126220226287842
    4. '_' → logprob: -5.251220226287842
    5. '[-' → logprob: -6.626220226287842
    6. '(' → logprob: -7.001220226287842
    7. '[n' → logprob: -7.876220226287842
    8. '.' → logprob: -8.251220703125
    9. '```' → logprob: -8.501220703125
    10. '=' → logprob: -8.501220703125

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368212655186653
    2. '=' → logprob: -3.408682107925415
    3. '[' → logprob: -10.658681869506836
    4. ' =[' → logprob: -12.283681869506836
    5. '.' → logprob: -12.908681869506836
    6. ' ' → logprob: -13.158681869506836
    7. '_' → logprob: -14.283681869506836
    8. ',' → logprob: -14.283681869506836
    9. '=[' → logprob: -14.533681869506836
    10. ')' → logprob: -14.533681869506836

Token 152: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.16064205765724182
    2. ' make' → logprob: -1.9106420278549194
    3. '[' → logprob: -8.66064167022705
    4. ' [' → logprob: -9.16064167022705
    5. '(make' → logprob: -9.91064167022705
    6. '[n' → logprob: -10.03564167022705
    7. '[]' → logprob: -10.66064167022705
    8. ' ' → logprob: -12.28564167022705
    9. '	make' → logprob: -12.28564167022705
    10. ' []' → logprob: -12.53564167022705

Token 153: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.5048530030981055e-06
    2. 'com' → logprob: -14.750001907348633
    3. '_comb' → logprob: -15.250001907348633
    4. 's' → logprob: -15.750001907348633
    5. '_' → logprob: -15.875001907348633
    6. '(_' → logprob: -16.000001907348633
    7. '_c' → logprob: -16.500001907348633
    8. '_con' → logprob: -17.125001907348633
    9. '_choices' → logprob: -17.125001907348633
    10. '_code' → logprob: -17.250001907348633

Token 154: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.004951358772814274
    2. 'b' → logprob: -5.379951477050781
    3. 'inations' → logprob: -8.129951477050781
    4. 'ations' → logprob: -11.004951477050781
    5. 'bin' → logprob: -11.129951477050781
    6. 'bi' → logprob: -13.629951477050781
    7. 'bination' → logprob: -14.129951477050781
    8. 'positions' → logprob: -14.254951477050781
    9. 'bits' → logprob: -14.504951477050781
    10. 'ptions' → logprob: -14.879951477050781

Token 155: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.1607755422592163
    2. '(n' → logprob: -1.9107755422592163
    3. '(' → logprob: -7.535775661468506
    4. 'k' → logprob: -11.910775184631348
    5. ' (' → logprob: -13.035775184631348
    6. '(s' → logprob: -13.035775184631348
    7. '((' → logprob: -13.535775184631348
    8. ' k' → logprob: -13.785775184631348
    9. 'n' → logprob: -14.035775184631348
    10. '(m' → logprob: -14.285775184631348

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03172055631875992
    2. '-' → logprob: -3.9067206382751465
    3. ',k' → logprob: -5.5317206382751465
    4. '+' → logprob: -6.0317206382751465
    5. 'k' → logprob: -6.6567206382751465
    6. '+k' → logprob: -7.2817206382751465
    7. ' -' → logprob: -7.6567206382751465
    8. '-k' → logprob: -7.6567206382751465
    9. ',
' → logprob: -7.7817206382751465
    10. ',n' → logprob: -7.7817206382751465

Token 157: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1577128767967224
    2. 'n' → logprob: -2.157712936401367
    3. '2' → logprob: -4.032712936401367
    4. ' k' → logprob: -5.032712936401367
    5. ' n' → logprob: -5.282712936401367
    6. ' ' → logprob: -8.032712936401367
    7. '1' → logprob: -8.907712936401367
    8. '(n' → logprob: -9.032712936401367
    9. '10' → logprob: -9.657712936401367
    10. '0' → logprob: -10.032712936401367

Token 158: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16220957040786743
    2. ' -' → logprob: -2.4122095108032227
    3. '-k' → logprob: -3.0372095108032227
    4. ')' → logprob: -4.787209510803223
    5. '+' → logprob: -6.162209510803223
    6. '+k' → logprob: -6.662209510803223
    7. ' +' → logprob: -8.412209510803223
    8. '-n' → logprob: -9.662209510803223
    9. 'k' → logprob: -10.662209510803223
    10. '//' → logprob: -10.787209510803223

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034547943621873856
    2. 'k' → logprob: -3.409548044204712
    3. ' k' → logprob: -7.784547805786133
    4. ' ' → logprob: -7.909547805786133
    5. '
' → logprob: -10.409547805786133
    6. '2' → logprob: -10.909547805786133
    7. 'n' → logprob: -10.909547805786133
    8. '(' → logprob: -11.159547805786133
    9. '-' → logprob: -11.784547805786133
    10. ')' → logprob: -12.034547805786133

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.055322397500276566
    2. 'k' → logprob: -2.9303224086761475
    3. '2' → logprob: -8.055322647094727
    4. 'n' → logprob: -9.930322647094727
    5. '(' → logprob: -10.305322647094727
    6. ' ' → logprob: -11.555322647094727
    7. ' k' → logprob: -11.930322647094727
    8. '(k' → logprob: -11.930322647094727
    9. '(n' → logprob: -12.555322647094727
    10. '3' → logprob: -12.930322647094727

Token 161: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.875004768371582
    3. ' )' → logprob: -13.250004768371582
    4. '))' → logprob: -16.1250057220459
    5. ')`' → logprob: -16.1250057220459
    6. ')n' → logprob: -16.6250057220459
    7. '),' → logprob: -17.0000057220459
    8. ')

' → logprob: -17.1250057220459
    9. ')#' → logprob: -17.2500057220459
    10. '0' → logprob: -17.7500057220459

Token 162: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.051777720451355
    2. 'result' → logprob: -1.426777720451355
    3. 'res' → logprob: -1.551777720451355
    4. 'answer' → logprob: -2.1767778396606445
    5. 'ans' → logprob: -2.6767778396606445
    6. 'r' → logprob: -5.5517778396606445
    7. 'answers' → logprob: -5.8017778396606445
    8. 'dp' → logprob: -6.3017778396606445
    9. 'results' → logprob: -7.0517778396606445
    10. 'k' → logprob: -7.3017778396606445

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007884726859629154
    2. '=' → logprob: -4.882884502410889
    3. ' ' → logprob: -9.257884979248047
    4. '[' → logprob: -9.507884979248047
    5. ' +=' → logprob: -9.507884979248047
    6. '[]' → logprob: -12.132884979248047
    7. ' =[' → logprob: -12.257884979248047
    8. 's' → logprob: -12.382884979248047
    9. ',' → logprob: -12.632884979248047
    10. ' =
' → logprob: -13.007884979248047

Token 164: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021266283467411995
    2. '1' → logprob: -4.396266460418701
    3. ' ' → logprob: -5.146266460418701
    4. 'k' → logprob: -7.021266460418701
    5. '(' → logprob: -7.521266460418701
    6. 'sum' → logprob: -8.521265983581543
    7. '[]' → logprob: -8.521265983581543
    8. '(k' → logprob: -8.646265983581543
    9. 'pow' → logprob: -8.646265983581543
    10. 'comb' → logprob: -8.896265983581543

Token 165: '((' (ID: 2054)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.045551929622888565
    2. '(' → logprob: -3.4205520153045654
    3. '((' → logprob: -5.170551776885986
    4. '(range' → logprob: -5.920551776885986
    5. '([' → logprob: -6.295551776885986
    6. '(i' → logprob: -7.170551776885986
    7. 'comb' → logprob: -9.045552253723145
    8. '(x' → logprob: -9.045552253723145
    9. '(min' → logprob: -9.045552253723145
    10. '(k' → logprob: -9.170552253723145

Token 166: 'a' (ID: 64)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.010623534210026264
    2. '(com' → logprob: -5.260623455047607
    3. '(' → logprob: -6.635623455047607
    4. 'pow' → logprob: -7.260623455047607
    5. '((' → logprob: -7.260623455047607
    6. ' comb' → logprob: -7.510623455047607
    7. '(k' → logprob: -8.135623931884766
    8. 'k' → logprob: -8.260623931884766
    9. '(-' → logprob: -8.385623931884766
    10. '(i' → logprob: -8.385623931884766

Token 167: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008467060513794422
    2. '*' → logprob: -5.133467197418213
    3. '[i' → logprob: -6.883467197418213
    4. '[' → logprob: -7.883467197418213
    5. ',' → logprob: -7.883467197418213
    6. ' for' → logprob: -8.133466720581055
    7. '*b' → logprob: -8.383466720581055
    8. ' +' → logprob: -9.633466720581055
    9. 'for' → logprob: -10.383466720581055
    10. ' ' → logprob: -10.758466720581055

Token 168: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11295413225889206
    2. ' b' → logprob: -2.2379541397094727
    3. 'c' → logprob: -9.862954139709473
    4. 'a' → logprob: -10.612954139709473
    5. '(b' → logprob: -10.987954139709473
    6. ' c' → logprob: -11.237954139709473
    7. '(' → logprob: -12.362954139709473
    8. ' (' → logprob: -12.487954139709473
    9. ' a' → logprob: -12.987954139709473
    10. ' ' → logprob: -13.425454139709473

Token 169: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32671239972114563
    2. ')' → logprob: -1.3267123699188232
    3. ' %' → logprob: -4.826712608337402
    4. '%' → logprob: -5.951712608337402
    5. ')%' → logprob: -6.576712608337402
    6. 'for' → logprob: -6.701712608337402
    7. ' )' → logprob: -9.076712608337402
    8. ' ' → logprob: -12.201712608337402
    9. '%)' → logprob: -13.826712608337402
    10. '%c' → logprob: -14.076712608337402

Token 170: ' %' (ID: 1851)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19335930049419403
    2. ' %' → logprob: -2.193359375
    3. '%' → logprob: -2.818359375
    4. 'for' → logprob: -5.443359375
    5. ')' → logprob: -9.068359375
    6. ' ' → logprob: -9.318359375
    7. ' *' → logprob: -12.318359375
    8. '%c' → logprob: -12.318359375
    9. '<|end|>' → logprob: -12.568359375
    10. ' %=' → logprob: -12.693359375

Token 171: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023296024650335312
    2. ' mod' → logprob: -3.7732961177825928
    3. '(mod' → logprob: -9.898296356201172
    4. '	mod' → logprob: -15.148296356201172
    5. ' ' → logprob: -17.023296356201172
    6. '```' → logprob: -18.148296356201172
    7. ' (' → logprob: -18.398296356201172
    8. ' мод' → logprob: -18.898296356201172
    9. 'MOD' → logprob: -18.898296356201172
    10. ' ' → logprob: -19.148296356201172

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026336297392845154
    2. 'for' → logprob: -3.651336193084717
    3. ' *' → logprob: -11.776336669921875
    4. ',' → logprob: -11.776336669921875
    5. ')' → logprob: -11.901336669921875
    6. ' ' → logprob: -12.276336669921875
    7. ' (' → logprob: -12.776336669921875
    8. '   ' → logprob: -13.901336669921875
    9. '*' → logprob: -13.901336669921875
    10. '%' → logprob: -14.526336669921875

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05552460998296738
    2. ' a' → logprob: -2.9305245876312256
    3. '(a' → logprob: -7.430524826049805
    4. ' (' → logprob: -10.180524826049805
    5. ',a' → logprob: -12.680524826049805
    6. '	a' → logprob: -12.805524826049805
    7. '[a' → logprob: -13.805524826049805
    8. '(' → logprob: -13.930524826049805
    9. ',' → logprob: -13.930524826049805
    10. ')a' → logprob: -14.180524826049805

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05496105179190636
    2. ',b' → logprob: -2.9299609661102295
    3. ' ,' → logprob: -9.554961204528809
    4. 'b' → logprob: -12.679961204528809
    5. ',
' → logprob: -13.554961204528809
    6. ',a' → logprob: -14.304961204528809
    7. ',user' → logprob: -14.804961204528809
    8. '<|end|>' → logprob: -14.804961204528809
    9. ',B' → logprob: -15.429961204528809
    10. ',s' → logprob: -15.554961204528809

Token 175: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04994094371795654
    2. ' b' → logprob: -3.049941062927246
    3. '(b' → logprob: -6.674941062927246
    4. ' (' → logprob: -9.799941062927246
    5. ' in' → logprob: -10.674941062927246
    6. '(a' → logprob: -11.799941062927246
    7. ',b' → logprob: -13.049941062927246
    8. ',' → logprob: -14.299941062927246
    9. 'a' → logprob: -14.424941062927246
    10. '_b' → logprob: -15.174941062927246

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043004110455513
    2. 'in' → logprob: -3.168004035949707
    3. ')' → logprob: -12.668004035949707
    4. ' ' → logprob: -14.668004035949707
    5. '<|end|>' → logprob: -14.668004035949707
    6. 'import' → logprob: -15.918004035949707
    7. '	in' → logprob: -15.918004035949707
    8. ',' → logprob: -16.168004989624023
    9. 's' → logprob: -16.543004989624023
    10. '```' → logprob: -16.668004989624023

Token 177: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.2015429586172104
    2. 'zip' → logprob: -1.7015429735183716
    3. '(zip' → logprob: -8.951542854309082
    4. '.zip' → logprob: -15.826542854309082
    5. '_zip' → logprob: -16.7015438079834
    6. ' ' → logprob: -19.7015438079834
    7. ')' → logprob: -20.2015438079834
    8. 'Zip' → logprob: -20.7015438079834
    9. ' zipped' → logprob: -20.9515438079834
    10. 'enumer' → logprob: -21.0765438079834

Token 178: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -1.8908587662735954e-05
    2. '(' → logprob: -11.125019073486328
    3. ' (' → logprob: -13.000019073486328
    4. '(combo' → logprob: -14.375019073486328
    5. '((' → logprob: -15.125019073486328
    6. '(comm' → logprob: -15.375019073486328
    7. '(
' → logprob: -15.750019073486328
    8. '```' → logprob: -15.750019073486328
    9. '(c' → logprob: -16.125019073486328
    10. ')' → logprob: -16.625019073486328

Token 179: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0802738870552275e-05
    2. '0' → logprob: -12.00001049041748
    3. 'bp' → logprob: -13.12501049041748
    4. 'б' → logprob: -14.37501049041748
    5. 'p' → logprob: -14.50001049041748
    6. 'bl' → logprob: -15.37501049041748
    7. '[b' → logprob: -15.87501049041748
    8. 'bs' → logprob: -16.125011444091797
    9. '1' → logprob: -16.125011444091797
    10. 'bn' → logprob: -16.125011444091797

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.000000953674316
    3. '０' → logprob: -18.0
    4. '۰' → logprob: -18.375
    5. 'o' → logprob: -18.625
    6. '(' → logprob: -18.75
    7. ' ' → logprob: -19.5625
    8. ')' → logprob: -19.75
    9. '
' → logprob: -20.0625
    10. '```' → logprob: -20.875

Token 181: '[:' (ID: 7808)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.313314952421933e-05
    2. ' ,' → logprob: -9.750062942504883
    3. ',
' → logprob: -12.375062942504883
    4. '(com' → logprob: -15.500062942504883
    5. '(' → logprob: -16.875062942504883
    6. ',(' → logprob: -16.875062942504883
    7. ' comb' → logprob: -17.125062942504883
    8. '(),' → logprob: -17.250062942504883
    9. 'comb' → logprob: -17.875062942504883
    10. '
' → logprob: -18.000062942504883

Token 182: 'min' (ID: 1493)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02068190649151802
    2. 'n' → logprob: -4.270681858062744
    3. ' k' → logprob: -5.895681858062744
    4. '(k' → logprob: -5.895681858062744
    5. '(n' → logprob: -7.395681858062744
    6. ' n' → logprob: -8.395682334899902
    7. ' (' → logprob: -9.895682334899902
    8. '(' → logprob: -10.645682334899902
    9. '
' → logprob: -11.020682334899902
    10. '   ' → logprob: -11.520682334899902

Token 183: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.225670725107193
    2. '(n' → logprob: -1.6006706953048706
    3. 'k' → logprob: -9.35067081451416
    4. '(len' → logprob: -9.47567081451416
    5. '(' → logprob: -9.72567081451416
    6. 'n' → logprob: -10.60067081451416
    7. '((' → logprob: -12.85067081451416
    8. ' (' → logprob: -13.35067081451416
    9. ')' → logprob: -13.85067081451416
    10. '(
' → logprob: -13.97567081451416

Token 184: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.2223016917705536
    2. ',' → logprob: -1.847301721572876
    3. ',n' → logprob: -3.222301721572876
    4. ' ,' → logprob: -6.472301483154297
    5. '(k' → logprob: -9.597301483154297
    6. ',len' → logprob: -9.597301483154297
    7. '(n' → logprob: -10.097301483154297
    8. '-' → logprob: -11.097301483154297
    9. '-k' → logprob: -11.347301483154297
    10. ' -' → logprob: -11.972301483154297

Token 185: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01141925435513258
    2. ' k' → logprob: -4.761419296264648
    3. 'n' → logprob: -6.136419296264648
    4. 'len' → logprob: -8.386419296264648
    5. ' n' → logprob: -8.386419296264648
    6. '   ' → logprob: -9.386419296264648
    7. ' len' → logprob: -10.636419296264648
    8. ' ' → logprob: -11.011419296264648
    9. '(k' → logprob: -11.011419296264648
    10. '(n' → logprob: -11.511419296264648

Token 186: ' +' (ID: 659)
  Prédit: ')],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.0008078443352133036
    2. ' )' → logprob: -8.625807762145996
    3. '+' → logprob: -8.750807762145996
    4. ')]' → logprob: -9.500807762145996
    5. '),' → logprob: -9.500807762145996
    6. '],' → logprob: -9.875807762145996
    7. ',' → logprob: -9.875807762145996
    8. '-' → logprob: -10.125807762145996
    9. '   ' → logprob: -10.250807762145996
    10. ' ' → logprob: -10.250807762145996

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010711929644457996
    2. ' ' → logprob: -9.250106811523438
    3. '   ' → logprob: -12.750106811523438
    4. '2' → logprob: -12.750106811523438
    5. '
' → logprob: -13.562606811523438
    6. 'n' → logprob: -13.875106811523438
    7. 'k' → logprob: -14.125106811523438
    8. '  ' → logprob: -15.125106811523438
    9. '```' → logprob: -15.437606811523438
    10. 'len' → logprob: -15.562606811523438

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023512568441219628
    2. ' ' → logprob: -8.500235557556152
    3. '2' → logprob: -11.125235557556152
    4. '   ' → logprob: -12.312735557556152
    5. '
' → logprob: -12.812735557556152
    6. 'n' → logprob: -13.437735557556152
    7. 'k' → logprob: -13.812735557556152
    8. '  ' → logprob: -14.125235557556152
    9. '`' → logprob: -14.250235557556152
    10. '```' → logprob: -14.625235557556152

Token 189: ')],' (ID: 60559)
  Prédit: ')],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')],' → logprob: -0.15258456766605377
    2. '),' → logprob: -2.2775845527648926
    3. '],' → logprob: -3.2775845527648926
    4. ',' → logprob: -7.402584552764893
    5. ')]' → logprob: -8.27758502960205
    6. ')' → logprob: -8.40258502960205
    7. ' ' → logprob: -10.27758502960205
    8. '   ' → logprob: -10.90258502960205
    9. ' ),' → logprob: -11.40258502960205
    10. ')][' → logprob: -11.52758502960205

Token 190: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.04305616766214371
    2. ' comb' → logprob: -3.1680562496185303
    3. '   ' → logprob: -10.54305648803711
    4. '    ' → logprob: -11.41805648803711
    5. 'com' → logprob: -12.41805648803711
    6. ' ' → logprob: -13.04305648803711
    7. '        ' → logprob: -13.29305648803711
    8. '  ' → logprob: -13.41805648803711
    9. '         ' → logprob: -13.41805648803711
    10. '       ' → logprob: -13.54305648803711

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.000006675720215
    3. '```' → logprob: -15.562506675720215
    4. '[' → logprob: -16.18750762939453
    5. '   ' → logprob: -16.87500762939453
    6. '[:' → logprob: -17.12500762939453
    7. '
' → logprob: -17.18750762939453
    8. ' ' → logprob: -17.43750762939453
    9. ')' → logprob: -17.87500762939453
    10. ',' → logprob: -18.00000762939453

Token 192: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.4617256056226324e-05
    2. '[' → logprob: -12.250014305114746
    3. '[k' → logprob: -12.625014305114746
    4. '[min' → logprob: -13.000014305114746
    5. '[n' → logprob: -13.500014305114746
    6. '[:-' → logprob: -14.250014305114746
    7. ' [:' → logprob: -14.375014305114746
    8. '[:]' → logprob: -14.375014305114746
    9. '][:' → logprob: -14.625014305114746
    10. ')' → logprob: -15.500014305114746

Token 193: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001245112856850028
    2. ' min' → logprob: -7.126245021820068
    3. '(min' → logprob: -8.376245498657227
    4. 'k' → logprob: -9.126245498657227
    5. 'max' → logprob: -9.501245498657227
    6. 'n' → logprob: -11.376245498657227
    7. '(k' → logprob: -12.001245498657227
    8. '(n' → logprob: -12.251245498657227
    9. '
' → logprob: -14.001245498657227
    10. '	min' → logprob: -14.501245498657227

Token 194: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.468279752880335e-05
    2. '(' → logprob: -10.375064849853516
    3. '(len' → logprob: -10.500064849853516
    4. '(k' → logprob: -12.750064849853516
    5. ' (' → logprob: -13.625064849853516
    6. 'n' → logprob: -14.125064849853516
    7. '((' → logprob: -14.750064849853516
    8. '<|end|>' → logprob: -16.000064849853516
    9. '(
' → logprob: -16.125064849853516
    10. ')' → logprob: -16.750064849853516

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0418027900159359
    2. '(k' → logprob: -3.7918028831481934
    3. '(n' → logprob: -4.291802883148193
    4. ',k' → logprob: -5.416802883148193
    5. ',n' → logprob: -8.916802406311035
    6. ' ,' → logprob: -9.541802406311035
    7. '(' → logprob: -10.666802406311035
    8. ' (' → logprob: -11.041802406311035
    9. 'k' → logprob: -12.041802406311035
    10. ',
' → logprob: -13.166802406311035

Token 196: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0027215410955250263
    2. ' k' → logprob: -6.002721309661865
    3. 'min' → logprob: -8.502721786499023
    4. ' min' → logprob: -10.752721786499023
    5. '(k' → logprob: -11.377721786499023
    6. 'n' → logprob: -12.127721786499023
    7. ' ' → logprob: -13.502721786499023
    8. '   ' → logprob: -14.377721786499023
    9. ' n' → logprob: -14.627721786499023
    10. '(min' → logprob: -14.877721786499023

Token 197: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017142124706879258
    2. ' +' → logprob: -6.37671422958374
    3. '1' → logprob: -12.001713752746582
    4. '+
' → logprob: -12.376713752746582
    5. ')+' → logprob: -15.126713752746582
    6. ' ' → logprob: -15.251713752746582
    7. '+k' → logprob: -15.251713752746582
    8. ']+' → logprob: -16.1267147064209
    9. '```' → logprob: -16.1267147064209
    10. ')' → logprob: -16.2517147064209

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006773988250643015
    2. '2' → logprob: -5.006773948669434
    3. ' ' → logprob: -9.881773948669434
    4. '```' → logprob: -12.881773948669434
    5. '   ' → logprob: -13.569273948669434
    6. '
' → logprob: -14.006773948669434
    7. ')' → logprob: -14.444273948669434
    8. '3' → logprob: -14.881773948669434
    9. '``' → logprob: -15.381773948669434
    10. '])' → logprob: -15.881773948669434

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020497082732617855
    2. '2' → logprob: -8.625205039978027
    3. ' ' → logprob: -11.500205039978027
    4. '+' → logprob: -11.750205039978027
    5. '```' → logprob: -13.187705039978027
    6. '   ' → logprob: -13.625205039978027
    7. '
' → logprob: -14.125205039978027
    8. '``' → logprob: -14.812705039978027
    9. '`' → logprob: -15.375205039978027
    10. '])' → logprob: -15.562705039978027

Token 200: ')]' (ID: 15710)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.15452124178409576
    2. ')]' → logprob: -2.0295212268829346
    3. ')])' → logprob: -4.654521465301514
    4. '])))' → logprob: -6.904521465301514
    5. '])' → logprob: -7.279521465301514
    6. ']' → logprob: -8.029520988464355
    7. '])):
' → logprob: -9.654520988464355
    8. '))' → logprob: -9.904520988464355
    9. '])).' → logprob: -10.529520988464355
    10. ')' → logprob: -10.904520988464355

Token 201: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012642296496778727
    2. ')' → logprob: -9.250126838684082
    3. ')))' → logprob: -10.625126838684082
    4. '))
' → logprob: -12.250126838684082
    5. '));' → logprob: -15.000126838684082
    6. ' ))' → logprob: -15.125126838684082
    7. '))+' → logprob: -15.625126838684082
    8. ')).' → logprob: -16.500125885009766
    9. '),' → logprob: -16.625125885009766
    10. '))*' → logprob: -16.750125885009766

Token 202: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04058215022087097
    2. '
' → logprob: -3.4155821800231934
    3. ' %' → logprob: -5.040582180023193
    4. '%
' → logprob: -8.415581703186035
    5. ')' → logprob: -8.915581703186035
    6. 'print' → logprob: -10.415581703186035
    7. '
' → logprob: -10.790581703186035
    8. '%n' → logprob: -11.165581703186035
    9. ')%' → logprob: -11.665581703186035
    10. ')
' → logprob: -12.165581703186035

Token 203: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.003182467306032777
    2. ' mod' → logprob: -5.753182411193848
    3. '(mod' → logprob: -12.253182411193848
    4. '	mod' → logprob: -17.878183364868164
    5. '```' → logprob: -20.378183364868164
    6. ' ' → logprob: -20.503183364868164
    7. '10' → logprob: -21.503183364868164
    8. ' мод' → logprob: -22.128183364868164
    9. ' ' → logprob: -22.253183364868164
    10. '100' → logprob: -22.253183364868164

Token 204: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1798442155122757
    2. '
' → logprob: -1.9298442602157593
    3. '<|end|>' → logprob: -4.179844379425049
    4. ')' → logprob: -5.804844379425049
    5. '\n' → logprob: -7.054844379425049
    6. ' print' → logprob: -9.67984390258789
    7. '#' → logprob: -10.30484390258789
    8. '
' → logprob: -10.42984390258789
    9. '```' → logprob: -10.80484390258789
    10. '#print' → logprob: -11.05484390258789

Token 205: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.7994282795116305e-05
    2. '
' → logprob: -10.00004768371582
    3. '<|end|>' → logprob: -13.75004768371582
    4. '\n' → logprob: -14.75004768371582
    5. ' print' → logprob: -14.87504768371582
    6. ')' → logprob: -16.12504768371582
    7. '```' → logprob: -16.12504768371582
    8. 'pr' → logprob: -16.25004768371582
    9. 'ans' → logprob: -16.50004768371582
    10. '(print' → logprob: -16.87504768371582

Token 206: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2519448399543762
    2. '(' → logprob: -1.5019447803497314
    3. '(
' → logprob: -12.001944541931152
    4. '(`' → logprob: -12.751944541931152
    5. '(answer' → logprob: -13.126944541931152
    6. '()' → logprob: -13.376944541931152
    7. 'ans' → logprob: -14.001944541931152
    8. '("("' → logprob: -14.626944541931152
    9. '((' → logprob: -15.001944541931152
    10. ' (' → logprob: -15.001944541931152

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.625
    3. ')`' → logprob: -15.875
    4. ')
' → logprob: -16.75
    5. '))' → logprob: -17.625
    6. '`)' → logprob: -18.75
    7. '')' → logprob: -18.875
    8. ')}' → logprob: -20.5
    9. '),' → logprob: -20.875
    10. '")' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 40.49%
Précision (top 10): 83.41%
================================================================================
