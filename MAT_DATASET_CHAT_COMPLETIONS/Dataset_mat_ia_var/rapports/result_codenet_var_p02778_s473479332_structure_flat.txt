================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
i = 0
result = ""
while i < len(s):
    result = result + "x"
    i = i + 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 'i' (ID: 72)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.45282870531082153
    2. 'n' → logprob: -1.2028286457061768
    3. '=' → logprob: -3.2028286457061768
    4. '+' → logprob: -4.452828884124756
    5. 's' → logprob: -4.952828884124756
    6. '[' → logprob: -6.327828884124756
    7. 'nd' → logprob: -7.202828884124756
    8. ' =' → logprob: -7.952828884124756
    9. 't' → logprob: -8.202828407287598
    10. '+=' → logprob: -8.452828407287598

Token 6: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28302887082099915
    2. ' ' → logprob: -1.4080288410186768
    3. '1' → logprob: -7.283029079437256
    4. 'int' → logprob: -7.783029079437256
    5. 's' → logprob: -8.033028602600098
    6. ' s' → logprob: -8.408028602600098
    7. ' int' → logprob: -8.658028602600098
    8. '10' → logprob: -11.283028602600098
    9. 'len' → logprob: -11.408028602600098
    10. ' len' → logprob: -11.533028602600098

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.908022285439074e-05
    2. '1' → logprob: -10.375059127807617
    3. ' ' → logprob: -10.625059127807617
    4. 'int' → logprob: -13.125059127807617
    5. 's' → logprob: -14.000059127807617
    6. 'len' → logprob: -15.375059127807617
    7. 'n' → logprob: -15.750059127807617
    8. '2' → logprob: -16.750059127807617
    9. '```' → logprob: -17.125059127807617
    10. ''s' → logprob: -17.125059127807617

Token 8: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7273936867713928
    2. 'while' → logprob: -0.8523936867713928
    3. '```' → logprob: -3.477393627166748
    4. '+' → logprob: -3.477393627166748
    5. ':' → logprob: -4.477393627166748
    6. 'n' → logprob: -5.102393627166748
    7. 'w' → logprob: -5.977393627166748
    8. ' ' → logprob: -6.227393627166748
    9. ''' → logprob: -6.852393627166748
    10. ',' → logprob: -6.977393627166748

Token 9: 'result' (ID: 2521)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05995931476354599
    2. 'w' → logprob: -3.1849594116210938
    3. ' while' → logprob: -4.684959411621094
    4. '```' → logprob: -4.934959411621094
    5. '`' → logprob: -9.059959411621094
    6. '``' → logprob: -9.309959411621094
    7. 'n' → logprob: -9.809959411621094
    8. ''' → logprob: -10.684959411621094
    9. ':' → logprob: -10.934959411621094
    10. ' ' → logprob: -11.309959411621094

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2496785819530487
    2. ' =' → logprob: -1.874678611755371
    3. '[' → logprob: -3.374678611755371
    4. ' ' → logprob: -4.374678611755371
    5. '_' → logprob: -5.249678611755371
    6. '+' → logprob: -5.374678611755371
    7. ' +=' → logprob: -5.749678611755371
    8. 's' → logprob: -5.874678611755371
    9. '[]' → logprob: -6.624678611755371
    10. '[:]' → logprob: -6.999678611755371

Token 11: ' ""
' (ID: 18061)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.172580599784851
    2. ' []' → logprob: -1.672580599784851
    3. '""' → logprob: -1.672580599784851
    4. '[]' → logprob: -2.0475807189941406
    5. ' ' → logprob: -2.4225807189941406
    6. ' ""' → logprob: -3.5475807189941406
    7. '0' → logprob: -3.6725807189941406
    8. '''' → logprob: -3.7975807189941406
    9. ''' → logprob: -4.047580718994141
    10. ' ''' → logprob: -6.172580718994141

Token 12: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0034915003925561905
    2. '```' → logprob: -6.253491401672363
    3. ' while' → logprob: -7.128491401672363
    4. 'w' → logprob: -7.253491401672363
    5. ':' → logprob: -10.753491401672363
    6. '``' → logprob: -11.128491401672363
    7. '`' → logprob: -12.003491401672363
    8. 'While' → logprob: -13.003491401672363
    9. ''' → logprob: -13.003491401672363
    10. 'wh' → logprob: -13.128491401672363

Token 13: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05812125653028488
    2. ' s' → logprob: -3.5581212043762207
    3. 'i' → logprob: -3.9331212043762207
    4. 's' → logprob: -5.308121204376221
    5. ' ' → logprob: -5.683121204376221
    6. ' ' → logprob: -10.808121681213379
    7. '  ' → logprob: -12.558121681213379
    8. ' not' → logprob: -12.808121681213379
    9. '(i' → logprob: -12.933121681213379
    10. ' (' → logprob: -13.558121681213379

Token 14: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03459042310714722
    2. '<' → logprob: -3.409590482711792
    3. ' <=' → logprob: -7.159590244293213
    4. ' ' → logprob: -9.784590721130371
    5. '<len' → logprob: -10.034590721130371
    6. '<=' → logprob: -10.659590721130371
    7. 's' → logprob: -11.284590721130371
    8. '<size' → logprob: -11.784590721130371
    9. ' <
' → logprob: -12.159590721130371
    10. '<int' → logprob: -12.534590721130371

Token 15: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0024773201439529657
    2. 'len' → logprob: -6.002477169036865
    3. '(len' → logprob: -13.877477645874023
    4. ' s' → logprob: -14.752477645874023
    5. ' ' → logprob: -15.627477645874023
    6. '=len' → logprob: -17.877477645874023
    7. '<len' → logprob: -18.127477645874023
    8. ' n' → logprob: -18.377477645874023
    9. '[len' → logprob: -18.752477645874023
    10. ' length' → logprob: -19.252477645874023

Token 16: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011804660316556692
    2. '(' → logprob: -6.751180648803711
    3. 's' → logprob: -11.501180648803711
    4. '(
' → logprob: -16.37618064880371
    5. '(i' → logprob: -17.75118064880371
    6. ' s' → logprob: -18.00118064880371
    7. ' (' → logprob: -18.12618064880371
    8. '(a' → logprob: -19.62618064880371
    9. '(n' → logprob: -19.62618064880371
    10. '(t' → logprob: -19.87618064880371

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04953262209892273
    2. ')' → logprob: -3.049532651901245
    3. '):
' → logprob: -7.549532413482666
    4. ' and' → logprob: -8.424532890319824
    5. ':' → logprob: -8.799532890319824
    6. ' ):' → logprob: -11.049532890319824
    7. 'and' → logprob: -11.424532890319824
    8. 's' → logprob: -12.299532890319824
    9. '):

' → logprob: -13.174532890319824
    10. '   ' → logprob: -13.299532890319824

Token 18: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3179354965686798
    2. 'if' → logprob: -1.8179354667663574
    3. ' ' → logprob: -3.1929354667663574
    4. 's' → logprob: -3.3179354667663574
    5. '   ' → logprob: -3.5679354667663574
    6. 'result' → logprob: -6.942935466766357
    7. ' s' → logprob: -7.067935466766357
    8. 'c' → logprob: -7.442935466766357
    9. ' 
' → logprob: -8.067935943603516
    10. '```' → logprob: -8.192935943603516

Token 19: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2996906638145447
    2. 'if' → logprob: -1.4246907234191895
    3. '   ' → logprob: -4.4246907234191895
    4. 'c' → logprob: -6.1746907234191895
    5. ' ' → logprob: -6.7996907234191895
    6. ' c' → logprob: -6.9246907234191895
    7. 's' → logprob: -6.9246907234191895
    8. '```' → logprob: -8.674690246582031
    9. 'char' → logprob: -8.674690246582031
    10. 'ch' → logprob: -8.799690246582031

Token 20: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.015601053833961487
    2. '+=' → logprob: -4.64060115814209
    3. '+' → logprob: -5.39060115814209
    4. ' +' → logprob: -6.89060115814209
    5. '+='' → logprob: -9.01560115814209
    6. '.append' → logprob: -9.51560115814209
    7. '+="' → logprob: -10.14060115814209
    8. '[' → logprob: -12.14060115814209
    9. '<|end|>' → logprob: -12.76560115814209
    10. ' =' → logprob: -13.39060115814209

Token 21: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.42976921796798706
    2. 'result' → logprob: -1.0547692775726318
    3. ' s' → logprob: -7.429769039154053
    4. 's' → logprob: -8.304769515991211
    5. ' ' → logprob: -8.679769515991211
    6. '+' → logprob: -10.929769515991211
    7. '(result' → logprob: -11.929769515991211
    8. '"' → logprob: -12.554769515991211
    9. ' f' → logprob: -12.804769515991211
    10. '	result' → logprob: -12.929769515991211

Token 22: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026314232498407364
    2. ' +' → logprob: -3.6513142585754395
    3. '+s' → logprob: -13.026313781738281
    4. '<|end|>' → logprob: -13.026313781738281
    5. '+=' → logprob: -13.526313781738281
    6. 's' → logprob: -13.776313781738281
    7. '+i' → logprob: -13.901313781738281
    8. '...' → logprob: -14.151313781738281
    9. ' +=' → logprob: -14.276313781738281
    10. ')' → logprob: -14.401313781738281

Token 23: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28291550278663635
    2. ' s' → logprob: -1.407915472984314
    3. '"' → logprob: -7.0329155921936035
    4. ''' → logprob: -8.407915115356445
    5. 'chr' → logprob: -8.907915115356445
    6. '"s' → logprob: -8.907915115356445
    7. ''s' → logprob: -9.282915115356445
    8. '(s' → logprob: -9.282915115356445
    9. ' "' → logprob: -9.907915115356445
    10. ' ' → logprob: -10.407915115356445

Token 24: 'x' (ID: 87)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00839495100080967
    2. '"' → logprob: -5.508394718170166
    3. '*' → logprob: -6.758394718170166
    4. ''' → logprob: -7.133394718170166
    5. '(' → logprob: -7.508394718170166
    6. ' ' → logprob: -7.883394718170166
    7. ' s' → logprob: -8.258395195007324
    8. ' "' → logprob: -9.008395195007324
    9. '#' → logprob: -9.133395195007324
    10. 'a' → logprob: -9.133395195007324

Token 25: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09102950990200043
    2. 's' → logprob: -2.591029405593872
    3. '")' → logprob: -5.216029644012451
    4. ')' → logprob: -6.091029644012451
    5. '"s' → logprob: -6.716029644012451
    6. ' "' → logprob: -7.466029644012451
    7. 'x' → logprob: -7.716029644012451
    8. 'i' → logprob: -7.841029644012451
    9. ' ' → logprob: -7.841029644012451
    10. ''' → logprob: -8.591029167175293

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10706007480621338
    2. 'i' → logprob: -2.982059955596924
    3. '    
' → logprob: -4.357059955596924
    4. '\n' → logprob: -4.482059955596924
    5. '\' → logprob: -5.107059955596924
    6. ' ' → logprob: -5.232059955596924
    7. ' i' → logprob: -5.857059955596924
    8. '  
' → logprob: -6.232059955596924
    9. '   
' → logprob: -6.482059955596924
    10. '
' → logprob: -6.482059955596924

Token 27: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27752935886383057
    2. 'i' (adapté à ' i') → logprob: -1.5275293588638306
    3. ' i' → logprob: -4.527529239654541
    4. '\n' → logprob: -4.652529239654541
    5. ' ' → logprob: -6.527529239654541
    6. ' if' → logprob: -7.402529239654541
    7. 'if' → logprob: -7.652529239654541
    8. '    ' → logprob: -7.902529239654541
    9. '\' → logprob: -8.0275297164917
    10. '    
' → logprob: -8.0275297164917

Token 28: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011487908195704222
    2. '+=' → logprob: -6.876148700714111
    3. ' +=' → logprob: -10.00114917755127
    4. '++' → logprob: -10.12614917755127
    5. ' +' → logprob: -11.12614917755127
    6. '=' → logprob: -11.75114917755127
    7. '+++' → logprob: -11.87614917755127
    8. ' ' → logprob: -15.25114917755127
    9. '<|end|>' → logprob: -15.75114917755127
    10. '+)' → logprob: -16.001148223876953

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20142805576324463
    2. 'i' → logprob: -1.7014280557632446
    3. '+' → logprob: -11.701428413391113
    4. ' ' → logprob: -12.576428413391113
    5. '	i' → logprob: -13.576428413391113
    6. '<|end|>' → logprob: -13.951428413391113
    7. '0' → logprob: -14.701428413391113
    8. '<|end|>' → logprob: -16.076427459716797
    9. ' +' → logprob: -16.201427459716797
    10. '1' → logprob: -16.451427459716797

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003610163228586316
    2. ' +' → logprob: -5.628610134124756
    3. '1' → logprob: -12.253610610961914
    4. ' plus' → logprob: -13.253610610961914
    5. '++' → logprob: -13.628610610961914
    6. ' ' → logprob: -13.878610610961914
    7. '+i' → logprob: -14.753610610961914
    8. '+++' → logprob: -15.128610610961914
    9. 'plus' → logprob: -15.753610610961914
    10. 'i' → logprob: -16.003610610961914

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011714138090610504
    2. ' ' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.751171112060547
    4. 's' → logprob: -15.438671112060547
    5. '```' → logprob: -15.563671112060547
    6. '2' → logprob: -16.063671112060547
    7. '  ' → logprob: -17.063671112060547
    8. '4' → logprob: -17.188671112060547
    9. '0' → logprob: -17.563671112060547
    10. ' ' → logprob: -17.626171112060547

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. ' ' → logprob: -10.125041961669922
    3. '2' → logprob: -14.125041961669922
    4. '```' → logprob: -15.187541961669922
    5. '   ' → logprob: -15.562541961669922
    6. 's' → logprob: -16.062541961669922
    7. '4' → logprob: -16.437541961669922
    8. '3' → logprob: -16.562541961669922
    9. '  ' → logprob: -16.687541961669922
    10. '0' → logprob: -17.187541961669922

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11240731924772263
    2. '<|end|>' → logprob: -2.7374072074890137
    3. '\n' → logprob: -4.112407207489014
    4. '#' → logprob: -4.487407207489014
    5. '```' → logprob: -5.362407207489014
    6. '
' → logprob: -5.987407207489014
    7. ' ' → logprob: -6.362407207489014
    8. ' print' → logprob: -6.362407207489014
    9. '#print' → logprob: -7.237407207489014
    10. 's' → logprob: -7.487407207489014

Token 35: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004378214362077415
    2. '(result' → logprob: -7.8754377365112305
    3. '("("' → logprob: -10.12543773651123
    4. '('' → logprob: -11.62543773651123
    5. '(s' → logprob: -12.50043773651123
    6. '()' → logprob: -12.75043773651123
    7. 's' → logprob: -14.87543773651123
    8. '(`' → logprob: -15.25043773651123
    9. '("")' → logprob: -15.37543773651123
    10. '(res' → logprob: -15.50043773651123

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. '))' → logprob: -15.625000953674316
    4. '')' → logprob: -18.0
    5. ')`' → logprob: -18.125
    6. '")' → logprob: -18.25
    7. '`)' → logprob: -18.25
    8. '(' → logprob: -19.625
    9. ')
' → logprob: -19.75
    10. '#' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 12
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 35.29%
Précision adaptée (1ère position): 35.29%
Précision (top 10): 70.59%
================================================================================
