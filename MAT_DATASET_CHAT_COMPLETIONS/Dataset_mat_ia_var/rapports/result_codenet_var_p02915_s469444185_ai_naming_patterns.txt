================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_value = int(input())
user_input_value_cubed = user_input_value * user_input_value * user_input_value
print(user_input_value_cubed)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6950808763504028
    2. '[' → logprob: -1.8200808763504028
    3. '=' → logprob: -2.0700807571411133
    4. '.' → logprob: -2.5700807571411133
    5. ')' → logprob: -2.6950807571411133
    6. '```' → logprob: -3.3200807571411133
    7. ' =' → logprob: -4.820080757141113
    8. '<|end|>' → logprob: -5.070080757141113
    9. ']' → logprob: -5.320080757141113
    10. '+' → logprob: -5.945080757141113

Token 4: ' int' (ID: 677)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2567194700241089
    2. 'input' → logprob: -1.3817194700241089
    3. ' input' → logprob: -1.5067194700241089
    4. ' "' → logprob: -2.6317195892333984
    5. '""' → logprob: -2.7567195892333984
    6. ''' → logprob: -3.5067195892333984
    7. ' '' → logprob: -4.131719589233398
    8. ' ' → logprob: -4.131719589233398
    9. ' ""' → logprob: -4.131719589233398
    10. ' ''' → logprob: -4.381719589233398

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0044473279267549515
    2. '(user' → logprob: -5.6294474601745605
    3. 'user' → logprob: -8.379446983337402
    4. '[' → logprob: -8.754446983337402
    5. '('' → logprob: -9.129446983337402
    6. '(
' → logprob: -9.254446983337402
    7. '```' → logprob: -9.254446983337402
    8. ''' → logprob: -10.879446983337402
    9. '(input' → logprob: -10.879446983337402
    10. '[user' → logprob: -11.129446983337402

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018826356157660484
    2. ')' → logprob: -4.143826484680176
    3. '()' → logprob: -6.893826484680176
    4. '('' → logprob: -7.143826484680176
    5. '())' → logprob: -8.393826484680176
    6. '("("' → logprob: -8.393826484680176
    7. '(
' → logprob: -8.518826484680176
    8. '(""))' → logprob: -10.143826484680176
    9. '(user' → logprob: -10.268826484680176
    10. '(()' → logprob: -10.393826484680176

Token 7: 'user' (ID: 1428)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12078782916069031
    2. '*' → logprob: -3.2457878589630127
    3. '%' → logprob: -3.4957878589630127
    4. 'if' → logprob: -4.370787620544434
    5. '\n' → logprob: -4.620787620544434
    6. ')' → logprob: -4.995787620544434
    7. '\' → logprob: -5.370787620544434
    8. '```' → logprob: -5.620787620544434
    9. '+
' → logprob: -6.745787620544434
    10. '**' → logprob: -6.745787620544434

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028289461508393288
    2. '_input' → logprob: -3.653289556503296
    3. '.' → logprob: -7.153289318084717
    4. '._' → logprob: -7.778289318084717
    5. '_.' → logprob: -8.403289794921875
    6. '_value' → logprob: -9.153289794921875
    7. '```' → logprob: -9.403289794921875
    8. '_output' → logprob: -9.528289794921875
    9. '_user' → logprob: -10.028289794921875
    10. ' _' → logprob: -10.153289794921875

Token 9: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.007694525644183159
    2. '_' → logprob: -5.007694721221924
    3. '_val' → logprob: -7.632694721221924
    4. ')' → logprob: -9.007694244384766
    5. ')_' → logprob: -9.007694244384766
    6. '_values' → logprob: -9.132694244384766
    7. ' _' → logprob: -10.382694244384766
    8. '```' → logprob: -10.882694244384766
    9. '_input' → logprob: -11.757694244384766
    10. '_Value' → logprob: -12.007694244384766

Token 10: '_c' (ID: 1303)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24056512117385864
    2. ')' → logprob: -2.240565061569214
    3. '*' → logprob: -2.865565061569214
    4. '```' → logprob: -3.865565061569214
    5. '<|end|>' → logprob: -4.615565299987793
    6. '**' → logprob: -4.990565299987793
    7. '%' → logprob: -5.365565299987793
    8. '#' → logprob: -6.490565299987793
    9. '[' → logprob: -6.615565299987793
    10. '<|end|>' → logprob: -6.990565299987793

Token 11: 'ub' (ID: 431)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.9456050992012024
    2. 'ount' → logprob: -1.0706050395965576
    3. 'ounter' → logprob: -2.6956050395965576
    4. 'ont' → logprob: -3.1956050395965576
    5. 'ounted' → logprob: -3.4456050395965576
    6. 'al' → logprob: -4.070605278015137
    7. 'orrect' → logprob: -4.195605278015137
    8. 'opy' → logprob: -4.195605278015137
    9. 'ap' → logprob: -4.320605278015137
    10. 'omp' → logprob: -4.570605278015137

Token 12: 'ed' (ID: 295)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17998063564300537
    2. 'ed' → logprob: -1.8049806356430054
    3. '_e' → logprob: -9.429980278015137
    4. 'ic' → logprob: -9.679980278015137
    5. 'es' → logprob: -10.054980278015137
    6. '_' → logprob: -11.054980278015137
    7. 'е' → logprob: -11.554980278015137
    8. '**' → logprob: -11.929980278015137
    9. '```' → logprob: -12.429980278015137
    10. '=' → logprob: -13.054980278015137

Token 13: ' =' (ID: 314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14070120453834534
    2. '[' → logprob: -3.0157012939453125
    3. '<|end|>' → logprob: -3.7657012939453125
    4. ')' → logprob: -4.0157012939453125
    5. '```' → logprob: -4.0157012939453125
    6. '*' → logprob: -4.7657012939453125
    7. ' **' → logprob: -5.3907012939453125
    8. '[]' → logprob: -6.1407012939453125
    9. '=' → logprob: -6.3907012939453125
    10. '[user' → logprob: -6.8907012939453125

Token 14: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.07889551669359207
    2. 'user' → logprob: -2.5788955688476562
    3. ' ' → logprob: -12.828895568847656
    4. '(user' → logprob: -13.203895568847656
    5. ' (' → logprob: -15.703895568847656
    6. '**' → logprob: -15.703895568847656
    7. 'pow' → logprob: -15.703895568847656
    8. '`' → logprob: -15.953895568847656
    9. ' pow' → logprob: -16.078895568847656
    10. '_user' → logprob: -16.078895568847656

Token 15: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.004662234336137772
    2. '_' → logprob: -5.754662036895752
    3. '_p' → logprob: -7.504662036895752
    4. '_put' → logprob: -7.629662036895752
    5. ' _' → logprob: -8.62966251373291
    6. '_user' → logprob: -9.12966251373291
    7. '__' → logprob: -9.87966251373291
    8. '_value' → logprob: -10.37966251373291
    9. '_t' → logprob: -11.12966251373291
    10. '_in' → logprob: -11.37966251373291

Token 16: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.309382373117842e-05
    2. '_val' → logprob: -10.625033378601074
    3. '_' → logprob: -11.750033378601074
    4. '_input' → logprob: -15.250033378601074
    5. '_user' → logprob: -15.500033378601074
    6. '_values' → logprob: -16.125032424926758
    7. '_VALUE' → logprob: -16.500032424926758
    8. '_Value' → logprob: -16.500032424926758
    9. '```' → logprob: -17.000032424926758
    10. 'value' → logprob: -17.000032424926758

Token 17: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.20167489349842072
    2. ' **' → logprob: -1.7016749382019043
    3. ' *' → logprob: -9.076674461364746
    4. '*' → logprob: -9.076674461364746
    5. '***' → logprob: -10.701674461364746
    6. ' ***' → logprob: -12.326674461364746
    7. '```' → logprob: -12.826674461364746
    8. ')' → logprob: -14.326674461364746
    9. ' **
' → logprob: -14.951674461364746
    10. '³' → logprob: -15.076674461364746

Token 18: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.4741743803024292
    2. ' user' → logprob: -0.9741743803024292
    3. ' ' → logprob: -9.349174499511719
    4. '3' → logprob: -11.974174499511719
    5. '  ' → logprob: -13.474174499511719
    6. '2' → logprob: -13.849174499511719
    7. '	user' → logprob: -14.974174499511719
    8. ' ' → logprob: -15.349174499511719
    9. '(user' → logprob: -15.474174499511719
    10. '_user' → logprob: -16.22417449951172

Token 19: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.128244549036026
    2. '_' → logprob: -2.128244638442993
    3. '_in' → logprob: -7.128244400024414
    4. '_value' → logprob: -9.128244400024414
    5. ' _' → logprob: -9.128244400024414
    6. '_s' → logprob: -9.253244400024414
    7. '_i' → logprob: -9.878244400024414
    8. '_output' → logprob: -10.503244400024414
    9. '_inputs' → logprob: -10.628244400024414
    10. '__' → logprob: -10.753244400024414

Token 20: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003346314188092947
    2. '_' → logprob: -8.500334739685059
    3. '_val' → logprob: -9.000334739685059
    4. '_v' → logprob: -13.000334739685059
    5. '_Value' → logprob: -13.500334739685059
    6. '_VALUE' → logprob: -14.000334739685059
    7. '_c' → logprob: -14.250334739685059
    8. ' _' → logprob: -14.500334739685059
    9. '_values' → logprob: -14.750334739685059
    10. '```' → logprob: -14.750334739685059

Token 21: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04408556967973709
    2. ' *' → logprob: -3.1690855026245117
    3. '_' → logprob: -6.919085502624512
    4. '**' → logprob: -10.294085502624512
    5. ' ' → logprob: -10.419085502624512
    6. '_*' → logprob: -11.794085502624512
    7. ' _' → logprob: -12.169085502624512
    8. ')' → logprob: -12.544085502624512
    9. '*_' → logprob: -12.669085502624512
    10. '<|end|>' → logprob: -12.919085502624512

Token 22: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.001326433615759015
    2. ' user' → logprob: -6.626326560974121
    3. 'use' → logprob: -15.001326560974121
    4. 'us' → logprob: -16.876325607299805
    5. '_user' → logprob: -17.126325607299805
    6. 'u' → logprob: -17.501325607299805
    7. '"user' → logprob: -17.626325607299805
    8. ' ' → logprob: -18.001325607299805
    9. ''user' → logprob: -18.001325607299805
    10. '$user' → logprob: -18.251325607299805

Token 23: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.007768820505589247
    2. '_' → logprob: -5.007768630981445
    3. '_value' → logprob: -7.132768630981445
    4. ' _' → logprob: -8.757768630981445
    5. '_output' → logprob: -10.382768630981445
    6. '_in' → logprob: -10.882768630981445
    7. '_p' → logprob: -12.132768630981445
    8. '_put' → logprob: -12.257768630981445
    9. '```' → logprob: -12.382768630981445
    10. '_inputs' → logprob: -12.507768630981445

Token 24: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.9862216504407115e-05
    2. '_' → logprob: -11.250020027160645
    3. '_val' → logprob: -12.000020027160645
    4. '_input' → logprob: -15.500020027160645
    5. 'value' → logprob: -16.250019073486328
    6. ' _' → logprob: -16.250019073486328
    7. '_user' → logprob: -17.000019073486328
    8. '_Value' → logprob: -17.125019073486328
    9. '_VALUE' → logprob: -17.500019073486328
    10. '_v' → logprob: -17.500019073486328

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6384685635566711
    2. '+' → logprob: -1.7634685039520264
    3. '*' → logprob: -2.2634685039520264
    4. '\n' → logprob: -2.7634685039520264
    5. '#' → logprob: -3.1384685039520264
    6. '**' → logprob: -3.8884685039520264
    7. ')' → logprob: -4.2634687423706055
    8. '<|end|>' → logprob: -4.2634687423706055
    9. '\' → logprob: -4.6384687423706055
    10. '' → logprob: -5.1384687423706055

Token 26: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4620025157928467
    2. '*' → logprob: -1.5870025157928467
    3. '\n' → logprob: -1.9620025157928467
    4. '#' → logprob: -2.3370025157928467
    5. 'print' → logprob: -2.8370025157928467
    6. '\' → logprob: -2.8370025157928467
    7. '(' → logprob: -3.2120025157928467
    8. '<|end|>' → logprob: -3.4620025157928467
    9. '
' → logprob: -3.7120025157928467
    10. 'user' → logprob: -3.7120025157928467

Token 27: '(user' (ID: 7195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005988051183521748
    2. '(user' → logprob: -5.130988121032715
    3. '("("' → logprob: -10.130988121032715
    4. 'user' → logprob: -11.755988121032715
    5. '('' → logprob: -12.130988121032715
    6. ' (' → logprob: -13.505988121032715
    7. '(

' → logprob: -13.880988121032715
    8. '()' → logprob: -13.880988121032715
    9. '(User' → logprob: -14.380988121032715
    10. '(
' → logprob: -14.505988121032715

Token 28: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0033741232473403215
    2. '_' → logprob: -5.753374099731445
    3. '_user' → logprob: -9.003374099731445
    4. '_value' → logprob: -10.753374099731445
    5. '_in' → logprob: -10.878374099731445
    6. '_)' → logprob: -11.753374099731445
    7. '_p' → logprob: -12.003374099731445
    8. ')_' → logprob: -12.128374099731445
    9. '_output' → logprob: -12.628374099731445
    10. '_put' → logprob: -12.628374099731445

Token 29: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0014974836958572268
    2. '_val' → logprob: -6.751497268676758
    3. '_' → logprob: -8.251497268676758
    4. ')_' → logprob: -10.126497268676758
    5. ')' → logprob: -11.751497268676758
    6. '_va' → logprob: -11.876497268676758
    7. '_v' → logprob: -12.001497268676758
    8. '_)' → logprob: -12.876497268676758
    9. '_Value' → logprob: -13.876497268676758
    10. ' _' → logprob: -14.001497268676758

Token 30: '_c' (ID: 1303)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05099458247423172
    2. '_' → logprob: -3.550994634628296
    3. '**' → logprob: -4.550994396209717
    4. '_)' → logprob: -4.675994396209717
    5. ')**' → logprob: -8.300994873046875
    6. '_c' → logprob: -8.675994873046875
    7. ' )' → logprob: -8.925994873046875
    8. '**)' → logprob: -9.050994873046875
    9. ' ' → logprob: -9.300994873046875
    10. '*' → logprob: -9.300994873046875

Token 31: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.0013490456622093916
    2. 'u' → logprob: -6.626348972320557
    3. 'ube' → logprob: -12.001349449157715
    4. 'уб' → logprob: -12.626349449157715
    5. '```' → logprob: -13.001349449157715
    6. 'cub' → logprob: -13.751349449157715
    7. '{"' → logprob: -13.876349449157715
    8. 'b' → logprob: -14.001349449157715
    9. 'ubic' → logprob: -14.001349449157715
    10. '**' → logprob: -14.126349449157715

Token 32: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0011805851245298982
    2. 'e' → logprob: -6.751180648803711
    3. ')' → logprob: -12.376180648803711
    4. 'bed' → logprob: -13.126180648803711
    5. '```' → logprob: -14.251180648803711
    6. '_ed' → logprob: -14.626180648803711
    7. 'edu' → logprob: -14.751180648803711
    8. 'es' → logprob: -15.251180648803711
    9. 'edded' → logprob: -15.376180648803711
    10. 'eded' → logprob: -15.376180648803711

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '`)' → logprob: -15.625001907348633
    5. '')' → logprob: -16.000001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '")' → logprob: -18.250001907348633
    8. '(' → logprob: -18.500001907348633
    9. '#' → logprob: -18.625001907348633
    10. ')
' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 45.16%
Précision adaptée (1ère position): 45.16%
Précision (top 10): 80.65%
================================================================================
