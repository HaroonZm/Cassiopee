================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
mod = 1000000007
inf = float('inf')
sys.setrecursionlimit(10**6)

# Read input, split, convert to int, and sort
line = sys.stdin.readline().rstrip()
L = list(map(int, line.split()))
L.sort()
print(L[0] + L[1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'mod' (ID: 4847)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6992754936218262
    2. '\n' → logprob: -0.8242754936218262
    3. '<|end|>' → logprob: -3.574275493621826
    4. '\' → logprob: -4.199275493621826
    5. 'newline' → logprob: -5.074275493621826
    6. 'import' → logprob: -5.324275493621826
    7. '<|end|>' → logprob: -5.949275493621826
    8. '```' → logprob: -6.574275493621826
    9. '' → logprob: -6.824275493621826
    10. '
' → logprob: -6.949275493621826

Token 4: ' =' (ID: 314)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.001017567701637745
    2. 'ules' → logprob: -7.7510175704956055
    3. ' =' → logprob: -8.376017570495605
    4. 'ul' → logprob: -9.001017570495605
    5. '```' → logprob: -9.501017570495605
    6. 'u' → logprob: -10.001017570495605
    7. 'import' → logprob: -10.501017570495605
    8. '=' → logprob: -10.751017570495605
    9. '_' → logprob: -11.001017570495605
    10. ' ule' → logprob: -11.501017570495605

Token 5: ' ' (ID: 220)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005467113573104143
    2. ' __' → logprob: -5.630466938018799
    3. 'sys' → logprob: -6.880466938018799
    4. ' ' → logprob: -7.255466938018799
    5. '__' → logprob: -9.880467414855957
    6. ' math' → logprob: -11.505467414855957
    7. ' ' → logprob: -11.755467414855957
    8. ' import' → logprob: -11.880467414855957
    9. ' '' → logprob: -12.130467414855957
    10. ' system' → logprob: -12.255467414855957

Token 6: '100' (ID: 1353)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4748884439468384
    2. 'sys' → logprob: -0.9748884439468384
    3. '"' → logprob: -8.099888801574707
    4. ' sys' → logprob: -8.099888801574707
    5. ''' → logprob: -9.724888801574707
    6. ''s' → logprob: -10.349888801574707
    7. ' __' → logprob: -10.724888801574707
    8. '___' → logprob: -11.099888801574707
    9. '_sys' → logprob: -11.099888801574707
    10. 'import' → logprob: -11.349888801574707

Token 7: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4466215670108795
    2. '0' → logprob: -1.4466215372085571
    3. '00' → logprob: -3.3216216564178467
    4. '_' → logprob: -3.4466216564178467
    5. '%' → logprob: -4.071621417999268
    6. '\' → logprob: -4.446621417999268
    7. '**' → logprob: -4.571621417999268
    8. '+' → logprob: -5.321621417999268
    9. '9' → logprob: -5.446621417999268
    10. ' ' → logprob: -6.321621417999268

Token 8: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009704860858619213
    2. '7' → logprob: -4.884705066680908
    3. '000' → logprob: -6.259705066680908
    4. '9' → logprob: -9.63470458984375
    5. '19' → logprob: -9.63470458984375
    6. '00' → logprob: -10.38470458984375
    7. '07' → logprob: -11.50970458984375
    8. '_' → logprob: -12.25970458984375
    9. '```' → logprob: -13.13470458984375
    10. '007' → logprob: -13.25970458984375

Token 9: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00047726318007335067
    2. '0' → logprob: -7.750477313995361
    3. '+' → logprob: -10.625476837158203
    4. ' ' → logprob: -11.500476837158203
    5. '9' → logprob: -12.125476837158203
    6. '_' → logprob: -12.500476837158203
    7. ' +' → logprob: -13.500476837158203
    8. '8' → logprob: -14.625476837158203
    9. '1' → logprob: -14.625476837158203
    10. '```' → logprob: -15.875476837158203

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6972224712371826
    2. '
' → logprob: -0.8222224712371826
    3. '\' → logprob: -3.0722224712371826
    4. '' → logprob: -4.697222709655762
    5. '
' → logprob: -5.697222709655762
    6. '```' → logprob: -6.822222709655762
    7. '

' → logprob: -7.572222709655762
    8. '*' → logprob: -8.072222709655762
    9. 'import' → logprob: -8.197222709655762
    10. '#' → logprob: -8.322222709655762

Token 11: 'inf' (ID: 22226)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.30034151673316956
    2. '
' → logprob: -2.0503416061401367
    3. '\' → logprob: -2.4253416061401367
    4. '' → logprob: -4.800341606140137
    5. 'def' → logprob: -5.175341606140137
    6. '*' → logprob: -5.425341606140137
    7. '#' → logprob: -5.550341606140137
    8. 'n' → logprob: -5.675341606140137
    9. ',' → logprob: -5.925341606140137
    10. '`' → logprob: -5.925341606140137

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06444507837295532
    2. '=' → logprob: -2.8144450187683105
    3. '_' → logprob: -6.4394450187683105
    4. ')' → logprob: -8.314445495605469
    5. ',' → logprob: -8.689445495605469
    6. '  ' → logprob: -9.064445495605469
    7. ' ' → logprob: -9.689445495605469
    8. '```' → logprob: -9.939445495605469
    9. '>' → logprob: -10.064445495605469
    10. '`' → logprob: -10.689445495605469

Token 13: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12738768756389618
    2. '10' → logprob: -2.252387762069702
    3. ' float' → logprob: -4.627387523651123
    4. 'float' → logprob: -5.377387523651123
    5. '1' → logprob: -10.627388000488281
    6. 'int' → logprob: -11.002388000488281
    7. ' int' → logprob: -11.502388000488281
    8. '100' → logprob: -12.252388000488281
    9. ' ' → logprob: -13.877388000488281
    10. '(float' → logprob: -14.502388000488281

Token 14: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00013834332639817148
    2. '(' → logprob: -9.125138282775879
    3. '("' → logprob: -11.000138282775879
    4. ''' → logprob: -11.750138282775879
    5. '('+' → logprob: -13.875138282775879
    6. '('.')' → logprob: -14.625138282775879
    7. '('.' → logprob: -14.875138282775879
    8. '<|end|>' → logprob: -15.000138282775879
    9. '```' → logprob: -15.125138282775879
    10. '>('' → logprob: -15.375138282775879

Token 15: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.027683908119797707
    2. ''in' → logprob: -3.652683973312378
    3. ''' → logprob: -7.527683734893799
    4. 'in' → logprob: -7.527683734893799
    5. '"' → logprob: -9.277684211730957
    6. ''i' → logprob: -9.902684211730957
    7. 'info' → logprob: -9.902684211730957
    8. 'i' → logprob: -10.027684211730957
    9. '"in' → logprob: -10.527684211730957
    10. '-inf' → logprob: -11.527684211730957

Token 16: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1602603793144226
    2. ')' → logprob: -1.9102604389190674
    3. ''' → logprob: -10.410260200500488
    4. ')'' → logprob: -13.285260200500488
    5. '('' → logprob: -13.535260200500488
    6. '")' → logprob: -13.910260200500488
    7. ''''' → logprob: -14.785260200500488
    8. '')
' → logprob: -14.910260200500488
    9. '()' → logprob: -15.410260200500488
    10. ''))' → logprob: -15.410260200500488

Token 17: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1166902780532837
    2. '\n' → logprob: -1.1166902780532837
    3. '
' → logprob: -1.8666902780532837
    4. '\' → logprob: -1.9916902780532837
    5. '' → logprob: -3.991690158843994
    6. '

' → logprob: -4.366690158843994
    7. '
' → logprob: -5.116690158843994
    8. 'n' → logprob: -5.241690158843994
    9. 'a' → logprob: -5.616690158843994
    10. '```' → logprob: -6.491690158843994

Token 18: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.106736039626412e-05
    2. '.exit' → logprob: -11.375031471252441
    3. ' .' → logprob: -12.250031471252441
    4. '.stdin' → logprob: -12.750031471252441
    5. '.stdout' → logprob: -12.750031471252441
    6. '.argv' → logprob: -13.375031471252441
    7. '.readline' → logprob: -13.625031471252441
    8. '.​' → logprob: -13.625031471252441
    9. '.setdefault' → logprob: -14.625031471252441
    10. '.stderr' → logprob: -14.625031471252441

Token 19: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0006697862991131842
    2. 'execution' → logprob: -8.625669479370117
    3. 'trace' → logprob: -8.875669479370117
    4. 'limit' → logprob: -9.375669479370117
    5. '_rec' → logprob: -9.625669479370117
    6. 's' → logprob: -10.500669479370117
    7. 'e' → logprob: -10.750669479370117
    8. '_execution' → logprob: -10.750669479370117
    9. 'ex' → logprob: -11.125669479370117
    10. '_int' → logprob: -11.750669479370117

Token 20: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0033370524179190397
    2. '_limit' → logprob: -6.3783369064331055
    3. 'limit' → logprob: -7.0033369064331055
    4. 'urs' → logprob: -7.3783369064331055
    5. 'ursive' → logprob: -9.878336906433105
    6. 'ursor' → logprob: -10.878336906433105
    7. '_' → logprob: -11.378336906433105
    8. 'ur' → logprob: -12.128336906433105
    9. 'l' → logprob: -13.003336906433105
    10. 't' → logprob: -13.128336906433105

Token 21: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.004080420359969139
    2. '_limit' → logprob: -5.504080295562744
    3. ' limit' → logprob: -13.879080772399902
    4. 'lim' → logprob: -15.129080772399902
    5. '_LIMIT' → logprob: -15.379080772399902
    6. '-limit' → logprob: -15.379080772399902
    7. 'Limit' → logprob: -15.629080772399902
    8. '_depth' → logprob: -16.754079818725586
    9. 'depth' → logprob: -17.004079818725586
    10. '_' → logprob: -17.004079818725586

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. '((' → logprob: -13.75000286102295
    3. '("("' → logprob: -14.50000286102295
    4. '()' → logprob: -15.00000286102295
    5. '(
' → logprob: -15.50000286102295
    6. ' (' → logprob: -15.50000286102295
    7. '(

' → logprob: -15.75000286102295
    8. '```' → logprob: -15.87500286102295
    9. '('' → logprob: -16.750001907348633
    10. '40' → logprob: -17.375001907348633

Token 23: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004096327815204859
    2. '100' → logprob: -5.504096508026123
    3. ' ' → logprob: -11.129096031188965
    4. '999' → logprob: -13.254096031188965
    5. '200' → logprob: -15.129096031188965
    6. '300' → logprob: -15.254096031188965
    7. '500' → logprob: -15.379096031188965
    8. '900' → logprob: -15.504096031188965
    9. '400' → logprob: -16.12909698486328
    10. '250' → logprob: -16.37909698486328

Token 24: '**' (ID: 410)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.007530555594712496
    2. '**' → logprob: -5.507530689239502
    3. '6' → logprob: -5.757530689239502
    4. '8' → logprob: -9.257530212402344
    5. '07' → logprob: -9.507530212402344
    6. '0' → logprob: -9.882530212402344
    7. '000' → logprob: -10.382530212402344
    8. '00' → logprob: -10.382530212402344
    9. '5' → logprob: -12.882530212402344
    10. '9' → logprob: -13.632530212402344

Token 25: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07924192398786545
    2. '9' → logprob: -2.579241991043091
    3. '8' → logprob: -7.954241752624512
    4. '**' → logprob: -14.829241752624512
    5. '```' → logprob: -15.204241752624512
    6. ' ' → logprob: -15.579241752624512
    7. '6' → logprob: -16.329242706298828
    8. '+' → logprob: -17.704242706298828
    9. '​' → logprob: -18.829242706298828
    10. '``' → logprob: -19.204242706298828

Token 26: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')
' → logprob: -15.875000953674316
    5. '```' → logprob: -18.0
    6. ')))' → logprob: -19.125
    7. '）' → logprob: -19.375
    8. ')

' → logprob: -19.375
    9. '**' → logprob: -19.375
    10. '),' → logprob: -19.5

Token 27: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16593581438064575
    2. '
' → logprob: -1.915935754776001
    3. '

' → logprob: -6.16593599319458
    4. 'n' → logprob: -6.41593599319458
    5. 'class' → logprob: -7.16593599319458
    6. '
' → logprob: -7.29093599319458
    7. '\n' → logprob: -8.665935516357422
    8. '\' → logprob: -9.040935516357422
    9. '```' → logprob: -9.040935516357422
    10. ' 
' → logprob: -10.165935516357422

Token 28: ' Read' (ID: 5405)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1721763163805008
    2. ' def' → logprob: -1.9221763610839844
    3. 'd' → logprob: -5.047176361083984
    4. 'dp' → logprob: -6.922176361083984
    5. 'Define' → logprob: -6.922176361083984
    6. 'dfs' → logprob: -7.547176361083984
    7. 'define' → logprob: -7.797176361083984
    8. 'input' → logprob: -7.922176361083984
    9. ' d' → logprob: -8.297176361083984
    10. ' dp' → logprob: -8.422176361083984

Token 29: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8094639182090759
    2. ' input' → logprob: -1.3094639778137207
    3. 'input' → logprob: -1.6844639778137207
    4. '()' → logprob: -3.4344639778137207
    5. ' ' → logprob: -3.9344639778137207
    6. 's' → logprob: -4.684463977813721
    7. '_' → logprob: -4.809463977813721
    8. '(input' → logprob: -5.184463977813721
    9. ' (' → logprob: -5.309463977813721
    10. ' data' → logprob: -5.559463977813721

Token 30: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4242425858974457
    2. 'n' → logprob: -2.1742424964904785
    3. '(n' → logprob: -2.2992424964904785
    4. '()' → logprob: -3.5492424964904785
    5. 'data' → logprob: -3.7992424964904785
    6. 'input' → logprob: -4.2992424964904785
    7. 's' → logprob: -4.2992424964904785
    8. '(
' → logprob: -4.2992424964904785
    9. '\n' → logprob: -4.6742424964904785
    10. '```' → logprob: -4.6742424964904785

Token 31: ' split' (ID: 12648)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2914283573627472
    2. 'n' → logprob: -1.5414283275604248
    3. 'data' → logprob: -4.166428565979004
    4. ' data' → logprob: -4.541428565979004
    5. ' input' → logprob: -4.916428565979004
    6. 'input' → logprob: -5.416428565979004
    7. ' ' → logprob: -8.166428565979004
    8. 's' → logprob: -9.291428565979004
    9. ' lines' → logprob: -9.791428565979004
    10. 'a' → logprob: -10.041428565979004

Token 32: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004252677317708731
    2. '()
' → logprob: -6.379252910614014
    3. 'data' → logprob: -7.129252910614014
    4. '(' → logprob: -7.254252910614014
    5. '().' → logprob: -8.254252433776855
    6. '()[' → logprob: -9.004252433776855
    7. '('' → logprob: -9.129252433776855
    8. '()\' → logprob: -9.129252433776855
    9. '())' → logprob: -9.629252433776855
    10. 'lines' → logprob: -9.754252433776855

Token 33: ' convert' (ID: 8452)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7370027303695679
    2. 'map' → logprob: -1.1120027303695679
    3. ' and' → logprob: -2.4870028495788574
    4. ' input' → logprob: -3.7370028495788574
    5. ')' → logprob: -3.9870028495788574
    6. 'input' → logprob: -4.112002849578857
    7. '()' → logprob: -4.487002849578857
    8. ' strip' → logprob: -4.737002849578857
    9. ' =' → logprob: -4.987002849578857
    10. 'strip' → logprob: -5.362002849578857

Token 34: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13614113628864288
    2. '()' → logprob: -2.386141061782837
    3. 'data' → logprob: -4.636141300201416
    4. 'input' → logprob: -5.011141300201416
    5. '(
' → logprob: -5.511141300201416
    6. '(input' → logprob: -5.511141300201416
    7. 's' → logprob: -6.511141300201416
    8. 'to' → logprob: -6.636141300201416
    9. 'lines' → logprob: -7.011141300201416
    10. 'tokens' → logprob: -7.136141300201416

Token 35: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008030662313103676
    2. ' integers' → logprob: -5.508030891418457
    3. 'ints' → logprob: -6.633030891418457
    4. ' int' → logprob: -6.758030891418457
    5. 'list' → logprob: -7.258030891418457
    6. 'inte' → logprob: -7.383030891418457
    7. ' list' → logprob: -9.383030891418457
    8. '[int' → logprob: -10.633030891418457
    9. ' ints' → logprob: -11.883030891418457
    10. '=int' → logprob: -12.133030891418457

Token 36: ',' (ID: 11)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.16455107927322388
    2. 'input' → logprob: -2.789551019668579
    3. 's' → logprob: -3.039551019668579
    4. '()' → logprob: -4.039551258087158
    5. '(' → logprob: -4.539551258087158
    6. 'lines' → logprob: -5.414551258087158
    7. '(data' → logprob: -6.039551258087158
    8. '(
' → logprob: -7.039551258087158
    9. '()\' → logprob: -7.164551258087158
    10. '(input' → logprob: -7.414551258087158

Token 37: ' and' (ID: 326)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8969628214836121
    2. ' map' → logprob: -1.0219628810882568
    3. ' and' → logprob: -1.6469628810882568
    4. 'arr' → logprob: -4.396962642669678
    5. 'and' → logprob: -4.521962642669678
    6. 'input' → logprob: -5.771962642669678
    7. ' input' → logprob: -6.146962642669678
    8. 'lst' → logprob: -6.271962642669678
    9. 'data' → logprob: -6.771962642669678
    10. 'list' → logprob: -7.146962642669678

Token 38: ' sort' (ID: 4506)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2579781413078308
    2. 'map' → logprob: -1.6329782009124756
    3. 'list' → logprob: -3.8829782009124756
    4. ' list' → logprob: -5.1329779624938965
    5. 'strip' → logprob: -6.5079779624938965
    6. 'sum' → logprob: -7.0079779624938965
    7. ' strip' → logprob: -7.0079779624938965
    8. ' sum' → logprob: -7.6329779624938965
    9. 'sort' → logprob: -8.132978439331055
    10. 'reverse' → logprob: -8.507978439331055

Token 39: '
' (ID: 198)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1794958859682083
    2. 'numbers' → logprob: -2.9294958114624023
    3. 'arr' → logprob: -3.1794958114624023
    4. 'a' → logprob: -3.3044958114624023
    5. 'A' → logprob: -4.304495811462402
    6. 'nums' → logprob: -4.804495811462402
    7. 'lines' → logprob: -5.429495811462402
    8. 'lst' → logprob: -6.679495811462402
    9. 'n' → logprob: -6.929495811462402
    10. 'input' → logprob: -7.054495811462402

Token 40: 'line' (ID: 1137)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.036619964987039566
    2. 'arr' → logprob: -4.661620140075684
    3. 'a' → logprob: -5.161620140075684
    4. 'n' → logprob: -5.286620140075684
    5. 'numbers' → logprob: -5.411620140075684
    6. 'input' → logprob: -5.536620140075684
    7. 'nums' → logprob: -5.536620140075684
    8. 's' → logprob: -6.786620140075684
    9. ' data' → logprob: -7.911620140075684
    10. 'array' → logprob: -8.161620140075684

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4796900451183319
    2. 's' → logprob: -0.9796900749206543
    3. '=' → logprob: -5.229690074920654
    4. '_' → logprob: -9.604689598083496
    5. '_tokens' → logprob: -10.229689598083496
    6. '_s' → logprob: -10.729689598083496
    7. ' ' → logprob: -10.729689598083496
    8. '=input' → logprob: -10.979689598083496
    9. '=line' → logprob: -11.229689598083496
    10. '_parts' → logprob: -11.229689598083496

Token 42: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1635628193616867
    2. ' input' → logprob: -1.9135627746582031
    3. 'list' → logprob: -6.538562774658203
    4. ' list' → logprob: -7.038562774658203
    5. 'sys' → logprob: -7.288562774658203
    6. ' sys' → logprob: -8.038562774658203
    7. 'int' → logprob: -14.413562774658203
    8. 'sorted' → logprob: -14.538562774658203
    9. 's' → logprob: -14.788562774658203
    10. ' ' → logprob: -14.788562774658203

Token 43: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.1842973381280899
    2. '.' → logprob: -1.9342973232269287
    3. '.readline' → logprob: -3.8092973232269287
    4. '.argv' → logprob: -6.559297561645508
    5. '.stdout' → logprob: -8.934297561645508
    6. '.readlines' → logprob: -11.059297561645508
    7. '.read' → logprob: -11.059297561645508
    8. '.input' → logprob: -11.809297561645508
    9. 'stdin' → logprob: -11.934297561645508
    10. ' .' → logprob: -12.059297561645508

Token 44: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00011439072113716975
    2. 'read' → logprob: -9.750114440917969
    3. '.readlines' → logprob: -10.250114440917969
    4. '.read' → logprob: -11.125114440917969
    5. '.' → logprob: -12.750114440917969
    6. 'buffer' → logprob: -13.625114440917969
    7. '.buffer' → logprob: -13.875114440917969
    8. ' readline' → logprob: -14.125114440917969
    9. '_read' → logprob: -16.25011444091797
    10. '_buffer' → logprob: -18.50011444091797

Token 45: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3140445053577423
    2. '().' → logprob: -1.31404447555542
    3. '(' → logprob: -7.18904447555542
    4. '()
' → logprob: -11.064044952392578
    5. ' ()' → logprob: -12.564044952392578
    6. '（）' → logprob: -13.439044952392578
    7. '())' → logprob: -13.689044952392578
    8. '()

' → logprob: -13.814044952392578
    9. ' ().' → logprob: -13.814044952392578
    10. '.' → logprob: -14.064044952392578

Token 46: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0010715120006352663
    2. 'rstrip' → logprob: -7.001071453094482
    3. 'split' → logprob: -8.75107192993164
    4. ' strip' → logprob: -13.25107192993164
    5. ' split' → logprob: -20.00107192993164
    6. '.strip' → logprob: -20.25107192993164
    7. '(strip' → logprob: -20.37607192993164
    8. 'decode' → logprob: -20.50107192993164
    9. 'str' → logprob: -20.50107192993164
    10. '-strip' → logprob: -21.00107192993164

Token 47: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08187395334243774
    2. '().' → logprob: -2.706873893737793
    3. '()
' → logprob: -4.456873893737793
    4. '(' → logprob: -9.331873893737793
    5. '()
' → logprob: -10.081873893737793
    6. 'split' → logprob: -10.331873893737793
    7. '.split' → logprob: -10.706873893737793
    8. '()\' → logprob: -10.956873893737793
    9. ')' → logprob: -11.331873893737793
    10. '.' → logprob: -11.456873893737793

Token 48: 'L' (ID: 43)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9842327833175659
    2. 'if' → logprob: -1.859232783317566
    3. 'numbers' → logprob: -2.3592329025268555
    4. 'split' → logprob: -2.4842329025268555
    5. 'tokens' → logprob: -2.7342329025268555
    6. 'values' → logprob: -2.8592329025268555
    7. 's' → logprob: -3.3592329025268555
    8. ' if' → logprob: -3.8592329025268555
    9. ',' → logprob: -4.3592329025268555
    10. 'nums' → logprob: -4.4842329025268555

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05526193231344223
    2. ' =' → logprob: -3.3052618503570557
    3. 'ist' → logprob: -4.305262088775635
    4. 'ine' → logprob: -6.305262088775635
    5. 'ines' → logprob: -7.305262088775635
    6. 'st' → logprob: -8.180261611938477
    7. 's' → logprob: -8.180261611938477
    8. '=[]' → logprob: -8.430261611938477
    9. 'IST' → logprob: -9.430261611938477
    10. '=input' → logprob: -9.805261611938477

Token 50: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.11959533393383026
    2. 'list' → logprob: -2.2445952892303467
    3. ' sorted' → logprob: -5.369595527648926
    4. 'sorted' → logprob: -7.369595527648926
    5. 'int' → logprob: -7.494595527648926
    6. ' int' → logprob: -7.619595527648926
    7. '[int' → logprob: -8.869595527648926
    8. ' ' → logprob: -9.494595527648926
    9. ' [' → logprob: -9.869595527648926
    10. ' []' → logprob: -10.244595527648926

Token 51: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.029832987114787102
    2. '(' → logprob: -3.5298330783843994
    3. '(int' → logprob: -9.65483283996582
    4. '(
' → logprob: -11.77983283996582
    5. '(range' → logprob: -12.15483283996582
    6. '(line' → logprob: -13.27983283996582
    7. '(

' → logprob: -14.02983283996582
    8. '(input' → logprob: -14.65483283996582
    9. '(eval' → logprob: -14.90483283996582
    10. '(set' → logprob: -14.90483283996582

Token 52: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01252730842679739
    2. '(' → logprob: -4.3875274658203125
    3. 'int' → logprob: -12.262527465820312
    4. '(str' → logprob: -12.387527465820312
    5. '[int' → logprob: -12.637527465820312
    6. '<int' → logprob: -13.137527465820312
    7. '(in' → logprob: -13.637527465820312
    8. '=int' → logprob: -13.887527465820312
    9. ',int' → logprob: -14.512527465820312
    10. '(lambda' → logprob: -15.262527465820312

Token 53: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.8643636107444763
    2. ',' → logprob: -0.9893636107444763
    3. ',line' → logprob: -1.989363670349121
    4. '(sys' → logprob: -2.864363670349121
    5. '(' → logprob: -4.739363670349121
    6. 'sys' → logprob: -5.989363670349121
    7. ' ,' → logprob: -7.239363670349121
    8. ',input' → logprob: -7.989363670349121
    9. '(),' → logprob: -9.114363670349121
    10. '),' → logprob: -9.239363670349121

Token 54: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20452234148979187
    2. ' line' → logprob: -1.7045223712921143
    3. ' sys' → logprob: -6.204522132873535
    4. 'sys' → logprob: -7.079522132873535
    5. '(line' → logprob: -9.204522132873535
    6. ')' → logprob: -9.954522132873535
    7. '[line' → logprob: -10.829522132873535
    8. 'input' → logprob: -11.329522132873535
    9. ' ' → logprob: -11.579522132873535
    10. '	line' → logprob: -11.579522132873535

Token 55: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.32597434520721436
    2. '.' → logprob: -1.5759743452072144
    3. '().' → logprob: -2.700974464416504
    4. '.strip' → logprob: -5.700974464416504
    5. ' .' → logprob: -7.700974464416504
    6. '.readline' → logprob: -7.950974464416504
    7. '.rstrip' → logprob: -10.325974464416504
    8. ').' → logprob: -10.450974464416504
    9. ')' → logprob: -11.950974464416504
    10. 'split' → logprob: -12.575974464416504

Token 56: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05037257820367813
    2. '))' → logprob: -3.42537260055542
    3. '())' → logprob: -4.55037260055542
    4. '()' → logprob: -5.55037260055542
    5. '(' → logprob: -6.42537260055542
    6. ')' → logprob: -8.550372123718262
    7. '())))' → logprob: -8.675372123718262
    8. '()))
' → logprob: -9.925372123718262
    9. ')))' → logprob: -10.050372123718262
    10. '('' → logprob: -10.550372123718262

Token 57: 'L' (ID: 43)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5144109725952148
    2. '<|end|>' → logprob: -2.389410972595215
    3. '\n' → logprob: -2.514410972595215
    4. 'L' → logprob: -2.639410972595215
    5. ')' → logprob: -2.764410972595215
    6. '#' → logprob: -3.639410972595215
    7. '[' → logprob: -4.389410972595215
    8. '\' → logprob: -4.639410972595215
    9. 'n' → logprob: -5.389410972595215
    10. 'for' → logprob: -5.514410972595215

Token 58: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.774068295955658
    2. '[' → logprob: -1.2740683555603027
    3. '<|end|>' → logprob: -2.6490683555603027
    4. '()' → logprob: -2.8990683555603027
    5. '\n' → logprob: -3.5240683555603027
    6. '(' → logprob: -3.7740683555603027
    7. '\' → logprob: -3.8990683555603027
    8. '#' → logprob: -4.149068355560303
    9. ')' → logprob: -4.149068355560303
    10. ',' → logprob: -5.649068355560303

Token 60: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8114185333251953
    2. '[' → logprob: -1.3114185333251953
    3. '<|end|>' → logprob: -1.8114185333251953
    4. 'for' → logprob: -3.3114185333251953
    5. '#' → logprob: -3.4364185333251953
    6. 'if' → logprob: -3.9364185333251953
    7. 'n' → logprob: -5.061418533325195
    8. 'print' → logprob: -5.311418533325195
    9. ')' → logprob: -5.811418533325195
    10. ',' → logprob: -5.936418533325195

Token 61: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.314046710729599
    2. '(L' → logprob: -1.3140467405319214
    3. '(len' → logprob: -7.314046859741211
    4. '((' → logprob: -9.814046859741211
    5. '('' → logprob: -11.189046859741211
    6. '("("' → logprob: -11.439046859741211
    7. '(sum' → logprob: -11.814046859741211
    8. '(`' → logprob: -11.814046859741211
    9. '()' → logprob: -11.939046859741211
    10. '([' → logprob: -13.064046859741211

Token 62: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -11.125020980834961
    3. '))' → logprob: -12.250020980834961
    4. ' )' → logprob: -14.125020980834961
    5. '])' → logprob: -15.250020980834961
    6. ')`' → logprob: -15.875020980834961
    7. ')
' → logprob: -16.75002098083496
    8. '`)' → logprob: -16.75002098083496
    9. ')))' → logprob: -17.25002098083496
    10. ']' → logprob: -17.50002098083496

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02100975625216961
    2. '-' → logprob: -3.896009683609009
    3. '1' → logprob: -8.02100944519043
    4. ' ' → logprob: -9.14600944519043
    5. '2' → logprob: -11.02100944519043
    6. ' -' → logprob: -11.89600944519043
    7. ')' → logprob: -12.77100944519043
    8. '])' → logprob: -12.89600944519043
    9. ']' → logprob: -14.02100944519043
    10. '3' → logprob: -14.27100944519043

Token 64: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013436906039714813
    2. ')' → logprob: -4.513436794281006
    3. ' ])' → logprob: -6.263436794281006
    4. ']' → logprob: -8.388437271118164
    5. '],' → logprob: -9.513437271118164
    6. ')])' → logprob: -9.763437271118164
    7. '+' → logprob: -10.013437271118164
    8. ' )' → logprob: -10.138437271118164
    9. '))' → logprob: -11.638437271118164
    10. ',' → logprob: -11.888437271118164

Token 65: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015199800254777074
    2. ' )' → logprob: -6.626520156860352
    3. '+' → logprob: -8.626520156860352
    4. '*' → logprob: -12.251520156860352
    5. ' +' → logprob: -12.751520156860352
    6. '))' → logprob: -13.751520156860352
    7. ']' → logprob: -13.751520156860352
    8. '+)' → logprob: -13.876520156860352
    9. ',' → logprob: -14.001520156860352
    10. '[' → logprob: -14.501520156860352

Token 66: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.12697704136371613
    2. ' L' → logprob: -2.12697696685791
    3. ' ' → logprob: -10.50197696685791
    4. '1' → logprob: -11.62697696685791
    5. ')' → logprob: -13.12697696685791
    6. ' ' → logprob: -13.37697696685791
    7. '  ' → logprob: -14.00197696685791
    8. '100' → logprob: -14.12697696685791
    9. '10' → logprob: -14.25197696685791
    10. '0' → logprob: -14.37697696685791

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02060951106250286
    2. '[-' → logprob: -3.8956096172332764
    3. '])' → logprob: -10.895609855651855
    4. ']' → logprob: -11.020609855651855
    5. '1' → logprob: -11.895609855651855
    6. ' [' → logprob: -12.020609855651855
    7. '[
' → logprob: -12.145609855651855
    8. '[len' → logprob: -12.395609855651855
    9. '-' → logprob: -12.770609855651855
    10. '```' → logprob: -12.895609855651855

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02637566067278385
    2. '-' → logprob: -3.6513757705688477
    3. '2' → logprob: -10.526375770568848
    4. '])' → logprob: -10.651375770568848
    5. ' ' → logprob: -11.901375770568848
    6. ']' → logprob: -12.026375770568848
    7. '0' → logprob: -12.651375770568848
    8. ' -' → logprob: -12.901375770568848
    9. ']-' → logprob: -13.401375770568848
    10. '```' → logprob: -14.026375770568848

Token 69: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020971108227968216
    2. '])' → logprob: -3.8959710597991943
    3. '))' → logprob: -8.645971298217773
    4. '})' → logprob: -9.020971298217773
    5. ']' → logprob: -9.645971298217773
    6. ')])' → logprob: -10.520971298217773
    7. ' )' → logprob: -11.520971298217773
    8. '）' → logprob: -11.645971298217773
    9. '+' → logprob: -12.145971298217773
    10. ')]' → logprob: -12.520971298217773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 29.85%
Précision adaptée (1ère position): 29.85%
Précision (top 10): 71.64%
================================================================================
