================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Fonction principale exécutant la lecture de deux chaînes à partir de l'entrée utilisateur,
    puis affichant leur concaténation dans l'ordre inverse par rapport à l'entrée.
    """
    # Lecture de deux chaînes de caractères à l'aide de l'entrée standard, séparées par des espaces.
    T, S = map(str, input().split())
    
    # Concaténation de S suivi de T, puis affichage du résultat.
    print(S + T)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7860245108604431
    2. '   ' → logprob: -1.536024570465088
    3. 'pass' → logprob: -2.286024570465088
    4. 'p' → logprob: -2.911024570465088
    5. 'r' → logprob: -2.911024570465088
    6. 'return' → logprob: -3.161024570465088
    7. '#' → logprob: -3.786024570465088
    8. 'a' → logprob: -4.161024570465088
    9. 'i' → logprob: -4.411024570465088
    10. '```' → logprob: -5.411024570465088

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.25585034489631653
    2. 'This' → logprob: -3.005850315093994
    3. 'Calculate' → logprob: -3.255850315093994
    4. 'Initialize' → logprob: -3.505850315093994
    5. '   ' → logprob: -3.630850315093994
    6. '""' → logprob: -4.630850315093994
    7. 'Returns' → logprob: -5.005850315093994
    8. ''''' → logprob: -5.505850315093994
    9. 'Initial' → logprob: -5.505850315093994
    10. 'Test' → logprob: -5.630850315093994

Token 6: ' Fonction' (ID: 189149)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.2590703964233398
    2. 'This' → logprob: -1.6340703964233398
    3. 'Initialize' → logprob: -1.8840703964233398
    4. 'Calculate' → logprob: -2.13407039642334
    5. 'Print' → logprob: -3.25907039642334
    6. 'Process' → logprob: -3.63407039642334
    7. '   ' → logprob: -3.75907039642334
    8. 'Main' → logprob: -4.00907039642334
    9. 'Start' → logprob: -4.13407039642334
    10. 'Initial' → logprob: -4.50907039642334

Token 7: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3475503921508789
    2. ' de' → logprob: -1.972550392150879
    3. ' ' → logprob: -2.597550392150879
    4. '```' → logprob: -4.222550392150879
    5. '  ' → logprob: -4.597550392150879
    6. '    ' → logprob: -4.597550392150879
    7. ' d' → logprob: -4.847550392150879
    8. 'naire' → logprob: -4.972550392150879
    9. ' continuation' → logprob: -5.347550392150879
    10. '()' → logprob: -6.222550392150879

Token 8: ' exécut' (ID: 165350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07823221385478973
    2. '\n' → logprob: -3.4532322883605957
    3. '```' → logprob: -4.453232288360596
    4. '    ' → logprob: -4.703232288360596
    5. ' ' → logprob: -5.078232288360596
    6. '\' → logprob: -5.328232288360596
    7. 'n' → logprob: -5.953232288360596
    8. '    
' → logprob: -6.453232288360596
    9. '"""' → logprob: -6.703232288360596
    10. '  ' → logprob: -6.703232288360596

Token 9: 'ant' (ID: 493)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.18714259564876556
    2. 'e' → logprob: -1.8121426105499268
    3. 'é' → logprob: -5.562142372131348
    4. 'ée' → logprob: -5.687142372131348
    5. 'ant' → logprob: -9.687142372131348
    6. '   ' → logprob: -10.437142372131348
    7. 'ee' → logprob: -11.187142372131348
    8. 'a' → logprob: -11.562142372131348
    9. '```' → logprob: -12.312142372131348
    10. 'е' → logprob: -12.437142372131348

Token 10: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.09128481149673462
    2. '   ' → logprob: -3.46628475189209
    3. ' l' → logprob: -3.84128475189209
    4. ' ' → logprob: -4.09128475189209
    5. ' la' → logprob: -4.21628475189209
    6. 'le' → logprob: -6.84128475189209
    7. 'l' → logprob: -7.34128475189209
    8. ' un' → logprob: -8.21628475189209
    9. '  ' → logprob: -8.59128475189209
    10. '    ' → logprob: -8.71628475189209

Token 11: ' lecture' (ID: 31993)
  Prédit: ' logique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' logique' → logprob: -0.5320142507553101
    2. ' t' → logprob: -3.0320143699645996
    3. ' log' → logprob: -3.1570143699645996
    4. '   ' → logprob: -3.2820143699645996
    5. ' boucle' → logprob: -3.4070143699645996
    6. ' tâche' → logprob: -3.5320143699645996
    7. ' simulation' → logprob: -3.6570143699645996
    8. ' ' → logprob: -3.7820143699645996
    9. 'fonction' → logprob: -3.9070143699645996
    10. ' fonction' → logprob: -3.9070143699645996

Token 12: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7191301584243774
    2. '   ' → logprob: -1.0941301584243774
    3. ' et' → logprob: -2.219130039215088
    4. ' du' → logprob: -3.344130039215088
    5. ' de' → logprob: -4.219130039215088
    6. ' ' → logprob: -4.719130039215088
    7. ',' → logprob: -5.344130039215088
    8. '    ' → logprob: -5.594130039215088
    9. 'des' → logprob: -7.469130039215088
    10. 'du' → logprob: -8.344130516052246

Token 13: ' deux' (ID: 10301)
  Prédit: ' fichiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichiers' → logprob: -0.6505187749862671
    2. ' fichier' → logprob: -1.025518774986267
    3. ' données' → logprob: -3.1505188941955566
    4. 'f' → logprob: -3.4005188941955566
    5. ' ' → logprob: -4.275518894195557
    6. ' la' → logprob: -4.775518894195557
    7. ' f' → logprob: -5.025518894195557
    8. 'l' → logprob: -5.275518894195557
    9. ' l' → logprob: -5.275518894195557
    10. ' code' → logprob: -6.400518894195557

Token 14: ' chaînes' (ID: 179904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5299796462059021
    2. ' chaînes' → logprob: -1.0299797058105469
    3. ' chain' → logprob: -4.154979705810547
    4. 'l' → logprob: -4.404979705810547
    5. ' chaîne' → logprob: -5.654979705810547
    6. ' variables' → logprob: -6.029979705810547
    7. ' fichiers' → logprob: -6.029979705810547
    8. ' nombres' → logprob: -6.154979705810547
    9. 'chain' → logprob: -6.154979705810547
    10. '   ' → logprob: -6.154979705810547

Token 15: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.46906769275665283
    2. '   ' → logprob: -1.4690676927566528
    3. ' et' → logprob: -2.7190675735473633
    4. 'de' → logprob: -3.7190675735473633
    5. 's' → logprob: -4.344067573547363
    6. ' ' → logprob: -4.344067573547363
    7. ',' → logprob: -4.594067573547363
    8. ' d' → logprob: -5.094067573547363
    9. '.' → logprob: -5.969067573547363
    10. ' ' → logprob: -6.344067573547363

Token 16: ' partir' (ID: 12100)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8315869569778442
    2. 'entr' → logprob: -1.0815869569778442
    3. ' l' → logprob: -2.8315868377685547
    4. 'la' → logprob: -3.7065868377685547
    5. '   ' → logprob: -3.7065868377685547
    6. 'entrée' → logprob: -3.8315868377685547
    7. ' partir' → logprob: -3.9565868377685547
    8. 'input' → logprob: -4.331586837768555
    9. ' entr' → logprob: -4.581586837768555
    10. 'concat' → logprob: -5.206586837768555

Token 17: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16715535521507263
    2. ' de' → logprob: -2.4171552658081055
    3. 'd' → logprob: -4.2921552658081055
    4. ' du' → logprob: -4.2921552658081055
    5. '   ' → logprob: -4.6671552658081055
    6. ' des' → logprob: -4.7921552658081055
    7. 'def' → logprob: -4.9171552658081055
    8. ' ' → logprob: -5.4171552658081055
    9. 'de' → logprob: -5.7921552658081055
    10. '<|end|>' → logprob: -6.2921552658081055

Token 18: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16488735377788544
    2. ' l' → logprob: -2.4148874282836914
    3. ' input' → logprob: -3.0398874282836914
    4. 'input' → logprob: -5.164887428283691
    5. '   ' → logprob: -5.289887428283691
    6. ' ' → logprob: -7.289887428283691
    7. ' la' → logprob: -7.414887428283691
    8. 'la' → logprob: -7.539887428283691
    9. '```' → logprob: -7.539887428283691
    10. 'cl' → logprob: -7.664887428283691

Token 19: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.14951075613498688
    2. ''' → logprob: -3.2745108604431152
    3. 'a' → logprob: -3.2745108604431152
    4. 'e' → logprob: -3.2745108604431152
    5. 'entrée' → logprob: -4.024510860443115
    6. 'input' → logprob: -5.649510860443115
    7. ''utilisateur' → logprob: -6.899510860443115
    8. 'é' → logprob: -7.274510860443115
    9. '’entrée' → logprob: -8.024510383605957
    10. ' entrée' → logprob: -8.149510383605957

Token 20: ' utilisateur' (ID: 115595)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7343378663063049
    2. ' standard' → logprob: -1.4843378067016602
    3. 'standard' → logprob: -1.9843378067016602
    4. '.' → logprob: -3.35933780670166
    5. '   ' → logprob: -3.48433780670166
    6. ' ' → logprob: -3.85933780670166
    7. ' et' → logprob: -4.48433780670166
    8. ' ,' → logprob: -4.73433780670166
    9. 's' → logprob: -4.98433780670166
    10. '```' → logprob: -5.23433780670166

Token 21: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03086087666451931
    2. ',' → logprob: -3.7808609008789062
    3. '    
' → logprob: -6.280860900878906
    4. '.' → logprob: -6.530860900878906
    5. '\n' → logprob: -6.780860900878906
    6. '    ' → logprob: -7.280860900878906
    7. ' et' → logprob: -7.530860900878906
    8. ' ' → logprob: -8.280860900878906
    9. ',
' → logprob: -8.280860900878906
    10. ' ,' → logprob: -8.280860900878906

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0646384209394455
    2. '    ' → logprob: -3.314638376235962
    3. ' et' → logprob: -4.439638614654541
    4. ' puis' → logprob: -4.939638614654541
    5. ' ' → logprob: -5.939638614654541
    6. 'et' → logprob: -6.939638614654541
    7. ',' → logprob: -6.939638614654541
    8. '  ' → logprob: -7.564638614654541
    9. ' ' → logprob: -8.189638137817383
    10. ' and' → logprob: -8.439638137817383

Token 23: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17486406862735748
    2. ' puis' → logprob: -2.1748640537261963
    3. ' et' → logprob: -3.5498640537261963
    4. 'et' → logprob: -4.799864292144775
    5. '    ' → logprob: -5.674864292144775
    6. ' la' → logprob: -6.674864292144775
    7. 'p' → logprob: -6.799864292144775
    8. ',' → logprob: -7.549864292144775
    9. '```' → logprob: -7.674864292144775
    10. ' leur' → logprob: -8.049863815307617

Token 24: ' affich' (ID: 90179)
  Prédit: ' affich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -1.5166383981704712
    2. '   ' → logprob: -1.7666383981704712
    3. ' effect' → logprob: -2.1416382789611816
    4. ' leur' → logprob: -2.2666382789611816
    5. ' les' → logprob: -2.7666382789611816
    6. ' compar' → logprob: -2.8916382789611816
    7. ' appel' → logprob: -3.2666382789611816
    8. ' la' → logprob: -3.5166382789611816
    9. ' l' → logprob: -3.6416382789611816
    10. 'l' → logprob: -4.016638278961182

Token 25: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07248067110776901
    2. '   ' → logprob: -2.9474806785583496
    3. 'age' → logprob: -4.57248067855835
    4. 'er' → logprob: -5.69748067855835
    5. 'e' → logprob: -6.07248067855835
    6. 'a' → logprob: -7.07248067855835
    7. '#' → logprob: -9.072480201721191
    8. '```' → logprob: -9.447480201721191
    9. ' ant' → logprob: -9.572480201721191
    10. '  ' → logprob: -9.697480201721191

Token 26: ' leur' (ID: 9853)
  Prédit: ' leur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leur' → logprob: -1.137305736541748
    2. ' ' → logprob: -1.512305736541748
    3. ' l' → logprob: -1.637305736541748
    4. ' la' → logprob: -2.387305736541748
    5. ' le' → logprob: -2.512305736541748
    6. ' leurs' → logprob: -3.512305736541748
    7. 'leur' → logprob: -3.512305736541748
    8. ' ' → logprob: -4.762305736541748
    9. 'l' → logprob: -5.012305736541748
    10. ' their' → logprob: -5.387305736541748

Token 27: ' concat' (ID: 73950)
  Prédit: ' comparaison'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comparaison' → logprob: -0.44946733117103577
    2. ' ' → logprob: -2.074467420578003
    3. ' égal' → logprob: -2.699467420578003
    4. ' concaten' → logprob: -3.324467420578003
    5. 's' → logprob: -3.574467420578003
    6. ' longueur' → logprob: -3.699467420578003
    7. ' concat' → logprob: -4.199467182159424
    8. ' similar' → logprob: -4.699467182159424
    9. '   ' → logprob: -4.949467182159424
    10. ' différence' → logprob: -5.199467182159424

Token 28: 'én' (ID: 3289)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.38905808329582214
    2. 'én' → logprob: -1.1390581130981445
    3. 'éné' → logprob: -7.3890581130981445
    4. 'éna' → logprob: -7.3890581130981445
    5. 'ération' → logprob: -7.8890581130981445
    6. 'étation' → logprob: -8.389058113098145
    7. ' én' → logprob: -8.889058113098145
    8. 'égation' → logprob: -10.014058113098145
    9. ' é' → logprob: -10.514058113098145
    10. 'éni' → logprob: -11.014058113098145

Token 29: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00016206118743866682
    2. 'a' → logprob: -9.000162124633789
    3. 'at' → logprob: -10.875162124633789
    4. ' at' → logprob: -11.625162124633789
    5. 'atio' → logprob: -13.000162124633789
    6. 'ati' → logprob: -13.750162124633789
    7. 'ion' → logprob: -14.000162124633789
    8. '   ' → logprob: -14.125162124633789
    9. 'es' → logprob: -14.250162124633789
    10. '```' → logprob: -14.375162124633789

Token 30: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25640931725502014
    2. '\n' → logprob: -1.8814092874526978
    3. '
' → logprob: -3.5064094066619873
    4. '.' → logprob: -4.381409168243408
    5. '\' → logprob: -4.381409168243408
    6. '    
' → logprob: -4.881409168243408
    7. '"""' → logprob: -6.506409168243408
    8. ',' → logprob: -7.006409168243408
    9. '"""
' → logprob: -7.006409168243408
    10. '"' → logprob: -7.006409168243408

Token 31: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9286999106407166
    2. ' la' → logprob: -0.9286999106407166
    3. ' ' → logprob: -2.6786999702453613
    4. ' une' → logprob: -2.9286999702453613
    5. ' un' → logprob: -4.053699970245361
    6. 'l' → logprob: -4.178699970245361
    7. '   ' → logprob: -4.178699970245361
    8. ' le' → logprob: -4.303699970245361
    9. ' ' → logprob: -5.178699970245361
    10. 'une' → logprob: -5.553699970245361

Token 32: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39447301626205444
    2. ''' → logprob: -1.2694730758666992
    3. 'e' → logprob: -3.144473075866699
    4. ''espace' → logprob: -7.019473075866699
    5. 'es' → logprob: -9.0194730758667
    6. '’' → logprob: -9.0194730758667
    7. ''a' → logprob: -9.2694730758667
    8. ''utilisateur' → logprob: -9.3944730758667
    9. ''é' → logprob: -9.5194730758667
    10. 'u' → logprob: -9.8944730758667

Token 33: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.28145527839660645
    2. 'inverse' → logprob: -2.6564552783966064
    3. ' d' → logprob: -2.7814552783966064
    4. 'd' → logprob: -3.1564552783966064
    5. ' alph' → logprob: -3.9064552783966064
    6. ' des' → logprob: -4.281455039978027
    7. ' donné' → logprob: -5.406455039978027
    8. '   ' → logprob: -5.906455039978027
    9. ' naturel' → logprob: -5.906455039978027
    10. ' ' → logprob: -5.906455039978027

Token 34: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7984042167663574
    2. '   ' → logprob: -1.2984042167663574
    3. '.
' → logprob: -2.6734042167663574
    4. '\n' → logprob: -3.0484042167663574
    5. '
' → logprob: -3.6734042167663574
    6. '"""
' → logprob: -3.6734042167663574
    7. '"""' → logprob: -4.423404216766357
    8. '"' → logprob: -4.548404216766357
    9. ' ' → logprob: -4.673404216766357
    10. ' de' → logprob: -4.798404216766357

Token 35: ' rapport' (ID: 20847)
  Prédit: ' rapport'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapport' → logprob: -0.0206151120364666
    2. ' def' → logprob: -5.645615100860596
    3. 'rapport' → logprob: -5.770615100860596
    4. ' défaut' → logprob: -6.270615100860596
    5. '```' → logprob: -7.020615100860596
    6. ' la' → logprob: -7.145615100860596
    7. ' ordre' → logprob: -7.270615100860596
    8. ' caractère' → logprob: -7.395615100860596
    9. ' concat' → logprob: -7.395615100860596
    10. 'e' → logprob: -7.958115100860596

Token 36: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.24723251163959503
    2. 'à' → logprob: -1.9972325563430786
    3. ' au' → logprob: -2.872232437133789
    4. 'au' → logprob: -3.747232437133789
    5. ' ' → logprob: -6.747232437133789
    6. '   ' → logprob: -7.372232437133789
    7. ' aux' → logprob: -7.622232437133789
    8. ''à' → logprob: -8.122232437133789
    9. 'a' → logprob: -8.747232437133789
    10. ' a' → logprob: -8.747232437133789

Token 37: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.40487417578697205
    2. 'l' → logprob: -1.5298742055892944
    3. ' ce' → logprob: -3.529874086380005
    4. ' celui' → logprob: -3.654874086380005
    5. ' leur' → logprob: -3.779874086380005
    6. ' celle' → logprob: -4.404874324798584
    7. ' la' → logprob: -4.529874324798584
    8. 'leur' → logprob: -5.029874324798584
    9. 'cel' → logprob: -5.904874324798584
    10. 'celle' → logprob: -6.904874324798584

Token 38: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21790635585784912
    2. ''' → logprob: -2.5929064750671387
    3. 'u' → logprob: -3.3429064750671387
    4. ''a' → logprob: -3.4679064750671387
    5. 'e' → logprob: -3.7179064750671387
    6. ''ordre' → logprob: -4.717906475067139
    7. ''entrée' → logprob: -4.967906475067139
    8. ''utilisateur' → logprob: -5.217906475067139
    9. ''''' → logprob: -6.592906475067139
    10. ''ex' → logprob: -6.717906475067139

Token 39: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9737570285797119
    2. '   ' → logprob: -1.348757028579712
    3. '.' → logprob: -1.473757028579712
    4. '"' → logprob: -3.473757028579712
    5. '"""
' → logprob: -3.848757028579712
    6. '
' → logprob: -3.973757028579712
    7. '"""' → logprob: -4.598756790161133
    8. '\' → logprob: -4.598756790161133
    9. '    
' → logprob: -5.098756790161133
    10. '```' → logprob: -5.473756790161133

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09270723909139633
    2. '"""' → logprob: -2.7177071571350098
    3. '"' → logprob: -4.09270715713501
    4. ' ' → logprob: -6.71770715713501
    5. ' """' → logprob: -6.71770715713501
    6. '```' → logprob: -7.09270715713501
    7. '  ' → logprob: -7.59270715713501
    8. '"""
' → logprob: -7.59270715713501
    9. '""' → logprob: -7.84270715713501
    10. '    
' → logprob: -8.842707633972168

Token 41: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2241188883781433
    2. '"""' → logprob: -1.724118947982788
    3. '```' → logprob: -4.599118709564209
    4. '"' → logprob: -4.849118709564209
    5. '"""
' (adapté à ' """
') → logprob: -6.224118709564209
    6. '""' → logprob: -7.349118709564209
    7. ' """' → logprob: -7.974118709564209
    8. '\n' → logprob: -7.974118709564209
    9. '`' → logprob: -8.349119186401367
    10. '
' → logprob: -8.599119186401367

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036785751581192017
    2. 'n' → logprob: -6.253678798675537
    3. 'a' → logprob: -7.878678798675537
    4. '    
' → logprob: -8.128678321838379
    5. '    ' → logprob: -8.753678321838379
    6. 's' → logprob: -8.878678321838379
    7. '\n' → logprob: -9.003678321838379
    8. 'r' → logprob: -9.003678321838379
    9. '\' → logprob: -9.503678321838379
    10. 'input' → logprob: -9.503678321838379

Token 43: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03683094307780266
    2. 'n' → logprob: -3.5368309020996094
    3. 'a' → logprob: -5.786830902099609
    4. '    ' → logprob: -7.536830902099609
    5. '    
' → logprob: -7.536830902099609
    6. 'input' → logprob: -7.786830902099609
    7. 'x' → logprob: -7.911830902099609
    8. ' n' → logprob: -8.03683090209961
    9. 's' → logprob: -8.28683090209961
    10. '\n' → logprob: -8.78683090209961

Token 44: ' Lecture' (ID: 106534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1639881134033203
    2. 'chaine' → logprob: -1.4139881134033203
    3. 'first' → logprob: -1.6639881134033203
    4. ' first' → logprob: -2.5389881134033203
    5. 'a' → logprob: -3.1639881134033203
    6. 'str' → logprob: -3.4139881134033203
    7. 's' → logprob: -3.4139881134033203
    8. 'n' → logprob: -4.41398811340332
    9. 'input' → logprob: -4.53898811340332
    10. 'string' → logprob: -5.16398811340332

Token 45: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09121919423341751
    2. ' des' → logprob: -3.716219186782837
    3. 'de' → logprob: -4.091219425201416
    4. 's' → logprob: -4.216219425201416
    5. ' ' → logprob: -4.341219425201416
    6. '    ' → logprob: -5.216219425201416
    7. ' de' → logprob: -5.841219425201416
    8. 'n' → logprob: -5.966219425201416
    9. '  ' → logprob: -6.466219425201416
    10. 'a' → logprob: -6.841219425201416

Token 46: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21401138603687286
    2. ' deux' → logprob: -2.5890114307403564
    3. ' la' → logprob: -3.0890114307403564
    4. ' input' → logprob: -3.8390114307403564
    5. 'de' → logprob: -3.9640114307403564
    6. ' l' → logprob: -3.9640114307403564
    7. ' two' → logprob: -6.214011192321777
    8. 'input' → logprob: -6.464011192321777
    9. 'l' → logprob: -6.589011192321777
    10. 's' → logprob: -6.714011192321777

Token 47: ' chaînes' (ID: 179904)
  Prédit: ' chaînes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.13113227486610413
    2. ' ' → logprob: -2.1311323642730713
    3. ' chaîne' → logprob: -7.506132125854492
    4. '  ' → logprob: -7.506132125854492
    5. ' espaces' → logprob: -7.506132125854492
    6. ' cadenas' → logprob: -7.756132125854492
    7. ' s' → logprob: -7.756132125854492
    8. 's' → logprob: -7.756132125854492
    9. '_' → logprob: -7.881132125854492
    10. ' chain' → logprob: -8.506132125854492

Token 48: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5164033770561218
    2. '   ' → logprob: -1.1414034366607666
    3. 'a' → logprob: -4.3914031982421875
    4. ',' → logprob: -4.3914031982421875
    5. 'n' → logprob: -4.5164031982421875
    6. 'es' → logprob: -5.0164031982421875
    7. 'user' → logprob: -5.0164031982421875
    8. '_' → logprob: -5.1414031982421875
    9. '    
' → logprob: -5.5164031982421875
    10. ' ' → logprob: -5.6414031982421875

Token 49: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.024556448683142662
    2. 'car' → logprob: -4.399556636810303
    3. ' l' → logprob: -5.399556636810303
    4. ' ' → logprob: -6.399556636810303
    5. ' caract' → logprob: -6.399556636810303
    6. ' caractère' → logprob: -6.899556636810303
    7. 's' → logprob: -7.274556636810303
    8. ' car' → logprob: -7.399556636810303
    9. ' caracteres' → logprob: -7.399556636810303
    10. 'u' → logprob: -8.274556159973145

Token 50: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8991522192955017
    2. 's' → logprob: -1.0241522789001465
    3. 'n' → logprob: -2.3991522789001465
    4. 'a' → logprob: -2.6491522789001465
    5. '    
' → logprob: -4.3991522789001465
    6. ' ' → logprob: -4.6491522789001465
    7. ',' → logprob: -4.8991522789001465
    8. 'c' → logprob: -5.5241522789001465
    9. 'chaine' → logprob: -5.7741522789001465
    10. 'e' → logprob: -5.8991522789001465

Token 51: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2561720311641693
    2. 'l' → logprob: -1.7561720609664917
    3. ' input' → logprob: -3.881171941757202
    4. ' partir' → logprob: -4.506172180175781
    5. ' ' → logprob: -4.881172180175781
    6. 'input' → logprob: -5.506172180175781
    7. '_' → logprob: -5.756172180175781
    8. '=input' → logprob: -6.881172180175781
    9. ' ' → logprob: -7.131172180175781
    10. ' user' → logprob: -7.256172180175781

Token 52: ''aide' (ID: 75684)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2006038427352905
    2. 'u' → logprob: -1.4506038427352905
    3. ''entrée' → logprob: -1.7006038427352905
    4. 'a' → logprob: -2.20060396194458
    5. 'e' → logprob: -2.57560396194458
    6. ''utilisateur' → logprob: -2.57560396194458
    7. ''a' → logprob: -4.57560396194458
    8. ''u' → logprob: -5.70060396194458
    9. ''i' → logprob: -6.57560396194458
    10. 'i' → logprob: -7.45060396194458

Token 53: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21746133267879486
    2. ' d' → logprob: -2.592461347579956
    3. '   ' → logprob: -2.842461347579956
    4. ' ' → logprob: -3.967461347579956
    5. 'de' → logprob: -4.217461109161377
    6. 'd' → logprob: -4.842461109161377
    7. '_' → logprob: -5.717461109161377
    8. ' input' → logprob: -6.092461109161377
    9. '=input' → logprob: -6.217461109161377
    10. ')' → logprob: -6.342461109161377

Token 54: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04621274769306183
    2. 'input' → logprob: -3.921212673187256
    3. ' l' → logprob: -4.296212673187256
    4. ' ' → logprob: -4.921212673187256
    5. ' la' → logprob: -5.796212673187256
    6. 'l' → logprob: -6.921212673187256
    7. ' `' → logprob: -9.296213150024414
    8. 'la' → logprob: -9.921213150024414
    9. ' i' → logprob: -10.171213150024414
    10. '=input' → logprob: -10.171213150024414

Token 55: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7899700403213501
    2. ''i' → logprob: -1.78997004032135
    3. 'e' → logprob: -2.0399699211120605
    4. 'u' → logprob: -2.4149699211120605
    5. ''entrée' → logprob: -2.5399699211120605
    6. 'i' → logprob: -3.5399699211120605
    7. 'a' → logprob: -3.7899699211120605
    8. ''u' → logprob: -3.9149699211120605
    9. ''a' → logprob: -5.9149699211120605
    10. ''in' → logprob: -6.1649699211120605

Token 56: ' standard' (ID: 7024)
  Prédit: ' utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisateur' → logprob: -0.21059806644916534
    2. ' user' → logprob: -3.3355979919433594
    3. '   ' → logprob: -3.4605979919433594
    4. 'util' → logprob: -3.9605979919433594
    5. 'user' → logprob: -3.9605979919433594
    6. 'u' → logprob: -4.210597991943359
    7. 's' → logprob: -4.335597991943359
    8. '_util' → logprob: -4.335597991943359
    9. ' input' → logprob: -4.710597991943359
    10. ' ' → logprob: -4.710597991943359

Token 57: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006840999238193035
    2. 'n' → logprob: -5.75684118270874
    3. '    
' → logprob: -6.38184118270874
    4. '\n' → logprob: -7.00684118270874
    5. '
' → logprob: -7.88184118270874
    6. 's' → logprob: -8.131840705871582
    7. '  ' → logprob: -9.756840705871582
    8. '```' → logprob: -10.006840705871582
    9. 'a' → logprob: -10.256840705871582
    10. '\' → logprob: -10.256840705871582

Token 58: ' sépar' (ID: 97160)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8867778182029724
    2. ' chaine' → logprob: -2.136777877807617
    3. '   ' → logprob: -2.386777877807617
    4. 's' → logprob: -2.511777877807617
    5. '    
' → logprob: -2.886777877807617
    6. ' s' → logprob: -3.136777877807617
    7. 'a' → logprob: -3.886777877807617
    8. 'n' → logprob: -4.136777877807617
    9. ' str' → logprob: -4.386777877807617
    10. ' chaîne' → logprob: -4.511777877807617

Token 59: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.12700234353542328
    2. 'é' → logprob: -2.627002239227295
    3. 'ée' → logprob: -3.127002239227295
    4. 'és' → logprob: -6.627002239227295
    5. 'e' → logprob: -7.377002239227295
    6. 'es' → logprob: -7.752002239227295
    7. 'er' → logprob: -8.377002716064453
    8. '   ' → logprob: -9.252002716064453
    9. ' par' → logprob: -9.752002716064453
    10. '```' → logprob: -9.752002716064453

Token 60: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.017350317910313606
    2. 'par' → logprob: -4.267350196838379
    3. '  ' → logprob: -7.017350196838379
    4. ' by' → logprob: -7.892350196838379
    5. ')' → logprob: -8.017350196838379
    6. ' ' → logprob: -8.267350196838379
    7. '<|end|>' → logprob: -8.392350196838379
    8. '_par' → logprob: -8.642350196838379
    9. ' )' → logprob: -8.892350196838379
    10. ',' → logprob: -8.892350196838379

Token 61: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5579761266708374
    2. 'un' → logprob: -1.1829761266708374
    3. ''un' → logprob: -3.307976245880127
    4. ' une' → logprob: -3.557976245880127
    5. 'une' → logprob: -3.807976245880127
    6. ' ' → logprob: -4.307976245880127
    7. 'space' → logprob: -5.807976245880127
    8. ''une' → logprob: -6.182976245880127
    9. ''' → logprob: -6.307976245880127
    10. '  ' → logprob: -6.432976245880127

Token 62: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.1367611140012741
    2. 'esp' → logprob: -3.01176118850708
    3. 'es' → logprob: -3.63676118850708
    4. ' ' → logprob: -5.01176118850708
    5. 'space' → logprob: -5.26176118850708
    6. ' espace' → logprob: -5.51176118850708
    7. 'spaces' → logprob: -5.51176118850708
    8. '  ' → logprob: -5.63676118850708
    9. ' ,' → logprob: -5.63676118850708
    10. ''esp' → logprob: -5.63676118850708

Token 63: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4303480386734009
    2. '    
' → logprob: -1.8053480386734009
    3. '\n' → logprob: -3.0553479194641113
    4. 's' → logprob: -3.4303479194641113
    5. 'n' → logprob: -3.5553479194641113
    6. '
' → logprob: -3.8053479194641113
    7. '   
' → logprob: -4.055347919464111
    8. ' 
' → logprob: -4.680347919464111
    9. '  
' → logprob: -5.180347919464111
    10. '\' → logprob: -5.180347919464111

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017240844899788499
    2. 'a' → logprob: -7.7517242431640625
    3. 'n' → logprob: -7.7517242431640625
    4. '    
' → logprob: -8.251724243164062
    5. 'chaine' → logprob: -9.251724243164062
    6. '    ' → logprob: -9.376724243164062
    7. '\n' → logprob: -9.501724243164062
    8. 's' → logprob: -9.626724243164062
    9. 'input' → logprob: -10.501724243164062
    10. '  ' → logprob: -10.501724243164062

Token 65: ' T' (ID: 353)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6659860610961914
    2. 'chaine' → logprob: -1.5409860610961914
    3. 's' → logprob: -2.4159860610961914
    4. 'str' → logprob: -3.0409860610961914
    5. '   ' → logprob: -3.1659860610961914
    6. 'x' → logprob: -3.5409860610961914
    7. 'strings' → logprob: -4.665986061096191
    8. 'c' → logprob: -4.665986061096191
    9. 'input' → logprob: -5.040986061096191
    10. 'n' → logprob: -5.540986061096191

Token 66: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32020971179008484
    2. 'ext' → logprob: -2.0702097415924072
    3. 'ex' → logprob: -3.0702097415924072
    4. '1' → logprob: -3.6952097415924072
    5. 'r' → logprob: -3.6952097415924072
    6. '=' → logprob: -4.320209503173828
    7. 's' → logprob: -5.070209503173828
    8. 'e' → logprob: -5.320209503173828
    9. '_' → logprob: -5.320209503173828
    10. ' ' → logprob: -5.445209503173828

Token 67: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7514538168907166
    2. ' U' → logprob: -1.1264538764953613
    3. ' S' → logprob: -2.5014538764953613
    4. 'U' → logprob: -3.0014538764953613
    5. 'S' → logprob: -4.251453876495361
    6. ' u' → logprob: -4.751453876495361
    7. '_' → logprob: -5.001453876495361
    8. ' R' → logprob: -5.251453876495361
    9. ' =' → logprob: -5.376453876495361
    10. 'u' → logprob: -5.501453876495361

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11296233534812927
    2. '=' → logprob: -2.237962245941162
    3. '=input' → logprob: -9.11296272277832
    4. ',' → logprob: -10.61296272277832
    5. ' ' → logprob: -13.73796272277832
    6. ' ' → logprob: -13.98796272277832
    7. 'input' → logprob: -14.61296272277832
    8. ')' → logprob: -14.98796272277832
    9. '.' → logprob: -14.98796272277832
    10. '=int' → logprob: -15.23796272277832

Token 69: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28146475553512573
    2. 'input' → logprob: -1.4064648151397705
    3. ' map' → logprob: -8.656464576721191
    4. 'map' → logprob: -9.406464576721191
    5. ' ' → logprob: -10.656464576721191
    6. '	input' → logprob: -12.031464576721191
    7. '(input' → logprob: -12.156464576721191
    8. '=input' → logprob: -12.531464576721191
    9. '[input' → logprob: -12.656464576721191
    10. ' ' → logprob: -12.906464576721191

Token 70: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.38926833868026733
    2. '(' → logprob: -1.139268398284912
    3. '(input' → logprob: -6.514268398284912
    4. 'str' → logprob: -7.389268398284912
    5. '(
' → logprob: -8.389267921447754
    6. ' str' → logprob: -10.389267921447754
    7. ' (' → logprob: -11.889267921447754
    8. '	str' → logprob: -12.014267921447754
    9. '(int' → logprob: -12.389267921447754
    10. 'input' → logprob: -12.514267921447754

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04859315976500511
    2. ',input' → logprob: -3.048593044281006
    3. ' ,' → logprob: -12.548593521118164
    4. ',int' → logprob: -13.798593521118164
    5. 'input' → logprob: -13.923593521118164
    6. '(input' → logprob: -16.173593521118164
    7. '   ' → logprob: -16.673593521118164
    8. ')' → logprob: -16.923593521118164
    9. ',

' → logprob: -17.173593521118164
    10. ',
' → logprob: -17.173593521118164

Token 72: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25194475054740906
    2. 'input' → logprob: -1.5019447803497314
    3. ')' → logprob: -12.251944541931152
    4. ' ' → logprob: -12.501944541931152
    5. '<input' → logprob: -13.501944541931152
    6. '(input' → logprob: -13.751944541931152
    7. '=input' → logprob: -13.751944541931152
    8. ',input' → logprob: -14.126944541931152
    9. '   ' → logprob: -14.251944541931152
    10. ' )' → logprob: -14.376944541931152

Token 73: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.745069499127567e-05
    2. '()' → logprob: -9.87508773803711
    3. '())' → logprob: -10.50008773803711
    4. ')' → logprob: -12.25008773803711
    5. ' ().' → logprob: -13.25008773803711
    6. '(' → logprob: -13.37508773803711
    7. '()
' → logprob: -16.50008773803711
    8. '('').' → logprob: -16.87508773803711
    9. '.' → logprob: -17.25008773803711
    10. '("").' → logprob: -17.37508773803711

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031827057246118784
    2. 'strip' → logprob: -5.753182888031006
    3. 'rstrip' → logprob: -12.878182411193848
    4. ' split' → logprob: -13.128182411193848
    5. 'spl' → logprob: -15.378182411193848
    6. '(split' → logprob: -16.128183364868164
    7. 's' → logprob: -17.378183364868164
    8. '.split' → logprob: -18.003183364868164
    9. '().' → logprob: -18.503183364868164
    10. ')' → logprob: -18.753183364868164

Token 75: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03166385740041733
    2. '()' → logprob: -4.28166389465332
    3. '()))' → logprob: -4.90666389465332
    4. '(' → logprob: -4.90666389465332
    5. '('' → logprob: -6.53166389465332
    6. ')' → logprob: -7.03166389465332
    7. '))' → logprob: -9.78166389465332
    8. '(','' → logprob: -10.28166389465332
    9. ' ())' → logprob: -10.28166389465332
    10. '())
' → logprob: -10.40666389465332

Token 76: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2801518440246582
    2. '   ' → logprob: -2.655151844024658
    3. '    
' → logprob: -2.655151844024658
    4. 'print' → logprob: -3.030151844024658
    5. ' 
' → logprob: -4.280151844024658
    6. '  
' → logprob: -4.530151844024658
    7. ')
' → logprob: -4.780151844024658
    8. '' → logprob: -5.280151844024658
    9. ')' → logprob: -5.405151844024658
    10. '\n' → logprob: -5.655151844024658

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39612048864364624
    2. 'print' → logprob: -1.146120548248291
    3. ' print' → logprob: -5.521120548248291
    4. 'p' → logprob: -6.271120548248291
    5. '#' → logprob: -6.646120548248291
    6. '    
' → logprob: -6.771120548248291
    7. 'r' → logprob: -8.646120071411133
    8. '
' → logprob: -8.896120071411133
    9. 'pr' → logprob: -9.396120071411133
    10. '#print' → logprob: -9.646120071411133

Token 78: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001269516651518643
    2. '   ' → logprob: -7.126269340515137
    3. '#' (adapté à ' #') → logprob: -8.751269340515137
    4. 'result' → logprob: -9.376269340515137
    5. ' print' → logprob: -9.626269340515137
    6. 'T' → logprob: -10.001269340515137
    7. 'pr' → logprob: -10.501269340515137
    8. 'P' → logprob: -11.001269340515137
    9. 'p' → logprob: -11.126269340515137
    10. 'prin' → logprob: -11.251269340515137

Token 79: ' Con' (ID: 1532)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7206096053123474
    2. ' print' → logprob: -0.7206096053123474
    3. '#' → logprob: -4.220609664916992
    4. ' #' → logprob: -4.595609664916992
    5. '   ' → logprob: -7.595609664916992
    6. 'pr' → logprob: -8.345609664916992
    7. 'result' → logprob: -8.595609664916992
    8. 'prin' → logprob: -8.595609664916992
    9. '#print' → logprob: -8.845609664916992
    10. 'Print' → logprob: -9.095609664916992

Token 80: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.007203470915555954
    2. 't' → logprob: -5.132203578948975
    3. 'st' → logprob: -7.882203578948975
    4. 'cate' → logprob: -9.007203102111816
    5. '   ' → logprob: -9.132203102111816
    6. 'c' → logprob: -9.257203102111816
    7. 's' → logprob: -9.507203102111816
    8. 'vert' → logprob: -9.632203102111816
    9. 'aten' → logprob: -9.632203102111816
    10. 'cats' → logprob: -9.757203102111816

Token 81: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.03382077440619469
    2. 'en' → logprob: -3.908820867538452
    3. 'é' → logprob: -5.033820629119873
    4. 'entation' → logprob: -6.283820629119873
    5. 'éné' → logprob: -6.783820629119873
    6. 'enação' → logprob: -7.033820629119873
    7. '   ' → logprob: -7.783820629119873
    8. 'étation' → logprob: -8.158821105957031
    9. 'ération' → logprob: -8.408821105957031
    10. 'èn' → logprob: -8.783821105957031

Token 82: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.013193998485803604
    2. 'a' → logprob: -4.6381940841674805
    3. 'at' → logprob: -6.1381940841674805
    4. 'er' → logprob: -7.1381940841674805
    5. 'ati' → logprob: -9.01319408416748
    6. 'atio' → logprob: -9.38819408416748
    7. 's' → logprob: -9.63819408416748
    8. ' at' → logprob: -10.13819408416748
    9. '   ' → logprob: -10.63819408416748
    10. 'aton' → logprob: -10.63819408416748

Token 83: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.260130912065506
    2. '   ' → logprob: -3.0101308822631836
    3. 'print' → logprob: -3.5101308822631836
    4. ',' → logprob: -3.6351308822631836
    5. 's' → logprob: -3.7601308822631836
    6. 'S' → logprob: -3.7601308822631836
    7. ' =' → logprob: -4.135130882263184
    8. ' ' → logprob: -4.385130882263184
    9. ')' → logprob: -4.885130882263184
    10. '_' → logprob: -5.260130882263184

Token 84: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.25247564911842346
    2. 'S' → logprob: -1.502475619316101
    3. ' ' → logprob: -7.752475738525391
    4. 's' → logprob: -10.25247573852539
    5. ' T' → logprob: -11.12747573852539
    6. ' ' → logprob: -11.68997573852539
    7. ' a' → logprob: -12.18997573852539
    8. '(' → logprob: -12.25247573852539
    9. '(S' → logprob: -12.25247573852539
    10. 'a' → logprob: -12.37747573852539

Token 85: ' suivi' (ID: 60370)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326693296432495
    2. ' +' → logprob: -1.3132669925689697
    3. '[::-' → logprob: -14.56326675415039
    4. ' ' → logprob: -14.93826675415039
    5. ' +
' → logprob: -15.06326675415039
    6. '＋' → logprob: -15.06326675415039
    7. '+</' → logprob: -15.06326675415039
    8. '>' → logprob: -15.06326675415039
    9. '```' → logprob: -15.31326675415039
    10. '+++' → logprob: -15.31326675415039

Token 86: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6347060203552246
    2. 'de' → logprob: -0.7597060203552246
    3. ' par' → logprob: -7.009706020355225
    4. '  ' → logprob: -7.884706020355225
    5. '   ' → logprob: -7.884706020355225
    6. ' ' → logprob: -8.884706497192383
    7. 'par' → logprob: -9.509706497192383
    8. '    ' → logprob: -9.634706497192383
    9. 'd' → logprob: -10.009706497192383
    10. '+' → logprob: -10.384706497192383

Token 87: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.001578301889821887
    2. ' T' → logprob: -6.501578330993652
    3. ''' → logprob: -10.001578330993652
    4. ' ' → logprob: -11.626578330993652
    5. '"' → logprob: -11.751578330993652
    6. '  ' → logprob: -12.626578330993652
    7. ''T' → logprob: -12.626578330993652
    8. '`' → logprob: -13.126578330993652
    9. '"T' → logprob: -13.251578330993652
    10. '<|end|>' → logprob: -14.001578330993652

Token 88: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19410386681556702
    2. '   ' → logprob: -2.569103956222534
    3. '+' → logprob: -3.319103956222534
    4. 'return' → logprob: -3.944103956222534
    5. '    
' → logprob: -4.444103717803955
    6. ' print' → logprob: -5.069103717803955
    7. ' ' → logprob: -5.319103717803955
    8. ',' → logprob: -5.569103717803955
    9. ' return' → logprob: -5.694103717803955
    10. ' +' → logprob: -6.194103717803955

Token 89: ' puis' (ID: 18766)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5802360773086548
    2. 'print' → logprob: -0.9552360773086548
    3. '   ' → logprob: -3.0802359580993652
    4. ' ' → logprob: -6.330235958099365
    5. '    ' → logprob: -6.830235958099365
    6. '    
' → logprob: -7.080235958099365
    7. ' 
' → logprob: -7.205235958099365
    8. ' )' → logprob: -7.580235958099365
    9. ' ' → logprob: -7.830235958099365
    10. ' `' → logprob: -8.205236434936523

Token 90: ' affich' (ID: 90179)
  Prédit: ' affich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affich' → logprob: -0.2921147644519806
    2. ' ' → logprob: -2.917114734649658
    3. ' print' → logprob: -2.917114734649658
    4. ' ' → logprob: -3.042114734649658
    5. 'print' → logprob: -3.917114734649658
    6. ' l' → logprob: -3.917114734649658
    7. 'aff' → logprob: -4.167114734649658
    8. ' leur' → logprob: -4.292114734649658
    9. ''aff' → logprob: -5.792114734649658
    10. '.' → logprob: -5.917114734649658

Token 91: 'age' (ID: 477)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07940512150526047
    2. 'a' → logprob: -3.7044050693511963
    3. 'age' → logprob: -3.7044050693511963
    4. 't' → logprob: -3.8294050693511963
    5. 'er' → logprob: -6.954405307769775
    6. 'ag' → logprob: -7.454405307769775
    7. 'tant' → logprob: -7.829405307769775
    8. '#' → logprob: -8.016904830932617
    9. '   ' → logprob: -8.079404830932617
    10. '```' → logprob: -8.141904830932617

Token 92: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4235997796058655
    2. '(' → logprob: -1.5485997200012207
    3. '   ' → logprob: -2.6735997200012207
    4. '()' → logprob: -3.5485997200012207
    5. '.' → logprob: -4.173599720001221
    6. ')' → logprob: -5.173599720001221
    7. '(
' → logprob: -5.548599720001221
    8. ' print' → logprob: -5.548599720001221
    9. ',' → logprob: -5.798599720001221
    10. '(print' → logprob: -6.548599720001221

Token 93: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.05514697730541229
    2. 'rés' → logprob: -3.0551469326019287
    3. ' resultat' → logprob: -6.430147171020508
    4. 'result' → logprob: -7.055147171020508
    5. 'Rés' → logprob: -7.305147171020508
    6. ' ' → logprob: -7.305147171020508
    7. ' rés' → logprob: -7.430147171020508
    8. 'r' → logprob: -7.555147171020508
    9. 'ur' → logprob: -7.930147171020508
    10. ' résult' → logprob: -8.055147171020508

Token 94: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09772331267595291
    2. '   ' → logprob: -2.7227232456207275
    3. ' print' → logprob: -4.847723484039307
    4. ')' → logprob: -5.222723484039307
    5. ',' → logprob: -5.472723484039307
    6. '(' → logprob: -5.472723484039307
    7. '.' → logprob: -5.597723484039307
    8. ')
' → logprob: -7.597723484039307
    9. 'p' → logprob: -8.472723007202148
    10. '(
' → logprob: -8.597723007202148

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5296878218650818
    2. 'print' → logprob: -0.9046878218650818
    3. ' print' → logprob: -5.404687881469727
    4. '
' → logprob: -6.904687881469727
    5. '    
' → logprob: -7.279687881469727
    6. '```' → logprob: -8.279687881469727
    7. ' 
' → logprob: -10.779687881469727
    8. '  
' → logprob: -11.029687881469727
    9. '\n' → logprob: -11.279687881469727
    10. '   
' → logprob: -11.779687881469727

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05756692960858345
    2. ' print' → logprob: -2.9325668811798096
    3. '   ' → logprob: -5.932567119598389
    4. '```' → logprob: -11.18256664276123
    5. 'pr' → logprob: -12.30756664276123
    6. '
' → logprob: -12.55756664276123
    7. 'p' → logprob: -13.43256664276123
    8. '    
' → logprob: -13.55756664276123
    9. 'prin' → logprob: -13.55756664276123
    10. ' 
' → logprob: -14.43256664276123

Token 97: '(S' (ID: 6181)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06253591924905777
    2. '(S' → logprob: -2.8125360012054443
    3. '('' → logprob: -8.562536239624023
    4. '("("' → logprob: -8.687536239624023
    5. '(s' → logprob: -9.312536239624023
    6. '((' → logprob: -10.062536239624023
    7. '("' → logprob: -10.187536239624023
    8. '(f' → logprob: -10.937536239624023
    9. '()' → logprob: -11.687536239624023
    10. '(
' → logprob: -12.437536239624023

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12714532017707825
    2. ' +' → logprob: -2.127145290374756
    3. ')' → logprob: -8.752145767211914
    4. ',' → logprob: -10.377145767211914
    5. '+)' → logprob: -11.752145767211914
    6. '   ' → logprob: -12.377145767211914
    7. ' ' → logprob: -12.502145767211914
    8. ' ,' → logprob: -12.752145767211914
    9. ' )' → logprob: -12.752145767211914
    10. '+
' → logprob: -13.127145767211914

Token 99: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.061972394585609436
    2. ' T' → logprob: -2.8119723796844482
    3. ' ' → logprob: -12.811972618103027
    4. '   ' → logprob: -13.686972618103027
    5. ')' → logprob: -14.936972618103027
    6. '    ' → logprob: -15.061972618103027
    7. '  ' → logprob: -15.311972618103027
    8. '	T' → logprob: -17.31197166442871
    9. '"T' → logprob: -17.93697166442871
    10. ' )' → logprob: -18.18697166442871

Token 100: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.0
    5. ')`' → logprob: -17.0
    6. '')' → logprob: -17.625
    7. '`)' → logprob: -18.375
    8. '")' → logprob: -18.875
    9. '()' → logprob: -19.375
    10. '())' → logprob: -19.5

Token 101: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08367884159088135
    2. ' ' → logprob: -2.958678722381592
    3. ' ' → logprob: -3.958678722381592
    4. '_' → logprob: -5.708678722381592
    5. ' _' → logprob: -5.833678722381592
    6. '__' → logprob: -6.333678722381592
    7. '  ' → logprob: -8.20867919921875
    8. ' ‌' → logprob: -8.20867919921875
    9. ' ​' → logprob: -8.70867919921875
    10. ' main' → logprob: -8.83367919921875

Token 103: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06064120680093765
    2. '.__' → logprob: -3.810641288757324
    3. '<|end|>' → logprob: -4.060641288757324
    4. '.' → logprob: -4.685641288757324
    5. ' __' → logprob: -5.560641288757324
    6. '_' → logprob: -5.935641288757324
    7. '[' → logprob: -7.310641288757324
    8. ' ==' → logprob: -7.435641288757324
    9. '__.__' → logprob: -7.435641288757324
    10. '<|end|>' → logprob: -7.560641288757324

Token 104: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1756367712223437e-05
    2. '__.__' → logprob: -11.750011444091797
    3. '__

' → logprob: -14.125011444091797
    4. '_' → logprob: -14.250011444091797
    5. '__
' → logprob: -14.250011444091797
    6. '____' → logprob: -14.500011444091797
    7. '__.' → logprob: -14.625011444091797
    8. '___' → logprob: -15.125011444091797
    9. '__["' → logprob: -15.750011444091797
    10. '==' → logprob: -16.125011444091797

Token 105: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0025956344325095415
    2. ' ==' → logprob: -6.0025954246521
    3. '==' → logprob: -9.627595901489258
    4. '__.__' → logprob: -10.877595901489258
    5. '_' → logprob: -11.252595901489258
    6. ' __' → logprob: -11.502595901489258
    7. '___' → logprob: -12.127595901489258
    8. '__.' → logprob: -13.752595901489258
    9. '____' → logprob: -13.877595901489258
    10. '=="' → logprob: -14.002595901489258

Token 106: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06271429359912872
    2. ''' → logprob: -2.8127143383026123
    3. ' "__' → logprob: -7.312714099884033
    4. ' "' → logprob: -9.812714576721191
    5. ' '__' → logprob: -10.812714576721191
    6. ' '' → logprob: -13.312714576721191
    7. '__' → logprob: -13.562714576721191
    8. '"user' → logprob: -13.937714576721191
    9. '"name' → logprob: -15.687714576721191
    10. ''s' → logprob: -16.937713623046875

Token 107: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.127333340875339e-06
    2. 'name' → logprob: -13.000003814697266
    3. ' main' → logprob: -14.625003814697266
    4. 'ma' → logprob: -14.750003814697266
    5. 'maine' → logprob: -14.750003814697266
    6. 'mai' → logprob: -15.125003814697266
    7. '_main' → logprob: -15.875003814697266
    8. 'm' → logprob: -16.125003814697266
    9. '	main' → logprob: -17.500003814697266
    10. 'amain' → logprob: -18.000003814697266

Token 108: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029751762747764587
    2. '__":
' → logprob: -3.529751777648926
    3. '__':
' → logprob: -15.029751777648926
    4. '_' → logprob: -15.154751777648926
    5. '__("' → logprob: -15.154751777648926
    6. '__["' → logprob: -15.654751777648926
    7. '"' → logprob: -16.15475082397461
    8. '__",' → logprob: -16.27975082397461
    9. '_"' → logprob: -16.65475082397461
    10. '__
' → logprob: -17.52975082397461

Token 109: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006041489075869322
    2. 'main' → logprob: -5.381041526794434
    3. '	main' → logprob: -7.131041526794434
    4. ' ' → logprob: -8.506041526794434
    5. '   ' → logprob: -9.131041526794434
    6. ' ' → logprob: -9.381041526794434
    7. ' 
' → logprob: -9.631041526794434
    8. '    
' → logprob: -9.881041526794434
    9. '<|end|>' → logprob: -10.506041526794434
    10. '(main' → logprob: -10.881041526794434

Token 110: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016044924035668373
    2. 'main' (adapté à ' main') → logprob: -4.141045093536377
    3. '	main' → logprob: -12.141044616699219
    4. ' ' → logprob: -13.016044616699219
    5. ' ma' → logprob: -13.891044616699219
    6. ' m' → logprob: -14.141044616699219
    7. ' ' → logprob: -15.016044616699219
    8. '(main' → logprob: -15.141044616699219
    9. ' mains' → logprob: -15.516044616699219
    10. '_main' → logprob: -15.641044616699219

Token 111: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004693994123954326
    2. '(' → logprob: -7.875469207763672
    3. '()
' → logprob: -9.375469207763672
    4. '(
' → logprob: -12.750469207763672
    5. ' ()' → logprob: -14.750469207763672
    6. '()

' → logprob: -14.750469207763672
    7. '()`' → logprob: -15.500469207763672
    8. ')' → logprob: -15.750469207763672
    9. '()
' → logprob: -16.500469207763672
    10. '()"' → logprob: -16.500469207763672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 37.61%
Précision adaptée (1ère position): 38.53%
Précision (top 10): 69.72%
================================================================================
