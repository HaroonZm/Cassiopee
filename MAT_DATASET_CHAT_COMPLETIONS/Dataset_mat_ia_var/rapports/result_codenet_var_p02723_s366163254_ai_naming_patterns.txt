================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_string = input()

if input_string[2] == input_string[3] and input_string[4] == input_string[5]:
    print('Yes')
else:
    print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12102846056222916
    2. ''' → logprob: -2.246028423309326
    3. ' ' → logprob: -5.121028423309326
    4. ' "' → logprob: -7.246028423309326
    5. '"""' → logprob: -7.246028423309326
    6. ' '' → logprob: -8.746028900146484
    7. '```' → logprob: -8.746028900146484
    8. '<|end|>' → logprob: -8.871028900146484
    9. '`' → logprob: -9.246028900146484
    10. '"user' → logprob: -9.746028900146484

Token 4: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023398506455123425
    2. ''' → logprob: -6.627339839935303
    3. '```' → logprob: -8.002340316772461
    4. '('' → logprob: -8.627340316772461
    5. '`' → logprob: -9.002340316772461
    6. '"' → logprob: -9.252340316772461
    7. '(
' → logprob: -9.377340316772461
    8. '[' → logprob: -9.877340316772461
    9. '()' → logprob: -10.002340316772461
    10. ')' → logprob: -10.752340316772461

Token 5: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044058769941329956
    2. '.strip' → logprob: -3.4190587997436523
    3. 'if' → logprob: -5.669058799743652
    4. '.lower' → logprob: -5.919058799743652
    5. '.split' → logprob: -6.044058799743652
    6. 'print' → logprob: -7.919058799743652
    7. '```' → logprob: -8.419058799743652
    8. '=' → logprob: -8.544058799743652
    9. '[::-' → logprob: -8.544058799743652
    10. '.upper' → logprob: -8.794058799743652

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005505407229065895
    2. ' input' → logprob: -6.005505561828613
    3. 'input' → logprob: -6.255505561828613
    4. ''' → logprob: -7.380505561828613
    5. '"' → logprob: -8.005505561828613
    6. '  ' → logprob: -9.380505561828613
    7. ' ' → logprob: -10.755505561828613
    8. ' "' → logprob: -12.005505561828613
    9. ' '' → logprob: -12.505505561828613
    10. '_' → logprob: -12.505505561828613

Token 7: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24137333035469055
    2. '_string' → logprob: -1.6163733005523682
    3. ' ' → logprob: -4.991373538970947
    4. '(' → logprob: -6.241373538970947
    5. ' ==' → logprob: -6.241373538970947
    6. ' _' → logprob: -6.366373538970947
    7. '()' → logprob: -6.866373538970947
    8. '[' → logprob: -7.991373538970947
    9. '_space' → logprob: -8.241373062133789
    10. '  ' → logprob: -8.491373062133789

Token 8: '[' (ID: 58)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4465157687664032
    2. '.' → logprob: -1.5715157985687256
    3. '.strip' → logprob: -2.4465157985687256
    4. '==' → logprob: -3.8215157985687256
    5. '.startswith' → logprob: -4.1965155601501465
    6. ':' → logprob: -4.5715155601501465
    7. '[' → logprob: -5.3215155601501465
    8. ' .' → logprob: -6.0715155601501465
    9. '[:]' → logprob: -6.0715155601501465
    10. '.is' → logprob: -6.4465155601501465

Token 9: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005599428550340235
    2. ' ' → logprob: -7.5005598068237305
    3. ':' → logprob: -13.37555980682373
    4. '-' → logprob: -13.37555980682373
    5. '1' → logprob: -13.62555980682373
    6. ')' → logprob: -14.50055980682373
    7. ''' → logprob: -14.62555980682373
    8. ']' → logprob: -15.12555980682373
    9. ' :' → logprob: -15.25055980682373
    10. '.' → logprob: -15.75055980682373

Token 10: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024999137967824936
    2. ' ]' → logprob: -7.127500057220459
    3. ':' → logprob: -7.377500057220459
    4. ']==' → logprob: -7.752500057220459
    5. ':]' → logprob: -8.3774995803833
    6. '==' → logprob: -8.5024995803833
    7. '=' → logprob: -9.5024995803833
    8. ' ==' → logprob: -10.6274995803833
    9. ')' → logprob: -10.7524995803833
    10. ']=' → logprob: -11.3774995803833

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09105215221643448
    2. '==' → logprob: -2.8410520553588867
    3. ' !=' → logprob: -4.466052055358887
    4. '=' → logprob: -4.966052055358887
    5. '>' → logprob: -6.216052055358887
    6. '!=' → logprob: -6.341052055358887
    7. ' ' → logprob: -6.716052055358887
    8. ':' → logprob: -6.966052055358887
    9. ' >' → logprob: -6.966052055358887
    10. '<' → logprob: -7.466052055358887

Token 12: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02185569703578949
    2. '"' → logprob: -4.77185583114624
    3. ''a' → logprob: -5.02185583114624
    4. ''s' → logprob: -6.64685583114624
    5. ' '' → logprob: -6.77185583114624
    6. ''e' → logprob: -7.02185583114624
    7. ''m' → logprob: -7.39685583114624
    8. ''d' → logprob: -8.021855354309082
    9. ''i' → logprob: -8.146855354309082
    10. ''y' → logprob: -8.271855354309082

Token 13: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.04381954297423363
    2. '_' → logprob: -3.1688194274902344
    3. '_str' → logprob: -8.043819427490234
    4. '_s' → logprob: -8.418819427490234
    5. '_[' → logprob: -10.168819427490234
    6. '[' → logprob: -10.418819427490234
    7. 'string' → logprob: -10.543819427490234
    8. '"' → logprob: -10.668819427490234
    9. ''' → logprob: -10.668819427490234
    10. '```' → logprob: -10.793819427490234

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0023495997302234173
    2. ']' → logprob: -6.377349376678467
    3. '[]' → logprob: -8.002349853515625
    4. '1' → logprob: -9.377349853515625
    5. '[:]' → logprob: -10.127349853515625
    6. '']' → logprob: -10.502349853515625
    7. ''' → logprob: -10.752349853515625
    8. ':' → logprob: -11.002349853515625
    9. ''[' → logprob: -11.127349853515625
    10. '['' → logprob: -11.252349853515625

Token 15: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12864692509174347
    2. '1' → logprob: -2.3786468505859375
    3. '2' → logprob: -4.1286468505859375
    4. '3' → logprob: -4.6286468505859375
    5. '4' → logprob: -6.7536468505859375
    6. '-' → logprob: -7.5036468505859375
    7. '5' → logprob: -8.253646850585938
    8. ' ' → logprob: -9.378646850585938
    9. ']' → logprob: -9.878646850585938
    10. ':' → logprob: -11.003646850585938

Token 16: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6938982605934143
    2. ']:' → logprob: -0.6938982605934143
    3. '']' → logprob: -7.5688982009887695
    4. ' ]' → logprob: -9.31889820098877
    5. '']:' → logprob: -9.44389820098877
    6. ':' → logprob: -10.44389820098877
    7. '[' → logprob: -11.94389820098877
    8. '"]:' → logprob: -11.94389820098877
    9. ']==' → logprob: -12.06889820098877
    10. '):' → logprob: -12.19389820098877

Token 17: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016265720478259027
    2. ' :' → logprob: -9.000163078308105
    3. ' and' → logprob: -10.875163078308105
    4. ':**' → logprob: -11.500163078308105
    5. 'and' → logprob: -13.375163078308105
    6. '=' → logprob: -13.375163078308105
    7. '':' → logprob: -13.625163078308105
    8. '):' → logprob: -13.625163078308105
    9. '==' → logprob: -14.125163078308105
    10. '=:' → logprob: -14.375163078308105

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006837322376668453
    2. 'input' → logprob: -5.006837368011475
    3. ' ' → logprob: -9.256836891174316
    4. ' ' → logprob: -11.131836891174316
    5. ' len' → logprob: -12.881836891174316
    6. ' '' → logprob: -13.256836891174316
    7. ''' → logprob: -13.506836891174316
    8. ' not' → logprob: -13.631836891174316
    9. '(input' → logprob: -13.631836891174316
    10. '=input' → logprob: -14.006836891174316

Token 19: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -10.875021934509277
    3. 'string' → logprob: -13.625021934509277
    4. '_strings' → logprob: -14.250021934509277
    5. 'String' → logprob: -14.375021934509277
    6. '_s' → logprob: -15.375021934509277
    7. '_str' → logprob: -16.125022888183594
    8. '_String' → logprob: -16.250022888183594
    9. '_STRING' → logprob: -16.375022888183594
    10. ' _' → logprob: -16.500022888183594

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '[
' → logprob: -14.875001907348633
    3. ''[' → logprob: -15.250001907348633
    4. '```' → logprob: -15.750001907348633
    5. ' [' → logprob: -15.750001907348633
    6. '[:' → logprob: -15.875001907348633
    7. '[-' → logprob: -17.000001907348633
    8. '[len' → logprob: -17.125001907348633
    9. '[i' → logprob: -17.125001907348633
    10. '"[' → logprob: -17.250001907348633

Token 21: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6497446894645691
    2. '2' → logprob: -0.7747446894645691
    3. '0' → logprob: -4.774744510650635
    4. '1' → logprob: -5.399744510650635
    5. ' ' → logprob: -6.024744510650635
    6. '3' → logprob: -6.774744510650635
    7. '5' → logprob: -7.774744510650635
    8. ']' → logprob: -10.524744987487793
    9. '[' → logprob: -11.774744987487793
    10. '6' → logprob: -11.899744987487793

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005773669108748436
    2. ' ]' → logprob: -6.005773544311523
    3. ']==' → logprob: -6.505773544311523
    4. '[' → logprob: -7.255773544311523
    5. '==' → logprob: -7.630773544311523
    6. ' ==' → logprob: -7.630773544311523
    7. '']' → logprob: -10.255773544311523
    8. '=' → logprob: -10.380773544311523
    9. ' ' → logprob: -11.380773544311523
    10. '`]' → logprob: -12.255773544311523

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07434722036123276
    2. '==' → logprob: -2.6993472576141357
    3. '=' → logprob: -6.199347019195557
    4. '[' → logprob: -6.949347019195557
    5. ' !=' → logprob: -7.824347019195557
    6. ' =' → logprob: -8.449347496032715
    7. ' ' → logprob: -8.949347496032715
    8. ' and' → logprob: -9.199347496032715
    9. ':' → logprob: -9.199347496032715
    10. '_' → logprob: -9.449347496032715

Token 24: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.062000855803489685
    2. 'input' → logprob: -2.8120007514953613
    3. ' ' → logprob: -10.43700122833252
    4. '=input' → logprob: -13.18700122833252
    5. '(input' → logprob: -14.56200122833252
    6. '_input' → logprob: -14.68700122833252
    7. ' '' → logprob: -15.31200122833252
    8. '	input' → logprob: -15.81200122833252
    9. '[input' → logprob: -15.81200122833252
    10. ''' → logprob: -16.312000274658203

Token 25: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.000001907348633
    3. 'string' → logprob: -14.500001907348633
    4. 'String' → logprob: -17.000001907348633
    5. '_STRING' → logprob: -17.875001907348633
    6. '_strings' → logprob: -17.875001907348633
    7. '_input' → logprob: -18.000001907348633
    8. '_array' → logprob: -18.500001907348633
    9. '_String' → logprob: -18.875001907348633
    10. '_s' → logprob: -18.875001907348633

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -17.625
    3. '```' → logprob: -17.625
    4. '[
' → logprob: -18.125
    5. ''s' → logprob: -18.75
    6. '[]' → logprob: -19.25
    7. '[-' → logprob: -19.75
    8. '[len' → logprob: -19.875
    9. ']' → logprob: -19.875
    10. '(' → logprob: -20.125

Token 27: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012808750383555889
    2. '4' → logprob: -4.512808799743652
    3. '3' → logprob: -7.137808799743652
    4. '2' → logprob: -7.262808799743652
    5. '1' → logprob: -9.137808799743652
    6. '0' → logprob: -9.387808799743652
    7. ']' → logprob: -10.762808799743652
    8. '6' → logprob: -10.887808799743652
    9. ' ' → logprob: -10.887808799743652
    10. '])' → logprob: -12.512808799743652

Token 28: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4114305377006531
    2. ']:' → logprob: -1.4114305973052979
    3. ':' → logprob: -2.911430597305298
    4. ']' → logprob: -3.536430597305298
    5. ')' → logprob: -4.786430358886719
    6. '']:' → logprob: -7.286430358886719
    7. ']):' → logprob: -8.911430358886719
    8. '）：' → logprob: -8.911430358886719
    9. '"]:' → logprob: -9.036430358886719
    10. '}:' → logprob: -9.036430358886719

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008042682893574238
    2. '   ' → logprob: -8.12580394744873
    3. ':
' → logprob: -8.62580394744873
    4. ' :' → logprob: -8.75080394744873
    5. 'print' → logprob: -9.50080394744873
    6. ' print' → logprob: -9.50080394744873
    7. ' and' → logprob: -11.37580394744873
    8. '\n' → logprob: -13.87580394744873
    9. ' ' → logprob: -14.00080394744873
    10. ' :
' → logprob: -14.00080394744873

Token 30: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.982649028301239
    2. '   ' → logprob: -1.1076490879058838
    3. ' print' → logprob: -1.2326490879058838
    4. '\n' → logprob: -6.107648849487305
    5. '    ' → logprob: -7.732648849487305
    6. '    
' → logprob: -8.357648849487305
    7. '\' → logprob: -8.482648849487305
    8. ' ' → logprob: -9.107648849487305
    9. ' 
' → logprob: -9.107648849487305
    10. ' \' → logprob: -9.107648849487305

Token 31: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015724744647741318
    2. '("("' → logprob: -5.0157246589660645
    3. '("' → logprob: -5.1407246589660645
    4. '('' → logprob: -5.8907246589660645
    5. '(input' → logprob: -9.015725135803223
    6. '(True' → logprob: -9.390725135803223
    7. '()' → logprob: -9.390725135803223
    8. '("")' → logprob: -11.015725135803223
    9. '("(' → logprob: -11.515725135803223
    10. '(
' → logprob: -11.515725135803223

Token 32: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.031176945194602013
    2. 'yes' → logprob: -4.531177043914795
    3. 'YES' → logprob: -4.906177043914795
    4. '8' → logprob: -5.656177043914795
    5. 'AC' → logprob: -6.531177043914795
    6. 'Y' → logprob: -7.031177043914795
    7. 'Yeah' → logprob: -7.406177043914795
    8. 'y' → logprob: -7.781177043914795
    9. 'True' → logprob: -8.156176567077637
    10. 'Weak' → logprob: -8.343676567077637

Token 33: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0006572735728695989
    2. ')' → logprob: -7.375657081604004
    3. '')
' → logprob: -10.625657081604004
    4. ''' → logprob: -12.875657081604004
    5. '!' → logprob: -13.125657081604004
    6. '")' → logprob: -13.625657081604004
    7. '')
' → logprob: -15.125657081604004
    8. ' ')' → logprob: -16.00065803527832
    9. '')

' → logprob: -16.50065803527832
    10. '}')' → logprob: -17.00065803527832

Token 34: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.019768930971622467
    2. ' else' → logprob: -4.019768714904785
    3. 'elif' → logprob: -7.269768714904785
    4. '<|end|>' → logprob: -8.019768714904785
    5. ':' → logprob: -8.519768714904785
    6. '```' → logprob: -8.644768714904785
    7. ')' → logprob: -9.644768714904785
    8. ':
' → logprob: -10.644768714904785
    9. '#else' → logprob: -11.144768714904785
    10. '.' → logprob: -11.519768714904785

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.153795766294934e-06
    2. ':
' → logprob: -12.375005722045898
    3. ' :' → logprob: -13.375005722045898
    4. '):' → logprob: -16.2500057220459
    5. '():' → logprob: -16.8750057220459
    6. ':**' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.1250057220459
    8. ':return' → logprob: -17.7500057220459
    9. '：' → logprob: -18.1250057220459
    10. '':' → logprob: -18.7500057220459

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06670619547367096
    2. ' print' → logprob: -2.8167061805725098
    3. 'print' → logprob: -5.44170618057251
    4. '    ' → logprob: -8.191706657409668
    5. ''' → logprob: -10.441706657409668
    6. '```' → logprob: -10.566706657409668
    7. '    
' → logprob: -11.191706657409668
    8. '	print' → logprob: -11.441706657409668
    9. '(print' → logprob: -11.441706657409668
    10. ' ' → logprob: -11.691706657409668

Token 37: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.31366974115371704
    2. 'print' (adapté à ' print') → logprob: -1.3136696815490723
    3. '   ' → logprob: -7.938669681549072
    4. '(print' → logprob: -11.18867015838623
    5. '```' → logprob: -11.43867015838623
    6. '    ' → logprob: -11.81367015838623
    7. '	print' → logprob: -12.18867015838623
    8. ''' → logprob: -12.93867015838623
    9. '    
' → logprob: -13.06367015838623
    10. '.print' → logprob: -13.18867015838623

Token 38: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3132731318473816
    2. '(' → logprob: -1.3132731914520264
    3. '()' → logprob: -11.688273429870605
    4. '("' → logprob: -13.563273429870605
    5. '(False' → logprob: -14.938273429870605
    6. '('(' → logprob: -14.938273429870605
    7. ' (' → logprob: -15.438273429870605
    8. '(
' → logprob: -15.688273429870605
    9. '(None' → logprob: -15.938273429870605
    10. '(\'' → logprob: -16.06327247619629

Token 39: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.56102097814437e-05
    2. ''' → logprob: -10.000045776367188
    3. ' No' → logprob: -16.250045776367188
    4. '')' → logprob: -17.375045776367188
    5. 'Yes' → logprob: -18.125045776367188
    6. '"No' → logprob: -19.000045776367188
    7. 'NO' → logprob: -19.250045776367188
    8. '_No' → logprob: -20.500045776367188
    9. ''N' → logprob: -20.625045776367188
    10. '''' → logprob: -21.000045776367188

Token 40: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0001628956088097766
    2. ')' → logprob: -8.750163078308105
    3. ''' → logprob: -12.625163078308105
    4. '')
' → logprob: -14.500163078308105
    5. '")' → logprob: -14.750163078308105
    6. '!' → logprob: -16.62516212463379
    7. '('' → logprob: -17.50016212463379
    8. '}')' → logprob: -18.12516212463379
    9. '')

' → logprob: -18.25016212463379
    10. ' ')' → logprob: -18.75016212463379


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 57.89%
Précision adaptée (1ère position): 60.53%
Précision (top 10): 86.84%
================================================================================
