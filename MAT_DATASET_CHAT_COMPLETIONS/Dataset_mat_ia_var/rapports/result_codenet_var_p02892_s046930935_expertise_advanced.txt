================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
from functools import partial

sys.setrecursionlimit(10**7)
input = sys.stdin.readline

def dfs(v, color):
    stack = [(v, color)]
    while stack:
        node, c = stack.pop()
        if colors[node]:
            if colors[node] != c:
                return False
            continue
        colors[node] = c
        stack.extend((neigh, -c) for neigh in g[node] if colors[neigh] != c)
        if any(colors[neigh] == c for neigh in g[node]):
            return False
    return True

def floyd_warshall(d):
    for k in range(n):
        d_k = d[k]
        for i, d_i in enumerate(d):
            aik = d_i[k]
            for j in range(n):
                if d_i[j] > aik + d_k[j]:
                    d_i[j] = aik + d_k[j]
    return d

n = int(input())
g = [[] for _ in range(n)]
f_inf = float('inf')
dist = [[0 if i == j else f_inf for j in range(n)] for i in range(n)]

for i in range(n):
    S = input().strip()
    for j, val in enumerate(S):
        if val == '1':
            g[i].append(j)
            dist[i][j] = dist[j][i] = 1

colors = [0] * n
ans = -1

if not dfs(0, 1):
    print(ans)
else:
    floyd_warshall(dist)
    ans = max(max(row) for row in dist)
    print(ans + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7340998649597168
    2. ' import' → logprob: -0.7340998649597168
    3. '.' → logprob: -3.234099864959717
    4. ' ' → logprob: -8.859100341796875
    5. '.import' → logprob: -8.984100341796875
    6. '```' → logprob: -9.109100341796875
    7. '_' → logprob: -9.234100341796875
    8. '<|end|>' → logprob: -9.234100341796875
    9. '	import' → logprob: -10.109100341796875
    10. '_import' → logprob: -10.109100341796875

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.38865795731544495
    2. ' deque' → logprob: -1.3886579275131226
    3. ' abc' → logprob: -2.763658046722412
    4. 'deque' → logprob: -4.888658046722412
    5. 'abc' → logprob: -6.888658046722412
    6. ' named' → logprob: -7.638658046722412
    7. ' Counter' → logprob: -7.888658046722412
    8. ' Ordered' → logprob: -10.263657569885254
    9. 'named' → logprob: -10.638657569885254
    10. 'default' → logprob: -10.638657569885254

Token 7: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9286866784095764
    2. '\n' → logprob: -1.0536866188049316
    3. '
' → logprob: -1.9286866188049316
    4. 'import' → logprob: -3.1786866188049316
    5. '```' → logprob: -3.3036866188049316
    6. '\' → logprob: -3.8036866188049316
    7. '<|end|>' → logprob: -5.803686618804932
    8. 'newline' → logprob: -6.178686618804932
    9. '' → logprob: -6.928686618804932
    10. '<|end|>' → logprob: -7.053686618804932

Token 8: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5978865623474121
    2. '```' → logprob: -1.847886562347412
    3. '\' → logprob: -2.222886562347412
    4. '

' → logprob: -2.722886562347412
    5. 'import' → logprob: -2.972886562347412
    6. '
' → logprob: -2.972886562347412
    7. '<|end|>' → logprob: -5.347886562347412
    8. 'def' → logprob: -5.847886562347412
    9. 'newline' → logprob: -6.472886562347412
    10. ',' → logprob: -6.972886562347412

Token 9: ' functools' (ID: 142636)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5897750854492188
    2. ' typing' → logprob: -1.2147750854492188
    3. ' itertools' → logprob: -2.3397750854492188
    4. ' math' → logprob: -3.9647750854492188
    5. ' collections' → logprob: -4.589775085449219
    6. ' heap' → logprob: -4.964775085449219
    7. ' threading' → logprob: -5.464775085449219
    8. ' copy' → logprob: -5.839775085449219
    9. 'queue' → logprob: -6.089775085449219
    10. ' ' → logprob: -6.464775085449219

Token 10: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6498008966445923
    2. ' import' → logprob: -0.7748008966445923
    3. '.' → logprob: -4.149800777435303
    4. '	import' → logprob: -7.899800777435303
    5. '_import' → logprob: -8.149801254272461
    6. '.import' → logprob: -8.274801254272461
    7. '_' → logprob: -9.024801254272461
    8. ' .' → logprob: -9.274801254272461
    9. '._' → logprob: -10.149801254272461
    10. ' ' → logprob: -10.399801254272461

Token 11: ' partial' (ID: 13664)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26393526792526245
    2. ' l' → logprob: -1.7639353275299072
    3. 'wrap' → logprob: -3.0139353275299072
    4. 'partial' → logprob: -5.388935089111328
    5. ' wraps' → logprob: -5.388935089111328
    6. 'reduce' → logprob: -6.388935089111328
    7. 'cache' → logprob: -8.138935089111328
    8. 'cached' → logprob: -8.513935089111328
    9. 'cmp' → logprob: -9.763935089111328
    10. ' partial' → logprob: -9.888935089111328

Token 12: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.961452066898346
    2. '
' → logprob: -2.086452007293701
    3. '

' → logprob: -2.086452007293701
    4. '```' → logprob: -2.086452007293701
    5. '\' → logprob: -2.336452007293701
    6. '<|end|>' → logprob: -2.836452007293701
    7. 'import' → logprob: -2.961452007293701
    8. 'def' → logprob: -4.961452007293701
    9. 'newline' → logprob: -5.211452007293701
    10. ' 

' → logprob: -5.336452007293701

Token 13: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8618242144584656
    2. 'def' → logprob: -0.8618242144584656
    3. '\' → logprob: -2.3618242740631104
    4. '```' → logprob: -4.486824035644531
    5. '[' → logprob: -4.736824035644531
    6. 'import' → logprob: -4.861824035644531
    7. '(' → logprob: -4.861824035644531
    8. '@' → logprob: -5.111824035644531
    9. '`' → logprob: -5.236824035644531
    10. ',' → logprob: -5.986824035644531

Token 14: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.281485836254433e-05
    2. '.exit' → logprob: -10.125092506408691
    3. ' .' → logprob: -11.000092506408691
    4. '.import' → logprob: -12.000092506408691
    5. '.readline' → logprob: -12.250092506408691
    6. '.stdout' → logprob: -12.625092506408691
    7. '.stdin' → logprob: -12.750092506408691
    8. '.argv' → logprob: -12.875092506408691
    9. '.user' → logprob: -13.500092506408691
    10. '.​' → logprob: -13.625092506408691

Token 15: 'rec' (ID: 9285)
  Prédit: '_trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trace' → logprob: -0.9555535912513733
    2. '_version' → logprob: -1.4555535316467285
    3. '_limit' → logprob: -2.2055535316467285
    4. '_exc' → logprob: -3.0805535316467285
    5. '_sys' → logprob: -3.5805535316467285
    6. 'rec' → logprob: -3.5805535316467285
    7. 'trace' → logprob: -3.7055535316467285
    8. '_' → logprob: -3.9555535316467285
    9. '_encoding' → logprob: -4.0805535316467285
    10. '_execution' → logprob: -4.2055535316467285

Token 16: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0002788551209960133
    2. 'urs' → logprob: -8.62527847290039
    3. 'ursive' → logprob: -10.00027847290039
    4. 'ur' → logprob: -10.37527847290039
    5. 'limit' → logprob: -11.75027847290039
    6. 'ursor' → logprob: -12.00027847290039
    7. 'urf' → logprob: -12.75027847290039
    8. 'urse' → logprob: -12.87527847290039
    9. 'urst' → logprob: -13.50027847290039
    10. 'usion' → logprob: -14.87527847290039

Token 17: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0052373106591403484
    2. '_limit' → logprob: -5.255237102508545
    3. 'depth' → logprob: -13.505237579345703
    4. '_depth' → logprob: -14.005237579345703
    5. ' limit' → logprob: -14.130237579345703
    6. 'Limit' → logprob: -15.755237579345703
    7. 'lim' → logprob: -15.880237579345703
    8. '_LIMIT' → logprob: -15.880237579345703
    9. '-limit' → logprob: -16.380237579345703
    10. '_' → logprob: -16.755237579345703

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. ' (' → logprob: -13.625003814697266
    3. '(
' → logprob: -13.750003814697266
    4. '(

' → logprob: -14.625003814697266
    5. '((' → logprob: -14.750003814697266
    6. '()' → logprob: -15.750003814697266
    7. '("("' → logprob: -15.875003814697266
    8. '```' → logprob: -15.875003814697266
    9. '(**' → logprob: -16.625003814697266
    10. '(None' → logprob: -17.125003814697266

Token 19: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01420957688242197
    2. '100' → logprob: -4.264209747314453
    3. '300' → logprob: -11.014209747314453
    4. '500' → logprob: -11.639209747314453
    5. '200' → logprob: -11.889209747314453
    6. ' ' → logprob: -12.389209747314453
    7. '1' → logprob: -12.514209747314453
    8. '999' → logprob: -12.889209747314453
    9. 'int' → logprob: -13.764209747314453
    10. '400' → logprob: -14.264209747314453

Token 20: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.02945932187139988
    2. '00' → logprob: -4.029459476470947
    3. '0' → logprob: -5.279459476470947
    4. '**' → logprob: -5.529459476470947
    5. '6' → logprob: -6.529459476470947
    6. '7' → logprob: -7.279459476470947
    7. '5' → logprob: -10.654458999633789
    8. '```' → logprob: -13.029458999633789
    9. '4' → logprob: -13.279458999633789
    10. '07' → logprob: -13.779458999633789

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0003074566484428942
    2. '9' → logprob: -8.750307083129883
    3. '6' → logprob: -9.125307083129883
    4. '8' → logprob: -10.125307083129883
    5. '```' → logprob: -19.875307083129883
    6. ' ' → logprob: -21.500307083129883
    7. '**' → logprob: -21.625307083129883
    8. '(' → logprob: -22.000307083129883
    9. '``' → logprob: -22.125307083129883
    10. '10' → logprob: -22.375307083129883

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. '))' → logprob: -13.250001907348633
    3. ' )' → logprob: -15.000001907348633
    4. ')
' → logprob: -16.500001907348633
    5. ')))' → logprob: -16.750001907348633
    6. '),' → logprob: -17.500001907348633
    7. '）' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.250001907348633
    9. '}' → logprob: -19.250001907348633
    10. '**' → logprob: -19.375001907348633

Token 23: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11011523008346558
    2. '
' → logprob: -2.4851152896881104
    3. 'def' → logprob: -4.735115051269531
    4. '```' → logprob: -5.360115051269531
    5. '\n' → logprob: -6.360115051269531
    6. '\' → logprob: -6.360115051269531
    7. '
' → logprob: -6.485115051269531
    8. '

' → logprob: -6.985115051269531
    9. '


' → logprob: -7.735115051269531
    10. '' → logprob: -8.110115051269531

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19712913036346436
    2. '()' → logprob: -1.9471291303634644
    3. ' =' → logprob: -4.322129249572754
    4. '=' → logprob: -4.322129249572754
    5. '_data' → logprob: -5.072129249572754
    6. 'data' → logprob: -6.947129249572754
    7. ')' → logprob: -7.572129249572754
    8. '```' → logprob: -7.947129249572754
    9. '_' → logprob: -8.697129249572754
    10. '.' → logprob: -8.697129249572754

Token 25: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.9128458499908447
    2. ' sys' → logprob: -1.0378458499908447
    3. 'input' → logprob: -1.6628458499908447
    4. ' input' → logprob: -2.9128458499908447
    5. 'lambda' → logprob: -8.912845611572266
    6. ' lambda' → logprob: -9.662845611572266
    7. 'raw' → logprob: -9.662845611572266
    8. 'partial' → logprob: -9.787845611572266
    9. '=sys' → logprob: -9.787845611572266
    10. ' partial' → logprob: -10.662845611572266

Token 26: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0021770275197923183
    2. '.readline' → logprob: -7.2521772384643555
    3. ' .' → logprob: -7.3771772384643555
    4. '.stdout' → logprob: -8.002177238464355
    5. '.' → logprob: -8.127177238464355
    6. '.input' → logprob: -8.752177238464355
    7. '.std' → logprob: -11.377177238464355
    8. '.argv' → logprob: -11.752177238464355
    9. '.setdefault' → logprob: -11.877177238464355
    10. '.set' → logprob: -12.002177238464355

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007794885314069688
    2. 'read' → logprob: -7.375779628753662
    3. '.read' → logprob: -8.875779151916504
    4. 'buffer' → logprob: -12.250779151916504
    5. ' readline' → logprob: -12.500779151916504
    6. '.' → logprob: -13.625779151916504
    7. '.buffer' → logprob: -13.875779151916504
    8. 'reader' → logprob: -13.875779151916504
    9. '.readlines' → logprob: -14.125779151916504
    10. '_read' → logprob: -14.875779151916504

Token 28: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12305989861488342
    2. '

' → logprob: -2.8730599880218506
    3. '
' → logprob: -3.1230599880218506
    4. 'class' → logprob: -5.1230597496032715
    5. '\' → logprob: -5.8730597496032715
    6. '\n' → logprob: -6.1230597496032715
    7. '' → logprob: -6.8730597496032715
    8. '
' → logprob: -7.3730597496032715
    9. 'n' → logprob: -7.4980597496032715
    10. '```' → logprob: -7.6230597496032715

Token 29: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22704008221626282
    2. 'class' → logprob: -1.9770400524139404
    3. 'n' → logprob: -2.9770400524139404
    4. 'N' → logprob: -4.4770402908325195
    5. 'd' → logprob: -6.6020402908325195
    6. 'T' → logprob: -7.9770402908325195
    7. 'H' → logprob: -8.47704029083252
    8. 'D' → logprob: -8.72704029083252
    9. 't' → logprob: -9.35204029083252
    10. '#' → logprob: -10.85204029083252

Token 30: ' dfs' (ID: 51252)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25781381130218506
    2. ' solve' → logprob: -2.3828139305114746
    3. ' bfs' → logprob: -2.3828139305114746
    4. ' dfs' → logprob: -3.5078139305114746
    5. ' top' → logprob: -4.882813930511475
    6. ' ' → logprob: -6.257813930511475
    7. ' process' → logprob: -7.132813930511475
    8. ' BFS' → logprob: -7.507813930511475
    9. ' reverse' → logprob: -8.007813453674316
    10. ' resolve' → logprob: -8.507813453674316

Token 31: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2043040245771408
    2. '(node' → logprob: -1.7043039798736572
    3. ' (' → logprob: -6.329304218292236
    4. '(graph' → logprob: -8.704303741455078
    5. '(tree' → logprob: -8.829303741455078
    6. '(u' → logprob: -8.954303741455078
    7. '(x' → logprob: -9.204303741455078
    8. '(depth' → logprob: -9.329303741455078
    9. '(a' → logprob: -9.704303741455078
    10. '(stack' → logprob: -9.954303741455078

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006496482528746128
    2. '):' → logprob: -7.375649452209473
    3. ' ,' → logprob: -10.875649452209473
    4. ',v' → logprob: -13.250649452209473
    5. ':' → logprob: -14.375649452209473
    6. ')' → logprob: -14.625649452209473
    7. ' ):' → logprob: -15.000649452209473
    8. ',d' → logprob: -15.750649452209473
    9. ',p' → logprob: -15.750649452209473
    10. ',n' → logprob: -16.00065040588379

Token 33: ' color' (ID: 3089)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.3961748480796814
    2. ' graph' → logprob: -2.146174907684326
    3. 'visited' → logprob: -2.146174907684326
    4. ' parent' → logprob: -3.396174907684326
    5. 'graph' → logprob: -4.146174907684326
    6. ' adj' → logprob: -4.896174907684326
    7. ' p' → logprob: -5.271174907684326
    8. 'adj' → logprob: -5.271174907684326
    9. 'parent' → logprob: -5.521174907684326
    10. ' depth' → logprob: -5.896174907684326

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1273699551820755
    2. ',' → logprob: -2.1273698806762695
    3. ')' → logprob: -8.25236988067627
    4. ':' → logprob: -10.00236988067627
    5. ' ):' → logprob: -10.37736988067627
    6. '):
' → logprob: -10.62736988067627
    7. '_map' → logprob: -10.87736988067627
    8. '[' → logprob: -11.62736988067627
    9. ' ,' → logprob: -12.12736988067627
    10. ']:' → logprob: -12.12736988067627

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6432376503944397
    2. ':' → logprob: -0.7682376503944397
    3. '):' → logprob: -4.768237590789795
    4. '[' → logprob: -7.643237590789795
    5. ' :' → logprob: -7.893237590789795
    6. ',' → logprob: -8.143238067626953
    7. '():' → logprob: -9.018238067626953
    8. '[color' → logprob: -9.143238067626953
    9. ' color' → logprob: -9.268238067626953
    10. 'color' → logprob: -9.518238067626953

Token 36: ' stack' (ID: 10825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2603248059749603
    2. ' if' → logprob: -1.8853248357772827
    3. ' color' → logprob: -3.885324716567993
    4. ' colors' → logprob: -4.510324954986572
    5. ' visited' → logprob: -4.510324954986572
    6. ' global' → logprob: -4.885324954986572
    7. ' stack' → logprob: -4.885324954986572
    8. 'color' → logprob: -5.385324954986572
    9. 'colors' → logprob: -5.635324954986572
    10. ' for' → logprob: -5.885324954986572

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03583944961428642
    2. '=' → logprob: -3.660839557647705
    3. '.append' → logprob: -4.660839557647705
    4. '.' → logprob: -11.285839080810547
    5. ':' → logprob: -12.035839080810547
    6. '=[]' → logprob: -12.660839080810547
    7. '.push' → logprob: -12.785839080810547
    8. '   ' → logprob: -13.035839080810547
    9. ',' → logprob: -13.535839080810547
    10. '.extend' → logprob: -13.785839080810547

Token 38: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.031566496938467026
    2. ' [(' → logprob: -3.5315663814544678
    3. 'deque' → logprob: -6.656566619873047
    4. ' deque' → logprob: -7.656566619873047
    5. '[((' → logprob: -10.656566619873047
    6. '[' → logprob: -11.031566619873047
    7. '   ' → logprob: -12.156566619873047
    8. '[]' → logprob: -12.531566619873047
    9. ' ' → logprob: -12.656566619873047
    10. '[v' → logprob: -13.156566619873047

Token 39: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020425561524461955
    2. ' v' → logprob: -8.500204086303711
    3. ')v' → logprob: -15.125204086303711
    4. '(v' → logprob: -15.500204086303711
    5. '   ' → logprob: -15.500204086303711
    6. '	v' → logprob: -16.87520408630371
    7. ')' → logprob: -17.62520408630371
    8. ',v' → logprob: -17.75020408630371
    9. ' ' → logprob: -18.37520408630371
    10. '
' → logprob: -19.25020408630371

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ',color' → logprob: -12.625005722045898
    3. ' ,' → logprob: -13.000005722045898
    4. '```' → logprob: -16.7500057220459
    5. ')]' → logprob: -17.2500057220459
    6. ')' → logprob: -17.6250057220459
    7. '‌,' → logprob: -17.7500057220459
    8. ',
' → logprob: -17.7500057220459
    9. '),' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.0000057220459

Token 41: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.04867389053106308
    2. ' color' → logprob: -3.0486738681793213
    3. '0' → logprob: -9.923673629760742
    4. ' ' → logprob: -11.548673629760742
    5. ')' → logprob: -12.298673629760742
    6. '   ' → logprob: -12.548673629760742
    7. 'False' → logprob: -12.673673629760742
    8. '	color' → logprob: -12.798673629760742
    9. 'None' → logprob: -13.173673629760742
    10. '1' → logprob: -13.486173629760742

Token 42: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.829823102336377e-05
    2. ')' → logprob: -10.00009822845459
    3. ',' → logprob: -10.25009822845459
    4. ' )' → logprob: -12.00009822845459
    5. '),' → logprob: -12.62509822845459
    6. ')]
' → logprob: -12.75009822845459
    7. '))' → logprob: -13.62509822845459
    8. ']' → logprob: -14.00009822845459
    9. ')])' → logprob: -14.12509822845459
    10. ')]

' → logprob: -14.37509822845459

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11618366837501526
    2. '   ' → logprob: -3.2411837577819824
    3. '\n' → logprob: -3.8661837577819824
    4. ')' → logprob: -4.366183757781982
    5. '    
' → logprob: -4.491183757781982
    6. ' 
' → logprob: -4.741183757781982
    7. '  
' → logprob: -5.366183757781982
    8. ':' → logprob: -5.616183757781982
    9. ' while' → logprob: -6.241183757781982
    10. ')
' → logprob: -6.366183757781982

Token 44: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8595309257507324
    2. ' while' → logprob: -1.4845309257507324
    3. ')' → logprob: -1.8595309257507324
    4. 'while' (adapté à ' while') → logprob: -2.3595309257507324
    5. '
' → logprob: -2.8595309257507324
    6. ':' → logprob: -4.609530925750732
    7. '```' → logprob: -4.859530925750732
    8. '    
' → logprob: -5.484530925750732
    9. '\n' → logprob: -5.609530925750732
    10. ',' → logprob: -5.609530925750732

Token 45: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.12696370482444763
    2. 'stack' → logprob: -2.1269636154174805
    3. '	stack' → logprob: -10.37696361541748
    4. '(stack' → logprob: -12.75196361541748
    5. 'Stack' → logprob: -14.62696361541748
    6. ' ' → logprob: -14.75196361541748
    7. 'st' → logprob: -15.12696361541748
    8. '   ' → logprob: -15.62696361541748
    9. '_stack' → logprob: -16.376964569091797
    10. '.stack' → logprob: -16.501964569091797

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024594836868345737
    2. '):' → logprob: -6.127459526062012
    3. '>:' → logprob: -8.377459526062012
    4. '():' → logprob: -11.502459526062012
    5. ' :' → logprob: -11.502459526062012
    6. ']:' → logprob: -11.627459526062012
    7. '}:' → logprob: -12.627459526062012
    8. '.pop' → logprob: -13.002459526062012
    9. ':**' → logprob: -13.127459526062012
    10. ':
' → logprob: -13.752459526062012

Token 47: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3179323673248291
    2. '       ' → logprob: -1.317932367324829
    3. ',v' → logprob: -6.19293212890625
    4. ' ,' → logprob: -6.31793212890625
    5. 'v' → logprob: -8.56793212890625
    6. '(v' → logprob: -8.69293212890625
    7. '   ' → logprob: -9.56793212890625
    8. ' (' → logprob: -9.56793212890625
    9. '```' → logprob: -10.06793212890625
    10. ' v' → logprob: -10.31793212890625

Token 48: ' node' (ID: 4596)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.18750455975532532
    2. ' v' → logprob: -1.812504529953003
    3. 'u' → logprob: -5.562504768371582
    4. ' u' → logprob: -6.562504768371582
    5. '       ' → logprob: -7.437504768371582
    6. 'node' (adapté à ' node') → logprob: -7.437504768371582
    7. '           ' → logprob: -7.562504768371582
    8. ' node' → logprob: -8.062504768371582
    9. '```' → logprob: -9.562504768371582
    10. ')v' → logprob: -9.687504768371582

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ',color' → logprob: -12.250007629394531
    3. ' ,' → logprob: -13.125007629394531
    4. '‌,' → logprob: -16.37500762939453
    5. ',node' → logprob: -16.50000762939453
    6. ',
' → logprob: -16.75000762939453
    7. 'color' → logprob: -17.25000762939453
    8. ',n' → logprob: -17.75000762939453
    9. '<|end|>' → logprob: -17.75000762939453
    10. ',v' → logprob: -17.87500762939453

Token 50: ' c' (ID: 274)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.9031072854995728
    2. ' c' → logprob: -1.7781072854995728
    3. 'col' → logprob: -1.7781072854995728
    4. ' current' → logprob: -2.778107166290283
    5. ' color' → logprob: -3.153107166290283
    6. 'color' → logprob: -3.153107166290283
    7. 'c' → logprob: -3.278107166290283
    8. 'current' → logprob: -3.778107166290283
    9. ' curr' → logprob: -3.903107166290283
    10. 'curr' → logprob: -4.403107166290283

Token 51: ' =' (ID: 314)
  Prédit: 'olor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olor' → logprob: -0.3522282540798187
    2. ' =' → logprob: -1.3522282838821411
    3. '=' → logprob: -3.4772281646728516
    4. 'ol' → logprob: -4.977228164672852
    5. '=color' → logprob: -8.602228164672852
    6. ')' → logprob: -8.602228164672852
    7. '   ' → logprob: -10.852228164672852
    8. ' ' → logprob: -11.352228164672852
    9. 'color' → logprob: -11.477228164672852
    10. 'OLOR' → logprob: -11.852228164672852

Token 52: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.47409588098526
    2. 'stack' → logprob: -0.97409588098526
    3. '	stack' → logprob: -11.474096298217773
    4. '(stack' → logprob: -12.099096298217773
    5. ' ' → logprob: -13.724096298217773
    6. '.stack' → logprob: -14.224096298217773
    7. '_stack' → logprob: -14.849096298217773
    8. '   ' → logprob: -15.349096298217773
    9. 'Stack' → logprob: -15.974096298217773
    10. 'st' → logprob: -16.474096298217773

Token 53: '.pop' (ID: 15746)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.319805383682251
    2. '=' → logprob: -1.319805383682251
    3. '.pop' → logprob: -5.194805145263672
    4. 'pop' → logprob: -7.569805145263672
    5. ')' → logprob: -8.319805145263672
    6. '   ' → logprob: -9.569805145263672
    7. ' ' → logprob: -10.569805145263672
    8. ' pop' → logprob: -10.569805145263672
    9. '[' → logprob: -10.819805145263672
    10. '_pop' → logprob: -10.944805145263672

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31455346941947937
    2. ')' → logprob: -1.3145534992218018
    3. '()
' → logprob: -7.939553260803223
    4. '(' → logprob: -7.939553260803223
    5. '       ' → logprob: -9.064553260803223
    6. ',' → logprob: -9.564553260803223
    7. '   ' → logprob: -9.564553260803223
    8. ')
' → logprob: -9.814553260803223
    9. ':' → logprob: -10.064553260803223
    10. ']' → logprob: -10.189553260803223

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014107799157500267
    2. ':' → logprob: -5.014107704162598
    3. ' if' → logprob: -6.139107704162598
    4. '   ' → logprob: -6.389107704162598
    5. '        ' → logprob: -7.389107704162598
    6. '<|end|>' → logprob: -7.514107704162598
    7. ',' → logprob: -7.639107704162598
    8. '        
' → logprob: -8.139107704162598
    9. 'if' → logprob: -8.264107704162598
    10. 'color' → logprob: -8.514107704162598

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6784870624542236
    2. 'if' (adapté à ' if') → logprob: -1.5534870624542236
    3. '       ' → logprob: -1.9284870624542236
    4. 'color' → logprob: -2.9284870624542236
    5. 'colors' → logprob: -3.1784870624542236
    6. ' colors' → logprob: -4.1784868240356445
    7. ' color' → logprob: -4.1784868240356445
    8. '           ' → logprob: -5.8034868240356445
    9. 'visited' → logprob: -6.1784868240356445
    10. ' visited' → logprob: -6.5534868240356445

Token 57: ' colors' (ID: 10803)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.4621233344078064
    2. ' color' → logprob: -2.087123394012451
    3. 'colors' → logprob: -2.462123394012451
    4. 'visited' → logprob: -2.712123394012451
    5. ' colors' → logprob: -3.212123394012451
    6. ' visited' → logprob: -4.087123394012451
    7. 'node' → logprob: -4.587123394012451
    8. ' node' → logprob: -4.712123394012451
    9. ' not' → logprob: -4.712123394012451
    10. 'c' → logprob: -6.087123394012451

Token 58: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '(node' → logprob: -16.625
    4. 'node' → logprob: -16.75
    5. '=node' → logprob: -17.0
    6. '```' → logprob: -18.625
    7. '[user' → logprob: -19.125
    8. ',node' → logprob: -19.25
    9. '	node' → logprob: -19.375
    10. '[color' → logprob: -19.5

Token 59: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03685266152024269
    2. ']==' → logprob: -3.9118525981903076
    3. ' is' → logprob: -4.786852836608887
    4. '[' → logprob: -5.411852836608887
    5. 'is' → logprob: -6.161852836608887
    6. '==' → logprob: -7.286852836608887
    7. ']!=' → logprob: -9.036852836608887
    8. ' ]' → logprob: -9.036852836608887
    9. '[color' → logprob: -9.661852836608887
    10. ')' → logprob: -9.786852836608887

Token 60: '           ' (ID: 352)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8455550670623779
    2. ' !=' → logprob: -1.095555067062378
    3. '==' → logprob: -2.095555067062378
    4. ' continue' → logprob: -2.970555067062378
    5. '!=' → logprob: -3.220555067062378
    6. ' is' → logprob: -4.845555305480957
    7. 'continue' → logprob: -4.970555305480957
    8. '           ' → logprob: -6.470555305480957
    9. '<|end|>' → logprob: -7.095555305480957
    10. '	continue' → logprob: -7.345555305480957

Token 61: ' if' (ID: 538)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.030042394995689392
    2. 'continue' → logprob: -4.1550421714782715
    3. ' if' → logprob: -4.7800421714782715
    4. '               ' → logprob: -5.2800421714782715
    5. '           ' → logprob: -8.28004264831543
    6. 'if' (adapté à ' if') → logprob: -9.40504264831543
    7. '	continue' → logprob: -10.03004264831543
    8. ' return' → logprob: -11.28004264831543
    9. '_continue' → logprob: -11.53004264831543
    10. ' continues' → logprob: -12.40504264831543

Token 62: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.31329280138015747
    2. 'colors' → logprob: -1.3132927417755127
    3. 'c' → logprob: -11.563292503356934
    4. '(colors' → logprob: -11.938292503356934
    5. '               ' → logprob: -12.688292503356934
    6. 'color' → logprob: -12.813292503356934
    7. ' c' → logprob: -13.188292503356934
    8. '           ' → logprob: -13.938292503356934
    9. '```' → logprob: -13.938292503356934
    10. '_colors' → logprob: -14.063292503356934

Token 63: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. '(node' → logprob: -14.250004768371582
    4. '[user' → logprob: -16.875003814697266
    5. 'node' → logprob: -17.125003814697266
    6. '[token' → logprob: -18.000003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. ',node' → logprob: -18.500003814697266
    9. '```' → logprob: -18.750003814697266
    10. ' node' → logprob: -18.750003814697266

Token 64: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5077729821205139
    2. '!=' → logprob: -1.2577729225158691
    3. '[node' → logprob: -3.007772922515869
    4. ']!=' → logprob: -3.382772922515869
    5. ']' → logprob: -3.757772922515869
    6. '[' → logprob: -5.132772922515869
    7. ')!=' → logprob: -7.382772922515869
    8. ' ]' → logprob: -8.382773399353027
    9. ')' → logprob: -9.007773399353027
    10. '()!=' → logprob: -9.382773399353027

Token 65: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.598414421081543
    2. ' !=' → logprob: -0.848414421081543
    3. '[node' → logprob: -3.848414421081543
    4. '[' → logprob: -7.098414421081543
    5. ']!=' → logprob: -10.723414421081543
    6. '==' → logprob: -10.848414421081543
    7. ')!=' → logprob: -11.848414421081543
    8. '()!=' → logprob: -11.848414421081543
    9. '```' → logprob: -12.098414421081543
    10. ' ==' → logprob: -12.348414421081543

Token 66: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20143544673919678
    2. 'c' → logprob: -1.7014354467391968
    3. ' ' → logprob: -11.326435089111328
    4. 'color' → logprob: -12.951435089111328
    5. '	c' → logprob: -13.076435089111328
    6. ' ' → logprob: -13.826435089111328
    7. ' color' → logprob: -14.076435089111328
    8. ')c' → logprob: -14.201435089111328
    9. '   ' → logprob: -14.451435089111328
    10. '    ' → logprob: -15.076435089111328

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05631132796406746
    2. ':
' → logprob: -2.9313113689422607
    3. ':return' → logprob: -6.681311130523682
    4. '               ' → logprob: -9.68131160736084
    5. '           ' → logprob: -10.30631160736084
    6. ' :' → logprob: -11.18131160736084
    7. ')' → logprob: -11.18131160736084
    8. '):' → logprob: -11.30631160736084
    9. ' continue' → logprob: -11.43131160736084
    10. ':

' → logprob: -11.93131160736084

Token 68: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012341998517513275
    2. ' return' → logprob: -4.8873419761657715
    3. 'return' → logprob: -6.0123419761657715
    4. ':return' → logprob: -7.0123419761657715
    5. ':' → logprob: -7.1373419761657715
    6. ':
' → logprob: -8.01234245300293
    7. '           ' → logprob: -9.38734245300293
    8. 'continue' → logprob: -9.63734245300293
    9. ' continue' → logprob: -10.13734245300293
    10. '```' → logprob: -10.63734245300293

Token 69: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4433324933052063
    2. 'return' (adapté à ' return') → logprob: -1.8183324337005615
    3. '                   ' → logprob: -2.0683324337005615
    4. 'print' → logprob: -3.4433324337005615
    5. ' print' → logprob: -3.8183324337005615
    6. '               ' → logprob: -4.818332672119141
    7. ' raise' → logprob: -5.818332672119141
    8. 'raise' → logprob: -6.443332672119141
    9. '
' → logprob: -6.568332672119141
    10. '```' → logprob: -7.818332672119141

Token 70: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0010786604834720492
    2. ' False' → logprob: -6.8760786056518555
    3. 'True' → logprob: -10.001078605651855
    4. ' True' → logprob: -16.501079559326172
    5. '(False' → logprob: -16.501079559326172
    6. 'None' → logprob: -16.751079559326172
    7. '```' → logprob: -16.876079559326172
    8. 'Fal' → logprob: -17.001079559326172
    9. 'F' → logprob: -17.126079559326172
    10. '=False' → logprob: -17.501079559326172

Token 71: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28913769125938416
    2. '       ' → logprob: -1.4141377210617065
    3. '
' → logprob: -5.414137840270996
    4. '<|end|>' → logprob: -6.414137840270996
    5. ',' → logprob: -7.664137840270996
    6. '   ' → logprob: -7.914137840270996
    7. '               ' → logprob: -8.039137840270996
    8. '    
' → logprob: -9.039137840270996
    9. '\n' → logprob: -9.414137840270996
    10. 'continue' → logprob: -9.664137840270996

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12750889360904694
    2. '       ' → logprob: -2.1275088787078857
    3. ' continue' → logprob: -8.627509117126465
    4. 'continue' → logprob: -8.752509117126465
    5. '               ' → logprob: -9.002509117126465
    6. '   ' → logprob: -10.252509117126465
    7. ',' → logprob: -10.377509117126465
    8. '```' → logprob: -10.877509117126465
    9. '<|end|>' → logprob: -11.627509117126465
    10. '.' → logprob: -13.002509117126465

Token 73: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13201254606246948
    2. '       ' → logprob: -2.1320126056671143
    3. ' continue' → logprob: -5.507012367248535
    4. 'continue' (adapté à ' continue') → logprob: -7.382012367248535
    5. '               ' → logprob: -8.632012367248535
    6. '   ' → logprob: -9.507012367248535
    7. ' continues' → logprob: -10.132012367248535
    8. ' continued' → logprob: -10.632012367248535
    9. ' Continue' → logprob: -11.132012367248535
    10. ',' → logprob: -11.507012367248535

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012052309466525912
    2. 'colors' → logprob: -7.1262054443359375
    3. ' colors' → logprob: -8.626205444335938
    4. '   ' → logprob: -9.001205444335938
    5. '<|end|>' → logprob: -10.626205444335938
    6. '```' → logprob: -10.751205444335938
    7. '           ' → logprob: -11.251205444335938
    8. '        
' → logprob: -11.376205444335938
    9. '      ' → logprob: -11.876205444335938
    10. 's' → logprob: -12.501205444335938

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012892624363303185
    2. '<|end|>' → logprob: -10.000128746032715
    3. '   ' → logprob: -10.375128746032715
    4. 'colors' → logprob: -11.250128746032715
    5. '```' → logprob: -11.500128746032715
    6. '        
' → logprob: -11.875128746032715
    7. ' colors' → logprob: -11.875128746032715
    8. '           ' → logprob: -12.125128746032715
    9. '      ' → logprob: -12.625128746032715
    10. '<|end|>' → logprob: -14.000128746032715

Token 76: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.5670772194862366
    2. ' colors' → logprob: -1.1920771598815918
    3. '       ' → logprob: -2.192077159881592
    4. '   ' → logprob: -4.067077159881592
    5. '```' → logprob: -8.69207763671875
    6. '           ' → logprob: -9.31707763671875
    7. ' ' → logprob: -9.56707763671875
    8. '.colors' → logprob: -10.06707763671875
    9. '(colors' → logprob: -11.56707763671875
    10. '    ' → logprob: -12.06707763671875

Token 77: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.12500286102295
    3. '=node' → logprob: -15.87500286102295
    4. '[token' → logprob: -16.125001907348633
    5. '[user' → logprob: -16.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '<|end|>' → logprob: -18.125001907348633
    8. '[module' → logprob: -18.125001907348633
    9. '[n' → logprob: -18.750001907348633
    10. '[root' → logprob: -18.750001907348633

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027476787567138672
    2. '=' → logprob: -3.6524767875671387
    3. ']=' → logprob: -7.027476787567139
    4. ' =' → logprob: -8.277477264404297
    5. '[' → logprob: -10.902477264404297
    6. ' ]' → logprob: -11.652477264404297
    7. ')' → logprob: -11.902477264404297
    8. ' ' → logprob: -15.652477264404297
    9. ']==' → logprob: -16.027477264404297
    10. '][' → logprob: -16.902477264404297

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014176792465150356
    2. ' =' → logprob: -4.264176845550537
    3. '[' → logprob: -11.389176368713379
    4. '=
' → logprob: -14.139176368713379
    5. '＝' → logprob: -15.264176368713379
    6. '=c' → logprob: -15.764176368713379
    7. '=

' → logprob: -15.889176368713379
    8. '=color' → logprob: -16.264177322387695
    9. '<|end|>' → logprob: -16.389177322387695
    10. ',' → logprob: -16.764177322387695

Token 80: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1602243334054947
    2. ' c' → logprob: -1.9102243185043335
    3. '	c' → logprob: -15.785223960876465
    4. ' ' → logprob: -17.53522491455078
    5. '$c' → logprob: -17.78522491455078
    6. ')c' → logprob: -17.91022491455078
    7. '   ' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.66022491455078
    9. '```' → logprob: -18.91022491455078
    10. '%c' → logprob: -19.91022491455078

Token 81: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14446763694286346
    2. ' for' → logprob: -2.39446759223938
    3. 'for' → logprob: -3.14446759223938
    4. '   ' → logprob: -9.1444673538208
    5. '```' → logprob: -10.0194673538208
    6. '        
' → logprob: -10.6444673538208
    7. ',' → logprob: -11.3944673538208
    8. '<|end|>' → logprob: -12.0194673538208
    9. ' ' → logprob: -12.6444673538208
    10. '	for' → logprob: -12.7694673538208

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8123781085014343
    2. ' for' → logprob: -0.8123781085014343
    3. 'for' → logprob: -2.187378168106079
    4. '```' → logprob: -8.9373779296875
    5. '   ' → logprob: -10.1873779296875
    6. '        
' → logprob: -11.9373779296875
    7. '	for' → logprob: -12.0623779296875
    8. ',' → logprob: -13.5623779296875
    9. ' ' → logprob: -13.9373779296875
    10. '<|end|>' → logprob: -14.1873779296875

Token 83: ' stack' (ID: 10825)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931595802307129
    2. 'for' → logprob: -0.6931595802307129
    3. '       ' → logprob: -12.068159103393555
    4. '	for' → logprob: -12.443159103393555
    5. '   ' → logprob: -13.193159103393555
    6. '```' → logprob: -15.318159103393555
    7. '        
' → logprob: -15.693159103393555
    8. 'next' → logprob: -16.443159103393555
    9. '    
' → logprob: -16.693159103393555
    10. ' next' → logprob: -17.068159103393555

Token 84: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0012239166535437107
    2. '.' → logprob: -6.751224040985107
    3. '.append' → logprob: -10.25122356414795
    4. 'extend' → logprob: -11.75122356414795
    5. '+.' → logprob: -12.75122356414795
    6. '.ext' → logprob: -13.00122356414795
    7. ' extends' → logprob: -13.12622356414795
    8. '+=' → logprob: -13.12622356414795
    9. 'extends' → logprob: -14.75122356414795
    10. ' extend' → logprob: -15.12622356414795

Token 85: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03131871297955513
    2. '([(' → logprob: -3.5313186645507812
    3. '(((' → logprob: -6.906318664550781
    4. '(' → logprob: -8.156318664550781
    5. '[(' → logprob: -8.781318664550781
    6. '([' → logprob: -9.156318664550781
    7. '(
' → logprob: -11.781318664550781
    8. '([
' → logprob: -12.531318664550781
    9. '(adj' → logprob: -13.281318664550781
    10. '(([' → logprob: -13.281318664550781

Token 86: 'ne' (ID: 611)
  Prédit: '(ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ne' → logprob: -0.23308631777763367
    2. '(n' → logprob: -1.733086347579956
    3. ' (' → logprob: -4.358086109161377
    4. '(adj' → logprob: -4.608086109161377
    5. '(' → logprob: -5.983086109161377
    6. '(next' → logprob: -6.858086109161377
    7. '(w' → logprob: -7.108086109161377
    8. '(child' → logprob: -7.108086109161377
    9. '(nb' → logprob: -7.108086109161377
    10. '(nx' → logprob: -7.608086109161377

Token 87: 'igh' (ID: 1251)
  Prédit: 'ighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -0.5342904329299927
    2. 'igh' → logprob: -0.9092904329299927
    3. ',' → logprob: -5.534290313720703
    4. 'ighbour' → logprob: -5.784290313720703
    5. 'ighbors' → logprob: -6.909290313720703
    6. 'w' → logprob: -6.909290313720703
    7. 'i' → logprob: -7.034290313720703
    8. 'xt' → logprob: -7.534290313720703
    9. 'ig' → logprob: -8.534290313720703
    10. 'gh' → logprob: -9.659290313720703

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24619543552398682
    2. 'bor' → logprob: -1.6211954355239868
    3. 'bors' → logprob: -4.121195316314697
    4. 'b' → logprob: -6.246195316314697
    5. 's' → logprob: -6.746195316314697
    6. 'gh' → logprob: -7.871195316314697
    7. 'r' → logprob: -8.621195793151855
    8. ',b' → logprob: -8.746195793151855
    9. 'for' → logprob: -8.746195793151855
    10. '[' → logprob: -9.371195793151855

Token 89: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061097949743270874
    2. '3' → logprob: -3.8110978603363037
    3. 'c' → logprob: -3.8110978603363037
    4. '-' → logprob: -5.061098098754883
    5. '-c' → logprob: -5.436098098754883
    6. ' ' → logprob: -6.061098098754883
    7. ' -' → logprob: -7.811098098754883
    8. ' c' → logprob: -7.936098098754883
    9. '   ' → logprob: -8.061098098754883
    10. ')c' → logprob: -8.436098098754883

Token 90: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001319063303526491
    2. ' c' → logprob: -9.000131607055664
    3. '1' → logprob: -12.625131607055664
    4. '   ' → logprob: -13.750131607055664
    5. ')c' → logprob: -14.000131607055664
    6. '<|end|>' → logprob: -14.000131607055664
    7. ')' → logprob: -14.750131607055664
    8. 'color' → logprob: -15.000131607055664
    9. 'cation' → logprob: -15.125131607055664
    10. ' ' → logprob: -15.562631607055664

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.625011444091797
    3. ')
' → logprob: -14.125011444091797
    4. '))' → logprob: -14.125011444091797
    5. 'for' → logprob: -15.250011444091797
    6. ' for' → logprob: -15.625011444091797
    7. 'or' → logprob: -15.875011444091797
    8. ' ' → logprob: -16.750011444091797
    9. 'orm' → logprob: -17.250011444091797
    10. '   ' → logprob: -17.250011444091797

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0011853496544063091
    2. 'for' → logprob: -7.001185417175293
    3. ')' → logprob: -8.251185417175293
    4. ' ' → logprob: -11.626185417175293
    5. '	for' → logprob: -13.001185417175293
    6. ' )' → logprob: -13.626185417175293
    7. '   ' → logprob: -16.001184463500977
    8. '         ' → logprob: -16.126184463500977
    9. '  ' → logprob: -16.751184463500977
    10. ' if' → logprob: -17.001184463500977

Token 93: ' neigh' (ID: 9109)
  Prédit: ' neigh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' neigh' → logprob: -0.0022951364517211914
    2. 'ne' → logprob: -6.127295017242432
    3. ' nei' → logprob: -10.12729549407959
    4. ' neighbors' → logprob: -10.62729549407959
    5. 'neighbors' → logprob: -10.87729549407959
    6. ' graph' → logprob: -12.12729549407959
    7. ' neighbor' → logprob: -12.25229549407959
    8. 'n' → logprob: -12.37729549407959
    9. 'neighbor' → logprob: -12.75229549407959
    10. ' nne' → logprob: -12.87729549407959

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018154039978981018
    2. 'in' → logprob: -4.018154144287109
    3. ' ' → logprob: -14.39315414428711
    4. '[in' → logprob: -14.39315414428711
    5. '	in' → logprob: -14.64315414428711
    6. 's' → logprob: -14.89315414428711
    7. ')' → logprob: -15.39315414428711
    8. '<|end|>' → logprob: -15.45565414428711
    9. ',' → logprob: -15.51815414428711
    10. ' if' → logprob: -15.64315414428711

Token 95: ' g' (ID: 329)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.015622416511178017
    2. ' graph' → logprob: -4.640622615814209
    3. 'adj' → logprob: -6.015622615814209
    4. 'G' → logprob: -6.390622615814209
    5. 'edges' → logprob: -7.140622615814209
    6. 'g' → logprob: -7.265622615814209
    7. 'tree' → logprob: -9.89062213897705
    8. '   ' → logprob: -10.01562213897705
    9. 'graphs' → logprob: -10.01562213897705
    10. ' edges' → logprob: -10.89062213897705

Token 96: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -7.896309739408025e-07
    2. '[v' → logprob: -15.250000953674316
    3. 'raph' → logprob: -15.500000953674316
    4. '[n' → logprob: -16.25
    5. 'node' → logprob: -16.5
    6. '[' → logprob: -17.0
    7. 'ode' → logprob: -18.25
    8. '```' → logprob: -18.5
    9. '(node' → logprob: -18.625
    10. 'v' → logprob: -18.75

Token 97: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07352574914693832
    2. ' if' → logprob: -3.4485256671905518
    3. ']' → logprob: -3.5735256671905518
    4. ')' → logprob: -4.573525905609131
    5. 'if' → logprob: -7.823525905609131
    6. ' ])' → logprob: -8.323525428771973
    7. ')])' → logprob: -10.948525428771973
    8. ' )' → logprob: -11.198525428771973
    9. ')]' → logprob: -11.323525428771973
    10. '])]' → logprob: -11.823525428771973

Token 98: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3913903832435608
    2. ')' → logprob: -1.141390323638916
    3. ' )' → logprob: -5.891390323638916
    4. 'if' → logprob: -6.391390323638916
    5. '       ' → logprob: -10.016390800476074
    6. '   ' → logprob: -11.391390800476074
    7. ' ' → logprob: -12.516390800476074
    8. ')
' → logprob: -13.016390800476074
    9. '        ' → logprob: -13.391390800476074
    10. ')

' → logprob: -13.891390800476074

Token 99: ' colors' (ID: 10803)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4673769772052765
    2. ' colors' → logprob: -1.717376947402954
    3. 'colors' → logprob: -2.217376947402954
    4. 'not' → logprob: -2.467376947402954
    5. '!' → logprob: -9.967376708984375
    6. '(colors' → logprob: -11.154876708984375
    7. ' ' → logprob: -11.592376708984375
    8. '	not' → logprob: -11.654876708984375
    9. '(not' → logprob: -11.779876708984375
    10. ' ' → logprob: -12.279876708984375

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. 'ne' → logprob: -14.625001907348633
    3. '```' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.125001907348633
    5. '[node' → logprob: -15.500001907348633
    6. '       ' → logprob: -16.750001907348633
    7. '   ' → logprob: -16.750001907348633
    8. 'not' → logprob: -17.000001907348633
    9. ' [' → logprob: -17.125001907348633
    10. '	' → logprob: -17.375001907348633

Token 101: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.06199346110224724
    2. '[' → logprob: -2.811993360519409
    3. '(ne' → logprob: -11.561993598937988
    4. '[
' → logprob: -12.811993598937988
    5. 'neq' → logprob: -12.936993598937988
    6. '```' → logprob: -13.561993598937988
    7. '   ' → logprob: -13.811993598937988
    8. 'n' → logprob: -14.186993598937988
    9. '_ne' → logprob: -14.311993598937988
    10. ' neigh' → logprob: -14.436993598937988

Token 102: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.0005840110243298113
    2. 'gh' → logprob: -8.00058364868164
    3. 'ighbors' → logprob: -9.50058364868164
    4. 'ighbor' → logprob: -9.75058364868164
    5. 'ig' → logprob: -10.00058364868164
    6. '[' → logprob: -10.12558364868164
    7. 'ighbours' → logprob: -12.37558364868164
    8. 'i' → logprob: -12.50058364868164
    9. 'IGH' → logprob: -13.00058364868164
    10. 'ith' → logprob: -13.12558364868164

Token 103: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09309658408164978
    2. ']==' → logprob: -3.2180964946746826
    3. ' ==' → logprob: -3.4680964946746826
    4. '[' → logprob: -4.968096733093262
    5. ']' → logprob: -5.093096733093262
    6. ')' → logprob: -5.968096733093262
    7. '])' → logprob: -6.843096733093262
    8. ')==' → logprob: -7.718096733093262
    9. ' is' → logprob: -7.968096733093262
    10. '=' → logprob: -9.718096733093262

Token 104: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03876043111085892
    2. ' ==' → logprob: -3.4137604236602783
    3. ' is' → logprob: -5.788760662078857
    4. ')' → logprob: -6.538760662078857
    5. '[' → logprob: -8.1637601852417
    6. ']==' → logprob: -9.4137601852417
    7. ')==' → logprob: -9.5387601852417
    8. '=' → logprob: -10.0387601852417
    9. '<|end|>' → logprob: -10.1637601852417
    10. ' ' → logprob: -10.7887601852417

Token 105: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5378080606460571
    2. 'c' → logprob: -0.9128080606460571
    3. ' ' → logprob: -4.537807941436768
    4. ' c' → logprob: -6.787807941436768
    5. 'None' → logprob: -7.037807941436768
    6. 'color' → logprob: -7.287807941436768
    7. '-' → logprob: -7.787807941436768
    8. ' -' → logprob: -8.787808418273926
    9. '-c' → logprob: -8.912808418273926
    10. ')c' → logprob: -9.412808418273926

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000990891712717712
    2. ' and' → logprob: -7.125990867614746
    3. ')
' → logprob: -9.500990867614746
    4. ' )' → logprob: -9.625990867614746
    5. '))' → logprob: -11.250990867614746
    6. 'and' → logprob: -11.375990867614746
    7. ')

' → logprob: -11.625990867614746
    8. '])' → logprob: -11.750990867614746
    9. '）' → logprob: -13.875990867614746
    10. 'else' → logprob: -14.500990867614746

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009288371540606022
    2. 'return' → logprob: -5.259288311004639
    3. '       ' → logprob: -5.634288311004639
    4. ' return' → logprob: -8.009288787841797
    5. ')' → logprob: -9.759288787841797
    6. '<|end|>' → logprob: -10.384288787841797
    7. '```' → logprob: -11.759288787841797
    8. '
' → logprob: -11.884288787841797
    9. ':return' → logprob: -12.009288787841797
    10. 'continue' → logprob: -12.134288787841797

Token 108: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38875654339790344
    2. '   ' → logprob: -1.138756513595581
    3. ' return' → logprob: -6.38875675201416
    4. '
' → logprob: -9.76375675201416
    5. ')' → logprob: -10.26375675201416
    6. '       ' → logprob: -10.51375675201416
    7. ':return' → logprob: -10.63875675201416
    8. '	return' → logprob: -11.38875675201416
    9. '```' → logprob: -11.51375675201416
    10. ' ' → logprob: -12.01375675201416

Token 109: ' any' (ID: 1062)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.5448834896087646
    2. 'colors' → logprob: -1.2948834896087646
    3. ' len' → logprob: -3.0448834896087646
    4. ' not' → logprob: -3.0448834896087646
    5. 'len' → logprob: -3.6698834896087646
    6. ' any' → logprob: -4.419883728027344
    7. ' False' → logprob: -5.794883728027344
    8. 'False' → logprob: -5.919883728027344
    9. 'not' → logprob: -6.294883728027344
    10. 'any' → logprob: -6.294883728027344

Token 110: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.0007580502424389124
    2. 'colors' → logprob: -7.500758171081543
    3. ' colors' → logprob: -9.000758171081543
    4. '(' → logprob: -10.375758171081543
    5. '(not' → logprob: -10.750758171081543
    6. '((' → logprob: -11.000758171081543
    7. '(color' → logprob: -12.375758171081543
    8. ' (' → logprob: -13.250758171081543
    9. '(c' → logprob: -13.500758171081543
    10. '_colors' → logprob: -13.875758171081543

Token 111: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006305934861302376
    2. '[node' → logprob: -5.256306171417236
    3. '[n' → logprob: -7.131306171417236
    4. '[v' → logprob: -9.756305694580078
    5. '[w' → logprob: -10.006305694580078
    6. ')' → logprob: -10.256305694580078
    7. '[x' → logprob: -10.631305694580078
    8. '[color' → logprob: -11.131305694580078
    9. '[next' → logprob: -11.631305694580078
    10. ' ==' → logprob: -11.756305694580078

Token 112: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.017559530213475227
    2. '[' → logprob: -4.64255952835083
    3. 'node' → logprob: -5.51755952835083
    4. '[node' → logprob: -6.89255952835083
    5. ']' → logprob: -7.14255952835083
    6. 'n' → logprob: -7.26755952835083
    7. 'x' → logprob: -8.017560005187988
    8. 'neighbor' → logprob: -8.142560005187988
    9. 'nei' → logprob: -8.267560005187988
    10. '(ne' → logprob: -9.767560005187988

Token 113: 'igh' (ID: 1251)
  Prédit: 'igh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.07410217821598053
    2. '[' → logprob: -2.6991021633148193
    3. 'gh' → logprob: -5.574102401733398
    4. 'ighbor' → logprob: -9.199102401733398
    5. '[node' → logprob: -9.824102401733398
    6. 'ighbors' → logprob: -10.199102401733398
    7. 'ig' → logprob: -10.824102401733398
    8. 'ph' → logprob: -11.074102401733398
    9. '[i' → logprob: -11.574102401733398
    10. 'i' → logprob: -11.824102401733398

Token 114: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5330255031585693
    2. ' and' → logprob: -1.5330255031585693
    3. '[' → logprob: -2.9080255031585693
    4. ']==' → logprob: -3.0330255031585693
    5. ']' → logprob: -3.1580255031585693
    6. '!=' → logprob: -4.158025741577148
    7. ' ==' → logprob: -4.283025741577148
    8. '==-' → logprob: -4.908025741577148
    9. 'and' → logprob: -5.283025741577148
    10. '[node' → logprob: -5.783025741577148

Token 115: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31502440571784973
    2. ' and' → logprob: -1.4400243759155273
    3. ' ==' → logprob: -3.5650243759155273
    4. 'and' → logprob: -6.690024375915527
    5. ']==' → logprob: -6.690024375915527
    6. ' not' → logprob: -7.190024375915527
    7. '==-' → logprob: -7.815024375915527
    8. '!=' → logprob: -7.815024375915527
    9. ' is' → logprob: -8.065024375915527
    10. ' for' → logprob: -8.315024375915527

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03549228236079216
    2. ' c' → logprob: -3.535492181777954
    3. 'colors' → logprob: -5.410492420196533
    4. ' colors' → logprob: -6.910492420196533
    5. 'color' → logprob: -9.410491943359375
    6. '-' → logprob: -9.910491943359375
    7. ' ' → logprob: -10.410491943359375
    8. '   ' → logprob: -10.785491943359375
    9. '0' → logprob: -10.910491943359375
    10. ' -' → logprob: -11.160491943359375

Token 117: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00967876985669136
    2. 'for' → logprob: -4.884678840637207
    3. '):' → logprob: -6.509678840637207
    4. ':' → logprob: -8.509678840637207
    5. ')' → logprob: -8.634678840637207
    6. '):
' → logprob: -9.509678840637207
    7. ' ' → logprob: -9.759678840637207
    8. ' and' → logprob: -11.009678840637207
    9. ':return' → logprob: -11.134678840637207
    10. '	for' → logprob: -11.759678840637207

Token 118: ' neigh' (ID: 9109)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.11307647079229355
    2. 'g' → logprob: -2.2380764484405518
    3. ' neigh' → logprob: -9.363076210021973
    4. 'ne' → logprob: -9.988076210021973
    5. ' ' → logprob: -10.113076210021973
    6. 'neighbors' → logprob: -10.488076210021973
    7. '	g' → logprob: -11.488076210021973
    8. ' neighbors' → logprob: -11.738076210021973
    9. ' ' → logprob: -11.800576210021973
    10. 'gne' → logprob: -12.425576210021973

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009820077568292618
    2. 'in' → logprob: -4.634819984436035
    3. 'ne' → logprob: -10.634819984436035
    4. '[' → logprob: -11.509819984436035
    5. 'e' → logprob: -12.509819984436035
    6. ')' → logprob: -12.509819984436035
    7. ' ' → logprob: -12.509819984436035
    8. '[node' → logprob: -12.759819984436035
    9. 'n' → logprob: -13.259819984436035
    10. 'nei' → logprob: -13.509819984436035

Token 120: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.005244191270321608
    2. ' g' → logprob: -5.255244255065918
    3. '	g' → logprob: -12.880244255065918
    4. ')' → logprob: -13.130244255065918
    5. ' ' → logprob: -13.255244255065918
    6. '   ' → logprob: -14.130244255065918
    7. '[g' → logprob: -14.255244255065918
    8. 'stack' → logprob: -14.505244255065918
    9. 'neighbors' → logprob: -14.630244255065918
    10. '  ' → logprob: -14.630244255065918

Token 121: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.0802738870552275e-05
    2. 'node' → logprob: -12.62501049041748
    3. '[v' → logprob: -12.75001049041748
    4. ')' → logprob: -13.37501049041748
    5. 'v' → logprob: -13.87501049041748
    6. '(node' → logprob: -14.50001049041748
    7. '```' → logprob: -15.50001049041748
    8. ' [' → logprob: -15.87501049041748
    9. '   ' → logprob: -15.87501049041748
    10. '=node' → logprob: -16.250011444091797

Token 122: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5305107831954956
    2. '):
' → logprob: -0.9055107831954956
    3. '       ' → logprob: -5.405510902404785
    4. ')' → logprob: -6.280510902404785
    5. '           ' → logprob: -7.530510902404785
    6. '   ' → logprob: -8.530510902404785
    7. '):
' → logprob: -9.030510902404785
    8. ' ):
' → logprob: -10.155510902404785
    9. ' ):' → logprob: -10.280510902404785
    10. ':' → logprob: -10.780510902404785

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011487908195704222
    2. ':' → logprob: -7.126148700714111
    3. '               ' → logprob: -8.37614917755127
    4. ':return' → logprob: -9.87614917755127
    5. ' return' → logprob: -10.87614917755127
    6. ':
' → logprob: -10.87614917755127
    7. 'return' → logprob: -11.00114917755127
    8. '       ' → logprob: -13.12614917755127
    9. '		' → logprob: -14.00114917755127
    10. ',' → logprob: -14.12614917755127

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4336603879928589
    2. '               ' → logprob: -1.8086603879928589
    3. ' return' → logprob: -2.0586605072021484
    4. '           ' → logprob: -2.8086605072021484
    5. '	return' → logprob: -10.308660507202148
    6. ':return' → logprob: -11.558660507202148
    7. '   ' → logprob: -11.808660507202148
    8. '
' → logprob: -12.058660507202148
    9. '                   ' → logprob: -12.308660507202148
    10. '```' → logprob: -12.433660507202148

Token 125: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004436587623786181
    2. ' False' → logprob: -7.750443458557129
    3. 'True' → logprob: -11.250443458557129
    4. '(False' → logprob: -17.500444412231445
    5. ' True' → logprob: -18.125444412231445
    6. 'None' → logprob: -19.000444412231445
    7. '=False' → logprob: -20.625444412231445
    8. 'false' → logprob: -21.375444412231445
    9. '   ' → logprob: -21.875444412231445
    10. 'F' → logprob: -21.875444412231445

Token 126: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12978868186473846
    2. '       ' → logprob: -3.004788637161255
    3. ')' → logprob: -3.129788637161255
    4. '<|end|>' → logprob: -3.879788637161255
    5. '    ' → logprob: -6.379788875579834
    6. '
' → logprob: -6.754788875579834
    7. '    
' → logprob: -7.004788875579834
    8. ' return' → logprob: -7.129788875579834
    9. 'return' → logprob: -7.754788875579834
    10. '	return' → logprob: -7.879788875579834

Token 128: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9873493909835815
    2. '<|end|>' → logprob: -1.1123493909835815
    3. ')' → logprob: -1.3623493909835815
    4. '
' → logprob: -3.987349510192871
    5. '\n' → logprob: -5.612349510192871
    6. '\' → logprob: -5.612349510192871
    7. ':return' → logprob: -5.862349510192871
    8. 'return' (adapté à ' return') → logprob: -5.987349510192871
    9. ' ' → logprob: -6.237349510192871
    10. ' return' → logprob: -6.362349510192871

Token 129: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006715370807796717
    2. ' True' → logprob: -5.006715297698975
    3. 'False' → logprob: -16.756715774536133
    4. '(True' → logprob: -19.131715774536133
    5. 'Tr' → logprob: -19.506715774536133
    6. ' ' → logprob: -20.506715774536133
    7. ' ' → logprob: -20.506715774536133
    8. 'None' → logprob: -20.881715774536133
    9. 'true' → logprob: -21.256715774536133
    10. '=True' → logprob: -21.381715774536133

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038845404982566833
    2. 'N' → logprob: -3.6638453006744385
    3. '#' → logprob: -4.913845539093018
    4. 'colors' → logprob: -5.538845539093018
    5. 'for' → logprob: -7.913845539093018
    6. 'def' → logprob: -8.16384506225586
    7. 'g' → logprob: -8.41384506225586
    8. 'if' → logprob: -9.66384506225586
    9. 'V' → logprob: -9.91384506225586
    10. 'from' → logprob: -10.03884506225586

Token 132: ' flo' (ID: 15037)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.751043975353241
    2. 'b' → logprob: -1.3760440349578857
    3. 'main' → logprob: -1.3760440349578857
    4. ' bfs' → logprob: -4.626043796539307
    5. 'solve' → logprob: -5.376043796539307
    6. ' bip' → logprob: -5.501043796539307
    7. ' solve' → logprob: -5.751043796539307
    8. ' is' → logprob: -7.626043796539307
    9. ' b' → logprob: -8.251044273376465
    10. 'is' → logprob: -8.501044273376465

Token 133: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.017021749168634415
    2. 'od' → logprob: -4.267021656036377
    3. 'w' → logprob: -6.017021656036377
    4. 'y' → logprob: -8.267022132873535
    5. 'p' → logprob: -10.767022132873535
    6. 'id' → logprob: -11.267022132873535
    7. 'yp' → logprob: -11.392022132873535
    8. 'yed' → logprob: -11.392022132873535
    9. 'op' → logprob: -11.517022132873535
    10. 'o' → logprob: -11.892022132873535

Token 134: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00010580805974313989
    2. '():' → logprob: -10.250105857849121
    3. '()' → logprob: -10.625105857849121
    4. 'War' → logprob: -11.500105857849121
    5. 'war' → logprob: -12.000105857849121
    6. '-war' → logprob: -12.250105857849121
    7. '```' → logprob: -12.625105857849121
    8. '_cycle' → logprob: -12.750105857849121
    9. '(' → logprob: -13.000105857849121
    10. '_W' → logprob: -13.000105857849121

Token 135: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.07020217925310135
    2. 'arshal' → logprob: -2.695202112197876
    3. '```' → logprob: -8.445201873779297
    4. 'a' → logprob: -10.945201873779297
    5. '``' → logprob: -11.195201873779297
    6. 'arst' → logprob: -12.820201873779297
    7. 'ars' → logprob: -13.070201873779297
    8. '
' → logprob: -13.195201873779297
    9. 'r' → logprob: -13.445201873779297
    10. 'ash' → logprob: -13.695201873779297

Token 136: 'shall' (ID: 30275)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.22874289751052856
    2. 'shall' → logprob: -2.103742837905884
    3. 'arshal' → logprob: -2.728742837905884
    4. 'all' → logprob: -4.853743076324463
    5. '```' → logprob: -5.353743076324463
    6. 'r' → logprob: -6.103743076324463
    7. 'll' → logprob: -6.728743076324463
    8. 'sh' → logprob: -7.478743076324463
    9. 'shell' → logprob: -9.353742599487305
    10. 's' → logprob: -9.603742599487305

Token 137: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0656617879867554
    2. '(g' → logprob: -1.0656617879867554
    3. '():' → logprob: -2.065661907196045
    4. '(graph' → logprob: -2.315661907196045
    5. '(n' → logprob: -3.065661907196045
    6. '(matrix' → logprob: -4.315661907196045
    7. '(a' → logprob: -4.440661907196045
    8. '(G' → logprob: -5.940661907196045
    9. '(dist' → logprob: -6.565661907196045
    10. '(distance' → logprob: -6.565661907196045

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1592542827129364
    2. 'ist' → logprob: -2.034254312515259
    3. ')' → logprob: -4.40925407409668
    4. 'istance' → logprob: -5.90925407409668
    5. '):
' → logprob: -7.03425407409668
    6. 'ists' → logprob: -9.15925407409668
    7. '_matrix' → logprob: -9.78425407409668
    8. '_' → logprob: -10.03425407409668
    9. '(' → logprob: -10.28425407409668
    10. 'ef' → logprob: -10.40925407409668

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03431494161486626
    2. 'n' → logprob: -3.6593148708343506
    3. ':' → logprob: -5.40931510925293
    4. ' n' → logprob: -6.03431510925293
    5. '(n' → logprob: -7.78431510925293
    6. ':
' → logprob: -8.03431510925293
    7. '	n' → logprob: -8.90931510925293
    8. ' for' → logprob: -9.40931510925293
    9. 'for' → logprob: -10.15931510925293
    10. ',n' → logprob: -10.15931510925293

Token 140: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2856164574623108
    2. '   ' → logprob: -1.535616397857666
    3. ' n' → logprob: -3.535616397857666
    4. 'for' (adapté à ' for') → logprob: -5.785616397857666
    5. ' for' → logprob: -7.160616397857666
    6. ' ' → logprob: -10.160616874694824
    7. 'N' → logprob: -10.160616874694824
    8. '	n' → logprob: -10.535616874694824
    9. '  ' → logprob: -11.410616874694824
    10. '```' → logprob: -11.910616874694824

Token 141: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020389800192788243
    2. ' k' → logprob: -8.500204086303711
    3. 'i' → logprob: -16.37520408630371
    4. '	k' → logprob: -16.75020408630371
    5. '(k' → logprob: -17.25020408630371
    6. '_k' → logprob: -17.37520408630371
    7. '   ' → logprob: -17.50020408630371
    8. 'via' → logprob: -17.75020408630371
    9. ' ' → logprob: -18.12520408630371
    10. '```' → logprob: -18.37520408630371

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22542327642440796
    2. 'in' → logprob: -1.6004233360290527
    3. ',' → logprob: -12.475422859191895
    4. ' ' → logprob: -12.975422859191895
    5. '	in' → logprob: -13.850422859191895
    6. ' ,' → logprob: -14.475422859191895
    7. 'range' → logprob: -14.475422859191895
    8. 'import' → logprob: -14.600422859191895
    9. 'In' → logprob: -14.725422859191895
    10. ',in' → logprob: -15.600422859191895

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7848862373502925e-05
    2. ' range' → logprob: -10.500027656555176
    3. 'd' → logprob: -15.500027656555176
    4. 'r' → logprob: -19.375028610229492
    5. '(range' → logprob: -21.125028610229492
    6. '	range' → logprob: -21.250028610229492
    7. 'len' → logprob: -22.375028610229492
    8. '   ' → logprob: -22.375028610229492
    9. 'n' → logprob: -22.500028610229492
    10. '```' → logprob: -22.625028610229492

Token 144: '(n' (ID: 2406)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.04895045608282089
    2. '(n' → logprob: -3.048950433731079
    3. '(N' → logprob: -8.6739501953125
    4. 'len' → logprob: -8.6739501953125
    5. '(' → logprob: -11.2989501953125
    6. 'n' → logprob: -12.4239501953125
    7. '(V' → logprob: -12.4239501953125
    8. '(num' → logprob: -15.1739501953125
    9. '(v' → logprob: -16.5489501953125
    10. '(m' → logprob: -17.0489501953125

Token 145: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.061982475221157074
    2. '):' → logprob: -2.8119823932647705
    3. '):
' → logprob: -11.686982154846191
    4. ':
' → logprob: -13.811982154846191
    5. ')' → logprob: -13.936982154846191
    6. 'for' → logprob: -13.936982154846191
    7. '   ' → logprob: -13.936982154846191
    8. ':' → logprob: -14.061982154846191
    9. ' ):
' → logprob: -14.561982154846191
    10. '+' → logprob: -15.061982154846191

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0316275954246521
    2. ' for' → logprob: -3.531627655029297
    3. 'for' → logprob: -6.781627655029297
    4. '   ' → logprob: -7.781627655029297
    5. '	for' → logprob: -8.531627655029297
    6. '	' → logprob: -10.156627655029297
    7. '	   ' → logprob: -10.156627655029297
    8. ',' → logprob: -11.531627655029297
    9. '<|end|>' → logprob: -11.531627655029297
    10. '
' → logprob: -12.031627655029297

Token 147: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11445198953151703
    2. ' for' → logprob: -2.6144518852233887
    3. '   ' → logprob: -3.3644518852233887
    4. '       ' → logprob: -8.114452362060547
    5. '	for' → logprob: -9.989452362060547
    6. ' ' → logprob: -11.989452362060547
    7. '	   ' → logprob: -12.739452362060547
    8. '           ' → logprob: -13.489452362060547
    9. '  ' → logprob: -15.239452362060547
    10. '   ' → logprob: -16.114452362060547

Token 148: '_k' (ID: 11637)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.12349345535039902
    2. '[i' → logprob: -2.6234934329986572
    3. '[n' → logprob: -3.8734934329986572
    4. '[d' → logprob: -4.873493671417236
    5. '[' → logprob: -5.373493671417236
    6. '[:,' → logprob: -5.998493671417236
    7. '=[' → logprob: -6.248493671417236
    8. '[j' → logprob: -6.873493671417236
    9. ' =' → logprob: -7.248493671417236
    10. '[v' → logprob: -7.373493671417236

Token 149: ' =' (ID: 314)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2549390196800232
    2. '[k' → logprob: -2.129939079284668
    3. '[' → logprob: -2.879939079284668
    4. '=' → logprob: -4.254939079284668
    5. '[:,' → logprob: -5.129939079284668
    6. ' =' → logprob: -5.254939079284668
    7. ']' → logprob: -5.379939079284668
    8. '[j' → logprob: -5.379939079284668
    9. '[n' → logprob: -5.754939079284668
    10. '[i' → logprob: -5.879939079284668

Token 150: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020354038861114532
    2. ' d' → logprob: -8.500203132629395
    3. '	d' → logprob: -17.62520408630371
    4. '[d' → logprob: -17.75020408630371
    5. '$d' → logprob: -18.50020408630371
    6. '0' → logprob: -18.62520408630371
    7. '[' → logprob: -18.75020408630371
    8. '>d' → logprob: -18.87520408630371
    9. ')d' → logprob: -19.12520408630371
    10. '(d' → logprob: -19.12520408630371

Token 151: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.006508486345410347
    2. '[:,' → logprob: -5.1315083503723145
    3. '[:,:,' → logprob: -8.256508827209473
    4. '[:]' → logprob: -8.756508827209473
    5. '[[' → logprob: -10.631508827209473
    6. 'k' → logprob: -10.631508827209473
    7. '[:' → logprob: -10.631508827209473
    8. '[...,' → logprob: -10.756508827209473
    9. '[' → logprob: -10.756508827209473
    10. '[i' → logprob: -11.506508827209473

Token 152: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011239396408200264
    2. ']
' → logprob: -4.511239528656006
    3. '][' → logprob: -8.886239051818848
    4. ']

' → logprob: -10.636239051818848
    5. 'k' → logprob: -10.886239051818848
    6. ',' → logprob: -12.886239051818848
    7. ',k' → logprob: -13.386239051818848
    8. '][:' → logprob: -13.386239051818848
    9. '])' → logprob: -13.511239051818848
    10. ' ]' → logprob: -13.761239051818848

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19464214146137238
    2. ' for' → logprob: -1.819642186164856
    3. 'for' → logprob: -4.444642066955566
    4. '   ' → logprob: -6.069642066955566
    5. '<|end|>' → logprob: -7.569642066955566
    6. '	for' → logprob: -9.694642066955566
    7. ' ' → logprob: -10.444642066955566
    8. '        
' → logprob: -10.819642066955566
    9. '           ' → logprob: -10.944642066955566
    10. ',' → logprob: -11.069642066955566

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18345089256763458
    2. 'd' → logprob: -2.308450937271118
    3. 'dk' → logprob: -3.433450937271118
    4. ' for' → logprob: -3.683450937271118
    5. '       ' → logprob: -4.683450698852539
    6. 'dik' → logprob: -7.683450698852539
    7. 'dist' → logprob: -8.183450698852539
    8. ' d' → logprob: -8.308450698852539
    9. ' dk' → logprob: -8.308450698852539
    10. 'di' → logprob: -9.183450698852539

Token 155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019307781476527452
    2. ' i' → logprob: -6.2519307136535645
    3. 'j' → logprob: -13.876931190490723
    4. '   ' → logprob: -14.626931190490723
    5. '```' → logprob: -15.126931190490723
    6. 'v' → logprob: -15.876931190490723
    7. 'u' → logprob: -16.376930236816406
    8. '_i' → logprob: -16.626930236816406
    9. ' ' → logprob: -16.751930236816406
    10. '	i' → logprob: -16.751930236816406

Token 156: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12702250480651855
    2. 'in' → logprob: -2.1270225048065186
    3. 'range' → logprob: -10.377022743225098
    4. 'n' → logprob: -11.252022743225098
    5. ' ' → logprob: -11.252022743225098
    6. '   ' → logprob: -11.252022743225098
    7. ' range' → logprob: -12.377022743225098
    8. '[' → logprob: -12.627022743225098
    9. 'd' → logprob: -13.002022743225098
    10. ',' → logprob: -13.377022743225098

Token 157: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07190274447202682
    2. 'row' → logprob: -2.8219027519226074
    3. ' d' → logprob: -5.571902751922607
    4. ' row' → logprob: -6.071902751922607
    5. 'di' → logprob: -6.821902751922607
    6. 'i' → logprob: -7.071902751922607
    7. 'dist' → logprob: -7.071902751922607
    8. 'range' → logprob: -8.44690227508545
    9. '_d' → logprob: -8.57190227508545
    10. 'dk' → logprob: -9.44690227508545

Token 158: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.016397498548030853
    2. 'i' → logprob: -4.141397476196289
    3. '_' → logprob: -8.641397476196289
    4. '[i' → logprob: -9.516397476196289
    5. '_k' → logprob: -10.141397476196289
    6. '_j' → logprob: -10.391397476196289
    7. ' i' → logprob: -11.891397476196289
    8. ' in' → logprob: -12.141397476196289
    9. 'ij' → logprob: -13.016397476196289
    10. '__' → logprob: -13.016397476196289

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5113545656204224
    2. 'i' → logprob: -1.5113545656204224
    3. 'in' → logprob: -1.7613545656204224
    4. '=' → logprob: -5.886354446411133
    5. 'k' → logprob: -6.386354446411133
    6. '_i' → logprob: -7.011354446411133
    7. '[i' → logprob: -7.136354446411133
    8. ' ' → logprob: -7.761354446411133
    9. 'j' → logprob: -7.886354446411133
    10. '```' → logprob: -8.136354446411133

Token 160: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0011711753904819489
    2. ' enumerate' → logprob: -6.751171112060547
    3. 'd' → logprob: -14.626171112060547
    4. '(en' → logprob: -15.376171112060547
    5. 'range' → logprob: -16.376171112060547
    6. '```' → logprob: -16.751171112060547
    7. ' ' → logprob: -16.876171112060547
    8. 'en' → logprob: -17.001171112060547
    9. '   ' → logprob: -17.626171112060547
    10. '
' → logprob: -17.876171112060547

Token 161: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2521485686302185
    2. '(d' → logprob: -1.5021486282348633
    3. ' d' → logprob: -8.502148628234863
    4. '[d' → logprob: -11.627148628234863
    5. 'range' → logprob: -13.127148628234863
    6. '	d' → logprob: -13.877148628234863
    7. ')' → logprob: -13.877148628234863
    8. ')d' → logprob: -14.002148628234863
    9. '(' → logprob: -14.502148628234863
    10. ',d' → logprob: -14.627148628234863

Token 162: '):
' (ID: 1883)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01514368411153555
    2. '):' → logprob: -4.765143871307373
    3. '):
' → logprob: -5.140143871307373
    4. 'k' → logprob: -8.140143394470215
    5. '[i' → logprob: -8.265143394470215
    6. ':' → logprob: -10.015143394470215
    7. '_k' → logprob: -11.140143394470215
    8. '[' → logprob: -11.515143394470215
    9. '(k' → logprob: -11.515143394470215
    10. ' k' → logprob: -12.265143394470215

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028328632935881615
    2. 'for' → logprob: -4.5283284187316895
    3. ':' → logprob: -5.1533284187316895
    4. ' for' → logprob: -5.4033284187316895
    5. ':
' → logprob: -5.6533284187316895
    6. '               ' → logprob: -7.2783284187316895
    7. 'd' → logprob: -7.4033284187316895
    8. '       ' → logprob: -7.4033284187316895
    9. ' if' → logprob: -8.028328895568848
    10. '[' → logprob: -8.528328895568848

Token 164: ' aik' (ID: 42423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45257917046546936
    2. '               ' → logprob: -1.452579140663147
    3. ' for' → logprob: -2.2025792598724365
    4. '           ' → logprob: -4.327579021453857
    5. 'd' → logprob: -5.702579021453857
    6. ' d' → logprob: -6.952579021453857
    7. '   ' → logprob: -7.827579021453857
    8. 'm' → logprob: -7.952579021453857
    9. 'j' → logprob: -8.577579498291016
    10. 'if' → logprob: -8.702579498291016

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7977282404899597
    2. ' =' → logprob: -1.2977283000946045
    3. 'k' → logprob: -1.5477283000946045
    4. '[k' → logprob: -3.2977283000946045
    5. '[i' → logprob: -4.922728061676025
    6. '_k' → logprob: -5.172728061676025
    7. '[' → logprob: -5.547728061676025
    8. '_i' → logprob: -5.797728061676025
    9. 'i' → logprob: -5.922728061676025
    10. '=k' → logprob: -7.422728061676025

Token 166: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00011105302110081539
    2. ' d' → logprob: -9.125110626220703
    3. 'a' → logprob: -14.375110626220703
    4. '   ' → logprob: -14.625110626220703
    5. '	d' → logprob: -14.750110626220703
    6. '
' → logprob: -15.750110626220703
    7. '  ' → logprob: -16.500110626220703
    8. '    ' → logprob: -17.000110626220703
    9. '(d' → logprob: -17.000110626220703
    10. ' ' → logprob: -17.000110626220703

Token 167: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0013584480620920658
    2. '[i' → logprob: -6.626358509063721
    3. 'i' → logprob: -10.376358032226562
    4. '_k' → logprob: -14.126358032226562
    5. '[' → logprob: -15.126358032226562
    6. '[k' → logprob: -16.001358032226562
    7. 'k' → logprob: -16.501358032226562
    8. '```' → logprob: -17.126358032226562
    9. '_j' → logprob: -17.501358032226562
    10. 's' → logprob: -17.501358032226562

Token 168: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.5213274309644476e-05
    2. 'k' → logprob: -11.125015258789062
    3. '[' → logprob: -15.125015258789062
    4. ' [' → logprob: -15.750015258789062
    5. '[i' → logprob: -17.625015258789062
    6. '(k' → logprob: -18.125015258789062
    7. ' k' → logprob: -18.250015258789062
    8. '_k' → logprob: -18.875015258789062
    9. '][' → logprob: -19.125015258789062
    10. '[a' → logprob: -19.375015258789062

Token 169: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2920428514480591
    2. '+' → logprob: -2.4170427322387695
    3. ' +' → logprob: -2.4170427322387695
    4. ']
' → logprob: -2.6670427322387695
    5. ']+' → logprob: -6.5420427322387695
    6. '+k' → logprob: -6.9170427322387695
    7. '+
' → logprob: -7.2920427322387695
    8. ' ]' → logprob: -7.9170427322387695
    9. 'if' → logprob: -8.04204273223877
    10. '           ' → logprob: -8.04204273223877

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.233804303221405e-05
    2. ' if' → logprob: -10.250092506408691
    3. ' for' → logprob: -11.125092506408691
    4. 'for' → logprob: -11.500092506408691
    5. 'if' → logprob: -11.750092506408691
    6. 'd' → logprob: -11.875092506408691
    7. '               ' → logprob: -12.500092506408691
    8. ',' → logprob: -13.000092506408691
    9. ' =' → logprob: -13.125092506408691
    10. 'a' → logprob: -13.750092506408691

Token 171: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20320330560207367
    2. 'for' (adapté à ' for') → logprob: -1.8282033205032349
    3. ' for' → logprob: -4.453203201293945
    4. 'if' → logprob: -4.578203201293945
    5. ' if' → logprob: -7.203203201293945
    6. 'j' → logprob: -8.453203201293945
    7. 'm' → logprob: -9.453203201293945
    8. '   ' → logprob: -9.953203201293945
    9. 'd' → logprob: -10.328203201293945
    10. '#' → logprob: -10.953203201293945

Token 172: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006718809716403484
    2. ' j' → logprob: -5.006718635559082
    3. '	j' → logprob: -14.131718635559082
    4. ' ' → logprob: -14.131718635559082
    5. '```' → logprob: -14.256718635559082
    6. '_j' → logprob: -14.756718635559082
    7. '   ' → logprob: -14.881718635559082
    8. '  ' → logprob: -15.881718635559082
    9. ' ' → logprob: -15.881718635559082
    10. ',j' → logprob: -16.1317195892334

Token 173: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7445262670516968
    2. ' in' → logprob: -0.7445262670516968
    3. ',' → logprob: -2.9945263862609863
    4. 'range' → logprob: -11.869525909423828
    5. ' ,' → logprob: -12.619525909423828
    6. '```' → logprob: -12.744525909423828
    7. ' ' → logprob: -12.994525909423828
    8. 'import' → logprob: -13.619525909423828
    9. ',d' → logprob: -13.994525909423828
    10. '   ' → logprob: -14.119525909423828

Token 174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.505233764648438
    4. ' ' → logprob: -16.630233764648438
    5. '	range' → logprob: -16.630233764648438
    6. '   ' → logprob: -18.005233764648438
    7. '
' → logprob: -18.005233764648438
    8. '  ' → logprob: -18.505233764648438
    9. 'r' → logprob: -19.130233764648438
    10. ',' → logprob: -19.380233764648438

Token 175: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0036125436890870333
    2. '(n' → logprob: -5.628612518310547
    3. ' n' → logprob: -12.128612518310547
    4. 'len' → logprob: -12.253612518310547
    5. '	n' → logprob: -13.753612518310547
    6. 'k' → logprob: -15.378612518310547
    7. '
' → logprob: -15.628612518310547
    8. '   ' → logprob: -16.003612518310547
    9. '(len' → logprob: -16.128612518310547
    10. '(' → logprob: -16.253612518310547

Token 176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038741860538721085
    2. '):' → logprob: -3.2887418270111084
    3. '):
' → logprob: -8.413742065429688
    4. ':' → logprob: -8.663742065429688
    5. ':
' → logprob: -9.038742065429688
    6. '               ' → logprob: -10.163742065429688
    7. '```' → logprob: -10.413742065429688
    8. '           ' → logprob: -10.663742065429688
    9. ',' → logprob: -10.913742065429688
    10. '():
' → logprob: -11.038742065429688

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006284964270889759
    2. 'd' → logprob: -6.131285190582275
    3. 'a' → logprob: -6.631285190582275
    4. ' if' → logprob: -6.756285190582275
    5. ' d' → logprob: -7.131285190582275
    6. 'if' → logprob: -8.006284713745117
    7. ' a' → logprob: -8.631284713745117
    8. '                
' → logprob: -9.881284713745117
    9. ' new' → logprob: -10.506284713745117
    10. '```' → logprob: -10.881284713745117

Token 178: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2058950662612915
    2. ' d' → logprob: -1.3308950662612915
    3. ' if' → logprob: -1.7058950662612915
    4. '               ' → logprob: -1.9558950662612915
    5. '                   ' → logprob: -2.830894947052002
    6. 'if' (adapté à ' if') → logprob: -2.955894947052002
    7. 'a' → logprob: -7.205894947052002
    8. '                       ' → logprob: -7.455894947052002
    9. ' a' → logprob: -7.830894947052002
    10. '           ' → logprob: -8.83089542388916

Token 179: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07935215532779694
    2. 'd' → logprob: -2.5793521404266357
    3. 'ai' → logprob: -8.454352378845215
    4. ' aik' → logprob: -9.204352378845215
    5. ' a' → logprob: -9.329352378845215
    6. '   ' → logprob: -10.454352378845215
    7. ' d' → logprob: -10.954352378845215
    8. '	a' → logprob: -12.579352378845215
    9. 'dik' → logprob: -12.829352378845215
    10. 'ais' → logprob: -13.579352378845215

Token 180: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0011728443205356598
    2. '[i' → logprob: -6.75117301940918
    3. '_j' → logprob: -13.75117301940918
    4. '_k' → logprob: -14.25117301940918
    5. 'i' → logprob: -14.50117301940918
    6. '```' → logprob: -16.62617301940918
    7. '[k' → logprob: -16.62617301940918
    8. 's' → logprob: -16.75117301940918
    9. '[j' → logprob: -16.87617301940918
    10. '[' → logprob: -17.12617301940918

Token 181: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.01419064961373806
    2. '[k' → logprob: -4.264190673828125
    3. 'j' → logprob: -11.264190673828125
    4. '[' → logprob: -12.639190673828125
    5. 'k' → logprob: -12.639190673828125
    6. '[i' → logprob: -12.639190673828125
    7. '_j' → logprob: -13.014190673828125
    8. '][' → logprob: -14.014190673828125
    9. '[a' → logprob: -15.014190673828125
    10. '```' → logprob: -15.389190673828125

Token 182: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007696656510233879
    2. '>a' → logprob: -5.007696628570557
    3. ' >' → logprob: -7.132696628570557
    4. '>d' → logprob: -9.007697105407715
    5. 'a' → logprob: -9.882697105407715
    6. '>A' → logprob: -12.632697105407715
    7. '>[' → logprob: -13.882697105407715
    8. '[' → logprob: -14.507697105407715
    9. '```' → logprob: -14.507697105407715
    10. '>x' → logprob: -14.757697105407715

Token 183: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.002540228422731161
    2. ' >' → logprob: -6.252540111541748
    3. '>a' → logprob: -7.627540111541748
    4. '>d' → logprob: -9.127540588378906
    5. 'a' → logprob: -11.252540588378906
    6. '>A' → logprob: -14.377540588378906
    7. '>[' → logprob: -15.127540588378906
    8. '```' → logprob: -15.252540588378906
    9. '<' → logprob: -15.377540588378906
    10. '">' → logprob: -15.752540588378906

Token 184: ' aik' (ID: 42423)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5778272151947021
    2. 'a' → logprob: -0.8278272151947021
    3. ' d' → logprob: -6.827827453613281
    4. ' aik' → logprob: -7.827827453613281
    5. ' a' → logprob: -7.952827453613281
    6. 'ai' → logprob: -10.827827453613281
    7. '   ' → logprob: -11.077827453613281
    8. '	a' → logprob: -12.202827453613281
    9. '  ' → logprob: -12.577827453613281
    10. ' ' → logprob: -12.702827453613281

Token 185: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31625688076019287
    2. '+' → logprob: -1.3162568807601929
    3. '+a' → logprob: -6.191256999969482
    4. '+d' → logprob: -7.066256999969482
    5. '+k' → logprob: -9.566256523132324
    6. '+
' → logprob: -12.066256523132324
    7. ' ' → logprob: -12.941256523132324
    8. ' +
' → logprob: -12.941256523132324
    9. ' plus' → logprob: -13.316256523132324
    10. '＋' → logprob: -13.566256523132324

Token 186: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01251271367073059
    2. ' d' → logprob: -4.387512683868408
    3. '   ' → logprob: -13.262513160705566
    4. ' ' → logprob: -14.637513160705566
    5. '	d' → logprob: -14.887513160705566
    6. '
' → logprob: -15.762513160705566
    7. '           ' → logprob: -15.762513160705566
    8. '  ' → logprob: -16.63751220703125
    9. '       ' → logprob: -16.63751220703125
    10. '               ' → logprob: -17.13751220703125

Token 187: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -7.386147626675665e-05
    2. 'k' → logprob: -10.000073432922363
    3. '[k' → logprob: -10.625073432922363
    4. '_j' → logprob: -12.750073432922363
    5. '_' → logprob: -15.000073432922363
    6. '```' → logprob: -15.375073432922363
    7. 'd' → logprob: -15.750073432922363
    8. '
' → logprob: -16.00007438659668
    9. ',k' → logprob: -16.62507438659668
    10. ' k' → logprob: -16.87507438659668

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004914337769150734
    2. 'j' → logprob: -7.750491619110107
    3. '[k' → logprob: -10.12549114227295
    4. '[' → logprob: -11.25049114227295
    5. '[
' → logprob: -13.00049114227295
    6. ' [' → logprob: -13.00049114227295
    7. '
' → logprob: -14.00049114227295
    8. '[i' → logprob: -14.25049114227295
    9. '```' → logprob: -14.25049114227295
    10. '][' → logprob: -15.37549114227295

Token 189: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010916240513324738
    2. ':
' → logprob: -4.635916233062744
    3. '):' → logprob: -7.385916233062744
    4. ']:' → logprob: -7.760916233062744
    5. ' :' → logprob: -10.010916709899902
    6. '):
' → logprob: -10.385916709899902
    7. ']:
' → logprob: -10.885916709899902
    8. ':return' → logprob: -12.135916709899902
    9. '}:' → logprob: -12.760916709899902
    10. ' :
' → logprob: -13.135916709899902

Token 190: '                   ' (ID: 699)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.852116584777832
    2. '                       ' → logprob: -1.352116584777832
    3. '                   ' → logprob: -1.727116584777832
    4. ':' → logprob: -2.227116584777832
    5. '               ' → logprob: -4.352116584777832
    6. ' :
' → logprob: -4.727116584777832
    7. '                           ' → logprob: -6.352116584777832
    8. '                               ' → logprob: -6.977116584777832
    9. '():
' → logprob: -6.977116584777832
    10. ' :' → logprob: -7.102116584777832

Token 191: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4749715030193329
    2. 'd' (adapté à ' d') → logprob: -0.9749715328216553
    3. '                       ' → logprob: -7.224971294403076
    4. '                   ' → logprob: -9.349971771240234
    5. '                               ' → logprob: -9.974971771240234
    6. '                           ' → logprob: -10.974971771240234
    7. '_d' → logprob: -11.849971771240234
    8. '	d' → logprob: -13.224971771240234
    9. '               ' → logprob: -13.724971771240234
    10. '                                   ' → logprob: -14.224971771240234

Token 192: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0009137284359894693
    2. '[i' → logprob: -7.000913619995117
    3. 'i' → logprob: -13.750913619995117
    4. '[' → logprob: -14.250913619995117
    5. '```' → logprob: -15.625913619995117
    6. 's' → logprob: -16.250913619995117
    7. '_' → logprob: -16.375913619995117
    8. '(i' → logprob: -17.500913619995117
    9. ',i' → logprob: -17.875913619995117
    10. '_j' → logprob: -18.250913619995117

Token 193: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6240566083070007e-06
    2. 'j' → logprob: -13.875001907348633
    3. '[' → logprob: -14.750001907348633
    4. '][' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '=j' → logprob: -17.125001907348633
    7. '_j' → logprob: -17.250001907348633
    8. '[i' → logprob: -17.875001907348633
    9. '=' → logprob: -18.750001907348633
    10. ' [' → logprob: -19.000001907348633

Token 194: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2620043456554413
    2. ' =' → logprob: -1.5120043754577637
    3. ']' → logprob: -4.637004375457764
    4. ']=' → logprob: -8.012003898620605
    5. ' ]' → logprob: -12.512003898620605
    6. ')' → logprob: -13.637003898620605
    7. ' ' → logprob: -14.762003898620605
    8. '>' → logprob: -14.887003898620605
    9. '.=' → logprob: -15.637003898620605
    10. '```' → logprob: -16.012004852294922

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '.=' → logprob: -17.126928329467773
    4. '＝' → logprob: -18.376928329467773
    5. ' ' → logprob: -18.501928329467773
    6. '=a' → logprob: -19.751928329467773
    7. '=d' → logprob: -19.876928329467773
    8. ')' → logprob: -20.001928329467773
    9. '=
' → logprob: -20.126928329467773
    10. ']' → logprob: -20.251928329467773

Token 196: ' aik' (ID: 42423)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014353657141327858
    2. ' aik' → logprob: -4.2643537521362305
    3. ' a' → logprob: -8.88935375213623
    4. 'ai' → logprob: -11.26435375213623
    5. 'ak' → logprob: -11.38935375213623
    6. ' ' → logprob: -11.76435375213623
    7. '   ' → logprob: -12.51435375213623
    8. ' ' → logprob: -12.63935375213623
    9. '
' → logprob: -12.76435375213623
    10. '	a' → logprob: -12.76435375213623

Token 197: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7370713949203491
    2. '+' → logprob: -1.1120713949203491
    3. '[j' → logprob: -2.4870715141296387
    4. '+k' → logprob: -2.6120715141296387
    5. '[k' → logprob: -3.6120715141296387
    6. '+j' → logprob: -4.737071514129639
    7. '[' → logprob: -8.48707103729248
    8. 'k' → logprob: -9.73707103729248
    9. '+[' → logprob: -11.11207103729248
    10. '```' → logprob: -11.73707103729248

Token 198: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00033558503491804004
    2. ' d' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. ' ' → logprob: -17.375335693359375
    5. '	d' → logprob: -18.500335693359375
    6. '  ' → logprob: -18.625335693359375
    7. '    ' → logprob: -19.875335693359375
    8. ' ' → logprob: -20.000335693359375
    9. '_d' → logprob: -20.375335693359375
    10. 'dj' → logprob: -20.625335693359375

Token 199: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0005082341376692057
    2. 'k' → logprob: -7.6255083084106445
    3. '[k' → logprob: -11.500508308410645
    4. '_j' → logprob: -11.750508308410645
    5. '[j' → logprob: -13.875508308410645
    6. 'kj' → logprob: -14.750508308410645
    7. '_i' → logprob: -15.750508308410645
    8. '[' → logprob: -15.750508308410645
    9. 'j' → logprob: -16.000507354736328
    10. '_w' → logprob: -16.625507354736328

Token 200: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.800739018013701e-05
    2. '[' → logprob: -9.8750581741333
    3. 'j' → logprob: -12.0000581741333
    4. '[js' → logprob: -15.3750581741333
    5. '[k' → logprob: -16.250057220458984
    6. '[q' → logprob: -17.625057220458984
    7. '[i' → logprob: -17.750057220458984
    8. '[s' → logprob: -18.000057220458984
    9. '[start' → logprob: -18.375057220458984
    10. '[t' → logprob: -18.625057220458984

Token 201: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0024758970830589533
    2. ' d' → logprob: -6.002475738525391
    3. 'None' → logprob: -15.25247573852539
    4. ' None' → logprob: -16.75247573852539
    5. ' ' → logprob: -17.25247573852539
    6. ' ' → logprob: -17.50247573852539
    7. '[d' → logprob: -18.50247573852539
    8. '[' → logprob: -18.62747573852539
    9. '	d' → logprob: -18.75247573852539
    10. '```' → logprob: -19.87747573852539

Token 205: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7271947860717773
    2. '<|end|>' → logprob: -0.8521947860717773
    3. '
' → logprob: -2.4771947860717773
    4. '<|end|>' → logprob: -6.102194786071777
    5. 'n' → logprob: -6.977194786071777
    6. '```' → logprob: -7.102194786071777
    7. '

' → logprob: -7.102194786071777
    8. ')' → logprob: -8.102194786071777
    9. '#' → logprob: -8.477194786071777
    10. 'd' → logprob: -8.477194786071777

Token 206: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2859649956226349
    2. ' =' → logprob: -1.6609649658203125
    3. '=' → logprob: -2.9109649658203125
    4. ' ,' → logprob: -5.5359649658203125
    5. '<|end|>' → logprob: -8.660964965820312
    6. ',n' → logprob: -9.535964965820312
    7. ' ' → logprob: -9.910964965820312
    8. '=int' → logprob: -10.785964965820312
    9. ')' → logprob: -11.035964965820312
    10. '>' → logprob: -12.285964965820312

Token 208: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10027395188808441
    2. ' int' → logprob: -2.350273847579956
    3. '0' → logprob: -9.975274085998535
    4. ' ' → logprob: -11.225274085998535
    5. '10' → logprob: -12.975274085998535
    6. '5' → logprob: -13.600274085998535
    7. '	int' → logprob: -14.475274085998535
    8. '1' → logprob: -14.475274085998535
    9. 'len' → logprob: -14.600274085998535
    10. '(int' → logprob: -14.850274085998535

Token 209: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5947167277336121
    2. '(input' → logprob: -0.8447167277336121
    3. '()' → logprob: -4.094716548919678
    4. 'input' → logprob: -6.594716548919678
    5. '(sys' → logprob: -7.719716548919678
    6. '('' → logprob: -9.844717025756836
    7. ' (' → logprob: -10.344717025756836
    8. '(
' → logprob: -10.719717025756836
    9. ' ()' → logprob: -11.094717025756836
    10. ' input' → logprob: -13.219717025756836

Token 210: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01550410594791174
    2. '()' → logprob: -4.265503883361816
    3. ')' → logprob: -6.640503883361816
    4. '().' → logprob: -10.890503883361816
    5. '())
' → logprob: -12.015503883361816
    6. '(' → logprob: -12.390503883361816
    7. ' ())' → logprob: -12.765503883361816
    8. '()),' → logprob: -15.015503883361816
    9. '();)' → logprob: -15.015503883361816
    10. '());' → logprob: -15.390503883361816

Token 211: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.12681974470615387
    2. 'm' → logprob: -2.3768198490142822
    3. 'colors' → logprob: -4.251819610595703
    4. 'k' → logprob: -5.751819610595703
    5. 'a' → logprob: -5.876819610595703
    6. ' g' → logprob: -6.376819610595703
    7. 'edges' → logprob: -6.376819610595703
    8. 'd' → logprob: -8.001819610595703
    9. 's' → logprob: -8.001819610595703
    10. ' colors' → logprob: -8.126819610595703

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326404213905334
    2. '=' → logprob: -1.313264012336731
    3. '=[]' → logprob: -13.563263893127441
    4. ',' → logprob: -14.938263893127441
    5. '[' → logprob: -15.063263893127441
    6. ')' → logprob: -16.063264846801758
    7. ' ' → logprob: -16.688264846801758
    8. ']' → logprob: -17.063264846801758
    9. '[]' → logprob: -17.063264846801758
    10. '.' → logprob: -17.563264846801758

Token 213: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.482821431243792e-05
    2. ' [[]' → logprob: -9.50008487701416
    3. '[]' → logprob: -12.87508487701416
    4. '[int' → logprob: -13.37508487701416
    5. '[list' → logprob: -13.62508487701416
    6. '[n' → logprob: -13.75008487701416
    7. '[[' → logprob: -14.00008487701416
    8. '[List' → logprob: -14.37508487701416
    9. '[len' → logprob: -14.87508487701416
    10. '[new' → logprob: -15.37508487701416

Token 214: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04861824959516525
    2. ' for' → logprob: -3.0486183166503906
    3. ']' → logprob: -11.04861831665039
    4. ')' → logprob: -11.92361831665039
    5. '
' → logprob: -13.17361831665039
    6. '(n' → logprob: -13.29861831665039
    7. ',' → logprob: -13.54861831665039
    8. '()' → logprob: -13.79861831665039
    9. '	for' → logprob: -14.17361831665039
    10. '```' → logprob: -14.67361831665039

Token 215: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02729700319468975
    2. 'in' → logprob: -3.902297019958496
    3. ' in' → logprob: -5.152297019958496
    4. 'range' → logprob: -7.527297019958496
    5. ' range' → logprob: -8.027297019958496
    6. ' _' → logprob: -9.527297019958496
    7. 'i' → logprob: -12.027297019958496
    8. '_range' → logprob: -14.277297019958496
    9. '0' → logprob: -14.527297019958496
    10. '_in' → logprob: -14.902297019958496

Token 216: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11109723895788193
    2. ' in' → logprob: -2.6110973358154297
    3. 'range' → logprob: -3.4860973358154297
    4. '(n' → logprob: -7.86109733581543
    5. ' range' → logprob: -7.98609733581543
    6. 'n' → logprob: -8.23609733581543
    7. '_' → logprob: -9.61109733581543
    8. '(range' → logprob: -11.86109733581543
    9. '(' → logprob: -13.11109733581543
    10. ' ' → logprob: -13.11109733581543

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -17.625431060791016
    4. 'n' → logprob: -19.500431060791016
    5. '	range' → logprob: -21.250431060791016
    6. ' ' → logprob: -21.750431060791016
    7. '   ' → logprob: -22.375431060791016
    8. 'r' → logprob: -22.375431060791016
    9. '0' → logprob: -22.375431060791016
    10. 'rang' → logprob: -22.750431060791016

Token 218: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011743901995941997
    2. 'n' → logprob: -6.751174449920654
    3. '(' → logprob: -12.876173973083496
    4. ' (' → logprob: -14.126173973083496
    5. ')n' → logprob: -14.751173973083496
    6. ' n' → logprob: -15.126173973083496
    7. '	n' → logprob: -17.251174926757812
    8. '(
' → logprob: -17.376174926757812
    9. '<n' → logprob: -17.376174926757812
    10. ')' → logprob: -17.751174926757812

Token 219: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.6550729419104755e-05
    2. ')]
' → logprob: -10.250036239624023
    3. ')' → logprob: -14.375036239624023
    4. ')]

' → logprob: -15.250036239624023
    5. ')]
' → logprob: -15.875036239624023
    6. ']' → logprob: -16.375036239624023
    7. '])' → logprob: -17.500036239624023
    8. ')])' → logprob: -17.875036239624023
    9. '))' → logprob: -18.500036239624023
    10. ' )' → logprob: -18.625036239624023

Token 220: 'f' (ID: 69)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31567490100860596
    2. 'm' → logprob: -1.315674901008606
    3. ' for' → logprob: -6.690674781799316
    4. 'q' → logprob: -7.565674781799316
    5. 'edges' → logprob: -7.815674781799316
    6. 'k' → logprob: -10.065674781799316
    7. ' m' → logprob: -10.315674781799316
    8. 'g' → logprob: -10.565674781799316
    9. 'colors' → logprob: -10.940674781799316
    10. 'edge' → logprob: -11.065674781799316

Token 221: '_inf' (ID: 107309)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0006154587608762085
    2. 'for' → logprob: -8.000615119934082
    3. ' =' → logprob: -9.125615119934082
    4. 'r' → logprob: -9.250615119934082
    5. '=' → logprob: -10.625615119934082
    6. 'o' → logprob: -11.000615119934082
    7. 'rom' → logprob: -11.625615119934082
    8. '_edges' → logprob: -12.375615119934082
    9. ' or' → logprob: -13.250615119934082
    10. '_or' → logprob: -13.750615119934082

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06044318899512291
    2. '=float' → logprob: -3.685443162918091
    3. '=' → logprob: -4.31044340133667
    4. 'inity' → logprob: -4.56044340133667
    5. '=int' → logprob: -5.43544340133667
    6. 'o' → logprob: -6.56044340133667
    7. 'inty' → logprob: -6.93544340133667
    8. 'loat' → logprob: -7.31044340133667
    9. 'ty' → logprob: -7.43544340133667
    10. 'ity' → logprob: -7.93544340133667

Token 223: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1004418358206749
    2. '10' → logprob: -2.3504419326782227
    3. ' float' → logprob: -8.475441932678223
    4. 'int' → logprob: -11.725441932678223
    5. '1' → logprob: -11.850441932678223
    6. ' ' → logprob: -12.225441932678223
    7. '100' → logprob: -12.475441932678223
    8. '(float' → logprob: -13.975441932678223
    9. 'fl' → logprob: -14.475441932678223
    10. 'flo' → logprob: -15.600441932678223

Token 224: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2539280951023102
    2. ''in' → logprob: -1.5039280652999878
    3. ''' → logprob: -6.628928184509277
    4. '"' → logprob: -8.253928184509277
    5. '("' → logprob: -9.128928184509277
    6. ''inc' → logprob: -9.628928184509277
    7. ''information' → logprob: -10.628928184509277
    8. ''import' → logprob: -10.878928184509277
    9. ''int' → logprob: -11.128928184509277
    10. ''ex' → logprob: -11.253928184509277

Token 225: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.005255695432424545
    2. ''in' → logprob: -5.255255699157715
    3. ''' → logprob: -11.130255699157715
    4. 'in' → logprob: -12.630255699157715
    5. 'INF' → logprob: -14.130255699157715
    6. ' inf' → logprob: -14.255255699157715
    7. '_inf' → logprob: -14.380255699157715
    8. '.inf' → logprob: -14.880255699157715
    9. 'info' → logprob: -15.505255699157715
    10. '('' → logprob: -15.630255699157715

Token 226: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013183290138840675
    2. '')' → logprob: -4.638183116912842
    3. ')
' → logprob: -5.763183116912842
    4. '')
' → logprob: -8.26318359375
    5. ')
' → logprob: -11.38818359375
    6. ')')
' → logprob: -12.51318359375
    7. ' )' → logprob: -12.63818359375
    8. '')
' → logprob: -13.63818359375
    9. ')

' → logprob: -14.13818359375
    10. ')'' → logprob: -14.63818359375

Token 227: 'dist' (ID: 24126)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.3430750072002411
    2. 'for' → logprob: -1.4680750370025635
    3. 'dist' → logprob: -3.3430750370025635
    4. 'edges' → logprob: -4.343074798583984
    5. 'm' → logprob: -4.843074798583984
    6. 'd' → logprob: -6.593074798583984
    7. 'distance' → logprob: -6.718074798583984
    8. 'weights' → logprob: -8.093074798583984
    9. ' colors' → logprob: -8.968074798583984
    10. 'edge' → logprob: -8.968074798583984

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519392669200897
    2. '=' → logprob: -1.501939296722412
    3. '=[' → logprob: -13.126938819885254
    4. '=[]' → logprob: -13.251938819885254
    5. 's' → logprob: -13.376938819885254
    6. ' =[' → logprob: -13.501938819885254
    7. '=[[' → logprob: -13.876938819885254
    8. 'ances' → logprob: -14.501938819885254
    9. '```' → logprob: -14.751938819885254
    10. '＝' → logprob: -14.876938819885254

Token 229: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -5.073596548754722e-05
    2. '[f' → logprob: -10.25005054473877
    3. ' [[' → logprob: -11.25005054473877
    4. '[' → logprob: -13.12505054473877
    5. '([[' → logprob: -15.62505054473877
    6. '[n' → logprob: -16.500051498413086
    7. '[['' → logprob: -18.875051498413086
    8. '[list' → logprob: -19.000051498413086
    9. '[
' → logprob: -19.875051498413086
    10. '[i' → logprob: -19.875051498413086

Token 230: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0012895208783447742
    2. '0' → logprob: -6.751289367675781
    3. '(f' → logprob: -9.376289367675781
    4. '(' → logprob: -11.251289367675781
    5. ' f' → logprob: -11.501289367675781
    6. 'float' → logprob: -12.251289367675781
    7. '
' → logprob: -13.001289367675781
    8. '	f' → logprob: -13.751289367675781
    9. '   ' → logprob: -14.376289367675781
    10. ' ' → logprob: -14.501289367675781

Token 231: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3869355022907257
    2. ' if' → logprob: -1.1369354724884033
    3. ']' → logprob: -10.386935234069824
    4. ']*' → logprob: -10.511935234069824
    5. '	if' → logprob: -13.011935234069824
    6. ']+' → logprob: -13.261935234069824
    7. '   ' → logprob: -13.636935234069824
    8. 'for' → logprob: -15.011935234069824
    9. ' ' → logprob: -15.511935234069824
    10. ' for' → logprob: -15.636935234069824

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011740362970158458
    2. ' i' → logprob: -6.751173973083496
    3. '	i' → logprob: -12.501173973083496
    4. '   ' → logprob: -16.751174926757812
    5. '(i' → logprob: -16.876174926757812
    6. 'j' → logprob: -17.376174926757812
    7. ' ' → logprob: -18.501174926757812
    8. '           ' → logprob: -18.751174926757812
    9. ' ' → logprob: -19.376174926757812
    10. 'x' → logprob: -19.751174926757812

Token 233: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01251282636076212
    2. ' ==' → logprob: -4.387512683868408
    3. '=' → logprob: -13.387513160705566
    4. '==
' → logprob: -14.637513160705566
    5. ']==' → logprob: -15.012513160705566
    6. '=j' → logprob: -15.387513160705566
    7. '===' → logprob: -15.887513160705566
    8. ' ' → logprob: -16.01251220703125
    9. '[j' → logprob: -16.26251220703125
    10. 'j' → logprob: -16.26251220703125

Token 234: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015860427811276168
    2. ' j' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.375158309936523
    4. '	j' → logprob: -17.375158309936523
    5. ' ' → logprob: -19.125158309936523
    6. '    ' → logprob: -20.375158309936523
    7. '
' → logprob: -20.500158309936523
    8. '  ' → logprob: -20.750158309936523
    9. '$j' → logprob: -21.875158309936523
    10. '=j' → logprob: -22.125158309936523

Token 235: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759422183036804
    2. 'else' → logprob: -0.8259422183036804
    3. '	else' → logprob: -13.325942039489746
    4. ' for' → logprob: -15.200942039489746
    5. ' ' → logprob: -15.700942039489746
    6. '    ' → logprob: -15.700942039489746
    7. 'for' → logprob: -16.075942993164062
    8. '        ' → logprob: -16.200942993164062
    9. '```' → logprob: -16.200942993164062
    10. '   ' → logprob: -16.950942993164062

Token 236: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017095671501010656
    2. ' f' → logprob: -6.376709461212158
    3. ' ' → logprob: -13.251709938049316
    4. '1' → logprob: -13.251709938049316
    5. '   ' → logprob: -14.001709938049316
    6. 'int' → logprob: -14.126709938049316
    7. 'float' → logprob: -14.376709938049316
    8. '	f' → logprob: -14.751709938049316
    9. '  ' → logprob: -15.251709938049316
    10. '100' → logprob: -15.501709938049316

Token 237: '_inf' (ID: 107309)
  Prédit: '_inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inf' → logprob: -0.00119296764023602
    2. 'inf' → logprob: -6.751193046569824
    3. 'n' → logprob: -12.376193046569824
    4. '-inf' → logprob: -12.626193046569824
    5. '_INF' → logprob: -12.751193046569824
    6. '[' → logprob: -12.751193046569824
    7. '+' → logprob: -13.001193046569824
    8. '.inf' → logprob: -13.251193046569824
    9. 'f' → logprob: -14.251193046569824
    10. '∞' → logprob: -15.001193046569824

Token 238: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02638019248843193
    2. 'for' → logprob: -3.6513803005218506
    3. '	for' → logprob: -10.52638053894043
    4. ' ' → logprob: -10.77638053894043
    5. '   ' → logprob: -11.27638053894043
    6. '    ' → logprob: -12.02638053894043
    7. '        ' → logprob: -12.65138053894043
    8. '           ' → logprob: -13.15138053894043
    9. ')' → logprob: -13.52638053894043
    10. '       ' → logprob: -13.65138053894043

Token 239: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005234713666141033
    2. ' j' → logprob: -5.255234718322754
    3. 'i' → logprob: -14.380234718322754
    4. '	j' → logprob: -14.755234718322754
    5. '_j' → logprob: -17.005233764648438
    6. ' ' → logprob: -17.130233764648438
    7. ' ' → logprob: -19.005233764648438
    8. ' i' → logprob: -19.130233764648438
    9. '$j' → logprob: -19.380233764648438
    10. ',j' → logprob: -20.505233764648438

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00862119346857071
    2. 'in' → logprob: -4.7586212158203125
    3. 'range' → logprob: -12.258621215820312
    4. ',' → logprob: -14.633621215820312
    5. 'n' → logprob: -14.883621215820312
    6. ' ' → logprob: -15.133621215820312
    7. ' range' → logprob: -15.383621215820312
    8. '<|end|>' → logprob: -15.883621215820312
    9. 'In' → logprob: -16.508621215820312
    10. '```' → logprob: -16.633621215820312

Token 241: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '	range' → logprob: -20.633615493774414
    4. '(range' → logprob: -21.258615493774414
    5. '
' → logprob: -21.883615493774414
    6. ' ' → logprob: -22.133615493774414
    7. 'Range' → logprob: -22.383615493774414
    8. '   ' → logprob: -23.008615493774414
    9. '```' → logprob: -23.008615493774414
    10. '_range' → logprob: -23.133615493774414

Token 242: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13911251723766327
    2. 'n' → logprob: -2.1391124725341797
    3. ' range' → logprob: -4.88911247253418
    4. '(n' → logprob: -5.38911247253418
    5. ' n' → logprob: -11.38911247253418
    6. '(range' → logprob: -12.26411247253418
    7. ',n' → logprob: -16.63911247253418
    8. '<n' → logprob: -16.76411247253418
    9. '   ' → logprob: -17.13911247253418
    10. '
' → logprob: -17.13911247253418

Token 243: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16185638308525085
    2. ')]' → logprob: -1.9118564128875732
    3. ')' → logprob: -6.536856174468994
    4. ' ]' → logprob: -8.661856651306152
    5. ']
' → logprob: -12.661856651306152
    6. ' )' → logprob: -13.661856651306152
    7. '])' → logprob: -13.786856651306152
    8. '}]' → logprob: -13.786856651306152
    9. '   ' → logprob: -14.411856651306152
    10. ']]' → logprob: -15.036856651306152

Token 244: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12704654037952423
    2. 'for' → logprob: -2.127046585083008
    3. '   ' → logprob: -9.377046585083008
    4. '	for' → logprob: -11.377046585083008
    5. ' ' → logprob: -11.627046585083008
    6. ')' → logprob: -11.877046585083008
    7. '    ' → logprob: -12.752046585083008
    8. ']' → logprob: -13.252046585083008
    9. ' in' → logprob: -13.877046585083008
    10. '  ' → logprob: -14.877046585083008

Token 245: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5778151154518127
    2. ' range' → logprob: -0.8278151154518127
    3. 'i' → logprob: -6.702815055847168
    4. ' in' → logprob: -7.827815055847168
    5. 'in' → logprob: -8.327815055847168
    6. ' i' → logprob: -12.452815055847168
    7. 'n' → logprob: -13.327815055847168
    8. '_' → logprob: -14.827815055847168
    9. 'I' → logprob: -16.577816009521484
    10. '_range' → logprob: -16.577816009521484

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2028898000717163
    2. 'in' → logprob: -1.7028898000717163
    3. 'range' → logprob: -6.702889919281006
    4. ' range' → logprob: -8.327889442443848
    5. '(range' → logprob: -12.452889442443848
    6. 'n' → logprob: -13.327889442443848
    7. '(n' → logprob: -15.202889442443848
    8. ')' → logprob: -15.702889442443848
    9. ',' → logprob: -15.952889442443848
    10. '(' → logprob: -16.327890396118164

Token 247: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -19.750431060791016
    4. '
' → logprob: -22.125431060791016
    5. '	range' → logprob: -22.375431060791016
    6. '   ' → logprob: -22.625431060791016
    7. '```' → logprob: -22.750431060791016
    8. 'n' → logprob: -23.375431060791016
    9. ' ' → logprob: -23.375431060791016
    10. 'Range' → logprob: -23.875431060791016

Token 248: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8116456270217896
    2. '(n' → logprob: -1.0616456270217896
    3. 'n' → logprob: -1.5616456270217896
    4. ' range' → logprob: -8.6866455078125
    5. '(range' → logprob: -10.5616455078125
    6. ' n' → logprob: -14.1866455078125
    7. '
' → logprob: -15.0616455078125
    8. '```' → logprob: -15.4366455078125
    9. '(' → logprob: -15.5616455078125
    10. ' (' → logprob: -15.6866455078125

Token 249: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.630610641877865e-06
    2. ')' → logprob: -12.625006675720215
    3. ']' → logprob: -13.125006675720215
    4. ')]
' → logprob: -14.625006675720215
    5. '])]' → logprob: -15.000006675720215
    6. ')])' → logprob: -16.0000057220459
    7. '')]' → logprob: -16.1250057220459
    8. ')],' → logprob: -16.1250057220459
    9. '])' → logprob: -16.6250057220459
    10. ')]
' → logprob: -17.6250057220459

Token 250: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01858627051115036
    2. 'm' → logprob: -4.018586158752441
    3. 'q' → logprob: -8.393586158752441
    4. ' for' → logprob: -8.893586158752441
    5. 'Q' → logprob: -10.143586158752441
    6. 'u' → logprob: -11.518586158752441
    7. 'edges' → logprob: -12.143586158752441
    8. 'k' → logprob: -12.768586158752441
    9. 'M' → logprob: -13.018586158752441
    10. '```' → logprob: -13.143586158752441

Token 251: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018241839483380318
    2. ' _' → logprob: -4.018241882324219
    3. '_i' → logprob: -9.893241882324219
    4. 'i' → logprob: -10.768241882324219
    5. ' i' → logprob: -10.893241882324219
    6. ' ' → logprob: -14.393241882324219
    7. '_u' → logprob: -15.268241882324219
    8. '_a' → logprob: -15.893241882324219
    9. '_edges' → logprob: -16.01824188232422
    10. 'a' → logprob: -16.26824188232422

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07004602253437042
    2. 'in' → logprob: -2.6950459480285645
    3. ',' → logprob: -9.445046424865723
    4. '_' → logprob: -11.445046424865723
    5. ' ' → logprob: -11.695046424865723
    6. 'range' → logprob: -12.195046424865723
    7. 'import' → logprob: -13.445046424865723
    8. '_in' → logprob: -13.945046424865723
    9. 'n' → logprob: -14.070046424865723
    10. ',_' → logprob: -14.695046424865723

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. 'r' → logprob: -17.375158309936523
    4. '(range' → logprob: -18.000158309936523
    5. 'in' → logprob: -18.250158309936523
    6. '	range' → logprob: -18.625158309936523
    7. 'rang' → logprob: -19.000158309936523
    8. ' ' → logprob: -19.000158309936523
    9. '  ' → logprob: -19.250158309936523
    10. '```' → logprob: -19.875158309936523

Token 254: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013373857364058495
    2. '(' → logprob: -6.62633752822876
    3. 'n' → logprob: -11.501337051391602
    4. ' (' → logprob: -14.751337051391602
    5. '(m' → logprob: -15.126337051391602
    6. '1' → logprob: -15.501337051391602
    7. ' n' → logprob: -15.876337051391602
    8. '(
' → logprob: -16.6263370513916
    9. '((' → logprob: -17.3763370513916
    10. '(len' → logprob: -17.5013370513916

Token 255: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014209816232323647
    2. '):' → logprob: -4.264209747314453
    3. '):
' → logprob: -11.639209747314453
    4. '():
' → logprob: -11.764209747314453
    5. '   ' → logprob: -11.889209747314453
    6. '()):
' → logprob: -11.889209747314453
    7. ')' → logprob: -12.014209747314453
    8. '-' → logprob: -12.764209747314453
    9. ' ):
' → logprob: -12.889209747314453
    10. 'n' → logprob: -14.264209747314453

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0866330936551094
    2. 'a' → logprob: -3.0866332054138184
    3. 'line' → logprob: -4.836633205413818
    4. 'l' → logprob: -5.211633205413818
    5. 'arr' → logprob: -5.461633205413818
    6. 'edges' → logprob: -5.961633205413818
    7. 'lst' → logprob: -6.086633205413818
    8. 'm' → logprob: -6.336633205413818
    9. 'd' → logprob: -6.461633205413818
    10. 'data' → logprob: -6.711633205413818

Token 257: ' S' (ID: 336)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.3901613652706146
    2. 'line' → logprob: -1.765161395072937
    3. 'for' → logprob: -3.0151612758636475
    4. 'a' → logprob: -3.2651612758636475
    5. ' row' → logprob: -3.7651612758636475
    6. 'arr' → logprob: -4.015161514282227
    7. 'lst' → logprob: -4.765161514282227
    8. '   ' → logprob: -5.140161514282227
    9. 's' → logprob: -6.265161514282227
    10. ' line' → logprob: -6.515161514282227

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3901999592781067
    2. '=' → logprob: -1.140199899673462
    3. '=input' → logprob: -6.140200138092041
    4. '=line' → logprob: -7.515200138092041
    5. '=sys' → logprob: -9.140199661254883
    6. '=list' → logprob: -9.140199661254883
    7. '   ' → logprob: -9.265199661254883
    8. 'line' → logprob: -9.640199661254883
    9. '_line' → logprob: -10.015199661254883
    10. ',' → logprob: -10.515199661254883

Token 259: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07036107033491135
    2. ' input' → logprob: -2.6953611373901367
    3. 'list' → logprob: -7.820361137390137
    4. ' list' → logprob: -11.195361137390137
    5. 'str' → logprob: -12.570361137390137
    6. '(input' → logprob: -13.695361137390137
    7. '=input' → logprob: -13.945361137390137
    8. 'int' → logprob: -14.195361137390137
    9. '<input' → logprob: -14.445361137390137
    10. ' ' → logprob: -14.445361137390137

Token 260: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031784253660589457
    2. '()' → logprob: -5.753178596496582
    3. '()
' → logprob: -14.628178596496582
    4. '())' → logprob: -16.378177642822266
    5. '(' → logprob: -16.753177642822266
    6. ' ().' → logprob: -17.378177642822266
    7. '()[' → logprob: -17.378177642822266
    8. '(i' → logprob: -17.628177642822266
    9. '()\' → logprob: -18.003177642822266
    10. '=' → logprob: -18.378177642822266

Token 261: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006716079078614712
    2. 'rstrip' → logprob: -5.006716251373291
    3. 'split' → logprob: -14.381715774536133
    4. ' strip' → logprob: -16.006715774536133
    5. '.strip' → logprob: -17.006715774536133
    6. '.rstrip' → logprob: -18.381715774536133
    7. 'str' → logprob: -18.506715774536133
    8. '(strip' → logprob: -18.631715774536133
    9. '```' → logprob: -19.381715774536133
    10. '_strip' → logprob: -19.756715774536133

Token 262: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008506783284246922
    2. '()
' → logprob: -5.133506774902344
    3. '<|end|>' → logprob: -6.758506774902344
    4. 'for' → logprob: -7.633506774902344
    5. ')' → logprob: -8.508506774902344
    6. '())' → logprob: -9.133506774902344
    7. '<|end|>' → logprob: -9.133506774902344
    8. ' for' → logprob: -9.508506774902344
    9. '
' → logprob: -9.633506774902344
    10. 's' → logprob: -10.383506774902344

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7512660026550293
    2. ' for' → logprob: -0.7512660026550293
    3. 'for' → logprob: -2.8762660026550293
    4. '	for' → logprob: -9.876266479492188
    5. '<|end|>' → logprob: -10.001266479492188
    6. ' ' → logprob: -11.376266479492188
    7. ',' → logprob: -12.501266479492188
    8. '       ' → logprob: -12.751266479492188
    9. '  ' → logprob: -13.626266479492188
    10. '
' → logprob: -15.251266479492188

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002500271424651146
    2. ' for' → logprob: -6.002500057220459
    3. '   ' → logprob: -10.627500534057617
    4. '	for' → logprob: -14.752500534057617
    5. ' ' → logprob: -18.877500534057617
    6. '       ' → logprob: -19.002500534057617
    7. '
' → logprob: -19.877500534057617
    8. '```' → logprob: -20.002500534057617
    9. '    
' → logprob: -20.377500534057617
    10. '  ' → logprob: -21.377500534057617

Token 265: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07888989895582199
    2. ' j' → logprob: -2.578889846801758
    3. ',j' → logprob: -16.953889846801758
    4. '   ' → logprob: -17.203889846801758
    5. '	j' → logprob: -17.328889846801758
    6. ' ' → logprob: -18.203889846801758
    7. ',' → logprob: -18.328889846801758
    8. '(j' → logprob: -19.578889846801758
    9. '```' → logprob: -19.703889846801758
    10. '_j' → logprob: -19.828889846801758

Token 266: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06367681920528412
    2. 'in' → logprob: -2.8136768341064453
    3. '   ' → logprob: -7.188676834106445
    4. ' ' → logprob: -7.938676834106445
    5. '	in' → logprob: -8.438676834106445
    6. '    ' → logprob: -8.938676834106445
    7. ',' → logprob: -9.063676834106445
    8. '<|end|>' → logprob: -9.938676834106445
    9. '  ' → logprob: -11.188676834106445
    10. 'import' → logprob: -11.688676834106445

Token 267: ' val' (ID: 1459)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.43779999017715454
    2. ' ch' → logprob: -1.3127999305725098
    3. 'c' → logprob: -2.5627999305725098
    4. ' c' → logprob: -4.81279993057251
    5. 'char' → logprob: -8.687800407409668
    6. 'x' → logprob: -10.187800407409668
    7. ' char' → logprob: -10.812800407409668
    8. 'v' → logprob: -11.187800407409668
    9. 'b' → logprob: -12.187800407409668
    10. 's' → logprob: -12.437800407409668

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07931912690401077
    2. 'in' → logprob: -2.5793192386627197
    3. ' ' → logprob: -7.954319000244141
    4. ',' → logprob: -9.95431900024414
    5. '	in' → logprob: -11.70431900024414
    6. '  ' → logprob: -11.95431900024414
    7. ')' → logprob: -12.20431900024414
    8. 'import' → logprob: -13.20431900024414
    9. '   ' → logprob: -13.45431900024414
    10. ' ,' → logprob: -13.45431900024414

Token 269: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.029750484973192215
    2. 'enumer' → logprob: -3.5297505855560303
    3. ' enumer' → logprob: -18.52975082397461
    4. ' en' → logprob: -18.90475082397461
    5. ' ' → logprob: -19.02975082397461
    6. 'enum' → logprob: -19.40475082397461
    7. '(en' → logprob: -19.52975082397461
    8. '.enumer' → logprob: -19.65475082397461
    9. ' enumeration' → logprob: -19.77975082397461
    10. '(' → logprob: -19.77975082397461

Token 270: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10573214292526245
    2. 'enumer' → logprob: -2.6057322025299072
    3. ' enumerate' → logprob: -4.355731964111328
    4. ' S' → logprob: -4.480731964111328
    5. '(S' → logprob: -6.480731964111328
    6. '('' → logprob: -8.105731964111328
    7. '(' → logprob: -8.980731964111328
    8. '(('' → logprob: -9.230731964111328
    9. '((' → logprob: -9.605731964111328
    10. ' (' → logprob: -9.855731964111328

Token 271: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2761426866054535
    2. '):' → logprob: -1.5261427164077759
    3. ':' → logprob: -4.026142597198486
    4. '():
' → logprob: -6.526142597198486
    5. '   ' → logprob: -6.651142597198486
    6. ':
' → logprob: -7.276142597198486
    7. '       ' → logprob: -7.901142597198486
    8. '<|end|>' → logprob: -7.901142597198486
    9. '==' → logprob: -8.401143074035645
    10. ' in' → logprob: -8.401143074035645

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006809157319366932
    2. '<|end|>' → logprob: -6.256809234619141
    3. ' if' → logprob: -6.381809234619141
    4. ',' → logprob: -6.381809234619141
    5. '	' → logprob: -7.506809234619141
    6. ':' → logprob: -7.881809234619141
    7. ' ' → logprob: -9.13180923461914
    8. '   ' → logprob: -9.63180923461914
    9. '        
' → logprob: -9.88180923461914
    10. '	   ' → logprob: -10.00680923461914

Token 273: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11638456583023071
    2. 'if' (adapté à ' if') → logprob: -2.616384506225586
    3. '           ' → logprob: -3.741384506225586
    4. '       ' → logprob: -4.366384506225586
    5. '	if' → logprob: -9.116384506225586
    6. '   ' → logprob: -9.491384506225586
    7. '        ' → logprob: -9.866384506225586
    8. '```' → logprob: -10.741384506225586
    9. '    ' → logprob: -11.366384506225586
    10. '
' → logprob: -11.491384506225586

Token 274: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10025811195373535
    2. 'val' → logprob: -2.3502581119537354
    3. '	val' → logprob: -10.225257873535156
    4. '(val' → logprob: -12.475257873535156
    5. '   ' → logprob: -12.600257873535156
    6. '[val' → logprob: -13.100257873535156
    7. ' ' → logprob: -13.600257873535156
    8. '           ' → logprob: -13.850257873535156
    9. ' ' → logprob: -14.537757873535156
    10. '  ' → logprob: -14.662757873535156

Token 275: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2824805974960327
    2. '==' → logprob: -1.4074805974960327
    3. '=='' → logprob: -6.782480716705322
    4. ' =='' → logprob: -9.032480239868164
    5. '=' → logprob: -10.532480239868164
    6. '==
' → logprob: -11.157480239868164
    7. ' =' → logprob: -11.532480239868164
    8. '=="' → logprob: -11.782480239868164
    9. '{' → logprob: -12.907480239868164
    10. ']==' → logprob: -13.032480239868164

Token 276: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006951338145881891
    2. ''A' → logprob: -5.756951332092285
    3. '"' → logprob: -6.381951332092285
    4. ''L' → logprob: -7.256951332092285
    5. ''O' → logprob: -8.506951332092285
    6. ''C' → logprob: -8.631951332092285
    7. ''I' → logprob: -8.881951332092285
    8. ''#' → logprob: -9.131951332092285
    9. '1' → logprob: -9.131951332092285
    10. ''o' → logprob: -9.381951332092285

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013602840714156628
    2. 'Y' → logprob: -5.2636027336120605
    3. ''' → logprob: -5.3886027336120605
    4. '#' → logprob: -5.8886027336120605
    5. '0' → logprob: -7.8886027336120605
    6. 'N' → logprob: -9.013603210449219
    7. 'G' → logprob: -9.638603210449219
    8. 'B' → logprob: -9.888603210449219
    9. 'o' → logprob: -10.013603210449219
    10. '('' → logprob: -10.013603210449219

Token 278: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.04996328428387642
    2. '':' → logprob: -3.0499632358551025
    3. ':
' → logprob: -7.799963474273682
    4. '):
' → logprob: -7.799963474273682
    5. ''):
' → logprob: -8.549962997436523
    6. ':' → logprob: -8.549962997436523
    7. '':
' → logprob: -9.174962997436523
    8. ''' → logprob: -10.174962997436523
    9. '):' → logprob: -11.424962997436523
    10. ')' → logprob: -11.799962997436523

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0902513638138771
    2. ':' → logprob: -3.3402514457702637
    3. ':
' → logprob: -3.3402514457702637
    4. '       ' → logprob: -4.715251445770264
    5. ',' → logprob: -5.715251445770264
    6. '):
' → logprob: -7.215251445770264
    7. ' g' → logprob: -7.465251445770264
    8. ' and' → logprob: -7.715251445770264
    9. 'g' → logprob: -8.090250968933105
    10. ',g' → logprob: -8.590250968933105

Token 280: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.31358602643013
    2. 'g' (adapté à ' g') → logprob: -1.3135859966278076
    3. 'dist' → logprob: -8.688586235046387
    4. ' dist' → logprob: -9.188586235046387
    5. '           ' → logprob: -10.063586235046387
    6. '               ' → logprob: -12.938586235046387
    7. '#g' → logprob: -13.188586235046387
    8. '	g' → logprob: -13.438586235046387
    9. '
' → logprob: -13.563586235046387
    10. '   ' → logprob: -13.938586235046387

Token 281: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. ' [' → logprob: -17.625
    3. 'i' → logprob: -18.5
    4. '[g' → logprob: -18.75
    5. '[' → logprob: -18.875
    6. '[u' → logprob: -19.0
    7. '[I' → logprob: -19.125
    8. '[j' → logprob: -19.125
    9. '```' → logprob: -19.75
    10. '   ' → logprob: -20.0

Token 282: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014345075003802776
    2. '[i' → logprob: -4.264345169067383
    3. '[j' → logprob: -8.889345169067383
    4. '][' → logprob: -10.389345169067383
    5. ']' → logprob: -11.514345169067383
    6. '.append' → logprob: -13.389345169067383
    7. ' ].' → logprob: -13.764345169067383
    8. '[' → logprob: -15.389345169067383
    9. '   ' → logprob: -16.264345169067383
    10. 'i' → logprob: -17.514345169067383

Token 283: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -14.750000953674316
    4. 'appen' → logprob: -19.250001907348633
    5. '_append' → logprob: -19.250001907348633
    6. '	append' → logprob: -19.750001907348633
    7. 'app' → logprob: -20.625001907348633
    8. 'Append' → logprob: -21.000001907348633
    9. 'add' → logprob: -22.000001907348633
    10. '```' → logprob: -22.875001907348633

Token 284: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.003180921310558915
    2. 'j' → logprob: -5.753180980682373
    3. '(' → logprob: -13.628180503845215
    4. ' j' → logprob: -13.753180503845215
    5. '	j' → logprob: -14.753180503845215
    6. '(
' → logprob: -15.003180503845215
    7. ' (' → logprob: -15.753180503845215
    8. ',j' → logprob: -16.75318145751953
    9. '[j' → logprob: -17.12818145751953
    10. '(i' → logprob: -17.87818145751953

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023723484948277473
    2. ')
' → logprob: -3.773723602294922
    3. '           ' → logprob: -7.898723602294922
    4. ' )' → logprob: -9.648723602294922
    5. '       ' → logprob: -11.398723602294922
    6. '               ' → logprob: -11.648723602294922
    7. ')
' → logprob: -12.398723602294922
    8. ' )
' → logprob: -12.523723602294922
    9. '<|end|>' → logprob: -12.648723602294922
    10. ')

' → logprob: -13.398723602294922

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001612267515156418
    2. 'dist' → logprob: -9.250161170959473
    3. '       ' → logprob: -10.875161170959473
    4. '               ' → logprob: -11.750161170959473
    5. ' for' → logprob: -11.875161170959473
    6. '<|end|>' → logprob: -12.000161170959473
    7. 'for' → logprob: -12.250161170959473
    8. '   ' → logprob: -12.500161170959473
    9. '```' → logprob: -12.500161170959473
    10. ' dist' → logprob: -12.875161170959473

Token 287: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00017541198758408427
    2. ' dist' → logprob: -8.750175476074219
    3. '           ' → logprob: -11.000175476074219
    4. '	dist' → logprob: -15.375175476074219
    5. '
' → logprob: -17.25017547607422
    6. '```' → logprob: -17.62517547607422
    7. '               ' → logprob: -18.50017547607422
    8. '            
' → logprob: -18.62517547607422
    9. '   ' → logprob: -18.62517547607422
    10. '1' → logprob: -18.75017547607422

Token 288: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[j' → logprob: -13.50000286102295
    3. '[' → logprob: -14.37500286102295
    4. '[I' → logprob: -14.37500286102295
    5. 'i' → logprob: -16.125003814697266
    6. '```' → logprob: -16.375003814697266
    7. ' [' → logprob: -16.750003814697266
    8. '][' → logprob: -16.750003814697266
    9. '[u' → logprob: -17.500003814697266
    10. '\[' → logprob: -17.625003814697266

Token 289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.043121255934238434
    2. '[j' → logprob: -3.168121337890625
    3. '[' → logprob: -9.918121337890625
    4. '[i' → logprob: -10.418121337890625
    5. ']' → logprob: -10.668121337890625
    6. ' ][' → logprob: -11.543121337890625
    7. '```' → logprob: -13.043121337890625
    8. ')[' → logprob: -14.043121337890625
    9. '>[' → logprob: -14.168121337890625
    10. 'j' → logprob: -14.168121337890625

Token 290: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. ' j' → logprob: -14.125000953674316
    3. '	j' → logprob: -18.375
    4. '   ' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '[j' → logprob: -19.25
    7. ' ' → logprob: -19.625
    8. '<|end|>' → logprob: -19.75
    9. ']' → logprob: -20.25
    10. ')' → logprob: -21.125

Token 291: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10038156807422638
    2. ' =' → logprob: -2.35038161277771
    3. ']' → logprob: -8.975381851196289
    4. ']=' → logprob: -9.975381851196289
    5. ')' → logprob: -13.850381851196289
    6. ')=' → logprob: -14.600381851196289
    7. '1' → logprob: -14.850381851196289
    8. '']=' → logprob: -17.22538185119629
    9. '=
' → logprob: -17.35038185119629
    10. '<|end|>' → logprob: -17.35038185119629

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '=
' → logprob: -17.380233764648438
    4. '1' → logprob: -19.255233764648438
    5. '＝' → logprob: -19.255233764648438
    6. '=

' → logprob: -19.255233764648438
    7. '.=' → logprob: -20.130233764648438
    8. ',' → logprob: -20.630233764648438
    9. '```' → logprob: -20.755233764648438
    10. ')=' → logprob: -20.755233764648438

Token 293: ' dist' (ID: 3601)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '0' → logprob: -18.125003814697266
    4. '   ' → logprob: -19.875003814697266
    5. '01' → logprob: -20.875003814697266
    6. '```' → logprob: -20.875003814697266
    7. '' → logprob: -21.250003814697266
    8. '
' → logprob: -21.250003814697266
    9. ' ' → logprob: -21.500003814697266
    10. '100' → logprob: -21.500003814697266

Token 294: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06261330097913742
    2. 'i' → logprob: -2.8126132488250732
    3. '[' → logprob: -8.187613487243652
    4. '```' → logprob: -9.312613487243652
    5. '][' → logprob: -9.937613487243652
    6. ' i' → logprob: -10.437613487243652
    7. '<|end|>' → logprob: -10.437613487243652
    8. '[j' → logprob: -10.687613487243652
    9. '[
' → logprob: -10.687613487243652
    10. 's' → logprob: -11.062613487243652

Token 295: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3163115382194519
    2. '[i' → logprob: -1.3163115978240967
    3. 'i' → logprob: -5.941311359405518
    4. ']' → logprob: -8.316311836242676
    5. '[' → logprob: -10.691311836242676
    6. '=' → logprob: -10.941311836242676
    7. '```' → logprob: -11.066311836242676
    8. '=i' → logprob: -11.191311836242676
    9. '[j' → logprob: -11.441311836242676
    10. '1' → logprob: -11.441311836242676

Token 296: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2664456789934775e-06
    2. ' i' → logprob: -14.250000953674316
    3. '0' → logprob: -14.750000953674316
    4. 'j' → logprob: -16.500001907348633
    5. '[i' → logprob: -16.500001907348633
    6. '1' → logprob: -16.750001907348633
    7. ' ' → logprob: -17.250001907348633
    8. ']' → logprob: -18.250001907348633
    9. '[' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008202602155506611
    2. ']=' → logprob: -5.00820255279541
    3. '=' → logprob: -6.63320255279541
    4. ' =' → logprob: -9.75820255279541
    5. ']+' → logprob: -9.75820255279541
    6. '+' → logprob: -10.75820255279541
    7. '[' → logprob: -11.63320255279541
    8. '1' → logprob: -12.13320255279541
    9. ' ]' → logprob: -12.13320255279541
    10. 'if' → logprob: -12.75820255279541

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005283799953758717
    2. ' =' → logprob: -5.630283832550049
    3. '1' → logprob: -6.505283832550049
    4. '+' → logprob: -8.75528335571289
    5. '0' → logprob: -11.25528335571289
    6. ' ' → logprob: -12.13028335571289
    7. '<|end|>' → logprob: -12.88028335571289
    8. '[' → logprob: -13.00528335571289
    9. 'if' → logprob: -13.50528335571289
    10. '+=' → logprob: -13.88028335571289

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '0' → logprob: -16.500009536743164
    4. '-' → logprob: -17.812509536743164
    5. '2' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.125009536743164
    7. 'f' → logprob: -18.187509536743164
    8. '```' → logprob: -18.812509536743164
    9. '!' → logprob: -18.937509536743164
    10. '１' → logprob: -19.000009536743164

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -16.5
    4. '-' → logprob: -18.375
    5. '   ' → logprob: -19.25
    6. 'f' → logprob: -19.5
    7. '!' → logprob: -19.625
    8. '2' → logprob: -19.75
    9. '```' → logprob: -19.8125
    10. '１' → logprob: -20.0

Token 301: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: 'colors' (ID: 31731)
  Prédit: 'colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.00032640635618008673
    2. ' colors' → logprob: -8.125326156616211
    3. '```' → logprob: -11.000326156616211
    4. '_colors' → logprob: -12.500326156616211
    5. 'color' → logprob: -12.750326156616211
    6. '<|end|>' → logprob: -13.375326156616211
    7. '(colors' → logprob: -13.500326156616211
    8. 'f' → logprob: -13.625326156616211
    9. 'for' → logprob: -14.250326156616211
    10. '#' → logprob: -14.875326156616211

Token 303: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021453350782394
    2. '=' → logprob: -2.3502144813537598
    3. '=[' → logprob: -12.475214958190918
    4. ' =[' → logprob: -12.725214958190918
    5. '[' → logprob: -14.475214958190918
    6. '＝' → logprob: -14.975214958190918
    7. '=[]' → logprob: -15.600214958190918
    8. '<|end|>' → logprob: -17.2252140045166
    9. '=create' → logprob: -17.4752140045166
    10. '[:]' → logprob: -17.8502140045166

Token 304: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.872261317563243e-05
    2. ' [' → logprob: -9.750059127807617
    3. '[n' → logprob: -15.000059127807617
    4. '[node' → logprob: -17.875059127807617
    5. '   ' → logprob: -18.625059127807617
    6. '[color' → logprob: -18.625059127807617
    7. '[num' → logprob: -18.875059127807617
    8. '[-' → logprob: -19.000059127807617
    9. '[now' → logprob: -19.125059127807617
    10. '[int' → logprob: -19.250059127807617

Token 305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'False' → logprob: -16.250003814697266
    4. 'None' → logprob: -17.000003814697266
    5. '   ' → logprob: -21.250003814697266
    6. '00' → logprob: -21.625003814697266
    7. '000' → logprob: -21.750003814697266
    8. '۰' → logprob: -21.875003814697266
    9. 'false' → logprob: -23.250003814697266
    10. '```' → logprob: -23.375003814697266

Token 306: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043497391045093536
    2. ']' → logprob: -3.793497323989868
    3. 'for' → logprob: -3.918497323989868
    4. ']*' → logprob: -8.793497085571289
    5. ']*(' → logprob: -12.043497085571289
    6. ' ' → logprob: -12.043497085571289
    7. ' ]' → logprob: -12.543497085571289
    8. '   ' → logprob: -12.668497085571289
    9. ')' → logprob: -12.668497085571289
    10. '	for' → logprob: -13.543497085571289

Token 307: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8141006827354431
    2. '*' → logprob: -1.564100742340088
    3. '(n' → logprob: -1.814100742340088
    4. ' *' → logprob: -2.939100742340088
    5. '*(' → logprob: -2.939100742340088
    6. 'for' → logprob: -3.939100742340088
    7. '[n' → logprob: -4.189100742340088
    8. '(' → logprob: -4.439100742340088
    9. '[' → logprob: -4.689100742340088
    10. ' (' → logprob: -4.689100742340088

Token 308: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -12.75000286102295
    3. '(n' → logprob: -17.750003814697266
    4. '	n' → logprob: -20.750003814697266
    5. '_n' → logprob: -22.875003814697266
    6. ')n' → logprob: -22.875003814697266
    7. '```' → logprob: -23.000003814697266
    8. '[n' → logprob: -24.000003814697266
    9. '$n' → logprob: -24.125003814697266
    10. '
' → logprob: -24.625003814697266

Token 309: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021372836083173752
    2. 'ok' → logprob: -5.6463727951049805
    3. 'result' → logprob: -5.7713727951049805
    4. 'if' → logprob: -5.7713727951049805
    5. 'valid' → logprob: -5.8963727951049805
    6. 'ans' → logprob: -6.1463727951049805
    7. 'b' → logprob: -6.5213727951049805
    8. 'answer' → logprob: -6.5213727951049805
    9. 'res' → logprob: -6.7713727951049805
    10. 'is' → logprob: -7.0213727951049805

Token 310: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020788976922631264
    2. 'result' → logprob: -4.64578914642334
    3. 'res' → logprob: -5.89578914642334
    4. 'b' → logprob: -6.39578914642334
    5. 'ans' → logprob: -6.39578914642334
    6. 'ok' → logprob: -6.52078914642334
    7. 'answer' → logprob: -6.77078914642334
    8. 'valid' → logprob: -6.89578914642334
    9. 'is' → logprob: -7.64578914642334
    10. 'possible' → logprob: -7.89578914642334

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519470453262329
    2. '=' → logprob: -1.501947045326233
    3. ',' → logprob: -11.626947402954102
    4. '=[]' → logprob: -13.001947402954102
    5. ' ' → logprob: -14.126947402954102
    6. ':' → logprob: -14.126947402954102
    7. ' =
' → logprob: -14.626947402954102
    8. '=int' → logprob: -14.626947402954102
    9. '_' → logprob: -14.751947402954102
    10. ')' → logprob: -14.751947402954102

Token 312: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3267098069190979
    2. '[]' → logprob: -1.3267097473144531
    3. '[' → logprob: -5.701709747314453
    4. '1' → logprob: -6.326709747314453
    5. '-' → logprob: -6.326709747314453
    6. '[n' → logprob: -6.576709747314453
    7. 'n' → logprob: -6.826709747314453
    8. 'f' → logprob: -7.201709747314453
    9. ' []' → logprob: -7.451709747314453
    10. 'float' → logprob: -7.701709747314453

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. 'f' → logprob: -10.250048637390137
    3. '(' → logprob: -11.875048637390137
    4. '2' → logprob: -13.250048637390137
    5. '(-' → logprob: -13.500048637390137
    6. '-' → logprob: -14.500048637390137
    7. 'float' → logprob: -14.750048637390137
    8. '10' → logprob: -14.875048637390137
    9. 'sum' → logprob: -15.125048637390137
    10. 'inf' → logprob: -15.250048637390137

Token 314: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.392824874026701e-05
    2. 'from' → logprob: -11.25003433227539
    3. 'if' → logprob: -12.00003433227539
    4. 'def' → logprob: -12.25003433227539
    5. ' for' → logprob: -12.37503433227539
    6. 'colors' → logprob: -12.87503433227539
    7. 'stack' → logprob: -13.75003433227539
    8. 'queue' → logprob: -13.87503433227539
    9. 'visited' → logprob: -14.87503433227539
    10. 'color' → logprob: -15.12503433227539

Token 315: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2842308680992573e-05
    2. 'def' → logprob: -11.000022888183594
    3. 'from' → logprob: -12.250022888183594
    4. 'queue' → logprob: -14.875022888183594
    5. 'visited' → logprob: -14.875022888183594
    6. 'if' → logprob: -15.500022888183594
    7. ' for' → logprob: -16.000022888183594
    8. 'colors' → logprob: -16.125022888183594
    9. 'stack' → logprob: -16.375022888183594
    10. '```' → logprob: -16.375022888183594

Token 316: ' not' (ID: 625)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.1083003431558609
    2. ' not' → logprob: -3.2333004474639893
    3. 'dfs' → logprob: -3.4833004474639893
    4. ' all' → logprob: -3.4833004474639893
    5. 'all' → logprob: -6.85830020904541
    6. ' bfs' → logprob: -8.23330020904541
    7. 'not' → logprob: -8.35830020904541
    8. ' any' → logprob: -8.73330020904541
    9. ' ' → logprob: -11.10830020904541
    10. ' colors' → logprob: -11.35830020904541

Token 317: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4339195489883423
    2. 'dfs' → logprob: -1.0589195489883423
    3. ' all' → logprob: -5.683919429779053
    4. 'all' → logprob: -6.558919429779053
    5. ' bfs' → logprob: -8.433919906616211
    6. ' any' → logprob: -9.558919906616211
    7. 'any' → logprob: -10.183919906616211
    8. '(' → logprob: -11.433919906616211
    9. 'colors' → logprob: -11.433919906616211
    10. 'ans' → logprob: -11.933919906616211

Token 318: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004699954588431865
    2. ' (' → logprob: -7.750470161437988
    3. '(n' → logprob: -10.375470161437988
    4. '(i' → logprob: -12.000470161437988
    5. '0' → logprob: -14.500470161437988
    6. '(v' → logprob: -14.750470161437988
    7. '(
' → logprob: -14.875470161437988
    8. '((' → logprob: -15.125470161437988
    9. '(s' → logprob: -16.125469207763672
    10. '(range' → logprob: -16.875469207763672

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038407891406677663
    2. '(' → logprob: -7.8753838539123535
    3. ')' → logprob: -12.625384330749512
    4. '
' → logprob: -15.500384330749512
    5. ')(' → logprob: -15.875384330749512
    6. ' ' → logprob: -16.125383377075195
    7. '(
' → logprob: -16.375383377075195
    8. ',' → logprob: -17.750383377075195
    9. '```' → logprob: -18.125383377075195
    10. '(n' → logprob: -18.500383377075195

Token 320: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.125042915344238
    3. '1' → logprob: -13.625042915344238
    4. '0' → logprob: -15.000042915344238
    5. '   ' → logprob: -15.250042915344238
    6. ',
' → logprob: -15.375042915344238
    7. '2' → logprob: -15.375042915344238
    8. ',-' → logprob: -16.875041961669922
    9. '```' → logprob: -17.000041961669922
    10. ' ' → logprob: -18.000041961669922

Token 321: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.12502670288086
    4. '-' → logprob: -17.50002670288086
    5. '+' → logprob: -18.12502670288086
    6. ')' → logprob: -18.87502670288086
    7. '  ' → logprob: -19.50002670288086
    8. '```' → logprob: -19.50002670288086
    9. '
' → logprob: -19.62502670288086
    10. '１' → logprob: -20.31252670288086

Token 322: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -14.875006675720215
    4. '+' → logprob: -17.2500057220459
    5. '   ' → logprob: -18.6250057220459
    6. ')' → logprob: -18.8750057220459
    7. '```' → logprob: -19.1250057220459
    8. '１' → logprob: -19.6875057220459
    9. '
' → logprob: -19.7500057220459
    10. '(' → logprob: -20.1250057220459

Token 323: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023724649101495743
    2. ')' → logprob: -3.7737245559692383
    3. '):
' → logprob: -7.648724555969238
    4. ' ):' → logprob: -13.773724555969238
    5. '):
' → logprob: -14.523724555969238
    6. ':' → logprob: -14.648724555969238
    7. ' or' → logprob: -16.523725509643555
    8. ')：' → logprob: -16.648725509643555
    9. ').' → logprob: -16.898725509643555
    10. ')**' → logprob: -17.148725509643555

Token 324: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26086586713790894
    2. '   ' → logprob: -1.5108659267425537
    3. ' print' → logprob: -4.760865688323975
    4. '```' → logprob: -8.260866165161133
    5. 'exit' → logprob: -9.885866165161133
    6. 'pass' → logprob: -11.010866165161133
    7. '0' → logprob: -12.760866165161133
    8. '	print' → logprob: -12.885866165161133
    9. ' pass' → logprob: -13.635866165161133
    10. '``' → logprob: -13.885866165161133

Token 325: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.9888433093437925e-05
    2. '   ' → logprob: -10.375040054321289
    3. ' print' → logprob: -12.000040054321289
    4. 'ans' → logprob: -13.750040054321289
    5. 'pass' → logprob: -14.500040054321289
    6. '```' → logprob: -15.000040054321289
    7. '0' → logprob: -15.250040054321289
    8. '
' → logprob: -15.875040054321289
    9. 'exit' → logprob: -16.50004005432129
    10. '-' → logprob: -17.25004005432129

Token 326: '(ans' (ID: 70054)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007535241893492639
    2. '(-' → logprob: -7.375753402709961
    3. '0' → logprob: -9.125753402709961
    4. '(' → logprob: -12.250753402709961
    5. ' -' → logprob: -12.625753402709961
    6. '("-' → logprob: -13.250753402709961
    7. '
' → logprob: -13.375753402709961
    8. 'print' → logprob: -13.750753402709961
    9. 'ans' → logprob: -13.875753402709961
    10. '   ' → logprob: -13.875753402709961

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10022759437561035
    2. ')
' → logprob: -2.3502275943756104
    3. ')
' → logprob: -11.350227355957031
    4. ')return' → logprob: -11.725227355957031
    5. ' )' → logprob: -14.850227355957031
    6. ')`
' → logprob: -15.850227355957031
    7. ')

' → logprob: -15.975227355957031
    8. ')`' → logprob: -16.35022735595703
    9. '   ' → logprob: -16.47522735595703
    10. ' )
' → logprob: -16.72522735595703

Token 328: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47429224848747253
    2. '   ' → logprob: -0.9742922782897949
    3. 'elif' → logprob: -8.599291801452637
    4. 'exit' → logprob: -11.724291801452637
    5. ')' → logprob: -12.099291801452637
    6. 'import' → logprob: -12.224291801452637
    7. '    
' → logprob: -12.349291801452637
    8. '```' → logprob: -12.724291801452637
    9. '
' → logprob: -13.599291801452637
    10. ' else' → logprob: -14.224291801452637

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011078709736466408
    2. ':
' → logprob: -4.511078834533691
    3. '   ' → logprob: -10.886078834533691
    4. ',' → logprob: -12.761078834533691
    5. '[' → logprob: -12.886078834533691
    6. ' :' → logprob: -13.136078834533691
    7. '):' → logprob: -13.511078834533691
    8. ':

' → logprob: -13.761078834533691
    9. ' :
' → logprob: -14.511078834533691
    10. '):
' → logprob: -15.261078834533691

Token 330: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9991160035133362
    2. '   ' → logprob: -1.1241159439086914
    3. 'for' → logprob: -1.9991159439086914
    4. 'queue' → logprob: -2.8741159439086914
    5. 'max' → logprob: -3.1241159439086914
    6. '```' → logprob: -3.6241159439086914
    7. 'q' → logprob: -4.249115943908691
    8. ' for' → logprob: -4.874115943908691
    9. 'from' → logprob: -5.124115943908691
    10. ' queue' → logprob: -5.999115943908691

Token 331: ' flo' (ID: 15037)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02835864946246147
    2. 'for' → logprob: -4.403358459472656
    3. 'd' → logprob: -5.153358459472656
    4. '   ' → logprob: -5.528358459472656
    5. 'ans' → logprob: -5.903358459472656
    6. 'from' → logprob: -7.028358459472656
    7. 'print' → logprob: -7.028358459472656
    8. 'f' → logprob: -7.153358459472656
    9. 'import' → logprob: -8.653358459472656
    10. 'distance' → logprob: -9.403358459472656

Token 332: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.00014048899174667895
    2. 'd' → logprob: -8.875140190124512
    3. 'y' → logprob: -14.625140190124512
    4. 'dy' → logprob: -16.875141143798828
    5. 'yed' → logprob: -17.750141143798828
    6. '```' → logprob: -18.125141143798828
    7. '_d' → logprob: -18.250141143798828
    8. 'wd' → logprob: -18.750141143798828
    9. '``' → logprob: -19.000141143798828
    10. ' yd' → logprob: -19.250141143798828

Token 333: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -4.008129963040119e-06
    2. '_f' → logprob: -12.750003814697266
    3. '_' → logprob: -14.000003814697266
    4. 'w' → logprob: -15.750003814697266
    5. '_aw' → logprob: -18.250003814697266
    6. 'f' → logprob: -18.375003814697266
    7. '\' → logprob: -18.750003814697266
    8. '```' → logprob: -18.875003814697266
    9. '_y' → logprob: -19.125003814697266
    10. ' _' → logprob: -19.375003814697266

Token 334: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.00012451570364646614
    2. 'arshal' → logprob: -9.00012493133545
    3. 'ash' → logprob: -15.00012493133545
    4. 'ars' → logprob: -15.00012493133545
    5. 'shall' → logprob: -15.75012493133545
    6. 'arsch' → logprob: -16.000123977661133
    7. '[' → logprob: -16.500123977661133
    8. '```' → logprob: -16.750123977661133
    9. 'all' → logprob: -17.000123977661133
    10. 'ар' → logprob: -17.750123977661133

Token 335: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -3.7146746763028204e-05
    2. 'sh' → logprob: -11.12503719329834
    3. 'shal' → logprob: -11.75003719329834
    4. 'shaw' → logprob: -12.50003719329834
    5. '_all' → logprob: -13.00003719329834
    6. 'all' → logprob: -13.50003719329834
    7. 'hall' → logprob: -13.50003719329834
    8. '_sh' → logprob: -13.62503719329834
    9. 's' → logprob: -14.37503719329834
    10. '```' → logprob: -14.62503719329834

Token 336: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. '(distance' → logprob: -16.875
    4. ' (' → logprob: -17.25
    5. 'dist' → logprob: -17.875
    6. '(d' → logprob: -18.875
    7. '(
' → logprob: -19.5
    8. '(depth' → logprob: -19.5
    9. '(diff' → logprob: -19.875
    10. '(div' → logprob: -20.125

Token 337: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12721535563468933
    2. ')' → logprob: -2.1272153854370117
    3. ')

' → logprob: -8.502215385437012
    4. ')
' → logprob: -10.377215385437012
    5. '   ' → logprob: -10.752215385437012
    6. 'dist' → logprob: -10.877215385437012
    7. '
' → logprob: -12.502215385437012
    8. 'print' → logprob: -12.627215385437012
    9. '(dist' → logprob: -14.127215385437012
    10. 'for' → logprob: -14.127215385437012

Token 338: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059797752648591995
    2. '   ' → logprob: -3.059797763824463
    3. '```' → logprob: -5.184797763824463
    4. ' for' → logprob: -5.809797763824463
    5. 'min' → logprob: -6.684797763824463
    6. 'max' → logprob: -8.434797286987305
    7. 'found' → logprob: -8.434797286987305
    8. '
' → logprob: -8.559797286987305
    9. 'try' → logprob: -8.809797286987305
    10. 'answer' → logprob: -9.184797286987305

Token 339: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07025973498821259
    2. 'ans' (adapté à ' ans') → logprob: -2.8202598094940186
    3. 'max' → logprob: -4.9452595710754395
    4. 'res' → logprob: -8.070260047912598
    5. 'dist' → logprob: -8.195260047912598
    6. 'diam' → logprob: -8.695260047912598
    7. 'answer' → logprob: -9.070260047912598
    8. '   ' → logprob: -9.445260047912598
    9. 'd' → logprob: -10.320260047912598
    10. ' for' → logprob: -10.445260047912598

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933955550193787
    2. ' =' → logprob: -0.6933955550193787
    3. '=max' → logprob: -8.443395614624023
    4. ',' → logprob: -11.193395614624023
    5. 'max' → logprob: -11.693395614624023
    6. '+=' → logprob: -12.318395614624023
    7. ' +=' → logprob: -12.818395614624023
    8. ' ' → logprob: -14.193395614624023
    9. '=int' → logprob: -14.318395614624023
    10. ')' → logprob: -15.568395614624023

Token 341: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02861609123647213
    2. '0' → logprob: -3.653616189956665
    3. '-' → logprob: -6.278615951538086
    4. 'dist' → logprob: -8.903615951538086
    5. 'int' → logprob: -9.403615951538086
    6. ' max' → logprob: -9.778615951538086
    7. '1' → logprob: -9.778615951538086
    8. 'min' → logprob: -10.153615951538086
    9. '-max' → logprob: -11.153615951538086
    10. 'ans' → logprob: -11.403615951538086

Token 342: '(max' (ID: 17178)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.25681421160697937
    2. '(max' → logprob: -1.5068142414093018
    3. '([' → logprob: -5.756814002990723
    4. 'dist' → logprob: -7.131814002990723
    5. '(' → logprob: -7.881814002990723
    6. '(d' → logprob: -8.131814002990723
    7. '((' → logprob: -9.381814002990723
    8. '(
' → logprob: -9.881814002990723
    9. '(distance' → logprob: -9.881814002990723
    10. 'max' → logprob: -10.506814002990723

Token 343: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.20786452293395996
    2. 'row' → logprob: -1.95786452293396
    3. '(dist' → logprob: -3.45786452293396
    4. 'dist' → logprob: -4.207864761352539
    5. ' row' → logprob: -9.082864761352539
    6. '(d' → logprob: -10.832864761352539
    7. ' dist' → logprob: -12.582864761352539
    8. 'd' → logprob: -12.832864761352539
    9. '(distance' → logprob: -12.957864761352539
    10. '	row' → logprob: -13.082864761352539

Token 344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021105022460687906
    2. '))' → logprob: -8.500210762023926
    3. ' for' → logprob: -12.875210762023926
    4. 'for' → logprob: -12.875210762023926
    5. ' )' → logprob: -13.625210762023926
    6. ')))' → logprob: -14.875210762023926
    7. '   ' → logprob: -15.625210762023926
    8. ')-' → logprob: -15.750210762023926
    9. ')+' → logprob: -15.875210762023926
    10. ')
' → logprob: -16.000211715698242

Token 345: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6690912842750549
    2. ' for' → logprob: -1.2940912246704102
    3. 'for' → logprob: -1.5440912246704102
    4. ' )' → logprob: -9.04409122467041
    5. '   ' → logprob: -10.91909122467041
    6. '[' → logprob: -11.29409122467041
    7. '	for' → logprob: -11.79409122467041
    8. ')+' → logprob: -12.66909122467041
    9. ')
' → logprob: -13.16909122467041
    10. 'def' → logprob: -13.54409122467041

Token 346: ' row' (ID: 5225)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0019286326132714748
    2. ' dist' → logprob: -6.251928806304932
    3. '	dist' → logprob: -19.126928329467773
    4. 'row' → logprob: -19.251928329467773
    5. '(dist' → logprob: -20.001928329467773
    6. '_dist' → logprob: -21.751928329467773
    7. 'd' → logprob: -22.001928329467773
    8. 'Dist' → logprob: -22.876928329467773
    9. '.dist' → logprob: -23.376928329467773
    10. '
' → logprob: -23.501928329467773

Token 347: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004626172594726086
    2. 'in' → logprob: -5.379626274108887
    3. 'dist' → logprob: -12.254626274108887
    4. ')' → logprob: -14.379626274108887
    5. ' ' → logprob: -14.504626274108887
    6. '[' → logprob: -17.50462532043457
    7. 's' → logprob: -17.75462532043457
    8. '   ' → logprob: -17.87962532043457
    9. 'range' → logprob: -18.37962532043457
    10. 'd' → logprob: -18.50462532043457

Token 348: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0206720617134124e-05
    2. ' dist' → logprob: -11.50001049041748
    3. '(dist' → logprob: -19.750009536743164
    4. '	dist' → logprob: -21.125009536743164
    5. 'range' → logprob: -21.375009536743164
    6. 'd' → logprob: -22.500009536743164
    7. '_dist' → logprob: -23.250009536743164
    8. '.dist' → logprob: -23.500009536743164
    9. '   ' → logprob: -23.625009536743164
    10. ')' → logprob: -23.875009536743164

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024754200130701065
    2. ')
' → logprob: -6.252475261688232
    3. ')+' → logprob: -7.752475261688232
    4. ' )' → logprob: -9.62747573852539
    5. '   ' → logprob: -10.25247573852539
    6. '))' → logprob: -12.25247573852539
    7. 'if' → logprob: -12.37747573852539
    8. ' if' → logprob: -12.50247573852539
    9. ')-' → logprob: -13.87747573852539
    10. ')
' → logprob: -14.25247573852539

Token 350: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2534783184528351
    2. '
' → logprob: -1.5034782886505127
    3. '<|end|>' → logprob: -7.003478527069092
    4. ' print' → logprob: -8.253478050231934
    5. ')' → logprob: -9.003478050231934
    6. ')
' → logprob: -9.753478050231934
    7. '    
' → logprob: -10.003478050231934
    8. '   ' → logprob: -10.503478050231934
    9. '```' → logprob: -10.503478050231934
    10. '\n' → logprob: -10.503478050231934

Token 351: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010735770774772391
    2. ' print' → logprob: -9.375107765197754
    3. 'if' → logprob: -10.750107765197754
    4. '   ' → logprob: -14.625107765197754
    5. '
' → logprob: -15.000107765197754
    6. ' if' → logprob: -15.500107765197754
    7. 'for' → logprob: -17.875106811523438
    8. 'pr' → logprob: -19.000106811523438
    9. '```' → logprob: -19.250106811523438
    10. 'ans' → logprob: -19.375106811523438

Token 352: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3856492842023727e-06
    2. 'ans' → logprob: -13.750000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' (' → logprob: -17.125001907348633
    5. '(abs' → logprob: -18.250001907348633
    6. '(int' → logprob: -18.625001907348633
    7. '(answer' → logprob: -18.875001907348633
    8. '()' → logprob: -19.375001907348633
    9. '	ans' → logprob: -19.750001907348633
    10. '(
' → logprob: -20.250001907348633

Token 353: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.250001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')
' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.500001907348633
    6. '+' → logprob: -16.625001907348633
    7. '())' → logprob: -17.875001907348633
    8. ')}' → logprob: -18.375001907348633
    9. '+)' → logprob: -18.375001907348633
    10. '`)' → logprob: -18.750001907348633

Token 354: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895418792963028
    2. ' ' → logprob: -2.463954210281372
    3. '2' → logprob: -11.213953971862793
    4. '0' → logprob: -13.713953971862793
    5. ' ' → logprob: -17.08895492553711
    6. '3' → logprob: -17.46395492553711
    7. ')' → logprob: -17.46395492553711
    8. '10' → logprob: -18.65145492553711
    9. '   ' → logprob: -18.77645492553711
    10. '7' → logprob: -19.08895492553711

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000285530521068722
    2. ' ' → logprob: -8.375285148620605
    3. '2' → logprob: -9.875285148620605
    4. '0' → logprob: -12.625285148620605
    5. '3' → logprob: -16.375286102294922
    6. ')' → logprob: -17.250286102294922
    7. '(' → logprob: -18.125286102294922
    8. '10' → logprob: -18.125286102294922
    9. '
' → logprob: -18.937786102294922
    10. '5' → logprob: -19.125286102294922

Token 356: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.250000953674316
    3. '))' → logprob: -15.750000953674316
    4. ' )' → logprob: -16.000001907348633
    5. ')`' → logprob: -18.000001907348633
    6. ')}' → logprob: -20.000001907348633
    7. '')' → logprob: -20.000001907348633
    8. '）' → logprob: -20.250001907348633
    9. '`)' → logprob: -20.375001907348633
    10. ')))' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 354
Tokens correctement prédits (1ère position, stricte): 147
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 310
Précision stricte (1ère position): 41.53%
Précision adaptée (1ère position): 43.50%
Précision (top 10): 87.57%
================================================================================
