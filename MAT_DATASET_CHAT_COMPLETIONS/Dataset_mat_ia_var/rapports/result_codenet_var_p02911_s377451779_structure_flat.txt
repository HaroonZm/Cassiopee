================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_K_Q = input().split()
N = int(N_K_Q[0])
K = int(N_K_Q[1])
Q = int(N_K_Q[2])
who_answered = [None]*Q
participants = [K-Q]*N

i = 0
while i < Q:
    who_answered[i] = int(input()) - 1
    participants[who_answered[i]] += 1
    i += 1

i = 0
while i < N:
    if participants[i] > 0:
        print('Yes')
    else:
        print('No')
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_K' (ID: 20555)
  → Token d'amorce (pas de prédiction)

Token 2: '_Q' (ID: 28618)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8956981301307678
    2. '_' → logprob: -1.020698070526123
    3. ' =' → logprob: -1.895698070526123
    4. '[' → logprob: -4.020698070526123
    5. ':' → logprob: -4.270698070526123
    6. ')' → logprob: -4.270698070526123
    7. ' ' → logprob: -5.270698070526123
    8. ',' → logprob: -5.520698070526123
    9. '*' → logprob: -5.520698070526123
    10. '(' → logprob: -5.770698070526123

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06620468944311142
    2. '10' → logprob: -3.691204786300659
    3. '16' → logprob: -4.19120454788208
    4. '32' → logprob: -4.81620454788208
    5. '9' → logprob: -5.56620454788208
    6. '64' → logprob: -5.69120454788208
    7. '8' → logprob: -6.31620454788208
    8. '7' → logprob: -6.69120454788208
    9. '3' → logprob: -6.81620454788208
    10. '"' → logprob: -7.19120454788208

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10197768360376358
    2. ''' → logprob: -2.726977586746216
    3. '"' → logprob: -4.351977825164795
    4. '[' → logprob: -5.101977825164795
    5. '.' → logprob: -5.351977825164795
    6. '_' → logprob: -6.601977825164795
    7. '```' → logprob: -6.726977825164795
    8. '('' → logprob: -6.976977825164795
    9. '("("' → logprob: -6.976977825164795
    10. '(
' → logprob: -7.101977825164795

Token 6: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8849712014198303
    2. '()' → logprob: -1.5099711418151855
    3. '.strip' → logprob: -1.7599711418151855
    4. ')' → logprob: -3.2599711418151855
    5. '```' → logprob: -3.2599711418151855
    6. '.split' → logprob: -3.8849711418151855
    7. '(' → logprob: -4.1349711418151855
    8. 'strip' → logprob: -4.5099711418151855
    9. '\n' → logprob: -4.6349711418151855
    10. '**' → logprob: -5.0099711418151855

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04312342777848244
    2. '()' → logprob: -3.168123483657837
    3. '(
' → logprob: -10.168123245239258
    4. '"' → logprob: -10.793123245239258
    5. '(

' → logprob: -11.418123245239258
    6. '('' → logprob: -11.543123245239258
    7. '`' → logprob: -11.793123245239258
    8. '```' → logprob: -12.043123245239258
    9. '`()' → logprob: -12.043123245239258
    10. ' (' → logprob: -12.418123245239258

Token 8: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006491662003099918
    2. '=' → logprob: -6.006491661071777
    3. '[N' → logprob: -7.381491661071777
    4. 'print' → logprob: -7.756491661071777
    5. '```' → logprob: -7.881491661071777
    6. '#' → logprob: -8.006491661071777
    7. '()' → logprob: -8.006491661071777
    8. 'for' → logprob: -8.131491661071777
    9. '[int' → logprob: -8.381491661071777
    10. ' =' → logprob: -8.631491661071777

Token 9: ' =' (ID: 314)
  Prédit: '_K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.47920382022857666
    2. '_' → logprob: -1.1042038202285767
    3. '[' → logprob: -3.104203701019287
    4. '[_' → logprob: -5.854203701019287
    5. 'K' → logprob: -7.729203701019287
    6. '[K' → logprob: -8.229204177856445
    7. ' _' → logprob: -8.979204177856445
    8. '_k' → logprob: -9.229204177856445
    9. '```' → logprob: -9.229204177856445
    10. '<|end|>' → logprob: -9.604204177856445

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03808005899190903
    2. ' int' → logprob: -3.2880799770355225
    3. 'len' → logprob: -10.913080215454102
    4. 'N' → logprob: -11.913080215454102
    5. ' N' → logprob: -11.913080215454102
    6. 'input' → logprob: -13.038080215454102
    7. '[int' → logprob: -13.538080215454102
    8. ' len' → logprob: -13.788080215454102
    9. ' ' → logprob: -14.038080215454102
    10. '(int' → logprob: -14.663080215454102

Token 11: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34934884309768677
    2. '(N' → logprob: -1.224348783493042
    3. '('' → logprob: -7.474349021911621
    4. '(K' → logprob: -8.724349021911621
    5. '(_' → logprob: -9.974349021911621
    6. '("' → logprob: -10.099349021911621
    7. '("("' → logprob: -10.474349021911621
    8. '(`' → logprob: -10.849349021911621
    9. '('_' → logprob: -11.724349021911621
    10. '(

' → logprob: -11.974349021911621

Token 12: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.1646512746810913
    2. ')' → logprob: -2.414651393890381
    3. '[' → logprob: -2.789651393890381
    4. '_N' → logprob: -8.289650917053223
    5. 'K' → logprob: -8.414650917053223
    6. '[_' → logprob: -9.039650917053223
    7. '[K' → logprob: -9.164650917053223
    8. '_)' → logprob: -9.664650917053223
    9. ' )' → logprob: -9.789650917053223
    10. ')_' → logprob: -10.664650917053223

Token 13: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.313915878534317
    2. '_K' → logprob: -1.3139158487319946
    3. '[' → logprob: -7.938915729522705
    4. '[_' → logprob: -9.063916206359863
    5. ')' → logprob: -10.063916206359863
    6. ')_' → logprob: -10.063916206359863
    7. '_' → logprob: -10.188916206359863
    8. '_)' → logprob: -11.063916206359863
    9. '[K' → logprob: -11.563916206359863
    10. '_[' → logprob: -12.188916206359863

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.558399319241289e-05
    2. '[N' → logprob: -11.125025749206543
    3. ')' → logprob: -11.750025749206543
    4. ' [' → logprob: -13.375025749206543
    5. '```' → logprob: -14.625025749206543
    6. '[
' → logprob: -15.625025749206543
    7. '\[' → logprob: -15.750025749206543
    8. '   ' → logprob: -16.000024795532227
    9. ' ' → logprob: -16.750024795532227
    10. ' N' → logprob: -17.000024795532227

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '1' → logprob: -15.625001907348633
    4. ')' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. ']' → logprob: -17.750001907348633
    7. '])' → logprob: -17.937501907348633
    8. '2' → logprob: -18.125001907348633
    9. '`' → logprob: -18.250001907348633
    10. '[' → logprob: -18.625001907348633

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016823912039399147
    2. '])' → logprob: -4.141823768615723
    3. ']' → logprob: -7.266823768615723
    4. ')]' → logprob: -10.641823768615723
    5. ')
' → logprob: -10.891823768615723
    6. ')])' → logprob: -11.016823768615723
    7. ''])' → logprob: -12.016823768615723
    8. ' )' → logprob: -12.141823768615723
    9. '`)' → logprob: -12.516823768615723
    10. '）' → logprob: -12.516823768615723

Token 17: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002856497303582728
    2. 'M' → logprob: -8.250286102294922
    3. '_' → logprob: -12.125286102294922
    4. ' K' → logprob: -12.125286102294922
    5. 'k' → logprob: -12.500286102294922
    6. 'Q' → logprob: -12.500286102294922
    7. '_K' → logprob: -13.125286102294922
    8. 'N' → logprob: -13.625286102294922
    9. '```' → logprob: -13.875286102294922
    10. '#' → logprob: -15.250286102294922

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03241623938083649
    2. '=' → logprob: -3.907416343688965
    3. ')' → logprob: -5.407416343688965
    4. ' =' → logprob: -5.782416343688965
    5. '<|end|>' → logprob: -6.157416343688965
    6. ' ' → logprob: -7.157416343688965
    7. '*' → logprob: -8.407416343688965
    8. '_=' → logprob: -8.657416343688965
    9. '[' → logprob: -8.782416343688965
    10. ''' → logprob: -8.782416343688965

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06196858361363411
    2. 'int' → logprob: -2.8119685649871826
    3. ' N' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.811968803405762
    5. ' ' → logprob: -16.186967849731445
    6. '32' → logprob: -16.561967849731445
    7. '=int' → logprob: -16.561967849731445
    8. ''' → logprob: -17.061967849731445
    9. '(int' → logprob: -17.061967849731445
    10. '	int' → logprob: -17.686967849731445

Token 20: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5766745209693909
    2. '(' → logprob: -0.8266745209693909
    3. '(K' → logprob: -7.451674461364746
    4. '("("' → logprob: -9.451674461364746
    5. '('' → logprob: -10.451674461364746
    6. '((' → logprob: -11.826674461364746
    7. ' (' → logprob: -11.826674461364746
    8. '(`' → logprob: -11.826674461364746
    9. '(

' → logprob: -11.826674461364746
    10. ''' → logprob: -13.076674461364746

Token 21: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -3.869639476761222e-05
    2. '[' → logprob: -11.125039100646973
    3. '[_' → logprob: -12.000039100646973
    4. ')' → logprob: -12.375039100646973
    5. '[K' → logprob: -12.500039100646973
    6. ')_' → logprob: -13.000039100646973
    7. '_k' → logprob: -13.125039100646973
    8. '_Q' → logprob: -13.250039100646973
    9. '])' → logprob: -14.125039100646973
    10. '```' → logprob: -14.500039100646973

Token 22: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.31448599696159363
    2. '_K' → logprob: -1.314486026763916
    3. '[' → logprob: -6.814486026763916
    4. '])' → logprob: -9.814485549926758
    5. ']_' → logprob: -11.314485549926758
    6. '_G' → logprob: -11.564485549926758
    7. '[_' → logprob: -11.564485549926758
    8. ' _' → logprob: -11.939485549926758
    9. '```' → logprob: -12.064485549926758
    10. '_' → logprob: -12.064485549926758

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. ' [' → logprob: -13.250005722045898
    3. '1' → logprob: -14.000005722045898
    4. '```' → logprob: -14.000005722045898
    5. ')[' → logprob: -14.375005722045898
    6. '][' → logprob: -14.625005722045898
    7. ')' → logprob: -14.750005722045898
    8. '[
' → logprob: -15.125005722045898
    9. '\[' → logprob: -16.1250057220459
    10. ']' → logprob: -16.1250057220459

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.023293538717553e-05
    2. '])' → logprob: -11.625030517578125
    3. '2' → logprob: -11.875030517578125
    4. '0' → logprob: -12.125030517578125
    5. ' ' → logprob: -12.125030517578125
    6. ']' → logprob: -12.875030517578125
    7. '```' → logprob: -15.625030517578125
    8. '+' → logprob: -16.125030517578125
    9. ')' → logprob: -16.125030517578125
    10. '   ' → logprob: -16.250030517578125

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027599421446211636
    2. '])' → logprob: -8.875275611877441
    3. ']' → logprob: -9.375275611877441
    4. '）' → logprob: -11.000275611877441
    5. '`)' → logprob: -11.625275611877441
    6. '')' → logprob: -11.875275611877441
    7. ')
' → logprob: -12.375275611877441
    8. ' )' → logprob: -12.625275611877441
    9. ')]' → logprob: -12.625275611877441
    10. '))' → logprob: -13.250275611877441

Token 26: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.030205372720956802
    2. ')' → logprob: -4.155205249786377
    3. '#' → logprob: -5.280205249786377
    4. '
' → logprob: -5.280205249786377
    5. ' Q' → logprob: -7.405205249786377
    6. '[' → logprob: -7.655205249786377
    7. '<|end|>' → logprob: -7.655205249786377
    8. 'N' → logprob: -8.030205726623535
    9. '```' → logprob: -8.405205726623535
    10. ' ' → logprob: -8.405205726623535

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4669536054134369
    2. '=' → logprob: -1.2169536352157593
    3. '[' → logprob: -3.2169535160064697
    4. '_' → logprob: -4.216953754425049
    5. ')' → logprob: -4.341953754425049
    6. ' ' → logprob: -5.341953754425049
    7. ''' → logprob: -6.466953754425049
    8. '.' → logprob: -7.341953754425049
    9. '<|end|>' → logprob: -7.591953754425049
    10. ']' → logprob: -7.841953754425049

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012514949776232243
    2. 'int' → logprob: -4.387515068054199
    3. ' ' → logprob: -13.0125150680542
    4. ' N' → logprob: -14.2625150680542
    5. ' ' → logprob: -14.2625150680542
    6. ' in' → logprob: -14.8875150680542
    7. '(int' → logprob: -15.0125150680542
    8. '[int' → logprob: -15.1375150680542
    9. '=int' → logprob: -15.1375150680542
    10. ''' → logprob: -15.7625150680542

Token 29: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.40603822469711304
    2. '(' → logprob: -1.5310382843017578
    3. '(Q' → logprob: -2.156038284301758
    4. '(K' → logprob: -6.781038284301758
    5. '(input' → logprob: -9.031038284301758
    6. '("("' → logprob: -9.156038284301758
    7. '(int' → logprob: -9.906038284301758
    8. '()' → logprob: -10.031038284301758
    9. '('' → logprob: -10.406038284301758
    10. '(
' → logprob: -10.531038284301758

Token 30: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -4.024604277219623e-05
    2. ')' → logprob: -11.250040054321289
    3. 'K' → logprob: -11.500040054321289
    4. ')_' → logprob: -12.250040054321289
    5. '_Q' → logprob: -12.750040054321289
    6. '[' → logprob: -12.875040054321289
    7. '_' → logprob: -13.000040054321289
    8. '_k' → logprob: -14.250040054321289
    9. '[K' → logprob: -14.500040054321289
    10. '```' → logprob: -14.625040054321289

Token 31: '_Q' (ID: 28618)
  Prédit: '_Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Q' → logprob: -0.0001640876434976235
    2. '[' → logprob: -9.625164031982422
    3. 'Q' → logprob: -10.000164031982422
    4. ')' → logprob: -11.375164031982422
    5. '_' → logprob: -11.500164031982422
    6. ']' → logprob: -11.875164031982422
    7. '])' → logprob: -12.000164031982422
    8. ' _' → logprob: -12.375164031982422
    9. '_K' → logprob: -13.250164031982422
    10. '_C' → logprob: -13.625164031982422

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00025514091248624027
    2. '2' → logprob: -8.625255584716797
    3. '])' → logprob: -10.000255584716797
    4. ')' → logprob: -11.125255584716797
    5. ']' → logprob: -12.250255584716797
    6. '-' → logprob: -12.375255584716797
    7. '][' → logprob: -12.375255584716797
    8. ')[' → logprob: -14.000255584716797
    9. '0' → logprob: -14.750255584716797
    10. ' [' → logprob: -15.000255584716797

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.750004768371582
    3. '1' → logprob: -14.125004768371582
    4. '])' → logprob: -14.500004768371582
    5. '0' → logprob: -15.125004768371582
    6. ']' → logprob: -15.750004768371582
    7. '3' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.6875057220459
    9. '```' → logprob: -16.8125057220459
    10. '-' → logprob: -16.8750057220459

Token 34: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ']' → logprob: -14.625001907348633
    3. '')' → logprob: -15.250001907348633
    4. '）' → logprob: -15.625001907348633
    5. '`)' → logprob: -15.750001907348633
    6. '))' → logprob: -15.875001907348633
    7. ' )' → logprob: -16.375001907348633
    8. ')
' → logprob: -16.750001907348633
    9. '),' → logprob: -16.875001907348633
    10. '])' → logprob: -17.125001907348633

Token 35: 'who' (ID: 29997)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9569052457809448
    2. '\n' → logprob: -2.2069053649902344
    3. '' → logprob: -2.7069053649902344
    4. 'r' → logprob: -2.9569053649902344
    5. '#' → logprob: -2.9569053649902344
    6. 'n' → logprob: -3.0819053649902344
    7. '[' → logprob: -3.3319053649902344
    8. 'for' → logprob: -3.3319053649902344
    9. '_' → logprob: -3.5819053649902344
    10. '\' → logprob: -3.5819053649902344

Token 36: '_answer' (ID: 65702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29138684272766113
    2. '[' → logprob: -2.666386842727661
    3. '[]' → logprob: -2.791386842727661
    4. '_i' → logprob: -3.791386842727661
    5. ''' → logprob: -4.541386604309082
    6. '_m' → logprob: -4.791386604309082
    7. '[i' → logprob: -4.791386604309082
    8. '_a' → logprob: -4.916386604309082
    9. 'a' → logprob: -5.041386604309082
    10. '.' → logprob: -5.291386604309082

Token 37: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.3950328528881073
    2. 's' → logprob: -1.2700328826904297
    3. '_s' → logprob: -3.7700328826904297
    4. '_' → logprob: -4.64503288269043
    5. '_ed' → logprob: -5.27003288269043
    6. ' =' → logprob: -6.27003288269043
    7. 'ing' → logprob: -6.27003288269043
    8. '[' → logprob: -6.52003288269043
    9. '=' → logprob: -8.02003288269043
    10. '_e' → logprob: -8.14503288269043

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5920794010162354
    2. ' =' → logprob: -0.9670794010162354
    3. '_' → logprob: -2.9670794010162354
    4. 's' → logprob: -4.592079162597656
    5. '[' → logprob: -6.092079162597656
    6. 'ed' → logprob: -6.967079162597656
    7. '[]' → logprob: -7.717079162597656
    8. '=[]' → logprob: -8.342079162597656
    9. '_=' → logprob: -8.717079162597656
    10. '_counts' → logprob: -8.842079162597656

Token 39: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17634864151477814
    2. ' []' → logprob: -2.1763486862182617
    3. '[input' → logprob: -4.051348686218262
    4. '[' → logprob: -4.301348686218262
    5. 'input' → logprob: -4.426348686218262
    6. ' input' → logprob: -6.301348686218262
    7. ' [' → logprob: -6.426348686218262
    8. 'list' → logprob: -6.676348686218262
    9. ' list' → logprob: -8.301348686218262
    10. '[int' → logprob: -9.426348686218262

Token 40: 'None' (ID: 8505)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.27358707785606384
    2. '0' → logprob: -1.5235871076583862
    3. 'False' → logprob: -4.023587226867676
    4. ' int' → logprob: -7.023587226867676
    5. 'input' → logprob: -7.273587226867676
    6. '(int' → logprob: -7.523587226867676
    7. '[]' → logprob: -7.648587226867676
    8. ']' → logprob: -8.523587226867676
    9. '[int' → logprob: -8.898587226867676
    10. '-' → logprob: -8.898587226867676

Token 41: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007919260300695896
    2. ' for' → logprob: -5.5079193115234375
    3. ']*' → logprob: -6.1329193115234375
    4. 'for' → logprob: -7.0079193115234375
    5. ' ]' → logprob: -8.757919311523438
    6. ',' → logprob: -8.757919311523438
    7. '()]' → logprob: -9.007919311523438
    8. ']*(' → logprob: -9.132919311523438
    9. '(' → logprob: -9.257919311523438
    10. '()' → logprob: -9.507919311523438

Token 42: 'Q' (ID: 48)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020020268857479095
    2. ' N' → logprob: -9.375200271606445
    3. '(N' → logprob: -9.625200271606445
    4. 'K' → logprob: -10.125200271606445
    5. '(' → logprob: -12.500200271606445
    6. 'Q' → logprob: -12.750200271606445
    7. ' (' → logprob: -13.125200271606445
    8. ' ' → logprob: -15.750200271606445
    9. '100' → logprob: -16.375200271606445
    10. '(K' → logprob: -16.750200271606445

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45156219601631165
    2. 'for' → logprob: -1.2015621662139893
    3. '\n' → logprob: -3.2015621662139893
    4. '
' → logprob: -4.701562404632568
    5. '' → logprob: -5.326562404632568
    6. ' for' → logprob: -5.451562404632568
    7. ' 
' → logprob: -6.576562404632568
    8. '\' → logprob: -7.451562404632568
    9. '```' → logprob: -7.576562404632568
    10. '

' → logprob: -8.07656192779541

Token 44: 'participants' (ID: 190110)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012128151021897793
    2. ' for' → logprob: -6.0121283531188965
    3. 'who' → logprob: -6.1371283531188965
    4. '
' → logprob: -6.6371283531188965
    5. 'answers' → logprob: -6.7621283531188965
    6. 'answer' → logprob: -6.7621283531188965
    7. 'a' → logprob: -6.8871283531188965
    8. 'ans' → logprob: -7.6371283531188965
    9. '\n' → logprob: -7.7621283531188965
    10. 'A' → logprob: -8.262127876281738

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7911327481269836
    2. ' =' → logprob: -0.7911327481269836
    3. '_' → logprob: -2.916132688522339
    4. '_scores' → logprob: -3.541132688522339
    5. '_answers' → logprob: -5.666132926940918
    6. '_count' → logprob: -6.041132926940918
    7. '_answer' → logprob: -6.541132926940918
    8. '_score' → logprob: -7.416132926940918
    9. '_points' → logprob: -7.916132926940918
    10. '_counts' → logprob: -8.166132926940918

Token 46: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8970332145690918
    2. '[' → logprob: -1.2720332145690918
    3. ' [' → logprob: -1.3970332145690918
    4. ' []' → logprob: -3.022033214569092
    5. '[N' → logprob: -4.522033214569092
    6. '[int' → logprob: -5.897033214569092
    7. '[K' → logprob: -6.897033214569092
    8. '{}' → logprob: -8.14703369140625
    9. '[input' → logprob: -8.14703369140625
    10. '[list' → logprob: -9.14703369140625

Token 47: 'K' (ID: 42)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08935948461294174
    2. 'int' → logprob: -2.9643595218658447
    3. '[]' → logprob: -4.714359283447266
    4. '1' → logprob: -4.714359283447266
    5. 'True' → logprob: -5.214359283447266
    6. 'False' → logprob: -5.839359283447266
    7. 'N' → logprob: -6.214359283447266
    8. '[' → logprob: -6.589359283447266
    9. '[int' → logprob: -7.089359283447266
    10. '[N' → logprob: -7.339359283447266

Token 48: '-Q' (ID: 50456)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07561319321393967
    2. '+' → logprob: -3.325613260269165
    3. ']*' → logprob: -4.575613021850586
    4. ']int' → logprob: -5.200613021850586
    5. ')' → logprob: -5.325613021850586
    6. ')]' → logprob: -5.325613021850586
    7. ' for' → logprob: -5.450613021850586
    8. ' ]' → logprob: -5.450613021850586
    9. ' +' → logprob: -6.700613021850586
    10. '0' → logprob: -7.450613021850586

Token 49: ']*' (ID: 18579)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.21271871030330658
    2. ']' → logprob: -1.9627187252044678
    3. '+' → logprob: -3.9627187252044678
    4. ':' → logprob: -4.087718486785889
    5. ',' → logprob: -5.337718486785889
    6. ' :]' → logprob: -6.337718486785889
    7. ')' → logprob: -6.587718486785889
    8. '-' → logprob: -6.712718486785889
    9. '+]' → logprob: -6.712718486785889
    10. ' ]' → logprob: -7.087718486785889

Token 50: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00024382755509577692
    2. '(N' → logprob: -8.625244140625
    3. ' N' → logprob: -10.500244140625
    4. '(' → logprob: -10.500244140625
    5. 'K' → logprob: -12.500244140625
    6. ' (' → logprob: -13.000244140625
    7. '1' → logprob: -14.500244140625
    8. 'int' → logprob: -14.750244140625
    9. '[' → logprob: -15.000244140625
    10. 'Q' → logprob: -15.250244140625

Token 51: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6387791633605957
    2. '<|end|>' → logprob: -1.5137791633605957
    3. '
' → logprob: -1.6387791633605957
    4. '\n' → logprob: -3.6387791633605957
    5. ' for' → logprob: -5.138779163360596
    6. '\' → logprob: -5.263779163360596
    7. '' → logprob: -5.388779163360596
    8. ' 
' → logprob: -5.888779163360596
    9. '#' → logprob: -6.013779163360596
    10. '  
' → logprob: -6.263779163360596

Token 52: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5651786923408508
    2. '<|end|>' → logprob: -1.565178632736206
    3. '
' → logprob: -1.690178632736206
    4. ' for' → logprob: -3.565178632736206
    5. ' 
' → logprob: -5.565178871154785
    6. '\n' → logprob: -6.065178871154785
    7. '<|end|>' → logprob: -6.440178871154785
    8. '
' → logprob: -7.315178871154785
    9. '  
' → logprob: -7.440178871154785
    10. '' → logprob: -8.440178871154785

Token 53: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3985740840435028
    2. 'nd' → logprob: -1.7735741138458252
    3. '=' → logprob: -2.398574113845825
    4. 'n' → logprob: -2.898574113845825
    5. '+' → logprob: -5.648573875427246
    6. 'for' → logprob: -5.648573875427246
    7. ' =' → logprob: -6.898573875427246
    8. '<|end|>' → logprob: -7.023573875427246
    9. 'nt' → logprob: -7.523573875427246
    10. 'np' → logprob: -7.898573875427246

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -15.000431060791016
    4. 'Q' → logprob: -16.125431060791016
    5. '=' → logprob: -17.375431060791016
    6. '2' → logprob: -17.437931060791016
    7. ' Q' → logprob: -18.312931060791016
    8. '`' → logprob: -18.312931060791016
    9. '   ' → logprob: -18.437931060791016
    10. '```' → logprob: -18.812931060791016

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -10.75002384185791
    3. 'Q' → logprob: -13.62502384185791
    4. '1' → logprob: -13.87502384185791
    5. 'K' → logprob: -17.062524795532227
    6. '=' → logprob: -17.187524795532227
    7. 'int' → logprob: -17.625024795532227
    8. '   ' → logprob: -17.812524795532227
    9. '`' → logprob: -17.812524795532227
    10. '[' → logprob: -17.937524795532227

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6746835708618164
    2. 'while' → logprob: -1.4246835708618164
    3. '<|end|>' → logprob: -1.5496835708618164
    4. ' while' → logprob: -3.4246835708618164
    5. '<|end|>' → logprob: -5.674683570861816
    6. '\n' → logprob: -7.174683570861816
    7. '
' → logprob: -8.549683570861816
    8. ' 
' → logprob: -8.674683570861816
    9. '' → logprob: -9.049683570861816
    10. '```' → logprob: -9.174683570861816

Token 57: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11653638631105423
    2. '<|end|>' → logprob: -2.9915363788604736
    3. '
' → logprob: -3.3665363788604736
    4. ' while' → logprob: -3.7415363788604736
    5. '\n' → logprob: -7.366536617279053
    6. '<|end|>' → logprob: -8.241536140441895
    7. 'for' → logprob: -8.366536140441895
    8. '```' → logprob: -8.866536140441895
    9. ' 
' → logprob: -10.116536140441895
    10. 'w' → logprob: -10.116536140441895

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008939516264945269
    2. 'i' → logprob: -7.125894069671631
    3. ' ' → logprob: -9.500893592834473
    4. ' Q' → logprob: -11.375893592834473
    5. '	i' → logprob: -13.625893592834473
    6. ' N' → logprob: -14.750893592834473
    7. 'Q' → logprob: -14.875893592834473
    8. '(i' → logprob: -15.375893592834473
    9. ' K' → logprob: -15.500893592834473
    10. '  ' → logprob: -15.625893592834473

Token 59: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08922908455133438
    2. '<' → logprob: -2.464229106903076
    3. '<Q' → logprob: -8.714228630065918
    4. ' ' → logprob: -9.464228630065918
    5. ' <=' → logprob: -10.214228630065918
    6. '<N' → logprob: -12.464228630065918
    7. '<=' → logprob: -12.589228630065918
    8. ' <
' → logprob: -13.714228630065918
    9. '<len' → logprob: -13.964228630065918
    10. '<K' → logprob: -13.964228630065918

Token 60: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4740988314151764
    2. ' Q' → logprob: -0.974098801612854
    3. ' ' → logprob: -10.974099159240723
    4. '	Q' → logprob: -12.599099159240723
    5. ' len' → logprob: -15.224099159240723
    6. 'K' → logprob: -15.474099159240723
    7. 'len' → logprob: -15.599099159240723
    8. '  ' → logprob: -15.724099159240723
    9. '<Q' → logprob: -15.724099159240723
    10. ' K' → logprob: -15.974099159240723

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034583488013595343
    2. ':
' → logprob: -6.378458499908447
    3. ' :' → logprob: -6.378458499908447
    4. ' :
' → logprob: -9.878458023071289
    5. '):' → logprob: -13.753458023071289
    6. ':**' → logprob: -14.378458023071289
    7. ':i' → logprob: -14.378458023071289
    8. '+:' → logprob: -14.628458023071289
    9. ':

' → logprob: -15.003458023071289
    10. ' and' → logprob: -15.253458023071289

Token 62: '   ' (ID: 271)
  Prédit: ' who'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' who' → logprob: -0.018808331340551376
    2. '   ' → logprob: -4.768808364868164
    3. 'who' → logprob: -4.893808364868164
    4. ' participants' → logprob: -6.518808364868164
    5. ' answers' → logprob: -8.143808364868164
    6. ' 
' → logprob: -9.018808364868164
    7. 'Who' → logprob: -9.018808364868164
    8. ' p' → logprob: -9.143808364868164
    9. ' Who' → logprob: -9.643808364868164
    10. ' i' → logprob: -9.768808364868164

Token 63: ' who' (ID: 1218)
  Prédit: 'who'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'who' (adapté à ' who') → logprob: -0.7276300191879272
    2. 'a' → logprob: -1.2276300191879272
    3. 'A' → logprob: -2.727630138397217
    4. 'x' → logprob: -3.352630138397217
    5. 'p' → logprob: -3.727630138397217
    6. 'answer' → logprob: -3.977630138397217
    7. 'person' → logprob: -4.227630138397217
    8. '   ' → logprob: -4.852630138397217
    9. 'name' → logprob: -4.977630138397217
    10. 'ans' → logprob: -5.227630138397217

Token 64: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.8312570318812504e-05
    2. '_ans' → logprob: -11.500018119812012
    3. '_answers' → logprob: -12.625018119812012
    4. '_' → logprob: -13.125018119812012
    5. 'answered' → logprob: -13.250018119812012
    6. 'Answered' → logprob: -14.875018119812012
    7. '_an' → logprob: -14.875018119812012
    8. '_a' → logprob: -15.500018119812012
    9. 'ANSWER' → logprob: -17.000019073486328
    10. ' _' → logprob: -17.125019073486328

Token 65: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.1279553291387856e-05
    2. 'eded' → logprob: -12.375011444091797
    3. 'answered' → logprob: -12.375011444091797
    4. 'sed' → logprob: -13.625011444091797
    5. 'ered' → logprob: -13.875011444091797
    6. '_answer' → logprob: -15.000011444091797
    7. 'd' → logprob: -16.625011444091797
    8. '```' → logprob: -17.250011444091797
    9. 'Answered' → logprob: -17.625011444091797
    10. 'eed' → logprob: -17.750011444091797

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016601856332272291
    2. '[' → logprob: -6.626660346984863
    3. '[int' → logprob: -8.751660346984863
    4. '[input' → logprob: -8.876660346984863
    5. ' [' → logprob: -10.751660346984863
    6. '[I' → logprob: -11.876660346984863
    7. '```' → logprob: -13.376660346984863
    8. '   ' → logprob: -13.376660346984863
    9. '\[' → logprob: -14.251660346984863
    10. '[N' → logprob: -15.126660346984863

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05021489039063454
    2. ' ]' → logprob: -3.050215005874634
    3. ']=' → logprob: -6.800214767456055
    4. '=' → logprob: -8.550214767456055
    5. ' =' → logprob: -8.675214767456055
    6. ')' → logprob: -9.175214767456055
    7. ' ' → logprob: -10.550214767456055
    8. ' )' → logprob: -12.675214767456055
    9. '=input' → logprob: -13.050214767456055
    10. ']+=' → logprob: -13.175214767456055

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576698899269104
    2. ' =' → logprob: -0.826698899269104
    3. '=input' → logprob: -7.5766987800598145
    4. ',' → logprob: -9.201699256896973
    5. '=int' → logprob: -9.576699256896973
    6. ' ' → logprob: -10.076699256896973
    7. ' +=' → logprob: -11.826699256896973
    8. '+=' → logprob: -12.076699256896973
    9. 'input' → logprob: -12.076699256896973
    10. '＝' → logprob: -13.201699256896973

Token 69: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03095310367643833
    2. ' int' → logprob: -4.0309529304504395
    3. 'input' → logprob: -4.5309529304504395
    4. ' input' → logprob: -6.2809529304504395
    5. '   ' → logprob: -10.155953407287598
    6. '	int' → logprob: -11.530953407287598
    7. ' ' → logprob: -11.905953407287598
    8. '(int' → logprob: -12.280953407287598
    9. 'str' → logprob: -12.405953407287598
    10. '<int' → logprob: -12.905953407287598

Token 70: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006718571297824383
    2. '(' → logprob: -5.006718635559082
    3. '(
' → logprob: -13.381718635559082
    4. 'input' → logprob: -14.381718635559082
    5. '(

' → logprob: -15.131718635559082
    6. '()' → logprob: -15.381718635559082
    7. ' (' → logprob: -15.756718635559082
    8. '(in' → logprob: -15.881718635559082
    9. '((' → logprob: -16.006717681884766
    10. '(i' → logprob: -16.381717681884766

Token 71: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011063382029533386
    2. '()' → logprob: -4.511063575744629
    3. '())
' → logprob: -12.011063575744629
    4. '())

' → logprob: -13.261063575744629
    5. '().' → logprob: -13.386063575744629
    6. ' ())' → logprob: -13.386063575744629
    7. ')' → logprob: -13.761063575744629
    8. '();)' → logprob: -14.011063575744629
    9. '()))' → logprob: -14.261063575744629
    10. '()
' → logprob: -14.511063575744629

Token 72: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16836532950401306
    2. '-' → logprob: -2.168365240097046
    3. '[i' → logprob: -4.043365478515625
    4. '
' → logprob: -4.668365478515625
    5. '   ' → logprob: -4.918365478515625
    6. ' ' → logprob: -5.543365478515625
    7. ' 
' → logprob: -7.168365478515625
    8. '()-' → logprob: -8.043365478515625
    9. '  
' → logprob: -8.293365478515625
    10. '()' → logprob: -8.293365478515625

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '１' → logprob: -17.0017032623291
    4. '```' → logprob: -17.3767032623291
    5. '<|end|>' → logprob: -17.5017032623291
    6. '   ' → logprob: -18.3767032623291
    7. ' ' → logprob: -19.2517032623291
    8. '...' → logprob: -19.5642032623291
    9. '۱' → logprob: -19.6267032623291
    10. '`' → logprob: -19.8767032623291

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -15.500109672546387
    4. '```' → logprob: -17.25010871887207
    5. '１' → logprob: -18.12510871887207
    6. '`' → logprob: -18.81260871887207
    7. '   ' → logprob: -19.06260871887207
    8. '...' → logprob: -19.25010871887207
    9. '[' → logprob: -19.31260871887207
    10. '<|end|>' → logprob: -19.56260871887207

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10967615991830826
    2. '   ' → logprob: -2.3596761226654053
    3. '    
' → logprob: -4.984676361083984
    4. '  
' → logprob: -6.984676361083984
    5. '
' → logprob: -7.859676361083984
    6. '   
' → logprob: -7.859676361083984
    7. '\n' → logprob: -8.109676361083984
    8. ' 
' → logprob: -8.484676361083984
    9. ' participants' → logprob: -9.359676361083984
    10. '```' → logprob: -9.484676361083984

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05859050527215004
    2. '
' → logprob: -2.9335904121398926
    3. '    
' → logprob: -5.683590412139893
    4. 'i' → logprob: -9.43359088897705
    5. ' i' → logprob: -9.55859088897705
    6. '
' → logprob: -10.18359088897705
    7. '  
' → logprob: -10.18359088897705
    8. ' 
' → logprob: -10.68359088897705
    9. '   
' → logprob: -11.18359088897705
    10. '\n' → logprob: -11.93359088897705

Token 77: ' participants' (ID: 17135)
  Prédit: 'participants'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'participants' (adapté à ' participants') → logprob: -0.4046383500099182
    2. '   ' → logprob: -1.2796382904052734
    3. ' participants' → logprob: -3.5296382904052734
    4. 'i' → logprob: -3.9046382904052734
    5. ' i' → logprob: -5.904638290405273
    6. ' ' → logprob: -6.154638290405273
    7. 'particip' → logprob: -9.279638290405273
    8. '  ' → logprob: -9.529638290405273
    9. '    
' → logprob: -10.154638290405273
    10. 'participant' → logprob: -10.279638290405273

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5120287066092715e-05
    2. '[i' → logprob: -10.625035285949707
    3. 'who' → logprob: -12.000035285949707
    4. '[w' → logprob: -13.500035285949707
    5. '```' → logprob: -14.125035285949707
    6. '[...]' → logprob: -14.875035285949707
    7. '[user' → logprob: -15.375035285949707
    8. 'Who' → logprob: -15.375035285949707
    9. ' who' → logprob: -15.500035285949707
    10. '   ' → logprob: -15.500035285949707

Token 79: 'who' (ID: 29997)
  Prédit: 'who'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'who' → logprob: -1.3425219549390022e-05
    2. ' who' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.37501335144043
    4. 'w' → logprob: -16.62501335144043
    5. ' ' → logprob: -18.00001335144043
    6. 'wo' → logprob: -19.50001335144043
    7. 'Who' → logprob: -19.50001335144043
    8. '[' → logprob: -20.12501335144043
    9. '```' → logprob: -20.12501335144043
    10. 'which' → logprob: -20.25001335144043

Token 80: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.07903453707695007
    2. 'answered' → logprob: -2.5790345668792725
    3. 'ANSWER' → logprob: -10.079034805297852
    4. 'Answered' → logprob: -10.329034805297852
    5. '_ans' → logprob: -10.704034805297852
    6. '_' → logprob: -10.829034805297852
    7. 'answer' → logprob: -11.579034805297852
    8. ' answered' → logprob: -12.204034805297852
    9. 'ans' → logprob: -12.454034805297852
    10. 'who' → logprob: -12.954034805297852

Token 81: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0031899516470730305
    2. 'd' → logprob: -5.753190040588379
    3. 'ED' → logprob: -12.753190040588379
    4. 'ded' → logprob: -13.378190040588379
    5. 'ered' → logprob: -13.628190040588379
    6. 'red' → logprob: -13.753190040588379
    7. ']' → logprob: -13.878190040588379
    8. '[' → logprob: -14.128190040588379
    9. 'eded' → logprob: -14.128190040588379
    10. '][' → logprob: -14.503190040588379

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001016971655189991
    2. '][' → logprob: -7.126017093658447
    3. ']' → logprob: -8.626016616821289
    4. '[' → logprob: -11.001016616821289
    5. 'i' → logprob: -12.501016616821289
    6. '[I' → logprob: -12.626016616821289
    7. '[
' → logprob: -12.751016616821289
    8. '])' → logprob: -12.876016616821289
    9. ']][' → logprob: -14.626016616821289
    10. ')' → logprob: -14.751016616821289

Token 83: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0051481276750564575
    2. ']+=' → logprob: -5.380147933959961
    3. ']]' → logprob: -7.630147933959961
    4. ']+' → logprob: -10.755147933959961
    5. ' ]' → logprob: -11.755147933959961
    6. ')]' → logprob: -11.880147933959961
    7. '`]' → logprob: -13.380147933959961
    8. '']' → logprob: -14.130147933959961
    9. ')' → logprob: -14.380147933959961
    10. '   ' → logprob: -14.505147933959961

Token 84: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4753497838973999
    2. '+=' → logprob: -0.9753497838973999
    3. '=' → logprob: -7.6003499031066895
    4. '+' → logprob: -8.100349426269531
    5. ']+=' → logprob: -8.350349426269531
    6. '[' → logprob: -9.100349426269531
    7. ' -=' → logprob: -9.850349426269531
    8. ' =' → logprob: -10.475349426269531
    9. '```' → logprob: -11.725349426269531
    10. ' ' → logprob: -11.725349426269531

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '+' → logprob: -16.000009536743164
    4. '   ' → logprob: -16.375009536743164
    5. '<|end|>' → logprob: -18.187509536743164
    6. '１' → logprob: -18.625009536743164
    7. '  ' → logprob: -18.875009536743164
    8. 'a' → logprob: -19.062509536743164
    9. '۱' → logprob: -19.312509536743164
    10. '>' → logprob: -19.375009536743164

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.125015258789062
    4. '+' → logprob: -16.875015258789062
    5. '  ' → logprob: -17.125015258789062
    6. '１' → logprob: -17.750015258789062
    7. '۱' → logprob: -17.750015258789062
    8. 'a' → logprob: -17.937515258789062
    9. '2' → logprob: -18.250015258789062
    10. '१' → logprob: -18.375015258789062

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028084440156817436
    2. '
' → logprob: -3.6530845165252686
    3. '    
' → logprob: -7.5280842781066895
    4. '	i' → logprob: -7.9030842781066895
    5. 'i' → logprob: -8.028084754943848
    6. ' i' → logprob: -8.153084754943848
    7. '\n' → logprob: -8.653084754943848
    8. '[i' → logprob: -11.153084754943848
    9. '```' → logprob: -11.153084754943848
    10. '  
' → logprob: -11.403084754943848

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002236258937045932
    2. '
' → logprob: -6.377236366271973
    3. 'i' → logprob: -7.877236366271973
    4. '    
' → logprob: -9.752236366271973
    5. '	i' → logprob: -10.127236366271973
    6. ' i' → logprob: -10.752236366271973
    7. '\n' → logprob: -11.252236366271973
    8. '```' → logprob: -11.252236366271973
    9. '[i' → logprob: -12.877236366271973
    10. 'n' → logprob: -13.877236366271973

Token 89: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1927378624677658
    2. 'i' (adapté à ' i') → logprob: -1.9427378177642822
    3. ' i' → logprob: -3.4427378177642822
    4. '	i' → logprob: -11.442737579345703
    5. '
' → logprob: -13.942737579345703
    6. '    
' → logprob: -14.192737579345703
    7. ' ' → logprob: -14.567737579345703
    8. '```' → logprob: -15.192737579345703
    9. '1' → logprob: -16.067737579345703
    10. '  ' → logprob: -16.192737579345703

Token 90: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1804196685552597
    2. '+' → logprob: -2.055419683456421
    3. ' +=' → logprob: -3.305419683456421
    4. '=' → logprob: -8.430419921875
    5. '<|end|>' → logprob: -9.430419921875
    6. '+='' → logprob: -11.055419921875
    7. '+="' → logprob: -11.180419921875
    8. '++' → logprob: -11.305419921875
    9. ' ' → logprob: -11.930419921875
    10. '+
' → logprob: -13.055419921875

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -18.75004005432129
    4. '１' → logprob: -20.62504005432129
    5. '   ' → logprob: -20.75004005432129
    6. ' ' → logprob: -22.12504005432129
    7. '۱' → logprob: -22.62504005432129
    8. '0' → logprob: -23.37504005432129
    9. '‌' → logprob: -23.62504005432129
    10. '  ' → logprob: -23.62504005432129

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.25
    4. '１' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '۱' → logprob: -20.6875
    7. '`' → logprob: -21.3125
    8. '2' → logprob: -21.5
    9. '१' → logprob: -21.625
    10. '  ' → logprob: -21.875

Token 93: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4018245339393616
    2. '
' → logprob: -1.1518244743347168
    3. '

' → logprob: -4.651824474334717
    4. 'i' → logprob: -6.026824474334717
    5. '\n' → logprob: -6.901824474334717
    6. ' for' → logprob: -7.276824474334717
    7. '
' → logprob: -8.026824951171875
    8. '```' → logprob: -8.526824951171875
    9. 'f' → logprob: -9.401824951171875
    10. 'print' → logprob: -9.401824951171875

Token 94: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04419848695397377
    2. 'i' → logprob: -3.169198513031006
    3. '
' → logprob: -7.794198513031006
    4. ' for' → logprob: -8.544198036193848
    5. 'result' → logprob: -8.794198036193848
    6. 'j' → logprob: -9.044198036193848
    7. 'print' → logprob: -9.169198036193848
    8. 'answer' → logprob: -9.544198036193848
    9. '```' → logprob: -10.544198036193848
    10. 'ans' → logprob: -10.919198036193848

Token 95: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520402669906616
    2. ' ' → logprob: -1.5020402669906616
    3. ' Q' → logprob: -10.127039909362793
    4. ' K' → logprob: -10.627039909362793
    5. '1' → logprob: -11.252039909362793
    6. 'Q' → logprob: -11.252039909362793
    7. 'K' → logprob: -11.752039909362793
    8. ' N' → logprob: -12.314539909362793
    9. 'N' → logprob: -13.064539909362793
    10. ' ' → logprob: -13.752039909362793

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008272562408819795
    2. ' ' → logprob: -7.250827312469482
    3. 'Q' → logprob: -9.500826835632324
    4. '1' → logprob: -10.625826835632324
    5. 'K' → logprob: -11.625826835632324
    6. ' Q' → logprob: -13.313326835632324
    7. 'i' → logprob: -13.563326835632324
    8. 'N' → logprob: -13.688326835632324
    9. 'len' → logprob: -14.313326835632324
    10. '-' → logprob: -14.563326835632324

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012872648425400257
    2. 'while' → logprob: -4.512872695922852
    3. '<|end|>' → logprob: -6.512872695922852
    4. ' while' → logprob: -8.512872695922852
    5. '\n' → logprob: -9.137872695922852
    6. ' 
' → logprob: -11.637872695922852
    7. '
' → logprob: -11.887872695922852
    8. '<|end|>' → logprob: -12.387872695922852
    9. '  
' → logprob: -13.012872695922852
    10. '```' → logprob: -13.262872695922852

Token 99: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00012332366895861924
    2. ' while' → logprob: -9.125123023986816
    3. '
' → logprob: -11.750123023986816
    4. '<|end|>' → logprob: -12.750123023986816
    5. '```' → logprob: -13.375123023986816
    6. '\n' → logprob: -13.750123023986816
    7. 'print' → logprob: -15.500123023986816
    8. 'While' → logprob: -15.625123023986816
    9. '	while' → logprob: -15.875123023986816
    10. '\' → logprob: -16.000123977661133

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20290760695934296
    2. 'i' → logprob: -1.7029075622558594
    3. ' N' → logprob: -7.327907562255859
    4. 'N' → logprob: -7.327907562255859
    5. ' ' → logprob: -8.95290756225586
    6. ' n' → logprob: -11.07790756225586
    7. '	i' → logprob: -11.32790756225586
    8. 'n' → logprob: -11.45290756225586
    9. '   ' → logprob: -12.45290756225586
    10. ' ' → logprob: -13.20290756225586

Token 101: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20306114852428436
    2. '<' → logprob: -1.7030611038208008
    3. '<N' → logprob: -6.453061103820801
    4. '<n' → logprob: -9.9530611038208
    5. ' ' → logprob: -11.5780611038208
    6. ' N' → logprob: -12.0780611038208
    7. 'N' → logprob: -12.9530611038208
    8. ' <
' → logprob: -12.9530611038208
    9. '<Q' → logprob: -13.0780611038208
    10. '<len' → logprob: -14.5780611038208

Token 102: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001946725882589817
    2. ' N' → logprob: -6.251946926116943
    3. 'len' → logprob: -11.251946449279785
    4. ' len' → logprob: -13.126946449279785
    5. 'n' → logprob: -13.626946449279785
    6. ' ' → logprob: -13.751946449279785
    7. '   ' → logprob: -14.251946449279785
    8. '	N' → logprob: -16.0019474029541
    9. '  ' → logprob: -16.2519474029541
    10. '```' → logprob: -17.8769474029541

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05490146577358246
    2. ':
' → logprob: -2.929901361465454
    3. '   ' → logprob: -11.929901123046875
    4. ':

' → logprob: -12.679901123046875
    5. ' :' → logprob: -13.429901123046875
    6. ':
' → logprob: -13.429901123046875
    7. '):
' → logprob: -13.804901123046875
    8. '
' → logprob: -13.804901123046875
    9. ' :
' → logprob: -14.054901123046875
    10. '<|end|>' → logprob: -14.179901123046875

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01912251114845276
    2. ' if' → logprob: -4.39412260055542
    3. '
' → logprob: -5.39412260055542
    4. 'if' → logprob: -7.14412260055542
    5. '<|end|>' → logprob: -7.64412260055542
    6. 'print' → logprob: -7.89412260055542
    7. '	if' → logprob: -9.019122123718262
    8. ' print' → logprob: -9.269122123718262
    9. '    
' → logprob: -9.644122123718262
    10. '<|end|>' → logprob: -10.519122123718262

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45197054743766785
    2. '   ' → logprob: -1.4519705772399902
    3. ' print' → logprob: -2.2019705772399902
    4. 'if' (adapté à ' if') → logprob: -4.45197057723999
    5. 'print' → logprob: -4.95197057723999
    6. '
' → logprob: -9.076970100402832
    7. '	if' → logprob: -11.201970100402832
    8. ' ' → logprob: -11.326970100402832
    9. '\n' → logprob: -11.326970100402832
    10. '    
' → logprob: -11.576970100402832

Token 106: ' participants' (ID: 17135)
  Prédit: ' participants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' participants' → logprob: -0.11290930956602097
    2. 'participants' → logprob: -2.2379093170166016
    3. '   ' → logprob: -9.737909317016602
    4. ' ' → logprob: -11.112909317016602
    5. 'particip' → logprob: -12.737909317016602
    6. ' participantes' → logprob: -12.987909317016602
    7. '	' → logprob: -13.737909317016602
    8. ' ' → logprob: -13.987909317016602
    9. ' partic' → logprob: -14.112909317016602
    10. ' participant' → logprob: -14.112909317016602

Token 107: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.000003814697266
    3. ' [' → logprob: -13.625003814697266
    4. 'i' → logprob: -16.625003814697266
    5. ' ' → logprob: -17.500003814697266
    6. '```' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '[
' → logprob: -18.625003814697266
    9. '[int' → logprob: -18.625003814697266
    10. '
' → logprob: -18.875003814697266

Token 108: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0684962272644043
    2. '>' → logprob: -1.4434962272644043
    3. '<=' → logprob: -1.4434962272644043
    4. ' >' → logprob: -1.6934962272644043
    5. '>=' → logprob: -9.193496704101562
    6. '>K' → logprob: -9.443496704101562
    7. '<' → logprob: -10.193496704101562
    8. ' <' → logprob: -10.443496704101562
    9. ' ' → logprob: -10.693496704101562
    10. ' >=' → logprob: -10.818496704101562

Token 109: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7513108253479004
    2. '>' → logprob: -0.8763108253479004
    3. ' <=' → logprob: -2.6263108253479004
    4. ' >' → logprob: -3.2513108253479004
    5. '>=' → logprob: -7.8763108253479
    6. '>K' → logprob: -8.626310348510742
    7. '<' → logprob: -8.876310348510742
    8. '+' → logprob: -10.626310348510742
    9. ' ' → logprob: -11.001310348510742
    10. ' <' → logprob: -11.376310348510742

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22548246383666992
    2. ' ' → logprob: -2.47548246383667
    3. '=' → logprob: -2.60048246383667
    4. ' Q' → logprob: -3.60048246383667
    5. 'Q' → logprob: -4.22548246383667
    6. '=(' → logprob: -6.97548246383667
    7. ' K' → logprob: -8.725482940673828
    8. '	Q' → logprob: -9.475482940673828
    9. ' (' → logprob: -9.600482940673828
    10. '(Q' → logprob: -9.600482940673828

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001257972209714353
    2. ' ' → logprob: -7.37625789642334
    3. '=' → logprob: -7.87625789642334
    4. 'Q' → logprob: -8.37625789642334
    5. ' Q' → logprob: -11.37625789642334
    6. '(Q' → logprob: -13.37625789642334
    7. '(' → logprob: -13.50125789642334
    8. '=(' → logprob: -13.87625789642334
    9. '   ' → logprob: -13.87625789642334
    10. '  ' → logprob: -14.62625789642334

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16118665039539337
    2. ':
' → logprob: -1.911186695098877
    3. '   ' → logprob: -7.286186695098877
    4. ' and' → logprob: -9.286186218261719
    5. ' or' → logprob: -10.161186218261719
    6. ':\' → logprob: -10.411186218261719
    7. '       ' → logprob: -10.661186218261719
    8. 'print' → logprob: -10.911186218261719
    9. ' :' → logprob: -11.286186218261719
    10. '.' → logprob: -11.286186218261719

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.744026243686676
    2. '   ' → logprob: -1.2440261840820312
    3. ' print' → logprob: -1.4940261840820312
    4. 'print' → logprob: -4.744026184082031
    5. '\n' → logprob: -7.244026184082031
    6. ' ' → logprob: -7.244026184082031
    7. ''' → logprob: -7.869026184082031
    8. '    ' → logprob: -8.369026184082031
    9. '	print' → logprob: -8.494026184082031
    10. ' '' → logprob: -8.869026184082031

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.41994982957839966
    2. ' print' → logprob: -1.5449497699737549
    3. '   ' → logprob: -2.044949769973755
    4. '       ' → logprob: -9.294949531555176
    5. '	print' → logprob: -9.669949531555176
    6. ' ' → logprob: -11.044949531555176
    7. '    ' → logprob: -11.669949531555176
    8. 'pr' → logprob: -12.044949531555176
    9. '   ' → logprob: -12.669949531555176
    10. '```' → logprob: -12.794949531555176

Token 115: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01584959402680397
    2. '('' → logprob: -4.515849590301514
    3. '"' → logprob: -5.515849590301514
    4. '(' → logprob: -7.515849590301514
    5. ''' → logprob: -8.890850067138672
    6. ' ("' → logprob: -9.890850067138672
    7. ' "' → logprob: -10.765850067138672
    8. '   ' → logprob: -12.265850067138672
    9. ' ' → logprob: -13.640850067138672
    10. '"A' → logprob: -13.640850067138672

Token 116: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.004387744702398777
    2. ''' → logprob: -6.004387855529785
    3. '"' → logprob: -6.754387855529785
    4. ' Yes' → logprob: -7.879387855529785
    5. ''A' → logprob: -9.254387855529785
    6. 'YES' → logprob: -9.629387855529785
    7. 'No' → logprob: -10.129387855529785
    8. 'A' → logprob: -11.004387855529785
    9. 'yes' → logprob: -11.254387855529785
    10. '_yes' → logprob: -11.254387855529785

Token 117: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.05114161968231201
    2. '')' → logprob: -3.0511417388916016
    3. ')
' → logprob: -6.051141738891602
    4. ')' → logprob: -9.426141738891602
    5. '')
' → logprob: -9.426141738891602
    6. '")
' → logprob: -11.426141738891602
    7. '');' → logprob: -12.301141738891602
    8. '   ' → logprob: -12.426141738891602
    9. ' ')
' → logprob: -12.426141738891602
    10. ''' → logprob: -12.676141738891602

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0056509822607040405
    2. 'else' → logprob: -5.505650997161865
    3. ' else' → logprob: -6.505650997161865
    4. '	else' → logprob: -10.630650520324707
    5. ' ' → logprob: -10.755650520324707
    6. '
' → logprob: -11.755650520324707
    7. '    
' → logprob: -12.130650520324707
    8. '<|end|>' → logprob: -12.130650520324707
    9. '   ' → logprob: -12.755650520324707
    10. '```' → logprob: -13.505650520324707

Token 119: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.611360490322113
    2. 'else' (adapté à ' else') → logprob: -0.861360490322113
    3. ' else' → logprob: -3.361360549926758
    4. '	else' → logprob: -9.361360549926758
    5. ' ' → logprob: -10.736360549926758
    6. '  ' → logprob: -13.236360549926758
    7. '
' → logprob: -13.486360549926758
    8. 'i' → logprob: -14.486360549926758
    9. ' ' → logprob: -15.111360549926758
    10. '    
' → logprob: -15.236360549926758

Token 120: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2537488043308258
    2. ':' → logprob: -1.5037487745285034
    3. ':
' → logprob: -6.378748893737793
    4. '   ' → logprob: -9.378748893737793
    5. ' :' → logprob: -11.378748893737793
    6. ' print' → logprob: -12.628748893737793
    7. '     ' → logprob: -12.753748893737793
    8. ' :
' → logprob: -12.753748893737793
    9. '      ' → logprob: -13.128748893737793
    10. 'print' → logprob: -13.128748893737793

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.015305552864447e-05
    2. '   ' → logprob: -10.000060081481934
    3. 'print' → logprob: -11.500060081481934
    4. ' print' → logprob: -13.375060081481934
    5. '	   ' → logprob: -14.250060081481934
    6. '    ' → logprob: -14.500060081481934
    7. '     ' → logprob: -14.750060081481934
    8. '           ' → logprob: -15.000060081481934
    9. '    ' → logprob: -15.000060081481934
    10. '	' → logprob: -15.250060081481934

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04913455247879028
    2. ' print' → logprob: -3.0491344928741455
    3. '   ' → logprob: -7.549134731292725
    4. '       ' → logprob: -11.299134254455566
    5. '	print' → logprob: -12.174134254455566
    6. ' ' → logprob: -13.424134254455566
    7. '    ' → logprob: -14.299134254455566
    8. '  ' → logprob: -14.799134254455566
    9. 'Print' → logprob: -15.424134254455566
    10. '.print' → logprob: -15.549134254455566

Token 123: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.004080658778548241
    2. '(' → logprob: -5.504080772399902
    3. '("' → logprob: -14.004080772399902
    4. ' ('' → logprob: -14.379080772399902
    5. '()' → logprob: -15.004080772399902
    6. '(
' → logprob: -15.129080772399902
    7. ''' → logprob: -15.504080772399902
    8. ' (' → logprob: -16.379079818725586
    9. '(

' → logprob: -18.504079818725586
    10. '(`' → logprob: -18.879079818725586

Token 124: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.868328920158092e-05
    2. ''' → logprob: -10.500028610229492
    3. ' No' → logprob: -13.875028610229492
    4. '"No' → logprob: -16.500028610229492
    5. 'NO' → logprob: -17.625028610229492
    6. '   ' → logprob: -18.125028610229492
    7. '_No' → logprob: -18.750028610229492
    8. ' ' → logprob: -19.125028610229492
    9. '')' → logprob: -19.375028610229492
    10. '>No' → logprob: -19.875028610229492

Token 125: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0773843452334404
    2. ')' → logprob: -3.0773842334747314
    3. '')
' → logprob: -3.5773842334747314
    4. ')
' → logprob: -7.8273844718933105
    5. '   ' → logprob: -10.702383995056152
    6. ')')
' → logprob: -11.202383995056152
    7. '")' → logprob: -13.452383995056152
    8. ')'
' → logprob: -14.452383995056152
    9. '')
' → logprob: -15.702383995056152
    10. ''' → logprob: -16.07738494873047

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010723850573413074
    2. 'i' → logprob: -9.875106811523438
    3. ' i' → logprob: -10.875106811523438
    4. '<|end|>' → logprob: -11.375106811523438
    5. '	i' → logprob: -11.500106811523438
    6. '
' → logprob: -12.500106811523438
    7. ',i' → logprob: -12.625106811523438
    8. '[i' → logprob: -13.125106811523438
    9. '    
' → logprob: -13.500106811523438
    10. ')i' → logprob: -14.125106811523438

Token 127: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03288121148943901
    2. 'i' (adapté à ' i') → logprob: -3.532881259918213
    3. ' i' → logprob: -5.782881259918213
    4. '	i' → logprob: -10.032880783081055
    5. '    
' → logprob: -14.782880783081055
    6. ' ' → logprob: -14.782880783081055
    7. ',i' → logprob: -14.907880783081055
    8. '  ' → logprob: -15.532880783081055
    9. '[i' → logprob: -15.532880783081055
    10. '   ' → logprob: -15.657880783081055

Token 128: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003518233075737953
    2. '+' → logprob: -6.003518104553223
    3. ' +=' → logprob: -6.878518104553223
    4. '=' → logprob: -11.628518104553223
    5. '++' → logprob: -13.628518104553223
    6. '+="' → logprob: -14.003518104553223
    7. ']+=' → logprob: -14.503518104553223
    8. '+='' → logprob: -14.753518104553223
    9. '<|end|>' → logprob: -15.878518104553223
    10. '+
' → logprob: -16.12851905822754

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.875024795532227
    4. '```' → logprob: -18.875024795532227
    5. '１' → logprob: -19.500024795532227
    6. '  ' → logprob: -20.312524795532227
    7. ' ' → logprob: -20.500024795532227
    8. '۱' → logprob: -21.937524795532227
    9. '
' → logprob: -22.062524795532227
    10. '	' → logprob: -22.500024795532227

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.625
    5. '１' → logprob: -20.625
    6. '  ' → logprob: -22.125
    7. '۱' → logprob: -22.375
    8. '<|end|>' → logprob: -22.5625
    9. '
' → logprob: -22.625
    10. '१' → logprob: -22.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 128
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 50.78%
Précision adaptée (1ère position): 53.91%
Précision (top 10): 84.38%
================================================================================
