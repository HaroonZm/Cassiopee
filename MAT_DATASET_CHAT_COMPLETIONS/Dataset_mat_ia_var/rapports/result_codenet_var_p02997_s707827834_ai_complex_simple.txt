================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import mul
from functools import reduce, partial
import sys

N, K = map(int, sys.stdin.readline().split())

comb = lambda n, r: reduce(mul, range(n - r + 1, n + 1), 1) // reduce(mul, range(1, r + 1), 1) if 0 <= r <= n else 0

lim = comb(N - 1, 2)
if K > lim:
    print(-1)
    sys.exit()

edges = list(map(lambda i: (1, i), range(2, N + 1)))
pairs = ((i, j) for i in range(2, N + 1) for j in range(i + 1, N + 1))
slim = lim - K
edges2 = [p for idx, p in enumerate(pairs) if idx < slim]
edges.extend(edges2)
print(len(edges))
print('\n'.join(map(lambda uv: f"{uv[0]} {uv[1]}", edges)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' mul' (ID: 9975)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7355836629867554
    2. ' item' → logprob: -0.9855836629867554
    3. 'item' → logprob: -2.110583782196045
    4. 'import' → logprob: -4.110583782196045
    5. ' add' → logprob: -5.360583782196045
    6. 'add' → logprob: -6.360583782196045
    7. ' ' → logprob: -6.735583782196045
    8. 'attr' → logprob: -7.235583782196045
    9. ' attr' → logprob: -7.485583782196045
    10. 'getitem' → logprob: -7.985583782196045

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024354619905352592
    2. '*' → logprob: -3.8993546962738037
    3. ' (' → logprob: -6.149354457855225
    4. ',' → logprob: -6.774354457855225
    5. 'import' → logprob: -9.774354934692383
    6. '**' → logprob: -9.774354934692383
    7. '\(' → logprob: -9.774354934692383
    8. '*(' → logprob: -9.899354934692383
    9. '(
' → logprob: -10.149354934692383
    10. '```' → logprob: -10.149354934692383

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6430701017379761
    2. '*' → logprob: -0.8930701017379761
    3. ',' → logprob: -2.8930702209472656
    4. '(
' → logprob: -6.393070220947266
    5. '**' → logprob: -6.893070220947266
    6. 'from' → logprob: -7.143070220947266
    7. '\(' → logprob: -7.268070220947266
    8. '.' → logprob: -7.393070220947266
    9. 'import' → logprob: -7.518070220947266
    10. '#' → logprob: -7.518070220947266

Token 6: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.5479772686958313
    2. 'fun' → logprob: -0.9229772686958313
    3. ' itertools' → logprob: -3.9229772090911865
    4. 'math' → logprob: -5.797977447509766
    5. 'operator' → logprob: -7.172977447509766
    6. ' math' → logprob: -7.422977447509766
    7. '_' → logprob: -9.047977447509766
    8. '_fun' → logprob: -9.547977447509766
    9. ' operator' → logprob: -10.047977447509766
    10. 'it' → logprob: -10.297977447509766

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.44289854168891907
    2. 'import' → logprob: -1.0678985118865967
    3. '_import' → logprob: -5.067898750305176
    4. '.' → logprob: -5.817898750305176
    5. '_' → logprob: -6.317898750305176
    6. '.import' → logprob: -6.317898750305176
    7. '	import' → logprob: -7.942898750305176
    8. '._' → logprob: -8.317898750305176
    9. '```' → logprob: -8.317898750305176
    10. ' .' → logprob: -8.692898750305176

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.03491925820708275
    2. ' reduce' → logprob: -3.409919261932373
    3. 'partial' → logprob: -6.784919261932373
    4. ' partial' → logprob: -9.284918785095215
    5. 'import' → logprob: -10.534918785095215
    6. 'redu' → logprob: -11.409918785095215
    7. '.reduce' → logprob: -12.659918785095215
    8. '_reduce' → logprob: -12.909918785095215
    9. 'wrap' → logprob: -13.284918785095215
    10. ' import' → logprob: -14.034918785095215

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06017518416047096
    2. '(
' → logprob: -2.9351751804351807
    3. 'def' → logprob: -6.68517541885376
    4. '\' → logprob: -6.68517541885376
    5. '\n' → logprob: -7.06017541885376
    6. '`' → logprob: -7.93517541885376
    7. '(

' → logprob: -8.185174942016602
    8. '\(' → logprob: -8.310174942016602
    9. '(lambda' → logprob: -8.685174942016602
    10. '```' → logprob: -8.935174942016602

Token 10: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.01017132680863142
    2. ' partial' → logprob: -4.635171413421631
    3. 'wrap' → logprob: -8.760170936584473
    4. 'reduce' → logprob: -9.010170936584473
    5. 'l' → logprob: -10.135170936584473
    6. '.partial' → logprob: -10.510170936584473
    7. '```' → logprob: -11.010170936584473
    8. 'import' → logprob: -11.135170936584473
    9. 'cmp' → logprob: -12.010170936584473
    10. 'operator' → logprob: -12.635170936584473

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010531526058912277
    2. '(
' → logprob: -4.885531425476074
    3. '\n' → logprob: -6.760531425476074
    4. 'def' → logprob: -7.885531425476074
    5. '\' → logprob: -8.135531425476074
    6. ',' → logprob: -8.135531425476074
    7. '`' → logprob: -9.135531425476074
    8. '#' → logprob: -9.135531425476074
    9. '(

' → logprob: -9.135531425476074
    10. '(max' → logprob: -9.760531425476074

Token 12: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1131538674235344
    2. 'def' → logprob: -2.7381539344787598
    3. '(
' → logprob: -3.9881539344787598
    4. '\' → logprob: -4.98815393447876
    5. '\n' → logprob: -5.11315393447876
    6. 'm' → logprob: -6.36315393447876
    7. '`' → logprob: -6.86315393447876
    8. 'd' → logprob: -6.98815393447876
    9. '(m' → logprob: -6.98815393447876
    10. ',' → logprob: -7.11315393447876

Token 13: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.27870550751686096
    2. ' itertools' → logprob: -1.5287054777145386
    3. ' os' → logprob: -4.278705596923828
    4. ' operator' → logprob: -4.903705596923828
    5. ' functools' → logprob: -5.528705596923828
    6. ' collections' → logprob: -7.653705596923828
    7. ' numpy' → logprob: -8.278705596923828
    8. ' sys' → logprob: -8.903705596923828
    9. ' random' → logprob: -9.028705596923828
    10. ' re' → logprob: -9.778705596923828

Token 14: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.907809317111969
    2. '\' → logprob: -1.9078092575073242
    3. ',' → logprob: -2.032809257507324
    4. 'def' → logprob: -2.157809257507324
    5. 'sys' → logprob: -2.907809257507324
    6. 'import' → logprob: -3.282809257507324
    7. '```' → logprob: -3.907809257507324
    8. '
' → logprob: -3.907809257507324
    9. '

' → logprob: -4.282809257507324
    10. ',
' → logprob: -4.532809257507324

Token 15: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16777071356773376
    2. '#' → logprob: -3.6677706241607666
    3. '\' → logprob: -3.9177706241607666
    4. 'print' → logprob: -4.042770862579346
    5. ',' → logprob: -4.417770862579346
    6. '=' → logprob: -4.542770862579346
    7. 'sys' → logprob: -4.542770862579346
    8. '(' → logprob: -4.667770862579346
    9. '`' → logprob: -4.792770862579346
    10. '*' → logprob: -4.792770862579346

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6699365377426147
    2. '=' → logprob: -0.9199365377426147
    3. '_' → logprob: -2.6699366569519043
    4. '.' → logprob: -4.919936656951904
    5. ' ' → logprob: -5.169936656951904
    6. ',' → logprob: -5.294936656951904
    7. ')' → logprob: -7.419936656951904
    8. '  ' → logprob: -7.919936656951904
    9. '[' → logprob: -8.544936180114746
    10. '   ' → logprob: -8.919936180114746

Token 17: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5975459218025208
    2. 'M' → logprob: -1.222545862197876
    3. ' K' → logprob: -2.472545862197876
    4. ' M' → logprob: -3.097545862197876
    5. ' ' → logprob: -4.472546100616455
    6. 'input' → logprob: -6.222546100616455
    7. '=' → logprob: -6.347546100616455
    8. ' =' → logprob: -6.847546100616455
    9. '*' → logprob: -6.847546100616455
    10. 'a' → logprob: -6.847546100616455

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804286941885948
    2. '=' → logprob: -3.2880427837371826
    3. '=input' → logprob: -14.538043022155762
    4. ' ' → logprob: -15.288043022155762
    5. ',' → logprob: -15.413043022155762
    6. ' =
' → logprob: -15.913043022155762
    7. '=int' → logprob: -16.038042068481445
    8. '=sys' → logprob: -16.538042068481445
    9. ')' → logprob: -16.663042068481445
    10. ' =",' → logprob: -17.538042068481445

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03864448890089989
    2. 'map' → logprob: -3.288644552230835
    3. ' ' → logprob: -7.538644313812256
    4. ' sys' → logprob: -10.163644790649414
    5. '5' → logprob: -12.163644790649414
    6. ' [' → logprob: -12.788644790649414
    7. '10' → logprob: -12.788644790649414
    8. ' list' → logprob: -12.788644790649414
    9. '0' → logprob: -12.913644790649414
    10. ' input' → logprob: -13.163644790649414

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.057500310242176056
    2. '(' → logprob: -3.3075003623962402
    3. '(lambda' → logprob: -4.18250036239624
    4. '(str' → logprob: -5.80750036239624
    5. '(input' → logprob: -7.55750036239624
    6. 'int' → logprob: -8.932499885559082
    7. '(tuple' → logprob: -9.057499885559082
    8. '(sys' → logprob: -9.932499885559082
    9. '(len' → logprob: -10.682499885559082
    10. 'input' → logprob: -10.807499885559082

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047786712646484375
    2. ',input' → logprob: -3.5477867126464844
    3. '(sys' → logprob: -4.172786712646484
    4. '(' → logprob: -6.547786712646484
    5. '(input' → logprob: -7.422786712646484
    6. 'input' → logprob: -9.172786712646484
    7. ')' → logprob: -9.297786712646484
    8. 'sys' → logprob: -9.672786712646484
    9. ',int' → logprob: -10.047786712646484
    10. '=sys' → logprob: -10.172786712646484

Token 22: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6715753078460693
    2. 'input' → logprob: -1.1715753078460693
    3. ' sys' → logprob: -1.9215753078460693
    4. ' input' → logprob: -3.4215753078460693
    5. ')' → logprob: -8.796575546264648
    6. '(sys' → logprob: -11.171575546264648
    7. ' )' → logprob: -12.171575546264648
    8. '=sys' → logprob: -12.296575546264648
    9. ' ' → logprob: -13.296575546264648
    10. 'str' → logprob: -13.921575546264648

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.019532460719347
    2. '.' → logprob: -4.644532680511475
    3. '.argv' → logprob: -4.644532680511475
    4. '.stdout' → logprob: -9.894532203674316
    5. '.readline' → logprob: -10.394532203674316
    6. ' .' → logprob: -11.769532203674316
    7. '.st' → logprob: -12.269532203674316
    8. '.std' → logprob: -12.269532203674316
    9. '.input' → logprob: -12.644532203674316
    10. '._' → logprob: -13.144532203674316

Token 24: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006804660428315401
    2. '.read' → logprob: -5.006804466247559
    3. '.' → logprob: -9.631804466247559
    4. '.readlines' → logprob: -10.881804466247559
    5. ').' → logprob: -13.131804466247559
    6. '.stdin' → logprob: -13.381804466247559
    7. '.buffer' → logprob: -15.131804466247559
    8. ')' → logprob: -15.256804466247559
    9. ' .' → logprob: -15.256804466247559
    10. '.input' → logprob: -16.006805419921875

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002969857305288315
    2. '())' → logprob: -5.877969741821289
    3. '()' → logprob: -9.377969741821289
    4. ')' → logprob: -9.502969741821289
    5. '.readline' → logprob: -13.002969741821289
    6. '()))' → logprob: -14.002969741821289
    7. '(),' → logprob: -14.502969741821289
    8. '()).' → logprob: -15.127969741821289
    9. '(' → logprob: -15.252969741821289
    10. '());' → logprob: -15.377969741821289

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5891323685646057
    2. 'strip' → logprob: -0.8391323685646057
    3. 'rstrip' → logprob: -4.339132308959961
    4. 'read' → logprob: -9.839132308959961
    5. 'rs' → logprob: -12.714132308959961
    6. ' split' → logprob: -13.714132308959961
    7. ' strip' → logprob: -14.714132308959961
    8. 'rst' → logprob: -15.339132308959961
    9. ')' → logprob: -15.464132308959961
    10. 'decode' → logprob: -16.83913230895996

Token 27: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865356534719467
    2. '))' → logprob: -3.0486536026000977
    3. '())' → logprob: -10.048653602600098
    4. '()' → logprob: -11.298653602600098
    5. '),' → logprob: -12.298653602600098
    6. ')))' → logprob: -13.173653602600098
    7. '()))' → logprob: -13.673653602600098
    8. ')
' → logprob: -13.798653602600098
    9. '`)' → logprob: -14.548653602600098
    10. ')`' → logprob: -15.298653602600098

Token 28: 'comb' (ID: 43606)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7528338432312012
    2. 'factor' → logprob: -1.6278338432312012
    3. 'a' → logprob: -2.752833843231201
    4. 'def' → logprob: -3.252833843231201
    5. ')' → logprob: -3.502833843231201
    6. 'arr' → logprob: -4.002833843231201
    7. 'numbers' → logprob: -4.252833843231201
    8. 'count' → logprob: -4.377833843231201
    9. 'data' → logprob: -4.377833843231201
    10. 'f' → logprob: -4.502833843231201

Token 29: ' =' (ID: 314)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.41092708706855774
    2. 'ine' → logprob: -1.4109270572662354
    3. 'inations' → logprob: -3.5359270572662354
    4. 'in' → logprob: -3.5359270572662354
    5. '```' → logprob: -4.1609272956848145
    6. 'inate' → logprob: -5.4109272956848145
    7. 'ina' → logprob: -5.4109272956848145
    8. '()' → logprob: -5.9109272956848145
    9. 'inação' → logprob: -6.6609272956848145
    10. 'inator' → logprob: -7.2859272956848145

Token 30: ' lambda' (ID: 27871)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.3311290740966797
    2. ' partial' → logprob: -1.3311290740966797
    3. ' lambda' → logprob: -4.70612907409668
    4. 'lambda' → logprob: -5.08112907409668
    5. '(part' → logprob: -6.70612907409668
    6. 'reduce' → logprob: -7.70612907409668
    7. '(lambda' → logprob: -8.20612907409668
    8. ' reduce' → logprob: -9.45612907409668
    9. '.partial' → logprob: -9.58112907409668
    10. ' ' → logprob: -9.70612907409668

Token 31: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5313857197761536
    2. 'n' → logprob: -1.0313856601715088
    3. ' lambda' → logprob: -4.031385898590088
    4. 'lambda' → logprob: -4.031385898590088
    5. 'a' → logprob: -4.406385898590088
    6. ' a' → logprob: -5.156385898590088
    7. 'f' → logprob: -7.031385898590088
    8. ' ' → logprob: -7.906385898590088
    9. ' f' → logprob: -8.03138542175293
    10. 'N' → logprob: -8.78138542175293

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002684087259694934
    2. ',k' → logprob: -6.127684116363525
    3. ',n' → logprob: -8.877683639526367
    4. ',x' → logprob: -9.252683639526367
    5. ':' → logprob: -9.627683639526367
    6. ',i' → logprob: -10.002683639526367
    7. ',:' → logprob: -10.127683639526367
    8. ' ,' → logprob: -10.127683639526367
    9. ',r' → logprob: -10.377683639526367
    10. ',m' → logprob: -11.877683639526367

Token 33: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09043662250041962
    2. 'r' → logprob: -2.4654366970062256
    3. ' k' → logprob: -6.7154364585876465
    4. ' r' → logprob: -8.215436935424805
    5. 'm' → logprob: -12.465436935424805
    6. 'K' → logprob: -12.590436935424805
    7. 'x' → logprob: -12.840436935424805
    8. 'i' → logprob: -13.965436935424805
    9. ' ' → logprob: -14.090436935424805
    10. 'n' → logprob: -14.590436935424805

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.802049756515771e-05
    2. ' :' → logprob: -9.875067710876465
    3. ',' → logprob: -11.500067710876465
    4. ',:' → logprob: -13.375067710876465
    5. '=' → logprob: -13.500067710876465
    6. ':n' → logprob: -14.125067710876465
    7. ':m' → logprob: -14.875067710876465
    8. ':(' → logprob: -15.125067710876465
    9. ':param' → logprob: -15.250067710876465
    10. ':,' → logprob: -15.500067710876465

Token 35: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.20249566435813904
    2. ' reduce' → logprob: -1.7024956941604614
    3. ' ' → logprob: -8.327495574951172
    4. 'factor' → logprob: -8.827495574951172
    5. '0' → logprob: -9.077495574951172
    6. ' factorial' → logprob: -9.452495574951172
    7. ' int' → logprob: -9.702495574951172
    8. '   ' → logprob: -9.827495574951172
    9. 'int' → logprob: -9.827495574951172
    10. 'partial' → logprob: -9.952495574951172

Token 36: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.32422393560409546
    2. '(' → logprob: -1.4492239952087402
    3. '(part' → logprob: -3.6992239952087402
    4. '(lambda' → logprob: -4.07422399520874
    5. '(operator' → logprob: -7.94922399520874
    6. 'partial' → logprob: -10.824223518371582
    7. ' (' → logprob: -12.074223518371582
    8. '(
' → logprob: -12.199223518371582
    9. 'mul' → logprob: -12.449223518371582
    10. '(mult' → logprob: -12.574223518371582

Token 37: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -9.849109119386412e-06
    2. '<ul' → logprob: -11.625009536743164
    3. ' ul' → logprob: -15.375009536743164
    4. '.ul' → logprob: -15.375009536743164
    5. 'ул' → logprob: -16.000009536743164
    6. 'ult' → logprob: -16.250009536743164
    7. 'ultiply' → logprob: -16.250009536743164
    8. 'u' → logprob: -17.375009536743164
    9. 'ultip' → logprob: -17.500009536743164
    10. '_ul' → logprob: -17.625009536743164

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040648187859915197
    2. ' ,' → logprob: -8.625406265258789
    3. ',[' → logprob: -9.250406265258789
    4. 'range' → logprob: -10.000406265258789
    5. ',(' → logprob: -10.750406265258789
    6. '(range' → logprob: -11.500406265258789
    7. ',x' → logprob: -12.125406265258789
    8. ',n' → logprob: -12.250406265258789
    9. ',map' → logprob: -12.375406265258789
    10. ',
' → logprob: -12.500406265258789

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1993815302848816
    2. '(range' → logprob: -1.8243815898895264
    3. ' range' → logprob: -3.9493815898895264
    4. '[' → logprob: -9.199381828308105
    5. '(' → logprob: -11.199381828308105
    6. '	range' → logprob: -11.324381828308105
    7. ' ' → logprob: -11.574381828308105
    8. ')' → logprob: -11.699381828308105
    9. 'map' → logprob: -11.824381828308105
    10. ' (' → logprob: -11.949381828308105

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002342912630410865
    2. '(' → logprob: -8.375234603881836
    3. ' (' → logprob: -13.625234603881836
    4. 'n' → logprob: -14.000234603881836
    5. ')' → logprob: -14.000234603881836
    6. '```' → logprob: -15.875234603881836
    7. '(r' → logprob: -16.000234603881836
    8. '(N' → logprob: -16.000234603881836
    9. ')(' → logprob: -16.250234603881836
    10. ' ' → logprob: -16.375234603881836

Token 41: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6175583004951477
    2. '-r' → logprob: -0.8675583004951477
    3. ' ,' → logprob: -3.992558240890503
    4. '-' → logprob: -4.867558479309082
    5. ' -' → logprob: -4.867558479309082
    6. '-n' → logprob: -5.617558479309082
    7. ',r' → logprob: -6.492558479309082
    8. ' r' → logprob: -7.867558479309082
    9. 'r' → logprob: -8.117558479309082
    10. ',n' → logprob: -8.117558479309082

Token 42: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01420957688242197
    2. ' r' → logprob: -4.264209747314453
    3. '	r' → logprob: -10.389209747314453
    4. ' ' → logprob: -12.389209747314453
    5. '   ' → logprob: -12.889209747314453
    6. '1' → logprob: -13.139209747314453
    7. '(r' → logprob: -13.514209747314453
    8. '    ' → logprob: -14.139209747314453
    9. '```' → logprob: -14.639209747314453
    10. '

' → logprob: -14.951709747314453

Token 43: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5769988894462585
    2. '+' → logprob: -0.8269988894462585
    3. ' ' → logprob: -7.076998710632324
    4. ',' → logprob: -9.076998710632324
    5. ' ,' → logprob: -10.326998710632324
    6. '1' → logprob: -11.576998710632324
    7. '```' → logprob: -11.576998710632324
    8. ' plus' → logprob: -11.951998710632324
    9. '   ' → logprob: -12.639498710632324
    10. '    ' → logprob: -12.639498710632324

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033677343162707984
    2. ' ' → logprob: -8.000336647033691
    3. '```' → logprob: -14.500336647033691
    4. '   ' → logprob: -15.312836647033691
    5. '  ' → logprob: -16.375337600708008
    6. ' ' → logprob: -16.500337600708008
    7. '2' → logprob: -16.687837600708008
    8. ',' → logprob: -16.750337600708008
    9. '
' → logprob: -17.062837600708008
    10. '	' → logprob: -17.250337600708008

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. ' ' → logprob: -10.37503433227539
    3. '```' → logprob: -13.56253433227539
    4. '+' → logprob: -15.50003433227539
    5. '
' → logprob: -15.68753433227539
    6. ',' → logprob: -15.81253433227539
    7. '   ' → logprob: -16.06253433227539
    8. '``' → logprob: -16.37503433227539
    9. '' → logprob: -16.50003433227539
    10. '  ' → logprob: -16.75003433227539

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018193138763308525
    2. ',n' → logprob: -4.143193244934082
    3. ' ,' → logprob: -6.143193244934082
    4. ',end' → logprob: -13.268193244934082
    5. '```' → logprob: -14.018193244934082
    6. '   ' → logprob: -14.018193244934082
    7. ',r' → logprob: -14.143193244934082
    8. '1' → logprob: -14.268193244934082
    9. ' ' → logprob: -14.643193244934082
    10. ',num' → logprob: -14.768193244934082

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06196948140859604
    2. ' n' → logprob: -2.811969518661499
    3. '	n' → logprob: -14.061969757080078
    4. '1' → logprob: -15.186969757080078
    5. ')n' → logprob: -15.561969757080078
    6. '_n' → logprob: -16.186969757080078
    7. '(n' → logprob: -16.311969757080078
    8. ' ' → logprob: -16.561969757080078
    9. ',' → logprob: -16.561969757080078
    10. '```' → logprob: -16.686969757080078

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5232247114181519
    2. ' +' → logprob: -0.8982247114181519
    3. '1' → logprob: -9.648224830627441
    4. ' ' → logprob: -10.523224830627441
    5. '),' → logprob: -13.023224830627441
    6. ')' → logprob: -13.148224830627441
    7. ' plus' → logprob: -14.398224830627441
    8. '```' → logprob: -14.398224830627441
    9. ',' → logprob: -14.648224830627441
    10. '<|end|>' → logprob: -14.773224830627441

Token 49: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002666999935172498
    2. ' ' → logprob: -8.250267028808594
    3. '```' → logprob: -13.750267028808594
    4. 'token' → logprob: -14.562767028808594
    5. ')' → logprob: -14.562767028808594
    6. '2' → logprob: -15.062767028808594
    7. ' ' → logprob: -15.687767028808594
    8. '' → logprob: -15.750267028808594
    9. '   ' → logprob: -15.812767028808594
    10. 'tokens' → logprob: -16.187767028808594

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. ')' → logprob: -14.125041007995605
    4. '```' → logprob: -16.687541961669922
    5. '' → logprob: -16.875041961669922
    6. '2' → logprob: -16.875041961669922
    7. 'token' → logprob: -17.125041961669922
    8. '),' → logprob: -17.187541961669922
    9. '<|end|>' → logprob: -17.625041961669922
    10. '[' → logprob: -17.875041961669922

Token 51: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00011689399980241433
    2. ' ),' → logprob: -9.500117301940918
    3. ')' → logprob: -10.125117301940918
    4. ''),' → logprob: -14.250117301940918
    5. ',' → logprob: -14.375117301940918
    6. '))' → logprob: -15.000117301940918
    7. ')),' → logprob: -16.2501163482666
    8. '"),' → logprob: -16.7501163482666
    9. '),(' → logprob: -17.0001163482666
    10. ' ' → logprob: -17.3751163482666

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. 'r' → logprob: -15.12523078918457
    4. ')' → logprob: -15.50023078918457
    5. '```' → logprob: -18.00023078918457
    6. 'factor' → logprob: -18.68773078918457
    7. '۱' → logprob: -18.75023078918457
    8. '   ' → logprob: -18.87523078918457
    9. 'int' → logprob: -18.87523078918457
    10. '  ' → logprob: -18.93773078918457

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. ')' → logprob: -14.250016212463379
    4. 'r' → logprob: -15.875016212463379
    5. '```' → logprob: -16.562515258789062
    6. '   ' → logprob: -17.375015258789062
    7. 'int' → logprob: -17.812515258789062
    8. '  ' → logprob: -18.250015258789062
    9. 'factor' → logprob: -18.250015258789062
    10. 'partial' → logprob: -18.312515258789062

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.885492621222511e-05
    2. ')//' → logprob: -10.125068664550781
    3. ' )' → logprob: -10.625068664550781
    4. '//' → logprob: -12.500068664550781
    5. ' //' → logprob: -15.750068664550781
    6. ')
' → logprob: -15.875068664550781
    7. ' ' → logprob: -16.00006866455078
    8. ')/' → logprob: -16.50006866455078
    9. ')`' → logprob: -16.87506866455078
    10. '）' → logprob: -17.62506866455078

Token 55: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4745825231075287
    2. '//' → logprob: -0.9745825529098511
    3. ' ' → logprob: -8.59958267211914
    4. ')' → logprob: -8.84958267211914
    5. ' ' → logprob: -9.22458267211914
    6. '#' → logprob: -10.22458267211914
    7. ')//' → logprob: -11.22458267211914
    8. '```' → logprob: -11.47458267211914
    9. '	' → logprob: -12.97458267211914
    10. '//=' → logprob: -12.97458267211914

Token 56: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0001999642699956894
    2. ' reduce' → logprob: -8.625200271606445
    3. 'factor' → logprob: -11.250200271606445
    4. 'redu' → logprob: -13.250200271606445
    5. 're' → logprob: -13.375200271606445
    6. '(re' → logprob: -14.375200271606445
    7. '```' → logprob: -14.625200271606445
    8. '.reduce' → logprob: -14.750200271606445
    9. '   ' → logprob: -15.000200271606445
    10. '_reduce' → logprob: -15.125200271606445

Token 57: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007574541959911585
    2. 'mul' → logprob: -7.375757217407227
    3. '(int' → logprob: -9.250757217407227
    4. '(lambda' → logprob: -11.000757217407227
    5. '```' → logprob: -11.875757217407227
    6. '(' → logprob: -12.250757217407227
    7. '(pow' → logprob: -13.500757217407227
    8. 'm' → logprob: -13.500757217407227
    9. '(div' → logprob: -14.250757217407227
    10. 'int' → logprob: -14.500757217407227

Token 58: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.5570885807392187e-05
    2. 'mul' → logprob: -11.375015258789062
    3. 'ult' → logprob: -13.625015258789062
    4. 'u' → logprob: -13.625015258789062
    5. 'ulp' → logprob: -14.375015258789062
    6. '<ul' → logprob: -14.750015258789062
    7. '```' → logprob: -16.000015258789062
    8. 'ultip' → logprob: -16.250015258789062
    9. 'ulf' → logprob: -16.500015258789062
    10. ' mul' → logprob: -17.250015258789062

Token 59: ',' (ID: 11)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.6385225057601929
    2. ',' → logprob: -1.3885225057601929
    3. ',m' → logprob: -2.3885226249694824
    4. '(m' → logprob: -2.3885226249694824
    5. 'operator' → logprob: -4.513522624969482
    6. ')' → logprob: -4.763522624969482
    7. ')(' → logprob: -5.013522624969482
    8. 'multiply' → logprob: -6.138522624969482
    9. '=lambda' → logprob: -6.888522624969482
    10. '),' → logprob: -7.013522624969482

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004833425919059664
    2. ' range' → logprob: -7.750483512878418
    3. '(range' → logprob: -9.875483512878418
    4. '	range' → logprob: -13.625483512878418
    5. 'lambda' → logprob: -16.7504825592041
    6. ' ' → logprob: -18.1254825592041
    7. ')' → logprob: -18.3754825592041
    8. '1' → logprob: -18.8754825592041
    9. 'list' → logprob: -19.3754825592041
    10. 'rang' → logprob: -19.6254825592041

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008778716437518597
    2. '(r' → logprob: -4.7587785720825195
    3. '1' → logprob: -8.75877857208252
    4. 'r' → logprob: -12.00877857208252
    5. ' (' → logprob: -14.38377857208252
    6. ')(' → logprob: -15.88377857208252
    7. '```' → logprob: -16.633779525756836
    8. ',r' → logprob: -16.883779525756836
    9. ')' → logprob: -17.008779525756836
    10. '(
' → logprob: -17.383779525756836

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019349466310814023
    2. 'r' → logprob: -6.251935005187988
    3. '(' → logprob: -12.876935005187988
    4. ' ' → logprob: -13.126935005187988
    5. '2' → logprob: -13.751935005187988
    6. '0' → logprob: -15.501935005187988
    7. ' r' → logprob: -15.501935005187988
    8. '   ' → logprob: -15.751935005187988
    9. '```' → logprob: -16.751934051513672
    10. ')' → logprob: -17.001934051513672

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001923279371112585
    2. ',r' → logprob: -6.751923084259033
    3. ' ,' → logprob: -7.251923084259033
    4. 'r' → logprob: -10.251923561096191
    5. ' r' → logprob: -12.751923561096191
    6. '   ' → logprob: -13.001923561096191
    7. ' ' → logprob: -13.876923561096191
    8. '	' → logprob: -14.251923561096191
    9. '	r' → logprob: -14.376923561096191
    10. '(r' → logprob: -14.626923561096191

Token 64: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003357006062287837
    2. ' r' → logprob: -8.000335693359375
    3. '	r' → logprob: -15.625335693359375
    4. '   ' → logprob: -18.500335693359375
    5. '(r' → logprob: -18.750335693359375
    6. ' ' → logprob: -18.875335693359375
    7. '_r' → logprob: -19.625335693359375
    8. '  ' → logprob: -20.250335693359375
    9. '+r' → logprob: -20.250335693359375
    10. '<|end|>' → logprob: -20.375335693359375

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759775042533875
    2. ' +' → logprob: -0.8259775042533875
    3. ' ' → logprob: -10.700977325439453
    4. '+r' → logprob: -11.700977325439453
    5. '),' → logprob: -12.950977325439453
    6. '  ' → logprob: -13.950977325439453
    7. ',' → logprob: -14.075977325439453
    8. '```' → logprob: -14.200977325439453
    9. ')' → logprob: -14.575977325439453
    10. '   ' → logprob: -14.825977325439453

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. ')' → logprob: -15.750335693359375
    4. '```' → logprob: -15.875335693359375
    5. '),' → logprob: -18.250335693359375
    6. '+' → logprob: -18.875335693359375
    7. ' ' → logprob: -19.750335693359375
    8. '2' → logprob: -19.875335693359375
    9. '   ' → logprob: -20.125335693359375
    10. '))' → logprob: -20.250335693359375

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.500009536743164
    4. ')' → logprob: -15.875009536743164
    5. 'r' → logprob: -16.500009536743164
    6. '),' → logprob: -19.625009536743164
    7. '+' → logprob: -19.875009536743164
    8. '   ' → logprob: -20.375009536743164
    9. '2' → logprob: -20.500009536743164
    10. '``' → logprob: -20.625009536743164

Token 68: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.020921140909194946
    2. '))' → logprob: -3.895921230316162
    3. ')' → logprob: -8.145920753479004
    4. ')))' → logprob: -9.770920753479004
    5. ' ),' → logprob: -11.395920753479004
    6. '+' → logprob: -11.770920753479004
    7. '   ' → logprob: -13.270920753479004
    8. '))
' → logprob: -13.520920753479004
    9. ' ' → logprob: -13.645920753479004
    10. ')),' → logprob: -13.770920753479004

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. ')' → logprob: -15.875804901123047
    4. '   ' → logprob: -16.375804901123047
    5. '  ' → logprob: -17.250804901123047
    6. 'r' → logprob: -17.500804901123047
    7. '```' → logprob: -17.875804901123047
    8. '    ' → logprob: -18.750804901123047
    9. '۱' → logprob: -20.125804901123047
    10. '>' → logprob: -20.250804901123047

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'r' → logprob: -15.250005722045898
    4. ')' → logprob: -16.0000057220459
    5. '```' → logprob: -16.7500057220459
    6. '   ' → logprob: -18.8750057220459
    7. '  ' → logprob: -20.1250057220459
    8. '``' → logprob: -20.7500057220459
    9. '2' → logprob: -20.8750057220459
    10. '`' → logprob: -21.0000057220459

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. '))' → logprob: -15.250001907348633
    4. ')
' → logprob: -15.875001907348633
    5. ')return' → logprob: -16.500001907348633
    6. ')#' → logprob: -17.250001907348633
    7. ')`' → logprob: -17.500001907348633
    8. ')))' → logprob: -17.625001907348633
    9. '),' → logprob: -17.750001907348633
    10. ')...' → logprob: -18.125001907348633

Token 72: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39754781126976013
    2. 'result' → logprob: -1.3975478410720825
    3. 'if' → logprob: -3.022547721862793
    4. '
' → logprob: -4.647547721862793
    5. 'for' → logprob: -4.772547721862793
    6. 'res' → logprob: -6.022547721862793
    7. 'n' → logprob: -6.397547721862793
    8. 'count' → logprob: -6.522547721862793
    9. 'answer' → logprob: -6.647547721862793
    10. 'def' → logprob: -7.022547721862793

Token 73: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39940541982650757
    2. '0' → logprob: -1.6494054794311523
    3. ' r' → logprob: -2.1494054794311523
    4. ' ' → logprob: -3.8994054794311523
    5. '1' → logprob: -8.649405479431152
    6. 'n' → logprob: -9.774405479431152
    7. '(r' → logprob: -10.649405479431152
    8. ' n' → logprob: -10.899405479431152
    9. ' (' → logprob: -11.524405479431152
    10. '2' → logprob: -11.524405479431152

Token 74: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2305225282907486
    2. '0' → logprob: -1.6055225133895874
    3. ' r' → logprob: -5.480522632598877
    4. ' ' → logprob: -7.355522632598877
    5. '1' → logprob: -8.480522155761719
    6. 'n' → logprob: -9.855522155761719
    7. '(r' → logprob: -11.105522155761719
    8. '2' → logprob: -12.730522155761719
    9. '(' → logprob: -13.168022155761719
    10. 'K' → logprob: -13.355522155761719

Token 75: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1426161229610443
    2. '<' → logprob: -2.392616033554077
    3. ' <=' → logprob: -3.267616033554077
    4. '<=' → logprob: -6.142616271972656
    5. ' ' → logprob: -6.892616271972656
    6. '<n' → logprob: -8.892616271972656
    7. ' r' → logprob: -10.767616271972656
    8. ' else' → logprob: -11.142616271972656
    9. '<len' → logprob: -11.267616271972656
    10. 'else' → logprob: -11.767616271972656

Token 76: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011047814972698689
    2. ' r' → logprob: -4.511047840118408
    3. ' ' → logprob: -17.88604736328125
    4. 'K' → logprob: -17.88604736328125
    5. '	r' → logprob: -18.01104736328125
    6. 'n' → logprob: -18.26104736328125
    7. '_r' → logprob: -19.63604736328125
    8. '(r' → logprob: -20.51104736328125
    9. ' K' → logprob: -20.76104736328125
    10. '```' → logprob: -20.76104736328125

Token 77: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5849774479866028
    2. ' <=' → logprob: -0.8349774479866028
    3. ' and' → logprob: -5.334977626800537
    4. 'and' → logprob: -6.584977626800537
    5. ' <' → logprob: -6.584977626800537
    6. '<' → logprob: -6.959977626800537
    7. 'r' → logprob: -8.834977149963379
    8. ' ' → logprob: -9.584977149963379
    9. '<|end|>' → logprob: -9.834977149963379
    10. '<n' → logprob: -9.959977149963379

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005930693820118904
    2. ' n' → logprob: -5.1309309005737305
    3. 'N' → logprob: -13.25593090057373
    4. '	n' → logprob: -15.25593090057373
    5. '_n' → logprob: -17.255929946899414
    6. '```' → logprob: -17.505929946899414
    7. ' ' → logprob: -17.755929946899414
    8. 'min' → logprob: -17.755929946899414
    9. ')n' → logprob: -18.255929946899414
    10. '<|end|>' → logprob: -18.255929946899414

Token 79: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16100449860095978
    2. 'else' → logprob: -1.9110045433044434
    3. ' and' → logprob: -7.286004543304443
    4. 'and' → logprob: -9.411004066467285
    5. '-' → logprob: -11.786004066467285
    6. '	else' → logprob: -12.786004066467285
    7. ' ' → logprob: -13.911004066467285
    8. '_else' → logprob: -14.661004066467285
    9. ' els' → logprob: -15.411004066467285
    10. '+' → logprob: -15.661004066467285

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02054574340581894
    2. ' ' → logprob: -3.895545721054077
    3. '1' → logprob: -13.833045959472656
    4. '   ' → logprob: -13.958045959472656
    5. 'int' → logprob: -14.583045959472656
    6. '  ' → logprob: -14.645545959472656
    7. '```' → logprob: -15.395545959472656
    8. ' ' → logprob: -15.520545959472656
    9. ' int' → logprob: -16.333045959472656
    10. ' None' → logprob: -16.520545959472656

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006273718317970634
    2. ' ' → logprob: -7.375627517700195
    3. 'int' → logprob: -14.750627517700195
    4. '1' → logprob: -15.375627517700195
    5. 'None' → logprob: -16.000627517700195
    6. '   ' → logprob: -16.938127517700195
    7. '  ' → logprob: -17.500627517700195
    8. 'lambda' → logprob: -17.813127517700195
    9. ' None' → logprob: -17.875627517700195
    10. '```' → logprob: -18.188127517700195

Token 82: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38611552119255066
    2. 'print' → logprob: -1.761115550994873
    3. '
' → logprob: -3.261115550994873
    4. 'answer' → logprob: -3.261115550994873
    5. 'res' → logprob: -3.886115550994873
    6. 'r' → logprob: -4.386115550994873
    7. 'n' → logprob: -4.761115550994873
    8. 'for' → logprob: -5.386115550994873
    9. 'count' → logprob: -5.511115550994873
    10. 'x' → logprob: -5.886115550994873

Token 83: 'lim' (ID: 5406)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7217829823493958
    2. 'result' → logprob: -1.096782922744751
    3. 'for' → logprob: -2.346782922744751
    4. 'res' → logprob: -3.971782922744751
    5. 'answer' → logprob: -4.09678316116333
    6. 'dp' → logprob: -4.09678316116333
    7. 'count' → logprob: -4.72178316116333
    8. 'ans' → logprob: -4.97178316116333
    9. 'total' → logprob: -5.22178316116333
    10. 'if' → logprob: -5.84678316116333

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5678196549415588
    2. 'it' → logprob: -1.192819595336914
    3. 'its' → logprob: -2.442819595336914
    4. '=' → logprob: -3.567819595336914
    5. 'ited' → logprob: -5.317819595336914
    6. '_' → logprob: -6.067819595336914
    7. '_it' → logprob: -6.567819595336914
    8. '=int' → logprob: -6.942819595336914
    9. 'itation' → logprob: -7.067819595336914
    10. 'iting' → logprob: -7.192819595336914

Token 85: ' comb' (ID: 4134)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.9816376566886902
    2. ' K' → logprob: -1.606637716293335
    3. 'min' → logprob: -2.481637716293335
    4. '10' → logprob: -2.606637716293335
    5. 'N' → logprob: -2.606637716293335
    6. ' ' → logprob: -2.856637716293335
    7. ' N' → logprob: -3.481637716293335
    8. '100' → logprob: -3.481637716293335
    9. ' min' → logprob: -3.731637716293335
    10. 'max' → logprob: -3.981637716293335

Token 86: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14634083211421967
    2. '(K' → logprob: -2.021340847015381
    3. '(' → logprob: -5.646340847015381
    4. '(n' → logprob: -9.646340370178223
    5. 'N' → logprob: -10.271340370178223
    6. 'K' → logprob: -11.771340370178223
    7. ' (' → logprob: -12.771340370178223
    8. '<|end|>' → logprob: -12.896340370178223
    9. '(L' → logprob: -13.521340370178223
    10. '((' → logprob: -13.521340370178223

Token 87: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019784128293395042
    2. ',K' → logprob: -4.144783973693848
    3. 'K' → logprob: -6.019783973693848
    4. ' ,' → logprob: -7.644783973693848
    5. '-' → logprob: -8.019783973693848
    6. ' K' → logprob: -8.394783973693848
    7. ' -' → logprob: -9.269783973693848
    8. ',N' → logprob: -10.144783973693848
    9. '(K' → logprob: -10.769783973693848
    10. '2' → logprob: -10.894783973693848

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011101936921477318
    2. 'K' → logprob: -5.011101722717285
    3. '2' → logprob: -5.636101722717285
    4. ' ' → logprob: -7.386101722717285
    5. ' K' → logprob: -9.011101722717285
    6. '3' → logprob: -10.761101722717285
    7. '(K' → logprob: -11.698601722717285
    8. '(' → logprob: -11.761101722717285
    9. '   ' → logprob: -12.448601722717285
    10. '-' → logprob: -12.823601722717285

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19063617289066315
    2. 'K' → logprob: -1.815636157989502
    3. '2' → logprob: -4.565636157989502
    4. '(K' → logprob: -8.69063663482666
    5. '3' → logprob: -9.06563663482666
    6. '(' → logprob: -10.56563663482666
    7. ' ' → logprob: -11.06563663482666
    8. ' K' → logprob: -11.37813663482666
    9. '   ' → logprob: -11.37813663482666
    10. '4' → logprob: -11.50313663482666

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003957413136959076
    2. ',K' → logprob: -5.628957271575928
    3. ' ,' → logprob: -8.003957748413086
    4. 'K' → logprob: -11.753957748413086
    5. ',N' → logprob: -11.878957748413086
    6. ',
' → logprob: -12.878957748413086
    7. ' K' → logprob: -13.503957748413086
    8. ',k' → logprob: -13.503957748413086
    9. ' ' → logprob: -14.128957748413086
    10. ',n' → logprob: -14.128957748413086

Token 91: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.018213625997304916
    2. ' K' → logprob: -4.018213748931885
    3. ' ' → logprob: -10.268213272094727
    4. 'N' → logprob: -12.143213272094727
    5. '2' → logprob: -12.268213272094727
    6. '0' → logprob: -12.268213272094727
    7. '	K' → logprob: -13.018213272094727
    8. '1' → logprob: -13.018213272094727
    9. '7' → logprob: -13.143213272094727
    10. 'min' → logprob: -13.893213272094727

Token 92: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.000553151941858232
    2. ' K' → logprob: -7.625553131103516
    3. '1' → logprob: -11.250553131103516
    4. '2' → logprob: -11.375553131103516
    5. ' ' → logprob: -11.625553131103516
    6. 'N' → logprob: -12.000553131103516
    7. '	K' → logprob: -12.000553131103516
    8. '0' → logprob: -12.625553131103516
    9. '   ' → logprob: -12.875553131103516
    10. '7' → logprob: -12.875553131103516

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008106979075819254
    2. ' )' → logprob: -7.875810623168945
    3. 'K' → logprob: -9.000810623168945
    4. '0' → logprob: -9.625810623168945
    5. ',' → logprob: -10.125810623168945
    6. '3' → logprob: -10.250810623168945
    7. ')+' → logprob: -10.625810623168945
    8. '1' → logprob: -10.875810623168945
    9. '))' → logprob: -11.125810623168945
    10. '+' → logprob: -11.125810623168945

Token 94: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16013342142105103
    2. 'print' → logprob: -2.5351333618164062
    3. 'for' → logprob: -3.5351333618164062
    4. ' if' → logprob: -3.9101333618164062
    5. '<|end|>' → logprob: -5.160133361816406
    6. '
' → logprob: -5.910133361816406
    7. ')' → logprob: -6.035133361816406
    8. ' ' → logprob: -6.660133361816406
    9. '\n' → logprob: -6.910133361816406
    10. '*' → logprob: -7.035133361816406

Token 95: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.10159716010093689
    2. 'K' → logprob: -2.3515970706939697
    3. ' lim' → logprob: -7.851597309112549
    4. ' ' → logprob: -7.851597309112549
    5. ' N' → logprob: -8.47659683227539
    6. 'lim' → logprob: -8.47659683227539
    7. ' not' → logprob: -9.60159683227539
    8. 'N' → logprob: -10.66409683227539
    9. ' (' → logprob: -10.72659683227539
    10. ' ' → logprob: -10.85159683227539

Token 96: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0411757193505764
    2. ' <=' → logprob: -3.666175603866577
    3. ' <' → logprob: -4.916175842285156
    4. '>' → logprob: -5.541175842285156
    5. ' ==' → logprob: -6.166175842285156
    6. ' >=' → logprob: -7.041175842285156
    7. ' ' → logprob: -8.291175842285156
    8. '<=' → logprob: -9.041175842285156
    9. '<' → logprob: -9.416175842285156
    10. '==' → logprob: -9.791175842285156

Token 97: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.0024806505534797907
    2. ' lim' → logprob: -6.002480506896973
    3. ' ' → logprob: -13.127480506896973
    4. '0' → logprob: -13.752480506896973
    5. 'N' → logprob: -14.502480506896973
    6. '2' → logprob: -15.252480506896973
    7. '1' → logprob: -16.12748146057129
    8. 'lam' → logprob: -16.12748146057129
    9. 'comb' → logprob: -16.12748146057129
    10. 'l' → logprob: -16.25248146057129

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00160317518748343
    2. ':
' → logprob: -6.501603126525879
    3. ' :' → logprob: -9.626603126525879
    4. ' or' → logprob: -10.626603126525879
    5. ':return' → logprob: -12.751603126525879
    6. ' and' → logprob: -12.876603126525879
    7. ':
' → logprob: -14.001603126525879
    8. 'print' → logprob: -14.251603126525879
    9. ':

' → logprob: -14.501603126525879
    10. ',' → logprob: -14.501603126525879

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013193176127970219
    2. 'print' → logprob: -4.888193130493164
    3. ' print' → logprob: -5.263193130493164
    4. '```' → logprob: -8.013193130493164
    5. '``' → logprob: -10.263193130493164
    6. '	print' → logprob: -11.513193130493164
    7. '
' → logprob: -12.138193130493164
    8. 'sys' → logprob: -12.638193130493164
    9. '    
' → logprob: -13.388193130493164
    10. '   ' → logprob: -13.513193130493164

Token 100: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0052422950975596905
    2. '   ' → logprob: -5.380242347717285
    3. ' print' → logprob: -7.880242347717285
    4. '0' → logprob: -9.255242347717285
    5. '-' → logprob: -9.380242347717285
    6. '```' → logprob: -11.005242347717285
    7. '    
' → logprob: -11.880242347717285
    8. '
' → logprob: -12.005242347717285
    9. 'sys' → logprob: -12.630242347717285
    10. 'K' → logprob: -12.755242347717285

Token 101: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.5740980505943298
    2. '(' → logprob: -0.9490980505943298
    3. '-' → logprob: -3.5740981101989746
    4. '("' → logprob: -4.324098110198975
    5. '0' → logprob: -5.324098110198975
    6. '("-' → logprob: -6.449098110198975
    7. '('' → logprob: -6.949098110198975
    8. '(K' → logprob: -8.449097633361816
    9. '(N' → logprob: -8.824097633361816
    10. '(":' → logprob: -9.199097633361816

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -16.5
    4. '2' → logprob: -17.25
    5. '```' → logprob: -17.625
    6. '')' → logprob: -18.625
    7. '１' → logprob: -18.75
    8. '   ' → logprob: -19.125
    9. '۱' → logprob: -19.1875
    10. '১' → logprob: -19.6875

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.251974493265152
    2. ')
' → logprob: -1.5019744634628296
    3. 'else' → logprob: -10.626974105834961
    4. ')
' → logprob: -11.251974105834961
    5. ' )' → logprob: -12.626974105834961
    6. ' )
' → logprob: -13.751974105834961
    7. ')

' → logprob: -14.001974105834961
    8. ')return' → logprob: -14.251974105834961
    9. ' else' → logprob: -14.876974105834961
    10. '')' → logprob: -15.126974105834961

Token 104: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04336989298462868
    2. '   ' → logprob: -3.168370008468628
    3. 'elif' → logprob: -8.668370246887207
    4. ' else' → logprob: -9.168370246887207
    5. 'exit' → logprob: -11.043370246887207
    6. '    
' → logprob: -11.043370246887207
    7. '```' → logprob: -11.168370246887207
    8. '
' → logprob: -11.418370246887207
    9. ')' → logprob: -11.418370246887207
    10. 'import' → logprob: -11.543370246887207

Token 105: ' sys' (ID: 12228)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22978799045085907
    2. '   ' → logprob: -1.6047879457473755
    3. 'exit' → logprob: -6.229787826538086
    4. '    
' → logprob: -6.854787826538086
    5. 'sys' (adapté à ' sys') → logprob: -7.229787826538086
    6. 'elif' → logprob: -8.729787826538086
    7. '
' → logprob: -8.854787826538086
    8. '```' → logprob: -9.479787826538086
    9. 'import' → logprob: -10.104787826538086
    10. ' else' → logprob: -10.479787826538086

Token 106: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0007520937360823154
    2. 'exit' → logprob: -7.250751972198486
    3. '	exit' → logprob: -11.000752449035645
    4. '.stdout' → logprob: -12.000752449035645
    5. '_exit' → logprob: -12.250752449035645
    6. '.' → logprob: -12.250752449035645
    7. ' exit' → logprob: -13.000752449035645
    8. '.stderr' → logprob: -13.125752449035645
    9. '(exit' → logprob: -13.750752449035645
    10. '.EXIT' → logprob: -14.000752449035645

Token 107: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0046355342492461205
    2. '(' → logprob: -5.379635334014893
    3. '()
' → logprob: -11.87963581085205
    4. '0' → logprob: -12.50463581085205
    5. '()\' → logprob: -13.25463581085205
    6. '()`' → logprob: -14.37963581085205
    7. '()]' → logprob: -14.50463581085205
    8. '()

' → logprob: -14.62963581085205
    9. '()(' → logprob: -15.00463581085205
    10. '())' → logprob: -15.25463581085205

Token 108: 'edges' (ID: 39127)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4575308561325073
    2. 'if' → logprob: -2.082530975341797
    3. 'left' → logprob: -2.082530975341797
    4. 'res' → logprob: -2.832530975341797
    5. 'a' → logprob: -3.082530975341797
    6. 'l' → logprob: -3.207530975341797
    7. 'x' → logprob: -3.332530975341797
    8. 'rest' → logprob: -3.832530975341797
    9. 'ans' → logprob: -3.832530975341797
    10. 'def' → logprob: -3.957530975341797

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006770791951566935
    2. '=' → logprob: -5.006770610809326
    3. '_' → logprob: -11.006771087646484
    4. ' ' → logprob: -11.506771087646484
    5. '=[]' → logprob: -11.631771087646484
    6. ',' → logprob: -12.006771087646484
    7. 's' → logprob: -12.506771087646484
    8. ')' → logprob: -13.381771087646484
    9. ' =
' → logprob: -13.881771087646484
    10. '[]' → logprob: -13.881771087646484

Token 110: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.009167540818452835
    2. '[(' → logprob: -5.634167671203613
    3. 'set' → logprob: -6.134167671203613
    4. '[' → logprob: -7.009167671203613
    5. ' []' → logprob: -7.384167671203613
    6. '[N' → logprob: -7.509167671203613
    7. '[[' → logprob: -8.259167671203613
    8. '[]}' → logprob: -8.634167671203613
    9. '[]
' → logprob: -8.759167671203613
    10. 'N' → logprob: -8.759167671203613

Token 111: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8466903567314148
    2. '()' → logprob: -1.0966904163360596
    3. '(' → logprob: -1.4716904163360596
    4. '([]' → logprob: -5.2216901779174805
    5. '[]' → logprob: -7.3466901779174805
    6. '((' → logprob: -7.5966901779174805
    7. '(map' → logprob: -8.22169017791748
    8. '[' → logprob: -8.47169017791748
    9. '(com' → logprob: -8.72169017791748
    10. '([' → logprob: -9.22169017791748

Token 112: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.034066908061504364
    2. 'int' → logprob: -3.409066915512085
    3. ',int' → logprob: -8.534067153930664
    4. '=int' → logprob: -9.659067153930664
    5. '[int' → logprob: -9.784067153930664
    6. ']int' → logprob: -9.909067153930664
    7. ')' → logprob: -10.284067153930664
    8. ' int' → logprob: -11.284067153930664
    9. '<int' → logprob: -13.284067153930664
    10. ')(' → logprob: -13.534067153930664

Token 113: ' i' (ID: 575)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.017549337819218636
    2. 'x' → logprob: -4.142549514770508
    3. '(int' → logprob: -7.517549514770508
    4. ' int' → logprob: -7.767549514770508
    5. ':int' → logprob: -8.517549514770508
    6. 'lambda' → logprob: -8.517549514770508
    7. ' x' → logprob: -9.517549514770508
    8. '   ' → logprob: -10.517549514770508
    9. ',int' → logprob: -11.517549514770508
    10. 'str' → logprob: -11.767549514770508

Token 114: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029591135680675507
    2. ':i' → logprob: -3.7795910835266113
    3. ' :' → logprob: -5.404591083526611
    4. ' i' → logprob: -7.029591083526611
    5. ',i' → logprob: -8.65459156036377
    6. ':N' → logprob: -8.65459156036377
    7. ',' → logprob: -8.77959156036377
    8. ':int' → logprob: -8.77959156036377
    9. ':
' → logprob: -9.77959156036377
    10. 'lambda' → logprob: -10.27959156036377

Token 115: ' (' (ID: 350)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.4764918386936188
    2. 'comb' → logprob: -1.2264918088912964
    3. 'lambda' → logprob: -2.601491928100586
    4. '(part' → logprob: -5.601491928100586
    5. '(lambda' → logprob: -5.851491928100586
    6. ' partial' → logprob: -6.226491928100586
    7. 'tuple' → logprob: -7.601491928100586
    8. '(' → logprob: -7.601491928100586
    9. ' comb' → logprob: -7.851491928100586
    10. 'part' → logprob: -7.976491928100586

Token 116: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6312089562416077
    2. '(i' → logprob: -1.256208896636963
    3. '0' → logprob: -2.631208896636963
    4. 'K' → logprob: -3.631208896636963
    5. '1' → logprob: -3.631208896636963
    6. 'N' → logprob: -3.756208896636963
    7. '(' → logprob: -4.881208896636963
    8. '(N' → logprob: -5.256208896636963
    9. '(K' → logprob: -5.506208896636963
    10. 'div' → logprob: -5.506208896636963

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009167186915874481
    2. ',i' → logprob: -5.634167194366455
    3. '+' → logprob: -5.884167194366455
    4. ' ,' → logprob: -6.509167194366455
    5. ' +' → logprob: -7.259167194366455
    6. '+i' → logprob: -7.509167194366455
    7. '   ' → logprob: -12.009166717529297
    8. ' ' → logprob: -12.009166717529297
    9. ' i' → logprob: -12.259166717529297
    10. ',
' → logprob: -12.509166717529297

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07340127229690552
    2. ' i' → logprob: -2.6984012126922607
    3. '2' → logprob: -6.07340145111084
    4. '1' → logprob: -7.69840145111084
    5. ' ' → logprob: -7.69840145111084
    6. 'N' → logprob: -9.44840145111084
    7. '3' → logprob: -9.44840145111084
    8. 'K' → logprob: -10.57340145111084
    9. ' N' → logprob: -11.19840145111084
    10. '   ' → logprob: -11.44840145111084

Token 119: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06291513890028
    2. ' +' → logprob: -2.812915086746216
    3. ',' → logprob: -7.062915325164795
    4. ')' → logprob: -10.312914848327637
    5. '))' → logprob: -10.562914848327637
    6. ' ,' → logprob: -11.437914848327637
    7. '),' → logprob: -12.562914848327637
    8. ' ' → logprob: -12.687914848327637
    9. '```' → logprob: -12.812914848327637
    10. '+
' → logprob: -13.187914848327637

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815146580338478
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -13.64315128326416
    4. '	range' → logprob: -15.76815128326416
    5. '   ' → logprob: -15.89315128326416
    6. ' ' → logprob: -17.393152236938477
    7. '[' → logprob: -18.268152236938477
    8. 'filter' → logprob: -18.393152236938477
    9. 'list' → logprob: -18.768152236938477
    10. '  ' → logprob: -18.768152236938477

Token 121: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38834813237190247
    2. '(' → logprob: -1.13834810256958
    3. ' ' → logprob: -7.51334810256958
    4. '
' → logprob: -7.76334810256958
    5. ',' → logprob: -8.263348579406738
    6. ')' → logprob: -9.888348579406738
    7. '```' → logprob: -9.888348579406738
    8. '

' → logprob: -10.388348579406738
    9. '3' → logprob: -10.638348579406738
    10. '   ' → logprob: -10.888348579406738

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014764121442567557
    2. ' ' → logprob: -9.250147819519043
    3. '3' → logprob: -10.500147819519043
    4. 'N' → logprob: -11.625147819519043
    5. '(' → logprob: -12.375147819519043
    6. ')' → logprob: -13.250147819519043
    7. '```' → logprob: -13.250147819519043
    8. '   ' → logprob: -13.937647819519043
    9. 'K' → logprob: -14.250147819519043
    10. '
' → logprob: -14.375147819519043

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004749983490910381
    2. ' ,' → logprob: -8.25047492980957
    3. ',N' → logprob: -8.62547492980957
    4. ',K' → logprob: -10.37547492980957
    5. ',
' → logprob: -13.25047492980957
    6. ',n' → logprob: -14.50047492980957
    7. 'N' → logprob: -14.87547492980957
    8. 'K' → logprob: -16.00047492980957
    9. '(N' → logprob: -16.62547492980957
    10. '2' → logprob: -17.00047492980957

Token 124: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0076582119800150394
    2. '2' → logprob: -5.507658004760742
    3. 'K' → logprob: -6.007658004760742
    4. ' N' → logprob: -6.882658004760742
    5. '3' → logprob: -10.632658004760742
    6. '1' → logprob: -11.132658004760742
    7. '4' → logprob: -11.382658004760742
    8. ' ' → logprob: -11.507658004760742
    9. 'min' → logprob: -11.757658004760742
    10. '   ' → logprob: -12.132658004760742

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011057134717702866
    2. ' +' → logprob: -4.511056900024414
    3. '+
' → logprob: -12.136056900024414
    4. '))' → logprob: -12.761056900024414
    5. ' +
' → logprob: -15.261056900024414
    6. ')))' → logprob: -15.511056900024414
    7. '<|end|>' → logprob: -15.886056900024414
    8. ')' → logprob: -16.011056900024414
    9. '()+' → logprob: -16.511056900024414
    10. '2' → logprob: -16.761056900024414

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017004783148877323
    2. '2' → logprob: -9.37516975402832
    3. ' ' → logprob: -9.37516975402832
    4. '```' → logprob: -16.12516975402832
    5. '(' → logprob: -16.50016975402832
    6. '   ' → logprob: -17.62516975402832
    7. '))' → logprob: -17.87516975402832
    8. '  ' → logprob: -18.37516975402832
    9. ')' → logprob: -18.37516975402832
    10. '3' → logprob: -18.50016975402832

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '2' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.125006675720215
    4. '```' → logprob: -17.9375057220459
    5. '))' → logprob: -18.3125057220459
    6. '   ' → logprob: -18.4375057220459
    7. '１' → logprob: -18.5625057220459
    8. ')' → logprob: -19.1875057220459
    9. '(' → logprob: -19.3125057220459
    10. '১' → logprob: -19.5625057220459

Token 128: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011316437739878893
    2. ')))' → logprob: -6.876131534576416
    3. ')' → logprob: -9.251132011413574
    4. ' ))' → logprob: -13.126132011413574
    5. '))
' → logprob: -15.126132011413574
    6. '()))' → logprob: -15.376132011413574
    7. '))))' → logprob: -16.126131057739258
    8. '+' → logprob: -17.376131057739258
    9. ')),' → logprob: -17.626131057739258
    10. '));' → logprob: -17.626131057739258

Token 129: 'pairs' (ID: 175838)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40788114070892334
    2. 'K' → logprob: -2.157881259918213
    3. 'idx' → logprob: -2.657881259918213
    4. 'for' → logprob: -3.407881259918213
    5. 'count' → logprob: -3.657881259918213
    6. 'remaining' → logprob: -4.407881259918213
    7. 'edges' → logprob: -4.532881259918213
    8. 'print' → logprob: -4.532881259918213
    9. 'current' → logprob: -4.657881259918213
    10. 'rem' → logprob: -5.032881259918213

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022014055866748095
    2. '=' → logprob: -6.127201557159424
    3. '_' → logprob: -12.502201080322266
    4. '(' → logprob: -13.002201080322266
    5. '_count' → logprob: -13.377201080322266
    6. '_pairs' → logprob: -13.502201080322266
    7. ',' → logprob: -13.877201080322266
    8. ')' → logprob: -13.877201080322266
    9. '=[]' → logprob: -14.127201080322266
    10. 's' → logprob: -14.127201080322266

Token 131: ' ((' (ID: 3536)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7172884941101074
    2. 'comb' → logprob: -0.9672884941101074
    3. 'lim' → logprob: -3.0922884941101074
    4. 'list' → logprob: -3.4672884941101074
    5. 'N' → logprob: -4.467288494110107
    6. '[(' → logprob: -4.592288494110107
    7. '0' → logprob: -4.592288494110107
    8. 'K' → logprob: -5.092288494110107
    9. '[' → logprob: -5.592288494110107
    10. 'com' → logprob: -5.842288494110107

Token 132: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45473048090934753
    2. 'N' → logprob: -1.57973051071167
    3. 'x' → logprob: -3.32973051071167
    4. '1' → logprob: -3.70473051071167
    5. '2' → logprob: -4.07973051071167
    6. 'u' → logprob: -4.32973051071167
    7. 'K' → logprob: -4.32973051071167
    8. 'edges' → logprob: -4.45473051071167
    9. 'a' → logprob: -4.70473051071167
    10. '(i' → logprob: -5.20473051071167

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004244842566549778
    2. ',j' → logprob: -5.754244804382324
    3. '+' → logprob: -7.254244804382324
    4. ' ,' → logprob: -8.629244804382324
    5. ' +' → logprob: -9.629244804382324
    6. '-' → logprob: -9.754244804382324
    7. 'j' → logprob: -11.129244804382324
    8. ' -' → logprob: -11.629244804382324
    9. 'for' → logprob: -11.879244804382324
    10. '1' → logprob: -12.129244804382324

Token 134: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010369796073064208
    2. ' j' → logprob: -7.251037120819092
    3. 'i' → logprob: -8.751036643981934
    4. 'N' → logprob: -9.126036643981934
    5. '1' → logprob: -11.126036643981934
    6. '   ' → logprob: -11.376036643981934
    7. '```' → logprob: -12.376036643981934
    8. ' ' → logprob: -12.501036643981934
    9. 'K' → logprob: -12.563536643981934
    10. 'k' → logprob: -12.876036643981934

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038611164782196283
    2. 'for' → logprob: -5.878860950469971
    3. ' for' → logprob: -6.878860950469971
    4. ' )' → logprob: -11.503861427307129
    5. ' ' → logprob: -12.753861427307129
    6. '))' → logprob: -12.878861427307129
    7. '	for' → logprob: -12.878861427307129
    8. '   ' → logprob: -13.128861427307129
    9. ')
' → logprob: -13.378861427307129
    10. ',' → logprob: -13.878861427307129

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5768594741821289
    2. ' for' → logprob: -0.8268594741821289
    3. ')' → logprob: -7.201859474182129
    4. '	for' → logprob: -9.576859474182129
    5. '
' → logprob: -9.951859474182129
    6. '   ' → logprob: -10.576859474182129
    7. ' ' → logprob: -11.451859474182129
    8. ' in' → logprob: -11.951859474182129
    9. '  ' → logprob: -12.201859474182129
    10. '    ' → logprob: -12.701859474182129

Token 137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11840958893299103
    2. 'j' → logprob: -2.8684096336364746
    3. ' i' → logprob: -2.9934096336364746
    4. ' j' → logprob: -5.368409633636475
    5. ' in' → logprob: -10.243409156799316
    6. 'range' → logprob: -10.743409156799316
    7. ' range' → logprob: -11.243409156799316
    8. ' ' → logprob: -11.868409156799316
    9. ')' → logprob: -12.618409156799316
    10. ',' → logprob: -12.743409156799316

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.523351788520813
    2. 'in' → logprob: -0.898351788520813
    3. ',' → logprob: -9.273351669311523
    4. 'i' → logprob: -9.898351669311523
    5. ')' → logprob: -10.398351669311523
    6. ' i' → logprob: -11.023351669311523
    7. ' ' → logprob: -11.648351669311523
    8. '<|end|>' → logprob: -12.023351669311523
    9. '	in' → logprob: -12.398351669311523
    10. '```' → logprob: -12.398351669311523

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006181967910379171
    2. ' range' → logprob: -7.625617980957031
    3. 'edges' → logprob: -9.000617980957031
    4. '2' → logprob: -12.625617980957031
    5. ' edges' → logprob: -14.000617980957031
    6. ')' → logprob: -14.500617980957031
    7. 'ranges' → logprob: -14.500617980957031
    8. '	range' → logprob: -15.000617980957031
    9. '   ' → logprob: -15.125617980957031
    10. '
' → logprob: -15.375617980957031

Token 140: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20205073058605194
    2. '(' → logprob: -1.7020506858825684
    3. ' ' → logprob: -7.702050685882568
    4. ')' → logprob: -9.952051162719727
    5. 'from' → logprob: -10.577051162719727
    6. 'def' → logprob: -10.702051162719727
    7. '1' → logprob: -10.952051162719727
    8. '3' → logprob: -11.202051162719727
    9. '<|end|>' → logprob: -11.452051162719727
    10. '```' → logprob: -11.577051162719727

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.388769103679806e-05
    2. ' ' → logprob: -9.375093460083008
    3. '1' → logprob: -12.125093460083008
    4. '3' → logprob: -13.125093460083008
    5. '   ' → logprob: -14.750093460083008
    6. ')' → logprob: -15.000093460083008
    7. '```' → logprob: -15.000093460083008
    8. '(' → logprob: -15.125093460083008
    9. '  ' → logprob: -15.812593460083008
    10. 'i' → logprob: -16.437593460083008

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005051348707638681
    2. ',N' → logprob: -8.250505447387695
    3. ' ,' → logprob: -8.375505447387695
    4. ',j' → logprob: -11.875505447387695
    5. ',n' → logprob: -12.875505447387695
    6. '(N' → logprob: -13.875505447387695
    7. 'N' → logprob: -14.500505447387695
    8. ')' → logprob: -14.875505447387695
    9. '(' → logprob: -15.000505447387695
    10. ',i' → logprob: -15.125505447387695

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001242772996192798
    2. ' N' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.250123977661133
    4. 'K' → logprob: -15.375123977661133
    5. ' ' → logprob: -16.250123977661133
    6. '	N' → logprob: -16.625123977661133
    7. 'j' → logprob: -17.875123977661133
    8. '  ' → logprob: -18.000123977661133
    9. '    ' → logprob: -18.750123977661133
    10. '(N' → logprob: -18.875123977661133

Token 144: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10721642524003983
    2. ' +' → logprob: -2.8572163581848145
    3. ',' → logprob: -3.2322163581848145
    4. ')' → logprob: -6.1072163581848145
    5. ' ' → logprob: -7.1072163581848145
    6. '<|end|>' → logprob: -7.6072163581848145
    7. '-' → logprob: -8.357216835021973
    8. '   ' → logprob: -8.357216835021973
    9. '(' → logprob: -8.482216835021973
    10. '  ' → logprob: -8.982216835021973

Token 145: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1914009004831314
    2. '1' → logprob: -2.1914010047912598
    3. '+' → logprob: -2.8164010047912598
    4. '(N' → logprob: -7.31640100479126
    5. ' N' → logprob: -7.44140100479126
    6. 'K' → logprob: -7.69140100479126
    7. ')' → logprob: -8.441400527954102
    8. 'j' → logprob: -8.566400527954102
    9. ' +' → logprob: -9.066400527954102
    10. ' ' → logprob: -9.066400527954102

Token 146: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00026503115077503026
    2. '+' → logprob: -8.625265121459961
    3. ' N' → logprob: -9.750265121459961
    4. 'K' → logprob: -10.875265121459961
    5. '(N' → logprob: -13.125265121459961
    6. ')' → logprob: -13.250265121459961
    7. '1' → logprob: -13.875265121459961
    8. ' +' → logprob: -14.375265121459961
    9. '3' → logprob: -14.500265121459961
    10. '   ' → logprob: -14.500265121459961

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7433549165725708
    2. ' for' → logprob: -0.8683549165725708
    3. ',' → logprob: -2.4933547973632812
    4. 'for' → logprob: -4.243354797363281
    5. '   ' → logprob: -4.993354797363281
    6. '	for' → logprob: -7.868354797363281
    7. '       ' → logprob: -8.993354797363281
    8. ' ' → logprob: -8.993354797363281
    9. ' )' → logprob: -9.368354797363281
    10. ',j' → logprob: -9.743354797363281

Token 148: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026433711871504784
    2. 'for' → logprob: -3.6514337062835693
    3. '   ' → logprob: -9.901433944702148
    4. '	for' → logprob: -10.526433944702148
    5. '           ' → logprob: -12.026433944702148
    6. '                   ' → logprob: -12.026433944702148
    7. '       ' → logprob: -12.151433944702148
    8. '               ' → logprob: -12.276433944702148
    9. ')' → logprob: -12.276433944702148
    10. '                       ' → logprob: -12.651433944702148

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0380416102707386
    2. ' j' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.413042068481445
    4. '	j' → logprob: -16.413042068481445
    5. '$j' → logprob: -19.038042068481445
    6. ' ' → logprob: -19.288042068481445
    7. '    ' → logprob: -19.538042068481445
    8. ' range' → logprob: -19.913042068481445
    9. 'range' → logprob: -19.913042068481445
    10. ' in' → logprob: -20.163042068481445

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019366045016795397
    2. 'in' → logprob: -6.251936435699463
    3. 'range' → logprob: -12.001936912536621
    4. '	in' → logprob: -14.876936912536621
    5. ' range' → logprob: -15.251936912536621
    6. 'i' → logprob: -15.501936912536621
    7. '=' → logprob: -15.501936912536621
    8. ' i' → logprob: -15.626936912536621
    9. ' ' → logprob: -15.626936912536621
    10. '=i' → logprob: -15.751936912536621

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0485873706638813
    2. ' range' → logprob: -3.0485873222351074
    3. '	range' → logprob: -17.048587799072266
    4. '(range' → logprob: -17.298587799072266
    5. ' ' → logprob: -18.923587799072266
    6. ')' → logprob: -19.298587799072266
    7. '_range' → logprob: -19.548587799072266
    8. '   ' → logprob: -20.048587799072266
    9. '  ' → logprob: -20.298587799072266
    10. ' xrange' → logprob: -20.423587799072266

Token 152: '(i' (ID: 3649)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45673710107803345
    2. ' range' → logprob: -1.3317370414733887
    3. '(range' → logprob: -2.4567370414733887
    4. '(i' → logprob: -4.331737041473389
    5. '(' → logprob: -5.956737041473389
    6. ')' → logprob: -8.081737518310547
    7. '	range' → logprob: -8.456737518310547
    8. ' in' → logprob: -8.581737518310547
    9. '_range' → logprob: -8.706737518310547
    10. '<|end|>' → logprob: -9.456737518310547

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038044821470975876
    2. ' +' → logprob: -3.2880449295043945
    3. '1' → logprob: -13.163044929504395
    4. '2' → logprob: -14.288044929504395
    5. ',' → logprob: -14.913044929504395
    6. '+,' → logprob: -15.163044929504395
    7. '3' → logprob: -16.038043975830078
    8. '()+' → logprob: -17.288043975830078
    9. '   ' → logprob: -17.413043975830078
    10. '+i' → logprob: -17.538043975830078

Token 154: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010624242015182972
    2. '3' → logprob: -5.510624408721924
    3. 'i' → logprob: -5.885624408721924
    4. ',' → logprob: -6.260624408721924
    5. ' ' → logprob: -6.760624408721924
    6. '(' → logprob: -8.760623931884766
    7. 'N' → logprob: -8.885623931884766
    8. '1' → logprob: -9.385623931884766
    9. '+' → logprob: -9.385623931884766
    10. '(i' → logprob: -9.510623931884766

Token 155: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18003730475902557
    2. '1' → logprob: -1.805037260055542
    3. '+' → logprob: -9.180037498474121
    4. 'i' → logprob: -9.555037498474121
    5. ' ' → logprob: -10.555037498474121
    6. 'N' → logprob: -10.555037498474121
    7. ',' → logprob: -10.930037498474121
    8. '3' → logprob: -11.055037498474121
    9. '(N' → logprob: -11.180037498474121
    10. '```' → logprob: -12.055037498474121

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005533903022296727
    2. 'range' → logprob: -8.375553131103516
    3. ',N' → logprob: -8.500553131103516
    4. 'N' → logprob: -10.125553131103516
    5. '+' → logprob: -10.875553131103516
    6. '(N' → logprob: -11.000553131103516
    7. ' ,' → logprob: -11.375553131103516
    8. ' range' → logprob: -11.875553131103516
    9. ')' → logprob: -12.125553131103516
    10. 'to' → logprob: -12.625553131103516

Token 157: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008616226725280285
    2. ' N' → logprob: -4.7586164474487305
    3. '   ' → logprob: -14.25861644744873
    4. ' ' → logprob: -14.25861644744873
    5. '	N' → logprob: -14.88361644744873
    6. '(N' → logprob: -17.008615493774414
    7. '  ' → logprob: -17.008615493774414
    8. '    ' → logprob: -17.383615493774414
    9. '>N' → logprob: -17.758615493774414
    10. ')' → logprob: -17.883615493774414

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016438890248537064
    2. ' +' → logprob: -4.141438961029053
    3. '(N' → logprob: -8.641438484191895
    4. ',' → logprob: -8.891438484191895
    5. '(' → logprob: -9.891438484191895
    6. 'N' → logprob: -10.891438484191895
    7. '1' → logprob: -11.891438484191895
    8. '   ' → logprob: -12.391438484191895
    9. '()+' → logprob: -12.766438484191895
    10. '2' → logprob: -13.641438484191895

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008197537390515208
    2. ' ' → logprob: -7.125819683074951
    3. 'N' → logprob: -12.37582015991211
    4. '+' → logprob: -12.50082015991211
    5. '2' → logprob: -12.50082015991211
    6. '(N' → logprob: -13.00082015991211
    7. ')' → logprob: -14.12582015991211
    8. '```' → logprob: -15.50082015991211
    9. '(' → logprob: -15.87582015991211
    10. ',' → logprob: -16.62582015991211

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011441880837082863
    2. '+' → logprob: -4.886441707611084
    3. 'N' → logprob: -5.636441707611084
    4. ' ' → logprob: -8.511442184448242
    5. '(N' → logprob: -10.261442184448242
    6. ' +' → logprob: -11.011442184448242
    7. ' N' → logprob: -12.136442184448242
    8. '```' → logprob: -13.136442184448242
    9. '2' → logprob: -13.636442184448242
    10. '   ' → logprob: -14.511442184448242

Token 161: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859089106321335
    2. '))' → logprob: -3.048590898513794
    3. ')))' → logprob: -12.923590660095215
    4. ')
' → logprob: -14.673590660095215
    5. ' )' → logprob: -15.173590660095215
    6. '))
' → logprob: -16.67359161376953
    7. '):' → logprob: -16.67359161376953
    8. ')

' → logprob: -17.04859161376953
    9. ')`' → logprob: -17.04859161376953
    10. ')}' → logprob: -17.17359161376953

Token 162: 'sl' (ID: 4500)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3826918601989746
    2. 'print' → logprob: -2.3826918601989746
    3. 'pairs' → logprob: -3.0076918601989746
    4. 'idx' → logprob: -3.1326918601989746
    5. 'edges' → logprob: -3.1326918601989746
    6. 'count' → logprob: -3.6326918601989746
    7. 'result' → logprob: -4.382691860198975
    8. 'cnt' → logprob: -5.007691860198975
    9. '```' → logprob: -5.132691860198975
    10. '[' → logprob: -5.257691860198975

Token 163: 'im' (ID: 321)
  Prédit: 'ice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.7384573817253113
    2. 'ack' → logprob: -1.488457441329956
    3. 'ices' → logprob: -1.988457441329956
    4. '=' → logprob: -3.238457441329956
    5. 'im' → logprob: -3.863457441329956
    6. 'e' → logprob: -3.863457441329956
    7. 'en' → logprob: -3.988457441329956
    8. 'eep' → logprob: -4.238457202911377
    9. ' =' → logprob: -4.738457202911377
    10. 'acks' → logprob: -4.988457202911377

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4529969096183777
    2. ' =' → logprob: -1.0779969692230225
    3. 'it' → logprob: -4.327996730804443
    4. 'im' → logprob: -4.952996730804443
    5. ',' → logprob: -6.577996730804443
    6. 'its' → logprob: -7.452996730804443
    7. 's' → logprob: -8.202997207641602
    8. 'imit' → logprob: -8.327997207641602
    9. 't' → logprob: -8.577997207641602
    10. 'i' → logprob: -8.577997207641602

Token 165: ' lim' (ID: 3147)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.7127248644828796
    2. 'K' → logprob: -0.9627248644828796
    3. 'comb' → logprob: -2.7127249240875244
    4. ' K' → logprob: -2.9627249240875244
    5. ' lim' → logprob: -5.462724685668945
    6. ' comb' → logprob: -6.212724685668945
    7. 'com' → logprob: -7.962724685668945
    8. 'limit' → logprob: -7.962724685668945
    9. '0' → logprob: -7.962724685668945
    10. 'lam' → logprob: -8.025224685668945

Token 166: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1339356899261475
    2. '<|end|>' → logprob: -1.2589356899261475
    3. ' -' → logprob: -1.5089356899261475
    4. ',' → logprob: -3.3839356899261475
    5. '
' → logprob: -3.5089356899261475
    6. 'for' → logprob: -3.8839356899261475
    7. '<|end|>' → logprob: -3.8839356899261475
    8. ' =' → logprob: -4.133935928344727
    9. 'K' → logprob: -4.258935928344727
    10. ' for' → logprob: -5.133935928344727

Token 167: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00020401719666551799
    2. ' K' → logprob: -8.500204086303711
    3. '(K' → logprob: -14.875204086303711
    4. '	K' → logprob: -16.75020408630371
    5. '   ' → logprob: -16.87520408630371
    6. '>K' → logprob: -17.50020408630371
    7. '(' → logprob: -18.75020408630371
    8. ' (' → logprob: -18.87520408630371
    9. '  ' → logprob: -19.50020408630371
    10. ' ' → logprob: -19.50020408630371

Token 168: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09055585414171219
    2. 'result' → logprob: -3.4655559062957764
    3. ' for' → logprob: -4.340555667877197
    4. 'edges' → logprob: -4.465555667877197
    5. 'pairs' → logprob: -4.590555667877197
    6. 'print' → logprob: -5.090555667877197
    7. 'count' → logprob: -5.340555667877197
    8. '
' → logprob: -5.965555667877197
    9. 'selected' → logprob: -6.840555667877197
    10. 'res' → logprob: -7.090555667877197

Token 169: 'edges' (ID: 39127)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48120400309562683
    2. 'result' → logprob: -1.4812040328979492
    3. 'res' → logprob: -2.981204032897949
    4. 'answer' → logprob: -3.106204032897949
    5. 'ans' → logprob: -3.856204032897949
    6. 'edges' → logprob: -4.356204032897949
    7. 'output' → logprob: -4.606204032897949
    8. 'selected' → logprob: -5.856204032897949
    9. 'print' → logprob: -6.106204032897949
    10. 'idx' → logprob: -6.606204032897949

Token 170: '2' (ID: 17)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.6222705245018005
    2. '=' → logprob: -1.6222705841064453
    3. ' =' → logprob: -1.7472705841064453
    4. '.append' → logprob: -3.1222705841064453
    5. '+=' → logprob: -4.622270584106445
    6. ' +=' → logprob: -4.622270584106445
    7. '=[]' → logprob: -4.747270584106445
    8. '.' → logprob: -4.997270584106445
    9. '_' → logprob: -5.997270584106445
    10. '.pop' → logprob: -6.247270584106445

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11005201935768127
    2. '=' → logprob: -2.3600521087646484
    3. '.extend' → logprob: -4.735052108764648
    4. '.' → logprob: -7.360052108764648
    5. '.append' → logprob: -8.485052108764648
    6. '=[]' → logprob: -9.360052108764648
    7. '_' → logprob: -10.860052108764648
    8. ' .' → logprob: -11.110052108764648
    9. ' +=' → logprob: -11.610052108764648
    10. ' ' → logprob: -11.610052108764648

Token 172: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.062265004962682724
    2. 'list' → logprob: -3.187264919281006
    3. '[' → logprob: -4.937264919281006
    4. ' []' → logprob: -5.062264919281006
    5. 'set' → logprob: -6.562264919281006
    6. '[list' → logprob: -6.562264919281006
    7. '[(' → logprob: -7.187264919281006
    8. ' list' → logprob: -7.187264919281006
    9. ' [' → logprob: -7.937264919281006
    10. '[]
' → logprob: -8.062265396118164

Token 173: 'p' (ID: 79)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.21313124895095825
    2. 'pairs' → logprob: -2.0881311893463135
    3. 'p' → logprob: -4.088131427764893
    4. '(i' → logprob: -4.463131427764893
    5. '(' → logprob: -4.463131427764893
    6. 'edge' → logprob: -4.838131427764893
    7. '(pair' → logprob: -5.213131427764893
    8. '(p' → logprob: -5.838131427764893
    9. 'edges' → logprob: -6.088131427764893
    10. 'e' → logprob: -6.213131427764893

Token 174: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6233381032943726
    2. 'for' → logprob: -0.8733381032943726
    3. 'airs' → logprob: -3.123338222503662
    4. 'air' → logprob: -6.123338222503662
    5. ']' → logprob: -10.623337745666504
    6. ')' → logprob: -10.748337745666504
    7. '	for' → logprob: -11.248337745666504
    8. '   ' → logprob: -11.998337745666504
    9. ' ' → logprob: -12.123337745666504
    10. '
' → logprob: -12.498337745666504

Token 175: ' idx' (ID: 14016)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08935294300317764
    2. ' p' → logprob: -2.46435284614563
    3. ' in' → logprob: -8.21435260772705
    4. ' pairs' → logprob: -9.96435260772705
    5. 'pairs' → logprob: -9.96435260772705
    6. ',' → logprob: -10.96435260772705
    7. 'in' → logprob: -11.96435260772705
    8. '(p' → logprob: -12.08935260772705
    9. 'edges' → logprob: -12.71435260772705
    10. ',p' → logprob: -12.71435260772705

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1273919939994812
    2. ',p' → logprob: -2.127392053604126
    3. 'p' → logprob: -8.127391815185547
    4. ' ,' → logprob: -9.127391815185547
    5. ' in' → logprob: -11.002391815185547
    6. ',s' → logprob: -11.377391815185547
    7. 'in' → logprob: -11.752391815185547
    8. 'idx' → logprob: -12.127391815185547
    9. '(p' → logprob: -12.877391815185547
    10. '_,' → logprob: -13.002391815185547

Token 177: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.26310890913009644
    2. '(p' → logprob: -1.5131089687347412
    3. ' p' → logprob: -5.388108730316162
    4. ' (' → logprob: -5.513108730316162
    5. '(' → logprob: -6.013108730316162
    6. 'pair' → logprob: -10.51310920715332
    7. '(_,' → logprob: -12.13810920715332
    8. '-p' → logprob: -12.57560920715332
    9. ' ' → logprob: -12.95060920715332
    10. '_p' → logprob: -12.95060920715332

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38698866963386536
    2. 'in' → logprob: -1.136988639831543
    3. 'enumer' → logprob: -9.511988639831543
    4. ',' → logprob: -11.011988639831543
    5. ')' → logprob: -11.886988639831543
    6. 'import' → logprob: -12.511988639831543
    7. '
' → logprob: -12.636988639831543
    8. ' ' → logprob: -12.886988639831543
    9. 'p' → logprob: -14.011988639831543
    10. '	in' → logprob: -14.136988639831543

Token 179: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.28118646144866943
    2. ' enumerate' → logprob: -1.4061864614486694
    3. '(en' → logprob: -10.7811861038208
    4. 'enum' → logprob: -11.7811861038208
    5. 'en' → logprob: -13.0311861038208
    6. ',' → logprob: -13.6561861038208
    7. '
' → logprob: -14.0311861038208
    8. ' in' → logprob: -14.1561861038208
    9. 'in' → logprob: -14.9061861038208
    10. 'zip' → logprob: -15.0311861038208

Token 180: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0040895589627325535
    2. 'pairs' → logprob: -5.50408935546875
    3. ' pairs' → logprob: -11.50408935546875
    4. '(' → logprob: -14.75408935546875
    5. 'p' → logprob: -15.00408935546875
    6. ' (' → logprob: -16.00408935546875
    7. '(pair' → logprob: -16.62908935546875
    8. ')' → logprob: -17.00408935546875
    9. '
' → logprob: -17.37908935546875
    10. '_pairs' → logprob: -17.50408935546875

Token 181: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -3.130576806142926e-05
    2. 'air' → logprob: -10.750031471252441
    3. 'pairs' → logprob: -11.625031471252441
    4. 'aires' → logprob: -14.125031471252441
    5. '(p' → logprob: -17.125030517578125
    6. '_pairs' → logprob: -17.250030517578125
    7. ')' → logprob: -17.750030517578125
    8. 'airo' → logprob: -17.750030517578125
    9. 'aired' → logprob: -17.875030517578125
    10. 'Pairs' → logprob: -17.875030517578125

Token 182: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13934214413166046
    2. 'if' → logprob: -2.3893420696258545
    3. ')' → logprob: -3.2643420696258545
    4. '   ' → logprob: -9.139342308044434
    5. ' ' → logprob: -10.889342308044434
    6. '()' → logprob: -11.764342308044434
    7. '	if' → logprob: -11.764342308044434
    8. ' )' → logprob: -12.139342308044434
    9. '    ' → logprob: -12.389342308044434
    10. '  ' → logprob: -12.639342308044434

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3870522081851959
    2. 'if' → logprob: -1.1370521783828735
    3. '	if' → logprob: -9.262052536010742
    4. '   ' → logprob: -9.637052536010742
    5. '    ' → logprob: -11.512052536010742
    6. ' ' → logprob: -12.637052536010742
    7. '  ' → logprob: -12.762052536010742
    8. '        ' → logprob: -14.012052536010742
    9. '       ' → logprob: -14.012052536010742
    10. ';if' → logprob: -14.512052536010742

Token 184: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.006725788116455078
    2. ' idx' → logprob: -5.006725788116455
    3. 'not' → logprob: -12.381725311279297
    4. '(idx' → logprob: -13.131725311279297
    5. '	idx' → logprob: -13.256725311279297
    6. ' not' → logprob: -14.256725311279297
    7. '   ' → logprob: -14.506725311279297
    8. '
' → logprob: -15.506725311279297
    9. '                   ' → logprob: -15.631725311279297
    10. ' ' → logprob: -15.756725311279297

Token 185: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6361196637153625
    2. 'sl' → logprob: -1.5111196041107178
    3. '>=' → logprob: -2.7611196041107178
    4. ' <' → logprob: -3.0111196041107178
    5. '>' → logprob: -3.1361196041107178
    6. ' >=' → logprob: -3.2611196041107178
    7. '<=' → logprob: -3.3861196041107178
    8. ' <=' → logprob: -4.636119842529297
    9. ' >' → logprob: -5.386119842529297
    10. '<len' → logprob: -6.761119842529297

Token 186: ' slim' (ID: 31795)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.038079943507909775
    2. ' slim' → logprob: -3.2880799770355225
    3. 'lim' → logprob: -11.288080215454102
    4. ' ' → logprob: -12.288080215454102
    5. ' sl' → logprob: -12.288080215454102
    6. 's' → logprob: -12.413080215454102
    7. '
' → logprob: -13.413080215454102
    8. ' ' → logprob: -13.913080215454102
    9. 'slam' → logprob: -14.038080215454102
    10. 'slow' → logprob: -14.100580215454102

Token 187: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003729966701939702
    2. ')]' → logprob: -8.750372886657715
    3. '])' → logprob: -9.250372886657715
    4. ' ]' → logprob: -9.750372886657715
    5. ')' → logprob: -10.125372886657715
    6. ']
' → logprob: -11.250372886657715
    7. ']

' → logprob: -12.000372886657715
    8. '()]' → logprob: -14.375372886657715
    9. '])]' → logprob: -15.875372886657715
    10. ')])' → logprob: -17.25037384033203

Token 188: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.14684323966503143
    2. 'print' → logprob: -2.021843194961548
    3. 'for' → logprob: -5.646843433380127
    4. 'result' → logprob: -8.521842956542969
    5. '
' → logprob: -8.896842956542969
    6. ' edges' → logprob: -9.146842956542969
    7. 'answer' → logprob: -9.646842956542969
    8. '```' → logprob: -10.271842956542969
    9. 'ans' → logprob: -11.146842956542969
    10. 'answers' → logprob: -11.271842956542969

Token 189: '.extend' (ID: 34151)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029326191172003746
    2. ' +' → logprob: -4.40432596206665
    3. '<|end|>' → logprob: -4.77932596206665
    4. '[' → logprob: -5.15432596206665
    5. '+[' → logprob: -6.15432596206665
    6. '+
' → logprob: -8.904326438903809
    7. '[
' → logprob: -9.279326438903809
    8. '[:]' → logprob: -10.779326438903809
    9. ' +
' → logprob: -11.029326438903809
    10. '[]' → logprob: -11.154326438903809

Token 190: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -5.512236498361744e-07
    2. 'edges' → logprob: -14.750000953674316
    3. '(' → logprob: -17.375
    4. '(edge' → logprob: -17.875
    5. ' (' → logprob: -18.875
    6. '(
' → logprob: -19.75
    7. '(ed' → logprob: -19.75
    8. '(lines' → logprob: -20.0
    9. ' edges' → logprob: -20.75
    10. '(errors' → logprob: -20.75

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.125
    4. ')' → logprob: -16.125
    5. '۲' → logprob: -17.25
    6. '₂' → logprob: -17.25
    7. '```' → logprob: -17.375
    8. '_edges' → logprob: -18.25
    9. '[' → logprob: -18.625
    10. '   ' → logprob: -19.0

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007807484827935696
    2. ')
' → logprob: -4.88280725479126
    3. 'print' → logprob: -9.007807731628418
    4. ')

' → logprob: -9.632807731628418
    5. ']' → logprob: -11.757807731628418
    6. ' )' → logprob: -13.382807731628418
    7. ')
' → logprob: -13.882807731628418
    8. '[' → logprob: -14.132807731628418
    9. '))' → logprob: -14.632807731628418
    10. '
' → logprob: -14.757807731628418

Token 193: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31367093324661255
    2. 'print' → logprob: -1.3136708736419678
    3. ' for' → logprob: -8.688671112060547
    4. '
' → logprob: -9.063671112060547
    5. '```' → logprob: -9.063671112060547
    6. '``' → logprob: -12.813671112060547
    7. '<|end|>' → logprob: -13.188671112060547
    8. ' print' → logprob: -13.563671112060547
    9. '#print' → logprob: -14.188671112060547
    10. '\n' → logprob: -14.813671112060547

Token 194: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.06638218462467194
    2. '(*' → logprob: -3.3163821697235107
    3. '(edges' → logprob: -3.9413821697235107
    4. '(' → logprob: -5.06638240814209
    5. '('\' → logprob: -7.06638240814209
    6. '('' → logprob: -7.94138240814209
    7. '()' → logprob: -8.31638240814209
    8. 'edges' → logprob: -8.31638240814209
    9. '("' → logprob: -8.69138240814209
    10. '("\' → logprob: -9.06638240814209

Token 195: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -2.339278580620885e-06
    2. 'edges' → logprob: -13.125001907348633
    3. ' (' → logprob: -16.500001907348633
    4. '(' → logprob: -16.625001907348633
    5. ' edges' → logprob: -17.500001907348633
    6. ')' → logprob: -19.375001907348633
    7. '(edge' → logprob: -21.125001907348633
    8. '.edges' → logprob: -21.125001907348633
    9. '(
' → logprob: -21.625001907348633
    10. '(elements' → logprob: -21.625001907348633

Token 196: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004642736748792231
    2. ')
' → logprob: -7.75046443939209
    3. '))' → logprob: -11.12546443939209
    4. ' )' → logprob: -11.25046443939209
    5. ',' → logprob: -12.50046443939209
    6. '())' → logprob: -13.87546443939209
    7. ')

' → logprob: -15.75046443939209
    8. '))
' → logprob: -15.75046443939209
    9. ',)' → logprob: -15.75046443939209
    10. '),' → logprob: -16.250463485717773

Token 197: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013202388072386384
    2. ' for' → logprob: -6.8763203620910645
    3. 'print' → logprob: -9.001319885253906
    4. '```' → logprob: -9.501319885253906
    5. '\n' → logprob: -10.126319885253906
    6. '<|end|>' → logprob: -11.001319885253906
    7. ')' → logprob: -11.251319885253906
    8. '\' → logprob: -13.001319885253906
    9. '
' → logprob: -13.251319885253906
    10. '    
' → logprob: -13.376319885253906

Token 198: '('\' (ID: 24345)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.19174490869045258
    2. '('\' → logprob: -1.8167449235916138
    3. '(*(' → logprob: -5.316744804382324
    4. '("\' → logprob: -5.441744804382324
    5. '(' → logprob: -6.441744804382324
    6. '('' → logprob: -7.566744804382324
    7. '()' → logprob: -8.441744804382324
    8. '("' → logprob: -8.941744804382324
    9. '*' → logprob: -9.691744804382324
    10. 'edges' → logprob: -9.941744804382324

Token 199: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0034641751553863287
    2. '
' → logprob: -6.003464221954346
    3. '\n' → logprob: -7.253464221954346
    4. '1' → logprob: -8.378463745117188
    5. '
' → logprob: -11.378463745117188
    6. ' 
' → logprob: -11.503463745117188
    7. ')' → logprob: -12.628463745117188
    8. ''' → logprob: -12.628463745117188
    9. 'join' → logprob: -12.628463745117188
    10. '' → logprob: -13.003463745117188

Token 200: ''.' (ID: 6120)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48938313126564026
    2. '.join' → logprob: -0.9893831014633179
    3. ''.' → logprob: -4.489383220672607
    4. ').' → logprob: -6.239383220672607
    5. 'join' → logprob: -6.864383220672607
    6. ' .' → logprob: -7.239383220672607
    7. '".' → logprob: -9.23938274383545
    8. '''.' → logprob: -9.48938274383545
    9. ')' → logprob: -10.23938274383545
    10. '1' → logprob: -11.48938274383545

Token 201: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0683535037969705e-05
    2. ' join' → logprob: -12.00001049041748
    3. 'sep' → logprob: -13.12501049041748
    4. 'print' → logprob: -13.87501049041748
    5. '.' → logprob: -14.37501049041748
    6. 'write' → logprob: -15.25001049041748
    7. '```' → logprob: -15.75001049041748
    8. ''.' → logprob: -15.87501049041748
    9. '
' → logprob: -16.250011444091797
    10. ')' → logprob: -16.500011444091797

Token 202: '(map' (ID: 16946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.68744957447052
    2. '('' → logprob: -1.68744957447052
    3. '('{}' → logprob: -1.68744957447052
    4. '(map' → logprob: -2.1874494552612305
    5. 'map' → logprob: -4.6874494552612305
    6. 'f' → logprob: -5.4374494552612305
    7. '("{}' → logprob: -7.6874494552612305
    8. ''' → logprob: -7.8124494552612305
    9. '(' → logprob: -8.93744945526123
    10. '('{' → logprob: -8.93744945526123

Token 203: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.037219688296318054
    2. '(str' → logprob: -3.787219762802124
    3. '('' → logprob: -4.287219524383545
    4. '(' → logprob: -10.287220001220703
    5. '("' → logprob: -10.287220001220703
    6. 'lambda' → logprob: -10.537220001220703
    7. '('{}' → logprob: -10.787220001220703
    8. '('{' → logprob: -11.287220001220703
    9. '("{' → logprob: -13.912220001220703
    10. 'str' → logprob: -14.037220001220703

Token 204: ' uv' (ID: 31432)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0505005419254303
    2. '(str' → logprob: -3.0505006313323975
    3. 'lambda' → logprob: -7.175500392913818
    4. '(lambda' → logprob: -7.300500392913818
    5. ' str' → logprob: -8.050500869750977
    6. ''' → logprob: -9.425500869750977
    7. 'repr' → logprob: -10.425500869750977
    8. '   ' → logprob: -10.675500869750977
    9. '('' → logprob: -11.800500869750977
    10. '[str' → logprob: -13.050500869750977

Token 205: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00813437532633543
    2. 'lambda' → logprob: -5.883134365081787
    3. ' :' → logprob: -6.133134365081787
    4. ':'' → logprob: -7.258134365081787
    5. '=lambda' → logprob: -7.258134365081787
    6. ',' → logprob: -8.008134841918945
    7. 'f' → logprob: -8.133134841918945
    8. '=' → logprob: -8.383134841918945
    9. '(lambda' → logprob: -8.633134841918945
    10. ' lambda' → logprob: -9.258134841918945

Token 206: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04941008985042572
    2. 'lambda' → logprob: -3.049410104751587
    3. ' f' → logprob: -7.674409866333008
    4. 'str' → logprob: -8.924409866333008
    5. ' lambda' → logprob: -9.299409866333008
    6. ' '{}' → logprob: -9.799409866333008
    7. '   ' → logprob: -10.424409866333008
    8. ''' → logprob: -10.799409866333008
    9. '(lambda' → logprob: -11.049409866333008
    10. ' ' → logprob: -13.049409866333008

Token 207: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.00024512779782526195
    2. ''{' → logprob: -8.375245094299316
    3. '"' → logprob: -11.375245094299316
    4. 'f' → logprob: -13.500245094299316
    5. '{' → logprob: -13.875245094299316
    6. '("{' → logprob: -15.500245094299316
    7. '("{}' → logprob: -15.625245094299316
    8. '   ' → logprob: -16.250246047973633
    9. ''' → logprob: -16.375246047973633
    10. ' f' → logprob: -16.875246047973633

Token 208: 'uv' (ID: 6992)
  Prédit: 'uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uv' → logprob: -0.0001085497424355708
    2. ' uv' → logprob: -9.37510871887207
    3. 'u' → logprob: -11.50010871887207
    4. '{' → logprob: -11.62510871887207
    5. 'uvw' → logprob: -13.50010871887207
    6. '   ' → logprob: -13.87510871887207
    7. '_uv' → logprob: -14.50010871887207
    8. '"{' → logprob: -14.87510871887207
    9. 'str' → logprob: -15.00010871887207
    10. ''{' → logprob: -15.50010871887207

Token 209: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02215423807501793
    2. '0' → logprob: -3.8971543312072754
    3. ' ' → logprob: -7.647154331207275
    4. '}' → logprob: -7.772154331207275
    5. '{' → logprob: -8.022153854370117
    6. '"' → logprob: -9.522153854370117
    7. '1' → logprob: -9.897153854370117
    8. '.' → logprob: -10.022153854370117
    9. '"{' → logprob: -10.147153854370117
    10. '   ' → logprob: -10.272153854370117

Token 210: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. '[' → logprob: -11.000019073486328
    3. ' ' → logprob: -12.875019073486328
    4. '1' → logprob: -16.125019073486328
    5. '   ' → logprob: -18.000019073486328
    6. '```' → logprob: -18.625019073486328
    7. '}' → logprob: -18.625019073486328
    8. 's' → logprob: -19.250019073486328
    9. '
' → logprob: -19.500019073486328
    10. '  ' → logprob: -20.125019073486328

Token 211: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0001005630983854644
    2. '[' → logprob: -9.750100135803223
    3. ' }' → logprob: -10.125100135803223
    4. '}{' → logprob: -14.000100135803223
    5. '{' → logprob: -14.125100135803223
    6. '```' → logprob: -16.25010108947754
    7. '[]}' → logprob: -16.25010108947754
    8. ')}' → logprob: -16.37510108947754
    9. '()}' → logprob: -16.62510108947754
    10. '0' → logprob: -16.75010108947754

Token 212: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.010004210285842419
    2. '{' → logprob: -4.635004043579102
    3. '}' → logprob: -8.760004043579102
    4. ' uv' → logprob: -9.635004043579102
    5. ' ' → logprob: -10.760004043579102
    6. ' f' → logprob: -13.885004043579102
    7. '[' → logprob: -14.010004043579102
    8. '_uv' → logprob: -14.260004043579102
    9. 'uv' → logprob: -14.635004043579102
    10. '{}' → logprob: -14.885004043579102

Token 213: 'uv' (ID: 6992)
  Prédit: 'uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uv' → logprob: -8.061054359131958e-06
    2. ' uv' → logprob: -11.750007629394531
    3. 'uvw' → logprob: -17.37500762939453
    4. '_uv' → logprob: -18.12500762939453
    5. '   ' → logprob: -19.62500762939453
    6. 'u' → logprob: -20.50000762939453
    7. ' ' → logprob: -20.75000762939453
    8. '1' → logprob: -20.75000762939453
    9. '{' → logprob: -21.12500762939453
    10. '0' → logprob: -21.25000762939453

Token 214: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14273706078529358
    2. '[' → logprob: -2.0177371501922607
    3. ' ' → logprob: -10.39273738861084
    4. '}' → logprob: -12.01773738861084
    5. '   ' → logprob: -12.26773738861084
    6. '}")' → logprob: -12.26773738861084
    7. 'uv' → logprob: -12.64273738861084
    8. '```' → logprob: -12.64273738861084
    9. ')' → logprob: -13.01773738861084
    10. '0' → logprob: -13.51773738861084

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. 'uv' → logprob: -13.625001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '0' → logprob: -16.375001907348633
    5. '
' → logprob: -16.875001907348633
    6. '```' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '[' → logprob: -18.875001907348633
    9. ' uv' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.062501907348633

Token 216: ']' (ID: 60)
  Prédit: '}",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}",' → logprob: -0.015084391459822655
    2. '}"' → logprob: -4.640084266662598
    3. '}")' → logprob: -5.765084266662598
    4. '}' → logprob: -6.140084266662598
    5. '})' → logprob: -11.640084266662598
    6. '},' → logprob: -12.390084266662598
    7. ')",' → logprob: -12.765084266662598
    8. '"}' → logprob: -13.265084266662598
    9. '}".' → logprob: -13.515084266662598
    10. '}",
' → logprob: -13.890084266662598

Token 217: '}",' (ID: 20115)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.3321397006511688
    2. '}",' → logprob: -1.5821397304534912
    3. ')",' → logprob: -2.582139730453491
    4. '}' → logprob: -7.457139492034912
    5. ')' → logprob: -7.707139492034912
    6. '"' → logprob: -8.70713996887207
    7. '}"' → logprob: -8.95713996887207
    8. ',' → logprob: -10.20713996887207
    9. ')"' → logprob: -10.33213996887207
    10. '")' → logprob: -10.83213996887207

Token 218: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.008616226725280285
    2. ' edges' → logprob: -4.7586164474487305
    3. '(edges' → logprob: -13.63361644744873
    4. '   ' → logprob: -15.25861644744873
    5. '.edges' → logprob: -15.38361644744873
    6. 'Edges' → logprob: -18.008615493774414
    7. 'edge' → logprob: -18.258615493774414
    8. '_edges' → logprob: -18.383615493774414
    9. ' ' → logprob: -18.508615493774414
    10. ')' → logprob: -19.008615493774414

Token 219: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.061999283730983734
    2. '))' → logprob: -2.8119993209838867
    3. ')' → logprob: -10.561999320983887
    4. '))))' → logprob: -12.686999320983887
    5. ')))
' → logprob: -13.561999320983887
    6. ')));' → logprob: -14.436999320983887
    7. '}))' → logprob: -14.811999320983887
    8. '))
' → logprob: -15.686999320983887
    9. ']))' → logprob: -16.43699836730957
    10. ' ))' → logprob: -16.43699836730957


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 217
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 41.01%
Précision adaptée (1ère position): 41.47%
Précision (top 10): 86.64%
================================================================================
