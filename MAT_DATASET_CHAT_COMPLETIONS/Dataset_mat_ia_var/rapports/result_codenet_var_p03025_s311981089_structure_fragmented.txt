================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def make_list_of_ones(length):
    return [1 for _ in range(length)]

def compute_powers(N, mod):
    power = make_list_of_ones(N+1)
    for i in range(2, N+1):
        power[i] = (power[i-1]*i) % mod
    return power

def compute_revs(N, mod, power):
    rev = make_list_of_ones(N+1)
    rev[N] = pow(power[N], mod-2, mod)
    for j in range(N, 0, -1):
        rev[j-1] = (rev[j]*j) % mod
    return rev

def combination(K, R, power, rev, mod):
    if K < R:
        return 0
    else:
        return ((power[K])*(rev[K-R])*(rev[R])) % mod

def partial_combination(K, R, power, rev, mod):
    if K < R:
        return 0
    else:
        return (power[K])*(rev[K-R]) % mod

def create_combi(N, mod):
    power = compute_powers(N, mod)
    rev = compute_revs(N, mod, power)
    combi_obj = {}
    combi_obj['power'] = power
    combi_obj['rev'] = rev
    combi_obj['mod'] = mod
    return combi_obj

def combi_com(combi_obj, K, R):
    return combination(K, R, combi_obj['power'], combi_obj['rev'], combi_obj['mod'])

def combi_pom(combi_obj, K, R):
    return partial_combination(K, R, combi_obj['power'], combi_obj['rev'], combi_obj['mod'])

def parse_input():
    return map(int, input().split())

def pow_mod(base, exp, mod):
    return pow(base, exp, mod)

def calculate_X(N, A, B, mod, combi_obj):
    X = 0
    for i in range(N, 2*N):
        pow_AB = pow_mod(A+B, 2*N-1-i, mod)
        i_term = i
        comb_term = combi_com(combi_obj, i-1, N-1)
        term1 = pow_mod(A, N, mod) * pow_mod(B, i-N, mod)
        term2 = pow_mod(B, N, mod) * pow_mod(A, i-N, mod)
        X_add = pow_AB * i_term * comb_term * (term1 + term2)
        X = (X + X_add) % mod
    return X

def calculate_Y(C, A, B, N, mod):
    return (100 - C) * pow_mod(A + B, 2*N-1, mod)

def calculate_ans(X, Y, mod):
    X_mod = (X * 100) % mod
    invY = pow_mod(Y, mod-2, mod)
    return (X_mod * invY) % mod

def main():
    mod = 10**9 + 7
    combi_obj = create_combi(2*10**5, mod)
    N, A, B, C = parse_input()
    X = calculate_X(N, A, B, mod, combi_obj)
    Y = calculate_Y(C, A, B, N, mod)
    ans = calculate_ans(X, Y, mod)
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' make' (ID: 1520)
  → Token d'amorce (pas de prédiction)

Token 2: '_list' (ID: 4162)
  → Token d'amorce (pas de prédiction)

Token 3: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003733542689587921
    2. '_' → logprob: -8.500372886657715
    3. '():' → logprob: -10.125372886657715
    4. '```' → logprob: -10.250372886657715
    5. '(:' → logprob: -11.000372886657715
    6. '("("' → logprob: -11.125372886657715
    7. '_list' → logprob: -11.875372886657715
    8. '(**' → logprob: -12.000372886657715
    9. ':' → logprob: -12.375372886657715
    10. '(
' → logprob: -12.375372886657715

Token 4: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17604078352451324
    2. '_names' → logprob: -3.0510408878326416
    3. '_items' → logprob: -3.0510408878326416
    4. '_strings' → logprob: -3.9260408878326416
    5. '_values' → logprob: -4.5510406494140625
    6. '_elements' → logprob: -4.9260406494140625
    7. '_lists' → logprob: -5.1760406494140625
    8. '_words' → logprob: -5.1760406494140625
    9. '_functions' → logprob: -5.5510406494140625
    10. '_numbers' → logprob: -5.5510406494140625

Token 5: 'ones' (ID: 3617)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7945160865783691
    2. 'words' → logprob: -1.5445160865783691
    3. 'strings' → logprob: -2.169516086578369
    4. 'values' → logprob: -2.294516086578369
    5. 'items' → logprob: -3.419516086578369
    6. 'names' → logprob: -3.669516086578369
    7. 'elements' → logprob: -3.794516086578369
    8. 'tokens' → logprob: -3.794516086578369
    9. 'ints' → logprob: -5.544516086578369
    10. 'lists' → logprob: -5.794516086578369

Token 6: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14841987192630768
    2. '():' → logprob: -2.1484198570251465
    3. '(:' → logprob: -3.8984198570251465
    4. '(_:' → logprob: -7.8984198570251465
    5. '_' → logprob: -8.648420333862305
    6. ':' → logprob: -8.898420333862305
    7. '```' → logprob: -9.773420333862305
    8. '_:' → logprob: -9.898420333862305
    9. '(_' → logprob: -10.023420333862305
    10. '(":' → logprob: -10.648420333862305

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006046231836080551
    2. ')' → logprob: -5.131046295166016
    3. ':' → logprob: -9.256046295166016
    4. '):
' → logprob: -11.881046295166016
    5. '_' → logprob: -12.006046295166016
    6. ',' → logprob: -13.256046295166016
    7. ''):' → logprob: -14.006046295166016
    8. '*' → logprob: -14.131046295166016
    9. ' ):' → logprob: -14.131046295166016
    10. '=' → logprob: -14.381046295166016

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012683515436947346
    2. '   ' → logprob: -4.512683391571045
    3. ':
' → logprob: -7.387683391571045
    4. ':return' → logprob: -7.512683391571045
    5. '```' → logprob: -8.137683868408203
    6. '():' → logprob: -9.762683868408203
    7. ' return' → logprob: -11.137683868408203
    8. '    
' → logprob: -11.262683868408203
    9. '':' → logprob: -11.387683868408203
    10. '`:' → logprob: -11.387683868408203

Token 9: ' return' (ID: 622)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.107932209968567
    2. '[' → logprob: -1.732932209968567
    3. ' return' → logprob: -1.732932209968567
    4. '   ' → logprob: -2.2329320907592773
    5. 'return' (adapté à ' return') → logprob: -2.8579320907592773
    6. '`' → logprob: -2.9829320907592773
    7. '\' → logprob: -3.1079320907592773
    8. '\n' → logprob: -3.9829320907592773
    9. ' ' → logprob: -5.107932090759277
    10. ':' → logprob: -5.107932090759277

Token 10: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38785433769226074
    2. '[' → logprob: -1.1378543376922607
    3. ' ' → logprob: -7.01285457611084
    4. ' []' → logprob: -9.63785457611084
    5. '  ' → logprob: -12.01285457611084
    6. ' ' → logprob: -13.01285457611084
    7. '[]' → logprob: -13.38785457611084
    8. ' ['' → logprob: -13.88785457611084
    9. ' [
' → logprob: -14.01285457611084
    10. '_' → logprob: -14.51285457611084

Token 11: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -20.625
    5. '0' → logprob: -21.0
    6. '`' → logprob: -21.125
    7. '_' → logprob: -21.5
    8. '۱' → logprob: -22.0
    9. ' ' → logprob: -22.5
    10. '  ' → logprob: -22.625

Token 12: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3967033922672272
    2. ']' → logprob: -1.1467033624649048
    3. 'for' → logprob: -5.021703243255615
    4. ' ]' → logprob: -6.271703243255615
    5. ']*' → logprob: -6.771703243255615
    6. '*' → logprob: -10.021703720092773
    7. ')' → logprob: -10.771703720092773
    8. ' *' → logprob: -11.146703720092773
    9. '	for' → logprob: -11.646703720092773
    10. '   ' → logprob: -11.646703720092773

Token 13: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.752672553062439
    2. ' _' → logprob: -0.752672553062439
    3. ' ' → logprob: -2.8776726722717285
    4. ' i' → logprob: -6.6276726722717285
    5. ' range' → logprob: -9.25267219543457
    6. ' in' → logprob: -9.62767219543457
    7. '_range' → logprob: -11.62767219543457
    8. 'range' → logprob: -11.87767219543457
    9. '  ' → logprob: -12.00267219543457
    10. 'i' → logprob: -12.25267219543457

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004098942968994379
    2. 'in' → logprob: -5.504098892211914
    3. ' ' → logprob: -11.004098892211914
    4. 'range' → logprob: -12.879098892211914
    5. '_' → logprob: -14.754098892211914
    6. '<|end|>' → logprob: -15.254098892211914
    7. '_in' → logprob: -15.379098892211914
    8. ' range' → logprob: -15.879098892211914
    9. '  ' → logprob: -16.379098892211914
    10. '	in' → logprob: -16.629098892211914

Token 15: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.313262403011322
    2. 'range' → logprob: -1.3132624626159668
    3. '	range' → logprob: -14.813261985778809
    4. '(range' → logprob: -16.188262939453125
    5. '_range' → logprob: -16.438262939453125
    6. ' xrange' → logprob: -16.438262939453125
    7. ' rang' → logprob: -17.563262939453125
    8. ' ' → logprob: -17.688262939453125
    9. 'rang' → logprob: -17.938262939453125
    10. 'length' → logprob: -18.188262939453125

Token 16: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.004081247374415398
    2. '(' → logprob: -5.5040812492370605
    3. 'length' → logprob: -13.129080772399902
    4. ' (' → logprob: -14.754080772399902
    5. '(len' → logprob: -15.254080772399902
    6. ' length' → logprob: -16.75408172607422
    7. ',length' → logprob: -17.25408172607422
    8. '(depth' → logprob: -17.87908172607422
    9. '(
' → logprob: -18.12908172607422
    10. ':length' → logprob: -18.37908172607422

Token 17: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.968312951968983e-06
    2. ' )' → logprob: -11.875009536743164
    3. ']' → logprob: -14.250009536743164
    4. ')' → logprob: -14.250009536743164
    5. ')])' → logprob: -14.500009536743164
    6. '   ' → logprob: -15.125009536743164
    7. '])]' → logprob: -15.250009536743164
    8. '))' → logprob: -16.125009536743164
    9. '')]' → logprob: -16.125009536743164
    10. ')]
' → logprob: -16.250009536743164

Token 18: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' compute' (ID: 23864)
  Prédit: ' make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' make' → logprob: -0.08865401148796082
    2. ' add' → logprob: -3.463654041290283
    3. ' space' → logprob: -3.588654041290283
    4. ' calculate' → logprob: -4.838654041290283
    5. ' multiply' → logprob: -5.213654041290283
    6. ' ' → logprob: -5.713654041290283
    7. '_' → logprob: -5.963654041290283
    8. ' my' → logprob: -6.713654041290283
    9. ' create' → logprob: -6.713654041290283
    10. ' get' → logprob: -7.588654041290283

Token 20: '_p' (ID: 1359)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.13182522356510162
    2. '_' → logprob: -2.5068252086639404
    3. '_factor' → logprob: -3.5068252086639404
    4. '_square' → logprob: -5.7568254470825195
    5. '_s' → logprob: -6.0068254470825195
    6. '_average' → logprob: -6.2568254470825195
    7. '_product' → logprob: -6.7568254470825195
    8. '(' → logprob: -7.2568254470825195
    9. '_mean' → logprob: -7.8818254470825195
    10. ' _' → logprob: -8.00682544708252

Token 21: 'owers' (ID: 23882)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.6307643055915833
    2. 'r' → logprob: -1.5057642459869385
    3. 'rob' → logprob: -1.6307642459869385
    4. 'ower' → logprob: -4.130764484405518
    5. 'er' → logprob: -4.380764484405518
    6. 'ow' → logprob: -4.880764484405518
    7. 'rod' → logprob: -5.630764484405518
    8. 'i' → logprob: -6.880764484405518
    9. 'en' → logprob: -7.005764484405518
    10. 'refix' → logprob: -7.130764484405518

Token 22: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005840045399963856
    2. '_of' → logprob: -5.505839824676514
    3. ' (' → logprob: -7.130839824676514
    4. '_' → logprob: -8.130840301513672
    5. 'of' → logprob: -9.130840301513672
    6. '(x' → logprob: -9.380840301513672
    7. '(_' → logprob: -9.380840301513672
    8. '(of' → logprob: -9.880840301513672
    9. '```' → logprob: -10.005840301513672
    10. 'def' → logprob: -10.380840301513672

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1869991272687912
    2. '):' → logprob: -2.0619990825653076
    3. ')' → logprob: -3.3119990825653076
    4. ' ,' → logprob: -5.811999320983887
    5. '(' → logprob: -7.061999320983887
    6. '_' → logprob: -7.436999320983887
    7. ' ):' → logprob: -7.436999320983887
    8. ')]' → logprob: -7.561999320983887
    9. ' )' → logprob: -8.061999320983887
    10. '(n' → logprob: -8.186999320983887

Token 24: ' mod' (ID: 1812)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.675202488899231
    2. 'max' → logprob: -1.550202488899231
    3. ' base' → logprob: -2.1752023696899414
    4. ' k' → logprob: -3.9252023696899414
    5. ' x' → logprob: -3.9252023696899414
    6. ' M' → logprob: -4.050202369689941
    7. 'x' → logprob: -4.550202369689941
    8. 'k' → logprob: -4.550202369689941
    9. 'base' → logprob: -4.675202369689941
    10. ' ' → logprob: -4.925202369689941

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018899753922596574
    2. '=' → logprob: -9.500188827514648
    3. ' ):' → logprob: -9.875188827514648
    4. ')' → logprob: -10.375188827514648
    5. ',' → logprob: -11.500188827514648
    6. ':' → logprob: -11.625188827514648
    7. '):
' → logprob: -12.000188827514648
    8. ')):' → logprob: -13.625188827514648
    9. '_' → logprob: -13.875188827514648
    10. ']:' → logprob: -14.125188827514648

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09509522467851639
    2. '   ' → logprob: -2.720095157623291
    3. ' :' → logprob: -4.470095157623291
    4. ':
' → logprob: -5.720095157623291
    5. '():' → logprob: -5.845095157623291
    6. '(' → logprob: -6.220095157623291
    7. '    ' → logprob: -7.220095157623291
    8. ' ' → logprob: -7.345095157623291
    9. ' :
' → logprob: -7.720095157623291
    10. ' (' → logprob: -7.720095157623291

Token 27: ' power' (ID: 3470)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.19800631701946259
    2. '   ' → logprob: -2.6980063915252686
    3. ' powers' → logprob: -3.0730063915252686
    4. 'result' → logprob: -3.5730063915252686
    5. ' results' → logprob: -3.6980063915252686
    6. ' return' → logprob: -6.0730061531066895
    7. '    ' → logprob: -6.0730061531066895
    8. ' res' → logprob: -6.1980061531066895
    9. ' p' → logprob: -6.3230061531066895
    10. '```' → logprob: -6.9480061531066895

Token 28: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00015562419139314443
    2. '_s' → logprob: -9.375155448913574
    3. '=' → logprob: -10.500155448913574
    4. '_' → logprob: -11.000155448913574
    5. '   ' → logprob: -11.375155448913574
    6. ' =' → logprob: -11.750155448913574
    7. '_list' → logprob: -13.000155448913574
    8. ' ' → logprob: -13.125155448913574
    9. ' s' → logprob: -13.750155448913574
    10. '_values' → logprob: -15.000155448913574

Token 29: ' make' (ID: 1520)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2244672328233719
    2. ' ' → logprob: -2.3494672775268555
    3. ' [' → logprob: -2.7244672775268555
    4. '[' → logprob: -3.2244672775268555
    5. '[N' → logprob: -9.349467277526855
    6. '0' → logprob: -9.599467277526855
    7. '2' → logprob: -9.849467277526855
    8. '   ' → logprob: -10.724467277526855
    9. '[int' → logprob: -11.474467277526855
    10. '[]' → logprob: -11.599467277526855

Token 30: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.263011578586884e-05
    2. '_' → logprob: -10.125042915344238
    3. ' _' → logprob: -13.750042915344238
    4. '_power' → logprob: -15.000042915344238
    5. '_p' → logprob: -15.375042915344238
    6. '_l' → logprob: -16.000041961669922
    7. '_s' → logprob: -16.125041961669922
    8. '_array' → logprob: -16.250041961669922
    9. '_pow' → logprob: -16.375041961669922
    10. '_lst' → logprob: -16.500041961669922

Token 31: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.375015258789062
    3. 'of' → logprob: -13.125015258789062
    4. ' of' → logprob: -13.625015258789062
    5. '[' → logprob: -14.875015258789062
    6. ' _' → logprob: -15.875015258789062
    7. '_list' → logprob: -16.125015258789062
    8. '_o' → logprob: -16.125015258789062
    9. 's' → logprob: -17.750015258789062
    10. '   ' → logprob: -17.750015258789062

Token 32: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.897412822581828e-05
    2. 'ones' → logprob: -9.750068664550781
    3. '_one' → logprob: -12.500068664550781
    4. '_on' → logprob: -13.500068664550781
    5. '1' → logprob: -13.625068664550781
    6. '.ones' → logprob: -13.750068664550781
    7. '```' → logprob: -14.125068664550781
    8. '_once' → logprob: -15.250068664550781
    9. 'On' → logprob: -15.250068664550781
    10. 'ONES' → logprob: -15.250068664550781

Token 33: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -2.45848218582978e-06
    2. '1' → logprob: -13.50000286102295
    3. 'ONES' → logprob: -15.25000286102295
    4. 'one' → logprob: -15.50000286102295
    5. '.ones' → logprob: -16.125001907348633
    6. 'ines' → logprob: -16.250001907348633
    7. ' ones' → logprob: -16.500001907348633
    8. 'powers' → logprob: -16.625001907348633
    9. 'o' → logprob: -16.875001907348633
    10. '```' → logprob: -17.125001907348633

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.018195247277617455
    2. '(' → logprob: -4.018195152282715
    3. ' (' → logprob: -10.893195152282715
    4. '(len' → logprob: -11.768195152282715
    5. '(n' → logprob: -11.768195152282715
    6. '(length' → logprob: -12.018195152282715
    7. ')' → logprob: -13.643195152282715
    8. '(
' → logprob: -13.768195152282715
    9. '((' → logprob: -14.018195152282715
    10. '(

' → logprob: -14.143195152282715

Token 35: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007909284322522581
    2. '+' → logprob: -7.875791072845459
    3. ' )' → logprob: -7.875791072845459
    4. ')
' → logprob: -11.7507905960083
    5. '*' → logprob: -11.8757905960083
    6. ' +' → logprob: -11.8757905960083
    7. '))' → logprob: -13.0007905960083
    8. ',' → logprob: -13.1257905960083
    9. ']' → logprob: -13.8757905960083
    10. '2' → logprob: -14.3757905960083

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003222342347726226
    2. ')' → logprob: -8.625322341918945
    3. '2' → logprob: -9.500322341918945
    4. ' ' → logprob: -9.875322341918945
    5. '   ' → logprob: -11.875322341918945
    6. '+' → logprob: -12.750322341918945
    7. '```' → logprob: -13.125322341918945
    8. '10' → logprob: -14.375322341918945
    9. '))' → logprob: -14.500322341918945
    10. ' )' → logprob: -14.625322341918945

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.452426608419046e-05
    2. ')
' → logprob: -10.75003433227539
    3. ' )' → logprob: -11.87503433227539
    4. ',' → logprob: -12.87503433227539
    5. ')
' → logprob: -13.75003433227539
    6. ']' → logprob: -13.87503433227539
    7. ')

' → logprob: -14.75003433227539
    8. ' ' → logprob: -15.50003433227539
    9. '),' → logprob: -16.12503433227539
    10. '2' → logprob: -16.12503433227539

Token 38: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4197506904602051
    2. '   ' → logprob: -1.294750690460205
    3. '    
' → logprob: -3.044750690460205
    4. ' for' → logprob: -4.419750690460205
    5. ' 
' → logprob: -5.419750690460205
    6. '   
' → logprob: -6.919750690460205
    7. '  
' → logprob: -7.044750690460205
    8. ' ' → logprob: -7.669750690460205
    9. 'for' → logprob: -7.794750690460205
    10. '[' → logprob: -8.044750213623047

Token 39: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03961969166994095
    2. 'for' (adapté à ' for') → logprob: -3.4146196842193604
    3. '
' → logprob: -6.2896199226379395
    4. '   ' → logprob: -6.4146199226379395
    5. ' 
' → logprob: -6.6646199226379395
    6. ' ' → logprob: -7.2896199226379395
    7. '    
' → logprob: -8.664619445800781
    8. '[' → logprob: -9.414619445800781
    9. '\n' → logprob: -9.539619445800781
    10. '\t' → logprob: -10.039619445800781

Token 40: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6212641000747681
    2. ' _' → logprob: -1.371264100074768
    3. ' ' → logprob: -1.621264100074768
    4. '_' → logprob: -4.4962639808654785
    5. 'i' → logprob: -10.371264457702637
    6. ' ' → logprob: -10.496264457702637
    7. ' space' → logprob: -10.996264457702637
    8. ')' → logprob: -11.121264457702637
    9. ' ‌' → logprob: -11.371264457702637
    10. '  ' → logprob: -11.621264457702637

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003308777464553714
    2. 'in' → logprob: -5.8783087730407715
    3. ' ' → logprob: -7.6283087730407715
    4. '  ' → logprob: -12.75330924987793
    5. '	in' → logprob: -13.00330924987793
    6. 'n' → logprob: -13.12830924987793
    7. '_' → logprob: -13.50330924987793
    8. '1' → logprob: -13.50330924987793
    9. '+' → logprob: -14.12830924987793
    10. 's' → logprob: -14.25330924987793

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.033665526658296585
    2. 'range' → logprob: -3.408665418624878
    3. ' ' → logprob: -11.408665657043457
    4. '(range' → logprob: -12.658665657043457
    5. ' xrange' → logprob: -13.408665657043457
    6. '	range' → logprob: -13.408665657043457
    7. ' in' → logprob: -13.658665657043457
    8. ')' → logprob: -14.783665657043457
    9. '1' → logprob: -14.908665657043457
    10. '   ' → logprob: -15.658665657043457

Token 43: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009456383413635194
    2. ' (' → logprob: -7.375945568084717
    3. '1' → logprob: -8.500946044921875
    4. ' ' → logprob: -9.125946044921875
    5. '(N' → logprob: -13.375946044921875
    6. '   ' → logprob: -13.375946044921875
    7. ')' → logprob: -13.500946044921875
    8. '2' → logprob: -13.500946044921875
    9. '(
' → logprob: -14.500946044921875
    10. '(i' → logprob: -16.000946044921875

Token 44: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023605444002896547
    2. '2' → logprob: -6.1273603439331055
    3. ' ' → logprob: -8.877360343933105
    4. 'N' → logprob: -10.752360343933105
    5. '   ' → logprob: -11.627360343933105
    6. '0' → logprob: -13.002360343933105
    7. ' N' → logprob: -13.127360343933105
    8. '(' → logprob: -14.002360343933105
    9. ')' → logprob: -15.377360343933105
    10. 'len' → logprob: -15.752360343933105

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015098588773980737
    2. ' ,' → logprob: -6.501509666442871
    3. ',N' → logprob: -11.876509666442871
    4. ' ' → logprob: -15.376509666442871
    5. ',len' → logprob: -16.376510620117188
    6. '，' → logprob: -16.376510620117188
    7. ',
' → logprob: -16.751510620117188
    8. 'to' → logprob: -17.376510620117188
    9. ',length' → logprob: -17.751510620117188
    10. ',n' → logprob: -17.876510620117188

Token 46: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.06219734624028206
    2. 'N' → logprob: -2.81219744682312
    3. ' len' → logprob: -8.5621976852417
    4. 'len' → logprob: -10.6871976852417
    5. '   ' → logprob: -11.8121976852417
    6. '    ' → logprob: -12.5621976852417
    7. ' ' → logprob: -12.5621976852417
    8. ' n' → logprob: -14.5621976852417
    9. 'n' → logprob: -15.3121976852417
    10. '	N' → logprob: -15.6871976852417

Token 47: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804183006286621
    2. ' +' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.538042068481445
    4. '   ' → logprob: -16.163042068481445
    5. ')' → logprob: -17.288042068481445
    6. '+
' → logprob: -17.913042068481445
    7. '+)' → logprob: -18.538042068481445
    8. ')+' → logprob: -18.788042068481445
    9. ' ' → logprob: -18.788042068481445
    10. ' plus' → logprob: -19.163042068481445

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005679258611053228
    2. '2' → logprob: -7.50056791305542
    3. ' ' → logprob: -11.375568389892578
    4. '+' → logprob: -13.375568389892578
    5. '   ' → logprob: -13.750568389892578
    6. '```' → logprob: -14.750568389892578
    7. ')' → logprob: -15.750568389892578
    8. '):
' → logprob: -17.188068389892578
    9. '
' → logprob: -17.313068389892578
    10. '  ' → logprob: -17.625568389892578

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001057102927006781
    2. ':' → logprob: -7.126057147979736
    3. ' ):' → logprob: -8.876056671142578
    4. '):
' → logprob: -9.626056671142578
    5. ')' → logprob: -10.251056671142578
    6. ',' → logprob: -12.126056671142578
    7. '   ' → logprob: -13.001056671142578
    8. ']:' → logprob: -13.626056671142578
    9. '}:' → logprob: -14.001056671142578
    10. ' :' → logprob: -14.376056671142578

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1093311607837677
    2. '    ' → logprob: -3.2343311309814453
    3. ' ' → logprob: -3.9843311309814453
    4. '   ' → logprob: -4.234331130981445
    5. ' power' → logprob: -4.984331130981445
    6. 'power' → logprob: -5.484331130981445
    7. '        
' → logprob: -5.984331130981445
    8. ':' → logprob: -5.984331130981445
    9. '        ' → logprob: -6.234331130981445
    10. '*' → logprob: -6.484331130981445

Token 51: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' (adapté à ' power') → logprob: -0.3892255425453186
    2. ' power' → logprob: -1.1392254829406738
    3. '   ' → logprob: -7.014225482940674
    4. ' i' → logprob: -7.639225482940674
    5. 'i' → logprob: -8.139225959777832
    6. ' ' → logprob: -8.514225959777832
    7. '    ' → logprob: -8.639225959777832
    8. '       ' → logprob: -9.639225959777832
    9. 'pow' → logprob: -9.764225959777832
    10. '_power' → logprob: -10.389225959777832

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028147439006716013
    2. '[' → logprob: -5.877814769744873
    3. ' [' → logprob: -12.752814292907715
    4. '```' → logprob: -13.377814292907715
    5. '\[' → logprob: -14.252814292907715
    6. '[I' → logprob: -14.377814292907715
    7. '[j' → logprob: -14.502814292907715
    8. '[
' → logprob: -14.752814292907715
    9. '[end' → logprob: -15.502814292907715
    10. '[f' → logprob: -15.502814292907715

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007629302563145757
    2. ' ]' → logprob: -7.875762939453125
    3. ']=' → logprob: -8.250762939453125
    4. '=' → logprob: -9.750762939453125
    5. ')' → logprob: -10.500762939453125
    6. '-' → logprob: -10.625762939453125
    7. ' =' → logprob: -11.750762939453125
    8. ' ' → logprob: -13.625762939453125
    9. ']

' → logprob: -14.750762939453125
    10. '*' → logprob: -14.875762939453125

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004855161067098379
    2. ' =' → logprob: -5.379855155944824
    3. '*=' → logprob: -8.379855155944824
    4. ' *=' → logprob: -12.879855155944824
    5. '*' → logprob: -14.504855155944824
    6. '=

' → logprob: -14.629855155944824
    7. ']=' → logprob: -15.004855155944824
    8. '=i' → logprob: -15.129855155944824
    9. '=
' → logprob: -15.629855155944824
    10. ']' → logprob: -15.879855155944824

Token 55: ' (' (ID: 350)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.002905920147895813
    2. 'power' → logprob: -6.37790584564209
    3. '(pow' → logprob: -7.62790584564209
    4. ' (' → logprob: -7.75290584564209
    5. '(' → logprob: -8.62790584564209
    6. 'pow' → logprob: -9.87790584564209
    7. ' power' → logprob: -10.75290584564209
    8. '(p' → logprob: -11.37790584564209
    9. '       ' → logprob: -12.12790584564209
    10. '   ' → logprob: -12.12790584564209

Token 56: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.005081364419311285
    2. ' power' → logprob: -5.8800811767578125
    3. '2' → logprob: -6.5050811767578125
    4. 'i' → logprob: -8.005081176757812
    5. '   ' → logprob: -8.380081176757812
    6. 'pow' → logprob: -9.005081176757812
    7. '(power' → logprob: -11.005081176757812
    8. ' ' → logprob: -11.130081176757812
    9. '  ' → logprob: -11.505081176757812
    10. '3' → logprob: -12.005081176757812

Token 57: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. ' [' → logprob: -16.750003814697266
    4. '[j' → logprob: -17.000003814697266
    5. '[I' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.500003814697266
    7. 'i' → logprob: -17.625003814697266
    8. '
' → logprob: -17.750003814697266
    9. '```' → logprob: -18.000003814697266
    10. '[
' → logprob: -18.625003814697266

Token 58: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009138475870713592
    2. ' -' → logprob: -7.000913619995117
    3. ']' → logprob: -13.500913619995117
    4. '[i' → logprob: -14.625913619995117
    5. '1' → logprob: -15.625913619995117
    6. ' ' → logprob: -15.875913619995117
    7. 'i' → logprob: -16.250913619995117
    8. '```' → logprob: -17.000913619995117
    9. '-i' → logprob: -18.000913619995117
    10. '(i' → logprob: -18.125913619995117

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.375006675720215
    3. ']' → logprob: -13.625006675720215
    4. '```' → logprob: -14.500006675720215
    5. '<|end|>' → logprob: -15.937506675720215
    6. '   ' → logprob: -15.937506675720215
    7. ')' → logprob: -16.43750762939453
    8. '-' → logprob: -16.50000762939453
    9. '2' → logprob: -16.56250762939453
    10. '])' → logprob: -17.00000762939453

Token 60: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0862211138010025
    2. ']' → logprob: -2.586221218109131
    3. ' *' → logprob: -5.086221218109131
    4. '```' → logprob: -8.086220741271973
    5. '   ' → logprob: -8.586220741271973
    6. '2' → logprob: -8.961220741271973
    7. ' ' → logprob: -9.086220741271973
    8. '    ' → logprob: -9.336220741271973
    9. ']*' → logprob: -9.461220741271973
    10. '}' → logprob: -9.961220741271973

Token 61: 'i' (ID: 72)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04468001052737236
    2. ' ' → logprob: -3.919680118560791
    3. 'i' → logprob: -4.919680118560791
    4. ' i' → logprob: -5.419680118560791
    5. '10' → logprob: -5.544680118560791
    6. '3' → logprob: -6.044680118560791
    7. '   ' → logprob: -6.169680118560791
    8. 'mod' → logprob: -6.419680118560791
    9. '    ' → logprob: -7.919680118560791
    10. '7' → logprob: -8.044679641723633

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009858887642621994
    2. ' )' → logprob: -7.125986099243164
    3. ')%' → logprob: -8.625986099243164
    4. '%' → logprob: -14.250986099243164
    5. '   ' → logprob: -14.375986099243164
    6. '`)' → logprob: -15.500986099243164
    7. '+' → logprob: -16.000986099243164
    8. '```' → logprob: -16.500986099243164
    9. '**' → logprob: -16.625986099243164
    10. ' %' → logprob: -16.625986099243164

Token 63: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1427098661661148
    2. '%' → logprob: -2.017709970474243
    3. ')' → logprob: -11.267709732055664
    4. ' mod' → logprob: -11.767709732055664
    5. ' ' → logprob: -12.392709732055664
    6. ' ' → logprob: -12.767709732055664
    7. ')%' → logprob: -13.142709732055664
    8. 'mod' → logprob: -13.517709732055664
    9. '%n' → logprob: -14.392709732055664
    10. '%c' → logprob: -14.517709732055664

Token 64: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.011050296947360039
    2. 'mod' → logprob: -4.511050224304199
    3. '(mod' → logprob: -13.5110502243042
    4. ' ' → logprob: -14.1360502243042
    5. '	mod' → logprob: -15.8860502243042
    6. ' modul' → logprob: -16.011051177978516
    7. ' modu' → logprob: -17.511051177978516
    8. '_mod' → logprob: -17.886051177978516
    9. ' мод' → logprob: -18.011051177978516
    10. ' ' → logprob: -18.386051177978516

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26111525297164917
    2. '\n' → logprob: -1.886115312576294
    3. '
' → logprob: -3.261115312576294
    4. ' ' → logprob: -4.511115074157715
    5. '\' → logprob: -4.886115074157715
    6. '    
' → logprob: -4.886115074157715
    7. ' 
' → logprob: -6.011115074157715
    8. '<|end|>' → logprob: -6.011115074157715
    9. '\r' → logprob: -6.136115074157715
    10. '  
' → logprob: -6.636115074157715

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06427574157714844
    2. '\n' → logprob: -4.064275741577148
    3. '
' → logprob: -4.189275741577148
    4. '<|end|>' → logprob: -4.939275741577148
    5. ' ' → logprob: -5.064275741577148
    6. '    
' → logprob: -5.564275741577148
    7. '\' → logprob: -5.939275741577148
    8. '\r' → logprob: -6.189275741577148
    9. '```' → logprob: -6.439275741577148
    10. 'return' → logprob: -6.564275741577148

Token 67: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5743089318275452
    2. '
' → logprob: -1.6993088722229004
    3. ' ' → logprob: -1.6993088722229004
    4. 'return' (adapté à ' return') → logprob: -3.3243088722229004
    5. ' 
' → logprob: -4.5743088722229
    6. ' return' → logprob: -5.1993088722229
    7. '<|end|>' → logprob: -5.5743088722229
    8. '    
' → logprob: -5.6993088722229
    9. '	return' → logprob: -5.6993088722229
    10. '  
' → logprob: -6.0743088722229

Token 68: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.048589304089546204
    2. 'power' → logprob: -3.0485892295837402
    3. '(power' → logprob: -13.423589706420898
    4. 'pow' → logprob: -15.048589706420898
    5. ' pow' → logprob: -16.5485897064209
    6. 'powers' → logprob: -17.4235897064209
    7. '_power' → logprob: -17.7985897064209
    8. ' powers' → logprob: -18.1735897064209
    9. ' ' → logprob: -18.9235897064209
    10. ' ' → logprob: -19.0485897064209

Token 69: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4112589955329895
    2. 'def' → logprob: -1.4112589359283447
    3. '<|end|>' → logprob: -2.7862589359283447
    4. '

' → logprob: -4.286259174346924
    5. '#' → logprob: -4.786259174346924
    6. '```' → logprob: -4.911259174346924
    7. '\' → logprob: -7.536259174346924
    8. '\n' → logprob: -8.161258697509766
    9. 'n' → logprob: -8.536258697509766
    10. 'd' → logprob: -8.536258697509766

Token 71: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.07071289420127869
    2. ' factorial' → logprob: -3.5707128047943115
    3. ' main' → logprob: -4.570713043212891
    4. ' fibonacci' → logprob: -4.695713043212891
    5. ' calculate' → logprob: -5.195713043212891
    6. '_' → logprob: -5.320713043212891
    7. '_compute' → logprob: -5.945713043212891
    8. ' ' → logprob: -6.445713043212891
    9. 'compute' → logprob: -6.820713043212891
    10. ' make' → logprob: -7.195713043212891

Token 72: '_re' (ID: 3067)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.4142450988292694
    2. '_factor' → logprob: -1.5392451286315918
    3. '_' → logprob: -2.789245128631592
    4. '_p' → logprob: -4.039245128631592
    5. '_in' → logprob: -4.164245128631592
    6. '_inv' → logprob: -5.039245128631592
    7. '_f' → logprob: -5.289245128631592
    8. '_prefix' → logprob: -5.414245128631592
    9. '_mod' → logprob: -5.789245128631592
    10. '_hash' → logprob: -6.289245128631592

Token 73: 'vs' (ID: 16121)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.5889801979064941
    2. 'cip' → logprob: -1.8389801979064941
    3. 'm' → logprob: -1.9639801979064941
    4. 'mainder' → logprob: -2.338980197906494
    5. 'c' → logprob: -3.838980197906494
    6. 'v' → logprob: -4.338980197906494
    7. 'main' → logprob: -4.963980197906494
    8. 'ma' → logprob: -6.588980197906494
    9. 'st' → logprob: -6.713980197906494
    10. 's' → logprob: -6.963980197906494

Token 74: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.6897303462028503
    2. 'erse' → logprob: -1.1897304058074951
    3. 'ers' → logprob: -1.9397304058074951
    4. '_(' → logprob: -3.564730405807495
    5. 'erve' → logprob: -5.314730167388916
    6. '_inverse' → logprob: -5.939730167388916
    7. 'erv' → logprob: -6.564730167388916
    8. '_' → logprob: -6.689730167388916
    9. '(' → logprob: -6.814730167388916
    10. 'ersion' → logprob: -6.939730167388916

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.375001907348633
    3. '):' → logprob: -15.750001907348633
    4. '‌,' → logprob: -16.000001907348633
    5. ',",' → logprob: -16.625001907348633
    6. ',module' → logprob: -16.625001907348633
    7. ',num' → logprob: -16.750001907348633
    8. 'mod' → logprob: -16.875001907348633
    9. ',size' → logprob: -17.250001907348633
    10. '',' → logprob: -17.375001907348633

Token 76: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.05501904338598251
    2. 'mod' → logprob: -2.9300191402435303
    3. '   ' → logprob: -9.93001937866211
    4. ' modulus' → logprob: -11.36751937866211
    5. ')' → logprob: -11.55501937866211
    6. 'def' → logprob: -11.61751937866211
    7. ',' → logprob: -11.68001937866211
    8. ' def' → logprob: -11.86751937866211
    9. '```' → logprob: -11.93001937866211
    10. ' ' → logprob: -12.11751937866211

Token 77: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.6405310816480778e-05
    2. '):
' → logprob: -11.500016212463379
    3. ')' → logprob: -12.625016212463379
    4. ':' → logprob: -13.750016212463379
    5. ' ):' → logprob: -14.000016212463379
    6. ',' → logprob: -14.625016212463379
    7. '):
' → logprob: -15.500016212463379
    8. '   ' → logprob: -16.250017166137695
    9. ']:' → logprob: -16.625017166137695
    10. '():' → logprob: -17.000017166137695

Token 78: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.48455941677093506
    2. 'power' → logprob: -0.9845594167709351
    3. 'powers' → logprob: -5.984559535980225
    4. 'factor' → logprob: -6.484559535980225
    5. 'inv' → logprob: -6.984559535980225
    6. '   ' → logprob: -7.109559535980225
    7. ' fact' → logprob: -7.109559535980225
    8. 'fact' → logprob: -7.359559535980225
    9. ' factorial' → logprob: -7.609559535980225
    10. ' powers' → logprob: -7.609559535980225

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008937132079154253
    2. ')' → logprob: -7.250893592834473
    3. ',' → logprob: -9.250893592834473
    4. ' ):' → logprob: -10.375893592834473
    5. 's' → logprob: -10.875893592834473
    6. '):
' → logprob: -11.625893592834473
    7. '[' → logprob: -12.250893592834473
    8. '[]):' → logprob: -12.250893592834473
    9. ':' → logprob: -12.500893592834473
    10. '   ' → logprob: -13.000893592834473

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018685370683670044
    2. ':' → logprob: -4.393685340881348
    3. '    ' → logprob: -6.268685340881348
    4. '):' → logprob: -6.393685340881348
    5. ' :' → logprob: -7.268685340881348
    6. '```' → logprob: -7.643685340881348
    7. '):
' → logprob: -8.268685340881348
    8. ' rev' → logprob: -8.643685340881348
    9. ')' → logprob: -8.768685340881348
    10. '_rev' → logprob: -9.018685340881348

Token 81: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.2582082450389862
    2. '   ' → logprob: -1.6332082748413086
    3. 'rev' (adapté à ' rev') → logprob: -4.133208274841309
    4. 're' → logprob: -4.258208274841309
    5. '```' → logprob: -6.508208274841309
    6. '    ' → logprob: -8.133208274841309
    7. '
' → logprob: -9.758208274841309
    8. ' re' → logprob: -9.758208274841309
    9. '``' → logprob: -10.633208274841309
    10. '[' → logprob: -10.758208274841309

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13721725344657898
    2. '=' → logprob: -2.1372172832489014
    3. 's' → logprob: -4.637217044830322
    4. '   ' → logprob: -9.38721752166748
    5. '_power' → logprob: -9.38721752166748
    6. 'es' → logprob: -9.51221752166748
    7. '```' → logprob: -10.01221752166748
    8. '_' → logprob: -10.38721752166748
    9. '[' → logprob: -10.88721752166748
    10. 'power' → logprob: -10.88721752166748

Token 83: ' make' (ID: 1520)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.048612114042043686
    2. '[' → logprob: -3.048612117767334
    3. ' make' → logprob: -11.798611640930176
    4. 'make' → logprob: -11.798611640930176
    5. ' ' → logprob: -12.673611640930176
    6. '[int' → logprob: -13.923611640930176
    7. '[n' → logprob: -14.173611640930176
    8. '[length' → logprob: -14.298611640930176
    9. '[len' → logprob: -14.423611640930176
    10. '[N' → logprob: -14.548611640930176

Token 84: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.643152740551159e-05
    2. '[' → logprob: -10.625036239624023
    3. '_of' → logprob: -12.125036239624023
    4. '_' → logprob: -13.500036239624023
    5. 'List' → logprob: -13.750036239624023
    6. 'list' → logprob: -14.375036239624023
    7. '_code' → logprob: -14.875036239624023
    8. 'def' → logprob: -15.000036239624023
    9. '_lists' → logprob: -15.000036239624023
    10. '```' → logprob: -15.000036239624023

Token 85: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -7.612634362885728e-05
    2. 'of' → logprob: -9.750076293945312
    3. ' of' → logprob: -11.750076293945312
    4. '[' → logprob: -12.500076293945312
    5. 's' → logprob: -12.625076293945312
    6. '	of' → logprob: -13.750076293945312
    7. '```' → logprob: -14.375076293945312
    8. '(' → logprob: -15.250076293945312
    9. 'ofa' → logprob: -16.000076293945312
    10. '   ' → logprob: -16.125076293945312

Token 86: '_' (ID: 62)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.003837613156065345
    2. '_' → logprob: -5.753837585449219
    3. '[' → logprob: -8.378837585449219
    4. '```' → logprob: -9.253837585449219
    5. '.ones' → logprob: -9.253837585449219
    6. '(' → logprob: -9.503837585449219
    7. 's' → logprob: -9.753837585449219
    8. '_one' → logprob: -11.128837585449219
    9. 'ines' → logprob: -11.128837585449219
    10. '-' → logprob: -11.628837585449219

Token 87: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -14.500001907348633
    3. 's' → logprob: -14.750001907348633
    4. ' ones' → logprob: -15.375001907348633
    5. 'one' → logprob: -15.375001907348633
    6. '.ones' → logprob: -16.250001907348633
    7. 'ONES' → logprob: -16.375001907348633
    8. '```' → logprob: -16.625001907348633
    9. 'o' → logprob: -17.375001907348633
    10. 'ines' → logprob: -17.375001907348633

Token 88: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.28144943714141846
    2. '(' → logprob: -1.4064494371414185
    3. '(
' → logprob: -8.531449317932129
    4. ' (' → logprob: -9.781449317932129
    5. '```' → logprob: -11.031449317932129
    6. '(len' → logprob: -11.781449317932129
    7. '(n' → logprob: -12.031449317932129
    8. '(

' → logprob: -12.281449317932129
    9. '((' → logprob: -12.656449317932129
    10. '(length' → logprob: -13.531449317932129

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.049755782238208e-05
    2. ' +' → logprob: -10.00005054473877
    3. '+
' → logprob: -12.37505054473877
    4. ')' → logprob: -15.12505054473877
    5. '+)' → logprob: -15.25005054473877
    6. '1' → logprob: -16.125049591064453
    7. '()+' → logprob: -16.625049591064453
    8. '[' → logprob: -17.375049591064453
    9. '+

' → logprob: -17.500049591064453
    10. ')+' → logprob: -17.500049591064453

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000517886015586555
    2. '+' → logprob: -7.625517845153809
    3. ')' → logprob: -10.750517845153809
    4. '<|end|>' → logprob: -12.625517845153809
    5. '```' → logprob: -13.250517845153809
    6. '2' → logprob: -14.375517845153809
    7. ' ' → logprob: -14.500517845153809
    8. '0' → logprob: -15.250517845153809
    9. ')+' → logprob: -15.375517845153809
    10. '<|end|>' → logprob: -15.375517845153809

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067770653404295444
    2. ')
' → logprob: -5.006777286529541
    3. ')
' → logprob: -10.381776809692383
    4. ')

' → logprob: -10.631776809692383
    5. ']' → logprob: -13.506776809692383
    6. ',' → logprob: -13.756776809692383
    7. '   ' → logprob: -14.256776809692383
    8. ' )' → logprob: -14.631776809692383
    9. ')`' → logprob: -14.631776809692383
    10. '2' → logprob: -14.756776809692383

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0106793642044067
    2. ' ' → logprob: -1.5106793642044067
    3. ' 
' → logprob: -1.8856793642044067
    4. '
' → logprob: -2.010679244995117
    5. ' for' → logprob: -3.260679244995117
    6. '[' → logprob: -3.260679244995117
    7. '    
' → logprob: -3.885679244995117
    8. '  
' → logprob: -4.510679244995117
    9. '   
' → logprob: -5.010679244995117
    10. ')' → logprob: -6.135679244995117

Token 93: ' rev' (ID: 10808)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7986776232719421
    2. 'rev' (adapté à ' rev') → logprob: -1.173677682876587
    3. 'for' → logprob: -2.423677682876587
    4. ' rev' → logprob: -2.798677682876587
    5. '   ' → logprob: -3.173677682876587
    6. '[' → logprob: -4.423677444458008
    7. '
' → logprob: -4.548677444458008
    8. ' ' → logprob: -4.673677444458008
    9. ' 
' → logprob: -4.923677444458008
    10. 'def' → logprob: -5.673677444458008

Token 94: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020298731978982687
    2. ' =' → logprob: -6.377029895782471
    3. ' ' → logprob: -9.127029418945312
    4. '=' → logprob: -9.377029418945312
    5. '[i' → logprob: -10.502029418945312
    6. ' [' → logprob: -11.127029418945312
    7. '[:]' → logprob: -11.127029418945312
    8. 'def' → logprob: -11.252029418945312
    9. '[
' → logprob: -11.752029418945312
    10. '```' → logprob: -12.002029418945312

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008169608190655708
    2. ')' → logprob: -5.383169651031494
    3. ' ]' → logprob: -6.008169651031494
    4. ')]' → logprob: -7.508169651031494
    5. ']=' → logprob: -8.633169174194336
    6. '[' → logprob: -9.633169174194336
    7. ' )' → logprob: -9.633169174194336
    8. '-' → logprob: -9.883169174194336
    9. '   ' → logprob: -10.383169174194336
    10. '])' → logprob: -10.633169174194336

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10031309723854065
    2. ' =' → logprob: -2.350313186645508
    3. '(' → logprob: -10.975313186645508
    4. ',' → logprob: -11.225313186645508
    5. '"' → logprob: -11.225313186645508
    6. ')' → logprob: -11.975313186645508
    7. '	' → logprob: -11.975313186645508
    8. '=

' → logprob: -12.100313186645508
    9. ' ' → logprob: -12.350313186645508
    10. '`' → logprob: -12.350313186645508

Token 97: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03044486977159977
    2. ' pow' → logprob: -3.905444860458374
    3. '1' → logprob: -4.655445098876953
    4. '(pow' → logprob: -8.280445098876953
    5. ' ' → logprob: -10.155445098876953
    6. '   ' → logprob: -10.780445098876953
    7. '0' → logprob: -11.530445098876953
    8. '2' → logprob: -12.030445098876953
    9. '3' → logprob: -12.280445098876953
    10. 'power' → logprob: -13.155445098876953

Token 98: '(power' (ID: 168790)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5767534375190735
    2. '(power' → logprob: -0.8267534375190735
    3. '(p' → logprob: -7.701753616333008
    4. '(pow' → logprob: -8.076753616333008
    5. '(
' → logprob: -10.451753616333008
    6. '(

' → logprob: -11.826753616333008
    7. '<|end|>' → logprob: -12.951753616333008
    8. '(payment' → logprob: -13.076753616333008
    9. 'power' → logprob: -13.201753616333008
    10. '(password' → logprob: -13.951753616333008

Token 99: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.039177775382995605
    2. '[' → logprob: -3.289177894592285
    3. ')' → logprob: -7.789177894592285
    4. ',' → logprob: -8.039177894592285
    5. '[-' → logprob: -8.789177894592285
    6. ',N' → logprob: -9.539177894592285
    7. '(N' → logprob: -10.039177894592285
    8. '[
' → logprob: -10.039177894592285
    9. '```' → logprob: -10.289177894592285
    10. ' [' → logprob: -11.789177894592285

Token 100: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ' ,' → logprob: -10.750046730041504
    3. '   ' → logprob: -11.500046730041504
    4. '',' → logprob: -13.000046730041504
    5. ',

' → logprob: -13.000046730041504
    6. ' ' → logprob: -13.125046730041504
    7. '	' → logprob: -13.875046730041504
    8. '`,' → logprob: -14.000046730041504
    9. ',
' → logprob: -14.000046730041504
    10. '],' → logprob: -14.125046730041504

Token 101: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.034648578613996506
    2. '-' → logprob: -3.7846486568450928
    3. ' mod' → logprob: -4.659648418426514
    4. '-mod' → logprob: -7.159648418426514
    5. '	mod' → logprob: -7.534648418426514
    6. '<|end|>' → logprob: -8.534648895263672
    7. '   ' → logprob: -9.034648895263672
    8. '-m' → logprob: -9.659648895263672
    9. ' -' → logprob: -9.659648895263672
    10. ' ' → logprob: -10.534648895263672

Token 102: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001234428636962548
    2. ' -' → logprob: -9.000123023986816
    3. ')' → logprob: -17.125123977661133
    4. '```' → logprob: -18.000123977661133
    5. '−' → logprob: -18.750123977661133
    6. ' ' → logprob: -19.000123977661133
    7. '–' → logprob: -19.000123977661133
    8. ')-' → logprob: -19.875123977661133
    9. 'a' → logprob: -20.000123977661133
    10. '  ' → logprob: -20.000123977661133

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '-' → logprob: -13.00000286102295
    3. '

' → logprob: -15.00000286102295
    4. '```' → logprob: -15.00000286102295
    5. ' ' → logprob: -16.500003814697266
    6. ' -' → logprob: -16.812503814697266
    7. '
' → logprob: -17.562503814697266
    8. '۲' → logprob: -18.000003814697266
    9. '"' → logprob: -18.125003814697266
    10. '' → logprob: -18.375003814697266

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000851201475597918
    2. ')' → logprob: -7.250851154327393
    3. ' ,' → logprob: -9.00085163116455
    4. '   ' → logprob: -11.62585163116455
    5. ' ' → logprob: -12.00085163116455
    6. ',
' → logprob: -14.12585163116455
    7. ' )' → logprob: -15.00085163116455
    8. '	' → logprob: -15.12585163116455
    9. '  ' → logprob: -15.12585163116455
    10. '```' → logprob: -15.75085163116455

Token 105: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.011051236651837826
    2. 'mod' → logprob: -4.511051177978516
    3. '	mod' → logprob: -13.136051177978516
    4. ')' → logprob: -14.136051177978516
    5. '(mod' → logprob: -14.761051177978516
    6. ' ' → logprob: -15.761051177978516
    7. '   ' → logprob: -16.636051177978516
    8. ' modul' → logprob: -17.761051177978516
    9. ' ' → logprob: -17.886051177978516
    10. ' )' → logprob: -17.886051177978516

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.87500286102295
    5. '))' → logprob: -17.000003814697266
    6. ' ' → logprob: -17.125003814697266
    7. '')' → logprob: -17.125003814697266
    8. ')

' → logprob: -17.375003814697266
    9. ')`' → logprob: -17.750003814697266
    10. ')}' → logprob: -18.000003814697266

Token 107: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2677724361419678
    2. '   ' → logprob: -2.2677724361419678
    3. '<|end|>' → logprob: -2.5177724361419678
    4. ' 
' → logprob: -4.017772674560547
    5. '    
' → logprob: -4.392772674560547
    6. '  
' → logprob: -4.392772674560547
    7. ' for' → logprob: -5.767772674560547
    8. '<|end|>' → logprob: -6.892772674560547
    9. '   
' → logprob: -7.142772674560547
    10. ' ' → logprob: -7.517772674560547

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1757359355688095
    2. '   ' → logprob: -1.9257359504699707
    3. ' for' → logprob: -4.175735950469971
    4. '	for' → logprob: -10.925735473632812
    5. 'i' → logprob: -11.675735473632812
    6. ' ' → logprob: -14.050735473632812
    7. ' i' → logprob: -14.675735473632812
    8. '  ' → logprob: -15.550735473632812
    9. '```' → logprob: -16.175735473632812
    10. 'def' → logprob: -16.550735473632812

Token 109: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0006260605878196657
    2. 'i' → logprob: -7.500626087188721
    3. ' ' → logprob: -9.625625610351562
    4. '	i' → logprob: -12.500625610351562
    5. '  ' → logprob: -13.875625610351562
    6. ' ' → logprob: -13.875625610351562
    7. '<|end|>' → logprob: -14.875625610351562
    8. ')' → logprob: -15.000625610351562
    9. '```' → logprob: -15.375625610351562
    10. '   ' → logprob: -16.000625610351562

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004128742031753063
    2. 'in' → logprob: -5.629128932952881
    3. ' ' → logprob: -8.254128456115723
    4. ' i' → logprob: -9.504128456115723
    5. '   ' → logprob: -9.504128456115723
    6. '  ' → logprob: -10.004128456115723
    7. ' j' → logprob: -10.004128456115723
    8. ',' → logprob: -12.379128456115723
    9. 'n' → logprob: -12.379128456115723
    10. '	in' → logprob: -12.379128456115723

Token 111: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31331077218055725
    2. 'range' → logprob: -1.3133107423782349
    3. ' reversed' → logprob: -10.688310623168945
    4. ' ' → logprob: -11.438310623168945
    5. 're' → logprob: -11.688310623168945
    6. '   ' → logprob: -13.188310623168945
    7. '(range' → logprob: -13.313310623168945
    8. '	range' → logprob: -13.563310623168945
    9. ' xrange' → logprob: -13.938310623168945
    10. '  ' → logprob: -14.438310623168945

Token 112: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00888483040034771
    2. '(' → logprob: -4.758884906768799
    3. ' (' → logprob: -8.25888442993164
    4. '   ' → logprob: -12.50888442993164
    5. ' ' → logprob: -12.75888442993164
    6. '((' → logprob: -13.13388442993164
    7. '(n' → logprob: -14.38388442993164
    8. 'N' → logprob: -14.88388442993164
    9. ' N' → logprob: -15.13388442993164
    10. '(
' → logprob: -15.38388442993164

Token 113: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009674415923655033
    2. ' -' → logprob: -7.000967502593994
    3. ',' → logprob: -10.000967025756836
    4. '-,' → logprob: -12.125967025756836
    5. ' ,' → logprob: -13.500967025756836
    6. ' ' → logprob: -13.625967025756836
    7. ',-' → logprob: -13.875967025756836
    8. '   ' → logprob: -14.000967025756836
    9. ',j' → logprob: -15.750967025756836
    10. '1' → logprob: -15.750967025756836

Token 114: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7417945861816406
    2. '0' → logprob: -0.8667945861816406
    3. ' ' → logprob: -2.7417945861816406
    4. ' -' → logprob: -3.8667945861816406
    5. '1' → logprob: -4.241794586181641
    6. 'j' → logprob: -6.866794586181641
    7. ' N' → logprob: -6.991794586181641
    8. 'N' → logprob: -7.116794586181641
    9. ' j' → logprob: -7.741794586181641
    10. '   ' → logprob: -8.61679458618164

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004519365727901459
    2. '-' → logprob: -6.129519462585449
    3. '1' → logprob: -6.129519462585449
    4. ' ' → logprob: -8.87951946258545
    5. ' -' → logprob: -11.50451946258545
    6. '   ' → logprob: -12.75451946258545
    7. 'j' → logprob: -14.50451946258545
    8. '
' → logprob: -15.25451946258545
    9. '```' → logprob: -15.25451946258545
    10. '  ' → logprob: -16.004518508911133

Token 116: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3045945167541504
    2. ',' → logprob: -1.9295945167541504
    3. ' -' → logprob: -2.6795945167541504
    4. ',-' → logprob: -3.0545945167541504
    5. '-,' → logprob: -7.30459451675415
    6. ' ,-' → logprob: -7.67959451675415
    7. ' ,' → logprob: -8.304594039916992
    8. '   ' → logprob: -8.554594039916992
    9. ' -,' → logprob: -10.429594039916992
    10. '	' → logprob: -11.679594039916992

Token 117: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0052456180565059185
    2. ' -' → logprob: -5.255245685577393
    3. '   ' → logprob: -12.005245208740234
    4. ',-' → logprob: -13.130245208740234
    5. '  ' → logprob: -13.505245208740234
    6. '-)' → logprob: -14.380245208740234
    7. ' ' → logprob: -14.630245208740234
    8. '-j' → logprob: -14.880245208740234
    9. '	' → logprob: -15.505245208740234
    10. ')-' → logprob: -16.130245208740234

Token 118: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009571440517902374
    2. ' -' → logprob: -5.134571552276611
    3. '1' → logprob: -5.634571552276611
    4. ')' → logprob: -10.634571075439453
    5. '-)' → logprob: -10.759571075439453
    6. ' ' → logprob: -11.884571075439453
    7. ')-' → logprob: -12.259571075439453
    8. '   ' → logprob: -12.259571075439453
    9. '  ' → logprob: -14.009571075439453
    10. '```' → logprob: -14.634571075439453

Token 119: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10635237395763397
    2. '):' → logprob: -2.3563523292541504
    3. ' -' → logprob: -5.35635232925415
    4. '):
' → logprob: -6.98135232925415
    5. ' ):' → logprob: -8.856352806091309
    6. '   ' → logprob: -9.231352806091309
    7. ',' → logprob: -9.481352806091309
    8. ',-' → logprob: -9.606352806091309
    9. ')' → logprob: -10.106352806091309
    10. '):-' → logprob: -10.981352806091309

Token 120: '       ' (ID: 309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0864982604980469
    2. '       ' → logprob: -1.0864982604980469
    3. ' ' → logprob: -2.086498260498047
    4. '   ' → logprob: -2.836498260498047
    5. '<|end|>' → logprob: -3.336498260498047
    6. '    ' → logprob: -3.836498260498047
    7. '1' → logprob: -3.961498260498047
    8. ':' → logprob: -3.961498260498047
    9. ' -' → logprob: -4.336498260498047
    10. ')' → logprob: -4.336498260498047

Token 121: ' rev' (ID: 10808)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15457843244075775
    2. ' ' → logprob: -2.529578447341919
    3. ' -' → logprob: -3.779578447341919
    4. ')' → logprob: -4.77957820892334
    5. '   ' → logprob: -4.77957820892334
    6. '       ' → logprob: -4.90457820892334
    7. '1' → logprob: -5.15457820892334
    8. '<|end|>' → logprob: -5.77957820892334
    9. 'j' → logprob: -6.02957820892334
    10. '    ' → logprob: -6.52957820892334

Token 122: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4483901858329773
    2. '[j' → logprob: -1.073390245437622
    3. '[i' → logprob: -4.448390007019043
    4. '-' → logprob: -5.948390007019043
    5. '<|end|>' → logprob: -6.698390007019043
    6. '[-' → logprob: -7.198390007019043
    7. ')' → logprob: -7.448390007019043
    8. ' [' → logprob: -8.073390007019043
    9. '[
' → logprob: -8.198390007019043
    10. '[js' → logprob: -8.823390007019043

Token 123: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02473905123770237
    2. ')' → logprob: -4.1497392654418945
    3. ']' → logprob: -5.2747392654418945
    4. ' -' → logprob: -5.7747392654418945
    5. ')]' → logprob: -9.149739265441895
    6. '-)' → logprob: -9.149739265441895
    7. ' )' → logprob: -9.274739265441895
    8. ' ]' → logprob: -9.649739265441895
    9. '   ' → logprob: -10.524739265441895
    10. '[' → logprob: -11.399739265441895

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4783076345920563
    2. ']' → logprob: -1.2283076047897339
    3. ')' → logprob: -2.4783077239990234
    4. '<|end|>' → logprob: -6.103307723999023
    5. '   ' → logprob: -7.978307723999023
    6. ' ' → logprob: -8.478307723999023
    7. '])' → logprob: -9.603307723999023
    8. ']=' → logprob: -9.603307723999023
    9. ']>' → logprob: -9.728307723999023
    10. '[' → logprob: -9.728307723999023

Token 125: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026601465418934822
    2. '=' → logprob: -4.526601314544678
    3. ']' → logprob: -4.776601314544678
    4. ')=' → logprob: -5.526601314544678
    5. ' =' → logprob: -6.026601314544678
    6. ' )' → logprob: -8.276601791381836
    7. ']=' → logprob: -9.151601791381836
    8. '   ' → logprob: -9.151601791381836
    9. ')]' → logprob: -9.151601791381836
    10. '    ' → logprob: -11.901601791381836

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42880919575691223
    2. ' =' → logprob: -1.0538091659545898
    3. ')' → logprob: -9.80380916595459
    4. '"' → logprob: -11.55380916595459
    5. ')=' → logprob: -11.55380916595459
    6. '(' → logprob: -12.17880916595459
    7. '=(' → logprob: -12.67880916595459
    8. ']' → logprob: -12.80380916595459
    9. ' =(' → logprob: -13.05380916595459
    10. '   ' → logprob: -13.17880916595459

Token 127: ' (' (ID: 350)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.5308755040168762
    2. ' (' → logprob: -0.9058755040168762
    3. '(' → logprob: -5.1558756828308105
    4. 'rev' → logprob: -6.6558756828308105
    5. ' rev' → logprob: -8.405875205993652
    6. ' ' → logprob: -9.530875205993652
    7. '(rep' → logprob: -9.530875205993652
    8. '   ' → logprob: -9.905875205993652
    9. '  ' → logprob: -10.155875205993652
    10. '(rem' → logprob: -10.280875205993652

Token 128: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.001356667373329401
    2. ' rev' → logprob: -6.626356601715088
    3. 're' → logprob: -11.501357078552246
    4. '(re' → logprob: -11.626357078552246
    5. '.rev' → logprob: -13.126357078552246
    6. '   ' → logprob: -13.376357078552246
    7. ')' → logprob: -13.751357078552246
    8. 'rep' → logprob: -13.876357078552246
    9. 'reven' → logprob: -14.001357078552246
    10. ' (' → logprob: -14.001357078552246

Token 129: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0015311705647036433
    2. 'j' → logprob: -7.12653112411499
    3. '[' → logprob: -7.25153112411499
    4. '*j' → logprob: -11.376531600952148
    5. ' j' → logprob: -13.251531600952148
    6. '[
' → logprob: -13.501531600952148
    7. '	j' → logprob: -14.251531600952148
    8. '_j' → logprob: -14.626531600952148
    9. '[js' → logprob: -14.751531600952148
    10. '*' → logprob: -15.126531600952148

Token 130: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2990279793739319
    2. '*j' → logprob: -1.424027919769287
    3. ' *' → logprob: -4.049027919769287
    4. '*i' → logprob: -8.799028396606445
    5. '*)' → logprob: -10.799028396606445
    6. ')*' → logprob: -10.799028396606445
    7. '**' → logprob: -11.299028396606445
    8. '*object' → logprob: -11.674028396606445
    9. '*
' → logprob: -11.924028396606445
    10. '*(' → logprob: -12.049028396606445

Token 131: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007634781766682863
    2. ' j' → logprob: -4.88263463973999
    3. '_j' → logprob: -11.757635116577148
    4. '	j' → logprob: -11.882635116577148
    5. '<|end|>' → logprob: -11.882635116577148
    6. '*j' → logprob: -13.132635116577148
    7. '$j' → logprob: -13.632635116577148
    8. '[j' → logprob: -13.757635116577148
    9. '(j' → logprob: -14.382635116577148
    10. ':j' → logprob: -14.382635116577148

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001334559783572331
    2. ' )' → logprob: -9.125133514404297
    3. ')%' → logprob: -10.625133514404297
    4. '%' → logprob: -15.875133514404297
    5. ')
' → logprob: -17.375133514404297
    6. ')

' → logprob: -17.750133514404297
    7. '   ' → logprob: -18.500133514404297
    8. ']' → logprob: -18.750133514404297
    9. '`)' → logprob: -18.875133514404297
    10. '')' → logprob: -19.000133514404297

Token 133: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.048589982092380524
    2. ' %' → logprob: -3.0485899448394775
    3. ')' → logprob: -14.423589706420898
    4. '%
' → logprob: -14.798589706420898
    5. '
' → logprob: -15.048589706420898
    6. ')%' → logprob: -15.173589706420898
    7. ' ' → logprob: -15.548589706420898
    8. ' ' → logprob: -16.0485897064209
    9. '%n' → logprob: -16.1735897064209
    10. '	' → logprob: -16.5485897064209

Token 134: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01416398212313652
    2. ' mod' → logprob: -4.264163970947266
    3. '	mod' → logprob: -15.264163970947266
    4. '(mod' → logprob: -15.389163970947266
    5. ' ' → logprob: -18.014163970947266
    6. '
' → logprob: -18.014163970947266
    7. '```' → logprob: -18.264163970947266
    8. '   ' → logprob: -19.014163970947266
    9. ' мод' → logprob: -19.389163970947266
    10. '_mod' → logprob: -19.389163970947266

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021181803196668625
    2. '	return' → logprob: -4.271181583404541
    3. '<|end|>' → logprob: -5.646181583404541
    4. '
' → logprob: -6.271181583404541
    5. ' return' → logprob: -6.896181583404541
    6. 'return' → logprob: -8.1461820602417
    7. '    
' → logprob: -9.6461820602417
    8. '<|end|>' → logprob: -9.7711820602417
    9. ':return' → logprob: -10.6461820602417
    10. ' ' → logprob: -11.0211820602417

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.6934557505883276e-05
    2. 'return' → logprob: -10.625057220458984
    3. '<|end|>' → logprob: -10.750057220458984
    4. ' return' → logprob: -12.125057220458984
    5. '	return' → logprob: -12.500057220458984
    6. '    
' → logprob: -14.625057220458984
    7. '  ' → logprob: -15.125057220458984
    8. ')' → logprob: -15.500057220458984
    9. '   ' → logprob: -15.625057220458984
    10. '       ' → logprob: -15.875057220458984

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2537879943847656
    2. '   ' → logprob: -1.5037879943847656
    3. ' return' → logprob: -6.378787994384766
    4. '	return' → logprob: -9.003787994384766
    5. '<|end|>' → logprob: -11.128787994384766
    6. ':return' → logprob: -11.878787994384766
    7. ' ' → logprob: -12.378787994384766
    8. ')return' → logprob: -12.503787994384766
    9. '```' → logprob: -13.503787994384766
    10. '{return' → logprob: -13.628787994384766

Token 138: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0007099286303855479
    2. ' rev' → logprob: -7.2507100105285645
    3. 're' → logprob: -19.000709533691406
    4. 'rv' → logprob: -19.125709533691406
    5. ' ' → logprob: -19.875709533691406
    6. '.rev' → logprob: -20.000709533691406
    7. '_rev' → logprob: -21.500709533691406
    8. 'rep' → logprob: -21.500709533691406
    9. ' ' → logprob: -21.750709533691406
    10. 'reverse' → logprob: -22.250709533691406

Token 139: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9611772298812866
    2. '
' → logprob: -1.3361772298812866
    3. 'd' → logprob: -1.8361772298812866
    4. '```' → logprob: -2.711177349090576
    5. '<|end|>' → logprob: -2.961177349090576
    6. ' ' → logprob: -3.461177349090576
    7. '#' → logprob: -4.586177349090576
    8. ' 
' → logprob: -5.086177349090576
    9. ' def' → logprob: -5.336177349090576
    10. ')' → logprob: -5.586177349090576

Token 141: ' combination' (ID: 14083)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21754619479179382
    2. ' compute' → logprob: -1.7175462245941162
    3. ' ' → logprob: -4.842545986175537
    4. ' _' → logprob: -5.342545986175537
    5. '_compute' → logprob: -6.092545986175537
    6. ' factorial' → logprob: -7.842545986175537
    7. ' calculate' → logprob: -8.717546463012695
    8. ' combine' → logprob: -9.592546463012695
    9. ' make' → logprob: -9.842546463012695
    10. ' space' → logprob: -9.967546463012695

Token 142: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6995331048965454
    2. '(N' → logprob: -0.6995331048965454
    3. '(n' → logprob: -5.074532985687256
    4. 's' → logprob: -10.324533462524414
    5. ' (' → logprob: -10.699533462524414
    6. '(i' → logprob: -11.949533462524414
    7. 'def' → logprob: -11.949533462524414
    8. '```' → logprob: -12.074533462524414
    9. '_' → logprob: -12.574533462524414
    10. '((' → logprob: -12.949533462524414

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021915239631198347
    2. ',N' → logprob: -8.750219345092773
    3. ' ,' → logprob: -10.125219345092773
    4. ')' → logprob: -12.000219345092773
    5. ',n' → logprob: -12.500219345092773
    6. '):' → logprob: -12.500219345092773
    7. '_,' → logprob: -12.875219345092773
    8. 'N' → logprob: -13.000219345092773
    9. ',K' → logprob: -14.875219345092773
    10. ',
' → logprob: -15.125219345092773

Token 144: ' R' (ID: 460)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12447524815797806
    2. 'n' → logprob: -2.6244752407073975
    3. ' N' → logprob: -3.4994752407073975
    4. ' n' → logprob: -4.249475479125977
    5. ' ' → logprob: -10.249475479125977
    6. ')' → logprob: -11.499475479125977
    7. '```' → logprob: -11.874475479125977
    8. '   ' → logprob: -12.249475479125977
    9. '	N' → logprob: -12.749475479125977
    10. ',' → logprob: -12.999475479125977

Token 145: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003715880447998643
    2. ',' → logprob: -6.253715991973877
    3. '):
' → logprob: -6.503715991973877
    4. ')' → logprob: -8.253715515136719
    5. ' ):' → logprob: -10.753715515136719
    6. ':' → logprob: -13.628715515136719
    7. '):
' → logprob: -13.628715515136719
    8. ' ,' → logprob: -14.628715515136719
    9. 'K' → logprob: -14.753715515136719
    10. '   ' → logprob: -14.878715515136719

Token 146: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.9543319344520569
    2. 'power' → logprob: -0.9543319344520569
    3. 'mod' → logprob: -1.829331874847412
    4. ' mod' → logprob: -2.704331874847412
    5. 'pow' → logprob: -7.079331874847412
    6. 'rev' → logprob: -8.07933235168457
    7. 'N' → logprob: -8.32933235168457
    8. ' ' → logprob: -8.32933235168457
    9. ' rev' → logprob: -8.57933235168457
    10. ' N' → logprob: -8.70433235168457

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.24310302757658e-05
    2. '):' → logprob: -10.000072479248047
    3. ' ,' → logprob: -10.625072479248047
    4. ')' → logprob: -13.375072479248047
    5. '_,' → logprob: -14.875072479248047
    6. ',p' → logprob: -16.250072479248047
    7. ',re' → logprob: -16.500072479248047
    8. ',
' → logprob: -16.625072479248047
    9. '‌,' → logprob: -16.875072479248047
    10. '[],' → logprob: -17.250072479248047

Token 148: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.12695078551769257
    2. ' rev' → logprob: -2.126950740814209
    3. '   ' → logprob: -11.501951217651367
    4. 're' → logprob: -12.126951217651367
    5. ' ' → logprob: -12.626951217651367
    6. '  ' → logprob: -13.751951217651367
    7. '_rev' → logprob: -14.251951217651367
    8. 'r' → logprob: -14.626951217651367
    9. '.rev' → logprob: -15.001951217651367
    10. 'rep' → logprob: -15.126951217651367

Token 149: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007821110193617642
    2. ')' → logprob: -7.625782012939453
    3. '):
' → logprob: -8.250782012939453
    4. ' ):' → logprob: -10.500782012939453
    5. ',' → logprob: -12.500782012939453
    6. '):

' → logprob: -14.375782012939453
    7. '):
' → logprob: -15.000782012939453
    8. '   ' → logprob: -15.375782012939453
    9. ' ' → logprob: -15.875782012939453
    10. ')：' → logprob: -16.250782012939453

Token 150: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6326817274093628
    2. 'mod' → logprob: -0.7576817274093628
    3. '   ' → logprob: -10.132681846618652
    4. ' ' → logprob: -11.007681846618652
    5. ')' → logprob: -11.632681846618652
    6. '	mod' → logprob: -12.132681846618652
    7. '  ' → logprob: -12.632681846618652
    8. 'm' → logprob: -12.632681846618652
    9. '    ' → logprob: -13.257681846618652
    10. '):
' → logprob: -13.882681846618652

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.4060561776859686e-05
    2. ')' → logprob: -10.375043869018555
    3. '):
' → logprob: -11.375043869018555
    4. ' ):' → logprob: -14.250043869018555
    5. ':' → logprob: -14.750043869018555
    6. '   ' → logprob: -16.625043869018555
    7. '=' → logprob: -17.500043869018555
    8. '):
' → logprob: -18.000043869018555
    9. ' ' → logprob: -18.625043869018555
    10. ',' → logprob: -18.625043869018555

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013654939830303192
    2. ':' → logprob: -5.138654708862305
    3. ' if' → logprob: -6.013654708862305
    4. 'if' → logprob: -6.138654708862305
    5. '(' → logprob: -7.013654708862305
    6. '    
' → logprob: -7.388654708862305
    7. ' return' → logprob: -8.138654708862305
    8. ' 
' → logprob: -8.388654708862305
    9. ')' → logprob: -8.513654708862305
    10. '   ' → logprob: -9.013654708862305

Token 153: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28419479727745056
    2. ' if' → logprob: -1.659194827079773
    3. '   ' → logprob: -3.5341947078704834
    4. 'return' → logprob: -4.0341949462890625
    5. ' return' → logprob: -4.6591949462890625
    6. ')' → logprob: -8.034194946289062
    7. ' ' → logprob: -9.409194946289062
    8. '    
' → logprob: -9.409194946289062
    9. ' 
' → logprob: -9.659194946289062
    10. ' i' → logprob: -10.159194946289062

Token 154: ' K' (ID: 658)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.007876799441874027
    2. 'R' → logprob: -5.132876873016357
    3. ' K' → logprob: -6.257876873016357
    4. 'K' → logprob: -11.1328763961792
    5. ' ' → logprob: -11.6328763961792
    6. ' ' → logprob: -12.8828763961792
    7. ' not' → logprob: -13.0078763961792
    8. '	R' → logprob: -14.0078763961792
    9. ' (' → logprob: -14.9453763961792
    10. '   ' → logprob: -15.2578763961792

Token 155: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6335656046867371
    2. ' <' → logprob: -0.7585656046867371
    3. '<R' → logprob: -7.508565425872803
    4. '<K' → logprob: -7.883565425872803
    5. ' ' → logprob: -11.258565902709961
    6. '<len' → logprob: -12.883565902709961
    7. '>' → logprob: -13.133565902709961
    8. '[' → logprob: -13.258565902709961
    9. '<|end|>' → logprob: -13.258565902709961
    10. '   ' → logprob: -13.383565902709961

Token 156: ' R' (ID: 460)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6343434453010559
    2. 'R' → logprob: -0.7593434453010559
    3. ' R' → logprob: -6.75934362411499
    4. '=' → logprob: -8.134343147277832
    5. ' ' → logprob: -8.259343147277832
    6. '1' → logprob: -10.884343147277832
    7. 'r' → logprob: -12.134343147277832
    8. '2' → logprob: -13.509343147277832
    9. '	R' → logprob: -14.509343147277832
    10. ' =' → logprob: -14.759343147277832

Token 157: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.022875618189573288
    2. ':' → logprob: -4.272875785827637
    3. 'or' → logprob: -4.772875785827637
    4. ':return' → logprob: -8.647875785827637
    5. ' ' → logprob: -11.022875785827637
    6. '	or' → logprob: -11.397875785827637
    7. ':
' → logprob: -12.522875785827637
    8. ' :' → logprob: -12.522875785827637
    9. '   ' → logprob: -12.647875785827637
    10. '<|end|>' → logprob: -13.522875785827637

Token 158: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2244645655155182
    2. '   ' → logprob: -2.3494646549224854
    3. ':return' → logprob: -3.2244646549224854
    4. '       ' → logprob: -3.5994646549224854
    5. ':
' → logprob: -4.099464416503906
    6. '
' → logprob: -4.974464416503906
    7. ')' → logprob: -5.224464416503906
    8. ' ' → logprob: -5.474464416503906
    9. '<|end|>' → logprob: -6.099464416503906
    10. '    ' → logprob: -7.349464416503906

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007136004976928234
    2. '   ' → logprob: -5.25713586807251
    3. ' return' → logprob: -6.63213586807251
    4. '       ' → logprob: -7.63213586807251
    5. '0' → logprob: -10.132136344909668
    6. '
' → logprob: -10.382136344909668
    7. '	return' → logprob: -11.382136344909668
    8. '```' → logprob: -12.757136344909668
    9. ':return' → logprob: -13.007136344909668
    10. '    
' → logprob: -13.007136344909668

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029751179739832878
    2. ' ' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.27975082397461
    4. ' 
' → logprob: -16.90475082397461
    5. '۰' → logprob: -17.90475082397461
    6. '```' → logprob: -18.27975082397461
    7. '‌' → logprob: -18.90475082397461
    8. '<|end|>' → logprob: -19.09225082397461
    9. '   ' → logprob: -19.46725082397461
    10. '
' → logprob: -19.59225082397461

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.375001907348633
    4. '۰' → logprob: -20.375001907348633
    5. '000' → logprob: -20.625001907348633
    6. '00' → logprob: -20.625001907348633
    7. '```' → logprob: -20.750001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '
' → logprob: -22.250001907348633
    10. '０' → logprob: -22.375001907348633

Token 162: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04930591583251953
    2. '<|end|>' → logprob: -3.1743059158325195
    3. '    
' → logprob: -5.6743059158325195
    4. ')' → logprob: -6.7993059158325195
    5. '
' → logprob: -7.0493059158325195
    6. '  ' → logprob: -8.04930591583252
    7. '   
' → logprob: -9.17430591583252
    8. '  
' → logprob: -9.29930591583252
    9. '<|end|>' → logprob: -9.29930591583252
    10. ' ' → logprob: -9.67430591583252

Token 164: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.526599645614624
    2. '   ' → logprob: -0.901599645614624
    3. ' return' → logprob: -6.151599884033203
    4. 'res' → logprob: -7.526599884033203
    5. 'result' → logprob: -7.901599884033203
    6. '    
' → logprob: -9.151599884033203
    7. 'if' → logprob: -9.401599884033203
    8. 'ret' → logprob: -9.776599884033203
    9. '
' → logprob: -9.901599884033203
    10. '```' → logprob: -10.276599884033203

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08727577328681946
    2. ':
' → logprob: -2.962275743484497
    3. '   ' → logprob: -3.712275743484497
    4. '       ' → logprob: -5.587275981903076
    5. ':return' → logprob: -6.087275981903076
    6. ' return' → logprob: -8.212275505065918
    7. ' :
' → logprob: -8.337275505065918
    8. '<|end|>' → logprob: -8.837275505065918
    9. ' :' → logprob: -8.962275505065918
    10. '    ' → logprob: -9.087275505065918

Token 166: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6928580403327942
    2. '   ' → logprob: -1.5678579807281494
    3. ' return' → logprob: -1.9428579807281494
    4. '       ' → logprob: -1.9428579807281494
    5. 'return' → logprob: -6.4428582191467285
    6. '(' → logprob: -6.5678582191467285
    7. '(power' → logprob: -6.9428582191467285
    8. '(pow' → logprob: -8.81785774230957
    9. '    ' → logprob: -8.94285774230957
    10. '(return' → logprob: -9.06785774230957

Token 167: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10623018443584442
    2. ' return' → logprob: -2.3562302589416504
    3. '   ' → logprob: -5.35623025894165
    4. '(power' → logprob: -7.35623025894165
    5. ' (' → logprob: -8.481229782104492
    6. '(return' → logprob: -8.606229782104492
    7. 'power' → logprob: -9.481229782104492
    8. 'pow' → logprob: -10.106229782104492
    9. '((' → logprob: -10.981229782104492
    10. 'ret' → logprob: -11.106229782104492

Token 168: ' ((' (ID: 3536)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -0.3888486623764038
    2. ' (' → logprob: -1.1388486623764038
    3. ' power' → logprob: -6.513848781585693
    4. 'power' → logprob: -7.888848781585693
    5. '(pow' → logprob: -10.013848304748535
    6. '((' → logprob: -10.388848304748535
    7. ' ((' → logprob: -11.013848304748535
    8. '(' → logprob: -12.013848304748535
    9. 'pow' → logprob: -12.513848304748535
    10. '(((' → logprob: -12.513848304748535

Token 169: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0004025481757707894
    2. ' power' → logprob: -8.000402450561523
    3. '(power' → logprob: -10.250402450561523
    4. 'pow' → logprob: -10.375402450561523
    5. '   ' → logprob: -15.250402450561523
    6. '(' → logprob: -17.375402450561523
    7. 'Power' → logprob: -17.500402450561523
    8. '_power' → logprob: -17.500402450561523
    9. 'powers' → logprob: -17.875402450561523
    10. '  ' → logprob: -18.125402450561523

Token 170: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -4.251091377227567e-05
    2. 'K' → logprob: -10.500042915344238
    3. '[' → logprob: -11.250042915344238
    4. '[R' → logprob: -14.000042915344238
    5. '[
' → logprob: -15.125042915344238
    6. '[k' → logprob: -15.500042915344238
    7. ')' → logprob: -15.625042915344238
    8. '	K' → logprob: -16.375041961669922
    9. ' [' → logprob: -17.000041961669922
    10. '"K' → logprob: -17.000041961669922

Token 171: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07036751508712769
    2. ']*' → logprob: -2.6953675746917725
    3. '])' → logprob: -8.945367813110352
    4. '][' → logprob: -9.445367813110352
    5. ']%' → logprob: -9.820367813110352
    6. '*' → logprob: -10.570367813110352
    7. ']
' → logprob: -10.695367813110352
    8. ' ]' → logprob: -10.820367813110352
    9. '[' → logprob: -11.070367813110352
    10. ']*(' → logprob: -11.195367813110352

Token 172: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47419974207878113
    2. '*' → logprob: -0.9741997718811035
    3. '   ' → logprob: -9.849199295043945
    4. ' *
' → logprob: -10.974199295043945
    5. '*
' → logprob: -11.224199295043945
    6. ')*' → logprob: -11.474199295043945
    7. ' ' → logprob: -11.974199295043945
    8. ')' → logprob: -11.974199295043945
    9. '**' → logprob: -12.224199295043945
    10. '
' → logprob: -12.849199295043945

Token 173: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.005179320462048054
    2. '(re' → logprob: -6.005179405212402
    3. ' rev' → logprob: -6.255179405212402
    4. '   ' → logprob: -7.755179405212402
    5. ' (' → logprob: -9.255179405212402
    6. 're' → logprob: -9.505179405212402
    7. '  ' → logprob: -10.005179405212402
    8. '(' → logprob: -11.005179405212402
    9. 'rep' → logprob: -11.130179405212402
    10. ' ' → logprob: -11.255179405212402

Token 174: '[K' (ID: 137571)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.625006675720215
    3. 'R' → logprob: -13.000006675720215
    4. '[K' → logprob: -14.125006675720215
    5. '[r' → logprob: -14.375006675720215
    6. '[
' → logprob: -16.50000762939453
    7. '(R' → logprob: -17.25000762939453
    8. '	R' → logprob: -17.25000762939453
    9. ' [' → logprob: -17.37500762939453
    10. '   ' → logprob: -17.37500762939453

Token 175: '-R' (ID: 12401)
  Prédit: '-R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-R' → logprob: -0.04048038274049759
    2. ']' → logprob: -3.540480375289917
    3. ' -' → logprob: -4.790480613708496
    4. ']))' → logprob: -6.915480613708496
    5. '-' → logprob: -7.665480613708496
    6. '])' → logprob: -7.790480613708496
    7. '[R' → logprob: -9.040480613708496
    8. ']*' → logprob: -9.165480613708496
    9. '[' → logprob: -9.540480613708496
    10. ' ' → logprob: -10.665480613708496

Token 176: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16583168506622314
    2. ']*' → logprob: -1.9158316850662231
    3. '])' → logprob: -5.790831565856934
    4. '])*' → logprob: -6.915831565856934
    5. ']*)' → logprob: -7.165831565856934
    6. ' ]' → logprob: -8.165831565856934
    7. ']*(' → logprob: -8.290831565856934
    8. ']))' → logprob: -8.665831565856934
    9. ']%' → logprob: -10.290831565856934
    10. '   ' → logprob: -12.165831565856934

Token 177: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1914222538471222
    2. ' *' → logprob: -1.8164222240447998
    3. ')' → logprob: -5.441422462463379
    4. ')*' → logprob: -6.066422462463379
    5. ')*(' → logprob: -6.441422462463379
    6. '*(' → logprob: -6.441422462463379
    7. '   ' → logprob: -7.441422462463379
    8. '*)' → logprob: -8.066422462463379
    9. '%' → logprob: -8.191422462463379
    10. ' )' → logprob: -8.941422462463379

Token 178: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0022196033969521523
    2. ' rev' → logprob: -6.1272196769714355
    3. '   ' → logprob: -10.627219200134277
    4. '
' → logprob: -12.752219200134277
    5. ' ' → logprob: -13.502219200134277
    6. '  ' → logprob: -13.627219200134277
    7. '    ' → logprob: -14.002219200134277
    8. '       ' → logprob: -14.127219200134277
    9. 'rep' → logprob: -14.252219200134277
    10. '.rev' → logprob: -14.252219200134277

Token 179: '[R' (ID: 115069)
  Prédit: '[R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[R' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. 'R' → logprob: -15.000003814697266
    4. '[r' → logprob: -15.750003814697266
    5. '   ' → logprob: -17.125003814697266
    6. ' [' → logprob: -17.375003814697266
    7. '[
' → logprob: -17.500003814697266
    8. ')[' → logprob: -17.750003814697266
    9. '[K' → logprob: -18.125003814697266
    10. '(R' → logprob: -18.250003814697266

Token 180: ']))' (ID: 20259)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2519991397857666
    2. ']))' → logprob: -1.5019991397857666
    3. ']' → logprob: -10.501998901367188
    4. ']])' → logprob: -10.876998901367188
    5. ')])' → logprob: -11.751998901367188
    6. '))' → logprob: -12.001998901367188
    7. ' ])' → logprob: -12.876998901367188
    8. '])))' → logprob: -13.251998901367188
    9. '])]' → logprob: -13.376998901367188
    10. ')' → logprob: -13.376998901367188

Token 181: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12698543071746826
    2. '%' → logprob: -2.126985549926758
    3. '   ' → logprob: -11.001985549926758
    4. '	' → logprob: -11.001985549926758
    5. ')%' → logprob: -11.376985549926758
    6. ')' → logprob: -12.001985549926758
    7. ' ' → logprob: -12.626985549926758
    8. ' ' → logprob: -13.876985549926758
    9. '  ' → logprob: -14.376985549926758
    10. ' %
' → logprob: -14.751985549926758

Token 182: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5760114192962646
    2. 'mod' → logprob: -0.8260114192962646
    3. '(mod' → logprob: -10.326011657714844
    4. ' ' → logprob: -10.826011657714844
    5. ' 
' → logprob: -12.451011657714844
    6. '_mod' → logprob: -12.951011657714844
    7. '	mod' → logprob: -12.951011657714844
    8. '```' → logprob: -12.951011657714844
    9. '`' → logprob: -13.201011657714844
    10. ' modul' → logprob: -13.451011657714844

Token 183: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2693006098270416
    2. '<|end|>' → logprob: -2.019300699234009
    3. '\n' → logprob: -2.394300699234009
    4. ')' → logprob: -6.01930046081543
    5. '\' → logprob: -6.14430046081543
    6. '```' → logprob: -6.39430046081543
    7. '#' → logprob: -6.76930046081543
    8. 'n' → logprob: -7.01930046081543
    9. 'newline' → logprob: -7.01930046081543
    10. ' ' → logprob: -7.26930046081543

Token 185: ' partial' (ID: 13664)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10014951229095459
    2. ' solve' → logprob: -3.350149631500244
    3. ' factorial' → logprob: -3.600149631500244
    4. ' calculate' → logprob: -4.850149631500244
    5. ' compute' → logprob: -4.850149631500244
    6. ' bin' → logprob: -5.225149631500244
    7. ' count' → logprob: -5.725149631500244
    8. ' ' → logprob: -5.975149631500244
    9. ' mod' → logprob: -5.975149631500244
    10. ' combination' → logprob: -7.100149631500244

Token 186: '_comb' (ID: 105956)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.731656551361084
    2. '_sum' → logprob: -1.356656551361084
    3. '_' → logprob: -1.481656551361084
    4. '_s' → logprob: -3.606656551361084
    5. '_com' → logprob: -5.981656551361084
    6. '_comb' → logprob: -6.356656551361084
    7. '_product' → logprob: -7.356656551361084
    8. '_sort' → logprob: -7.856656551361084
    9. '_compute' → logprob: -8.481657028198242
    10. '_per' → logprob: -9.231657028198242

Token 187: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -3.786196975852363e-05
    2. 'inations' → logprob: -10.875038146972656
    3. 'in' → logprob: -11.875038146972656
    4. 'INATION' → logprob: -12.625038146972656
    5. 'inition' → logprob: -12.875038146972656
    6. 'ine' → logprob: -12.875038146972656
    7. 'def' → logprob: -13.250038146972656
    8. 'ation' → logprob: -15.125038146972656
    9. '```' → logprob: -15.250038146972656
    10. '(int' → logprob: -15.375038146972656

Token 188: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16700586676597595
    2. '(K' → logprob: -2.042005777359009
    3. '(N' → logprob: -3.792005777359009
    4. '(L' → logprob: -7.417006015777588
    5. '(k' → logprob: -8.91700553894043
    6. '(n' → logprob: -8.91700553894043
    7. '(P' → logprob: -9.79200553894043
    8. '_list' → logprob: -9.91700553894043
    9. '(M' → logprob: -10.16700553894043
    10. '((' → logprob: -10.16700553894043

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002116462419508025
    2. ' ,' → logprob: -8.625211715698242
    3. ',R' → logprob: -11.000211715698242
    4. ')' → logprob: -12.000211715698242
    5. ',
' → logprob: -12.375211715698242
    6. '‌,' → logprob: -13.875211715698242
    7. ',

' → logprob: -14.125211715698242
    8. '   ' → logprob: -14.625211715698242
    9. '_,' → logprob: -14.875211715698242
    10. ',K' → logprob: -15.000211715698242

Token 190: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.40489086508750916
    2. ' R' → logprob: -1.1548908948898315
    3. 'L' → logprob: -5.654891014099121
    4. 'r' → logprob: -6.029891014099121
    5. ' L' → logprob: -6.404891014099121
    6. ' M' → logprob: -6.404891014099121
    7. 'M' → logprob: -6.404891014099121
    8. ' r' → logprob: -7.154891014099121
    9. 'n' → logprob: -7.529891014099121
    10. ' n' → logprob: -7.654891014099121

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014230852946639061
    2. '):' → logprob: -4.264230728149414
    3. ')' → logprob: -9.889230728149414
    4. ' ,' → logprob: -12.014230728149414
    5. '):
' → logprob: -13.014230728149414
    6. ',
' → logprob: -13.139230728149414
    7. '   ' → logprob: -13.639230728149414
    8. '_,' → logprob: -14.264230728149414
    9. ' ):' → logprob: -14.514230728149414
    10. ':' → logprob: -14.639230728149414

Token 192: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.6334789395332336
    2. 'power' → logprob: -0.7584789395332336
    3. 'mod' → logprob: -8.258479118347168
    4. ' mod' → logprob: -9.133479118347168
    5. ' ' → logprob: -9.258479118347168
    6. '   ' → logprob: -9.383479118347168
    7. 'rev' → logprob: -9.633479118347168
    8. 'partial' → logprob: -10.258479118347168
    9. 'pow' → logprob: -10.320979118347168
    10. ' rev' → logprob: -10.695979118347168

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018744789122138172
    2. ' ,' → logprob: -8.625187873840332
    3. ',re' → logprob: -13.000187873840332
    4. '   ' → logprob: -13.250187873840332
    5. ',
' → logprob: -13.750187873840332
    6. ',r' → logprob: -14.500187873840332
    7. ')' → logprob: -14.875187873840332
    8. '):' → logprob: -15.000187873840332
    9. ',p' → logprob: -15.750187873840332
    10. ',

' → logprob: -15.875187873840332

Token 194: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.5842911005020142
    2. ' rev' → logprob: -1.0842911005020142
    3. ' mod' → logprob: -2.9592909812927246
    4. 'mod' → logprob: -2.9592909812927246
    5. ' ' → logprob: -9.209291458129883
    6. '
' → logprob: -9.646791458129883
    7. '   ' → logprob: -9.709291458129883
    8. ')' → logprob: -10.084291458129883
    9. 'pow' → logprob: -10.459291458129883
    10. ' power' → logprob: -10.584291458129883

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031866179779171944
    2. ' ,' → logprob: -8.50031852722168
    3. '):' → logprob: -9.25031852722168
    4. ')' → logprob: -12.00031852722168
    5. '):
' → logprob: -12.12531852722168
    6. '   ' → logprob: -12.50031852722168
    7. ',
' → logprob: -13.00031852722168
    8. ' ' → logprob: -14.87531852722168
    9. ' ):' → logprob: -15.25031852722168
    10. '),' → logprob: -15.37531852722168

Token 196: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1797754019498825
    2. ' mod' → logprob: -1.804775357246399
    3. ' ' → logprob: -11.55477523803711
    4. 'm' → logprob: -12.42977523803711
    5. '   ' → logprob: -12.86727523803711
    6. '	mod' → logprob: -13.11727523803711
    7. '```' → logprob: -13.74227523803711
    8. ')' → logprob: -14.11727523803711
    9. 'mo' → logprob: -14.30477523803711
    10. 'moder' → logprob: -14.36727523803711

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.3557529857498594e-05
    2. '):
' → logprob: -10.87502384185791
    3. ')' → logprob: -12.62502384185791
    4. ' ):' → logprob: -14.75002384185791
    5. ':' → logprob: -14.87502384185791
    6. ',' → logprob: -15.62502384185791
    7. '   ' → logprob: -15.62502384185791
    8. '):
' → logprob: -16.750022888183594
    9. 'def' → logprob: -17.750022888183594
    10. '=' → logprob: -17.875022888183594

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007026608218438923
    2. ' if' → logprob: -8.375702857971191
    3. '    
' → logprob: -8.625702857971191
    4. ' return' → logprob: -8.750702857971191
    5. '
' → logprob: -10.000702857971191
    6. '   ' → logprob: -10.375702857971191
    7. 'if' → logprob: -11.375702857971191
    8. ' 
' → logprob: -12.000702857971191
    9. '    ' → logprob: -12.000702857971191
    10. 'return' → logprob: -12.125702857971191

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2578904330730438
    2. 'result' → logprob: -2.632890462875366
    3. ' if' → logprob: -2.757890462875366
    4. '   ' → logprob: -3.132890462875366
    5. 'return' → logprob: -3.632890462875366
    6. ' result' → logprob: -4.632890224456787
    7. 'res' → logprob: -5.382890224456787
    8. ' return' → logprob: -6.257890224456787
    9. ' res' → logprob: -6.257890224456787
    10. '
' → logprob: -7.132890224456787

Token 200: ' K' (ID: 658)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6009759306907654
    2. ' K' → logprob: -0.8509759306907654
    3. 'R' → logprob: -4.35097599029541
    4. 'K' → logprob: -4.47597599029541
    5. ' not' → logprob: -8.60097599029541
    6. ' ' → logprob: -9.10097599029541
    7. ' (' → logprob: -9.60097599029541
    8. '0' → logprob: -11.03847599029541
    9. '(' → logprob: -11.85097599029541
    10. '   ' → logprob: -11.85097599029541

Token 201: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1081104502081871
    2. '<' → logprob: -2.3581104278564453
    3. ' <=' → logprob: -5.608110427856445
    4. ' >' → logprob: -6.233110427856445
    5. ' ' → logprob: -7.233110427856445
    6. ' >=' → logprob: -8.108110427856445
    7. '>' → logprob: -8.108110427856445
    8. '<=' → logprob: -8.233110427856445
    9. ' ==' → logprob: -8.608110427856445
    10. '<K' → logprob: -9.358110427856445

Token 202: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4291745722293854
    2. ' R' → logprob: -1.054174542427063
    3. ' ' → logprob: -8.554174423217773
    4. '0' → logprob: -8.804174423217773
    5. '1' → logprob: -10.179174423217773
    6. '=' → logprob: -10.304174423217773
    7. '<|end|>' → logprob: -11.054174423217773
    8. '2' → logprob: -11.429174423217773
    9. '   ' → logprob: -11.929174423217773
    10. '(' → logprob: -12.304174423217773

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06311482191085815
    2. ':
' → logprob: -2.813114881515503
    3. ':return' → logprob: -7.188114643096924
    4. ' or' → logprob: -8.563115119934082
    5. '   ' → logprob: -8.813115119934082
    6. '       ' → logprob: -11.063115119934082
    7. '):
' → logprob: -11.563115119934082
    8. ' :' → logprob: -11.813115119934082
    9. ' :
' → logprob: -12.813115119934082
    10. '=' → logprob: -12.813115119934082

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04556070268154144
    2. ':' → logprob: -3.295560598373413
    3. ':
' → logprob: -5.545560836791992
    4. '0' → logprob: -7.045560836791992
    5. '   ' → logprob: -7.170560836791992
    6. ' or' → logprob: -7.420560836791992
    7. '
' → logprob: -7.545560836791992
    8. '1' → logprob: -8.420560836791992
    9. ':return' → logprob: -8.420560836791992
    10. ',' → logprob: -9.420560836791992

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7399275898933411
    2. '       ' → logprob: -1.4899275302886963
    3. ' return' → logprob: -1.6149275302886963
    4. '   ' → logprob: -2.8649275302886963
    5. '0' → logprob: -3.3649275302886963
    6. '	return' → logprob: -5.864927768707275
    7. ' ' → logprob: -6.614927768707275
    8. '
' → logprob: -6.739927768707275
    9. '1' → logprob: -7.364927768707275
    10. ':return' → logprob: -8.614927291870117

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1271187663078308
    2. ' ' → logprob: -2.1271188259124756
    3. '1' → logprob: -9.752119064331055
    4. '[]' → logprob: -10.127119064331055
    5. '   ' → logprob: -10.877119064331055
    6. ' []' → logprob: -11.252119064331055
    7. ' None' → logprob: -11.627119064331055
    8. '(' → logprob: -11.752119064331055
    9. ' (' → logprob: -11.752119064331055
    10. '[' → logprob: -12.314619064331055

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004464539233595133
    2. ' ' → logprob: -5.504464626312256
    3. '1' → logprob: -8.254464149475098
    4. '(' → logprob: -10.379464149475098
    5. '[]' → logprob: -10.504464149475098
    6. 'None' → logprob: -11.379464149475098
    7. 'K' → logprob: -11.629464149475098
    8. '-' → logprob: -11.879464149475098
    9. '[' → logprob: -12.004464149475098
    10. 'False' → logprob: -12.379464149475098

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008212173357605934
    2. '<|end|>' → logprob: -5.008212089538574
    3. '
' → logprob: -7.383212089538574
    4. '    
' → logprob: -8.008212089538574
    5. '<|end|>' → logprob: -8.383212089538574
    6. ')' → logprob: -9.258212089538574
    7. '\n' → logprob: -10.758212089538574
    8. ':' → logprob: -10.758212089538574
    9. '.' → logprob: -10.883212089538574
    10. '	return' → logprob: -10.883212089538574

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027632713317871094
    2. '
' → logprob: -7.002763271331787
    3. ':' → logprob: -7.752763271331787
    4. '<|end|>' → logprob: -8.127763748168945
    5. '    
' → logprob: -8.752763748168945
    6. ' ' → logprob: -9.127763748168945
    7. ':
' → logprob: -9.127763748168945
    8. '       ' → logprob: -9.252763748168945
    9. '\n' → logprob: -9.627763748168945
    10. '	' → logprob: -9.752763748168945

Token 210: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23805543780326843
    2. ':' → logprob: -2.613055467605591
    3. ':
' → logprob: -2.738055467605591
    4. ' else' → logprob: -3.113055467605591
    5. '
' → logprob: -3.988055467605591
    6. 'else' (adapté à ' else') → logprob: -5.238055229187012
    7. '	else' → logprob: -6.613055229187012
    8. ' ' → logprob: -6.988055229187012
    9. ',' → logprob: -7.488055229187012
    10. ' 
' → logprob: -7.613055229187012

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.457123339176178
    2. ':
' → logprob: -1.0821232795715332
    3. '       ' → logprob: -3.582123279571533
    4. '   ' → logprob: -9.332123756408691
    5. ':return' → logprob: -9.707123756408691
    6. '
' → logprob: -11.457123756408691
    7. ' :
' → logprob: -11.582123756408691
    8. ':

' → logprob: -12.582123756408691
    9. '):
' → logprob: -12.582123756408691
    10. ' :' → logprob: -12.707123756408691

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.662937372922897e-05
    2. '   ' → logprob: -9.500096321105957
    3. 'return' → logprob: -11.375096321105957
    4. ' return' → logprob: -11.625096321105957
    5. '    ' → logprob: -14.625096321105957
    6. '      ' → logprob: -15.000096321105957
    7. '     ' → logprob: -15.750096321105957
    8. ' ' → logprob: -16.625097274780273
    9. '```' → logprob: -16.750097274780273
    10. '    ' → logprob: -17.000097274780273

Token 213: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07171457260847092
    2. ' return' → logprob: -2.8217146396636963
    3. '((' → logprob: -4.696714401245117
    4. '(((' → logprob: -8.821714401245117
    5. ' ((' → logprob: -8.821714401245117
    6. '(return' → logprob: -8.946714401245117
    7. '(' → logprob: -10.446714401245117
    8. ' (' → logprob: -10.696714401245117
    9. '   ' → logprob: -10.696714401245117
    10. 'for' → logprob: -11.446714401245117

Token 214: ' (' (ID: 350)
  Prédit: ' (('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ((' → logprob: -0.5513107776641846
    2. '((' → logprob: -1.4263107776641846
    3. ' (' → logprob: -1.8013107776641846
    4. '(' → logprob: -5.5513105392456055
    5. ' partial' → logprob: -5.5513105392456055
    6. '(((' → logprob: -6.0513105392456055
    7. ' (((' → logprob: -6.1763105392456055
    8. '(part' → logprob: -6.1763105392456055
    9. '(com' → logprob: -6.6763105392456055
    10. ' combination' → logprob: -6.8013105392456055

Token 215: 'power' (ID: 22295)
  Prédit: '(power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(power' → logprob: -1.0968984365463257
    2. '((' → logprob: -1.4718984365463257
    3. ' (' → logprob: -1.9718984365463257
    4. '(com' → logprob: -2.7218985557556152
    5. 'power' → logprob: -2.8468985557556152
    6. 'comb' → logprob: -3.2218985557556152
    7. 'partial' → logprob: -3.3468985557556152
    8. ' ((' → logprob: -3.3468985557556152
    9. ' combination' → logprob: -4.096898555755615
    10. '(part' → logprob: -4.221898555755615

Token 216: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.010227838531136513
    2. 'K' → logprob: -4.885227680206299
    3. '[R' → logprob: -6.135227680206299
    4. '[' → logprob: -7.885227680206299
    5. ')' → logprob: -11.135228157043457
    6. '[k' → logprob: -11.260228157043457
    7. '(K' → logprob: -11.510228157043457
    8. ' [' → logprob: -11.885228157043457
    9. '[
' → logprob: -11.885228157043457
    10. 'R' → logprob: -12.510228157043457

Token 217: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6422030925750732
    2. '-' → logprob: -0.8922030925750732
    3. ']*' → logprob: -3.5172030925750732
    4. ']*(' → logprob: -3.5172030925750732
    5. ' -' → logprob: -6.017203330993652
    6. ']-' → logprob: -6.392203330993652
    7. '   ' → logprob: -8.892203330993652
    8. '])' → logprob: -9.267203330993652
    9. ' ' → logprob: -9.267203330993652
    10. ' ]' → logprob: -9.392203330993652

Token 218: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7492777705192566
    2. '[' → logprob: -1.2492778301239014
    3. '[K' → logprob: -2.3742778301239014
    4. '<|end|>' → logprob: -2.6242778301239014
    5. '%' → logprob: -3.9992778301239014
    6. ')' → logprob: -4.124277591705322
    7. '[R' → logprob: -4.249277591705322
    8. ' *' → logprob: -4.499277591705322
    9. '[(' → logprob: -5.749277591705322
    10. '*(' → logprob: -5.874277591705322

Token 219: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.018372345715761185
    2. '(re' → logprob: -4.518372535705566
    3. '   ' → logprob: -5.893372535705566
    4. ' rev' → logprob: -6.518372535705566
    5. '((' → logprob: -6.768372535705566
    6. 'pow' → logprob: -7.393372535705566
    7. '(pow' → logprob: -8.518372535705566
    8. ' (' → logprob: -8.643372535705566
    9. '  ' → logprob: -9.330872535705566
    10. '.rev' → logprob: -9.393372535705566

Token 220: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.012767910026013851
    2. '[R' → logprob: -4.387767791748047
    3. 'K' → logprob: -8.512767791748047
    4. '[' → logprob: -9.887767791748047
    5. ' [' → logprob: -13.262767791748047
    6. 'R' → logprob: -13.637767791748047
    7. '   ' → logprob: -14.012767791748047
    8. '	K' → logprob: -14.637767791748047
    9. '[
' → logprob: -14.762767791748047
    10. '```' → logprob: -15.512767791748047

Token 221: '-R' (ID: 12401)
  Prédit: '-R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-R' → logprob: -0.0036688409745693207
    2. '-' → logprob: -5.628668785095215
    3. ' -' → logprob: -9.628668785095215
    4. '-
' → logprob: -13.003668785095215
    5. 'R' → logprob: -16.00366973876953
    6. ')' → logprob: -16.12866973876953
    7. ']' → logprob: -16.12866973876953
    8. ' ' → logprob: -16.25366973876953
    9. '-)' → logprob: -16.37866973876953
    10. '−' → logprob: -16.75366973876953

Token 222: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2650182545185089
    2. ']' → logprob: -1.8900182247161865
    3. ')' → logprob: -2.7650182247161865
    4. ']*(' → logprob: -4.640018463134766
    5. ']*' → logprob: -6.015018463134766
    6. ']%' → logprob: -6.015018463134766
    7. '])*' → logprob: -6.015018463134766
    8. ' )' → logprob: -7.890018463134766
    9. ']*)' → logprob: -8.015018463134766
    10. ')*(' → logprob: -8.390018463134766

Token 223: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5498390793800354
    2. '%' → logprob: -1.1748390197753906
    3. ')' → logprob: -3.0498390197753906
    4. '*' → logprob: -3.7998390197753906
    5. ' *' → logprob: -3.7998390197753906
    6. '<|end|>' → logprob: -4.174839019775391
    7. '[' → logprob: -5.799839019775391
    8. ' ' → logprob: -6.424839019775391
    9. ' )' → logprob: -8.17483901977539
    10. '(' → logprob: -8.17483901977539

Token 224: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006723302416503429
    2. ' mod' → logprob: -5.006723403930664
    3. '(mod' → logprob: -11.756723403930664
    4. '	mod' → logprob: -17.256723403930664
    5. '_mod' → logprob: -19.256723403930664
    6. ' ' → logprob: -19.506723403930664
    7. '```' → logprob: -19.881723403930664
    8. ' ' → logprob: -20.131723403930664
    9. '(' → logprob: -20.256723403930664
    10. ' мод' → logprob: -20.506723403930664

Token 225: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' create' (ID: 2501)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partial' → logprob: -1.0943838357925415
    2. ' main' → logprob: -1.5943838357925415
    3. ' count' → logprob: -2.219383716583252
    4. ' factorial' → logprob: -2.719383716583252
    5. ' solve' → logprob: -3.094383716583252
    6. ' sum' → logprob: -3.094383716583252
    7. ' compute' → logprob: -3.469383716583252
    8. ' calculate' → logprob: -3.469383716583252
    9. ' mod' → logprob: -3.969383716583252
    10. ' is' → logprob: -4.344383716583252

Token 228: '_com' (ID: 10828)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.14471036195755005
    2. '_' → logprob: -2.6447103023529053
    3. '_array' → logprob: -4.644710540771484
    4. '_comb' → logprob: -4.644710540771484
    5. '_set' → logprob: -5.019710540771484
    6. '_factor' → logprob: -5.269710540771484
    7. '_combo' → logprob: -6.019710540771484
    8. '_table' → logprob: -6.019710540771484
    9. '(' → logprob: -6.144710540771484
    10. '_partial' → logprob: -6.144710540771484

Token 229: 'bi' (ID: 6738)
  Prédit: 'bination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.030613791197538376
    2. 'b' → logprob: -3.655613899230957
    3. '_b' → logprob: -5.905613899230957
    4. 'binations' → logprob: -6.905613899230957
    5. '_' → logprob: -8.155613899230957
    6. '```' → logprob: -9.530613899230957
    7. 'bin' → logprob: -10.030613899230957
    8. '
' → logprob: -10.155613899230957
    9. 'bine' → logprob: -10.780613899230957
    10. '(' → logprob: -11.155613899230957

Token 230: '(N' (ID: 10564)
  Prédit: 'nation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nation' → logprob: -0.1009918674826622
    2. 'n' → logprob: -2.35099196434021
    3. '(n' → logprob: -7.225991725921631
    4. '_n' → logprob: -11.600992202758789
    5. '_list' → logprob: -11.725992202758789
    6. '[n' → logprob: -11.850992202758789
    7. 'ne' → logprob: -12.100992202758789
    8. '(N' → logprob: -12.725992202758789
    9. '(' → logprob: -12.850992202758789
    10. 'Nation' → logprob: -12.975992202758789

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006305580958724022
    2. '):' → logprob: -5.256305694580078
    3. '+' → logprob: -7.256305694580078
    4. '_,' → logprob: -9.006305694580078
    5. ')' → logprob: -9.506305694580078
    6. ' ,' → logprob: -9.506305694580078
    7. '+,' → logprob: -10.006305694580078
    8. '_' → logprob: -11.381305694580078
    9. '):
' → logprob: -12.256305694580078
    10. ',n' → logprob: -12.381305694580078

Token 232: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.22546741366386414
    2. ' mod' → logprob: -1.6004674434661865
    3. 'M' → logprob: -11.100467681884766
    4. 'm' → logprob: -11.225467681884766
    5. ' M' → logprob: -11.350467681884766
    6. ' K' → logprob: -13.100467681884766
    7. '   ' → logprob: -13.100467681884766
    8. ' ' → logprob: -13.225467681884766
    9. 'K' → logprob: -13.725467681884766
    10. '	mod' → logprob: -13.725467681884766

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034952821442857385
    2. '):
' → logprob: -8.000349998474121
    3. ',' → logprob: -11.875349998474121
    4. ')' → logprob: -12.625349998474121
    5. ':' → logprob: -13.500349998474121
    6. '):
' → logprob: -14.000349998474121
    7. ' ):' → logprob: -14.250349998474121
    8. '   ' → logprob: -14.625349998474121
    9. '):

' → logprob: -15.250349998474121
    10. ''):' → logprob: -16.375349044799805

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006878649350255728
    2. '	p' → logprob: -5.006878852844238
    3. '   ' → logprob: -10.006878852844238
    4. '(power' → logprob: -10.006878852844238
    5. 'power' → logprob: -10.256878852844238
    6. '```' → logprob: -11.631878852844238
    7. '[' → logprob: -12.131878852844238
    8. ',p' → logprob: -12.256878852844238
    9. ' power' → logprob: -12.506878852844238
    10. '\t' → logprob: -12.631878852844238

Token 235: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' (adapté à ' power') → logprob: -0.16291579604148865
    2. ' power' → logprob: -2.0379157066345215
    3. '   ' → logprob: -3.9129157066345215
    4. 'powers' → logprob: -10.41291618347168
    5. 'pow' → logprob: -11.16291618347168
    6. '(power' → logprob: -13.16291618347168
    7. ' ' → logprob: -13.41291618347168
    8. '```' → logprob: -13.53791618347168
    9. ' powers' → logprob: -13.66291618347168
    10. '  ' → logprob: -13.78791618347168

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1835917979478836
    2. ' =' → logprob: -2.308591842651367
    3. ',' → logprob: -2.683591842651367
    4. ' ,' → logprob: -13.433591842651367
    5. ')' → logprob: -14.058591842651367
    6. '   ' → logprob: -14.183591842651367
    7. 's' → logprob: -14.183591842651367
    8. '=create' → logprob: -14.183591842651367
    9. '=

' → logprob: -15.058591842651367
    10. '=}' → logprob: -15.808591842651367

Token 237: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.04204203933477402
    2. ' compute' → logprob: -3.2920420169830322
    3. 'make' → logprob: -5.542042255401611
    4. ' make' → logprob: -9.542041778564453
    5. '[' → logprob: -14.417041778564453
    6. '(make' → logprob: -14.792041778564453
    7. ' ' → logprob: -14.917041778564453
    8. '.compute' → logprob: -15.542041778564453
    9. '   ' → logprob: -16.042041778564453
    10. '_compute' → logprob: -16.042041778564453

Token 238: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.704273118884885e-07
    2. 'powers' → logprob: -14.750000953674316
    3. '_power' → logprob: -16.125
    4. 's' → logprob: -16.625
    5. 'p' → logprob: -17.25
    6. '_pow' → logprob: -18.0
    7. '_' → logprob: -18.125
    8. 'P' → logprob: -19.5
    9. '```' → logprob: -19.75
    10. 'pow' → logprob: -19.75

Token 239: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -3.249780638725497e-05
    2. 'powers' → logprob: -10.625032424926758
    3. 'ower' → logprob: -12.000032424926758
    4. 'wers' → logprob: -14.250032424926758
    5. 'ows' → logprob: -14.750032424926758
    6. 'ow' → logprob: -14.750032424926758
    7. ' powers' → logprob: -16.250032424926758
    8. '```' → logprob: -16.750032424926758
    9. 'overs' → logprob: -17.375032424926758
    10. '   ' → logprob: -17.375032424926758

Token 240: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0010392407421022654
    2. '(' → logprob: -6.876039028167725
    3. ' (' → logprob: -12.751039505004883
    4. '<|end|>' → logprob: -13.001039505004883
    5. '(n' → logprob: -14.126039505004883
    6. '(
' → logprob: -15.751039505004883
    7. '((' → logprob: -15.876039505004883
    8. 'N' → logprob: -16.126039505004883
    9. '```' → logprob: -17.376039505004883
    10. ')(' → logprob: -18.001039505004883

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.288163083605468e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',
' → logprob: -14.250052452087402
    4. '+' → logprob: -14.625052452087402
    5. ')' → logprob: -16.12505340576172
    6. ',module' → logprob: -16.62505340576172
    7. ',

' → logprob: -17.25005340576172
    8. '   ' → logprob: -17.62505340576172
    9. '+,' → logprob: -17.87505340576172
    10. '),' → logprob: -18.75005340576172

Token 242: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01814994215965271
    2. ' mod' → logprob: -4.0181498527526855
    3. '	mod' → logprob: -17.268150329589844
    4. ' ' → logprob: -18.643150329589844
    5. '(mod' → logprob: -19.143150329589844
    6. '```' → logprob: -20.268150329589844
    7. ' мод' → logprob: -20.643150329589844
    8. '   ' → logprob: -21.018150329589844
    9. 'm' → logprob: -21.018150329589844
    10. '_mod' → logprob: -21.268150329589844

Token 243: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.53050296427682e-05
    2. ')
' → logprob: -9.37508487701416
    3. ' )' → logprob: -15.25008487701416
    4. ',' → logprob: -16.625085830688477
    5. '),' → logprob: -16.750085830688477
    6. ')

' → logprob: -18.375085830688477
    7. '   ' → logprob: -18.375085830688477
    8. ')
' → logprob: -18.625085830688477
    9. ',)' → logprob: -19.375085830688477
    10. ');' → logprob: -19.500085830688477

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2141326367855072
    2. 'rev' → logprob: -1.9641326665878296
    3. '
' → logprob: -3.33913254737854
    4. ' rev' → logprob: -4.214132785797119
    5. '    
' → logprob: -6.339132785797119
    6. '```' → logprob: -9.589132308959961
    7. ' 
' → logprob: -9.714132308959961
    8. '	re' → logprob: -9.839132308959961
    9. 're' → logprob: -9.964132308959961
    10. ',' → logprob: -9.964132308959961

Token 245: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -0.0008284482173621655
    2. '   ' → logprob: -7.250828266143799
    3. ' rev' → logprob: -9.750828742980957
    4. 're' → logprob: -9.750828742980957
    5. '
' → logprob: -14.125828742980957
    6. '    
' → logprob: -14.375828742980957
    7. '  ' → logprob: -15.625828742980957
    8. ' ' → logprob: -15.875828742980957
    9. '```' → logprob: -16.00082778930664
    10. 'rep' → logprob: -16.87582778930664

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18042494356632233
    2. ' =' → logprob: -1.8054249286651611
    3. ',' → logprob: -7.30542516708374
    4. '=create' → logprob: -12.055424690246582
    5. '<|end|>' → logprob: -14.055424690246582
    6. 's' → logprob: -15.055424690246582
    7. '   ' → logprob: -15.305424690246582
    8. '	' → logprob: -15.430424690246582
    9. ')' → logprob: -15.680424690246582
    10. '[' → logprob: -16.1804256439209

Token 247: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.10020958632230759
    2. ' compute' → logprob: -2.3502094745635986
    3. 'create' → logprob: -13.10020923614502
    4. 'computer' → logprob: -15.10020923614502
    5. ' create' → logprob: -15.35020923614502
    6. '_compute' → logprob: -15.35020923614502
    7. '.compute' → logprob: -15.97520923614502
    8. 'calculate' → logprob: -17.850210189819336
    9. ' ' → logprob: -18.100210189819336
    10. 'comput' → logprob: -18.975210189819336

Token 248: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0004889304982498288
    2. 're' → logprob: -7.750488758087158
    3. '_p' → logprob: -10.125489234924316
    4. 's' → logprob: -11.375489234924316
    5. '_com' → logprob: -12.875489234924316
    6. 'Re' → logprob: -13.750489234924316
    7. '```' → logprob: -14.000489234924316
    8. '_res' → logprob: -14.375489234924316
    9. '_r' → logprob: -14.750489234924316
    10. '_rev' → logprob: -16.37548828125

Token 249: 'vs' (ID: 16121)
  Prédit: 'vs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0004438971809577197
    2. 'v' → logprob: -7.750443935394287
    3. 'vsp' → logprob: -12.625443458557129
    4. 's' → logprob: -13.500443458557129
    5. '(' → logprob: -13.625443458557129
    6. 'ps' → logprob: -14.250443458557129
    7. 'power' → logprob: -14.250443458557129
    8. 'ves' → logprob: -14.250443458557129
    9. 'VS' → logprob: -14.250443458557129
    10. '[' → logprob: -14.250443458557129

Token 250: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -12.000009536743164
    3. 'N' → logprob: -13.000009536743164
    4. ' (' → logprob: -13.750009536743164
    5. '(
' → logprob: -16.375009536743164
    6. '```' → logprob: -16.625009536743164
    7. '<|end|>' → logprob: -17.375009536743164
    8. '(n' → logprob: -18.250009536743164
    9. ')' → logprob: -18.375009536743164
    10. ',N' → logprob: -18.625009536743164

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007828895002603531
    2. ',N' → logprob: -5.007828712463379
    3. '(N' → logprob: -7.007828712463379
    4. ' ,' → logprob: -8.757828712463379
    5. '   ' → logprob: -10.757828712463379
    6. ')' → logprob: -10.882828712463379
    7. 'N' → logprob: -12.132828712463379
    8. '(' → logprob: -12.632828712463379
    9. ',
' → logprob: -14.382828712463379
    10. ' (' → logprob: -15.257828712463379

Token 252: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0316801443696022
    2. 'N' → logprob: -3.531680107116699
    3. ' mod' → logprob: -6.281680107116699
    4. ' N' → logprob: -9.9066801071167
    5. '   ' → logprob: -12.0316801071167
    6. ' ' → logprob: -14.2816801071167
    7. '(mod' → logprob: -14.7816801071167
    8. '	mod' → logprob: -15.4066801071167
    9. '  ' → logprob: -15.5316801071167
    10. ')' → logprob: -15.9066801071167

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.466968650580384e-05
    2. ' ,' → logprob: -10.250054359436035
    3. ',p' → logprob: -11.375054359436035
    4. '   ' → logprob: -12.750054359436035
    5. 'power' → logprob: -13.125054359436035
    6. ',
' → logprob: -13.500054359436035
    7. ')' → logprob: -14.250054359436035
    8. ' power' → logprob: -14.750054359436035
    9. '(power' → logprob: -15.000054359436035
    10. ' ' → logprob: -16.37505531311035

Token 254: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.03804149478673935
    2. ' power' → logprob: -3.288041591644287
    3. 'pow' → logprob: -17.038042068481445
    4. '(power' → logprob: -17.663042068481445
    5. '   ' → logprob: -19.538042068481445
    6. '_power' → logprob: -19.913042068481445
    7. 'powers' → logprob: -19.913042068481445
    8. ' ' → logprob: -20.163042068481445
    9. 'Power' → logprob: -20.913042068481445
    10. ')' → logprob: -21.538042068481445

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4855663721391466e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -16.750015258789062
    4. '   ' → logprob: -18.250015258789062
    5. ')

' → logprob: -18.500015258789062
    6. ')return' → logprob: -18.625015258789062
    7. ')
' → logprob: -20.000015258789062
    8. ')#' → logprob: -20.625015258789062
    9. '),' → logprob: -20.875015258789062
    10. ' ' → logprob: -21.250015258789062

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019042797794099897
    2. 'return' → logprob: -8.750190734863281
    3. ' return' → logprob: -11.000190734863281
    4. '	return' → logprob: -11.375190734863281
    5. '
' → logprob: -13.375190734863281
    6. '    
' → logprob: -13.875190734863281
    7. '```' → logprob: -14.375190734863281
    8. '<|end|>' → logprob: -15.625190734863281
    9. '   ' → logprob: -15.750190734863281
    10. '{return' → logprob: -16.75019073486328

Token 257: ' comb' (ID: 4134)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03424650803208351
    2. '   ' → logprob: -3.5342464447021484
    3. ' return' → logprob: -5.409246444702148
    4. '
' → logprob: -13.284246444702148
    5. ' ' → logprob: -13.284246444702148
    6. '	return' → logprob: -13.534246444702148
    7. 'def' → logprob: -13.534246444702148
    8. '```' → logprob: -13.534246444702148
    9. '  ' → logprob: -13.659246444702148
    10. '{return' → logprob: -13.909246444702148

Token 258: 'i' (ID: 72)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0413840226829052
    2. 'i' → logprob: -4.291384220123291
    3. ' =' → logprob: -4.291384220123291
    4. 'inations' → logprob: -5.166384220123291
    5. '=' → logprob: -5.541384220123291
    6. '   ' → logprob: -5.791384220123291
    7. 'INATION' → logprob: -9.041383743286133
    8. 'in' → logprob: -9.166383743286133
    9. 'inition' → logprob: -10.041383743286133
    10. 'iation' → logprob: -10.041383743286133

Token 259: '_obj' (ID: 16879)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20774899423122406
    2. ' =' → logprob: -2.0827488899230957
    3. 'nation' → logprob: -3.0827488899230957
    4. 's' → logprob: -4.707748889923096
    5. 'ination' → logprob: -5.457748889923096
    6. 'n' → logprob: -6.207748889923096
    7. 'inations' → logprob: -7.332748889923096
    8. '   ' → logprob: -7.707748889923096
    9. '=[]' → logprob: -8.332749366760254
    10. ' ' → logprob: -8.332749366760254

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2818502187728882
    2. ' =' → logprob: -1.4068502187728882
    3. 's' → logprob: -8.28184986114502
    4. '={}' → logprob: -9.40684986114502
    5. '=[]' → logprob: -9.65684986114502
    6. ' ' → logprob: -9.65684986114502
    7. 'inate' → logprob: -9.90684986114502
    8. 'ination' → logprob: -10.15684986114502
    9. '   ' → logprob: -10.15684986114502
    10. '=create' → logprob: -10.53184986114502

Token 261: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5804126858711243
    2. '{
' → logprob: -1.0804126262664795
    3. '{}' → logprob: -2.9554126262664795
    4. '(lambda' → logprob: -4.455412864685059
    5. 'lambda' → logprob: -4.580412864685059
    6. ' lambda' → logprob: -4.580412864685059
    7. ' {
' → logprob: -5.080412864685059
    8. '{'' → logprob: -5.580412864685059
    9. ' {' → logprob: -5.705412864685059
    10. '{"' → logprob: -6.080412864685059

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00471207220107317
    2. '	com' → logprob: -5.754712104797363
    3. '<|end|>' → logprob: -7.629712104797363
    4. '    
' → logprob: -8.629712104797363
    5. '(com' → logprob: -8.754712104797363
    6. '
' → logprob: -8.879712104797363
    7. 'com' → logprob: -9.004712104797363
    8. '	for' → logprob: -9.129712104797363
    9. ' for' → logprob: -9.254712104797363
    10. '[' → logprob: -9.754712104797363

Token 263: ' comb' (ID: 4134)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3593776524066925
    2. 'com' → logprob: -1.9843776226043701
    3. 'for' → logprob: -2.48437762260437
    4. 'def' → logprob: -2.98437762260437
    5. ' for' → logprob: -3.60937762260437
    6. ' comb' → logprob: -6.234377861022949
    7. ' def' → logprob: -7.484377861022949
    8. 'comb' (adapté à ' comb') → logprob: -7.609377861022949
    9. '	com' → logprob: -8.73437786102295
    10. 'return' → logprob: -9.73437786102295

Token 264: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00032640635618008673
    2. '   ' → logprob: -8.250326156616211
    3. 'bi' → logprob: -10.000326156616211
    4. 'bination' → logprob: -11.875326156616211
    5. 'ination' → logprob: -12.500326156616211
    6. 'ini' → logprob: -13.500326156616211
    7. '  ' → logprob: -13.875326156616211
    8. '       ' → logprob: -13.875326156616211
    9. '```' → logprob: -14.250326156616211
    10. '_i' → logprob: -14.375326156616211

Token 265: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -1.1875571544806007e-05
    2. 'Obj' → logprob: -12.125011444091797
    3. '   ' → logprob: -13.000011444091797
    4. 'ation' → logprob: -14.000011444091797
    5. 'obj' → logprob: -14.000011444091797
    6. '_Obj' → logprob: -14.125011444091797
    7. '_objs' → logprob: -14.625011444091797
    8. '_object' → logprob: -14.750011444091797
    9. '_OBJ' → logprob: -15.625011444091797
    10. '_' → logprob: -15.750011444091797

Token 266: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.029670067131519318
    2. ' =' → logprob: -4.529670238494873
    3. '["' → logprob: -4.654670238494873
    4. '=' → logprob: -5.154670238494873
    5. '[' → logprob: -5.904670238494873
    6. '.' → logprob: -8.529669761657715
    7. '.update' → logprob: -9.279669761657715
    8. ' ['' → logprob: -10.029669761657715
    9. ' ' → logprob: -10.529669761657715
    10. '.setdefault' → logprob: -11.279669761657715

Token 267: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0095480652526021
    2. 'comb' → logprob: -5.259548187255859
    3. 'C' → logprob: -5.884548187255859
    4. 'pow' → logprob: -8.25954818725586
    5. 'n' → logprob: -8.38454818725586
    6. 'factor' → logprob: -8.38454818725586
    7. 'choose' → logprob: -8.50954818725586
    8. 'N' → logprob: -9.00954818725586
    9. 'combine' → logprob: -9.25954818725586
    10. 'com' → logprob: -9.50954818725586

Token 268: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0008446489810012281
    2. '']=' → logprob: -7.500844478607178
    3. ''],' → logprob: -8.625844955444336
    4. ']' → logprob: -9.250844955444336
    5. '']='' → logprob: -12.250844955444336
    6. '"]' → logprob: -12.375844955444336
    7. ''' → logprob: -13.125844955444336
    8. '']]' → logprob: -13.125844955444336
    9. ' ']' → logprob: -13.500844955444336
    10. ',' → logprob: -14.625844955444336

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3137264549732208
    2. ' =' → logprob: -1.3137264251708984
    3. ',' → logprob: -7.688726425170898
    4. ']' → logprob: -12.188726425170898
    5. ' ,' → logprob: -14.938726425170898
    6. '=

' → logprob: -14.938726425170898
    7. ')' → logprob: -15.313726425170898
    8. ']=' → logprob: -15.688726425170898
    9. '=}' → logprob: -15.938726425170898
    10. ' ]' → logprob: -16.0637264251709

Token 270: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.00861456897109747
    2. ' power' → logprob: -4.758614540100098
    3. 'pow' → logprob: -16.883615493774414
    4. '(power' → logprob: -17.508615493774414
    5. 'powers' → logprob: -19.008615493774414
    6. '_power' → logprob: -20.383615493774414
    7. '
' → logprob: -20.633615493774414
    8. 'Power' → logprob: -22.133615493774414
    9. 'payment' → logprob: -22.883615493774414
    10. '.power' → logprob: -23.133615493774414

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03159317746758461
    2. '	com' → logprob: -4.031593322753906
    3. 'com' → logprob: -4.406593322753906
    4. ',' → logprob: -7.531593322753906
    5. '(com' → logprob: -7.906593322753906
    6. '
' → logprob: -9.031593322753906
    7. ' comb' → logprob: -10.531593322753906
    8. ' ' → logprob: -10.906593322753906
    9. '    
' → logprob: -11.281593322753906
    10. '  ' → logprob: -11.406593322753906

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002352337818592787
    2. 'com' → logprob: -6.377352237701416
    3. '	com' → logprob: -7.627352237701416
    4. ' comb' → logprob: -9.002352714538574
    5. '(com' → logprob: -10.877352714538574
    6. ',' → logprob: -11.627352714538574
    7. '```' → logprob: -12.377352714538574
    8. '  ' → logprob: -12.877352714538574
    9. 're' → logprob: -13.377352714538574
    10. ' com' → logprob: -13.627352714538574

Token 273: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.026191726326942444
    2. '   ' → logprob: -3.7761917114257812
    3. ' comb' → logprob: -6.026191711425781
    4. 're' → logprob: -7.901191711425781
    5. '	com' → logprob: -9.401191711425781
    6. 'comb' (adapté à ' comb') → logprob: -10.151191711425781
    7. ' com' → logprob: -10.776191711425781
    8. '(com' → logprob: -12.276191711425781
    9. ' ' → logprob: -12.776191711425781
    10. ' combin' → logprob: -12.901191711425781

Token 274: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.249780638725497e-05
    2. '_obj' → logprob: -10.500032424926758
    3. 'obj' → logprob: -13.250032424926758
    4. 'ination' → logprob: -14.375032424926758
    5. 'o' → logprob: -14.750032424926758
    6. '_rev' → logprob: -15.000032424926758
    7. '   ' → logprob: -15.375032424926758
    8. '['' → logprob: -15.625032424926758
    9. 'rev' → logprob: -15.750032424926758
    10. 'in' → logprob: -16.000032424926758

Token 275: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -5.7888184528565034e-05
    2. 'obj' → logprob: -9.8750581741333
    3. 'Obj' → logprob: -12.6250581741333
    4. '_objs' → logprob: -13.5000581741333
    5. '_object' → logprob: -13.7500581741333
    6. '_Obj' → logprob: -15.5000581741333
    7. '_OBJ' → logprob: -15.7500581741333
    8. '['' → logprob: -16.625057220458984
    9. '_' → logprob: -16.875057220458984
    10. 'o' → logprob: -17.000057220458984

Token 276: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.057743949990254e-05
    2. '[' → logprob: -10.875020980834961
    3. ']['' → logprob: -14.625020980834961
    4. '=' → logprob: -14.625020980834961
    5. '['_' → logprob: -15.500020980834961
    6. '.' → logprob: -15.750020980834961
    7. '["' → logprob: -16.12502098083496
    8. ' ['' → logprob: -16.62502098083496
    9. '[['' → logprob: -16.75002098083496
    10. ''' → logprob: -16.87502098083496

Token 277: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -8.895480277715251e-06
    2. ' rev' → logprob: -11.750008583068848
    3. 're' → logprob: -15.000008583068848
    4. '
' → logprob: -16.000009536743164
    5. ' ' → logprob: -16.000009536743164
    6. 'rv' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.375009536743164
    8. ''' → logprob: -17.250009536743164
    9. 'rep' → logprob: -17.250009536743164
    10. 'rec' → logprob: -17.250009536743164

Token 278: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -9.865583706414327e-05
    2. '']=' → logprob: -9.25009822845459
    3. '"]' → logprob: -13.87509822845459
    4. ']' → logprob: -14.25009822845459
    5. ''' → logprob: -15.12509822845459
    6. ' ']' → logprob: -15.37509822845459
    7. '=' → logprob: -15.75009822845459
    8. '']='' → logprob: -15.87509822845459
    9. '<|end|>' → logprob: -17.875099182128906
    10. '']="' → logprob: -17.875099182128906

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028108209371566772
    2. ' =' → logprob: -5.877810955047607
    3. ']' → logprob: -12.25281047821045
    4. '[' → logprob: -14.12781047821045
    5. ')' → logprob: -15.62781047821045
    6. ']=' → logprob: -16.127811431884766
    7. '=

' → logprob: -16.627811431884766
    8. '=}' → logprob: -16.877811431884766
    9. '<|end|>' → logprob: -17.502811431884766
    10. '=[]' → logprob: -17.502811431884766

Token 280: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.1002068892121315
    2. ' rev' → logprob: -2.3502068519592285
    3. 're' → logprob: -15.600207328796387
    4. '.rev' → logprob: -17.35020637512207
    5. 'rep' → logprob: -17.47520637512207
    6. '_rev' → logprob: -17.72520637512207
    7. 'reverse' → logprob: -18.35020637512207
    8. ' ' → logprob: -18.47520637512207
    9. '   ' → logprob: -18.60020637512207
    10. 'rew' → logprob: -19.10020637512207

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020687808864749968
    2. '
' → logprob: -9.25020694732666
    3. '	com' → logprob: -9.37520694732666
    4. '	return' → logprob: -12.00020694732666
    5. '    
' → logprob: -12.00020694732666
    6. 'com' → logprob: -12.12520694732666
    7. '(com' → logprob: -12.75020694732666
    8. 'return' → logprob: -13.00020694732666
    9. ' comb' → logprob: -14.12520694732666
    10. '```' → logprob: -14.25020694732666

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.999452772201039e-05
    2. '	com' → logprob: -10.875029563903809
    3. 'com' → logprob: -12.000029563903809
    4. ' comb' → logprob: -13.375029563903809
    5. '
' → logprob: -13.750029563903809
    6. 'return' → logprob: -14.250029563903809
    7. '    
' → logprob: -14.500029563903809
    8. '(com' → logprob: -14.500029563903809
    9. '	return' → logprob: -15.125029563903809
    10. ' return' → logprob: -16.000030517578125

Token 283: ' comb' (ID: 4134)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43621036410331726
    2. 'com' → logprob: -1.6862103939056396
    3. 'return' → logprob: -1.8112103939056396
    4. ' return' → logprob: -5.4362101554870605
    5. ' comb' → logprob: -8.061210632324219
    6. '	com' → logprob: -9.311210632324219
    7. 'comb' (adapté à ' comb') → logprob: -10.686210632324219
    8. ' com' → logprob: -10.936210632324219
    9. '```' → logprob: -11.061210632324219
    10. '(com' → logprob: -12.436210632324219

Token 284: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021176543668843806
    2. '_obj' → logprob: -8.500211715698242
    3. '_i' → logprob: -12.375211715698242
    4. '   ' → logprob: -13.500211715698242
    5. 'ination' → logprob: -13.875211715698242
    6. 'obj' → logprob: -14.750211715698242
    7. '_' → logprob: -15.000211715698242
    8. '['' → logprob: -15.000211715698242
    9. 'e' → logprob: -16.000211715698242
    10. 'in' → logprob: -16.125211715698242

Token 285: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -8.77627644513268e-06
    2. 'obj' → logprob: -12.000008583068848
    3. '_' → logprob: -14.250008583068848
    4. 'Obj' → logprob: -14.500008583068848
    5. ''_' → logprob: -15.125008583068848
    6. '_o' → logprob: -15.250008583068848
    7. '_object' → logprob: -15.250008583068848
    8. 'o' → logprob: -15.500008583068848
    9. '['' → logprob: -16.250009536743164
    10. '['_' → logprob: -16.625009536743164

Token 286: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0005800772923976183
    2. '[' → logprob: -8.250579833984375
    3. '<|end|>' → logprob: -8.750579833984375
    4. ''' → logprob: -9.625579833984375
    5. '.' → logprob: -11.125579833984375
    6. '.setdefault' → logprob: -11.500579833984375
    7. '[]' → logprob: -11.500579833984375
    8. ']' → logprob: -11.625579833984375
    9. 'return' → logprob: -12.000579833984375
    10. '['_' → logprob: -12.000579833984375

Token 287: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3324107825756073
    2. 'com' → logprob: -1.3324108123779297
    3. 'comb' → logprob: -4.08241081237793
    4. 'power' → logprob: -6.58241081237793
    5. 'pow' → logprob: -9.20741081237793
    6. 'def' → logprob: -9.20741081237793
    7. 'combo' → logprob: -9.33241081237793
    8. 'combine' → logprob: -9.58241081237793
    9. ' mod' → logprob: -10.08241081237793
    10. 'return' → logprob: -10.45741081237793

Token 288: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -5.049755782238208e-05
    2. ']' → logprob: -10.62505054473877
    3. ''' → logprob: -11.25005054473877
    4. '']=' → logprob: -11.75005054473877
    5. '"]' → logprob: -12.50005054473877
    6. ''}' → logprob: -14.62505054473877
    7. '}' → logprob: -15.12505054473877
    8. ' ']' → logprob: -15.62505054473877
    9. '']='' → logprob: -16.000049591064453
    10. '']
' → logprob: -16.250049591064453

Token 289: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0110511165112257
    2. ' =' → logprob: -4.511051177978516
    3. ']' → logprob: -13.511051177978516
    4. ')' → logprob: -14.136051177978516
    5. '=

' → logprob: -14.886051177978516
    6. '=}' → logprob: -15.136051177978516
    7. ',' → logprob: -16.136051177978516
    8. '_' → logprob: -16.386051177978516
    9. ':' → logprob: -16.511051177978516
    10. '=
' → logprob: -16.886051177978516

Token 290: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.16022492945194244
    2. 'mod' → logprob: -1.9102249145507812
    3. '	mod' → logprob: -14.785224914550781
    4. '(mod' → logprob: -15.535224914550781
    5. ' ' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.28522491455078
    7. ' modul' → logprob: -17.41022491455078
    8. ' мод' → logprob: -18.41022491455078
    9. '_mod' → logprob: -19.03522491455078
    10. ' modulus' → logprob: -19.41022491455078

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014325011288747191
    2. '
' → logprob: -7.126432418823242
    3. '	return' → logprob: -8.001432418823242
    4. 'return' → logprob: -9.126432418823242
    5. '    
' → logprob: -9.126432418823242
    6. ' return' → logprob: -10.501432418823242
    7. '<|end|>' → logprob: -10.626432418823242
    8. '```' → logprob: -12.001432418823242
    9. ')' → logprob: -12.376432418823242
    10. ':return' → logprob: -13.001432418823242

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.1054253011243418e-05
    2. 'return' → logprob: -10.875020980834961
    3. ' return' → logprob: -13.750020980834961
    4. '	return' → logprob: -14.250020980834961
    5. '
' → logprob: -15.750020980834961
    6. '    
' → logprob: -16.62502098083496
    7. '   ' → logprob: -17.62502098083496
    8. '```' → logprob: -18.12502098083496
    9. 'def' → logprob: -18.25002098083496
    10. '       ' → logprob: -19.12502098083496

Token 293: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31448766589164734
    2. 'return' (adapté à ' return') → logprob: -1.3144876956939697
    3. 'com' → logprob: -6.939487457275391
    4. ' return' → logprob: -8.31448745727539
    5. 'def' → logprob: -12.06448745727539
    6. '	return' → logprob: -13.31448745727539
    7. 'comb' → logprob: -13.81448745727539
    8. ' comb' → logprob: -13.93948745727539
    9. '	com' → logprob: -14.81448745727539
    10. '```' → logprob: -14.81448745727539

Token 294: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.038200657814741135
    2. ' comb' → logprob: -3.288200616836548
    3. 'comb' → logprob: -9.538200378417969
    4. '(com' → logprob: -9.913200378417969
    5. ' combin' → logprob: -10.913200378417969
    6. ' com' → logprob: -11.288200378417969
    7. 'c' → logprob: -12.538200378417969
    8. '	com' → logprob: -13.288200378417969
    9. '_com' → logprob: -14.788200378417969
    10. ' comp' → logprob: -15.913200378417969

Token 295: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004705914470832795
    2. 'bi' → logprob: -8.000470161437988
    3. 'b' → logprob: -9.250470161437988
    4. '_obj' → logprob: -10.625470161437988
    5. '_i' → logprob: -12.875470161437988
    6. 'o' → logprob: -13.125470161437988
    7. 'obj' → logprob: -13.375470161437988
    8. 'bo' → logprob: -13.750470161437988
    9. 'com' → logprob: -14.000470161437988
    10. '   ' → logprob: -14.125470161437988

Token 296: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -1.1994775377388578e-05
    2. '_objs' → logprob: -12.375012397766113
    3. 'obj' → logprob: -12.625012397766113
    4. '_com' → logprob: -13.125012397766113
    5. 'com' → logprob: -13.250012397766113
    6. '_' → logprob: -15.875012397766113
    7. '_object' → logprob: -16.125011444091797
    8. '_ob' → logprob: -16.375011444091797
    9. 'c' → logprob: -17.125011444091797
    10. '__' → logprob: -17.250011444091797

Token 297: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8663259148597717
    2. '<|end|>' → logprob: -0.8663259148597717
    3. 'def' → logprob: -1.866325855255127
    4. '<|end|>' → logprob: -7.241325855255127
    5. '```' → logprob: -7.366325855255127
    6. '\n' → logprob: -7.491325855255127
    7. '

' → logprob: -7.741325855255127
    8. '#' → logprob: -7.741325855255127
    9. ' def' → logprob: -7.741325855255127
    10. '\' → logprob: -8.116326332092285

Token 298: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011558275582501665
    2. '#' → logprob: -9.875115394592285
    3. '<|end|>' → logprob: -10.000115394592285
    4. '```' → logprob: -11.500115394592285
    5. '
' → logprob: -13.125115394592285
    6. ' def' → logprob: -13.625115394592285
    7. 'import' → logprob: -13.750115394592285
    8. '\' → logprob: -13.750115394592285
    9. 'class' → logprob: -13.875115394592285
    10. '[' → logprob: -14.125115394592285

Token 299: ' comb' (ID: 4134)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.8714911937713623
    2. ' factorial' → logprob: -1.9964911937713623
    3. 'calculate' → logprob: -2.6214911937713623
    4. 'bin' → logprob: -2.9964911937713623
    5. ' calculate' → logprob: -2.9964911937713623
    6. ' combination' → logprob: -2.9964911937713623
    7. 'main' → logprob: -3.1214911937713623
    8. 'factor' → logprob: -3.1214911937713623
    9. ' bin' → logprob: -3.2464911937713623
    10. 'comb' → logprob: -3.2464911937713623

Token 300: 'i' (ID: 72)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.03866765648126602
    2. 'i' → logprob: -3.663667678833008
    3. 'ine' → logprob: -4.538667678833008
    4. 'in' → logprob: -7.538667678833008
    5. 'inate' → logprob: -7.788667678833008
    6. 'INATION' → logprob: -7.913667678833008
    7. 'inition' → logprob: -9.538667678833008
    8. 'inations' → logprob: -9.913667678833008
    9. 'iation' → logprob: -10.163667678833008
    10. '(i' → logprob: -10.788667678833008

Token 301: '_com' (ID: 10828)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.26288649439811707
    2. 'ination' → logprob: -2.6378865242004395
    3. 'nation' → logprob: -2.7628865242004395
    4. '(N' → logprob: -3.1378865242004395
    5. '(K' → logprob: -3.6378865242004395
    6. 'n' → logprob: -3.8878865242004395
    7. '(' → logprob: -6.1378865242004395
    8. '_n' → logprob: -6.8878865242004395
    9. 'ne' → logprob: -7.2628865242004395
    10. 'ine' → logprob: -7.5128865242004395

Token 302: '(com' (ID: 27868)
  Prédit: 'bination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.42188867926597595
    2. 'bi' → logprob: -1.5468887090682983
    3. 'bine' → logprob: -2.921888589859009
    4. 'b' → logprob: -2.921888589859009
    5. 'pute' → logprob: -4.296888828277588
    6. 'bo' → logprob: -5.296888828277588
    7. 'plete' → logprob: -6.796888828277588
    8. 'putation' → logprob: -7.296888828277588
    9. 'bin' → logprob: -7.296888828277588
    10. 'pi' → logprob: -7.796888828277588

Token 303: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.8926271200180054
    2. 'bination' → logprob: -1.0176271200180054
    3. 'b' → logprob: -1.5176271200180054
    4. 'i' → logprob: -5.142627239227295
    5. 'bo' → logprob: -6.642627239227295
    6. '):
' → logprob: -7.267627239227295
    7. 'bine' → logprob: -7.892627239227295
    8. '):' → logprob: -8.017626762390137
    9. 'B' → logprob: -8.392626762390137
    10. ')' → logprob: -9.517626762390137

Token 304: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.011461334303021431
    2. '_' → logprob: -5.51146125793457
    3. ')' → logprob: -5.88646125793457
    4. ',' → logprob: -6.51146125793457
    5. 'obj' → logprob: -6.51146125793457
    6. ')_' → logprob: -7.88646125793457
    7. 'Obj' → logprob: -8.76146125793457
    8. '[' → logprob: -8.88646125793457
    9. '_)' → logprob: -8.88646125793457
    10. '['' → logprob: -9.01146125793457

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003909927327185869
    2. ',K' → logprob: -7.875391006469727
    3. ' ,' → logprob: -11.750391006469727
    4. ',k' → logprob: -13.750391006469727
    5. '):' → logprob: -14.250391006469727
    6. 'K' → logprob: -15.000391006469727
    7. 's' → logprob: -15.125391006469727
    8. ',
' → logprob: -15.250391006469727
    9. '_,' → logprob: -16.375391006469727
    10. '   ' → logprob: -16.750391006469727

Token 306: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.007589587476104498
    2. ' K' → logprob: -5.007589817047119
    3. 'k' → logprob: -7.382589817047119
    4. 'n' → logprob: -8.757589340209961
    5. ')' → logprob: -10.382589340209961
    6. 'N' → logprob: -10.882589340209961
    7. 'a' → logprob: -11.507589340209961
    8. '   ' → logprob: -12.007589340209961
    9. ' ' → logprob: -12.132589340209961
    10. ' n' → logprob: -12.257589340209961

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5107177862082608e-05
    2. ',R' → logprob: -11.125024795532227
    3. ' ,' → logprob: -11.500024795532227
    4. ',r' → logprob: -16.000024795532227
    5. '   ' → logprob: -17.875024795532227
    6. '_,' → logprob: -17.875024795532227
    7. ',
' → logprob: -18.500024795532227
    8. ',K' → logprob: -18.875024795532227
    9. '‌,' → logprob: -19.250024795532227
    10. 'R' → logprob: -19.750024795532227

Token 308: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0380457378923893
    2. ' R' → logprob: -3.288045644760132
    3. ' ' → logprob: -12.913045883178711
    4. '   ' → logprob: -14.038045883178711
    5. '  ' → logprob: -15.288045883178711
    6. '	R' → logprob: -15.413045883178711
    7. ')' → logprob: -15.913045883178711
    8. 'r' → logprob: -16.03804588317871
    9. ' ' → logprob: -17.35054588317871
    10. '
' → logprob: -17.47554588317871

Token 309: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001645644661039114
    2. '):
' → logprob: -8.875164985656738
    3. ')' → logprob: -10.750164985656738
    4. ' ):' → logprob: -12.875164985656738
    5. '):
' → logprob: -14.875164985656738
    6. ',' → logprob: -16.250164031982422
    7. '   ' → logprob: -16.250164031982422
    8. ':' → logprob: -17.250164031982422
    9. '):

' → logprob: -17.250164031982422
    10. ' ' → logprob: -17.375164031982422

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001085497424355708
    2. ' return' → logprob: -9.37510871887207
    3. ')' → logprob: -11.37510871887207
    4. '	return' → logprob: -12.25010871887207
    5. 'return' → logprob: -12.87510871887207
    6. '<|end|>' → logprob: -13.37510871887207
    7. ' if' → logprob: -14.12510871887207
    8. '{return' → logprob: -14.75010871887207
    9. '   ' → logprob: -14.75010871887207
    10. '    
' → logprob: -14.75010871887207

Token 311: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06016138195991516
    2. 'return' (adapté à ' return') → logprob: -3.1851613521575928
    3. ' return' → logprob: -4.185161590576172
    4. 'mod' → logprob: -6.435161590576172
    5. ' if' → logprob: -9.560161590576172
    6. 'if' → logprob: -9.560161590576172
    7. ' mod' → logprob: -10.185161590576172
    8. '	return' → logprob: -12.310161590576172
    9. 'power' → logprob: -12.810161590576172
    10. '   ' → logprob: -12.810161590576172

Token 312: ' combination' (ID: 14083)
  Prédit: ' combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.5950832366943359
    2. 'comb' → logprob: -1.470083236694336
    3. '(com' → logprob: -1.595083236694336
    4. 'com' → logprob: -4.220083236694336
    5. ' (' → logprob: -7.470083236694336
    6. '((' → logprob: -8.220083236694336
    7. 'combo' → logprob: -10.595083236694336
    8. '0' → logprob: -10.845083236694336
    9. ' ((' → logprob: -10.970083236694336
    10. ' comb' → logprob: -11.095083236694336

Token 313: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33580562472343445
    2. '(com' → logprob: -1.3358056545257568
    3. '(K' → logprob: -3.835805654525757
    4. ' (' → logprob: -7.960805416107178
    5. '(
' → logprob: -8.085805892944336
    6. '(

' → logprob: -10.460805892944336
    7. '(KERN' → logprob: -11.835805892944336
    8. '((' → logprob: -12.585805892944336
    9. '<|end|>' → logprob: -12.710805892944336
    10. 'com' → logprob: -12.960805892944336

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045021495316177607
    2. ' ,' → logprob: -7.750450134277344
    3. ',R' → logprob: -10.875450134277344
    4. ',r' → logprob: -15.375450134277344
    5. ')' → logprob: -16.375450134277344
    6. '<|end|>' → logprob: -16.625450134277344
    7. ',
' → logprob: -16.750450134277344
    8. '‌,' → logprob: -16.750450134277344
    9. ' ' → logprob: -17.000450134277344
    10. ',K' → logprob: -17.125450134277344

Token 315: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2519291639328003
    2. 'R' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.251928329467773
    4. '<|end|>' → logprob: -18.126928329467773
    5. ')' → logprob: -18.876928329467773
    6. '	R' → logprob: -19.751928329467773
    7. 'r' → logprob: -19.814428329467773
    8. ',' → logprob: -19.814428329467773
    9. ' 
' → logprob: -20.314428329467773
    10. '   ' → logprob: -20.376928329467773

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002124806633219123
    2. ' ,' → logprob: -8.625212669372559
    3. '(com' → logprob: -10.875212669372559
    4. 'com' → logprob: -11.375212669372559
    5. ',
' → logprob: -13.625212669372559
    6. '   ' → logprob: -14.625212669372559
    7. '=com' → logprob: -15.750212669372559
    8. '',' → logprob: -16.500211715698242
    9. '/com' → logprob: -16.500211715698242
    10. ',c' → logprob: -17.000211715698242

Token 317: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0009983942145481706
    2. ' comb' → logprob: -7.125998497009277
    3. ' com' → logprob: -9.250998497009277
    4. '(com' → logprob: -10.000998497009277
    5. 'comb' → logprob: -10.375998497009277
    6. ' combin' → logprob: -11.000998497009277
    7. '	com' → logprob: -13.000998497009277
    8. 'c' → logprob: -14.125998497009277
    9. '-com' → logprob: -14.500998497009277
    10. '_com' → logprob: -15.250998497009277

Token 318: 'i' (ID: 72)
  Prédit: '_obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.5898111462593079
    2. 'i' → logprob: -0.8398111462593079
    3. 'o' → logprob: -4.714811325073242
    4. 'obj' → logprob: -5.839811325073242
    5. 'com' → logprob: -6.339811325073242
    6. 'obi' → logprob: -9.714811325073242
    7. 'oi' → logprob: -11.089811325073242
    8. 'ob' → logprob: -11.214811325073242
    9. 'bi' → logprob: -11.464811325073242
    10. 'b' → logprob: -11.714811325073242

Token 319: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -1.8624639324116288e-06
    2. 'obj' → logprob: -13.375001907348633
    3. 'Obj' → logprob: -16.500001907348633
    4. '_objs' → logprob: -16.750001907348633
    5. '['' → logprob: -17.125001907348633
    6. '_OBJ' → logprob: -17.500001907348633
    7. 'b' → logprob: -17.750001907348633
    8. '_object' → logprob: -18.625001907348633
    9. '$obj' → logprob: -18.875001907348633
    10. '_Obj' → logprob: -18.875001907348633

Token 320: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.1994775377388578e-05
    2. ''' → logprob: -12.375012397766113
    3. '["' → logprob: -12.375012397766113
    4. ' ['' → logprob: -13.250012397766113
    5. '[' → logprob: -13.875012397766113
    6. ''s' → logprob: -14.375012397766113
    7. ']['' → logprob: -16.875011444091797
    8. ')['' → logprob: -17.375011444091797
    9. ')' → logprob: -17.625011444091797
    10. 'power' → logprob: -17.750011444091797

Token 321: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -3.7697225252486533e-06
    2. ''' → logprob: -13.250003814697266
    3. ' power' → logprob: -13.250003814697266
    4. 'pow' → logprob: -15.500003814697266
    5. ' '' → logprob: -21.750003814697266
    6. ' ' → logprob: -21.875003814697266
    7. 'powers' → logprob: -22.125003814697266
    8. '_power' → logprob: -22.250003814697266
    9. '(power' → logprob: -22.250003814697266
    10. ''p' → logprob: -22.625003814697266

Token 322: ''],' (ID: 9151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041118986904621124
    2. '],' → logprob: -3.29111909866333
    3. ' ,' → logprob: -6.04111909866333
    4. ' ],' → logprob: -8.166118621826172
    5. ''],' → logprob: -8.166118621826172
    6. '',' → logprob: -9.541118621826172
    7. ']' → logprob: -10.541118621826172
    8. '   ' → logprob: -11.791118621826172
    9. 'com' → logprob: -12.166118621826172
    10. ' ' → logprob: -12.791118621826172

Token 323: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.4297045171260834
    2. ' comb' → logprob: -1.0547045469284058
    3. 'comb' → logprob: -7.554704666137695
    4. ' combin' → logprob: -8.179704666137695
    5. ' com' → logprob: -9.304704666137695
    6. '(com' → logprob: -9.304704666137695
    7. '	com' → logprob: -12.429704666137695
    8. 'c' → logprob: -12.429704666137695
    9. ' combo' → logprob: -13.429704666137695
    10. ' combina' → logprob: -13.429704666137695

Token 324: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05029163509607315
    2. '_obj' → logprob: -3.0502915382385254
    3. 'obj' → logprob: -6.800291538238525
    4. '['' → logprob: -8.300292015075684
    5. 'bi' → logprob: -8.925292015075684
    6. 'o' → logprob: -9.050292015075684
    7. 'Obj' → logprob: -10.300292015075684
    8. 'obi' → logprob: -10.550292015075684
    9. 'ob' → logprob: -11.050292015075684
    10. 'oi' → logprob: -12.800292015075684

Token 325: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.0006548931705765426
    2. '['' → logprob: -7.625654697418213
    3. 'obj' → logprob: -9.000655174255371
    4. '['_' → logprob: -10.750655174255371
    5. 'Obj' → logprob: -11.625655174255371
    6. 'com' → logprob: -12.125655174255371
    7. '_com' → logprob: -12.625655174255371
    8. ''_' → logprob: -13.000655174255371
    9. '_' → logprob: -14.500655174255371
    10. '_OBJ' → logprob: -14.750655174255371

Token 326: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.625014305114746
    3. ''' → logprob: -12.625014305114746
    4. ']['' → logprob: -13.250014305114746
    5. ' ['' → logprob: -15.500014305114746
    6. ''s' → logprob: -15.875014305114746
    7. '   ' → logprob: -16.125015258789062
    8. ')['' → logprob: -16.500015258789062
    9. '[
' → logprob: -16.625015258789062
    10. ']' → logprob: -17.625015258789062

Token 327: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -9.984787902794778e-05
    2. ''re' → logprob: -9.375100135803223
    3. ''' → logprob: -11.250100135803223
    4. ' rev' → logprob: -13.375100135803223
    5. '['' → logprob: -15.625100135803223
    6. 'rep' → logprob: -16.875099182128906
    7. '
' → logprob: -17.000099182128906
    8. '_rev' → logprob: -17.000099182128906
    9. ''s' → logprob: -17.125099182128906
    10. '   ' → logprob: -17.375099182128906

Token 328: ''],' (ID: 9151)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.16042031347751617
    2. ''],' → logprob: -1.910420298576355
    3. ' ],' → logprob: -9.410420417785645
    4. ']' → logprob: -9.535420417785645
    5. ',' → logprob: -10.535420417785645
    6. '']' → logprob: -11.910420417785645
    7. '"],' → logprob: -13.535420417785645
    8. '],'' → logprob: -13.535420417785645
    9. '   ' → logprob: -13.660420417785645
    10. '',' → logprob: -13.785420417785645

Token 329: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5780224204063416
    2. ' comb' → logprob: -0.8280224204063416
    3. ' combin' → logprob: -7.328022480010986
    4. '(com' → logprob: -7.328022480010986
    5. ' com' → logprob: -7.453022480010986
    6. 'comb' → logprob: -8.703022003173828
    7. ' comp' → logprob: -12.203022003173828
    8. '	com' → logprob: -12.953022003173828
    9. '_com' → logprob: -13.078022003173828
    10. 'c' → logprob: -13.203022003173828

Token 330: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003983760252594948
    2. '_obj' → logprob: -8.000398635864258
    3. 'o' → logprob: -9.875398635864258
    4. 'obj' → logprob: -11.875398635864258
    5. 'Obj' → logprob: -13.625398635864258
    6. '['' → logprob: -14.500398635864258
    7. 'obi' → logprob: -14.625398635864258
    8. 'com' → logprob: -14.625398635864258
    9. 'ob' → logprob: -14.750398635864258
    10. 'oi' → logprob: -15.125398635864258

Token 331: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -4.894790981779806e-05
    2. 'obj' → logprob: -10.125048637390137
    3. 'Obj' → logprob: -12.000048637390137
    4. '['' → logprob: -13.625048637390137
    5. ''_' → logprob: -14.000048637390137
    6. '_OBJ' → logprob: -15.750048637390137
    7. 'com' → logprob: -16.000049591064453
    8. '_Obj' → logprob: -16.375049591064453
    9. '$obj' → logprob: -16.625049591064453
    10. '_objs' → logprob: -17.250049591064453

Token 332: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0004020713677164167
    2. '[' → logprob: -8.125402450561523
    3. ']' → logprob: -10.375402450561523
    4. ')' → logprob: -10.875402450561523
    5. ']['' → logprob: -10.875402450561523
    6. ''' → logprob: -10.875402450561523
    7. ',' → logprob: -12.625402450561523
    8. ' ['' → logprob: -12.625402450561523
    9. '])' → logprob: -12.875402450561523
    10. '[
' → logprob: -13.125402450561523

Token 333: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1472419600977446e-06
    2. ''' → logprob: -13.875000953674316
    3. ' mod' → logprob: -15.875000953674316
    4. ''m' → logprob: -18.500001907348633
    5. ''s' → logprob: -19.125001907348633
    6. '	mod' → logprob: -19.875001907348633
    7. '['' → logprob: -20.000001907348633
    8. '_mod' → logprob: -21.125001907348633
    9. 'mo' → logprob: -21.500001907348633
    10. '   ' → logprob: -21.500001907348633

Token 334: ''])

' (ID: 57615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005669722449965775
    2. '])' → logprob: -7.6255669593811035
    3. '})' → logprob: -10.000567436218262
    4. '))' → logprob: -11.125567436218262
    5. ''])' → logprob: -11.375567436218262
    6. ' )' → logprob: -13.125567436218262
    7. '')' → logprob: -13.125567436218262
    8. ')}' → logprob: -13.875567436218262
    9. ')])' → logprob: -14.250567436218262
    10. ')]' → logprob: -14.250567436218262

Token 335: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' comb' (ID: 4134)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.5938612222671509
    2. 'partial' → logprob: -0.8438612222671509
    3. 'com' → logprob: -4.343861103057861
    4. ' comb' → logprob: -6.218861103057861
    5. 'comb' → logprob: -7.093861103057861
    6. 'part' → logprob: -8.03136157989502
    7. 'def' → logprob: -8.96886157989502
    8. ' main' → logprob: -9.09386157989502
    9. '_partial' → logprob: -9.53136157989502
    10. 'main' → logprob: -9.65636157989502

Token 337: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.490809417096898e-05
    2. 'def' → logprob: -10.125055313110352
    3. 'o' → logprob: -12.625055313110352
    4. 'com' → logprob: -13.000055313110352
    5. '```' → logprob: -13.250055313110352
    6. '_i' → logprob: -13.625055313110352
    7. 'I' → logprob: -13.875055313110352
    8. 'ic' → logprob: -14.500055313110352
    9. '_comb' → logprob: -14.500055313110352
    10. 'ci' → logprob: -14.750055313110352

Token 338: '_p' (ID: 1359)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.5561007857322693
    2. '_obj' → logprob: -1.431100845336914
    3. '_partial' → logprob: -1.806100845336914
    4. '_' → logprob: -4.931100845336914
    5. '_part' → logprob: -5.181100845336914
    6. 'inate' → logprob: -5.806100845336914
    7. '_sum' → logprob: -6.431100845336914
    8. '_object' → logprob: -7.431100845336914
    9. '_n' → logprob: -7.806100845336914
    10. 'partial' → logprob: -7.806100845336914

Token 339: 'om' (ID: 310)
  Prédit: 'art'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.001006846665404737
    2. 'arti' → logprob: -7.501007080078125
    3. 'ar' → logprob: -8.501007080078125
    4. 'partial' → logprob: -9.126007080078125
    5. 'com' → logprob: -10.001007080078125
    6. 'comb' → logprob: -10.251007080078125
    7. 'arth' → logprob: -10.501007080078125
    8. '_art' → logprob: -12.251007080078125
    9. '_partial' → logprob: -12.501007080078125
    10. 'arts' → logprob: -12.876007080078125

Token 340: '(com' (ID: 27868)
  Prédit: 'bination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.7965939044952393
    2. 'b' → logprob: -1.6715939044952393
    3. 'partial' → logprob: -1.6715939044952393
    4. '(com' → logprob: -2.4215939044952393
    5. 'ent' → logprob: -3.2965939044952393
    6. '_partial' → logprob: -4.67159366607666
    7. 'bo' → logprob: -5.04659366607666
    8. 'bine' → logprob: -5.04659366607666
    9. 'bin' → logprob: -5.29659366607666
    10. 'com' → logprob: -5.79659366607666

Token 341: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.002013813704252243
    2. 'b' → logprob: -6.377013683319092
    3. 'i' → logprob: -8.25201416015625
    4. '_obj' → logprob: -11.00201416015625
    5. '_i' → logprob: -12.25201416015625
    6. 'bj' → logprob: -12.50201416015625
    7. 'би' → logprob: -12.87701416015625
    8. '(obj' → logprob: -13.00201416015625
    9. '```' → logprob: -13.00201416015625
    10. '(' → logprob: -13.12701416015625

Token 342: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.01170736737549305
    2. 'obj' → logprob: -4.511707305908203
    3. 'Obj' → logprob: -7.511707305908203
    4. 'objc' → logprob: -10.761707305908203
    5. '(obj' → logprob: -10.761707305908203
    6. 'com' → logprob: -10.886707305908203
    7. '_objs' → logprob: -11.386707305908203
    8. '(com' → logprob: -11.511707305908203
    9. '_Obj' → logprob: -12.136707305908203
    10. '_OBJ' → logprob: -12.136707305908203

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0802738870552275e-05
    2. ',K' → logprob: -11.62501049041748
    3. ' ,' → logprob: -13.25001049041748
    4. ',
' → logprob: -20.750011444091797
    5. '   ' → logprob: -21.375011444091797
    6. '_,' → logprob: -21.500011444091797
    7. ',Q' → logprob: -22.000011444091797
    8. ',k' → logprob: -22.000011444091797
    9. ',C' → logprob: -22.375011444091797
    10. 'K' → logprob: -22.750011444091797

Token 344: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.061967797577381134
    2. ' K' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.311967849731445
    4. ' ' → logprob: -17.811967849731445
    5. '	K' → logprob: -18.436967849731445
    6. '  ' → logprob: -19.186967849731445
    7. '    ' → logprob: -19.811967849731445
    8. ')' → logprob: -20.061967849731445
    9. 'k' → logprob: -20.186967849731445
    10. ',' → logprob: -20.936967849731445

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002251125843031332
    2. ',R' → logprob: -8.625225067138672
    3. ' ,' → logprob: -10.000225067138672
    4. ',
' → logprob: -17.500225067138672
    5. ',r' → logprob: -17.750225067138672
    6. '‌,' → logprob: -18.500225067138672
    7. '_,' → logprob: -18.625225067138672
    8. 'R' → logprob: -19.125225067138672
    9. '   ' → logprob: -19.375225067138672
    10. ',K' → logprob: -19.500225067138672

Token 346: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2014189064502716
    2. ' R' → logprob: -1.7014188766479492
    3. ' ' → logprob: -12.45141887664795
    4. ')' → logprob: -13.95141887664795
    5. '<|end|>' → logprob: -14.32641887664795
    6. '   ' → logprob: -15.95141887664795
    7. '  ' → logprob: -16.951419830322266
    8. 'r' → logprob: -17.638919830322266
    9. '    ' → logprob: -17.951419830322266
    10. '	R' → logprob: -18.013919830322266

Token 347: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03804677724838257
    2. '):
' → logprob: -3.2880468368530273
    3. ')' → logprob: -12.538046836853027
    4. '):
' → logprob: -13.538046836853027
    5. ' ):' → logprob: -15.538046836853027
    6. '):

' → logprob: -15.663046836853027
    7. '   ' → logprob: -16.78804588317871
    8. ':' → logprob: -17.16304588317871
    9. ',' → logprob: -17.78804588317871
    10. ''):' → logprob: -18.03804588317871

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016061515780165792
    2. ' return' → logprob: -6.876605987548828
    3. 'return' → logprob: -7.751605987548828
    4. ' if' → logprob: -9.126605987548828
    5. 'if' → logprob: -10.626605987548828
    6. '```' → logprob: -12.751605987548828
    7. ' partial' → logprob: -13.126605987548828
    8. '   ' → logprob: -13.126605987548828
    9. 'def' → logprob: -13.376605987548828
    10. 'partial' → logprob: -14.501605987548828

Token 349: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39083874225616455
    2. 'partial' → logprob: -1.2658387422561646
    3. ' return' → logprob: -3.765838623046875
    4. 'if' → logprob: -4.515838623046875
    5. ' partial' → logprob: -5.140838623046875
    6. ' if' → logprob: -6.890838623046875
    7. '   ' → logprob: -7.640838623046875
    8. 'def' → logprob: -11.265838623046875
    9. '```' → logprob: -11.390838623046875
    10. '0' → logprob: -11.640838623046875

Token 350: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.2825632691383362
    2. ' partial' → logprob: -1.4075632095336914
    3. ' combination' → logprob: -7.407563209533691
    4. '(part' → logprob: -8.157563209533691
    5. 'comb' → logprob: -8.407563209533691
    6. ' (' → logprob: -8.657563209533691
    7. '(' → logprob: -9.907563209533691
    8. '(com' → logprob: -10.782563209533691
    9. 'part' → logprob: -10.907563209533691
    10. 'com' → logprob: -12.470063209533691

Token 351: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -2.165027217415627e-05
    2. '_com' → logprob: -10.750021934509277
    3. 'comb' → logprob: -16.75002098083496
    4. '_combo' → logprob: -17.37502098083496
    5. '_' → logprob: -18.62502098083496
    6. '_comp' → logprob: -20.62502098083496
    7. '_comm' → logprob: -21.00002098083496
    8. '```' → logprob: -21.12502098083496
    9. 'Comb' → logprob: -21.50002098083496
    10. '_cons' → logprob: -21.62502098083496

Token 352: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.046407703310251236
    2. 'ation' → logprob: -3.296407699584961
    3. 'bination' → logprob: -4.796407699584961
    4. 'iation' → logprob: -10.171407699584961
    5. 'nation' → logprob: -10.671407699584961
    6. 'b' → logprob: -12.546407699584961
    7. '   ' → logprob: -13.671407699584961
    8. 'i' → logprob: -13.671407699584961
    9. 'onation' → logprob: -13.671407699584961
    10. 'in' → logprob: -14.421407699584961

Token 353: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.06378687918186188
    2. '(' → logprob: -2.8137869834899902
    3. '(com' → logprob: -6.31378698348999
    4. '(
' → logprob: -12.438786506652832
    5. '(C' → logprob: -13.813786506652832
    6. ' (' → logprob: -14.688786506652832
    7. '(

' → logprob: -14.938786506652832
    8. '(KERN' → logprob: -15.688786506652832
    9. '(COM' → logprob: -15.938786506652832
    10. 'com' → logprob: -16.18878746032715

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.933173426659778e-05
    2. '(com' → logprob: -9.625069618225098
    3. ')' → logprob: -13.625069618225098
    4. ' ,' → logprob: -14.125069618225098
    5. 'com' → logprob: -15.000069618225098
    6. ',
' → logprob: -15.125069618225098
    7. '',' → logprob: -15.375069618225098
    8. '+' → logprob: -15.625069618225098
    9. '[' → logprob: -16.00006866455078
    10. '(' → logprob: -16.37506866455078

Token 355: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20141352713108063
    2. ' R' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.326414108276367
    4. ')' → logprob: -16.701414108276367
    5. '<|end|>' → logprob: -17.201414108276367
    6. 'r' → logprob: -17.951414108276367
    7. '   ' → logprob: -19.076414108276367
    8. '[' → logprob: -19.326414108276367
    9. ' ' → logprob: -19.326414108276367
    10. ',' → logprob: -19.701414108276367

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.865583706414327e-05
    2. ' ,' → logprob: -9.25009822845459
    3. '(com' → logprob: -14.12509822845459
    4. ')' → logprob: -14.25009822845459
    5. ',
' → logprob: -14.75009822845459
    6. '   ' → logprob: -14.87509822845459
    7. 'com' → logprob: -15.00009822845459
    8. ' com' → logprob: -17.125099182128906
    9. '=com' → logprob: -17.250099182128906
    10. '	com' → logprob: -18.375099182128906

Token 357: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0017469348385930061
    2. ' comb' → logprob: -6.376747131347656
    3. 'comb' → logprob: -10.501747131347656
    4. ' com' → logprob: -11.751747131347656
    5. '(com' → logprob: -12.251747131347656
    6. ' combin' → logprob: -13.251747131347656
    7. 'c' → logprob: -14.126747131347656
    8. '	com' → logprob: -14.501747131347656
    9. '   ' → logprob: -15.001747131347656
    10. '-com' → logprob: -15.126747131347656

Token 358: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012020161375403404
    2. '_obj' → logprob: -6.75120210647583
    3. 'obj' → logprob: -11.126201629638672
    4. 'com' → logprob: -11.376201629638672
    5. 'Obj' → logprob: -12.876201629638672
    6. 'bi' → logprob: -13.376201629638672
    7. 'o' → logprob: -13.876201629638672
    8. '_Obj' → logprob: -16.251201629638672
    9. '_objs' → logprob: -16.501201629638672
    10. 'ci' → logprob: -16.751201629638672

Token 359: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.0001818489981815219
    2. 'obj' → logprob: -8.625182151794434
    3. 'Obj' → logprob: -13.875182151794434
    4. '_objs' → logprob: -14.875182151794434
    5. 'com' → logprob: -15.000182151794434
    6. 'ob' → logprob: -15.250182151794434
    7. '_OBJ' → logprob: -16.125181198120117
    8. '['' → logprob: -16.250181198120117
    9. 'b' → logprob: -16.625181198120117
    10. '$obj' → logprob: -16.875181198120117

Token 360: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -9.73446003627032e-05
    2. '[' → logprob: -9.375097274780273
    3. ' ['' → logprob: -12.500097274780273
    4. ',' → logprob: -13.125097274780273
    5. ''' → logprob: -13.250097274780273
    6. ','' → logprob: -13.500097274780273
    7. ',['' → logprob: -13.500097274780273
    8. ''s' → logprob: -13.875097274780273
    9. ')' → logprob: -14.375097274780273
    10. '["' → logprob: -15.500097274780273

Token 361: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.0019472026033326983
    2. ''' → logprob: -6.251947402954102
    3. 'pow' → logprob: -11.251947402954102
    4. ''s' → logprob: -13.501947402954102
    5. '['' → logprob: -13.501947402954102
    6. ' power' → logprob: -13.876947402954102
    7. ' '' → logprob: -14.126947402954102
    8. ''p' → logprob: -14.126947402954102
    9. ' ' → logprob: -16.3769474029541
    10. '   ' → logprob: -16.5019474029541

Token 362: ''],' (ID: 9151)
  Prédit: ''],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''],' → logprob: -0.2646348774433136
    2. ',' → logprob: -1.7646348476409912
    3. '],' → logprob: -2.889634847640991
    4. '',' → logprob: -5.26463508605957
    5. '']' → logprob: -8.01463508605957
    6. ' ,' → logprob: -10.13963508605957
    7. ']' → logprob: -10.51463508605957
    8. '},' → logprob: -10.88963508605957
    9. ''' → logprob: -11.38963508605957
    10. ' ],' → logprob: -11.51463508605957

Token 363: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.018363216891884804
    2. ' comb' → logprob: -4.018362998962402
    3. 'comb' → logprob: -9.018362998962402
    4. ' com' → logprob: -9.768362998962402
    5. ' combin' → logprob: -11.268362998962402
    6. '(com' → logprob: -11.268362998962402
    7. '   ' → logprob: -13.018362998962402
    8. '	com' → logprob: -13.393362998962402
    9. 'c' → logprob: -13.518362998962402
    10. ' ' → logprob: -13.518362998962402

Token 364: 'i' (ID: 72)
  Prédit: '_obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.011436817236244678
    2. 'i' → logprob: -4.761436939239502
    3. '['' → logprob: -6.261436939239502
    4. 'obj' → logprob: -7.636436939239502
    5. 'Obj' → logprob: -8.636436462402344
    6. ''i' → logprob: -9.886436462402344
    7. 'b' → logprob: -9.886436462402344
    8. '_Obj' → logprob: -10.011436462402344
    9. '_objs' → logprob: -10.886436462402344
    10. '_OBJ' → logprob: -11.011436462402344

Token 365: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.3887465298175812
    2. '['' → logprob: -1.1387465000152588
    3. ''' → logprob: -6.888746738433838
    4. 'obj' → logprob: -7.763746738433838
    5. ''_' → logprob: -8.26374626159668
    6. '['_' → logprob: -10.13874626159668
    7. ''s' → logprob: -10.51374626159668
    8. 'Obj' → logprob: -10.51374626159668
    9. 'com' → logprob: -10.88874626159668
    10. '_objs' → logprob: -12.01374626159668

Token 366: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -1.5690089639974758e-05
    2. ''' → logprob: -11.875015258789062
    3. '[' → logprob: -12.250015258789062
    4. ''s' → logprob: -13.750015258789062
    5. ']['' → logprob: -13.875015258789062
    6. ' ['' → logprob: -14.500015258789062
    7. ')['' → logprob: -14.750015258789062
    8. '[
' → logprob: -15.625015258789062
    9. ''re' → logprob: -15.750015258789062
    10. '   ' → logprob: -16.000015258789062

Token 367: 'rev' (ID: 25656)
  Prédit: 'rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -6.749814019713085e-06
    2. ''' → logprob: -12.125006675720215
    3. ' rev' → logprob: -15.000006675720215
    4. ''re' → logprob: -15.375006675720215
    5. '
' → logprob: -15.750006675720215
    6. '['' → logprob: -16.12500762939453
    7. 'ref' → logprob: -16.25000762939453
    8. 'prev' → logprob: -16.75000762939453
    9. ''s' → logprob: -16.87500762939453
    10. '```' → logprob: -16.87500762939453

Token 368: ''],' (ID: 9151)
  Prédit: ''],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''],' → logprob: -0.006200503092259169
    2. '',' → logprob: -5.631200313568115
    3. '],' → logprob: -6.506200313568115
    4. ',' → logprob: -6.881200313568115
    5. '']' → logprob: -9.631200790405273
    6. '},' → logprob: -13.131200790405273
    7. ' ,' → logprob: -13.756200790405273
    8. ''' → logprob: -13.756200790405273
    9. '"],' → logprob: -14.006200790405273
    10. ''],'' → logprob: -14.006200790405273

Token 369: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.012665153481066227
    2. ' comb' → logprob: -4.387665271759033
    3. ' com' → logprob: -9.387664794921875
    4. 'comb' → logprob: -10.012664794921875
    5. '(com' → logprob: -11.012664794921875
    6. ' combin' → logprob: -11.637664794921875
    7. 'c' → logprob: -14.512664794921875
    8. '	com' → logprob: -14.637664794921875
    9. '_com' → logprob: -15.387664794921875
    10. ' comm' → logprob: -16.512664794921875

Token 370: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09731586277484894
    2. '_obj' → logprob: -2.472315788269043
    3. '['' → logprob: -4.972315788269043
    4. 'obj' → logprob: -7.347315788269043
    5. 'Obj' → logprob: -7.722315788269043
    6. 'o' → logprob: -8.972315788269043
    7. '_Obj' → logprob: -9.972315788269043
    8. ''i' → logprob: -10.472315788269043
    9. 'oi' → logprob: -10.472315788269043
    10. 'ob' → logprob: -10.847315788269043

Token 371: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.31644681096076965
    2. '['' → logprob: -1.3164467811584473
    3. ''' → logprob: -6.316446781158447
    4. 'obj' → logprob: -7.191446781158447
    5. 'Obj' → logprob: -8.191447257995605
    6. '']' → logprob: -9.441447257995605
    7. ''s' → logprob: -9.441447257995605
    8. ']['' → logprob: -10.066447257995605
    9. ']' → logprob: -10.441447257995605
    10. ',' → logprob: -11.191447257995605

Token 372: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.008339387364685535
    2. ',' → logprob: -5.0083394050598145
    3. ','' → logprob: -7.6333394050598145
    4. '[' → logprob: -7.8833394050598145
    5. '',' → logprob: -7.8833394050598145
    6. '','' → logprob: -8.508338928222656
    7. ',['' → logprob: -9.133338928222656
    8. ''' → logprob: -10.258338928222656
    9. ''s' → logprob: -11.633338928222656
    10. ' ['' → logprob: -12.008338928222656

Token 373: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.927930654550437e-05
    2. ''' → logprob: -10.500029563903809
    3. ''m' → logprob: -14.125029563903809
    4. ''s' → logprob: -14.375029563903809
    5. ' mod' → logprob: -15.750029563903809
    6. ' '' → logprob: -17.000028610229492
    7. '['' → logprob: -17.125028610229492
    8. '	mod' → logprob: -17.625028610229492
    9. '   ' → logprob: -17.875028610229492
    10. ' ' → logprob: -18.000028610229492

Token 374: ''])

' (ID: 57615)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003544239792972803
    2. ''])' → logprob: -6.003544330596924
    3. '')' → logprob: -7.003544330596924
    4. '})' → logprob: -9.503543853759766
    5. '])' → logprob: -10.003543853759766
    6. '))' → logprob: -10.503543853759766
    7. '）' → logprob: -12.628543853759766
    8. '»)' → logprob: -13.503543853759766
    9. '>)' → logprob: -13.753543853759766
    10. '`)' → logprob: -13.753543853759766

Token 375: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10390589386224747
    2. ' solve' → logprob: -3.4789059162139893
    3. ' factorial' → logprob: -3.7289059162139893
    4. ' count' → logprob: -3.8539059162139893
    5. 'main' → logprob: -5.22890567779541
    6. ' calculate' → logprob: -5.22890567779541
    7. ' compute' → logprob: -5.85390567779541
    8. ' mod' → logprob: -6.35390567779541
    9. 'count' → logprob: -7.47890567779541
    10. ' sum' → logprob: -7.60390567779541

Token 377: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.19045951962471008
    2. '_' → logprob: -2.3154594898223877
    3. '_line' → logprob: -3.1904594898223877
    4. '_query' → logprob: -4.690459728240967
    5. '_command' → logprob: -5.065459728240967
    6. '_list' → logprob: -5.940459728240967
    7. '(input' → logprob: -6.065459728240967
    8. '_args' → logprob: -6.065459728240967
    9. '_string' → logprob: -6.440459728240967
    10. '_code' → logprob: -6.940459728240967

Token 378: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016399504384025931
    2. '():
' → logprob: -7.2516398429870605
    3. '()' → logprob: -7.5016398429870605
    4. '(' → logprob: -8.626640319824219
    5. '(line' → logprob: -10.126640319824219
    6. ' ():' → logprob: -10.126640319824219
    7. '(input' → logprob: -10.251640319824219
    8. '(prompt' → logprob: -10.751640319824219
    9. '_line' → logprob: -11.251640319824219
    10. '()(' → logprob: -11.626640319824219

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013990452280268073
    2. ' import' → logprob: -7.376399040222168
    3. ' n' → logprob: -8.001399040222168
    4. ' input' → logprob: -9.126399040222168
    5. ' return' → logprob: -9.251399040222168
    6. ' try' → logprob: -9.751399040222168
    7. 'import' → logprob: -10.126399040222168
    8. 'n' → logprob: -10.376399040222168
    9. ' line' → logprob: -10.501399040222168
    10. '```' → logprob: -11.126399040222168

Token 380: ' return' (ID: 622)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.9181031584739685
    2. ' n' → logprob: -1.0431032180786133
    3. ' return' → logprob: -2.0431032180786133
    4. 'n' → logprob: -2.9181032180786133
    5. 'import' → logprob: -2.9181032180786133
    6. 'return' (adapté à ' return') → logprob: -5.293103218078613
    7. ' try' → logprob: -6.543103218078613
    8. ' input' → logprob: -6.668103218078613
    9. ' line' → logprob: -6.793103218078613
    10. ' N' → logprob: -8.043103218078613

Token 381: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12402106821537018
    2. 'int' → logprob: -2.624021053314209
    3. ' list' → logprob: -3.874021053314209
    4. 'input' → logprob: -4.499021053314209
    5. 'map' → logprob: -4.499021053314209
    6. '[int' → logprob: -7.999021053314209
    7. ' map' → logprob: -7.999021053314209
    8. ' int' → logprob: -8.499021530151367
    9. ' input' → logprob: -9.249021530151367
    10. '[' → logprob: -9.749021530151367

Token 382: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002736138121690601
    2. 'int' → logprob: -8.375273704528809
    3. '(' → logprob: -10.250273704528809
    4. '(input' → logprob: -12.250273704528809
    5. '(str' → logprob: -14.000273704528809
    6. '<int' → logprob: -14.000273704528809
    7. 'input' → logprob: -14.750273704528809
    8. ' int' → logprob: -15.000273704528809
    9. '[int' → logprob: -15.500273704528809
    10. '=int' → logprob: -15.750273704528809

Token 383: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3156881332397461
    2. '(input' → logprob: -1.565688133239746
    3. ',input' → logprob: -2.815688133239746
    4. ',' → logprob: -7.065688133239746
    5. ')' → logprob: -7.565688133239746
    6. ' input' → logprob: -8.190688133239746
    7. '(' → logprob: -8.565688133239746
    8. '   ' → logprob: -11.065688133239746
    9. '	input' → logprob: -11.190688133239746
    10. ' ' → logprob: -11.315688133239746

Token 384: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047935113310814
    2. ' input' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.51104736328125
    4. 'sys' → logprob: -17.51104736328125
    5. '(input' → logprob: -17.51104736328125
    6. ')' → logprob: -18.13604736328125
    7. '	input' → logprob: -18.88604736328125
    8. '=input' → logprob: -18.88604736328125
    9. '<input' → logprob: -19.01104736328125
    10. ',input' → logprob: -19.01104736328125

Token 385: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009300446254201233
    2. '()' → logprob: -7.125929832458496
    3. '())' → logprob: -9.125929832458496
    4. '(' → logprob: -11.750929832458496
    5. ' ().' → logprob: -13.000929832458496
    6. '()
' → logprob: -13.375929832458496
    7. '().__' → logprob: -13.875929832458496
    8. ')' → logprob: -14.000929832458496
    9. '().'' → logprob: -14.250929832458496
    10. '('' → logprob: -14.500929832458496

Token 386: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003178782993927598
    2. 'strip' → logprob: -5.753178596496582
    3. 'rstrip' → logprob: -14.628178596496582
    4. 'read' → logprob: -14.753178596496582
    5. ' split' → logprob: -15.878178596496582
    6. 'spl' → logprob: -16.2531795501709
    7. ')' → logprob: -17.2531795501709
    8. '().' → logprob: -18.1281795501709
    9. '_split' → logprob: -18.6281795501709
    10. ' strip' → logprob: -19.0031795501709

Token 387: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0021980751771479845
    2. '()' → logprob: -6.252198219299316
    3. ')' → logprob: -8.377198219299316
    4. '()))' → logprob: -10.252198219299316
    5. '(' → logprob: -13.252198219299316
    6. ' ())' → logprob: -14.127198219299316
    7. '()]' → logprob: -14.627198219299316
    8. '())
' → logprob: -15.002198219299316
    9. '))' → logprob: -15.252198219299316
    10. '();)' → logprob: -15.252198219299316

Token 388: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26569435000419617
    2. 'N' → logprob: -1.7656943798065186
    3. 'n' → logprob: -2.8906943798065186
    4. 'T' → logprob: -6.3906941413879395
    5. 'a' → logprob: -6.8906941413879395
    6. 'A' → logprob: -7.1406941413879395
    7. 'd' → logprob: -7.3906941413879395
    8. 'for' → logprob: -7.3906941413879395
    9. '\' → logprob: -8.140694618225098
    10. 'Q' → logprob: -8.140694618225098

Token 389: ' pow' (ID: 9779)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3869209885597229
    2. 'main' → logprob: -1.1369209289550781
    3. 'solve' → logprob: -10.386920928955078
    4. ' solve' → logprob: -10.886920928955078
    5. ' parse' → logprob: -16.136920928955078
    6. 'parse' → logprob: -16.261920928955078
    7. '	main' → logprob: -17.011920928955078
    8. 'def' → logprob: -17.136920928955078
    9. '__' → logprob: -17.386920928955078
    10. 'process' → logprob: -17.386920928955078

Token 390: '_mod' (ID: 15325)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.015538730658590794
    2. '(' → logprob: -4.765538692474365
    3. 'def' → logprob: -5.515538692474365
    4. 'erm' → logprob: -7.265538692474365
    5. 'pow' → logprob: -7.515538692474365
    6. '()' → logprob: -7.640538692474365
    7. 'ers' → logprob: -8.140539169311523
    8. 'erv' → logprob: -8.390539169311523
    9. 'ertools' → logprob: -8.640539169311523
    10. '(pow' → logprob: -9.265539169311523

Token 391: '(base' (ID: 25314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002841133624315262
    2. '<|end|>' → logprob: -7.502840995788574
    3. '(x' → logprob: -7.877840995788574
    4. '(a' → logprob: -8.127840995788574
    5. '_' → logprob: -8.127840995788574
    6. ' (' → logprob: -8.377840995788574
    7. 'def' → logprob: -8.752840995788574
    8. '(pow' → logprob: -9.127840995788574
    9. '(base' → logprob: -9.502840995788574
    10. '(n' → logprob: -9.502840995788574

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010783452307805419
    2. ' ,' → logprob: -9.750107765197754
    3. '(base' → logprob: -10.125107765197754
    4. ',b' → logprob: -13.250107765197754
    5. ')' → logprob: -13.500107765197754
    6. ',
' → logprob: -13.875107765197754
    7. '   ' → logprob: -14.000107765197754
    8. ',n' → logprob: -14.000107765197754
    9. ';base' → logprob: -14.125107765197754
    10. '<|end|>' → logprob: -14.750107765197754

Token 393: ' exp' (ID: 2794)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5864809155464172
    2. 'exp' → logprob: -0.8364809155464172
    3. ' exponent' → logprob: -5.086481094360352
    4. ' exp' → logprob: -5.586481094360352
    5. 'mod' → logprob: -7.711481094360352
    6. 'expo' → logprob: -10.086481094360352
    7. 'power' → logprob: -10.211481094360352
    8. ' ex' → logprob: -10.961481094360352
    9. ' ' → logprob: -11.836481094360352
    10. ' mod' → logprob: -13.211481094360352

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004982246900908649
    2. '):' → logprob: -7.625498294830322
    3. '):
' → logprob: -12.125497817993164
    4. ' ,' → logprob: -13.000497817993164
    5. ',
' → logprob: -13.875497817993164
    6. ')' → logprob: -14.125497817993164
    7. '_mod' → logprob: -15.500497817993164
    8. 'er' → logprob: -15.875497817993164
    9. 'mod' → logprob: -16.750497817993164
    10. '   ' → logprob: -16.750497817993164

Token 395: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008615635335445404
    2. ' mod' → logprob: -4.758615493774414
    3. ' modulus' → logprob: -14.758615493774414
    4. 'm' → logprob: -15.383615493774414
    5. ' ' → logprob: -15.508615493774414
    6. '	mod' → logprob: -15.633615493774414
    7. 'MOD' → logprob: -16.008615493774414
    8. '```' → logprob: -17.758615493774414
    9. '_mod' → logprob: -17.883615493774414
    10. '   ' → logprob: -17.883615493774414

Token 396: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.97024549683556e-05
    2. '):
' → logprob: -9.500080108642578
    3. ')' → logprob: -12.375080108642578
    4. '=' → logprob: -15.500080108642578
    5. ' ):' → logprob: -15.625080108642578
    6. '):
' → logprob: -16.750080108642578
    7. '):

' → logprob: -16.875080108642578
    8. ':' → logprob: -17.000080108642578
    9. '   ' → logprob: -19.125080108642578
    10. ')：' → logprob: -19.250080108642578

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005256305448710918
    2. 'result' → logprob: -7.75052547454834
    3. 'return' → logprob: -9.37552547454834
    4. ' result' → logprob: -13.25052547454834
    5. 'pow' → logprob: -13.25052547454834
    6. 'def' → logprob: -13.37552547454834
    7. ')' → logprob: -14.12552547454834
    8. ' return' → logprob: -14.50052547454834
    9. 'base' → logprob: -14.62552547454834
    10. '  ' → logprob: -14.62552547454834

Token 398: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0009253957541659474
    2. 'res' → logprob: -7.250925540924072
    3. ' result' → logprob: -9.625925064086914
    4. '0' → logprob: -9.750925064086914
    5. '1' → logprob: -9.875925064086914
    6. 'return' (adapté à ' return') → logprob: -10.750925064086914
    7. '   ' → logprob: -11.125925064086914
    8. '
' → logprob: -13.625925064086914
    9. 'pow' → logprob: -13.875925064086914
    10. '```' → logprob: -14.625925064086914

Token 399: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.463036435074173e-05
    2. ' pow' → logprob: -11.000024795532227
    3. '(pow' → logprob: -11.750024795532227
    4. 'power' → logprob: -18.375024795532227
    5. 'base' → logprob: -18.500024795532227
    6. '(' → logprob: -18.750024795532227
    7. '1' → logprob: -19.375024795532227
    8. '_pow' → logprob: -20.000024795532227
    9. '   ' → logprob: -20.250024795532227
    10. '
' → logprob: -20.875024795532227

Token 400: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0067161982879042625
    2. '(' → logprob: -5.006716251373291
    3. 'base' → logprob: -14.756715774536133
    4. '(
' → logprob: -15.631715774536133
    5. ' base' → logprob: -16.006715774536133
    6. '	base' → logprob: -16.631715774536133
    7. '(BASE' → logprob: -16.881715774536133
    8. ' (' → logprob: -17.381715774536133
    9. '(power' → logprob: -18.756715774536133
    10. '(pow' → logprob: -18.756715774536133

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006893208250403404
    2. ' ,' → logprob: -5.006893157958984
    3. '%' → logprob: -8.881893157958984
    4. ' %' → logprob: -10.631893157958984
    5. '[' → logprob: -12.131893157958984
    6. '%,' → logprob: -12.756893157958984
    7. ',
' → logprob: -13.256893157958984
    8. '<|end|>' → logprob: -13.631893157958984
    9. ')' → logprob: -13.756893157958984
    10. ' mod' → logprob: -14.381893157958984

Token 402: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.007607697509229183
    2. ' exp' → logprob: -4.882607460021973
    3. '	exp' → logprob: -14.507607460021973
    4. ' ' → logprob: -15.382607460021973
    5. '(exp' → logprob: -15.507607460021973
    6. '   ' → logprob: -15.507607460021973
    7. '  ' → logprob: -15.882607460021973
    8. '_exp' → logprob: -16.00760841369629
    9. ''exp' → logprob: -16.75760841369629
    10. '<|end|>' → logprob: -17.25760841369629

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033999193692579865
    2. ' ,' → logprob: -8.000340461730957
    3. '%' → logprob: -12.625340461730957
    4. ')' → logprob: -14.500340461730957
    5. ',
' → logprob: -15.125340461730957
    6. ' %' → logprob: -15.750340461730957
    7. '-' → logprob: -16.50033950805664
    8. 'mod' → logprob: -16.87533950805664
    9. ' mod' → logprob: -16.87533950805664
    10. ' ' → logprob: -17.25033950805664

Token 404: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0015023599844425917
    2. ' mod' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.251502990722656
    4. '(mod' → logprob: -18.376502990722656
    5. '	mod' → logprob: -18.626502990722656
    6. ')' → logprob: -18.751502990722656
    7. '_mod' → logprob: -19.876502990722656
    8. '   ' → logprob: -20.501502990722656
    9. '
' → logprob: -21.126502990722656
    10. '```' → logprob: -21.251502990722656

Token 405: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -16.375
    4. ')

' → logprob: -19.0
    5. '),' → logprob: -19.75
    6. ')}' → logprob: -20.375
    7. ').' → logprob: -20.625
    8. ' ' → logprob: -20.625
    9. '}' → logprob: -20.75
    10. '))' → logprob: -20.75

Token 406: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020107463002204895
    2. '<|end|>' → logprob: -4.520107269287109
    3. '#' → logprob: -4.770107269287109
    4. '```' → logprob: -8.39510726928711
    5. 'n' → logprob: -9.89510726928711
    6. 'import' → logprob: -9.89510726928711
    7. 'for' → logprob: -10.77010726928711
    8. '[' → logprob: -10.89510726928711
    9. '<|end|>' → logprob: -11.02010726928711
    10. 'N' → logprob: -11.14510726928711

Token 407: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.25411850214004517
    2. 'main' → logprob: -1.5041184425354004
    3. 'solve' → logprob: -7.0041184425354
    4. ' solve' → logprob: -7.2541184425354
    5. 'mod' → logprob: -8.504118919372559
    6. 'factor' → logprob: -9.254118919372559
    7. ' factorial' → logprob: -9.379118919372559
    8. ' mod' → logprob: -9.879118919372559
    9. 'calculate' → logprob: -10.004118919372559
    10. 'count' → logprob: -11.004118919372559

Token 408: '_X' (ID: 16245)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8343567848205566
    2. '(' → logprob: -1.9593567848205566
    3. '_' → logprob: -2.2093567848205566
    4. '_com' → logprob: -2.5843567848205566
    5. '_factor' → logprob: -2.7093567848205566
    6. '(N' → logprob: -2.7093567848205566
    7. '_result' → logprob: -2.8343567848205566
    8. '(n' → logprob: -2.9593567848205566
    9. '_total' → logprob: -2.9593567848205566
    10. '_answer' → logprob: -3.7093567848205566

Token 409: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.2024911642074585
    2. '(' → logprob: -1.8274911642074585
    3. '():' → logprob: -2.452491283416748
    4. '(a' → logprob: -2.577491283416748
    5. '(n' → logprob: -2.827491283416748
    6. '(Y' → logprob: -3.077491283416748
    7. '_sum' → logprob: -3.327491283416748
    8. '(A' → logprob: -3.327491283416748
    9. '(M' → logprob: -3.452491283416748
    10. '(s' → logprob: -3.827491283416748

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016754455282352865
    2. '):' → logprob: -9.125167846679688
    3. ' ,' → logprob: -10.125167846679688
    4. ',K' → logprob: -11.625167846679688
    5. ')' → logprob: -13.250167846679688
    6. ',M' → logprob: -13.750167846679688
    7. 's' → logprob: -14.250167846679688
    8. ',
' → logprob: -14.375167846679688
    9. 'K' → logprob: -14.500167846679688
    10. '):
' → logprob: -14.875167846679688

Token 411: ' A' (ID: 355)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8404926657676697
    2. 'K' → logprob: -1.2154927253723145
    3. 'mod' → logprob: -2.4654927253723145
    4. ' M' → logprob: -2.9654927253723145
    5. ' K' → logprob: -3.0904927253723145
    6. 'A' → logprob: -3.7154927253723145
    7. 'X' → logprob: -4.3404927253723145
    8. ' mod' → logprob: -4.4654927253723145
    9. ' A' → logprob: -5.5904927253723145
    10. 'k' → logprob: -5.5904927253723145

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005924054887145758
    2. '):' → logprob: -5.380924224853516
    3. '):
' → logprob: -8.255924224853516
    4. ' ,' → logprob: -8.755924224853516
    5. ',B' → logprob: -8.755924224853516
    6. ',K' → logprob: -8.755924224853516
    7. 's' → logprob: -9.130924224853516
    8. ',L' → logprob: -9.380924224853516
    9. ',A' → logprob: -9.880924224853516
    10. 'L' → logprob: -10.255924224853516

Token 413: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7231802940368652
    2. 'M' → logprob: -1.3481802940368652
    3. 'K' → logprob: -1.5981802940368652
    4. 'L' → logprob: -4.223180294036865
    5. 'X' → logprob: -4.473180294036865
    6. 'R' → logprob: -5.598180294036865
    7. 'P' → logprob: -5.723180294036865
    8. 'C' → logprob: -5.723180294036865
    9. 'D' → logprob: -5.848180294036865
    10. 'Q' → logprob: -6.098180294036865

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011093802750110626
    2. '):' → logprob: -4.511093616485596
    3. ' ,' → logprob: -10.761094093322754
    4. '):
' → logprob: -11.886094093322754
    5. '   ' → logprob: -12.011094093322754
    6. ')' → logprob: -12.261094093322754
    7. ',K' → logprob: -13.136094093322754
    8. ',
' → logprob: -14.011094093322754
    9. ',N' → logprob: -14.761094093322754
    10. ',C' → logprob: -14.761094093322754

Token 415: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.13046175241470337
    2. 'C' → logprob: -3.1304616928100586
    3. ' mod' → logprob: -3.2554616928100586
    4. 'M' → logprob: -4.130461692810059
    5. 'MOD' → logprob: -4.380461692810059
    6. 'K' → logprob: -5.755461692810059
    7. ' C' → logprob: -5.880461692810059
    8. ' M' → logprob: -6.630461692810059
    9. ' MOD' → logprob: -6.880461692810059
    10. ' ' → logprob: -7.755461692810059

Token 416: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17987486720085144
    2. ',' → logprob: -1.8048748970031738
    3. '):
' → logprob: -9.054874420166016
    4. ')' → logprob: -12.179874420166016
    5. '   ' → logprob: -12.929874420166016
    6. ':' → logprob: -13.554874420166016
    7. '):
' → logprob: -13.679874420166016
    8. ' ):' → logprob: -13.804874420166016
    9. ' ,' → logprob: -14.429874420166016
    10. ']:' → logprob: -15.304874420166016

Token 417: ' comb' (ID: 4134)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.46184250712394714
    2. 'com' → logprob: -1.7118425369262695
    3. ' power' → logprob: -1.7118425369262695
    4. 'comb' → logprob: -5.4618425369262695
    5. ' comb' → logprob: -6.9618425369262695
    6. 'pow' → logprob: -7.0868425369262695
    7. 'K' → logprob: -7.2118425369262695
    8. 'C' → logprob: -8.33684253692627
    9. ' com' → logprob: -9.08684253692627
    10. 'c' → logprob: -9.08684253692627

Token 418: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. '_i' → logprob: -18.625
    3. 'obj' → logprob: -19.125
    4. 'I' → logprob: -19.5
    5. '_obj' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. ')' → logprob: -20.375
    8. 'и' → logprob: -20.375
    9. '

' → logprob: -20.5
    10. 'o' → logprob: -21.0

Token 419: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -1.3902033970225602e-05
    2. ')' → logprob: -12.375014305114746
    3. 'Obj' → logprob: -13.375014305114746
    4. '_objs' → logprob: -13.375014305114746
    5. 'obj' → logprob: -13.500014305114746
    6. '_Obj' → logprob: -13.750014305114746
    7. ')_' → logprob: -14.000014305114746
    8. '_o' → logprob: -14.000014305114746
    9. 'o' → logprob: -14.000014305114746
    10. '):
' → logprob: -14.250014305114746

Token 420: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08939871937036514
    2. '):
' → logprob: -2.4643986225128174
    3. ',' → logprob: -7.8393988609313965
    4. '):
' → logprob: -9.964398384094238
    5. '   ' → logprob: -11.714398384094238
    6. ')' → logprob: -12.089398384094238
    7. '):

' → logprob: -13.339398384094238
    8. ' ):' → logprob: -13.339398384094238
    9. ' ' → logprob: -14.589398384094238
    10. ':' → logprob: -15.589398384094238

Token 421: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.691182017326355
    2. ':' → logprob: -1.191182017326355
    3. '   ' → logprob: -1.691182017326355
    4. '```' → logprob: -4.9411821365356445
    5. '):
' → logprob: -6.5661821365356445
    6. '
' → logprob: -7.0661821365356445
    7. 'X' → logprob: -7.6911821365356445
    8. '    
' → logprob: -8.691182136535645
    9. '():
' → logprob: -8.941182136535645
    10. '[' → logprob: -9.191182136535645

Token 422: ' X' (ID: 2127)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2760165333747864
    2. 'total' → logprob: -1.5260164737701416
    3. 'res' → logprob: -4.151016712188721
    4. 'X' (adapté à ' X') → logprob: -5.776016712188721
    5. 'ans' → logprob: -6.401016712188721
    6. ' result' → logprob: -6.526016712188721
    7. 'answer' → logprob: -7.276016712188721
    8. ' total' → logprob: -7.901016712188721
    9. 'if' → logprob: -9.026016235351562
    10. ' res' → logprob: -9.151016235351562

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20220890641212463
    2. '=' → logprob: -1.7022088766098022
    3. '_' → logprob: -7.202208995819092
    4. ',' → logprob: -11.702208518981934
    5. '_sum' → logprob: -11.702208518981934
    6. 'def' → logprob: -12.327208518981934
    7. '_=' → logprob: -12.452208518981934
    8. ' ' → logprob: -12.452208518981934
    9. '_total' → logprob: -12.702208518981934
    10. '   ' → logprob: -13.077208518981934

Token 424: ' ' (ID: 220)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.24339990317821503
    2. '0' → logprob: -2.9933998584747314
    3. 'com' → logprob: -3.1183998584747314
    4. '(' → logprob: -3.2433998584747314
    5. 'pow' → logprob: -3.7433998584747314
    6. '1' → logprob: -3.9933998584747314
    7. ' (' → logprob: -4.4934000968933105
    8. '((' → logprob: -4.8684000968933105
    9. '(pow' → logprob: -4.8684000968933105
    10. '(power' → logprob: -5.3684000968933105

Token 425: '0' (ID: 15)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3921266198158264
    2. '(pow' → logprob: -2.2671265602111816
    3. '(com' → logprob: -2.6421265602111816
    4. 'com' → logprob: -2.7671265602111816
    5. '(' → logprob: -3.3921265602111816
    6. '1' → logprob: -3.8921265602111816
    7. '0' → logprob: -4.392126560211182
    8. 'comb' → logprob: -5.017126560211182
    9. '(power' → logprob: -5.017126560211182
    10. 'power' → logprob: -5.892126560211182

Token 426: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0976061224937439
    2. '   ' → logprob: -2.4726061820983887
    3. ' for' → logprob: -5.722606182098389
    4. '    
' → logprob: -6.222606182098389
    5. '<|end|>' → logprob: -6.847606182098389
    6. '  
' → logprob: -6.972606182098389
    7. ' 
' → logprob: -7.972606182098389
    8. 'for' → logprob: -8.34760570526123
    9. '
' → logprob: -8.47260570526123
    10. '   
' → logprob: -8.72260570526123

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0850030705332756
    2. '
' → logprob: -3.085003137588501
    3. '    
' → logprob: -3.960003137588501
    4. ' 
' → logprob: -5.085002899169922
    5. ' for' → logprob: -5.710002899169922
    6. '<|end|>' → logprob: -5.835002899169922
    7. '   
' → logprob: -7.210002899169922
    8. '  
' → logprob: -7.335002899169922
    9. ')' → logprob: -7.585002899169922
    10. ':' → logprob: -8.085002899169922

Token 428: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004147032741457224
    2. '   ' → logprob: -8.750414848327637
    3. 'if' → logprob: -8.875414848327637
    4. ' for' → logprob: -9.250414848327637
    5. 'total' → logprob: -12.500414848327637
    6. 'pow' → logprob: -12.625414848327637
    7. 'i' → logprob: -13.000414848327637
    8. 'from' → logprob: -13.250414848327637
    9. 'result' → logprob: -13.750414848327637
    10. 'mod' → logprob: -13.750414848327637

Token 429: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06405818462371826
    2. 'k' → logprob: -2.814058303833008
    3. 'j' → logprob: -7.564058303833008
    4. 'K' → logprob: -7.564058303833008
    5. 'x' → logprob: -7.939058303833008
    6. 'd' → logprob: -8.564058303833008
    7. ' i' → logprob: -8.564058303833008
    8. 'r' → logprob: -9.814058303833008
    9. 'a' → logprob: -10.189058303833008
    10. 'n' → logprob: -10.314058303833008

Token 430: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002995293354615569
    2. 'in' → logprob: -5.877995491027832
    3. ' ' → logprob: -8.752995491027832
    4. 'range' → logprob: -11.252995491027832
    5. ',' → logprob: -11.877995491027832
    6. ' i' → logprob: -12.627995491027832
    7. '_' → logprob: -13.252995491027832
    8. ' range' → logprob: -13.377995491027832
    9. 'n' → logprob: -13.502995491027832
    10. '	in' → logprob: -14.502995491027832

Token 431: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067167943343520164
    2. ' range' → logprob: -5.006716728210449
    3. '(range' → logprob: -14.38171672821045
    4. 'A' → logprob: -14.63171672821045
    5. ' ' → logprob: -16.256717681884766
    6. '   ' → logprob: -16.381717681884766
    7. '	range' → logprob: -16.881717681884766
    8. 'r' → logprob: -17.381717681884766
    9. '[' → logprob: -17.756717681884766
    10. '
' → logprob: -18.006717681884766

Token 432: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5247290730476379
    2. '(A' → logprob: -0.8997290730476379
    3. '(B' → logprob: -6.649729251861572
    4. '(N' → logprob: -8.649728775024414
    5. 'A' → logprob: -9.524728775024414
    6. '1' → logprob: -10.024728775024414
    7. '(min' → logprob: -12.774728775024414
    8. '(a' → logprob: -13.274728775024414
    9. '(i' → logprob: -13.524728775024414
    10. '(M' → logprob: -13.774728775024414

Token 433: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37526988983154297
    2. '):' → logprob: -2.125269889831543
    3. ',' → logprob: -2.500269889831543
    4. '1' → logprob: -3.250269889831543
    5. ' +' → logprob: -3.625269889831543
    6. '):
' → logprob: -4.250269889831543
    7. '-' → logprob: -4.375269889831543
    8. '   ' → logprob: -5.375269889831543
    9. ' -' → logprob: -5.625269889831543
    10. ' ,' → logprob: -6.000269889831543

Token 434: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20117266476154327
    2. 'B' → logprob: -2.5761725902557373
    3. ' A' → logprob: -2.7011725902557373
    4. '0' → logprob: -3.9511725902557373
    5. '1' → logprob: -5.201172828674316
    6. ' B' → logprob: -5.326172828674316
    7. ' ' → logprob: -5.701172828674316
    8. '-' → logprob: -5.951172828674316
    9. 'N' → logprob: -6.326172828674316
    10. ' -' → logprob: -7.701172828674316

Token 435: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1632002741098404
    2. 'B' → logprob: -2.1632003784179688
    3. '0' → logprob: -4.163200378417969
    4. 'N' → logprob: -4.163200378417969
    5. '1' → logprob: -6.413200378417969
    6. 'min' → logprob: -6.538200378417969
    7. 'max' → logprob: -7.663200378417969
    8. '-' → logprob: -8.038200378417969
    9. ' A' → logprob: -8.788200378417969
    10. '2' → logprob: -9.413200378417969

Token 436: '*N' (ID: 107360)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39718732237815857
    2. '-' → logprob: -1.272187352180481
    3. ' -' → logprob: -3.2721872329711914
    4. ' ,' → logprob: -6.147187232971191
    5. '   ' → logprob: -6.522187232971191
    6. '+' → logprob: -7.147187232971191
    7. ',B' → logprob: -7.272187232971191
    8. ',N' → logprob: -7.272187232971191
    9. ',A' → logprob: -7.397187232971191
    10. '):' → logprob: -7.647187232971191

Token 437: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2542112469673157
    2. '-' → logprob: -1.629211187362671
    3. ' +' → logprob: -4.12921142578125
    4. ' -' → logprob: -4.62921142578125
    5. ',' → logprob: -6.75421142578125
    6. '//' → logprob: -7.50421142578125
    7. '):
' → logprob: -8.50421142578125
    8. '   ' → logprob: -8.62921142578125
    9. '):' → logprob: -9.12921142578125
    10. ' ' → logprob: -9.50421142578125

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006257029599510133
    2. ':' → logprob: -8.000625610351562
    3. '<|end|>' → logprob: -9.125625610351562
    4. '   ' → logprob: -9.750625610351562
    5. ',' → logprob: -10.125625610351562
    6. ' X' → logprob: -10.875625610351562
    7. '        
' → logprob: -11.000625610351562
    8. '<|end|>' → logprob: -12.250625610351562
    9. '):
' → logprob: -12.375625610351562
    10. 'X' → logprob: -12.375625610351562

Token 439: ' pow' (ID: 9779)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.1902151256799698
    2. ' X' → logprob: -2.1902151107788086
    3. 'temp' → logprob: -4.190215110778809
    4. 'val' → logprob: -4.315215110778809
    5. 'if' → logprob: -5.440215110778809
    6. 'term' → logprob: -5.565215110778809
    7. ' val' → logprob: -5.565215110778809
    8. '   ' → logprob: -5.815215110778809
    9. 'comb' → logprob: -5.815215110778809
    10. ' temp' → logprob: -5.940215110778809

Token 440: '_AB' (ID: 49421)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.9366145730018616
    2. '_mod' → logprob: -1.6866145133972168
    3. 'er' → logprob: -2.061614513397217
    4. '_' → logprob: -2.186614513397217
    5. '_i' → logprob: -2.561614513397217
    6. ' =' → logprob: -3.686614513397217
    7. 'erm' → logprob: -3.811614513397217
    8. '=' → logprob: -4.561614513397217
    9. '_value' → logprob: -5.186614513397217
    10. '_=' → logprob: -5.436614513397217

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030675183981657028
    2. '=' → logprob: -4.155675411224365
    3. 'er' → logprob: -5.530675411224365
    4. '_i' → logprob: -5.655675411224365
    5. '_mod' → logprob: -6.155675411224365
    6. '   ' → logprob: -6.655675411224365
    7. 'i' → logprob: -6.905675411224365
    8. ' ' → logprob: -7.655675411224365
    9. '  ' → logprob: -8.030674934387207
    10. '[i' → logprob: -8.155674934387207

Token 442: ' pow' (ID: 9779)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.18384495377540588
    2. 'pow' → logprob: -1.9338449239730835
    3. ' (' → logprob: -4.808845043182373
    4. '(p' → logprob: -4.933845043182373
    5. '(com' → logprob: -5.683845043182373
    6. ' pow' → logprob: -6.058845043182373
    7. '   ' → logprob: -7.558845043182373
    8. '(power' → logprob: -7.683845043182373
    9. '((' → logprob: -7.808845043182373
    10. '(po' → logprob: -8.933844566345215

Token 443: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.03850512579083443
    2. '(A' → logprob: -3.9135050773620605
    3. '(' → logprob: -4.4135050773620605
    4. 'mod' → logprob: -5.9135050773620605
    5. '((' → logprob: -6.9135050773620605
    6. '(i' → logprob: -7.5385050773620605
    7. '(mod' → logprob: -7.7885050773620605
    8. '(com' → logprob: -7.7885050773620605
    9. '(B' → logprob: -9.038505554199219
    10. '_com' → logprob: -9.163505554199219

Token 444: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.01346489880234003
    2. '(' → logprob: -4.63846492767334
    3. '((' → logprob: -5.76346492767334
    4. '(i' → logprob: -8.01346492767334
    5. '(a' → logprob: -9.88846492767334
    6. 'A' → logprob: -9.88846492767334
    7. '2' → logprob: -10.51346492767334
    8. '(
' → logprob: -10.51346492767334
    9. '(B' → logprob: -10.51346492767334
    10. '(pow' → logprob: -11.38846492767334

Token 445: '+B' (ID: 185895)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08064914494752884
    2. ',i' → logprob: -2.5806491374969482
    3. 'i' → logprob: -6.455649375915527
    4. ' ,' → logprob: -9.705649375915527
    5. '(i' → logprob: -10.330649375915527
    6. ' i' → logprob: -10.705649375915527
    7. ',N' → logprob: -10.830649375915527
    8. ',
' → logprob: -11.580649375915527
    9. '*i' → logprob: -12.205649375915527
    10. '(' → logprob: -12.330649375915527

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020873311441391706
    2. ',i' → logprob: -6.377087116241455
    3. ' ,' → logprob: -8.002087593078613
    4. 'i' → logprob: -11.252087593078613
    5. '       ' → logprob: -11.502087593078613
    6. ',
' → logprob: -11.752087593078613
    7. '   ' → logprob: -12.127087593078613
    8. '```' → logprob: -13.252087593078613
    9. '%i' → logprob: -13.627087593078613
    10. '%' → logprob: -13.627087593078613

Token 447: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001142241875641048
    2. ' i' → logprob: -7.3761420249938965
    3. '2' → logprob: -8.376142501831055
    4. '   ' → logprob: -8.876142501831055
    5. 'N' → logprob: -9.501142501831055
    6. '
' → logprob: -10.501142501831055
    7. 'mod' → logprob: -11.876142501831055
    8. '(i' → logprob: -12.001142501831055
    9. ' ' → logprob: -12.126142501831055
    10. '(' → logprob: -12.126142501831055

Token 448: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015317666111513972
    2. '2' → logprob: -7.501531600952148
    3. ' i' → logprob: -8.251531600952148
    4. 'N' → logprob: -8.376531600952148
    5. '   ' → logprob: -8.626531600952148
    6. '(i' → logprob: -9.001531600952148
    7. '(' → logprob: -9.751531600952148
    8. 'mod' → logprob: -9.751531600952148
    9. '
' → logprob: -11.501531600952148
    10. ' ' → logprob: -11.501531600952148

Token 449: '*N' (ID: 107360)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.04519035294651985
    2. '*N' → logprob: -3.1701903343200684
    3. '*' → logprob: -7.295190334320068
    4. 'i' → logprob: -7.295190334320068
    5. ' *' → logprob: -7.545190334320068
    6. 'N' → logprob: -8.170190811157227
    7. '*(' → logprob: -12.045190811157227
    8. '[i' → logprob: -12.670190811157227
    9. '
' → logprob: -13.420190811157227
    10. '   ' → logprob: -13.420190811157227

Token 450: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7161736488342285
    2. ' -' → logprob: -0.7161736488342285
    3. '-i' → logprob: -3.8411736488342285
    4. ',' → logprob: -6.8411736488342285
    5. '   ' → logprob: -9.21617317199707
    6. ' i' → logprob: -10.21617317199707
    7. 'i' → logprob: -10.59117317199707
    8. ')' → logprob: -11.09117317199707
    9. ' ,' → logprob: -11.46617317199707
    10. ' ' → logprob: -11.46617317199707

Token 451: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011181884910911322
    2. ' i' → logprob: -7.001118183135986
    3. '1' → logprob: -8.626118659973145
    4. '   ' → logprob: -11.626118659973145
    5. '	i' → logprob: -11.876118659973145
    6. '
' → logprob: -12.876118659973145
    7. ' ' → logprob: -13.126118659973145
    8. '(i' → logprob: -13.376118659973145
    9. '2' → logprob: -13.751118659973145
    10. '  ' → logprob: -14.376118659973145

Token 452: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.1290196180343628
    2. '-i' → logprob: -1.2540196180343628
    3. '-' → logprob: -1.3790196180343628
    4. ',' → logprob: -2.0040197372436523
    5. ')' → logprob: -5.754019737243652
    6. ' ,' → logprob: -7.129019737243652
    7. '   ' → logprob: -8.129019737243652
    8. ',i' → logprob: -8.629019737243652
    9. 'i' → logprob: -10.004019737243652
    10. '),' → logprob: -10.129019737243652

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009209888521581888
    2. ' ,' → logprob: -7.00092077255249
    3. ')' → logprob: -12.375921249389648
    4. '   ' → logprob: -13.125921249389648
    5. ',
' → logprob: -13.500921249389648
    6. ' ' → logprob: -14.500921249389648
    7. '),' → logprob: -15.000921249389648
    8. '+' → logprob: -15.750921249389648
    9. '1' → logprob: -15.750921249389648
    10. '```' → logprob: -16.12592124938965

Token 454: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06198684871196747
    2. ' mod' → logprob: -2.8119869232177734
    3. '   ' → logprob: -11.186986923217773
    4. '       ' → logprob: -13.936986923217773
    5. '	mod' → logprob: -14.061986923217773
    6. ' ' → logprob: -14.186986923217773
    7. '           ' → logprob: -14.686986923217773
    8. ')' → logprob: -14.686986923217773
    9. '    ' → logprob: -15.186986923217773
    10. '2' → logprob: -15.436986923217773

Token 455: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021549606695771217
    2. ')
' → logprob: -3.896549701690674
    3. ',' → logprob: -7.646549701690674
    4. '   ' → logprob: -7.771549701690674
    5. ')*' → logprob: -10.271549224853516
    6. '       ' → logprob: -10.646549224853516
    7. ' )' → logprob: -10.896549224853516
    8. ')
' → logprob: -11.271549224853516
    9. ')

' → logprob: -12.646549224853516
    10. ' ' → logprob: -13.271549224853516

Token 456: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14149926602840424
    2. '       ' → logprob: -2.6414992809295654
    3. ')' → logprob: -3.1414992809295654
    4. '<|end|>' → logprob: -4.766499042510986
    5. ' ' → logprob: -5.266499042510986
    6. ',' → logprob: -7.141499042510986
    7. '  ' → logprob: -7.266499042510986
    8. '    ' → logprob: -8.266499519348145
    9. '    
' → logprob: -8.266499519348145
    10. '*' → logprob: -8.391499519348145

Token 457: ' i' (ID: 575)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.022727152332663536
    2. ' pow' → logprob: -4.522727012634277
    3. '       ' → logprob: -6.022727012634277
    4. 'comb' → logprob: -6.397727012634277
    5. 'temp' → logprob: -6.772727012634277
    6. 'tmp' → logprob: -6.897727012634277
    7. 'term' → logprob: -6.897727012634277
    8. 'val' → logprob: -7.522727012634277
    9. 'res' → logprob: -7.897727012634277
    10. '   ' → logprob: -8.147727012634277

Token 458: '_term' (ID: 41867)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.33620643615722656
    2. '_' → logprob: -1.8362064361572266
    3. 'f' → logprob: -3.7112064361572266
    4. '_val' → logprob: -3.8362064361572266
    5. 'pow' → logprob: -4.086206436157227
    6. 'n' → logprob: -4.461206436157227
    7. '_term' → logprob: -4.961206436157227
    8. '_power' → logprob: -5.211206436157227
    9. '_=' → logprob: -5.336206436157227
    10. '_mul' → logprob: -5.336206436157227

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254248857498169
    2. ' =' → logprob: -1.600424885749817
    3. '   ' → logprob: -12.600424766540527
    4. 'pow' → logprob: -13.100424766540527
    5. '*=' → logprob: -13.475424766540527
    6. ' ' → logprob: -13.725424766540527
    7. '    ' → logprob: -14.100424766540527
    8. '*' → logprob: -14.725424766540527
    9. '=
' → logprob: -14.725424766540527
    10. ' *=' → logprob: -14.725424766540527

Token 460: ' i' (ID: 575)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -1.1081433296203613
    2. '(pow' → logprob: -1.4831433296203613
    3. 'pow' → logprob: -1.7331433296203613
    4. ' (' → logprob: -1.7331433296203613
    5. '(i' → logprob: -3.9831433296203613
    6. '((' → logprob: -4.108143329620361
    7. 'comb' → logprob: -4.233143329620361
    8. ' pow' → logprob: -4.358143329620361
    9. '(((' → logprob: -5.108143329620361
    10. '(' → logprob: -5.108143329620361

Token 461: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46707573533058167
    2. ' -' → logprob: -1.4670757055282593
    3. ' ' → logprob: -3.467075824737549
    4. '*' → logprob: -3.467075824737549
    5. ' *' → logprob: -3.592075824737549
    6. ')' → logprob: -4.342075824737549
    7. '   ' → logprob: -4.467075824737549
    8. '+' → logprob: -4.592075824737549
    9. '<|end|>' → logprob: -5.467075824737549
    10. 'pow' → logprob: -6.217075824737549

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2210891842842102
    2. '   ' → logprob: -2.5960891246795654
    3. '*' → logprob: -3.5960891246795654
    4. '-' → logprob: -3.5960891246795654
    5. 'pow' → logprob: -3.8460891246795654
    6. ' *' → logprob: -4.5960893630981445
    7. '
' → logprob: -4.7210893630981445
    8. '+' → logprob: -5.2210893630981445
    9. '**' → logprob: -5.8460893630981445
    10. ' -' → logprob: -5.9710893630981445

Token 463: ' comb' (ID: 4134)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.23294535279273987
    2. '       ' → logprob: -2.607945442199707
    3. ' pow' → logprob: -3.857945442199707
    4. '   ' → logprob: -3.857945442199707
    5. 'for' → logprob: -3.982945442199707
    6. '*' → logprob: -4.482945442199707
    7. 'if' → logprob: -4.482945442199707
    8. ' for' → logprob: -4.732945442199707
    9. 'i' → logprob: -4.857945442199707
    10. 'X' → logprob: -5.482945442199707

Token 464: '_term' (ID: 41867)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6593895554542542
    2. '=' → logprob: -0.9093895554542542
    3. ' =' → logprob: -3.2843894958496094
    4. '_term' → logprob: -3.7843894958496094
    5. '_val' → logprob: -4.534389495849609
    6. '_i' → logprob: -5.784389495849609
    7. '_value' → logprob: -6.534389495849609
    8. 'ination' → logprob: -7.284389495849609
    9. 'term' → logprob: -7.534389495849609
    10. 'o' → logprob: -7.909389495849609

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014162540435791
    2. '=' → logprob: -1.701416254043579
    3. ' ' → logprob: -13.576416015625
    4. '=com' → logprob: -13.576416015625
    5. '   ' → logprob: -15.451416015625
    6. ' =
' → logprob: -16.576416015625
    7. '  ' → logprob: -16.951416015625
    8. '[' → logprob: -17.076416015625
    9. '=
' → logprob: -17.076416015625
    10. ',' → logprob: -17.326416015625

Token 466: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08315121382474899
    2. ' comb' → logprob: -2.95815110206604
    3. '(com' → logprob: -3.70815110206604
    4. 'comb' → logprob: -5.833151340484619
    5. ' com' → logprob: -8.833150863647461
    6. ' combin' → logprob: -9.583150863647461
    7. '(' → logprob: -9.708150863647461
    8. 'c' → logprob: -10.333150863647461
    9. '   ' → logprob: -10.833150863647461
    10. 'pow' → logprob: -11.208150863647461

Token 467: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005725893657654524
    2. '_obj' → logprob: -5.755725860595703
    3. 'com' → logprob: -6.505725860595703
    4. 'ination' → logprob: -7.755725860595703
    5. '(com' → logprob: -8.005725860595703
    6. 'obj' → logprob: -9.255725860595703
    7. 'pow' → logprob: -10.255725860595703
    8. '(' → logprob: -10.505725860595703
    9. '_i' → logprob: -10.505725860595703
    10. '_object' → logprob: -11.380725860595703

Token 468: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.01566430740058422
    2. '_p' → logprob: -4.390664100646973
    3. '_obj' → logprob: -6.015664100646973
    4. 'com' → logprob: -7.390664100646973
    5. 'obj' → logprob: -9.890664100646973
    6. 'p' → logprob: -11.015664100646973
    7. '(com' → logprob: -12.015664100646973
    8. '_object' → logprob: -12.890664100646973
    9. '_' → logprob: -13.015664100646973
    10. '.com' → logprob: -13.140664100646973

Token 469: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.875032424926758
    3. '<com' → logprob: -11.500032424926758
    4. 'com' → logprob: -13.375032424926758
    5. '=com' → logprob: -14.750032424926758
    6. '(
' → logprob: -14.875032424926758
    7. '(co' → logprob: -15.125032424926758
    8. '```' → logprob: -15.625032424926758
    9. ' (' → logprob: -16.875032424926758
    10. '	com' → logprob: -17.000032424926758

Token 470: 'bi' (ID: 6738)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2068956196308136
    2. 'bi' → logprob: -2.206895589828491
    3. '_obj' → logprob: -2.706895589828491
    4. 'obj' → logprob: -4.70689582824707
    5. 'b' → logprob: -7.33189582824707
    6. 'Obj' → logprob: -8.95689582824707
    7. 'pi' → logprob: -9.33189582824707
    8. '_Obj' → logprob: -9.58189582824707
    9. 'obi' → logprob: -9.95689582824707
    10. 'ji' → logprob: -10.83189582824707

Token 471: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.004103215876966715
    2. 'obj' → logprob: -5.504103183746338
    3. 'Obj' → logprob: -11.004103660583496
    4. 'objc' → logprob: -12.629103660583496
    5. 'j' → logprob: -13.254103660583496
    6. '$obj' → logprob: -14.504103660583496
    7. '_object' → logprob: -14.629103660583496
    8. 'bj' → logprob: -14.754103660583496
    9. '_Obj' → logprob: -14.879103660583496
    10. '_objs' → logprob: -15.129103660583496

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5828596353530884
    2. '(i' → logprob: -0.8328596353530884
    3. ',i' → logprob: -5.082859516143799
    4. '(' → logprob: -7.832859516143799
    5. ')' → logprob: -9.332859992980957
    6. ' ,' → logprob: -9.332859992980957
    7. '(N' → logprob: -9.457859992980957
    8. ',N' → logprob: -10.582859992980957
    9. ')(' → logprob: -12.332859992980957
    10. '(n' → logprob: -13.207859992980957

Token 473: ' i' (ID: 575)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38973140716552734
    2. 'i' → logprob: -1.1397314071655273
    3. ' i' → logprob: -6.264731407165527
    4. ' ' → logprob: -7.139731407165527
    5. '   ' → logprob: -9.764731407165527
    6. 'N' → logprob: -10.139731407165527
    7. '(' → logprob: -10.139731407165527
    8. '(i' → logprob: -12.389731407165527
    9. '  ' → logprob: -12.639731407165527
    10. 'pow' → logprob: -13.077231407165527

Token 474: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003611474297940731
    2. ',i' → logprob: -5.7536115646362305
    3. ',N' → logprob: -8.87861156463623
    4. ' ,' → logprob: -9.37861156463623
    5. '-' → logprob: -9.50361156463623
    6. ')' → logprob: -9.87861156463623
    7. '   ' → logprob: -10.62861156463623
    8. ' -' → logprob: -11.25361156463623
    9. 'i' → logprob: -12.00361156463623
    10. '2' → logprob: -12.62861156463623

Token 475: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015523707494139671
    2. '1' → logprob: -4.265523910522461
    3. '2' → logprob: -7.765523910522461
    4. '(' → logprob: -8.015523910522461
    5. '(N' → logprob: -8.265523910522461
    6. ' N' → logprob: -8.890523910522461
    7. 'i' → logprob: -9.015523910522461
    8. '   ' → logprob: -9.765523910522461
    9. 'B' → logprob: -11.765523910522461
    10. '(i' → logprob: -12.390523910522461

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044437398901209235
    2. ',i' → logprob: -8.000444412231445
    3. ',B' → logprob: -9.500444412231445
    4. ' ,' → logprob: -10.625444412231445
    5. 'B' → logprob: -12.625444412231445
    6. ',A' → logprob: -13.125444412231445
    7. ',N' → logprob: -13.500444412231445
    8. ')' → logprob: -14.000444412231445
    9. ',R' → logprob: -14.250444412231445
    10. '   ' → logprob: -14.875444412231445

Token 477: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00857143010944128
    2. '2' → logprob: -5.508571624755859
    3. ' N' → logprob: -6.008571624755859
    4. 'i' → logprob: -7.008571624755859
    5. '   ' → logprob: -7.633571624755859
    6. 'B' → logprob: -8.00857162475586
    7. ' ' → logprob: -8.75857162475586
    8. 'A' → logprob: -9.13357162475586
    9. ' i' → logprob: -11.75857162475586
    10. '  ' → logprob: -11.75857162475586

Token 478: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038162097334861755
    2. ')' → logprob: -3.2881619930267334
    3. ' -' → logprob: -9.788162231445312
    4. '   ' → logprob: -9.913162231445312
    5. '-)' → logprob: -11.913162231445312
    6. '1' → logprob: -12.663162231445312
    7. '-B' → logprob: -14.288162231445312
    8. '<|end|>' → logprob: -14.788162231445312
    9. '))' → logprob: -14.913162231445312
    10. ')
' → logprob: -14.913162231445312

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010366239439463243
    2. 'B' → logprob: -9.875103950500488
    3. 'N' → logprob: -10.875103950500488
    4. 'A' → logprob: -10.875103950500488
    5. '2' → logprob: -12.125103950500488
    6. 'i' → logprob: -12.125103950500488
    7. ' ' → logprob: -13.625103950500488
    8. '   ' → logprob: -14.000103950500488
    9. '(' → logprob: -15.750103950500488
    10. '```' → logprob: -15.750103950500488

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.44706009957008e-05
    2. ')
' → logprob: -9.62508487701416
    3. '   ' → logprob: -11.37508487701416
    4. ')*' → logprob: -12.50008487701416
    5. ' )' → logprob: -13.50008487701416
    6. ')

' → logprob: -15.25008487701416
    7. ',' → logprob: -15.62508487701416
    8. ')#' → logprob: -15.87508487701416
    9. '<|end|>' → logprob: -16.000083923339844
    10. ')**' → logprob: -16.250083923339844

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20280279219150543
    2. '   ' → logprob: -2.577802896499634
    3. '<|end|>' → logprob: -3.077802896499634
    4. '
' → logprob: -3.452802896499634
    5. ')' → logprob: -3.827802896499634
    6. '        
' → logprob: -6.077802658081055
    7. '    
' → logprob: -6.702802658081055
    8. ' X' → logprob: -7.077802658081055
    9. 'X' → logprob: -7.327802658081055
    10. ')
' → logprob: -7.577802658081055

Token 482: ' term' (ID: 2914)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20861820876598358
    2. ' X' → logprob: -2.7086181640625
    3. 'term' (adapté à ' term') → logprob: -3.3336181640625
    4. 'pow' → logprob: -3.3336181640625
    5. '       ' → logprob: -3.7086181640625
    6. '   ' → logprob: -4.4586181640625
    7. ' term' → logprob: -5.3336181640625
    8. 'val' → logprob: -6.5836181640625
    9. 'mult' → logprob: -6.7086181640625
    10. 'sum' → logprob: -7.0836181640625

Token 483: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144452154636383
    2. '=' → logprob: -1.7014445066452026
    3. '   ' → logprob: -10.951444625854492
    4. ' +=' → logprob: -11.826444625854492
    5. ' ' → logprob: -13.076444625854492
    6. ' *=' → logprob: -13.951444625854492
    7. '	' → logprob: -14.326444625854492
    8. '+=' → logprob: -14.576444625854492
    9. '    ' → logprob: -14.701444625854492
    10. '  ' → logprob: -14.951444625854492

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132723271846771
    2. '=' → logprob: -1.3132723569869995
    3. '   ' → logprob: -12.188272476196289
    4. ' +=' → logprob: -13.563272476196289
    5. ' *=' → logprob: -13.938272476196289
    6. ' ' → logprob: -14.188272476196289
    7. ')' → logprob: -14.313272476196289
    8. '	' → logprob: -14.688272476196289
    9. '    ' → logprob: -14.938272476196289
    10. '_' → logprob: -15.188272476196289

Token 485: ' pow' (ID: 9779)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.525200366973877
    2. ' (' → logprob: -1.900200366973877
    3. 'pow' → logprob: -2.150200366973877
    4. '(i' → logprob: -2.525200366973877
    5. '((' → logprob: -3.650200366973877
    6. '(((' → logprob: -4.525200366973877
    7. '(' → logprob: -4.775200366973877
    8. '(com' → logprob: -5.275200366973877
    9. '((((' → logprob: -5.775200366973877
    10. ' pow' → logprob: -5.900200366973877

Token 486: '_mod' (ID: 15325)
  Prédit: '_AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_AB' → logprob: -0.032054029405117035
    2. '_mod' → logprob: -3.9070539474487305
    3. '(' → logprob: -4.7820539474487305
    4. '_MOD' → logprob: -6.0320539474487305
    5. '_' → logprob: -9.15705394744873
    6. 'AB' → logprob: -9.28205394744873
    7. '(_' → logprob: -9.40705394744873
    8. '_ab' → logprob: -9.78205394744873
    9. 'mod' → logprob: -9.90705394744873
    10. '((' → logprob: -10.03205394744873

Token 487: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04243401810526848
    2. '(i' → logprob: -4.292434215545654
    3. 'A' → logprob: -4.417434215545654
    4. '(pow' → logprob: -4.917434215545654
    5. '(' → logprob: -5.542434215545654
    6. 'pow' → logprob: -6.167434215545654
    7. '(B' → logprob: -6.292434215545654
    8. 'i' → logprob: -8.542433738708496
    9. '((' → logprob: -9.042433738708496
    10. 'mod' → logprob: -9.792433738708496

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012883718125522137
    2. ',i' → logprob: -4.38788366317749
    3. ' ,' → logprob: -8.512884140014648
    4. 'i' → logprob: -9.512884140014648
    5. '   ' → logprob: -11.387884140014648
    6. ',A' → logprob: -11.512884140014648
    7. '<|end|>' → logprob: -11.762884140014648
    8. ',p' → logprob: -12.262884140014648
    9. '(i' → logprob: -12.262884140014648
    10. '*i' → logprob: -12.262884140014648

Token 489: ' N' (ID: 478)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033630140125751495
    2. '2' → logprob: -3.908630132675171
    3. ' i' → logprob: -4.65863037109375
    4. 'N' → logprob: -6.03363037109375
    5. 'term' → logprob: -8.03363037109375
    6. '   ' → logprob: -8.15863037109375
    7. ' ' → logprob: -8.65863037109375
    8. '
' → logprob: -9.53363037109375
    9. 'pow' → logprob: -10.03363037109375
    10. '  ' → logprob: -10.15863037109375

Token 490: ',' (ID: 11)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5515205264091492
    2. '-' → logprob: -1.051520586013794
    3. ' -' → logprob: -3.301520586013794
    4. ',' → logprob: -4.301520347595215
    5. ')' → logprob: -4.676520347595215
    6. '+' → logprob: -5.176520347595215
    7. '-B' → logprob: -6.176520347595215
    8. '+i' → logprob: -6.176520347595215
    9. '*' → logprob: -6.676520347595215
    10. '-A' → logprob: -7.176520347595215

Token 491: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0007118358626030385
    2. ' mod' → logprob: -7.250711917877197
    3. '
' → logprob: -14.125711441040039
    4. '	mod' → logprob: -15.000711441040039
    5. '   ' → logprob: -15.250711441040039
    6. ' ' → logprob: -15.750711441040039
    7. ')' → logprob: -16.12571144104004
    8. '  ' → logprob: -16.50071144104004
    9. '           ' → logprob: -16.50071144104004
    10. '       ' → logprob: -17.25071144104004

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008503671269863844
    2. ')
' → logprob: -7.375850200653076
    3. ')*' → logprob: -8.625850677490234
    4. ',' → logprob: -11.000850677490234
    5. '   ' → logprob: -11.750850677490234
    6. ')

' → logprob: -12.375850677490234
    7. ' )' → logprob: -12.625850677490234
    8. ')*(' → logprob: -13.125850677490234
    9. '<|end|>' → logprob: -13.375850677490234
    10. ')**' → logprob: -13.625850677490234

Token 493: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7511234283447266
    2. ')' → logprob: -1.6261234283447266
    3. '*' → logprob: -1.8761234283447266
    4. '<|end|>' → logprob: -1.8761234283447266
    5. '       ' → logprob: -4.626123428344727
    6. '   ' → logprob: -4.876123428344727
    7. '<|end|>' → logprob: -5.751123428344727
    8. ' ' → logprob: -7.251123428344727
    9. ',' → logprob: -7.376123428344727
    10. ' *
' → logprob: -7.626123428344727

Token 494: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.025429166853427887
    2. '(pow' → logprob: -4.4004292488098145
    3. 'comb' → logprob: -5.2754292488098145
    4. 'term' → logprob: -6.1504292488098145
    5. ' pow' → logprob: -6.2754292488098145
    6. '(com' → logprob: -7.2754292488098145
    7. '(i' → logprob: -7.4004292488098145
    8. 'com' → logprob: -7.5254292488098145
    9. '(' → logprob: -7.6504292488098145
    10. ' (' → logprob: -8.025428771972656

Token 495: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0021231381688266993
    2. '(' → logprob: -6.2521233558654785
    3. '(A' → logprob: -9.50212287902832
    4. '((' → logprob: -10.12712287902832
    5. '(B' → logprob: -10.25212287902832
    6. 'mod' → logprob: -11.12712287902832
    7. '_MOD' → logprob: -12.12712287902832
    8. '_' → logprob: -12.62712287902832
    9. ' (' → logprob: -12.75212287902832
    10. 'Mod' → logprob: -12.75212287902832

Token 496: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0035043267998844385
    2. '(i' → logprob: -7.253504276275635
    3. '(A' → logprob: -7.378504276275635
    4. '(pow' → logprob: -7.378504276275635
    5. 'pow' → logprob: -7.503504276275635
    6. 'B' → logprob: -7.503504276275635
    7. '(' → logprob: -8.253504753112793
    8. '((' → logprob: -10.003504753112793
    9. '(
' → logprob: -10.878504753112793
    10. '(base' → logprob: -11.253504753112793

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023883886635303497
    2. ',i' → logprob: -3.773883819580078
    3. '(' → logprob: -9.023883819580078
    4. 'i' → logprob: -9.148883819580078
    5. '(i' → logprob: -9.148883819580078
    6. ',
' → logprob: -9.648883819580078
    7. ' ,' → logprob: -9.773883819580078
    8. ',N' → logprob: -9.898883819580078
    9. ',(' → logprob: -10.273883819580078
    10. ',n' → logprob: -10.898883819580078

Token 498: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01791508123278618
    2. '2' → logprob: -4.39291524887085
    3. '(' → logprob: -5.51791524887085
    4. 'N' → logprob: -7.51791524887085
    5. ' i' → logprob: -8.142914772033691
    6. '(i' → logprob: -8.142914772033691
    7. '   ' → logprob: -8.892914772033691
    8. '(N' → logprob: -9.892914772033691
    9. ' ' → logprob: -11.267914772033691
    10. ' (' → logprob: -11.642914772033691

Token 499: '-N' (ID: 13833)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6100708842277527
    2. ' -' → logprob: -1.3600709438323975
    3. '-N' → logprob: -1.6100709438323975
    4. ',' → logprob: -8.860071182250977
    5. ')' → logprob: -11.110071182250977
    6. 'N' → logprob: -12.610071182250977
    7. '   ' → logprob: -12.610071182250977
    8. '+' → logprob: -13.360071182250977
    9. '-n' → logprob: -13.735071182250977
    10. ' ' → logprob: -13.735071182250977

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001146291324403137
    2. ' ,' → logprob: -9.250114440917969
    3. ')' → logprob: -11.750114440917969
    4. '+' → logprob: -12.250114440917969
    5. '-' → logprob: -12.750114440917969
    6. '   ' → logprob: -13.875114440917969
    7. '```' → logprob: -14.125114440917969
    8. ' -' → logprob: -14.750114440917969
    9. '‌,' → logprob: -15.750114440917969
    10. '),' → logprob: -16.00011444091797

Token 501: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.20141461491584778
    2. ' mod' → logprob: -1.7014145851135254
    3. '	mod' → logprob: -14.326415061950684
    4. '   ' → logprob: -15.451415061950684
    5. ' ' → logprob: -15.826415061950684
    6. '(mod' → logprob: -15.951415061950684
    7. '    ' → logprob: -16.576414108276367
    8. '```' → logprob: -17.076414108276367
    9. '       ' → logprob: -17.201414108276367
    10. '  ' → logprob: -17.326414108276367

Token 502: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38976651430130005
    2. ')' → logprob: -1.1397664546966553
    3. ')%' → logprob: -7.139766693115234
    4. '<|end|>' → logprob: -7.139766693115234
    5. ' ,' → logprob: -7.764766693115234
    6. ' %' → logprob: -8.389766693115234
    7. '%' → logprob: -8.639766693115234
    8. '       ' → logprob: -8.889766693115234
    9. '   ' → logprob: -9.014766693115234
    10. '<|end|>' → logprob: -9.764766693115234

Token 503: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.2466274499893188
    2. '%' → logprob: -1.3716274499893188
    3. '       ' → logprob: -1.3716274499893188
    4. ')' → logprob: -1.9966274499893188
    5. '   ' → logprob: -3.7466273307800293
    6. '<|end|>' → logprob: -4.246627330780029
    7. '*' → logprob: -4.496627330780029
    8. ' *' → logprob: -4.996627330780029
    9. ')%' → logprob: -5.621627330780029
    10. '```' → logprob: -6.121627330780029

Token 504: ' term' (ID: 2914)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.069473385810852
    2. ' %' → logprob: -1.069473385810852
    3. 'term' (adapté à ' term') → logprob: -2.4444732666015625
    4. '       ' → logprob: -2.4444732666015625
    5. ')' → logprob: -2.8194732666015625
    6. '   ' → logprob: -3.1944732666015625
    7. ' term' → logprob: -4.1944732666015625
    8. '<|end|>' → logprob: -5.0694732666015625
    9. ' *' → logprob: -5.3194732666015625
    10. '*' → logprob: -5.4444732666015625

Token 505: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35773420333862305
    2. '=' → logprob: -1.232734203338623
    3. ' =' → logprob: -5.482734203338623
    4. '2' → logprob: -5.732734203338623
    5. '+=' → logprob: -7.607734203338623
    6. '*=' → logprob: -7.982734203338623
    7. 's' → logprob: -8.357734680175781
    8. '_mod' → logprob: -8.607734680175781
    9. '=
' → logprob: -9.357734680175781
    10. '*' → logprob: -9.357734680175781

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519793212413788
    2. '=' → logprob: -1.5019793510437012
    3. '   ' → logprob: -10.126978874206543
    4. '    ' → logprob: -12.626978874206543
    5. ' ' → logprob: -13.126978874206543
    6. 'def' → logprob: -14.251978874206543
    7. ',' → logprob: -14.251978874206543
    8. '1' → logprob: -14.376978874206543
    9. ')' → logprob: -14.501978874206543
    10. ' =
' → logprob: -14.751978874206543

Token 507: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.120425283908844
    2. '(pow' → logprob: -2.995425224304199
    3. ' pow' → logprob: -3.495425224304199
    4. '(com' → logprob: -4.495425224304199
    5. ' (' → logprob: -4.870425224304199
    6. 'comb' → logprob: -5.495425224304199
    7. '(' → logprob: -5.995425224304199
    8. 'com' → logprob: -6.370425224304199
    9. '(i' → logprob: -6.745425224304199
    10. '((' → logprob: -6.995425224304199

Token 508: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.117345684382599e-05
    2. '1' → logprob: -11.875020980834961
    3. 'mod' → logprob: -12.625020980834961
    4. '_term' → logprob: -12.750020980834961
    5. '(A' → logprob: -13.000020980834961
    6. '(' → logprob: -13.250020980834961
    7. '_com' → logprob: -14.250020980834961
    8. '(B' → logprob: -14.250020980834961
    9. '_pow' → logprob: -15.000020980834961
    10. '(i' → logprob: -15.000020980834961

Token 509: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.05551920086145401
    2. '(A' → logprob: -2.9305191040039062
    3. '(' → logprob: -8.555519104003906
    4. '(i' → logprob: -8.555519104003906
    5. 'A' → logprob: -9.430519104003906
    6. 'B' → logprob: -9.430519104003906
    7. '(N' → logprob: -10.555519104003906
    8. '((' → logprob: -11.055519104003906
    9. '(pow' → logprob: -11.993019104003906
    10. '(
' → logprob: -12.305519104003906

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021676832693628967
    2. ' ,' → logprob: -8.625216484069824
    3. ',N' → logprob: -11.250216484069824
    4. ',i' → logprob: -11.500216484069824
    5. ',
' → logprob: -12.000216484069824
    6. ')' → logprob: -13.250216484069824
    7. ' ' → logprob: -14.000216484069824
    8. 'i' → logprob: -14.250216484069824
    9. ',n' → logprob: -14.375216484069824
    10. '(N' → logprob: -14.875216484069824

Token 511: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004486731719225645
    2. 'i' → logprob: -5.754486560821533
    3. ' N' → logprob: -7.504486560821533
    4. '(N' → logprob: -8.379487037658691
    5. '0' → logprob: -8.754487037658691
    6. '   ' → logprob: -8.879487037658691
    7. '2' → logprob: -9.629487037658691
    8. ' ' → logprob: -10.129487037658691
    9. 'A' → logprob: -10.129487037658691
    10. '       ' → logprob: -11.629487037658691

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011641718447208405
    2. ' ,' → logprob: -9.125116348266602
    3. ')' → logprob: -12.125116348266602
    4. '   ' → logprob: -15.125116348266602
    5. ',
' → logprob: -15.250116348266602
    6. 'mod' → logprob: -15.375116348266602
    7. '+' → logprob: -15.375116348266602
    8. '```' → logprob: -15.875116348266602
    9. '),' → logprob: -16.1251163482666
    10. '-' → logprob: -16.3751163482666

Token 513: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.010061570443212986
    2. 'i' → logprob: -5.385061740875244
    3. ' mod' → logprob: -5.385061740875244
    4. 'N' → logprob: -7.510061740875244
    5. ' i' → logprob: -9.260061264038086
    6. 'n' → logprob: -9.760061264038086
    7. ' N' → logprob: -10.510061264038086
    8. ',' → logprob: -10.510061264038086
    9. '   ' → logprob: -11.260061264038086
    10. '
' → logprob: -11.260061264038086

Token 514: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16093802452087402
    2. ',' → logprob: -1.910938024520874
    3. '   ' → logprob: -7.535938262939453
    4. ')*' → logprob: -9.285938262939453
    5. ' ,' → logprob: -10.410938262939453
    6. ')
' → logprob: -11.160938262939453
    7. ' ' → logprob: -11.410938262939453
    8. ' )' → logprob: -12.160938262939453
    9. '```' → logprob: -12.535938262939453
    10. '*' → logprob: -12.660938262939453

Token 515: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.021496746689081192
    2. '*' → logprob: -3.8964967727661133
    3. '   ' → logprob: -7.271496772766113
    4. ' *
' → logprob: -9.021496772766113
    5. 'def' → logprob: -9.771496772766113
    6. '       ' → logprob: -10.771496772766113
    7. '<|end|>' → logprob: -10.896496772766113
    8. ')' → logprob: -11.521496772766113
    9. '*(' → logprob: -12.021496772766113
    10. ',' → logprob: -12.771496772766113

Token 516: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.11304144561290741
    2. ' pow' → logprob: -2.238041400909424
    3. '(pow' → logprob: -8.863041877746582
    4. '(' → logprob: -10.113041877746582
    5. ' (' → logprob: -11.113041877746582
    6. 'i' → logprob: -12.738041877746582
    7. ' ' → logprob: -12.988041877746582
    8. '   ' → logprob: -13.113041877746582
    9. 'term' → logprob: -13.238041877746582
    10. 'A' → logprob: -13.488041877746582

Token 517: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.886803359724581e-05
    2. 'mod' → logprob: -9.875079154968262
    3. 'o' → logprob: -11.500079154968262
    4. 'erm' → logprob: -12.125079154968262
    5. 'Mod' → logprob: -12.875079154968262
    6. 'w' → logprob: -13.625079154968262
    7. 'f' → logprob: -13.875079154968262
    8. 'omod' → logprob: -13.875079154968262
    9. 'or' → logprob: -14.250079154968262
    10. 'od' → logprob: -14.500079154968262

Token 518: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00011188744247192517
    2. '(' → logprob: -9.25011157989502
    3. '(i' → logprob: -12.00011157989502
    4. '((' → logprob: -13.37511157989502
    5. 'def' → logprob: -13.62511157989502
    6. 'A' → logprob: -13.62511157989502
    7. 'pow' → logprob: -13.75011157989502
    8. '(
' → logprob: -13.75011157989502
    9. 'term' → logprob: -14.25011157989502
    10. '(B' → logprob: -14.75011157989502

Token 519: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.364928700961173e-05
    2. ',i' → logprob: -9.875093460083008
    3. ' ,' → logprob: -10.625093460083008
    4. '(i' → logprob: -11.875093460083008
    5. '(' → logprob: -12.000093460083008
    6. 'i' → logprob: -13.625093460083008
    7. ',
' → logprob: -14.250093460083008
    8. '`,' → logprob: -14.375093460083008
    9. '',' → logprob: -14.750093460083008
    10. '(N' → logprob: -15.000093460083008

Token 520: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003921847674064338
    2. ' i' → logprob: -7.875391960144043
    3. '   ' → logprob: -12.625391960144043
    4. '(i' → logprob: -13.125391960144043
    5. 'N' → logprob: -13.250391960144043
    6. '(' → logprob: -13.250391960144043
    7. '2' → logprob: -13.750391960144043
    8. '
' → logprob: -14.500391960144043
    9. ' ' → logprob: -14.750391960144043
    10. '{i' → logprob: -14.875391960144043

Token 521: '-N' (ID: 13833)
  Prédit: '-N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-N' → logprob: -0.018399957567453384
    2. '-' → logprob: -4.018400192260742
    3. ' -' → logprob: -8.393400192260742
    4. ',' → logprob: -11.018400192260742
    5. 'N' → logprob: -12.768400192260742
    6. '-B' → logprob: -12.893400192260742
    7. '+' → logprob: -15.018400192260742
    8. '-
' → logprob: -15.143400192260742
    9. '-M' → logprob: -15.393400192260742
    10. '<|end|>' → logprob: -15.393400192260742

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.125015258789062
    3. '-' → logprob: -16.375015258789062
    4. '```' → logprob: -16.750015258789062
    5. '   ' → logprob: -17.000015258789062
    6. ')' → logprob: -17.000015258789062
    7. ' ' → logprob: -17.250015258789062
    8. '+' → logprob: -17.375015258789062
    9. '1' → logprob: -17.875015258789062
    10. '2' → logprob: -18.750015258789062

Token 523: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0052342405542731285
    2. ' mod' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.505233764648438
    4. '(mod' → logprob: -16.255233764648438
    5. '0' → logprob: -17.005233764648438
    6. '```' → logprob: -17.130233764648438
    7. '	mod' → logprob: -17.380233764648438
    8. '   ' → logprob: -18.255233764648438
    9. '_mod' → logprob: -18.255233764648438
    10. '1' → logprob: -18.380233764648438

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012704703258350492
    2. ')
' → logprob: -7.251270294189453
    3. '   ' → logprob: -7.626270294189453
    4. '       ' → logprob: -10.376270294189453
    5. '<|end|>' → logprob: -11.376270294189453
    6. '+' → logprob: -11.626270294189453
    7. ' )' → logprob: -12.376270294189453
    8. ')*' → logprob: -12.876270294189453
    9. ' ' → logprob: -13.376270294189453
    10. ')+' → logprob: -13.626270294189453

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016544301062822342
    2. '   ' → logprob: -4.391544342041016
    3. '
' → logprob: -6.141544342041016
    4. ')' → logprob: -7.641544342041016
    5. '<|end|>' → logprob: -7.641544342041016
    6. '        
' → logprob: -8.391544342041016
    7. 'if' → logprob: -8.891544342041016
    8. '    
' → logprob: -9.391544342041016
    9. '```' → logprob: -9.641544342041016
    10. '           ' → logprob: -9.766544342041016

Token 526: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6606900691986084
    2. 'X' (adapté à ' X') → logprob: -1.9106900691986084
    3. 'term' → logprob: -1.9106900691986084
    4. 'if' → logprob: -2.5356900691986084
    5. '   ' → logprob: -3.5356900691986084
    6. ' if' → logprob: -3.7856900691986084
    7. ' term' → logprob: -3.7856900691986084
    8. ' X' → logprob: -5.1606903076171875
    9. '+' → logprob: -5.6606903076171875
    10. 'sum' → logprob: -5.6606903076171875

Token 527: '_add' (ID: 8390)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6945183277130127
    2. '+=' → logprob: -0.6945183277130127
    3. '=' → logprob: -6.819518089294434
    4. ' =' → logprob: -9.069518089294434
    5. '+=(' → logprob: -9.069518089294434
    6. ' ^=' → logprob: -10.944518089294434
    7. '+' → logprob: -10.944518089294434
    8. '	' → logprob: -12.819518089294434
    9. ' ' → logprob: -13.194518089294434
    10. '   ' → logprob: -13.569518089294434

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3520548343658447
    2. '=' → logprob: -1.3520548343658447
    3. ' +=' → logprob: -3.9770548343658447
    4. '   ' → logprob: -4.602054595947266
    5. '+=' → logprob: -5.352054595947266
    6. 'ition' → logprob: -5.727054595947266
    7. '  ' → logprob: -7.977054595947266
    8. 'itional' → logprob: -8.227054595947266
    9. ' ' → logprob: -8.977054595947266
    10. 'end' → logprob: -9.227054595947266

Token 529: ' pow' (ID: 9779)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5864267349243164
    2. '(term' → logprob: -1.2114267349243164
    3. '((' → logprob: -2.8364267349243164
    4. '(' → logprob: -3.0864267349243164
    5. '(pow' → logprob: -4.336426734924316
    6. ' ((' → logprob: -4.461426734924316
    7. '(((' → logprob: -4.961426734924316
    8. '(com' → logprob: -5.211426734924316
    9. '(i' → logprob: -6.086426734924316
    10. ' (((' → logprob: -7.461426734924316

Token 530: '_AB' (ID: 49421)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.042223989963531494
    2. '(' → logprob: -3.7922239303588867
    3. '_AB' → logprob: -4.417223930358887
    4. '_term' → logprob: -6.042223930358887
    5. 'mod' → logprob: -6.917223930358887
    6. '_MOD' → logprob: -7.042223930358887
    7. '((' → logprob: -7.917223930358887
    8. '(term' → logprob: -7.917223930358887
    9. '(_' → logprob: -8.167223930358887
    10. '_' → logprob: -8.667223930358887

Token 531: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47763389348983765
    2. '*' → logprob: -0.9776338934898376
    3. '*(' → logprob: -5.727633953094482
    4. '*((' → logprob: -8.477633476257324
    5. '*i' → logprob: -10.602633476257324
    6. '%' → logprob: -10.977633476257324
    7. '(' → logprob: -10.977633476257324
    8. '   ' → logprob: -11.102633476257324
    9. '+' → logprob: -13.352633476257324
    10. ',' → logprob: -13.477633476257324

Token 532: ' i' (ID: 575)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7707540988922119
    2. '(i' → logprob: -1.395754098892212
    3. 'i' → logprob: -2.270754098892212
    4. '(com' → logprob: -2.770754098892212
    5. '(((' → logprob: -3.145754098892212
    6. '(' → logprob: -3.395754098892212
    7. 'comb' → logprob: -3.895754098892212
    8. ' (' → logprob: -4.520753860473633
    9. '(
' → logprob: -5.145753860473633
    10. ' ((' → logprob: -5.395753860473633

Token 533: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.3055185377597809
    2. '*' → logprob: -1.8055185079574585
    3. '<|end|>' → logprob: -2.555518627166748
    4. ' *' → logprob: -4.430518627166748
    5. '<|end|>' → logprob: -6.305518627166748
    6. '-term' → logprob: -6.430518627166748
    7. 'term' → logprob: -6.805518627166748
    8. '_' → logprob: -7.055518627166748
    9. '*_' → logprob: -7.180518627166748
    10. '-' → logprob: -7.430518627166748

Token 534: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04985260218381882
    2. '*' → logprob: -3.5498526096343994
    3. '<|end|>' → logprob: -4.04985237121582
    4. '<|end|>' → logprob: -6.79985237121582
    5. '   ' → logprob: -7.29985237121582
    6. '       ' → logprob: -7.92485237121582
    7. ')' → logprob: -9.42485237121582
    8. '*(' → logprob: -9.42485237121582
    9. '%' → logprob: -9.92485237121582
    10. '  ' → logprob: -10.54985237121582

Token 535: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.30842673778533936
    2. '(com' → logprob: -1.4334267377853394
    3. '((' → logprob: -4.308426856994629
    4. '(' → logprob: -4.933426856994629
    5. 'com' → logprob: -5.308426856994629
    6. '(((' → logprob: -7.933426856994629
    7. '(
' → logprob: -8.058426856994629
    8. ' (' → logprob: -8.933426856994629
    9. ' comb' → logprob: -8.933426856994629
    10. 'term' → logprob: -9.183426856994629

Token 536: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.03512633964419365
    2. 'i' → logprob: -3.4101264476776123
    3. '_' → logprob: -6.660126209259033
    4. '_i' → logprob: -10.035126686096191
    5. 'term' → logprob: -10.160126686096191
    6. '_terms' → logprob: -11.035126686096191
    7. '_TERM' → logprob: -11.160126686096191
    8. ' _' → logprob: -11.535126686096191
    9. '_comb' → logprob: -12.285126686096191
    10. '[_' → logprob: -12.535126686096191

Token 537: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: ' (' (ID: 350)
  Prédit: '(term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(term' → logprob: -0.24266695976257324
    2. '((' → logprob: -1.9926669597625732
    3. ' (' → logprob: -2.8676669597625732
    4. '(' → logprob: -4.117667198181152
    5. ' ((' → logprob: -6.492667198181152
    6. '(abs' → logprob: -6.992667198181152
    7. '(pow' → logprob: -7.242667198181152
    8. '(i' → logprob: -7.367667198181152
    9. '(t' → logprob: -7.742667198181152
    10. '(mod' → logprob: -7.992667198181152

Token 539: 'term' (ID: 8044)
  Prédit: '(term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(term' → logprob: -0.518268883228302
    2. 'term' → logprob: -1.0182688236236572
    3. '(' → logprob: -3.5182688236236572
    4. ' (' → logprob: -4.643269062042236
    5. ' term' → logprob: -6.143269062042236
    6. '((' → logprob: -6.768269062042236
    7. '(
' → logprob: -7.768269062042236
    8. '   ' → logprob: -9.518268585205078
    9. '(t' → logprob: -10.268268585205078
    10. '
' → logprob: -10.893268585205078

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. '2' → logprob: -11.125024795532227
    3. 's' → logprob: -12.875024795532227
    4. '_' → logprob: -13.125024795532227
    5. ')' → logprob: -14.000024795532227
    6. '**' → logprob: -14.000024795532227
    7. '
' → logprob: -14.562524795532227
    8. '```' → logprob: -14.625024795532227
    9. '[' → logprob: -14.875024795532227
    10. '(' → logprob: -14.937524795532227

Token 541: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.682313084602356
    2. ' +' → logprob: -1.432313084602356
    3. ' -' → logprob: -1.682313084602356
    4. '-' → logprob: -2.6823129653930664
    5. '+
' → logprob: -7.057312965393066
    6. ' +
' → logprob: -8.182312965393066
    7. '-
' → logprob: -9.057312965393066
    8. ' -
' → logprob: -10.182312965393066
    9. '   ' → logprob: -10.307312965393066
    10. ' ' → logprob: -10.807312965393066

Token 542: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.0380743183195591
    2. ' term' → logprob: -3.288074254989624
    3. '   ' → logprob: -10.663074493408203
    4. '           ' → logprob: -12.913074493408203
    5. '       ' → logprob: -13.288074493408203
    6. ' ' → logprob: -13.788074493408203
    7. '  ' → logprob: -14.288074493408203
    8. 'ter' → logprob: -14.413074493408203
    9. '    ' → logprob: -14.413074493408203
    10. '     ' → logprob: -14.538074493408203

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.6087021473795176e-05
    2. 'term' → logprob: -10.625045776367188
    3. '_term' → logprob: -11.625045776367188
    4. '
' → logprob: -11.875045776367188
    5. '```' → logprob: -13.125045776367188
    6. '_mod' → logprob: -14.000045776367188
    7. 'mod' → logprob: -14.500045776367188
    8. '_' → logprob: -14.875045776367188
    9. ')' → logprob: -15.562545776367188
    10. '   ' → logprob: -15.687545776367188

Token 544: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006938508013263345
    2. ')%' → logprob: -7.7506937980651855
    3. ' )' → logprob: -8.500694274902344
    4. '   ' → logprob: -10.125694274902344
    5. ')
' → logprob: -11.250694274902344
    6. '%' → logprob: -12.750694274902344
    7. '       ' → logprob: -13.125694274902344
    8. ' %' → logprob: -14.500694274902344
    9. '```' → logprob: -15.500694274902344
    10. ' ' → logprob: -15.750694274902344

Token 545: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.21366988122463226
    2. '   ' → logprob: -2.338669776916504
    3. '%' → logprob: -2.713669776916504
    4. '
' → logprob: -4.213669776916504
    5. ')' → logprob: -4.338669776916504
    6. '<|end|>' → logprob: -7.213669776916504
    7. ')%' → logprob: -8.088669776916504
    8. '       ' → logprob: -8.088669776916504
    9. ' 
' → logprob: -9.838669776916504
    10. '<|end|>' → logprob: -10.213669776916504

Token 546: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.9916511178016663
    2. '       ' → logprob: -0.9916511178016663
    3. ' X' → logprob: -1.4916510581970215
    4. '   ' → logprob: -3.4916510581970215
    5. ')' → logprob: -6.8666510581970215
    6. '
' → logprob: -8.49165153503418
    7. '	X' → logprob: -8.49165153503418
    8. '<|end|>' → logprob: -8.61665153503418
    9. ' if' → logprob: -8.86665153503418
    10. ' ' → logprob: -8.99165153503418

Token 547: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2578061521053314
    2. ' +=' → logprob: -1.5078061819076538
    3. '=' → logprob: -5.257806301116943
    4. ' =' → logprob: -8.382805824279785
    5. '+' → logprob: -9.007805824279785
    6. '_add' → logprob: -9.007805824279785
    7. '_' → logprob: -10.007805824279785
    8. 'X' → logprob: -10.257805824279785
    9. ' ^=' → logprob: -10.507805824279785
    10. ']+=' → logprob: -11.132805824279785

Token 548: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0007288746419362724
    2. ' (' → logprob: -7.375729084014893
    3. '(' → logprob: -9.625728607177734
    4. 'X' → logprob: -10.250728607177734
    5. '(x' → logprob: -14.500728607177734
    6. ' X' → logprob: -15.375728607177734
    7. '(A' → logprob: -16.500728607177734
    8. '   ' → logprob: -16.750728607177734
    9. '(int' → logprob: -17.375728607177734
    10. '(S' → logprob: -18.000728607177734

Token 549: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -8.41866585687967e-06
    2. ' X' → logprob: -11.750008583068848
    3. '(X' → logprob: -14.625008583068848
    4. '   ' → logprob: -18.75000762939453
    5. '	X' → logprob: -19.00000762939453
    6. '_X' → logprob: -19.50000762939453
    7. '(' → logprob: -19.87500762939453
    8. ')' → logprob: -20.00000762939453
    9. '>X' → logprob: -20.50000762939453
    10. ' (' → logprob: -21.50000762939453

Token 550: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868716359138489
    2. ' +' → logprob: -1.136871576309204
    3. '+x' → logprob: -15.511871337890625
    4. ' +
' → logprob: -16.261871337890625
    5. ' ' → logprob: -16.761871337890625
    6. 'X' → logprob: -16.886871337890625
    7. '+A' → logprob: -17.136871337890625
    8. '＋' → logprob: -17.261871337890625
    9. '+
' → logprob: -17.261871337890625
    10. ')' → logprob: -17.386871337890625

Token 551: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.009797057136893272
    2. ' X' → logprob: -4.634797096252441
    3. 'int' → logprob: -10.259797096252441
    4. ' int' → logprob: -12.384797096252441
    5. ')' → logprob: -14.259797096252441
    6. '(X' → logprob: -14.509797096252441
    7. ' ' → logprob: -15.384797096252441
    8. '   ' → logprob: -16.009796142578125
    9. '_X' → logprob: -16.384796142578125
    10. '	X' → logprob: -16.509796142578125

Token 552: '_add' (ID: 8390)
  Prédit: '_add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -6.253713218029588e-05
    2. ')' → logprob: -10.375062942504883
    3. '+' → logprob: -10.750062942504883
    4. 'add' → logprob: -12.750062942504883
    5. ')add' → logprob: -13.250062942504883
    6. ')%' → logprob: -13.750062942504883
    7. '_Add' → logprob: -13.750062942504883
    8. 'Add' → logprob: -14.125062942504883
    9. '_)' → logprob: -14.375062942504883
    10. '_' → logprob: -14.375062942504883

Token 553: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004474732850212604
    2. ' )' → logprob: -7.7504472732543945
    3. ')%' → logprob: -11.000447273254395
    4. '   ' → logprob: -16.75044822692871
    5. '%' → logprob: -17.12544822692871
    6. ' ' → logprob: -17.75044822692871
    7. ' %' → logprob: -18.87544822692871
    8. ')
' → logprob: -19.12544822692871
    9. ' ' → logprob: -19.50044822692871
    10. '```' → logprob: -19.62544822692871

Token 554: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026306219398975372
    2. '%' → logprob: -3.65130615234375
    3. ')' → logprob: -12.90130615234375
    4. ' %=' → logprob: -14.40130615234375
    5. ' ' → logprob: -14.65130615234375
    6. ' mod' → logprob: -14.77630615234375
    7. '
' → logprob: -14.77630615234375
    8. ' %
' → logprob: -15.02630615234375
    9. ')%' → logprob: -15.15130615234375
    10. ' ' → logprob: -15.27630615234375

Token 555: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -15.0
    3. '(mod' → logprob: -19.125
    4. '```' → logprob: -22.375
    5. '	mod' → logprob: -23.875
    6. 'md' → logprob: -24.875
    7. '
' → logprob: -25.0
    8. 'moder' → logprob: -25.25
    9. 'mo' → logprob: -25.75
    10. 'modal' → logprob: -25.875

Token 556: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041947141289711
    2. '<|end|>' → logprob: -8.750419616699219
    3. ' return' → logprob: -9.625419616699219
    4. 'return' → logprob: -9.750419616699219
    5. '    
' → logprob: -9.875419616699219
    6. '
' → logprob: -10.000419616699219
    7. '	return' → logprob: -10.375419616699219
    8. ',' → logprob: -13.500419616699219
    9. '<|end|>' → logprob: -13.500419616699219
    10. '       ' → logprob: -13.625419616699219

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05037552863359451
    2. '<|end|>' → logprob: -3.050375461578369
    3. ' return' → logprob: -7.800375461578369
    4. '	return' → logprob: -8.300375938415527
    5. '<|end|>' → logprob: -8.300375938415527
    6. '
' → logprob: -8.425375938415527
    7. '    
' → logprob: -8.675375938415527
    8. 'return' → logprob: -8.800375938415527
    9. '```' → logprob: -9.425375938415527
    10. ':return' → logprob: -9.550375938415527

Token 558: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001197966979816556
    2. ' return' → logprob: -7.501197814941406
    3. 'return' (adapté à ' return') → logprob: -7.626197814941406
    4. '	return' → logprob: -9.126197814941406
    5. '<|end|>' → logprob: -10.126197814941406
    6. '    
' → logprob: -13.626197814941406
    7. ':return' → logprob: -13.751197814941406
    8. ' ' → logprob: -13.751197814941406
    9. '       ' → logprob: -14.001197814941406
    10. '```' → logprob: -14.001197814941406

Token 559: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00020354038861114532
    2. ' X' → logprob: -8.500203132629395
    3. '(X' → logprob: -17.62520408630371
    4. ' ' → logprob: -18.25020408630371
    5. '	X' → logprob: -19.37520408630371
    6. '_X' → logprob: -21.12520408630371
    7. '(' → logprob: -21.25020408630371
    8. '```' → logprob: -21.25020408630371
    9. '`' → logprob: -21.50020408630371
    10. ' ' → logprob: -21.62520408630371

Token 560: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' calculate' (ID: 17950)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8956955075263977
    2. 'calculate' → logprob: -1.145695447921753
    3. ' main' → logprob: -1.520695447921753
    4. ' calculate' → logprob: -3.145695447921753
    5. 'compute' → logprob: -5.395695686340332
    6. 'solve' → logprob: -5.770695686340332
    7. ' solve' → logprob: -6.395695686340332
    8. ' compute' → logprob: -7.145695686340332
    9. 'make' → logprob: -8.145695686340332
    10. 'sum' → logprob: -8.520695686340332

Token 563: '_Y' (ID: 22477)
  Prédit: '_Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_Y' → logprob: -0.8016401529312134
    2. 'Y' → logprob: -1.0516401529312134
    3. '_S' → logprob: -2.926640033721924
    4. '_X' → logprob: -3.051640033721924
    5. 'X' → logprob: -3.426640033721924
    6. '_A' → logprob: -4.801640033721924
    7. 'S' → logprob: -4.926640033721924
    8. 'Z' → logprob: -5.301640033721924
    9. '_Z' → logprob: -5.301640033721924
    10. '_B' → logprob: -5.426640033721924

Token 564: '(C' (ID: 5559)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003909927327185869
    2. '(' → logprob: -7.875391006469727
    3. ' (' → logprob: -12.375391006469727
    4. 'def' → logprob: -13.000391006469727
    5. '(n' → logprob: -14.125391006469727
    6. '(
' → logprob: -14.125391006469727
    7. '(M' → logprob: -14.375391006469727
    8. '((' → logprob: -14.750391006469727
    9. '():' → logprob: -14.750391006469727
    10. '(X' → logprob: -15.375391006469727

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003230686706956476
    2. ',N' → logprob: -8.625323295593262
    3. ' ,' → logprob: -9.000323295593262
    4. 'def' → logprob: -11.625323295593262
    5. 'N' → logprob: -12.875323295593262
    6. '   ' → logprob: -13.125323295593262
    7. ',
' → logprob: -13.375323295593262
    8. '```' → logprob: -13.875323295593262
    9. '(N' → logprob: -14.000323295593262
    10. ' ' → logprob: -14.625323295593262

Token 566: ' A' (ID: 355)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.11754430085420609
    2. 'N' → logprob: -2.242544412612915
    3. ' D' → logprob: -6.867544174194336
    4. 'C' → logprob: -6.992544174194336
    5. 'A' → logprob: -7.242544174194336
    6. 'M' → logprob: -7.742544174194336
    7. 'mod' → logprob: -7.992544174194336
    8. 'B' → logprob: -8.117544174194336
    9. 'X' → logprob: -8.367544174194336
    10. 'def' → logprob: -8.992544174194336

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023298001906368881
    2. ',B' → logprob: -9.125232696533203
    3. ' ,' → logprob: -9.250232696533203
    4. 'def' → logprob: -11.625232696533203
    5. 'B' → logprob: -11.750232696533203
    6. ',
' → logprob: -12.625232696533203
    7. ',N' → logprob: -13.125232696533203
    8. '):
' → logprob: -13.500232696533203
    9. '```' → logprob: -14.500232696533203
    10. '   ' → logprob: -14.625232696533203

Token 568: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005441620480269194
    2. ' B' → logprob: -5.255441665649414
    3. 'N' → logprob: -8.630441665649414
    4. 'C' → logprob: -11.130441665649414
    5. 'mod' → logprob: -12.505441665649414
    6. 'D' → logprob: -13.005441665649414
    7. ' N' → logprob: -13.130441665649414
    8. 'def' → logprob: -13.630441665649414
    9. ' ' → logprob: -13.880441665649414
    10. '   ' → logprob: -14.130441665649414

Token 569: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -11.000021934509277
    3. 'def' → logprob: -13.250021934509277
    4. ',N' → logprob: -13.750021934509277
    5. '):
' → logprob: -14.625021934509277
    6. ',
' → logprob: -15.125021934509277
    7. '```' → logprob: -15.375021934509277
    8. '   ' → logprob: -15.500021934509277
    9. 'I' → logprob: -15.750021934509277
    10. '_,' → logprob: -15.875021934509277

Token 570: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1254696547985077
    2. 'C' → logprob: -3.25046968460083
    3. 'mod' → logprob: -3.25046968460083
    4. ' N' → logprob: -4.12546968460083
    5. 'X' → logprob: -4.25046968460083
    6. 'pow' → logprob: -6.00046968460083
    7. 'D' → logprob: -6.12546968460083
    8. ' mod' → logprob: -6.25046968460083
    9. ' C' → logprob: -6.75046968460083
    10. ' X' → logprob: -8.000469207763672

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',
' → logprob: -15.000020027160645
    4. '   ' → logprob: -15.250020027160645
    5. 'def' → logprob: -15.250020027160645
    6. '):
' → logprob: -15.875020027160645
    7. '```' → logprob: -16.87502098083496
    8. 'mod' → logprob: -17.50002098083496
    9. ' ' → logprob: -17.50002098083496
    10. '
' → logprob: -17.62502098083496

Token 572: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10552653670310974
    2. ' mod' → logprob: -2.8555264472961426
    3. 'com' → logprob: -3.4805264472961426
    4. 'comb' → logprob: -5.480526447296143
    5. ' comb' → logprob: -6.230526447296143
    6. 'pow' → logprob: -6.355526447296143
    7. 'X' → logprob: -6.480526447296143
    8. 'C' → logprob: -6.855526447296143
    9. ' X' → logprob: -7.980526447296143
    10. ' C' → logprob: -8.6055269241333

Token 573: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.500009536743164
    3. '):' → logprob: -12.500009536743164
    4. '):
' → logprob: -13.750009536743164
    5. ' ,' → logprob: -14.250009536743164
    6. ',
' → logprob: -14.375009536743164
    7. 'com' → logprob: -17.375009536743164
    8. 'def' → logprob: -17.500009536743164
    9. '_,' → logprob: -17.625009536743164
    10. '```' → logprob: -17.750009536743164

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020384411327540874
    2. '    
' → logprob: -7.252038478851318
    3. 'Y' → logprob: -7.627038478851318
    4. '
' → logprob: -8.50203800201416
    5. 'result' → logprob: -8.75203800201416
    6. ' result' → logprob: -9.12703800201416
    7. ' Y' → logprob: -9.12703800201416
    8. 'sum' → logprob: -10.00203800201416
    9. ' return' → logprob: -10.25203800201416
    10. 'return' → logprob: -10.50203800201416

Token 575: ' return' (ID: 622)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.13326208293437958
    2. 'result' → logprob: -3.2582621574401855
    3. 'return' (adapté à ' return') → logprob: -3.7582621574401855
    4. 'pow' → logprob: -4.1332621574401855
    5. 'total' → logprob: -4.2582621574401855
    6. 'sum' → logprob: -5.1332621574401855
    7. 'res' → logprob: -5.2582621574401855
    8. 'if' → logprob: -5.6332621574401855
    9. 'y' → logprob: -5.7582621574401855
    10. 'power' → logprob: -6.3832621574401855

Token 576: ' (' (ID: 350)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.7854852676391602
    2. 'pow' → logprob: -1.0354852676391602
    3. '(pow' → logprob: -2.53548526763916
    4. '((' → logprob: -2.91048526763916
    5. ' (' → logprob: -3.91048526763916
    6. '(' → logprob: -4.66048526763916
    7. ' pow' → logprob: -4.66048526763916
    8. 'C' → logprob: -5.66048526763916
    9. '(((' → logprob: -5.78548526763916
    10. '0' → logprob: -6.16048526763916

Token 577: '100' (ID: 1353)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.41280150413513184
    2. 'C' → logprob: -1.7878015041351318
    3. '(C' → logprob: -2.037801504135132
    4. '(pow' → logprob: -3.912801504135132
    5. '((' → logprob: -5.162801742553711
    6. '(com' → logprob: -5.287801742553711
    7. 'comb' → logprob: -6.037801742553711
    8. '(c' → logprob: -6.787801742553711
    9. '(A' → logprob: -6.912801742553711
    10. '(' → logprob: -6.912801742553711

Token 578: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25540924072265625
    2. ' *' → logprob: -2.1304092407226562
    3. ')' → logprob: -3.0054092407226562
    4. '**' → logprob: -3.8804092407226562
    5. '000' → logprob: -4.380409240722656
    6. '%' → logprob: -4.505409240722656
    7. '-' → logprob: -5.630409240722656
    8. '0' → logprob: -5.630409240722656
    9. ' -' → logprob: -6.005409240722656
    10. '*C' → logprob: -7.255409240722656

Token 579: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.03677820786833763
    2. '(C' → logprob: -4.286777973175049
    3. 'A' → logprob: -5.036777973175049
    4. 'B' → logprob: -5.411777973175049
    5. '((' → logprob: -5.536777973175049
    6. 'mod' → logprob: -6.286777973175049
    7. 'N' → logprob: -6.286777973175049
    8. ' C' → logprob: -7.286777973175049
    9. 'pow' → logprob: -7.286777973175049
    10. '(A' → logprob: -7.661777973175049

Token 580: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026099022943526506
    2. ')*' → logprob: -6.752609729766846
    3. ')%' → logprob: -7.002609729766846
    4. ' )' → logprob: -8.252610206604004
    5. '*' → logprob: -8.377610206604004
    6. '   ' → logprob: -11.752610206604004
    7. ')*(' → logprob: -11.877610206604004
    8. ' *' → logprob: -12.002610206604004
    9. '**' → logprob: -13.252610206604004
    10. '))' → logprob: -13.502610206604004

Token 581: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8156043887138367
    2. '*' → logprob: -1.1906044483184814
    3. ' *' → logprob: -2.1906044483184814
    4. '%' → logprob: -2.9406044483184814
    5. 'def' → logprob: -3.1906044483184814
    6. '<|end|>' → logprob: -4.190604209899902
    7. ')%' → logprob: -4.565604209899902
    8. ',' → logprob: -5.065604209899902
    9. ' %' → logprob: -5.315604209899902
    10. '
' → logprob: -6.315604209899902

Token 582: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.16025246679782867
    2. 'A' → logprob: -3.035252571105957
    3. '(pow' → logprob: -3.410252571105957
    4. '(A' → logprob: -3.910252571105957
    5. '((' → logprob: -4.535252571105957
    6. ' pow' → logprob: -4.535252571105957
    7. '(C' → logprob: -4.785252571105957
    8. '1' → logprob: -5.535252571105957
    9. 'C' → logprob: -6.035252571105957
    10. '(' → logprob: -6.285252571105957

Token 583: '_mod' (ID: 15325)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.7669775485992432
    2. '_mod' → logprob: -0.8919775485992432
    3. '(' → logprob: -2.141977548599243
    4. '((' → logprob: -5.391977310180664
    5. 'mod' → logprob: -5.891977310180664
    6. '(B' → logprob: -7.891977310180664
    7. '(
' → logprob: -8.766977310180664
    8. '(Mod' → logprob: -8.891977310180664
    9. 'Mod' → logprob: -9.516977310180664
    10. ' (' → logprob: -9.641977310180664

Token 584: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.03917880728840828
    2. '(' → logprob: -3.4141788482666016
    3. '(B' → logprob: -5.664178848266602
    4. '((' → logprob: -6.289178848266602
    5. '(
' → logprob: -9.414178848266602
    6. 'A' → logprob: -9.664178848266602
    7. '(C' → logprob: -10.789178848266602
    8. ' (' → logprob: -11.414178848266602
    9. '(pow' → logprob: -12.539178848266602
    10. '(((' → logprob: -13.164178848266602

Token 585: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21581730246543884
    2. '+B' → logprob: -2.0908172130584717
    3. ',' → logprob: -2.7158172130584717
    4. ' +' → logprob: -5.965817451477051
    5. '   ' → logprob: -7.590817451477051
    6. ' ,' → logprob: -8.34081745147705
    7. '+,' → logprob: -8.34081745147705
    8. '%' → logprob: -8.84081745147705
    9. 'B' → logprob: -9.09081745147705
    10. ',B' → logprob: -9.34081745147705

Token 586: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009153862483799458
    2. ' B' → logprob: -7.00091552734375
    3. '   ' → logprob: -14.00091552734375
    4. ' ' → logprob: -14.00091552734375
    5. '(' → logprob: -14.25091552734375
    6. '(B' → logprob: -15.00091552734375
    7. '+B' → logprob: -15.00091552734375
    8. '100' → logprob: -15.12591552734375
    9. '	B' → logprob: -15.75091552734375
    10. ')' → logprob: -16.25091552734375

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003025729674845934
    2. ' ,' → logprob: -8.1253023147583
    3. '   ' → logprob: -12.8753023147583
    4. '%' → logprob: -13.8753023147583
    5. '%,' → logprob: -14.2503023147583
    6. ',N' → logprob: -14.5003023147583
    7. '2' → logprob: -14.7503023147583
    8. ',
' → logprob: -14.7503023147583
    9. '1' → logprob: -15.6253023147583
    10. ')' → logprob: -15.6253023147583

Token 588: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005297196563333273
    2. '(' → logprob: -6.1302971839904785
    3. '100' → logprob: -6.2552971839904785
    4. ' ' → logprob: -7.0052971839904785
    5. 'N' → logprob: -8.630297660827637
    6. '   ' → logprob: -10.255297660827637
    7. '1' → logprob: -10.755297660827637
    8. ' (' → logprob: -11.630297660827637
    9. '4' → logprob: -11.755297660827637
    10. '10' → logprob: -12.005297660827637

Token 589: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01967776194214821
    2. '(' → logprob: -4.394677639007568
    3. '100' → logprob: -5.019677639007568
    4. 'N' → logprob: -8.394678115844727
    5. '1' → logprob: -9.519678115844727
    6. '3' → logprob: -9.644678115844727
    7. ' ' → logprob: -9.894678115844727
    8. '4' → logprob: -10.394678115844727
    9. '   ' → logprob: -10.644678115844727
    10. 'mod' → logprob: -11.394678115844727

Token 590: '*N' (ID: 107360)
  Prédit: '*N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.004420386161655188
    2. 'N' → logprob: -5.504420280456543
    3. '*' → logprob: -8.129420280456543
    4. ' *' → logprob: -10.129420280456543
    5. '*(' → logprob: -13.004420280456543
    6. '   ' → logprob: -13.254420280456543
    7. '
' → logprob: -14.129420280456543
    8. '```' → logprob: -14.379420280456543
    9. '(' → logprob: -14.504420280456543
    10. '*n' → logprob: -14.754420280456543

Token 591: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0014109472976997495
    2. ' -' → logprob: -6.626410961151123
    3. ',' → logprob: -9.751410484313965
    4. ')' → logprob: -11.376410484313965
    5. '   ' → logprob: -11.876410484313965
    6. '1' → logprob: -12.626410484313965
    7. ' ' → logprob: -13.376410484313965
    8. ' ,' → logprob: -13.751410484313965
    9. '```' → logprob: -14.126410484313965
    10. '+' → logprob: -15.126410484313965

Token 592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01860065944492817
    2. '2' → logprob: -4.0186004638671875
    3. '-' → logprob: -7.7686004638671875
    4. ' ' → logprob: -11.643600463867188
    5. '0' → logprob: -12.143600463867188
    6. '3' → logprob: -12.393600463867188
    7. '   ' → logprob: -12.393600463867188
    8. '```' → logprob: -13.268600463867188
    9. '
' → logprob: -13.768600463867188
    10. '(' → logprob: -13.768600463867188

Token 593: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005617309361696243
    2. ' ,' → logprob: -7.750561714172363
    3. '-' → logprob: -9.500561714172363
    4. ' -' → logprob: -10.750561714172363
    5. ')' → logprob: -11.000561714172363
    6. '   ' → logprob: -11.125561714172363
    7. '```' → logprob: -13.750561714172363
    8. '+' → logprob: -14.750561714172363
    9. '%' → logprob: -15.000561714172363
    10. ' ' → logprob: -15.625561714172363

Token 594: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5759394764900208
    2. ' mod' → logprob: -0.8259394764900208
    3. '	mod' → logprob: -17.700939178466797
    4. '(mod' → logprob: -18.575939178466797
    5. '_mod' → logprob: -19.075939178466797
    6. ')' → logprob: -19.200939178466797
    7. ' modulo' → logprob: -19.825939178466797
    8. ' modulus' → logprob: -19.950939178466797
    9. ' ' → logprob: -20.325939178466797
    10. ' мод' → logprob: -20.450939178466797

Token 595: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.999452772201039e-05
    2. ')
' → logprob: -11.375029563903809
    3. ' )' → logprob: -11.500029563903809
    4. '   ' → logprob: -12.250029563903809
    5. ')%' → logprob: -14.000029563903809
    6. ')return' → logprob: -15.125029563903809
    7. '<|end|>' → logprob: -15.125029563903809
    8. '),' → logprob: -15.375029563903809
    9. ')`' → logprob: -15.375029563903809
    10. '))' → logprob: -15.500029563903809

Token 596: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: ' calculate' (ID: 17950)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1898488849401474
    2. 'calculate' → logprob: -1.9398488998413086
    3. ' main' → logprob: -3.8148488998413086
    4. 'solve' → logprob: -6.314848899841309
    5. ' calculate' → logprob: -6.439848899841309
    6. 'compute' → logprob: -6.689848899841309
    7. 'def' → logprob: -7.064848899841309
    8. 'pow' → logprob: -7.939848899841309
    9. 'combine' → logprob: -8.814848899841309
    10. 'partial' → logprob: -9.064848899841309

Token 598: '_ans' (ID: 146254)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.15779820084571838
    2. '_Z' → logprob: -2.7827982902526855
    3. 'X' → logprob: -2.9077982902526855
    4. '_X' → logprob: -4.6577982902526855
    5. 'Y' → logprob: -5.2827982902526855
    6. '(' → logprob: -6.6577982902526855
    7. 'C' → logprob: -6.7827982902526855
    8. '_' → logprob: -6.7827982902526855
    9. '_A' → logprob: -6.9077982902526855
    10. '_S' → logprob: -6.9077982902526855

Token 599: '(X' (ID: 17061)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.013111287727952003
    2. '(' → logprob: -4.388111114501953
    3. '(C' → logprob: -7.888111114501953
    4. 'def' → logprob: -9.013111114501953
    5. '(A' → logprob: -10.263111114501953
    6. '(
' → logprob: -10.388111114501953
    7. '((' → logprob: -11.513111114501953
    8. ' (' → logprob: -12.013111114501953
    9. '(X' → logprob: -12.263111114501953
    10. '(def' → logprob: -12.388111114501953

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',
' → logprob: -12.62501049041748
    3. ',C' → logprob: -13.37501049041748
    4. ',N' → logprob: -13.37501049041748
    5. 'def' → logprob: -13.75001049041748
    6. ' ,' → logprob: -14.37501049041748
    7. ',A' → logprob: -14.37501049041748
    8. '   ' → logprob: -14.50001049041748
    9. ')' → logprob: -15.75001049041748
    10. '‌,' → logprob: -15.87501049041748

Token 601: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.040098175406455994
    2. ' Y' → logprob: -3.290098190307617
    3. 'C' → logprob: -6.415098190307617
    4. ' C' → logprob: -8.290098190307617
    5. '100' → logprob: -9.665098190307617
    6. ' ' → logprob: -10.665098190307617
    7. 'N' → logprob: -11.040098190307617
    8. 'mod' → logprob: -11.290098190307617
    9. ')' → logprob: -11.540098190307617
    10. 'X' → logprob: -12.165098190307617

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6993586421012878
    2. '):
' → logprob: -1.0743587017059326
    3. '):' → logprob: -1.8243587017059326
    4. '):

' → logprob: -9.449358940124512
    5. ',
' → logprob: -9.824358940124512
    6. ')' → logprob: -10.199358940124512
    7. '):
' → logprob: -10.324358940124512
    8. '   ' → logprob: -10.574358940124512
    9. ' ,' → logprob: -11.449358940124512
    10. ' ):
' → logprob: -12.074358940124512

Token 603: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.14343507587909698
    2. ' mod' → logprob: -2.018435001373291
    3. 'pow' → logprob: -8.39343547821045
    4. '100' → logprob: -8.76843547821045
    5. 'C' → logprob: -8.89343547821045
    6. ' C' → logprob: -9.51843547821045
    7. 'N' → logprob: -10.76843547821045
    8. ' ' → logprob: -10.83093547821045
    9. '(mod' → logprob: -11.26843547821045
    10. 'X' → logprob: -11.51843547821045

Token 604: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06206370145082474
    2. '):
' → logprob: -2.812063694000244
    3. ',' → logprob: -9.687064170837402
    4. '):
' → logprob: -10.812064170837402
    5. ')' → logprob: -11.687064170837402
    6. '):

' → logprob: -12.937064170837402
    7. '   ' → logprob: -13.437064170837402
    8. ':' → logprob: -14.062064170837402
    9. ' ):' → logprob: -15.062064170837402
    10. '**' → logprob: -15.437064170837402

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40224477648735046
    2. 'return' → logprob: -1.1522448062896729
    3. ' return' → logprob: -5.027244567871094
    4. 'inv' → logprob: -5.527244567871094
    5. 'if' → logprob: -5.652244567871094
    6. 'ans' → logprob: -7.902244567871094
    7. 'inverse' → logprob: -8.027244567871094
    8. 'result' → logprob: -8.777244567871094
    9. '```' → logprob: -9.027244567871094
    10. ' inv' → logprob: -9.902244567871094

Token 606: ' X' (ID: 2127)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016367359086871147
    2. ' return' → logprob: -4.641367435455322
    3. 'inv' → logprob: -5.391367435455322
    4. 'ans' → logprob: -7.266367435455322
    5. 'den' → logprob: -7.891367435455322
    6. '   ' → logprob: -8.141366958618164
    7. 'if' → logprob: -8.391366958618164
    8. 'inverse' → logprob: -8.391366958618164
    9. 'result' → logprob: -9.641366958618164
    10. ' inv' → logprob: -9.766366958618164

Token 607: '_mod' (ID: 15325)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6722456812858582
    2. ' *' → logprob: -0.9222456812858582
    3. '%' → logprob: -2.922245740890503
    4. ' %' → logprob: -4.297245502471924
    5. '=' → logprob: -4.422245502471924
    6. ' =' → logprob: -5.047245502471924
    7. ' %=' → logprob: -5.672245502471924
    8. '+' → logprob: -7.422245502471924
    9. '<|end|>' → logprob: -7.672245502471924
    10. '%=' → logprob: -7.797245502471924

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20567819476127625
    2. ' =' → logprob: -1.8306782245635986
    3. '%' → logprob: -4.0806779861450195
    4. ' %=' → logprob: -5.2056779861450195
    5. ' %' → logprob: -6.5806779861450195
    6. ')' → logprob: -7.3306779861450195
    7. '%=' → logprob: -7.4556779861450195
    8. ',' → logprob: -7.8306779861450195
    9. '_' → logprob: -9.33067798614502
    10. '   ' → logprob: -10.95567798614502

Token 609: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0007104054093360901
    2. ' X' → logprob: -7.250710487365723
    3. '(X' → logprob: -15.000710487365723
    4. '	X' → logprob: -16.875709533691406
    5. '   ' → logprob: -17.000709533691406
    6. ' ' → logprob: -17.750709533691406
    7. '(' → logprob: -17.875709533691406
    8. '
' → logprob: -18.500709533691406
    9. '  ' → logprob: -19.250709533691406
    10. '_X' → logprob: -19.375709533691406

Token 610: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00020449401927180588
    2. ' X' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. ')' → logprob: -15.250204086303711
    5. '(X' → logprob: -15.875204086303711
    6. '	X' → logprob: -16.50020408630371
    7. ' ' → logprob: -17.12520408630371
    8. '(' → logprob: -17.50020408630371
    9. '_X' → logprob: -17.62520408630371
    10. '`' → logprob: -17.75020408630371

Token 611: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6016191244125366
    2. '%' → logprob: -1.7266191244125366
    3. '*' → logprob: -2.101619243621826
    4. ' %' → logprob: -2.726619243621826
    5. ' +' → logprob: -3.476619243621826
    6. ')' → logprob: -3.726619243621826
    7. '+' → logprob: -3.851619243621826
    8. ')%' → logprob: -5.101619243621826
    9. ' -' → logprob: -5.726619243621826
    10. ' )' → logprob: -7.726619243621826

Token 612: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008716804906725883
    2. '100' → logprob: -5.383716583251953
    3. ' pow' → logprob: -6.758716583251953
    4. '1' → logprob: -7.258716583251953
    5. 'Y' → logprob: -8.258716583251953
    6. '2' → logprob: -8.258716583251953
    7. 'X' → logprob: -8.758716583251953
    8. '(pow' → logprob: -8.758716583251953
    9. '   ' → logprob: -8.883716583251953
    10. '10' → logprob: -9.008716583251953

Token 613: '100' (ID: 1353)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0014843896497040987
    2. '100' → logprob: -7.376484394073486
    3. ' pow' → logprob: -7.751484394073486
    4. '1' → logprob: -9.376483917236328
    5. 'X' → logprob: -9.876483917236328
    6. '(pow' → logprob: -9.876483917236328
    7. 'Y' → logprob: -10.376483917236328
    8. '10' → logprob: -10.876483917236328
    9. '2' → logprob: -10.876483917236328
    10. 'mod' → logprob: -11.126483917236328

Token 614: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003855093673337251
    2. ')%' → logprob: -7.875385284423828
    3. ' )' → logprob: -13.250385284423828
    4. '^{-' → logprob: -14.875385284423828
    5. '')' → logprob: -15.000385284423828
    6. '**' → logprob: -15.000385284423828
    7. '0' → logprob: -15.250385284423828
    8. '   ' → logprob: -15.250385284423828
    9. 'inv' → logprob: -15.250385284423828
    10. '%' → logprob: -15.250385284423828

Token 615: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.43855687975883484
    2. '%' → logprob: -1.0635569095611572
    3. ')' → logprob: -4.688556671142578
    4. ')%' → logprob: -8.438556671142578
    5. '   ' → logprob: -8.563556671142578
    6. '
' → logprob: -9.188556671142578
    7. '<|end|>' → logprob: -9.813556671142578
    8. ' ' → logprob: -11.688556671142578
    9. '```' → logprob: -12.313556671142578
    10. 'def' → logprob: -12.438556671142578

Token 616: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.2729995988775045e-06
    2. ' mod' → logprob: -12.000006675720215
    3. '(mod' → logprob: -17.0000057220459
    4. '	mod' → logprob: -21.1250057220459
    5. '   ' → logprob: -22.6250057220459
    6. '```' → logprob: -22.7500057220459
    7. '
' → logprob: -23.5000057220459
    8. 'modal' → logprob: -23.5000057220459
    9. 'moder' → logprob: -24.1250057220459
    10. ' ' → logprob: -24.3750057220459

Token 617: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43969354033470154
    2. '
' → logprob: -1.314693570137024
    3. '<|end|>' → logprob: -2.6896934509277344
    4. ' return' → logprob: -5.689693450927734
    5. 'return' → logprob: -5.814693450927734
    6. '*' → logprob: -5.939693450927734
    7. ' ' → logprob: -6.064693450927734
    8. ')' → logprob: -6.189693450927734
    9. '    
' → logprob: -6.564693450927734
    10. 'def' → logprob: -6.689693450927734

Token 618: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6612713932991028
    2. '   ' → logprob: -0.7862713932991028
    3. '
' → logprob: -4.911271572113037
    4. ' return' → logprob: -5.411271572113037
    5. '```' → logprob: -5.536271572113037
    6. ' ' → logprob: -5.786271572113037
    7. '<|end|>' → logprob: -6.161271572113037
    8. 'Y' → logprob: -6.286271572113037
    9. '    
' → logprob: -6.911271572113037
    10. 'if' → logprob: -7.161271572113037

Token 619: ' inv' (ID: 1827)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.48911425471305847
    2. 'inv' (adapté à ' inv') → logprob: -1.3641142845153809
    3. 'ans' → logprob: -2.989114284515381
    4. 'return' → logprob: -3.239114284515381
    5. 'rev' → logprob: -3.989114284515381
    6. 'den' → logprob: -4.739114284515381
    7. 'inverse' → logprob: -5.739114284515381
    8. 'X' → logprob: -5.864114284515381
    9. 'mod' → logprob: -6.114114284515381
    10. 'answer' → logprob: -6.489114284515381

Token 620: 'Y' (ID: 56)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021758420392870903
    2. ' =' → logprob: -4.146758556365967
    3. '100' → logprob: -5.771758556365967
    4. '_' → logprob: -6.646758556365967
    5. 'X' → logprob: -7.146758556365967
    6. 'Y' → logprob: -9.146758079528809
    7. '_mod' → logprob: -9.771758079528809
    8. '_X' → logprob: -9.771758079528809
    9. '_=' → logprob: -9.771758079528809
    10. 'mod' → logprob: -10.271758079528809

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07026584446430206
    2. ' =' → logprob: -2.695265769958496
    3. '_' → logprob: -8.195265769958496
    4. '_=' → logprob: -10.195265769958496
    5. '=_' → logprob: -12.695265769958496
    6. '   ' → logprob: -12.695265769958496
    7. '_mod' → logprob: -13.445265769958496
    8. '  ' → logprob: -13.695265769958496
    9. 'Y' → logprob: -13.695265769958496
    10. ')' → logprob: -13.945265769958496

Token 622: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.000627014203928411
    2. ' pow' → logprob: -7.375627040863037
    3. '(pow' → logprob: -14.500626564025879
    4. '   ' → logprob: -17.750627517700195
    5. 'power' → logprob: -19.375627517700195
    6. 'p' → logprob: -19.500627517700195
    7. '_pow' → logprob: -19.500627517700195
    8. '.pow' → logprob: -19.875627517700195
    9. 'Pow' → logprob: -20.000627517700195
    10. 'mod' → logprob: -20.500627517700195

Token 623: '_mod' (ID: 15325)
  Prédit: '(Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0017884672852233052
    2. '_mod' → logprob: -6.87678861618042
    3. '(' → logprob: -7.25178861618042
    4. 'Y' → logprob: -11.001788139343262
    5. 'mod' → logprob: -11.251788139343262
    6. '(
' → logprob: -12.126788139343262
    7. '(Mod' → logprob: -12.251788139343262
    8. 'Mod' → logprob: -12.876788139343262
    9. '(y' → logprob: -13.751788139343262
    10. ' (' → logprob: -14.751788139343262

Token 624: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.0017992928624153137
    2. 'Y' → logprob: -6.5017991065979
    3. '(' → logprob: -8.126799583435059
    4. '(
' → logprob: -14.251799583435059
    5. '<|end|>' → logprob: -15.751799583435059
    6. '\(' → logprob: -16.001798629760742
    7. '```' → logprob: -16.001798629760742
    8. '	Y' → logprob: -16.126798629760742
    9. ',Y' → logprob: -16.251798629760742
    10. '(y' → logprob: -17.001798629760742

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023611404467374086
    2. '(' → logprob: -6.127361297607422
    3. ' ,' → logprob: -9.752361297607422
    4. '(X' → logprob: -10.127361297607422
    5. '(mod' → logprob: -10.627361297607422
    6. ',X' → logprob: -11.002361297607422
    7. ')' → logprob: -11.377361297607422
    8. 'mod' → logprob: -12.002361297607422
    9. '(Mod' → logprob: -12.502361297607422
    10. '```' → logprob: -12.877361297607422

Token 626: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00037037418223917484
    2. ' mod' → logprob: -8.000370025634766
    3. '(mod' → logprob: -10.500370025634766
    4. '   ' → logprob: -12.250370025634766
    5. '	mod' → logprob: -13.500370025634766
    6. 'modal' → logprob: -13.875370025634766
    7. '.mod' → logprob: -16.125370025634766
    8. ' ' → logprob: -16.625370025634766
    9. '  ' → logprob: -17.625370025634766
    10. '-' → logprob: -18.000370025634766

Token 627: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.5491004129871726e-05
    2. ' -' → logprob: -10.000045776367188
    3. '```' → logprob: -17.625045776367188
    4. '−' → logprob: -19.875045776367188
    5. '2' → logprob: -20.375045776367188
    6. '()-' → logprob: -21.125045776367188
    7. ''-' → logprob: -21.625045776367188
    8. ' ' → logprob: -21.750045776367188
    9. '–' → logprob: -22.000045776367188
    10. '-
' → logprob: -22.125045776367188

Token 628: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '```' → logprob: -15.750001907348633
    5. '
' → logprob: -18.125001907348633
    6. ' -' → logprob: -18.187501907348633
    7. '   ' → logprob: -18.375001907348633
    8. '3' → logprob: -18.937501907348633
    9. '۲' → logprob: -19.187501907348633
    10. '' → logprob: -19.312501907348633

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ')' → logprob: -15.75001335144043
    4. ',
' → logprob: -17.00001335144043
    5. '```' → logprob: -17.12501335144043
    6. 'mod' → logprob: -17.25001335144043
    7. '`,' → logprob: -17.37501335144043
    8. '<|end|>' → logprob: -18.12501335144043
    9. '(mod' → logprob: -18.37501335144043
    10. '',' → logprob: -18.37501335144043

Token 630: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023245595395565033
    2. ' mod' → logprob: -3.7732455730438232
    3. '	mod' → logprob: -16.898244857788086
    4. '(mod' → logprob: -17.523244857788086
    5. ' ' → logprob: -19.148244857788086
    6. '   ' → logprob: -19.398244857788086
    7. ')' → logprob: -19.648244857788086
    8. '_mod' → logprob: -20.898244857788086
    9. '```' → logprob: -20.898244857788086
    10. ' ' → logprob: -22.023244857788086

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ')
' → logprob: -12.000012397766113
    3. ',' → logprob: -12.500012397766113
    4. '   ' → logprob: -13.375012397766113
    5. ' )' → logprob: -13.875012397766113
    6. '<|end|>' → logprob: -16.62501335144043
    7. '),' → logprob: -16.75001335144043
    8. ')

' → logprob: -17.25001335144043
    9. ' ' → logprob: -17.62501335144043
    10. ').' → logprob: -18.37501335144043

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005730479606427252
    2. '
' → logprob: -8.00057315826416
    3. 'return' → logprob: -9.12557315826416
    4. ' return' → logprob: -9.50057315826416
    5. '    
' → logprob: -10.25057315826416
    6. '	return' → logprob: -11.87557315826416
    7. '```' → logprob: -12.37557315826416
    8. '<|end|>' → logprob: -13.50057315826416
    9. '       ' → logprob: -13.75057315826416
    10. '	ans' → logprob: -14.12557315826416

Token 633: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09527656435966492
    2. 'ans' → logprob: -2.9702765941619873
    3. 'answer' → logprob: -3.8452765941619873
    4. 'result' → logprob: -4.470276355743408
    5. '   ' → logprob: -5.595276355743408
    6. '(ans' → logprob: -6.345276355743408
    7. ' return' → logprob: -6.970276355743408
    8. ' ans' → logprob: -9.220276832580566
    9. 'res' → logprob: -9.595276832580566
    10. '(' → logprob: -10.720276832580566

Token 634: ' (' (ID: 350)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03892303258180618
    2. ' (' → logprob: -3.2889230251312256
    3. '(' → logprob: -7.038923263549805
    4. 'X' → logprob: -13.788923263549805
    5. '   ' → logprob: -13.913923263549805
    6. '(x' → logprob: -14.413923263549805
    7. '((' → logprob: -14.788923263549805
    8. '(int' → logprob: -14.913923263549805
    9. '`' → logprob: -15.663923263549805
    10. ' ' → logprob: -15.663923263549805

Token 635: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.01110135205090046
    2. '(X' → logprob: -4.511101245880127
    3. ' X' → logprob: -10.011101722717285
    4. '(' → logprob: -12.261101722717285
    5. ' (' → logprob: -13.261101722717285
    6. '   ' → logprob: -13.386101722717285
    7. '	X' → logprob: -15.261101722717285
    8. '_X' → logprob: -15.886101722717285
    9. ' ' → logprob: -16.26110076904297
    10. '  ' → logprob: -16.63610076904297

Token 636: '_mod' (ID: 15325)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20527002215385437
    2. ' *' → logprob: -1.7052700519561768
    3. '_mod' → logprob: -5.580269813537598
    4. '_' → logprob: -10.705269813537598
    5. '*_' → logprob: -10.830269813537598
    6. ')' → logprob: -11.580269813537598
    7. ' ' → logprob: -12.330269813537598
    8. '   ' → logprob: -12.330269813537598
    9. '_MOD' → logprob: -12.705269813537598
    10. '**' → logprob: -12.830269813537598

Token 637: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20141693949699402
    2. ' *' → logprob: -1.7014169692993164
    3. '**' → logprob: -12.951416969299316
    4. '   ' → logprob: -14.701416969299316
    5. ')' → logprob: -14.826416969299316
    6. '*object' → logprob: -15.826416969299316
    7. ' ' → logprob: -15.951416969299316
    8. '*)' → logprob: -16.826416015625
    9. '```' → logprob: -17.076416015625
    10. '*out' → logprob: -17.201416015625

Token 638: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0007123126997612417
    2. ' inv' → logprob: -7.2507123947143555
    3. '(inv' → logprob: -13.250712394714355
    4. '   ' → logprob: -14.750712394714355
    5. '
' → logprob: -16.62571144104004
    6. '  ' → logprob: -17.37571144104004
    7. ' ' → logprob: -17.75071144104004
    8. '    ' → logprob: -18.00071144104004
    9. '_inv' → logprob: -18.75071144104004
    10. '.inv' → logprob: -18.87571144104004

Token 639: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: 0.0
    2. 'y' → logprob: -17.375
    3. ' Y' → logprob: -18.0
    4. '
' → logprob: -18.75
    5. 'inv' → logprob: -18.875
    6. '_Y' → logprob: -20.5
    7. '	Y' → logprob: -20.5
    8. '(Y' → logprob: -20.875
    9. 'o' → logprob: -21.125
    10. '```' → logprob: -21.625

Token 640: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010831133840838447
    2. ')%' → logprob: -9.25010871887207
    3. ' )' → logprob: -11.37510871887207
    4. '%' → logprob: -14.25010871887207
    5. '   ' → logprob: -16.62510871887207
    6. ' %' → logprob: -17.37510871887207
    7. '}' → logprob: -19.00010871887207
    8. ')
' → logprob: -19.62510871887207
    9. '),' → logprob: -19.62510871887207
    10. '```' → logprob: -20.50010871887207

Token 641: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1602255403995514
    2. ' mod' → logprob: -1.910225510597229
    3. '(mod' → logprob: -13.535225868225098
    4. '	mod' → logprob: -17.03522491455078
    5. ' ' → logprob: -19.16022491455078
    6. '```' → logprob: -19.41022491455078
    7. '_mod' → logprob: -19.53522491455078
    8. ' мод' → logprob: -20.16022491455078
    9. ' ' → logprob: -20.16022491455078
    10. ' modul' → logprob: -20.41022491455078

Token 643: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 644: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12694312632083893
    2. ' main' → logprob: -2.1269431114196777
    3. 'solve' → logprob: -11.376943588256836
    4. ' solve' → logprob: -12.876943588256836
    5. 'calculate' → logprob: -15.126943588256836
    6. 'def' → logprob: -15.501943588256836
    7. '	main' → logprob: -15.626943588256836
    8. 'run' → logprob: -16.251943588256836
    9. 'process' → logprob: -16.626943588256836
    10. 'solution' → logprob: -16.626943588256836

Token 646: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008077251841314137
    2. '():
' → logprob: -7.125807762145996
    3. ' ():' → logprob: -13.375807762145996
    4. '():
' → logprob: -14.125807762145996
    5. '()' → logprob: -14.375807762145996
    6. '(' → logprob: -15.625807762145996
    7. '():

' → logprob: -15.750807762145996
    8. '_' → logprob: -16.87580680847168
    9. '()>' → logprob: -18.37580680847168
    10. '().' → logprob: -19.25080680847168

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7630533576011658
    2. ' mod' → logprob: -1.1380534172058105
    3. 'mod' → logprob: -2.0130534172058105
    4. ' MOD' → logprob: -3.5130534172058105
    5. 'MOD' → logprob: -3.5130534172058105
    6. 'import' → logprob: -5.3880534172058105
    7. '```' → logprob: -5.6380534172058105
    8. ' N' → logprob: -5.6380534172058105
    9. '_mod' → logprob: -5.8880534172058105
    10. ' import' → logprob: -6.3880534172058105

Token 648: ' mod' (ID: 1812)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009015500545501709
    2. 'mod' (adapté à ' mod') → logprob: -5.7590155601501465
    3. ' N' → logprob: -5.8840155601501465
    4. '   ' → logprob: -6.1340155601501465
    5. 'MOD' → logprob: -7.6340155601501465
    6. ' mod' → logprob: -8.134015083312988
    7. 'n' → logprob: -9.634015083312988
    8. 'import' → logprob: -11.384015083312988
    9. ' MOD' → logprob: -12.009015083312988
    10. ' ' → logprob: -12.634015083312988

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693072855472565
    2. '=' → logprob: -2.1269307136535645
    3. ',' → logprob: -13.626931190490723
    4. ' =
' → logprob: -13.751931190490723
    5. '=int' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.251930236816406
    7. ' =)' → logprob: -16.501930236816406
    8. ':' → logprob: -16.751930236816406
    9. '  ' → logprob: -17.001930236816406
    10. '＝' → logprob: -17.626930236816406

Token 650: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08911612629890442
    2. '100' → logprob: -2.589116096496582
    3. '998' → logprob: -4.589116096496582
    4. ' ' → logprob: -11.964116096496582
    5. '1' → logprob: -12.964116096496582
    6. 'int' → logprob: -13.214116096496582
    7. '(' → logprob: -13.589116096496582
    8. '999' → logprob: -15.589116096496582
    9. '   ' → logprob: -15.714116096496582
    10. 'pow' → logprob: -15.964116096496582

Token 651: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10281116515398026
    2. '100' → logprob: -2.352811098098755
    3. '998' → logprob: -5.977811336517334
    4. '(' → logprob: -9.727810859680176
    5. 'int' → logprob: -12.477810859680176
    6. '1' → logprob: -13.227810859680176
    7. 'pow' → logprob: -13.727810859680176
    8. '１０' → logprob: -16.227811813354492
    9. ' ' → logprob: -16.477811813354492
    10. '999' → logprob: -16.477811813354492

Token 652: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00034952821442857385
    2. '09' → logprob: -8.125349998474121
    3. '**' → logprob: -9.875349998474121
    4. '```' → logprob: -13.375349998474121
    5. '+' → logprob: -14.750349998474121
    6. '_' → logprob: -16.625349044799805
    7. '000' → logprob: -17.125349044799805
    8. ' ' → logprob: -18.000349044799805
    9. '``' → logprob: -18.000349044799805
    10. '009' → logprob: -18.000349044799805

Token 653: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.125
    3. '+' → logprob: -15.625
    4. '```' → logprob: -17.25
    5. '``' → logprob: -20.75
    6. '   ' → logprob: -21.5
    7. '_' → logprob: -21.625
    8. ' ' → logprob: -21.875
    9. '
' → logprob: -21.875
    10. '９' → logprob: -22.0

Token 654: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.558399319241289e-05
    2. '7' → logprob: -10.875025749206543
    3. ' +' → logprob: -12.000025749206543
    4. '+
' → logprob: -15.250025749206543
    5. '＋' → logprob: -16.500024795532227
    6. '```' → logprob: -17.125024795532227
    7. '
' → logprob: -18.375024795532227
    8. 'plus' → logprob: -18.500024795532227
    9. '37' → logprob: -19.000024795532227
    10. '()+' → logprob: -19.500024795532227

Token 655: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.375
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -20.625
    5. ' ' → logprob: -20.875
    6. '07' → logprob: -21.25
    7. '
' → logprob: -21.375
    8. '

' → logprob: -21.375
    9. '9' → logprob: -21.625
    10. '``' → logprob: -22.5

Token 656: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -20.75
    3. '07' → logprob: -21.0
    4. '+' → logprob: -21.0
    5. ' ' → logprob: -22.25
    6. '9' → logprob: -22.25
    7. '
' → logprob: -22.5
    8. '   ' → logprob: -22.625
    9. '７' → logprob: -23.0
    10. '

' → logprob: -23.125

Token 657: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004180733114480972
    2. '    
' → logprob: -6.379180908203125
    3. '   ' → logprob: -6.879180908203125
    4. '  
' → logprob: -7.254180908203125
    5. '```' → logprob: -7.629180908203125
    6. '   
' → logprob: -10.129180908203125
    7. ' 
' → logprob: -10.129180908203125
    8. '	
' → logprob: -10.379180908203125
    9. '<|end|>' → logprob: -10.629180908203125
    10. '
' → logprob: -10.754180908203125

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17271465063095093
    2. '
' → logprob: -2.0477147102355957
    3. 'N' → logprob: -4.297714710235596
    4. '    
' → logprob: -4.672714710235596
    5. 'A' → logprob: -5.797714710235596
    6. 'n' → logprob: -6.922714710235596
    7. 'input' → logprob: -6.922714710235596
    8. '```' → logprob: -7.797714710235596
    9. ',' → logprob: -8.672714233398438
    10. '(N' → logprob: -8.797714233398438

Token 659: ' comb' (ID: 4134)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.7610454708337784e-05
    2. '   ' → logprob: -10.750027656555176
    3. 'A' → logprob: -12.875027656555176
    4. ' N' → logprob: -13.000027656555176
    5. 'n' → logprob: -14.125027656555176
    6. 'import' → logprob: -15.375027656555176
    7. 'input' → logprob: -15.750027656555176
    8. '#' → logprob: -16.37502670288086
    9. '```' → logprob: -16.50002670288086
    10. '	N' → logprob: -16.75002670288086

Token 660: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038467612117528915
    2. '_obj' → logprob: -3.2884676456451416
    3. 'obj' → logprob: -7.9134674072265625
    4. '_objs' → logprob: -11.038467407226562
    5. '_Obj' → logprob: -11.288467407226562
    6. 'o' → logprob: -11.538467407226562
    7. '_i' → logprob: -11.788467407226562
    8. 'Obj' → logprob: -12.038467407226562
    9. '_' → logprob: -12.413467407226562
    10. '```' → logprob: -13.913467407226562

Token 661: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.000770436367020011
    2. '_' → logprob: -7.375770568847656
    3. '_object' → logprob: -10.250770568847656
    4. '_com' → logprob: -10.375770568847656
    5. '_objs' → logprob: -10.625770568847656
    6. 'obj' → logprob: -11.125770568847656
    7. 'Obj' → logprob: -11.750770568847656
    8. '=' → logprob: -11.750770568847656
    9. '=_' → logprob: -12.250770568847656
    10. '_=' → logprob: -12.500770568847656

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163628220558167
    2. '=' → logprob: -4.264163494110107
    3. ',' → logprob: -17.264163970947266
    4. ' =
' → logprob: -18.014163970947266
    5. '=create' → logprob: -18.139163970947266
    6. '  ' → logprob: -18.389163970947266
    7. ' =)' → logprob: -18.389163970947266
    8. ' ' → logprob: -18.514163970947266
    9. ' ' → logprob: -18.639163970947266
    10. '	' → logprob: -18.889163970947266

Token 663: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.25192990899086
    2. 'create' → logprob: -1.5019298791885376
    3. '(create' → logprob: -15.376930236816406
    4. '=create' → logprob: -15.501930236816406
    5. '	create' → logprob: -15.626930236816406
    6. '   ' → logprob: -16.626930236816406
    7. ' ' → logprob: -16.876930236816406
    8. '.create' → logprob: -17.001930236816406
    9. '_create' → logprob: -18.251930236816406
    10. ' crea' → logprob: -19.126930236816406

Token 664: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.43533796072006226
    2. '(' → logprob: -1.310338020324707
    3. '(N' → logprob: -2.560338020324707
    4. '(com' → logprob: -5.685338020324707
    5. 'com' → logprob: -6.685338020324707
    6. '_list' → logprob: -7.185338020324707
    7. '_' → logprob: -8.810338020324707
    8. ' (' → logprob: -9.810338020324707
    9. '(None' → logprob: -9.935338020324707
    10. '(_' → logprob: -9.935338020324707

Token 665: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.00033534664544276893
    2. 'b' → logprob: -8.125335693359375
    3. '(' → logprob: -11.250335693359375
    4. 'bo' → logprob: -12.000335693359375
    5. 'pi' → logprob: -12.125335693359375
    6. '```' → logprob: -13.250335693359375
    7. 'i' → logprob: -13.500335693359375
    8. '_b' → logprob: -13.625335693359375
    9. '(b' → logprob: -13.750335693359375
    10. '{' → logprob: -13.750335693359375

Token 666: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.263011578586884e-05
    2. '100' → logprob: -10.750042915344238
    3. '(N' → logprob: -11.250042915344238
    4. '((' → logprob: -12.875042915344238
    5. '(int' → logprob: -13.125042915344238
    6. '(max' → logprob: -13.375042915344238
    7. '10' → logprob: -13.625042915344238
    8. '(MAX' → logprob: -15.750042915344238
    9. '500' → logprob: -16.000041961669922
    10. '50' → logprob: -16.125041961669922

Token 667: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19613583385944366
    2. '200' → logprob: -1.9461358785629272
    3. '400' → logprob: -4.196135997772217
    4. '10' → logprob: -4.571135997772217
    5. '100' → logprob: -5.321135997772217
    6. '300' → logprob: -6.071135997772217
    7. '500' → logprob: -6.571135997772217
    8. ' ' → logprob: -7.946135997772217
    9. '(' → logprob: -7.946135997772217
    10. '600' → logprob: -8.446135520935059

Token 668: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.120101809501648
    2. '*N' → logprob: -1.245101809501648
    3. '0' → logprob: -1.370101809501648
    4. '000' → logprob: -2.4951019287109375
    5. ' *' → logprob: -3.2451019287109375
    6. '00' → logprob: -4.8701019287109375
    7. '_' → logprob: -6.6201019287109375
    8. '*(' → logprob: -7.6201019287109375
    9. '10' → logprob: -8.370101928710938
    10. '5' → logprob: -9.495101928710938

Token 669: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31926578283309937
    2. 'N' → logprob: -1.4442658424377441
    3. '(' → logprob: -4.069265842437744
    4. '100' → logprob: -4.694265842437744
    5. 'int' → logprob: -5.319265842437744
    6. '(N' → logprob: -6.694265842437744
    7. '500' → logprob: -7.194265842437744
    8. '_' → logprob: -7.319265842437744
    9. '(int' → logprob: -7.569265842437744
    10. 'main' → logprob: -8.194265365600586

Token 670: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0009284949628636241
    2. '7' → logprob: -7.0009284019470215
    3. '5' → logprob: -11.00092887878418
    4. '**' → logprob: -15.50092887878418
    5. '   ' → logprob: -17.37592887878418
    6. '8' → logprob: -18.50092887878418
    7. '```' → logprob: -19.00092887878418
    8. ' ' → logprob: -19.62592887878418
    9. '9' → logprob: -19.87592887878418
    10. '^' → logprob: -20.50092887878418

Token 671: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1129840537905693
    2. '5' → logprob: -2.2379839420318604
    3. '7' → logprob: -8.737983703613281
    4. '```' → logprob: -13.862983703613281
    5. '9' → logprob: -16.30048370361328
    6. '8' → logprob: -16.61298370361328
    7. '``' → logprob: -16.67548370361328
    8. '   ' → logprob: -16.67548370361328
    9. 'six' → logprob: -17.23798370361328
    10. '3' → logprob: -17.80048370361328

Token 672: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -11.750020027160645
    3. ',' → logprob: -11.875020027160645
    4. ' )' → logprob: -13.375020027160645
    5. '+' → logprob: -13.500020027160645
    6. ')

' → logprob: -15.125020027160645
    7. '),' → logprob: -15.375020027160645
    8. '<|end|>' → logprob: -15.500020027160645
    9. '   ' → logprob: -15.750020027160645
    10. '))' → logprob: -15.875020027160645

Token 673: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01816480979323387
    2. ' mod' → logprob: -4.01816463470459
    3. '10' → logprob: -11.26816463470459
    4. '100' → logprob: -14.14316463470459
    5. ')' → logprob: -14.14316463470459
    6. ' ' → logprob: -14.39316463470459
    7. '(mod' → logprob: -16.518165588378906
    8. '	mod' → logprob: -16.768165588378906
    9. 'moder' → logprob: -18.018165588378906
    10. '```' → logprob: -18.393165588378906

Token 674: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.625001907348633
    5. ')`' → logprob: -18.500001907348633
    6. '))' → logprob: -18.750001907348633
    7. ')
' → logprob: -19.250001907348633
    8. '),' → logprob: -19.750001907348633
    9. ')#' → logprob: -20.375001907348633
    10. ' ' → logprob: -20.500001907348633

Token 675: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5926950573921204
    2. '   ' → logprob: -0.8426950573921204
    3. '    
' → logprob: -4.342695236206055
    4. 'input' → logprob: -6.592695236206055
    5. '  
' → logprob: -8.092695236206055
    6. '```' → logprob: -8.092695236206055
    7. '<|end|>' → logprob: -8.842695236206055
    8. '' → logprob: -9.092695236206055
    9. '(' → logprob: -9.092695236206055
    10. ' ' → logprob: -9.217695236206055

Token 676: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.042157139629125595
    2. '   ' → logprob: -3.5421571731567383
    3. 'A' → logprob: -4.667157173156738
    4. 'n' → logprob: -6.042157173156738
    5. ' N' → logprob: -7.667157173156738
    6. 'a' → logprob: -11.042157173156738
    7. ' ' → logprob: -11.167157173156738
    8. '    
' → logprob: -11.292157173156738
    9. ' A' → logprob: -11.292157173156738
    10. '```' → logprob: -12.417157173156738

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016384923947043717
    2. ' =' → logprob: -9.625164031982422
    3. '=' → logprob: -9.625164031982422
    4. ' ,' → logprob: -10.500164031982422
    5. ',N' → logprob: -14.000164031982422
    6. ',A' → logprob: -14.250164031982422
    7. ',input' → logprob: -14.500164031982422
    8. ',int' → logprob: -15.125164031982422
    9. '‌,' → logprob: -15.250164031982422
    10. ',
' → logprob: -15.750164031982422

Token 678: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015029559144750237
    2. ' A' → logprob: -6.501502990722656
    3. 'a' → logprob: -15.126502990722656
    4. '	A' → logprob: -16.126502990722656
    5. ' ' → logprob: -16.376502990722656
    6. ',A' → logprob: -16.751502990722656
    7. '*A' → logprob: -17.501502990722656
    8. 'C' → logprob: -18.251502990722656
    9. '_A' → logprob: -18.501502990722656
    10. '  ' → logprob: -18.626502990722656

Token 679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013643606507685035
    2. ',B' → logprob: -9.000136375427246
    3. '=' → logprob: -11.875136375427246
    4. ' ,' → logprob: -12.625136375427246
    5. '<|end|>' → logprob: -13.625136375427246
    6. ',b' → logprob: -15.000136375427246
    7. '‌,' → logprob: -15.125136375427246
    8. ',A' → logprob: -15.625136375427246
    9. '_,' → logprob: -16.125137329101562
    10. ',C' → logprob: -16.500137329101562

Token 680: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0024758970830589533
    2. ' B' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.62747573852539
    4. '<|end|>' → logprob: -17.87747573852539
    5. 'C' → logprob: -19.50247573852539
    6. '=' → logprob: -19.62747573852539
    7. '=B' → logprob: -19.62747573852539
    8. ',' → logprob: -19.62747573852539
    9. '```' → logprob: -20.12747573852539
    10. '	B' → logprob: -20.25247573852539

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3791200518608093
    2. '=' → logprob: -1.254120111465454
    3. ' =' → logprob: -3.504120111465454
    4. ',C' → logprob: -10.254119873046875
    5. '=input' → logprob: -10.629119873046875
    6. ',A' → logprob: -10.879119873046875
    7. ',input' → logprob: -11.004119873046875
    8. ' ,' → logprob: -11.379119873046875
    9. ',N' → logprob: -11.754119873046875
    10. '   ' → logprob: -12.254119873046875

Token 682: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -3.130576806142926e-05
    2. ' C' → logprob: -10.375031471252441
    3. ' ' → logprob: -18.375030517578125
    4. '100' → logprob: -18.500030517578125
    5. '	C' → logprob: -19.500030517578125
    6. '_C' → logprob: -20.250030517578125
    7. 'c' → logprob: -20.750030517578125
    8. '<|end|>' → logprob: -21.375030517578125
    9. '*C' → logprob: -21.500030517578125
    10. ',C' → logprob: -21.625030517578125

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002226322889328
    2. ' =' → logprob: -2.350222587585449
    3. ',' → logprob: -11.22522258758545
    4. '=input' → logprob: -13.35022258758545
    5. '   ' → logprob: -15.35022258758545
    6. '    ' → logprob: -16.100223541259766
    7. ')' → logprob: -16.225223541259766
    8. '=line' → logprob: -16.225223541259766
    9. ' ' → logprob: -16.475223541259766
    10. '  ' → logprob: -16.475223541259766

Token 684: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.21232862770557404
    2. ' parse' → logprob: -1.7123286724090576
    3. 'map' → logprob: -4.8373284339904785
    4. ' map' → logprob: -5.8373284339904785
    5. 'tuple' → logprob: -12.837328910827637
    6. 'list' → logprob: -13.087328910827637
    7. ' tuple' → logprob: -13.212328910827637
    8. '	parse' → logprob: -13.212328910827637
    9. ' ' → logprob: -14.087328910827637
    10. '   ' → logprob: -14.712328910827637

Token 685: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0008778737974353135
    2. '()' → logprob: -7.125877857208252
    3. '(int' → logprob: -10.00087833404541
    4. '_int' → logprob: -11.25087833404541
    5. 'input' → logprob: -12.00087833404541
    6. 'int' → logprob: -12.37587833404541
    7. 'Input' → logprob: -13.37587833404541
    8. '()
' → logprob: -13.37587833404541
    9. '_inputs' → logprob: -14.37587833404541
    10. '_' → logprob: -15.37587833404541

Token 686: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13823550939559937
    2. '   ' → logprob: -2.888235569000244
    3. '()
' → logprob: -3.263235569000244
    4. '
' → logprob: -4.013235569000244
    5. '<|end|>' → logprob: -5.138235569000244
    6. '(' → logprob: -5.763235569000244
    7. ',' → logprob: -6.513235569000244
    8. ')' → logprob: -6.638235569000244
    9. '(
' → logprob: -7.013235569000244
    10. '    
' → logprob: -7.138235569000244

Token 687: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022538607008755207
    2. '
' → logprob: -6.252254009246826
    3. '    
' → logprob: -8.252253532409668
    4. 'X' → logprob: -10.377253532409668
    5. '<|end|>' → logprob: -11.127253532409668
    6. '```' → logprob: -11.752253532409668
    7. '  
' → logprob: -12.877253532409668
    8. 'def' → logprob: -13.127253532409668
    9. 'Y' → logprob: -14.502253532409668
    10. ' ' → logprob: -14.627253532409668

Token 688: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.2608502507209778
    2. '
' → logprob: -2.010850191116333
    3. '   ' → logprob: -2.635850191116333
    4. ' X' → logprob: -3.885850191116333
    5. '    
' → logprob: -6.635850429534912
    6. 'Y' → logprob: -6.760850429534912
    7. ' 
' → logprob: -7.885850429534912
    8. '```' → logprob: -9.010849952697754
    9. 'A' → logprob: -9.135849952697754
    10. '  
' → logprob: -9.635849952697754

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5304096937179565
    2. ',' → logprob: -1.0304096937179565
    3. ' =' → logprob: -2.905409812927246
    4. ')' → logprob: -11.155409812927246
    5. ' +=' → logprob: -11.280409812927246
    6. ' ,' → logprob: -11.655409812927246
    7. '+=' → logprob: -12.405409812927246
    8. ' *=' → logprob: -13.780409812927246
    9. '_' → logprob: -14.030409812927246
    10. '=

' → logprob: -14.155409812927246

Token 690: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.2014133334159851
    2. ' calculate' → logprob: -1.7014133930206299
    3. '.calculate' → logprob: -17.826414108276367
    4. ' compute' → logprob: -17.826414108276367
    5. 'compute' → logprob: -17.826414108276367
    6. '   ' → logprob: -19.201414108276367
    7. 'alculate' → logprob: -19.701414108276367
    8. ' ' → logprob: -20.326414108276367
    9. 'calc' → logprob: -20.701414108276367
    10. ' ' → logprob: -21.201414108276367

Token 691: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.0010456704767420888
    2. 'X' → logprob: -6.8760457038879395
    3. '_Y' → logprob: -11.876045227050781
    4. '_N' → logprob: -12.626045227050781
    5. '```' → logprob: -13.876045227050781
    6. '(X' → logprob: -14.751045227050781
    7. ' X' → logprob: -14.876045227050781
    8. '_A' → logprob: -15.251045227050781
    9. '_' → logprob: -15.501045227050781
    10. '	X' → logprob: -16.37604522705078

Token 692: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00043281487887725234
    2. '(' → logprob: -7.750432968139648
    3. '(
' → logprob: -13.625432968139648
    4. ' (' → logprob: -14.375432968139648
    5. '((' → logprob: -16.50043296813965
    6. '```' → logprob: -16.50043296813965
    7. 'N' → logprob: -17.00043296813965
    8. '(n' → logprob: -17.37543296813965
    9. '
' → logprob: -17.87543296813965
    10. '   ' → logprob: -18.00043296813965

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ',A' → logprob: -11.000019073486328
    3. ' ,' → logprob: -13.125019073486328
    4. 'A' → logprob: -14.750019073486328
    5. ',
' → logprob: -16.250019073486328
    6. '   ' → logprob: -16.250019073486328
    7. ')' → logprob: -17.875019073486328
    8. '(' → logprob: -18.500019073486328
    9. '(A' → logprob: -19.000019073486328
    10. '```' → logprob: -19.625019073486328

Token 694: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0004307884373702109
    2. ' A' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.125431060791016
    4. ' ' → logprob: -18.500431060791016
    5. '	A' → logprob: -18.500431060791016
    6. '    ' → logprob: -20.000431060791016
    7. '  ' → logprob: -20.250431060791016
    8. '    
' → logprob: -21.500431060791016
    9. '
' → logprob: -21.625431060791016
    10. 'a' → logprob: -22.125431060791016

Token 695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ',B' → logprob: -10.500056266784668
    3. ' ,' → logprob: -10.500056266784668
    4. ',
' → logprob: -14.250056266784668
    5. 'B' → logprob: -14.625056266784668
    6. '   ' → logprob: -15.750056266784668
    7. ',

' → logprob: -16.375057220458984
    8. '‌,' → logprob: -16.625057220458984
    9. '```' → logprob: -17.000057220458984
    10. ')' → logprob: -17.125057220458984

Token 696: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00033546582562848926
    2. ' B' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.500335693359375
    4. '<|end|>' → logprob: -19.500335693359375
    5. ' ' → logprob: -21.000335693359375
    6. '	B' → logprob: -21.125335693359375
    7. '>B' → logprob: -21.375335693359375
    8. '    ' → logprob: -21.625335693359375
    9. 'b' → logprob: -22.250335693359375
    10. '<B' → logprob: -22.625335693359375

Token 697: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3856492842023727e-06
    2. ' ,' → logprob: -14.250000953674316
    3. ')' → logprob: -15.375000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '‌,' → logprob: -16.250001907348633
    6. ',C' → logprob: -16.500001907348633
    7. ',
' → logprob: -16.625001907348633
    8. '),' → logprob: -17.250001907348633
    9. '<|end|>' → logprob: -18.000001907348633
    10. ',

' → logprob: -18.500001907348633

Token 698: ' mod' (ID: 1812)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -9.198043699143454e-05
    2. 'mod' → logprob: -9.375091552734375
    3. ' C' → logprob: -11.875091552734375
    4. '   ' → logprob: -16.750091552734375
    5. 'N' → logprob: -17.750091552734375
    6. '```' → logprob: -18.750091552734375
    7. ' mod' → logprob: -19.125091552734375
    8. ' ' → logprob: -19.375091552734375
    9. '
' → logprob: -20.000091552734375
    10. '    ' → logprob: -20.500091552734375

Token 699: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.250003814697266
    3. ' ,' → logprob: -13.500003814697266
    4. 'com' → logprob: -14.625003814697266
    5. '(com' → logprob: -15.750003814697266
    6. ',
' → logprob: -16.250003814697266
    7. ')' → logprob: -17.750003814697266
    8. '=com' → logprob: -17.875003814697266
    9. ',c' → logprob: -18.250003814697266
    10. '‌,' → logprob: -18.500003814697266

Token 700: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -3.1186566047836095e-05
    2. ' comb' → logprob: -10.500031471252441
    3. '(com' → logprob: -13.250031471252441
    4. 'comb' → logprob: -13.375031471252441
    5. 'c' → logprob: -16.125030517578125
    6. ' com' → logprob: -16.500030517578125
    7. '	com' → logprob: -18.000030517578125
    8. ' combin' → logprob: -18.500030517578125
    9. '   ' → logprob: -18.750030517578125
    10. '<com' → logprob: -19.500030517578125

Token 701: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00319993169978261
    2. '_obj' → logprob: -5.753200054168701
    3. 'obj' → logprob: -11.503199577331543
    4. 'o' → logprob: -11.503199577331543
    5. 'Obj' → logprob: -13.378199577331543
    6. '_Obj' → logprob: -16.12820053100586
    7. 'j' → logprob: -16.25320053100586
    8. '_i' → logprob: -16.62820053100586
    9. '_object' → logprob: -17.50320053100586
    10. 'oi' → logprob: -17.87820053100586

Token 702: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.000799384550191462
    2. 'obj' → logprob: -7.250799179077148
    3. 'j' → logprob: -10.000799179077148
    4. 'o' → logprob: -10.250799179077148
    5. 'Obj' → logprob: -12.250799179077148
    6. 'i' → logprob: -13.125799179077148
    7. 'b' → logprob: -14.125799179077148
    8. 'bj' → logprob: -14.500799179077148
    9. 'oj' → logprob: -14.625799179077148
    10. '_Obj' → logprob: -16.50079917907715

Token 703: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ')
' → logprob: -11.750012397766113
    3. ',' → logprob: -12.750012397766113
    4. '   ' → logprob: -13.375012397766113
    5. ' )' → logprob: -16.00001335144043
    6. '),' → logprob: -16.50001335144043
    7. ',)' → logprob: -17.87501335144043
    8. ')

' → logprob: -18.00001335144043
    9. ').' → logprob: -18.62501335144043
    10. ' ' → logprob: -18.87501335144043

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009268058463931084
    2. 'Y' → logprob: -4.759268283843994
    3. '
' → logprob: -7.759268283843994
    4. ' Y' → logprob: -8.634267807006836
    5. '    
' → logprob: -10.634267807006836
    6. '```' → logprob: -11.259267807006836
    7. '	Y' → logprob: -11.884267807006836
    8. ')' → logprob: -13.759267807006836
    9. '`' → logprob: -14.134267807006836
    10. ' ' → logprob: -14.259267807006836

Token 705: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.1082984134554863
    2. '   ' → logprob: -2.7332983016967773
    3. '
' → logprob: -3.8582983016967773
    4. ' Y' → logprob: -4.108298301696777
    5. '    
' → logprob: -10.608298301696777
    6. '	Y' → logprob: -10.858298301696777
    7. '```' → logprob: -11.233298301696777
    8. ' ' → logprob: -11.233298301696777
    9. ')' → logprob: -12.233298301696777
    10. ' 
' → logprob: -12.608298301696777

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. ',' → logprob: -15.398245811462402
    4. ')' → logprob: -17.39824676513672
    5. '=

' → logprob: -17.39824676513672
    6. '＝' → logprob: -17.77324676513672
    7. '=
' → logprob: -18.27324676513672
    8. '=}' → logprob: -19.14824676513672
    9. '=create' → logprob: -19.27324676513672
    10. ')=' → logprob: -19.52324676513672

Token 707: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -4.5491004129871726e-05
    2. ' calculate' → logprob: -10.000045776367188
    3. 'C' → logprob: -17.000045776367188
    4. 'calc' → logprob: -17.500045776367188
    5. '100' → logprob: -18.375045776367188
    6. 'alculate' → logprob: -18.500045776367188
    7. '(c' → logprob: -19.625045776367188
    8. 'compute' → logprob: -19.625045776367188
    9. 'Calculate' → logprob: -19.625045776367188
    10. 'c' → logprob: -19.750045776367188

Token 708: '_Y' (ID: 22477)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.013665290549397469
    2. 'C' → logprob: -5.263665199279785
    3. '_C' → logprob: -5.638665199279785
    4. 'calculate' → logprob: -5.763665199279785
    5. 'Y' → logprob: -6.763665199279785
    6. '_Y' → logprob: -8.013665199279785
    7. '(c' → logprob: -9.638665199279785
    8. '(' → logprob: -10.388665199279785
    9. '`' → logprob: -11.013665199279785
    10. '((' → logprob: -11.638665199279785

Token 709: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.018153922632336617
    2. 'C' → logprob: -4.018154144287109
    3. ' C' → logprob: -12.64315414428711
    4. '	C' → logprob: -14.64315414428711
    5. '   ' → logprob: -16.01815414428711
    6. '=C' → logprob: -16.26815414428711
    7. '(' → logprob: -16.51815414428711
    8. '(
' → logprob: -17.14315414428711
    9. '<C' → logprob: -17.51815414428711
    10. ',C' → logprob: -17.64315414428711

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015836587408557534
    2. ',A' → logprob: -8.875158309936523
    3. ' ,' → logprob: -11.250158309936523
    4. 'A' → logprob: -12.250158309936523
    5. '(A' → logprob: -15.375158309936523
    6. ',
' → logprob: -16.000158309936523
    7. '   ' → logprob: -16.250158309936523
    8. '(' → logprob: -16.500158309936523
    9. ')' → logprob: -17.125158309936523
    10. ' A' → logprob: -18.000158309936523

Token 711: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.7610454708337784e-05
    2. ' A' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '100' → logprob: -19.50002670288086
    5. '	A' → logprob: -19.75002670288086
    6. ' ' → logprob: -20.37502670288086
    7. '(A' → logprob: -21.50002670288086
    8. 'mod' → logprob: -21.50002670288086
    9. '  ' → logprob: -22.37502670288086
    10. '10' → logprob: -22.50002670288086

Token 712: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008613191312178969
    2. ',B' → logprob: -7.125861167907715
    3. 'B' → logprob: -10.250861167907715
    4. ' ,' → logprob: -11.250861167907715
    5. '+B' → logprob: -12.000861167907715
    6. '   ' → logprob: -13.625861167907715
    7. '+' → logprob: -14.375861167907715
    8. ' B' → logprob: -15.625861167907715
    9. ',
' → logprob: -15.750861167907715
    10. '```' → logprob: -15.875861167907715

Token 713: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006715370807796717
    2. ' B' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.756715774536133
    4. ' ' → logprob: -18.881715774536133
    5. '  ' → logprob: -20.756715774536133
    6. '	B' → logprob: -21.381715774536133
    7. ',' → logprob: -22.506715774536133
    8. 'mod' → logprob: -22.756715774536133
    9. '    ' → logprob: -22.881715774536133
    10. '>B' → logprob: -23.631715774536133

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003428528143558651
    2. ',N' → logprob: -8.125343322753906
    3. ' ,' → logprob: -10.375343322753906
    4. 'N' → logprob: -11.125343322753906
    5. ',
' → logprob: -14.625343322753906
    6. '   ' → logprob: -15.250343322753906
    7. '```' → logprob: -16.500343322753906
    8. ' N' → logprob: -16.875343322753906
    9. 'mod' → logprob: -18.000343322753906
    10. '),' → logprob: -18.000343322753906

Token 715: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005530327325686812
    2. ' N' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '	N' → logprob: -19.750553131103516
    5. ',N' → logprob: -20.250553131103516
    6. ' ' → logprob: -20.500553131103516
    7. '    ' → logprob: -21.250553131103516
    8. ',' → logprob: -21.500553131103516
    9. ' ' → logprob: -21.625553131103516
    10. '
' → logprob: -21.875553131103516

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5690089639974758e-05
    2. ' ,' → logprob: -11.125015258789062
    3. 'mod' → logprob: -14.750015258789062
    4. ',
' → logprob: -15.125015258789062
    5. '   ' → logprob: -16.250015258789062
    6. '```' → logprob: -16.250015258789062
    7. '),' → logprob: -16.875015258789062
    8. ')' → logprob: -17.000015258789062
    9. ' mod' → logprob: -18.375015258789062
    10. '(mod' → logprob: -18.375015258789062

Token 717: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020354038861114532
    2. ' mod' → logprob: -8.500203132629395
    3. '	mod' → logprob: -18.00020408630371
    4. 'moder' → logprob: -19.87520408630371
    5. '(mod' → logprob: -19.87520408630371
    6. '   ' → logprob: -20.75020408630371
    7. ' мод' → logprob: -21.25020408630371
    8. ' ' → logprob: -21.25020408630371
    9. '.mod' → logprob: -21.37520408630371
    10. '_mod' → logprob: -22.00020408630371

Token 718: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08710379898548126
    2. ')
' → logprob: -3.212103843688965
    3. '   ' → logprob: -3.837103843688965
    4. ',' → logprob: -3.837103843688965
    5. ')
' → logprob: -11.087103843688965
    6. '),' → logprob: -12.962103843688965
    7. ' )' → logprob: -12.962103843688965
    8. ',)' → logprob: -13.087103843688965
    9. ',
' → logprob: -13.212103843688965
    10. 'mod' → logprob: -13.212103843688965

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012822567950934172
    2. '
' → logprob: -7.376282215118408
    3. 'ans' → logprob: -7.626282215118408
    4. '	ans' → logprob: -9.876282691955566
    5. '```' → logprob: -9.876282691955566
    6. ' ans' → logprob: -11.126282691955566
    7. 'result' → logprob: -11.251282691955566
    8. 'answer' → logprob: -11.376282691955566
    9. '(ans' → logprob: -11.501282691955566
    10. '    
' → logprob: -12.001282691955566

Token 720: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.04254894703626633
    2. '   ' → logprob: -4.667549133300781
    3. 'result' → logprob: -4.667549133300781
    4. ' ans' → logprob: -4.667549133300781
    5. 'print' → logprob: -4.792549133300781
    6. 'answer' → logprob: -5.417549133300781
    7. '	ans' → logprob: -8.917549133300781
    8. ' result' → logprob: -9.042549133300781
    9. 'res' → logprob: -9.292549133300781
    10. '
' → logprob: -9.417549133300781

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326955556869507
    2. '=' → logprob: -1.3132696151733398
    3. '   ' → logprob: -12.56326961517334
    4. '_' → logprob: -13.43826961517334
    5. ',' → logprob: -14.18826961517334
    6. ' ' → logprob: -14.43826961517334
    7. ' =
' → logprob: -14.93826961517334
    8. ')' → logprob: -15.06326961517334
    9. '	' → logprob: -15.43826961517334
    10. '＝' → logprob: -15.81326961517334

Token 722: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.01814994215965271
    2. ' calculate' → logprob: -4.0181498527526855
    3. 'compute' → logprob: -17.768150329589844
    4. '.calculate' → logprob: -18.768150329589844
    5. 'cal' → logprob: -19.518150329589844
    6. '   ' → logprob: -19.643150329589844
    7. 'calcul' → logprob: -19.643150329589844
    8. 'alculate' → logprob: -19.768150329589844
    9. 'calc' → logprob: -20.018150329589844
    10. ' (' → logprob: -20.143150329589844

Token 723: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.0280383548888494e-06
    2. 'ans' → logprob: -14.000000953674316
    3. '(ans' → logprob: -16.500001907348633
    4. '	ans' → logprob: -16.625001907348633
    5. '_answer' → logprob: -16.875001907348633
    6. '_an' → logprob: -17.750001907348633
    7. '_ant' → logprob: -18.750001907348633
    8. '\' → logprob: -19.625001907348633
    9. '```' → logprob: -20.375001907348633
    10. '_answers' → logprob: -20.375001907348633

Token 724: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -3.650518920039758e-06
    2. 'X' → logprob: -12.625003814697266
    3. '(' → logprob: -15.125003814697266
    4. '(
' → logprob: -18.500003814697266
    5. '\(' → logprob: -20.500003814697266
    6. ' (' → logprob: -20.625003814697266
    7. '(x' → logprob: -21.000003814697266
    8. '	X' → logprob: -21.250003814697266
    9. ' X' → logprob: -22.500003814697266
    10. '```' → logprob: -22.625003814697266

Token 725: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. ' ,' → logprob: -10.750029563903809
    3. '(ans' → logprob: -12.625029563903809
    4. ',Y' → logprob: -13.000029563903809
    5. ',N' → logprob: -13.625029563903809
    6. '   ' → logprob: -15.000029563903809
    7. '(' → logprob: -15.375029563903809
    8. '```' → logprob: -15.875029563903809
    9. ',
' → logprob: -16.125028610229492
    10. '‌,' → logprob: -17.500028610229492

Token 726: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.318681188422488e-05
    2. ' Y' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.75001335144043
    4. '	Y' → logprob: -17.87501335144043
    5. 'X' → logprob: -19.00001335144043
    6. '
' → logprob: -20.50001335144043
    7. '```' → logprob: -20.62501335144043
    8. ' ' → logprob: -21.12501335144043
    9. '(Y' → logprob: -21.37501335144043
    10. '  ' → logprob: -21.50001335144043

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ' ,' → logprob: -13.37500286102295
    3. 'mod' → logprob: -15.00000286102295
    4. '(mod' → logprob: -15.37500286102295
    5. ',
' → logprob: -15.50000286102295
    6. ')' → logprob: -15.62500286102295
    7. '```' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.750001907348633
    9. ',module' → logprob: -18.125001907348633
    10. '‌,' → logprob: -19.125001907348633

Token 728: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.547789674485102e-05
    2. ' mod' → logprob: -10.250035285949707
    3. '10' → logprob: -19.375036239624023
    4. '
' → logprob: -19.750036239624023
    5. ' ' → logprob: -20.875036239624023
    6. '```' → logprob: -20.875036239624023
    7. '	mod' → logprob: -21.000036239624023
    8. '(mod' → logprob: -21.250036239624023
    9. '   ' → logprob: -22.125036239624023
    10. 'moder' → logprob: -22.750036239624023

Token 729: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029757557436823845
    2. ')
' → logprob: -3.529757499694824
    3. ')
' → logprob: -12.404757499694824
    4. '   ' → logprob: -13.279757499694824
    5. ')`
' → logprob: -14.779757499694824
    6. ' )' → logprob: -15.279757499694824
    7. ')`' → logprob: -15.404757499694824
    8. ' ' → logprob: -15.654757499694824
    9. ')

' → logprob: -16.77975845336914
    10. ' )
' → logprob: -17.27975845336914

Token 730: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011203341418877244
    2. 'print' → logprob: -6.876120567321777
    3. '
' → logprob: -10.251120567321777
    4. '    
' → logprob: -10.376120567321777
    5. '```' → logprob: -11.626120567321777
    6. '<|end|>' → logprob: -12.126120567321777
    7. ' print' → logprob: -13.126120567321777
    8. '(' → logprob: -13.751120567321777
    9. '\' → logprob: -14.501120567321777
    10. '	print' → logprob: -14.626120567321777

Token 731: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0016653041820973158
    2. '   ' → logprob: -6.501665115356445
    3. '```' → logprob: -9.126665115356445
    4. ' print' → logprob: -10.001665115356445
    5. '	print' → logprob: -12.876665115356445
    6. '    
' → logprob: -13.126665115356445
    7. '
' → logprob: -13.251665115356445
    8. 'return' → logprob: -13.626665115356445
    9. '``' → logprob: -14.626665115356445
    10. '#print' → logprob: -14.876665115356445

Token 732: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.088346359931165e-07
    2. 'ans' → logprob: -14.000000953674316
    3. '(answer' → logprob: -18.625
    4. '(' → logprob: -18.625
    5. '	ans' → logprob: -20.125
    6. '(abs' → logprob: -20.75
    7. '(int' → logprob: -21.125
    8. '(round' → logprob: -21.125
    9. '((' → logprob: -21.25
    10. '(f' → logprob: -21.375

Token 733: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -14.250000953674316
    3. '())' → logprob: -14.875000953674316
    4. ' )' → logprob: -16.875001907348633
    5. ')`' → logprob: -17.375001907348633
    6. ')
' → logprob: -18.250001907348633
    7. '(' → logprob: -18.375001907348633
    8. '))' → logprob: -18.875001907348633
    9. '')' → logprob: -19.125001907348633
    10. '`)' → logprob: -19.375001907348633

Token 734: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011141783557832241
    2. 'main' → logprob: -4.511141777038574
    3. '```' → logprob: -10.011141777038574
    4. ' if' → logprob: -10.636141777038574
    5. '#' → logprob: -11.136141777038574
    6. '
' → logprob: -12.886141777038574
    7. '(main' → logprob: -12.886141777038574
    8. '<|end|>' → logprob: -13.511141777038574
    9. ' main' → logprob: -13.761141777038574
    10. '#if' → logprob: -14.886141777038574

Token 735: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 733
Tokens correctement prédits (1ère position, stricte): 330
Tokens correctement prédits (1ère position, avec adaptation): 350
Tokens correctement prédits (top 10): 646
Précision stricte (1ère position): 45.02%
Précision adaptée (1ère position): 47.75%
Précision (top 10): 88.13%
================================================================================
