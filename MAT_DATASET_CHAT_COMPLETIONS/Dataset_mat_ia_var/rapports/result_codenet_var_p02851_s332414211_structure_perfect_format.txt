================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

def main():
    N, K = map(int, input().split())
    A = list(map(int, input().split()))

    d = collections.defaultdict(int)
    prefix = [0]
    for i in range(N):
        prefix.append(prefix[-1] + A[i])

    ans = 0
    for j in range(N + 1):
        v = (prefix[j] - j) % K
        ans += d[v]
        d[v] += 1
        if j >= K - 1:
            d[(prefix[j - K + 1] - (j - K + 1)) % K] -= 1
    return ans

if __name__ == '__main__':
    print(main())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024107310455292463
    2. '.Counter' → logprob: -6.127410888671875
    3. '```' → logprob: -10.127410888671875
    4. '\' → logprob: -10.377410888671875
    5. '.default' → logprob: -10.377410888671875
    6. ',' → logprob: -11.002410888671875
    7. '\.' → logprob: -11.127410888671875
    8. 'import' → logprob: -11.127410888671875
    9. '.C' → logprob: -12.002410888671875
    10. '_' → logprob: -12.252410888671875

Token 4: ' main' (ID: 2758)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5745943188667297
    2. ' ' → logprob: -0.9495943188667297
    3. ' defaultdict' → logprob: -3.324594259262085
    4. 'collections' → logprob: -5.324594497680664
    5. ' counter' → logprob: -6.324594497680664
    6. ' Counter' → logprob: -6.824594497680664
    7. ' space' → logprob: -7.324594497680664
    8. ' itertools' → logprob: -7.449594497680664
    9. ' ' → logprob: -7.824594497680664
    10. '_counter' → logprob: -7.824594497680664

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01195005513727665
    2. ':' → logprob: -4.6369500160217285
    3. '():' → logprob: -7.0119500160217285
    4. '(:' → logprob: -7.1369500160217285
    5. '```' → logprob: -8.886950492858887
    6. ' (' → logprob: -9.386950492858887
    7. '(
' → logprob: -9.511950492858887
    8. '):' → logprob: -9.886950492858887
    9. '[' → logprob: -10.511950492858887
    10. '(`' → logprob: -10.761950492858887

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062161609530448914
    2. '(' → logprob: -3.687161684036255
    3. 'collections' → logprob: -4.312161445617676
    4. '_' → logprob: -5.187161445617676
    5. '    ' → logprob: -5.312161445617676
    6. ' ' → logprob: -5.937161445617676
    7. '```' → logprob: -6.437161445617676
    8. '\' → logprob: -6.812161445617676
    9. ' collections' → logprob: -6.937161445617676
    10. '[' → logprob: -7.187161445617676

Token 7: ' N' (ID: 478)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counter' → logprob: -1.27540922164917
    2. ' Counter' → logprob: -1.52540922164917
    3. 'Counter' → logprob: -2.02540922164917
    4. 'counter' → logprob: -2.65040922164917
    5. '   ' → logprob: -2.77540922164917
    6. 'de' → logprob: -2.77540922164917
    7. 'd' → logprob: -2.90040922164917
    8. 'deque' → logprob: -3.02540922164917
    9. ' deque' → logprob: -3.65040922164917
    10. ' defaultdict' → logprob: -3.65040922164917

Token 8: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10187453776597977
    2. '=' → logprob: -2.601874589920044
    3. ' ' → logprob: -3.851874589920044
    4. '_' → logprob: -7.601874351501465
    5. ',' → logprob: -8.101874351501465
    6. ')' → logprob: -8.601874351501465
    7. '   ' → logprob: -9.101874351501465
    8. '_space' → logprob: -9.601874351501465
    9. '.' → logprob: -9.726874351501465
    10. '  ' → logprob: -9.851874351501465

Token 9: ' K' (ID: 658)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0338048934936523
    2. ' ' → logprob: -1.5338048934936523
    3. ' K' → logprob: -1.6588048934936523
    4. ' M' → logprob: -2.9088048934936523
    5. '=' → logprob: -3.2838048934936523
    6. ' input' → logprob: -3.6588048934936523
    7. ')' → logprob: -3.7838048934936523
    8. 'input' → logprob: -3.9088048934936523
    9. '  ' → logprob: -4.533804893493652
    10. 'K' → logprob: -4.658804893493652

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005937805864959955
    2. '=' → logprob: -5.130937576293945
    3. ' ' → logprob: -12.005937576293945
    4. ',' → logprob: -12.880937576293945
    5. ' =
' → logprob: -16.130937576293945
    6. '```' → logprob: -16.380937576293945
    7. ' =",' → logprob: -16.505937576293945
    8. '=int' → logprob: -16.630937576293945
    9. ')' → logprob: -17.005937576293945
    10. ' ,' → logprob: -17.255937576293945

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0025068165268749
    2. 'map' → logprob: -6.002506732940674
    3. ' input' → logprob: -10.502507209777832
    4. ' ' → logprob: -13.752507209777832
    5. ' list' → logprob: -13.752507209777832
    6. 'input' → logprob: -14.377507209777832
    7. '	map' → logprob: -15.127507209777832
    8. ' collections' → logprob: -15.627507209777832
    9. '0' → logprob: -15.752507209777832
    10. ' [' → logprob: -15.877507209777832

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.48348602652549744
    2. '(' → logprob: -0.9834860563278198
    3. '(str' → logprob: -4.733486175537109
    4. '(lambda' → logprob: -8.23348617553711
    5. '(input' → logprob: -8.23348617553711
    6. '(
' → logprob: -11.35848617553711
    7. 'int' → logprob: -12.23348617553711
    8. '(eval' → logprob: -12.48348617553711
    9. '()' → logprob: -12.60848617553711
    10. '(list' → logprob: -12.98348617553711

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05878644436597824
    2. ',input' → logprob: -3.808786392211914
    3. '(input' → logprob: -4.058786392211914
    4. ')' → logprob: -4.433786392211914
    5. 'input' → logprob: -5.558786392211914
    6. '(' → logprob: -6.433786392211914
    7. ' input' → logprob: -8.808786392211914
    8. ' ,' → logprob: -9.933786392211914
    9. '```' → logprob: -11.058786392211914
    10. '),' → logprob: -11.183786392211914

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04859066382050514
    2. 'input' → logprob: -3.048590660095215
    3. ')' → logprob: -12.923590660095215
    4. ' )' → logprob: -14.423590660095215
    5. ' ' → logprob: -16.17359161376953
    6. '(input' → logprob: -16.17359161376953
    7. '=input' → logprob: -16.92359161376953
    8. ',input' → logprob: -17.92359161376953
    9. '	input' → logprob: -18.04859161376953
    10. '<input' → logprob: -19.42359161376953

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011418899521231651
    2. '())' → logprob: -4.51141881942749
    3. '()' → logprob: -8.011419296264648
    4. ')' → logprob: -10.636419296264648
    5. '()))' → logprob: -12.386419296264648
    6. '());' → logprob: -12.386419296264648
    7. '(' → logprob: -13.761419296264648
    8. '()),' → logprob: -13.761419296264648
    9. '();)' → logprob: -14.136419296264648
    10. '()>' → logprob: -14.261419296264648

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010115911572938785
    2. 'strip' → logprob: -9.250101089477539
    3. 'rstrip' → logprob: -12.500101089477539
    4. ' split' → logprob: -14.000101089477539
    5. ')' → logprob: -15.500101089477539
    6. '(split' → logprob: -15.875101089477539
    7. 'spl' → logprob: -16.00010108947754
    8. 'read' → logprob: -17.12510108947754
    9. '```' → logprob: -18.50010108947754
    10. '_split' → logprob: -19.62510108947754

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002259687054902315
    2. '))' → logprob: -6.127259731292725
    3. '())' → logprob: -9.752259254455566
    4. '()' → logprob: -11.502259254455566
    5. ')))' → logprob: -13.252259254455566
    6. ')
' → logprob: -14.127259254455566
    7. ')`' → logprob: -14.252259254455566
    8. ')")' → logprob: -14.377259254455566
    9. '),' → logprob: -14.502259254455566
    10. '(' → logprob: -14.752259254455566

Token 18: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8940008878707886
    2. '   ' → logprob: -1.5190008878707886
    3. '    
' → logprob: -2.394001007080078
    4. '
' → logprob: -2.644001007080078
    5. '```' → logprob: -2.769001007080078
    6. ')
' → logprob: -3.269001007080078
    7. '\n' → logprob: -3.894001007080078
    8. '\' → logprob: -4.019001007080078
    9. '<|end|>' → logprob: -4.269001007080078
    10. ' 
' → logprob: -4.269001007080078

Token 19: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46653562784194946
    2. ' counter' → logprob: -2.9665355682373047
    3. 'counter' → logprob: -3.0915355682373047
    4. ' data' → logprob: -3.4665355682373047
    5. 'counts' → logprob: -3.5915355682373047
    6. 'data' → logprob: -3.5915355682373047
    7. ' counts' → logprob: -3.7165355682373047
    8. ' words' → logprob: -3.9665355682373047
    9. 'words' → logprob: -4.591535568237305
    10. 'c' → logprob: -4.591535568237305

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4409821331501007
    2. '=' → logprob: -1.1909821033477783
    3. '[' → logprob: -3.0659821033477783
    4. '_' → logprob: -5.565982341766357
    5. '[:]' → logprob: -7.565982341766357
    6. '   ' → logprob: -7.690982341766357
    7. '_counter' → logprob: -8.1909818649292
    8. '[]' → logprob: -8.5659818649292
    9. '_counts' → logprob: -8.6909818649292
    10. ' ' → logprob: -9.1909818649292

Token 21: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07952722907066345
    2. 'list' → logprob: -2.5795271396636963
    3. ' collections' → logprob: -7.454527378082275
    4. 'collections' → logprob: -9.954526901245117
    5. ' [' → logprob: -11.954526901245117
    6. ' map' → logprob: -13.579526901245117
    7. '[' → logprob: -13.579526901245117
    8. 'map' → logprob: -14.454526901245117
    9. ' collection' → logprob: -14.704526901245117
    10. ' ' → logprob: -14.954526901245117

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.046542663127183914
    2. '(map' → logprob: -3.6715426445007324
    3. '(int' → logprob: -4.546542644500732
    4. '(input' → logprob: -4.796542644500732
    5. '(range' → logprob: -7.171542644500732
    6. '()' → logprob: -9.54654312133789
    7. '(collection' → logprob: -9.67154312133789
    8. '(eval' → logprob: -9.67154312133789
    9. '(
' → logprob: -10.54654312133789
    10. '(

' → logprob: -11.04654312133789

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002501343551557511
    2. '(' → logprob: -8.375249862670898
    3. 'int' → logprob: -11.625249862670898
    4. '<int' → logprob: -12.750249862670898
    5. '```' → logprob: -13.125249862670898
    6. ',int' → logprob: -13.375249862670898
    7. '=int' → logprob: -13.500249862670898
    8. '[int' → logprob: -13.625249862670898
    9. ')' → logprob: -14.625249862670898
    10. ' (' → logprob: -15.000249862670898

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31399306654930115
    2. ',' → logprob: -1.8139930963516235
    3. ',input' → logprob: -2.313992977142334
    4. '(' → logprob: -4.938992977142334
    5. 'input' → logprob: -8.313993453979492
    6. ' ,' → logprob: -9.313993453979492
    7. ')' → logprob: -10.563993453979492
    8. '),' → logprob: -10.813993453979492
    9. '=input' → logprob: -10.813993453979492
    10. ' input' → logprob: -11.938993453979492

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759410262107849
    2. ' input' → logprob: -0.8259410262107849
    3. '(input' → logprob: -14.57594108581543
    4. ')' → logprob: -14.57594108581543
    5. ',input' → logprob: -15.57594108581543
    6. '	input' → logprob: -15.82594108581543
    7. '=input' → logprob: -16.07594108581543
    8. ' ' → logprob: -16.32594108581543
    9. '_input' → logprob: -17.07594108581543
    10. '<input' → logprob: -17.45094108581543

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001968649885384366
    2. '()' → logprob: -8.75019645690918
    3. '()))' → logprob: -10.87519645690918
    4. '(' → logprob: -11.75019645690918
    5. '())' → logprob: -12.62519645690918
    6. '()));' → logprob: -13.00019645690918
    7. ' ().' → logprob: -13.75019645690918
    8. '(.' → logprob: -13.87519645690918
    9. '())))' → logprob: -14.37519645690918
    10. '()).' → logprob: -14.75019645690918

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.650518920039758e-06
    2. '(split' → logprob: -14.000003814697266
    3. 'strip' → logprob: -14.250003814697266
    4. '().' → logprob: -14.250003814697266
    5. '.split' → logprob: -14.250003814697266
    6. ')' → logprob: -14.875003814697266
    7. ' split' → logprob: -15.000003814697266
    8. '()' → logprob: -17.125003814697266
    9. '_split' → logprob: -17.250003814697266
    10. ').' → logprob: -17.250003814697266

Token 28: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5931533575057983
    2. '))' → logprob: -0.8431533575057983
    3. '())' → logprob: -4.843153476715088
    4. '()' → logprob: -5.468153476715088
    5. ')' → logprob: -5.593153476715088
    6. '(' → logprob: -6.718153476715088
    7. ')))' → logprob: -11.46815299987793
    8. '()))
' → logprob: -11.59315299987793
    9. '()));' → logprob: -12.59315299987793
    10. '())))' → logprob: -13.21815299987793

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11531438678503036
    2. 'counter' → logprob: -2.740314483642578
    3. 'freq' → logprob: -4.365314483642578
    4. 'd' → logprob: -4.865314483642578
    5. 'count' → logprob: -4.865314483642578
    6. ' counter' → logprob: -5.615314483642578
    7. 'c' → logprob: -6.365314483642578
    8. '```' → logprob: -6.365314483642578
    9. 'counts' → logprob: -6.365314483642578
    10. 'dp' → logprob: -6.490314483642578

Token 30: ' d' (ID: 272)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.30218201875686646
    2. ' counter' → logprob: -2.3021819591522217
    3. 'count' → logprob: -2.8021819591522217
    4. 'freq' → logprob: -3.4271819591522217
    5. 'cnt' → logprob: -4.177182197570801
    6. 'd' (adapté à ' d') → logprob: -4.427182197570801
    7. 'counts' → logprob: -4.427182197570801
    8. '   ' → logprob: -4.677182197570801
    9. 'c' → logprob: -5.052182197570801
    10. 'dp' → logprob: -5.927182197570801

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5765241384506226
    2. '=' → logprob: -0.8265241384506226
    3. '[' → logprob: -8.701523780822754
    4. 'e' → logprob: -8.826523780822754
    5. ' ' → logprob: -9.076523780822754
    6. 'p' → logprob: -10.451523780822754
    7. 'ef' → logprob: -10.451523780822754
    8. 'ict' → logprob: -10.951523780822754
    9. '_counter' → logprob: -11.326523780822754
    10. 'a' → logprob: -11.576523780822754

Token 32: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.4740847051143646
    2. ' collections' → logprob: -0.974084734916687
    3. 'collection' → logprob: -12.849084854125977
    4. '.collections' → logprob: -13.349084854125977
    5. ' collection' → logprob: -13.849084854125977
    6. '{}' → logprob: -14.224084854125977
    7. 'collect' → logprob: -14.724084854125977
    8. '   ' → logprob: -14.849084854125977
    9. ' ' → logprob: -15.474084854125977
    10. '(collection' → logprob: -15.849084854125977

Token 33: '.default' (ID: 15648)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.0010967610869556665
    2. '.' → logprob: -6.876096725463867
    3. '.default' → logprob: -10.126096725463867
    4. '.C' → logprob: -12.751096725463867
    5. '.Dot' → logprob: -13.001096725463867
    6. ' .' → logprob: -13.126096725463867
    7. '.counter' → logprob: -13.251096725463867
    8. '.de' → logprob: -13.376096725463867
    9. '.De' → logprob: -13.376096725463867
    10. '.Default' → logprob: -13.626096725463867

Token 34: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.128163257315464e-07
    2. 'ict' → logprob: -15.375
    3. ' dict' → logprob: -16.75
    4. 'd' → logprob: -18.625
    5. 'ct' → logprob: -19.625
    6. 'Dict' → logprob: -20.75
    7. 'dic' → logprob: -21.0
    8. 'def' → logprob: -21.625
    9. 'dd' → logprob: -21.75
    10. 'td' → logprob: -23.0

Token 35: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0038214565720409155
    2. '(' → logprob: -5.75382137298584
    3. '(lambda' → logprob: -7.37882137298584
    4. '(list' → logprob: -11.62882137298584
    5. '(
' → logprob: -11.87882137298584
    6. '<int' → logprob: -14.00382137298584
    7. '(in' → logprob: -14.12882137298584
    8. ' (' → logprob: -14.62882137298584
    9. 'int' → logprob: -15.00382137298584
    10. '[int' → logprob: -15.50382137298584

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ' )' → logprob: -12.50001335144043
    3. '()' → logprob: -12.50001335144043
    4. '())' → logprob: -13.12501335144043
    5. ')
' → logprob: -13.87501335144043
    6. ')d' → logprob: -14.12501335144043
    7. '[' → logprob: -14.50001335144043
    8. '   ' → logprob: -14.75001335144043
    9. '(' → logprob: -15.62501335144043
    10. '))' → logprob: -15.75001335144043

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09878440201282501
    2. '    
' → logprob: -2.7237844467163086
    3. 'for' → logprob: -3.9737844467163086
    4. ' for' → logprob: -5.223784446716309
    5. '    ' → logprob: -6.973784446716309
    6. ' 
' → logprob: -7.223784446716309
    7. '\n' → logprob: -7.473784446716309
    8. '
' → logprob: -7.848784446716309
    9. ' ' → logprob: -7.973784446716309
    10. '     
' → logprob: -8.098784446716309

Token 38: ' prefix' (ID: 18633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1379082202911377
    2. ' for' → logprob: -2.8879082202911377
    3. 'result' → logprob: -3.6379082202911377
    4. 'count' → logprob: -4.012907981872559
    5. 'answer' → logprob: -4.012907981872559
    6. 'max' → logprob: -5.637907981872559
    7. 'res' → logprob: -6.387907981872559
    8. ' result' → logprob: -6.512907981872559
    9. 'ans' → logprob: -6.637907981872559
    10. ' answer' → logprob: -7.137907981872559

Token 39: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.17865094542503357
    2. '_' → logprob: -2.0536508560180664
    3. '_count' → logprob: -4.303650856018066
    4. '_s' → logprob: -4.303650856018066
    5. 'sum' → logprob: -5.803650856018066
    6. 'Sum' → logprob: -6.428650856018066
    7. '_counts' → logprob: -6.428650856018066
    8. '[' → logprob: -7.928650856018066
    9. ' _' → logprob: -8.303650856018066
    10. 's' → logprob: -8.303650856018066

Token 40: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05471458286046982
    2. ' ' → logprob: -3.5547146797180176
    3. '[' → logprob: -3.9297146797180176
    4. ' [' → logprob: -5.304714679718018
    5. '[]' → logprob: -10.80471420288086
    6. ' []' → logprob: -12.17971420288086
    7. '[A' → logprob: -12.30471420288086
    8. '{' → logprob: -14.05471420288086
    9. '[N' → logprob: -14.05471420288086
    10. '1' → logprob: -14.30471420288086

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. ']' → logprob: -17.625011444091797
    4. ')' → logprob: -17.875011444091797
    5. '1' → logprob: -18.000011444091797
    6. 'A' → logprob: -18.125011444091797
    7. '(' → logprob: -18.625011444091797
    8. '   ' → logprob: -19.000011444091797
    9. '00' → logprob: -19.375011444091797
    10. '۰' → logprob: -19.375011444091797

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006183160003274679
    2. ' ]' → logprob: -7.6256184577941895
    3. ']
' → logprob: -10.000617980957031
    4. ')' → logprob: -10.375617980957031
    5. ' for' → logprob: -11.125617980957031
    6. ',' → logprob: -11.125617980957031
    7. ')]' → logprob: -11.500617980957031
    8. ']int' → logprob: -12.625617980957031
    9. '])' → logprob: -13.375617980957031
    10. '()]' → logprob: -13.500617980957031

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2847076952457428
    2. ' for' → logprob: -1.5347076654434204
    3. 'for' → logprob: -3.53470778465271
    4. '    
' → logprob: -6.159707546234131
    5. '
' → logprob: -8.159708023071289
    6. '```' → logprob: -8.409708023071289
    7. ' 
' → logprob: -9.409708023071289
    8. ' ' → logprob: -9.534708023071289
    9. '   
' → logprob: -9.784708023071289
    10. '  ' → logprob: -10.159708023071289

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08269058912992477
    2. ' for' → logprob: -2.582690477371216
    3. '   ' → logprob: -5.582690715789795
    4. '	for' → logprob: -11.457690238952637
    5. '```' → logprob: -11.707690238952637
    6. 'current' → logprob: -12.332690238952637
    7. '    
' → logprob: -13.332690238952637
    8. 'result' → logprob: -13.832690238952637
    9. 'sum' → logprob: -14.457690238952637
    10. 'ans' → logprob: -14.582690238952637

Token 45: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9959056377410889
    2. 'a' → logprob: -1.1209056377410889
    3. ' i' → logprob: -1.8709056377410889
    4. 'i' → logprob: -2.120905637741089
    5. ' x' → logprob: -4.370905876159668
    6. 'x' → logprob: -4.370905876159668
    7. ' num' → logprob: -6.495905876159668
    8. 'num' → logprob: -6.870905876159668
    9. 'A' → logprob: -7.245905876159668
    10. ' ai' → logprob: -7.495905876159668

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004136460833251476
    2. 'in' → logprob: -5.504136562347412
    3. ' ' → logprob: -10.129136085510254
    4. ',' → logprob: -11.504136085510254
    5. '	in' → logprob: -13.129136085510254
    6. '   ' → logprob: -14.129136085510254
    7. '_' → logprob: -14.254136085510254
    8. ' i' → logprob: -14.504136085510254
    9. '_in' → logprob: -14.504136085510254
    10. 'In' → logprob: -14.629136085510254

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6356015801429749
    2. 'range' → logprob: -0.7606015801429749
    3. 'A' → logprob: -6.13560152053833
    4. ' A' → logprob: -7.13560152053833
    5. ' ' → logprob: -10.760601997375488
    6. '   ' → logprob: -11.635601997375488
    7. '(range' → logprob: -13.260601997375488
    8. '  ' → logprob: -13.385601997375488
    9. '	range' → logprob: -13.385601997375488
    10. ' xrange' → logprob: -14.010601997375488

Token 48: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1284780502319336
    2. '(' → logprob: -2.1284780502319336
    3. '(len' → logprob: -6.503478050231934
    4. '(K' → logprob: -10.503478050231934
    5. ' (' → logprob: -11.378478050231934
    6. '(n' → logprob: -12.128478050231934
    7. ' N' → logprob: -13.003478050231934
    8. '(i' → logprob: -13.378478050231934
    9. ' ' → logprob: -13.628478050231934
    10. '(
' → logprob: -15.003478050231934

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005682280287146568
    2. '+' → logprob: -5.630682468414307
    3. '):
' → logprob: -6.255682468414307
    4. ' ):' → logprob: -9.380681991577148
    5. '   ' → logprob: -10.630681991577148
    6. ':' → logprob: -11.130681991577148
    7. ')' → logprob: -11.380681991577148
    8. '-' → logprob: -11.880681991577148
    9. '):
' → logprob: -12.380681991577148
    10. ']:' → logprob: -12.505681991577148

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021278990898281336
    2. ' prefix' → logprob: -7.2521281242370605
    3. '    ' → logprob: -7.5021281242370605
    4. '   ' → logprob: -7.5021281242370605
    5. '        
' → logprob: -9.502127647399902
    6. 'prefix' → logprob: -10.377127647399902
    7. ' ' → logprob: -10.377127647399902
    8. '(prefix' → logprob: -10.627127647399902
    9. '```' → logprob: -10.752127647399902
    10. ',' → logprob: -10.752127647399902

Token 51: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.012855363078415394
    2. 'prefix' (adapté à ' prefix') → logprob: -4.512855529785156
    3. '       ' → logprob: -6.387855529785156
    4. '    ' → logprob: -10.012855529785156
    5. '   ' → logprob: -10.262855529785156
    6. '        ' → logprob: -11.887855529785156
    7. '```' → logprob: -11.887855529785156
    8. '(prefix' → logprob: -12.012855529785156
    9. '_prefix' → logprob: -12.137855529785156
    10. ' ' → logprob: -12.387855529785156

Token 52: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16134582459926605
    2. '[-' → logprob: -1.9113458395004272
    3. '[i' → logprob: -7.786345958709717
    4. ' .' → logprob: -8.536345481872559
    5. ' [-' → logprob: -8.911345481872559
    6. '.' → logprob: -9.036345481872559
    7. '[' → logprob: -9.161345481872559
    8. '    ' → logprob: -10.036345481872559
    9. '   ' → logprob: -10.786345481872559
    10. '.extend' → logprob: -11.286345481872559

Token 53: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.02337079681456089
    2. '(' → logprob: -3.7733707427978516
    3. ' prefix' → logprob: -9.773370742797852
    4. 'prefix' → logprob: -9.773370742797852
    5. '((' → logprob: -12.273370742797852
    6. ' (' → logprob: -12.523370742797852
    7. '(p' → logprob: -14.398370742797852
    8. '(max' → logprob: -14.398370742797852
    9. '(pref' → logprob: -14.398370742797852
    10. '(
' → logprob: -15.148370742797852

Token 54: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.20148058235645294
    2. '[i' → logprob: -1.7014806270599365
    3. '[' → logprob: -10.201480865478516
    4. '-' → logprob: -10.951480865478516
    5. '```' → logprob: -12.201480865478516
    6. '   ' → logprob: -13.076480865478516
    7. 'i' → logprob: -13.826480865478516
    8. ' [-' → logprob: -13.826480865478516
    9. ' ' → logprob: -13.951480865478516
    10. ' [' → logprob: -14.451480865478516

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.875028610229492
    3. '   ' → logprob: -12.375028610229492
    4. '```' → logprob: -13.375028610229492
    5. '       ' → logprob: -14.500028610229492
    6. 'i' → logprob: -15.187528610229492
    7. '     ' → logprob: -15.250028610229492
    8. '    ' → logprob: -15.375028610229492
    9. '  ' → logprob: -15.437528610229492
    10. '+' → logprob: -15.687528610229492

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04315721616148949
    2. ']+' → logprob: -3.1681571006774902
    3. '+' → logprob: -8.918157577514648
    4. ' ]' → logprob: -11.168157577514648
    5. ' +' → logprob: -13.168157577514648
    6. '+]' → logprob: -13.418157577514648
    7. ')' → logprob: -13.543157577514648
    8. ']+=' → logprob: -14.293157577514648
    9. ')+' → logprob: -14.418157577514648
    10. '1' → logprob: -14.543157577514648

Token 57: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12717492878437042
    2. ' +' → logprob: -2.1271748542785645
    3. '+A' → logprob: -8.752175331115723
    4. ' ^' → logprob: -9.877175331115723
    5. ' ' → logprob: -11.002175331115723
    6. '^' → logprob: -11.252175331115723
    7. '+
' → logprob: -13.877175331115723
    8. ' A' → logprob: -14.252175331115723
    9. '+a' → logprob: -14.252175331115723
    10. 'A' → logprob: -14.377175331115723

Token 58: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2519644796848297
    2. ' A' → logprob: -1.5019644498825073
    3. ' ' → logprob: -10.751964569091797
    4. '   ' → logprob: -11.876964569091797
    5. '	A' → logprob: -12.751964569091797
    6. ' ' → logprob: -13.876964569091797
    7. '(A' → logprob: -13.876964569091797
    8. '1' → logprob: -14.126964569091797
    9. 'a' → logprob: -14.876964569091797
    10. '  ' → logprob: -15.376964569091797

Token 59: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.848420551046729e-05
    2. '[' → logprob: -9.7500581741333
    3. '[I' → logprob: -15.7500581741333
    4. '[
' → logprob: -16.875059127807617
    5. '```' → logprob: -18.125059127807617
    6. ' [' → logprob: -18.375059127807617
    7. ')' → logprob: -19.250059127807617
    8. 'i' → logprob: -20.500059127807617
    9. '[j' → logprob: -20.625059127807617
    10. '[index' → logprob: -20.875059127807617

Token 60: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02170744724571705
    2. '])' → logprob: -3.896707534790039
    3. '))' → logprob: -7.146707534790039
    4. ' )' → logprob: -8.396707534790039
    5. ')
' → logprob: -9.896707534790039
    6. ')]' → logprob: -10.521707534790039
    7. ')])' → logprob: -10.521707534790039
    8. ']' → logprob: -10.771707534790039
    9. ' ])' → logprob: -11.271707534790039
    10. '})' → logprob: -12.396707534790039

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42333805561065674
    2. '
' → logprob: -1.1733380556106567
    3. '    
' → logprob: -4.548337936401367
    4. '```' → logprob: -4.548337936401367
    5. 'for' → logprob: -4.923337936401367
    6. ' for' → logprob: -5.423337936401367
    7. '    ' → logprob: -7.173337936401367
    8. ' ' → logprob: -7.673337936401367
    9. '  
' → logprob: -7.923337936401367
    10. '
' → logprob: -8.423337936401367

Token 62: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9632841944694519
    2. 'count' → logprob: -1.7132842540740967
    3. 'answer' → logprob: -2.0882842540740967
    4. 'ans' (adapté à ' ans') → logprob: -2.3382842540740967
    5. 'result' → logprob: -2.9632842540740967
    6. 'for' → logprob: -3.2132842540740967
    7. ' for' → logprob: -3.3382842540740967
    8. 'res' → logprob: -3.5882842540740967
    9. ' answer' → logprob: -4.088284015655518
    10. ' count' → logprob: -4.338284015655518

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002477200934663415
    2. '=' → logprob: -6.002477169036865
    3. ' ' → logprob: -14.377477645874023
    4. ',' → logprob: -14.877477645874023
    5. ' +=' → logprob: -14.877477645874023
    6. ' =
' → logprob: -16.377477645874023
    7. ' =)' → logprob: -16.752477645874023
    8. ' ' → logprob: -17.002477645874023
    9. ' ,' → logprob: -17.377477645874023
    10. '_' → logprob: -17.502477645874023

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0792529433965683
    2. ' ' → logprob: -2.5792529582977295
    3. 'float' → logprob: -8.829253196716309
    4. ' float' → logprob: -9.329253196716309
    5. '-' → logprob: -10.204253196716309
    6. ' -' → logprob: -11.329253196716309
    7. ' N' → logprob: -11.329253196716309
    8. '1' → logprob: -11.329253196716309
    9. 'prefix' → logprob: -11.454253196716309
    10. 'collections' → logprob: -12.204253196716309

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011823695385828614
    2. 'float' → logprob: -6.876182556152344
    3. 'collections' → logprob: -9.626182556152344
    4. '-' → logprob: -9.876182556152344
    5. 'max' → logprob: -12.126182556152344
    6. '1' → logprob: -12.626182556152344
    7. 'prefix' → logprob: -12.626182556152344
    8. 'len' → logprob: -12.626182556152344
    9. 'int' → logprob: -13.001182556152344
    10. 'N' → logprob: -13.126182556152344

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5307925939559937
    2. '   ' → logprob: -1.1557925939559937
    3. '    
' → logprob: -2.780792713165283
    4. ' for' → logprob: -3.905792713165283
    5. ' 
' → logprob: -4.905792713165283
    6. '  
' → logprob: -6.405792713165283
    7. '\n' → logprob: -6.655792713165283
    8. '   
' → logprob: -6.655792713165283
    9. 'for' → logprob: -7.280792713165283
    10. '	for' → logprob: -7.780792713165283

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5559921860694885
    2. '
' → logprob: -1.3059921264648438
    3. ' for' → logprob: -2.8059921264648438
    4. '    
' → logprob: -2.9309921264648438
    5. ' 
' → logprob: -3.4309921264648438
    6. '\n' → logprob: -6.430992126464844
    7. '  
' → logprob: -6.680992126464844
    8. 'for' → logprob: -6.680992126464844
    9. '   
' → logprob: -6.680992126464844
    10. '    ' → logprob: -6.805992126464844

Token 68: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4343459904193878
    2. '   ' → logprob: -2.1843459606170654
    3. ' for' → logprob: -2.3093459606170654
    4. 'count' → logprob: -3.3093459606170654
    5. 'left' → logprob: -3.6843459606170654
    6. 'right' → logprob: -3.8093459606170654
    7. 'j' → logprob: -4.0593461990356445
    8. 'd' → logprob: -4.4343461990356445
    9. 'l' → logprob: -5.0593461990356445
    10. 'counter' → logprob: -5.1843461990356445

Token 69: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1035983562469482
    2. ' i' → logprob: -1.6035983562469482
    3. 'j' → logprob: -1.9785983562469482
    4. ' j' → logprob: -2.1035983562469482
    5. 'r' → logprob: -2.2285983562469482
    6. ' r' → logprob: -3.1035983562469482
    7. ' prefix' → logprob: -3.8535983562469482
    8. 'prefix' → logprob: -4.228598594665527
    9. ' right' → logprob: -5.353598594665527
    10. 'right' → logprob: -5.478598594665527

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07001401484012604
    2. 'in' → logprob: -2.695013999938965
    3. ' ' → logprob: -9.820013999938965
    4. '  ' → logprob: -12.320013999938965
    5. '   ' → logprob: -12.320013999938965
    6. 'range' → logprob: -12.570013999938965
    7. ',' → logprob: -12.945013999938965
    8. '	in' → logprob: -13.070013999938965
    9. 'In' → logprob: -13.820013999938965
    10. 'import' → logprob: -13.820013999938965

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931572556495667
    2. 'range' → logprob: -0.6931572556495667
    3. ' ' → logprob: -12.818157196044922
    4. '   ' → logprob: -12.943157196044922
    5. '(range' → logprob: -13.443157196044922
    6. '	range' → logprob: -13.818157196044922
    7. 'prefix' → logprob: -14.318157196044922
    8. '  ' → logprob: -14.568157196044922
    9. '```' → logprob: -15.693157196044922
    10. 'rang' → logprob: -16.068157196044922

Token 72: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5038827061653137
    2. '(' → logprob: -1.503882646560669
    3. '(K' → logprob: -1.753882646560669
    4. '(len' → logprob: -8.50388240814209
    5. '(j' → logprob: -9.75388240814209
    6. ' (' → logprob: -10.12888240814209
    7. '(n' → logprob: -10.50388240814209
    8. '1' → logprob: -10.75388240814209
    9. '   ' → logprob: -11.00388240814209
    10. 'K' → logprob: -11.12888240814209

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5703653693199158
    2. '):
' → logprob: -1.1953654289245605
    3. '):' → logprob: -2.6953654289245605
    4. ' +' → logprob: -2.8203654289245605
    5. '   ' → logprob: -5.8203654289245605
    6. ' ):
' → logprob: -6.9453654289245605
    7. ' ):' → logprob: -7.6953654289245605
    8. '1' → logprob: -8.820364952087402
    9. '):
' → logprob: -8.945364952087402
    10. ')' → logprob: -9.195364952087402

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015061709564179182
    2. ' ' → logprob: -6.501506328582764
    3. '   ' → logprob: -12.876505851745605
    4. '```' → logprob: -14.251505851745605
    5. ')' → logprob: -15.126505851745605
    6. '
' → logprob: -16.501506805419922
    7. '):
' → logprob: -16.876506805419922
    8. '``' → logprob: -17.126506805419922
    9. '2' → logprob: -17.314006805419922
    10. '  ' → logprob: -17.626506805419922

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.125019073486328
    4. '```' → logprob: -17.250019073486328
    5. ')' → logprob: -17.687519073486328
    6. '2' → logprob: -17.812519073486328
    7. '  ' → logprob: -17.937519073486328
    8. '0' → logprob: -18.187519073486328
    9. '１' → logprob: -18.437519073486328
    10. '-' → logprob: -19.312519073486328

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2527998983860016
    2. '):
' → logprob: -1.5027998685836792
    3. '):
' → logprob: -7.252799987792969
    4. ':' → logprob: -9.877799987792969
    5. '   ' → logprob: -9.877799987792969
    6. ')' → logprob: -10.127799987792969
    7. ' ):' → logprob: -11.377799987792969
    8. ' ):
' → logprob: -12.502799987792969
    9. '):

' → logprob: -14.002799987792969
    10. '       ' → logprob: -14.002799987792969

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01551032718271017
    2. '   ' → logprob: -5.140510559082031
    3. '    ' → logprob: -5.890510559082031
    4. '<|end|>' → logprob: -5.890510559082031
    5. ':' → logprob: -6.765510559082031
    6. ' ' → logprob: -6.890510559082031
    7. ':
' → logprob: -7.515510559082031
    8. '        
' → logprob: -8.390510559082031
    9. '    
' → logprob: -9.140510559082031
    10. ' 
' → logprob: -9.265510559082031

Token 78: ' v' (ID: 323)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22196605801582336
    2. 'ans' → logprob: -2.471966028213501
    3. '   ' → logprob: -3.221966028213501
    4. ' for' → logprob: -3.846966028213501
    5. '       ' → logprob: -3.971966028213501
    6. ' if' → logprob: -4.59696626663208
    7. 'for' → logprob: -4.84696626663208
    8. 'if' → logprob: -5.09696626663208
    9. ' target' → logprob: -6.34696626663208
    10. 'target' → logprob: -6.59696626663208

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07615427672863007
    2. 'al' → logprob: -3.0761542320251465
    3. 'alue' → logprob: -4.0761542320251465
    4. '=' → logprob: -5.0761542320251465
    5. 'a' → logprob: -6.3261542320251465
    6. '   ' → logprob: -7.3261542320251465
    7. '      ' → logprob: -9.013654708862305
    8. 'alu' → logprob: -9.138654708862305
    9. '       ' → logprob: -9.138654708862305
    10. '  ' → logprob: -9.326154708862305

Token 80: ' (' (ID: 350)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.05493001267313957
    2. ' prefix' → logprob: -2.9299299716949463
    3. '(prefix' → logprob: -10.304929733276367
    4. '   ' → logprob: -12.304929733276367
    5. ' ' → logprob: -12.429929733276367
    6. '  ' → logprob: -13.054929733276367
    7. 'pref' → logprob: -14.304929733276367
    8. 'suffix' → logprob: -14.804929733276367
    9. 'v' → logprob: -15.054929733276367
    10. 'p' → logprob: -15.554929733276367

Token 81: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.023391876369714737
    2. ' prefix' → logprob: -3.7733919620513916
    3. ' ' → logprob: -9.648391723632812
    4. '  ' → logprob: -10.398391723632812
    5. '   ' → logprob: -10.648391723632812
    6. '(prefix' → logprob: -10.898391723632812
    7. ')' → logprob: -12.648391723632812
    8. '`' → logprob: -13.773391723632812
    9. '_prefix' → logprob: -13.898391723632812
    10. '.prefix' → logprob: -14.523391723632812

Token 82: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.400689305039123e-05
    2. '[-' → logprob: -10.000094413757324
    3. '[v' → logprob: -11.250094413757324
    4. ' [' → logprob: -11.625094413757324
    5. '[' → logprob: -11.750094413757324
    6. 'j' → logprob: -11.875094413757324
    7. ')' → logprob: -12.375094413757324
    8. ')[' → logprob: -13.000094413757324
    9. '[i' → logprob: -13.625094413757324
    10. '   ' → logprob: -13.875094413757324

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9660152792930603
    2. ' -' → logprob: -0.9660152792930603
    3. ')' → logprob: -1.716015338897705
    4. '-' → logprob: -2.966015338897705
    5. ' ' → logprob: -5.466015338897705
    6. ')]' → logprob: -7.341015338897705
    7. ',' → logprob: -7.591015338897705
    8. '   ' → logprob: -8.091014862060547
    9. '])' → logprob: -8.341014862060547
    10. ' )' → logprob: -8.341014862060547

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.017226120457053185
    2. '-' → logprob: -4.267226219177246
    3. ')' → logprob: -6.267226219177246
    4. ' ' → logprob: -7.142226219177246
    5. ' )' → logprob: -9.017226219177246
    6. '   ' → logprob: -9.642226219177246
    7. ',' → logprob: -9.892226219177246
    8. ' +' → logprob: -10.642226219177246
    9. '-K' → logprob: -10.767226219177246
    10. ' K' → logprob: -10.892226219177246

Token 85: ' j' (ID: 441)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22664672136306763
    2. ' K' → logprob: -1.6016466617584229
    3. ')' → logprob: -7.101646900177002
    4. ' ' → logprob: -8.226646423339844
    5. '	K' → logprob: -9.601646423339844
    6. '    ' → logprob: -10.726646423339844
    7. '   ' → logprob: -11.726646423339844
    8. ' ' → logprob: -12.226646423339844
    9. 'v' → logprob: -12.351646423339844
    10. '```' → logprob: -12.601646423339844

Token 86: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1608181744813919
    2. '*K' → logprob: -2.535818099975586
    3. ' *' → logprob: -2.785818099975586
    4. ')' → logprob: -5.160818099975586
    5. '*k' → logprob: -6.660818099975586
    6. '   ' → logprob: -7.910818099975586
    7. ' ' → logprob: -9.660818099975586
    8. '```' → logprob: -10.785818099975586
    9. 'K' → logprob: -10.910818099975586
    10. '*p' → logprob: -11.035818099975586

Token 87: ' %' (ID: 1851)
  Prédit: '*K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.18580745160579681
    2. ' +' → logprob: -3.185807466506958
    3. 'K' → logprob: -3.560807466506958
    4. '+' → logprob: -3.685807466506958
    5. ' *' → logprob: -3.935807466506958
    6. '*' → logprob: -3.935807466506958
    7. '%' → logprob: -4.435807228088379
    8. '*k' → logprob: -4.435807228088379
    9. 'k' → logprob: -5.560807228088379
    10. ' %' → logprob: -5.685807228088379

Token 88: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002669384120963514
    2. ' K' → logprob: -8.250267028808594
    3. 'k' → logprob: -12.750267028808594
    4. ' ' → logprob: -13.000267028808594
    5. '	K' → logprob: -15.750267028808594
    6. '   ' → logprob: -16.250267028808594
    7. '100' → logprob: -17.250267028808594
    8. 'M' → logprob: -17.375267028808594
    9. '  ' → logprob: -17.500267028808594
    10. 'm' → logprob: -17.750267028808594

Token 89: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033874355256557465
    2. '
' → logprob: -3.533874273300171
    3. '        
' → logprob: -6.53387451171875
    4. ' ans' → logprob: -7.53387451171875
    5. '   ' → logprob: -7.65887451171875
    6. ')' → logprob: -7.90887451171875
    7. 'ans' → logprob: -8.15887451171875
    8. '
' → logprob: -8.65887451171875
    9. '           ' → logprob: -9.15887451171875
    10. ',' → logprob: -9.28387451171875

Token 90: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2836723029613495
    2. '   ' → logprob: -1.7836723327636719
    3. ' ans' → logprob: -2.783672332763672
    4. '	ans' → logprob: -5.033672332763672
    5. '       ' → logprob: -5.408672332763672
    6. '
' → logprob: -5.533672332763672
    7. '    
' → logprob: -7.408672332763672
    8. '(ans' → logprob: -8.033672332763672
    9. ' ' → logprob: -8.408672332763672
    10. '        
' → logprob: -8.783672332763672

Token 91: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00017398154886905104
    2. ' ans' → logprob: -9.000173568725586
    3. '
' → logprob: -10.875173568725586
    4. '   ' → logprob: -11.000173568725586
    5. '	ans' → logprob: -11.375173568725586
    6. 'answer' → logprob: -13.750173568725586
    7. '       ' → logprob: -14.000173568725586
    8. '(ans' → logprob: -14.625173568725586
    9. '    
' → logprob: -15.125173568725586
    10. '_ans' → logprob: -15.125173568725586

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1797747015953064
    2. '+=' → logprob: -1.8047747611999512
    3. ']+=' → logprob: -11.054774284362793
    4. '+' → logprob: -12.679774284362793
    5. '=' → logprob: -12.929774284362793
    6. ' -=' → logprob: -13.179774284362793
    7. ' +' → logprob: -13.179774284362793
    8. ' ' → logprob: -13.804774284362793
    9. '   ' → logprob: -14.179774284362793
    10. ' ' → logprob: -14.304774284362793

Token 93: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2014150768518448
    2. ' d' → logprob: -1.7014150619506836
    3. '	d' → logprob: -14.201415061950684
    4. '       ' → logprob: -14.701415061950684
    5. ')d' → logprob: -15.826415061950684
    6. '_d' → logprob: -16.076416015625
    7. '>d' → logprob: -16.201416015625
    8. '   ' → logprob: -16.701416015625
    9. ' ' → logprob: -16.826416015625
    10. '(d' → logprob: -16.826416015625

Token 94: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.8074162653647363e-05
    2. '[' → logprob: -11.625018119812012
    3. 'v' → logprob: -11.875018119812012
    4. '[d' → logprob: -13.500018119812012
    5. '[p' → logprob: -15.250018119812012
    6. '[
' → logprob: -16.875017166137695
    7. ' [' → logprob: -16.875017166137695
    8. '[(' → logprob: -16.875017166137695
    9. '[j' → logprob: -17.125017166137695
    10. '[u' → logprob: -17.625017166137695

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44104063510894775
    2. ')' → logprob: -1.1910406351089478
    3. ')
' → logprob: -3.316040515899658
    4. ']
' → logprob: -4.191040515899658
    5. '
' → logprob: -7.691040515899658
    6. ')]' → logprob: -7.691040515899658
    7. ' ]' → logprob: -8.816040992736816
    8. '<|end|>' → logprob: -10.316040992736816
    9. ' )' → logprob: -10.566040992736816
    10. ')
' → logprob: -10.691040992736816

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7329029440879822
    2. '   ' → logprob: -0.8579029440879822
    3. 'd' → logprob: -2.982903003692627
    4. '        
' → logprob: -4.232903003692627
    5. '    
' → logprob: -4.857903003692627
    6. ' ' → logprob: -5.482903003692627
    7. '
' → logprob: -5.482903003692627
    8. '\' → logprob: -5.482903003692627
    9. ' d' → logprob: -5.607903003692627
    10. '  
' → logprob: -6.482903003692627

Token 97: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -3.054500666621607e-06
    2. '
' → logprob: -13.62500286102295
    3. '   ' → logprob: -14.00000286102295
    4. '       ' → logprob: -14.75000286102295
    5. ' d' → logprob: -14.75000286102295
    6. '```' → logprob: -16.000003814697266
    7. '	d' → logprob: -17.625003814697266
    8. '[' → logprob: -17.750003814697266
    9. '    
' → logprob: -19.375003814697266
    10. '  ' → logprob: -19.375003814697266

Token 98: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. 'v' → logprob: -15.37500286102295
    4. '[val' → logprob: -17.500001907348633
    5. '[d' → logprob: -18.125001907348633
    6. '```' → logprob: -18.500001907348633
    7. '[
' → logprob: -18.750001907348633
    8. '	v' → logprob: -19.250001907348633
    9. '.__' → logprob: -19.500001907348633
    10. '[value' → logprob: -19.625001907348633

Token 99: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011766550596803427
    2. ']+=' → logprob: -6.751176834106445
    3. ' ]' → logprob: -12.001176834106445
    4. '`]' → logprob: -16.001176834106445
    5. '"]' → logprob: -16.376176834106445
    6. '']' → logprob: -16.876176834106445
    7. '+=' → logprob: -17.001176834106445
    8. '```' → logprob: -17.876176834106445
    9. ')' → logprob: -18.126176834106445
    10. ']+' → logprob: -18.126176834106445

Token 100: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008671418763697147
    2. ' +=' → logprob: -4.758671283721924
    3. ']+=' → logprob: -10.008671760559082
    4. '=' → logprob: -11.383671760559082
    5. '```' → logprob: -15.383671760559082
    6. '+' → logprob: -15.758671760559082
    7. ')' → logprob: -16.758670806884766
    8. 'increment' → logprob: -17.008670806884766
    9. 'plus' → logprob: -17.383670806884766
    10. ']' → logprob: -17.633670806884766

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '１' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '```' → logprob: -21.500001907348633
    6. '0' → logprob: -22.500001907348633
    7. '۱' → logprob: -22.625001907348633
    8. '111' → logprob: -23.375001907348633
    9. '2' → logprob: -23.562501907348633
    10. '  ' → logprob: -23.875001907348633

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -22.0
    4. '１' → logprob: -22.125
    5. '```' → logprob: -22.875
    6. '0' → logprob: -23.5
    7. '۱' → logprob: -24.125
    8. '+' → logprob: -24.75
    9. '  ' → logprob: -24.875
    10. '111' → logprob: -24.875

Token 103: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024731148034334183
    2. '<|end|>' → logprob: -4.149731159210205
    3. 'return' → logprob: -5.899731159210205
    4. 'print' → logprob: -6.399731159210205
    5. 'if' → logprob: -6.774731159210205
    6. 'main' → logprob: -7.024731159210205
    7. '   ' → logprob: -7.149731159210205
    8. '```' → logprob: -7.899731159210205
    9. '  
' → logprob: -8.399730682373047
    10. '    
' → logprob: -8.399730682373047

Token 104: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24913786351680756
    2. '<|end|>' → logprob: -1.6241378784179688
    3. '   ' → logprob: -5.124137878417969
    4. 'return' → logprob: -5.249137878417969
    5. '```' → logprob: -5.499137878417969
    6. '\n' → logprob: -6.374137878417969
    7. 'main' → logprob: -6.499137878417969
    8. '    
' → logprob: -6.499137878417969
    9. 'print' → logprob: -7.124137878417969
    10. ')' → logprob: -7.374137878417969

Token 105: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018799698445945978
    2. '   ' → logprob: -6.751880168914795
    3. 'return' → logprob: -7.376880168914795
    4. ' print' → logprob: -9.626879692077637
    5. '
' → logprob: -11.876879692077637
    6. '    
' → logprob: -12.376879692077637
    7. 'if' (adapté à ' if') → logprob: -13.001879692077637
    8. '```' → logprob: -13.126879692077637
    9. ' return' → logprob: -13.876879692077637
    10. '	print' → logprob: -14.251879692077637

Token 106: ' j' (ID: 441)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2711573839187622
    2. ' ans' → logprob: -1.6461573839187622
    3. 'j' → logprob: -2.3961572647094727
    4. 'v' → logprob: -2.5211572647094727
    5. ' j' → logprob: -2.8961572647094727
    6. ' v' → logprob: -3.0211572647094727
    7. ' prefix' → logprob: -3.0211572647094727
    8. 'prefix' → logprob: -3.0211572647094727
    9. 'd' → logprob: -3.2711572647094727
    10. ' d' → logprob: -3.2711572647094727

Token 107: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6494730114936829
    2. ' >=' → logprob: -1.149472951889038
    3. '==' → logprob: -2.399472951889038
    4. '>=' → logprob: -3.399472951889038
    5. ' >' → logprob: -3.774472951889038
    6. '>' → logprob: -5.399473190307617
    7. ' ' → logprob: -5.649473190307617
    8. ' <' → logprob: -6.399473190307617
    9. '+' → logprob: -6.524473190307617
    10. ' and' → logprob: -7.399473190307617

Token 108: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0013332172529771924
    2. ' K' → logprob: -6.876333236694336
    3. '1' → logprob: -8.376333236694336
    4. ' ' → logprob: -10.251333236694336
    5. '   ' → logprob: -10.501333236694336
    6. '  ' → logprob: -12.626333236694336
    7. '0' → logprob: -13.376333236694336
    8. 'N' → logprob: -14.126333236694336
    9. 'k' → logprob: -14.626333236694336
    10. '    ' → logprob: -14.876333236694336

Token 109: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12360923737287521
    2. '-' → logprob: -2.7486093044281006
    3. ':
' → logprob: -3.1236093044281006
    4. ' -' → logprob: -5.6236090660095215
    5. '   ' → logprob: -5.7486090660095215
    6. '       ' → logprob: -7.9986090660095215
    7. ' :' → logprob: -8.24860954284668
    8. 'and' → logprob: -8.24860954284668
    9. ' and' → logprob: -8.99860954284668
    10. ':d' → logprob: -9.49860954284668

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020473242329899222
    2. ' ' → logprob: -8.500205039978027
    3. '2' → logprob: -14.250205039978027
    4. '0' → logprob: -14.500205039978027
    5. '   ' → logprob: -16.87520408630371
    6. '  ' → logprob: -16.87520408630371
    7. '```' → logprob: -18.50020408630371
    8. '3' → logprob: -18.81270408630371
    9. '-' → logprob: -18.81270408630371
    10. '7' → logprob: -19.06270408630371

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013274075172375888
    2. '0' → logprob: -9.12513256072998
    3. ' ' → logprob: -10.75013256072998
    4. '2' → logprob: -13.12513256072998
    5. '   ' → logprob: -16.125133514404297
    6. '  ' → logprob: -16.312633514404297
    7. '```' → logprob: -17.062633514404297
    8. '3' → logprob: -17.375133514404297
    9. ':' → logprob: -17.500133514404297
    10. '...' → logprob: -17.750133514404297

Token 112: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0280601978302002
    2. ':
' → logprob: -1.0280601978302002
    3. ':' → logprob: -1.2780601978302002
    4. '       ' → logprob: -5.903059959411621
    5. 'and' → logprob: -6.278059959411621
    6. '           ' → logprob: -6.778059959411621
    7. '   ' → logprob: -8.403059959411621
    8. ':
' → logprob: -12.028059959411621
    9. ' :
' → logprob: -12.153059959411621
    10. ' ' → logprob: -12.153059959411621

Token 113: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6789549589157104
    2. '           ' → logprob: -0.9289549589157104
    3. '   ' → logprob: -2.553955078125
    4. 'd' → logprob: -4.178955078125
    5. ' d' → logprob: -6.303955078125
    6. ' ' → logprob: -7.178955078125
    7. '```' → logprob: -7.428955078125
    8. '               ' → logprob: -8.303955078125
    9. '    ' → logprob: -8.428955078125
    10. '-' → logprob: -8.803955078125

Token 114: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.17413149774074554
    2. 'v' → logprob: -2.049131393432617
    3. '       ' → logprob: -5.299131393432617
    4. 'ans' → logprob: -5.299131393432617
    5. '           ' → logprob: -5.299131393432617
    6. 'key' → logprob: -5.424131393432617
    7. 'val' → logprob: -6.174131393432617
    8. 'old' → logprob: -6.299131393432617
    9. 'x' → logprob: -6.549131393432617
    10. 'u' → logprob: -6.674131393432617

Token 115: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.013069051317870617
    2. '[p' → logprob: -4.638069152832031
    3. '[' → logprob: -5.888069152832031
    4. '[((' → logprob: -8.138069152832031
    5. '[
' → logprob: -9.138069152832031
    6. '[v' → logprob: -9.388069152832031
    7. 'prefix' → logprob: -10.388069152832031
    8. '[d' → logprob: -11.513069152832031
    9. '.pop' → logprob: -13.388069152832031
    10. 'v' → logprob: -13.638069152832031

Token 116: 'prefix' (ID: 26155)
  Prédit: 'prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.09397497773170471
    2. '(prefix' → logprob: -2.468975067138672
    3. ' prefix' → logprob: -5.343975067138672
    4. ' (' → logprob: -8.468975067138672
    5. '   ' → logprob: -10.843975067138672
    6. '(p' → logprob: -12.343975067138672
    7. '       ' → logprob: -12.968975067138672
    8. '-prefix' → logprob: -13.468975067138672
    9. '           ' → logprob: -13.593975067138672
    10. '_prefix' → logprob: -13.718975067138672

Token 117: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.090760431718081e-05
    2. '[(' → logprob: -9.625090599060059
    3. '[' → logprob: -10.625090599060059
    4. '[
' → logprob: -15.625090599060059
    5. ' [' → logprob: -16.125091552734375
    6. 'j' → logprob: -16.625091552734375
    7. '[js' → logprob: -17.000091552734375
    8. '[i' → logprob: -17.875091552734375
    9. '   ' → logprob: -17.875091552734375
    10. '[-' → logprob: -18.000091552734375

Token 118: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08077715337276459
    2. ' -' → logprob: -3.830777168273926
    3. '[K' → logprob: -4.330777168273926
    4. '   ' → logprob: -4.705777168273926
    5. 'K' → logprob: -4.705777168273926
    6. '[j' → logprob: -4.830777168273926
    7. ' ' → logprob: -5.080777168273926
    8. '-(' → logprob: -5.705777168273926
    9. '-K' → logprob: -6.330777168273926
    10. '+' → logprob: -6.580777168273926

Token 119: ' K' (ID: 658)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.22334955632686615
    2. 'K' → logprob: -1.8483495712280273
    3. ' (' → logprob: -3.2233495712280273
    4. ' K' → logprob: -6.473349571228027
    5. '(' → logprob: -7.473349571228027
    6. '   ' → logprob: -7.848349571228027
    7. ' ' → logprob: -8.348349571228027
    8. '    ' → logprob: -10.848349571228027
    9. '  ' → logprob: -11.223349571228027
    10. '((' → logprob: -11.473349571228027

Token 120: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09116827696561813
    2. ']' → logprob: -2.841168165206909
    3. ' +' → logprob: -3.591168165206909
    4. '   ' → logprob: -7.341168403625488
    5. '-' → logprob: -8.091168403625488
    6. ' -' → logprob: -8.966168403625488
    7. ' ' → logprob: -9.591168403625488
    8. '  ' → logprob: -11.091168403625488
    9. '1' → logprob: -11.466168403625488
    10. ' ]' → logprob: -11.466168403625488

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002509687910787761
    2. ' ' → logprob: -8.500250816345215
    3. '0' → logprob: -10.250250816345215
    4. '(' → logprob: -12.250250816345215
    5. '2' → logprob: -12.750250816345215
    6. '   ' → logprob: -13.000250816345215
    7. 'j' → logprob: -13.875250816345215
    8. '(j' → logprob: -15.250250816345215
    9. ' (' → logprob: -15.625250816345215
    10. '```' → logprob: -16.00025177001953

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.375017166137695
    3. '0' → logprob: -13.000017166137695
    4. '(' → logprob: -13.875017166137695
    5. '   ' → logprob: -14.000017166137695
    6. 'j' → logprob: -14.000017166137695
    7. '2' → logprob: -14.250017166137695
    8. '-' → logprob: -16.875017166137695
    9. '(j' → logprob: -17.000017166137695
    10. '	' → logprob: -17.250017166137695

Token 123: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10972721874713898
    2. ')' → logprob: -2.609727144241333
    3. ' -' → logprob: -3.734727144241333
    4. '-' → logprob: -5.234727382659912
    5. '}' → logprob: -7.734727382659912
    6. '   ' → logprob: -8.484726905822754
    7. ' ' → logprob: -8.609726905822754
    8. ' ]' → logprob: -8.984726905822754
    9. '    ' → logprob: -9.734726905822754
    10. ' )' → logprob: -9.984726905822754

Token 124: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11395888030529022
    2. '-' → logprob: -2.2389588356018066
    3. ')' → logprob: -7.113958835601807
    4. ' ' → logprob: -8.238959312438965
    5. '   ' → logprob: -11.113959312438965
    6. ' )' → logprob: -11.488959312438965
    7. '    ' → logprob: -11.738959312438965
    8. ']' → logprob: -11.988959312438965
    9. '        ' → logprob: -12.613959312438965
    10. '  ' → logprob: -12.738959312438965

Token 125: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0068801878951489925
    2. ' (' → logprob: -5.006880283355713
    3. 'j' → logprob: -9.006879806518555
    4. '(' → logprob: -10.631879806518555
    5. '((' → logprob: -11.256879806518555
    6. '[j' → logprob: -13.381879806518555
    7. '   ' → logprob: -13.506879806518555
    8. ' j' → logprob: -14.631879806518555
    9. '(
' → logprob: -14.881879806518555
    10. '
' → logprob: -15.256879806518555

Token 126: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04875291511416435
    2. '(j' → logprob: -3.048753023147583
    3. ' j' → logprob: -9.423752784729004
    4. ' (' → logprob: -9.548752784729004
    5. '0' → logprob: -12.423752784729004
    6. '   ' → logprob: -12.548752784729004
    7. '[j' → logprob: -13.423752784729004
    8. '(' → logprob: -13.548752784729004
    9. '
' → logprob: -13.548752784729004
    10. '((' → logprob: -14.923752784729004

Token 127: ' -' (ID: 533)
  Prédit: '-K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.4330773949623108
    2. ' -' → logprob: -1.183077335357666
    3. '-' → logprob: -3.683077335357666
    4. 'K' → logprob: -3.933077335357666
    5. ' K' → logprob: -8.183077812194824
    6. '(K' → logprob: -10.058077812194824
    7. '-(' → logprob: -10.683077812194824
    8. '   ' → logprob: -10.933077812194824
    9. '-k' → logprob: -11.058077812194824
    10. ' ' → logprob: -11.058077812194824

Token 128: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0012730928137898445
    2. '(K' → logprob: -7.126273155212402
    3. ' K' → logprob: -7.751273155212402
    4. '   ' → logprob: -10.626273155212402
    5. ' (' → logprob: -11.751273155212402
    6. ' ' → logprob: -13.501273155212402
    7. '(' → logprob: -13.501273155212402
    8. '           ' → logprob: -13.751273155212402
    9. '    ' → logprob: -15.001273155212402
    10. '  ' → logprob: -15.126273155212402

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020774602890015
    2. ' +' → logprob: -2.350207805633545
    3. '1' → logprob: -14.975207328796387
    4. ')' → logprob: -14.975207328796387
    5. '   ' → logprob: -15.600207328796387
    6. ' ' → logprob: -16.350208282470703
    7. '
' → logprob: -16.975208282470703
    8. '+)' → logprob: -16.975208282470703
    9. '+
' → logprob: -17.350208282470703
    10. '    ' → logprob: -17.350208282470703

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.776898251497187e-05
    2. ' ' → logprob: -10.0000581741333
    3. '2' → logprob: -11.5000581741333
    4. '+' → logprob: -13.8750581741333
    5. '0' → logprob: -14.2500581741333
    6. '   ' → logprob: -15.3750581741333
    7. '```' → logprob: -15.6250581741333
    8. '    ' → logprob: -16.625057220458984
    9. ' +' → logprob: -17.625057220458984
    10. '...' → logprob: -17.750057220458984

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '+' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '```' → logprob: -17.625001907348633
    6. '2' → logprob: -18.125001907348633
    7. '
' → logprob: -18.375001907348633
    8. '0' → logprob: -19.250001907348633
    9. ')' → logprob: -19.312501907348633
    10. '

' → logprob: -19.375001907348633

Token 132: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001454955490771681
    2. ' )' → logprob: -9.37514591217041
    3. '))' → logprob: -10.12514591217041
    4. '   ' → logprob: -11.00014591217041
    5. '       ' → logprob: -13.62514591217041
    6. '    ' → logprob: -14.12514591217041
    7. ' ' → logprob: -14.75014591217041
    8. '`)' → logprob: -15.25014591217041
    9. ')%' → logprob: -15.50014591217041
    10. '+' → logprob: -15.75014591217041

Token 133: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08884000033140182
    2. ' %' → logprob: -2.5888400077819824
    3. ')' → logprob: -5.463840007781982
    4. ')%' → logprob: -5.463840007781982
    5. ']%' → logprob: -7.088840007781982
    6. ']' → logprob: -7.713840007781982
    7. ')]' → logprob: -9.963839530944824
    8. ' )' → logprob: -9.963839530944824
    9. '%A' → logprob: -11.588839530944824
    10. '%D' → logprob: -11.713839530944824

Token 134: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002613358374219388
    2. ' K' → logprob: -8.250261306762695
    3. 'k' → logprob: -18.250261306762695
    4. '```' → logprob: -18.250261306762695
    5. '>K' → logprob: -18.875261306762695
    6. '	K' → logprob: -19.125261306762695
    7. '   ' → logprob: -19.750261306762695
    8. ')' → logprob: -20.125261306762695
    9. 'Ｋ' → logprob: -20.625261306762695
    10. ',K' → logprob: -21.125261306762695

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004348413785919547
    2. ']-' → logprob: -7.750434875488281
    3. ' ]' → logprob: -13.250434875488281
    4. '']' → logprob: -14.125434875488281
    5. '`]' → logprob: -14.500434875488281
    6. '"]' → logprob: -14.875434875488281
    7. ')]' → logprob: -15.125434875488281
    8. '-' → logprob: -15.500434875488281
    9. '   ' → logprob: -16.12543487548828
    10. '-=' → logprob: -16.25043487548828

Token 136: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.033821120858192444
    2. ' -=' → logprob: -3.5338211059570312
    3. '-' → logprob: -5.533821105957031
    4. '   ' → logprob: -9.408821105957031
    5. '    ' → logprob: -10.533821105957031
    6. '+=' → logprob: -13.908821105957031
    7. '  ' → logprob: -14.408821105957031
    8. ' -' → logprob: -14.783821105957031
    9. '```' → logprob: -14.908821105957031
    10. '=' → logprob: -15.658821105957031

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.125
    4. '<|end|>' → logprob: -19.625
    5. '```' → logprob: -20.875
    6. '۱' → logprob: -22.0
    7. '       ' → logprob: -22.25
    8. '  ' → logprob: -22.5
    9. '           ' → logprob: -22.625
    10. '0' → logprob: -22.625

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '<|end|>' → logprob: -19.875
    4. '```' → logprob: -21.75
    5. '   ' → logprob: -22.375
    6. '۱' → logprob: -22.375
    7. '１' → logprob: -23.375
    8. '-' → logprob: -23.875
    9. '0' → logprob: -24.125
    10. '' → logprob: -24.375

Token 139: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3404325842857361
    2. 'print' → logprob: -1.4654326438903809
    3. '
' → logprob: -2.965432643890381
    4. 'return' → logprob: -5.965432643890381
    5. '    
' → logprob: -5.965432643890381
    6. '<|end|>' → logprob: -7.715432643890381
    7. '  
' → logprob: -9.340432167053223
    8. ' print' → logprob: -9.465432167053223
    9. '```' → logprob: -9.465432167053223
    10. 'if' → logprob: -10.090432167053223

Token 141: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25318053364753723
    2. 'print' → logprob: -1.5031805038452148
    3. 'return' (adapté à ' return') → logprob: -7.253180503845215
    4. '
' → logprob: -8.503180503845215
    5. ' print' → logprob: -8.753180503845215
    6. '```' → logprob: -9.003180503845215
    7. '    
' → logprob: -10.003180503845215
    8. ' return' → logprob: -11.628180503845215
    9. '	print' → logprob: -12.753180503845215
    10. '  
' → logprob: -14.753180503845215

Token 142: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2578902542591095
    2. ' ans' → logprob: -1.507890224456787
    3. 'print' → logprob: -5.257890224456787
    4. ' print' → logprob: -7.882890224456787
    5. '(ans' → logprob: -8.007890701293945
    6. '   ' → logprob: -11.382890701293945
    7. '	ans' → logprob: -11.632890701293945
    8. ' ' → logprob: -13.507890701293945
    9. 'str' → logprob: -13.882890701293945
    10. '```' → logprob: -14.132890701293945

Token 143: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8213754296302795
    2. '<|end|>' → logprob: -1.3213753700256348
    3. 'if' → logprob: -1.5713753700256348
    4. '(' → logprob: -3.9463753700256348
    5. '```' → logprob: -4.321375370025635
    6. '#' → logprob: -4.446375370025635
    7. '
' → logprob: -4.571375370025635
    8. ':' → logprob: -4.696375370025635
    9. '()' → logprob: -5.196375370025635
    10. '[' → logprob: -5.946375370025635

Token 144: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029839463531970978
    2. '
' → logprob: -4.404839515686035
    3. '\n' → logprob: -5.154839515686035
    4. '<|end|>' → logprob: -5.404839515686035
    5. ' if' → logprob: -6.404839515686035
    6. 'print' → logprob: -6.529839515686035
    7. '```' → logprob: -7.154839515686035
    8. '()' → logprob: -7.154839515686035
    9. '#' → logprob: -7.404839515686035
    10. ')' → logprob: -8.029839515686035

Token 145: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03805446997284889
    2. '__' → logprob: -3.2880544662475586
    3. ' ' → logprob: -12.288054466247559
    4. ' ' → logprob: -12.413054466247559
    5. '_name' → logprob: -13.163054466247559
    6. 'name' → logprob: -13.663054466247559
    7. '  ' → logprob: -15.413054466247559
    8. '___' → logprob: -15.663054466247559
    9. ' name' → logprob: -15.913054466247559
    10. '_' → logprob: -16.163055419921875

Token 146: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4121515154838562
    2. ' ==' → logprob: -1.537151575088501
    3. 'name' → logprob: -2.662151575088501
    4. '==' → logprob: -3.037151575088501
    5. ' __' → logprob: -5.662151336669922
    6. '.name' → logprob: -8.287151336669922
    7. '_' → logprob: -8.412151336669922
    8. '.' → logprob: -8.412151336669922
    9. '__.' → logprob: -9.287151336669922
    10. '.__' → logprob: -9.662151336669922

Token 147: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.259079363080673e-05
    2. '__.__' → logprob: -11.625012397766113
    3. '==' → logprob: -12.750012397766113
    4. '__.' → logprob: -14.750012397766113
    5. ' ==' → logprob: -15.875012397766113
    6. '____' → logprob: -16.62501335144043
    7. '___' → logprob: -17.50001335144043
    8. '_' → logprob: -17.75001335144043
    9. '__
' → logprob: -18.12501335144043
    10. ' __' → logprob: -18.37501335144043

Token 148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6435369253158569
    2. '__' → logprob: -0.8935369253158569
    3. '==' → logprob: -2.7685370445251465
    4. '=="' → logprob: -6.5185370445251465
    5. '__.__' → logprob: -8.143536567687988
    6. '.__' → logprob: -8.393536567687988
    7. '.' → logprob: -8.518536567687988
    8. '_' → logprob: -8.643536567687988
    9. '=='' → logprob: -9.393536567687988
    10. '__.' → logprob: -10.643536567687988

Token 149: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029827550053596497
    2. ''' → logprob: -3.52982759475708
    3. '__' → logprob: -9.779827117919922
    4. ' "__' → logprob: -10.904827117919922
    5. '"user' → logprob: -14.029827117919922
    6. ' '__' → logprob: -14.279827117919922
    7. '"name' → logprob: -16.154827117919922
    8. '   ' → logprob: -16.654827117919922
    9. ''post' → logprob: -17.154827117919922
    10. ''"' → logprob: -17.279827117919922

Token 150: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007719860877841711
    2. 'name' → logprob: -7.750771999359131
    3. '__' → logprob: -8.000771522521973
    4. '"' → logprob: -12.500771522521973
    5. '_main' → logprob: -14.000771522521973
    6. ''' → logprob: -14.625771522521973
    7. ' main' → logprob: -15.000771522521973
    8. 'm' → logprob: -15.125771522521973
    9. 'ma' → logprob: -16.50077247619629
    10. '__':
' → logprob: -16.62577247619629

Token 151: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.06711360067129135
    2. '__' → logprob: -2.8171136379241943
    3. '__:' → logprob: -5.817113399505615
    4. ':' → logprob: -6.442113399505615
    5. '__":
' → logprob: -7.942113399505615
    6. '':' → logprob: -9.192113876342773
    7. '_' → logprob: -10.317113876342773
    8. '():
' → logprob: -10.442113876342773
    9. '__.' → logprob: -11.317113876342773
    10. '():' → logprob: -12.067113876342773

Token 152: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.776314914226532
    2. 'main' → logprob: -1.0263149738311768
    3. '   ' → logprob: -1.7763149738311768
    4. '	main' → logprob: -4.651314735412598
    5. '    
' → logprob: -6.151314735412598
    6. '
' → logprob: -8.901314735412598
    7. ' 
' → logprob: -9.151314735412598
    8. '(main' → logprob: -9.151314735412598
    9. '```' → logprob: -9.401314735412598
    10. '_main' → logprob: -9.776314735412598

Token 153: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1602245420217514
    2. 'print' (adapté à ' print') → logprob: -1.9102245569229126
    3. ' main' → logprob: -14.785224914550781
    4. 'import' → logprob: -17.28522491455078
    5. ' print' → logprob: -18.66022491455078
    6. '	main' → logprob: -19.16022491455078
    7. '(main' → logprob: -20.66022491455078
    8. '```' → logprob: -21.03522491455078
    9. '   ' → logprob: -21.53522491455078
    10. '_main' → logprob: -22.03522491455078

Token 154: '(main' (ID: 48921)
  Prédit: '(main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.030448099598288536
    2. '(' → logprob: -3.5304481983184814
    3. '()' → logprob: -7.280447959899902
    4. '(Main' → logprob: -12.405447959899902
    5. 'main' → logprob: -13.030447959899902
    6. ' (' → logprob: -14.280447959899902
    7. '(
' → logprob: -14.655447959899902
    8. '(max' → logprob: -15.030447959899902
    9. '(

' → logprob: -16.03044891357422
    10. '('' → logprob: -16.28044891357422

Token 155: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09569393843412399
    2. '()' → logprob: -2.595693826675415
    3. ')' → logprob: -4.095694065093994
    4. '();)' → logprob: -11.970693588256836
    5. ' ())' → logprob: -12.345693588256836
    6. '(' → logprob: -12.595693588256836
    7. '())
' → logprob: -13.720693588256836
    8. '()
' → logprob: -13.720693588256836
    9. '()]' → logprob: -14.095693588256836
    10. '))' → logprob: -14.345693588256836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 47.71%
Précision adaptée (1ère position): 50.98%
Précision (top 10): 89.54%
================================================================================
