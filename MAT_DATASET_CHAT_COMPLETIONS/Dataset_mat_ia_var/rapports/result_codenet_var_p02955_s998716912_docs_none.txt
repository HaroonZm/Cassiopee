================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate
N, K, *A = map(int, open(0).read().split())

def check(d):
    r = sorted([v % d for v in A])
    r_inv = [d - v for v in r]
    r_cs = [0] + list(accumulate(r))
    r_inv_cs = list(accumulate(r_inv[::-1]))[::-1] + [0]
    ret = False
    for i in range(N + 1):
        flg1 = r_cs[i] <= K
        flg2 = r_cs[i] == r_inv_cs[i]
        ret = (flg1 and flg2) or ret
    return ret

M = sum(A)
ans = 0
for i in reversed(range(1, int(M ** 0.5) + 1)):
    if M % i == 0 and check(i):
        ans = max(ans, i)
    if M % (M // i) == 0 and check(M // i):
        ans = max(ans, M // i)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045259902253746986
    2. '(
' → logprob: -8.375452995300293
    3. '.' → logprob: -8.750452995300293
    4. '\(' → logprob: -10.875452995300293
    5. ',' → logprob: -11.625452995300293
    6. '()' → logprob: -11.750452995300293
    7. '```' → logprob: -11.875452995300293
    8. 'import' → logprob: -13.000452995300293
    9. '((' → logprob: -13.125452995300293
    10. '(

' → logprob: -13.125452995300293

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007757226470857859
    2. '(
' → logprob: -4.882757186889648
    3. '(

' → logprob: -10.632757186889648
    4. ',' → logprob: -11.132757186889648
    5. '\(' → logprob: -11.257757186889648
    6. '\n' → logprob: -11.382757186889648
    7. 'import' → logprob: -11.382757186889648
    8. '
' → logprob: -11.507757186889648
    9. 'a' → logprob: -11.757757186889648
    10. '```' → logprob: -11.757757186889648

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.491611123085022
    2. ' =' → logprob: -1.241611123085022
    3. ',' → logprob: -3.3666110038757324
    4. ')' → logprob: -3.7416110038757324
    5. '.' → logprob: -3.9916110038757324
    6. ' ' → logprob: -4.116611003875732
    7. '+' → logprob: -5.741611003875732
    8. '_' → logprob: -6.616611003875732
    9. '[' → logprob: -7.991611003875732
    10. '-' → logprob: -7.991611003875732

Token 7: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5303263068199158
    2. ' K' → logprob: -1.0303263664245605
    3. ' ' → logprob: -4.0303263664245605
    4. 'M' → logprob: -4.5303263664245605
    5. 'input' → logprob: -4.6553263664245605
    6. ' M' → logprob: -5.1553263664245605
    7. ' input' → logprob: -6.0303263664245605
    8. 'x' → logprob: -6.7803263664245605
    9. 'a' → logprob: -7.2803263664245605
    10. ' k' → logprob: -7.2803263664245605

Token 8: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0790850892663002
    2. '=' → logprob: -2.579085111618042
    3. ',' → logprob: -8.829085350036621
    4. ' ' → logprob: -10.204085350036621
    5. ' ,' → logprob: -12.454085350036621
    6. '<|end|>' → logprob: -13.329085350036621
    7. ')' → logprob: -13.454085350036621
    8. ' =
' → logprob: -13.454085350036621
    9. '  ' → logprob: -14.704085350036621
    10. '.' → logprob: -14.829085350036621

Token 9: ' *' (ID: 425)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5986504554748535
    2. ' =' → logprob: -1.0986504554748535
    3. ' ' → logprob: -2.2236504554748535
    4. '*' → logprob: -6.0986504554748535
    5. ' L' → logprob: -6.5986504554748535
    6. ' *' → logprob: -7.4736504554748535
    7. ' A' → logprob: -7.7236504554748535
    8. ' M' → logprob: -7.8486504554748535
    9. 'input' → logprob: -8.098649978637695
    10. 'A' → logprob: -8.223649978637695

Token 10: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04023604840040207
    2. 'a' → logprob: -3.540235996246338
    3. ' A' → logprob: -4.915235996246338
    4. 'H' → logprob: -6.665235996246338
    5. 'h' → logprob: -8.540236473083496
    6. ' a' → logprob: -8.540236473083496
    7. 'S' → logprob: -8.665236473083496
    8. 'arr' → logprob: -8.790236473083496
    9. '```' → logprob: -8.915236473083496
    10. 'L' → logprob: -9.040236473083496

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026376472786068916
    2. ' =' → logprob: -3.651376485824585
    3. ',' → logprob: -9.651376724243164
    4. '=input' → logprob: -12.026376724243164
    5. ')' → logprob: -13.026376724243164
    6. '[' → logprob: -14.276376724243164
    7. ')=' → logprob: -14.526376724243164
    8. '=

' → logprob: -14.651376724243164
    9. '```' → logprob: -14.651376724243164
    10. '=
' → logprob: -15.401376724243164

Token 12: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5760259032249451
    2. 'map' → logprob: -0.8260259032249451
    3. 'list' → logprob: -10.32602596282959
    4. ' list' → logprob: -10.45102596282959
    5. 'input' → logprob: -11.20102596282959
    6. ' input' → logprob: -12.07602596282959
    7. ' ' → logprob: -13.20102596282959
    8. '```' → logprob: -14.07602596282959
    9. '	map' → logprob: -14.57602596282959
    10. ' open' → logprob: -14.70102596282959

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.8084341287612915
    2. '(' → logprob: -1.0584341287612915
    3. '<|end|>' → logprob: -1.8084341287612915
    4. '(lambda' → logprob: -3.558434009552002
    5. '```' → logprob: -5.308434009552002
    6. '(str' → logprob: -5.558434009552002
    7. '<|end|>' → logprob: -6.683434009552002
    8. 'int' → logprob: -7.183434009552002
    9. '<int' → logprob: -7.433434009552002
    10. ')' → logprob: -7.683434009552002

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8909120559692383
    2. ')' → logprob: -1.1409120559692383
    3. 'input' → logprob: -1.3909120559692383
    4. '(' → logprob: -4.515912055969238
    5. ',input' → logprob: -5.390912055969238
    6. ' input' → logprob: -5.890912055969238
    7. ',' → logprob: -6.390912055969238
    8. '`)' → logprob: -8.140912055969238
    9. '```' → logprob: -8.390912055969238
    10. ')(' → logprob: -8.640912055969238

Token 15: ' open' (ID: 2494)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.160296231508255
    2. ' input' → logprob: -1.9102962017059326
    3. 'open' → logprob: -9.910296440124512
    4. ')' → logprob: -11.660296440124512
    5. ' open' → logprob: -11.660296440124512
    6. '```' → logprob: -13.035296440124512
    7. '_input' → logprob: -14.160296440124512
    8. ' ' → logprob: -14.785296440124512
    9. ',input' → logprob: -15.035296440124512
    10. '=input' → logprob: -15.035296440124512

Token 16: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1318126767873764
    2. '('' → logprob: -2.131812572479248
    3. ')' → logprob: -6.631812572479248
    4. '<|end|>' → logprob: -6.631812572479248
    5. '("' → logprob: -7.256812572479248
    6. '<|end|>' → logprob: -7.631812572479248
    7. ''' → logprob: -8.506813049316406
    8. '(
' → logprob: -9.006813049316406
    9. '```' → logprob: -9.256813049316406
    10. '(None' → logprob: -9.881813049316406

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018185744993388653
    2. '(' → logprob: -6.751818656921387
    3. ''' → logprob: -7.376818656921387
    4. '"' → logprob: -11.001818656921387
    5. ''/' → logprob: -13.126818656921387
    6. '('' → logprob: -13.626818656921387
    7. '```' → logprob: -14.126818656921387
    8. ''s' → logprob: -14.376818656921387
    9. ' ' → logprob: -15.251818656921387
    10. ')' → logprob: -15.626818656921387

Token 18: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5367755889892578
    2. '()).' → logprob: -1.4117755889892578
    3. '())' → logprob: -2.786775588989258
    4. '().' → logprob: -2.786775588989258
    5. ')' → logprob: -3.536775588989258
    6. '()' → logprob: -4.786775588989258
    7. '.readline' → logprob: -5.536775588989258
    8. '()))' → logprob: -5.786775588989258
    9. '))' → logprob: -6.036775588989258
    10. '()),' → logprob: -7.661775588989258

Token 19: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.5
    3. ' readline' → logprob: -17.25
    4. ' read' → logprob: -17.625
    5. 'buffer' → logprob: -17.875
    6. '.readline' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. '.readlines' → logprob: -20.125
    9. '(read' → logprob: -20.25
    10. '_read' → logprob: -20.5

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8866606950759888
    2. '_tokens' → logprob: -1.0116606950759888
    3. '_lines' → logprob: -2.511660575866699
    4. 'lines' → logprob: -2.636660575866699
    5. '()' → logprob: -3.636660575866699
    6. '())' → logprob: -4.261660575866699
    7. ')' → logprob: -4.386660575866699
    8. 'tokens' → logprob: -4.761660575866699
    9. '```' → logprob: -5.761660575866699
    10. '_token' → logprob: -6.136660575866699

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.873571692267433e-05
    2. 'strip' → logprob: -9.625068664550781
    3. 'rstrip' → logprob: -13.375068664550781
    4. ' split' → logprob: -14.125068664550781
    5. 'replace' → logprob: -16.12506866455078
    6. 's' → logprob: -16.37506866455078
    7. '(split' → logprob: -16.75006866455078
    8. 'spl' → logprob: -16.87506866455078
    9. 'read' → logprob: -17.00006866455078
    10. '```' → logprob: -17.25006866455078

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09610778838396072
    2. '())' → logprob: -2.4711077213287354
    3. '))' → logprob: -5.7211079597473145
    4. '`)' → logprob: -6.4711079597473145
    5. '()' → logprob: -6.9711079597473145
    6. '```' → logprob: -7.4711079597473145
    7. '(' → logprob: -8.721107482910156
    8. '')' → logprob: -8.971107482910156
    9. '()))' → logprob: -9.846107482910156
    10. '")' → logprob: -9.971107482910156

Token 23: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0121691226959229
    2. '
' → logprob: -1.8871691226959229
    3. 's' → logprob: -2.137169122695923
    4. 'a' → logprob: -3.012169122695923
    5. 'acc' → logprob: -3.012169122695923
    6. 'c' → logprob: -3.512169122695923
    7. 'S' → logprob: -3.637169122695923
    8. 'A' → logprob: -3.887169122695923
    9. '```' → logprob: -4.012168884277344
    10. 'cum' → logprob: -4.137168884277344

Token 24: ' check' (ID: 2371)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.9275277256965637
    2. ' dfs' → logprob: -1.802527666091919
    3. ' max' → logprob: -1.927527666091919
    4. ' f' → logprob: -2.177527666091919
    5. ' accumulate' → logprob: -3.927527666091919
    6. ' cumulative' → logprob: -3.927527666091919
    7. ' count' → logprob: -4.052527904510498
    8. ' maximize' → logprob: -4.302527904510498
    9. ' prefix' → logprob: -4.552527904510498
    10. ' ' → logprob: -4.802527904510498

Token 25: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016499487683176994
    2. '_' → logprob: -7.626649856567383
    3. '(n' → logprob: -8.376649856567383
    4. '(s' → logprob: -8.876649856567383
    5. '(i' → logprob: -8.876649856567383
    6. '(x' → logprob: -9.251649856567383
    7. '(N' → logprob: -9.376649856567383
    8. '(length' → logprob: -10.251649856567383
    9. ' (' → logprob: -10.376649856567383
    10. '(A' → logprob: -10.501649856567383

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014749223366379738
    2. ')' → logprob: -4.389749050140381
    3. ' ):' → logprob: -6.639749050140381
    4. ',' → logprob: -7.389749050140381
    5. 'x' → logprob: -9.764749526977539
    6. '(' → logprob: -10.014749526977539
    7. '):
' → logprob: -10.389749526977539
    8. 'iff' → logprob: -10.764749526977539
    9. 'e' → logprob: -10.889749526977539
    10. ' )' → logprob: -11.014749526977539

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1715277135372162
    2. '    ' → logprob: -2.546527624130249
    3. ' ' → logprob: -3.796527624130249
    4. ' return' → logprob: -4.046527862548828
    5. '    
' → logprob: -4.796527862548828
    6. ' 
' → logprob: -4.921527862548828
    7. '     
' → logprob: -5.046527862548828
    8. '```' → logprob: -5.296527862548828
    9. ' for' → logprob: -5.671527862548828
    10. '(' → logprob: -6.421527862548828

Token 28: ' r' (ID: 428)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.336861252784729
    2. ' acc' → logprob: -1.461861252784729
    3. ' for' → logprob: -2.4618611335754395
    4. '   ' → logprob: -2.7118611335754395
    5. ' cnt' → logprob: -2.9618611335754395
    6. ' c' → logprob: -3.3368611335754395
    7. ' prev' → logprob: -3.3368611335754395
    8. ' x' → logprob: -3.9618611335754395
    9. ' cur' → logprob: -3.9618611335754395
    10. 's' → logprob: -4.2118611335754395

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007012902293354273
    2. '=' → logprob: -5.007012844085693
    3. 'ange' → logprob: -9.007013320922852
    4. 'ight' → logprob: -9.757013320922852
    5. 'e' → logprob: -10.507013320922852
    6. ' +=' → logprob: -11.507013320922852
    7. ' ' → logprob: -11.507013320922852
    8. 'ef' → logprob: -11.632013320922852
    9. 'eturn' → logprob: -11.757013320922852
    10. 'a' → logprob: -12.007013320922852

Token 30: ' sorted' (ID: 20099)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8231098055839539
    2. ' ' → logprob: -1.6981098651885986
    3. ' N' → logprob: -1.8231098651885986
    4. ' [' → logprob: -2.5731098651885986
    5. 'N' → logprob: -3.4481098651885986
    6. ' K' → logprob: -3.6981098651885986
    7. '[' → logprob: -3.8231098651885986
    8. '1' → logprob: -4.0731096267700195
    9. '[N' → logprob: -4.4481096267700195
    10. ' True' → logprob: -4.8231096267700195

Token 31: '([' (ID: 5194)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3533690571784973
    2. '((' → logprob: -2.4783689975738525
    3. '(' → logprob: -2.6033689975738525
    4. '([' → logprob: -2.9783689975738525
    5. '(a' → logprob: -3.2283689975738525
    6. '(x' → logprob: -3.4783689975738525
    7. '([(' → logprob: -5.353369235992432
    8. '(lambda' → logprob: -5.478369235992432
    9. '([-' → logprob: -6.353369235992432
    10. '(-' → logprob: -6.603369235992432

Token 32: 'v' (ID: 85)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4640083312988281
    2. 'a' → logprob: -1.0890083312988281
    3. 'i' → logprob: -4.964008331298828
    4. '(x' → logprob: -5.089008331298828
    5. '(a' → logprob: -5.339008331298828
    6. 'A' → logprob: -5.839008331298828
    7. 'd' → logprob: -6.214008331298828
    8. '-x' → logprob: -6.464008331298828
    9. '-' → logprob: -6.589008331298828
    10. 'ai' → logprob: -6.839008331298828

Token 33: ' %' (ID: 1851)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.464713990688324
    2. '-d' → logprob: -2.0897140502929688
    3. ' for' → logprob: -2.4647140502929688
    4. ' -' → logprob: -2.4647140502929688
    5. '+' → logprob: -3.7147140502929688
    6. '-i' → logprob: -4.214714050292969
    7. '-k' → logprob: -4.464714050292969
    8. '+d' → logprob: -5.089714050292969
    9. 'for' → logprob: -5.339714050292969
    10. ' +' → logprob: -5.839714050292969

Token 34: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048935357481241226
    2. ' d' → logprob: -3.0489354133605957
    3. '(d' → logprob: -9.173934936523438
    4. ' ' → logprob: -9.423934936523438
    5. 'K' → logprob: -10.048934936523438
    6. ' (' → logprob: -10.048934936523438
    7. '(' → logprob: -10.673934936523438
    8. ' K' → logprob: -11.298934936523438
    9. '	d' → logprob: -11.923934936523438
    10. '   ' → logprob: -12.236434936523438

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10023168474435806
    2. 'for' → logprob: -2.350231647491455
    3. ' ' → logprob: -11.100232124328613
    4. '-' → logprob: -12.100232124328613
    5. '	for' → logprob: -12.850232124328613
    6. ' -' → logprob: -15.100232124328613
    7. ' in' → logprob: -15.225232124328613
    8. ')' → logprob: -15.600232124328613
    9. ' if' → logprob: -15.725232124328613
    10. '   ' → logprob: -15.725232124328613

Token 36: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.38794809579849243
    2. 'v' → logprob: -1.1379480361938477
    3. ' A' → logprob: -7.262948036193848
    4. 'A' → logprob: -8.137948036193848
    5. ' ' → logprob: -10.012948036193848
    6. '	v' → logprob: -10.512948036193848
    7. '  ' → logprob: -12.762948036193848
    8. ' ' → logprob: -13.262948036193848
    9. '<|end|>' → logprob: -13.637948036193848
    10. '   ' → logprob: -14.012948036193848

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06618829071521759
    2. 'in' → logprob: -3.566188335418701
    3. ' A' → logprob: -3.816188335418701
    4. 'A' → logprob: -4.316188335418701
    5. ' ' → logprob: -8.316187858581543
    6. '   ' → logprob: -9.316187858581543
    7. '  ' → logprob: -9.941187858581543
    8. '    ' → logprob: -11.441187858581543
    9. 'v' → logprob: -12.878687858581543
    10. '<|end|>' → logprob: -13.003687858581543

Token 38: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0788913294672966
    2. ' A' → logprob: -2.5788912773132324
    3. ' ' → logprob: -14.57889175415039
    4. ')' → logprob: -15.32889175415039
    5. '	A' → logprob: -15.45389175415039
    6. '[A' → logprob: -15.82889175415039
    7. '(A' → logprob: -16.20389175415039
    8. '>A' → logprob: -16.70389175415039
    9. '   ' → logprob: -16.82889175415039
    10. ',A' → logprob: -16.95389175415039

Token 39: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.043864261358976364
    2. '],' → logprob: -3.1688642501831055
    3. ' ])' → logprob: -7.4188642501831055
    4. '])
' → logprob: -8.793864250183105
    5. ']' → logprob: -10.793864250183105
    6. ' if' → logprob: -10.918864250183105
    7. '),' → logprob: -11.418864250183105
    8. ')' → logprob: -11.543864250183105
    9. ' ],' → logprob: -11.543864250183105
    10. ']);' → logprob: -11.668864250183105

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09187763929367065
    2. '
' → logprob: -2.9668776988983154
    3. '```' → logprob: -3.8418776988983154
    4. ')' → logprob: -5.466877460479736
    5. '``' → logprob: -6.341877460479736
    6. ',' → logprob: -6.341877460479736
    7. '    
' → logprob: -6.466877460479736
    8. ')
' → logprob: -7.466877460479736
    9. ' ' → logprob: -7.466877460479736
    10. '<|end|>' → logprob: -7.716877460479736

Token 41: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7516592741012573
    2. 'n' → logprob: -1.7516592741012573
    3. '
' → logprob: -2.626659393310547
    4. 'm' → logprob: -3.376659393310547
    5. 's' → logprob: -3.501659393310547
    6. ' s' → logprob: -3.626659393310547
    7. '    
' → logprob: -3.626659393310547
    8. ' 
' → logprob: -3.626659393310547
    9. ' n' → logprob: -3.751659393310547
    10. '```' → logprob: -4.126659393310547

Token 42: '_inv' (ID: 53427)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3397607207298279
    2. '.sort' → logprob: -2.0897607803344727
    3. '.pop' → logprob: -2.4647607803344727
    4. '<|end|>' → logprob: -4.339760780334473
    5. 'def' → logprob: -4.589760780334473
    6. 'sum' → logprob: -4.714760780334473
    7. '=sum' → logprob: -4.714760780334473
    8. '.append' → logprob: -4.839760780334473
    9. ' =' → logprob: -4.964760780334473
    10. ',' → logprob: -5.339760780334473

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197194382548332
    2. '=' → logprob: -2.81197190284729
    3. ' ' → logprob: -13.061971664428711
    4. ',' → logprob: -13.811971664428711
    5. ' =[' → logprob: -15.811971664428711
    6. '   ' → logprob: -15.936971664428711
    7. '  ' → logprob: -15.936971664428711
    8. '=len' → logprob: -16.18697166442871
    9. '=[]' → logprob: -16.43697166442871
    10. '＝' → logprob: -16.56197166442871

Token 44: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.1710073947906494
    2. ' sorted' → logprob: -1.4210073947906494
    3. ' [' → logprob: -1.5460073947906494
    4. '[' → logprob: -1.9210073947906494
    5. '[d' → logprob: -2.6710073947906494
    6. '[len' → logprob: -4.92100715637207
    7. '[r' → logprob: -4.92100715637207
    8. 'd' → logprob: -7.17100715637207
    9. '(sorted' → logprob: -7.42100715637207
    10. '[-' → logprob: -7.54600715637207

Token 45: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004036963917315006
    2. '(d' → logprob: -5.754036903381348
    3. '-d' → logprob: -8.004036903381348
    4. ' d' → logprob: -8.254036903381348
    5. '(' → logprob: -9.504036903381348
    6. '(-' → logprob: -9.879036903381348
    7. '-' → logprob: -10.254036903381348
    8. ')d' → logprob: -11.379036903381348
    9. '-(' → logprob: -11.504036903381348
    10. 'v' → logprob: -11.629036903381348

Token 46: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03394350782036781
    2. ' -' → logprob: -3.4089434146881104
    3. '-v' → logprob: -8.158943176269531
    4. ']' → logprob: -12.908943176269531
    5. '-x' → logprob: -13.408943176269531
    6. ' ' → logprob: -13.658943176269531
    7. '-val' → logprob: -13.658943176269531
    8. ')' → logprob: -13.783943176269531
    9. '-i' → logprob: -14.158943176269531
    10. '-t' → logprob: -14.783943176269531

Token 47: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.320560485124588
    2. 'v' → logprob: -1.3205604553222656
    3. 'r' → logprob: -5.820560455322266
    4. 'i' → logprob: -5.945560455322266
    5. 'vi' → logprob: -7.695560455322266
    6. ' x' → logprob: -8.070560455322266
    7. '(x' → logprob: -8.445560455322266
    8. ' v' → logprob: -8.820560455322266
    9. '(v' → logprob: -9.445560455322266
    10. 'rv' → logprob: -9.695560455322266

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10026652365922928
    2. 'for' → logprob: -2.350266456604004
    3. '   ' → logprob: -10.100266456604004
    4. ' ' → logprob: -11.100266456604004
    5. '  ' → logprob: -13.225266456604004
    6. ' if' → logprob: -14.225266456604004
    7. '    ' → logprob: -14.350266456604004
    8. '	for' → logprob: -14.850266456604004
    9. 'if' → logprob: -16.22526741027832
    10. ' f' → logprob: -16.72526741027832

Token 49: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07889088988304138
    2. ' v' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.578890800476074
    4. ' in' → logprob: -14.953890800476074
    5. '	v' → logprob: -15.203890800476074
    6. '_v' → logprob: -17.32889175415039
    7. 'r' → logprob: -17.95389175415039
    8. '   ' → logprob: -18.20389175415039
    9. ',v' → logprob: -18.20389175415039
    10. ')v' → logprob: -18.32889175415039

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.575968861579895
    2. 'in' → logprob: -0.825968861579895
    3. ' ' → logprob: -11.325968742370605
    4. 'v' → logprob: -11.825968742370605
    5. 'r' → logprob: -12.325968742370605
    6. 's' → logprob: -13.825968742370605
    7. 'd' → logprob: -14.450968742370605
    8. 'i' → logprob: -14.575968742370605
    9. '  ' → logprob: -14.700968742370605
    10. 'n' → logprob: -14.950968742370605

Token 51: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.054983269423246384
    2. ' r' → logprob: -2.929983377456665
    3. ' ' → logprob: -9.804983139038086
    4. ' reversed' → logprob: -10.804983139038086
    5. '   ' → logprob: -12.054983139038086
    6. ']' → logprob: -12.179983139038086
    7. 're' → logprob: -12.179983139038086
    8. '  ' → logprob: -12.929983139038086
    9. ')' → logprob: -12.929983139038086
    10. '	r' → logprob: -14.054983139038086

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021702788770198822
    2. ']
' → logprob: -4.396702766418457
    3. ' ]' → logprob: -4.896702766418457
    4. '   ' → logprob: -7.021702766418457
    5. ']

' → logprob: -8.396702766418457
    6. ' ]
' → logprob: -8.396702766418457
    7. ']
' → logprob: -8.771702766418457
    8. ' ' → logprob: -9.646702766418457
    9. '])' → logprob: -10.271702766418457
    10. ' if' → logprob: -11.021702766418457

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13475234806537628
    2. '
' → logprob: -2.1347522735595703
    3. ' ' → logprob: -6.25975227355957
    4. '<|end|>' → logprob: -6.75975227355957
    5. '    
' → logprob: -6.88475227355957
    6. '
' → logprob: -7.13475227355957
    7. '  
' → logprob: -7.13475227355957
    8. ')' → logprob: -7.63475227355957
    9. '  ' → logprob: -8.25975227355957
    10. '[' → logprob: -8.50975227355957

Token 54: ' r' (ID: 428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5099170804023743
    2. '
' → logprob: -1.2599170207977295
    3. ' r' → logprob: -3.3849170207977295
    4. ' 
' → logprob: -4.384917259216309
    5. ' ' → logprob: -4.884917259216309
    6. 'r' (adapté à ' r') → logprob: -4.884917259216309
    7. 's' → logprob: -5.009917259216309
    8. ' s' → logprob: -5.009917259216309
    9. '```' → logprob: -5.009917259216309
    10. '    
' → logprob: -5.134917259216309

Token 55: '_cs' (ID: 82698)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0956559106707573
    2. '.pop' → logprob: -3.720655918121338
    3. '.reverse' → logprob: -3.845655918121338
    4. '=' → logprob: -4.095655918121338
    5. ' =' → logprob: -4.720655918121338
    6. 'sum' → logprob: -4.845655918121338
    7. '_sum' → logprob: -4.970655918121338
    8. ',' → logprob: -6.595655918121338
    9. '=sum' → logprob: -6.845655918121338
    10. 'sort' → logprob: -7.970655918121338

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02376888319849968
    2. ' =' → logprob: -3.773768901824951
    3. 's' → logprob: -7.648768901824951
    4. ' ' → logprob: -11.148768424987793
    5. '=[]' → logprob: -12.273768424987793
    6. 'umul' → logprob: -12.273768424987793
    7. '   ' → logprob: -12.273768424987793
    8. 'umulative' → logprob: -12.523768424987793
    9. ',' → logprob: -13.023768424987793
    10. '_' → logprob: -13.398768424987793

Token 57: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.39247509837150574
    2. 'list' → logprob: -1.1424751281738281
    3. ' [' → logprob: -6.017475128173828
    4. ' accumulate' → logprob: -6.267475128173828
    5. '[' → logprob: -7.267475128173828
    6. 'acc' → logprob: -7.892475128173828
    7. '[list' → logprob: -9.517475128173828
    8. '   ' → logprob: -10.392475128173828
    9. '(list' → logprob: -11.642475128173828
    10. '[*' → logprob: -11.767475128173828

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026526954025030136
    2. '*' → logprob: -8.875265121459961
    3. 'r' → logprob: -9.500265121459961
    4. ' ' → logprob: -10.500265121459961
    5. 'next' → logprob: -11.875265121459961
    6. 'v' → logprob: -12.625265121459961
    7. 'sum' → logprob: -12.625265121459961
    8. 'acc' → logprob: -13.250265121459961
    9. '*r' → logprob: -13.250265121459961
    10. '*v' → logprob: -13.750265121459961

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02906407229602337
    2. ',' → logprob: -3.779064178466797
    3. ']+' → logprob: -5.154064178466797
    4. ']+=' → logprob: -11.279064178466797
    5. ')' → logprob: -12.654064178466797
    6. ' ]' → logprob: -13.404064178466797
    7. '']' → logprob: -13.654064178466797
    8. '0' → logprob: -13.779064178466797
    9. '+' → logprob: -13.904064178466797
    10. '`]' → logprob: -14.279064178466797

Token 60: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9932916164398193
    2. '+' → logprob: -1.4932916164398193
    3. ',' → logprob: -1.9932916164398193
    4. '<|end|>' → logprob: -1.9932916164398193
    5. ']+' → logprob: -2.1182916164398193
    6. '<|end|>' → logprob: -5.493291854858398
    7. '
' → logprob: -5.618291854858398
    8. ' +' → logprob: -6.618291854858398
    9. ';' → logprob: -7.743291854858398
    10. ',
' → logprob: -7.868291854858398

Token 61: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0028287696186453104
    2. ' list' → logprob: -5.877828598022461
    3. '[' → logprob: -11.252828598022461
    4. '[list' → logprob: -11.627828598022461
    5. 'acc' → logprob: -14.127828598022461
    6. ' [' → logprob: -14.502828598022461
    7. '(list' → logprob: -15.252828598022461
    8. '	list' → logprob: -15.627828598022461
    9. '=list' → logprob: -15.752828598022461
    10. '   ' → logprob: -16.75282859802246

Token 62: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.008642582222819328
    2. 'acc' → logprob: -4.758642673492432
    3. '(ac' → logprob: -11.508642196655273
    4. '(' → logprob: -12.008642196655273
    5. 'ac' → logprob: -12.008642196655273
    6. '	acc' → logprob: -12.633642196655273
    7. ' accumulate' → logprob: -13.258642196655273
    8. ''acc' → logprob: -15.133642196655273
    9. '.acc' → logprob: -16.633642196655273
    10. '_acc' → logprob: -16.633642196655273

Token 63: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -7.660315895918757e-05
    2. 'uminate' → logprob: -10.625076293945312
    3. 'ulate' → logprob: -10.875076293945312
    4. 'om' → logprob: -11.625076293945312
    5. 'umul' → logprob: -11.875076293945312
    6. 'um' → logprob: -11.875076293945312
    7. 'culate' → logprob: -12.250076293945312
    8. 'aculate' → logprob: -13.500076293945312
    9. 'umm' → logprob: -14.000076293945312
    10. 'umulative' → logprob: -14.250076293945312

Token 64: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.618001053633634e-05
    2. ')' → logprob: -11.375025749206543
    3. ')(' → logprob: -11.375025749206543
    4. '(' → logprob: -13.625025749206543
    5. '[r' → logprob: -14.375025749206543
    6. ' (' → logprob: -15.000025749206543
    7. '=r' → logprob: -16.12502670288086
    8. 'r' → logprob: -16.37502670288086
    9. '](' → logprob: -16.50002670288086
    10. ',r' → logprob: -16.50002670288086

Token 65: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0273683350533247
    2. '))
' → logprob: -3.6523683071136475
    3. '[:-' → logprob: -7.402368545532227
    4. '))
' → logprob: -8.152368545532227
    5. ' ))' → logprob: -9.402368545532227
    6. '))

' → logprob: -10.402368545532227
    7. ' ' → logprob: -10.777368545532227
    8. ' ))
' → logprob: -11.652368545532227
    9. '[:' → logprob: -11.902368545532227
    10. ')))' → logprob: -12.027368545532227

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0727882906794548
    2. '
' → logprob: -2.8227882385253906
    3. 'r' → logprob: -5.572788238525391
    4. '    
' → logprob: -6.322788238525391
    5. ')' → logprob: -6.697788238525391
    6. '
' → logprob: -7.447788238525391
    7. '  
' → logprob: -7.697788238525391
    8. ' ' → logprob: -7.822788238525391
    9. ')
' → logprob: -7.822788238525391
    10. '   
' → logprob: -8.19778823852539

Token 67: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.33518990874290466
    2. 'r' (adapté à ' r') → logprob: -1.335189938545227
    3. '   ' → logprob: -4.0851898193359375
    4. ' s' → logprob: -7.2101898193359375
    5. 's' → logprob: -8.085189819335938
    6. ' ' → logprob: -8.210189819335938
    7. 'K' → logprob: -8.335189819335938
    8. 'k' → logprob: -8.397689819335938
    9. ' d' → logprob: -8.397689819335938
    10. 'c' → logprob: -8.460189819335938

Token 68: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.6338833570480347
    2. '_cs' → logprob: -0.7588833570480347
    3. 'cs' → logprob: -8.258883476257324
    4. 'inv' → logprob: -9.008883476257324
    5. '_i' → logprob: -9.133883476257324
    6. '_iv' → logprob: -9.133883476257324
    7. '_' → logprob: -9.383883476257324
    8. '_c' → logprob: -9.633883476257324
    9. '_ic' → logprob: -9.758883476257324
    10. '_s' → logprob: -10.133883476257324

Token 69: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.0002560945285949856
    2. '_' → logprob: -8.875256538391113
    3. 'cs' → logprob: -10.000256538391113
    4. '=' → logprob: -10.125256538391113
    5. ' =' → logprob: -10.875256538391113
    6. '	cs' → logprob: -13.000256538391113
    7. '_=' → logprob: -13.500256538391113
    8. '_CS' → logprob: -13.625256538391113
    9. '   ' → logprob: -13.875256538391113
    10. 's' → logprob: -14.125256538391113

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326022148132324
    2. ' =' → logprob: -0.7576022148132324
    3. ' ' → logprob: -14.88260269165039
    4. 's' → logprob: -14.88260269165039
    5. '=[]' → logprob: -15.00760269165039
    6. '   ' → logprob: -15.13260269165039
    7. '[' → logprob: -15.13260269165039
    8. '＝' → logprob: -15.38260269165039
    9. '  ' → logprob: -15.38260269165039
    10. ')' → logprob: -15.50760269165039

Token 71: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4741016626358032
    2. '[' → logprob: -0.9741016626358032
    3. ' ' → logprob: -11.349102020263672
    4. ' ' → logprob: -12.849102020263672
    5. '0' → logprob: -13.349102020263672
    6. '   ' → logprob: -13.849102020263672
    7. '([' → logprob: -14.286602020263672
    8. '<|end|>' → logprob: -14.349102020263672
    9. 'r' → logprob: -14.474102020263672
    10. 'list' → logprob: -14.536602020263672

Token 72: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -5.438573680294212e-06
    2. 'acc' → logprob: -12.500005722045898
    3. '(ac' → logprob: -14.375005722045898
    4. '	acc' → logprob: -14.500005722045898
    5. '(' → logprob: -14.750005722045898
    6. ' accumulate' → logprob: -16.1250057220459
    7. ' (' → logprob: -17.0000057220459
    8. '(it' → logprob: -17.2500057220459
    9. '_acc' → logprob: -18.0000057220459
    10. '.acc' → logprob: -18.6250057220459

Token 73: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.00020127551397308707
    2. 'um' → logprob: -8.750201225280762
    3. 'ulate' → logprob: -10.125201225280762
    4. 'umul' → logprob: -14.125201225280762
    5. 'om' → logprob: -14.125201225280762
    6. '[' → logprob: -14.375201225280762
    7. 'uminate' → logprob: -15.750201225280762
    8. 'cum' → logprob: -16.625202178955078
    9. 'ul' → logprob: -16.750202178955078
    10. 'umm' → logprob: -16.750202178955078

Token 74: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.875006675720215
    3. ' (' → logprob: -13.625006675720215
    4. '[r' → logprob: -13.625006675720215
    5. ')(' → logprob: -14.125006675720215
    6. ')' → logprob: -14.125006675720215
    7. 'r' → logprob: -15.375006675720215
    8. '(re' → logprob: -16.37500762939453
    9. '(rv' → logprob: -17.50000762939453
    10. '(row' → logprob: -17.87500762939453

Token 75: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.093505099765025e-05
    2. '))' → logprob: -11.625020980834961
    3. '_in' → logprob: -13.250020980834961
    4. ')' → logprob: -13.250020980834961
    5. '[-' → logprob: -13.375020980834961
    6. ')_' → logprob: -13.750020980834961
    7. '[' → logprob: -13.875020980834961
    8. '   ' → logprob: -14.250020980834961
    9. 'inv' → logprob: -14.250020980834961
    10. '_INV' → logprob: -14.500020980834961

Token 76: '[::-' (ID: 159890)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00423059705644846
    2. '))
' → logprob: -5.754230499267578
    3. '[' → logprob: -8.004230499267578
    4. ')' → logprob: -8.504230499267578
    5. ' ))' → logprob: -8.754230499267578
    6. '))[' → logprob: -9.254230499267578
    7. '))
' → logprob: -9.879230499267578
    8. ')))' → logprob: -9.879230499267578
    9. ' ' → logprob: -10.129230499267578
    10. '))

' → logprob: -10.254230499267578

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013478536857292056
    2. '-' → logprob: -6.87634801864624
    3. '   ' → logprob: -9.251347541809082
    4. '```' → logprob: -9.751347541809082
    5. '``' → logprob: -10.626347541809082
    6. ' ' → logprob: -10.626347541809082
    7. ']))' → logprob: -10.876347541809082
    8. '])' → logprob: -11.251347541809082
    9. '))' → logprob: -11.376347541809082
    10. '  ' → logprob: -12.251347541809082

Token 78: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010101339779794216
    2. ']))' → logprob: -4.885101318359375
    3. ',' → logprob: -7.010101318359375
    4. ')))' → logprob: -7.760101318359375
    5. ' ))' → logprob: -8.510101318359375
    6. '))[' → logprob: -8.510101318359375
    7. '))
' → logprob: -8.635101318359375
    8. ')' → logprob: -8.885101318359375
    9. '])' → logprob: -9.010101318359375
    10. '[::-' → logprob: -9.260101318359375

Token 79: '[::-' (ID: 159890)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2941701412200928
    2. '[::-' → logprob: -1.2941701412200928
    3. ')
' → logprob: -1.5441701412200928
    4. ')' → logprob: -1.7941701412200928
    5. '
' → logprob: -3.0441701412200928
    6. '[:-' → logprob: -4.544170379638672
    7. ')[' → logprob: -5.294170379638672
    8. '[' → logprob: -5.794170379638672
    9. ')

' → logprob: -6.919170379638672
    10. ')\' → logprob: -7.169170379638672

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. '-' → logprob: -11.625018119812012
    3. '])' → logprob: -12.750018119812012
    4. ' ' → logprob: -13.375018119812012
    5. '```' → logprob: -13.625018119812012
    6. ')' → logprob: -14.250018119812012
    7. '   ' → logprob: -14.500018119812012
    8. ')]' → logprob: -14.750018119812012
    9. '0' → logprob: -15.125018119812012
    10. '``' → logprob: -15.125018119812012

Token 81: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012833021173719317
    2. ')
' → logprob: -9.625128746032715
    3. '   ' → logprob: -10.250128746032715
    4. '])' → logprob: -11.625128746032715
    5. ')]' → logprob: -12.125128746032715
    6. ']' → logprob: -12.250128746032715
    7. ' )' → logprob: -12.625128746032715
    8. '))' → logprob: -13.625128746032715
    9. '）' → logprob: -13.750128746032715
    10. ')
' → logprob: -14.625128746032715

Token 82: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027775511145591736
    2. '
' → logprob: -3.652775526046753
    3. '<|end|>' → logprob: -7.277775287628174
    4. '    
' → logprob: -7.777775287628174
    5. '
' → logprob: -10.027775764465332
    6. ')' → logprob: -10.027775764465332
    7. '   
' → logprob: -10.152775764465332
    8. ' ' → logprob: -10.152775764465332
    9. '  
' → logprob: -10.402775764465332
    10. '  ' → logprob: -10.402775764465332

Token 83: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005942309740930796
    2. ' [' → logprob: -5.130942344665527
    3. ' ' → logprob: -12.255942344665527
    4. '0' → logprob: -13.380942344665527
    5. '   ' → logprob: -13.630942344665527
    6. '([' → logprob: -13.630942344665527
    7. '[-' → logprob: -14.005942344665527
    8. '  ' → logprob: -14.130942344665527
    9. '{' → logprob: -14.380942344665527
    10. '[n' → logprob: -14.380942344665527

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007444719667546451
    2. ' ' → logprob: -7.375744342803955
    3. 'd' → logprob: -9.750744819641113
    4. '-' → logprob: -10.875744819641113
    5. '   ' → logprob: -11.625744819641113
    6. 'r' → logprob: -11.875744819641113
    7. '1' → logprob: -12.125744819641113
    8. '  ' → logprob: -13.188244819641113
    9. '[' → logprob: -13.250744819641113
    10. '-d' → logprob: -13.313244819641113

Token 85: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22651690244674683
    2. ')' → logprob: -1.6015169620513916
    3. '])' → logprob: -8.101516723632812
    4. ']
' → logprob: -8.976516723632812
    5. '   ' → logprob: -9.101516723632812
    6. ' ]' → logprob: -9.101516723632812
    7. ']

' → logprob: -9.226516723632812
    8. ')
' → logprob: -9.726516723632812
    9. 'def' → logprob: -9.851516723632812
    10. '0' → logprob: -10.226516723632812

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01780899614095688
    2. '
' → logprob: -4.14280891418457
    3. '<|end|>' → logprob: -7.14280891418457
    4. ' for' → logprob: -8.01780891418457
    5. '    
' → logprob: -8.39280891418457
    6. '\n' → logprob: -10.01780891418457
    7. '' → logprob: -10.14280891418457
    8. '	return' → logprob: -10.39280891418457
    9. '
' → logprob: -10.51780891418457
    10. ' return' → logprob: -10.64280891418457

Token 87: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15176622569561005
    2. '
' → logprob: -2.651766300201416
    3. ' ' → logprob: -3.651766300201416
    4. ' 
' → logprob: -4.651766300201416
    5. ')' → logprob: -5.026766300201416
    6. '    
' → logprob: -5.401766300201416
    7. '\n' → logprob: -5.776766300201416
    8. ' \' → logprob: -5.901766300201416
    9. '  ' → logprob: -6.026766300201416
    10. '    ' → logprob: -6.151766300201416

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18124991655349731
    2. '=' → logprob: -1.8062498569488525
    3. 'urn' → logprob: -7.306250095367432
    4. ' ' → logprob: -7.556250095367432
    5. '<|end|>' → logprob: -9.056249618530273
    6. ' +=' → logprob: -9.931249618530273
    7. '  ' → logprob: -10.431249618530273
    8. 'u' → logprob: -10.806249618530273
    9. '   ' → logprob: -11.306249618530273
    10. ',' → logprob: -11.556249618530273

Token 89: ' False' (ID: 7983)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9138299226760864
    2. ' float' → logprob: -1.4138299226760864
    3. 'float' → logprob: -2.038829803466797
    4. ' ' → logprob: -2.038829803466797
    5. 'min' → logprob: -3.288829803466797
    6. ' min' → logprob: -3.413829803466797
    7. '0' → logprob: -5.163829803466797
    8. 'int' → logprob: -5.288829803466797
    9. 'r' → logprob: -5.788829803466797
    10. ' r' → logprob: -5.913829803466797

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8047781586647034
    2. '<|end|>' → logprob: -0.9297781586647034
    3. '
' → logprob: -2.0547780990600586
    4. '<|end|>' → logprob: -4.929778099060059
    5. '\n' → logprob: -5.304778099060059
    6. '	for' → logprob: -5.554778099060059
    7. ',' → logprob: -6.054778099060059
    8. '    
' → logprob: -6.304778099060059
    9. ':' → logprob: -6.929778099060059
    10. ' for' → logprob: -6.929778099060059

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2826000452041626
    2. '
' → logprob: -2.032599925994873
    3. '<|end|>' → logprob: -2.282599925994873
    4. '    
' → logprob: -5.657599925994873
    5. ' for' → logprob: -6.407599925994873
    6. '\n' → logprob: -6.657599925994873
    7. '<|end|>' → logprob: -6.657599925994873
    8. ',' → logprob: -7.032599925994873
    9. ' 
' → logprob: -7.157599925994873
    10. '  
' → logprob: -7.782599925994873

Token 92: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07400277256965637
    2. ' for' → logprob: -2.824002742767334
    3. '\t' → logprob: -5.699002742767334
    4. '\n' → logprob: -6.074002742767334
    5. '	for' → logprob: -6.074002742767334
    6. '
' → logprob: -6.199002742767334
    7. '\' → logprob: -7.824002742767334
    8. '```' → logprob: -8.199003219604492
    9. 'for' (adapté à ' for') → logprob: -8.324003219604492
    10. '    
' → logprob: -8.449003219604492

Token 93: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08017340302467346
    2. 'i' → logprob: -2.5801734924316406
    3. ' v' → logprob: -7.330173492431641
    4. ' ' → logprob: -8.83017349243164
    5. ' x' → logprob: -8.83017349243164
    6. 'v' → logprob: -9.45517349243164
    7. ' d' → logprob: -10.33017349243164
    8. ' j' → logprob: -10.58017349243164
    9. ' a' → logprob: -10.95517349243164
    10. 'x' → logprob: -10.95517349243164

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007939482107758522
    2. 'in' → logprob: -5.382939338684082
    3. ' ' → logprob: -5.882939338684082
    4. ',' → logprob: -7.632939338684082
    5. ' ,' → logprob: -11.132939338684082
    6. '  ' → logprob: -11.757939338684082
    7. '_' → logprob: -12.632939338684082
    8. 'n' → logprob: -12.882939338684082
    9. '	in' → logprob: -13.007939338684082
    10. ',n' → logprob: -13.132939338684082

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023248974233865738
    2. 'range' → logprob: -3.7732489109039307
    3. '(range' → logprob: -12.898248672485352
    4. ' ' → logprob: -14.898248672485352
    5. '	range' → logprob: -14.898248672485352
    6. ' len' → logprob: -15.898248672485352
    7. ' xrange' → logprob: -16.64824867248535
    8. '```' → logprob: -17.02324867248535
    9. ')' → logprob: -17.77324867248535
    10. '   ' → logprob: -18.27324867248535

Token 96: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.530318021774292
    2. '(' → logprob: -1.280318021774292
    3. '(len' → logprob: -2.030318021774292
    4. '(n' → logprob: -6.530318260192871
    5. '(K' → logprob: -7.655318260192871
    6. ' (' → logprob: -8.405318260192871
    7. '(
' → logprob: -9.655318260192871
    8. '1' → logprob: -10.530318260192871
    9. ' N' → logprob: -10.530318260192871
    10. 'len' → logprob: -10.780318260192871

Token 97: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7656137943267822
    2. '):' → logprob: -1.2656137943267822
    3. '+' → logprob: -1.3906137943267822
    4. ' +' → logprob: -6.390613555908203
    5. '-' → logprob: -6.515613555908203
    6. ')' → logprob: -7.640613555908203
    7. ' ):
' → logprob: -9.765613555908203
    8. ' ):' → logprob: -9.890613555908203
    9. '):
' → logprob: -10.015613555908203
    10. ' -' → logprob: -10.390613555908203

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054235339164734
    2. ' ' → logprob: -3.8955423831939697
    3. '   ' → logprob: -15.39554214477539
    4. '  ' → logprob: -16.14554214477539
    5. '
' → logprob: -17.27054214477539
    6. '2' → logprob: -17.27054214477539
    7. '```' → logprob: -17.27054214477539
    8. '	' → logprob: -17.89554214477539
    9. '0' → logprob: -18.33304214477539
    10. ')' → logprob: -18.33304214477539

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.000097274780273
    4. '2' → logprob: -16.250097274780273
    5. '   ' → logprob: -16.500097274780273
    6. '  ' → logprob: -17.500097274780273
    7. '-' → logprob: -18.000097274780273
    8. ')' → logprob: -18.187597274780273
    9. '
' → logprob: -18.375097274780273
    10. '0' → logprob: -18.375097274780273

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47526422142982483
    2. '):
' → logprob: -0.9752641916275024
    3. ')' → logprob: -7.600264072418213
    4. ':' → logprob: -7.850264072418213
    5. '):
' → logprob: -8.975264549255371
    6. ' ):
' → logprob: -9.475264549255371
    7. ' ):' → logprob: -9.600264549255371
    8. '   ' → logprob: -10.975264549255371
    9. ':
' → logprob: -12.975264549255371
    10. '):

' → logprob: -13.100264549255371

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027544403448700905
    2. '<|end|>' → logprob: -4.2775444984436035
    3. ':' → logprob: -4.9025444984436035
    4. ' ' → logprob: -6.5275444984436035
    5. '   ' → logprob: -6.9025444984436035
    6. '	' → logprob: -7.0275444984436035
    7. '<|end|>' → logprob: -7.6525444984436035
    8. '    ' → logprob: -7.6525444984436035
    9. ',' → logprob: -8.527544021606445
    10. '\' → logprob: -8.777544021606445

Token 102: ' fl' (ID: 1548)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6701768040657043
    2. ' ' → logprob: -0.9201768040657043
    3. '        ' → logprob: -3.6701767444610596
    4. '<|end|>' → logprob: -4.045176982879639
    5. ' 
' → logprob: -4.295176982879639
    6. ' if' → logprob: -4.420176982879639
    7. '\' → logprob: -4.920176982879639
    8. '        
' → logprob: -5.670176982879639
    9. '    ' → logprob: -6.420176982879639
    10. '   ' → logprob: -6.670176982879639

Token 103: 'g' (ID: 70)
  Prédit: 'ag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ag' → logprob: -0.008915432728827
    2. 'ip' → logprob: -5.633915424346924
    3. '=' → logprob: -6.508915424346924
    4. ' =' → logprob: -6.633915424346924
    5. '   ' → logprob: -6.758915424346924
    6. 'a' → logprob: -8.008915901184082
    7. '       ' → logprob: -8.508915901184082
    8. 'o' → logprob: -8.633915901184082
    9. ' ' → logprob: -9.008915901184082
    10. '  ' → logprob: -9.008915901184082

Token 104: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38754841685295105
    2. '=' → logprob: -1.1375484466552734
    3. ' ' → logprob: -7.387548446655273
    4. ' |=' → logprob: -11.012548446655273
    5. '=True' → logprob: -11.637548446655273
    6. '   ' → logprob: -11.762548446655273
    7. '|' → logprob: -12.137548446655273
    8. ',' → logprob: -12.762548446655273
    9. '=False' → logprob: -13.012548446655273
    10. '    ' → logprob: -13.137548446655273

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199289485812187
    2. ' =' → logprob: -2.811992883682251
    3. '|' → logprob: -11.311992645263672
    4. '=True' → logprob: -12.686992645263672
    5. ' |=' → logprob: -13.186992645263672
    6. '   ' → logprob: -13.311992645263672
    7. ' ' → logprob: -13.311992645263672
    8. ',' → logprob: -13.686992645263672
    9. ')' → logprob: -13.936992645263672
    10. '==' → logprob: -14.061992645263672

Token 106: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2692592740058899
    2. 'r' → logprob: -1.6442592144012451
    3. ' (' → logprob: -3.519259214401245
    4. '(r' → logprob: -4.644259452819824
    5. '(' → logprob: -6.894259452819824
    6. ' abs' → logprob: -7.269259452819824
    7. ' K' → logprob: -8.269259452819824
    8. ' ' → logprob: -8.269259452819824
    9. ' fl' → logprob: -8.394259452819824
    10. ' i' → logprob: -8.519259452819824

Token 107: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.003738087136298418
    2. '[i' → logprob: -5.878737926483154
    3. '[' → logprob: -8.253738403320312
    4. 'cs' → logprob: -9.003738403320312
    5. '   ' → logprob: -9.253738403320312
    6. 'i' → logprob: -9.628738403320312
    7. '_i' → logprob: -9.628738403320312
    8. '```' → logprob: -10.128738403320312
    9. '[_' → logprob: -10.253738403320312
    10. '<=' → logprob: -11.253738403320312

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.125020027160645
    3. '[-' → logprob: -12.625020027160645
    4. '[N' → logprob: -14.125020027160645
    5. '[I' → logprob: -14.375020027160645
    6. ' [' → logprob: -15.375020027160645
    7. 'i' → logprob: -15.750020027160645
    8. '```' → logprob: -15.875020027160645
    9. '[j' → logprob: -16.50002098083496
    10. '[u' → logprob: -16.87502098083496

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003497200319543481
    2. ' ]' → logprob: -6.253497123718262
    3. ']<=' → logprob: -7.253497123718262
    4. ']>=' → logprob: -7.503497123718262
    5. ']==' → logprob: -8.503497123718262
    6. ']+' → logprob: -9.628497123718262
    7. ' <=' → logprob: -11.378497123718262
    8. '<=' → logprob: -11.878497123718262
    9. '-' → logprob: -12.628497123718262
    10. '```' → logprob: -13.003497123718262

Token 110: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06688226759433746
    2. ' +' → logprob: -2.941882371902466
    3. '<=' → logprob: -5.191882133483887
    4. '+' → logprob: -5.566882133483887
    5. ' ==' → logprob: -6.941882133483887
    6. ' >=' → logprob: -7.816882133483887
    7. ' *' → logprob: -7.941882133483887
    8. ' ' → logprob: -8.066882133483887
    9. '<|end|>' → logprob: -9.066882133483887
    10. '==' → logprob: -9.816882133483887

Token 111: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0018930566729977727
    2. ' K' → logprob: -6.376893043518066
    3. '   ' → logprob: -10.001893043518066
    4. ' ' → logprob: -10.126893043518066
    5. '    ' → logprob: -10.376893043518066
    6. '  ' → logprob: -11.126893043518066
    7. '     ' → logprob: -11.376893043518066
    8. 'r' → logprob: -11.626893043518066
    9. '	K' → logprob: -12.126893043518066
    10. '      ' → logprob: -12.376893043518066

Token 112: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02055496536195278
    2. 'and' → logprob: -3.895555019378662
    3. ' ' → logprob: -12.145554542541504
    4. ' or' → logprob: -12.270554542541504
    5. '<|end|>' → logprob: -14.020554542541504
    6. '	and' → logprob: -14.270554542541504
    7. '   ' → logprob: -14.520554542541504
    8. '    ' → logprob: -15.020554542541504
    9. '  ' → logprob: -15.770554542541504
    10. 'or' → logprob: -16.27055549621582

Token 113: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016326550394296646
    2. 'and' → logprob: -4.141326427459717
    3. '       ' → logprob: -8.266326904296875
    4. '	and' → logprob: -11.391326904296875
    5. ' ' → logprob: -12.266326904296875
    6. '   ' → logprob: -12.391326904296875
    7. '<|end|>' → logprob: -12.516326904296875
    8. ' or' → logprob: -12.516326904296875
    9. '    ' → logprob: -13.141326904296875
    10. '        ' → logprob: -13.766326904296875

Token 114: ' fl' (ID: 1548)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00428531551733613
    2. 'and' → logprob: -5.8792853355407715
    3. '       ' → logprob: -7.2542853355407715
    4. ' ' → logprob: -8.004284858703613
    5. ' or' → logprob: -8.879284858703613
    6. '
' → logprob: -9.129284858703613
    7. '<|end|>' → logprob: -10.004284858703613
    8. ' 
' → logprob: -10.504284858703613
    9. '        ' → logprob: -10.879284858703613
    10. '        
' → logprob: -11.004284858703613

Token 115: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00013882013445254415
    2. 'gs' → logprob: -9.750139236450195
    3. '       ' → logprob: -10.625139236450195
    4. 'ag' → logprob: -10.750139236450195
    5. '   ' → logprob: -10.875139236450195
    6. ' g' → logprob: -12.750139236450195
    7. '	g' → logprob: -12.875139236450195
    8. ' ' → logprob: -13.125139236450195
    9. '           ' → logprob: -14.000139236450195
    10. '      ' → logprob: -14.375139236450195

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003068741410970688
    2. '1' → logprob: -5.878068923950195
    3. '_' → logprob: -9.628068923950195
    4. '0' → logprob: -10.128068923950195
    5. '=' → logprob: -10.128068923950195
    6. '   ' → logprob: -10.503068923950195
    7. ' ' → logprob: -11.003068923950195
    8. '==' → logprob: -11.128068923950195
    9. 'i' → logprob: -11.503068923950195
    10. '[i' → logprob: -11.503068923950195

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020572368055582047
    2. '=' → logprob: -3.8955724239349365
    3. ' ' → logprob: -10.520572662353516
    4. ' and' → logprob: -13.770572662353516
    5. '   ' → logprob: -14.145572662353516
    6. '=True' → logprob: -14.395572662353516
    7. ' ' → logprob: -15.145572662353516
    8. ' =
' → logprob: -15.645572662353516
    9. ',' → logprob: -16.145572662353516
    10. ':' → logprob: -16.270572662353516

Token 118: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.43556874990463257
    2. 'r' → logprob: -1.0605688095092773
    3. ' K' → logprob: -5.810568809509277
    4. ' (' → logprob: -6.685568809509277
    5. 'K' → logprob: -6.685568809509277
    6. ' ' → logprob: -8.060568809509277
    7. '(r' → logprob: -8.185568809509277
    8. '   ' → logprob: -8.560568809509277
    9. '  ' → logprob: -9.185568809509277
    10. ' i' → logprob: -9.435568809509277

Token 119: '_cs' (ID: 82698)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.06844446808099747
    2. '_cs' → logprob: -3.1934444904327393
    3. '[i' → logprob: -4.56844425201416
    4. 'inv' → logprob: -4.94344425201416
    5. 'i' → logprob: -6.19344425201416
    6. '   ' → logprob: -6.44344425201416
    7. 'cs' → logprob: -6.69344425201416
    8. '[' → logprob: -7.19344425201416
    9. '_i' → logprob: -7.81844425201416
    10. 'CS' → logprob: -8.06844425201416

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06367357820272446
    2. '[N' → logprob: -2.813673496246338
    3. '[' → logprob: -6.938673496246338
    4. '[-' → logprob: -7.688673496246338
    5. '[len' → logprob: -8.438673973083496
    6. '[j' → logprob: -11.063673973083496
    7. 'i' → logprob: -11.188673973083496
    8. '[n' → logprob: -11.563673973083496
    9. 'len' → logprob: -12.188673973083496
    10. '   ' → logprob: -12.813673973083496

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004184771329164505
    2. '-' → logprob: -6.129184722900391
    3. ']+' → logprob: -7.129184722900391
    4. ']<=' → logprob: -7.754184722900391
    5. ' ]' → logprob: -8.12918472290039
    6. ']>=' → logprob: -9.12918472290039
    7. '+' → logprob: -9.87918472290039
    8. '[' → logprob: -10.00418472290039
    9. '[i' → logprob: -10.12918472290039
    10. ']==' → logprob: -10.25418472290039

Token 122: ' ==' (ID: 951)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.779903769493103
    2. '[N' → logprob: -0.904903769493103
    3. '[-' → logprob: -2.4049038887023926
    4. '+' → logprob: -3.9049038887023926
    5. '[' → logprob: -4.654903888702393
    6. ' +' → logprob: -5.154903888702393
    7. 'i' → logprob: -5.404903888702393
    8. ' [' → logprob: -6.779903888702393
    9. '<=' → logprob: -7.279903888702393
    10. '-' → logprob: -7.279903888702393

Token 123: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07544109225273132
    2. ' r' → logprob: -2.7004411220550537
    3. 'K' → logprob: -5.575440883636475
    4. ' K' → logprob: -7.450440883636475
    5. 'k' → logprob: -7.700440883636475
    6. 'A' → logprob: -8.450441360473633
    7. '0' → logprob: -8.700441360473633
    8. ' ' → logprob: -9.700441360473633
    9. ' k' → logprob: -9.950441360473633
    10. ' A' → logprob: -10.325441360473633

Token 124: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.18843893706798553
    2. '_cs' → logprob: -2.063438892364502
    3. '[i' → logprob: -3.438438892364502
    4. 'cs' → logprob: -5.563438892364502
    5. 'inv' → logprob: -6.188438892364502
    6. 'i' → logprob: -6.688438892364502
    7. '_i' → logprob: -6.938438892364502
    8. 'CS' → logprob: -6.938438892364502
    9. '[' → logprob: -6.938438892364502
    10. '   ' → logprob: -7.813438892364502

Token 125: '_cs' (ID: 82698)
  Prédit: '_cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.2589557468891144
    2. '[i' → logprob: -1.633955717086792
    3. 'cs' → logprob: -4.133955955505371
    4. '[' → logprob: -5.133955955505371
    5. 'i' → logprob: -5.133955955505371
    6. 'Cs' → logprob: -6.508955955505371
    7. 's' → logprob: -7.383955955505371
    8. 'CS' → logprob: -7.508955955505371
    9. '[N' → logprob: -7.508955955505371
    10. '[-' → logprob: -7.883955955505371

Token 126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010024434886872768
    2. 'i' → logprob: -7.126002311706543
    3. '[' → logprob: -9.001002311706543
    4. '[N' → logprob: -9.751002311706543
    5. ' i' → logprob: -12.126002311706543
    6. ' [' → logprob: -12.126002311706543
    7. '   ' → logprob: -13.876002311706543
    8. ' ' → logprob: -14.376002311706543
    9. '[n' → logprob: -14.626002311706543
    10. ')' → logprob: -14.751002311706543

Token 127: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015870003029704094
    2. ' )' → logprob: -5.265870094299316
    3. '])' → logprob: -5.515870094299316
    4. ']' → logprob: -5.640870094299316
    5. ')
' → logprob: -6.390870094299316
    6. '[i' → logprob: -7.140870094299316
    7. '   ' → logprob: -8.390870094299316
    8. '       ' → logprob: -9.890870094299316
    9. ' ' → logprob: -10.515870094299316
    10. '）' → logprob: -10.515870094299316

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20772671699523926
    2. ' and' → logprob: -1.7077267169952393
    3. '
' → logprob: -5.95772647857666
    4. '	' → logprob: -6.70772647857666
    5. ' if' → logprob: -6.95772647857666
    6. '   ' → logprob: -7.70772647857666
    7. ' or' → logprob: -7.95772647857666
    8. 'and' → logprob: -8.95772647857666
    9. '           ' → logprob: -9.45772647857666
    10. ',' → logprob: -9.70772647857666

Token 129: ' ret' (ID: 2881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000782826216891408
    2. ' if' → logprob: -7.2507829666137695
    3. '	' → logprob: -10.50078296661377
    4. '
' → logprob: -11.12578296661377
    5. 'if' → logprob: -11.25078296661377
    6. ' ' → logprob: -12.12578296661377
    7. ' ' → logprob: -13.00078296661377
    8. '        
' → logprob: -13.12578296661377
    9. '   ' → logprob: -13.37578296661377
    10. ',' → logprob: -13.87578296661377

Token 130: ' =' (ID: 314)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.11819937080144882
    2. ' |=' → logprob: -2.493199348449707
    3. '=' → logprob: -3.618199348449707
    4. ' =' → logprob: -6.243199348449707
    5. ' or' → logprob: -11.118199348449707
    6. '   ' → logprob: -11.493199348449707
    7. ' ' → logprob: -11.743199348449707
    8. ' |' → logprob: -12.118199348449707
    9. '|=
' → logprob: -12.243199348449707
    10. 'or' → logprob: -12.368199348449707

Token 131: ' (' (ID: 350)
  Prédit: ' ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.5765796899795532
    2. 'ret' → logprob: -0.8265796899795532
    3. '       ' → logprob: -7.701579570770264
    4. '(ret' → logprob: -8.951580047607422
    5. '   ' → logprob: -10.576580047607422
    6. '	ret' → logprob: -11.826580047607422
    7. '    ' → logprob: -11.951580047607422
    8. 'fl' → logprob: -12.076580047607422
    9. '      ' → logprob: -13.076580047607422
    10. ' (' → logprob: -13.076580047607422

Token 132: 'fl' (ID: 1836)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.020776497200131416
    2. ' ret' → logprob: -3.8957765102386475
    3. 'fl' → logprob: -8.645776748657227
    4. '       ' → logprob: -11.145776748657227
    5. '   ' → logprob: -11.270776748657227
    6. '(ret' → logprob: -11.520776748657227
    7. '	ret' → logprob: -11.520776748657227
    8. ' fl' → logprob: -12.895776748657227
    9. ')' → logprob: -13.520776748657227
    10. 'True' → logprob: -13.645776748657227

Token 133: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.010607372038066387
    2. 'ag' → logprob: -4.6356072425842285
    3. 'r' → logprob: -7.7606072425842285
    4. '(False' → logprob: -9.510607719421387
    5. '   ' → logprob: -9.760607719421387
    6. '       ' → logprob: -10.010607719421387
    7. '(g' → logprob: -10.635607719421387
    8. '(r' → logprob: -10.760607719421387
    9. '(True' → logprob: -10.885607719421387
    10. ')' → logprob: -11.010607719421387

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. '2' → logprob: -11.87501335144043
    3. ')' → logprob: -13.00001335144043
    4. ' or' → logprob: -13.75001335144043
    5. '   ' → logprob: -14.37501335144043
    6. '<|end|>' → logprob: -14.62501335144043
    7. ' ' → logprob: -15.06251335144043
    8. '|' → logprob: -16.06251335144043
    9. '=' → logprob: -16.06251335144043
    10. ',' → logprob: -16.12501335144043

Token 135: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000739707553293556
    2. ' and' → logprob: -7.875739574432373
    3. 'or' → logprob: -8.000740051269531
    4. 'and' → logprob: -11.750740051269531
    5. ')' → logprob: -11.875740051269531
    6. '|' → logprob: -12.500740051269531
    7. '    ' → logprob: -13.125740051269531
    8. ' ' → logprob: -13.375740051269531
    9. ' |' → logprob: -13.500740051269531
    10. '   ' → logprob: -15.250740051269531

Token 136: ' fl' (ID: 1548)
  Prédit: ' fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fl' → logprob: -0.22545287013053894
    2. 'fl' → logprob: -1.6004528999328613
    3. '	fl' → logprob: -10.225452423095703
    4. ' ' → logprob: -13.600452423095703
    5. '(fl' → logprob: -14.350452423095703
    6. '   ' → logprob: -14.475452423095703
    7. ' ' → logprob: -14.725452423095703
    8. '    ' → logprob: -15.225452423095703
    9. 'flag' → logprob: -15.975452423095703
    10. '       ' → logprob: -16.225452423095703

Token 137: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00026729601086117327
    2. 'ag' → logprob: -8.625267028808594
    3. 'r' → logprob: -11.375267028808594
    4. '(' → logprob: -11.375267028808594
    5. ')' → logprob: -11.625267028808594
    6. '(g' → logprob: -11.875267028808594
    7. '   ' → logprob: -12.250267028808594
    8. 'ags' → logprob: -12.375267028808594
    9. 'gs' → logprob: -12.375267028808594
    10. '```' → logprob: -12.750267028808594

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.370294846012257e-05
    2. '1' → logprob: -10.375043869018555
    3. 'i' → logprob: -12.125043869018555
    4. '```' → logprob: -13.125043869018555
    5. '[i' → logprob: -14.000043869018555
    6. '(i' → logprob: -14.375043869018555
    7. ')' → logprob: -14.375043869018555
    8. '   ' → logprob: -14.375043869018555
    9. '=True' → logprob: -15.250043869018555
    10. 'r' → logprob: -15.375043869018555

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005732863210141659
    2. ')
' → logprob: -7.50057315826416
    3. ' or' → logprob: -12.12557315826416
    4. ' )' → logprob: -12.12557315826416
    5. ')

' → logprob: -12.37557315826416
    6. '       ' → logprob: -13.50057315826416
    7. '   ' → logprob: -13.87557315826416
    8. 'or' → logprob: -14.25057315826416
    9. ');' → logprob: -14.50057315826416
    10. ')
' → logprob: -15.00057315826416

Token 140: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03732535243034363
    2. '       ' → logprob: -3.537325382232666
    3. 'or' → logprob: -5.537325382232666
    4. '   ' → logprob: -6.037325382232666
    5. '|' → logprob: -8.037324905395508
    6. ' |' → logprob: -8.037324905395508
    7. '	or' → logprob: -8.787324905395508
    8. ' and' → logprob: -9.037324905395508
    9. '           ' → logprob: -9.537324905395508
    10. '    ' → logprob: -9.912324905395508

Token 141: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3868772089481354
    2. ' ret' → logprob: -1.136877179145813
    3. '(ret' → logprob: -12.386877059936523
    4. '	ret' → logprob: -13.886877059936523
    5. '       ' → logprob: -14.636877059936523
    6. '   ' → logprob: -14.761877059936523
    7. ' ' → logprob: -16.511877059936523
    8. '    ' → logprob: -17.136877059936523
    9. '$ret' → logprob: -17.261877059936523
    10. 'retval' → logprob: -17.386877059936523

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01962188631296158
    2. '
' → logprob: -4.394621849060059
    3. ' return' → logprob: -6.019621849060059
    4. '    
' → logprob: -6.019621849060059
    5. '	return' → logprob: -7.269621849060059
    6. ',' → logprob: -7.394621849060059
    7. 'return' → logprob: -7.894621849060059
    8. '  
' → logprob: -8.894621849060059
    9. ' 
' → logprob: -9.769621849060059
    10. '   ' → logprob: -10.144621849060059

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042222052812576294
    2. '	return' → logprob: -3.292222023010254
    3. ' return' → logprob: -5.917222023010254
    4. '    
' → logprob: -7.917222023010254
    5. '   ' → logprob: -8.417222023010254
    6. 'return' → logprob: -8.792222023010254
    7. '<|end|>' → logprob: -9.042222023010254
    8. '	' → logprob: -9.042222023010254
    9. '
' → logprob: -9.667222023010254
    10. '	
' → logprob: -9.667222023010254

Token 144: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046503725461661816
    2. 'return' (adapté à ' return') → logprob: -6.004650592803955
    3. '	return' → logprob: -6.504650592803955
    4. ' return' → logprob: -7.379650592803955
    5. ' ' → logprob: -11.004650115966797
    6. '    
' → logprob: -11.254650115966797
    7. '<|end|>' → logprob: -11.879650115966797
    8. '       ' → logprob: -12.379650115966797
    9. ')' → logprob: -13.004650115966797
    10. '   ' → logprob: -13.504650115966797

Token 145: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.038068003952503204
    2. ' ret' → logprob: -3.2880680561065674
    3. 'True' → logprob: -10.788067817687988
    4. ' True' → logprob: -12.288067817687988
    5. 'd' → logprob: -14.038067817687988
    6. 'r' → logprob: -15.913067817687988
    7. '(ret' → logprob: -16.038068771362305
    8. '	ret' → logprob: -16.163068771362305
    9. ' d' → logprob: -17.538068771362305
    10. 'False' → logprob: -17.663068771362305

Token 146: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1388031393289566
    2. '<|end|>' → logprob: -2.263803243637085
    3. ' ' → logprob: -4.763803005218506
    4. '
' → logprob: -5.013803005218506
    5. ':' → logprob: -5.388803005218506
    6. '_' → logprob: -6.138803005218506
    7. ',' → logprob: -7.388803005218506
    8. ' 
' → logprob: -7.638803005218506
    9. '\n' → logprob: -7.763803005218506
    10. '\' → logprob: -8.138803482055664

Token 147: 'M' (ID: 44)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2502320408821106
    2. 'for' → logprob: -1.7502319812774658
    3. 'd' → logprob: -3.500231981277466
    4. 'low' → logprob: -5.625232219696045
    5. 'lo' → logprob: -5.750232219696045
    6. 'left' → logprob: -5.875232219696045
    7. 'ok' → logprob: -6.125232219696045
    8. 's' → logprob: -6.625232219696045
    9. 'def' → logprob: -7.000232219696045
    10. 'L' → logprob: -7.750232219696045

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07078354060649872
    2. ' =' → logprob: -2.9457836151123047
    3. 'ax' → logprob: -4.195783615112305
    4. '=max' → logprob: -8.070783615112305
    5. ',' → logprob: -8.820783615112305
    6. 'AX' → logprob: -9.570783615112305
    7. '_' → logprob: -10.320783615112305
    8. '=int' → logprob: -10.695783615112305
    9. 'x' → logprob: -10.945783615112305
    10. '=M' → logprob: -11.195783615112305

Token 149: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3231526017189026
    2. '10' → logprob: -1.5731525421142578
    3. 'sum' → logprob: -2.698152542114258
    4. 'min' → logprob: -8.198152542114258
    5. 'int' → logprob: -8.323152542114258
    6. '100' → logprob: -8.323152542114258
    7. ' max' → logprob: -8.448152542114258
    8. '2' → logprob: -9.573152542114258
    9. ' ' → logprob: -9.823152542114258
    10. '(max' → logprob: -10.073152542114258

Token 150: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0033900451380759478
    2. 'A' → logprob: -5.753389835357666
    3. '(' → logprob: -8.503390312194824
    4. '(a' → logprob: -12.378390312194824
    5. '(
' → logprob: -13.253390312194824
    6. '((' → logprob: -13.878390312194824
    7. '([' → logprob: -14.253390312194824
    8. '(abs' → logprob: -14.253390312194824
    9. '_A' → logprob: -15.003390312194824
    10. ' A' → logprob: -15.253390312194824

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011502212146297097
    2. ')
' → logprob: -7.001150131225586
    3. ')//' → logprob: -9.001150131225586
    4. ' )' → logprob: -10.251150131225586
    5. '//' → logprob: -10.626150131225586
    6. ')+' → logprob: -10.876150131225586
    7. ')-' → logprob: -11.751150131225586
    8. ')#' → logprob: -11.876150131225586
    9. '))' → logprob: -12.126150131225586
    10. '[' → logprob: -12.751150131225586

Token 152: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6628554463386536
    2. 'l' → logprob: -0.7878554463386536
    3. 'lo' → logprob: -5.037855625152588
    4. 'ans' → logprob: -5.412855625152588
    5. 'def' → logprob: -5.537855625152588
    6. 'ok' → logprob: -5.537855625152588
    7. 'low' → logprob: -5.787855625152588
    8. 'left' → logprob: -6.037855625152588
    9. 'res' → logprob: -6.412855625152588
    10. 'from' → logprob: -6.662855625152588

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34890666604042053
    2. '=' → logprob: -1.2239066362380981
    3. ',' → logprob: -8.348906517028809
    4. ' ' → logprob: -8.473906517028809
    5. ' =
' → logprob: -12.848906517028809
    6. ')' → logprob: -13.348906517028809
    7. '=max' → logprob: -13.473906517028809
    8. '=int' → logprob: -13.473906517028809
    9. ':' → logprob: -14.098906517028809
    10. 'for' → logprob: -14.098906517028809

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25373733043670654
    2. 'M' → logprob: -2.253737449645996
    3. 'max' → logprob: -3.253737449645996
    4. '1' → logprob: -3.378737449645996
    5. ' ' → logprob: -3.628737449645996
    6. ' M' → logprob: -4.253737449645996
    7. '-' → logprob: -5.753737449645996
    8. ' max' → logprob: -6.253737449645996
    9. 'min' → logprob: -8.503737449645996
    10. ' -' → logprob: -10.128737449645996

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32773783802986145
    2. 'max' → logprob: -1.952737808227539
    3. '1' → logprob: -2.077737808227539
    4. '-' → logprob: -4.577737808227539
    5. 'M' → logprob: -6.577737808227539
    6. '[max' → logprob: -8.327737808227539
    7. '[]' → logprob: -9.702737808227539
    8. '[' → logprob: -9.702737808227539
    9. 'next' → logprob: -9.952737808227539
    10. 'sum' → logprob: -10.077737808227539

Token 156: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2840442359447479
    2. 'd' → logprob: -2.2840442657470703
    3. ' for' → logprob: -2.4090442657470703
    4. '*' → logprob: -3.7840442657470703
    5. '+' → logprob: -4.90904426574707
    6. '<|end|>' → logprob: -4.90904426574707
    7. ' ' → logprob: -5.15904426574707
    8. ' d' → logprob: -5.28404426574707
    9. 'while' → logprob: -6.90904426574707
    10. '#' → logprob: -7.03404426574707

Token 157: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003659746435005218
    2. 'd' → logprob: -8.2503662109375
    3. ' for' → logprob: -9.7503662109375
    4. 'i' → logprob: -10.5003662109375
    5. 'import' → logprob: -11.7503662109375
    6. 'def' → logprob: -12.5003662109375
    7. 'f' → logprob: -13.5003662109375
    8. '_' → logprob: -13.6253662109375
    9. 'from' → logprob: -13.7503662109375
    10. 'while' → logprob: -13.8753662109375

Token 158: ' i' (ID: 575)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.47058162093162537
    2. 'd' → logprob: -1.2205816507339478
    3. ' i' → logprob: -2.845581531524658
    4. 'i' → logprob: -3.970581531524658
    5. ' x' → logprob: -6.345581531524658
    6. 'x' → logprob: -6.970581531524658
    7. ' p' → logprob: -8.970582008361816
    8. ' v' → logprob: -9.345582008361816
    9. 'p' → logprob: -9.845582008361816
    10. 'k' → logprob: -9.845582008361816

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018490193411707878
    2. 'in' → logprob: -4.018490314483643
    3. ' ' → logprob: -8.268489837646484
    4. 'range' → logprob: -10.393489837646484
    5. ',' → logprob: -11.018489837646484
    6. '_' → logprob: -11.768489837646484
    7. 'n' → logprob: -12.268489837646484
    8. '```' → logprob: -12.518489837646484
    9. '1' → logprob: -12.643489837646484
    10. 'd' → logprob: -12.643489837646484

Token 160: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38688066601753235
    2. ' range' → logprob: -1.13688063621521
    3. '(range' → logprob: -12.886880874633789
    4. 'r' → logprob: -13.011880874633789
    5. '	range' → logprob: -13.761880874633789
    6. ' ' → logprob: -13.886880874633789
    7. '[' → logprob: -14.011880874633789
    8. '   ' → logprob: -15.136880874633789
    9. 'A' → logprob: -15.261880874633789
    10. 'int' → logprob: -15.761880874633789

Token 161: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00012011249782517552
    2. 'range' → logprob: -9.250120162963867
    3. '(' → logprob: -10.875120162963867
    4. ' range' → logprob: -12.250120162963867
    5. '	range' → logprob: -15.875120162963867
    6. ' (' → logprob: -17.750120162963867
    7. '(sorted' → logprob: -18.750120162963867
    8. '((' → logprob: -19.125120162963867
    9. ' ' → logprob: -19.500120162963867
    10. '(
' → logprob: -19.750120162963867

Token 162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.12500286102295
    3. '(M' → logprob: -14.00000286102295
    4. ' (' → logprob: -15.25000286102295
    5. '((' → logprob: -17.250003814697266
    6. '(K' → logprob: -17.625003814697266
    7. '(max' → logprob: -17.625003814697266
    8. '(int' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.250003814697266
    10. '(ans' → logprob: -18.375003814697266

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. '(' → logprob: -9.500120162963867
    3. ' ' → logprob: -10.625120162963867
    4. '2' → logprob: -11.625120162963867
    5. 'int' → logprob: -12.000120162963867
    6. 'M' → logprob: -13.000120162963867
    7. 'K' → logprob: -13.625120162963867
    8. '(M' → logprob: -14.000120162963867
    9. '(int' → logprob: -14.250120162963867
    10. 'max' → logprob: -15.000120162963867

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.392824874026701e-05
    2. '(M' → logprob: -10.87503433227539
    3. ' ,' → logprob: -11.62503433227539
    4. ',M' → logprob: -12.12503433227539
    5. '(' → logprob: -14.50003433227539
    6. ',(' → logprob: -17.25003433227539
    7. 'M' → logprob: -17.50003433227539
    8. ',int' → logprob: -18.37503433227539
    9. '(),' → logprob: -18.62503433227539
    10. ',
' → logprob: -18.75003433227539

Token 165: ' int' (ID: 677)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0002558561391197145
    2. ' M' → logprob: -8.375255584716797
    3. 'int' → logprob: -10.625255584716797
    4. ' ' → logprob: -14.875255584716797
    5. '(M' → logprob: -15.250255584716797
    6. 'max' → logprob: -15.875255584716797
    7. '   ' → logprob: -16.500255584716797
    8. ' int' → logprob: -16.500255584716797
    9. 'N' → logprob: -17.125255584716797
    10. '1' → logprob: -17.750255584716797

Token 166: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0028729885816574097
    2. '((' → logprob: -5.877872943878174
    3. '(' → logprob: -9.752873420715332
    4. 'M' → logprob: -12.252873420715332
    5. '(
' → logprob: -13.252873420715332
    6. '(pow' → logprob: -13.502873420715332
    7. '(int' → logprob: -14.502873420715332
    8. ' (' → logprob: -14.752873420715332
    9. '(s' → logprob: -15.002873420715332
    10. '(i' → logprob: -15.502873420715332

Token 167: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.008298242464661598
    2. ' **' → logprob: -4.883298397064209
    3. ' ' → logprob: -8.50829792022705
    4. ')+' → logprob: -8.75829792022705
    5. '+' → logprob: -9.00829792022705
    6. ')' → logprob: -9.88329792022705
    7. '.sqrt' → logprob: -10.13329792022705
    8. '0' → logprob: -11.00829792022705
    9. '))' → logprob: -11.13329792022705
    10. '(' → logprob: -11.25829792022705

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.281485836254433e-05
    2. '.' → logprob: -9.500092506408691
    3. '(' → logprob: -11.625092506408691
    4. ' ' → logprob: -11.625092506408691
    5. '   ' → logprob: -17.750093460083008
    6. '{' → logprob: -18.250093460083008
    7. '```' → logprob: -18.500093460083008
    8. ' ' → logprob: -19.125093460083008
    9. '  ' → logprob: -19.875093460083008
    10. ' .' → logprob: -20.125093460083008

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002690840628929436
    2. '.' → logprob: -8.375268936157227
    3. '(' → logprob: -10.375268936157227
    4. ' ' → logprob: -11.875268936157227
    5. '```' → logprob: -16.250268936157227
    6. '

' → logprob: -16.625268936157227
    7. '
' → logprob: -16.625268936157227
    8. '   ' → logprob: -16.875268936157227
    9. '-' → logprob: -16.875268936157227
    10. '{' → logprob: -17.125268936157227

Token 170: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011978477705270052
    2. '0' → logprob: -6.751197814941406
    3. '(' → logprob: -11.626197814941406
    4. '5' → logprob: -12.001197814941406
    5. '2' → logprob: -12.126197814941406
    6. '-' → logprob: -13.001197814941406
    7. '1' → logprob: -13.376197814941406
    8. ' .' → logprob: -14.251197814941406
    9. '-.' → logprob: -14.501197814941406
    10. '```' → logprob: -14.751197814941406

Token 171: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.0445127372804563e-05
    2. '```' → logprob: -12.62501049041748
    3. '666' → logprob: -14.06251049041748
    4. '6' → logprob: -14.06251049041748
    5. '4' → logprob: -14.37501049041748
    6. '.' → logprob: -14.56251049041748
    7. '333' → logprob: -14.62501049041748
    8. '   ' → logprob: -14.68751049041748
    9. '``' → logprob: -14.75001049041748
    10. '

' → logprob: -15.12501049041748

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8758462071418762
    2. ')+' → logprob: -0.8758462071418762
    3. '()' → logprob: -2.0008461475372314
    4. '())' → logprob: -4.1258463859558105
    5. '()+' → logprob: -4.2508463859558105
    6. ' )' → logprob: -7.3758463859558105
    7. '```' → logprob: -8.500845909118652
    8. '+' → logprob: -8.750845909118652
    9. '2' → logprob: -9.000845909118652
    10. ' +' → logprob: -10.000845909118652

Token 173: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.360820472240448
    2. ' +' → logprob: -1.3608205318450928
    3. ')+' → logprob: -3.8608205318450928
    4. '()+' → logprob: -4.110820293426514
    5. '()' → logprob: -5.360820293426514
    6. ')' → logprob: -5.735820293426514
    7. ' ' → logprob: -7.485820293426514
    8. '2' → logprob: -8.110820770263672
    9. '```' → logprob: -9.610820770263672
    10. '1' → logprob: -10.360820770263672

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002763518423307687
    2. '2' → logprob: -8.250276565551758
    3. ' ' → logprob: -11.125276565551758
    4. '   ' → logprob: -15.625276565551758
    5. '```' → logprob: -17.500276565551758
    6. '(' → logprob: -17.750276565551758
    7. '  ' → logprob: -18.875276565551758
    8. '+' → logprob: -19.250276565551758
    9. '`' → logprob: -20.750276565551758
    10. '
' → logprob: -20.937776565551758

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.12502384185791
    3. '2' → logprob: -11.62502384185791
    4. '   ' → logprob: -17.125022888183594
    5. '```' → logprob: -18.500022888183594
    6. '  ' → logprob: -19.000022888183594
    7. '(' → logprob: -20.000022888183594
    8. '+' → logprob: -20.125022888183594
    9. '``' → logprob: -20.375022888183594
    10. '１' → logprob: -20.437522888183594

Token 176: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.39139729738235474
    2. ')):' → logprob: -1.14139723777771
    3. '):' → logprob: -6.391397476196289
    4. ')):
' → logprob: -6.641397476196289
    5. '))' → logprob: -7.141397476196289
    6. '):
' → logprob: -7.391397476196289
    7. '   ' → logprob: -10.141397476196289
    8. ':' → logprob: -10.516397476196289
    9. ')' → logprob: -10.766397476196289
    10. ' ' → logprob: -11.141397476196289

Token 177: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7365778088569641
    2. '   ' → logprob: -0.8615778088569641
    3. ' if' → logprob: -2.6115777492523193
    4. ' ' → logprob: -4.236577987670898
    5. ':
' → logprob: -5.736577987670898
    6. '	if' → logprob: -5.861577987670898
    7. '<|end|>' → logprob: -6.236577987670898
    8. ',' → logprob: -7.236577987670898
    9. 'if' → logprob: -7.361577987670898
    10. ' :' → logprob: -7.486577987670898

Token 178: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24497078359127045
    2. '   ' → logprob: -2.1199707984924316
    3. 'if' (adapté à ' if') → logprob: -2.6199707984924316
    4. ' ' → logprob: -3.7449707984924316
    5. '	if' → logprob: -8.744970321655273
    6. '    ' → logprob: -8.869970321655273
    7. '       ' → logprob: -9.119970321655273
    8. '
' → logprob: -9.369970321655273
    9. '  ' → logprob: -9.494970321655273
    10. '    
' → logprob: -9.869970321655273

Token 179: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1798819601535797
    2. ' M' → logprob: -1.8048819303512573
    3. '   ' → logprob: -9.054882049560547
    4. ' ' → logprob: -11.054882049560547
    5. ' not' → logprob: -13.054882049560547
    6. '  ' → logprob: -14.429882049560547
    7. '(M' → logprob: -14.429882049560547
    8. ' ' → logprob: -14.554882049560547
    9. ' (' → logprob: -15.429882049560547
    10. '	M' → logprob: -15.554882049560547

Token 180: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.30637025833129883
    2. ' %' → logprob: -1.8063702583312988
    3. '%i' → logprob: -2.306370258331299
    4. '%d' → logprob: -12.30636978149414
    5. '%e' → logprob: -12.43136978149414
    6. ' ' → logprob: -13.30636978149414
    7. ' ' → logprob: -13.55636978149414
    8. '%x' → logprob: -13.80636978149414
    9. '%s' → logprob: -14.05636978149414
    10. '%c' → logprob: -14.55636978149414

Token 181: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002808202290907502
    2. ' i' → logprob: -5.877808094024658
    3. '   ' → logprob: -13.377808570861816
    4. '	i' → logprob: -14.627808570861816
    5. '<|end|>' → logprob: -15.127808570861816
    6. ' ' → logprob: -15.502808570861816
    7. '{i' → logprob: -15.627808570861816
    8. '[i' → logprob: -16.1278076171875
    9. '=i' → logprob: -16.5028076171875
    10. '(i' → logprob: -16.6278076171875

Token 182: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023301033303141594
    2. ' ==' → logprob: -3.773301124572754
    3. '0' → logprob: -10.773301124572754
    4. ')==' → logprob: -11.023301124572754
    5. '===' → logprob: -12.023301124572754
    6. ')' → logprob: -12.648301124572754
    7. '=' → logprob: -12.648301124572754
    8. '==
' → logprob: -12.898301124572754
    9. ']==' → logprob: -13.648301124572754
    10. '()==' → logprob: -13.898301124572754

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.500625610351562
    4. '  ' → logprob: -18.625625610351562
    5. '<|end|>' → logprob: -18.875625610351562
    6. '۰' → logprob: -19.000625610351562
    7. '00' → logprob: -20.250625610351562
    8. '０' → logprob: -20.500625610351562
    9. '    ' → logprob: -20.500625610351562
    10. '০' → logprob: -20.875625610351562

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -19.37501335144043
    4. 's' → logprob: -19.50001335144043
    5. '   ' → logprob: -19.75001335144043
    6. '<|end|>' → logprob: -19.81251335144043
    7. '  ' → logprob: -21.00001335144043
    8. '০' → logprob: -21.06251335144043
    9. '０' → logprob: -21.12501335144043
    10. 'i' → logprob: -21.37501335144043

Token 185: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4752190411090851
    2. ':' → logprob: -0.9752190113067627
    3. ' and' → logprob: -6.850219249725342
    4. ':

' → logprob: -10.600218772888184
    5. '):
' → logprob: -10.725218772888184
    6. 'and' → logprob: -11.600218772888184
    7. ' :
' → logprob: -11.725218772888184
    8. '():
' → logprob: -11.975218772888184
    9. ':
' → logprob: -12.725218772888184
    10. '   ' → logprob: -12.975218772888184

Token 186: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.252908319234848
    2. ' check' → logprob: -1.5029083490371704
    3. '(check' → logprob: -7.377908229827881
    4. '   ' → logprob: -8.002908706665039
    5. '	check' → logprob: -12.127908706665039
    6. ' (' → logprob: -12.502908706665039
    7. ' i' → logprob: -12.627908706665039
    8. ' ' → logprob: -12.877908706665039
    9. '  ' → logprob: -13.252908706665039
    10. 'i' → logprob: -14.002908706665039

Token 187: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3133050203323364
    2. '(M' → logprob: -1.3133050203323364
    3. '(' → logprob: -10.188304901123047
    4. '   ' → logprob: -13.563304901123047
    5. '(I' → logprob: -13.563304901123047
    6. '((' → logprob: -13.563304901123047
    7. ' (' → logprob: -13.938304901123047
    8. '(
' → logprob: -15.313304901123047
    9. '(int' → logprob: -15.313304901123047
    10. 'M' → logprob: -15.938304901123047

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20155073702335358
    2. '):
' → logprob: -1.7015507221221924
    3. ':' → logprob: -10.201550483703613
    4. ' ):' → logprob: -10.201550483703613
    5. '   ' → logprob: -10.326550483703613
    6. ')' → logprob: -11.451550483703613
    7. ' ):
' → logprob: -11.451550483703613
    8. '):
' → logprob: -12.951550483703613
    9. '):

' → logprob: -13.076550483703613
    10. ' ' → logprob: -13.451550483703613

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5197094082832336
    2. '       ' → logprob: -1.2697093486785889
    3. ' ans' → logprob: -2.519709348678589
    4. 'ans' → logprob: -3.519709348678589
    5. '	ans' → logprob: -5.144709587097168
    6. '
' → logprob: -5.269709587097168
    7. ':' → logprob: -6.644709587097168
    8. ':
' → logprob: -7.144709587097168
    9. '(ans' → logprob: -7.269709587097168
    10. '    
' → logprob: -8.644709587097168

Token 190: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0007036144379526377
    2. '   ' → logprob: -7.750703811645508
    3. ' ans' → logprob: -8.250703811645508
    4. '	ans' → logprob: -11.750703811645508
    5. 'print' → logprob: -13.250703811645508
    6. 'answer' → logprob: -13.875703811645508
    7. '(ans' → logprob: -14.500703811645508
    8. '       ' → logprob: -14.625703811645508
    9. '
' → logprob: -16.250703811645508
    10. '_ans' → logprob: -16.875703811645508

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858986660838127
    2. '=' → logprob: -3.0485899448394775
    3. '=i' → logprob: -13.923589706420898
    4. ' +=' → logprob: -14.173589706420898
    5. '+=' → logprob: -14.298589706420898
    6. '=max' → logprob: -16.7985897064209
    7. ' ' → logprob: -17.1735897064209
    8. '＝' → logprob: -17.6735897064209
    9. '=f' → logprob: -18.0485897064209
    10. ' |=' → logprob: -18.1735897064209

Token 192: ' max' (ID: 2999)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5804802179336548
    2. 'M' → logprob: -1.0804802179336548
    3. ' M' → logprob: -3.0804800987243652
    4. ' i' → logprob: -3.0804800987243652
    5. 'max' → logprob: -4.955480098724365
    6. ' max' → logprob: -6.330480098724365
    7. '   ' → logprob: -8.580480575561523
    8. ' ' → logprob: -10.455480575561523
    9. 'int' → logprob: -12.205480575561523
    10. 'Max' → logprob: -12.455480575561523

Token 193: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.7888184528565034e-05
    2. '(i' → logprob: -9.8750581741333
    3. 'ans' → logprob: -12.0000581741333
    4. '	ans' → logprob: -16.625057220458984
    5. '(answer' → logprob: -16.875057220458984
    6. '(' → logprob: -16.875057220458984
    7. '(an' → logprob: -17.625057220458984
    8. '(a' → logprob: -18.250057220458984
    9. '((' → logprob: -18.875057220458984
    10. '```' → logprob: -19.000057220458984

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004126011393964291
    2. ' ,' → logprob: -6.129126071929932
    3. ',i' → logprob: -6.254126071929932
    4. ' i' → logprob: -11.504125595092773
    5. 'i' → logprob: -12.504125595092773
    6. 'ans' → logprob: -13.754125595092773
    7. ',
' → logprob: -14.504125595092773
    8. ' ans' → logprob: -15.129125595092773
    9. '   ' → logprob: -15.254125595092773
    10. '(i' → logprob: -15.629125595092773

Token 195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014163863845169544
    2. ' i' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.014163970947266
    4. ' ' → logprob: -16.764163970947266
    5. '	i' → logprob: -17.764163970947266
    6. ' ' → logprob: -18.014163970947266
    7. '  ' → logprob: -18.139163970947266
    8. ' 
' → logprob: -18.639163970947266
    9. ')' → logprob: -18.764163970947266
    10. '
' → logprob: -19.514163970947266

Token 196: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5952603816986084
    2. '       ' → logprob: -0.8452603816986084
    3. ')' → logprob: -3.9702603816986084
    4. ' )
' → logprob: -8.720260620117188
    5. '   ' → logprob: -9.595260620117188
    6. ')
' → logprob: -11.720260620117188
    7. ' )' → logprob: -11.970260620117188
    8. '
' → logprob: -12.095260620117188
    9. ');' → logprob: -12.220260620117188
    10. '	' → logprob: -13.345260620117188

Token 197: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015484257601201534
    2. '   ' → logprob: -6.5015482902526855
    3. 'break' → logprob: -11.251548767089844
    4. ' break' → logprob: -11.501548767089844
    5. ' if' → logprob: -11.751548767089844
    6. '	' → logprob: -12.501548767089844
    7. '
' → logprob: -13.126548767089844
    8. 'print' → logprob: -13.751548767089844
    9. '	break' → logprob: -13.876548767089844
    10. '        
' → logprob: -13.876548767089844

Token 198: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004694749601185322
    2. 'if' (adapté à ' if') → logprob: -6.004694938659668
    3. ' if' → logprob: -6.254694938659668
    4. 'elif' → logprob: -8.504694938659668
    5. ' elif' → logprob: -9.504694938659668
    6. '    
' → logprob: -11.754694938659668
    7. '
' → logprob: -12.379694938659668
    8. '       ' → logprob: -12.504694938659668
    9. ' ' → logprob: -14.129694938659668
    10. '  ' → logprob: -15.129694938659668

Token 199: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.920696496963501
    2. ' i' → logprob: -1.420696496963501
    3. 'M' → logprob: -1.545696496963501
    4. 'i' → logprob: -1.920696496963501
    5. ' ' → logprob: -8.170696258544922
    6. '   ' → logprob: -9.420696258544922
    7. ' (' → logprob: -9.545696258544922
    8. '(i' → logprob: -10.420696258544922
    9. '(M' → logprob: -11.233196258544922
    10. ' not' → logprob: -11.420696258544922

Token 200: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5751610994338989
    2. '//' → logprob: -0.9501610994338989
    3. '%' → logprob: -3.5751609802246094
    4. ' %' → logprob: -4.200160980224609
    5. ' ' → logprob: -6.200160980224609
    6. '/i' → logprob: -6.325160980224609
    7. '%i' → logprob: -6.700160980224609
    8. '   ' → logprob: -7.450160980224609
    9. ' ' → logprob: -7.700160980224609
    10. '  ' → logprob: -8.20016098022461

Token 201: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.003222987288609147
    2. 'M' → logprob: -6.003222942352295
    3. '(' → logprob: -7.878222942352295
    4. ' (' → logprob: -8.378223419189453
    5. '(i' → logprob: -9.003223419189453
    6. '   ' → logprob: -12.253223419189453
    7. ' M' → logprob: -12.878223419189453
    8. '{' → logprob: -13.003223419189453
    9. '(int' → logprob: -13.003223419189453
    10. 'i' → logprob: -14.128223419189453

Token 202: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.9146995327901095e-05
    2. ' M' → logprob: -11.375019073486328
    3. '   ' → logprob: -12.250019073486328
    4. '(M' → logprob: -12.875019073486328
    5. ' ' → logprob: -16.250019073486328
    6. 'i' → logprob: -16.250019073486328
    7. '  ' → logprob: -17.125019073486328
    8. '{' → logprob: -17.375019073486328
    9. ')' → logprob: -18.250019073486328
    10. '	M' → logprob: -18.875019073486328

Token 203: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.001820958685129881
    2. ' //' → logprob: -6.376821041107178
    3. '/i' → logprob: -9.62682056427002
    4. '```' → logprob: -10.62682056427002
    5. '   ' → logprob: -11.75182056427002
    6. '/' → logprob: -11.75182056427002
    7. 'i' → logprob: -12.25182056427002
    8. '#' → logprob: -13.50182056427002
    9. '%i' → logprob: -13.62682056427002
    10. ' ' → logprob: -13.75182056427002

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00025871701654978096
    2. ' i' → logprob: -8.500258445739746
    3. '(i' → logprob: -10.250258445739746
    4. ' (' → logprob: -11.500258445739746
    5. '(' → logprob: -12.000258445739746
    6. '   ' → logprob: -13.500258445739746
    7. ' ' → logprob: -13.500258445739746
    8. '(M' → logprob: -15.375258445739746
    9. '```' → logprob: -15.875258445739746
    10. ')' → logprob: -16.250259399414062

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008753741858527064
    2. ')==' → logprob: -7.125875473022461
    3. ' )' → logprob: -10.000875473022461
    4. '==' → logprob: -10.625875473022461
    5. ' ==' → logprob: -15.375875473022461
    6. ' ' → logprob: -15.750875473022461
    7. '   ' → logprob: -15.750875473022461
    8. '0' → logprob: -15.750875473022461
    9. '```' → logprob: -16.00087547302246
    10. ')!=' → logprob: -16.37587547302246

Token 206: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1269523650407791
    2. ' ==' → logprob: -2.1269524097442627
    3. '0' → logprob: -11.501952171325684
    4. '==
' → logprob: -12.376952171325684
    5. '===' → logprob: -12.876952171325684
    6. ' ' → logprob: -12.876952171325684
    7. 'and' → logprob: -13.501952171325684
    8. '=' → logprob: -13.751952171325684
    9. '```' → logprob: -13.876952171325684
    10. ')==' → logprob: -15.001952171325684

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. 'i' → logprob: -17.000179290771484
    4. '   ' → logprob: -17.625179290771484
    5. '  ' → logprob: -18.250179290771484
    6. ' i' → logprob: -18.875179290771484
    7. '     ' → logprob: -20.812679290771484
    8. '۰' → logprob: -20.812679290771484
    9. ' ' → logprob: -21.000179290771484
    10. '00' → logprob: -21.125179290771484

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. 'i' → logprob: -15.375035285949707
    4. '   ' → logprob: -17.250036239624023
    5. ' i' → logprob: -17.625036239624023
    6. '  ' → logprob: -18.250036239624023
    7. '1' → logprob: -19.062536239624023
    8. '```' → logprob: -19.062536239624023
    9. '     ' → logprob: -19.312536239624023
    10. '(i' → logprob: -19.375036239624023

Token 209: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0067201098427176476
    2. 'and' → logprob: -5.006720066070557
    3. '   ' → logprob: -12.506720542907715
    4. ' ' → logprob: -14.381720542907715
    5. '	and' → logprob: -15.381720542907715
    6. '    ' → logprob: -15.756720542907715
    7. '  ' → logprob: -16.6317195892334
    8. '<|end|>' → logprob: -17.1317195892334
    9. ' и' → logprob: -18.1317195892334
    10. ' ' → logprob: -18.6317195892334

Token 210: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.004663541913032532
    2. ' check' → logprob: -5.379663467407227
    3. 'i' → logprob: -11.379663467407227
    4. 'M' → logprob: -11.504663467407227
    5. '   ' → logprob: -11.754663467407227
    6. ' M' → logprob: -12.254663467407227
    7. ' ' → logprob: -12.504663467407227
    8. '  ' → logprob: -12.754663467407227
    9. ' i' → logprob: -13.754663467407227
    10. '	check' → logprob: -14.879663467407227

Token 211: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00014978687977418303
    2. '(' → logprob: -9.375149726867676
    3. 'M' → logprob: -9.750149726867676
    4. '((' → logprob: -12.000149726867676
    5. ' (' → logprob: -15.500149726867676
    6. '(
' → logprob: -15.750149726867676
    7. '(

' → logprob: -17.750150680541992
    8. '   ' → logprob: -18.000150680541992
    9. ' M' → logprob: -18.375150680541992
    10. '[M' → logprob: -19.000150680541992

Token 212: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.009866821579635143
    2. ' //' → logprob: -4.634866714477539
    3. '/i' → logprob: -9.384866714477539
    4. '/' → logprob: -11.634866714477539
    5. '   ' → logprob: -11.759866714477539
    6. ' ' → logprob: -13.134866714477539
    7. '
' → logprob: -13.384866714477539
    8. ' ' → logprob: -13.384866714477539
    9. ' /' → logprob: -13.384866714477539
    10. '//
' → logprob: -14.134866714477539

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020542588084936142
    2. ' i' → logprob: -3.895542621612549
    3. '	i' → logprob: -15.27054214477539
    4. ' ' → logprob: -15.64554214477539
    5. ')' → logprob: -16.27054214477539
    6. ' (' → logprob: -16.27054214477539
    7. '   ' → logprob: -16.77054214477539
    8. '(i' → logprob: -16.89554214477539
    9. ')i' → logprob: -17.02054214477539
    10. '(' → logprob: -18.39554214477539

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9728273153305054
    2. '):
' → logprob: -1.0978273153305054
    3. ')' → logprob: -2.097827434539795
    4. 'i' → logprob: -2.347827434539795
    5. '[i' → logprob: -2.972827434539795
    6. '   ' → logprob: -4.722827434539795
    7. ')):' → logprob: -5.972827434539795
    8. '):

' → logprob: -6.347827434539795
    9. ' i' → logprob: -6.722827434539795
    10. ')i' → logprob: -6.972827434539795

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.959636033978313e-05
    2. '   ' → logprob: -9.375089645385742
    3. ' ans' → logprob: -12.625089645385742
    4. '           ' → logprob: -14.625089645385742
    5. '      ' → logprob: -15.125089645385742
    6. 'ans' → logprob: -15.875089645385742
    7. '     ' → logprob: -16.000089645385742
    8. '
' → logprob: -16.125089645385742
    9. '	ans' → logprob: -17.000089645385742
    10. '<|end|>' → logprob: -17.000089645385742

Token 216: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.023303015157580376
    2. ' ans' → logprob: -3.7733030319213867
    3. '   ' → logprob: -10.023303031921387
    4. '	ans' → logprob: -11.648303031921387
    5. '(ans' → logprob: -13.398303031921387
    6. '       ' → logprob: -13.773303031921387
    7. 'answer' → logprob: -13.773303031921387
    8. '
' → logprob: -15.148303031921387
    9. '           ' → logprob: -15.648303031921387
    10. '_ans' → logprob: -15.648303031921387

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132634460926056
    2. ' =' → logprob: -1.3132634162902832
    3. '=max' → logprob: -13.313263893127441
    4. 'max' → logprob: -18.188262939453125
    5. ' ' → logprob: -18.813262939453125
    6. ' max' → logprob: -19.688262939453125
    7. '=
' → logprob: -19.813262939453125
    8. '＝' → logprob: -19.938262939453125
    9. '   ' → logprob: -20.313262939453125
    10. ')' → logprob: -20.438262939453125

Token 218: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0004306692280806601
    2. ' max' → logprob: -7.750430583953857
    3. '(max' → logprob: -18.375431060791016
    4. 'M' → logprob: -18.750431060791016
    5. '	max' → logprob: -19.875431060791016
    6. '=max' → logprob: -20.625431060791016
    7. ' ' → logprob: -21.625431060791016
    8. 'Max' → logprob: -21.750431060791016
    9. 'm' → logprob: -22.375431060791016
    10. '_max' → logprob: -22.750431060791016

Token 219: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.676981345459353e-06
    2. 'ans' → logprob: -12.625005722045898
    3. '(' → logprob: -13.000005722045898
    4. '(answer' → logprob: -17.3750057220459
    5. '	ans' → logprob: -18.5000057220459
    6. '```' → logprob: -18.8750057220459
    7. '(
' → logprob: -19.3750057220459
    8. ' (' → logprob: -20.0000057220459
    9. '(an' → logprob: -20.6250057220459
    10. ' ans' → logprob: -20.8750057220459

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.805981972021982e-05
    2. '(ans' → logprob: -9.50009822845459
    3. ' ,' → logprob: -11.37509822845459
    4. 'ans' → logprob: -11.87509822845459
    5. ' ans' → logprob: -12.75009822845459
    6. ',
' → logprob: -13.75009822845459
    7. '_ans' → logprob: -16.000097274780273
    8. ')' → logprob: -16.125097274780273
    9. 'Ans' → logprob: -16.125097274780273
    10. ',max' → logprob: -16.250097274780273

Token 221: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.42883196473121643
    2. ' M' → logprob: -1.053831934928894
    3. ' ' → logprob: -9.428832054138184
    4. '(M' → logprob: -10.428832054138184
    5. ' (' → logprob: -11.553832054138184
    6. ' ' → logprob: -12.178832054138184
    7. '   ' → logprob: -12.303832054138184
    8. '  ' → logprob: -13.803832054138184
    9. '    ' → logprob: -14.928832054138184
    10. '(' → logprob: -15.678832054138184

Token 222: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3134129047393799
    2. '//' → logprob: -1.3134129047393799
    3. '%' → logprob: -9.6884126663208
    4. ')' → logprob: -10.6884126663208
    5. '#' → logprob: -11.1884126663208
    6. ' //
' → logprob: -11.4384126663208
    7. '   ' → logprob: -11.6884126663208
    8. ' ' → logprob: -11.6884126663208
    9. ' ' → logprob: -12.0634126663208
    10. ' %' → logprob: -12.1884126663208

Token 223: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021859495900571346
    2. ' i' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.377185821533203
    4. '	i' → logprob: -16.127185821533203
    5. ' ' → logprob: -17.002185821533203
    6. ')i' → logprob: -17.502185821533203
    7. '   ' → logprob: -17.627185821533203
    8. '_i' → logprob: -18.252185821533203
    9. ')' → logprob: -19.002185821533203
    10. '*i' → logprob: -19.127185821533203

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008417880744673312
    2. ')
' → logprob: -7.1258416175842285
    3. ' )' → logprob: -10.625842094421387
    4. ')i' → logprob: -12.000842094421387
    5. '   ' → logprob: -12.250842094421387
    6. '))' → logprob: -14.625842094421387
    7. ')

' → logprob: -14.625842094421387
    8. ' )
' → logprob: -15.750842094421387
    9. ')
' → logprob: -15.875842094421387
    10. ')return' → logprob: -16.37584114074707

Token 225: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.625000953674316
    3. '
' → logprob: -15.125000953674316
    4. '```' → logprob: -16.125
    5. ')' → logprob: -17.375
    6. ')
' → logprob: -17.75
    7. 'for' → logprob: -17.875
    8. 'pr' → logprob: -18.5
    9. '    
' → logprob: -18.875
    10. '(print' → logprob: -19.125

Token 226: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.750075340270996
    3. 'ans' → logprob: -11.125075340270996
    4. '('' → logprob: -13.375075340270996
    5. '(answer' → logprob: -15.750075340270996
    6. '("' → logprob: -15.875075340270996
    7. '(f' → logprob: -16.00007438659668
    8. ' (' → logprob: -16.50007438659668
    9. '	ans' → logprob: -16.87507438659668
    10. '()' → logprob: -17.00007438659668

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '()' → logprob: -15.875001907348633
    5. '())' → logprob: -15.875001907348633
    6. '))' → logprob: -16.500001907348633
    7. '+' → logprob: -16.625001907348633
    8. ')`' → logprob: -17.375001907348633
    9. '`)' → logprob: -17.500001907348633
    10. '```' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 225
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 193
Précision stricte (1ère position): 46.22%
Précision adaptée (1ère position): 47.11%
Précision (top 10): 85.78%
================================================================================
