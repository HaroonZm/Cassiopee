================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

number_of_positions, maximum_value_per_position, number_of_constraints = map(int, input().split())

constraint_list = []

for _ in range(number_of_constraints):
    start_index, end_index, required_difference, constraint_reward = map(int, input().split())
    constraint_list.append(
        (start_index, end_index, required_difference, constraint_reward)
    )

def calculate_total_reward(candidate_sequence, constraint_list):
    total_reward = 0
    for start_index, end_index, required_difference, constraint_reward in constraint_list:
        if candidate_sequence[end_index - 1] - candidate_sequence[start_index - 1] == required_difference:
            total_reward += constraint_reward
    return total_reward

maximum_total_reward = 0

possible_values = range(1, maximum_value_per_position + 1)
all_possible_sequences = itertools.combinations_with_replacement(possible_values, number_of_positions)

for candidate_sequence in all_possible_sequences:
    current_reward = calculate_total_reward(candidate_sequence, constraint_list)
    if current_reward > maximum_total_reward:
        maximum_total_reward = current_reward

print(maximum_total_reward)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'number' (ID: 8096)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.3464544432936236e-05
    2. '\' → logprob: -11.750043869018555
    3. 'import' → logprob: -11.875043869018555
    4. '(' → logprob: -12.250043869018555
    5. ' as' → logprob: -12.625043869018555
    6. ',' → logprob: -12.625043869018555
    7. '```' → logprob: -12.625043869018555
    8. 'as' → logprob: -12.750043869018555
    9. '\.' → logprob: -13.625043869018555
    10. '.
' → logprob: -14.250043869018555

Token 4: '_of' (ID: 8023)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020139472326263785
    2. '.' → logprob: -9.375201225280762
    3. ')' → logprob: -9.875201225280762
    4. '_s' → logprob: -10.000201225280762
    5. '_' → logprob: -12.000201225280762
    6. ' s' → logprob: -12.000201225280762
    7. '.s' → logprob: -12.625201225280762
    8. '(' → logprob: -13.625201225280762
    9. '(s' → logprob: -14.875201225280762
    10. 'S' → logprob: -15.250201225280762

Token 5: '_positions' (ID: 93193)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13558273017406464
    2. '_s' → logprob: -2.260582685470581
    3. '_items' → logprob: -4.51058292388916
    4. 's' → logprob: -6.63558292388916
    5. '_pairs' → logprob: -6.88558292388916
    6. '_spaces' → logprob: -7.26058292388916
    7. '_per' → logprob: -7.38558292388916
    8. ' ' → logprob: -7.63558292388916
    9. ' _' → logprob: -7.63558292388916
    10. '_iter' → logprob: -7.63558292388916

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7962649464607239
    2. '_' → logprob: -1.046264886856079
    3. ')' → logprob: -2.296264886856079
    4. ' =' → logprob: -2.796264886856079
    5. '(' → logprob: -4.296265125274658
    6. '.' → logprob: -4.546265125274658
    7. '[' → logprob: -5.046265125274658
    8. 's' → logprob: -6.046265125274658
    9. ',' → logprob: -6.921265125274658
    10. ' ' → logprob: -7.796265125274658

Token 7: ' maximum' (ID: 10562)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.22557294368743896
    2. 'number' → logprob: -1.725572943687439
    3. ' =' → logprob: -4.8505730628967285
    4. '=' → logprob: -5.2255730628967285
    5. ' ' → logprob: -6.9755730628967285
    6. ' positions' → logprob: -7.1005730628967285
    7. ' possible' → logprob: -7.3505730628967285
    8. ' itertools' → logprob: -7.3505730628967285
    9. ' range' → logprob: -7.4755730628967285
    10. ' numbers' → logprob: -7.8505730628967285

Token 8: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9388247728347778
    2. '_value' → logprob: -1.0638247728347778
    3. '=' → logprob: -1.9388247728347778
    4. '_positions' → logprob: -3.3138246536254883
    5. '_space' → logprob: -4.063824653625488
    6. '_number' → logprob: -4.438824653625488
    7. '_values' → logprob: -4.688824653625488
    8. ' =' → logprob: -4.688824653625488
    9. '_length' → logprob: -5.063824653625488
    10. '_per' → logprob: -5.438824653625488

Token 9: '_per' (ID: 10938)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029774906113743782
    2. '=' → logprob: -3.5297749042510986
    3. ',' → logprob: -11.02977466583252
    4. ' ' → logprob: -12.77977466583252
    5. '_' → logprob: -13.65477466583252
    6. ')' → logprob: -14.15477466583252
    7. ' ,' → logprob: -14.52977466583252
    8. '  ' → logprob: -14.52977466583252
    9. '_space' → logprob: -14.77977466583252
    10. ' =
' → logprob: -15.02977466583252

Token 10: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3872169256210327
    2. '_position' → logprob: -1.1372169256210327
    3. '_positions' → logprob: -8.637216567993164
    4. '_variable' → logprob: -10.512216567993164
    5. ' _' → logprob: -10.512216567993164
    6. '_value' → logprob: -10.762216567993164
    7. '_space' → logprob: -11.262216567993164
    8. 'position' → logprob: -11.512216567993164
    9. '_field' → logprob: -11.637216567993164
    10. ' ' → logprob: -12.137216567993164

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288800835609436
    2. '=' → logprob: -2.2378880977630615
    3. ',' → logprob: -9.86288833618164
    4. ' ' → logprob: -11.86288833618164
    5. ' =
' → logprob: -13.11288833618164
    6. ' ,' → logprob: -14.11288833618164
    7. '```' → logprob: -14.11288833618164
    8. ')' → logprob: -14.48788833618164
    9. '[' → logprob: -14.48788833618164
    10. '_' → logprob: -15.11288833618164

Token 12: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04478362947702408
    2. '=' → logprob: -3.794783592224121
    3. ' number' → logprob: -5.169783592224121
    4. ' maximum' → logprob: -5.169783592224121
    5. 'maximum' → logprob: -6.419783592224121
    6. 'number' → logprob: -6.669783592224121
    7. ' ' → logprob: -6.669783592224121
    8. ' _' → logprob: -7.294783592224121
    9. ' values' → logprob: -7.669783592224121
    10. ' sequence' → logprob: -7.794783592224121

Token 13: '_of' (ID: 8023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8838380575180054
    2. '_' → logprob: -1.1338380575180054
    3. ' =' → logprob: -1.3838380575180054
    4. '_of' → logprob: -4.883838176727295
    5. '_=' → logprob: -6.133838176727295
    6. 's' → logprob: -6.508838176727295
    7. ',' → logprob: -6.758838176727295
    8. ')' → logprob: -6.758838176727295
    9. '_space' → logprob: -8.633837699890137
    10. '_for' → logprob: -9.258837699890137

Token 14: '_constraints' (ID: 153522)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.6172091364860535
    2. '_positions' → logprob: -1.3672091960906982
    3. '_elements' → logprob: -3.1172091960906982
    4. '_' → logprob: -3.3672091960906982
    5. '_items' → logprob: -3.9922091960906982
    6. '_com' → logprob: -4.117208957672119
    7. '_choices' → logprob: -4.117208957672119
    8. '_per' → logprob: -4.492208957672119
    9. '_options' → logprob: -4.492208957672119
    10. '_iterations' → logprob: -4.492208957672119

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06308930367231369
    2. '=' → logprob: -2.813089370727539
    3. ',' → logprob: -6.813089370727539
    4. '<|end|>' → logprob: -11.938089370727539
    5. ')' → logprob: -12.438089370727539
    6. ' ,' → logprob: -12.563089370727539
    7. ' ' → logprob: -13.063089370727539
    8. ' =
' → logprob: -13.188089370727539
    9. '_' → logprob: -14.063089370727539
    10. '```' → logprob: -14.688089370727539

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.007707180920988321
    2. 'map' → logprob: -4.882707118988037
    3. ' ' → logprob: -9.507707595825195
    4. ' input' → logprob: -11.382707595825195
    5. ' [' → logprob: -12.007707595825195
    6. '	map' → logprob: -12.882707595825195
    7. 'input' → logprob: -13.257707595825195
    8. '0' → logprob: -13.382707595825195
    9. ' list' → logprob: -13.382707595825195
    10. '(map' → logprob: -15.007707595825195

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2174283266067505
    2. '(' → logprob: -1.7174283266067505
    3. '(str' → logprob: -4.467428207397461
    4. '(lambda' → logprob: -5.592428207397461
    5. '<|end|>' → logprob: -8.592428207397461
    6. '(
' → logprob: -8.717428207397461
    7. 'int' → logprob: -9.592428207397461
    8. '<int' → logprob: -9.717428207397461
    9. '[int' → logprob: -9.967428207397461
    10. '```' → logprob: -10.717428207397461

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6658022403717041
    2. '(' → logprob: -1.040802240371704
    3. ')' → logprob: -2.165802240371704
    4. 'input' → logprob: -4.540802001953125
    5. '('' → logprob: -6.540802001953125
    6. '<|end|>' → logprob: -6.665802001953125
    7. '(user' → logprob: -7.165802001953125
    8. '())' → logprob: -7.790802001953125
    9. '(data' → logprob: -8.040802001953125
    10. '()' → logprob: -8.165802001953125

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16029885411262512
    2. ' input' → logprob: -1.9102988243103027
    3. ')' → logprob: -9.910299301147461
    4. '(input' → logprob: -10.785299301147461
    5. '=input' → logprob: -13.285299301147461
    6. ',input' → logprob: -13.910299301147461
    7. '<input' → logprob: -14.160299301147461
    8. ' )' → logprob: -14.410299301147461
    9. '[input' → logprob: -16.53529930114746
    10. '	input' → logprob: -16.66029930114746

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.020155254751443863
    2. '()' → logprob: -4.270155429840088
    3. '())' → logprob: -5.145155429840088
    4. '(' → logprob: -9.64515495300293
    5. ')' → logprob: -10.39515495300293
    6. '('' → logprob: -11.77015495300293
    7. '());' → logprob: -11.77015495300293
    8. '()[' → logprob: -11.89515495300293
    9. '('').' → logprob: -12.02015495300293
    10. '.readline' → logprob: -12.52015495300293

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044496997725218534
    2. 'strip' → logprob: -7.7504448890686035
    3. ' split' → logprob: -11.625445365905762
    4. 'rstrip' → logprob: -12.500445365905762
    5. '(split' → logprob: -14.375445365905762
    6. ')' → logprob: -14.375445365905762
    7. 'spl' → logprob: -14.875445365905762
    8. 'read' → logprob: -16.250444412231445
    9. 'startswith' → logprob: -18.125444412231445
    10. 's' → logprob: -18.125444412231445

Token 22: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038368843495845795
    2. '())' → logprob: -3.4133689403533936
    3. '))' → logprob: -5.5383687019348145
    4. '()' → logprob: -7.5383687019348145
    5. '(' → logprob: -9.663369178771973
    6. '`)' → logprob: -9.913369178771973
    7. '()))' → logprob: -10.413369178771973
    8. ')))' → logprob: -11.163369178771973
    9. '),' → logprob: -11.288369178771973
    10. '>)' → logprob: -11.538369178771973

Token 23: 'constraint' (ID: 98763)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5199720859527588
    2. 'possible' → logprob: -1.7699720859527588
    3. 'result' → logprob: -2.894972085952759
    4. 'constraints' → logprob: -3.019972085952759
    5. 'sequence' → logprob: -3.144972085952759
    6. 'valid' → logprob: -3.519972085952759
    7. 'position' → logprob: -4.26997184753418
    8. 'constraint' → logprob: -4.89497184753418
    9. ' positions' → logprob: -5.51997184753418
    10. 'for' → logprob: -5.64497184753418

Token 24: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005247395019978285
    2. '_s' → logprob: -5.255247592926025
    3. '_' → logprob: -11.505247116088867
    4. ' s' → logprob: -13.630247116088867
    5. '_values' → logprob: -15.255247116088867
    6. '_constraints' → logprob: -15.255247116088867
    7. '_positions' → logprob: -15.755247116088867
    8. '_list' → logprob: -16.005247116088867
    9. '	s' → logprob: -16.005247116088867
    10. '_lines' → logprob: -16.380247116088867

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07015983015298843
    2. '=' → logprob: -2.820159912109375
    3. '[' → logprob: -5.695159912109375
    4. '.' → logprob: -5.945159912109375
    5. 's' → logprob: -6.820159912109375
    6. '[:]' → logprob: -7.945159912109375
    7. '.append' → logprob: -8.320159912109375
    8. '_' → logprob: -8.445159912109375
    9. '[]' → logprob: -9.945159912109375
    10. '=[]' → logprob: -10.070159912109375

Token 26: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2033555507659912
    2. '[]' → logprob: -1.7033555507659912
    3. '[' → logprob: -6.70335578918457
    4. ' [' → logprob: -7.32835578918457
    5. ' ' → logprob: -11.20335578918457
    6. 'list' → logprob: -11.57835578918457
    7. '[int' → logprob: -11.82835578918457
    8. '[]
' → logprob: -12.20335578918457
    9. ' list' → logprob: -12.57835578918457
    10. '[list' → logprob: -12.57835578918457

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00014025058771949261
    2. ' for' → logprob: -8.875140190124512
    3. '```' → logprob: -16.500141143798828
    4. '	for' → logprob: -16.625141143798828
    5. '
' → logprob: -16.750141143798828
    6. 'For' → logprob: -18.375141143798828
    7. 'f' → logprob: -18.750141143798828
    8. '_for' → logprob: -19.000141143798828
    9. 'n' → logprob: -19.000141143798828
    10. '<|end|>' → logprob: -19.125141143798828

Token 28: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.013401972129940987
    2. '_' → logprob: -5.013401985168457
    3. ' i' → logprob: -5.013401985168457
    4. ' ' → logprob: -11.263401985168457
    5. ' ‌' → logprob: -13.638401985168457
    6. ' ' → logprob: -14.013401985168457
    7. ' position' → logprob: -14.638401985168457
    8. '_i' → logprob: -15.013401985168457
    9. ' ▁' → logprob: -16.26340103149414
    10. 'i' → logprob: -16.38840103149414

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0302849430590868
    2. 'in' → logprob: -3.530284881591797
    3. ' ' → logprob: -7.780284881591797
    4. 's' → logprob: -11.030284881591797
    5. 'i' → logprob: -11.155284881591797
    6. 'import' → logprob: -11.155284881591797
    7. '	in' → logprob: -11.155284881591797
    8. 'range' → logprob: -11.780284881591797
    9. 'n' → logprob: -11.780284881591797
    10. '  ' → logprob: -12.030284881591797

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008203497272916138
    2. ' range' → logprob: -7.125820159912109
    3. '(range' → logprob: -12.12582015991211
    4. 'number' → logprob: -12.87582015991211
    5. '	range' → logprob: -13.62582015991211
    6. 'ra' → logprob: -13.75082015991211
    7. 'ran' → logprob: -13.87582015991211
    8. 'r' → logprob: -14.37582015991211
    9. '```' → logprob: -14.37582015991211
    10. '[' → logprob: -14.62582015991211

Token 31: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.03806937485933304
    2. '(' → logprob: -3.288069486618042
    3. 'number' → logprob: -11.288069725036621
    4. '(int' → logprob: -11.538069725036621
    5. ' (' → logprob: -13.288069725036621
    6. '(range' → logprob: -13.788069725036621
    7. '(n' → logprob: -14.413069725036621
    8. '(quantity' → logprob: -14.538069725036621
    9. '(
' → logprob: -15.163069725036621
    10. '(s' → logprob: -15.288069725036621

Token 32: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.01732301525771618
    2. 'of' → logprob: -4.642323017120361
    3. '_positions' → logprob: -5.517323017120361
    4. '(number' → logprob: -6.267323017120361
    5. '_constraints' → logprob: -7.767323017120361
    6. ')' → logprob: -8.017322540283203
    7. 'positions' → logprob: -9.142322540283203
    8. '```' → logprob: -9.142322540283203
    9. '(' → logprob: -9.267322540283203
    10. '_' → logprob: -9.267322540283203

Token 33: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -0.2216818630695343
    2. '_positions' → logprob: -1.721681833267212
    3. 'constraints' → logprob: -3.971681833267212
    4. 'const' → logprob: -7.846682071685791
    5. 'positions' → logprob: -7.971682071685791
    6. '_' → logprob: -8.721681594848633
    7. ' constraints' → logprob: -9.096681594848633
    8. 's' → logprob: -9.596681594848633
    9. 'constraint' → logprob: -10.346681594848633
    10. '_const' → logprob: -10.721681594848633

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02067081443965435
    2. ':' → logprob: -4.0206708908081055
    3. ')' → logprob: -6.0206708908081055
    4. '):
' → logprob: -9.895670890808105
    5. ' ):' → logprob: -10.645670890808105
    6. ':)' → logprob: -12.895670890808105
    7. ',' → logprob: -13.145670890808105
    8. '():' → logprob: -13.270670890808105
    9. ']:' → logprob: -13.645670890808105
    10. ':**' → logprob: -13.895670890808105

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44782692193984985
    2. ' constraint' → logprob: -1.197826862335205
    3. ' constraints' → logprob: -4.197826862335205
    4. ' input' → logprob: -4.197826862335205
    5. 'constraint' → logprob: -4.572826862335205
    6. ' 
' → logprob: -5.197826862335205
    7. ' line' → logprob: -5.447826862335205
    8. '    
' → logprob: -6.322826862335205
    9. '    ' → logprob: -6.572826862335205
    10. ' inputs' → logprob: -6.947826862335205

Token 36: ' start' (ID: 1604)
  Prédit: ' constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.13165657222270966
    2. 'constraint' → logprob: -2.2566566467285156
    3. ' line' → logprob: -4.256656646728516
    4. ' constraints' → logprob: -6.506656646728516
    5. ' position' → logprob: -6.506656646728516
    6. ' input' → logprob: -7.506656646728516
    7. '   ' → logprob: -8.006656646728516
    8. ' positions' → logprob: -9.381656646728516
    9. 'constraints' → logprob: -9.756656646728516
    10. 'line' → logprob: -9.881656646728516

Token 37: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3070126473903656
    2. '_,' → logprob: -2.3070125579833984
    3. '_position' → logprob: -2.5570125579833984
    4. '_' → logprob: -3.1820125579833984
    5. '_pos' → logprob: -3.6820125579833984
    6. ',_' → logprob: -4.307012557983398
    7. '_index' → logprob: -5.182012557983398
    8. ' ,' → logprob: -7.557012557983398
    9. '_idx' → logprob: -8.182012557983398
    10. '_point' → logprob: -8.557012557983398

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000739707553293556
    2. ' ,' → logprob: -7.250739574432373
    3. ',end' → logprob: -11.750740051269531
    4. ',int' → logprob: -12.125740051269531
    5. ',value' → logprob: -13.000740051269531
    6. ',length' → logprob: -13.125740051269531
    7. ',input' → logprob: -13.250740051269531
    8. ',index' → logprob: -13.625740051269531
    9. '=' → logprob: -13.625740051269531
    10. '<|end|>' → logprob: -13.875740051269531

Token 39: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.1292710304260254
    2. 'end' → logprob: -2.1292710304260254
    3. 'space' → logprob: -6.629271030426025
    4. '=end' → logprob: -8.254270553588867
    5. ' space' → logprob: -8.379270553588867
    6. '_end' → logprob: -9.004270553588867
    7. ' finish' → logprob: -9.754270553588867
    8. '<|end|>' → logprob: -10.004270553588867
    9. ' ' → logprob: -10.129270553588867
    10. 'finish' → logprob: -10.129270553588867

Token 40: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.005395257379859686
    2. '_' → logprob: -5.255395412445068
    3. '_token' → logprob: -9.88039493560791
    4. '_position' → logprob: -10.38039493560791
    5. '_indices' → logprob: -10.38039493560791
    6. '_idx' → logprob: -11.63039493560791
    7. ',_' → logprob: -12.75539493560791
    8. ' _' → logprob: -12.75539493560791
    9. '_,' → logprob: -12.88039493560791
    10. '_indexes' → logprob: -12.88039493560791

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006041454034857452
    2. ' ,' → logprob: -8.000603675842285
    3. '=' → logprob: -8.625603675842285
    4. ',value' → logprob: -9.875603675842285
    5. ' =' → logprob: -10.250603675842285
    6. 'value' → logprob: -15.000603675842285
    7. ',input' → logprob: -15.375603675842285
    8. ' ' → logprob: -15.750603675842285
    9. ',val' → logprob: -15.750603675842285
    10. ',int' → logprob: -15.875603675842285

Token 42: ' required' (ID: 3759)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.7533402442932129
    2. ' min' → logprob: -1.628340244293213
    3. 'minimum' → logprob: -1.878340244293213
    4. ' value' → logprob: -3.003340244293213
    5. ' maximum' → logprob: -3.503340244293213
    6. 'min' → logprob: -4.003340244293213
    7. ' max' → logprob: -4.253340244293213
    8. ' required' → logprob: -4.253340244293213
    9. 'value' → logprob: -4.503340244293213
    10. ' constraint' → logprob: -5.253340244293213

Token 43: '_difference' (ID: 123771)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.4497124254703522
    2. '_sum' → logprob: -1.1997123956680298
    3. '_count' → logprob: -2.9497125148773193
    4. '_' → logprob: -5.44971227645874
    5. '_number' → logprob: -6.57471227645874
    6. '_values' → logprob: -6.69971227645874
    7. '_length' → logprob: -7.19971227645874
    8. '_amount' → logprob: -8.574712753295898
    9. '_sequence' → logprob: -9.699712753295898
    10. '_frequency' → logprob: -9.699712753295898

Token 44: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05504578351974487
    2. '=' → logprob: -2.9300458431243896
    3. ',' → logprob: -8.930046081542969
    4. ' ' → logprob: -10.680046081542969
    5. ')' → logprob: -12.680046081542969
    6. ' ,' → logprob: -13.180046081542969
    7. '_' → logprob: -14.555046081542969
    8. '   ' → logprob: -14.805046081542969
    9. '=input' → logprob: -15.055046081542969
    10. '  ' → logprob: -15.180046081542969

Token 45: ' constraint' (ID: 44762)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6379681825637817
    2. ' _' → logprob: -1.8879681825637817
    3. ' =' → logprob: -2.262968063354492
    4. '=' → logprob: -3.512968063354492
    5. ' ' → logprob: -4.012968063354492
    6. '_=' → logprob: -4.012968063354492
    7. ' operator' → logprob: -4.137968063354492
    8. ' value' → logprob: -4.637968063354492
    9. ' max' → logprob: -4.637968063354492
    10. ' minimum' → logprob: -4.762968063354492

Token 46: '_reward' (ID: 88836)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0006049798685126007
    2. '_value' → logprob: -9.000604629516602
    3. 'type' → logprob: -9.125604629516602
    4. '_' → logprob: -9.375604629516602
    5. '_values' → logprob: -9.375604629516602
    6. ' =' → logprob: -9.875604629516602
    7. '=' → logprob: -10.250604629516602
    8. '_list' → logprob: -10.750604629516602
    9. 's' → logprob: -11.000604629516602
    10. '_kind' → logprob: -11.500604629516602

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365388140082359
    2. '=' → logprob: -3.408653974533081
    3. ' ' → logprob: -12.40865421295166
    4. ',' → logprob: -13.03365421295166
    5. ')' → logprob: -13.65865421295166
    6. '=input' → logprob: -15.78365421295166
    7. '  ' → logprob: -15.90865421295166
    8. '   ' → logprob: -16.408653259277344
    9. 's' → logprob: -16.658653259277344
    10. '    ' → logprob: -16.908653259277344

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3868790566921234
    2. 'map' → logprob: -1.1368790864944458
    3. '	map' → logprob: -12.136878967285156
    4. '   ' → logprob: -13.386878967285156
    5. ' ' → logprob: -14.511878967285156
    6. 'm' → logprob: -15.136878967285156
    7. '  ' → logprob: -16.011878967285156
    8. ' ' → logprob: -16.636878967285156
    9. '```' → logprob: -17.011878967285156
    10. '(map' → logprob: -17.136878967285156

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00014454191841650754
    2. '(' → logprob: -9.125144958496094
    3. 'int' → logprob: -11.500144958496094
    4. '<|end|>' → logprob: -11.500144958496094
    5. '[int' → logprob: -12.000144958496094
    6. '<int' → logprob: -13.000144958496094
    7. '=int' → logprob: -13.250144958496094
    8. '(str' → logprob: -13.500144958496094
    9. '(input' → logprob: -13.750144958496094
    10. '(lambda' → logprob: -14.000144958496094

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1535167694091797
    2. ',input' → logprob: -2.0285167694091797
    3. '(input' → logprob: -4.77851676940918
    4. 'input' → logprob: -6.15351676940918
    5. '(' → logprob: -8.77851676940918
    6. '(),' → logprob: -9.90351676940918
    7. ')' → logprob: -10.77851676940918
    8. '```' → logprob: -11.65351676940918
    9. ' ,' → logprob: -12.40351676940918
    10. ' input' → logprob: -13.15351676940918

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141363143920898
    2. ' input' → logprob: -1.701413631439209
    3. '	input' → logprob: -16.201414108276367
    4. '=input' → logprob: -16.326414108276367
    5. '(input' → logprob: -16.951414108276367
    6. ')' → logprob: -17.326414108276367
    7. '<input' → logprob: -17.701414108276367
    8. '_input' → logprob: -17.701414108276367
    9. ',input' → logprob: -17.701414108276367
    10. ' ' → logprob: -17.826414108276367

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.273621405242011e-05
    2. '()' → logprob: -10.375032424926758
    3. ')' → logprob: -14.250032424926758
    4. ' ().' → logprob: -14.625032424926758
    5. '().__' → logprob: -16.250032424926758
    6. '.' → logprob: -16.375032424926758
    7. '>().' → logprob: -16.500032424926758
    8. '())' → logprob: -17.500032424926758
    9. '('').' → logprob: -17.750032424926758
    10. '.readline' → logprob: -17.875032424926758

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. '(split' → logprob: -14.375001907348633
    3. ' split' → logprob: -14.375001907348633
    4. 'strip' → logprob: -15.625001907348633
    5. 'spl' → logprob: -15.750001907348633
    6. 'plit' → logprob: -17.250001907348633
    7. 'rstrip' → logprob: -17.500001907348633
    8. ')' → logprob: -17.750001907348633
    9. '_split' → logprob: -19.000001907348633
    10. '.split' → logprob: -19.250001907348633

Token 54: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0042154015973210335
    2. '())' → logprob: -6.004215240478516
    3. '()' → logprob: -6.379215240478516
    4. '))' → logprob: -10.754215240478516
    5. ')
' → logprob: -12.129215240478516
    6. '`)' → logprob: -12.254215240478516
    7. ' )' → logprob: -12.754215240478516
    8. '(' → logprob: -13.379215240478516
    9. ')`' → logprob: -13.379215240478516
    10. '   ' → logprob: -14.504215240478516

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004594722762703896
    2. 'constraint' → logprob: -5.504594802856445
    3. ' constraint' → logprob: -8.504594802856445
    4. '    
' → logprob: -9.754594802856445
    5. '```' → logprob: -10.004594802856445
    6. '
' → logprob: -10.129594802856445
    7. '   ' → logprob: -10.629594802856445
    8. ')' → logprob: -10.879594802856445
    9. ' ' → logprob: -11.004594802856445
    10. '.constraint' → logprob: -11.129594802856445

Token 56: ' constraint' (ID: 44762)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraint' (adapté à ' constraint') → logprob: -0.5124889016151428
    2. ' constraint' → logprob: -1.262488842010498
    3. '   ' → logprob: -2.137488842010498
    4. '.constraint' → logprob: -10.262489318847656
    5. '```' → logprob: -11.012489318847656
    6. '
' → logprob: -11.262489318847656
    7. '_constraint' → logprob: -11.262489318847656
    8. '  ' → logprob: -12.512489318847656
    9. '    
' → logprob: -12.887489318847656
    10. '   ' → logprob: -13.012489318847656

Token 57: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.000009536743164
    3. 's' → logprob: -13.000009536743164
    4. '_s' → logprob: -15.250009536743164
    5. '_lst' → logprob: -15.500009536743164
    6. '_lists' → logprob: -15.750009536743164
    7. '_data' → logprob: -16.750009536743164
    8. ' _' → logprob: -17.375009536743164
    9. '_lista' → logprob: -17.375009536743164
    10. '_append' → logprob: -17.500009536743164

Token 58: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038082581013441086
    2. '.' → logprob: -3.2880825996398926
    3. '.extend' → logprob: -10.663082122802734
    4. '.push' → logprob: -12.288082122802734
    5. ' .' → logprob: -12.663082122802734
    6. '.setdefault' → logprob: -13.038082122802734
    7. '.app' → logprob: -13.288082122802734
    8. '.add' → logprob: -13.788082122802734
    9. '.Append' → logprob: -13.913082122802734
    10. '.py' → logprob: -13.913082122802734

Token 59: '(
' (ID: 1607)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006735742092132568
    2. '(' → logprob: -5.006735801696777
    3. '([' → logprob: -11.506735801696777
    4. '(((' → logprob: -12.381735801696777
    5. '(([' → logprob: -13.006735801696777
    6. '(
' → logprob: -13.506735801696777
    7. '(('' → logprob: -13.631735801696777
    8. '((_' → logprob: -15.131735801696777
    9. '(start' → logprob: -15.381735801696777
    10. '(tuple' → logprob: -15.631735801696777

Token 60: '       ' (ID: 309)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.041625212877988815
    2. '(' → logprob: -3.2916252613067627
    3. '   ' → logprob: -5.916625022888184
    4. ' (' → logprob: -7.791625022888184
    5. '[start' → logprob: -8.541625022888184
    6. '((' → logprob: -8.916625022888184
    7. ')' → logprob: -9.791625022888184
    8. '(
' → logprob: -10.166625022888184
    9. '(Start' → logprob: -11.041625022888184
    10. '(end' → logprob: -12.041625022888184

Token 61: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0015299785882234573
    2. '(' (adapté à ' (') → logprob: -7.626530170440674
    3. '   ' → logprob: -7.626530170440674
    4. ' (' → logprob: -8.001529693603516
    5. '[start' → logprob: -8.501529693603516
    6. '(
' → logprob: -12.251529693603516
    7. '       ' → logprob: -12.376529693603516
    8. '(Start' → logprob: -13.126529693603516
    9. '((' → logprob: -13.876529693603516
    10. '(end' → logprob: -13.876529693603516

Token 62: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.4974866644479334e-05
    2. ' start' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. '[start' → logprob: -17.000015258789062
    5. ')' → logprob: -17.250015258789062
    6. 'star' → logprob: -17.875015258789062
    7. '(start' → logprob: -17.875015258789062
    8. '	start' → logprob: -18.625015258789062
    9. 'number' → logprob: -18.750015258789062
    10. ',start' → logprob: -19.375015258789062

Token 63: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -12.375007629394531
    3. ')' → logprob: -14.625007629394531
    4. 'index' → logprob: -14.875007629394531
    5. '_INDEX' → logprob: -15.125007629394531
    6. ')_' → logprob: -15.250007629394531
    7. ' _' → logprob: -15.375007629394531
    8. '_indices' → logprob: -15.750007629394531
    9. '_idx' → logprob: -15.875007629394531
    10. '-' → logprob: -16.00000762939453

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016661781817674637
    2. '-' → logprob: -4.141661643981934
    3. ' -' → logprob: -7.516661643981934
    4. ' ,' → logprob: -10.016661643981934
    5. ',end' → logprob: -11.141661643981934
    6. ',
' → logprob: -11.266661643981934
    7. '-,' → logprob: -12.766661643981934
    8. ')' → logprob: -13.391661643981934
    9. '```' → logprob: -13.891661643981934
    10. ' ' → logprob: -14.016661643981934

Token 65: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.20143136382102966
    2. 'end' → logprob: -1.701431393623352
    3. '(end' → logprob: -12.326431274414062
    4. ',end' → logprob: -12.576431274414062
    5. '[end' → logprob: -13.201431274414062
    6. '=end' → logprob: -13.451431274414062
    7. '    ' → logprob: -13.951431274414062
    8. ' ' → logprob: -13.951431274414062
    9. '	end' → logprob: -14.076431274414062
    10. '        ' → logprob: -14.076431274414062

Token 66: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0019520643400028348
    2. 'ex' → logprob: -7.126952171325684
    3. 'index' → logprob: -7.126952171325684
    4. 'dex' → logprob: -8.751952171325684
    5. 'd' → logprob: -9.251952171325684
    6. '_idx' → logprob: -11.001952171325684
    7. 'x' → logprob: -11.126952171325684
    8. '_' → logprob: -11.376952171325684
    9. '```' → logprob: -11.376952171325684
    10. ',' → logprob: -12.001952171325684

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0100624169572257e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',
' → logprob: -12.750020027160645
    4. '   ' → logprob: -14.000020027160645
    5. ')' → logprob: -14.500020027160645
    6. '```' → logprob: -15.000020027160645
    7. ',,,' → logprob: -16.37502098083496
    8. '),' → logprob: -16.50002098083496
    9. '`,' → logprob: -16.62502098083496
    10. ',,' → logprob: -16.87502098083496

Token 68: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.12696506083011627
    2. 'required' → logprob: -2.126965045928955
    3. '	required' → logprob: -11.501965522766113
    4. '(required' → logprob: -11.501965522766113
    5. '    ' → logprob: -11.751965522766113
    6. ' requested' → logprob: -13.251965522766113
    7. '   ' → logprob: -13.251965522766113
    8. ' ' → logprob: -13.501965522766113
    9. '.required' → logprob: -14.126965522766113
    10. '_required' → logprob: -14.251965522766113

Token 69: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.125009536743164
    3. 'difference' → logprob: -13.000009536743164
    4. '_d' → logprob: -14.250009536743164
    5. '_distance' → logprob: -14.375009536743164
    6. '_value' → logprob: -15.125009536743164
    7. '_number' → logprob: -17.250009536743164
    8. '_diff' → logprob: -17.250009536743164
    9. ' _' → logprob: -17.250009536743164
    10. '_constraint' → logprob: -17.875009536743164

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ' ,' → logprob: -11.625031471252441
    3. ')' → logprob: -11.750031471252441
    4. '   ' → logprob: -11.875031471252441
    5. ',
' → logprob: -12.250031471252441
    6. '),' → logprob: -14.625031471252441
    7. ',const' → logprob: -14.750031471252441
    8. '       ' → logprob: -14.875031471252441
    9. ',)' → logprob: -15.500031471252441
    10. 'constraint' → logprob: -16.375030517578125

Token 71: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.4740886688232422
    2. 'constraint' → logprob: -0.9740886688232422
    3. ' ' → logprob: -12.974088668823242
    4. '    ' → logprob: -13.099088668823242
    5. ')' → logprob: -13.474088668823242
    6. '   ' → logprob: -13.724088668823242
    7. ' ' → logprob: -13.849088668823242
    8. 'Constraint' → logprob: -13.849088668823242
    9. '.constraint' → logprob: -13.974088668823242
    10. '_constraint' → logprob: -14.224088668823242

Token 72: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -7.226628895296017e-06
    2. '_rewards' → logprob: -12.625007629394531
    3. '_' → logprob: -13.250007629394531
    4. 'reward' → logprob: -13.500007629394531
    5. '_constraint' → logprob: -14.875007629394531
    6. 'Reward' → logprob: -15.625007629394531
    7. ' _' → logprob: -17.12500762939453
    8. '_r' → logprob: -17.37500762939453
    9. '_list' → logprob: -17.37500762939453
    10. ')' → logprob: -17.62500762939453

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001847062085289508
    2. '))' → logprob: -8.750185012817383
    3. '   ' → logprob: -11.250185012817383
    4. ')
' → logprob: -11.375185012817383
    5. ' )' → logprob: -13.750185012817383
    6. ')))' → logprob: -15.375185012817383
    7. '),' → logprob: -16.125185012817383
    8. '`)' → logprob: -16.250185012817383
    9. '       ' → logprob: -17.000185012817383
    10. ')`' → logprob: -17.375185012817383

Token 74: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011605957115534693
    2. ')
' → logprob: -9.250116348266602
    3. '   ' → logprob: -11.125116348266602
    4. '`)' → logprob: -13.500116348266602
    5. '))' → logprob: -13.625116348266602
    6. ' )' → logprob: -14.125116348266602
    7. '<|end|>' → logprob: -14.250116348266602
    8. '```' → logprob: -15.250116348266602
    9. ')`' → logprob: -15.250116348266602
    10. '),' → logprob: -15.625116348266602

Token 75: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.546478935983032e-05
    2. '   ' → logprob: -11.125025749206543
    3. ' )' → logprob: -12.125025749206543
    4. ')
' → logprob: -12.500025749206543
    5. '))' → logprob: -13.750025749206543
    6. '`)' → logprob: -16.500024795532227
    7. '),' → logprob: -16.500024795532227
    8. '```' → logprob: -16.500024795532227
    9. ')))' → logprob: -16.750024795532227
    10. ')return' → logprob: -17.000024795532227

Token 76: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.61805260181427
    2. 'best' → logprob: -1.74305260181427
    3. 'possible' → logprob: -2.1180524826049805
    4. 'all' → logprob: -2.9930524826049805
    5. 'positions' → logprob: -3.1180524826049805
    6. 'valid' → logprob: -3.6180524826049805
    7. 'max' → logprob: -4.4930524826049805
    8. 'result' → logprob: -4.6180524826049805
    9. 'total' → logprob: -5.1180524826049805
    10. 'import' → logprob: -5.9930524826049805

Token 77: ' calculate' (ID: 17950)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.6883646845817566
    2. ' calculate' → logprob: -1.4383647441864014
    3. ' evaluate' → logprob: -2.6883647441864014
    4. ' check' → logprob: -3.3133647441864014
    5. ' maximize' → logprob: -3.3133647441864014
    6. ' space' → logprob: -3.4383647441864014
    7. ' find' → logprob: -3.8133647441864014
    8. ' ' → logprob: -4.313364505767822
    9. ' count' → logprob: -4.563364505767822
    10. ' enumerate' → logprob: -4.688364505767822

Token 78: '_total' (ID: 23814)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.3144494593143463
    2. '_' → logprob: -1.689449429512024
    3. '_max' → logprob: -3.3144495487213135
    4. '_scores' → logprob: -3.8144495487213135
    5. '_total' → logprob: -4.189449310302734
    6. '_opt' → logprob: -6.064449310302734
    7. '_reward' → logprob: -6.314449310302734
    8. '_rewards' → logprob: -6.564449310302734
    9. '_possible' → logprob: -6.814449310302734
    10. '_value' → logprob: -7.189449310302734

Token 79: '_reward' (ID: 88836)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8381032943725586
    2. '_score' → logprob: -0.8381032943725586
    3. '_reward' → logprob: -2.0881032943725586
    4. '_rewards' → logprob: -4.963103294372559
    5. '_points' → logprob: -6.588103294372559
    6. '_value' → logprob: -6.713103294372559
    7. '_scores' → logprob: -7.963103294372559
    8. '_difference' → logprob: -8.213103294372559
    9. '_max' → logprob: -8.588103294372559
    10. '_s' → logprob: -9.213103294372559

Token 80: '(candidate' (ID: 145201)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019448090461082757
    2. '(sequence' → logprob: -10.125194549560547
    3. '(number' → logprob: -10.875194549560547
    4. '("("' → logprob: -11.000194549560547
    5. '(position' → logprob: -11.375194549560547
    6. ' (' → logprob: -11.500194549560547
    7. '(token' → logprob: -11.750194549560547
    8. '():' → logprob: -11.875194549560547
    9. '(tokens' → logprob: -12.250194549560547
    10. '(space' → logprob: -12.375194549560547

Token 81: '_sequence' (ID: 55606)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6145886778831482
    2. ',' → logprob: -1.614588737487793
    3. '_sequence' → logprob: -1.989588737487793
    4. '(sequence' → logprob: -2.989588737487793
    5. '_positions' → logprob: -3.989588737487793
    6. '(candidate' → logprob: -4.489588737487793
    7. '(' → logprob: -4.739588737487793
    8. '_sequences' → logprob: -5.114588737487793
    9. ')' → logprob: -5.364588737487793
    10. '_candidate' → logprob: -5.614588737487793

Token 82: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014491601614281535
    2. ',' → logprob: -7.126449108123779
    3. ':' → logprob: -7.501449108123779
    4. ' ):' → logprob: -10.251449584960938
    5. ')' → logprob: -10.626449584960938
    6. '):
' → logprob: -11.001449584960938
    7. 'sequence' → logprob: -12.626449584960938
    8. ' :' → logprob: -13.001449584960938
    9. ' ' → logprob: -13.376449584960938
    10. ':list' → logprob: -13.626449584960938

Token 83: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.35575246810913086
    2. ' constraints' → logprob: -1.6057524681091309
    3. 'constraint' → logprob: -2.480752468109131
    4. 'constraints' → logprob: -4.355752468109131
    5. ')' → logprob: -7.105752468109131
    6. ' positions' → logprob: -8.230752944946289
    7. ' )' → logprob: -8.480752944946289
    8. ' ' → logprob: -8.980752944946289
    9. '):
' → logprob: -9.480752944946289
    10. '):' → logprob: -9.730752944946289

Token 84: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5413616895675659
    2. '_list' → logprob: -0.9163616895675659
    3. '_s' → logprob: -4.0413618087768555
    4. ')' → logprob: -8.166361808776855
    5. '_' → logprob: -9.791361808776855
    6. ')_' → logprob: -10.166361808776855
    7. ')s' → logprob: -10.666361808776855
    8. ' s' → logprob: -10.916361808776855
    9. '   ' → logprob: -11.166361808776855
    10. '_lists' → logprob: -11.291361808776855

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.398067828034982e-05
    2. ')' → logprob: -10.00007438659668
    3. ':' → logprob: -10.87507438659668
    4. ',' → logprob: -12.00007438659668
    5. ' ):' → logprob: -13.37507438659668
    6. '):
' → logprob: -14.00007438659668
    7. '   ' → logprob: -14.50007438659668
    8. '=' → logprob: -16.12507438659668
    9. ']:' → logprob: -16.50007438659668
    10. '}:' → logprob: -17.12507438659668

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44119030237197876
    2. ':' → logprob: -1.066190242767334
    3. ' ' → logprob: -6.066190242767334
    4. '    
' → logprob: -6.316190242767334
    5. ':
' → logprob: -6.566190242767334
    6. '
' → logprob: -6.691190242767334
    7. ':return' → logprob: -6.816190242767334
    8. '\n' → logprob: -7.191190242767334
    9. '    ' → logprob: -7.191190242767334
    10. ' 
' → logprob: -7.316190242767334

Token 87: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.36193570494651794
    2. '   ' → logprob: -1.8619357347488403
    3. 'total' (adapté à ' total') → logprob: -2.111935615539551
    4. '
' → logprob: -3.861935615539551
    5. '    
' → logprob: -6.111935615539551
    6. '```' → logprob: -7.361935615539551
    7. '    ' → logprob: -7.611935615539551
    8. ' 
' → logprob: -7.736935615539551
    9. 'r' → logprob: -8.11193561553955
    10. ' ' → logprob: -8.36193561553955

Token 88: '_reward' (ID: 88836)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5933132767677307
    2. '_reward' → logprob: -0.8433132767677307
    3. '_rewards' → logprob: -4.218313217163086
    4. '_score' → logprob: -6.718313217163086
    5. ' _' → logprob: -7.218313217163086
    6. '_amount' → logprob: -9.218313217163086
    7. '_value' → logprob: -9.718313217163086
    8. '_space' → logprob: -9.718313217163086
    9. '_return' → logprob: -10.343313217163086
    10. '_total' → logprob: -10.343313217163086

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004658792167901993
    2. '=' → logprob: -5.3796586990356445
    3. ' +=' → logprob: -10.504658699035645
    4. ' ' → logprob: -11.504658699035645
    5. ')' → logprob: -14.504658699035645
    6. ' =)' → logprob: -15.254658699035645
    7. '  ' → logprob: -16.37965965270996
    8. ' |=' → logprob: -17.00465965270996
    9. '_' → logprob: -17.50465965270996
    10. ',' → logprob: -17.62965965270996

Token 90: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14268124103546143
    2. ' ' → logprob: -2.017681121826172
    3. '   ' → logprob: -12.267681121826172
    4. '<|end|>' → logprob: -14.392681121826172
    5. ' ' → logprob: -15.017681121826172
    6. '  ' → logprob: -16.017681121826172
    7. '```' → logprob: -16.017681121826172
    8. '    ' → logprob: -16.392681121826172
    9. ' 
' → logprob: -17.017681121826172
    10. '`' → logprob: -17.580181121826172

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -20.125
    5. '۰' → logprob: -20.5
    6. '<|end|>' → logprob: -21.25
    7. 'sum' → logprob: -21.75
    8. '  ' → logprob: -22.125
    9. '=' → logprob: -22.125
    10. '`' → logprob: -22.375

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5254114270210266
    2. '   ' → logprob: -1.0254113674163818
    3. '<|end|>' → logprob: -3.900411367416382
    4. '    
' → logprob: -4.275411605834961
    5. '\n' → logprob: -6.025411605834961
    6. '' → logprob: -6.025411605834961
    7. ' ' → logprob: -6.150411605834961
    8. ' 
' → logprob: -6.150411605834961
    9. '  
' → logprob: -6.150411605834961
    10. ' for' → logprob: -6.400411605834961

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30114173889160156
    2. '   ' → logprob: -1.6761417388916016
    3. '    
' → logprob: -2.8011417388916016
    4. ' for' → logprob: -5.801141738891602
    5. ' 
' → logprob: -5.801141738891602
    6. '  
' → logprob: -6.176141738891602
    7. '\n' → logprob: -7.176141738891602
    8. '' → logprob: -7.301141738891602
    9. '<|end|>' → logprob: -7.426141738891602
    10. '   
' → logprob: -7.551141738891602

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5537796020507812
    2. 'for' (adapté à ' for') → logprob: -1.4287796020507812
    3. '   ' → logprob: -2.1787796020507812
    4. '
' → logprob: -2.8037796020507812
    5. '    
' → logprob: -5.053779602050781
    6. ' 
' → logprob: -5.678779602050781
    7. '' → logprob: -7.303779602050781
    8. 'n' → logprob: -7.803779602050781
    9. ' ' → logprob: -8.303779602050781
    10. '  
' → logprob: -8.678779602050781

Token 95: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.13768303394317627
    2. ' constraint' → logprob: -2.3876829147338867
    3. 'constraint' → logprob: -4.262682914733887
    4. ' (' → logprob: -4.387682914733887
    5. 'start' → logprob: -4.762682914733887
    6. '(start' → logprob: -6.762682914733887
    7. ' ' → logprob: -8.262682914733887
    8. '(' → logprob: -9.637682914733887
    9. ' index' → logprob: -9.887682914733887
    10. '_start' → logprob: -10.387682914733887

Token 96: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.010514771565794945
    2. '_' → logprob: -4.635514736175537
    3. ',' → logprob: -8.260515213012695
    4. ',_' → logprob: -8.510515213012695
    5. '_,' → logprob: -8.510515213012695
    6. '_idx' → logprob: -10.260515213012695
    7. '_i' → logprob: -10.885515213012695
    8. '_position' → logprob: -11.635515213012695
    9. ' _' → logprob: -11.760515213012695
    10. ')' → logprob: -12.260515213012695

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00103995599783957
    2. ' ,' → logprob: -6.876039981842041
    3. ' in' → logprob: -12.126039505004883
    4. ',start' → logprob: -15.251039505004883
    5. '‌,' → logprob: -15.626039505004883
    6. ',length' → logprob: -15.626039505004883
    7. ',end' → logprob: -15.751039505004883
    8. ',user' → logprob: -15.876039505004883
    9. '<|end|>' → logprob: -16.126039505004883
    10. ',input' → logprob: -16.626039505004883

Token 98: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.014182187616825104
    2. 'end' → logprob: -4.264182090759277
    3. ',' → logprob: -12.139182090759277
    4. ',end' → logprob: -12.264182090759277
    5. '<|end|>' → logprob: -12.764182090759277
    6. ' ' → logprob: -13.389182090759277
    7. '(end' → logprob: -14.014182090759277
    8. ' ,' → logprob: -14.139182090759277
    9. '_end' → logprob: -14.389182090759277
    10. '	end' → logprob: -14.639182090759277

Token 99: '_index' (ID: 7748)
  Prédit: ',_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.8304637670516968
    2. '_index' → logprob: -1.2054637670516968
    3. '_' → logprob: -1.8304637670516968
    4. '_,' → logprob: -2.7054638862609863
    5. ',' → logprob: -3.7054638862609863
    6. '```' → logprob: -4.955463886260986
    7. ' _' → logprob: -6.705463886260986
    8. ')_' → logprob: -6.705463886260986
    9. '<|end|>' → logprob: -7.205463886260986
    10. '_position' → logprob: -7.955463886260986

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007119550718925893
    2. ' ,' → logprob: -7.250711917877197
    3. ' in' → logprob: -13.625712394714355
    4. ',user' → logprob: -16.12571144104004
    5. ',
' → logprob: -16.25071144104004
    6. ',value' → logprob: -16.37571144104004
    7. ',c' → logprob: -16.50071144104004
    8. '‌,' → logprob: -16.62571144104004
    9. 'in' → logprob: -17.12571144104004
    10. ',n' → logprob: -17.25071144104004

Token 101: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.00839305855333805
    2. ' ' → logprob: -5.383393287658691
    3. 'required' → logprob: -5.633393287658691
    4. '_required' → logprob: -10.258393287658691
    5. ' requested' → logprob: -10.258393287658691
    6. '	required' → logprob: -10.383393287658691
    7. ' difference' → logprob: -10.508393287658691
    8. ' constraint' → logprob: -10.883393287658691
    9. '(required' → logprob: -11.633393287658691
    10. ' space' → logprob: -12.008393287658691

Token 102: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00030304977553896606
    2. '_' → logprob: -8.375303268432617
    3. '_d' → logprob: -10.000303268432617
    4. '_diff' → logprob: -11.125303268432617
    5. '_distance' → logprob: -12.375303268432617
    6. 'difference' → logprob: -12.500303268432617
    7. '_value' → logprob: -13.625303268432617
    8. ' _' → logprob: -14.375303268432617
    9. '_length' → logprob: -15.125303268432617
    10. ',' → logprob: -15.125303268432617

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024122826755046844
    2. ' ,' → logprob: -4.149122714996338
    3. ' in' → logprob: -5.024122714996338
    4. 'in' → logprob: -6.524122714996338
    5. ',in' → logprob: -13.149123191833496
    6. ' ' → logprob: -13.399123191833496
    7. '   ' → logprob: -13.524123191833496
    8. ',int' → logprob: -13.649123191833496
    9. ',value' → logprob: -14.524123191833496
    10. '=' → logprob: -14.899123191833496

Token 104: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.0050248983316123486
    2. 'constraint' → logprob: -5.3800249099731445
    3. ' ' → logprob: -7.8800249099731445
    4. '_constraint' → logprob: -11.005024909973145
    5. ' space' → logprob: -12.755024909973145
    6. '.constraint' → logprob: -13.255024909973145
    7. '```' → logprob: -13.505024909973145
    8. ' ' → logprob: -14.505024909973145
    9. ' ```' → logprob: -14.630024909973145
    10. 'space' → logprob: -15.005024909973145

Token 105: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -6.992775888647884e-05
    2. '_rewards' → logprob: -10.125069618225098
    3. '_' → logprob: -10.875069618225098
    4. 'reward' → logprob: -12.250069618225098
    5. 'Reward' → logprob: -13.125069618225098
    6. '_list' → logprob: -13.500069618225098
    7. '_value' → logprob: -14.500069618225098
    8. '_score' → logprob: -14.875069618225098
    9. '   ' → logprob: -15.000069618225098
    10. '```' → logprob: -15.500069618225098

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0314047746360302
    2. ':' → logprob: -4.281404972076416
    3. ',' → logprob: -4.406404972076416
    4. 'in' → logprob: -5.406404972076416
    5. ':
' → logprob: -8.531404495239258
    6. '   ' → logprob: -9.156404495239258
    7. ' ,' → logprob: -10.656404495239258
    8. '):' → logprob: -11.531404495239258
    9. '	in' → logprob: -11.531404495239258
    10. ' :' → logprob: -11.656404495239258

Token 107: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.06196869537234306
    2. 'constraint' → logprob: -2.8119688034057617
    3. '
' → logprob: -14.311968803405762
    4. '.constraint' → logprob: -15.936968803405762
    5. '_constraint' → logprob: -16.186967849731445
    6. '   ' → logprob: -16.686967849731445
    7. '```' → logprob: -16.811967849731445
    8. ' ' → logprob: -17.061967849731445
    9. ' ' → logprob: -17.311967849731445
    10. 'space' → logprob: -18.186967849731445

Token 108: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.696889623621246e-06
    2. 'List' → logprob: -14.00000286102295
    3. 'list' → logprob: -14.12500286102295
    4. '_' → logprob: -14.87500286102295
    5. 's' → logprob: -15.62500286102295
    6. '_lists' → logprob: -16.000001907348633
    7. 'for' → logprob: -16.375001907348633
    8. '_LIST' → logprob: -16.625001907348633
    9. '_List' → logprob: -16.750001907348633
    10. ':' → logprob: -17.000001907348633

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02058965340256691
    2. ':
' → logprob: -3.895589590072632
    3. '   ' → logprob: -10.395589828491211
    4. '       ' → logprob: -12.645589828491211
    5. '):
' → logprob: -12.645589828491211
    6. ' :' → logprob: -13.395589828491211
    7. ':

' → logprob: -13.395589828491211
    8. '<|end|>' → logprob: -13.520589828491211
    9. '<|end|>' → logprob: -13.645589828491211
    10. ',' → logprob: -13.645589828491211

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04290315508842468
    2. '   ' → logprob: -3.292903184890747
    3. '    ' → logprob: -6.042902946472168
    4. '\n' → logprob: -7.292902946472168
    5. '<|end|>' → logprob: -8.167902946472168
    6. '    
' → logprob: -8.292902946472168
    7. '\' → logprob: -8.792902946472168
    8. ' 
' → logprob: -8.792902946472168
    9. '        
' → logprob: -8.917902946472168
    10. ' ' → logprob: -8.917902946472168

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2783101201057434
    2. '   ' → logprob: -1.6533100605010986
    3. '<|end|>' → logprob: -4.153310298919678
    4. ' if' → logprob: -4.903310298919678
    5. ' ' → logprob: -5.028310298919678
    6. ' 
' → logprob: -5.403310298919678
    7. '    ' → logprob: -5.528310298919678
    8. '
' → logprob: -6.028310298919678
    9. '        
' → logprob: -6.278310298919678
    10. '    
' → logprob: -6.403310298919678

Token 112: ' candidate' (ID: 17098)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2141696959733963
    2. 'abs' → logprob: -2.08916974067688
    3. ' candidate' → logprob: -2.83916974067688
    4. 'candidate' → logprob: -4.589169502258301
    5. '   ' → logprob: -8.4641695022583
    6. '(abs' → logprob: -9.8391695022583
    7. ' ' → logprob: -10.2141695022583
    8. '(candidate' → logprob: -10.8391695022583
    9. ' (' → logprob: -10.9641695022583
    10. '    ' → logprob: -11.4641695022583

Token 113: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.9266199160483666e-05
    2. '_' → logprob: -11.500019073486328
    3. 'sequence' → logprob: -13.125019073486328
    4. '_sequences' → logprob: -13.375019073486328
    5. '[_' → logprob: -13.750019073486328
    6. '[' → logprob: -14.125019073486328
    7. '   ' → logprob: -14.250019073486328
    8. '```' → logprob: -14.500019073486328
    9. 'Sequence' → logprob: -14.750019073486328
    10. '_difference' → logprob: -15.125019073486328

Token 114: '[end' (ID: 125653)
  Prédit: '[end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.0160882156342268
    2. '[' → logprob: -4.141088008880615
    3. '[
' → logprob: -10.516088485717773
    4. 'end' → logprob: -11.516088485717773
    5. '[start' → logprob: -11.641088485717773
    6. '   ' → logprob: -13.141088485717773
    7. '```' → logprob: -13.141088485717773
    8. ' [' → logprob: -13.641088485717773
    9. '
' → logprob: -14.266088485717773
    10. ' end' → logprob: -14.641088485717773

Token 115: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0008509631152264774
    2. '-' → logprob: -7.875851154327393
    3. ']' → logprob: -9.625850677490234
    4. ']_' → logprob: -9.750850677490234
    5. '```' → logprob: -10.125850677490234
    6. '_position' → logprob: -10.250850677490234
    7. '[' → logprob: -10.625850677490234
    8. 'index' → logprob: -10.625850677490234
    9. ' -' → logprob: -10.750850677490234
    10. '-_' → logprob: -10.875850677490234

Token 116: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005219413433223963
    2. '-' → logprob: -5.755219459533691
    3. ' ]' → logprob: -6.755219459533691
    4. ' -' → logprob: -7.130219459533691
    5. ']-' → logprob: -10.130219459533691
    6. '[' → logprob: -11.255219459533691
    7. ')' → logprob: -12.005219459533691
    8. '   ' → logprob: -12.630219459533691
    9. ' ' → logprob: -13.505219459533691
    10. '`]' → logprob: -13.505219459533691

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000432695698691532
    2. ' ' → logprob: -7.75043249130249
    3. 'start' → logprob: -14.125432968139648
    4. '<|end|>' → logprob: -15.000432968139648
    5. '   ' → logprob: -15.125432968139648
    6. '  ' → logprob: -15.500432968139648
    7. ')' → logprob: -15.625432968139648
    8. '```' → logprob: -16.37543296813965
    9. ' start' → logprob: -16.62543296813965
    10. '    ' → logprob: -17.50043296813965

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009354014764539897
    2. 'start' → logprob: -7.1259355545043945
    3. ' ' → logprob: -9.125935554504395
    4. ' start' → logprob: -10.875935554504395
    5. ')' → logprob: -14.500935554504395
    6. '[start' → logprob: -14.625935554504395
    7. '_start' → logprob: -14.625935554504395
    8. ':start' → logprob: -15.000935554504395
    9. '=start' → logprob: -15.375935554504395
    10. '   ' → logprob: -15.375935554504395

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06333035230636597
    2. ' -' → logprob: -3.0633304119110107
    3. '-' → logprob: -4.438330173492432
    4. '[' → logprob: -7.063330173492432
    5. ' ]' → logprob: -7.063330173492432
    6. ')' → logprob: -7.188330173492432
    7. ']-' → logprob: -8.18833065032959
    8. ' ' → logprob: -10.43833065032959
    9. '        ' → logprob: -12.18833065032959
    10. '   ' → logprob: -12.31333065032959

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022726893424988
    2. '-' → logprob: -1.9102272987365723
    3. ')' → logprob: -13.910226821899414
    4. ' ' → logprob: -14.160226821899414
    5. '   ' → logprob: -15.160226821899414
    6. '[' → logprob: -15.535226821899414
    7. '.' → logprob: -15.535226821899414
    8. ' ' → logprob: -15.910226821899414
    9. ']' → logprob: -16.160226821899414
    10. '>' → logprob: -16.535226821899414

Token 121: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.25193852186203003
    2. ' candidate' → logprob: -1.5019385814666748
    3. '_candidate' → logprob: -12.126938819885254
    4. ' candidat' → logprob: -13.501938819885254
    5. '(candidate' → logprob: -13.876938819885254
    6. ' ' → logprob: -14.501938819885254
    7. '<|end|>' → logprob: -14.626938819885254
    8. 'andidate' → logprob: -15.626938819885254
    9. 'c' → logprob: -15.876938819885254
    10. 'Candidate' → logprob: -16.001937866210938

Token 122: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.00014001218369230628
    2. 'sequence' → logprob: -9.500140190124512
    3. '[start' → logprob: -10.750140190124512
    4. 'Sequence' → logprob: -10.875140190124512
    5. '_index' → logprob: -11.625140190124512
    6. '_sequences' → logprob: -12.375140190124512
    7. '_positions' → logprob: -12.500140190124512
    8. '_SEQUENCE' → logprob: -12.875140190124512
    9. '[' → logprob: -13.375140190124512
    10. '```' → logprob: -14.125140190124512

Token 123: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0009178895270451903
    2. '[' → logprob: -7.000917911529541
    3. ' [' → logprob: -12.750917434692383
    4. 'start' → logprob: -14.000917434692383
    5. '[end' → logprob: -14.125917434692383
    6. '[left' → logprob: -14.500917434692383
    7. '[
' → logprob: -14.500917434692383
    8. '[first' → logprob: -15.375917434692383
    9. '[s' → logprob: -15.750917434692383
    10. '(start' → logprob: -17.000917434692383

Token 124: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006336859660223126
    2. 'index' → logprob: -7.375633716583252
    3. 'Index' → logprob: -12.250633239746094
    4. '-' → logprob: -14.250633239746094
    5. 'ind' → logprob: -14.625633239746094
    6. '_INDEX' → logprob: -15.250633239746094
    7. ']' → logprob: -15.500633239746094
    8. ')' → logprob: -15.875633239746094
    9. ' index' → logprob: -16.500633239746094
    10. '-index' → logprob: -16.625633239746094

Token 125: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.29957324266433716
    2. '-' → logprob: -1.4245731830596924
    3. ' ' → logprob: -4.2995734214782715
    4. '<|end|>' → logprob: -5.7995734214782715
    5. '0' → logprob: -7.5495734214782715
    6. '<|end|>' → logprob: -8.174572944641113
    7. '1' → logprob: -8.424572944641113
    8. ')' → logprob: -9.049572944641113
    9. '2' → logprob: -9.049572944641113
    10. '[' → logprob: -9.674572944641113

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067484090104699135
    2. ' ' → logprob: -5.006748199462891
    3. '<|end|>' → logprob: -10.38174819946289
    4. '   ' → logprob: -14.63174819946289
    5. '<|end|>' → logprob: -14.75674819946289
    6. '```' → logprob: -14.88174819946289
    7. '0' → logprob: -15.38174819946289
    8. ')' → logprob: -15.88174819946289
    9. '  ' → logprob: -16.25674819946289
    10. '>' → logprob: -16.75674819946289

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014120421838015318
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.875141143798828
    4. ')' → logprob: -15.562641143798828
    5. '```' → logprob: -15.625141143798828
    6. '2' → logprob: -16.500141143798828
    7. '<|end|>' → logprob: -16.812641143798828
    8. '0' → logprob: -16.875141143798828
    9. ']' → logprob: -16.937641143798828
    10. '  ' → logprob: -17.312641143798828

Token 128: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8492994904518127
    2. ')' → logprob: -1.349299430847168
    3. '==' → logprob: -1.599299430847168
    4. ']' → logprob: -2.974299430847168
    5. ']==' → logprob: -3.099299430847168
    6. ')==' → logprob: -4.349299430847168
    7. ' )' → logprob: -7.099299430847168
    8. ' ]' → logprob: -8.224299430847168
    9. '=' → logprob: -8.474299430847168
    10. ' ' → logprob: -9.224299430847168

Token 129: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25245201587677
    2. '==' → logprob: -1.50245201587677
    3. ')' → logprob: -8.75245189666748
    4. ')==' → logprob: -9.00245189666748
    5. ' >=' → logprob: -9.50245189666748
    6. '>=' → logprob: -9.62745189666748
    7. '=' → logprob: -10.00245189666748
    8. ']==' → logprob: -10.75245189666748
    9. ' ' → logprob: -11.00245189666748
    10. '[' → logprob: -12.62745189666748

Token 130: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.04859611392021179
    2. 'required' → logprob: -3.048596143722534
    3. '(required' → logprob: -12.298596382141113
    4. '	required' → logprob: -12.923596382141113
    5. ' requested' → logprob: -14.548596382141113
    6. ' ' → logprob: -14.673596382141113
    7. '_required' → logprob: -15.173596382141113
    8. '    ' → logprob: -15.798596382141113
    9. '   ' → logprob: -15.798596382141113
    10. ' ' → logprob: -16.298595428466797

Token 131: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.250005722045898
    3. 'difference' → logprob: -15.375005722045898
    4. '_d' → logprob: -15.875005722045898
    5. ' _' → logprob: -16.7500057220459
    6. ' difference' → logprob: -17.7500057220459
    7. '_distance' → logprob: -17.7500057220459
    8. '_diff' → logprob: -18.0000057220459
    9. '_value' → logprob: -18.6250057220459
    10. '_di' → logprob: -19.7500057220459

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017987078754231334
    2. ':
' → logprob: -6.501798629760742
    3. '):' → logprob: -8.376798629760742
    4. '       ' → logprob: -10.001798629760742
    5. ' :' → logprob: -11.376798629760742
    6. '):
' → logprob: -12.751798629760742
    7. '           ' → logprob: -12.751798629760742
    8. ')' → logprob: -13.501798629760742
    9. '   ' → logprob: -14.251798629760742
    10. ':return' → logprob: -14.876798629760742

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06277475506067276
    2. '       ' → logprob: -3.562774658203125
    3. ':' → logprob: -3.687774658203125
    4. ':
' → logprob: -5.437774658203125
    5. '
' → logprob: -5.937774658203125
    6. '               ' → logprob: -9.562774658203125
    7. '            
' → logprob: -9.937774658203125
    8. '```' → logprob: -9.937774658203125
    9. '\n' → logprob: -10.062774658203125
    10. '#' → logprob: -10.062774658203125

Token 134: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.22626660764217377
    2. 'total' (adapté à ' total') → logprob: -1.726266622543335
    3. '               ' → logprob: -3.726266622543335
    4. '           ' → logprob: -8.101266860961914
    5. '
' → logprob: -9.101266860961914
    6. '   ' → logprob: -11.101266860961914
    7. '       ' → logprob: -11.476266860961914
    8. '	total' → logprob: -11.851266860961914
    9. '(total' → logprob: -12.351266860961914
    10. ',total' → logprob: -12.851266860961914

Token 135: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.0001769616355886683
    2. 'reward' → logprob: -8.875177383422852
    3. '_rewards' → logprob: -10.500177383422852
    4. 'Reward' → logprob: -11.625177383422852
    5. ' _' → logprob: -15.875177383422852
    6. '_' → logprob: -15.875177383422852
    7. '_bonus' → logprob: -16.25017738342285
    8. ' reward' → logprob: -16.50017738342285
    9. '_total' → logprob: -17.50017738342285
    10. '_score' → logprob: -17.50017738342285

Token 136: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14343887567520142
    2. '+=' → logprob: -2.0184388160705566
    3. '           ' → logprob: -7.518438816070557
    4. '   ' → logprob: -9.643439292907715
    5. '            ' → logprob: -9.893439292907715
    6. '               ' → logprob: -10.768439292907715
    7. ']+=' → logprob: -10.768439292907715
    8. '+' → logprob: -11.268439292907715
    9. '    ' → logprob: -11.518439292907715
    10. '```' → logprob: -11.643439292907715

Token 137: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.06196802109479904
    2. 'constraint' → logprob: -2.8119680881500244
    3. '   ' → logprob: -16.311967849731445
    4. 'Constraint' → logprob: -16.936967849731445
    5. ' ' → logprob: -17.311967849731445
    6. '```' → logprob: -17.311967849731445
    7. '    ' → logprob: -17.561967849731445
    8. '.constraint' → logprob: -17.561967849731445
    9. '_constraint' → logprob: -17.811967849731445
    10. ' ' → logprob: -18.061967849731445

Token 138: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.00011546355381142348
    2. '_constraint' → logprob: -9.250115394592285
    3. 'reward' → logprob: -11.000115394592285
    4. '_' → logprob: -14.000115394592285
    5. '_cost' → logprob: -14.375115394592285
    6. 'Reward' → logprob: -14.875115394592285
    7. '_rewards' → logprob: -14.875115394592285
    8. 'constraint' → logprob: -16.2501163482666
    9. '_rule' → logprob: -16.6251163482666
    10. ' _' → logprob: -16.6251163482666

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.421107679605484
    2. '   ' → logprob: -1.1711076498031616
    3. 'return' → logprob: -4.046107769012451
    4. '    
' → logprob: -4.296107769012451
    5. ' return' → logprob: -6.171107769012451
    6. '
' → logprob: -9.046107292175293
    7. '  
' → logprob: -9.421107292175293
    8. '\n' → logprob: -9.671107292175293
    9. '	return' → logprob: -10.046107292175293
    10. ' 
' → logprob: -10.046107292175293

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08834774792194366
    2. '
' → logprob: -2.5883476734161377
    3. 'return' → logprob: -4.838347911834717
    4. ' return' → logprob: -7.088347911834717
    5. '    
' → logprob: -7.463347911834717
    6. '
' → logprob: -10.588347434997559
    7. '	return' → logprob: -10.963347434997559
    8. '       ' → logprob: -11.588347434997559
    9. '  
' → logprob: -11.713347434997559
    10. '        
' → logprob: -12.588347434997559

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006376414094120264
    2. ' return' → logprob: -5.756376266479492
    3. '   ' → logprob: -5.756376266479492
    4. '
' → logprob: -11.131376266479492
    5. ' ' → logprob: -11.631376266479492
    6. '	return' → logprob: -12.506376266479492
    7. '```' → logprob: -14.131376266479492
    8. '    
' → logprob: -14.256376266479492
    9. 'eturn' → logprob: -14.381376266479492
    10. '       ' → logprob: -14.381376266479492

Token 142: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.005234002135694027
    2. 'total' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.255233764648438
    4. '	total' → logprob: -18.005233764648438
    5. '(total' → logprob: -18.130233764648438
    6. '_total' → logprob: -18.380233764648438
    7. ',total' → logprob: -19.380233764648438
    8. ' ' → logprob: -19.880233764648438
    9. '$total' → logprob: -20.880233764648438
    10. ' tot' → logprob: -21.130233764648438

Token 143: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -2.176947600673884e-05
    2. '_rewards' → logprob: -11.375021934509277
    3. 'reward' → logprob: -12.125021934509277
    4. '_' → logprob: -12.625021934509277
    5. ' _' → logprob: -14.250021934509277
    6. '_total' → logprob: -14.750021934509277
    7. '_result' → logprob: -15.875021934509277
    8. '_return' → logprob: -16.50002098083496
    9. '_score' → logprob: -16.75002098083496
    10. 'Reward' → logprob: -17.12502098083496

Token 144: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9804734587669373
    2. 'best' → logprob: -1.105473518371582
    3. '

' → logprob: -1.730473518371582
    4. 'max' → logprob: -2.980473518371582
    5. 'for' → logprob: -3.605473518371582
    6. 'def' → logprob: -4.355473518371582
    7. 'candidate' → logprob: -4.480473518371582
    8. 'possible' → logprob: -4.855473518371582
    9. 'optimal' → logprob: -6.355473518371582
    10. 'all' → logprob: -7.105473518371582

Token 145: 'maximum' (ID: 78601)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.06785261631011963
    2. 'max' → logprob: -2.94285249710083
    3. 'all' → logprob: -5.56785249710083
    4. 'for' → logprob: -5.56785249710083
    5. 'possible' → logprob: -6.44285249710083
    6. 'maximum' → logprob: -6.81785249710083
    7. 'candidate' → logprob: -7.31785249710083
    8. ' best' → logprob: -7.81785249710083
    9. 'optimal' → logprob: -7.81785249710083
    10. 'def' → logprob: -8.067852973937988

Token 146: '_total' (ID: 23814)
  Prédit: '_reward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.15131862461566925
    2. '_total' → logprob: -2.1513185501098633
    3. '_value' → logprob: -4.026318550109863
    4. '_' → logprob: -6.276318550109863
    5. '_sequence' → logprob: -6.276318550109863
    6. '_score' → logprob: -6.901318550109863
    7. '_possible' → logprob: -7.026318550109863
    8. '_rewards' → logprob: -8.151318550109863
    9. '_best' → logprob: -9.026318550109863
    10. 'reward' → logprob: -9.901318550109863

Token 147: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.0026401029899716377
    2. '_value' → logprob: -6.752640247344971
    3. '_' → logprob: -6.877640247344971
    4. '_rewards' → logprob: -8.252639770507812
    5. '_score' → logprob: -9.502639770507812
    6. '_total' → logprob: -9.877639770507812
    7. '=' → logprob: -10.752639770507812
    8. ' _' → logprob: -12.127639770507812
    9. 'reward' → logprob: -12.252639770507812
    10. ' =' → logprob: -12.377639770507812

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024775585625320673
    2. '=' → logprob: -6.002477645874023
    3. ',' → logprob: -13.877477645874023
    4. ' ' → logprob: -15.002477645874023
    5. ' ' → logprob: -15.502477645874023
    6. '_' → logprob: -15.752477645874023
    7. ' ,' → logprob: -16.627477645874023
    8. ' =
' → logprob: -17.127477645874023
    9. '  ' → logprob: -17.377477645874023
    10. 's' → logprob: -17.502477645874023

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14306999742984772
    2. ' ' → logprob: -2.0180699825286865
    3. ' -' → logprob: -8.143070220947266
    4. '-' → logprob: -9.518070220947266
    5. 'float' → logprob: -11.018070220947266
    6. ' float' → logprob: -11.393070220947266
    7. '   ' → logprob: -13.518070220947266
    8. ' ' → logprob: -13.893070220947266
    9. '  ' → logprob: -15.893070220947266
    10. '	' → logprob: -16.205570220947266

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002181987656513229
    2. '-' → logprob: -8.500218391418457
    3. 'float' → logprob: -11.375218391418457
    4. ' ' → logprob: -12.750218391418457
    5. ' -' → logprob: -15.750218391418457
    6. '[' → logprob: -16.87521743774414
    7. 'None' → logprob: -17.12521743774414
    8. '-s' → logprob: -17.12521743774414
    9. '-max' → logprob: -17.50021743774414
    10. '-m' → logprob: -17.62521743774414

Token 151: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07071422785520554
    2. ' for' → logprob: -3.320714235305786
    3. '
' → logprob: -3.445714235305786
    4. '

' → logprob: -9.445713996887207
    5. ' 
' → logprob: -9.695713996887207
    6. 'sequence' → logprob: -9.945713996887207
    7. 'positions' → logprob: -10.570713996887207
    8. 'possible' → logprob: -10.945713996887207
    9. 'candidate' → logprob: -12.195713996887207
    10. 'space' → logprob: -12.445713996887207

Token 152: 'possible' (ID: 50714)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.861651490908116e-05
    2. ' for' → logprob: -9.875068664550781
    3. 'positions' → logprob: -11.500068664550781
    4. 'all' → logprob: -13.250068664550781
    5. 'import' → logprob: -13.375068664550781
    6. 'from' → logprob: -13.625068664550781
    7. 'possible' → logprob: -13.625068664550781
    8. 'best' → logprob: -14.375068664550781
    9. 'sequence' → logprob: -15.250068664550781
    10. 'numbers' → logprob: -15.250068664550781

Token 153: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.04131505638360977
    2. '_sequences' → logprob: -3.2913150787353516
    3. '_positions' → logprob: -6.666315078735352
    4. '_' → logprob: -6.666315078735352
    5. '_value' → logprob: -8.041315078735352
    6. '_sequence' → logprob: -8.916315078735352
    7. '_ranges' → logprob: -9.166315078735352
    8. '_for' → logprob: -10.041315078735352
    9. '_numbers' → logprob: -10.416315078735352
    10. 'values' → logprob: -10.666315078735352

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47531503438949585
    2. '=' → logprob: -0.9753150343894958
    3. 's' → logprob: -6.725315093994141
    4. '_sequences' → logprob: -11.72531509399414
    5. '_' → logprob: -12.10031509399414
    6. '_values' → logprob: -12.35031509399414
    7. '_ranges' → logprob: -12.35031509399414
    8. '_per' → logprob: -12.47531509399414
    9. '_for' → logprob: -13.10031509399414
    10. '_iter' → logprob: -13.10031509399414

Token 155: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.44018682837486267
    2. 'range' → logprob: -1.565186858177185
    3. ' list' → logprob: -3.3151867389678955
    4. '[' → logprob: -3.6901867389678955
    5. 'list' → logprob: -3.6901867389678955
    6. ' itertools' → logprob: -3.6901867389678955
    7. 'it' → logprob: -4.065186977386475
    8. ' [' → logprob: -4.190186977386475
    9. '[it' → logprob: -5.815186977386475
    10. '[list' → logprob: -8.190186500549316

Token 156: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.180879816180095e-05
    2. '(max' → logprob: -9.875051498413086
    3. '(
' → logprob: -15.625051498413086
    4. '(number' → logprob: -16.375051498413086
    5. ' (' → logprob: -17.625051498413086
    6. '1' → logprob: -18.500051498413086
    7. 'maximum' → logprob: -18.875051498413086
    8. '(

' → logprob: -20.125051498413086
    9. '(MAX' → logprob: -20.875051498413086
    10. '(m' → logprob: -21.125051498413086

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002989968634210527
    2. 'maximum' → logprob: -8.250299453735352
    3. ' ' → logprob: -10.375299453735352
    4. 'max' → logprob: -12.500299453735352
    5. ' maximum' → logprob: -13.500299453735352
    6. '(' → logprob: -14.250299453735352
    7. '(max' → logprob: -14.750299453735352
    8. '   ' → logprob: -15.000299453735352
    9. '0' → logprob: -16.25029945373535
    10. ' max' → logprob: -18.12529945373535

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018101456225849688
    2. ' ,' → logprob: -8.625181198120117
    3. ' ' → logprob: -14.375181198120117
    4. ',max' → logprob: -14.875181198120117
    5. '1' → logprob: -15.625181198120117
    6. 'maximum' → logprob: -15.750181198120117
    7. ',
' → logprob: -16.125181198120117
    8. '<|end|>' → logprob: -17.000181198120117
    9. ',current' → logprob: -18.000181198120117
    10. ',m' → logprob: -18.000181198120117

Token 159: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.12692862749099731
    2. ' maximum' → logprob: -2.1269285678863525
    3. 'max' → logprob: -15.126928329467773
    4. '.maximum' → logprob: -15.251928329467773
    5. ' ' → logprob: -17.251928329467773
    6. '```' → logprob: -19.251928329467773
    7. 'Maximum' → logprob: -20.251928329467773
    8. ' ' → logprob: -20.251928329467773
    9. ' maksimum' → logprob: -20.251928329467773
    10. ')' → logprob: -20.376928329467773

Token 160: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.00000286102295
    3. '_per' → logprob: -14.50000286102295
    4. 'value' → logprob: -15.75000286102295
    5. '_values' → logprob: -16.625003814697266
    6. '_number' → logprob: -16.750003814697266
    7. ' _' → logprob: -16.750003814697266
    8. '_VALUE' → logprob: -17.750003814697266
    9. '_of' → logprob: -17.875003814697266
    10. '_position' → logprob: -18.125003814697266

Token 161: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -16.0
    3. '_' → logprob: -16.5
    4. 'per' → logprob: -18.0
    5. ' ' → logprob: -18.25
    6. ')' → logprob: -18.875
    7. '	per' → logprob: -18.875
    8. '_PER' → logprob: -19.0
    9. '_possible' → logprob: -19.25
    10. ' _' → logprob: -19.25

Token 162: '_position' (ID: 23739)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0008982429862953722
    2. '+' → logprob: -7.375898361206055
    3. 'per' → logprob: -8.250898361206055
    4. ' +' → logprob: -12.375898361206055
    5. '_plus' → logprob: -13.500898361206055
    6. '_position' → logprob: -14.000898361206055
    7. ')' → logprob: -14.125898361206055
    8. '_pos' → logprob: -14.500898361206055
    9. '_for' → logprob: -14.875898361206055
    10. '_' → logprob: -15.000898361206055

Token 163: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759408473968506
    2. '+' → logprob: -0.8259408473968506
    3. ' ' → logprob: -14.07594108581543
    4. ')' → logprob: -14.82594108581543
    5. ')+' → logprob: -16.95094108581543
    6. 's' → logprob: -17.20094108581543
    7. '   ' → logprob: -17.32594108581543
    8. ' plus' → logprob: -17.45094108581543
    9. ' ' → logprob: -17.45094108581543
    10. '＋' → logprob: -17.45094108581543

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. ')' → logprob: -15.255233764648438
    4. ' ' → logprob: -17.255233764648438
    5. '   ' → logprob: -17.380233764648438
    6. '```' → logprob: -18.380233764648438
    7. ' )' → logprob: -20.255233764648438
    8. ',' → logprob: -20.380233764648438
    9. '  ' → logprob: -20.380233764648438
    10. '۱' → logprob: -20.505233764648438

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. ')' → logprob: -17.250059127807617
    4. '   ' → logprob: -18.500059127807617
    5. '
' → logprob: -19.875059127807617
    6. '```' → logprob: -19.875059127807617
    7. '  ' → logprob: -20.625059127807617
    8. ' ' → logprob: -21.000059127807617
    9. '

' → logprob: -21.500059127807617
    10. '2' → logprob: -21.500059127807617

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.25
    4. ')

' → logprob: -16.875
    5. '))' → logprob: -18.375
    6. '),' → logprob: -18.5
    7. ' ' → logprob: -20.0
    8. ',)' → logprob: -20.25
    9. ')`' → logprob: -20.375
    10. ')#' → logprob: -20.5

Token 167: 'all' (ID: 586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001640069531276822
    2. ' for' → logprob: -7.0016398429870605
    3. '
' → logprob: -7.2516398429870605
    4. '

' → logprob: -11.751640319824219
    5. 'possible' → logprob: -12.001640319824219
    6. 'all' → logprob: -14.126640319824219
    7. ' 
' → logprob: -14.126640319824219
    8. '<|end|>' → logprob: -14.376640319824219
    9. '  
' → logprob: -14.501640319824219
    10. 'candidate' → logprob: -14.626640319824219

Token 168: '_possible' (ID: 185849)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.5479412078857422
    2. '_' → logprob: -2.422941207885742
    3. '_possible' → logprob: -2.547941207885742
    4. '_com' → logprob: -2.797941207885742
    5. ' itertools' → logprob: -3.297941207885742
    6. '_per' → logprob: -3.297941207885742
    7. '_sequences' → logprob: -3.297941207885742
    8. '(' → logprob: -3.797941207885742
    9. '_values' → logprob: -4.422941207885742
    10. '_it' → logprob: -4.922941207885742

Token 169: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.38662996888160706
    2. '_com' → logprob: -1.2616299390792847
    3. '_positions' → logprob: -4.136630058288574
    4. '_per' → logprob: -4.636630058288574
    5. '_values' → logprob: -5.011630058288574
    6. 'com' → logprob: -6.136630058288574
    7. '_' → logprob: -7.386630058288574
    8. 's' → logprob: -7.636630058288574
    9. '_candidates' → logprob: -8.386630058288574
    10. '_assign' → logprob: -8.386630058288574

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756204672157764
    2. '=' → logprob: -4.634756088256836
    3. 's' → logprob: -15.884756088256836
    4. ':' → logprob: -17.009756088256836
    5. ' itertools' → logprob: -17.134756088256836
    6. ' ' → logprob: -17.759756088256836
    7. 'import' → logprob: -17.884756088256836
    8. '_iter' → logprob: -18.759756088256836
    9. ' ' → logprob: -18.884756088256836
    10. ')' → logprob: -19.009756088256836

Token 171: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.12707069516181946
    2. ' itertools' → logprob: -2.127070665359497
    3. 'list' → logprob: -9.002070426940918
    4. ' it' → logprob: -11.127070426940918
    5. ' list' → logprob: -12.627070426940918
    6. 'iter' → logprob: -14.377070426940918
    7. '	it' → logprob: -15.002070426940918
    8. '(it' → logprob: -15.252070426940918
    9. '   ' → logprob: -15.752070426940918
    10. 'It' → logprob: -16.502071380615234

Token 172: '.com' (ID: 1136)
  Prédit: '.product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -14.000001907348633
    3. 'product' → logprob: -14.625001907348633
    4. ' .' → logprob: -15.500001907348633
    5. '.per' → logprob: -15.750001907348633
    6. '.prod' → logprob: -16.750001907348633
    7. '.products' → logprob: -16.750001907348633
    8. ' product' → logprob: -17.000001907348633
    9. '	product' → logprob: -17.125001907348633
    10. '.com' → logprob: -17.625001907348633

Token 173: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -7.958325295476243e-05
    2. 'positions' → logprob: -10.250079154968262
    3. 'inations' → logprob: -11.125079154968262
    4. 'product' → logprob: -11.625079154968262
    5. 'bin' → logprob: -12.375079154968262
    6. 'pat' → logprob: -12.625079154968262
    7. 'b' → logprob: -12.750079154968262
    8. 'plet' → logprob: -12.875079154968262
    9. '```' → logprob: -13.125079154968262
    10. 'utations' → logprob: -13.625079154968262

Token 174: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.07048662006855011
    2. '(pos' → logprob: -2.695486545562744
    3. '(with' → logprob: -8.070487022399902
    4. '(range' → logprob: -9.320487022399902
    5. '(' → logprob: -9.695487022399902
    6. 'with' → logprob: -9.695487022399902
    7. 'With' → logprob: -11.320487022399902
    8. ' (' → logprob: -12.945487022399902
    9. '_possible' → logprob: -12.945487022399902
    10. '_range' → logprob: -13.945487022399902

Token 175: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.11834074556827545
    2. 'replacement' → logprob: -2.2433407306671143
    3. ' replacement' → logprob: -5.243340969085693
    4. 'Replacement' → logprob: -9.118340492248535
    5. '-re' → logprob: -10.118340492248535
    6. 're' → logprob: -10.493340492248535
    7. '_repeat' → logprob: -10.993340492248535
    8. '(re' → logprob: -12.243340492248535
    9. '	re' → logprob: -12.243340492248535
    10. ' ' → logprob: -12.368340492248535

Token 176: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.0024949219077825546
    2. 'petition' → logprob: -6.252494812011719
    3. 'peat' → logprob: -7.752494812011719
    4. 'pe' → logprob: -9.127494812011719
    5. 'p' → logprob: -11.252494812011719
    6. 'pl' → logprob: -12.002494812011719
    7. 'place' → logprob: -12.252494812011719
    8. 'pletion' → logprob: -14.127494812011719
    9. 'plac' → logprob: -14.252494812011719
    10. 'peated' → logprob: -14.627494812011719

Token 177: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0005151443183422089
    2. '(' → logprob: -7.625514984130859
    3. '(range' → logprob: -10.75051498413086
    4. ' (' → logprob: -12.75051498413086
    5. '(
' → logprob: -14.12551498413086
    6. 'possible' → logprob: -14.37551498413086
    7. '(po' → logprob: -15.00051498413086
    8. '(all' → logprob: -15.12551498413086
    9. '(per' → logprob: -15.62551498413086
    10. '(p' → logprob: -15.87551498413086

Token 178: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -0.00016063073417171836
    2. 'ible' → logprob: -8.750160217285156
    3. 'possible' → logprob: -13.375160217285156
    4. 's' → logprob: -14.750160217285156
    5. 'isible' → logprob: -16.000160217285156
    6. 'itive' → logprob: -16.250160217285156
    7. '_possible' → logprob: -18.500160217285156
    8. '(' → logprob: -18.500160217285156
    9. 'itable' → logprob: -18.625160217285156
    10. '```' → logprob: -19.250160217285156

Token 179: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.531315314830863e-06
    2. 'values' → logprob: -12.750003814697266
    3. '_positions' → logprob: -15.375003814697266
    4. 's' → logprob: -16.125003814697266
    5. ' values' → logprob: -16.375003814697266
    6. '_VALUES' → logprob: -16.625003814697266
    7. '_value' → logprob: -17.500003814697266
    8. ' _' → logprob: -17.750003814697266
    9. '_' → logprob: -18.125003814697266
    10. ')' → logprob: -18.250003814697266

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011427151912357658
    2. ' ,' → logprob: -9.375114440917969
    3. '(' → logprob: -10.750114440917969
    4. '(number' → logprob: -12.750114440917969
    5. ',length' → logprob: -13.250114440917969
    6. ',n' → logprob: -13.500114440917969
    7. ')' → logprob: -14.625114440917969
    8. 'number' → logprob: -14.750114440917969
    9. '(range' → logprob: -15.625114440917969
    10. ' (' → logprob: -15.625114440917969

Token 181: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5759404897689819
    2. ' number' → logprob: -0.8259404897689819
    3. ' ' → logprob: -13.825940132141113
    4. '	number' → logprob: -17.70094108581543
    5. ')' → logprob: -17.82594108581543
    6. '(number' → logprob: -18.57594108581543
    7. '  ' → logprob: -19.07594108581543
    8. 'range' → logprob: -19.07594108581543
    9. '[number' → logprob: -19.07594108581543
    10. '   ' → logprob: -19.32594108581543

Token 182: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: 0.0
    2. ')' → logprob: -17.375
    3. 'of' → logprob: -17.375
    4. ' of' → logprob: -19.25
    5. '_number' → logprob: -19.5
    6. '_positions' → logprob: -19.5
    7. '_' → logprob: -19.625
    8. 'Of' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '_OF' → logprob: -20.0

Token 183: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.12694165110588074
    2. 'positions' → logprob: -2.126941680908203
    3. ' positions' → logprob: -11.376941680908203
    4. 'Positions' → logprob: -14.001941680908203
    5. '_' → logprob: -14.626941680908203
    6. '```' → logprob: -14.876941680908203
    7. '.positions' → logprob: -15.501941680908203
    8. ' ' → logprob: -16.626941680908203
    9. '_places' → logprob: -16.626941680908203
    10. '_locations' → logprob: -17.001941680908203

Token 184: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -14.75000286102295
    4. '))' → logprob: -16.875003814697266
    5. ')

' → logprob: -17.125003814697266
    6. ')#' → logprob: -18.250003814697266
    7. ')`' → logprob: -18.500003814697266
    8. '),' → logprob: -18.625003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '):' → logprob: -19.000003814697266

Token 185: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.47757811343763e-05
    2. ' for' → logprob: -10.375044822692871
    3. '
' → logprob: -11.250044822692871
    4. '    
' → logprob: -15.500044822692871
    5. '  
' → logprob: -15.625044822692871
    6. ' 
' → logprob: -16.875043869018555
    7. '	for' → logprob: -17.250043869018555
    8. '   ' → logprob: -17.500043869018555
    9. '<|end|>' → logprob: -18.125043869018555
    10. '

' → logprob: -18.625043869018555

Token 186: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.27322158217430115
    2. ' sequence' → logprob: -1.5232216119766235
    3. 'candidate' → logprob: -4.023221492767334
    4. 'sequence' → logprob: -5.773221492767334
    5. ' possible' → logprob: -11.148221969604492
    6. ' ' → logprob: -11.398221969604492
    7. '_candidate' → logprob: -11.773221969604492
    8. ' current' → logprob: -12.023221969604492
    9. '_sequence' → logprob: -12.273221969604492
    10. '   ' → logprob: -12.398221969604492

Token 187: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.38710248470306396
    2. '_' → logprob: -1.137102484703064
    3. '_sequences' → logprob: -8.637102127075195
    4. ' _' → logprob: -10.887102127075195
    5. '_in' → logprob: -12.012102127075195
    6. '_seq' → logprob: -12.012102127075195
    7. 'sequence' → logprob: -12.137102127075195
    8. '_s' → logprob: -12.262102127075195
    9. ' in' → logprob: -12.637102127075195
    10. '_SEQUENCE' → logprob: -13.137102127075195

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996133178472519
    2. 'in' → logprob: -2.6949613094329834
    3. '	in' → logprob: -11.319961547851562
    4. ' ' → logprob: -12.069961547851562
    5. ' ' → logprob: -13.069961547851562
    6. 's' → logprob: -13.819961547851562
    7. 'space' → logprob: -13.819961547851562
    8. '  ' → logprob: -14.069961547851562
    9. 'import' → logprob: -14.694961547851562
    10. ',' → logprob: -15.819961547851562

Token 189: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.25193077325820923
    2. ' all' → logprob: -1.5019307136535645
    3. ' ' → logprob: -13.751931190490723
    4. '	all' → logprob: -14.876931190490723
    5. '_all' → logprob: -15.501931190490723
    6. '   ' → logprob: -17.376930236816406
    7. 'All' → logprob: -17.626930236816406
    8. '(all' → logprob: -18.376930236816406
    9. ''all' → logprob: -19.376930236816406
    10. '.all' → logprob: -19.626930236816406

Token 190: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.00026872646412812173
    2. 'possible' → logprob: -8.250268936157227
    3. 'Possible' → logprob: -12.625268936157227
    4. ' possible' → logprob: -13.500268936157227
    5. '_sequences' → logprob: -14.125268936157227
    6. '_positions' → logprob: -14.500268936157227
    7. '_pos' → logprob: -14.625268936157227
    8. '__' → logprob: -15.250268936157227
    9. ' Possible' → logprob: -15.500268936157227
    10. '_for' → logprob: -16.000268936157227

Token 191: '_sequences' (ID: 153014)
  Prédit: '_sequences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequences' → logprob: -0.3204840123653412
    2. '_possible' → logprob: -1.3204840421676636
    3. 'possible' → logprob: -5.570484161376953
    4. '_positions' → logprob: -6.070484161376953
    5. '_com' → logprob: -7.570484161376953
    6. '_pos' → logprob: -8.445484161376953
    7. 'se' → logprob: -8.695484161376953
    8. 'com' → logprob: -9.820484161376953
    9. 'pos' → logprob: -10.945484161376953
    10. 's' → logprob: -11.070484161376953

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.100059156073257e-05
    2. ':
' → logprob: -9.625070571899414
    3. ' :' → logprob: -12.375070571899414
    4. '   ' → logprob: -14.750070571899414
    5. '):' → logprob: -16.000070571899414
    6. '=' → logprob: -17.000070571899414
    7. ',' → logprob: -17.125070571899414
    8. ':
' → logprob: -17.375070571899414
    9. ':

' → logprob: -17.500070571899414
    10. ':**' → logprob: -17.625070571899414

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000628683075774461
    2. '    
' → logprob: -8.125628471374512
    3. ' total' → logprob: -8.750628471374512
    4. ' maximum' → logprob: -10.000628471374512
    5. ' current' → logprob: -10.125628471374512
    6. 'total' → logprob: -10.625628471374512
    7. '
' → logprob: -10.625628471374512
    8. 'maximum' → logprob: -11.250628471374512
    9. '   ' → logprob: -12.125628471374512
    10. 'current' → logprob: -12.125628471374512

Token 194: ' current' (ID: 2208)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9108015894889832
    2. '   ' → logprob: -1.660801649093628
    3. ' total' → logprob: -1.660801649093628
    4. ' current' → logprob: -2.035801649093628
    5. 'current' (adapté à ' current') → logprob: -2.535801649093628
    6. 'reward' → logprob: -5.285801410675049
    7. ' reward' → logprob: -6.035801410675049
    8. 'score' → logprob: -8.035801887512207
    9. ' ' → logprob: -9.410801887512207
    10. '    
' → logprob: -9.910801887512207

Token 195: '_reward' (ID: 88836)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.005778646096587181
    2. '_' → logprob: -5.505778789520264
    3. '_reward' → logprob: -6.505778789520264
    4. '_score' → logprob: -9.255778312683105
    5. ' _' → logprob: -9.880778312683105
    6. '_max' → logprob: -10.755778312683105
    7. '_value' → logprob: -11.380778312683105
    8. '_possible' → logprob: -12.255778312683105
    9. '_sequence' → logprob: -12.505778312683105
    10. '_rewards' → logprob: -12.755778312683105

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011691342107951641
    2. '=' → logprob: -4.886691570281982
    3. ' +=' → logprob: -5.511691570281982
    4. ' ' → logprob: -10.636691093444824
    5. '_' → logprob: -12.261691093444824
    6. '+=' → logprob: -12.511691093444824
    7. ' ' → logprob: -12.886691093444824
    8. '_space' → logprob: -14.636691093444824
    9. ' .=' → logprob: -14.761691093444824
    10. ' =)' → logprob: -15.136691093444824

Token 197: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.03804149478673935
    2. ' calculate' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.163042068481445
    4. '   ' → logprob: -18.038042068481445
    5. '.calculate' → logprob: -18.538042068481445
    6. '0' → logprob: -18.788042068481445
    7. 'compute' → logprob: -18.913042068481445
    8. ' ' → logprob: -20.038042068481445
    9. 'c' → logprob: -20.413042068481445
    10. '  ' → logprob: -20.538042068481445

Token 198: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.125
    3. 'total' → logprob: -16.25
    4. '_current' → logprob: -16.5
    5. ' _' → logprob: -16.75
    6. '_max' → logprob: -17.875
    7. '```' → logprob: -18.25
    8. ')_' → logprob: -18.75
    9. '_Total' → logprob: -18.75
    10. '_tot' → logprob: -18.875

Token 199: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.16030648350715637
    2. '_total' → logprob: -1.910306453704834
    3. '_rewards' → logprob: -9.910306930541992
    4. 'total' → logprob: -11.535306930541992
    5. 'reward' → logprob: -11.535306930541992
    6. '_' → logprob: -11.660306930541992
    7. '_score' → logprob: -13.535306930541992
    8. '_value' → logprob: -14.285306930541992
    9. '```' → logprob: -14.410306930541992
    10. 'Reward' → logprob: -15.035306930541992

Token 200: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.011111253872513771
    2. '(' → logprob: -4.511111259460449
    3. ' (' → logprob: -9.76111125946045
    4. '(
' → logprob: -12.26111125946045
    5. '(

' → logprob: -14.88611125946045
    6. '(current' → logprob: -15.63611125946045
    7. '(c' → logprob: -16.136110305786133
    8. 'candidate' → logprob: -16.511110305786133
    9. '_candidate' → logprob: -16.761110305786133
    10. ' ' → logprob: -16.761110305786133

Token 201: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.76628842484206e-05
    2. 'sequence' → logprob: -9.625067710876465
    3. '_sequences' → logprob: -13.625067710876465
    4. ' sequence' → logprob: -15.750067710876465
    5. 'Sequence' → logprob: -15.875067710876465
    6. '_SEQUENCE' → logprob: -17.87506675720215
    7. '_' → logprob: -18.50006675720215
    8. '_s' → logprob: -18.62506675720215
    9. 's' → logprob: -18.87506675720215
    10. '_seq' → logprob: -19.00006675720215

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. ',const' → logprob: -9.250099182128906
    3. ')' → logprob: -14.000099182128906
    4. ',
' → logprob: -14.125099182128906
    5. ' ,' → logprob: -14.250099182128906
    6. 'const' → logprob: -14.750099182128906
    7. ',c' → logprob: -16.000099182128906
    8. '   ' → logprob: -16.000099182128906
    9. '(candidate' → logprob: -16.375099182128906
    10. 'constraint' → logprob: -16.500099182128906

Token 203: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.31326398253440857
    2. 'constraint' → logprob: -1.313264012336731
    3. '.constraint' → logprob: -14.188263893127441
    4. '_constraint' → logprob: -14.688263893127441
    5. '   ' → logprob: -15.438263893127441
    6. 'const' → logprob: -15.563263893127441
    7. ' ' → logprob: -15.563263893127441
    8. '
' → logprob: -15.813263893127441
    9. ')' → logprob: -16.063264846801758
    10. 'Constraint' → logprob: -16.813264846801758

Token 204: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -15.125000953674316
    3. '_lists' → logprob: -17.125
    4. '_' → logprob: -17.625
    5. ')_' → logprob: -17.625
    6. ')' → logprob: -17.75
    7. 'List' → logprob: -18.25
    8. '_List' → logprob: -18.375
    9. '_lst' → logprob: -18.625
    10. '_LIST' → logprob: -18.75

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10042686015367508
    2. '   ' → logprob: -2.6004269123077393
    3. ')
' → logprob: -3.8504269123077393
    4. ')
' → logprob: -11.22542667388916
    5. '
' → logprob: -12.22542667388916
    6. '    
' → logprob: -12.47542667388916
    7. ')

' → logprob: -12.60042667388916
    8. ' )' → logprob: -13.10042667388916
    9. ' ' → logprob: -13.22542667388916
    10. '  ' → logprob: -13.60042667388916

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02464880421757698
    2. '
' → logprob: -3.774648904800415
    3. '    
' → logprob: -6.899648666381836
    4. ' if' → logprob: -8.649648666381836
    5. '<|end|>' → logprob: -8.899648666381836
    6. ' 
' → logprob: -10.399648666381836
    7. ' maximum' → logprob: -11.274648666381836
    8. '  
' → logprob: -11.649648666381836
    9. ',' → logprob: -12.524648666381836
    10. '
' → logprob: -12.774648666381836

Token 207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9401960968971252
    2. '   ' → logprob: -1.1901960372924805
    3. ' if' → logprob: -1.1901960372924805
    4. 'maximum' → logprob: -7.3151960372924805
    5. ' maximum' → logprob: -7.6901960372924805
    6. 'max' → logprob: -13.69019603729248
    7. '	if' → logprob: -14.69019603729248
    8. '
' → logprob: -14.94019603729248
    9. '       ' → logprob: -14.94019603729248
    10. ' ' → logprob: -15.56519603729248

Token 208: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.00017970333283301443
    2. 'current' → logprob: -8.625179290771484
    3. '	current' → logprob: -16.125179290771484
    4. '(current' → logprob: -18.000179290771484
    5. ' ' → logprob: -18.500179290771484
    6. '_current' → logprob: -19.500179290771484
    7. ' ' → logprob: -19.625179290771484
    8. 'urrent' → logprob: -20.000179290771484
    9. '$current' → logprob: -20.000179290771484
    10. '[current' → logprob: -20.125179290771484

Token 209: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.00047285633627325296
    2. '_' → logprob: -7.7504730224609375
    3. '_total' → logprob: -11.500473022460938
    4. 'Reward' → logprob: -12.000473022460938
    5. 'reward' → logprob: -12.000473022460938
    6. '_rewards' → logprob: -12.250473022460938
    7. '>' → logprob: -12.375473022460938
    8. ' _' → logprob: -12.500473022460938
    9. '   ' → logprob: -13.875473022460938
    10. ' ' → logprob: -14.000473022460938

Token 210: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0009138475870713592
    2. '>' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.500913619995117
    4. ' ' → logprob: -14.500913619995117
    5. ' >
' → logprob: -16.125913619995117
    6. ' >=' → logprob: -16.500913619995117
    7. '   ' → logprob: -16.750913619995117
    8. ' >

' → logprob: -17.750913619995117
    9. ' >
' → logprob: -18.125913619995117
    10. '  ' → logprob: -18.375913619995117

Token 211: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.16022463142871857
    2. ' maximum' → logprob: -1.9102246761322021
    3. 'max' → logprob: -14.785224914550781
    4. '   ' → logprob: -17.28522491455078
    5. '.maximum' → logprob: -18.53522491455078
    6. 'Maximum' → logprob: -19.53522491455078
    7. ' maksimum' → logprob: -20.16022491455078
    8. ' ' → logprob: -21.16022491455078
    9. ' максим' → logprob: -21.78522491455078
    10. '```' → logprob: -22.16022491455078

Token 212: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.650518920039758e-06
    2. '_max' → logprob: -12.625003814697266
    3. '_' → logprob: -15.750003814697266
    4. 'total' → logprob: -15.750003814697266
    5. '_current' → logprob: -17.875003814697266
    6. '_possible' → logprob: -17.875003814697266
    7. ' _' → logprob: -19.500003814697266
    8. '_final' → logprob: -19.750003814697266
    9. 'Total' → logprob: -20.125003814697266
    10. '_Total' → logprob: -20.875003814697266

Token 213: '_reward' (ID: 88836)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.1028696820139885
    2. '_reward' → logprob: -2.352869749069214
    3. 'total' → logprob: -6.102869510650635
    4. 'reward' → logprob: -7.977869510650635
    5. '_' → logprob: -9.852869987487793
    6. '_rewards' → logprob: -11.602869987487793
    7. '_value' → logprob: -11.727869987487793
    8. '_score' → logprob: -12.852869987487793
    9. 'Reward' → logprob: -13.102869987487793
    10. '_result' → logprob: -13.102869987487793

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011167946271598339
    2. ':
' → logprob: -4.511168003082275
    3. '       ' → logprob: -9.761167526245117
    4. '   ' → logprob: -10.136167526245117
    5. ' :' → logprob: -12.011167526245117
    6. '=' → logprob: -12.136167526245117
    7. ' :
' → logprob: -13.511167526245117
    8. '):' → logprob: -13.636167526245117
    9. ':
' → logprob: -13.636167526245117
    10. '):
' → logprob: -13.636167526245117

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3549867272377014
    2. ' maximum' → logprob: -1.8549866676330566
    3. 'maximum' → logprob: -1.9799866676330566
    4. '   ' → logprob: -6.354986667633057
    5. 'Maximum' → logprob: -6.604986667633057
    6. '.maximum' → logprob: -7.479986667633057
    7. ':
' → logprob: -8.729987144470215
    8. '=' → logprob: -9.729987144470215
    9. '
' → logprob: -9.729987144470215
    10. '_max' → logprob: -9.854987144470215

Token 216: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.008650499396026134
    2. 'maximum' (adapté à ' maximum') → logprob: -4.883650302886963
    3. '       ' → logprob: -6.883650302886963
    4. 'Maximum' → logprob: -11.258650779724121
    5. '.maximum' → logprob: -12.883650779724121
    6. '   ' → logprob: -13.008650779724121
    7. ' maksimum' → logprob: -14.508650779724121
    8. '```' → logprob: -15.383650779724121
    9. 'max' → logprob: -15.633650779724121
    10. '
' → logprob: -15.758650779724121

Token 217: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. 'total' → logprob: -14.625000953674316
    4. '_max' → logprob: -18.125001907348633
    5. '_current' → logprob: -18.375001907348633
    6. 'Total' → logprob: -18.750001907348633
    7. ' _' → logprob: -18.875001907348633
    8. '_possible' → logprob: -19.000001907348633
    9. '_to' → logprob: -19.125001907348633
    10. '_Total' → logprob: -19.625001907348633

Token 218: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.006464178673923016
    2. 'reward' → logprob: -5.256464004516602
    3. '_total' → logprob: -6.756464004516602
    4. 'total' → logprob: -9.881464004516602
    5. '_rewards' → logprob: -11.256464004516602
    6. 'Reward' → logprob: -14.256464004516602
    7. '_value' → logprob: -14.756464004516602
    8. '```' → logprob: -15.131464004516602
    9. '_score' → logprob: -15.256464004516602
    10. '_' → logprob: -16.0064640045166

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029758360236883163
    2. '=' → logprob: -3.5297584533691406
    3. '=current' → logprob: -11.77975845336914
    4. ' ' → logprob: -16.15475845336914
    5. ' ' → logprob: -16.27975845336914
    6. '＝' → logprob: -17.52975845336914
    7. ' current' → logprob: -18.77975845336914
    8. ' +=' → logprob: -18.90475845336914
    9. ' =
' → logprob: -19.15475845336914
    10. ',' → logprob: -19.15475845336914

Token 220: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0380416102707386
    2. 'current' → logprob: -3.288041591644287
    3. '	current' → logprob: -17.288042068481445
    4. '$current' → logprob: -17.663042068481445
    5. '_current' → logprob: -17.788042068481445
    6. ' ' → logprob: -18.538042068481445
    7. '(current' → logprob: -18.663042068481445
    8. 'curr' → logprob: -19.038042068481445
    9. '=current' → logprob: -19.288042068481445
    10. '[current' → logprob: -19.413042068481445

Token 221: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -6.301394023466855e-05
    2. 'reward' → logprob: -9.750062942504883
    3. '_' → logprob: -13.250062942504883
    4. 'Reward' → logprob: -13.500062942504883
    5. '_total' → logprob: -14.375062942504883
    6. '_rewards' → logprob: -14.625062942504883
    7. '_value' → logprob: -16.625062942504883
    8. '_candidate' → logprob: -17.000062942504883
    9. '.reward' → logprob: -17.125062942504883
    10. '_
' → logprob: -17.500062942504883

Token 222: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005618501454591751
    2. '
' → logprob: -7.500561714172363
    3. '

' → logprob: -11.750561714172363
    4. '
' → logprob: -14.625561714172363
    5. ' print' → logprob: -15.000561714172363
    6. '```' → logprob: -15.375561714172363
    7. '    
' → logprob: -16.75056266784668
    8. '' → logprob: -17.62556266784668
    9. '  
' → logprob: -17.87556266784668
    10. '        
' → logprob: -18.75056266784668

Token 223: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -14.875000953674316
    3. 'pr' → logprob: -15.250000953674316
    4. ' print' → logprob: -15.875000953674316
    5. ')' → logprob: -17.375
    6. '```' → logprob: -17.625
    7. 'prin' → logprob: -17.875
    8. '#print' → logprob: -18.75
    9. 'pri' → logprob: -18.75
    10. 'for' → logprob: -18.75

Token 224: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.003178071230649948
    2. '(' → logprob: -5.753178119659424
    3. 'maximum' → logprob: -16.628177642822266
    4. '(
' → logprob: -16.753177642822266
    5. '(Max' → logprob: -17.003177642822266
    6. 'max' → logprob: -17.503177642822266
    7. '(MAX' → logprob: -18.128177642822266
    8. '()' → logprob: -18.253177642822266
    9. '(min' → logprob: -18.503177642822266
    10. '((' → logprob: -18.753177642822266

Token 225: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.31335338950157166
    2. 'um' → logprob: -1.313353419303894
    3. 'mum' → logprob: -9.688353538513184
    4. 'maximum' → logprob: -11.688353538513184
    5. 'ium' → logprob: -11.813353538513184
    6. 'un' → logprob: -12.063353538513184
    7. 'ax' → logprob: -12.688353538513184
    8. 'inum' → logprob: -13.688353538513184
    9. 'im' → logprob: -14.063353538513184
    10. 'IMUM' → logprob: -14.438353538513184

Token 226: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -3.128163257315464e-07
    2. 'total' → logprob: -15.125
    3. ')_' → logprob: -18.25
    4. '_value' → logprob: -18.625
    5. '_max' → logprob: -19.125
    6. 'Total' → logprob: -19.375
    7. '_' → logprob: -19.75
    8. '_possible' → logprob: -20.125
    9. '_tot' → logprob: -20.5
    10. '_target' → logprob: -20.625

Token 227: '_reward' (ID: 88836)
  Prédit: '_reward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reward' → logprob: -0.004083385691046715
    2. 'reward' → logprob: -5.504083156585693
    3. '_rewards' → logprob: -12.504083633422852
    4. 'Reward' → logprob: -14.629083633422852
    5. '_' → logprob: -15.754083633422852
    6. ' reward' → logprob: -15.879083633422852
    7. '_score' → logprob: -16.00408363342285
    8. '_re' → logprob: -16.62908363342285
    9. '_aw' → logprob: -16.87908363342285
    10. '_value' → logprob: -16.87908363342285

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. '()' → logprob: -16.5
    4. ')`' → logprob: -17.125
    5. '())' → logprob: -17.625
    6. ')
' → logprob: -17.625
    7. '))' → logprob: -18.375
    8. '(' → logprob: -19.375
    9. ')}' → logprob: -19.5
    10. '`)' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 226
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 143
Tokens correctement prédits (top 10): 208
Précision stricte (1ère position): 61.95%
Précision adaptée (1ère position): 63.27%
Précision (top 10): 92.04%
================================================================================
