================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x_a = input().split()
x = int(x_a[0])
a = int(x_a[1])
if x < a:
    print(0)
else:
    print(10)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: '_a' (ID: 10852)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2075185775756836
    2. ' ' → logprob: -1.2075185775756836
    3. ' x' → logprob: -1.5825185775756836
    4. '0' → logprob: -2.3325185775756836
    5. '1' → logprob: -2.9575185775756836
    6. 'y' → logprob: -4.207518577575684
    7. '[' → logprob: -4.457518577575684
    8. ' []' → logprob: -4.582518577575684
    9. '_' → logprob: -5.957518577575684
    10. ' [' → logprob: -6.207518577575684

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004124942235648632
    2. ''' → logprob: -6.254125118255615
    3. '('' → logprob: -6.504125118255615
    4. '"' → logprob: -8.254124641418457
    5. '(
' → logprob: -8.504124641418457
    6. '("("' → logprob: -9.129124641418457
    7. '[' → logprob: -10.254124641418457
    8. '`' → logprob: -10.504124641418457
    9. '()' → logprob: -11.379124641418457
    10. '```' → logprob: -11.629124641418457

Token 5: 'split' (ID: 13627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33114874362945557
    2. '.' → logprob: -1.4561487436294556
    3. '*' → logprob: -4.331148624420166
    4. '(' → logprob: -4.831148624420166
    5. '_' → logprob: -5.081148624420166
    6. '.strip' → logprob: -5.081148624420166
    7. ')' → logprob: -5.956148624420166
    8. '=' → logprob: -6.081148624420166
    9. '[' → logprob: -6.456148624420166
    10. '()' → logprob: -6.706148624420166

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007009993423707783
    2. '()' → logprob: -8.125700950622559
    3. '(
' → logprob: -9.250700950622559
    4. '('' → logprob: -9.375700950622559
    5. '`' → logprob: -9.875700950622559
    6. '("("' → logprob: -9.875700950622559
    7. '"' → logprob: -10.250700950622559
    8. '(

' → logprob: -10.875700950622559
    9. '```' → logprob: -10.875700950622559
    10. ''' → logprob: -11.250700950622559

Token 7: 'x' (ID: 87)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0297652967274189
    2. '.' → logprob: -4.5297651290893555
    3. 'x' → logprob: -4.6547651290893555
    4. '=' → logprob: -5.7797651290893555
    5. '#' → logprob: -6.6547651290893555
    6. '[:]' → logprob: -7.1547651290893555
    7. 'print' → logprob: -7.6547651290893555
    8. '_' → logprob: -7.7797651290893555
    9. '[int' → logprob: -7.9047651290893555
    10. '+' → logprob: -7.9047651290893555

Token 8: ' =' (ID: 314)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.04652388393878937
    2. '_' → logprob: -3.1715238094329834
    3. '[' → logprob: -5.7965240478515625
    4. '[_' → logprob: -8.921524047851562
    5. '_x' → logprob: -9.171524047851562
    6. '_[' → logprob: -9.296524047851562
    7. '_b' → logprob: -9.296524047851562
    8. ' _' → logprob: -11.296524047851562
    9. '[a' → logprob: -12.046524047851562
    10. '\[' → logprob: -12.046524047851562

Token 9: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3638688325881958
    2. ' list' → logprob: -2.2388687133789062
    3. 'x' → logprob: -2.6138687133789062
    4. '[int' → logprob: -2.6138687133789062
    5. 'int' → logprob: -3.7388687133789062
    6. '[x' → logprob: -4.488868713378906
    7. ' x' → logprob: -5.363868713378906
    8. '[' → logprob: -5.363868713378906
    9. ' [' → logprob: -5.488868713378906
    10. ' int' → logprob: -6.238868713378906

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12695394456386566
    2. '(x' → logprob: -2.1269538402557373
    3. '('' → logprob: -12.501954078674316
    4. '(
' → logprob: -12.751954078674316
    5. ' (' → logprob: -12.751954078674316
    6. '("("' → logprob: -12.751954078674316
    7. 'x' → logprob: -12.876954078674316
    8. '()' → logprob: -13.251954078674316
    9. '(`' → logprob: -13.376954078674316
    10. '(

' → logprob: -13.501954078674316

Token 11: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.005292219575494528
    2. '[' → logprob: -5.2552924156188965
    3. ')_' → logprob: -10.880291938781738
    4. '[a' → logprob: -11.255291938781738
    5. 'a' → logprob: -12.130291938781738
    6. '[_' → logprob: -12.130291938781738
    7. ')' → logprob: -12.130291938781738
    8. '_' → logprob: -12.630291938781738
    9. '_x' → logprob: -13.380291938781738
    10. '```' → logprob: -13.880291938781738

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018339496455155313
    2. '[x' → logprob: -8.62518310546875
    3. ')' → logprob: -13.50018310546875
    4. '[a' → logprob: -13.62518310546875
    5. '[
' → logprob: -14.25018310546875
    6. ' [' → logprob: -15.50018310546875
    7. '['' → logprob: -15.87518310546875
    8. '\[' → logprob: -16.62518310546875
    9. 'x' → logprob: -17.00018310546875
    10. '```' → logprob: -17.12518310546875

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.000001907348633
    4. ''' → logprob: -19.375001907348633
    5. ')' → logprob: -19.500001907348633
    6. '```' → logprob: -19.875001907348633
    7. '۰' → logprob: -20.500001907348633
    8. '`' → logprob: -20.750001907348633
    9. '2' → logprob: -20.875001907348633
    10. '])' → logprob: -20.875001907348633

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3158898949623108
    2. '])' → logprob: -1.315889835357666
    3. ']' → logprob: -6.065889835357666
    4. ')]' → logprob: -8.690890312194824
    5. ')])' → logprob: -9.815890312194824
    6. ''])' → logprob: -10.565890312194824
    7. '+' → logprob: -11.690890312194824
    8. ')
' → logprob: -11.940890312194824
    9. ' ])' → logprob: -12.065890312194824
    10. '))' → logprob: -12.065890312194824

Token 15: 'a' (ID: 64)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41474080085754395
    2. '_' → logprob: -2.289740800857544
    3. '+' → logprob: -2.539740800857544
    4. '<|end|>' → logprob: -3.039740800857544
    5. ' ' → logprob: -3.539740800857544
    6. '-' → logprob: -3.664740800857544
    7. '>' → logprob: -4.414740562438965
    8. '[' → logprob: -5.039740562438965
    9. '*' → logprob: -5.039740562438965
    10. 'x' → logprob: -5.414740562438965

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519926428794861
    2. ' int' → logprob: -1.5019927024841309
    3. ' x' → logprob: -10.126992225646973
    4. 'x' → logprob: -10.751992225646973
    5. 'input' → logprob: -14.126992225646973
    6. ' ' → logprob: -14.376992225646973
    7. ' input' → logprob: -15.376992225646973
    8. '=int' → logprob: -15.501992225646973
    9. '0' → logprob: -15.876992225646973
    10. '1' → logprob: -16.12699317932129

Token 18: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48562532663345337
    2. '(x' → logprob: -0.9856253266334534
    3. '(a' → logprob: -4.485625267028809
    4. 'a' → logprob: -9.735625267028809
    5. '((' → logprob: -10.735625267028809
    6. 'x' → logprob: -10.985625267028809
    7. ' (' → logprob: -11.110625267028809
    8. ')(' → logprob: -11.485625267028809
    9. '(ord' → logprob: -11.485625267028809
    10. '("("' → logprob: -11.610625267028809

Token 19: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.03931039199233055
    2. '[' → logprob: -3.2893104553222656
    3. 'a' → logprob: -7.539310455322266
    4. ')' → logprob: -8.289310455322266
    5. ')]' → logprob: -9.414310455322266
    6. '])' → logprob: -9.664310455322266
    7. '_' → logprob: -9.789310455322266
    8. '```' → logprob: -9.914310455322266
    9. ')_' → logprob: -10.039310455322266
    10. '1' → logprob: -10.164310455322266

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -13.25000286102295
    3. '1' → logprob: -14.12500286102295
    4. ')' → logprob: -15.87500286102295
    5. '```' → logprob: -16.375003814697266
    6. '[
' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '\[' → logprob: -17.500003814697266
    9. 'a' → logprob: -17.750003814697266
    10. ')[' → logprob: -17.750003814697266

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '0' → logprob: -14.125008583068848
    4. '])' → logprob: -15.000008583068848
    5. '-' → logprob: -15.500008583068848
    6. '   ' → logprob: -15.562508583068848
    7. ']' → logprob: -15.750008583068848
    8. ')' → logprob: -15.750008583068848
    9. '2' → logprob: -16.56250762939453
    10. '' → logprob: -16.56250762939453

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. '))' → logprob: -12.37501049041748
    3. '])' → logprob: -12.37501049041748
    4. '`)' → logprob: -14.62501049041748
    5. '})' → logprob: -15.62501049041748
    6. ')])' → logprob: -15.62501049041748
    7. '）' → logprob: -15.75001049041748
    8. ' )' → logprob: -16.125009536743164
    9. '>)' → logprob: -16.250009536743164
    10. ')]' → logprob: -16.375009536743164

Token 23: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3839865028858185
    2. '+' → logprob: -2.133986473083496
    3. 'i' → logprob: -2.758986473083496
    4. '\n' → logprob: -3.383986473083496
    5. ' if' → logprob: -3.883986473083496
    6. '+
' → logprob: -4.258986473083496
    7. '>' → logprob: -4.383986473083496
    8. '\' → logprob: -4.633986473083496
    9. '-' → logprob: -4.758986473083496
    10. 'x' → logprob: -4.883986473083496

Token 24: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07146988809108734
    2. 'x' → logprob: -2.696469783782959
    3. ' a' → logprob: -7.196469783782959
    4. ' ' → logprob: -7.321469783782959
    5. 'a' → logprob: -9.696470260620117
    6. ' ' → logprob: -11.071470260620117
    7. '(' → logprob: -11.071470260620117
    8. ' (' → logprob: -11.821470260620117
    9. ' abs' → logprob: -11.946470260620117
    10. '  ' → logprob: -12.571470260620117

Token 25: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.49775615334510803
    2. '>' → logprob: -1.8727561235427856
    3. ' <' → logprob: -2.122756242752075
    4. ' >' → logprob: -2.622756242752075
    5. '>=' → logprob: -3.997756242752075
    6. '<=' → logprob: -4.497756004333496
    7. ' <=' → logprob: -4.747756004333496
    8. ' >=' → logprob: -5.122756004333496
    9. ' ' → logprob: -7.247756004333496
    10. '%' → logprob: -7.747756004333496

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03371855244040489
    2. ' a' → logprob: -3.4087185859680176
    3. ' ' → logprob: -11.03371810913086
    4. '10' → logprob: -11.28371810913086
    5. '0' → logprob: -11.40871810913086
    6. '5' → logprob: -12.28371810913086
    7. '20' → logprob: -12.78371810913086
    8. '32' → logprob: -13.03371810913086
    9. '100' → logprob: -13.40871810913086
    10. '3' → logprob: -13.40871810913086

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012809180771000683
    2. '':' → logprob: -9.875127792358398
    3. ' :' → logprob: -10.125127792358398
    4. ':
' → logprob: -11.000127792358398
    5. '":' → logprob: -11.625127792358398
    6. '':'' → logprob: -12.250127792358398
    7. '":"' → logprob: -13.625127792358398
    8. '+:' → logprob: -13.625127792358398
    9. '):' → logprob: -14.500127792358398
    10. '+' → logprob: -14.875127792358398

Token 28: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.21207408607006073
    2. 'print' → logprob: -1.8370740413665771
    3. '"' → logprob: -4.087074279785156
    4. ''' → logprob: -5.587074279785156
    5. '\n' → logprob: -5.712074279785156
    6. '"\' → logprob: -6.087074279785156
    7. ''\' → logprob: -6.837074279785156
    8. '   ' → logprob: -6.837074279785156
    9. ' \' → logprob: -6.962074279785156
    10. '\' → logprob: -6.962074279785156

Token 29: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010133992182090878
    2. ' print' → logprob: -7.251013278961182
    3. '"' → logprob: -8.50101375579834
    4. ''' → logprob: -10.37601375579834
    5. 'pr' → logprob: -11.00101375579834
    6. 'pri' → logprob: -11.37601375579834
    7. 'prin' → logprob: -11.50101375579834
    8. '#print' → logprob: -12.87601375579834
    9. 'prit' → logprob: -13.00101375579834
    10. 'import' → logprob: -13.00101375579834

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3485279977321625
    2. '("' → logprob: -1.3485280275344849
    3. '("<' → logprob: -4.098527908325195
    4. '("("' → logprob: -4.348527908325195
    5. '('' → logprob: -5.848527908325195
    6. '(x' → logprob: -6.473527908325195
    7. '('<' → logprob: -8.848527908325195
    8. '(":' → logprob: -9.473527908325195
    9. '("")' → logprob: -9.598527908325195
    10. '()' → logprob: -9.598527908325195

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023041737731546164
    2. '"' → logprob: -6.1273040771484375
    3. ''' → logprob: -9.752304077148438
    4. ' ' → logprob: -11.002304077148438
    5. '-' → logprob: -11.627304077148438
    6. '"x' → logprob: -12.252304077148438
    7. '":' → logprob: -12.502304077148438
    8. '"<' → logprob: -12.502304077148438
    9. '")' → logprob: -12.627304077148438
    10. '```' → logprob: -13.127304077148438

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ')
' → logprob: -10.875021934509277
    3. ' )' → logprob: -13.875021934509277
    4. '))' → logprob: -14.625021934509277
    5. '()' → logprob: -14.875021934509277
    6. '`)' → logprob: -15.250021934509277
    7. '```' → logprob: -16.00002098083496
    8. ')

' → logprob: -16.12502098083496
    9. 'x' → logprob: -16.25002098083496
    10. '0' → logprob: -16.50002098083496

Token 33: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.18592891097068787
    2. 'elif' → logprob: -1.8109289407730103
    3. ' else' → logprob: -5.185928821563721
    4. ' elif' → logprob: -7.810928821563721
    5. '\n' → logprob: -10.185929298400879
    6. '```' → logprob: -10.185929298400879
    7. '<|end|>' → logprob: -10.810929298400879
    8. '#else' → logprob: -11.810929298400879
    9. 'x' → logprob: -11.935929298400879
    10. '#elif' → logprob: -12.060929298400879

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034583290107548237
    2. ':
' → logprob: -8.000346183776855
    3. '   ' → logprob: -11.875346183776855
    4. ' :' → logprob: -13.000346183776855
    5. ':
' → logprob: -14.500346183776855
    6. ':

' → logprob: -16.00034523010254
    7. '```' → logprob: -16.50034523010254
    8. ':def' → logprob: -16.75034523010254
    9. ':\' → logprob: -17.12534523010254
    10. ':return' → logprob: -17.12534523010254

Token 35: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6831194758415222
    2. '   ' → logprob: -0.9331194758415222
    3. 'print' → logprob: -2.683119535446167
    4. '10' → logprob: -3.683119535446167
    5. ' ' → logprob: -5.433119297027588
    6. ' print' → logprob: -6.558119297027588
    7. '25' → logprob: -7.558119297027588
    8. '2' → logprob: -7.933119297027588
    9. '20' → logprob: -7.933119297027588
    10. '100' → logprob: -7.933119297027588

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04207872971892357
    2. '1' → logprob: -3.292078733444214
    3. '10' → logprob: -6.292078495025635
    4. '   ' → logprob: -7.167078495025635
    5. ' print' → logprob: -7.667078495025635
    6. 'x' → logprob: -8.042078971862793
    7. '100' → logprob: -8.542078971862793
    8. '(' → logprob: -8.542078971862793
    9. '(print' → logprob: -9.667078971862793
    10. '(x' → logprob: -9.917078971862793

Token 37: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9150683283805847
    2. '(x' → logprob: -1.1650683879852295
    3. '1' → logprob: -1.6650683879852295
    4. 'x' → logprob: -2.7900683879852295
    5. '(abs' → logprob: -3.9150683879852295
    6. 'abs' → logprob: -4.66506814956665
    7. '((' → logprob: -5.29006814956665
    8. ' ' → logprob: -7.41506814956665
    9. '10' → logprob: -7.54006814956665
    10. ' (' → logprob: -7.66506814956665

Token 38: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005659759975969791
    2. '1' → logprob: -6.255659580230713
    3. '(' → logprob: -6.505659580230713
    4. '(x' → logprob: -6.630659580230713
    5. 'x' → logprob: -7.630659580230713
    6. '(abs' → logprob: -8.880660057067871
    7. '((' → logprob: -9.255660057067871
    8. 'abs' → logprob: -9.505660057067871
    9. '(int' → logprob: -10.130660057067871
    10. 'int' → logprob: -10.880660057067871

Token 39: ')' (ID: 8)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8351892473874614e-05
    2. ')' → logprob: -10.125048637390137
    3. ' ' → logprob: -12.375048637390137
    4. '00' → logprob: -13.625048637390137
    5. '*' → logprob: -14.125048637390137
    6. '5' → logprob: -14.500048637390137
    7. '1' → logprob: -14.625048637390137
    8. '   ' → logprob: -15.625048637390137
    9. ' )' → logprob: -15.625048637390137
    10. '**' → logprob: -16.00004768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 35.14%
Précision adaptée (1ère position): 40.54%
Précision (top 10): 75.68%
================================================================================
