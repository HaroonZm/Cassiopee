================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
MODULO = 998244353  # J'aime bien mettre les constantes en maj

if n > m:
    # On échange, pas sûr que ce soit toujours utile...
    temp = n
    n = m
    m = temp

facto = [1]  # en général je commence comme ça
powm_ = [1] * (m + 1)
pown_ = [1 for _ in range(m + 1)]

# Pré-calculs de facto et puissances, c’est plus rapide non?
for i in range(1, m + 1):
    facto.append(facto[-1] * i % MODULO)
    # Bon, y a sûrement mieux que ces noms de variable
    powm_[i] = powm_[i - 1] * (m + 1) % MODULO
    pown_[i] = pown_[i - 1] * (n + 1) % MODULO

def my_pow(x, y):
    res = 1
    while y > 0:
        if y % 2:
            res = res * x % MODULO
        x = (x * x) % MODULO
        y //= 2
    return res

inv_f = [0] * (m + 1)
inv_f[m] = my_pow(facto[m], MODULO - 2)
for i in range(m, 0, -1):
    inv_f[i - 1] = inv_f[i] * i % MODULO

# Utilise nCr, voilà une fonction classique
def comb(a, b):
    if a < b or b < 0:
        return 0  # des fois ça bug sinon
    return facto[a] * inv_f[b] % MODULO * inv_f[a - b] % MODULO

reponse = 0
for k in range(0, n + 1):
    sgn = 1 if k % 2 == 0 else -1  # alternance des signes sinon
    # je suis pas sûr d’avoir bien tout suivi ici
    add = sgn * comb(n, k) * comb(m, k) * facto[k] * powm_[n - k] * pown_[m - k]
    reponse = (reponse + add) % MODULO
    # print(f"k={k} => {add}")  # utile pour debug si besoin

print(reponse)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07958755642175674
    2. ',' → logprob: -3.204587459564209
    3. ' =' → logprob: -3.329587459564209
    4. '```' → logprob: -10.454587936401367
    5. ')' → logprob: -10.829587936401367
    6. ';' → logprob: -10.954587936401367
    7. '#' → logprob: -11.954587936401367
    8. '`' → logprob: -12.204587936401367
    9. ' ' → logprob: -12.454587936401367
    10. ''' → logprob: -12.454587936401367

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8872450590133667
    2. ' map' → logprob: -0.8872450590133667
    3. 'map' → logprob: -2.3872451782226562
    4. '0' → logprob: -3.3872451782226562
    5. 'input' → logprob: -3.7622451782226562
    6. ' input' → logprob: -3.8872451782226562
    7. '10' → logprob: -5.262245178222656
    8. '1' → logprob: -8.012245178222656
    9. 'int' → logprob: -8.137245178222656
    10. ' int' → logprob: -8.137245178222656

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2743379473686218
    2. '<|end|>' → logprob: -1.5243380069732666
    3. '```' → logprob: -5.0243377685546875
    4. '<|end|>' → logprob: -5.3993377685546875
    5. '(lambda' → logprob: -6.3993377685546875
    6. ')' → logprob: -6.5243377685546875
    7. '(user' → logprob: -7.0243377685546875
    8. '(token' → logprob: -7.1493377685546875
    9. '[' → logprob: -7.3993377685546875
    10. '(int' → logprob: -7.5243377685546875

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2532321810722351
    2. ')' → logprob: -2.12823224067688
    3. '(input' → logprob: -3.00323224067688
    4. '```' → logprob: -4.003232002258301
    5. '(user' → logprob: -4.503232002258301
    6. '(int' → logprob: -5.003232002258301
    7. '(str' → logprob: -5.628232002258301
    8. '`)' → logprob: -6.378232002258301
    9. '(token' → logprob: -6.753232002258301
    10. '(range' → logprob: -6.753232002258301

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602884978055954
    2. 'input' → logprob: -1.9102884531021118
    3. '(input' → logprob: -9.66028881072998
    4. ')' → logprob: -15.03528881072998
    5. ',input' → logprob: -15.91028881072998
    6. '=input' → logprob: -16.160287857055664
    7. '<input' → logprob: -17.160287857055664
    8. ' )' → logprob: -17.785287857055664
    9. '[input' → logprob: -17.785287857055664
    10. '```' → logprob: -18.035287857055664

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4078379273414612
    2. '()' → logprob: -1.2828378677368164
    3. ')' → logprob: -3.4078378677368164
    4. '(' → logprob: -5.032837867736816
    5. '`()' → logprob: -5.657837867736816
    6. '(""))' → logprob: -6.157837867736816
    7. '().' → logprob: -6.157837867736816
    8. '('' → logprob: -6.532837867736816
    9. '()))' → logprob: -6.657837867736816
    10. '```' → logprob: -7.032837867736816

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015267637791112065
    2. 'strip' → logprob: -6.501526832580566
    3. 'rstrip' → logprob: -11.126526832580566
    4. ')' → logprob: -12.126526832580566
    5. ' split' → logprob: -13.001526832580566
    6. 'read' → logprob: -13.376526832580566
    7. '(split' → logprob: -15.501526832580566
    8. 'spl' → logprob: -16.62652587890625
    9. 'replace' → logprob: -17.12652587890625
    10. '```' → logprob: -17.62652587890625

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03183026984333992
    2. '))' → logprob: -3.906830310821533
    3. '())' → logprob: -4.531830310821533
    4. '()' → logprob: -8.656829833984375
    5. '`)' → logprob: -8.781829833984375
    6. '(' → logprob: -10.281829833984375
    7. ')`' → logprob: -10.281829833984375
    8. '()))' → logprob: -10.531829833984375
    9. ')))' → logprob: -11.906829833984375
    10. ' )' → logprob: -12.281829833984375

Token 11: 'MOD' (ID: 52135)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18924707174301147
    2. 'for' → logprob: -3.0642471313476562
    3. 'x' → logprob: -3.3142471313476562
    4. '\n' → logprob: -4.064247131347656
    5. 'd' → logprob: -4.689247131347656
    6. '`' → logprob: -4.814247131347656
    7. 'r' → logprob: -4.814247131347656
    8. ',' → logprob: -4.939247131347656
    9. '#' → logprob: -5.439247131347656
    10. 's' → logprob: -5.564247131347656

Token 12: 'ULO' (ID: 63916)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25590580701828003
    2. ' =' → logprob: -2.130905866622925
    3. '_' → logprob: -2.255905866622925
    4. ' ' → logprob: -7.380905628204346
    5. ')' → logprob: -7.380905628204346
    6. ',' → logprob: -7.755905628204346
    7. '_=' → logprob: -8.505906105041504
    8. ' _' → logprob: -9.505906105041504
    9. '<|end|>' → logprob: -9.630906105041504
    10. '```' → logprob: -9.880906105041504

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5535950064659119
    2. '=' → logprob: -1.0535950660705566
    3. ' =' → logprob: -2.6785950660705566
    4. ' ' → logprob: -6.053595066070557
    5. ')' → logprob: -6.428595066070557
    6. ',' → logprob: -6.678595066070557
    7. ' _' → logprob: -6.678595066070557
    8. '_=' → logprob: -7.678595066070557
    9. '```' → logprob: -8.428594589233398
    10. '**' → logprob: -9.803594589233398

Token 14: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33524763584136963
    2. ' ' → logprob: -1.3352476358413696
    3. '100' → logprob: -3.83524751663208
    4. '1' → logprob: -8.835247993469238
    5. '998' → logprob: -13.710247993469238
    6. '(' → logprob: -13.835247993469238
    7. ' (' → logprob: -14.210247993469238
    8. ' ' → logprob: -14.335247993469238
    9. '2' → logprob: -15.335247993469238
    10. 'int' → logprob: -15.460247993469238

Token 15: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12719067931175232
    2. '100' → logprob: -2.127190589904785
    3. '1' → logprob: -8.627190589904785
    4. ' ' → logprob: -9.502190589904785
    5. '998' → logprob: -12.002190589904785
    6. '(' → logprob: -13.252190589904785
    7. '2' → logprob: -15.252190589904785
    8. 'int' → logprob: -15.752190589904785
    9. '`' → logprob: -16.2521915435791
    10. '```' → logprob: -16.6271915435791

Token 16: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -4.3822154111694545e-05
    2. '247' → logprob: -10.375043869018555
    3. '243' → logprob: -12.750043869018555
    4. '```' → logprob: -12.750043869018555
    5. '457' → logprob: -13.375043869018555
    6. '245' → logprob: -13.875043869018555
    7. '257' → logprob: -14.375043869018555
    8. '24' → logprob: -14.500043869018555
    9. '259' → logprob: -14.500043869018555
    10. '447' → logprob: -14.750043869018555

Token 17: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '257' → logprob: -0.05814037844538689
    2. '7' → logprob: -3.183140277862549
    3. '244' → logprob: -5.433140277862549
    4. '253' → logprob: -5.558140277862549
    5. '247' → logprob: -6.183140277862549
    6. '2' → logprob: -6.183140277862549
    7. '259' → logprob: -7.558140277862549
    8. '25' → logprob: -7.808140277862549
    9. '357' → logprob: -8.058140754699707
    10. '243' → logprob: -8.433140754699707

Token 18: ' ' (ID: 220)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8892369270324707
    2. '\n' → logprob: -1.0142369270324707
    3. '' → logprob: -2.6392369270324707
    4. '
' → logprob: -3.2642369270324707
    5. 'result' → logprob: -3.6392369270324707
    6. 'a' → logprob: -3.6392369270324707
    7. 'dp' → logprob: -3.8892369270324707
    8. '`' → logprob: -5.139236927032471
    9. '```' → logprob: -5.264236927032471
    10. 'n' → logprob: -5.389236927032471

Token 19: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0866721868515015
    2. '\n' → logprob: -1.2116721868515015
    3. '\' → logprob: -2.336672306060791
    4. 'dp' → logprob: -2.586672306060791
    5. '' → logprob: -3.086672306060791
    6. 'a' → logprob: -3.211672306060791
    7. 'result' → logprob: -3.336672306060791
    8. '
' → logprob: -3.586672306060791
    9. '`' → logprob: -4.961672306060791
    10. 'd' → logprob: -5.336672306060791

Token 20: ' J' (ID: 643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007541903294622898
    2. ' \' → logprob: -6.507542133331299
    3. '\' → logprob: -6.632542133331299
    4. 'pow' → logprob: -7.257542133331299
    5. ' pow' → logprob: -7.257542133331299
    6. ' 

' → logprob: -7.632542133331299
    7. '\n' → logprob: -8.00754165649414
    8. 'def' → logprob: -8.00754165649414
    9. ' (' → logprob: -9.00754165649414
    10. '#' → logprob: -9.13254165649414

Token 21: ''aime' (ID: 57963)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05619615688920021
    2. 'a' → logprob: -3.4311962127685547
    3. 'P' → logprob: -5.681196212768555
    4. '#' → logprob: -5.681196212768555
    5. '\' → logprob: -6.056196212768555
    6. ''' → logprob: -6.681196212768555
    7. '*' → logprob: -6.931196212768555
    8. '^' → logprob: -7.056196212768555
    9. 'K' → logprob: -7.056196212768555
    10. '_' → logprob: -7.056196212768555

Token 22: ' bien' (ID: 5340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2618921995162964
    2. 'def' → logprob: -2.261892318725586
    3. '' → logprob: -2.386892318725586
    4. ' ' → logprob: -2.511892318725586
    5. '\' → logprob: -2.761892318725586
    6. '*' → logprob: -2.886892318725586
    7. '
' → logprob: -2.886892318725586
    8. '.' → logprob: -3.136892318725586
    9. '#' → logprob: -3.136892318725586
    10. '_' → logprob: -3.511892318725586

Token 23: ' mettre' (ID: 25339)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7419823408126831
    2. '
' → logprob: -1.366982340812683
    3. '\n' → logprob: -2.2419824600219727
    4. '' → logprob: -2.8669824600219727
    5. 'a' → logprob: -4.116982460021973
    6. '*' → logprob: -4.116982460021973
    7. ')' → logprob: -4.616982460021973
    8. ',' → logprob: -4.741982460021973
    9. '```' → logprob: -4.741982460021973
    10. '#' → logprob: -4.866982460021973

Token 24: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15181395411491394
    2. ' des' → logprob: -2.4018139839172363
    3. ' un' → logprob: -4.276813983917236
    4. '```' → logprob: -5.026813983917236
    5. 'des' → logprob: -5.151813983917236
    6. ' la' → logprob: -5.526813983917236
    7. ' une' → logprob: -5.651813983917236
    8. '_' → logprob: -6.151813983917236
    9. ' l' → logprob: -6.401813983917236
    10. ' a' → logprob: -6.401813983917236

Token 25: ' constantes' (ID: 125561)
  Prédit: ' commentaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commentaires' → logprob: -0.5568438768386841
    2. ' nombres' → logprob: -2.3068437576293945
    3. ' comments' → logprob: -2.4318437576293945
    4. ' espaces' → logprob: -2.4318437576293945
    5. '_' → logprob: -3.1818437576293945
    6. 'mod' → logprob: -3.4318437576293945
    7. ' constantes' → logprob: -4.6818437576293945
    8. ' #' → logprob: -4.8068437576293945
    9. '%' → logprob: -4.8068437576293945
    10. ' mod' → logprob: -5.3068437576293945

Token 26: ' en' (ID: 469)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9739254117012024
    2. '\n' → logprob: -0.9739254117012024
    3. '
' → logprob: -1.8489253520965576
    4. '' → logprob: -3.7239253520965576
    5. ' 
' → logprob: -4.473925590515137
    6. ' ' → logprob: -4.473925590515137
    7. ',' → logprob: -5.098925590515137
    8. ')' → logprob: -5.348925590515137
    9. '

' → logprob: -5.848925590515137
    10. 'def' → logprob: -5.973925590515137

Token 27: ' maj' (ID: 15575)
  Prédit: ' maj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maj' → logprob: -0.7399396300315857
    2. 'MA' → logprob: -0.9899396300315857
    3. 'maj' → logprob: -2.2399396896362305
    4. ' MA' → logprob: -3.8649396896362305
    5. 'ma' → logprob: -4.8649396896362305
    6. '```' → logprob: -5.2399396896362305
    7. 'Maj' → logprob: -5.4899396896362305
    8. ' uppercase' → logprob: -6.1149396896362305
    9. 's' → logprob: -6.7399396896362305
    10. 'CAP' → logprob: -6.9899396896362305

Token 28: '

' (ID: 279)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.6688569784164429
    2. 'usc' → logprob: -1.0438569784164429
    3. '```' → logprob: -2.1688570976257324
    4. 'US' → logprob: -4.043857097625732
    5. 's' → logprob: -7.418857097625732
    6. '=' → logprob: -7.918857097625732
    7. 'E' → logprob: -8.043856620788574
    8. 'es' → logprob: -8.043856620788574
    9. 'def' → logprob: -8.543856620788574
    10. ')' → logprob: -8.543856620788574

Token 29: 'if' (ID: 366)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7530456185340881
    2. 'def' → logprob: -1.2530455589294434
    3. ':' → logprob: -2.8780455589294434
    4. ')' → logprob: -2.8780455589294434
    5. '```' → logprob: -3.6280455589294434
    6. '=' → logprob: -4.128045558929443
    7. 'x' → logprob: -4.378045558929443
    8. 'um' → logprob: -4.878045558929443
    9. ' ' → logprob: -4.878045558929443
    10. '\' → logprob: -5.253045558929443

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11378580331802368
    2. ' ' → logprob: -2.238785743713379
    3. ' not' → logprob: -7.863785743713379
    4. ' ' → logprob: -8.363785743713379
    5. 'n' → logprob: -8.488785743713379
    6. ' m' → logprob: -9.863785743713379
    7. '  ' → logprob: -10.488785743713379
    8. ' (' → logprob: -10.738785743713379
    9. ' ' → logprob: -12.238785743713379
    10. ' a' → logprob: -12.488785743713379

Token 31: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.24491311609745026
    2. ' ' → logprob: -2.244913101196289
    3. ' ==' → logprob: -3.369913101196289
    4. ' <' → logprob: -3.619913101196289
    5. ' >=' → logprob: -3.744913101196289
    6. ' <=' → logprob: -4.619913101196289
    7. ' %' → logprob: -4.869913101196289
    8. '>' → logprob: -5.119913101196289
    9. '%' → logprob: -7.244913101196289
    10. '==' → logprob: -7.744913101196289

Token 32: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1463887244462967
    2. 'm' → logprob: -2.5213887691497803
    3. ' ' → logprob: -3.0213887691497803
    4. '0' → logprob: -5.396388530731201
    5. '=' → logprob: -6.146388530731201
    6. '1' → logprob: -8.52138900756836
    7. ' =' → logprob: -10.14638900756836
    8. '=m' → logprob: -10.45888900756836
    9. '100' → logprob: -10.52138900756836
    10. '10' → logprob: -10.83388900756836

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008102210704237223
    2. ' :' → logprob: -7.125810146331787
    3. ':**' → logprob: -12.750810623168945
    4. ':
' → logprob: -13.375810623168945
    5. '):' → logprob: -14.750810623168945
    6. '+:' → logprob: -15.125810623168945
    7. '':' → logprob: -16.000810623168945
    8. ':return' → logprob: -16.375810623168945
    9. '>:' → logprob: -16.625810623168945
    10. ' and' → logprob: -17.000810623168945

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24984332919120789
    2. '   ' → logprob: -2.4998433589935303
    3. ' :' → logprob: -2.8748433589935303
    4. '\n' → logprob: -3.9998433589935303
    5. ' ' → logprob: -4.499843120574951
    6. ':
' → logprob: -4.624843120574951
    7. ' n' → logprob: -5.124843120574951
    8. '    ' → logprob: -5.124843120574951
    9. ' :
' → logprob: -5.624843120574951
    10. '```' → logprob: -5.624843120574951

Token 35: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3775957226753235
    2. ' print' → logprob: -1.6275956630706787
    3. 'n' → logprob: -2.6275956630706787
    4. 'print' → logprob: -3.3775956630706787
    5. '   ' → logprob: -5.127595901489258
    6. ' for' → logprob: -6.502595901489258
    7. ' ' → logprob: -7.127595901489258
    8. ' result' → logprob: -7.252595901489258
    9. '    ' → logprob: -8.377595901489258
    10. '\n' → logprob: -8.377595901489258

Token 36: ' On' (ID: 2160)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14952851831912994
    2. 'print' → logprob: -3.0245285034179688
    3. ' for' → logprob: -3.1495285034179688
    4. ' n' → logprob: -3.6495285034179688
    5. ' pass' → logprob: -4.774528503417969
    6. '   ' → logprob: -5.774528503417969
    7. 'for' → logprob: -6.149528503417969
    8. ' result' → logprob: -6.274528503417969
    9. 'n' → logprob: -6.899528503417969
    10. 'pass' → logprob: -7.274528503417969

Token 37: ' échange' (ID: 139953)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5525896549224854
    2. ' print' → logprob: -1.9275896549224854
    3. ' return' → logprob: -2.1775896549224854
    4. 'n' → logprob: -2.6775896549224854
    5. ' n' → logprob: -2.6775896549224854
    6. '    ' → logprob: -3.0525896549224854
    7. ' ' → logprob: -3.1775896549224854
    8. 's' → logprob: -3.5525896549224854
    9. ' for' → logprob: -3.5525896549224854
    10. ' continue' → logprob: -3.8025896549224854

Token 38: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2812373638153076
    2. ' n' → logprob: -1.4062373638153076
    3. ' ' → logprob: -10.281237602233887
    4. '   ' → logprob: -11.031237602233887
    5. '```' → logprob: -11.531237602233887
    6. '  ' → logprob: -12.156237602233887
    7. ',' → logprob: -12.656237602233887
    8. ' (' → logprob: -12.781237602233887
    9. ' `' → logprob: -13.156237602233887
    10. '	n' → logprob: -13.406237602233887

Token 39: ' pas' (ID: 2173)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31459298729896545
    2. ' n' → logprob: -1.314592957496643
    3. '   ' → logprob: -7.3145928382873535
    4. '    ' → logprob: -8.064593315124512
    5. ' ' → logprob: -8.689593315124512
    6. '  ' → logprob: -9.314593315124512
    7. ' ' → logprob: -11.064593315124512
    8. '```' → logprob: -11.564593315124512
    9. ' `' → logprob: -12.064593315124512
    10. 'a' → logprob: -12.064593315124512

Token 40: ' sûr' (ID: 46415)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5082124471664429
    2. ' les' → logprob: -1.7582124471664429
    3. 'les' → logprob: -2.0082125663757324
    4. ' n' → logprob: -3.3832125663757324
    5. ' de' → logprob: -4.383212566375732
    6. 'la' → logprob: -4.508212566375732
    7. '```' → logprob: -4.758212566375732
    8. 'de' → logprob: -4.883212566375732
    9. ' ' → logprob: -5.383212566375732
    10. 'le' → logprob: -5.633212566375732

Token 41: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5078667998313904
    2. 'n' → logprob: -1.6328668594360352
    3. ' n' → logprob: -2.257866859436035
    4. '```' → logprob: -3.257866859436035
    5. '\n' → logprob: -3.757866859436035
    6. '  ' → logprob: -4.382866859436035
    7. '  
' → logprob: -5.507866859436035
    8. '`' → logprob: -5.882866859436035
    9. ' ```' → logprob: -6.132866859436035
    10. ' \' → logprob: -6.132866859436035

Token 42: ' ce' (ID: 2357)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7372092604637146
    2. ' n' → logprob: -1.4872093200683594
    3. 'cela' → logprob: -2.2372093200683594
    4. 'le' → logprob: -3.4872093200683594
    5. 'la' → logprob: -3.6122093200683594
    6. ' ce' → logprob: -3.7372093200683594
    7. 'm' → logprob: -4.362209320068359
    8. 'c' → logprob: -4.487209320068359
    9. 'ce' → logprob: -4.737209320068359
    10. ' m' → logprob: -4.862209320068359

Token 43: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.024306679144501686
    2. 'so' → logprob: -4.774306774139404
    3. ' so' → logprob: -4.899306774139404
    4. ' sois' → logprob: -5.774306774139404
    5. 's' → logprob: -6.274306774139404
    6. '_so' → logprob: -7.274306774139404
    7. ' soi' → logprob: -7.774306774139404
    8. 'u' → logprob: -8.149306297302246
    9. ' code' → logprob: -8.399306297302246
    10. ' soient' → logprob: -9.149306297302246

Token 44: ' toujours' (ID: 16867)
  Prédit: 'utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utile' → logprob: -0.24861280620098114
    2. 'pert' → logprob: -2.998612880706787
    3. '```' → logprob: -3.373612880706787
    4. 'important' → logprob: -3.998612880706787
    5. 'optimal' → logprob: -3.998612880706787
    6. 'né' → logprob: -4.373612880706787
    7. 'optim' → logprob: -4.498612880706787
    8. 'le' → logprob: -4.873612880706787
    9. 'efficient' → logprob: -4.998612880706787
    10. 'correct' → logprob: -5.123612880706787

Token 45: ' utile' (ID: 68237)
  Prédit: 'utile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'utile' → logprob: -1.4482656717300415
    2. '```' → logprob: -1.6982656717300415
    3. 'pert' → logprob: -2.073265552520752
    4. 'le' → logprob: -2.198265552520752
    5. 'optimal' → logprob: -2.698265552520752
    6. 'correct' → logprob: -2.823265552520752
    7. 'la' → logprob: -3.323265552520752
    8. ' nécessaire' → logprob: -3.448265552520752
    9. 'une' → logprob: -3.448265552520752
    10. 'necess' → logprob: -4.698265552520752

Token 46: '...
' (ID: 4908)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5694241523742676
    2. '\n' → logprob: -0.9444241523742676
    3. ' n' → logprob: -3.9444241523742676
    4. '```' → logprob: -4.444424152374268
    5. ',' → logprob: -5.194424152374268
    6. '  
' → logprob: -6.194424152374268
    7. '   ' → logprob: -6.944424152374268
    8. ' ' → logprob: -7.069424152374268
    9. '
' → logprob: -7.444424152374268
    10. '\' → logprob: -7.569424152374268

Token 47: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19852223992347717
    2. ' n' → logprob: -2.3235223293304443
    3. '\n' → logprob: -2.9485223293304443
    4. '```' → logprob: -4.823522090911865
    5. ' 
' → logprob: -5.323522090911865
    6. '<|end|>' → logprob: -5.448522090911865
    7. '  
' → logprob: -6.073522090911865
    8. ' ' → logprob: -6.198522090911865
    9. '    
' → logprob: -6.448522090911865
    10. '   ' → logprob: -6.573522090911865

Token 48: ' temp' (ID: 5484)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3871353268623352
    2. 'n' → logprob: -1.1371352672576904
    3. '   ' → logprob: -8.51213550567627
    4. '```' → logprob: -11.38713550567627
    5. 'a' → logprob: -12.01213550567627
    6. ' (' → logprob: -12.13713550567627
    7. ' m' → logprob: -12.26213550567627
    8. '(n' → logprob: -12.26213550567627
    9. 'm' → logprob: -12.38713550567627
    10. '	n' → logprob: -13.01213550567627

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005372729618102312
    2. '=' → logprob: -5.255372524261475
    3. ',' → logprob: -9.005373001098633
    4. '=n' → logprob: -12.380373001098633
    5. ' ,' → logprob: -12.630373001098633
    6. 'n' → logprob: -12.880373001098633
    7. ' ' → logprob: -13.380373001098633
    8. 's' → logprob: -13.630373001098633
    9. ' n' → logprob: -14.380373001098633
    10. '_' → logprob: -14.380373001098633

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.538307249546051
    2. 'm' → logprob: -1.1633071899414062
    3. ' n' → logprob: -2.7883071899414062
    4. ' m' → logprob: -3.1633071899414062
    5. ' ' → logprob: -13.663307189941406
    6. '   ' → logprob: -14.663307189941406
    7. '	n' → logprob: -15.538307189941406
    8. ' ' → logprob: -16.163307189941406
    9. '	m' → logprob: -16.288307189941406
    10. 'x' → logprob: -16.600807189941406

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2937857210636139
    2. 'n' → logprob: -1.4187856912612915
    3. '   ' → logprob: -5.043785572052002
    4. '
' → logprob: -5.793785572052002
    5. ' n' → logprob: -6.918785572052002
    6. 'm' → logprob: -7.418785572052002
    7. '<|end|>' → logprob: -7.793785572052002
    8. '\n' → logprob: -8.04378604888916
    9. '    
' → logprob: -8.54378604888916
    10. '' → logprob: -9.29378604888916

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11826587468385696
    2. 'n' → logprob: -2.4932658672332764
    3. '\n' → logprob: -3.9932658672332764
    4. '   ' → logprob: -5.1182661056518555
    5. '
' → logprob: -6.4932661056518555
    6. ' n' → logprob: -6.9932661056518555
    7. '    
' → logprob: -7.7432661056518555
    8. '<|end|>' → logprob: -7.7432661056518555
    9. ' ' → logprob: -8.243266105651855
    10. '  
' → logprob: -8.868266105651855

Token 53: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01120815146714449
    2. ' n' → logprob: -4.5112080574035645
    3. '\n' → logprob: -9.386208534240723
    4. ' ' → logprob: -10.261208534240723
    5. ' 
' → logprob: -11.636208534240723
    6. '   ' → logprob: -11.761208534240723
    7. '
' → logprob: -11.761208534240723
    8. ' =' → logprob: -12.511208534240723
    9. '	n' → logprob: -12.636208534240723
    10. '=' → logprob: -13.011208534240723

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011948170140385628
    2. '=' → logprob: -4.636948108673096
    3. ',' → logprob: -6.136948108673096
    4. ' ' → logprob: -11.136948585510254
    5. ' ,' → logprob: -11.511948585510254
    6. ')' → logprob: -14.386948585510254
    7. '=int' → logprob: -14.636948585510254
    8. ' m' → logprob: -14.636948585510254
    9. '=m' → logprob: -15.261948585510254
    10. '<|end|>' → logprob: -15.386948585510254

Token 55: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931474208831787
    2. ' m' → logprob: -0.6931474208831787
    3. '	m' → logprob: -15.568147659301758
    4. ' ' → logprob: -17.068147659301758
    5. ' ' → logprob: -17.318147659301758
    6. ' м' → logprob: -17.443147659301758
    7. '   ' → logprob: -18.443147659301758
    8. 'м' → logprob: -18.693147659301758
    9. '_m' → logprob: -19.693147659301758
    10. 's' → logprob: -20.193147659301758

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06445759534835815
    2. '<|end|>' → logprob: -2.939457654953003
    3. '    
' → logprob: -5.564457416534424
    4. ' 
' → logprob: -6.314457416534424
    5. '
' → logprob: -6.564457416534424
    6. '\n' → logprob: -7.189457416534424
    7. '  
' → logprob: -7.314457416534424
    8. '```' → logprob: -8.314457893371582
    9. '   ' → logprob: -8.564457893371582
    10. '<|end|>' → logprob: -8.564457893371582

Token 57: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' m' (ID: 284)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1272069364786148
    2. ' temp' → logprob: -2.127207040786743
    3. ' ' → logprob: -9.127206802368164
    4. '	temp' → logprob: -9.252206802368164
    5. '[temp' → logprob: -11.002206802368164
    6. '   ' → logprob: -11.627206802368164
    7. ' temps' → logprob: -11.752206802368164
    8. ' 
' → logprob: -12.377206802368164
    9. 'temps' → logprob: -12.377206802368164
    10. '=temp' → logprob: -12.502206802368164

Token 59: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.38687393069267273
    2. ' temp' → logprob: -1.1368739604949951
    3. 'n' → logprob: -14.386874198913574
    4. 'tem' → logprob: -14.636874198913574
    5. '	temp' → logprob: -14.636874198913574
    6. 'tmp' → logprob: -15.011874198913574
    7. ' ' → logprob: -15.136874198913574
    8. 't' → logprob: -15.511874198913574
    9. '[temp' → logprob: -16.011873245239258
    10. ' n' → logprob: -16.136873245239258

Token 61: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'fact' (ID: 53534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3361526429653168
    2. '
' → logprob: -3.0861525535583496
    3. '\n' → logprob: -3.0861525535583496
    4. 'a' → logprob: -3.3361525535583496
    5. 'for' → logprob: -3.8361525535583496
    6. 'x' → logprob: -3.9611525535583496
    7. 's' → logprob: -4.08615255355835
    8. 'result' → logprob: -4.33615255355835
    9. ' 
' → logprob: -4.46115255355835
    10. '\' → logprob: -4.46115255355835

Token 63: 'o' (ID: 78)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.172383427619934
    2. 'orial' → logprob: -1.547383427619934
    3. 's' → logprob: -2.0473833084106445
    4. 'or' → logprob: -2.0473833084106445
    5. '[' → logprob: -2.2973833084106445
    6. '[]' → logprob: -2.7973833084106445
    7. 'o' → logprob: -4.0473833084106445
    8. 'ory' → logprob: -4.7973833084106445
    9. '[n' → logprob: -4.9223833084106445
    10. '=' → logprob: -5.1723833084106445

Token 64: ' =' (ID: 314)
  Prédit: 'rial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rial' → logprob: -0.5773220062255859
    2. 'r' → logprob: -0.8273220062255859
    3. 'ry' → logprob: -7.077322006225586
    4. 'ries' → logprob: -8.327322006225586
    5. 'ri' → logprob: -9.702322006225586
    6. 'rs' → logprob: -9.827322006225586
    7. 'ral' → logprob: -10.452322006225586
    8. '_r' → logprob: -10.577322006225586
    9. '[r' → logprob: -10.577322006225586
    10. 'ria' → logprob: -11.077322006225586

Token 65: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015211095102131367
    2. ' [' → logprob: -4.26521110534668
    3. '1' → logprob: -6.89021110534668
    4. '[int' → logprob: -11.14021110534668
    5. '[n' → logprob: -11.76521110534668
    6. ' ' → logprob: -12.39021110534668
    7. '[m' → logprob: -13.89021110534668
    8. '{' → logprob: -14.26521110534668
    9. '[i' → logprob: -14.51521110534668
    10. '[a' → logprob: -16.39021110534668

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. ']' → logprob: -16.75004005432129
    4. '   ' → logprob: -17.25004005432129
    5. '  ' → logprob: -17.62504005432129
    6. ')' → logprob: -18.87504005432129
    7. '0' → logprob: -18.87504005432129
    8. '```' → logprob: -19.87504005432129
    9. ' ' → logprob: -20.43754005432129
    10. '...' → logprob: -20.50004005432129

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0064239175990223885
    2. ',' → logprob: -5.1314239501953125
    3. ' ]' → logprob: -7.8814239501953125
    4. ']*' → logprob: -9.506423950195312
    5. ']*(' → logprob: -11.006423950195312
    6. ' for' → logprob: -11.006423950195312
    7. ' ' → logprob: -12.256423950195312
    8. ')' → logprob: -13.881423950195312
    9. ' ,' → logprob: -14.131423950195312
    10. ']

' → logprob: -14.381423950195312

Token 68: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7108040452003479
    2. ']' → logprob: -0.7108040452003479
    3. ' for' → logprob: -5.460803985595703
    4. ' ]' → logprob: -5.460803985595703
    5. '*' → logprob: -6.335803985595703
    6. ' ' → logprob: -6.335803985595703
    7. '' → logprob: -6.835803985595703
    8. ')' → logprob: -7.085803985595703
    9. 'for' → logprob: -7.210803985595703
    10. '
' → logprob: -7.335803985595703

Token 69: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07400133460760117
    2. ']' → logprob: -2.6990013122558594
    3. ',' → logprob: -6.074001312255859
    4. ')' → logprob: -7.449001312255859
    5. '+' → logprob: -8.44900131225586
    6. ']*' → logprob: -8.69900131225586
    7. 'for' → logprob: -8.82400131225586
    8. '*(' → logprob: -9.07400131225586
    9. ' *' → logprob: -9.57400131225586
    10. ' for' → logprob: -9.69900131225586

Token 70: ' en' (ID: 469)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31547632813453674
    2. ']' → logprob: -1.4404762983322144
    3. ',' → logprob: -4.815476417541504
    4. '0' → logprob: -5.190476417541504
    5. ' ' → logprob: -5.190476417541504
    6. ' ]' → logprob: -5.565476417541504
    7. '```' → logprob: -5.690476417541504
    8. 'for' → logprob: -6.315476417541504
    9. ' for' → logprob: -6.690476417541504
    10. ')' → logprob: -6.690476417541504

Token 71: ' général' (ID: 30475)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6845867037773132
    2. 'range' → logprob: -1.934586763381958
    3. ' range' → logprob: -2.309586763381958
    4. 'umer' → logprob: -2.434586763381958
    5. 'tre' → logprob: -3.184586763381958
    6. ' ' → logprob: -4.184586524963379
    7. '_' → logprob: -4.309586524963379
    8. ']' → logprob: -4.434586524963379
    9. '=' → logprob: -4.559586524963379
    10. '[' → logprob: -4.934586524963379

Token 72: ' je' (ID: 1264)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33269867300987244
    2. ' for' → logprob: -1.5826987028121948
    3. 'for' → logprob: -3.0826985836029053
    4. ']' → logprob: -3.9576985836029053
    5. '_' → logprob: -5.582698822021484
    6. ' ' → logprob: -5.707698822021484
    7. '*' → logprob: -6.457698822021484
    8. ' ,' → logprob: -7.332698822021484
    9. ' ]' → logprob: -7.457698822021484
    10. '[' → logprob: -7.957698822021484

Token 73: ' commence' (ID: 44755)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9527881145477295
    2. '.' → logprob: -1.3277881145477295
    3. '.append' → logprob: -2.0777881145477295
    4. 'n' → logprob: -2.0777881145477295
    5. 'for' → logprob: -3.4527881145477295
    6. ' range' → logprob: -3.5777881145477295
    7. 'append' → logprob: -4.452788352966309
    8. 's' → logprob: -5.077788352966309
    9. ' for' → logprob: -5.327788352966309
    10. ' n' → logprob: -5.827788352966309

Token 74: ' comme' (ID: 7971)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.20417183637619019
    2. ' par' → logprob: -2.079171895980835
    3. ',' → logprob: -3.454171895980835
    4. '[' → logprob: -4.954171657562256
    5. '_' → logprob: -5.204171657562256
    6. ' ' → logprob: -5.204171657562256
    7. '_par' → logprob: -5.829171657562256
    8. '=' → logprob: -6.954171657562256
    9. '```' → logprob: -6.954171657562256
    10. ' à' → logprob: -7.579171657562256

Token 75: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.46350160241127014
    2. ' ça' → logprob: -1.5885015726089478
    3. 'cela' → logprob: -1.8385015726089478
    4. ' ceci' → logprob: -5.838501453399658
    5. 'range' → logprob: -6.963501453399658
    6. ' cela' → logprob: -7.213501453399658
    7. 'ca' → logprob: -7.713501453399658
    8. 'this' → logprob: -7.963501453399658
    9. '```' → logprob: -7.963501453399658
    10. 'cel' → logprob: -8.088501930236816

Token 76: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01762828789651394
    2. 'for' → logprob: -4.517628192901611
    3. ' for' → logprob: -6.017628192901611
    4. ',
' → logprob: -6.267628192901611
    5. '
' → logprob: -7.517628192901611
    6. '[' → logprob: -8.01762866973877
    7. '\n' → logprob: -8.51762866973877
    8. 's' → logprob: -8.64262866973877
    9. '\' → logprob: -8.76762866973877
    10. ':' → logprob: -9.14262866973877

Token 77: 'pow' (ID: 30304)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16718551516532898
    2. ' for' → logprob: -2.2921855449676514
    3. '[' → logprob: -4.042185306549072
    4. '
' → logprob: -4.792185306549072
    5. ',' → logprob: -4.917185306549072
    6. ' ' → logprob: -5.167185306549072
    7. '<|end|>' → logprob: -5.792185306549072
    8. '_' → logprob: -6.417185306549072
    9. '```' → logprob: -6.792185306549072
    10. '0' → logprob: -6.792185306549072

Token 78: 'm' (ID: 76)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6164082884788513
    2. 'er' → logprob: -0.8664082884788513
    3. '(' → logprob: -4.241408348083496
    4. '2' → logprob: -4.616408348083496
    5. 'ers' → logprob: -4.616408348083496
    6. 'e' → logprob: -5.991408348083496
    7. 'a' → logprob: -7.616408348083496
    8. 'es' → logprob: -7.741408348083496
    9. '[' → logprob: -7.991408348083496
    10. '=' → logprob: -8.741408348083496

Token 79: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3673093914985657
    2. ' =' → logprob: -1.242309331893921
    3. 's' → logprob: -4.7423095703125
    4. 'o' → logprob: -5.9923095703125
    5. 'm' → logprob: -6.4923095703125
    6. '[' → logprob: -6.6173095703125
    7. '=[' → logprob: -6.8673095703125
    8. '_m' → logprob: -7.1173095703125
    9. '(' → logprob: -7.6173095703125
    10. '=m' → logprob: -7.9923095703125

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13039050996303558
    2. ' =' → logprob: -2.1303904056549072
    3. 'm' → logprob: -7.005390644073486
    4. '[' → logprob: -7.630390644073486
    5. 's' → logprob: -7.755390644073486
    6. 'a' → logprob: -7.755390644073486
    7. '1' → logprob: -8.130390167236328
    8. '=[' → logprob: -8.255390167236328
    9. '2' → logprob: -8.505390167236328
    10. 'fact' → logprob: -9.505390167236328

Token 81: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013397661969065666
    2. ' [' → logprob: -7.126339912414551
    3. '1' → logprob: -7.751339912414551
    4. '[m' → logprob: -9.75133991241455
    5. '[n' → logprob: -10.50133991241455
    6. ' ' → logprob: -12.25133991241455
    7. '[p' → logprob: -12.37633991241455
    8. '[]' → logprob: -13.25133991241455
    9. '[int' → logprob: -13.87633991241455
    10. '0' → logprob: -14.12633991241455

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0948158382670954e-05
    2. ' ' → logprob: -11.250030517578125
    3. ']' → logprob: -11.500030517578125
    4. 'pow' → logprob: -13.375030517578125
    5. '0' → logprob: -13.625030517578125
    6. ')' → logprob: -13.937530517578125
    7. '998' → logprob: -14.625030517578125
    8. '2' → logprob: -14.625030517578125
    9. '[' → logprob: -14.812530517578125
    10. 'm' → logprob: -14.875030517578125

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032163821742869914
    2. ' ]' → logprob: -8.500321388244629
    3. ',' → logprob: -9.125321388244629
    4. ')' → logprob: -11.875321388244629
    5. ')]' → logprob: -14.375321388244629
    6. ' ' → logprob: -14.875321388244629
    7. '])' → logprob: -15.125321388244629
    8. ']
' → logprob: -15.125321388244629
    9. ']

' → logprob: -15.125321388244629
    10. '*' → logprob: -16.125322341918945

Token 84: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2858467698097229
    2. '(n' → logprob: -1.4108467102050781
    3. '(' → logprob: -5.660846710205078
    4. ' (' → logprob: -7.035846710205078
    5. 'm' → logprob: -8.785846710205078
    6. '(max' → logprob: -9.410846710205078
    7. 'n' → logprob: -10.535846710205078
    8. ' ' → logprob: -10.910846710205078
    9. '((' → logprob: -11.035846710205078
    10. '100' → logprob: -12.785846710205078

Token 86: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.39675503969192505
    2. '(m' → logprob: -1.1467549800872803
    3. ' (' → logprob: -5.771755218505859
    4. ' m' → logprob: -5.896755218505859
    5. '(' → logprob: -5.896755218505859
    6. '(n' → logprob: -7.146755218505859
    7. 'n' → logprob: -8.64675521850586
    8. '{' → logprob: -10.02175521850586
    9. '[m' → logprob: -10.27175521850586
    10. '   ' → logprob: -10.64675521850586

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008628406561911106
    2. ' +' → logprob: -4.7586283683776855
    3. '-' → logprob: -12.258628845214844
    4. '+n' → logprob: -12.258628845214844
    5. ' -' → logprob: -13.258628845214844
    6. '+
' → logprob: -14.008628845214844
    7. ' ' → logprob: -14.133628845214844
    8. '-n' → logprob: -15.383628845214844
    9. ')' → logprob: -15.633628845214844
    10. '+m' → logprob: -16.008628845214844

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014169970527291298
    2. ' ' → logprob: -4.264170169830322
    3. '2' → logprob: -12.139169692993164
    4. '  ' → logprob: -14.639169692993164
    5. '   ' → logprob: -15.389169692993164
    6. '+' → logprob: -16.264169692993164
    7. ')' → logprob: -16.264169692993164
    8. 'n' → logprob: -16.514169692993164
    9. ' n' → logprob: -16.514169692993164
    10. '```' → logprob: -17.076669692993164

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.000008583068848
    3. '2' → logprob: -13.125008583068848
    4. '１' → logprob: -18.00000762939453
    5. 'n' → logprob: -18.12500762939453
    6. '   ' → logprob: -18.12500762939453
    7. '+' → logprob: -18.50000762939453
    8. '10' → logprob: -18.93750762939453
    9. '11' → logprob: -19.18750762939453
    10. 'm' → logprob: -19.43750762939453

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020807012333534658
    2. ' )' → logprob: -9.125207901000977
    3. ']' → logprob: -9.375207901000977
    4. ')]' → logprob: -12.375207901000977
    5. '])' → logprob: -12.750207901000977
    6. ')
' → logprob: -13.000207901000977
    7. '))' → logprob: -13.375207901000977
    8. '）' → logprob: -14.000207901000977
    9. ')

' → logprob: -14.000207901000977
    10. '),' → logprob: -15.125207901000977

Token 91: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08387287706136703
    2. ' for' → logprob: -2.8338727951049805
    3. 'pow' → logprob: -4.8338727951049805
    4. '<|end|>' → logprob: -4.9588727951049805
    5. ')' → logprob: -5.8338727951049805
    6. 'n' → logprob: -7.4588727951049805
    7. '**' → logprob: -7.8338727951049805
    8. '[' → logprob: -7.8338727951049805
    9. ' ' → logprob: -7.8338727951049805
    10. ']' → logprob: -8.08387279510498

Token 92: 'own' (ID: 940)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.013719731010496616
    2. 'w' → logprob: -6.13871955871582
    3. 'r' → logprob: -6.26371955871582
    4. 'ower' → logprob: -6.63871955871582
    5. 'for' → logprob: -6.76371955871582
    6. '=' → logprob: -6.76371955871582
    7. 'm' → logprob: -6.88871955871582
    8. 'owi' → logprob: -7.26371955871582
    9. 'o' → logprob: -7.38871955871582
    10. ' =' → logprob: -7.51371955871582

Token 93: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008246336947195232
    2. ' =' → logprob: -7.875824451446533
    3. '_=' → logprob: -8.375824928283691
    4. '=' → logprob: -8.625824928283691
    5. 'm' → logprob: -11.000824928283691
    6. '_[' → logprob: -12.250824928283691
    7. '_m' → logprob: -12.250824928283691
    8. '[' → logprob: -13.250824928283691
    9. '=[' → logprob: -13.500824928283691
    10. 's' → logprob: -13.875824928283691

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5769181251525879
    2. ' =' → logprob: -0.8269181251525879
    3. ' ' → logprob: -7.826918125152588
    4. '[' → logprob: -7.826918125152588
    5. '=[' → logprob: -9.70191764831543
    6. '_' → logprob: -10.07691764831543
    7. ' =[' → logprob: -10.70191764831543
    8. 'm' → logprob: -11.32691764831543
    9. ' [' → logprob: -11.45191764831543
    10. '=[]' → logprob: -12.45191764831543

Token 95: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018208475783467293
    2. ' [' → logprob: -4.0182085037231445
    3. '[n' → logprob: -10.143208503723145
    4. ' ' → logprob: -11.893208503723145
    5. '[m' → logprob: -12.143208503723145
    6. '1' → logprob: -12.643208503723145
    7. '   ' → logprob: -12.768208503723145
    8. '  ' → logprob: -15.018208503723145
    9. 'n' → logprob: -15.393208503723145
    10. '([' → logprob: -16.643207550048828

Token 96: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5760718584060669
    2. '1' → logprob: -0.8260718584060669
    3. ' [' → logprob: -9.076071739196777
    4. ' ' → logprob: -11.201071739196777
    5. '(' → logprob: -12.826071739196777
    6. ']' → logprob: -13.701071739196777
    7. '{' → logprob: -15.826071739196777
    8. '   ' → logprob: -15.951071739196777
    9. '[
' → logprob: -16.326072692871094
    10. '  ' → logprob: -16.451072692871094

Token 97: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03469740226864815
    2. '*' → logprob: -3.5346972942352295
    3. ')' → logprob: -5.409697532653809
    4. ']*' → logprob: -9.034697532653809
    5. ' *' → logprob: -9.284697532653809
    6. '+' → logprob: -9.534697532653809
    7. ']+' → logprob: -10.284697532653809
    8. ' (' → logprob: -10.659697532653809
    9. ' ]' → logprob: -10.784697532653809
    10. '(n' → logprob: -10.909697532653809

Token 98: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46561136841773987
    2. 'range' → logprob: -1.4656113386154175
    3. ' range' → logprob: -1.9656113386154175
    4. 'in' → logprob: -7.215611457824707
    5. ' in' → logprob: -7.840611457824707
    6. '_range' → logprob: -10.090611457824707
    7. '(range' → logprob: -10.215611457824707
    8. 'i' → logprob: -10.840611457824707
    9. ' ' → logprob: -12.090611457824707
    10. ' _' → logprob: -12.340611457824707

Token 99: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004572768695652485
    2. ' range' → logprob: -5.754572868347168
    3. 'in' → logprob: -6.629572868347168
    4. ' in' → logprob: -10.004572868347168
    5. '(range' → logprob: -10.879572868347168
    6. 'n' → logprob: -13.129572868347168
    7. '	range' → logprob: -13.629572868347168
    8. ' ' → logprob: -13.754572868347168
    9. '   ' → logprob: -13.879572868347168
    10. 'ange' → logprob: -13.879572868347168

Token 100: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052362410351634026
    2. ' range' → logprob: -5.2552361488342285
    3. '(range' → logprob: -13.630236625671387
    4. ' ' → logprob: -14.380236625671387
    5. '  ' → logprob: -15.380236625671387
    6. '   ' → logprob: -16.00523567199707
    7. '	range' → logprob: -16.00523567199707
    8. 'r' → logprob: -16.25523567199707
    9. 'rang' → logprob: -16.25523567199707
    10. 'ran' → logprob: -16.75523567199707

Token 101: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009238460334017873
    2. '(m' → logprob: -7.3759236335754395
    3. '(' → logprob: -8.125924110412598
    4. ' (' → logprob: -14.500924110412598
    5. 'n' → logprob: -14.625924110412598
    6. '((' → logprob: -14.750924110412598
    7. '(len' → logprob: -16.37592315673828
    8. '(
' → logprob: -17.00092315673828
    9. '(p' → logprob: -17.25092315673828
    10. 'm' → logprob: -17.37592315673828

Token 102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12709619104862213
    2. ' +' → logprob: -2.127096176147461
    3. ')]' → logprob: -9.002096176147461
    4. ')])' → logprob: -10.752096176147461
    5. ')' → logprob: -11.877096176147461
    6. '1' → logprob: -11.877096176147461
    7. '+n' → logprob: -13.502096176147461
    8. ')],' → logprob: -13.627096176147461
    9. '+
' → logprob: -13.627096176147461
    10. ' +
' → logprob: -14.127096176147461

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019829985685646534
    2. ' ' → logprob: -6.376983165740967
    3. '2' → logprob: -9.001982688903809
    4. '+' → logprob: -9.376982688903809
    5. '(n' → logprob: -10.626982688903809
    6. 'm' → logprob: -11.501982688903809
    7. '(' → logprob: -11.501982688903809
    8. 'n' → logprob: -11.626982688903809
    9. '(m' → logprob: -11.876982688903809
    10. '0' → logprob: -12.751982688903809

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025752498186193407
    2. ' ' → logprob: -8.62525749206543
    3. 'm' → logprob: -10.50025749206543
    4. '+' → logprob: -10.87525749206543
    5. '2' → logprob: -11.25025749206543
    6. 'n' → logprob: -11.62525749206543
    7. '0' → logprob: -13.18775749206543
    8. '(n' → logprob: -13.25025749206543
    9. '   ' → logprob: -13.37525749206543
    10. '(' → logprob: -14.18775749206543

Token 105: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008104336448013783
    2. ')' → logprob: -5.13310432434082
    3. '])' → logprob: -6.38310432434082
    4. ']' → logprob: -7.88310432434082
    5. ')])' → logprob: -9.25810432434082
    6. '])]' → logprob: -12.00810432434082
    7. '))' → logprob: -13.38310432434082
    8. ')],' → logprob: -13.88310432434082
    9. ' )' → logprob: -14.13310432434082
    10. ')]
' → logprob: -14.88310432434082

Token 106: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06748953461647034
    2. ' for' → logprob: -2.9424896240234375
    3. '<|end|>' → logprob: -4.6924896240234375
    4. ')' → logprob: -6.3174896240234375
    5. '+' → logprob: -7.5674896240234375
    6. '*' → logprob: -8.192489624023438
    7. ']' → logprob: -8.317489624023438
    8. 'n' → logprob: -8.692489624023438
    9. ' ' → logprob: -9.192489624023438
    10. '```' → logprob: -9.817489624023438

Token 107: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037316649686545134
    2. ' for' → logprob: -5.628731727600098
    3. 'i' → logprob: -9.128731727600098
    4. 'n' → logprob: -11.378731727600098
    5. 'range' → logprob: -12.378731727600098
    6. '```' → logprob: -12.878731727600098
    7. ')' → logprob: -14.128731727600098
    8. 'pow' → logprob: -14.378731727600098
    9. '
' → logprob: -14.753731727600098
    10. '_' → logprob: -14.878731727600098

Token 108: '-cal' (ID: 84920)
  Prédit: 'paration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.21262571215629578
    2. 'fix' → logprob: -3.212625741958618
    3. 'c' → logprob: -3.337625741958618
    4. '-cal' → logprob: -3.837625741958618
    5. 'cal' → logprob: -3.962625741958618
    6. 'calcul' → logprob: -4.712625503540039
    7. 'cision' → logprob: -4.837625503540039
    8. '#' → logprob: -5.087625503540039
    9. 'pare' → logprob: -5.212625503540039
    10. 'rem' → logprob: -5.462625503540039

Token 109: 'cul' (ID: 2885)
  Prédit: 'culation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.1502116471529007
    2. 'cul' → logprob: -2.1502115726470947
    3. 'c' → logprob: -4.025211811065674
    4. 'cule' → logprob: -7.025211811065674
    5. '#' → logprob: -7.150211811065674
    6. 'culated' → logprob: -7.400211811065674
    7. 'ulation' → logprob: -7.525211811065674
    8. '-' → logprob: -7.775211811065674
    9. '_' → logprob: -8.150211334228516
    10. '```' → logprob: -8.275211334228516

Token 110: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0047730570659041405
    2. ' for' → logprob: -5.504773139953613
    3. '<|end|>' → logprob: -8.379773139953613
    4. 's' → logprob: -9.004773139953613
    5. 'des' → logprob: -10.004773139953613
    6. 'fact' → logprob: -10.004773139953613
    7. 'pour' → logprob: -10.129773139953613
    8. '#' → logprob: -10.379773139953613
    9. ':' → logprob: -10.379773139953613
    10. 'n' → logprob: -10.504773139953613

Token 111: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0067209405824542046
    2. ' for' → logprob: -5.256721019744873
    3. '<|end|>' → logprob: -6.631721019744873
    4. 'n' → logprob: -10.256720542907715
    5. 'pow' → logprob: -10.256720542907715
    6. 'i' → logprob: -10.756720542907715
    7. '```' → logprob: -10.756720542907715
    8. '<|end|>' → logprob: -11.006720542907715
    9. '#' → logprob: -11.506720542907715
    10. 'factor' → logprob: -12.006720542907715

Token 112: ' facto' (ID: 73147)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2778049409389496
    2. ' puiss' → logprob: -2.9028048515319824
    3. 'factor' → logprob: -3.2778048515319824
    4. ' fact' → logprob: -3.5278048515319824
    5. 'fact' → logprob: -3.6528048515319824
    6. 'i' → logprob: -3.7778048515319824
    7. 'p' → logprob: -4.652804851531982
    8. ' facto' → logprob: -4.652804851531982
    9. 'a' → logprob: -5.402804851531982
    10. ' puissance' → logprob: -5.652804851531982

Token 113: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004405193962156773
    2. ' for' → logprob: -6.5044050216674805
    3. 's' → logprob: -6.7544050216674805
    4. '=' → logprob: -7.2544050216674805
    5. ',' → logprob: -8.00440502166748
    6. ' =' → logprob: -8.87940502166748
    7. 'n' → logprob: -8.87940502166748
    8. 'or' → logprob: -9.25440502166748
    9. '[' → logprob: -9.62940502166748
    10. 'r' → logprob: -10.00440502166748

Token 114: ' puiss' (ID: 102546)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7345426082611084
    2. 'p' → logprob: -0.8595426082611084
    3. ' p' → logprob: -3.1095426082611084
    4. ' pow' → logprob: -3.7345426082611084
    5. 'inverse' → logprob: -4.9845428466796875
    6. ' inverse' → logprob: -5.6095428466796875
    7. 'inv' → logprob: -5.7345428466796875
    8. 'for' → logprob: -6.1095428466796875
    9. ' puissance' → logprob: -6.7345428466796875
    10. 'powers' → logprob: -6.8595428466796875

Token 115: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0002509687910787761
    2. 'ance' → logprob: -8.625250816345215
    3. '```' → logprob: -10.375250816345215
    4. 'es' → logprob: -11.750250816345215
    5. 'ces' → logprob: -12.000250816345215
    6. 'n' → logprob: -12.125250816345215
    7. 'ANCES' → logprob: -12.500250816345215
    8. '#' → logprob: -12.500250816345215
    9. 'p' → logprob: -13.375250816345215
    10. 'e' → logprob: -13.375250816345215

Token 116: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002783783129416406
    2. ' for' → logprob: -8.25027847290039
    3. 'i' → logprob: -11.37527847290039
    4. 'n' → logprob: -13.37527847290039
    5. 'pour' → logprob: -13.50027847290039
    6. ')' → logprob: -14.50027847290039
    7. 'pow' → logprob: -14.50027847290039
    8. 's' → logprob: -14.50027847290039
    9. 'range' → logprob: -15.37527847290039
    10. '```' → logprob: -15.50027847290039

Token 117: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026308538392186165
    2. ' for' → logprob: -3.651308536529541
    3. 'import' → logprob: -13.1513090133667
    4. '```' → logprob: -13.1513090133667
    5. 's' → logprob: -13.9013090133667
    6. 'range' → logprob: -14.2763090133667
    7. '#' → logprob: -14.4013090133667
    8. 'from' → logprob: -14.5263090133667
    9. 'pour' → logprob: -14.9013090133667
    10. '
' → logprob: -15.5263090133667

Token 118: '’est' (ID: 6838)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015454530948773026
    2. '#' → logprob: -8.126545906066895
    3. '`' → logprob: -8.376545906066895
    4. 'ont' → logprob: -8.626545906066895
    5. ' for' → logprob: -8.751545906066895
    6. 'n' → logprob: -9.126545906066895
    7. 'on' → logprob: -9.376545906066895
    8. '```' → logprob: -9.876545906066895
    9. 'pour' → logprob: -9.876545906066895
    10. 'p' → logprob: -10.001545906066895

Token 119: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3741356432437897
    2. 'pour' → logprob: -1.6241356134414673
    3. ' for' → logprob: -3.749135732650757
    4. 'une' → logprob: -4.374135494232178
    5. 'important' → logprob: -4.499135494232178
    6. '```' → logprob: -4.499135494232178
    7. 'import' → logprob: -4.624135494232178
    8. 'à' → logprob: -4.874135494232178
    9. 'la' → logprob: -5.499135494232178
    10. 'm' → logprob: -5.624135494232178

Token 120: ' rapide' (ID: 44887)
  Prédit: 'rap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rap' → logprob: -0.644167959690094
    2. 'vite' → logprob: -1.8941679000854492
    3. 'eff' → logprob: -2.269167900085449
    4. 'efficient' → logprob: -2.644167900085449
    5. ' efficace' → logprob: -3.894167900085449
    6. 'pr' → logprob: -3.894167900085449
    7. ' rapide' → logprob: -4.019167900085449
    8. 'clair' → logprob: -4.019167900085449
    9. 'comm' → logprob: -4.269167900085449
    10. 'rapid' → logprob: -4.394167900085449

Token 121: ' non' (ID: 2893)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004081367049366236
    2. ' for' → logprob: -5.5040812492370605
    3. '<|end|>' → logprob: -13.504081726074219
    4. ')' → logprob: -14.629081726074219
    5. 'i' → logprob: -14.879081726074219
    6. '```' → logprob: -15.379081726074219
    7. 'n' → logprob: -15.879081726074219
    8. ']' → logprob: -16.50408172607422
    9. '*' → logprob: -16.62908172607422
    10. 'range' → logprob: -16.75408172607422

Token 122: '?
' (ID: 3901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009661881253123283
    2. ' for' → logprob: -4.759661674499512
    3. 'pour' → logprob: -7.634661674499512
    4. '
' → logprob: -8.259661674499512
    5. '```' → logprob: -9.259661674499512
    6. ' pour' → logprob: -9.884661674499512
    7. 'n' → logprob: -10.134661674499512
    8. ',' → logprob: -10.259661674499512
    9. '?' → logprob: -11.259661674499512
    10. 'm' → logprob: -11.634661674499512

Token 123: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013270224444568157
    2. ' for' → logprob: -6.626327037811279
    3. 'i' → logprob: -14.251326560974121
    4. '<|end|>' → logprob: -15.001326560974121
    5. '```' → logprob: -16.126327514648438
    6. 'n' → logprob: -17.126327514648438
    7. ')' → logprob: -17.751327514648438
    8. '	for' → logprob: -18.001327514648438
    9. 'd' → logprob: -18.376327514648438
    10. 'range' → logprob: -18.876327514648438

Token 124: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006770910695195198
    2. 'i' → logprob: -5.006771087646484
    3. ' ' → logprob: -10.131771087646484
    4. ' ' → logprob: -12.256771087646484
    5. ' _' → logprob: -12.506771087646484
    6. '	i' → logprob: -12.631771087646484
    7. ' x' → logprob: -14.006771087646484
    8. ' k' → logprob: -14.131771087646484
    9. '_' → logprob: -14.381771087646484
    10. '_i' → logprob: -14.756771087646484

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018306799232959747
    2. 'in' → logprob: -4.018306732177734
    3. ' ' → logprob: -9.018306732177734
    4. 'range' → logprob: -11.643306732177734
    5. '1' → logprob: -12.393306732177734
    6. 's' → logprob: -12.518306732177734
    7. '```' → logprob: -12.893306732177734
    8. 'n' → logprob: -12.893306732177734
    9. '	in' → logprob: -13.018306732177734
    10. ' ' → logprob: -13.393306732177734

Token 126: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859054833650589
    2. 'range' → logprob: -3.048590660095215
    3. '	range' → logprob: -13.548590660095215
    4. '(range' → logprob: -13.673590660095215
    5. ' ' → logprob: -14.798590660095215
    6. ' xrange' → logprob: -16.5485897064209
    7. '1' → logprob: -17.0485897064209
    8. ' ' → logprob: -17.2985897064209
    9. '```' → logprob: -17.6735897064209
    10. '_range' → logprob: -17.7985897064209

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.875
    3. ' (' → logprob: -16.25
    4. '(m' → logprob: -18.25
    5. ' ' → logprob: -19.875
    6. '(
' → logprob: -21.0
    7. '(n' → logprob: -21.5
    8. '[' → logprob: -23.75
    9. '(len' → logprob: -24.375
    10. '()' → logprob: -24.375

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.301394023466855e-05
    2. 'm' → logprob: -10.000062942504883
    3. ' ' → logprob: -11.000062942504883
    4. '2' → logprob: -14.500062942504883
    5. '(' → logprob: -15.875062942504883
    6. ' m' → logprob: -16.750062942504883
    7. '   ' → logprob: -16.875062942504883
    8. 'n' → logprob: -17.375062942504883
    9. '
' → logprob: -17.500062942504883
    10. '0' → logprob: -17.750062942504883

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01519535668194294
    2. ' ,' → logprob: -4.265195369720459
    3. ',m' → logprob: -7.765195369720459
    4. ' ' → logprob: -9.0151948928833
    5. ')' → logprob: -9.1401948928833
    6. 'm' → logprob: -9.2651948928833
    7. ' in' → logprob: -9.8901948928833
    8. ' m' → logprob: -10.0151948928833
    9. '   ' → logprob: -10.3901948928833
    10. ' )' → logprob: -10.5151948928833

Token 130: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11283167451620102
    2. ' m' → logprob: -2.2378315925598145
    3. 'n' → logprob: -12.237832069396973
    4. ' n' → logprob: -12.862832069396973
    5. ' ' → logprob: -13.487832069396973
    6. ')m' → logprob: -16.112831115722656
    7. ',' → logprob: -16.362831115722656
    8. '   ' → logprob: -16.612831115722656
    9. ')' → logprob: -16.737831115722656
    10. 'len' → logprob: -16.862831115722656

Token 131: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6933122873306274
    2. ' +' → logprob: -0.6933122873306274
    3. '):' → logprob: -8.818312644958496
    4. '):
' → logprob: -11.943312644958496
    5. ' ):' → logprob: -12.068312644958496
    6. '   ' → logprob: -13.318312644958496
    7. ' ' → logprob: -13.943312644958496
    8. ')' → logprob: -14.818312644958496
    9. ' ):
' → logprob: -14.818312644958496
    10. ' +
' → logprob: -15.193312644958496

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005930813029408455
    2. ' ' → logprob: -5.1309309005737305
    3. '```' → logprob: -14.38093090057373
    4. ')' → logprob: -14.75593090057373
    5. '
' → logprob: -14.88093090057373
    6. '   ' → logprob: -15.13093090057373
    7. '+' → logprob: -15.25593090057373
    8. ' ' → logprob: -16.255929946899414
    9. '  ' → logprob: -16.630929946899414
    10. '2' → logprob: -16.943429946899414

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -16.250045776367188
    4. '+' → logprob: -17.375045776367188
    5. 'm' → logprob: -18.000045776367188
    6. 'i' → logprob: -18.500045776367188
    7. '   ' → logprob: -18.625045776367188
    8. '2' → logprob: -18.750045776367188
    9. '  ' → logprob: -20.000045776367188
    10. '```' → logprob: -20.312545776367188

Token 134: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022006258368492126
    2. '):
' → logprob: -4.147006034851074
    3. ':' → logprob: -5.147006034851074
    4. ')' → logprob: -9.147006034851074
    5. ' ):' → logprob: -11.147006034851074
    6. '):
' → logprob: -11.522006034851074
    7. ':
' → logprob: -12.522006034851074
    8. ' :' → logprob: -13.897006034851074
    9. ' ):
' → logprob: -14.397006034851074
    10. ']:' → logprob: -14.647006034851074

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23165978491306305
    2. 'fact' → logprob: -1.6066597700119019
    3. ' fact' → logprob: -5.856659889221191
    4. ':' → logprob: -6.356659889221191
    5. ' facto' → logprob: -7.981659889221191
    6. '_fact' → logprob: -8.231659889221191
    7. '    
' → logprob: -8.731659889221191
    8. ':
' → logprob: -8.856659889221191
    9. '```' → logprob: -8.981659889221191
    10. '  ' → logprob: -9.231659889221191

Token 136: ' facto' (ID: 73147)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.027735618874430656
    2. ' facto' → logprob: -4.027735710144043
    3. ' fact' → logprob: -5.402735710144043
    4. '   ' → logprob: -5.527735710144043
    5. '_fact' → logprob: -8.652735710144043
    6. '
' → logprob: -8.902735710144043
    7. 'fait' → logprob: -9.277735710144043
    8. 'pow' → logprob: -9.527735710144043
    9. ' ' → logprob: -9.652735710144043
    10. ' fato' → logprob: -9.777735710144043

Token 137: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017290873220190406
    2. '.' → logprob: -6.3767290115356445
    3. 'append' → logprob: -11.001729011535645
    4. '=' → logprob: -12.376729011535645
    5. '.app' → logprob: -13.376729011535645
    6. '*=' → logprob: -13.626729011535645
    7. ' .' → logprob: -13.751729011535645
    8. ' *=' → logprob: -14.001729011535645
    9. '   ' → logprob: -14.876729011535645
    10. '.extend' → logprob: -15.376729011535645

Token 138: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.016144633293151855
    2. '((' → logprob: -4.141144752502441
    3. '(' → logprob: -9.266144752502441
    4. 'f' → logprob: -11.766144752502441
    5. '(i' → logprob: -13.016144752502441
    6. '	f' → logprob: -13.141144752502441
    7. 'fact' → logprob: -13.516144752502441
    8. ' (' → logprob: -14.141144752502441
    9. '(m' → logprob: -14.891144752502441
    10. '(
' → logprob: -15.391144752502441

Token 139: 'acto' (ID: 143207)
  Prédit: 'acto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acto' → logprob: -0.0007825878565199673
    2. 'act' → logprob: -7.625782489776611
    3. 'a' → logprob: -9.00078296661377
    4. '(' → logprob: -9.12578296661377
    5. '*' → logprob: -11.25078296661377
    6. '   ' → logprob: -11.75078296661377
    7. 'fact' → logprob: -12.12578296661377
    8. ' acto' → logprob: -12.75078296661377
    9. '
' → logprob: -12.87578296661377
    10. '(act' → logprob: -13.00078296661377

Token 140: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0015023599844425917
    2. '[i' → logprob: -6.501502513885498
    3. '[' → logprob: -19.751502990722656
    4. ' [-' → logprob: -20.126502990722656
    5. 'i' → logprob: -20.626502990722656
    6. '[
' → logprob: -20.751502990722656
    7. '   ' → logprob: -20.751502990722656
    8. '
' → logprob: -20.876502990722656
    9. '```' → logprob: -22.001502990722656
    10. '[n' → logprob: -23.126502990722656

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. '*' → logprob: -13.625020027160645
    4. '```' → logprob: -14.375020027160645
    5. 'i' → logprob: -15.625020027160645
    6. '   ' → logprob: -15.750020027160645
    7. '  ' → logprob: -15.875020027160645
    8. '
' → logprob: -16.375019073486328
    9. 'mult' → logprob: -16.500019073486328
    10. 'multiply' → logprob: -17.000019073486328

Token 142: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0386493019759655
    2. ' *' → logprob: -3.288649320602417
    3. '*i' → logprob: -7.413649082183838
    4. ' ' → logprob: -13.413649559020996
    5. ' ' → logprob: -13.538649559020996
    6. '*
' → logprob: -14.163649559020996
    7. ')' → logprob: -15.038649559020996
    8. '**' → logprob: -15.663649559020996
    9. 'i' → logprob: -15.913649559020996
    10. '   ' → logprob: -16.28864860534668

Token 143: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20475824177265167
    2. ' *' → logprob: -1.7047582864761353
    3. '*i' → logprob: -5.704758167266846
    4. ' ' → logprob: -12.204758644104004
    5. ' ' → logprob: -12.954758644104004
    6. '   ' → logprob: -14.329758644104004
    7. '*object' → logprob: -15.454758644104004
    8. '**' → logprob: -15.704758644104004
    9. 'i' → logprob: -15.704758644104004
    10. '*j' → logprob: -15.954758644104004

Token 144: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002477081725373864
    2. ' i' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.002476692199707
    4. ' ' → logprob: -14.752476692199707
    5. '	i' → logprob: -15.877476692199707
    6. '  ' → logprob: -16.127477645874023
    7. ' ' → logprob: -19.002477645874023
    8. '    ' → logprob: -19.377477645874023
    9. '(i' → logprob: -20.002477645874023
    10. '```' → logprob: -21.377477645874023

Token 145: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38687849044799805
    2. '%' → logprob: -1.136878490447998
    3. ')' → logprob: -12.636878967285156
    4. '%n' → logprob: -13.636878967285156
    5. ' ' → logprob: -13.761878967285156
    6. '%B' → logprob: -15.136878967285156
    7. '   ' → logprob: -15.386878967285156
    8. '%d' → logprob: -15.386878967285156
    9. '%A' → logprob: -15.386878967285156
    10. '%m' → logprob: -15.511878967285156

Token 146: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0380416102707386
    2. ' MOD' → logprob: -3.288041591644287
    3. '_MOD' → logprob: -16.413042068481445
    4. '.MOD' → logprob: -16.913042068481445
    5. ' ' → logprob: -17.663042068481445
    6. 'MODULE' → logprob: -18.913042068481445
    7. 'MO' → logprob: -19.288042068481445
    8. ' ' → logprob: -19.413042068481445
    9. '   ' → logprob: -20.163042068481445
    10. 'MODE' → logprob: -20.538042068481445

Token 147: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -1.27099974633893e-05
    2. 'O' → logprob: -12.125012397766113
    3. 'UL' → logprob: -12.250012397766113
    4. ')' → logprob: -13.500012397766113
    5. 'ULA' → logprob: -15.625012397766113
    6. 'U' → logprob: -15.750012397766113
    7. 'ULE' → logprob: -15.875012397766113
    8. 'LO' → logprob: -16.25001335144043
    9. 'ULAR' → logprob: -16.37501335144043
    10. ')
' → logprob: -16.62501335144043

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133716881275177
    2. ')
' → logprob: -1.3133716583251953
    3. '   ' → logprob: -9.438371658325195
    4. ' )
' → logprob: -11.438371658325195
    5. ' )' → logprob: -11.938371658325195
    6. ')
' → logprob: -12.188371658325195
    7. ')

' → logprob: -12.688371658325195
    8. ' ' → logprob: -13.438371658325195
    9. 'pow' → logprob: -14.188371658325195
    10. ' ' → logprob: -14.188371658325195

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09865619987249374
    2. 'pow' → logprob: -2.473656177520752
    3. 'p' → logprob: -4.723656177520752
    4. '  ' → logprob: -8.34865665435791
    5. ' pow' → logprob: -8.84865665435791
    6. '	p' → logprob: -9.22365665435791
    7. ' ' → logprob: -9.34865665435791
    8. ' p' → logprob: -9.47365665435791
    9. '    
' → logprob: -9.84865665435791
    10. '
' → logprob: -11.22365665435791

Token 150: ' #' (ID: 1069)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00862414762377739
    2. 'p' → logprob: -4.758624076843262
    3. 'for' → logprob: -13.008624076843262
    4. '   ' → logprob: -13.008624076843262
    5. ' pow' → logprob: -13.008624076843262
    6. 'pw' → logprob: -13.383624076843262
    7. '    
' → logprob: -15.758624076843262
    8. ' p' → logprob: -15.758624076843262
    9. ' ' → logprob: -15.883624076843262
    10. '(pow' → logprob: -16.008625030517578

Token 151: ' Bon' (ID: 12658)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.028354128822684288
    2. 'p' → logprob: -3.6533541679382324
    3. ' pow' → logprob: -6.403354167938232
    4. ' p' → logprob: -8.153353691101074
    5. ' ' → logprob: -10.778353691101074
    6. 'pw' → logprob: -11.153353691101074
    7. 'm' → logprob: -11.528353691101074
    8. '   ' → logprob: -11.528353691101074
    9. '(pow' → logprob: -11.528353691101074
    10. 'for' → logprob: -11.778353691101074

Token 152: ',' (ID: 11)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.30398282408714294
    2. ' pow' → logprob: -1.5539828538894653
    3. '   ' → logprob: -3.928982734680176
    4. 'p' → logprob: -4.053982734680176
    5. ' p' → logprob: -4.928982734680176
    6. ' ' → logprob: -6.178982734680176
    7. '  ' → logprob: -6.178982734680176
    8. 'm' → logprob: -7.178982734680176
    9. '    ' → logprob: -7.428982734680176
    10. '(pow' → logprob: -7.928982734680176

Token 153: ' y' (ID: 342)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03818436339497566
    2. 'p' → logprob: -3.663184404373169
    3. ' pow' → logprob: -4.53818416595459
    4. ' p' → logprob: -7.41318416595459
    5. '   ' → logprob: -8.03818416595459
    6. ' ' → logprob: -9.66318416595459
    7. '  ' → logprob: -10.53818416595459
    8. '    ' → logprob: -10.66318416595459
    9. 'for' → logprob: -10.66318416595459
    10. ' for' → logprob: -11.72568416595459

Token 154: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.148759126663208
    2. 'a' → logprob: -1.398759126663208
    3. 'pow' → logprob: -1.523759126663208
    4. '=' → logprob: -2.398759126663208
    5. '#' → logprob: -3.648759126663208
    6. '    ' → logprob: -3.898759126663208
    7. '```' → logprob: -4.523758888244629
    8. 'for' → logprob: -4.523758888244629
    9. ' =' → logprob: -5.023758888244629
    10. 'n' → logprob: -5.398758888244629

Token 155: ' sûrement' (ID: 158793)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2480398416519165
    2. 'pow' → logprob: -1.4980398416519165
    3. ' ' → logprob: -1.9980398416519165
    4. ' une' → logprob: -2.248039722442627
    5. ' a' → logprob: -3.123039722442627
    6. ' pas' → logprob: -3.373039722442627
    7. ' pow' → logprob: -3.498039722442627
    8. ' un' → logprob: -3.623039722442627
    9. 'une' → logprob: -4.373039722442627
    10. '   ' → logprob: -4.373039722442627

Token 156: ' mieux' (ID: 26345)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3505929410457611
    2. ' une' → logprob: -1.2255929708480835
    3. 'un' → logprob: -7.225593090057373
    4. 'a' → logprob: -7.475593090057373
    5. ' un' → logprob: -7.725593090057373
    6. ' a' → logprob: -9.475592613220215
    7. 'des' → logprob: -9.725592613220215
    8. 'plus' → logprob: -9.725592613220215
    9. 'er' → logprob: -10.600592613220215
    10. '```' → logprob: -10.600592613220215

Token 157: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008214185014367104
    2. ',' → logprob: -6.133213996887207
    3. 'pow' → logprob: -6.383213996887207
    4. '  ' → logprob: -6.633213996887207
    5. '    
' → logprob: -7.633213996887207
    6. 'for' → logprob: -7.758213996887207
    7. '    ' → logprob: -7.883213996887207
    8. 'p' → logprob: -8.258213996887207
    9. ')' → logprob: -8.383213996887207
    10. ' ' → logprob: -8.383213996887207

Token 158: ' ces' (ID: 10532)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01344255916774273
    2. 'p' → logprob: -5.388442516326904
    3. '*' → logprob: -6.763442516326904
    4. '(pow' → logprob: -6.888442516326904
    5. ' ' → logprob: -7.013442516326904
    6. ' pow' → logprob: -7.013442516326904
    7. 'i' → logprob: -7.263442516326904
    8. '```' → logprob: -7.888442516326904
    9. '1' → logprob: -8.263442993164062
    10. 'multip' → logprob: -8.388442993164062

Token 159: ' noms' (ID: 97041)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5385726690292358
    2. '*' → logprob: -1.9135726690292358
    3. '_pow' → logprob: -2.2885727882385254
    4. '*i' → logprob: -3.6635727882385254
    5. 'for' → logprob: -3.6635727882385254
    6. '_' → logprob: -3.7885727882385254
    7. 'i' → logprob: -4.663572788238525
    8. ' *' → logprob: -4.913572788238525
    9. ' pow' → logprob: -5.163572788238525
    10. ' ' → logprob: -5.288572788238525

Token 160: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8567489385604858
    2. 'pow' → logprob: -1.7317489385604858
    3. 'p' → logprob: -2.1067490577697754
    4. '
' → logprob: -2.2317490577697754
    5. '    
' → logprob: -2.7317490577697754
    6. '  
' → logprob: -3.4817490577697754
    7. '   
' → logprob: -4.231749057769775
    8. '  ' → logprob: -4.606749057769775
    9. '<|end|>' → logprob: -4.731749057769775
    10. ',' → logprob: -4.981749057769775

Token 161: ' variable' (ID: 11076)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.005979988723993301
    2. 'variable' → logprob: -5.755980014801025
    3. ' variables' → logprob: -6.630980014801025
    4. 'var' → logprob: -7.130980014801025
    5. 'vars' → logprob: -8.505979537963867
    6. '```' → logprob: -8.755979537963867
    7. 'list' → logprob: -9.130979537963867
    8. 'lists' → logprob: -9.630979537963867
    9. 'liste' → logprob: -10.255979537963867
    10. 'vari' → logprob: -11.005979537963867

Token 162: '
' (ID: 198)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.366985946893692
    2. '   ' → logprob: -1.3669859170913696
    3. 'p' → logprob: -3.741986036300659
    4. 'for' → logprob: -4.61698579788208
    5. '=' → logprob: -5.36698579788208
    6. '
' → logprob: -5.99198579788208
    7. '    
' → logprob: -6.11698579788208
    8. ' =' → logprob: -6.74198579788208
    9. ' ' → logprob: -6.86698579788208
    10. ')' → logprob: -6.86698579788208

Token 163: '   ' (ID: 271)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.160153329372406
    2. '   ' → logprob: -2.410153388977051
    3. 'p' → logprob: -2.910153388977051
    4. ' pow' → logprob: -6.410153388977051
    5. ' p' → logprob: -7.660153388977051
    6. ')' → logprob: -8.03515338897705
    7. '    
' → logprob: -8.03515338897705
    8. '  ' → logprob: -8.78515338897705
    9. '(pow' → logprob: -8.91015338897705
    10. ' ' → logprob: -8.91015338897705

Token 164: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.01111997663974762
    2. 'p' → logprob: -4.636119842529297
    3. ' pow' → logprob: -6.761119842529297
    4. ' p' → logprob: -9.011119842529297
    5. ' ' → logprob: -10.386119842529297
    6. '   ' → logprob: -10.386119842529297
    7. '  ' → logprob: -11.886119842529297
    8. 'pw' → logprob: -13.011119842529297
    9. 'm' → logprob: -13.511119842529297
    10. '    
' → logprob: -13.636119842529297

Token 165: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.4192871175473556e-05
    2. 'pow' → logprob: -11.375054359436035
    3. 'n' → logprob: -11.625054359436035
    4. 'p' → logprob: -11.875054359436035
    5. 'w' → logprob: -12.125054359436035
    6. '(m' → logprob: -12.375054359436035
    7. '```' → logprob: -12.500054359436035
    8. '(pow' → logprob: -13.500054359436035
    9. '_m' → logprob: -13.750054359436035
    10. '
' → logprob: -13.812554359436035

Token 166: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.006130360532552004
    2. '_' → logprob: -5.256130218505859
    3. '_.' → logprob: -7.756130218505859
    4. '_=' → logprob: -8.75613021850586
    5. '\' → logprob: -9.50613021850586
    6. '[i' → logprob: -10.13113021850586
    7. '__[' → logprob: -10.63113021850586
    8. 'm' → logprob: -11.25613021850586
    9. '_-' → logprob: -11.38113021850586
    10. '[_' → logprob: -11.38113021850586

Token 167: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3510891795158386
    2. '[i' → logprob: -1.2260892391204834
    3. ' i' → logprob: -6.351089000701904
    4. ']' → logprob: -7.851089000701904
    5. '0' → logprob: -9.476089477539062
    6. '[-' → logprob: -9.726089477539062
    7. '(i' → logprob: -9.976089477539062
    8. '   ' → logprob: -9.976089477539062
    9. '][' → logprob: -9.976089477539062
    10. '[' → logprob: -10.101089477539062

Token 168: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43624812364578247
    2. ' =' → logprob: -1.0612480640411377
    3. ']' → logprob: -4.936248302459717
    4. ']=' → logprob: -8.436247825622559
    5. ' ]' → logprob: -9.311247825622559
    6. ')' → logprob: -11.686247825622559
    7. ' ' → logprob: -11.811247825622559
    8. '*=' → logprob: -12.186247825622559
    9. ',' → logprob: -12.686247825622559
    10. ' *=' → logprob: -12.811247825622559

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023251067847013474
    2. ' =' → logprob: -3.7732510566711426
    3. '*=' → logprob: -12.2732515335083
    4. ' *=' → logprob: -15.1482515335083
    5. '＝' → logprob: -15.8982515335083
    6. ',' → logprob: -16.273250579833984
    7. '=p' → logprob: -16.648250579833984
    8. ' ' → logprob: -16.773250579833984
    9. '=

' → logprob: -17.023250579833984
    10. '=(' → logprob: -17.023250579833984

Token 170: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5822991728782654
    2. '(pow' → logprob: -0.8322991728782654
    3. ' (' → logprob: -5.58229923248291
    4. ' pow' → logprob: -6.20729923248291
    5. '(p' → logprob: -8.20729923248291
    6. ' ' → logprob: -9.95729923248291
    7. '(power' → logprob: -10.20729923248291
    8. '(' → logprob: -10.45729923248291
    9. '   ' → logprob: -10.58229923248291
    10. '.pow' → logprob: -10.64479923248291

Token 171: 'm' (ID: 76)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.10198456794023514
    2. 'pow' → logprob: -2.7269845008850098
    3. 'm' → logprob: -3.4769845008850098
    4. '(m' → logprob: -8.351984977722168
    5. '(' → logprob: -8.476984977722168
    6. 'mod' → logprob: -9.226984977722168
    7. '_pow' → logprob: -10.601984977722168
    8. ' pow' → logprob: -11.476984977722168
    9. '(i' → logprob: -11.726984977722168
    10. '2' → logprob: -11.851984977722168

Token 172: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.27462515234947205
    2. 'm' → logprob: -1.5246251821517944
    3. '[i' → logprob: -4.149625301361084
    4. '_m' → logprob: -5.149625301361084
    5. '_' → logprob: -8.149624824523926
    6. '[m' → logprob: -8.524624824523926
    7. '[' → logprob: -9.149624824523926
    8. '_pow' → logprob: -9.524624824523926
    9. '```' → logprob: -10.524624824523926
    10. '[_' → logprob: -10.524624824523926

Token 173: 'i' (ID: 72)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3874427080154419
    2. 'i' → logprob: -1.137442708015442
    3. ' i' → logprob: -8.512442588806152
    4. '_[' → logprob: -8.637442588806152
    5. '[-' → logprob: -10.137442588806152
    6. '-' → logprob: -10.637442588806152
    7. '_i' → logprob: -10.887442588806152
    8. ' [' → logprob: -10.887442588806152
    9. '[' → logprob: -10.887442588806152
    10. ' ' → logprob: -11.012442588806152

Token 174: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013151203747838736
    2. '[i' → logprob: -6.751315116882324
    3. ' -' → logprob: -9.876315116882324
    4. '[-' → logprob: -10.001315116882324
    5. 'i' → logprob: -10.251315116882324
    6. ']' → logprob: -12.126315116882324
    7. ' ' → logprob: -13.376315116882324
    8. '-i' → logprob: -13.751315116882324
    9. '[' → logprob: -13.876315116882324
    10. '1' → logprob: -13.876315116882324

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.625036239624023
    4. ']' → logprob: -15.625036239624023
    5. 'i' → logprob: -16.500036239624023
    6. '```' → logprob: -17.000036239624023
    7. '  ' → logprob: -17.187536239624023
    8. '
' → logprob: -17.375036239624023
    9. '    ' → logprob: -17.937536239624023
    10. '-' → logprob: -18.375036239624023

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.949026571121067e-05
    2. ' ' → logprob: -9.250099182128906
    3. '   ' → logprob: -13.625099182128906
    4. 'i' → logprob: -13.875099182128906
    5. ']' → logprob: -14.937599182128906
    6. '  ' → logprob: -15.562599182128906
    7. '```' → logprob: -16.062599182128906
    8. '
' → logprob: -16.187599182128906
    9. 'm' → logprob: -16.500099182128906
    10. '    ' → logprob: -17.250099182128906

Token 177: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03145918995141983
    2. ' *' → logprob: -3.531459093093872
    3. '*m' → logprob: -6.406459331512451
    4. 'm' → logprob: -10.906458854675293
    5. ' ' → logprob: -11.531458854675293
    6. '*n' → logprob: -11.781458854675293
    7. '
' → logprob: -12.781458854675293
    8. '   ' → logprob: -13.156458854675293
    9. '#' → logprob: -13.406458854675293
    10. '*p' → logprob: -13.531458854675293

Token 178: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05259886756539345
    2. ' *' → logprob: -3.0525989532470703
    3. '*m' → logprob: -5.55259895324707
    4. '*n' → logprob: -10.55259895324707
    5. ' ' → logprob: -10.55259895324707
    6. 'm' → logprob: -11.17759895324707
    7. '
' → logprob: -11.67759895324707
    8. '*p' → logprob: -11.80259895324707
    9. '   ' → logprob: -11.92759895324707
    10. '*i' → logprob: -12.30259895324707

Token 179: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002751598076429218
    2. ' m' → logprob: -8.500275611877441
    3. '2' → logprob: -9.875275611877441
    4. '   ' → logprob: -11.625275611877441
    5. 'n' → logprob: -12.750275611877441
    6. '10' → logprob: -12.750275611877441
    7. ' ' → logprob: -13.375275611877441
    8. '3' → logprob: -14.500275611877441
    9. '1' → logprob: -14.500275611877441
    10. '  ' → logprob: -14.875275611877441

Token 180: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00012511172099038959
    2. ' m' → logprob: -9.37512493133545
    3. '2' → logprob: -11.00012493133545
    4. '   ' → logprob: -11.00012493133545
    5. 'n' → logprob: -12.87512493133545
    6. '10' → logprob: -13.75012493133545
    7. ' ' → logprob: -14.25012493133545
    8. '  ' → logprob: -14.87512493133545
    9. '1' → logprob: -14.87512493133545
    10. '7' → logprob: -15.00012493133545

Token 181: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038921307772397995
    2. '%' → logprob: -3.663921356201172
    3. ' %' → logprob: -5.038921356201172
    4. ' )' → logprob: -5.538921356201172
    5. ')%' → logprob: -6.413921356201172
    6. '-' → logprob: -8.538921356201172
    7. '+' → logprob: -8.913921356201172
    8. ' -' → logprob: -9.913921356201172
    9. '%)' → logprob: -10.413921356201172
    10. '%n' → logprob: -11.038921356201172

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31042584776878357
    2. ' ' → logprob: -1.435425877571106
    3. ' i' → logprob: -4.435425758361816
    4. ')' → logprob: -5.310425758361816
    5. 'm' → logprob: -5.935425758361816
    6. 'i' → logprob: -6.060425758361816
    7. ' m' → logprob: -6.435425758361816
    8. ' n' → logprob: -6.685425758361816
    9. '-' → logprob: -7.185425758361816
    10. 'n' → logprob: -7.310425758361816

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03624041751027107
    2. ' ' → logprob: -3.911240339279175
    3. ')' → logprob: -5.786240577697754
    4. 'i' → logprob: -5.911240577697754
    5. 'n' → logprob: -6.286240577697754
    6. 'm' → logprob: -6.536240577697754
    7. '0' → logprob: -6.786240577697754
    8. 'pow' → logprob: -6.911240577697754
    9. ' i' → logprob: -7.036240577697754
    10. '-' → logprob: -7.411240577697754

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007924780366010964
    2. ')%' → logprob: -7.500792503356934
    3. ' )' → logprob: -8.750792503356934
    4. '-' → logprob: -10.250792503356934
    5. '%' → logprob: -10.625792503356934
    6. ' -' → logprob: -11.375792503356934
    7. ')
' → logprob: -12.625792503356934
    8. ' %' → logprob: -13.125792503356934
    9. '))' → logprob: -14.500792503356934
    10. '-i' → logprob: -14.750792503356934

Token 185: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10021130740642548
    2. ' %' → logprob: -2.3502113819122314
    3. '%m' → logprob: -13.600211143493652
    4. ')' → logprob: -14.100211143493652
    5. '%i' → logprob: -14.100211143493652
    6. '%n' → logprob: -14.350211143493652
    7. '%d' → logprob: -14.975211143493652
    8. ')%' → logprob: -15.350211143493652
    9. '%c' → logprob: -15.350211143493652
    10. '%D' → logprob: -15.725211143493652

Token 186: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023245595395565033
    2. ' MOD' → logprob: -3.7732455730438232
    3. '_MOD' → logprob: -16.398244857788086
    4. '.MOD' → logprob: -17.023244857788086
    5. ' ' → logprob: -18.523244857788086
    6. '998' → logprob: -18.523244857788086
    7. 'MODULE' → logprob: -19.398244857788086
    8. ' ' → logprob: -19.898244857788086
    9. 'MO' → logprob: -20.398244857788086
    10. 'M' → logprob: -20.773244857788086

Token 187: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.055349912494421005
    2. 'O' → logprob: -2.930349826812744
    3. 'UL' → logprob: -8.305350303649902
    4. 'U' → logprob: -9.555350303649902
    5. 'MOD' → logprob: -9.555350303649902
    6. 'OU' → logprob: -11.180350303649902
    7. 'OD' → logprob: -11.180350303649902
    8. 'ULAR' → logprob: -11.305350303649902
    9. 'ODULE' → logprob: -11.555350303649902
    10. 'ULA' → logprob: -11.555350303649902

Token 188: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00990978628396988
    2. 'p' → logprob: -4.634909629821777
    3. ' p' → logprob: -9.259909629821777
    4. '    
' → logprob: -10.509909629821777
    5. '
' → logprob: -11.509909629821777
    6. 'n' → logprob: -11.509909629821777
    7. '	p' → logprob: -11.884909629821777
    8. '  ' → logprob: -13.634909629821777
    9. '<|end|>' → logprob: -14.009909629821777
    10. '  
' → logprob: -14.509909629821777

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07036818563938141
    2. 'p' → logprob: -2.6953682899475098
    3. ' p' → logprob: -7.82036828994751
    4. '	p' → logprob: -10.945367813110352
    5. '    
' → logprob: -12.445367813110352
    6. '  ' → logprob: -12.945367813110352
    7. 'n' → logprob: -12.945367813110352
    8. ' ' → logprob: -13.695367813110352
    9. 'for' → logprob: -13.820367813110352
    10. '    ' → logprob: -14.820367813110352

Token 190: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.01733742281794548
    2. ' p' → logprob: -4.517337322235107
    3. '   ' → logprob: -5.142337322235107
    4. 'n' → logprob: -7.892337322235107
    5. ' n' → logprob: -10.517337799072266
    6. ' ' → logprob: -11.642337799072266
    7. '  ' → logprob: -12.392337799072266
    8. '    
' → logprob: -12.642337799072266
    9. '
' → logprob: -13.267337799072266
    10. '	p' → logprob: -13.517337799072266

Token 191: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -5.7888184528565034e-05
    2. 'ow' → logprob: -10.7500581741333
    3. 'awn' → logprob: -11.7500581741333
    4. '_' → logprob: -12.6250581741333
    5. ' own' → logprob: -12.7500581741333
    6. '[' → logprob: -12.7500581741333
    7. 'wn' → logprob: -12.8750581741333
    8. 'Own' → logprob: -12.8750581741333
    9. 'o' → logprob: -13.2500581741333
    10. 'n' → logprob: -13.3750581741333

Token 192: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.0006218921043910086
    2. '_' → logprob: -7.625621795654297
    3. '[i' → logprob: -9.250621795654297
    4. '__[' → logprob: -10.875621795654297
    5. '_=' → logprob: -12.625621795654297
    6. '```' → logprob: -13.000621795654297
    7. ' _' → logprob: -13.250621795654297
    8. 'n' → logprob: -13.375621795654297
    9. '_n' → logprob: -13.500621795654297
    10. 's' → logprob: -14.000621795654297

Token 193: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05509408190846443
    2. '[i' → logprob: -2.930094003677368
    3. 'p' → logprob: -9.180093765258789
    4. ' i' → logprob: -9.305093765258789
    5. '   ' → logprob: -12.555093765258789
    6. '(i' → logprob: -12.930093765258789
    7. 'm' → logprob: -13.055093765258789
    8. ']' → logprob: -13.555093765258789
    9. 'n' → logprob: -13.680093765258789
    10. '
' → logprob: -13.930093765258789

Token 194: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014475619420409203
    2. '=' → logprob: -4.2644758224487305
    3. ']=' → logprob: -8.26447582244873
    4. ' =' → logprob: -10.88947582244873
    5. ' ]' → logprob: -11.01447582244873
    6. ')' → logprob: -11.13947582244873
    7. '[' → logprob: -12.51447582244873
    8. '[i' → logprob: -15.26447582244873
    9. 'p' → logprob: -15.26447582244873
    10. ' ' → logprob: -15.38947582244873

Token 195: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00407923199236393
    2. ' =' → logprob: -5.504079341888428
    3. ']' → logprob: -15.62907886505127
    4. '[' → logprob: -15.62907886505127
    5. '*=' → logprob: -15.62907886505127
    6. ')' → logprob: -15.87907886505127
    7. ' ' → logprob: -16.504079818725586
    8. ']=' → logprob: -17.879079818725586
    9. 'p' → logprob: -18.129079818725586
    10. '=
' → logprob: -18.379079818725586

Token 196: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009841318242251873
    2. ' p' → logprob: -4.634841442108154
    3. '   ' → logprob: -10.634840965270996
    4. ' ' → logprob: -11.134840965270996
    5. 'n' → logprob: -11.134840965270996
    6. '(p' → logprob: -11.259840965270996
    7. 'pow' → logprob: -11.509840965270996
    8. '  ' → logprob: -13.197340965270996
    9. ' (' → logprob: -14.197340965270996
    10. '_p' → logprob: -14.259840965270996

Token 197: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00018732868193183094
    2. 'wn' → logprob: -9.000186920166016
    3. 'awn' → logprob: -11.250186920166016
    4. 'p' → logprob: -11.375186920166016
    5. 'w' → logprob: -11.500186920166016
    6. '_' → logprob: -12.000186920166016
    7. 'ow' → logprob: -12.125186920166016
    8. 'n' → logprob: -12.500186920166016
    9. 'Own' → logprob: -12.750186920166016
    10. ' own' → logprob: -13.000186920166016

Token 198: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.0005900867399759591
    2. 'n' → logprob: -7.8755903244018555
    3. '[n' → logprob: -9.750590324401855
    4. '_' → logprob: -9.875590324401855
    5. '_n' → logprob: -10.250590324401855
    6. '__[' → logprob: -10.500590324401855
    7. 'm' → logprob: -11.625590324401855
    8. '[i' → logprob: -11.750590324401855
    9. '[' → logprob: -12.000590324401855
    10. '```' → logprob: -12.750590324401855

Token 199: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00021343429398257285
    2. 'n' → logprob: -9.000213623046875
    3. '-' → logprob: -9.500213623046875
    4. '0' → logprob: -12.125213623046875
    5. 'm' → logprob: -12.625213623046875
    6. ' i' → logprob: -12.750213623046875
    7. '(i' → logprob: -13.750213623046875
    8. '[i' → logprob: -14.375213623046875
    9. '   ' → logprob: -14.625213623046875
    10. '1' → logprob: -15.750213623046875

Token 200: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00045319506898522377
    2. ' -' → logprob: -7.750452995300293
    3. '[' → logprob: -11.250452995300293
    4. '[i' → logprob: -12.250452995300293
    5. '[-' → logprob: -13.500452995300293
    6. '1' → logprob: -14.125452995300293
    7. ' ' → logprob: -14.125452995300293
    8. ']' → logprob: -14.250452995300293
    9. 'i' → logprob: -15.375452995300293
    10. '_' → logprob: -15.375452995300293

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011059491895139217
    2. ' ' → logprob: -4.511059284210205
    3. '   ' → logprob: -12.698559761047363
    4. '0' → logprob: -13.198559761047363
    5. ' ' → logprob: -13.386059761047363
    6. ']' → logprob: -13.698559761047363
    7. '```' → logprob: -13.886059761047363
    8. '_' → logprob: -14.448559761047363
    9. '	' → logprob: -15.073559761047363
    10. '-' → logprob: -15.198559761047363

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017707353690639138
    2. ' ' → logprob: -6.376770973205566
    3. '0' → logprob: -10.001770973205566
    4. 'n' → logprob: -11.501770973205566
    5. '-' → logprob: -12.876770973205566
    6. '_' → logprob: -13.001770973205566
    7. '   ' → logprob: -13.126770973205566
    8. '```' → logprob: -13.501770973205566
    9. ' n' → logprob: -13.751770973205566
    10. '
' → logprob: -14.189270973205566

Token 203: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1427246481180191
    2. ' *' → logprob: -2.0177247524261475
    3. ')' → logprob: -10.767724990844727
    4. ' ' → logprob: -11.767724990844727
    5. ' ' → logprob: -12.267724990844727
    6. '*n' → logprob: -12.267724990844727
    7. '*p' → logprob: -13.142724990844727
    8. '**' → logprob: -13.142724990844727
    9. '*(' → logprob: -13.392724990844727
    10. ']' → logprob: -13.642724990844727

Token 204: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02978566847741604
    2. ' *' → logprob: -3.529785633087158
    3. '*n' → logprob: -10.904786109924316
    4. '**' → logprob: -12.654786109924316
    5. ' ' → logprob: -12.654786109924316
    6. ' ' → logprob: -13.029786109924316
    7. 'n' → logprob: -13.154786109924316
    8. '*(' → logprob: -13.529786109924316
    9. '   ' → logprob: -13.654786109924316
    10. '
' → logprob: -13.779786109924316

Token 205: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0047713955864310265
    2. 'n' → logprob: -6.0047712326049805
    3. ' (' → logprob: -6.3797712326049805
    4. '(' → logprob: -7.7547712326049805
    5. '(m' → logprob: -9.12977123260498
    6. ' n' → logprob: -10.50477123260498
    7. '   ' → logprob: -11.62977123260498
    8. '
' → logprob: -12.00477123260498
    9. ' ' → logprob: -12.00477123260498
    10. '  ' → logprob: -13.62977123260498

Token 206: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2814452052116394
    2. '(n' → logprob: -1.4064452648162842
    3. ' n' → logprob: -9.156445503234863
    4. '(m' → logprob: -9.656445503234863
    5. ' (' → logprob: -9.906445503234863
    6. '(' → logprob: -10.906445503234863
    7. '
' → logprob: -11.156445503234863
    8. '   ' → logprob: -11.656445503234863
    9. 'm' → logprob: -12.156445503234863
    10. '[n' → logprob: -12.343945503234863

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04301106184720993
    2. ' +' → logprob: -3.168010950088501
    3. ')' → logprob: -11.668010711669922
    4. '+
' → logprob: -13.918010711669922
    5. '   ' → logprob: -14.543010711669922
    6. ' ' → logprob: -14.918010711669922
    7. ' ' → logprob: -14.918010711669922
    8. '+)' → logprob: -15.293010711669922
    9. '+n' → logprob: -15.543010711669922
    10. '[' → logprob: -15.793010711669922

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01817300356924534
    2. ' ' → logprob: -4.0181732177734375
    3. ')' → logprob: -10.768173217773438
    4. ' )' → logprob: -13.518173217773438
    5. ' ' → logprob: -15.268173217773438
    6. '  ' → logprob: -16.518173217773438
    7. ' 
' → logprob: -16.518173217773438
    8. '   ' → logprob: -16.518173217773438
    9. '
' → logprob: -17.143173217773438
    10. '0' → logprob: -17.393173217773438

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011780819622799754
    2. ' ' → logprob: -6.75117826461792
    3. ')' → logprob: -12.001177787780762
    4. '   ' → logprob: -14.626177787780762
    5. ' )' → logprob: -14.876177787780762
    6. '  ' → logprob: -15.251177787780762
    7. '0' → logprob: -15.876177787780762
    8. '     ' → logprob: -17.126178741455078
    9. '```' → logprob: -17.251178741455078
    10. '-' → logprob: -17.438678741455078

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013965457037556916
    2. ')%' → logprob: -9.250139236450195
    3. ' )' → logprob: -10.750139236450195
    4. '%' → logprob: -10.875139236450195
    5. ' %' → logprob: -14.250139236450195
    6. '   ' → logprob: -14.375139236450195
    7. ')
' → logprob: -14.500139236450195
    8. '%)' → logprob: -14.625139236450195
    9. ']' → logprob: -15.000139236450195
    10. '}' → logprob: -15.875139236450195

Token 211: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25193852186203003
    2. '%' → logprob: -1.5019385814666748
    3. ' ' → logprob: -13.126938819885254
    4. ')' → logprob: -13.251938819885254
    5. '%i' → logprob: -13.376938819885254
    6. ' ' → logprob: -13.751938819885254
    7. ')%' → logprob: -14.501938819885254
    8. '   ' → logprob: -14.626938819885254
    9. '%d' → logprob: -14.626938819885254
    10. '%m' → logprob: -14.751938819885254

Token 212: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.01815064437687397
    2. ' MOD' → logprob: -4.018150806427002
    3. '_MOD' → logprob: -14.768150329589844
    4. '.MOD' → logprob: -15.768150329589844
    5. 'MO' → logprob: -15.893150329589844
    6. ' ' → logprob: -16.893150329589844
    7. 'M' → logprob: -17.643150329589844
    8. 'mod' → logprob: -17.893150329589844
    9. 'MODE' → logprob: -18.018150329589844
    10. 'MD' → logprob: -18.268150329589844

Token 213: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -6.790129555156454e-05
    2. 'O' → logprob: -10.000067710876465
    3. 'UL' → logprob: -11.750067710876465
    4. 'ULE' → logprob: -11.750067710876465
    5. 'U' → logprob: -12.375067710876465
    6. 'ulo' → logprob: -13.875067710876465
    7. '%' → logprob: -15.250067710876465
    8. 'LO' → logprob: -16.12506866455078
    9. '```' → logprob: -16.25006866455078
    10. '_' → logprob: -16.37506866455078

Token 214: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7041511535644531
    2. '<|end|>' → logprob: -1.2041511535644531
    3. ')' → logprob: -2.329151153564453
    4. ':' → logprob: -3.079151153564453
    5. '#' → logprob: -3.454151153564453
    6. '(' → logprob: -4.829151153564453
    7. '\n' → logprob: -4.829151153564453
    8. 'for' → logprob: -6.454151153564453
    9. ' ' → logprob: -6.454151153564453
    10. '```' → logprob: -6.454151153564453

Token 215: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6523184180259705
    2. '#' → logprob: -1.7773184776306152
    3. '(' → logprob: -2.1523184776306152
    4. 'n' → logprob: -2.2773184776306152
    5. ':' → logprob: -3.5273184776306152
    6. 'for' → logprob: -4.152318477630615
    7. 'i' → logprob: -4.652318477630615
    8. '
' → logprob: -5.027318477630615
    9. 'def' → logprob: -5.027318477630615
    10. ']' → logprob: -5.277318477630615

Token 216: ' my' (ID: 922)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.7467682361602783
    2. ' mod' → logprob: -0.8717682361602783
    3. 'mod' → logprob: -3.2467682361602783
    4. ' n' → logprob: -4.121767997741699
    5. 'comb' → logprob: -4.246767997741699
    6. 'pow' → logprob: -4.496767997741699
    7. ' pow' → logprob: -4.871767997741699
    8. 'n' → logprob: -4.996767997741699
    9. ' bin' → logprob: -5.246767997741699
    10. ' combinaison' → logprob: -6.121767997741699

Token 217: '_pow' (ID: 160965)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.0776623487472534
    2. 'pow' → logprob: -1.8276623487472534
    3. '_pow' → logprob: -1.8276623487472534
    4. '_comb' → logprob: -2.077662467956543
    5. '_fact' → logprob: -2.827662467956543
    6. 'od' → logprob: -3.077662467956543
    7. '_' → logprob: -3.452662467956543
    8. '_mod' → logprob: -4.202662467956543
    9. 'fact' → logprob: -4.702662467956543
    10. '_func' → logprob: -4.952662467956543

Token 218: '(x' (ID: 4061)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.8699606657028198
    2. '(' → logprob: -0.9949606657028198
    3. '(x' → logprob: -1.6199606657028198
    4. '(a' → logprob: -4.369960784912109
    5. '(n' → logprob: -8.61996078491211
    6. '(b' → logprob: -8.74496078491211
    7. ' (' → logprob: -9.36996078491211
    8. '(value' → logprob: -10.11996078491211
    9. '(s' → logprob: -10.24496078491211
    10. '(p' → logprob: -10.24496078491211

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013452880375552922
    2. ' ,' → logprob: -9.125134468078613
    3. ',k' → logprob: -11.500134468078613
    4. ',n' → logprob: -12.250134468078613
    5. '):' → logprob: -12.375134468078613
    6. ',x' → logprob: -13.250134468078613
    7. ',
' → logprob: -14.000134468078613
    8. ':' → logprob: -14.000134468078613
    9. ')' → logprob: -14.875134468078613
    10. ',y' → logprob: -15.000134468078613

Token 220: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0333496630191803
    2. 'k' → logprob: -4.283349514007568
    3. 'n' → logprob: -4.783349514007568
    4. 'b' → logprob: -5.783349514007568
    5. 'e' → logprob: -6.033349514007568
    6. 'MOD' → logprob: -6.158349514007568
    7. 'p' → logprob: -6.533349514007568
    8. 'mod' → logprob: -7.408349514007568
    9. ' y' → logprob: -8.283349990844727
    10. 'pow' → logprob: -8.658349990844727

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04398096352815628
    2. ',' → logprob: -3.1689810752868652
    3. ':' → logprob: -7.418981075286865
    4. ')' → logprob: -8.543980598449707
    5. '):
' → logprob: -8.668980598449707
    6. ' ):' → logprob: -12.668980598449707
    7. ' ,' → logprob: -13.043980598449707
    8. '):
' → logprob: -13.043980598449707
    9. '=' → logprob: -14.168980598449707
    10. '}:' → logprob: -14.168980598449707

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02832561917603016
    2. ' if' → logprob: -4.15332555770874
    3. ':' → logprob: -4.90332555770874
    4. 'if' → logprob: -5.52832555770874
    5. ' ' → logprob: -8.528326034545898
    6. 'result' → logprob: -8.528326034545898
    7. ',' → logprob: -9.153326034545898
    8. ':
' → logprob: -9.278326034545898
    9. '  ' → logprob: -10.028326034545898
    10. 'return' → logprob: -10.403326034545898

Token 223: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10285311937332153
    2. 'res' (adapté à ' res') → logprob: -3.2278530597686768
    3. '1' → logprob: -4.102853298187256
    4. 'return' → logprob: -4.102853298187256
    5. 'if' → logprob: -4.602853298187256
    6. 'pow' → logprob: -4.602853298187256
    7. '0' → logprob: -5.852853298187256
    8. ' result' → logprob: -6.477853298187256
    9. ' res' → logprob: -8.852852821350098
    10. 'ans' → logprob: -8.977852821350098

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04300296679139137
    2. ' =' → logprob: -3.1680030822753906
    3. ',' → logprob: -12.91800308227539
    4. ')' → logprob: -14.79300308227539
    5. ' ' → logprob: -14.91800308227539
    6. '  ' → logprob: -15.04300308227539
    7. '   ' → logprob: -15.29300308227539
    8. '_' → logprob: -17.29300308227539
    9. ' ' → logprob: -17.79300308227539
    10. 's' → logprob: -17.91800308227539

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'pow' → logprob: -18.125001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '```' → logprob: -20.750001907348633
    6. '
' → logprob: -20.875001907348633
    7. '[' → logprob: -22.000001907348633
    8. '	' → logprob: -22.250001907348633
    9. '۱' → logprob: -22.375001907348633
    10. ' ' → logprob: -23.000001907348633

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'pow' → logprob: -17.625
    4. '```' → logprob: -18.5
    5. '
' → logprob: -20.5625
    6. '[' → logprob: -20.8125
    7. '   ' → logprob: -21.1875
    8. 'def' → logprob: -21.375
    9. '۱' → logprob: -21.375
    10. 'int' → logprob: -21.9375

Token 227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.06816557049751282
    2. '   ' → logprob: -3.9431655406951904
    3. ' for' → logprob: -4.3181657791137695
    4. 'while' (adapté à ' while') → logprob: -4.4431657791137695
    5. ' ' → logprob: -4.8181657791137695
    6. '    ' → logprob: -5.3181657791137695
    7. ':' → logprob: -5.9431657791137695
    8. '  ' → logprob: -6.5681657791137695
    9. ' x' → logprob: -6.8181657791137695
    10. ' 
' → logprob: -6.9431657791137695

Token 230: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47408103942871094
    2. ' y' → logprob: -0.9740810394287109
    3. '(y' → logprob: -12.724081039428711
    4. '	y' → logprob: -14.974081039428711
    5. ' ' → logprob: -15.224081039428711
    6. ' ' → logprob: -15.474081039428711
    7. '[y' → logprob: -16.59908103942871
    8. '   ' → logprob: -17.97408103942871
    9. '_y' → logprob: -18.09908103942871
    10. ''y' → logprob: -18.34908103942871

Token 231: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0006009306525811553
    2. ':' → logprob: -8.000600814819336
    3. ' >' → logprob: -8.250600814819336
    4. ':
' → logprob: -13.250600814819336
    5. '&gt' → logprob: -13.875600814819336
    6. '   ' → logprob: -14.500600814819336
    7. '>:' → logprob: -14.625600814819336
    8. '">' → logprob: -15.625600814819336
    9. '%' → logprob: -15.875600814819336
    10. 'and' → logprob: -16.500600814819336

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.637510299682617
    4. ' ' → logprob: -17.262510299682617
    5. ' y' → logprob: -17.762510299682617
    6. 'y' → logprob: -17.762510299682617
    7. '>' → logprob: -18.012510299682617
    8. '=' → logprob: -18.262510299682617
    9. '```' → logprob: -18.387510299682617
    10. '  ' → logprob: -19.262510299682617

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.500051498413086
    4. ' ' → logprob: -20.250051498413086
    5. '۰' → logprob: -20.250051498413086
    6. '
' → logprob: -20.500051498413086
    7. '=' → logprob: -20.625051498413086
    8. '```' → logprob: -20.875051498413086
    9. '  ' → logprob: -21.250051498413086
    10. '>' → logprob: -22.000051498413086

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1012817993760109
    2. ':
' → logprob: -2.4762818813323975
    3. '       ' → logprob: -5.101281642913818
    4. '   ' → logprob: -5.601281642913818
    5. '<|end|>' → logprob: -6.351281642913818
    6. ',' → logprob: -8.101282119750977
    7. ' and' → logprob: -8.851282119750977
    8. '):
' → logprob: -9.226282119750977
    9. '<|end|>' → logprob: -9.726282119750977
    10. ' :' → logprob: -10.476282119750977

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006535965017974377
    2. '<|end|>' → logprob: -5.13153600692749
    3. '   ' → logprob: -8.006535530090332
    4. ':' → logprob: -9.256535530090332
    5. '    ' → logprob: -10.631535530090332
    6. ',' → logprob: -10.756535530090332
    7. ':
' → logprob: -10.881535530090332
    8. ' ' → logprob: -11.131535530090332
    9. '<|end|>' → logprob: -11.131535530090332
    10. '      ' → logprob: -11.131535530090332

Token 236: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.252294659614563
    2. ' if' → logprob: -1.502294659614563
    3. '       ' → logprob: -8.252294540405273
    4. '   ' → logprob: -9.877294540405273
    5. 'x' → logprob: -10.502294540405273
    6. '	if' → logprob: -11.127294540405273
    7. '           ' → logprob: -12.252294540405273
    8. '```' → logprob: -13.252294540405273
    9. ' x' → logprob: -13.502294540405273
    10. 'If' → logprob: -13.752294540405273

Token 237: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.038059741258621216
    2. 'y' → logprob: -3.288059711456299
    3. ' (' → logprob: -11.663060188293457
    4. '(y' → logprob: -12.163060188293457
    5. ' ' → logprob: -13.288060188293457
    6. '	y' → logprob: -13.413060188293457
    7. '(' → logprob: -14.038060188293457
    8. ' ' → logprob: -14.788060188293457
    9. '   ' → logprob: -17.91305923461914
    10. '  ' → logprob: -18.28805923461914

Token 238: ' %' (ID: 1851)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.030846193432807922
    2. '&' → logprob: -3.530846118927002
    3. ' %' → logprob: -7.155846118927002
    4. '%' → logprob: -8.15584659576416
    5. ' ' → logprob: -10.65584659576416
    6. ' ' → logprob: -12.90584659576416
    7. ' &
' → logprob: -14.65584659576416
    8. '   ' → logprob: -15.65584659576416
    9. '&amp' → logprob: -15.65584659576416
    10. '&nbsp' → logprob: -15.65584659576416

Token 239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '```' → logprob: -17.500036239624023
    5. '۲' → logprob: -19.500036239624023
    6. '[' → logprob: -19.500036239624023
    7. '>' → logprob: -19.750036239624023
    8. '=' → logprob: -20.250036239624023
    9. '
' → logprob: -20.375036239624023
    10. '  ' → logprob: -20.375036239624023

Token 240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -18.375001907348633
    5. '[' → logprob: -20.875001907348633
    6. '  ' → logprob: -21.375001907348633
    7. '
' → logprob: -21.875001907348633
    8. '>' → logprob: -22.125001907348633
    9. '{' → logprob: -22.375001907348633
    10. 'python' → logprob: -22.500001907348633

Token 241: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16041970252990723
    2. ' ==' → logprob: -1.9104197025299072
    3. ':' → logprob: -9.285419464111328
    4. '=' → logprob: -9.785419464111328
    5. '1' → logprob: -10.785419464111328
    6. '==
' → logprob: -12.035419464111328
    7. ')==' → logprob: -12.160419464111328
    8. '===' → logprob: -12.285419464111328
    9. ' ' → logprob: -12.410419464111328
    10. '[' → logprob: -13.535419464111328

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.798814058303833
    2. ' res' → logprob: -1.423814058303833
    3. '       ' → logprob: -2.298814058303833
    4. ':
' → logprob: -2.298814058303833
    5. 'res' → logprob: -2.673814058303833
    6. ':' → logprob: -3.923814058303833
    7. ' x' → logprob: -5.048813819885254
    8. '=' → logprob: -5.923813819885254
    9. ' =' → logprob: -6.173813819885254
    10. ' :
' → logprob: -6.548813819885254

Token 243: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.023246178403496742
    2. ' res' → logprob: -3.7732462882995605
    3. '           ' → logprob: -14.523245811462402
    4. '               ' → logprob: -16.27324676513672
    5. '	res' → logprob: -17.14824676513672
    6. '(res' → logprob: -17.27324676513672
    7. '       ' → logprob: -18.27324676513672
    8. '_res' → logprob: -18.39824676513672
    9. '$res' → logprob: -19.02324676513672
    10. ',res' → logprob: -19.77324676513672

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24898461997509003
    2. '*=' → logprob: -1.7489845752716064
    3. ' =' → logprob: -3.4989845752716064
    4. ' *=' → logprob: -4.1239848136901855
    5. '*' → logprob: -10.248984336853027
    6. ' ' → logprob: -11.873984336853027
    7. ' ' → logprob: -12.998984336853027
    8. '   ' → logprob: -13.248984336853027
    9. '	' → logprob: -13.373984336853027
    10. '```' → logprob: -14.623984336853027

Token 245: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5289354920387268
    2. '(res' → logprob: -1.028935432434082
    3. ' res' → logprob: -3.278935432434082
    4. ' (' → logprob: -4.153935432434082
    5. '	res' → logprob: -12.778935432434082
    6. '(' → logprob: -13.153935432434082
    7. '_res' → logprob: -13.528935432434082
    8. ',res' → logprob: -14.028935432434082
    9. '$res' → logprob: -14.278935432434082
    10. ' ' → logprob: -14.403935432434082

Token 246: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868717551231384
    2. ' *' → logprob: -1.1368718147277832
    3. 'res' → logprob: -15.011871337890625
    4. ' ' → logprob: -15.011871337890625
    5. ' ' → logprob: -16.886871337890625
    6. '(res' → logprob: -17.761871337890625
    7. '**' → logprob: -17.761871337890625
    8. '```' → logprob: -18.011871337890625
    9. ' res' → logprob: -19.261871337890625
    10. '*object' → logprob: -19.511871337890625

Token 247: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. 'res' → logprob: -20.006715774536133
    4. '	x' → logprob: -20.131715774536133
    5. '(x' → logprob: -21.506715774536133
    6. ' ' → logprob: -22.006715774536133
    7. '   ' → logprob: -22.631715774536133
    8. '```' → logprob: -23.256715774536133
    9. '%x' → logprob: -23.506715774536133
    10. '$x' → logprob: -23.881715774536133

Token 248: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033651575446128845
    2. '%' → logprob: -3.40865159034729
    3. ')' → logprob: -12.908651351928711
    4. ' ' → logprob: -13.283651351928711
    5. ' ' → logprob: -14.658651351928711
    6. '%x' → logprob: -14.783651351928711
    7. ' %=' → logprob: -15.283651351928711
    8. '```' → logprob: -16.03365135192871
    9. '%s' → logprob: -16.15865135192871
    10. '%c' → logprob: -16.15865135192871

Token 249: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. '_MOD' → logprob: -19.12502098083496
    4. ' ' → logprob: -19.50002098083496
    5. '   ' → logprob: -19.75002098083496
    6. '.MOD' → logprob: -20.25002098083496
    7. 'MO' → logprob: -20.75002098083496
    8. '```' → logprob: -21.00002098083496
    9. 'MODULE' → logprob: -21.50002098083496
    10. '
' → logprob: -22.12502098083496

Token 250: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -4.320199877838604e-07
    2. 'UL' → logprob: -16.0
    3. 'ULE' → logprob: -16.5
    4. 'O' → logprob: -17.125
    5. 'U' → logprob: -17.5
    6. 'ulo' → logprob: -18.875
    7. '   ' → logprob: -20.0
    8. '
' → logprob: -20.25
    9. 'ILO' → logprob: -20.5
    10. '_' → logprob: -20.625

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00307290256023407
    2. '        
' → logprob: -6.628072738647461
    3. '           ' → logprob: -7.253072738647461
    4. '<|end|>' → logprob: -7.878072738647461
    5. ' x' → logprob: -8.253072738647461
    6. ' 
' → logprob: -9.128072738647461
    7. 'x' → logprob: -9.253072738647461
    8. '            
' → logprob: -9.878072738647461
    9. '
' → logprob: -9.878072738647461
    10. ',' → logprob: -11.003072738647461

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4293076694011688
    2. '           ' → logprob: -1.0543076992034912
    3. ' x' → logprob: -7.554307460784912
    4. 'x' → logprob: -10.67930793762207
    5. '        
' → logprob: -11.05430793762207
    6. '            
' → logprob: -11.80430793762207
    7. '<|end|>' → logprob: -11.92930793762207
    8. '
' → logprob: -12.17930793762207
    9. ',' → logprob: -12.30430793762207
    10. '   ' → logprob: -12.42930793762207

Token 253: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10977145284414291
    2. '       ' → logprob: -2.484771490097046
    3. 'x' (adapté à ' x') → logprob: -4.109771251678467
    4. ' y' → logprob: -5.484771251678467
    5. 'y' → logprob: -10.359771728515625
    6. '```' → logprob: -12.109771728515625
    7. ' 
' → logprob: -12.234771728515625
    8. '   ' → logprob: -12.859771728515625
    9. ' ' → logprob: -12.984771728515625
    10. '           ' → logprob: -13.359771728515625

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011717714369297028
    2. ' =' → logprob: -6.751171588897705
    3. '*=' → logprob: -13.376172065734863
    4. '*' → logprob: -16.876171112060547
    5. ',' → logprob: -17.376171112060547
    6. '%=' → logprob: -18.251171112060547
    7. ' ' → logprob: -18.251171112060547
    8. ' *=' → logprob: -18.376171112060547
    9. '   ' → logprob: -19.376171112060547
    10. ' *' → logprob: -19.876171112060547

Token 255: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007884369231760502
    2. ' x' → logprob: -5.007884502410889
    3. '(x' → logprob: -6.757884502410889
    4. ' (' → logprob: -12.00788402557373
    5. '(' → logprob: -14.50788402557373
    6. '	x' → logprob: -16.882884979248047
    7. ' ' → logprob: -18.007884979248047
    8. '   ' → logprob: -18.632884979248047
    9. '```' → logprob: -20.257884979248047
    10. '"x' → logprob: -20.632884979248047

Token 256: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00020354038861114532
    2. ' x' → logprob: -8.500203132629395
    3. ')x' → logprob: -17.37520408630371
    4. '   ' → logprob: -18.37520408630371
    5. '(x' → logprob: -18.87520408630371
    6. '	x' → logprob: -19.12520408630371
    7. ')' → logprob: -20.25020408630371
    8. ' ' → logprob: -20.37520408630371
    9. '```' → logprob: -21.62520408630371
    10. '"x' → logprob: -22.37520408630371

Token 257: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.160830557346344
    2. '*' → logprob: -1.9108304977416992
    3. '*x' → logprob: -7.410830497741699
    4. ' ' → logprob: -14.4108304977417
    5. '**' → logprob: -14.5358304977417
    6. 'x' → logprob: -15.2858304977417
    7. ')' → logprob: -15.5358304977417
    8. ' x' → logprob: -16.535831451416016
    9. ' **' → logprob: -17.910831451416016
    10. ' ' → logprob: -17.910831451416016

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.75247573852539
    4. '	x' → logprob: -18.12747573852539
    5. ')x' → logprob: -18.75247573852539
    6. '   ' → logprob: -20.00247573852539
    7. '"x' → logprob: -21.62747573852539
    8. '```' → logprob: -21.62747573852539
    9. ')' → logprob: -22.00247573852539
    10. ''x' → logprob: -22.25247573852539

Token 259: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000146687583765015
    2. ')%' → logprob: -9.125146865844727
    3. ' )' → logprob: -10.250146865844727
    4. '%' → logprob: -13.000146865844727
    5. ' %' → logprob: -16.625146865844727
    6. ' ' → logprob: -18.375146865844727
    7. '）' → logprob: -18.500146865844727
    8. '```' → logprob: -18.750146865844727
    9. ')
' → logprob: -19.000146865844727
    10. '   ' → logprob: -19.250146865844727

Token 260: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25192973017692566
    2. ' %' → logprob: -1.501929759979248
    3. '%x' → logprob: -15.37692928314209
    4. ')' → logprob: -16.251930236816406
    5. ')%' → logprob: -16.626930236816406
    6. ' ' → logprob: -17.001930236816406
    7. '%n' → logprob: -17.501930236816406
    8. '%c' → logprob: -17.626930236816406
    9. ' %=' → logprob: -17.751930236816406
    10. '%s' → logprob: -17.876930236816406

Token 261: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.547789674485102e-05
    2. ' MOD' → logprob: -10.250035285949707
    3. '_MOD' → logprob: -19.375036239624023
    4. ' ' → logprob: -19.750036239624023
    5. '.MOD' → logprob: -21.000036239624023
    6. 'MO' → logprob: -21.625036239624023
    7. '   ' → logprob: -22.000036239624023
    8. '```' → logprob: -22.625036239624023
    9. '  ' → logprob: -23.000036239624023
    10. 'MODULE' → logprob: -23.625036239624023

Token 262: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -4.251091377227567e-05
    2. 'O' → logprob: -10.125042915344238
    3. 'ULE' → logprob: -13.500042915344238
    4. 'U' → logprob: -14.500042915344238
    5. 'UL' → logprob: -16.125041961669922
    6. 'LO' → logprob: -16.500041961669922
    7. 'MOD' → logprob: -16.750041961669922
    8. 'ulo' → logprob: -16.875041961669922
    9. 'L' → logprob: -17.625041961669922
    10. '   ' → logprob: -18.375041961669922

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10907977819442749
    2. ' y' → logprob: -2.3590798377990723
    3. 'y' → logprob: -4.734079837799072
    4. ',y' → logprob: -11.484079360961914
    5. '```' → logprob: -11.609079360961914
    6. '   ' → logprob: -11.734079360961914
    7. '	y' → logprob: -12.234079360961914
    8. ',' → logprob: -12.359079360961914
    9. ' ' → logprob: -13.359079360961914
    10. ' ' → logprob: -13.484079360961914

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007425837218761444
    2. ' y' → logprob: -5.382425785064697
    3. 'y' → logprob: -5.882425785064697
    4. '   ' → logprob: -11.757426261901855
    5. '	y' → logprob: -13.382426261901855
    6. ' ' → logprob: -13.757426261901855
    7. '```' → logprob: -14.382426261901855
    8. ' ' → logprob: -14.382426261901855
    9. '        
' → logprob: -14.632426261901855
    10. '      ' → logprob: -15.007426261901855

Token 265: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.038047004491090775
    2. 'y' (adapté à ' y') → logprob: -3.2880470752716064
    3. '       ' → logprob: -12.163046836853027
    4. '	y' → logprob: -16.663047790527344
    5. '```' → logprob: -16.913047790527344
    6. ' ' → logprob: -16.913047790527344
    7. '        ' → logprob: -17.038047790527344
    8. ' ' → logprob: -17.538047790527344
    9. ',y' → logprob: -17.663047790527344
    10. '   ' → logprob: -17.913047790527344

Token 266: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.0272776298224926
    2. '>>' → logprob: -4.15227746963501
    3. ' //' → logprob: -5.02727746963501
    4. '=' → logprob: -6.15227746963501
    5. ' >>=' → logprob: -6.15227746963501
    6. '//' → logprob: -8.027277946472168
    7. '   ' → logprob: -10.527277946472168
    8. ' ' → logprob: -11.777277946472168
    9. ' ' → logprob: -13.902277946472168
    10. '/=' → logprob: -14.027277946472168

Token 267: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.796184723294573e-06
    2. '2' → logprob: -12.125005722045898
    3. '=}' → logprob: -15.375005722045898
    4. ' ' → logprob: -16.2500057220459
    5. ' =' → logprob: -17.2500057220459
    6. '=
' → logprob: -17.6250057220459
    7. '_=' → logprob: -19.0000057220459
    8. '=_' → logprob: -19.2500057220459
    9. '==' → logprob: -19.5000057220459
    10. '=.' → logprob: -20.0000057220459

Token 268: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.87747573852539
    4. '```' → logprob: -19.87747573852539
    5. '  ' → logprob: -20.50247573852539
    6. '=' → logprob: -21.12747573852539
    7. '    ' → logprob: -21.62747573852539
    8. '>' → logprob: -21.75247573852539
    9. '۲' → logprob: -21.87747573852539
    10. '２' → logprob: -21.87747573852539

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -20.500015258789062
    4. '   ' → logprob: -20.750015258789062
    5. '۲' → logprob: -21.875015258789062
    6. '>' → logprob: -21.875015258789062
    7. '２' → logprob: -22.250015258789062
    8. '=' → logprob: -23.125015258789062
    9. '  ' → logprob: -23.125015258789062
    10. '٢' → logprob: -24.125015258789062

Token 270: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011348430998623371
    2. '
' → logprob: -4.886348247528076
    3. ' 
' → logprob: -6.386348247528076
    4. '    
' → logprob: -6.886348247528076
    5. ' return' → logprob: -8.136348724365234
    6. 'return' → logprob: -8.636348724365234
    7. '<|end|>' → logprob: -8.761348724365234
    8. '  
' → logprob: -9.261348724365234
    9. '	return' → logprob: -9.261348724365234
    10. ' ' → logprob: -9.386348724365234

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06344200670719147
    2. ' return' → logprob: -3.3134419918060303
    3. ' 
' → logprob: -4.188442230224609
    4. 'return' → logprob: -5.063442230224609
    5. '
' → logprob: -6.063442230224609
    6. ' ' → logprob: -7.438442230224609
    7. '    
' → logprob: -8.18844223022461
    8. '	return' → logprob: -8.93844223022461
    9. '  ' → logprob: -9.56344223022461
    10. '  
' → logprob: -9.68844223022461

Token 272: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47499459981918335
    2. 'return' (adapté à ' return') → logprob: -0.9749945998191833
    3. '   ' → logprob: -7.099994659423828
    4. ' ' → logprob: -9.474994659423828
    5. '	return' → logprob: -11.474994659423828
    6. ':return' → logprob: -13.474994659423828
    7. ' ' → logprob: -13.849994659423828
    8. 'eturn' → logprob: -14.099994659423828
    9. ' 
' → logprob: -14.099994659423828
    10. '  ' → logprob: -14.599994659423828

Token 273: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011047814972698689
    2. ' res' → logprob: -4.511047840118408
    3. '(res' → logprob: -17.38604736328125
    4. '	res' → logprob: -19.26104736328125
    5. '$res' → logprob: -22.01104736328125
    6. ' ' → logprob: -22.38604736328125
    7. '_res' → logprob: -22.76104736328125
    8. ',res' → logprob: -22.76104736328125
    9. ' ' → logprob: -23.13604736328125
    10. 'ress' → logprob: -23.63604736328125

Token 274: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9353377819061279
    2. 'inv' → logprob: -0.9353377819061279
    3. 'inverse' → logprob: -2.435337781906128
    4. '_inverse' → logprob: -3.435337781906128
    5. '<|end|>' → logprob: -3.560337781906128
    6. ')' → logprob: -3.685337781906128
    7. '_inv' → logprob: -4.185338020324707
    8. '#' → logprob: -4.935338020324707
    9. '^' → logprob: -5.810338020324707
    10. '^{-' → logprob: -5.810338020324707

Token 275: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1595539152622223
    2. 'def' → logprob: -2.0345540046691895
    3. 'fact' → logprob: -4.4095540046691895
    4. 'inverse' → logprob: -6.1595540046691895
    5. 'in' → logprob: -6.9095540046691895
    6. 'pow' → logprob: -7.1595540046691895
    7. 'ifact' → logprob: -8.284553527832031
    8. '#' → logprob: -9.284553527832031
    9. 'factor' → logprob: -9.659553527832031
    10. 'result' → logprob: -9.909553527832031

Token 276: '_f' (ID: 1337)
  Prédit: '_fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.01878306455910206
    2. '_factor' → logprob: -4.768783092498779
    3. '_' → logprob: -5.393783092498779
    4. 'fact' → logprob: -5.768783092498779
    5. ' =' → logprob: -6.518783092498779
    6. '_pow' → logprob: -8.643782615661621
    7. '_mod' → logprob: -9.018782615661621
    8. '=' → logprob: -9.268782615661621
    9. '_m' → logprob: -9.268782615661621
    10. '_fac' → logprob: -9.393782615661621

Token 277: ' =' (ID: 314)
  Prédit: 'acto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acto' → logprob: -0.001557831885293126
    2. 'act' → logprob: -6.75155782699585
    3. '_fact' → logprob: -8.251558303833008
    4. 'fact' → logprob: -10.126558303833008
    5. 'actor' → logprob: -11.001558303833008
    6. '_act' → logprob: -11.751558303833008
    7. '```' → logprob: -11.751558303833008
    8. 'a' → logprob: -12.001558303833008
    9. 'acti' → logprob: -12.001558303833008
    10. '_' → logprob: -12.126558303833008

Token 278: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0185820534825325
    2. '[f' → logprob: -4.018581867218018
    3. '[p' → logprob: -8.268582344055176
    4. '[in' → logprob: -9.893582344055176
    5. '[i' → logprob: -9.893582344055176
    6. ' [' → logprob: -10.768582344055176
    7. 'fact' → logprob: -11.018582344055176
    8. '[m' → logprob: -11.518582344055176
    9. '[n' → logprob: -12.393582344055176
    10. '[len' → logprob: -12.393582344055176

Token 279: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.999452772201039e-05
    2. 'fact' → logprob: -10.875029563903809
    3. '0' → logprob: -11.500029563903809
    4. 'None' → logprob: -14.250029563903809
    5. '```' → logprob: -16.125030517578125
    6. ' ' → logprob: -17.500030517578125
    7. ']' → logprob: -17.625030517578125
    8. 'factor' → logprob: -17.875030517578125
    9. '-' → logprob: -18.000030517578125
    10. 'pow' → logprob: -18.125030517578125

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34931033849716187
    2. ',' → logprob: -1.2243103981018066
    3. ' for' → logprob: -7.599310398101807
    4. ']*(' → logprob: -8.349309921264648
    5. 'for' → logprob: -9.724309921264648
    6. ']*' → logprob: -9.974309921264648
    7. ',
' → logprob: -11.724309921264648
    8. ' ,' → logprob: -12.599309921264648
    9. ']+' → logprob: -13.099309921264648
    10. ' ]' → logprob: -13.224309921264648

Token 281: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13270635902881622
    2. ']' → logprob: -2.1327064037323
    3. ']*(' → logprob: -6.132706165313721
    4. ' for' → logprob: -7.132706165313721
    5. ',
' → logprob: -7.507706165313721
    6. 'for' → logprob: -7.507706165313721
    7. ']*' → logprob: -7.757706165313721
    8. ' ,' → logprob: -8.507706642150879
    9. '<|end|>' → logprob: -8.507706642150879
    10. '*' → logprob: -8.632706642150879

Token 282: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -11.75002384185791
    3. ' (' → logprob: -12.12502384185791
    4. 'm' → logprob: -12.12502384185791
    5. '((' → logprob: -13.12502384185791
    6. '[m' → logprob: -13.62502384185791
    7. '(max' → logprob: -13.62502384185791
    8. '(M' → logprob: -15.75002384185791
    9. '(len' → logprob: -16.375022888183594
    10. '(mod' → logprob: -17.125022888183594

Token 283: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00012439649435691535
    2. '(m' → logprob: -9.000123977661133
    3. ' m' → logprob: -14.250123977661133
    4. '[m' → logprob: -16.375123977661133
    5. '   ' → logprob: -16.625123977661133
    6. 'max' → logprob: -17.000123977661133
    7. '(' → logprob: -17.500123977661133
    8. 'len' → logprob: -17.875123977661133
    9. ' (' → logprob: -18.000123977661133
    10. '	m' → logprob: -18.500123977661133

Token 284: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003811025235336274
    2. ' +' → logprob: -7.875380992889404
    3. '+
' → logprob: -13.875381469726562
    4. '1' → logprob: -17.750381469726562
    5. '＋' → logprob: -18.125381469726562
    6. ' +
' → logprob: -19.375381469726562
    7. '
' → logprob: -19.500381469726562
    8. '+m' → logprob: -19.500381469726562
    9. '+[' → logprob: -19.625381469726562
    10. '2' → logprob: -20.250381469726562

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.963691804325208e-05
    2. '2' → logprob: -11.125029563903809
    3. ' ' → logprob: -11.125029563903809
    4. '   ' → logprob: -17.750030517578125
    5. '+' → logprob: -18.312530517578125
    6. '```' → logprob: -18.312530517578125
    7. '10' → logprob: -18.562530517578125
    8. '  ' → logprob: -18.812530517578125
    9. '11' → logprob: -18.937530517578125
    10. '(' → logprob: -19.187530517578125

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '2' → logprob: -11.875009536743164
    3. ' ' → logprob: -12.875009536743164
    4. '(' → logprob: -16.937509536743164
    5. '   ' → logprob: -17.062509536743164
    6. '```' → logprob: -17.187509536743164
    7. '
' → logprob: -17.437509536743164
    8. '100' → logprob: -17.437509536743164
    9. '10' → logprob: -17.750009536743164
    10. '１' → logprob: -18.000009536743164

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004260750021785498
    2. ')
' → logprob: -5.504260540008545
    3. '+' → logprob: -8.754261016845703
    4. ')
' → logprob: -11.754261016845703
    5. ' )' → logprob: -12.254261016845703
    6. ']' → logprob: -12.379261016845703
    7. ')

' → logprob: -12.379261016845703
    8. '1' → logprob: -14.254261016845703
    9. '```' → logprob: -14.254261016845703
    10. '+)' → logprob: -15.254261016845703

Token 288: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: 0.0
    2. ' inv' → logprob: -17.625
    3. '<|end|>' → logprob: -18.875
    4. 'inverse' → logprob: -19.0
    5. '#' → logprob: -19.25
    6. '_inv' → logprob: -19.25
    7. '```' → logprob: -20.125
    8. '(inv' → logprob: -20.375
    9. '.inv' → logprob: -20.375
    10. 'in' → logprob: -20.875

Token 289: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0004652273200917989
    2. 'f' → logprob: -8.000465393066406
    3. '_' → logprob: -9.625465393066406
    4. '=' → logprob: -11.375465393066406
    5. '[' → logprob: -11.375465393066406
    6. '_=' → logprob: -11.750465393066406
    7. '_fact' → logprob: -11.875465393066406
    8. ' =' → logprob: -12.000465393066406
    9. '```' → logprob: -12.250465393066406
    10. '_factor' → logprob: -12.625465393066406

Token 290: '[m' (ID: 29271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. '[m' → logprob: -11.125022888183594
    3. '[-' → logprob: -12.125022888183594
    4. '=' → logprob: -13.875022888183594
    5. '```' → logprob: -14.375022888183594
    6. ' [' → logprob: -14.500022888183594
    7. ' =' → logprob: -14.875022888183594
    8. '=[' → logprob: -16.375022888183594
    9. ' ' → logprob: -17.375022888183594
    10. '[
' → logprob: -17.625022888183594

Token 291: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.729906196298543e-06
    2. ']=' → logprob: -11.625009536743164
    3. ' ]' → logprob: -14.500009536743164
    4. '=' → logprob: -15.875009536743164
    5. ']
' → logprob: -16.625009536743164
    6. '()]' → logprob: -18.125009536743164
    7. ')' → logprob: -18.375009536743164
    8. '-' → logprob: -18.625009536743164
    9. ']

' → logprob: -19.000009536743164
    10. 'm' → logprob: -19.125009536743164

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '=int' → logprob: -16.538042068481445
    4. '=m' → logprob: -17.288042068481445
    5. '=}' → logprob: -17.788042068481445
    6. '＝' → logprob: -17.913042068481445
    7. '=
' → logprob: -18.038042068481445
    8. '=

' → logprob: -18.288042068481445
    9. '=len' → logprob: -18.663042068481445
    10. '=n' → logprob: -18.913042068481445

Token 293: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -4.60414821645827e-06
    2. 'pow' → logprob: -12.625004768371582
    3. ' my' → logprob: -13.625004768371582
    4. 'myp' → logprob: -17.875003814697266
    5. '	my' → logprob: -18.125003814697266
    6. 'mod' → logprob: -20.375003814697266
    7. '   ' → logprob: -20.625003814697266
    8. '1' → logprob: -21.250003814697266
    9. 'My' → logprob: -21.250003814697266
    10. 'fact' → logprob: -21.250003814697266

Token 294: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -1.5570885807392187e-05
    2. '_f' → logprob: -12.000015258789062
    3. '_mul' → logprob: -13.250015258789062
    4. 'pow' → logprob: -13.250015258789062
    5. '_fact' → logprob: -13.500015258789062
    6. '_' → logprob: -13.500015258789062
    7. '_p' → logprob: -13.875015258789062
    8. '_inv' → logprob: -14.375015258789062
    9. '_fac' → logprob: -14.875015258789062
    10. '_pad' → logprob: -15.000015258789062

Token 295: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. '(n' → logprob: -15.500003814697266
    4. '(m' → logprob: -16.625003814697266
    5. '((' → logprob: -17.125003814697266
    6. '(
' → logprob: -17.250003814697266
    7. 'f' → logprob: -17.375003814697266
    8. ' (' → logprob: -17.750003814697266
    9. '	f' → logprob: -18.125003814697266
    10. ',f' → logprob: -18.250003814697266

Token 296: 'acto' (ID: 143207)
  Prédit: 'acto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acto' → logprob: -0.0001305950863752514
    2. 'act' → logprob: -9.000130653381348
    3. 'a' → logprob: -12.750130653381348
    4. ' acto' → logprob: -14.250130653381348
    5. '(m' → logprob: -14.250130653381348
    6. '(act' → logprob: -14.375130653381348
    7. '(' → logprob: -14.750130653381348
    8. '#' → logprob: -15.125130653381348
    9. 'achto' → logprob: -15.625130653381348
    10. '[' → logprob: -15.750130653381348

Token 297: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.014169743284583092
    2. '[-' → logprob: -4.264169692993164
    3. 'm' → logprob: -12.264169692993164
    4. '[' → logprob: -13.639169692993164
    5. '(m' → logprob: -16.014169692993164
    6. '```' → logprob: -16.514169692993164
    7. '[
' → logprob: -16.764169692993164
    8. '
' → logprob: -17.639169692993164
    9. '[M' → logprob: -17.889169692993164
    10. ' [' → logprob: -18.389169692993164

Token 298: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -9.491498531133402e-06
    2. ']' → logprob: -11.625009536743164
    3. ' ],' → logprob: -14.625009536743164
    4. '],
' → logprob: -18.000009536743164
    5. ''],' → logprob: -19.125009536743164
    6. '),' → logprob: -19.250009536743164
    7. '-' → logprob: -19.250009536743164
    8. '],"' → logprob: -19.625009536743164
    9. ',' → logprob: -20.000009536743164
    10. ' ' → logprob: -20.250009536743164

Token 299: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001408805139362812
    2. ' MOD' → logprob: -7.126408576965332
    3. '998' → logprob: -7.501408576965332
    4. '-' → logprob: -10.126408576965332
    5. '_MOD' → logprob: -12.001408576965332
    6. ' ' → logprob: -12.876408576965332
    7. '.MOD' → logprob: -14.001408576965332
    8. '  ' → logprob: -14.126408576965332
    9. '   ' → logprob: -14.126408576965332
    10. ' -' → logprob: -15.001408576965332

Token 300: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.00014478032244369388
    2. 'UL' → logprob: -9.375144958496094
    3. 'ULAR' → logprob: -11.000144958496094
    4. 'MOD' → logprob: -11.375144958496094
    5. 'ULE' → logprob: -11.375144958496094
    6. 'ODULE' → logprob: -12.250144958496094
    7. 'OD' → logprob: -12.625144958496094
    8. 'O' → logprob: -12.750144958496094
    9. 'ULA' → logprob: -13.125144958496094
    10. '244' → logprob: -13.625144958496094

Token 301: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019286326132714748
    2. ' -' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.126928329467773
    4. '−' → logprob: -19.376928329467773
    5. '```' → logprob: -19.876928329467773
    6. ' ' → logprob: -20.751928329467773
    7. '   ' → logprob: -21.126928329467773
    8. ')' → logprob: -21.376928329467773
    9. '–' → logprob: -21.626928329467773
    10. '-
' → logprob: -22.126928329467773

Token 302: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -17.125
    4. '```' → logprob: -17.125
    5. '۲' → logprob: -17.5
    6. '
' → logprob: -17.875
    7. '٢' → logprob: -18.25
    8. '

' → logprob: -18.3125
    9. '２' → logprob: -18.875
    10. '3' → logprob: -18.9375

Token 303: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -16.125001907348633
    4. '```' → logprob: -16.375001907348633
    5. '-' → logprob: -17.000001907348633
    6. '

' → logprob: -17.750001907348633
    7. '۲' → logprob: -17.937501907348633
    8. '２' → logprob: -18.250001907348633
    9. '
' → logprob: -18.375001907348633
    10. '٢' → logprob: -18.687501907348633

Token 304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5716304410016164e-05
    2. ')
' → logprob: -10.250035285949707
    3. ' )' → logprob: -15.750035285949707
    4. ')

' → logprob: -16.625036239624023
    5. ')`' → logprob: -17.750036239624023
    6. ')
' → logprob: -18.000036239624023
    7. '))' → logprob: -18.625036239624023
    8. '),' → logprob: -18.875036239624023
    9. '')' → logprob: -19.625036239624023
    10. ')\' → logprob: -19.750036239624023

Token 305: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.7697225252486533e-06
    2. ' for' → logprob: -12.625003814697266
    3. 'i' → logprob: -15.250003814697266
    4. '```' → logprob: -15.500003814697266
    5. '	for' → logprob: -18.500003814697266
    6. '<|end|>' → logprob: -19.125003814697266
    7. '#' → logprob: -20.500003814697266
    8. 'For' → logprob: -20.875003814697266
    9. '``' → logprob: -21.000003814697266
    10. '   ' → logprob: -22.000003814697266

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048289015889168
    2. ' i' → logprob: -4.511048316955566
    3. 'j' → logprob: -14.761048316955566
    4. '	i' → logprob: -16.38604736328125
    5. 'k' → logprob: -17.26104736328125
    6. ' ' → logprob: -17.63604736328125
    7. 'x' → logprob: -18.01104736328125
    8. '```' → logprob: -18.26104736328125
    9. ' ' → logprob: -18.63604736328125
    10. ' j' → logprob: -19.13604736328125

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026323752477765083
    2. 'in' → logprob: -3.6513237953186035
    3. 'm' → logprob: -12.151323318481445
    4. '	in' → logprob: -12.401323318481445
    5. 's' → logprob: -12.776323318481445
    6. ' ' → logprob: -12.776323318481445
    7. ' i' → logprob: -13.151323318481445
    8. 'In' → logprob: -13.901323318481445
    9. 'n' → logprob: -13.901323318481445
    10. ' m' → logprob: -14.526323318481445

Token 308: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004088373854756355
    2. ' range' → logprob: -5.504088401794434
    3. 're' → logprob: -11.629088401794434
    4. ' reversed' → logprob: -14.004088401794434
    5. '(range' → logprob: -16.129087448120117
    6. ' ' → logprob: -17.254087448120117
    7. '   ' → logprob: -17.504087448120117
    8. '	range' → logprob: -18.004087448120117
    9. 'reverse' → logprob: -18.379087448120117
    10. '  ' → logprob: -19.379087448120117

Token 309: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.008129963040119e-06
    2. 'm' → logprob: -12.500003814697266
    3. '(' → logprob: -15.250003814697266
    4. ' (' → logprob: -17.375003814697266
    5. ' m' → logprob: -18.500003814697266
    6. '(
' → logprob: -18.625003814697266
    7. '	m' → logprob: -19.625003814697266
    8. '((' → logprob: -20.000003814697266
    9. '(M' → logprob: -20.875003814697266
    10. '[m' → logprob: -21.250003814697266

Token 310: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001957298256456852
    2. ',' → logprob: -6.626957416534424
    3. ' -' → logprob: -7.376957416534424
    4. 'm' → logprob: -12.126956939697266
    5. ' ,' → logprob: -15.251956939697266
    6. ',m' → logprob: -16.001956939697266
    7. ',
' → logprob: -17.876956939697266
    8. ' ' → logprob: -18.126956939697266
    9. '-,' → logprob: -18.626956939697266
    10. '−' → logprob: -19.001956939697266

Token 311: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '-' → logprob: -16.00000762939453
    4. 'm' → logprob: -19.50000762939453
    5. '   ' → logprob: -19.50000762939453
    6. '
' → logprob: -19.50000762939453
    7. '1' → logprob: -19.75000762939453
    8. ' -' → logprob: -20.00000762939453
    9. '  ' → logprob: -21.62500762939453
    10. 'n' → logprob: -22.00000762939453

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '-' → logprob: -17.625
    4. '1' → logprob: -18.625
    5. '
' → logprob: -21.0
    6. 'i' → logprob: -21.625
    7. '   ' → logprob: -22.25
    8. '```' → logprob: -22.375
    9. ' -' → logprob: -24.0
    10. '...' → logprob: -24.125

Token 313: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005313089117407799
    2. ' -' → logprob: -5.255312919616699
    3. ',' → logprob: -9.5053129196167
    4. ',-' → logprob: -13.2553129196167
    5. '):
' → logprob: -13.7553129196167
    6. '   ' → logprob: -14.5053129196167
    7. '-,' → logprob: -14.7553129196167
    8. ' ,' → logprob: -14.7553129196167
    9. ' ' → logprob: -15.6303129196167
    10. ')' → logprob: -16.255313873291016

Token 314: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010331686353310943
    2. ' -' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.751032829284668
    4. '-i' → logprob: -16.501033782958984
    5. '−' → logprob: -16.751033782958984
    6. ' ' → logprob: -16.876033782958984
    7. '  ' → logprob: -17.251033782958984
    8. '-)' → logprob: -18.626033782958984
    9. '–' → logprob: -18.751033782958984
    10. ')' → logprob: -18.751033782958984

Token 315: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03372937813401222
    2. ' -' → logprob: -3.533729314804077
    3. '1' → logprob: -5.533729553222656
    4. ')' → logprob: -11.533729553222656
    5. '):
' → logprob: -12.158729553222656
    6. '   ' → logprob: -13.408729553222656
    7. '−' → logprob: -13.908729553222656
    8. ' ' → logprob: -14.283729553222656
    9. 'i' → logprob: -14.658729553222656
    10. '-)' → logprob: -14.908729553222656

Token 316: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0037265648134052753
    2. ' -' → logprob: -6.003726482391357
    3. '):
' → logprob: -6.753726482391357
    4. '):' → logprob: -9.503726959228516
    5. ')' → logprob: -13.128726959228516
    6. '-)' → logprob: -13.503726959228516
    7. '   ' → logprob: -13.753726959228516
    8. '−' → logprob: -13.878726959228516
    9. ' ):
' → logprob: -13.878726959228516
    10. '):
' → logprob: -14.378726959228516

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027402082923799753
    2. 'inv' → logprob: -6.377740383148193
    3. ' inv' → logprob: -6.877740383148193
    4. '(inv' → logprob: -12.627739906311035
    5. '```' → logprob: -13.627739906311035
    6. 'in' → logprob: -14.127739906311035
    7. '_inv' → logprob: -14.252739906311035
    8. '    
' → logprob: -15.377739906311035
    9. '	in' → logprob: -15.502739906311035
    10. ' ' → logprob: -15.627739906311035

Token 318: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.1080736368894577
    2. '   ' → logprob: -2.3580737113952637
    3. ' inv' → logprob: -4.858073711395264
    4. 'in' → logprob: -10.608073234558105
    5. '
' → logprob: -11.233073234558105
    6. '_inv' → logprob: -11.733073234558105
    7. 'i' → logprob: -12.233073234558105
    8. '(inv' → logprob: -12.358073234558105
    9. ' ' → logprob: -12.483073234558105
    10. '    
' → logprob: -12.733073234558105

Token 319: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.629921436891891e-05
    2. 'f' → logprob: -10.62502670288086
    3. '_i' → logprob: -13.37502670288086
    4. '[i' → logprob: -16.12502670288086
    5. '_' → logprob: -16.37502670288086
    6. '[' → logprob: -16.87502670288086
    7. '[_' → logprob: -17.25002670288086
    8. 's' → logprob: -17.25002670288086
    9. '```' → logprob: -17.62502670288086
    10. '_s' → logprob: -17.87502670288086

Token 320: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.75000286102295
    3. '
' → logprob: -14.25000286102295
    4. '[
' → logprob: -14.25000286102295
    5. '[I' → logprob: -15.87500286102295
    6. ' [' → logprob: -16.000003814697266
    7. 'i' → logprob: -16.750003814697266
    8. '[...]' → logprob: -17.250003814697266
    9. '  
' → logprob: -17.375003814697266
    10. '<|end|>' → logprob: -17.375003814697266

Token 321: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023428553715348244
    2. ' -' → logprob: -3.773428440093994
    3. ']' → logprob: -8.648428916931152
    4. '-i' → logprob: -13.148428916931152
    5. ')' → logprob: -13.273428916931152
    6. '   ' → logprob: -14.273428916931152
    7. ' ' → logprob: -14.273428916931152
    8. '[i' → logprob: -14.273428916931152
    9. '-=' → logprob: -14.398428916931152
    10. ' ]' → logprob: -14.523428916931152

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. ']' → logprob: -13.625007629394531
    4. '   ' → logprob: -16.87500762939453
    5. ')' → logprob: -18.37500762939453
    6. '```' → logprob: -19.00000762939453
    7. '  ' → logprob: -19.25000762939453
    8. ']=' → logprob: -19.87500762939453
    9. '１' → logprob: -20.25000762939453
    10. '
' → logprob: -20.25000762939453

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. ']' → logprob: -15.375006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '
' → logprob: -16.8750057220459
    6. '```' → logprob: -16.8750057220459
    7. '  ' → logprob: -17.9375057220459
    8. ')' → logprob: -18.3125057220459
    9. '<|end|>' → logprob: -18.6875057220459
    10. 'i' → logprob: -18.6875057220459

Token 324: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.746788501739502
    2. ']' → logprob: -0.746788501739502
    3. ' =' → logprob: -3.496788501739502
    4. ')' → logprob: -3.871788501739502
    5. ']=' → logprob: -7.121788501739502
    6. ')=' → logprob: -8.246788024902344
    7. ' ]' → logprob: -10.746788024902344
    8. ' )' → logprob: -10.996788024902344
    9. ' ' → logprob: -13.871788024902344
    10. '}' → logprob: -14.121788024902344

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233882926404476
    2. ' =' → logprob: -5.2552337646484375
    3. '＝' → logprob: -17.255233764648438
    4. '=(' → logprob: -17.630233764648438
    5. '=i' → logprob: -18.005233764648438
    6. '=

' → logprob: -18.630233764648438
    7. '=
' → logprob: -18.880233764648438
    8. '*=' → logprob: -19.505233764648438
    9. '=f' → logprob: -19.630233764648438
    10. '=m' → logprob: -19.880233764648438

Token 326: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.1815841943025589
    2. '(inv' → logprob: -1.8065842390060425
    3. '(in' → logprob: -7.056584358215332
    4. ' inv' → logprob: -7.181584358215332
    5. ' (' → logprob: -9.181584358215332
    6. 'in' → logprob: -9.806584358215332
    7. '(' → logprob: -9.931584358215332
    8. '.inv' → logprob: -13.431584358215332
    9. '   ' → logprob: -13.681584358215332
    10. '_inv' → logprob: -13.931584358215332

Token 327: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.045823566731997e-05
    2. 'f' → logprob: -10.875020027160645
    3. '[i' → logprob: -14.750020027160645
    4. '[' → logprob: -15.375020027160645
    5. '```' → logprob: -15.750020027160645
    6. '[_' → logprob: -16.12502098083496
    7. '_' → logprob: -16.25002098083496
    8. 'inv' → logprob: -16.50002098083496
    9. '_i' → logprob: -16.62502098083496
    10. '	f' → logprob: -16.87502098083496

Token 328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -13.875000953674316
    3. '[' → logprob: -15.250000953674316
    4. '[I' → logprob: -17.125001907348633
    5. '[
' → logprob: -17.875001907348633
    6. '*i' → logprob: -18.125001907348633
    7. '```' → logprob: -18.125001907348633
    8. '[int' → logprob: -18.750001907348633
    9. '<|end|>' → logprob: -18.750001907348633
    10. ' i' → logprob: -19.625001907348633

Token 329: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2075510174036026
    2. '*' → logprob: -1.8325510025024414
    3. ' *' → logprob: -3.8325510025024414
    4. '*i' → logprob: -6.082551002502441
    5. ']*' → logprob: -6.207551002502441
    6. '[i' → logprob: -6.832551002502441
    7. ' ' → logprob: -8.332551002502441
    8. '   ' → logprob: -10.332551002502441
    9. '
' → logprob: -10.707551002502441
    10. '[' → logprob: -10.832551002502441

Token 330: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2153622955083847
    2. ' *' → logprob: -1.840362310409546
    3. '[i' → logprob: -3.715362310409546
    4. '*i' → logprob: -4.715362071990967
    5. ' ' → logprob: -7.590362071990967
    6. '  ' → logprob: -8.215362548828125
    7. '<|end|>' → logprob: -8.715362548828125
    8. '[' → logprob: -8.840362548828125
    9. '   ' → logprob: -8.965362548828125
    10. '```' → logprob: -9.340362548828125

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009117019944824278
    2. ' i' → logprob: -7.000911712646484
    3. '(i' → logprob: -15.625911712646484
    4. '[i' → logprob: -16.875911712646484
    5. '	i' → logprob: -18.125911712646484
    6. '_i' → logprob: -19.750911712646484
    7. ' ' → logprob: -20.000911712646484
    8. 'fact' → logprob: -20.000911712646484
    9. '<|end|>' → logprob: -20.125911712646484
    10. ',i' → logprob: -20.125911712646484

Token 332: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16022545099258423
    2. '%' → logprob: -1.9102253913879395
    3. '%n' → logprob: -14.910225868225098
    4. '%i' → logprob: -15.535225868225098
    5. '%c' → logprob: -15.660225868225098
    6. ' ' → logprob: -15.910225868225098
    7. '%d' → logprob: -16.16022491455078
    8. '%m' → logprob: -16.28522491455078
    9. '%s' → logprob: -16.41022491455078
    10. '%x' → logprob: -16.78522491455078

Token 333: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '.MOD' → logprob: -19.125003814697266
    4. 'MODULE' → logprob: -19.750003814697266
    5. 'MO' → logprob: -19.875003814697266
    6. '_MOD' → logprob: -19.875003814697266
    7. '   ' → logprob: -20.500003814697266
    8. 'M' → logprob: -21.250003814697266
    9. '998' → logprob: -21.500003814697266
    10. ' ' → logprob: -21.625003814697266

Token 334: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.02064863033592701
    2. 'O' → logprob: -3.895648717880249
    3. 'MOD' → logprob: -10.145648956298828
    4. 'LO' → logprob: -10.770648956298828
    5. 'UL' → logprob: -11.270648956298828
    6. 'OD' → logprob: -11.645648956298828
    7. 'OU' → logprob: -12.270648956298828
    8. 'ULE' → logprob: -12.270648956298828
    9. 'L' → logprob: -12.520648956298828
    10. 'U' → logprob: -13.020648956298828

Token 335: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019626895664259791
    2. '#' → logprob: -9.50019645690918
    3. ')' → logprob: -9.62519645690918
    4. 'for' → logprob: -10.75019645690918
    5. 'result' → logprob: -11.50019645690918
    6. '<|end|>' → logprob: -11.87519645690918
    7. 'answer' → logprob: -12.37519645690918
    8. '```' → logprob: -12.62519645690918
    9. 'print' → logprob: -13.37519645690918
    10. 'n' → logprob: -13.50019645690918

Token 337: ' Util' (ID: 13564)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09216392040252686
    2. ')' → logprob: -2.8421640396118164
    3. 'for' → logprob: -4.967164039611816
    4. 'n' → logprob: -5.217164039611816
    5. ']' → logprob: -5.342164039611816
    6. 'result' → logprob: -5.592164039611816
    7. '#' → logprob: -5.717164039611816
    8. 'i' → logprob: -7.342164039611816
    9. 'res' → logprob: -7.717164039611816
    10. '(' → logprob: -8.217164039611816

Token 338: 'ise' (ID: 1096)
  Prédit: 'isation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.016894938424229622
    2. 'iser' → logprob: -4.766894817352295
    3. 'isant' → logprob: -6.141894817352295
    4. 'def' → logprob: -6.766894817352295
    5. 'ation' → logprob: -6.891894817352295
    6. 'is' → logprob: -7.016894817352295
    7. 'isé' → logprob: -7.391894817352295
    8. 'isons' → logprob: -7.641894817352295
    9. 'isateur' → logprob: -7.641894817352295
    10. '#' → logprob: -7.766894817352295

Token 339: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037406987976282835
    2. ' def' → logprob: -6.6287407875061035
    3. 'ation' → logprob: -7.3787407875061035
    4. '#' → logprob: -8.003740310668945
    5. '```' → logprob: -8.378740310668945
    6. 'iser' → logprob: -8.753740310668945
    7. 'isateur' → logprob: -8.878740310668945
    8. 'isation' → logprob: -8.878740310668945
    9. 'la' → logprob: -9.128740310668945
    10. 'n' → logprob: -9.878740310668945

Token 340: 'Cr' (ID: 14225)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2856343686580658
    2. 'C' → logprob: -1.6606343984603882
    3. 'Cr' → logprob: -4.410634517669678
    4. '#' → logprob: -4.660634517669678
    5. '=' → logprob: -4.785634517669678
    6. 'comb' → logprob: -5.160634517669678
    7. 'cr' → logprob: -5.285634517669678
    8. 'result' → logprob: -5.535634517669678
    9. 'for' → logprob: -5.910634517669678
    10. 'choose' → logprob: -6.535634517669678

Token 341: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010473522706888616
    2. 'n' → logprob: -10.000104904174805
    3. 'C' → logprob: -11.000104904174805
    4. 'for' → logprob: -11.500104904174805
    5. 'result' → logprob: -12.000104904174805
    6. ')' → logprob: -12.250104904174805
    7. '```' → logprob: -12.750104904174805
    8. ' def' → logprob: -12.875104904174805
    9. '(n' → logprob: -13.000104904174805
    10. 'res' → logprob: -13.375104904174805

Token 342: ' voilà' (ID: 77612)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.232493564719334e-05
    2. ' def' → logprob: -10.375082015991211
    3. '
' → logprob: -10.750082015991211
    4. '#' → logprob: -11.250082015991211
    5. 'n' → logprob: -12.250082015991211
    6. 'result' → logprob: -12.750082015991211
    7. 'C' → logprob: -12.875082015991211
    8. 'res' → logprob: -13.750082015991211
    9. '```' → logprob: -14.125082015991211
    10. 'comb' → logprob: -14.375082015991211

Token 343: ' une' (ID: 2463)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -15.000000953674316
    3. '```' → logprob: -15.375000953674316
    4. ')' → logprob: -16.125001907348633
    5. '<|end|>' → logprob: -16.375001907348633
    6. 'n' → logprob: -16.500001907348633
    7. 'from' → logprob: -17.375001907348633
    8. 'ndef' → logprob: -17.500001907348633
    9. ':def' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 344: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006034302059561014
    2. ' def' → logprob: -8.250603675842285
    3. '#' → logprob: -8.625603675842285
    4. 'dé' → logprob: -9.375603675842285
    5. 'fonction' → logprob: -11.250603675842285
    6. 'from' → logprob: -11.625603675842285
    7. 'comb' → logprob: -11.750603675842285
    8. '```' → logprob: -12.250603675842285
    9. '   ' → logprob: -12.625603675842285
    10. 'n' → logprob: -12.625603675842285

Token 345: ' classique' (ID: 76895)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.60414821645827e-06
    2. ' def' → logprob: -12.875004768371582
    3. '
' → logprob: -13.625004768371582
    4. '```' → logprob: -14.500004768371582
    5. '(def' → logprob: -16.500003814697266
    6. ':def' → logprob: -16.875003814697266
    7. '<|end|>' → logprob: -17.375003814697266
    8. '``' → logprob: -17.625003814697266
    9. 'ndef' → logprob: -18.125003814697266
    10. '(' → logprob: -18.375003814697266

Token 346: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.875000953674316
    3. '
' → logprob: -16.250001907348633
    4. '```' → logprob: -17.125001907348633
    5. ':def' → logprob: -18.000001907348633
    6. '(def' → logprob: -18.250001907348633
    7. 'ndef' → logprob: -18.750001907348633
    8. '_def' → logprob: -19.500001907348633
    9. '<|end|>' → logprob: -19.750001907348633
    10. 'from' → logprob: -19.875001907348633

Token 347: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.700132997939363e-05
    2. '```' → logprob: -11.625017166137695
    3. ' def' → logprob: -11.875017166137695
    4. '
' → logprob: -14.500017166137695
    5. '<|end|>' → logprob: -15.875017166137695
    6. '``' → logprob: -16.125017166137695
    7. '  
' → logprob: -16.625017166137695
    8. ':def' → logprob: -16.625017166137695
    9. '-def' → logprob: -16.750017166137695
    10. 'ndef' → logprob: -17.125017166137695

Token 348: ' comb' (ID: 4134)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12609700858592987
    2. ' n' → logprob: -2.7510969638824463
    3. 'comb' → logprob: -3.0010969638824463
    4. ' comb' → logprob: -6.001097202301025
    5. 'C' → logprob: -6.876097202301025
    6. 'choose' → logprob: -7.626097202301025
    7. 'bin' → logprob: -8.126096725463867
    8. 'cn' → logprob: -8.626096725463867
    9. ' C' → logprob: -9.251096725463867
    10. 'cmb' → logprob: -9.251096725463867

Token 349: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010055390885099769
    2. '(x' → logprob: -7.25100564956665
    3. '(i' → logprob: -9.001005172729492
    4. '(k' → logprob: -9.501005172729492
    5. 'n' → logprob: -10.251005172729492
    6. 'ination' → logprob: -10.501005172729492
    7. '(a' → logprob: -11.751005172729492
    8. 'i' → logprob: -12.001005172729492
    9. '(num' → logprob: -12.126005172729492
    10. '(' → logprob: -12.376005172729492

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018438464030623436
    2. ',b' → logprob: -4.018438339233398
    3. ' ,' → logprob: -8.393438339233398
    4. 'b' → logprob: -10.018438339233398
    5. ',r' → logprob: -11.643438339233398
    6. '_,' → logprob: -12.518438339233398
    7. ',n' → logprob: -13.268438339233398
    8. ',k' → logprob: -13.518438339233398
    9. ',a' → logprob: -14.393438339233398
    10. ',
' → logprob: -14.643438339233398

Token 351: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001617035741219297
    2. ' b' → logprob: -8.750162124633789
    3. 'r' → logprob: -12.750162124633789
    4. 'k' → logprob: -14.875162124633789
    5. 'a' → logprob: -18.50016212463379
    6. '   ' → logprob: -19.75016212463379
    7. '```' → logprob: -20.25016212463379
    8. ' r' → logprob: -20.50016212463379
    9. ' ' → logprob: -20.62516212463379
    10. '	b' → logprob: -21.12516212463379

Token 352: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0047977338545024395
    2. '):
' → logprob: -5.37979793548584
    3. ')' → logprob: -8.75479793548584
    4. '):
' → logprob: -10.87979793548584
    5. ':' → logprob: -14.75479793548584
    6. '   ' → logprob: -16.004796981811523
    7. ' ):' → logprob: -16.129796981811523
    8. ')：' → logprob: -16.129796981811523
    9. '=' → logprob: -17.004796981811523
    10. '）：' → logprob: -17.254796981811523

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018888462334871292
    2. ' if' → logprob: -4.268888473510742
    3. ' return' → logprob: -5.518888473510742
    4. ':' → logprob: -8.018888473510742
    5. 'if' → logprob: -8.768888473510742
    6. '<|end|>' → logprob: -9.393888473510742
    7. 'return' → logprob: -10.268888473510742
    8. ' ' → logprob: -10.518888473510742
    9. '  ' → logprob: -10.768888473510742
    10. ':return' → logprob: -10.893888473510742

Token 354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025300271809101105
    2. ' if' → logprob: -4.2753005027771
    3. 'return' → logprob: -4.5253005027771
    4. '   ' → logprob: -8.525300025939941
    5. ' return' → logprob: -10.025300025939941
    6. '	if' → logprob: -14.275300025939941
    7. '```' → logprob: -16.400300979614258
    8. '	return' → logprob: -16.775300979614258
    9. '    
' → logprob: -17.275300979614258
    10. '
' → logprob: -17.900300979614258

Token 355: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06215186417102814
    2. ' b' → logprob: -2.8121519088745117
    3. 'a' → logprob: -8.687151908874512
    4. ' a' → logprob: -11.562151908874512
    5. '   ' → logprob: -12.187151908874512
    6. '	b' → logprob: -14.437151908874512
    7. ' ' → logprob: -15.937151908874512
    8. '0' → logprob: -16.312150955200195
    9. ' ' → logprob: -17.437150955200195
    10. '_b' → logprob: -18.437150955200195

Token 356: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33274638652801514
    2. '<' → logprob: -1.3327463865280151
    3. '<b' → logprob: -3.9577465057373047
    4. 'a' → logprob: -10.582746505737305
    5. '<n' → logprob: -10.582746505737305
    6. '<a' → logprob: -10.707746505737305
    7. 'b' → logprob: -10.832746505737305
    8. ' ' → logprob: -10.957746505737305
    9. '<m' → logprob: -11.332746505737305
    10. '<p' → logprob: -11.957746505737305

Token 357: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.553032628493384e-05
    2. '0' → logprob: -9.500075340270996
    3. ' b' → logprob: -14.250075340270996
    4. ' ' → logprob: -17.750076293945312
    5. '	b' → logprob: -20.875076293945312
    6. '   ' → logprob: -23.250076293945312
    7. '1' → logprob: -23.750076293945312
    8. ' or' → logprob: -24.125076293945312
    9. '>b' → logprob: -24.125076293945312
    10. ' б' → logprob: -24.375076293945312

Token 358: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.25003793835639954
    2. ':' → logprob: -1.6250379085540771
    3. ':
' → logprob: -4.000038146972656
    4. ':return' → logprob: -5.250038146972656
    5. '   ' → logprob: -7.625038146972656
    6. 'or' → logprob: -8.375038146972656
    7. 'return' → logprob: -11.500038146972656
    8. ' return' → logprob: -11.750038146972656
    9. '	or' → logprob: -12.000038146972656
    10. ' :' → logprob: -12.250038146972656

Token 359: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00029637437546625733
    2. ' b' → logprob: -8.125296592712402
    3. 'a' → logprob: -15.125296592712402
    4. '   ' → logprob: -17.625295639038086
    5. '0' → logprob: -17.750295639038086
    6. '	b' → logprob: -18.500295639038086
    7. ' or' → logprob: -19.750295639038086
    8. ' ' → logprob: -20.375295639038086
    9. ' a' → logprob: -20.875295639038086
    10. 'or' → logprob: -21.375295639038086

Token 360: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04020502045750618
    2. ' <' → logprob: -3.6652050018310547
    3. '0' → logprob: -4.415205001831055
    4. '==' → logprob: -6.665205001831055
    5. ' or' → logprob: -8.790205001831055
    6. ' ' → logprob: -9.040205001831055
    7. ' ==' → logprob: -9.540205001831055
    8. '=' → logprob: -10.165205001831055
    9. 'or' → logprob: -10.665205001831055
    10. '[' → logprob: -11.040205001831055

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -17.2500057220459
    4. '=' → logprob: -17.2500057220459
    5. '```' → logprob: -19.6250057220459
    6. '٠' → logprob: -20.1250057220459
    7. '０' → logprob: -20.2500057220459
    8. '০' → logprob: -20.6250057220459
    9. 'zero' → logprob: -20.8750057220459
    10. '<|end|>' → logprob: -20.8750057220459

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -17.750003814697266
    4. '=' → logprob: -18.875003814697266
    5. '```' → logprob: -19.750003814697266
    6. '０' → logprob: -20.750003814697266
    7. '٠' → logprob: -20.750003814697266
    8. '০' → logprob: -20.875003814697266
    9. '   ' → logprob: -21.250003814697266
    10. ' or' → logprob: -21.562503814697266

Token 363: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4792148172855377
    2. ':
' → logprob: -0.9792147874832153
    3. ':return' → logprob: -5.729214668273926
    4. '   ' → logprob: -6.604214668273926
    5. ' or' → logprob: -7.729214668273926
    6. '       ' → logprob: -9.979214668273926
    7. ':
' → logprob: -11.229214668273926
    8. '):
' → logprob: -11.979214668273926
    9. ' :
' → logprob: -12.354214668273926
    10. ' :' → logprob: -12.604214668273926

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3136165142059326
    2. '   ' → logprob: -1.3136165142059326
    3. ' return' → logprob: -8.688616752624512
    4. 'return' → logprob: -9.188616752624512
    5. '0' → logprob: -10.438616752624512
    6. '```' → logprob: -11.188616752624512
    7. '
' → logprob: -11.813616752624512
    8. ':return' → logprob: -11.938616752624512
    9. '	return' → logprob: -12.063616752624512
    10. '1' → logprob: -12.563616752624512

Token 365: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39699870347976685
    2. '   ' → logprob: -1.146998643875122
    3. ' return' → logprob: -5.146998882293701
    4. '       ' → logprob: -5.521998882293701
    5. '	return' → logprob: -8.646998405456543
    6. '0' → logprob: -9.521998405456543
    7. ':return' → logprob: -12.396998405456543
    8. '
' → logprob: -12.771998405456543
    9. '  ' → logprob: -13.646998405456543
    10. '{return' → logprob: -13.646998405456543

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.125709533691406
    4. ' ' → logprob: -20.125709533691406
    5. '  ' → logprob: -20.250709533691406
    6. '۰' → logprob: -21.375709533691406
    7. '
' → logprob: -22.625709533691406
    8. '00' → logprob: -22.625709533691406
    9. '000' → logprob: -22.750709533691406
    10. '```' → logprob: -23.125709533691406

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -22.375
    4. '```' → logprob: -22.5
    5. '۰' → logprob: -22.625
    6. '
' → logprob: -23.125
    7. '000' → logprob: -23.375
    8. '00' → logprob: -23.5
    9. ' ' → logprob: -24.0
    10. '  ' → logprob: -24.5

Token 368: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.816093228830141e-06
    2. '
' → logprob: -13.75000286102295
    3. ' return' → logprob: -14.50000286102295
    4. 'return' → logprob: -14.75000286102295
    5. '    
' → logprob: -14.87500286102295
    6. '<|end|>' → logprob: -16.000001907348633
    7. '	return' → logprob: -16.250001907348633
    8. '  ' → logprob: -16.875001907348633
    9. '       ' → logprob: -17.750001907348633
    10. ')' → logprob: -18.000001907348633

Token 369: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001577698567416519
    2. '
' → logprob: -8.875157356262207
    3. 'return' → logprob: -11.500157356262207
    4. ' return' → logprob: -12.750157356262207
    5. '    
' → logprob: -12.750157356262207
    6. '1' → logprob: -14.375157356262207
    7. '0' → logprob: -15.125157356262207
    8. ')' → logprob: -15.375157356262207
    9. '	return' → logprob: -15.375157356262207
    10. '  ' → logprob: -15.625157356262207

Token 370: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11237696558237076
    2. 'return' → logprob: -2.3623769283294678
    3. ' return' → logprob: -4.612377166748047
    4. '0' → logprob: -6.987377166748047
    5. '1' → logprob: -7.237377166748047
    6. '```' → logprob: -8.112377166748047
    7. '
' → logprob: -8.987377166748047
    8. '  ' → logprob: -10.612377166748047
    9. ')' → logprob: -10.862377166748047
    10. '    
' → logprob: -10.987377166748047

Token 371: ' fois' (ID: 14697)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17681503295898438
    2. 'return' → logprob: -3.5518150329589844
    3. ' return' → logprob: -4.051815032958984
    4. 'n' → logprob: -4.426815032958984
    5. ' valeurs' → logprob: -4.426815032958984
    6. '```' → logprob: -4.926815032958984
    7. 'ormais' → logprob: -5.176815032958984
    8. 'fois' → logprob: -5.301815032958984
    9. ' erreurs' → logprob: -5.426815032958984
    10. 'a' → logprob: -5.551815032958984

Token 372: ' ça' (ID: 13590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9743012671824545e-05
    2. '    
' → logprob: -11.875020027160645
    3. '<|end|>' → logprob: -12.500020027160645
    4. '
' → logprob: -12.875020027160645
    5. ' return' → logprob: -13.250020027160645
    6. '  ' → logprob: -13.625020027160645
    7. 'return' → logprob: -13.625020027160645
    8. ')' → logprob: -14.250020027160645
    9. '```' → logprob: -14.875020027160645
    10. '       ' → logprob: -15.000020027160645

Token 373: ' bug' (ID: 19154)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24055913090705872
    2. 'n' → logprob: -1.7405591011047363
    3. ' return' → logprob: -3.7405591011047363
    4. 's' → logprob: -5.365559101104736
    5. 'arr' → logprob: -5.365559101104736
    6. ' n' → logprob: -5.740559101104736
    7. 'continue' → logprob: -6.865559101104736
    8. 'ne' → logprob: -8.740559577941895
    9. 'print' → logprob: -9.365559577941895
    10. '```' → logprob: -9.365559577941895

Token 374: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.2961512513575144e-05
    2. '<|end|>' → logprob: -10.875022888183594
    3. '  ' → logprob: -14.250022888183594
    4. '
' → logprob: -14.250022888183594
    5. '       ' → logprob: -14.875022888183594
    6. '    
' → logprob: -14.875022888183594
    7. ')' → logprob: -14.875022888183594
    8. 'return' → logprob: -15.125022888183594
    9. ' return' → logprob: -15.125022888183594
    10. '<|end|>' → logprob: -15.375022888183594

Token 375: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.045823566731997e-05
    2. 'return' → logprob: -11.125020027160645
    3. '<|end|>' → logprob: -13.125020027160645
    4. ' return' → logprob: -13.500020027160645
    5. '
' → logprob: -14.125020027160645
    6. '    
' → logprob: -14.625020027160645
    7. '```' → logprob: -15.250020027160645
    8. '  ' → logprob: -15.375020027160645
    9. ')' → logprob: -16.25002098083496
    10. '	return' → logprob: -16.25002098083496

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004088135901838541
    2. 'return' → logprob: -5.504087924957275
    3. ' return' → logprob: -11.629088401794434
    4. '```' → logprob: -15.379088401794434
    5. '	return' → logprob: -15.504088401794434
    6. '    
' → logprob: -16.004087448120117
    7. '
' → logprob: -16.379087448120117
    8. '  ' → logprob: -16.629087448120117
    9. '   ' → logprob: -17.754087448120117
    10. ' ' → logprob: -18.254087448120117

Token 377: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06225291267037392
    2. '   ' → logprob: -2.812252998352051
    3. ' return' → logprob: -8.18725299835205
    4. '	return' → logprob: -13.06225299835205
    5. '    
' → logprob: -13.31225299835205
    6. 'res' → logprob: -13.68725299835205
    7. '```' → logprob: -14.56225299835205
    8. '
' → logprob: -15.06225299835205
    9. 'ret' → logprob: -15.06225299835205
    10. '  ' → logprob: -15.18725299835205

Token 378: ' facto' (ID: 73147)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.007447133306413889
    2. '(f' → logprob: -5.007447242736816
    3. ' facto' → logprob: -7.382447242736816
    4. 'fac' → logprob: -10.382447242736816
    5. 'f' → logprob: -10.507447242736816
    6. '((' → logprob: -11.632447242736816
    7. 'factor' → logprob: -11.632447242736816
    8. '(' → logprob: -12.007447242736816
    9. ' (' → logprob: -12.257447242736816
    10. '_fact' → logprob: -12.257447242736816

Token 379: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.339278580620885e-06
    2. 'a' → logprob: -13.000001907348633
    3. '[' → logprob: -18.000001907348633
    4. '[b' → logprob: -20.250001907348633
    5. '	a' → logprob: -21.125001907348633
    6. '```' → logprob: -21.250001907348633
    7. '(a' → logprob: -21.500001907348633
    8. '[A' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '
' → logprob: -22.500001907348633

Token 380: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.704273118884885e-07
    2. ']*' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.125
    4. ' ]' → logprob: -18.5
    5. ']
' → logprob: -18.75
    6. ']%' → logprob: -20.625
    7. ' ' → logprob: -20.875
    8. '']' → logprob: -21.375
    9. '"]' → logprob: -22.5
    10. ')' → logprob: -22.625

Token 381: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003435538848862052
    2. ' *' → logprob: -6.3784356117248535
    3. '   ' → logprob: -6.7534356117248535
    4. ']' → logprob: -8.628435134887695
    5. '```' → logprob: -8.628435134887695
    6. '
' → logprob: -9.628435134887695
    7. ' ' → logprob: -10.503435134887695
    8. ']*' → logprob: -10.628435134887695
    9. '%' → logprob: -10.878435134887695
    10. '**' → logprob: -10.878435134887695

Token 382: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.01446139719337225
    2. '(inv' → logprob: -4.264461517333984
    3. ' inv' → logprob: -8.139461517333984
    4. '(in' → logprob: -12.389461517333984
    5. ' (' → logprob: -13.639461517333984
    6. '_inv' → logprob: -15.264461517333984
    7. 'in' → logprob: -15.514461517333984
    8. '(' → logprob: -16.014461517333984
    9. '.inv' → logprob: -16.514461517333984
    10. 'inverse' → logprob: -17.139461517333984

Token 383: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.306760805164231e-05
    2. 'f' → logprob: -11.25001335144043
    3. '_' → logprob: -18.12501335144043
    4. '\' → logprob: -20.12501335144043
    5. '```' → logprob: -20.50001335144043
    6. '	f' → logprob: -21.87501335144043
    7. '[' → logprob: -22.00001335144043
    8. ' _' → logprob: -22.25001335144043
    9. '[_' → logprob: -22.50001335144043
    10. '​' → logprob: -22.50001335144043

Token 384: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.061054359131958e-06
    2. 'b' → logprob: -11.750007629394531
    3. '	b' → logprob: -17.00000762939453
    4. '[a' → logprob: -18.00000762939453
    5. '```' → logprob: -18.25000762939453
    6. '[' → logprob: -19.00000762939453
    7. '
' → logprob: -20.62500762939453
    8. '   ' → logprob: -20.75000762939453
    9. ',b' → logprob: -20.87500762939453
    10. ''b' → logprob: -21.75000762939453

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.6312321753939614e-05
    2. ']%' → logprob: -10.250036239624023
    3. '%' → logprob: -14.500036239624023
    4. ']*' → logprob: -14.875036239624023
    5. '']' → logprob: -17.375036239624023
    6. ' ]' → logprob: -17.625036239624023
    7. ']
' → logprob: -17.875036239624023
    8. ']

' → logprob: -19.000036239624023
    9. '*' → logprob: -19.125036239624023
    10. '```' → logprob: -19.250036239624023

Token 386: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08441994339227676
    2. '*' → logprob: -2.7094199657440186
    3. ' *' → logprob: -4.3344197273254395
    4. ' %' → logprob: -7.2094197273254395
    5. '   ' → logprob: -7.7094197273254395
    6. '```' → logprob: -10.959420204162598
    7. '%e' → logprob: -11.209420204162598
    8. '[' → logprob: -11.334420204162598
    9. ' ' → logprob: -12.084420204162598
    10. ' ' → logprob: -12.084420204162598

Token 387: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.8624639324116288e-06
    2. ' MOD' → logprob: -13.250001907348633
    3. '```' → logprob: -19.125001907348633
    4. '.MOD' → logprob: -19.875001907348633
    5. '_MOD' → logprob: -20.000001907348633
    6. '998' → logprob: -20.375001907348633
    7. '`' → logprob: -20.750001907348633
    8. 'MO' → logprob: -21.250001907348633
    9. 'MODULE' → logprob: -21.500001907348633
    10. '   ' → logprob: -22.000001907348633

Token 388: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.00019293125660624355
    2. 'O' → logprob: -8.625192642211914
    3. 'ULE' → logprob: -12.250192642211914
    4. 'UL' → logprob: -12.625192642211914
    5. 'U' → logprob: -12.750192642211914
    6. '   ' → logprob: -14.625192642211914
    7. 'L' → logprob: -14.750192642211914
    8. '

' → logprob: -15.125192642211914
    9. 'ulo' → logprob: -15.625192642211914
    10. '
' → logprob: -15.750192642211914

Token 389: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.015103540383279324
    2. ' *' → logprob: -4.515103340148926
    3. '%' → logprob: -5.515103340148926
    4. '   ' → logprob: -11.515103340148926
    5. ' %' → logprob: -12.390103340148926
    6. '```' → logprob: -13.265103340148926
    7. '*r' → logprob: -14.265103340148926
    8. '`' → logprob: -14.640103340148926
    9. '*out' → logprob: -14.640103340148926
    10. '<|end|>' → logprob: -14.765103340148926

Token 390: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0002678920282050967
    2. ' inv' → logprob: -8.25026798248291
    3. '(inv' → logprob: -12.00026798248291
    4. '   ' → logprob: -15.00026798248291
    5. '.inv' → logprob: -16.750267028808594
    6. '```' → logprob: -17.500267028808594
    7. '
' → logprob: -17.750267028808594
    8. ' ' → logprob: -17.875267028808594
    9. '_inv' → logprob: -18.125267028808594
    10. '  ' → logprob: -18.250267028808594

Token 391: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: 0.0
    2. 'f' → logprob: -17.75
    3. '_' → logprob: -19.5
    4. '	f' → logprob: -19.875
    5. '-f' → logprob: -20.125
    6. ' _' → logprob: -21.625
    7. '```' → logprob: -21.75
    8. 'v' → logprob: -22.125
    9. '\' → logprob: -22.5
    10. '_v' → logprob: -23.0

Token 392: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.0325924449716695e-05
    2. 'a' → logprob: -11.50001049041748
    3. '[' → logprob: -15.62501049041748
    4. '[
' → logprob: -19.000009536743164
    5. '```' → logprob: -19.125009536743164
    6. ' [' → logprob: -19.375009536743164
    7. '(a' → logprob: -19.500009536743164
    8. '   ' → logprob: -19.875009536743164
    9. '[[' → logprob: -20.375009536743164
    10. ' a' → logprob: -20.875009536743164

Token 393: ' -' (ID: 533)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.6942372918128967
    2. '[b' → logprob: -0.6942372918128967
    3. 'b' → logprob: -7.319237232208252
    4. '[' → logprob: -8.44423770904541
    5. '[-' → logprob: -9.44423770904541
    6. '[a' → logprob: -9.94423770904541
    7. ' -' → logprob: -10.06923770904541
    8. '-' → logprob: -10.56923770904541
    9. ']' → logprob: -12.44423770904541
    10. '	b' → logprob: -12.69423770904541

Token 394: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.339278580620885e-06
    2. ' b' → logprob: -13.000001907348633
    3. '	b' → logprob: -19.125001907348633
    4. '[b' → logprob: -23.125001907348633
    5. '   ' → logprob: -24.125001907348633
    6. 'б' → logprob: -24.625001907348633
    7. ')b' → logprob: -25.000001907348633
    8. '>b' → logprob: -25.750001907348633
    9. '$b' → logprob: -25.875001907348633
    10. '\b' → logprob: -26.000001907348633

Token 395: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009554093703627586
    2. ']%' → logprob: -7.250955581665039
    3. '%' → logprob: -8.375955581665039
    4. ' ]' → logprob: -11.250955581665039
    5. '}' → logprob: -13.875955581665039
    6. '']' → logprob: -15.000955581665039
    7. ')' → logprob: -15.500955581665039
    8. '<|end|>' → logprob: -15.625955581665039
    9. ' %' → logprob: -15.875955581665039
    10. '```' → logprob: -16.62595558166504

Token 396: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.016049150377511978
    2. ' %' → logprob: -4.141049385070801
    3. ')' → logprob: -11.6410493850708
    4. ')%' → logprob: -13.1410493850708
    5. '%n' → logprob: -13.5160493850708
    6. ']' → logprob: -14.7660493850708
    7. '%A' → logprob: -14.8910493850708
    8. '%m' → logprob: -14.8910493850708
    9. '[' → logprob: -15.2660493850708
    10. '%b' → logprob: -15.5160493850708

Token 397: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -19.250045776367188
    4. '.MOD' → logprob: -19.250045776367188
    5. 'MO' → logprob: -19.375045776367188
    6. ' ' → logprob: -19.500045776367188
    7. 'MODULE' → logprob: -20.625045776367188
    8. '   ' → logprob: -21.000045776367188
    9. '```' → logprob: -21.125045776367188
    10. 'MODE' → logprob: -22.000045776367188

Token 398: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -1.5332478142227046e-05
    2. 'O' → logprob: -11.250015258789062
    3. 'ULE' → logprob: -13.375015258789062
    4. 'U' → logprob: -14.375015258789062
    5. 'UL' → logprob: -16.625015258789062
    6. 'L' → logprob: -17.750015258789062
    7. 'LO' → logprob: -18.500015258789062
    8. 'ulo' → logprob: -18.500015258789062
    9. '   ' → logprob: -18.750015258789062
    10. '
' → logprob: -18.875015258789062

Token 399: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: 're' (ID: 264)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1315324306488037
    2. 'res' → logprob: -2.8815324306488037
    3. 'answer' → logprob: -3.0065324306488037
    4. 'ans' → logprob: -4.506532669067383
    5. 'total' → logprob: -5.381532669067383
    6. 'dp' → logprob: -6.631532669067383
    7. '#' → logprob: -8.381532669067383
    8. 's' → logprob: -8.631532669067383
    9. 'r' → logprob: -9.006532669067383
    10. 'results' → logprob: -9.631532669067383

Token 401: 'ponse' (ID: 1439)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005315870512276888
    2. 'sum' → logprob: -8.125531196594238
    3. 'su' → logprob: -8.625531196594238
    4. 'solve' → logprob: -11.000531196594238
    5. 'turn' → logprob: -11.375531196594238
    6. 'main' → logprob: -12.250531196594238
    7. 'sp' → logprob: -12.625531196594238
    8. 'sz' → logprob: -12.625531196594238
    9. 'st' → logprob: -13.125531196594238
    10. 'swer' → logprob: -13.750531196594238

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10166533291339874
    2. '=' → logprob: -2.3516652584075928
    3. 's' → logprob: -6.601665496826172
    4. '_' → logprob: -9.351665496826172
    5. ' ' → logprob: -11.976665496826172
    6. ' ' → logprob: -13.726665496826172
    7. ',' → logprob: -13.851665496826172
    8. '  ' → logprob: -14.476665496826172
    9. '_=' → logprob: -14.601665496826172
    10. ')' → logprob: -14.726665496826172

Token 403: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009259917424060404
    2. '1' → logprob: -7.5009260177612305
    3. 'pow' → logprob: -9.12592601776123
    4. 'fact' → logprob: -9.37592601776123
    5. ' ' → logprob: -9.50092601776123
    6. '(' → logprob: -10.12592601776123
    7. 'comb' → logprob: -11.12592601776123
    8. '[' → logprob: -11.25092601776123
    9. '[]' → logprob: -11.50092601776123
    10. 'sum' → logprob: -13.06342601776123

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031207946594804525
    2. '1' → logprob: -6.6281208992004395
    3. 'pow' → logprob: -7.0031208992004395
    4. '(' → logprob: -8.253120422363281
    5. 'comb' → logprob: -8.503120422363281
    6. 'fact' → logprob: -8.503120422363281
    7. 'sum' → logprob: -9.878120422363281
    8. '[' → logprob: -10.253120422363281
    9. '(pow' → logprob: -10.253120422363281
    10. '((' → logprob: -11.128120422363281

Token 405: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00018232580623589456
    2. ' for' → logprob: -8.750182151794434
    3. '
' → logprob: -11.250182151794434
    4. '<|end|>' → logprob: -12.500182151794434
    5. '```' → logprob: -12.625182151794434
    6. 'i' → logprob: -14.000182151794434
    7. 'range' → logprob: -14.375182151794434
    8. '#' → logprob: -14.500182151794434
    9. ')' → logprob: -14.875182151794434
    10. 'n' → logprob: -15.875182151794434

Token 406: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.869017852295656e-06
    2. ' for' → logprob: -12.375006675720215
    3. 'i' → logprob: -13.125006675720215
    4. '<|end|>' → logprob: -15.125006675720215
    5. '```' → logprob: -15.750006675720215
    6. 'range' → logprob: -16.25000762939453
    7. '#' → logprob: -16.62500762939453
    8. '	for' → logprob: -17.87500762939453
    9. 'from' → logprob: -18.25000762939453
    10. 'For' → logprob: -19.37500762939453

Token 407: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2249746322631836
    2. 'k' → logprob: -1.7249746322631836
    3. 'j' → logprob: -4.474974632263184
    4. 'b' → logprob: -5.599974632263184
    5. 'a' → logprob: -5.724974632263184
    6. 'r' → logprob: -6.224974632263184
    7. 'x' → logprob: -6.349974632263184
    8. ' i' → logprob: -7.599974632263184
    9. 'c' → logprob: -8.349974632263184
    10. 'd' → logprob: -9.474974632263184

Token 408: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05497210472822189
    2. 'in' → logprob: -2.9299721717834473
    3. 'range' → logprob: -9.554971694946289
    4. ' ' → logprob: -11.679971694946289
    5. '_' → logprob: -13.304971694946289
    6. 'n' → logprob: -13.679971694946289
    7. '1' → logprob: -13.929971694946289
    8. '0' → logprob: -13.929971694946289
    9. ',' → logprob: -14.304971694946289
    10. 'd' → logprob: -14.304971694946289

Token 409: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. 'n' → logprob: -14.500710487365723
    4. '(range' → logprob: -16.37571144104004
    5. 'r' → logprob: -16.87571144104004
    6. 'in' → logprob: -17.12571144104004
    7. '
' → logprob: -17.62571144104004
    8. 'rang' → logprob: -18.00071144104004
    9. 'ran' → logprob: -18.12571144104004
    10. '	range' → logprob: -18.25071144104004

Token 410: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02709352597594261
    2. '(' → logprob: -3.6520934104919434
    3. '(m' → logprob: -7.152093410491943
    4. 'n' → logprob: -12.652093887329102
    5. '(min' → logprob: -12.652093887329102
    6. '(k' → logprob: -14.152093887329102
    7. '1' → logprob: -14.402093887329102
    8. '((' → logprob: -14.402093887329102
    9. '(
' → logprob: -14.777093887329102
    10. '(max' → logprob: -15.152093887329102

Token 411: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016912171617150307
    2. '(n' → logprob: -4.39191198348999
    3. '0' → logprob: -6.14191198348999
    4. '1' → logprob: -6.64191198348999
    5. 'm' → logprob: -7.14191198348999
    6. '(' → logprob: -9.141912460327148
    7. '(m' → logprob: -10.391912460327148
    8. ' n' → logprob: -12.641912460327148
    9. 'min' → logprob: -14.141912460327148
    10. '
' → logprob: -14.266912460327148

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004514735192060471
    2. ',n' → logprob: -5.504514694213867
    3. ',m' → logprob: -8.629514694213867
    4. ' ,' → logprob: -9.004514694213867
    5. 'n' → logprob: -9.754514694213867
    6. 'm' → logprob: -10.379514694213867
    7. '(n' → logprob: -11.379514694213867
    8. ',
' → logprob: -11.379514694213867
    9. ',k' → logprob: -11.504514694213867
    10. ',min' → logprob: -12.504514694213867

Token 413: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018929373472929
    2. 'm' → logprob: -6.501893043518066
    3. ' n' → logprob: -7.876893043518066
    4. 'min' → logprob: -12.501893043518066
    5. 'k' → logprob: -13.626893043518066
    6. '   ' → logprob: -13.876893043518066
    7. ' m' → logprob: -14.001893043518066
    8. '```' → logprob: -14.001893043518066
    9. '=n' → logprob: -14.126893043518066
    10. '(n' → logprob: -14.251893043518066

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519318461418152
    2. ' +' → logprob: -1.50193190574646
    3. '
' → logprob: -13.751932144165039
    4. ',' → logprob: -14.626932144165039
    5. '   ' → logprob: -15.251932144165039
    6. ' ' → logprob: -15.626932144165039
    7. '+
' → logprob: -15.626932144165039
    8. '+m' → logprob: -15.876932144165039
    9. '+k' → logprob: -16.00193214416504
    10. '```' → logprob: -16.75193214416504

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '
' → logprob: -16.625028610229492
    4. '   ' → logprob: -17.375028610229492
    5. '2' → logprob: -17.750028610229492
    6. '+' → logprob: -18.125028610229492
    7. '```' → logprob: -18.125028610229492
    8. ')' → logprob: -18.687528610229492
    9. '

' → logprob: -18.750028610229492
    10. 'k' → logprob: -19.437528610229492

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -18.0000057220459
    4. '   ' → logprob: -19.0000057220459
    5. ')' → logprob: -19.5625057220459
    6. '```' → logprob: -20.0000057220459
    7. '
' → logprob: -20.3125057220459
    8. '１' → logprob: -20.4375057220459
    9. '۱' → logprob: -20.7500057220459
    10. 'k' → logprob: -20.7500057220459

Token 417: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03376257047057152
    2. '):
' → logprob: -3.4087624549865723
    3. ':' → logprob: -9.65876293182373
    4. ')' → logprob: -10.53376293182373
    5. '):
' → logprob: -11.28376293182373
    6. ' ):' → logprob: -11.90876293182373
    7. '+' → logprob: -12.40876293182373
    8. ',' → logprob: -14.15876293182373
    9. '   ' → logprob: -14.65876293182373
    10. '*' → logprob: -15.03376293182373

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012863060692325234
    2. 're' → logprob: -7.251286506652832
    3. ' re' → logprob: -7.626286506652832
    4. 'res' → logprob: -10.376286506652832
    5. 'for' → logprob: -11.626286506652832
    6. ' for' → logprob: -11.876286506652832
    7. 'if' → logprob: -11.876286506652832
    8. '	re' → logprob: -12.001286506652832
    9. ' if' → logprob: -12.126286506652832
    10. ' comb' → logprob: -12.376286506652832

Token 419: ' s' (ID: 265)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.9969316124916077
    2. '   ' → logprob: -1.121931552886963
    3. 'val' → logprob: -2.371931552886963
    4. 'res' → logprob: -2.996931552886963
    5. ' re' → logprob: -3.371931552886963
    6. 'temp' → logprob: -3.496931552886963
    7. 'tmp' → logprob: -3.496931552886963
    8. 'for' → logprob: -3.746931552886963
    9. 'c' → logprob: -4.621931552886963
    10. 'term' → logprob: -4.746931552886963

Token 420: 'gn' (ID: 5900)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035788148641586304
    2. ' =' → logprob: -3.910788059234619
    3. '=re' → logprob: -4.910788059234619
    4. 'ub' → logprob: -5.660788059234619
    5. '=(' → logprob: -7.160788059234619
    6. '+=' → logprob: -7.160788059234619
    7. 'um' → logprob: -7.285788059234619
    8. 'ign' → logprob: -7.660788059234619
    9. 'u' → logprob: -8.660788536071777
    10. '=k' → logprob: -8.785788536071777

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889066636562347
    2. ' =' → logprob: -2.578890562057495
    3. 'k' → logprob: -15.578890800476074
    4. '=k' → logprob: -15.953890800476074
    5. ' ' → logprob: -16.453889846801758
    6. 'if' → logprob: -16.578889846801758
    7. 'n' → logprob: -16.703889846801758
    8. 'gn' → logprob: -16.703889846801758
    9. '=(-' → logprob: -16.953889846801758
    10. '=-' → logprob: -17.078889846801758

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08239708095788956
    2. '(-' → logprob: -3.207396984100342
    3. '-' → logprob: -3.332396984100342
    4. '(' → logprob: -6.582396984100342
    5. ' ' → logprob: -6.707396984100342
    6. ' (-' → logprob: -8.9573974609375
    7. ' -' → logprob: -9.2073974609375
    8. '   ' → logprob: -9.9573974609375
    9. 'pow' → logprob: -10.9573974609375
    10. '((-' → logprob: -11.4573974609375

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08693037927150726
    2. '-' → logprob: -2.836930274963379
    3. '(-' → logprob: -3.711930274963379
    4. '(' → logprob: -8.461930274963379
    5. 'pow' → logprob: -12.086930274963379
    6. '((-' → logprob: -12.836930274963379
    7. ' ' → logprob: -13.086930274963379
    8. ' -' → logprob: -14.711930274963379
    9. ' (-' → logprob: -15.461930274963379
    10. '   ' → logprob: -15.711930274963379

Token 424: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05427929013967514
    2. '   ' → logprob: -3.804279327392578
    3. 'if' → logprob: -4.429279327392578
    4. '
' → logprob: -4.929279327392578
    5. '<|end|>' → logprob: -4.929279327392578
    6. '	if' → logprob: -6.679279327392578
    7. '-' → logprob: -7.179279327392578
    8. ' ' → logprob: -7.304279327392578
    9. ' *' → logprob: -8.179279327392578
    10. '*' → logprob: -8.429279327392578

Token 425: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0020150020718574524
    2. '(k' → logprob: -6.252015113830566
    3. ' k' → logprob: -9.752015113830566
    4. '(' → logprob: -11.252015113830566
    5. ' (' → logprob: -11.877015113830566
    6. '(-' → logprob: -12.002015113830566
    7. '   ' → logprob: -13.877015113830566
    8. '((' → logprob: -14.752015113830566
    9. '(n' → logprob: -15.127015113830566
    10. ' ' → logprob: -15.752015113830566

Token 426: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.011048408225178719
    2. ' %' → logprob: -4.511048316955566
    3. '%
' → logprob: -15.511048316955566
    4. ' ' → logprob: -15.636048316955566
    5. '==' → logprob: -16.386049270629883
    6. '
' → logprob: -17.261049270629883
    7. '```' → logprob: -17.511049270629883
    8. ' ' → logprob: -17.636049270629883
    9. '％' → logprob: -18.011049270629883
    10. '\' → logprob: -18.386049270629883

Token 427: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '4' → logprob: -17.625017166137695
    4. '(' → logprob: -18.125017166137695
    5. '   ' → logprob: -18.250017166137695
    6. '==' → logprob: -18.500017166137695
    7. '  ' → logprob: -18.875017166137695
    8. '
' → logprob: -19.000017166137695
    9. '```' → logprob: -19.437517166137695
    10. '=' → logprob: -19.812517166137695

Token 428: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '4' → logprob: -18.625
    4. '```' → logprob: -20.375
    5. '   ' → logprob: -21.5
    6. '
' → logprob: -21.875
    7. '==' → logprob: -22.25
    8. '۲' → logprob: -22.75
    9. '２' → logprob: -23.0
    10. '  ' → logprob: -23.0625

Token 429: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00026455431361682713
    2. ' ==' → logprob: -8.250264167785645
    3. '==
' → logprob: -13.500264167785645
    4. 'else' → logprob: -13.625264167785645
    5. '=' → logprob: -14.625264167785645
    6. '()==' → logprob: -16.12526512145996
    7. '===' → logprob: -17.25026512145996
    8. '0' → logprob: -17.87526512145996
    9. '```' → logprob: -17.87526512145996
    10. ' else' → logprob: -18.00026512145996

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.250001907348633
    4. '1' → logprob: -18.750001907348633
    5. '00' → logprob: -19.750001907348633
    6. '```' → logprob: -20.125001907348633
    7. '   ' → logprob: -21.125001907348633
    8. 'k' → logprob: -21.250001907348633
    9. '۰' → logprob: -21.375001907348633
    10. '000' → logprob: -21.375001907348633

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -11.750007629394531
    3. ' ' → logprob: -16.25000762939453
    4. '1' → logprob: -18.25000762939453
    5. '```' → logprob: -18.50000762939453
    6. '00' → logprob: -19.87500762939453
    7. '
' → logprob: -20.75000762939453
    8. '۰' → logprob: -21.25000762939453
    9. '4' → logprob: -21.62500762939453
    10. '000' → logprob: -21.87500762939453

Token 432: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47407984733581543
    2. ' else' → logprob: -0.9740798473358154
    3. '	else' → logprob: -13.099080085754395
    4. '   ' → logprob: -15.724080085754395
    5. ' ' → logprob: -15.849080085754395
    6. '```' → logprob: -15.849080085754395
    7. '<|end|>' → logprob: -16.099079132080078
    8. '*' → logprob: -17.099079132080078
    9. '  ' → logprob: -17.099079132080078
    10. '_else' → logprob: -17.224079132080078

Token 433: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.494741632603109e-05
    2. ' -' → logprob: -9.37508487701416
    3. '(-' → logprob: -17.875085830688477
    4. '\-' → logprob: -18.375085830688477
    5. '−' → logprob: -18.750085830688477
    6. '```' → logprob: -19.500085830688477
    7. '   ' → logprob: -19.750085830688477
    8. '1' → logprob: -20.625085830688477
    9. ' ' → logprob: -20.750085830688477
    10. '‑' → logprob: -21.125085830688477

Token 434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'sg' → logprob: -15.875
    3. ' ' → logprob: -16.0
    4. '```' → logprob: -18.75
    5. 'k' → logprob: -19.875
    6. 's' → logprob: -20.375
    7. '<|end|>' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. '-' → logprob: -20.75
    10. 'sign' → logprob: -21.25

Token 435: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002574057725723833
    2. '    
' → logprob: -9.25025749206543
    3. '
' → logprob: -9.50025749206543
    4. 're' → logprob: -10.25025749206543
    5. '  ' → logprob: -10.50025749206543
    6. ' re' → logprob: -12.12525749206543
    7. '   
' → logprob: -12.25025749206543
    8. '  
' → logprob: -12.62525749206543
    9. '    ' → logprob: -13.12525749206543
    10. ',' → logprob: -13.62525749206543

Token 436: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012321392074227333
    2. '
' → logprob: -5.012321472167969
    3. 're' → logprob: -5.762321472167969
    4. '    
' → logprob: -6.637321472167969
    5. '*' → logprob: -8.262321472167969
    6. ' re' → logprob: -8.637321472167969
    7. '  ' → logprob: -8.762321472167969
    8. '   
' → logprob: -8.762321472167969
    9. ' 
' → logprob: -9.137321472167969
    10. '  
' → logprob: -9.137321472167969

Token 437: ' altern' (ID: 7310)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.41539284586906433
    2. ' re' → logprob: -2.5403928756713867
    3. 'comb' → logprob: -2.7903928756713867
    4. 'val' → logprob: -2.9153928756713867
    5. '   ' → logprob: -3.0403928756713867
    6. 'c' → logprob: -3.4153928756713867
    7. 'res' → logprob: -4.415392875671387
    8. 'C' → logprob: -4.915392875671387
    9. 'sg' → logprob: -5.415392875671387
    10. 'tmp' → logprob: -5.540392875671387

Token 438: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.4485871195793152
    2. 'e' → logprob: -1.57358717918396
    3. 'ate' → logprob: -2.69858717918396
    4. '-' → logprob: -2.82358717918396
    5. 'ating' → logprob: -5.073586940765381
    6. 'er' → logprob: -5.198586940765381
    7. '+' → logprob: -5.573586940765381
    8. '=' → logprob: -6.073586940765381
    9. '   ' → logprob: -6.448586940765381
    10. '#' → logprob: -6.573586940765381

Token 439: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.8206473871250637e-05
    2. '    
' → logprob: -11.625028610229492
    3. 're' → logprob: -12.250028610229492
    4. '
' → logprob: -12.375028610229492
    5. '  ' → logprob: -12.875028610229492
    6. '   ' → logprob: -13.000028610229492
    7. ',' → logprob: -14.125028610229492
    8. ' re' → logprob: -14.250028610229492
    9. '<|end|>' → logprob: -14.750028610229492
    10. ')' → logprob: -14.750028610229492

Token 440: ' signes' (ID: 133923)
  Prédit: 'sg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sg' → logprob: -0.0001967457792488858
    2. 'sign' → logprob: -8.75019645690918
    3. '1' → logprob: -10.62519645690918
    4. '(' → logprob: -12.37519645690918
    5. '(-' → logprob: -13.12519645690918
    6. ' ' → logprob: -13.50019645690918
    7. ' sg' → logprob: -13.62519645690918
    8. '   ' → logprob: -14.00019645690918
    9. ' signs' → logprob: -14.25019645690918
    10. ' s' → logprob: -14.37519645690918

Token 441: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008531087078154087
    2. 're' → logprob: -7.750853061676025
    3. ' re' → logprob: -9.000853538513184
    4. '  ' → logprob: -9.000853538513184
    5. '<|end|>' → logprob: -9.375853538513184
    6. '    
' → logprob: -10.375853538513184
    7. '	re' → logprob: -11.250853538513184
    8. '    ' → logprob: -11.625853538513184
    9. ' ' → logprob: -11.750853538513184
    10. ',' → logprob: -11.875853538513184

Token 442: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028637763112783432
    2. 're' → logprob: -3.778637647628784
    3. ' re' → logprob: -5.653637886047363
    4. 'res' → logprob: -7.778637886047363
    5. 'val' → logprob: -8.153637886047363
    6. 'count' → logprob: -8.528637886047363
    7. 'result' → logprob: -8.778637886047363
    8. '    
' → logprob: -9.403637886047363
    9. '  ' → logprob: -9.778637886047363
    10. 'comb' → logprob: -9.778637886047363

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00040791230276227
    2. 're' → logprob: -8.125408172607422
    3. ' re' → logprob: -9.250408172607422
    4. '    
' → logprob: -11.500408172607422
    5. '	re' → logprob: -13.250408172607422
    6. '   ' → logprob: -14.375408172607422
    7. '  ' → logprob: -14.625408172607422
    8. 'res' → logprob: -15.125408172607422
    9. 'result' → logprob: -15.250408172607422
    10. '    ' → logprob: -15.250408172607422

Token 444: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3184835910797119
    2. 'term' → logprob: -2.318483591079712
    3. 're' → logprob: -3.318483591079712
    4. 'tmp' → logprob: -3.443483591079712
    5. 'c' → logprob: -3.818483591079712
    6. 'temp' → logprob: -3.818483591079712
    7. 'res' → logprob: -3.943483591079712
    8. 'comb' → logprob: -3.943483591079712
    9. ' val' → logprob: -5.568483352661133
    10. ' term' → logprob: -5.943483352661133

Token 445: ' je' (ID: 1264)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8466370701789856
    2. 'term' → logprob: -1.5966370105743408
    3. 'temp' → logprob: -2.596637010574341
    4. 'comb' → logprob: -2.596637010574341
    5. 'tmp' → logprob: -2.721637010574341
    6. 'c' → logprob: -2.971637010574341
    7. 're' → logprob: -3.221637010574341
    8. 'res' → logprob: -4.34663724899292
    9. 'cur' → logprob: -4.59663724899292
    10. 'coef' → logprob: -4.72163724899292

Token 446: ' suis' (ID: 15058)
  Prédit: ' re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' re' → logprob: -0.30280572175979614
    2. 're' → logprob: -1.6778056621551514
    3. ' continue' → logprob: -3.9278056621551514
    4. 'continue' → logprob: -4.3028059005737305
    5. 's' → logprob: -5.1778059005737305
    6. '=re' → logprob: -6.0528059005737305
    7. 'res' → logprob: -6.1778059005737305
    8. ' =' → logprob: -6.1778059005737305
    9. 'r' → logprob: -6.1778059005737305
    10. ' rep' → logprob: -6.3028059005737305

Token 447: ' pas' (ID: 2173)
  Prédit: ' sûr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.29012399911880493
    2. '   ' → logprob: -2.54012393951416
    3. ' ravi' → logprob: -3.91512393951416
    4. ' ' → logprob: -4.16512393951416
    5. ' content' → logprob: -4.29012393951416
    6. 's' → logprob: -4.29012393951416
    7. 're' → logprob: -4.79012393951416
    8. 'content' → logprob: -4.79012393951416
    9. 'con' → logprob: -4.79012393951416
    10. '=' → logprob: -5.16512393951416

Token 448: ' sûr' (ID: 46415)
  Prédit: ' sûr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.8949525952339172
    2. 's' → logprob: -1.5199525356292725
    3. 'certain' → logprob: -1.6449525356292725
    4. 'sur' → logprob: -2.7699525356292725
    5. ' ' → logprob: -2.7699525356292725
    6. 'sure' → logprob: -4.144952774047852
    7. '   ' → logprob: -4.269952774047852
    8. 'tout' → logprob: -5.019952774047852
    9. 'for' → logprob: -5.769952774047852
    10. 'conv' → logprob: -5.894952774047852

Token 449: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004913145676255226
    2. ' re' → logprob: -8.62549114227295
    3. '<|end|>' → logprob: -9.12549114227295
    4. '  ' → logprob: -9.37549114227295
    5. ',' → logprob: -10.37549114227295
    6. 're' → logprob: -10.75049114227295
    7. '    ' → logprob: -10.87549114227295
    8. ' for' → logprob: -11.25049114227295
    9. ' ' → logprob: -11.25049114227295
    10. '    
' → logprob: -12.00049114227295

Token 450: '’avoir' (ID: 58091)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.072440266609192
    2. 'la' → logprob: -1.322440266609192
    3. ' range' → logprob: -1.947440266609192
    4. '   ' → logprob: -3.0724401473999023
    5. ' la' → logprob: -3.0724401473999023
    6. 'a' → logprob: -3.3224401473999023
    7. '(' → logprob: -3.6974401473999023
    8. '(range' → logprob: -3.9474401473999023
    9. 're' → logprob: -4.072440147399902
    10. ''avoir' → logprob: -4.572440147399902

Token 451: ' bien' (ID: 5340)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.2350660562515259
    2. 'comb' → logprob: -1.2350660562515259
    3. 'com' → logprob: -2.3600659370422363
    4. ' (' → logprob: -2.7350659370422363
    5. ' k' → logprob: -3.2350659370422363
    6. 'k' → logprob: -3.2350659370422363
    7. '(com' → logprob: -3.3600659370422363
    8. ' la' → logprob: -3.6100659370422363
    9. ' m' → logprob: -3.7350659370422363
    10. '(' → logprob: -4.235065937042236

Token 452: ' tout' (ID: 5501)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.32236358523368835
    2. 're' → logprob: -1.5723636150360107
    3. ' compris' → logprob: -2.8223636150360107
    4. 'for' → logprob: -6.322363376617432
    5. 'compr' → logprob: -6.822363376617432
    6. 'calcul' → logprob: -6.822363376617432
    7. '   ' → logprob: -7.322363376617432
    8. 'la' → logprob: -7.447363376617432
    9. '
' → logprob: -8.19736385345459
    10. '```' → logprob: -8.19736385345459

Token 453: ' suivi' (ID: 60370)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04462050646543503
    2. ' de' → logprob: -4.044620513916016
    3. ' compris' → logprob: -4.919620513916016
    4. 'de' → logprob: -5.294620513916016
    5. 'com' → logprob: -5.669620513916016
    6. 'calcul' → logprob: -6.169620513916016
    7. ' ' → logprob: -6.544620513916016
    8. 're' → logprob: -6.919620513916016
    9. '  ' → logprob: -7.044620513916016
    10. '    ' → logprob: -7.544620513916016

Token 454: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002502535644453019
    2. ' re' → logprob: -9.000249862670898
    3. '    
' → logprob: -9.875249862670898
    4. 're' → logprob: -10.250249862670898
    5. '<|end|>' → logprob: -11.000249862670898
    6. '   ' → logprob: -11.875249862670898
    7. ',' → logprob: -12.125249862670898
    8. '
' → logprob: -12.625249862670898
    9. '  ' → logprob: -13.875249862670898
    10. '```' → logprob: -14.000249862670898

Token 455: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005959240952506661
    2. 're' → logprob: -8.000596046447754
    3. ' re' → logprob: -8.500596046447754
    4. '    
' → logprob: -10.875596046447754
    5. '   ' → logprob: -11.000596046447754
    6. ',' → logprob: -12.250596046447754
    7. '  ' → logprob: -12.500596046447754
    8. 'res' → logprob: -13.125596046447754
    9. '    ' → logprob: -13.500596046447754
    10. '	re' → logprob: -13.625596046447754

Token 456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022217432036995888
    2. 'val' → logprob: -5.272217273712158
    3. 'res' → logprob: -5.397217273712158
    4. ' res' → logprob: -5.647217273712158
    5. ' val' → logprob: -6.397217273712158
    6. 're' → logprob: -6.522217273712158
    7. ' re' → logprob: -6.897217273712158
    8. ' comb' → logprob: -7.147217273712158
    9. ' term' → logprob: -7.147217273712158
    10. 'term' → logprob: -7.272217273712158

Token 457: ' add' (ID: 1147)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7491981387138367
    2. 'term' → logprob: -1.4991981983184814
    3. '   ' → logprob: -2.7491981983184814
    4. 'temp' → logprob: -2.8741981983184814
    5. 'tmp' → logprob: -2.8741981983184814
    6. 'comb' → logprob: -3.6241981983184814
    7. ' term' → logprob: -3.8741981983184814
    8. 'res' → logprob: -4.124197959899902
    9. 're' → logprob: -4.124197959899902
    10. 'c' → logprob: -4.374197959899902

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09317890554666519
    2. 'ition' → logprob: -2.9681789875030518
    3. '=' → logprob: -3.5931789875030518
    4. '   ' → logprob: -4.718178749084473
    5. 'endum' → logprob: -8.093178749084473
    6. 'itional' → logprob: -8.843178749084473
    7. 'end' → logprob: -8.968178749084473
    8. '_' → logprob: -9.218178749084473
    9. 'ing' → logprob: -9.843178749084473
    10. '  ' → logprob: -10.093178749084473

Token 459: ' s' (ID: 265)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.15092363953590393
    2. 'sg' → logprob: -2.150923728942871
    3. 'pow' → logprob: -4.525923728942871
    4. ' comb' → logprob: -4.775923728942871
    5. '(' → logprob: -6.525923728942871
    6. 'com' → logprob: -7.275923728942871
    7. '   ' → logprob: -7.775923728942871
    8. '(com' → logprob: -7.775923728942871
    9. ' s' → logprob: -7.775923728942871
    10. ' pow' → logprob: -9.025923728942871

Token 460: 'gn' (ID: 5900)
  Prédit: 'gn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gn' → logprob: -0.07674146443605423
    2. 'g' → logprob: -2.8267414569854736
    3. 'ponse' → logprob: -4.576741695404053
    4. 'p' → logprob: -6.326741695404053
    5. 'pow' → logprob: -6.576741695404053
    6. 'um' → logprob: -8.826741218566895
    7. 'sg' → logprob: -9.076741218566895
    8. 'gm' → logprob: -9.201741218566895
    9. 'igne' → logprob: -9.451741218566895
    10. 'gv' → logprob: -9.701741218566895

Token 461: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08895517885684967
    2. '*' → logprob: -2.4639551639556885
    3. ' ' → logprob: -11.96395492553711
    4. ' ' → logprob: -12.83895492553711
    5. '   ' → logprob: -13.08895492553711
    6. '**' → logprob: -14.08895492553711
    7. '```' → logprob: -14.08895492553711
    8. ',' → logprob: -14.58895492553711
    9. '*(' → logprob: -14.77645492553711
    10. ' **' → logprob: -15.52645492553711

Token 462: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.003408582415431738
    2. 'pow' → logprob: -6.003408432006836
    3. ' comb' → logprob: -7.378408432006836
    4. 'com' → logprob: -8.628408432006836
    5. 'fact' → logprob: -10.128408432006836
    6. '(' → logprob: -10.503408432006836
    7. 'p' → logprob: -11.003408432006836
    8. '(com' → logprob: -11.628408432006836
    9. ' pow' → logprob: -12.128408432006836
    10. '   ' → logprob: -12.128408432006836

Token 463: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.01610018126666546
    2. '(n' → logprob: -4.1411004066467285
    3. 'm' → logprob: -9.89109992980957
    4. '(' → logprob: -11.64109992980957
    5. 'n' → logprob: -12.39109992980957
    6. '(k' → logprob: -13.64109992980957
    7. '((' → logprob: -15.39109992980957
    8. '(s' → logprob: -15.51609992980957
    9. ' (' → logprob: -15.64109992980957
    10. '(
' → logprob: -15.64109992980957

Token 464: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09100546687841415
    2. '(k' → logprob: -2.466005563735962
    3. ',k' → logprob: -7.216005325317383
    4. ' k' → logprob: -7.966005325317383
    5. '(m' → logprob: -8.091005325317383
    6. 'm' → logprob: -8.216005325317383
    7. ',' → logprob: -8.716005325317383
    8. '(' → logprob: -9.216005325317383
    9. '(n' → logprob: -10.341005325317383
    10. '   ' → logprob: -10.591005325317383

Token 465: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.623244553338736e-05
    2. ' k' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.62506675720215
    4. ' ' → logprob: -17.00006675720215
    5. '
' → logprob: -17.75006675720215
    6. '	k' → logprob: -17.87506675720215
    7. ')' → logprob: -18.12506675720215
    8. '(k' → logprob: -18.37506675720215
    9. '{k' → logprob: -19.50006675720215
    10. ',k' → logprob: -19.87506675720215

Token 466: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9146995327901095e-05
    2. '())' → logprob: -12.125019073486328
    3. '()' → logprob: -13.000019073486328
    4. ')*' → logprob: -13.125019073486328
    5. ' )' → logprob: -13.125019073486328
    6. '```' → logprob: -13.375019073486328
    7. ')
' → logprob: -13.500019073486328
    8. '`)' → logprob: -13.875019073486328
    9. '   ' → logprob: -14.375019073486328
    10. 'm' → logprob: -14.625019073486328

Token 467: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1089276671409607
    2. '*' → logprob: -2.3589277267456055
    3. '   ' → logprob: -4.8589277267456055
    4. 'pow' → logprob: -7.8589277267456055
    5. '*p' → logprob: -8.233927726745605
    6. ' pow' → logprob: -9.733927726745605
    7. '*(' → logprob: -9.858927726745605
    8. 're' → logprob: -10.108927726745605
    9. '  ' → logprob: -10.483927726745605
    10. ' ' → logprob: -10.983927726745605

Token 468: ' comb' (ID: 4134)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.23132838308811188
    2. 'p' → logprob: -2.1063284873962402
    3. 'comb' → logprob: -2.6063284873962402
    4. '(p' → logprob: -5.10632848739624
    5. 'my' → logprob: -6.85632848739624
    6. 'com' → logprob: -6.98132848739624
    7. '(pow' → logprob: -6.98132848739624
    8. '((' → logprob: -7.23132848739624
    9. 'fact' → logprob: -7.85632848739624
    10. '(com' → logprob: -8.481328010559082

Token 469: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0007518553175032139
    2. '(' → logprob: -8.250751495361328
    3. '(n' → logprob: -8.250751495361328
    4. '((' → logprob: -8.875751495361328
    5. 'm' → logprob: -9.375751495361328
    6. '2' → logprob: -13.625751495361328
    7. ' (' → logprob: -14.000751495361328
    8. '(
' → logprob: -14.125751495361328
    9. '(k' → logprob: -14.875751495361328
    10. '(pow' → logprob: -15.375751495361328

Token 470: ',' (ID: 11)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.7138755321502686
    2. 'k' → logprob: -1.7138755321502686
    3. '(k' → logprob: -1.9638755321502686
    4. ',' → logprob: -2.4638755321502686
    5. ',k' → logprob: -2.7138755321502686
    6. '(n' → logprob: -3.7138755321502686
    7. ' -' → logprob: -5.088875770568848
    8. '(m' → logprob: -5.713875770568848
    9. '-' → logprob: -6.838875770568848
    10. 'n' → logprob: -6.963875770568848

Token 471: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31422650814056396
    2. 'n' → logprob: -1.314226508140564
    3. 'm' → logprob: -7.5642266273498535
    4. '(n' → logprob: -8.439226150512695
    5. ' n' → logprob: -8.689226150512695
    6. ' k' → logprob: -10.189226150512695
    7. '2' → logprob: -11.689226150512695
    8. '(k' → logprob: -12.564226150512695
    9. ' ' → logprob: -13.064226150512695
    10. 'nk' → logprob: -13.064226150512695

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -12.125016212463379
    3. 'k' → logprob: -13.250016212463379
    4. ' )' → logprob: -13.375016212463379
    5. '[k' → logprob: -13.375016212463379
    6. '')' → logprob: -14.000016212463379
    7. '")' → logprob: -14.375016212463379
    8. '[' → logprob: -14.625016212463379
    9. '))' → logprob: -14.625016212463379
    10. '())' → logprob: -14.875016212463379

Token 473: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.23856088519096375
    2. '*' → logprob: -1.6135609149932861
    3. '   ' → logprob: -4.988560676574707
    4. '%' → logprob: -6.363560676574707
    5. '*p' → logprob: -6.363560676574707
    6. 'pow' → logprob: -6.613560676574707
    7. ' %' → logprob: -8.238560676574707
    8. ')' → logprob: -8.613560676574707
    9. ' pow' → logprob: -8.863560676574707
    10. '  ' → logprob: -8.863560676574707

Token 474: ' facto' (ID: 73147)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.000785091076977551
    2. 'pow' → logprob: -8.000784873962402
    3. 'p' → logprob: -8.250784873962402
    4. 'f' → logprob: -10.375784873962402
    5. 'fac' → logprob: -10.375784873962402
    6. ' facto' → logprob: -10.375784873962402
    7. 'factor' → logprob: -10.875784873962402
    8. 'k' → logprob: -11.375784873962402
    9. ' fact' → logprob: -11.375784873962402
    10. '   ' → logprob: -11.750784873962402

Token 475: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.017446136102080345
    2. '[m' → logprob: -4.267446041107178
    3. '[n' → logprob: -5.892446041107178
    4. 'k' → logprob: -7.767446041107178
    5. '(k' → logprob: -9.392446517944336
    6. '(m' → logprob: -12.642446517944336
    7. '[' → logprob: -13.392446517944336
    8. '{k' → logprob: -13.392446517944336
    9. 'm' → logprob: -14.142446517944336
    10. '(n' → logprob: -14.267446517944336

Token 476: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028080830816179514
    2. ']%' → logprob: -6.127808094024658
    3. '])' → logprob: -7.752808094024658
    4. ']
' → logprob: -8.7528076171875
    5. ')' → logprob: -10.8778076171875
    6. ' ]' → logprob: -12.1278076171875
    7. '   ' → logprob: -13.1278076171875
    8. ']
' → logprob: -13.3778076171875
    9. ']*' → logprob: -14.0028076171875
    10. '%' → logprob: -14.3778076171875

Token 477: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47373726963996887
    2. '%' → logprob: -1.5987372398376465
    3. ' %' → logprob: -2.5987372398376465
    4. '
' → logprob: -3.0987372398376465
    5. ')' → logprob: -3.4737372398376465
    6. '    
' → logprob: -5.3487372398376465
    7. ' *' → logprob: -5.4737372398376465
    8. ' 
' → logprob: -5.5987372398376465
    9. '<|end|>' → logprob: -5.5987372398376465
    10. 're' → logprob: -6.3487372398376465

Token 478: ' pow' (ID: 9779)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38776665925979614
    2. 'pow' → logprob: -1.1377665996551514
    3. '(p' → logprob: -8.01276683807373
    4. 'my' → logprob: -9.13776683807373
    5. 'fact' → logprob: -9.38776683807373
    6. ' pow' → logprob: -9.38776683807373
    7. ' p' → logprob: -9.76276683807373
    8. '(' → logprob: -9.76276683807373
    9. '   ' → logprob: -9.88776683807373
    10. '(pow' → logprob: -9.88776683807373

Token 479: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04345813766121864
    2. '(m' → logprob: -3.6684582233428955
    3. '(n' → logprob: -4.168457984924316
    4. 'n' → logprob: -6.793457984924316
    5. 'k' → logprob: -8.918457984924316
    6. '(k' → logprob: -9.043457984924316
    7. '(' → logprob: -9.918457984924316
    8. '(p' → logprob: -11.168457984924316
    9. ' ' → logprob: -11.418457984924316
    10. 'p' → logprob: -11.543457984924316

Token 480: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.004330303054302931
    2. '[k' → logprob: -5.504330158233643
    3. '_' → logprob: -8.6293306350708
    4. '__[' → logprob: -10.7543306350708
    5. '_k' → logprob: -11.2543306350708
    6. '[' → logprob: -11.5043306350708
    7. 'k' → logprob: -11.7543306350708
    8. '```' → logprob: -12.7543306350708
    9. '[m' → logprob: -13.0043306350708
    10. '[n' → logprob: -13.1293306350708

Token 481: 'n' (ID: 77)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.47504279017448425
    2. '[n' → logprob: -1.4750428199768066
    3. '[k' → logprob: -1.9750428199768066
    4. 'k' → logprob: -4.975042819976807
    5. 'm' → logprob: -6.225042819976807
    6. 'n' → logprob: -6.725042819976807
    7. '[' → logprob: -7.850042819976807
    8. '[i' → logprob: -10.100042343139648
    9. '[max' → logprob: -10.850042343139648
    10. ' [' → logprob: -11.225042343139648

Token 482: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.10598479211330414
    2. ' -' → logprob: -2.605984687805176
    3. '-' → logprob: -3.730984687805176
    4. '-m' → logprob: -7.230984687805176
    5. '-n' → logprob: -7.230984687805176
    6. '[k' → logprob: -7.355984687805176
    7. '-i' → logprob: -9.230984687805176
    8. '[m' → logprob: -9.230984687805176
    9. '[n' → logprob: -9.480984687805176
    10. ']' → logprob: -9.480984687805176

Token 483: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -7.588793960167095e-05
    2. ' k' → logprob: -9.500076293945312
    3. '-k' → logprob: -15.500076293945312
    4. '1' → logprob: -15.625076293945312
    5. '_k' → logprob: -15.750076293945312
    6. '	k' → logprob: -16.125076293945312
    7. ' ' → logprob: -16.375076293945312
    8. 'm' → logprob: -16.625076293945312
    9. '
' → logprob: -17.375076293945312
    10. '   ' → logprob: -17.500076293945312

Token 484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030477242544293404
    2. '])' → logprob: -3.780477285385132
    3. ']%' → logprob: -5.780477046966553
    4. '[k' → logprob: -5.905477046966553
    5. '[m' → logprob: -7.155477046966553
    6. '[n' → logprob: -8.155477523803711
    7. '[' → logprob: -8.780477523803711
    8. ']*' → logprob: -10.405477523803711
    9. '%' → logprob: -10.530477523803711
    10. '-' → logprob: -10.530477523803711

Token 485: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.44174790382385254
    2. '*' → logprob: -1.3167479038238525
    3. '%' → logprob: -2.9417479038238525
    4. '   ' → logprob: -3.6917479038238525
    5. '*p' → logprob: -5.816747665405273
    6. ')' → logprob: -6.066747665405273
    7. ' %' → logprob: -6.066747665405273
    8. '  ' → logprob: -6.316747665405273
    9. '<|end|>' → logprob: -7.441747665405273
    10. 'def' → logprob: -8.316747665405273

Token 486: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010831133840838447
    2. ' p' → logprob: -9.50010871887207
    3. '   ' → logprob: -11.25010871887207
    4. '(p' → logprob: -11.25010871887207
    5. 'pow' → logprob: -12.50010871887207
    6. ' ' → logprob: -13.87510871887207
    7. '  ' → logprob: -14.87510871887207
    8. '       ' → logprob: -14.87510871887207
    9. '(' → logprob: -15.12510871887207
    10. 'fact' → logprob: -15.12510871887207

Token 487: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00021438424300868064
    2. 'wn' → logprob: -8.875214576721191
    3. 'awn' → logprob: -10.500214576721191
    4. 'ow' → logprob: -11.375214576721191
    5. 'Own' → logprob: -11.625214576721191
    6. 'w' → logprob: -11.750214576721191
    7. 'n' → logprob: -11.875214576721191
    8. ' own' → logprob: -12.750214576721191
    9. 'OWN' → logprob: -13.750214576721191
    10. '_' → logprob: -13.750214576721191

Token 488: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.0005986657342873514
    2. '_' → logprob: -7.500598430633545
    3. '[k' → logprob: -11.125598907470703
    4. '[m' → logprob: -11.875598907470703
    5. '[n' → logprob: -12.000598907470703
    6. '__[' → logprob: -12.500598907470703
    7. 'm' → logprob: -13.000598907470703
    8. '`' → logprob: -13.125598907470703
    9. '\' → logprob: -13.250598907470703
    10. '```' → logprob: -13.500598907470703

Token 489: 'm' (ID: 76)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.020640572533011436
    2. 'm' → logprob: -3.8956406116485596
    3. '[n' → logprob: -9.89564037322998
    4. '[' → logprob: -11.27064037322998
    5. '[k' → logprob: -11.52064037322998
    6. '   ' → logprob: -11.77064037322998
    7. ' [' → logprob: -11.77064037322998
    8. '(m' → logprob: -12.39564037322998
    9. ' m' → logprob: -13.77064037322998
    10. '{' → logprob: -13.89564037322998

Token 490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4128994047641754
    2. ' -' → logprob: -1.162899374961853
    3. '-k' → logprob: -3.6628994941711426
    4. '[' → logprob: -11.412899017333984
    5. ' ' → logprob: -11.537899017333984
    6. '-n' → logprob: -11.537899017333984
    7. '[-' → logprob: -13.412899017333984
    8. '[k' → logprob: -13.787899017333984
    9. 'k' → logprob: -14.912899017333984
    10. '[n' → logprob: -15.412899017333984

Token 491: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002907718007918447
    2. ' k' → logprob: -8.375290870666504
    3. '(n' → logprob: -10.625290870666504
    4. 'n' → logprob: -11.125290870666504
    5. '(k' → logprob: -11.250290870666504
    6. ' (' → logprob: -13.625290870666504
    7. ' ' → logprob: -13.750290870666504
    8. '[k' → logprob: -13.875290870666504
    9. '
' → logprob: -14.000290870666504
    10. '   ' → logprob: -14.125290870666504

Token 492: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004146068822592497
    2. '[k' → logprob: -5.754146099090576
    3. '[' → logprob: -7.504146099090576
    4. '[i' → logprob: -9.379145622253418
    5. '])' → logprob: -9.379145622253418
    6. ']%' → logprob: -9.504145622253418
    7. ')' → logprob: -10.004145622253418
    8. 'k' → logprob: -10.004145622253418
    9. '[n' → logprob: -10.254145622253418
    10. ' ]' → logprob: -11.129145622253418

Token 493: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08089050650596619
    2. 're' → logprob: -2.705890417098999
    3. '
' → logprob: -4.830890655517578
    4. ' re' → logprob: -6.705890655517578
    5. '	re' → logprob: -7.080890655517578
    6. '+' → logprob: -7.955890655517578
    7. '    
' → logprob: -8.580890655517578
    8. '_re' → logprob: -9.580890655517578
    9. ' 
' → logprob: -10.205890655517578
    10. '  ' → logprob: -10.330890655517578

Token 494: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' (adapté à ' re') → logprob: -0.000432695698691532
    2. '   ' → logprob: -8.125432968139648
    3. ' re' → logprob: -9.125432968139648
    4. '	re' → logprob: -11.250432968139648
    5. '
' → logprob: -12.000432968139648
    6. 'add' → logprob: -12.500432968139648
    7. '(re' → logprob: -13.500432968139648
    8. '    
' → logprob: -13.875432968139648
    9. '_re' → logprob: -14.625432968139648
    10. '+' → logprob: -14.625432968139648

Token 495: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.008647779934108257
    2. 's' → logprob: -4.758647918701172
    3. 'pon' → logprob: -10.508647918701172
    4. 'response' → logprob: -12.383647918701172
    5. 'sp' → logprob: -14.008647918701172
    6. 'ponde' → logprob: -15.383647918701172
    7. 'p' → logprob: -15.508647918701172
    8. 'ponses' → logprob: -15.758647918701172
    9. 'ss' → logprob: -16.258647918701172
    10. 'SPONSE' → logprob: -16.383647918701172

Token 496: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.11337228864431381
    2. ' +=' → logprob: -2.238372325897217
    3. '=' → logprob: -7.613372325897217
    4. '+' → logprob: -10.738371849060059
    5. ' =' → logprob: -11.363371849060059
    6. '%=' → logprob: -11.738371849060059
    7. ']+=' → logprob: -12.113371849060059
    8. '```' → logprob: -12.488371849060059
    9. '   ' → logprob: -13.488371849060059
    10. ' %=' → logprob: -13.738371849060059

Token 497: ' (' (ID: 350)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0015540247550234199
    2. ' (' → logprob: -6.626554012298584
    3. '(' → logprob: -8.876554489135742
    4. '(res' → logprob: -9.376554489135742
    5. '(r' → logprob: -14.126554489135742
    6. '   ' → logprob: -14.251554489135742
    7. '(rep' → logprob: -14.251554489135742
    8. '(Re' → logprob: -14.626554489135742
    9. 're' → logprob: -15.251554489135742
    10. '(response' → logprob: -15.501554489135742

Token 498: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.027290040627121925
    2. '(re' → logprob: -3.652290105819702
    3. ' re' → logprob: -7.027289867401123
    4. ' (' → logprob: -10.027290344238281
    5. 'response' → logprob: -11.027290344238281
    6. '   ' → logprob: -11.402290344238281
    7. '(response' → logprob: -11.777290344238281
    8. 'ré' → logprob: -12.277290344238281
    9. '(' → logprob: -12.402290344238281
    10. '	re' → logprob: -12.777290344238281

Token 499: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.0004472348664421588
    2. 's' → logprob: -8.000447273254395
    3. 'pon' → logprob: -9.125447273254395
    4. 'pons' → logprob: -14.250447273254395
    5. 'ponde' → logprob: -14.375447273254395
    6. 'sp' → logprob: -14.500447273254395
    7. 'response' → logprob: -15.250447273254395
    8. 'p' → logprob: -15.625447273254395
    9. 'ponses' → logprob: -15.750447273254395
    10. 'pond' → logprob: -16.250446319580078

Token 500: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889000326395035
    2. '+' → logprob: -2.578890085220337
    3. ' ' → logprob: -16.703889846801758
    4. ')' → logprob: -17.078889846801758
    5. ' +
' → logprob: -17.328889846801758
    6. ' ' → logprob: -17.578889846801758
    7. ' plus' → logprob: -17.703889846801758
    8. '＋' → logprob: -18.078889846801758
    9. ' +=' → logprob: -19.078889846801758
    10. ' +
' → logprob: -19.078889846801758

Token 501: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.003178544342517853
    2. ' add' → logprob: -5.753178596496582
    3. '(add' → logprob: -14.503178596496582
    4. '   ' → logprob: -15.753178596496582
    5. ' ' → logprob: -16.253177642822266
    6. '	add' → logprob: -17.378177642822266
    7. ')add' → logprob: -17.378177642822266
    8. '  ' → logprob: -18.628177642822266
    9. '
' → logprob: -18.878177642822266
    10. ')' → logprob: -20.378177642822266

Token 502: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007102862582542002
    2. ' )' → logprob: -7.375710487365723
    3. '%' → logprob: -10.000710487365723
    4. ' %' → logprob: -10.375710487365723
    5. ')%' → logprob: -11.875710487365723
    6. ' ' → logprob: -15.625710487365723
    7. ']' → logprob: -17.250709533691406
    8. '%)' → logprob: -17.500709533691406
    9. '   ' → logprob: -17.625709533691406
    10. ' ' → logprob: -17.750709533691406

Token 503: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25192955136299133
    2. ' %' → logprob: -1.501929521560669
    3. ')' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.001930236816406
    5. '
' → logprob: -16.501930236816406
    6. '%n' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.126930236816406
    8. ' %=' → logprob: -17.626930236816406
    9. '%c' → logprob: -18.376930236816406
    10. ')%' → logprob: -19.001930236816406

Token 504: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.25
    3. '998' → logprob: -16.75
    4. 'MO' → logprob: -21.5
    5. 'MODULE' → logprob: -22.0
    6. 'MODE' → logprob: -22.25
    7. '.MOD' → logprob: -22.625
    8. '_MOD' → logprob: -22.75
    9. ' ' → logprob: -23.25
    10. '   ' → logprob: -24.625

Token 505: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0002681304467841983
    2. 'O' → logprob: -8.25026798248291
    3. 'ULE' → logprob: -12.37526798248291
    4. 'U' → logprob: -14.00026798248291
    5. 'UL' → logprob: -14.62526798248291
    6. 'L' → logprob: -15.12526798248291
    7. 'LO' → logprob: -15.25026798248291
    8. '
' → logprob: -15.37526798248291
    9. 'UB' → logprob: -16.250268936157227
    10. 'ulo' → logprob: -16.250268936157227

Token 506: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00073197390884161
    2. '
' → logprob: -7.250731945037842
    3. ' print' → logprob: -11.125732421875
    4. '

' → logprob: -12.375732421875
    5. '```' → logprob: -13.625732421875
    6. '
' → logprob: -14.500732421875
    7. '  
' → logprob: -14.750732421875
    8. '<|end|>' → logprob: -14.875732421875
    9. ' 
' → logprob: -15.375732421875
    10. '    
' → logprob: -15.875732421875

Token 507: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3902033970225602e-05
    2. '
' → logprob: -11.250014305114746
    3. ' print' → logprob: -14.375014305114746
    4. '```' → logprob: -15.625014305114746
    5. '
' → logprob: -17.00001335144043
    6. '

' → logprob: -17.12501335144043
    7. '    
' → logprob: -18.25001335144043
    8. '  
' → logprob: -19.00001335144043
    9. '#print' → logprob: -19.25001335144043
    10. '<|end|>' → logprob: -19.50001335144043

Token 508: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. ' print' → logprob: -13.12500286102295
    3. '
' → logprob: -14.62500286102295
    4. '

' → logprob: -14.87500286102295
    5. '```' → logprob: -15.87500286102295
    6. ')' → logprob: -18.125003814697266
    7. '
' → logprob: -18.500003814697266
    8. '  
' → logprob: -18.500003814697266
    9. '    
' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 509: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.822646693966817e-06
    2. '
' → logprob: -11.875007629394531
    3. ' print' → logprob: -14.500007629394531
    4. '```' → logprob: -16.12500762939453
    5. '

' → logprob: -16.75000762939453
    6. '#' → logprob: -17.12500762939453
    7. '    
' → logprob: -17.50000762939453
    8. '  
' → logprob: -18.00000762939453
    9. '#print' → logprob: -18.00000762939453
    10. '
' → logprob: -18.75000762939453

Token 510: '(f' (ID: 1526)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.00649190042167902
    2. 're' → logprob: -5.8814921379089355
    3. '()' → logprob: -6.1314921379089355
    4. '(k' → logprob: -6.6314921379089355
    5. '(' → logprob: -9.631491661071777
    6. '("' → logprob: -10.131491661071777
    7. '(response' → logprob: -11.381491661071777
    8. 'k' → logprob: -11.381491661071777
    9. '(s' → logprob: -11.506491661071777
    10. '(f' → logprob: -11.631491661071777

Token 511: '"k' (ID: 141546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8985663652420044
    2. 're' → logprob: -1.0235663652420044
    3. '"' → logprob: -2.273566246032715
    4. '(' → logprob: -3.398566246032715
    5. '")' → logprob: -3.398566246032715
    6. '(re' → logprob: -3.648566246032715
    7. '("' → logprob: -4.773566246032715
    8. 'e' → logprob: -5.273566246032715
    9. '('' → logprob: -5.273566246032715
    10. ')}' → logprob: -5.773566246032715

Token 512: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24513059854507446
    2. ',' → logprob: -1.7451305389404297
    3. '}' → logprob: -4.12013053894043
    4. '={' → logprob: -4.37013053894043
    5. '{' → logprob: -5.37013053894043
    6. ':' → logprob: -5.87013053894043
    7. ' =' → logprob: -6.24513053894043
    8. '},' → logprob: -6.87013053894043
    9. ' ,' → logprob: -6.99513053894043
    10. '=}' → logprob: -7.37013053894043

Token 513: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.2378600735682994e-05
    2. '{k' → logprob: -10.500032424926758
    3. ' k' → logprob: -12.375032424926758
    4. '}' → logprob: -15.750032424926758
    5. '{' → logprob: -16.000032424926758
    6. 'n' → logprob: -16.125032424926758
    7. '```' → logprob: -16.125032424926758
    8. '   ' → logprob: -16.875032424926758
    9. ' ' → logprob: -17.000032424926758
    10. ',k' → logprob: -18.125032424926758

Token 514: '}' (ID: 92)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7175260782241821
    2. ')")' → logprob: -1.0925260782241821
    3. ',' → logprob: -2.3425259590148926
    4. '}")' → logprob: -2.9675259590148926
    5. '")' → logprob: -3.5925259590148926
    6. ' )' → logprob: -7.342525959014893
    7. ')")
' → logprob: -8.59252643585205
    8. ')}' → logprob: -8.84252643585205
    9. '}' → logprob: -8.84252643585205
    10. '),' → logprob: -9.34252643585205

Token 515: ' =>' (ID: 871)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.37050408124923706
    2. ')' → logprob: -1.2455041408538818
    3. ')")' → logprob: -3.870504140853882
    4. '}")' → logprob: -7.495503902435303
    5. ' )' → logprob: -9.620504379272461
    6. ')")
' → logprob: -9.870504379272461
    7. '<|end|>' → logprob: -9.995504379272461
    8. '")
' → logprob: -9.995504379272461
    9. ' ")' → logprob: -10.120504379272461
    10. '')' → logprob: -10.870504379272461

Token 516: ' {' (ID: 354)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09565233439207077
    2. ' re' → logprob: -2.5956523418426514
    3. '{' → logprob: -4.220652103424072
    4. ' {' → logprob: -7.095652103424072
    5. '")' → logprob: -7.220652103424072
    6. '   ' → logprob: -9.09565258026123
    7. ')' → logprob: -9.59565258026123
    8. 'response' → logprob: -10.34565258026123
    9. ' ' → logprob: -10.72065258026123
    10. '}")' → logprob: -10.97065258026123

Token 517: 'add' (ID: 964)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.05504747852683067
    2. 'add' → logprob: -2.9300475120544434
    3. 's' → logprob: -10.555047035217285
    4. ' re' → logprob: -10.805047035217285
    5. '(re' → logprob: -10.805047035217285
    6. '(add' → logprob: -10.805047035217285
    7. 'res' → logprob: -11.430047035217285
    8. 'sg' → logprob: -11.555047035217285
    9. 'response' → logprob: -11.930047035217285
    10. 'repr' → logprob: -12.055047035217285

Token 518: '}")' (ID: 122365)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25733503699302673
    2. ')")' → logprob: -1.5073350667953491
    3. '")' → logprob: -5.632335186004639
    4. '}")' → logprob: -6.507335186004639
    5. ')")
' → logprob: -8.75733470916748
    6. ' )' → logprob: -10.25733470916748
    7. '}' → logprob: -10.25733470916748
    8. ')}' → logprob: -10.25733470916748
    9. ')
' → logprob: -11.38233470916748
    10. ')").' → logprob: -11.50733470916748

Token 519: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.159660890465602e-05
    2. '
' → logprob: -9.62507152557373
    3. ' print' → logprob: -12.75007152557373
    4. '```' → logprob: -13.50007152557373
    5. '

' → logprob: -15.25007152557373
    6. '<|end|>' → logprob: -15.50007152557373
    7. '    
' → logprob: -15.62507152557373
    8. ')' → logprob: -15.75007152557373
    9. ')
' → logprob: -15.75007152557373
    10. '  
' → logprob: -16.000072479248047

Token 520: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.888114098226652e-05
    2. '
' → logprob: -9.375088691711426
    3. ' print' → logprob: -12.875088691711426
    4. '```' → logprob: -14.875088691711426
    5. ')
' → logprob: -15.000088691711426
    6. '

' → logprob: -15.000088691711426
    7. ')' → logprob: -15.625088691711426
    8. '    
' → logprob: -16.125089645385742
    9. '<|end|>' → logprob: -16.625089645385742
    10. '  
' → logprob: -17.250089645385742

Token 521: ' utile' (ID: 68237)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009159822366200387
    2. 'pass' → logprob: -7.375916004180908
    3. '
' → logprob: -9.50091552734375
    4. 're' → logprob: -9.62591552734375
    5. '<|end|>' → logprob: -9.87591552734375
    6. 'continue' → logprob: -10.75091552734375
    7. '```' → logprob: -10.75091552734375
    8. '...' → logprob: -10.87591552734375
    9. '#' → logprob: -11.25091552734375
    10. ' print' → logprob: -11.50091552734375

Token 522: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. '```' → logprob: -13.375003814697266
    3. ' print' → logprob: -13.500003814697266
    4. '
' → logprob: -14.000003814697266
    5. ')' → logprob: -17.500003814697266
    6. '<|end|>' → logprob: -17.875003814697266
    7. '``' → logprob: -18.125003814697266
    8. '#print' → logprob: -18.750003814697266
    9. ')
' → logprob: -19.250003814697266
    10. '  
' → logprob: -20.125003814697266

Token 523: ' debug' (ID: 15199)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.00826101191341877
    2. 'dé' → logprob: -5.258261203765869
    3. ' debug' → logprob: -6.633261203765869
    4. 'le' → logprob: -6.883261203765869
    5. '#' → logprob: -7.633261203765869
    6. ' debugger' → logprob: -9.633260726928711
    7. 'la' → logprob: -10.008260726928711
    8. ' debugging' → logprob: -10.383260726928711
    9. 'deb' → logprob: -10.508260726928711
    10. 'd' → logprob: -11.883260726928711

Token 524: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.729906196298543e-06
    2. '
' → logprob: -12.250009536743164
    3. ' print' → logprob: -12.625009536743164
    4. '```' → logprob: -14.000009536743164
    5. '<|end|>' → logprob: -14.375009536743164
    6. '  
' → logprob: -16.625009536743164
    7. '#print' → logprob: -17.125009536743164
    8. ')' → logprob: -17.250009536743164
    9. '(print' → logprob: -17.625009536743164
    10. '``' → logprob: -17.875009536743164

Token 525: ' besoin' (ID: 27703)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05986882373690605
    2. 'False' → logprob: -4.684868812561035
    3. 'k' → logprob: -5.059868812561035
    4. ' #' → logprob: -5.184868812561035
    5. 'True' → logprob: -5.434868812561035
    6. 'ok' → logprob: -5.684868812561035
    7. '...' → logprob: -5.809868812561035
    8. ' True' → logprob: -5.809868812561035
    9. ' False' → logprob: -6.059868812561035
    10. 'debug' → logprob: -6.309868812561035

Token 526: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.107425062713446e-06
    2. '
' → logprob: -12.125006675720215
    3. ' print' → logprob: -13.500006675720215
    4. '```' → logprob: -15.500006675720215
    5. '#print' → logprob: -19.12500762939453
    6. '``' → logprob: -19.37500762939453
    7. '    
' → logprob: -19.37500762939453
    8. '  
' → logprob: -19.50000762939453
    9. '
' → logprob: -19.87500762939453
    10. ' 
' → logprob: -20.12500762939453

Token 527: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2723104848410003e-05
    2. '
' → logprob: -10.750022888183594
    3. '```' → logprob: -14.125022888183594
    4. ' print' → logprob: -15.000022888183594
    5. ')
' → logprob: -17.125022888183594
    6. ')' → logprob: -18.375022888183594
    7. '<|end|>' → logprob: -18.375022888183594
    8. '#print' → logprob: -18.375022888183594
    9. '``' → logprob: -18.625022888183594
    10. '    
' → logprob: -18.625022888183594

Token 528: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.001957298256456852
    2. '(' → logprob: -6.251957416534424
    3. ' (' → logprob: -10.876956939697266
    4. 're' → logprob: -12.001956939697266
    5. '(response' → logprob: -13.126956939697266
    6. '(res' → logprob: -15.001956939697266
    7. '('' → logprob: -15.126956939697266
    8. '(Re' → logprob: -15.126956939697266
    9. '(f' → logprob: -15.751956939697266
    10. '((' → logprob: -15.751956939697266

Token 529: 'ponse' (ID: 1439)
  Prédit: 'ponse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponse' → logprob: -0.00023524489370174706
    2. 's' → logprob: -9.000235557556152
    3. 'pon' → logprob: -9.125235557556152
    4. 'ponde' → logprob: -14.125235557556152
    5. 'p' → logprob: -14.500235557556152
    6. 'ponses' → logprob: -14.625235557556152
    7. 'pons' → logprob: -14.750235557556152
    8. 'pond' → logprob: -15.250235557556152
    9. 'pone' → logprob: -16.250234603881836
    10. 'ps' → logprob: -16.375234603881836

Token 530: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. '())' → logprob: -12.500009536743164
    3. '()' → logprob: -12.875009536743164
    4. ' )' → logprob: -13.375009536743164
    5. ')
' → logprob: -14.000009536743164
    6. ')`' → logprob: -14.500009536743164
    7. '))' → logprob: -15.000009536743164
    8. '(' → logprob: -15.000009536743164
    9. '`)' → logprob: -17.750009536743164
    10. ')}' → logprob: -17.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 528
Tokens correctement prédits (1ère position, stricte): 174
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 392
Précision stricte (1ère position): 32.95%
Précision adaptée (1ère position): 34.85%
Précision (top 10): 74.24%
================================================================================
