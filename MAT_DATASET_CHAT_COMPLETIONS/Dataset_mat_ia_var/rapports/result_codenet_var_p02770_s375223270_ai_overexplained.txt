================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve():
    # Importing islice to get a slice (subsequence) from an iterator, and tee to create independent iterators from one iterable
    from itertools import islice, tee

    # Read two integers from a single line of input, separated by spaces.
    # The first integer, k, will be used likely as the period or length of a certain array or sequence.
    # The second integer, q, represents the number of queries or test cases we will process.
    k, q = map(int, input().split())

    # Read k space-separated integers from the next line of input and unpack them into a list 'd'.
    # The asterisk '*' causes the 'map' results to be unpacked into the list.
    *d, = map(int, input().split())

    # The next lines will handle multiple queries (q times).
    # For each query, we will effectively "clone" the list 'd' using itertools.tee to prevent iterator exhaustion,
    # because map() is lazy and 'd' could be reused for multiple iterations in each query.
    for g in tee(d, q):
        # For each query, read three integers from the input:
        # n: the length or number of iterations/steps of a process (including the starting one)
        # x: the starting value
        # m: a modulus value controlling some modulo operation
        n, x, m = map(int, input().split())

        # For the whole sequence 'g', apply 'lambda x: x % m' to effectively wrap every element with mod m.
        # This means every element of g is replaced by its remainder when divided by m.
        g = map(lambda x: x % m, g)

        # Because map objects (iterators) can only be passed over once, use 'tee' to create three independent iterators.
        # g1: for summing the full period
        # g2: for summing the leftover part after full periods
        # g3: for checking which offsets are zero modulo m, to count something special later
        g1, g2, g3 = tee(g, 3)

        # Calculate rep and rest:
        # rep: the number of full cycles of k elements we will go through as steps (n - 1) // k
        # rest: the number of leftover elements (steps) after these full cycles (n - 1) % k
        rep, rest = divmod(n - 1, k)

        # Calculate the last value reached after (n-1) increments by elements of g:
        # - Initially, start at value x.
        # - Add (sum of one 'k' cycle) * number of full cycles 'rep'
        # - Add the sum of the (possibly incomplete) partial cycle (the first 'rest' elements)
        last = x + (sum(g1) * rep) + sum(islice(g2, 0, rest))

        # Now, count:
        # eq is the number of times when an element in g (the sequence) is 0,
        # for both fully repeated sections and the possible leftovers.
        # For each index in 0..(k-1):
        #   - For each complete cycle, that position is included 'rep' times.
        #   - If index < rest, the position comes up one extra time in leftovers.
        # For all such times, count how many of them have a g value of zero.
        eq = sum(
            rep + (1 if i < rest else 0)  # Number of appearances of g3[i]
            for i, gg in enumerate(g3)    # For each element and its index
            if gg == 0                    # But only if g3[i] (the value % m) is zero
        )

        # The answer is calculated as follows:
        # (n - 1): total increments performed (we consider steps from 0 to n-1)
        # - eq: subtract the number of zeros encountered, as those don't change anything after mod
        # - (last // m - x // m): for the starting value x and end value last,
        #     counting by how many multiples of m were passed over the total process
        # The resulting formula is the answer for the current query.
        ans = (n - 1) - eq - (last // m - x // m)

        # yield allows this function to be a generator: we can iterate over its results without storing all at once
        yield ans

def main():
    # For all answers generated by solve(), print them, separating each answer with a newline.
    print(*solve(), sep='\n')

if __name__ == '__main__':
    # Only run main() if the script is being run directly, not imported as a module
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6383654475212097
    2. '```' → logprob: -1.7633655071258545
    3. '   ' → logprob: -2.1383655071258545
    4. '\n' → logprob: -2.3883655071258545
    5. '    
' → logprob: -3.5133655071258545
    6. ' 
' → logprob: -3.6383655071258545
    7. ':' → logprob: -4.263365268707275
    8. ''' → logprob: -5.763365268707275
    9. '`' → logprob: -6.013365268707275
    10. '
' → logprob: -6.388365268707275

Token 4: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7803388833999634
    2. '\n' → logprob: -1.2803388833999634
    3. 'x' → logprob: -2.155338764190674
    4. '\' → logprob: -3.280338764190674
    5. 'a' → logprob: -3.655338764190674
    6. '   ' → logprob: -3.905338764190674
    7. 'pass' → logprob: -4.530338764190674
    8. 'i' → logprob: -4.905338764190674
    9. ' ' → logprob: -4.905338764190674
    10. 'r' → logprob: -5.280338764190674

Token 5: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1988011598587036
    2. ' pass' → logprob: -2.573801040649414
    3. '   ' → logprob: -3.073801040649414
    4. '<|end|>' → logprob: -4.073801040649414
    5. 'pass' → logprob: -4.198801040649414
    6. 'n' → logprob: -4.948801040649414
    7. '    ' → logprob: -5.698801040649414
    8. '\' → logprob: -5.948801040649414
    9. '```' → logprob: -6.448801040649414
    10. ' n' → logprob: -6.948801040649414

Token 6: 'ing' (ID: 289)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6135927438735962
    2. ' os' → logprob: -1.2385927438735962
    3. ' sys' → logprob: -1.8635927438735962
    4. ' collections' → logprob: -4.863592624664307
    5. ' itertools' → logprob: -6.238592624664307
    6. ' numpy' → logprob: -6.988592624664307
    7. ' json' → logprob: -7.738592624664307
    8. ' import' → logprob: -7.863592624664307
    9. ' ' → logprob: -7.988592624664307
    10. ' random' → logprob: -7.988592624664307

Token 7: ' is' (ID: 382)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.2292092740535736
    2. ' math' → logprob: -1.854209303855896
    3. ' sys' → logprob: -3.8542091846466064
    4. ' collections' → logprob: -4.2292094230651855
    5. ' numpy' → logprob: -5.4792094230651855
    6. ' ' → logprob: -5.9792094230651855
    7. ' itertools' → logprob: -6.3542094230651855
    8. ' pandas' → logprob: -6.6042094230651855
    9. ' json' → logprob: -7.9792094230651855
    10. ' random' → logprob: -8.104208946228027

Token 8: 'lice' (ID: 7321)
  Prédit: ' necessary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' necessary' → logprob: -0.955658495426178
    2. ' ' → logprob: -1.5806584358215332
    3. '   ' → logprob: -2.080658435821533
    4. ' required' → logprob: -2.330658435821533
    5. ' done' → logprob: -2.830658435821533
    6. ' needed' → logprob: -2.830658435821533
    7. ' sys' → logprob: -3.830658435821533
    8. ' math' → logprob: -4.330658435821533
    9. ' not' → logprob: -5.080658435821533
    10. '  ' → logprob: -5.080658435821533

Token 9: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6436499357223511
    2. ' from' → logprob: -0.8936499357223511
    3. '(' → logprob: -2.8936500549316406
    4. ',' → logprob: -6.018650054931641
    5. '```' → logprob: -6.018650054931641
    6. ' ' → logprob: -6.518650054931641
    7. ' (' → logprob: -6.893650054931641
    8. '<|end|>' → logprob: -7.143650054931641
    9. '`' → logprob: -7.893650054931641
    10. ')' → logprob: -8.01865005493164

Token 10: ' get' (ID: 717)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5470767021179199
    2. ' ' → logprob: -2.17207670211792
    3. ' is' → logprob: -2.17207670211792
    4. ' use' → logprob: -3.04707670211792
    5. ' import' → logprob: -3.17207670211792
    6. ' from' → logprob: -3.54707670211792
    7. 'import' → logprob: -3.67207670211792
    8. 'from' → logprob: -4.42207670211792
    9. ' take' → logprob: -5.29707670211792
    10. ' provide' → logprob: -5.67207670211792

Token 11: ' a' (ID: 261)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.748497724533081
    2. ' itertools' → logprob: -1.748497724533081
    3. ' a' → logprob: -1.873497724533081
    4. ' chunks' → logprob: -2.123497724533081
    5. ' from' → logprob: -2.248497724533081
    6. ' the' → logprob: -2.623497724533081
    7. ' an' → logprob: -2.873497724533081
    8. ' more' → logprob: -3.123497724533081
    9. ' slices' → logprob: -3.498497724533081
    10. ' portions' → logprob: -4.37349796295166

Token 12: ' slice' (ID: 30288)
  Prédit: ' few'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' few' → logprob: -0.9425898790359497
    2. 'n' → logprob: -1.0675898790359497
    3. ' specific' → logprob: -2.31758975982666
    4. ' fixed' → logprob: -3.06758975982666
    5. ' portion' → logprob: -3.31758975982666
    6. ' specified' → logprob: -3.44258975982666
    7. ' slice' → logprob: -4.31758975982666
    8. ' certain' → logprob: -5.31758975982666
    9. 'specific' → logprob: -5.31758975982666
    10. 'slice' → logprob: -5.44258975982666

Token 13: ' (' (ID: 350)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.034148097038269
    2. '(' → logprob: -1.284148097038269
    3. 'from' → logprob: -1.409148097038269
    4. ' of' → logprob: -2.2841482162475586
    5. 'of' → logprob: -5.409148216247559
    6. 'import' → logprob: -5.409148216247559
    7. ',' → logprob: -5.534148216247559
    8. '```' → logprob: -6.659148216247559
    9. '(
' → logprob: -6.909148216247559
    10. ')' → logprob: -7.034148216247559

Token 14: 'sub' (ID: 3834)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029307210817933083
    2. 'from' → logprob: -4.0293073654174805
    3. '(' → logprob: -5.9043073654174805
    4. ' from' → logprob: -6.1543073654174805
    5. ',' → logprob: -6.6543073654174805
    6. 'import' → logprob: -6.9043073654174805
    7. 'of' → logprob: -6.9043073654174805
    8. ' )' → logprob: -7.1543073654174805
    9. '   ' → logprob: -8.02930736541748
    10. '_' → logprob: -8.27930736541748

Token 15: 'sequence' (ID: 47173)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6286113262176514
    2. 'sequence' → logprob: -1.1286113262176514
    3. 'iterator' → logprob: -3.0036113262176514
    4. 'string' → logprob: -3.0036113262176514
    5. 'list' → logprob: -3.2536113262176514
    6. 'generator' → logprob: -7.0036115646362305
    7. ' iterator' → logprob: -7.2536115646362305
    8. 'quence' → logprob: -7.2536115646362305
    9. ' sequence' → logprob: -7.5036115646362305
    10. 'range' → logprob: -7.7536115646362305

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012590413680300117
    2. ' )' → logprob: -7.876258850097656
    3. 'from' → logprob: -8.126258850097656
    4. ' of' → logprob: -8.626258850097656
    5. ' from' → logprob: -8.751258850097656
    6. '   ' → logprob: -8.876258850097656
    7. '```' → logprob: -10.626258850097656
    8. 'of' → logprob: -10.751258850097656
    9. ' ' → logprob: -11.251258850097656
    10. '(' → logprob: -12.001258850097656

Token 17: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.31614381074905396
    2. 'from' → logprob: -1.4411437511444092
    3. '(' → logprob: -4.066143989562988
    4. ' ' → logprob: -5.316143989562988
    5. ',' → logprob: -5.316143989562988
    6. '   ' → logprob: -5.816143989562988
    7. '```' → logprob: -6.316143989562988
    8. ' of' → logprob: -7.441143989562988
    9. ' (' → logprob: -8.191143989562988
    10. '[' → logprob: -8.191143989562988

Token 18: ' an' (ID: 448)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0005757896578870714
    2. ' the' → logprob: -7.875576019287109
    3. 'it' → logprob: -9.25057601928711
    4. ' collections' → logprob: -10.62557601928711
    5. 'the' → logprob: -11.00057601928711
    6. ' iter' → logprob: -11.12557601928711
    7. 'collections' → logprob: -11.12557601928711
    8. ' more' → logprob: -12.50057601928711
    9. ' math' → logprob: -12.75057601928711
    10. '```' → logprob: -12.87557601928711

Token 19: ' iterator' (ID: 30787)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.7146320939064026
    2. ' iterable' → logprob: -0.7146320939064026
    3. ' iterator' → logprob: -4.589632034301758
    4. 'import' → logprob: -5.339632034301758
    5. ' import' → logprob: -6.089632034301758
    6. 'iterator' → logprob: -7.089632034301758
    7. 'iter' → logprob: -7.839632034301758
    8. ' ' → logprob: -7.964632034301758
    9. 'other' → logprob: -7.964632034301758
    10. ' iterative' → logprob: -7.964632034301758

Token 20: ',' (ID: 11)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7247229814529419
    2. 'from' → logprob: -0.9747229814529419
    3. '```' → logprob: -2.4747228622436523
    4. '   ' → logprob: -2.9747228622436523
    5. '    
' → logprob: -7.599722862243652
    6. ',' → logprob: -7.724722862243652
    7. '<|end|>' → logprob: -7.849722862243652
    8. 'import' → logprob: -8.474722862243652
    9. '``' → logprob: -8.724722862243652
    10. '<|end|>' → logprob: -8.724722862243652

Token 21: ' and' (ID: 326)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.1060728132724762
    2. ' itertools' → logprob: -2.6060729026794434
    3. 'from' → logprob: -4.481072902679443
    4. ' and' → logprob: -5.856072902679443
    5. ' collections' → logprob: -5.981072902679443
    6. '    ' → logprob: -6.606072902679443
    7. ' but' → logprob: -6.731072902679443
    8. ' line' → logprob: -6.981072902679443
    9. ' which' → logprob: -7.106072902679443
    10. ' next' → logprob: -7.356072902679443

Token 22: ' tee' (ID: 44157)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.024201959371566772
    2. ' is' → logprob: -3.8992018699645996
    3. ' collections' → logprob: -6.6492018699646
    4. ' sys' → logprob: -6.8992018699646
    5. ' chain' → logprob: -8.524202346801758
    6. ' from' → logprob: -9.149202346801758
    7. ' iter' → logprob: -9.274202346801758
    8. '```' → logprob: -9.399202346801758
    9. 'collections' → logprob: -9.524202346801758
    10. 'is' → logprob: -9.524202346801758

Token 23: ' to' (ID: 316)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.7124771475791931
    2. 'from' → logprob: -0.7124771475791931
    3. '   ' → logprob: -4.837477207183838
    4. '(' → logprob: -5.837477207183838
    5. '<|end|>' → logprob: -5.837477207183838
    6. ',' → logprob: -6.212477207183838
    7. '```' → logprob: -6.962477207183838
    8. '<|end|>' → logprob: -7.212477207183838
    9. 'import' → logprob: -7.837477207183838
    10. '	from' → logprob: -8.08747673034668

Token 24: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.1479650735855103
    2. ' replicate' → logprob: -1.8979650735855103
    3. ' itertools' → logprob: -2.0229649543762207
    4. ' duplicate' → logprob: -2.1479649543762207
    5. ' from' → logprob: -2.6479649543762207
    6. ' copy' → logprob: -2.7729649543762207
    7. ' import' → logprob: -2.8979649543762207
    8. ' split' → logprob: -3.7729649543762207
    9. 'from' → logprob: -3.7729649543762207
    10. 'import' → logprob: -4.147964954376221

Token 25: ' independent' (ID: 13313)
  Prédit: ' independent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' independent' → logprob: -0.8096958994865417
    2. ' two' → logprob: -0.9346958994865417
    3. ' copies' → logprob: -2.8096959590911865
    4. ' duplicates' → logprob: -3.6846959590911865
    5. ' an' → logprob: -3.8096959590911865
    6. ' a' → logprob: -3.9346959590911865
    7. ' multiple' → logprob: -4.059695720672607
    8. ' duplicate' → logprob: -5.559695720672607
    9. ' itertools' → logprob: -5.684695720672607
    10. ' from' → logprob: -5.684695720672607

Token 26: ' iter' (ID: 10621)
  Prédit: ' iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iter' → logprob: -0.2291315495967865
    2. ' ' → logprob: -1.8541315793991089
    3. 's' → logprob: -3.7291314601898193
    4. ' from' → logprob: -4.854131698608398
    5. ' itertools' → logprob: -5.479131698608398
    6. '_iter' → logprob: -5.979131698608398
    7. '(iter' → logprob: -6.229131698608398
    8. ',' → logprob: -6.604131698608398
    9. 'from' → logprob: -6.979131698608398
    10. ' copies' → logprob: -6.979131698608398

Token 27: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.0022837184369564056
    2. 'ator' → logprob: -6.752283573150635
    3. 'tools' → logprob: -7.127283573150635
    4. 'from' → logprob: -8.627284049987793
    5. 't' → logprob: -10.377284049987793
    6. 'at' → logprob: -10.877284049987793
    7. '```' → logprob: -10.877284049987793
    8. 'tors' → logprob: -11.252284049987793
    9. 's' → logprob: -11.377284049987793
    10. 'import' → logprob: -11.377284049987793

Token 28: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.539053738117218
    2. 'from' → logprob: -0.914053738117218
    3. '<|end|>' → logprob: -5.164053916931152
    4. '   ' → logprob: -5.414053916931152
    5. ',' → logprob: -6.289053916931152
    6. '<|end|>' → logprob: -6.664053916931152
    7. '	from' → logprob: -7.414053916931152
    8. '(' → logprob: -8.039053916931152
    9. '```' → logprob: -8.164053916931152
    10. ' ' → logprob: -8.289053916931152

Token 29: ' one' (ID: 1001)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -5.085517113911919e-05
    2. ' the' → logprob: -10.62505054473877
    3. 'it' → logprob: -11.50005054473877
    4. 'iter' → logprob: -12.75005054473877
    5. '```' → logprob: -12.75005054473877
    6. ' iter' → logprob: -13.25005054473877
    7. 'import' → logprob: -13.62505054473877
    8. 'the' → logprob: -13.75005054473877
    9. ' ' → logprob: -13.75005054473877
    10. ' ' → logprob: -14.12505054473877

Token 30: ' iterable' (ID: 113880)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.39929986000061035
    2. 'from' → logprob: -1.5242998600006104
    3. 'import' → logprob: -2.8992998600006104
    4. '```' → logprob: -4.149299621582031
    5. ',' → logprob: -4.399299621582031
    6. '   ' → logprob: -5.149299621582031
    7. ' import' → logprob: -6.024299621582031
    8. '.' → logprob: -6.149299621582031
    9. ' of' → logprob: -6.274299621582031
    10. '(' → logprob: -6.399299621582031

Token 31: '
' (ID: 198)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5637487769126892
    2. 'from' → logprob: -0.9387487769126892
    3. '   ' → logprob: -3.688748836517334
    4. '```' → logprob: -4.938748836517334
    5. ',' → logprob: -5.938748836517334
    6. '<|end|>' → logprob: -6.063748836517334
    7. '<|end|>' → logprob: -7.188748836517334
    8. ' ' → logprob: -7.938748836517334
    9. '	from' → logprob: -7.938748836517334
    10. ':' → logprob: -8.188748359680176

Token 32: '   ' (ID: 271)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.39277997612953186
    2. 'from' → logprob: -1.3927799463272095
    3. '   ' → logprob: -3.017780065536499
    4. '```' → logprob: -3.767780065536499
    5. '<|end|>' → logprob: -6.01777982711792
    6. '	from' → logprob: -7.89277982711792
    7. ',' → logprob: -8.017780303955078
    8. '<|end|>' → logprob: -8.017780303955078
    9. ' ' → logprob: -8.142780303955078
    10. '    
' → logprob: -8.517780303955078

Token 33: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.05578339099884033
    2. 'from' (adapté à ' from') → logprob: -2.930783271789551
    3. '   ' → logprob: -7.055783271789551
    4. '	from' → logprob: -10.80578327178955
    5. '```' → logprob: -11.30578327178955
    6. '    
' → logprob: -13.55578327178955
    7. ' ' → logprob: -13.68078327178955
    8. ' ' → logprob: -13.80578327178955
    9. '    ' → logprob: -14.55578327178955
    10. ' 
' → logprob: -15.18078327178955

Token 34: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.001169152557849884
    2. 'it' → logprob: -6.876169204711914
    3. ' ' → logprob: -9.001169204711914
    4. '  ' → logprob: -12.376169204711914
    5. 'import' → logprob: -13.251169204711914
    6. '_' → logprob: -13.376169204711914
    7. 'Iter' → logprob: -13.501169204711914
    8. '   ' → logprob: -14.001169204711914
    9. 'collections' → logprob: -14.376169204711914
    10. 'iter' → logprob: -14.376169204711914

Token 35: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.006041019689291716
    2. 'import' → logprob: -5.131041049957275
    3. '.' → logprob: -9.631040573120117
    4. '	import' → logprob: -10.881040573120117
    5. '.import' → logprob: -11.256040573120117
    6. ' .' → logprob: -12.006040573120117
    7. ' ' → logprob: -12.756040573120117
    8. ' itertools' → logprob: -12.881040573120117
    9. '_import' → logprob: -14.631040573120117
    10. '.im' → logprob: -14.631040573120117

Token 36: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14877548813819885
    2. 'is' → logprob: -2.148775577545166
    3. ' tee' → logprob: -4.148775577545166
    4. 'tee' → logprob: -5.148775577545166
    5. '	is' → logprob: -11.523775100708008
    6. ' ' → logprob: -12.148775100708008
    7. '   ' → logprob: -13.148775100708008
    8. '```' → logprob: -14.648775100708008
    9. ' itertools' → logprob: -14.648775100708008
    10. 'te' → logprob: -15.023775100708008

Token 37: 'lice' (ID: 7321)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.0954214483499527
    2. 's' → logprob: -3.220421552658081
    3. 'lice' → logprob: -3.595421552658081
    4. 'sce' → logprob: -4.220421314239502
    5. 'is' → logprob: -5.720421314239502
    6. 'sle' → logprob: -5.845421314239502
    7. 'ce' → logprob: -6.470421314239502
    8. 'sl' → logprob: -7.220421314239502
    9. 'slide' → logprob: -9.09542179107666
    10. 'ice' → logprob: -9.59542179107666

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029420074075460434
    2. '   ' → logprob: -4.029419898986816
    3. ' ,' → logprob: -5.529419898986816
    4. ',
' → logprob: -5.904419898986816
    5. '    
' → logprob: -6.654419898986816
    6. '<|end|>' → logprob: -6.654419898986816
    7. ' ' → logprob: -7.904419898986816
    8. '
' → logprob: -8.279419898986816
    9. ',n' → logprob: -8.654419898986816
    10. '    ' → logprob: -8.654419898986816

Token 39: ' tee' (ID: 44157)
  Prédit: ' tee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tee' → logprob: -0.5231462121009827
    2. 'tee' → logprob: -0.8981462121009827
    3. 'te' → logprob: -11.273146629333496
    4. ' ' → logprob: -12.148146629333496
    5. 'tees' → logprob: -13.273146629333496
    6. 'tea' → logprob: -14.398146629333496
    7. ' tees' → logprob: -14.523146629333496
    8. '```' → logprob: -14.773146629333496
    9. ' Tee' → logprob: -15.023146629333496
    10. ' te' → logprob: -15.148146629333496

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6333898305892944
    2. '    
' → logprob: -1.7583898305892944
    3. '   ' → logprob: -1.7583898305892944
    4. '\' → logprob: -3.258389949798584
    5. 'n' → logprob: -4.133389949798584
    6. '  
' → logprob: -4.133389949798584
    7. '\n' → logprob: -4.383389949798584
    8. '```' → logprob: -5.133389949798584
    9. ' ' → logprob: -5.258389949798584
    10. '   
' → logprob: -5.383389949798584

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35169678926467896
    2. '    
' → logprob: -1.3516967296600342
    3. '(' → logprob: -4.726696968078613
    4. '
' → logprob: -4.726696968078613
    5. 'n' → logprob: -4.726696968078613
    6. 'def' → logprob: -6.601696968078613
    7. '    
    
' → logprob: -6.601696968078613
    8. '(n' → logprob: -6.851696968078613
    9. '    ' → logprob: -6.976696968078613
    10. 'a' → logprob: -6.976696968078613

Token 42: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08538546413183212
    2. 'n' → logprob: -2.96038556098938
    3. 'a' → logprob: -4.210385322570801
    4. 'def' → logprob: -6.335385322570801
    5. 'x' → logprob: -6.460385322570801
    6. '```' → logprob: -6.585385322570801
    7. 'b' → logprob: -6.835385322570801
    8. '
' → logprob: -7.085385322570801
    9. ' n' → logprob: -7.085385322570801
    10. 'for' → logprob: -7.335385322570801

Token 43: ' Read' (ID: 5405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9026715159416199
    2. 'def' → logprob: -1.6526715755462646
    3. ' def' → logprob: -2.1526715755462646
    4. ' n' → logprob: -2.5276715755462646
    5. 'n' → logprob: -2.7776715755462646
    6. '#' → logprob: -3.2776715755462646
    7. ' lines' → logprob: -4.4026713371276855
    8. ' #' → logprob: -4.4026713371276855
    9. 'a' → logprob: -5.1526713371276855
    10. ' window' → logprob: -5.4026713371276855

Token 44: ' two' (ID: 1920)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2074526995420456
    2. ' the' → logprob: -2.5824527740478516
    3. '()' → logprob: -3.3324527740478516
    4. 'input' → logprob: -3.4574527740478516
    5. ' data' → logprob: -4.457452774047852
    6. ' n' → logprob: -4.957452774047852
    7. ' ' → logprob: -5.457452774047852
    8. '(' → logprob: -5.457452774047852
    9. ' user' → logprob: -5.832452774047852
    10. ' a' → logprob: -5.957452774047852

Token 45: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.10483462363481522
    2. ' lines' → logprob: -2.72983455657959
    3. ' numbers' → logprob: -4.10483455657959
    4. ' lists' → logprob: -4.72983455657959
    5. ' more' → logprob: -5.72983455657959
    6. ' ' → logprob: -6.22983455657959
    7. ' strings' → logprob: -6.85483455657959
    8. ' input' → logprob: -7.35483455657959
    9. ' space' → logprob: -7.85483455657959
    10. ' inputs' → logprob: -8.35483455657959

Token 46: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5676103234291077
    2. '(' → logprob: -1.192610263824463
    3. '   ' → logprob: -3.567610263824463
    4. '<|end|>' → logprob: -3.692610263824463
    5. '```' → logprob: -3.942610263824463
    6. 'a' → logprob: -4.942610263824463
    7. ',' → logprob: -5.067610263824463
    8. '<|end|>' → logprob: -5.317610263824463
    9. ':' → logprob: -5.442610263824463
    10. '  ' → logprob: -5.567610263824463

Token 47: ' a' (ID: 261)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0009463535388931632
    2. 'input' → logprob: -7.000946521759033
    3. ' the' → logprob: -10.375946044921875
    4. ' stdin' → logprob: -13.625946044921875
    5. ' a' → logprob: -13.875946044921875
    6. '(input' → logprob: -14.250946044921875
    7. 'stdin' → logprob: -15.000946044921875
    8. '=input' → logprob: -15.875946044921875
    9. ' ' → logprob: -16.125946044921875
    10. 'the' → logprob: -16.375946044921875

Token 48: ' single' (ID: 4590)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.26807984709739685
    2. ' single' → logprob: -1.7680798768997192
    3. 'input' → logprob: -2.8930797576904297
    4. 'single' → logprob: -5.64307975769043
    5. 'n' → logprob: -5.89307975769043
    6. ' line' → logprob: -7.01807975769043
    7. ' string' → logprob: -7.14307975769043
    8. ' ' → logprob: -7.26807975769043
    9. 'string' → logprob: -9.26807975769043
    10. '=input' → logprob: -9.51807975769043

Token 49: ' line' (ID: 2543)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4350164830684662
    2. ' line' → logprob: -1.0600165128707886
    3. 'input' → logprob: -5.310016632080078
    4. 'line' → logprob: -7.185016632080078
    5. ' ' → logprob: -8.560016632080078
    6. ' string' → logprob: -8.935016632080078
    7. '(input' → logprob: -9.185016632080078
    8. '()' → logprob: -10.560016632080078
    9. ' token' → logprob: -10.810016632080078
    10. ' sentence' → logprob: -11.435016632080078

Token 50: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09080300480127335
    2. '(' → logprob: -3.4658029079437256
    3. '    
' → logprob: -4.715803146362305
    4. 'x' → logprob: -4.965803146362305
    5. '`' → logprob: -5.215803146362305
    6. 'tokens' → logprob: -5.340803146362305
    7. 'token' → logprob: -5.465803146362305
    8. '(
' → logprob: -5.590803146362305
    9. '```' → logprob: -5.715803146362305
    10. 'input' → logprob: -5.840803146362305

Token 51: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16034069657325745
    2. 'input' → logprob: -1.910340666770935
    3. ' code' → logprob: -9.160340309143066
    4. 'code' → logprob: -11.910340309143066
    5. 'stdin' → logprob: -13.035340309143066
    6. '_input' → logprob: -14.160340309143066
    7. ' standard' → logprob: -14.660340309143066
    8. ' stdin' → logprob: -15.410340309143066
    9. 'python' → logprob: -15.660340309143066
    10. ' the' → logprob: -15.785340309143066

Token 52: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2611767649650574
    2. 'x' → logprob: -2.511176824569702
    3. 'n' → logprob: -3.761176824569702
    4. 'a' → logprob: -3.886176824569702
    5. 'tokens' → logprob: -3.886176824569702
    6. 'input' → logprob: -4.011176586151123
    7. 'line' → logprob: -4.136176586151123
    8. ' line' → logprob: -4.261176586151123
    9. '```' → logprob: -4.886176586151123
    10. '    
' → logprob: -5.136176586151123

Token 53: ' separated' (ID: 33930)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.9133422374725342
    2. ' split' → logprob: -2.038342237472534
    3. ' map' → logprob: -2.038342237472534
    4. 'split' → logprob: -2.413342237472534
    5. ' input' → logprob: -2.538342237472534
    6. ' n' → logprob: -2.788342237472534
    7. ' ' → logprob: -3.038342237472534
    8. ' x' → logprob: -3.538342237472534
    9. 'input' → logprob: -3.538342237472534
    10. 'x' → logprob: -3.913342237472534

Token 54: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.020692065358161926
    2. 'by' → logprob: -3.8956921100616455
    3. '<|end|>' → logprob: -9.020691871643066
    4. '<|end|>' → logprob: -12.020691871643066
    5. '  ' → logprob: -12.270691871643066
    6. 's' → logprob: -13.020691871643066
    7. 'b' → logprob: -13.145691871643066
    8. ' ' → logprob: -13.395691871643066
    9. '   ' → logprob: -13.395691871643066
    10. '```' → logprob: -13.520691871643066

Token 55: ' spaces' (ID: 18608)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17580144107341766
    2. ' space' → logprob: -2.6758015155792236
    3. ''' → logprob: -3.0508015155792236
    4. 'space' → logprob: -3.1758015155792236
    5. 'a' → logprob: -6.5508012771606445
    6. ' spaces' → logprob: -6.9258012771606445
    7. 'spaces' → logprob: -7.9258012771606445
    8. ' ' → logprob: -8.175801277160645
    9. ' '' → logprob: -9.800801277160645
    10. ' the' → logprob: -9.800801277160645

Token 56: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28261828422546387
    2. 'a' → logprob: -1.9076182842254639
    3. 'x' → logprob: -2.907618284225464
    4. '   ' → logprob: -3.532618284225464
    5. ' n' → logprob: -5.032618522644043
    6. ' a' → logprob: -5.782618522644043
    7. '    
' → logprob: -6.407618522644043
    8. 'm' → logprob: -7.407618522644043
    9. ' line' → logprob: -8.282618522644043
    10. '(n' → logprob: -8.532618522644043

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6412062048912048
    2. 'n' → logprob: -1.6412062644958496
    3. 'a' → logprob: -1.7662062644958496
    4. 'x' → logprob: -2.5162062644958496
    5. ' a' → logprob: -4.76620626449585
    6. ' n' → logprob: -4.76620626449585
    7. ' line' → logprob: -6.14120626449585
    8. ' x' → logprob: -6.26620626449585
    9. '    
' → logprob: -6.64120626449585
    10. 'input' → logprob: -7.01620626449585

Token 58: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48882707953453064
    2. ' a' → logprob: -1.738827109336853
    3. '   ' → logprob: -2.2388269901275635
    4. 'n' → logprob: -2.8638269901275635
    5. ' n' → logprob: -3.2388269901275635
    6. 'x' → logprob: -6.113827228546143
    7. ' l' → logprob: -6.988827228546143
    8. 'l' → logprob: -6.988827228546143
    9. 'A' → logprob: -7.238827228546143
    10. 'm' → logprob: -7.238827228546143

Token 59: ' The' (ID: 623)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1050249338150024
    2. ' a' → logprob: -1.6050249338150024
    3. ' n' → logprob: -1.7300249338150024
    4. 'n' → logprob: -1.9800249338150024
    5. '   ' → logprob: -2.105024814605713
    6. 'x' → logprob: -4.855024814605713
    7. ' x' → logprob: -5.230024814605713
    8. 'm' → logprob: -5.855024814605713
    9. ' m' → logprob: -5.980024814605713
    10. ' l' → logprob: -6.480024814605713

Token 60: ' first' (ID: 1577)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5116165280342102
    2. ' input' → logprob: -2.1366164684295654
    3. ' line' → logprob: -2.8866164684295654
    4. ' next' → logprob: -2.8866164684295654
    5. 'n' → logprob: -3.3866164684295654
    6. ' a' → logprob: -3.5116164684295654
    7. ' first' → logprob: -4.3866167068481445
    8. ' user' → logprob: -4.6366167068481445
    9. ' code' → logprob: -4.8866167068481445
    10. ' numbers' → logprob: -4.8866167068481445

Token 61: ' integer' (ID: 16336)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.1608967781066895
    2. ' token' → logprob: -1.1608967781066895
    3. '_token' → logprob: -1.7858967781066895
    4. ' number' → logprob: -2.5358967781066895
    5. ' ' → logprob: -3.1608967781066895
    6. ' line' → logprob: -3.7858967781066895
    7. 'token' → logprob: -3.9108967781066895
    8. ' integer' → logprob: -4.5358967781066895
    9. ' tokens' → logprob: -5.5358967781066895
    10. ' n' → logprob: -5.7858967781066895

Token 62: ',' (ID: 11)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.056950364261865616
    2. ' is' → logprob: -3.431950330734253
    3. 'n' → logprob: -4.431950569152832
    4. ' represents' → logprob: -5.556950569152832
    5. ',' → logprob: -6.181950569152832
    6. ' =' → logprob: -6.931950569152832
    7. ' k' → logprob: -6.931950569152832
    8. ' ,' → logprob: -7.056950569152832
    9. ' ' → logprob: -8.431950569152832
    10. ' N' → logprob: -8.556950569152832

Token 63: ' k' (ID: 372)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10424051433801651
    2. 'n' → logprob: -2.8542404174804688
    3. ' k' → logprob: -3.8542404174804688
    4. ' m' → logprob: -4.979240417480469
    5. ' N' → logprob: -5.729240417480469
    6. 'k' → logprob: -5.854240417480469
    7. 'm' → logprob: -6.479240417480469
    8. ' a' → logprob: -6.979240417480469
    9. ' M' → logprob: -7.604240417480469
    10. ' t' → logprob: -7.729240417480469

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08965452015399933
    2. ' ,' → logprob: -2.7146544456481934
    3. ' =' → logprob: -4.589654445648193
    4. ' is' → logprob: -5.589654445648193
    5. '=' → logprob: -5.839654445648193
    6. ' represents' → logprob: -6.964654445648193
    7. ',k' → logprob: -7.214654445648193
    8. ' ' → logprob: -8.089654922485352
    9. ')' → logprob: -8.714654922485352
    10. '=int' → logprob: -9.589654922485352

Token 65: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09002336859703064
    2. ',' → logprob: -3.2150232791900635
    3. '=' → logprob: -3.3400232791900635
    4. ' ,' → logprob: -4.965023517608643
    5. ' is' → logprob: -6.090023517608643
    6. ' represents' → logprob: -7.090023517608643
    7. ' ' → logprob: -8.965023040771484
    8. ')' → logprob: -9.465023040771484
    9. ' and' → logprob: -10.090023040771484
    10. '=int' → logprob: -10.215023040771484

Token 66: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.30641281604766846
    2. ' represent' → logprob: -2.181412696838379
    3. '<|end|>' → logprob: -2.931412696838379
    4. ' ' → logprob: -3.306412696838379
    5. ' determine' → logprob: -3.931412696838379
    6. ' =' → logprob: -4.806412696838379
    7. ' define' → logprob: -4.931412696838379
    8. ' continue' → logprob: -5.431412696838379
    9. '<|end|>' → logprob: -5.556412696838379
    10. '    ' → logprob: -5.931412696838379

Token 67: ' used' (ID: 2061)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.014342136681079865
    2. ' used' → logprob: -4.889342308044434
    3. 'the' → logprob: -5.764342308044434
    4. ' an' → logprob: -6.889342308044434
    5. ' int' → logprob: -7.264342308044434
    6. ' k' → logprob: -7.514342308044434
    7. ' ' → logprob: -8.139342308044434
    8. ' a' → logprob: -8.514342308044434
    9. ' how' → logprob: -8.514342308044434
    10. ' input' → logprob: -8.639342308044434

Token 68: ' likely' (ID: 6960)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13256187736988068
    2. ' for' → logprob: -2.2575619220733643
    3. ' as' → logprob: -4.382561683654785
    4. 'to' → logprob: -5.882561683654785
    5. ' in' → logprob: -6.507561683654785
    6. '    ' → logprob: -7.507561683654785
    7. 'for' → logprob: -7.882561683654785
    8. '=' → logprob: -7.882561683654785
    9. '   ' → logprob: -8.132561683654785
    10. ',' → logprob: -8.257561683654785

Token 69: ' as' (ID: 472)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.017603106796741486
    2. ' for' → logprob: -4.267602920532227
    3. 'to' → logprob: -6.392602920532227
    4. ' as' → logprob: -6.392602920532227
    5. ' in' → logprob: -10.142602920532227
    6. 'for' → logprob: -10.767602920532227
    7. ' ' → logprob: -11.267602920532227
    8. '<|end|>' → logprob: -12.017602920532227
    9. 'as' → logprob: -12.767602920532227
    10. ' later' → logprob: -14.017602920532227

Token 70: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03994298726320267
    2. ' a' → logprob: -3.539942979812622
    3. ' an' → logprob: -5.164943218231201
    4. 'the' → logprob: -5.539943218231201
    5. ' window' → logprob: -8.539942741394043
    6. 'a' → logprob: -8.789942741394043
    7. ' length' → logprob: -10.914942741394043
    8. ' ' → logprob: -11.039942741394043
    9. '<|end|>' → logprob: -11.164942741394043
    10. 'an' → logprob: -11.289942741394043

Token 71: ' period' (ID: 5265)
  Prédit: ' window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.9858490228652954
    2. ' length' → logprob: -1.6108490228652954
    3. ' number' → logprob: -1.8608490228652954
    4. 'length' → logprob: -2.360848903656006
    5. ' size' → logprob: -2.860848903656006
    6. 'window' → logprob: -3.610848903656006
    7. 'number' → logprob: -3.610848903656006
    8. ' starting' → logprob: -3.735848903656006
    9. 'size' → logprob: -4.485848903656006
    10. 'starting' → logprob: -5.110848903656006

Token 72: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8549832701683044
    2. '=' → logprob: -0.8549832701683044
    3. '   ' → logprob: -3.104983329772949
    4. '<|end|>' → logprob: -3.854983329772949
    5. ' of' → logprob: -4.104983329772949
    6. ')' → logprob: -4.104983329772949
    7. ' =' → logprob: -4.479983329772949
    8. ' for' → logprob: -4.604983329772949
    9. 's' → logprob: -5.354983329772949
    10. ' and' → logprob: -5.479983329772949

Token 73: ' length' (ID: 5517)
  Prédit: ' window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.8737363815307617
    2. ' step' → logprob: -1.6237363815307617
    3. ' spacing' → logprob: -1.8737363815307617
    4. ' offset' → logprob: -2.2487363815307617
    5. ' length' → logprob: -3.1237363815307617
    6. ' the' → logprob: -3.9987363815307617
    7. 'window' → logprob: -4.248736381530762
    8. ' frequency' → logprob: -4.748736381530762
    9. 'step' → logprob: -4.873736381530762
    10. 'offset' → logprob: -4.998736381530762

Token 74: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5914175510406494
    2. '=' → logprob: -0.8414175510406494
    3. ',' → logprob: -5.96641731262207
    4. '   ' → logprob: -6.09141731262207
    5. ' =' → logprob: -6.46641731262207
    6. ')' → logprob: -6.59141731262207
    7. '_' → logprob: -6.59141731262207
    8. 's' → logprob: -6.71641731262207
    9. '    ' → logprob: -6.96641731262207
    10. 'of' → logprob: -7.21641731262207

Token 75: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3259824514389038
    2. 'the' → logprob: -1.5759824514389038
    3. ' a' → logprob: -3.4509825706481934
    4. ' repetition' → logprob: -4.200982570648193
    5. 'a' → logprob: -4.575982570648193
    6. ' sequences' → logprob: -6.200982570648193
    7. ' periodic' → logprob: -6.325982570648193
    8. ' time' → logprob: -6.450982570648193
    9. ' sequence' → logprob: -6.575982570648193
    10. 'sequence' → logprob: -7.325982570648193

Token 76: ' certain' (ID: 4454)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.21957334876060486
    2. ' cycle' → logprob: -2.5945732593536377
    3. 'sequence' → logprob: -3.0945732593536377
    4. ' pattern' → logprob: -4.344573497772217
    5. 'period' → logprob: -4.719573497772217
    6. ' periodic' → logprob: -4.844573497772217
    7. ' cyclic' → logprob: -4.844573497772217
    8. ' list' → logprob: -4.969573497772217
    9. ' repeating' → logprob: -5.094573497772217
    10. 'cycle' → logprob: -5.344573497772217

Token 77: ' array' (ID: 2644)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.12588271498680115
    2. 'sequence' → logprob: -2.875882625579834
    3. ' cycle' → logprob: -3.625882625579834
    4. ' subse' → logprob: -4.750882625579834
    5. ' segment' → logprob: -5.000882625579834
    6. ' pattern' → logprob: -5.500882625579834
    7. 'cycle' → logprob: -6.500882625579834
    8. ' window' → logprob: -6.750882625579834
    9. ' step' → logprob: -6.750882625579834
    10. ' substring' → logprob: -6.875882625579834

Token 78: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6640662550926208
    2. '   ' → logprob: -0.9140662550926208
    3. '[' → logprob: -4.039066314697266
    4. '<|end|>' → logprob: -4.414066314697266
    5. ')' → logprob: -4.539066314697266
    6. '=' → logprob: -5.039066314697266
    7. ' =' → logprob: -5.164066314697266
    8. 'k' → logprob: -5.289066314697266
    9. 's' → logprob: -5.789066314697266
    10. ':' → logprob: -5.789066314697266

Token 79: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.07086260616779327
    2. ' pattern' → logprob: -3.5708625316619873
    3. ' segment' → logprob: -4.695862770080566
    4. ' window' → logprob: -4.945862770080566
    5. 'sequence' → logprob: -5.320862770080566
    6. ' subse' → logprob: -5.570862770080566
    7. ' step' → logprob: -5.945862770080566
    8. ' range' → logprob: -6.320862770080566
    9. ' spacing' → logprob: -6.445862770080566
    10. ' cycle' → logprob: -6.820862770080566

Token 80: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7545719742774963
    2. '   ' → logprob: -1.0045719146728516
    3. 'k' → logprob: -2.2545719146728516
    4. ' k' → logprob: -4.629571914672852
    5. '=' → logprob: -5.004571914672852
    6. ' ' → logprob: -5.004571914672852
    7. ' ,' → logprob: -5.379571914672852
    8. ' =' → logprob: -5.629571914672852
    9. ')' → logprob: -5.754571914672852
    10. 'a' → logprob: -6.004571914672852

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.081791453063488
    2. 'k' → logprob: -2.706791400909424
    3. '    
' → logprob: -5.706791400909424
    4. ' k' → logprob: -5.831791400909424
    5. ',' → logprob: -6.081791400909424
    6. ',k' → logprob: -6.831791400909424
    7. '<|end|>' → logprob: -7.831791400909424
    8. '```' → logprob: -7.956791400909424
    9. ' ' → logprob: -8.456791877746582
    10. '
' → logprob: -8.706791877746582

Token 82: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28652119636535645
    2. '   ' → logprob: -1.4115211963653564
    3. ' k' → logprob: -5.411520957946777
    4. '    
' → logprob: -8.036520957946777
    5. 'n' → logprob: -9.286520957946777
    6. ',' → logprob: -9.286520957946777
    7. ' ' → logprob: -9.661520957946777
    8. '    ' → logprob: -9.911520957946777
    9. '[' → logprob: -10.161520957946777
    10. ' 
' → logprob: -10.286520957946777

Token 83: ' The' (ID: 623)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.732833981513977
    2. 'k' → logprob: -0.857833981513977
    3. '   ' → logprob: -2.3578338623046875
    4. ' n' → logprob: -7.7328338623046875
    5. 'n' → logprob: -8.607833862304688
    6. ' ' → logprob: -11.107833862304688
    7. '    ' → logprob: -11.232833862304688
    8. ' input' → logprob: -11.357833862304688
    9. ' data' → logprob: -11.482833862304688
    10. '	k' → logprob: -11.732833862304688

Token 84: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.22415433824062347
    2. ' next' → logprob: -2.474154233932495
    3. 'second' → logprob: -2.974154233932495
    4. 'n' → logprob: -4.099154472351074
    5. ' rest' → logprob: -4.224154472351074
    6. ' n' → logprob: -4.724154472351074
    7. 'next' → logprob: -5.349154472351074
    8. ' k' → logprob: -5.349154472351074
    9. ' sequence' → logprob: -6.224154472351074
    10. ' code' → logprob: -6.599154472351074

Token 85: ' integer' (ID: 16336)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5681803822517395
    2. ' ,' → logprob: -1.3181803226470947
    3. ' ' → logprob: -2.8181803226470947
    4. '  ' → logprob: -3.6931803226470947
    5. '_token' → logprob: -3.8181803226470947
    6. 'token' → logprob: -3.9431803226470947
    7. ' token' → logprob: -4.818180561065674
    8. '_' → logprob: -5.068180561065674
    9. '<|end|>' → logprob: -5.068180561065674
    10. 'int' → logprob: -6.068180561065674

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09205716103315353
    2. ' ,' → logprob: -2.467057228088379
    3. ' =' → logprob: -7.092057228088379
    4. ' ' → logprob: -7.342057228088379
    5. ',k' → logprob: -7.842057228088379
    6. 'k' → logprob: -7.842057228088379
    7. '=' → logprob: -7.967057228088379
    8. ' k' → logprob: -8.592057228088379
    9. '    ' → logprob: -10.092057228088379
    10. '   ' → logprob: -10.342057228088379

Token 87: ' q' (ID: 2335)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05577132850885391
    2. ' ' → logprob: -3.1807713508605957
    3. 'n' → logprob: -5.180771350860596
    4. '_' → logprob: -5.805771350860596
    5. ' space' → logprob: -6.305771350860596
    6. ' a' → logprob: -7.180771350860596
    7. ' ' → logprob: -8.555770874023438
    8. ' N' → logprob: -8.805770874023438
    9. ' l' → logprob: -9.180770874023438
    10. 'space' → logprob: -9.305770874023438

Token 88: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0101408958435059
    2. ',' → logprob: -1.5101408958435059
    3. ' =' → logprob: -1.7601408958435059
    4. ')' → logprob: -2.135140895843506
    5. ':' → logprob: -2.885140895843506
    6. '):' → logprob: -2.885140895843506
    7. ' ' → logprob: -4.885140895843506
    8. '_' → logprob: -6.385140895843506
    9. ' ,' → logprob: -8.010141372680664
    10. '  ' → logprob: -8.010141372680664

Token 89: ' represents' (ID: 18627)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13878561556339264
    2. '=' → logprob: -3.0137856006622314
    3. ')' → logprob: -3.7637856006622314
    4. ':' → logprob: -4.2637858390808105
    5. ' ' → logprob: -4.7637858390808105
    6. ' )' → logprob: -4.8887858390808105
    7. '):' → logprob: -5.2637858390808105
    8. '    ' → logprob: -5.3887858390808105
    9. ' is' → logprob: -5.3887858390808105
    10. ' :' → logprob: -6.0137858390808105

Token 90: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9517186284065247
    2. ' ' → logprob: -1.2017185688018799
    3. ' a' → logprob: -1.2017185688018799
    4. ' an' → logprob: -6.076718807220459
    5. '  ' → logprob: -6.326718807220459
    6. 'the' → logprob: -6.701718807220459
    7. '_' → logprob: -6.951718807220459
    8. '   ' → logprob: -7.076718807220459
    9. 'n' → logprob: -7.201718807220459
    10. 'a' → logprob: -7.201718807220459

Token 91: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.0005220544408075511
    2. ' ' → logprob: -8.625521659851074
    3. ' space' → logprob: -9.000521659851074
    4. 'number' → logprob: -9.500521659851074
    5. ' n' → logprob: -9.625521659851074
    6. ' queries' → logprob: -10.500521659851074
    7. ' amount' → logprob: -11.125521659851074
    8. ' numbers' → logprob: -11.625521659851074
    9. ' num' → logprob: -11.875521659851074
    10. 'n' → logprob: -12.375521659851074

Token 92: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2202577292919159
    2. ' ' → logprob: -2.7202577590942383
    3. 's' → logprob: -2.8452577590942383
    4. ')' → logprob: -3.4702577590942383
    5. '=' → logprob: -4.095257759094238
    6. '_of' → logprob: -5.220257759094238
    7. ''' → logprob: -5.470257759094238
    8. '<|end|>' → logprob: -5.470257759094238
    9. ' of' → logprob: -5.595257759094238
    10. '"' → logprob: -6.970257759094238

Token 93: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.006906590424478054
    2. ' ' → logprob: -5.131906509399414
    3. ' space' → logprob: -7.256906509399414
    4. ' query' → logprob: -9.506906509399414
    5. '_queries' → logprob: -9.506906509399414
    6. ' spaces' → logprob: -10.381906509399414
    7. ' inquiries' → logprob: -11.256906509399414
    8. ' Queries' → logprob: -11.381906509399414
    9. ' test' → logprob: -11.756906509399414
    10. ' )' → logprob: -11.881906509399414

Token 94: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' test' (ID: 1746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8681454062461853
    2. ' queries' → logprob: -0.8681454062461853
    3. ' space' → logprob: -2.86814546585083
    4. ' spaces' → logprob: -3.49314546585083
    5. ' operations' → logprob: -3.74314546585083
    6. ' test' → logprob: -3.86814546585083
    7. ' requests' → logprob: -4.74314546585083
    8. ' the' → logprob: -5.36814546585083
    9. ' tasks' → logprob: -5.86814546585083
    10. ' tokens' → logprob: -6.36814546585083

Token 96: ' cases' (ID: 7911)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6374889016151428
    2. 's' → logprob: -1.137488842010498
    3. '_' → logprob: -3.137488842010498
    4. '<|end|>' → logprob: -3.137488842010498
    5. ' s' → logprob: -3.387488842010498
    6. '  ' → logprob: -4.512488842010498
    7. '_cases' → logprob: -5.137488842010498
    8. '   ' → logprob: -5.262488842010498
    9. 'cases' → logprob: -6.387488842010498
    10. ')' → logprob: -6.637488842010498

Token 97: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32582494616508484
    2. '\n' → logprob: -1.8258249759674072
    3. '
' → logprob: -3.3258249759674072
    4. '<|end|>' → logprob: -3.8258249759674072
    5. '    
' → logprob: -4.200824737548828
    6. ':' → logprob: -5.075824737548828
    7. '\' → logprob: -5.200824737548828
    8. '<|end|>' → logprob: -5.450824737548828
    9. '.' → logprob: -5.825824737548828
    10. ')' → logprob: -5.825824737548828

Token 98: ' will' (ID: 738)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.265205979347229
    2. ' ' → logprob: -1.640205979347229
    3. ' need' → logprob: -4.6402058601379395
    4. '<|end|>' → logprob: -4.6402058601379395
    5. ' wants' → logprob: -5.5152058601379395
    6. ' will' → logprob: -5.7652058601379395
    7. ' can' → logprob: -5.8902058601379395
    8. '  ' → logprob: -6.1402058601379395
    9. ' are' → logprob: -6.7652058601379395
    10. ')' → logprob: -6.8902058601379395

Token 99: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6277257204055786
    2. ' continue' → logprob: -0.8777257204055786
    3. ')' → logprob: -4.002725601196289
    4. '_' → logprob: -4.627725601196289
    5. ' )' → logprob: -6.002725601196289
    6. ' be' → logprob: -6.252725601196289
    7. ' have' → logprob: -6.252725601196289
    8. ' input' → logprob: -6.627725601196289
    9. '<|end|>' → logprob: -6.627725601196289
    10. ' provide' → logprob: -6.752725601196289

Token 100: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08091216534376144
    2. '\n' → logprob: -3.2059121131896973
    3. '    
' → logprob: -4.455912113189697
    4. ')' → logprob: -5.330912113189697
    5. ':' → logprob: -5.455912113189697
    6. ',' → logprob: -5.830912113189697
    7. '\' → logprob: -5.955912113189697
    8. '<|end|>' → logprob: -6.705912113189697
    9. '  ' → logprob: -6.830912113189697
    10. '.' → logprob: -6.830912113189697

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.405765175819397
    2. '
' → logprob: -1.530765175819397
    3. '    
' → logprob: -2.7807650566101074
    4. 'k' → logprob: -3.4057650566101074
    5. '\n' → logprob: -5.155765056610107
    6. 'n' → logprob: -5.155765056610107
    7. '  
' → logprob: -6.030765056610107
    8. '   
' → logprob: -6.405765056610107
    9. ' 
' → logprob: -6.530765056610107
    10. '```' → logprob: -6.530765056610107

Token 102: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34425607323646545
    2. 'k' (adapté à ' k') → logprob: -1.344256043434143
    3. '    
' → logprob: -3.8442561626434326
    4. ' k' → logprob: -5.4692559242248535
    5. ' 
' → logprob: -6.7192559242248535
    6. '
' → logprob: -6.7192559242248535
    7. ' ' → logprob: -8.094256401062012
    8. '    ' → logprob: -8.094256401062012
    9. '   
' → logprob: -8.219256401062012
    10. '\n' → logprob: -8.219256401062012

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. '=' → logprob: -11.500018119812012
    3. ' =' → logprob: -12.500018119812012
    4. ' ,' → logprob: -13.250018119812012
    5. ',k' → logprob: -13.750018119812012
    6. ',user' → logprob: -15.750018119812012
    7. ',input' → logprob: -16.125017166137695
    8. ',q' → logprob: -16.500017166137695
    9. ')' → logprob: -16.750017166137695
    10. ',int' → logprob: -16.875017166137695

Token 104: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.2820611894130707
    2. ' ' → logprob: -1.407061219215393
    3. 'q' → logprob: -7.1570611000061035
    4. '<|end|>' → logprob: -9.532061576843262
    5. ' ' → logprob: -10.407061576843262
    6. '  ' → logprob: -11.657061576843262
    7. '	q' → logprob: -12.532061576843262
    8. ' space' → logprob: -12.907061576843262
    9. ' ‌' → logprob: -13.407061576843262
    10. ''q' → logprob: -13.532061576843262

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426999568939209
    2. '=' → logprob: -2.017699956893921
    3. ',' → logprob: -10.7677001953125
    4. '=input' → logprob: -12.8927001953125
    5. ' ' → logprob: -14.8927001953125
    6. '=int' → logprob: -15.6427001953125
    7. ')' → logprob: -15.7677001953125
    8. '.' → logprob: -16.2677001953125
    9. ' =
' → logprob: -16.5177001953125
    10. '  ' → logprob: -17.0177001953125

Token 106: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0005532711511477828
    2. 'map' → logprob: -7.500553131103516
    3. ' ' → logprob: -15.875553131103516
    4. '	map' → logprob: -16.000553131103516
    5. ' list' → logprob: -16.875553131103516
    6. ' ' → logprob: -18.125553131103516
    7. '(map' → logprob: -19.250553131103516
    8. '[' → logprob: -20.000553131103516
    9. '   ' → logprob: -20.500553131103516
    10. ' [' → logprob: -20.500553131103516

Token 107: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4079574942588806
    2. '(int' → logprob: -1.1579575538635254
    3. '(str' → logprob: -3.9079575538635254
    4. '(input' → logprob: -7.282957553863525
    5. '(lambda' → logprob: -9.532957077026367
    6. '(
' → logprob: -12.407957077026367
    7. '[int' → logprob: -12.907957077026367
    8. '(list' → logprob: -13.032957077026367
    9. '(eval' → logprob: -13.157957077026367
    10. ' (' → logprob: -13.282957077026367

Token 108: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23056833446025848
    2. 'input' → logprob: -1.730568289756775
    3. ',input' → logprob: -3.7305684089660645
    4. ',' → logprob: -5.9805684089660645
    5. ' input' → logprob: -6.4805684089660645
    6. '(' → logprob: -7.6055684089660645
    7. ')' → logprob: -8.730567932128906
    8. '=input' → logprob: -10.730567932128906
    9. '[input' → logprob: -12.480567932128906
    10. '	input' → logprob: -12.855567932128906

Token 109: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25192928314208984
    2. ' input' → logprob: -1.5019292831420898
    3. '(input' → logprob: -16.501930236816406
    4. ')' → logprob: -17.626930236816406
    5. '	input' → logprob: -17.876930236816406
    6. ' ' → logprob: -18.001930236816406
    7. '   ' → logprob: -18.626930236816406
    8. '=input' → logprob: -18.751930236816406
    9. ',input' → logprob: -19.876930236816406
    10. '<input' → logprob: -21.001930236816406

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0025629340671002865
    2. '())' → logprob: -6.002562999725342
    3. '()' → logprob: -9.377562522888184
    4. ')' → logprob: -13.002562522888184
    5. '(' → logprob: -15.752562522888184
    6. '());' → logprob: -16.3775634765625
    7. ' ().' → logprob: -17.5025634765625
    8. '()[' → logprob: -17.7525634765625
    9. '();)' → logprob: -18.0025634765625
    10. ' ())' → logprob: -18.2525634765625

Token 111: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015860427811276168
    2. 'strip' → logprob: -8.750158309936523
    3. 'rstrip' → logprob: -16.625158309936523
    4. '(split' → logprob: -16.875158309936523
    5. ' split' → logprob: -17.000158309936523
    6. 'spl' → logprob: -18.750158309936523
    7. 'read' → logprob: -20.500158309936523
    8. '.split' → logprob: -21.625158309936523
    9. '_split' → logprob: -22.625158309936523
    10. 'sp' → logprob: -22.750158309936523

Token 112: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. '()' → logprob: -11.750015258789062
    3. '())' → logprob: -12.500015258789062
    4. '))' → logprob: -13.500015258789062
    5. '(' → logprob: -14.125015258789062
    6. ')`' → logprob: -14.375015258789062
    7. ')
' → logprob: -14.750015258789062
    8. ' )' → logprob: -15.125015258789062
    9. '),' → logprob: -16.625015258789062
    10. ')")' → logprob: -16.750015258789062

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6383301019668579
    2. '
' → logprob: -1.013330101966858
    3. '    
' → logprob: -3.2633299827575684
    4. '\n' → logprob: -4.138329982757568
    5. '[' → logprob: -4.388329982757568
    6. '```' → logprob: -4.388329982757568
    7. '<|end|>' → logprob: -5.013329982757568
    8. 'n' → logprob: -6.138329982757568
    9. '  
' → logprob: -6.388329982757568
    10. '[]' → logprob: -6.388329982757568

Token 114: ' #' (ID: 1069)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6172404289245605
    2. 'a' → logprob: -1.7422404289245605
    3. '#' (adapté à ' #') → logprob: -2.4922404289245605
    4. '   ' → logprob: -3.1172404289245605
    5. 'for' → logprob: -3.4922404289245605
    6. 'array' → logprob: -3.6172404289245605
    7. 'A' → logprob: -3.8672404289245605
    8. 'data' → logprob: -4.2422404289245605
    9. 'period' → logprob: -4.2422404289245605
    10. 'sequence' → logprob: -4.3672404289245605

Token 115: ' Read' (ID: 5405)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.49592140316963196
    2. ' arr' → logprob: -1.8709213733673096
    3. 'a' → logprob: -2.2459213733673096
    4. 'for' → logprob: -3.3709213733673096
    5. '#' → logprob: -4.245921611785889
    6. 'data' → logprob: -4.620921611785889
    7. 'A' → logprob: -4.745921611785889
    8. 'period' → logprob: -4.745921611785889
    9. 'seq' → logprob: -4.995921611785889
    10. 'sequence' → logprob: -5.120921611785889

Token 116: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1043689250946045
    2. ' the' → logprob: -1.4793689250946045
    3. ' an' → logprob: -2.1043689250946045
    4. ' k' → logprob: -2.2293689250946045
    5. 'a' → logprob: -2.6043689250946045
    6. 'the' → logprob: -3.2293689250946045
    7. '()' → logprob: -3.3543689250946045
    8. 'k' → logprob: -3.8543689250946045
    9. '(' → logprob: -4.604369163513184
    10. 'arr' → logprob: -4.979369163513184

Token 117: ' space' (ID: 4918)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.4868427515029907
    2. 'numbers' → logprob: -2.486842632293701
    3. ' numbers' → logprob: -2.986842632293701
    4. '_values' → logprob: -3.236842632293701
    5. ' elements' → logprob: -3.486842632293701
    6. '_numbers' → logprob: -3.611842632293701
    7. 'values' → logprob: -3.861842632293701
    8. 'arr' → logprob: -3.861842632293701
    9. '_elements' → logprob: -4.361842632293701
    10. 'elements' → logprob: -4.611842632293701

Token 118: '-separated' (ID: 189658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3444077968597412
    2. '().' → logprob: -1.3444077968597412
    3. '_' → logprob: -2.094407796859741
    4. '-separated' → logprob: -2.094407796859741
    5. ')' → logprob: -2.469407796859741
    6. '.split' → logprob: -2.844407796859741
    7. '()' → logprob: -3.594407796859741
    8. '_arr' → logprob: -4.71940803527832
    9. 'arr' → logprob: -4.96940803527832
    10. '-' → logprob: -5.09440803527832

Token 119: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.04909459874033928
    2. 'inte' → logprob: -3.2990946769714355
    3. 'numbers' → logprob: -5.0490946769714355
    4. ' numbers' → logprob: -6.0490946769714355
    5. 'values' → logprob: -7.0490946769714355
    6. ' values' → logprob: -8.049094200134277
    7. ' elements' → logprob: -8.049094200134277
    8. 'elements' → logprob: -8.799094200134277
    9. 'ints' → logprob: -8.924094200134277
    10. 'tokens' → logprob: -9.049094200134277

Token 120: ' from' (ID: 591)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3485441505908966
    2. 'arr' → logprob: -1.9735441207885742
    3. ' a' → logprob: -2.348544120788574
    4. '   ' → logprob: -3.598544120788574
    5. ' arr' → logprob: -3.973544120788574
    6. ' array' → logprob: -5.473544120788574
    7. ',' → logprob: -6.098544120788574
    8. 'array' → logprob: -6.473544120788574
    9. 'A' → logprob: -6.723544120788574
    10. 'lst' → logprob: -7.223544120788574

Token 121: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3876899778842926
    2. 'input' → logprob: -1.1376899480819702
    3. ' the' → logprob: -7.26269006729126
    4. 'the' → logprob: -10.137689590454102
    5. 'list' → logprob: -10.387689590454102
    6. ' list' → logprob: -10.637689590454102
    7. ' a' → logprob: -11.012689590454102
    8. ' ' → logprob: -12.887689590454102
    9. '=input' → logprob: -13.387689590454102
    10. 'a' → logprob: -14.387689590454102

Token 122: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5803569555282593
    2. 'next' → logprob: -1.0803569555282593
    3. 'input' → logprob: -2.455357074737549
    4. ' input' → logprob: -4.205357074737549
    5. ' following' → logprob: -11.45535659790039
    6. ' ' → logprob: -11.58035659790039
    7. ' subsequent' → logprob: -11.83035659790039
    8. '   ' → logprob: -11.95535659790039
    9. 'second' → logprob: -12.20535659790039
    10. 'following' → logprob: -12.20535659790039

Token 123: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7655758261680603
    2. ' line' → logprob: -0.7655758261680603
    3. 'input' → logprob: -2.765575885772705
    4. ' input' → logprob: -5.015575885772705
    5. '(input' → logprob: -9.390575408935547
    6. '   ' → logprob: -9.890575408935547
    7. 'token' → logprob: -10.015575408935547
    8. '()' → logprob: -10.265575408935547
    9. '	line' → logprob: -10.890575408935547
    10. '=input' → logprob: -11.140575408935547

Token 124: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1593700647354126
    2. ',' → logprob: -1.4093700647354126
    3. 'a' → logprob: -2.034369945526123
    4. ' =' → logprob: -2.034369945526123
    5. 'arr' → logprob: -2.784369945526123
    6. '   ' → logprob: -3.659369945526123
    7. 's' → logprob: -3.784369945526123
    8. '[' → logprob: -4.409369945526123
    9. '()' → logprob: -4.659369945526123
    10. 'data' → logprob: -4.659369945526123

Token 125: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004084808751940727
    2. ' input' → logprob: -5.504084587097168
    3. '_input' → logprob: -12.879084587097168
    4. 'code' → logprob: -13.254084587097168
    5. '=input' → logprob: -13.629084587097168
    6. 'a' → logprob: -15.504084587097168
    7. 's' → logprob: -15.629084587097168
    8. 'n' → logprob: -16.129085540771484
    9. ' ' → logprob: -16.879085540771484
    10. 'data' → logprob: -17.004085540771484

Token 126: ' and' (ID: 326)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.15327595174312592
    2. '   ' → logprob: -2.528275966644287
    3. 'a' → logprob: -3.278275966644287
    4. ',' → logprob: -4.028275966644287
    5. ' arr' → logprob: -5.778275966644287
    6. 'array' → logprob: -7.278275966644287
    7. 's' → logprob: -7.528275966644287
    8. 'lst' → logprob: -7.903275966644287
    9. 'values' → logprob: -8.028275489807129
    10. ' a' → logprob: -8.028275489807129

Token 127: ' unpack' (ID: 61704)
  Prédit: ' store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.5507724285125732
    2. ' arr' → logprob: -1.6757724285125732
    3. 'arr' → logprob: -2.8007724285125732
    4. ' a' → logprob: -3.6757724285125732
    5. ' convert' → logprob: -4.050772666931152
    6. ' initialize' → logprob: -4.175772666931152
    7. ' array' → logprob: -4.300772666931152
    8. ' create' → logprob: -4.300772666931152
    9. ' lst' → logprob: -4.300772666931152
    10. ' split' → logprob: -4.425772666931152

Token 128: ' them' (ID: 1373)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05000535398721695
    2. '(*' → logprob: -4.1750054359436035
    3. '(' → logprob: -4.3000054359436035
    4. ' into' → logprob: -5.1750054359436035
    5. '(*)' → logprob: -5.4250054359436035
    6. '   ' → logprob: -5.4250054359436035
    7. ' the' → logprob: -7.3000054359436035
    8. ' them' → logprob: -7.4250054359436035
    9. '*' → logprob: -7.5500054359436035
    10. '()*' → logprob: -7.5500054359436035

Token 129: ' into' (ID: 1511)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8908156752586365
    2. '()' → logprob: -1.0158157348632812
    3. 'a' → logprob: -2.7658157348632812
    4. '*' → logprob: -3.0158157348632812
    5. '   ' → logprob: -3.5158157348632812
    6. '(' → logprob: -4.265815734863281
    7. ' =' → logprob: -4.390815734863281
    8. ',' → logprob: -4.515815734863281
    9. '=' → logprob: -4.515815734863281
    10. 'array' → logprob: -4.515815734863281

Token 130: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48655468225479126
    2. 'arr' → logprob: -1.4865546226501465
    3. ' a' → logprob: -2.2365546226501465
    4. ' arr' → logprob: -3.2365546226501465
    5. ' array' → logprob: -6.3615546226501465
    6. 'array' → logprob: -6.4865546226501465
    7. 'lst' → logprob: -6.4865546226501465
    8. 'data' → logprob: -6.7365546226501465
    9. 'A' → logprob: -7.1115546226501465
    10. '*' → logprob: -7.2365546226501465

Token 131: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2039695531129837
    2. ' list' → logprob: -1.8289695978164673
    3. 'lst' → logprob: -4.953969478607178
    4. 'arr' → logprob: -5.703969478607178
    5. '_list' → logprob: -6.203969478607178
    6. 'sequence' → logprob: -6.328969478607178
    7. 'a' → logprob: -6.328969478607178
    8. ' tuple' → logprob: -6.703969478607178
    9. ' sequence' → logprob: -6.703969478607178
    10. 'array' → logprob: -7.328969478607178

Token 132: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7536451816558838
    2. 'arr' → logprob: -1.2536451816558838
    3. '   ' → logprob: -2.253645181655884
    4. ' a' → logprob: -2.503645181655884
    5. ',' → logprob: -3.628645181655884
    6. ' arr' → logprob: -4.878644943237305
    7. 'array' → logprob: -5.128644943237305
    8. ' array' → logprob: -5.503644943237305
    9. 'A' → logprob: -6.128644943237305
    10. 'values' → logprob: -6.753644943237305

Token 133: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27179431915283203
    2. 'arr' → logprob: -1.521794319152832
    3. 'A' → logprob: -4.896794319152832
    4. 'period' → logprob: -6.021794319152832
    5. 'p' → logprob: -6.396794319152832
    6. 'array' → logprob: -6.896794319152832
    7. 'lst' → logprob: -7.396794319152832
    8. ' a' → logprob: -7.396794319152832
    9. 'nums' → logprob: -7.521794319152832
    10. 'x' → logprob: -7.771794319152832

Token 134: ''.
' (ID: 49980)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.824273943901062
    2. ''' → logprob: -1.324273943901062
    3. ')' → logprob: -1.949273943901062
    4. '')' → logprob: -2.1992740631103516
    5. 'd' → logprob: -4.199274063110352
    6. ']' → logprob: -4.824274063110352
    7. ']'' → logprob: -5.199274063110352
    8. ' =' → logprob: -5.449274063110352
    9. 'a' → logprob: -6.574274063110352
    10. '']' → logprob: -6.699274063110352

Token 135: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3225982189178467
    2. ' d' → logprob: -1.8225982189178467
    3. '   ' → logprob: -2.1975982189178467
    4. '
' → logprob: -6.447598457336426
    5. '	d' → logprob: -7.072598457336426
    6. '    
' → logprob: -7.697598457336426
    7. ' 
' → logprob: -9.697598457336426
    8. '  
' → logprob: -10.572598457336426
    9. ' ' → logprob: -10.822598457336426
    10. '  ' → logprob: -11.447598457336426

Token 136: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.053529828786849976
    2. ' d' → logprob: -3.303529739379883
    3. '   ' → logprob: -4.178529739379883
    4. '	d' → logprob: -10.428529739379883
    5. '    
' → logprob: -11.678529739379883
    6. ' ' → logprob: -13.178529739379883
    7. '  ' → logprob: -13.178529739379883
    8. '
' → logprob: -13.553529739379883
    9. ' 
' → logprob: -13.678529739379883
    10. '    ' → logprob: -14.303529739379883

Token 137: ' The' (ID: 623)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10073883086442947
    2. ' d' → logprob: -2.350738763809204
    3. '   ' → logprob: -7.600739002227783
    4. '
' → logprob: -11.225738525390625
    5. '	d' → logprob: -11.475738525390625
    6. ' 
' → logprob: -12.975738525390625
    7. '    
' → logprob: -13.475738525390625
    8. ' ' → logprob: -13.975738525390625
    9. '```' → logprob: -13.975738525390625
    10. ' ' → logprob: -14.475738525390625

Token 138: ' a' (ID: 261)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01829158514738083
    2. ' d' → logprob: -4.018291473388672
    3. '_' → logprob: -10.518291473388672
    4. ' next' → logprob: -10.893291473388672
    5. 'next' → logprob: -11.018291473388672
    6. '_d' → logprob: -11.143291473388672
    7. '`' → logprob: -11.393291473388672
    8. '
' → logprob: -11.643291473388672
    9. '```' → logprob: -12.268291473388672
    10. '#' → logprob: -12.393291473388672

Token 139: 'sterisk' (ID: 142024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5601592659950256
    2. 'r' → logprob: -1.3101592063903809
    3. 'd' → logprob: -2.060159206390381
    4. ' =' → logprob: -4.060159206390381
    5. '*' → logprob: -5.185159206390381
    6. 'p' → logprob: -5.560159206390381
    7. '[' → logprob: -6.810159206390381
    8. 's' → logprob: -7.185159206390381
    9. '_' → logprob: -7.435159206390381
    10. ',' → logprob: -7.560159206390381

Token 140: ' '*'' (ID: 89603)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11672118306159973
    2. ' d' → logprob: -2.3667211532592773
    3. '*d' → logprob: -4.491721153259277
    4. ' =' → logprob: -6.366721153259277
    5. '*' → logprob: -7.116721153259277
    6. ' *' → logprob: -7.241721153259277
    7. '=d' → logprob: -7.241721153259277
    8. '=' → logprob: -7.491721153259277
    9. ' is' → logprob: -8.366721153259277
    10. '	d' → logprob: -9.366721153259277

Token 141: ' causes' (ID: 16431)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012481278739869595
    2. ' operator' → logprob: -4.762481212615967
    3. 'operator' → logprob: -7.387481212615967
    4. ' is' → logprob: -7.387481212615967
    5. ' d' → logprob: -7.637481212615967
    6. ' un' → logprob: -7.762481212615967
    7. 'un' → logprob: -8.262481689453125
    8. '*d' → logprob: -8.262481689453125
    9. ' unpack' → logprob: -8.637481689453125
    10. ' indicates' → logprob: -8.762481689453125

Token 142: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04578230530023575
    2. ' d' → logprob: -3.1707823276519775
    3. ' the' → logprob: -5.920782089233398
    4. 'the' → logprob: -9.545782089233398
    5. '*d' → logprob: -11.295782089233398
    6. ' a' → logprob: -12.670782089233398
    7. ' them' → logprob: -13.295782089233398
    8. '	d' → logprob: -13.420782089233398
    9. ''d' → logprob: -14.045782089233398
    10. ' ' → logprob: -14.170782089233398

Token 143: ' '' (ID: 461)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0803147703409195
    2. 'list' → logprob: -2.955314874649048
    3. 'rest' → logprob: -4.205314636230469
    4. 'next' → logprob: -5.830314636230469
    5. 'input' → logprob: -6.330314636230469
    6. '*d' → logprob: -6.580314636230469
    7. ' list' → logprob: -6.955314636230469
    8. ' rest' → logprob: -7.080314636230469
    9. '*' → logprob: -7.330314636230469
    10. 'remaining' → logprob: -7.705314636230469

Token 144: 'map' (ID: 3726)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009700604132376611
    2. 'input' → logprob: -7.375969886779785
    3. 'list' → logprob: -9.250969886779785
    4. '*' → logprob: -9.500969886779785
    5. '*d' → logprob: -9.625969886779785
    6. ' d' → logprob: -10.125969886779785
    7. 'rest' → logprob: -10.500969886779785
    8. 'numbers' → logprob: -12.875969886779785
    9. '[d' → logprob: -13.000969886779785
    10. 'lst' → logprob: -13.000969886779785

Token 145: ''' (ID: 6)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10795807838439941
    2. '(' → logprob: -2.9829580783843994
    3. '(list' → logprob: -3.6079580783843994
    4. 'list' → logprob: -3.9829580783843994
    5. '(str' → logprob: -7.35795783996582
    6. '(*' → logprob: -7.35795783996582
    7. '(d' → logprob: -7.48295783996582
    8. ' list' → logprob: -7.85795783996582
    9. '_list' → logprob: -7.85795783996582
    10. 'int' → logprob: -7.98295783996582

Token 146: ' results' (ID: 4376)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6854799389839172
    2. ' object' → logprob: -1.5604798793792725
    3. 'object' → logprob: -1.6854798793792725
    4. 'result' → logprob: -3.4354798793792725
    5. 'to' → logprob: -3.9354798793792725
    6. ' operator' → logprob: -3.9354798793792725
    7. ' result' → logprob: -5.060480117797852
    8. 'd' → logprob: -6.185480117797852
    9. 'operator' → logprob: -6.185480117797852
    10. 'ed' → logprob: -6.310480117797852

Token 147: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007818367332220078
    2. 'to' → logprob: -5.507818222045898
    3. 'd' → logprob: -6.382818222045898
    4. ' list' → logprob: -8.132818222045898
    5. ')' → logprob: -8.257818222045898
    6. '   ' → logprob: -8.507818222045898
    7. ',' → logprob: -8.632818222045898
    8. ' d' → logprob: -8.757818222045898
    9. ' ' → logprob: -8.882818222045898
    10. 'list' → logprob: -9.007818222045898

Token 148: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.31734776496887207
    2. 'list' → logprob: -2.317347764968872
    3. 'd' → logprob: -2.817347764968872
    4. 'be' → logprob: -3.817347764968872
    5. ' unpack' → logprob: -3.817347764968872
    6. ' list' → logprob: -4.067347526550293
    7. 'expand' → logprob: -4.192347526550293
    8. ' become' → logprob: -4.692347526550293
    9. 'un' → logprob: -4.817347526550293
    10. '_list' → logprob: -5.317347526550293

Token 149: ' unpack' (ID: 61704)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13727690279483795
    2. 'd' → logprob: -2.1372768878936768
    3. 'col' → logprob: -5.887277126312256
    4. ' list' → logprob: -6.387277126312256
    5. 'expanded' → logprob: -6.512277126312256
    6. 'capt' → logprob: -6.762277126312256
    7. ' collected' → logprob: -7.512277126312256
    8. '[' → logprob: -7.637277126312256
    9. 'stored' → logprob: -8.387276649475098
    10. 'lst' → logprob: -8.512276649475098

Token 150: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.607391408877447e-05
    2. 'd' → logprob: -10.500036239624023
    3. '*' → logprob: -12.875036239624023
    4. 'ted' → logprob: -13.250036239624023
    5. 'led' → logprob: -13.375036239624023
    6. 'red' → logprob: -13.375036239624023
    7. 'e' → logprob: -15.750036239624023
    8. ')' → logprob: -16.000036239624023
    9. 'eted' → logprob: -16.125036239624023
    10. 'aged' → logprob: -16.250036239624023

Token 151: ' into' (ID: 1511)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7745275497436523
    2. ',' → logprob: -1.6495275497436523
    3. ' d' → logprob: -2.0245275497436523
    4. '   ' → logprob: -2.2745275497436523
    5. ' into' → logprob: -2.2745275497436523
    6. ',d' → logprob: -6.274527549743652
    7. ')' → logprob: -6.524527549743652
    8. ' to' → logprob: -6.649527549743652
    9. ' ,' → logprob: -6.774527549743652
    10. ' and' → logprob: -7.024527549743652

Token 152: ' the' (ID: 290)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3815872073173523
    2. 'a' → logprob: -2.131587266921997
    3. ' a' → logprob: -2.756587266921997
    4. 'list' → logprob: -2.881587266921997
    5. ' d' → logprob: -3.381587266921997
    6. ' the' → logprob: -3.631587266921997
    7. 'the' → logprob: -4.256587028503418
    8. ' list' → logprob: -6.006587028503418
    9. '[]' → logprob: -7.381587028503418
    10. '[d' → logprob: -7.381587028503418

Token 153: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.041995640844106674
    2. ' list' → logprob: -3.2919955253601074
    3. 'd' → logprob: -5.541995525360107
    4. 'elements' → logprob: -11.791996002197266
    5. 'array' → logprob: -12.041996002197266
    6. '[]' → logprob: -12.416996002197266
    7. '`' → logprob: -12.916996002197266
    8. ' d' → logprob: -13.416996002197266
    9. 'lst' → logprob: -13.416996002197266
    10. ' elements' → logprob: -14.291996002197266

Token 154: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03586658835411072
    2. ' d' → logprob: -3.5358664989471436
    3. '   ' → logprob: -6.660866737365723
    4. '.' → logprob: -6.660866737365723
    5. ',' → logprob: -6.910866737365723
    6. ' =' → logprob: -8.410866737365723
    7. '_d' → logprob: -8.410866737365723
    8. 'elements' → logprob: -8.535866737365723
    9. '[d' → logprob: -8.660866737365723
    10. '=d' → logprob: -8.785866737365723

Token 155: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20418795943260193
    2. ' d' → logprob: -1.7041879892349243
    3. '   ' → logprob: -6.079187870025635
    4. '[' → logprob: -8.579188346862793
    5. ' ' → logprob: -10.329188346862793
    6. ',' → logprob: -10.579188346862793
    7. '    
' → logprob: -10.579188346862793
    8. '	d' → logprob: -10.704188346862793
    9. ' 
' → logprob: -10.954188346862793
    10. '`' → logprob: -10.954188346862793

Token 156: ' *' (ID: 425)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022897832095623016
    2. ' d' → logprob: -6.127289772033691
    3. '*d' → logprob: -9.627289772033691
    4. '   ' → logprob: -11.252289772033691
    5. '*' (adapté à ' *') → logprob: -11.377289772033691
    6. '[' → logprob: -12.502289772033691
    7. 'data' → logprob: -12.627289772033691
    8. '[d' → logprob: -14.002289772033691
    9. '`' → logprob: -14.002289772033691
    10. '_d' → logprob: -14.127289772033691

Token 157: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0017095671501010656
    2. ' d' → logprob: -6.376709461212158
    3. '   ' → logprob: -13.626709938049316
    4. '[' → logprob: -13.626709938049316
    5. '`' → logprob: -14.126709938049316
    6. 'map' → logprob: -14.376709938049316
    7. '=' → logprob: -15.126709938049316
    8. ' ' → logprob: -15.251709938049316
    9. '```' → logprob: -15.251709938049316
    10. '_d' → logprob: -15.376709938049316

Token 158: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03379126638174057
    2. ' =' → logprob: -3.4087913036346436
    3. ',' → logprob: -9.283791542053223
    4. '=[]' → logprob: -10.533791542053223
    5. '=[' → logprob: -12.033791542053223
    6. '=list' → logprob: -12.158791542053223
    7. ')' → logprob: -12.658791542053223
    8. 's' → logprob: -13.033791542053223
    9. '[' → logprob: -13.408791542053223
    10. 'd' → logprob: -13.533791542053223

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20159907639026642
    2. ' =' → logprob: -1.70159912109375
    3. 'd' → logprob: -10.07659912109375
    4. '_' → logprob: -10.07659912109375
    5. ' ' → logprob: -10.45159912109375
    6. '=input' → logprob: -11.45159912109375
    7. '_=' → logprob: -11.57659912109375
    8. 's' → logprob: -12.20159912109375
    9. '   ' → logprob: -12.32659912109375
    10. '=[]' → logprob: -12.57659912109375

Token 160: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0001584850688232109
    2. ' map' → logprob: -8.750158309936523
    3. '(map' → logprob: -17.500158309936523
    4. '	map' → logprob: -17.625158309936523
    5. '   ' → logprob: -17.875158309936523
    6. ' ' → logprob: -18.375158309936523
    7. 'list' → logprob: -18.500158309936523
    8. '  ' → logprob: -18.875158309936523
    9. 'm' → logprob: -20.625158309936523
    10. 'input' → logprob: -21.125158309936523

Token 161: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020652047533076257
    2. '(' → logprob: -8.87520694732666
    3. 'int' → logprob: -10.25020694732666
    4. '(lambda' → logprob: -11.50020694732666
    5. '[int' → logprob: -11.62520694732666
    6. '<int' → logprob: -12.00020694732666
    7. '<|end|>' → logprob: -12.50020694732666
    8. '=int' → logprob: -14.37520694732666
    9. '(
' → logprob: -14.62520694732666
    10. '```' → logprob: -14.87520694732666

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13159386813640594
    2. ',input' → logprob: -2.131593942642212
    3. '(input' → logprob: -5.506593704223633
    4. 'input' → logprob: -7.881593704223633
    5. '(' → logprob: -8.631593704223633
    6. ' ,' → logprob: -10.506593704223633
    7. ')' → logprob: -12.506593704223633
    8. ' (' → logprob: -13.381593704223633
    9. '```' → logprob: -13.381593704223633
    10. ' input' → logprob: -13.631593704223633

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. '(input' → logprob: -18.251171112060547
    4. ' ' → logprob: -19.251171112060547
    5. ')' → logprob: -19.376171112060547
    6. ',input' → logprob: -20.126171112060547
    7. '=input' → logprob: -20.626171112060547
    8. '   ' → logprob: -21.126171112060547
    9. '	input' → logprob: -21.251171112060547
    10. '.input' → logprob: -21.501171112060547

Token 164: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.2524021157296374e-05
    2. '()' → logprob: -9.875052452087402
    3. ' ().' → logprob: -14.375052452087402
    4. ')' → logprob: -15.250052452087402
    5. '())' → logprob: -16.50005340576172
    6. '.' → logprob: -17.37505340576172
    7. '().__' → logprob: -17.87505340576172
    8. '()
' → logprob: -18.75005340576172
    9. '(' → logprob: -18.87505340576172
    10. '()[' → logprob: -19.25005340576172

Token 165: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3319124011322856e-05
    2. 'strip' → logprob: -10.750022888183594
    3. 'read' → logprob: -13.500022888183594
    4. ' split' → logprob: -16.000022888183594
    5. 'rstrip' → logprob: -16.250022888183594
    6. ')' → logprob: -17.000022888183594
    7. '(split' → logprob: -17.125022888183594
    8. 'plit' → logprob: -17.500022888183594
    9. '.split' → logprob: -18.000022888183594
    10. 'spl' → logprob: -18.375022888183594

Token 166: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39782360196113586
    2. ')' → logprob: -1.1478235721588135
    3. '()' → logprob: -4.522823810577393
    4. '(' → logprob: -11.272823333740234
    5. ' ())' → logprob: -11.272823333740234
    6. ' )' → logprob: -12.522823333740234
    7. '())
' → logprob: -12.897823333740234
    8. '());' → logprob: -14.147823333740234
    9. '))' → logprob: -14.522823333740234
    10. '(),' → logprob: -15.022823333740234

Token 167: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017285175621509552
    2. '   ' → logprob: -4.642285346984863
    3. '<|end|>' → logprob: -5.642285346984863
    4. '    
' → logprob: -6.392285346984863
    5. '\n' → logprob: -8.017285346984863
    6. '  
' → logprob: -8.142285346984863
    7. 'def' → logprob: -8.267285346984863
    8. ' 
' → logprob: -8.392285346984863
    9. '[' → logprob: -8.642285346984863
    10. '#' → logprob: -8.642285346984863

Token 168: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7419176697731018
    2. '   ' → logprob: -1.366917610168457
    3. 'for' → logprob: -1.616917610168457
    4. 'def' → logprob: -3.991917610168457
    5. '    
' → logprob: -3.991917610168457
    6. ' for' → logprob: -4.741917610168457
    7. 'd' → logprob: -4.991917610168457
    8. '#' (adapté à ' #') → logprob: -5.116917610168457
    9. 'n' → logprob: -5.991917610168457
    10. '```' → logprob: -6.116917610168457

Token 169: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28436005115509033
    2. 'def' → logprob: -2.159359931945801
    3. 'from' → logprob: -3.409359931945801
    4. 'answers' → logprob: -3.534359931945801
    5. 'results' → logprob: -3.534359931945801
    6. 'prefix' → logprob: -4.409359931945801
    7. '#' → logprob: -5.159359931945801
    8. 'result' → logprob: -5.159359931945801
    9. 'd' → logprob: -5.534359931945801
    10. 'res' → logprob: -6.159359931945801

Token 170: ' next' (ID: 2613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9431033134460449
    2. 'for' → logprob: -2.443103313446045
    3. '#' → logprob: -2.568103313446045
    4. 'n' → logprob: -2.693103313446045
    5. ' for' → logprob: -2.943103313446045
    6. ' def' → logprob: -2.943103313446045
    7. 'd' → logprob: -3.193103313446045
    8. 'dp' → logprob: -3.568103313446045
    9. 'result' → logprob: -3.818103313446045
    10. 'answers' → logprob: -4.068103313446045

Token 171: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1489248275756836
    2. ' for' → logprob: -1.3989248275756836
    3. ' line' → logprob: -1.7739248275756836
    4. ' ' → logprob: -2.5239248275756836
    5. 'line' → logprob: -2.6489248275756836
    6. ' lines' → logprob: -3.2739248275756836
    7. '#' → logprob: -3.6489248275756836
    8. '   ' → logprob: -3.7739248275756836
    9. ' step' → logprob: -5.023924827575684
    10. 'lines' → logprob: -5.898924827575684

Token 172: ' will' (ID: 738)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5229464173316956
    2. ':' → logprob: -1.7729463577270508
    3. '#' → logprob: -2.772946357727051
    4. '<|end|>' → logprob: -3.272946357727051
    5. 's' → logprob: -3.522946357727051
    6. 'def' → logprob: -3.647946357727051
    7. ' for' → logprob: -4.772946357727051
    8. ',' → logprob: -5.147946357727051
    9. '```' → logprob: -5.147946357727051
    10. '    
' → logprob: -5.147946357727051

Token 173: ' handle' (ID: 5318)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5528424382209778
    2. ' define' → logprob: -1.802842378616333
    3. ' continue' → logprob: -2.302842378616333
    4. ' likely' → logprob: -3.302842378616333
    5. ' be' → logprob: -4.302842617034912
    6. '<|end|>' → logprob: -4.302842617034912
    7. 'process' → logprob: -4.552842617034912
    8. ' calculate' → logprob: -4.677842617034912
    9. ' analyze' → logprob: -4.927842617034912
    10. ' handle' → logprob: -5.052842617034912

Token 174: ' multiple' (ID: 7598)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17052814364433289
    2. ' queries' → logprob: -2.0455281734466553
    3. ' each' → logprob: -4.420527935028076
    4. ' q' → logprob: -5.420527935028076
    5. 'the' → logprob: -6.170527935028076
    6. ' ' → logprob: -6.170527935028076
    7. ' a' → logprob: -6.420527935028076
    8. '_queries' → logprob: -6.670527935028076
    9. 'queries' → logprob: -6.920527935028076
    10. ' for' → logprob: -7.545527935028076

Token 175: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.1150466650724411
    2. 'queries' → logprob: -2.865046739578247
    3. ' lines' → logprob: -3.365046739578247
    4. ' for' → logprob: -4.490046501159668
    5. 'for' → logprob: -6.240046501159668
    6. ' query' → logprob: -6.990046501159668
    7. '_queries' → logprob: -6.990046501159668
    8. 'lines' → logprob: -7.490046501159668
    9. 'query' → logprob: -7.740046501159668
    10. ' q' → logprob: -7.990046501159668

Token 176: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31234464049339294
    2. ' for' → logprob: -2.062344551086426
    3. '   ' → logprob: -2.312344551086426
    4. '<|end|>' → logprob: -3.687344551086426
    5. '
' → logprob: -4.437344551086426
    6. '    
' → logprob: -6.437344551086426
    7. '.' → logprob: -7.187344551086426
    8. ':' → logprob: -7.312344551086426
    9. '<|end|>' → logprob: -7.312344551086426
    10. '\n' → logprob: -8.312344551086426

Token 177: 'q' (ID: 80)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5674951076507568
    2. 'for' → logprob: -0.9424951076507568
    3. '   ' → logprob: -3.567495107650757
    4. ')' → logprob: -4.317495346069336
    5. ':' → logprob: -7.567495346069336
    6. '<|end|>' → logprob: -7.567495346069336
    7. '.' → logprob: -8.192495346069336
    8. '
' → logprob: -8.942495346069336
    9. '```' → logprob: -9.317495346069336
    10. ' ' → logprob: -9.692495346069336

Token 178: ' times' (ID: 4238)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0451792478561401
    2. 'for' → logprob: -1.4201792478561401
    3. '):' → logprob: -1.5451792478561401
    4. ':' → logprob: -2.0451793670654297
    5. ' for' → logprob: -2.9201793670654297
    6. '   ' → logprob: -5.29517936706543
    7. '):
' → logprob: -5.79517936706543
    8. '.' → logprob: -7.79517936706543
    9. ':
' → logprob: -8.04517936706543
    10. '=' → logprob: -8.42017936706543

Token 179: ').
' (ID: 6294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3263850808143616
    2. '   ' → logprob: -2.326385021209717
    3. ')' → logprob: -2.826385021209717
    4. 'for' → logprob: -3.201385021209717
    5. '):' → logprob: -3.326385021209717
    6. ' for' → logprob: -3.451385021209717
    7. '.' → logprob: -5.201385021209717
    8. ',' → logprob: -5.451385021209717
    9. ':
' → logprob: -6.701385021209717
    10. '):
' → logprob: -7.576385021209717

Token 180: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6067580580711365
    2. '   ' → logprob: -1.7317581176757812
    3. 'for' → logprob: -1.7317581176757812
    4. ' for' → logprob: -2.7317581176757812
    5. '    
' → logprob: -4.356758117675781
    6. '\n' → logprob: -4.731758117675781
    7. '<|end|>' → logprob: -5.356758117675781
    8. ' 
' → logprob: -5.731758117675781
    9. '  
' → logprob: -6.106758117675781
    10. '```' → logprob: -6.731758117675781

Token 181: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4786282777786255
    2. ' for' → logprob: -1.6036282777786255
    3. '   ' → logprob: -1.8536282777786255
    4. '
' → logprob: -4.103628158569336
    5. '    
' → logprob: -6.228628158569336
    6. '```' → logprob: -6.728628158569336
    7. '\n' → logprob: -6.853628158569336
    8. '	for' → logprob: -7.228628158569336
    9. ' 
' → logprob: -7.228628158569336
    10. ' ' → logprob: -9.853628158569336

Token 182: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25249648094177246
    2. ' for' → logprob: -1.5024964809417725
    3. '   ' → logprob: -7.502496719360352
    4. '
' → logprob: -12.002496719360352
    5. '	for' → logprob: -12.252496719360352
    6. '```' → logprob: -12.877496719360352
    7. '    
' → logprob: -13.877496719360352
    8. ' 
' → logprob: -14.377496719360352
    9. '    ' → logprob: -16.25249671936035
    10. 'n' → logprob: -17.00249671936035

Token 183: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023284267634153366
    2. ' _' → logprob: -3.7732841968536377
    3. ' i' → logprob: -10.773283958435059
    4. 'i' → logprob: -11.898283958435059
    5. '_i' → logprob: -12.398283958435059
    6. ' ' → logprob: -12.898283958435059
    7. '_query' → logprob: -14.023283958435059
    8. ' ' → logprob: -14.023283958435059
    9. '_each' → logprob: -14.148283958435059
    10. '__' → logprob: -14.273283958435059

Token 184: ' query' (ID: 5703)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4745982885360718
    2. ' _' → logprob: -0.9745982885360718
    3. ' i' → logprob: -8.474597930908203
    4. ' ' → logprob: -9.224597930908203
    5. ' ' → logprob: -9.974597930908203
    6. ' in' → logprob: -10.224597930908203
    7. '__' → logprob: -10.349597930908203
    8. 'i' → logprob: -10.349597930908203
    9. ' query' → logprob: -10.474597930908203
    10. ' __' → logprob: -11.724597930908203

Token 185: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5800684094429016
    2. ',' → logprob: -0.8300684094429016
    3. ':
' → logprob: -6.205068588256836
    4. '   ' → logprob: -6.830068588256836
    5. ' ,' → logprob: -7.330068588256836
    6. ' :' → logprob: -9.330068588256836
    7. ',
' → logprob: -9.580068588256836
    8. '<|end|>' → logprob: -10.205068588256836
    9. '(' → logprob: -11.205068588256836
    10. '.' → logprob: -11.205068588256836

Token 186: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4253841042518616
    2. ' for' → logprob: -2.050384044647217
    3. '    ' → logprob: -2.425384044647217
    4. ' n' → logprob: -3.675384044647217
    5. ' i' → logprob: -4.050384044647217
    6. ' t' → logprob: -4.050384044647217
    7. ' l' → logprob: -4.175384044647217
    8. ' ' → logprob: -5.175384044647217
    9. ' s' → logprob: -5.300384044647217
    10. ' 
' → logprob: -5.300384044647217

Token 187: ' will' (ID: 738)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4054756462574005
    2. ' ' → logprob: -2.155475616455078
    3. ' for' → logprob: -2.155475616455078
    4. '   ' → logprob: -2.780475616455078
    5. '    ' → logprob: -4.155475616455078
    6. ':' → logprob: -5.530475616455078
    7. 'n' → logprob: -5.655475616455078
    8. ' will' → logprob: -5.905475616455078
    9. '  ' → logprob: -6.155475616455078
    10. ' have' → logprob: -6.655475616455078

Token 188: ' effectively' (ID: 18130)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.6107443571090698
    2. '   ' → logprob: -1.9857443571090698
    3. 'for' → logprob: -2.1107444763183594
    4. ' ' → logprob: -2.3607444763183594
    5. ' for' → logprob: -2.7357444763183594
    6. ' continue' → logprob: -5.110744476318359
    7. '  ' → logprob: -5.610744476318359
    8. ' process' → logprob: -5.860744476318359
    9. '    
' → logprob: -5.860744476318359
    10. ' 
' → logprob: -6.110744476318359

Token 189: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0005539655685425
    2. ':' → logprob: -1.3755539655685425
    3. ' ' → logprob: -1.5005539655685425
    4. '    ' → logprob: -2.625554084777832
    5. ' continue' → logprob: -3.750554084777832
    6. 'for' → logprob: -4.500554084777832
    7. '  ' → logprob: -4.625554084777832
    8. ' process' → logprob: -5.125554084777832
    9. ' 
' → logprob: -5.500554084777832
    10. ' for' → logprob: -5.625554084777832

Token 190: 'clone' (ID: 43139)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10704946517944336
    2. ' for' → logprob: -2.4820494651794434
    3. '_' → logprob: -5.232049465179443
    4. '
' → logprob: -6.357049465179443
    5. 'def' → logprob: -6.357049465179443
    6. '   ' → logprob: -6.482049465179443
    7. 'process' → logprob: -6.982049465179443
    8. 'n' → logprob: -7.357049465179443
    9. 'do' → logprob: -7.357049465179443
    10. ' process' → logprob: -7.607049465179443

Token 191: '"' (ID: 1)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4713844656944275
    2. ' an' → logprob: -1.8463845252990723
    3. ' iter' → logprob: -2.4713845252990723
    4. '()' → logprob: -2.8463845252990723
    5. '(' → logprob: -3.8463845252990723
    6. 'the' → logprob: -4.346384525299072
    7. ' a' → logprob: -4.596384525299072
    8. 'd' → logprob: -4.846384525299072
    9. ' d' → logprob: -5.221384525299072
    10. ' (' → logprob: -5.471384525299072

Token 192: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5111667513847351
    2. ' d' → logprob: -1.5111668109893799
    3. 'd' → logprob: -2.63616681098938
    4. ' an' → logprob: -3.01116681098938
    5. 'the' → logprob: -3.26116681098938
    6. ' iter' → logprob: -5.011166572570801
    7. '    ' → logprob: -6.011166572570801
    8. '_' → logprob: -6.386166572570801
    9. '   ' → logprob: -6.636166572570801
    10. ' a' → logprob: -6.761166572570801

Token 193: ' list' (ID: 1562)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8642718195915222
    2. ' iter' → logprob: -1.364271879196167
    3. 'd' → logprob: -2.114271879196167
    4. ' iterator' → logprob: -2.239271879196167
    5. ' sequence' → logprob: -3.739271879196167
    6. ' array' → logprob: -4.114271640777588
    7. 'iterator' → logprob: -4.864271640777588
    8. ' input' → logprob: -5.114271640777588
    9. ' iterable' → logprob: -5.114271640777588
    10. ' for' → logprob: -5.239271640777588

Token 194: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9543934464454651
    2. 'd' → logprob: -1.4543933868408203
    3. ' d' → logprob: -1.8293933868408203
    4. ' for' → logprob: -1.9543933868408203
    5. ' of' → logprob: -3.4543933868408203
    6. 'for' → logprob: -4.20439338684082
    7. ' to' → logprob: -5.20439338684082
    8. ' iter' → logprob: -5.57939338684082
    9. 's' → logprob: -5.95439338684082
    10. ' with' → logprob: -6.45439338684082

Token 195: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1430606096982956
    2. ' d' → logprob: -2.0180606842041016
    3. ' iter' → logprob: -10.143060684204102
    4. ')' → logprob: -10.393060684204102
    5. 'iter' → logprob: -10.643060684204102
    6. 's' → logprob: -10.705560684204102
    7. ' itertools' → logprob: -10.830560684204102
    8. ' ' → logprob: -10.893060684204102
    9. 'it' → logprob: -11.080560684204102
    10. ',' → logprob: -11.393060684204102

Token 196: ''' (ID: 6)
  Prédit: ' using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' using' → logprob: -1.1532063484191895
    2. ' and' → logprob: -1.5282063484191895
    3. ' to' → logprob: -2.0282063484191895
    4. ',' → logprob: -2.1532063484191895
    5. ' for' → logprob: -2.9032063484191895
    6. ' with' → logprob: -3.1532063484191895
    7. '   ' → logprob: -3.7782063484191895
    8. ' into' → logprob: -4.0282063484191895
    9. ')' → logprob: -4.0282063484191895
    10. ' twice' → logprob: -4.4032063484191895

Token 197: ' using' (ID: 2360)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0794869661331177
    2. '   ' → logprob: -1.2044869661331177
    3. ' and' → logprob: -1.5794869661331177
    4. '<|end|>' → logprob: -2.954486846923828
    5. ' for' → logprob: -3.579486846923828
    6. 'and' → logprob: -3.704486846923828
    7. ' to' → logprob: -4.079486846923828
    8. 'for' → logprob: -4.579486846923828
    9. '.' → logprob: -5.579486846923828
    10. ' ' → logprob: -6.329486846923828

Token 198: ' itertools' (ID: 103178)
  Prédit: ' tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tee' → logprob: -0.08103310316801071
    2. 'tee' → logprob: -2.5810329914093018
    3. ' d' → logprob: -6.956033229827881
    4. 'd' → logprob: -7.331033229827881
    5. ' itertools' → logprob: -8.831032752990723
    6. ' iter' → logprob: -9.331032752990723
    7. ' list' → logprob: -9.956032752990723
    8. 'list' → logprob: -10.081032752990723
    9. '`' → logprob: -10.706032752990723
    10. ' deepcopy' → logprob: -10.706032752990723

Token 199: '.' (ID: 13)
  Prédit: ' tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tee' → logprob: -0.6679549217224121
    2. 'tee' → logprob: -1.667954921722412
    3. '   ' → logprob: -2.292954921722412
    4. '.' → logprob: -2.292954921722412
    5. 'def' → logprob: -3.917954921722412
    6. ' to' → logprob: -3.917954921722412
    7. ',' → logprob: -4.292954921722412
    8. ' for' → logprob: -4.542954921722412
    9. 'import' → logprob: -5.292954921722412
    10. ' chain' → logprob: -6.042954921722412

Token 200: 'tee' (ID: 11140)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0914418026804924
    2. ' for' → logprob: -2.9664418697357178
    3. '    ' → logprob: -4.216441631317139
    4. 'for' → logprob: -4.841441631317139
    5. '<|end|>' → logprob: -5.841441631317139
    6. '
' → logprob: -5.966441631317139
    7. '    
' → logprob: -6.091441631317139
    8. '```' → logprob: -6.841441631317139
    9. ' ' → logprob: -7.341441631317139
    10. ' 
' → logprob: -7.466441631317139

Token 201: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11684984713792801
    2. '<|end|>' → logprob: -3.366849899291992
    3. '    
' → logprob: -4.116849899291992
    4. ':' → logprob: -4.241849899291992
    5. ' for' → logprob: -4.616849899291992
    6. 'for' → logprob: -4.866849899291992
    7. ',' → logprob: -4.991849899291992
    8. '.' → logprob: -5.241849899291992
    9. ' ' → logprob: -5.366849899291992
    10. '<|end|>' → logprob: -5.991849899291992

Token 202: ' prevent' (ID: 7332)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.3541777729988098
    2. 'process' → logprob: -1.979177713394165
    3. ' handle' → logprob: -3.229177713394165
    4. ' create' → logprob: -3.354177713394165
    5. ' get' → logprob: -3.729177713394165
    6. ' avoid' → logprob: -4.354177951812744
    7. 'handle' → logprob: -4.979177951812744
    8. 'create' → logprob: -5.354177951812744
    9. 'get' → logprob: -5.729177951812744
    10. ' preserve' → logprob: -5.854177951812744

Token 203: ' iterator' (ID: 30787)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.8332998752593994
    2. ' modifying' → logprob: -1.9582998752593994
    3. ' memory' → logprob: -2.2082998752593994
    4. ' input' → logprob: -2.3332998752593994
    5. ' the' → logprob: -2.3332998752593994
    6. ' any' → logprob: -2.9582998752593994
    7. ' iterator' → logprob: -3.0832998752593994
    8. ' an' → logprob: -3.2082998752593994
    9. ' modification' → logprob: -3.7082998752593994
    10. ' repeated' → logprob: -3.9582998752593994

Token 204: ' exhaustion' (ID: 132924)
  Prédit: ' exhaustion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exhaustion' → logprob: -0.11024496704339981
    2. ' consumption' → logprob: -3.2352449893951416
    3. 'ex' → logprob: -3.4852449893951416
    4. 'cons' → logprob: -4.4852447509765625
    5. ' invalid' → logprob: -4.6102447509765625
    6. ' state' → logprob: -5.8602447509765625
    7. ' being' → logprob: -6.2352447509765625
    8. ' from' → logprob: -6.6102447509765625
    9. 'state' → logprob: -7.4852447509765625
    10. 's' → logprob: -7.4852447509765625

Token 205: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007435300387442112
    2. '<|end|>' → logprob: -6.507435321807861
    3. '    
' → logprob: -6.632435321807861
    4. ',' → logprob: -6.757435321807861
    5. '.' → logprob: -6.757435321807861
    6. ' for' → logprob: -7.007435321807861
    7. 'for' → logprob: -7.132435321807861
    8. ':' → logprob: -8.507434844970703
    9. '<|end|>' → logprob: -9.257434844970703
    10. '
' → logprob: -9.632434844970703

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024433603510260582
    2. ' and' → logprob: -4.524433612823486
    3. '<|end|>' → logprob: -5.149433612823486
    4. '    
' → logprob: -6.524433612823486
    5. '    ' → logprob: -6.524433612823486
    6. ' for' → logprob: -6.649433612823486
    7. ' ' → logprob: -7.399433612823486
    8. ',' → logprob: -7.399433612823486
    9. 'and' → logprob: -8.024433135986328
    10. '  ' → logprob: -8.399433135986328

Token 207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4992671012878418
    2. ' and' → logprob: -1.2492671012878418
    3. ' then' → logprob: -2.999267101287842
    4. 'and' → logprob: -3.374267101287842
    5. '    ' → logprob: -5.124267101287842
    6. '    
' → logprob: -5.999267101287842
    7. '#' (adapté à ' #') → logprob: -6.124267101287842
    8. '<|end|>' → logprob: -6.499267101287842
    9. '       ' → logprob: -6.749267101287842
    10. '  ' → logprob: -6.749267101287842

Token 208: ' because' (ID: 2236)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.705615758895874
    2. '   ' → logprob: -1.330615758895874
    3. ' then' → logprob: -1.830615758895874
    4. 'and' → logprob: -3.205615758895874
    5. '    ' → logprob: -4.080615997314453
    6. ' d' → logprob: -5.205615997314453
    7. 'd' → logprob: -5.830615997314453
    8. ',' → logprob: -6.580615997314453
    9. '  ' → logprob: -6.705615997314453
    10. '    
' → logprob: -6.705615997314453

Token 209: ' map' (ID: 4014)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6147547364234924
    2. ' the' → logprob: -1.6147546768188477
    3. ' we' → logprob: -1.8647546768188477
    4. 'd' → logprob: -2.7397546768188477
    5. ' next' → logprob: -5.239754676818848
    6. 'we' → logprob: -5.364754676818848
    7. ' iter' → logprob: -5.489754676818848
    8. 'the' → logprob: -5.614754676818848
    9. ' lists' → logprob: -5.989754676818848
    10. ' itertools' → logprob: -5.989754676818848

Token 210: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7816658616065979
    2. ',' → logprob: -1.6566658020019531
    3. '<|end|>' → logprob: -2.406665802001953
    4. ' and' → logprob: -2.531665802001953
    5. ' is' → logprob: -3.031665802001953
    6. '(
' → logprob: -3.781665802001953
    7. ')' → logprob: -4.406665802001953
    8. 'and' → logprob: -4.531665802001953
    9. '<|end|>' → logprob: -4.531665802001953
    10. '()' → logprob: -5.031665802001953

Token 211: ' is' (ID: 382)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -1.5615712404251099
    2. ' is' → logprob: -1.8115712404251099
    3. ' creates' → logprob: -2.4365711212158203
    4. ' produces' → logprob: -2.4365711212158203
    5. ',' → logprob: -2.6865711212158203
    6. ')' → logprob: -2.6865711212158203
    7. ' objects' → logprob: -2.8115711212158203
    8. ' can' → logprob: -3.3115711212158203
    9. ' will' → logprob: -3.6865711212158203
    10. ' results' → logprob: -3.8115711212158203

Token 212: ' lazy' (ID: 29082)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.58083575963974
    2. ' lazy' → logprob: -1.3308358192443848
    3. ' not' → logprob: -2.3308358192443848
    4. 'lazy' → logprob: -3.7058358192443848
    5. ' used' → logprob: -4.330835819244385
    6. 'an' → logprob: -4.330835819244385
    7. ' exhausted' → logprob: -5.205835819244385
    8. 'not' → logprob: -5.455835819244385
    9. ' consumed' → logprob: -5.580835819244385
    10. ' also' → logprob: -5.705835819244385

Token 213: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23208549618721008
    2. ',' → logprob: -1.8570854663848877
    3. '<|end|>' → logprob: -3.8570854663848877
    4. ' and' → logprob: -5.107085704803467
    5. '.' → logprob: -5.232085704803467
    6. '    
' → logprob: -5.732085704803467
    7. '    ' → logprob: -5.982085704803467
    8. ' for' → logprob: -5.982085704803467
    9. '<|end|>' → logprob: -5.982085704803467
    10. '(' → logprob: -6.107085704803467

Token 214: ' '' (ID: 461)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.5698338150978088
    2. ' the' → logprob: -1.569833755493164
    3. ' d' → logprob: -3.444833755493164
    4. ' can' → logprob: -3.569833755493164
    5. ' next' → logprob: -3.694833755493164
    6. 'we' → logprob: -3.819833755493164
    7. ' iter' → logprob: -4.069833755493164
    8. ' once' → logprob: -4.069833755493164
    9. ' is' → logprob: -4.319833755493164
    10. ' input' → logprob: -5.569833755493164

Token 215: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5475741624832153
    2. ' d' → logprob: -2.047574043273926
    3. ''' → logprob: -2.297574043273926
    4. 'list' → logprob: -3.797574043273926
    5. 'next' → logprob: -3.922574043273926
    6. 'the' → logprob: -4.297574043273926
    7. ' the' → logprob: -4.297574043273926
    8. 'tee' → logprob: -4.297574043273926
    9. ' we' → logprob: -4.547574043273926
    10. 'we' → logprob: -4.672574043273926

Token 216: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005057756323367357
    2. ')'' → logprob: -5.6300578117370605
    3. ' is' → logprob: -7.1300578117370605
    4. ' '' → logprob: -8.380057334899902
    5. ')' → logprob: -9.255057334899902
    6. ''s' → logprob: -9.630057334899902
    7. '')' → logprob: -9.880057334899902
    8. '',' → logprob: -10.005057334899902
    9. '[' → logprob: -10.130057334899902
    10. ''is' → logprob: -11.130057334899902

Token 217: ' could' (ID: 2023)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.282925546169281
    2. ')' → logprob: -2.782925605773926
    3. 's' → logprob: -3.782925605773926
    4. ',' → logprob: -3.907925605773926
    5. ' =' → logprob: -3.907925605773926
    6. ' ' → logprob: -4.157925605773926
    7. ' iter' → logprob: -4.282925605773926
    8. '_iter' → logprob: -4.282925605773926
    9. ' might' → logprob: -4.657925605773926
    10. 'is' → logprob: -4.907925605773926

Token 218: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3970126807689667
    2. 'be' → logprob: -1.647012710571289
    3. ' not' → logprob: -2.772012710571289
    4. 'not' → logprob: -2.897012710571289
    5. 'already' → logprob: -5.272012710571289
    6. 'n't' → logprob: -5.897012710571289
    7. ' become' → logprob: -6.522012710571289
    8. '#' → logprob: -6.772012710571289
    9. ' already' → logprob: -6.772012710571289
    10. 'have' → logprob: -7.272012710571289

Token 219: ' reused' (ID: 130757)
  Prédit: ' reused'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reused' → logprob: -1.6715282201766968
    2. ' used' → logprob: -1.9215282201766968
    3. ' consumed' → logprob: -2.0465283393859863
    4. ' exhausted' → logprob: -2.1715283393859863
    5. 'used' → logprob: -2.5465283393859863
    6. ' repeated' → logprob: -2.7965283393859863
    7. ' an' → logprob: -2.9215283393859863
    8. ' iter' → logprob: -3.1715283393859863
    9. 're' → logprob: -3.7965283393859863
    10. 'an' → logprob: -3.9215283393859863

Token 220: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04783660173416138
    2. '    
' → logprob: -4.172836780548096
    3. ',' → logprob: -4.797836780548096
    4. '
' → logprob: -5.172836780548096
    5. '.' → logprob: -5.172836780548096
    6. ' for' → logprob: -5.672836780548096
    7. '  
' → logprob: -6.047836780548096
    8. ':' → logprob: -6.672836780548096
    9. '   
' → logprob: -7.047836780548096
    10. ',
' → logprob: -7.172836780548096

Token 221: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.4379577338695526
    2. ' each' → logprob: -1.187957763671875
    3. 'each' → logprob: -3.812957763671875
    4. ' the' → logprob: -5.312957763671875
    5. 'multiple' → logprob: -5.562957763671875
    6. ' every' → logprob: -5.687957763671875
    7. ' future' → logprob: -5.812957763671875
    8. ' different' → logprob: -6.312957763671875
    9. ' iteration' → logprob: -6.437957763671875
    10. ' subsequent' → logprob: -6.812957763671875

Token 222: ' iterations' (ID: 59147)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.6062849164009094
    2. ' queries' → logprob: -0.9812849164009094
    3. ' times' → logprob: -2.8562848567962646
    4. ' iterations' → logprob: -5.106285095214844
    5. ' calls' → logprob: -5.481285095214844
    6. 'times' → logprob: -5.856285095214844
    7. 'iterations' → logprob: -5.856285095214844
    8. ' lines' → logprob: -6.106285095214844
    9. ' iter' → logprob: -6.731285095214844
    10. 'calls' → logprob: -7.606285095214844

Token 223: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3822880685329437
    2. '    
' → logprob: -2.2572879791259766
    3. '
' → logprob: -2.3822879791259766
    4. ':' → logprob: -3.0072879791259766
    5. '  
' → logprob: -3.3822879791259766
    6. '.' → logprob: -4.632287979125977
    7. ',' → logprob: -4.757287979125977
    8. '<|end|>' → logprob: -5.507287979125977
    9. '   
' → logprob: -5.632287979125977
    10. ' 
' → logprob: -6.257287979125977

Token 224: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.1051208972930908
    2. 'queries' → logprob: -1.3551208972930908
    3. ' each' → logprob: -2.355120897293091
    4. 'range' → logprob: -2.980120897293091
    5. ' queries' → logprob: -3.105120897293091
    6. 'for' → logprob: -3.105120897293091
    7. ' the' → logprob: -3.355120897293091
    8. ' range' → logprob: -3.355120897293091
    9. ' memory' → logprob: -3.730120897293091
    10. 'the' → logprob: -4.230120658874512

Token 225: ' query' (ID: 5703)
  Prédit: ' query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.060550905764102936
    2. ' ' → logprob: -3.9355509281158447
    3. ' iteration' → logprob: -4.685550689697266
    4. ' line' → logprob: -4.810550689697266
    5. 'query' → logprob: -5.060550689697266
    6. '_' → logprob: -5.435550689697266
    7. ' for' → logprob: -5.935550689697266
    8. ' loop' → logprob: -6.060550689697266
    9. '_query' → logprob: -6.810550689697266
    10. ')' → logprob: -7.185550689697266

Token 226: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244861483573914
    2. '
' → logprob: -1.1244862079620361
    3. ':' → logprob: -2.374486207962036
    4. '    
' → logprob: -3.999486207962036
    5. '  
' → logprob: -4.624485969543457
    6. '<|end|>' → logprob: -5.749485969543457
    7. ',' → logprob: -5.999485969543457
    8. '.' → logprob: -6.249485969543457
    9. ':
' → logprob: -6.374485969543457
    10. ' for' → logprob: -6.374485969543457

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05623425543308258
    2. '    
' → logprob: -3.681234359741211
    3. '  
' → logprob: -4.681234359741211
    4. '
' → logprob: -5.056234359741211
    5. ' for' → logprob: -5.306234359741211
    6. ' 
' → logprob: -5.681234359741211
    7. 'for' → logprob: -6.181234359741211
    8. '\n' → logprob: -6.931234359741211
    9. '<|end|>' → logprob: -7.306234359741211
    10. '   
' → logprob: -7.806234359741211

Token 228: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06615202128887177
    2. '
' → logprob: -3.4411520957946777
    3. '    
' → logprob: -4.191152095794678
    4. ' for' → logprob: -5.191152095794678
    5. 'for' (adapté à ' for') → logprob: -5.691152095794678
    6. '  
' → logprob: -6.066152095794678
    7. ' 
' → logprob: -6.191152095794678
    8. '\n' → logprob: -6.191152095794678
    9. '<|end|>' → logprob: -7.566152095794678
    10. ':' → logprob: -8.81615161895752

Token 229: ' g' (ID: 329)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0030020661652088165
    2. ' ' → logprob: -6.128002166748047
    3. '_' → logprob: -7.753002166748047
    4. ' i' → logprob: -7.878002166748047
    5. ' ' → logprob: -12.003002166748047
    6. ' query' → logprob: -14.378002166748047
    7. ' ‌' → logprob: -14.628002166748047
    8. ' q' → logprob: -15.128002166748047
    9. '  ' → logprob: -15.253002166748047
    10. ' __' → logprob: -15.878002166748047

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22551879286766052
    2. ' ' → logprob: -1.725518822669983
    3. ' i' → logprob: -5.475518703460693
    4. 'u' → logprob: -5.600518703460693
    5. '(' → logprob: -5.975518703460693
    6. ',' → logprob: -6.100518703460693
    7. '   ' → logprob: -6.225518703460693
    8. 'in' → logprob: -6.475518703460693
    9. '  ' → logprob: -6.600518703460693
    10. 'i' → logprob: -6.725518703460693

Token 231: ' tee' (ID: 44157)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38703683018684387
    2. ' range' → logprob: -1.1370368003845215
    3. '(range' → logprob: -10.01203727722168
    4. '_' → logprob: -10.26203727722168
    5. ' in' → logprob: -10.88703727722168
    6. ' ' → logprob: -11.26203727722168
    7. 'in' → logprob: -11.38703727722168
    8. '	range' → logprob: -11.63703727722168
    9. '   ' → logprob: -12.26203727722168
    10. 'is' → logprob: -12.63703727722168

Token 232: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2627107799053192
    2. '(' → logprob: -1.5127108097076416
    3. ' (' → logprob: -4.7627105712890625
    4. '(k' → logprob: -7.3877105712890625
    5. '(iter' → logprob: -7.5127105712890625
    6. '(
' → logprob: -7.7627105712890625
    7. ',' → logprob: -8.512710571289062
    8. '((' → logprob: -9.262710571289062
    9. '   ' → logprob: -10.012710571289062
    10. '(range' → logprob: -10.262710571289062

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1778445839881897
    2. ')[' → logprob: -2.052844524383545
    3. ',k' → logprob: -3.927844524383545
    4. '(),' → logprob: -5.302844524383545
    5. ' ,' → logprob: -5.802844524383545
    6. '):' → logprob: -6.427844524383545
    7. '):
' → logprob: -6.552844524383545
    8. '   ' → logprob: -7.177844524383545
    9. ')' → logprob: -7.552844524383545
    10. '),' → logprob: -7.552844524383545

Token 234: ' q' (ID: 2335)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07741126418113708
    2. '1' → logprob: -2.70241117477417
    3. ' ' → logprob: -5.57741117477417
    4. 'q' → logprob: -5.70241117477417
    5. ' q' → logprob: -8.577411651611328
    6. 'k' → logprob: -10.077411651611328
    7. '   ' → logprob: -10.827411651611328
    8. ')' → logprob: -10.952411651611328
    9. 'len' → logprob: -11.077411651611328
    10. '0' → logprob: -11.764911651611328

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007504525128751993
    2. ')' → logprob: -5.632504463195801
    3. '):
' → logprob: -6.007504463195801
    4. ')[' → logprob: -6.632504463195801
    5. ' ):' → logprob: -9.5075044631958
    6. '[' → logprob: -11.1325044631958
    7. '   ' → logprob: -11.2575044631958
    8. '():' → logprob: -12.1325044631958
    9. ':' → logprob: -12.8825044631958
    10. ']:' → logprob: -14.1325044631958

Token 236: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3843805193901062
    2. '       ' → logprob: -1.759380578994751
    3. '   ' → logprob: -3.259380578994751
    4. '
' → logprob: -3.759380578994751
    5. '    ' → logprob: -4.134380340576172
    6. ':
' → logprob: -4.259380340576172
    7. '<|end|>' → logprob: -4.634380340576172
    8. '    
' → logprob: -4.759380340576172
    9. ' ' → logprob: -5.134380340576172
    10. '[' → logprob: -5.634380340576172

Token 237: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0551906824111938
    2. '   ' → logprob: -1.6801906824111938
    3. '    ' → logprob: -1.8051906824111938
    4. 'for' → logprob: -2.9301905632019043
    5. ' i' → logprob: -3.4301905632019043
    6. '       ' → logprob: -3.5551905632019043
    7. '        ' → logprob: -4.055190563201904
    8. ' s' → logprob: -4.180190563201904
    9. ' n' → logprob: -4.180190563201904
    10. '...' → logprob: -4.555190563201904

Token 238: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7211794257164001
    2. 'print' → logprob: -2.096179485321045
    3. ' for' → logprob: -2.596179485321045
    4. '   ' → logprob: -2.596179485321045
    5. 'n' → logprob: -2.846179485321045
    6. 'pass' → logprob: -3.971179485321045
    7. 'i' → logprob: -4.096179485321045
    8. 'd' → logprob: -4.471179485321045
    9. 's' → logprob: -4.596179485321045
    10. 'result' → logprob: -4.596179485321045

Token 239: ' each' (ID: 2454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.037509560585022
    2. ' _' → logprob: -1.037509560585022
    3. ' i' → logprob: -2.5375094413757324
    4. 'i' → logprob: -2.9125094413757324
    5. ' x' → logprob: -3.0375094413757324
    6. 'x' → logprob: -3.1625094413757324
    7. 'n' → logprob: -4.162509441375732
    8. ' n' → logprob: -4.287509441375732
    9. ' ' → logprob: -5.287509441375732
    10. ' g' → logprob: -5.537509441375732

Token 240: ' query' (ID: 5703)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6519966125488281
    2. ' _' → logprob: -1.4019966125488281
    3. 'i' → logprob: -3.026996612548828
    4. 'x' → logprob: -3.401996612548828
    5. ' i' → logprob: -3.776996612548828
    6. 'g' → logprob: -3.901996612548828
    7. ' x' → logprob: -4.026996612548828
    8. ' g' → logprob: -4.276996612548828
    9. ' ' → logprob: -4.276996612548828
    10. 'n' → logprob: -4.401996612548828

Token 241: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1893039047718048
    2. '   ' → logprob: -2.8143038749694824
    3. ',' → logprob: -3.0643038749694824
    4. '       ' → logprob: -3.8143038749694824
    5. ':
' → logprob: -3.9393038749694824
    6. ' :' → logprob: -4.564303874969482
    7. '    ' → logprob: -5.189303874969482
    8. '           ' → logprob: -6.439303874969482
    9. '    
' → logprob: -6.939303874969482
    10. ' :
' → logprob: -7.189303874969482

Token 242: ' read' (ID: 1729)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8858062624931335
    2. '   ' → logprob: -1.2608063220977783
    3. ' x' → logprob: -2.3858063220977783
    4. ' l' → logprob: -3.1358063220977783
    5. 'n' → logprob: -3.3858063220977783
    6. ' for' → logprob: -4.135806083679199
    7. ' a' → logprob: -4.510806083679199
    8. 'x' → logprob: -4.510806083679199
    9. ' arr' → logprob: -4.635806083679199
    10. ' print' → logprob: -4.885806083679199

Token 243: ' three' (ID: 3407)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8717319369316101
    2. 'n' → logprob: -0.9967319369316101
    3. 'int' → logprob: -2.371731996536255
    4. 'x' → logprob: -3.871731996536255
    5. ' a' → logprob: -4.121731758117676
    6. '()' → logprob: -4.121731758117676
    7. '   ' → logprob: -4.246731758117676
    8. ' x' → logprob: -4.746731758117676
    9. 'a' → logprob: -5.246731758117676
    10. ' int' → logprob: -5.371731758117676

Token 244: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.004258850589394569
    2. 'inte' → logprob: -5.754258632659912
    3. 'tokens' → logprob: -7.879258632659912
    4. 'ints' → logprob: -8.25425910949707
    5. ' tokens' → logprob: -8.37925910949707
    6. ' values' → logprob: -10.50425910949707
    7. '()' → logprob: -10.75425910949707
    8. 'int' → logprob: -10.87925910949707
    9. 'token' → logprob: -11.00425910949707
    10. 'a' → logprob: -11.00425910949707

Token 245: ' from' (ID: 591)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.9945776462554932
    2. '()' → logprob: -1.1195776462554932
    3. ',' → logprob: -2.244577646255493
    4. '       ' → logprob: -2.744577646255493
    5. ' =' → logprob: -3.244577646255493
    6. ' ,' → logprob: -3.994577646255493
    7. ':' → logprob: -3.994577646255493
    8. ' (' → logprob: -4.244577407836914
    9. ' ()' → logprob: -4.994577407836914
    10. 'a' → logprob: -5.619577407836914

Token 246: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12695194780826569
    2. 'input' → logprob: -2.1269519329071045
    3. '=input' → logprob: -11.751952171325684
    4. '(input' → logprob: -12.251952171325684
    5. ' the' → logprob: -12.626952171325684
    6. '   ' → logprob: -13.001952171325684
    7. ',input' → logprob: -13.126952171325684
    8. 'the' → logprob: -14.001952171325684
    9. '    ' → logprob: -14.376952171325684
    10. ' a' → logprob: -14.501952171325684

Token 247: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31331583857536316
    2. 'input' → logprob: -1.3133158683776855
    3. 'next' → logprob: -11.563315391540527
    4. ' next' → logprob: -11.563315391540527
    5. '=input' → logprob: -11.688315391540527
    6. '   ' → logprob: -12.438315391540527
    7. ' ' → logprob: -12.563315391540527
    8. '(input' → logprob: -13.063315391540527
    9. '    ' → logprob: -13.188315391540527
    10. '       ' → logprob: -13.313315391540527

Token 248: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8368728160858154
    2. ',' → logprob: -1.4618728160858154
    3. ':' → logprob: -1.4618728160858154
    4. '()' → logprob: -3.3368728160858154
    5. ' ,' → logprob: -4.3368730545043945
    6. '():' → logprob: -4.3368730545043945
    7. '(),' → logprob: -4.7118730545043945
    8. ' =' → logprob: -4.8368730545043945
    9. ' (' → logprob: -5.3368730545043945
    10. '(' → logprob: -5.5868730545043945

Token 249: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8700369000434875
    2. ' a' → logprob: -1.2450368404388428
    3. 'a' → logprob: -1.8700368404388428
    4. 'l' → logprob: -3.2450368404388428
    5. ' L' → logprob: -3.8700368404388428
    6. ' x' → logprob: -3.8700368404388428
    7. 'x' → logprob: -4.245037078857422
    8. 'n' → logprob: -4.870037078857422
    9. ' n' → logprob: -4.870037078857422
    10. ' i' → logprob: -5.245037078857422

Token 250: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3398338556289673
    2. ' l' → logprob: -1.3398338556289673
    3. 'a' → logprob: -2.0898337364196777
    4. ' a' → logprob: -2.5898337364196777
    5. 'n' → logprob: -2.8398337364196777
    6. 'x' → logprob: -2.8398337364196777
    7. 'L' → logprob: -3.2148337364196777
    8. ' L' → logprob: -3.3398337364196777
    9. ' n' → logprob: -3.4648337364196777
    10. ' x' → logprob: -3.7148337364196777

Token 251: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1687335968017578
    2. ' l' → logprob: -1.2937335968017578
    3. 'a' → logprob: -1.9187335968017578
    4. ' a' → logprob: -2.293733596801758
    5. 'x' → logprob: -3.418733596801758
    6. ' x' → logprob: -3.793733596801758
    7. '   ' → logprob: -3.918733596801758
    8. 'L' → logprob: -3.918733596801758
    9. ' L' → logprob: -4.043733596801758
    10. 'n' → logprob: -4.168733596801758

Token 252: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042791422456502914
    2. ' ,' → logprob: -6.754279136657715
    3. '_' → logprob: -7.379279136657715
    4. '1' → logprob: -7.629279136657715
    5. '_,' → logprob: -7.629279136657715
    6. ' =' → logprob: -7.629279136657715
    7. '   ' → logprob: -8.504279136657715
    8. ',n' → logprob: -8.879279136657715
    9. ',k' → logprob: -9.004279136657715
    10. ')' → logprob: -9.504279136657715

Token 253: ' the' (ID: 290)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4487079381942749
    2. ',' → logprob: -1.198707938194275
    3. 'n' → logprob: -3.4487080574035645
    4. ' ,' → logprob: -3.8237080574035645
    5. ')' → logprob: -6.5737080574035645
    6. ',n' → logprob: -6.8237080574035645
    7. ' ' → logprob: -6.9487080574035645
    8. ' =' → logprob: -7.4487080574035645
    9. '=' → logprob: -7.8237080574035645
    10. '   ' → logprob: -7.8237080574035645

Token 254: ' length' (ID: 5517)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6038912534713745
    2. 'length' → logprob: -2.353891372680664
    3. ' number' → logprob: -2.478891372680664
    4. 'number' → logprob: -2.603891372680664
    5. 'next' → logprob: -2.978891372680664
    6. ' length' → logprob: -3.228891372680664
    7. ' next' → logprob: -3.228891372680664
    8. ' int' → logprob: -4.228891372680664
    9. 'start' → logprob: -4.353891372680664
    10. 'n' → logprob: -4.728891372680664

Token 255: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12572124600410461
    2. '=' → logprob: -2.6257212162017822
    3. ')' → logprob: -4.250721454620361
    4. ' ,' → logprob: -4.500721454620361
    5. '       ' → logprob: -5.125721454620361
    6. '   ' → logprob: -5.375721454620361
    7. '_' → logprob: -5.625721454620361
    8. '<|end|>' → logprob: -6.750721454620361
    9. ' =' → logprob: -7.000721454620361
    10. ',
' → logprob: -7.250721454620361

Token 256: ' number' (ID: 2086)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5322383642196655
    2. ' m' → logprob: -1.7822383642196655
    3. ' x' → logprob: -2.657238483428955
    4. ' start' → logprob: -3.782238483428955
    5. 'start' → logprob: -3.907238483428955
    6. 'm' → logprob: -4.032238483428955
    7. '   ' → logprob: -4.032238483428955
    8. 'l' → logprob: -4.657238483428955
    9. ' i' → logprob: -4.657238483428955
    10. 'x' → logprob: -4.782238483428955

Token 257: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014826387166977
    2. ' of' → logprob: -1.9514826536178589
    3. '_of' → logprob: -4.326482772827148
    4. 'of' → logprob: -4.576482772827148
    5. ' =' → logprob: -4.951482772827148
    6. ',' → logprob: -5.576482772827148
    7. ')' → logprob: -6.576482772827148
    8. '   ' → logprob: -6.951482772827148
    9. '       ' → logprob: -7.076482772827148
    10. '        ' → logprob: -7.701482772827148

Token 258: ' iterations' (ID: 59147)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.22372056543827057
    2. 'elements' → logprob: -1.8487205505371094
    3. ' segments' → logprob: -5.348720550537109
    4. ' subse' → logprob: -5.473720550537109
    5. 'segments' → logprob: -5.473720550537109
    6. ' items' → logprob: -5.848720550537109
    7. ' steps' → logprob: -5.848720550537109
    8. ' queries' → logprob: -5.973720550537109
    9. ' terms' → logprob: -6.223720550537109
    10. ' sub' → logprob: -6.348720550537109

Token 259: '/' (ID: 14)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02530597150325775
    2. '       ' → logprob: -4.02530574798584
    3. ')' → logprob: -6.52530574798584
    4. '=' → logprob: -6.65030574798584
    5. ',
' → logprob: -6.77530574798584
    6. ' =' → logprob: -6.90030574798584
    7. ' ,' → logprob: -7.27530574798584
    8. ',n' → logprob: -7.65030574798584
    9. '<|end|>' → logprob: -7.90030574798584
    10. '(n' → logprob: -8.77530574798584

Token 260: 'steps' (ID: 27176)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9551421403884888
    2. ' m' → logprob: -1.7051421403884888
    3. 'm' → logprob: -1.8301421403884888
    4. ' x' → logprob: -3.330142021179199
    5. ' i' → logprob: -3.455142021179199
    6. ' l' → logprob: -3.580142021179199
    7. 'x' → logprob: -3.580142021179199
    8. '   ' → logprob: -3.955142021179199
    9. 'i' → logprob: -4.205142021179199
    10. ' ,' → logprob: -4.580142021179199

Token 261: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03183684125542641
    2. '       ' → logprob: -4.156836986541748
    3. '=' → logprob: -5.156836986541748
    4. ',n' → logprob: -5.531836986541748
    5. ' ,' → logprob: -6.156836986541748
    6. ' =' → logprob: -6.281836986541748
    7. '(n' → logprob: -7.656836986541748
    8. ')' → logprob: -7.906836986541748
    9. 'n' → logprob: -8.40683650970459
    10. ',
' → logprob: -8.90683650970459

Token 262: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3429234027862549
    2. 'the' → logprob: -1.7179234027862549
    3. ' input' → logprob: -3.217923402786255
    4. ' a' → logprob: -4.342923164367676
    5. '   ' → logprob: -4.967923164367676
    6. 'input' → logprob: -4.967923164367676
    7. ' sequence' → logprob: -4.967923164367676
    8. ',' → logprob: -5.217923164367676
    9. ' map' → logprob: -5.592923164367676
    10. 'a' → logprob: -5.592923164367676

Token 263: ' process' (ID: 2273)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.6550131440162659
    2. 'n' → logprob: -2.030013084411621
    3. ' query' → logprob: -2.280013084411621
    4. 'sequence' → logprob: -2.405013084411621
    5. 'query' → logprob: -2.530013084411621
    6. 'range' → logprob: -4.530013084411621
    7. ' segment' → logprob: -4.530013084411621
    8. ' range' → logprob: -4.780013084411621
    9. ' loop' → logprob: -5.155013084411621
    10. ' cycle' → logprob: -5.780013084411621

Token 264: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03811493143439293
    2. '       ' → logprob: -3.5381150245666504
    3. ',n' → logprob: -5.53811502456665
    4. ' ,' → logprob: -6.28811502456665
    5. ',
' → logprob: -7.28811502456665
    6. ' =' → logprob: -7.91311502456665
    7. '=' → logprob: -7.91311502456665
    8. '(n' → logprob: -8.038114547729492
    9. '        
' → logprob: -9.163114547729492
    10. '<|end|>' → logprob: -9.413114547729492

Token 265: 'including' (ID: 26167)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6823967695236206
    2. 'n' → logprob: -1.5573967695236206
    3. '),' → logprob: -1.9323967695236206
    4. ' n' → logprob: -2.80739688873291
    5. ',' → logprob: -3.43239688873291
    6. ' )' → logprob: -4.43239688873291
    7. ')
' → logprob: -4.80739688873291
    8. '   ' → logprob: -4.80739688873291
    9. ' ),' → logprob: -5.18239688873291
    10. ' ,' → logprob: -5.55739688873291

Token 266: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9344436526298523
    2. ' )' → logprob: -1.309443712234497
    3. ',' → logprob: -1.934443712234497
    4. ' ,' → logprob: -2.934443712234497
    5. ' n' → logprob: -3.934443712234497
    6. ' the' → logprob: -4.059443473815918
    7. ' ),' → logprob: -4.184443473815918
    8. 'n' → logprob: -4.309443473815918
    9. '   ' → logprob: -4.684443473815918
    10. '),' → logprob: -4.684443473815918

Token 267: ' starting' (ID: 8601)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1921321600675583
    2. ' )' → logprob: -2.4421322345733643
    3. ' first' → logprob: -3.9421322345733643
    4. ' ' → logprob: -4.567131996154785
    5. ' starting' → logprob: -4.942131996154785
    6. ' last' → logprob: -5.442131996154785
    7. 'first' → logprob: -5.442131996154785
    8. 'n' → logprob: -5.692131996154785
    9. '_' → logprob: -5.817131996154785
    10. ' n' → logprob: -5.942131996154785

Token 268: ' one' (ID: 1001)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41735348105430603
    2. ',' → logprob: -1.2923535108566284
    3. ' )' → logprob: -3.417353391647339
    4. ' ,' → logprob: -4.792353630065918
    5. ')
' → logprob: -5.042353630065918
    6. ',
' → logprob: -5.667353630065918
    7. '),' → logprob: -6.042353630065918
    8. ' )
' → logprob: -6.417353630065918
    9. 'n' → logprob: -6.667353630065918
    10. '_' → logprob: -6.667353630065918

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7110017538070679
    2. ',' → logprob: -0.9610017538070679
    3. '),' → logprob: -2.8360018730163574
    4. '       ' → logprob: -2.9610018730163574
    5. ',
' → logprob: -4.586001873016357
    6. ')
' → logprob: -6.336001873016357
    7. '),
' → logprob: -7.086001873016357
    8. ',n' → logprob: -7.336001873016357
    9. ' ,' → logprob: -7.711001873016357
    10. ')n' → logprob: -7.961001873016357

Token 270: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1430163383483887
    2. ',' → logprob: -1.2680163383483887
    3. '       ' → logprob: -1.8930163383483887
    4. 'n' → logprob: -2.0180163383483887
    5. ' ,' → logprob: -3.0180163383483887
    6. ',n' → logprob: -3.3930163383483887
    7. '   ' → logprob: -4.268016338348389
    8. '(n' → logprob: -5.143016338348389
    9. ' =' → logprob: -5.518016338348389
    10. ' ' → logprob: -6.143016338348389

Token 271: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2656309604644775
    2. ',' → logprob: -1.3906309604644775
    3. ' n' → logprob: -2.0156309604644775
    4. 'a' → logprob: -2.6406309604644775
    5. '   ' → logprob: -3.0156309604644775
    6. ' l' → logprob: -3.0156309604644775
    7. 'l' → logprob: -3.1406309604644775
    8. ' ,' → logprob: -3.2656309604644775
    9. ' a' → logprob: -3.6406309604644775
    10. '       ' → logprob: -4.140630722045898

Token 272: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9615932703018188
    2. 'x' → logprob: -1.7115932703018188
    3. 'a' → logprob: -1.8365932703018188
    4. ' l' → logprob: -2.3365931510925293
    5. 'm' → logprob: -2.8365931510925293
    6. ' a' → logprob: -3.8365931510925293
    7. ' x' → logprob: -3.8365931510925293
    8. 's' → logprob: -4.086593151092529
    9. 'L' → logprob: -4.336593151092529
    10. ' m' → logprob: -4.586593151092529

Token 273: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002521680435165763
    2. ' =' → logprob: -7.252521514892578
    3. '=' → logprob: -7.627521514892578
    4. ',y' → logprob: -7.752521514892578
    5. '   ' → logprob: -8.127521514892578
    6. ' ,' → logprob: -8.502521514892578
    7. ',n' → logprob: -8.502521514892578
    8. ',
' → logprob: -9.877521514892578
    9. '       ' → logprob: -10.502521514892578
    10. ')' → logprob: -10.627521514892578

Token 274: ' the' (ID: 290)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10692531615495682
    2. ' int' → logprob: -3.1069252490997314
    3. '*' → logprob: -4.4819254875183105
    4. ' x' → logprob: -4.4819254875183105
    5. 'x' → logprob: -4.7319254875183105
    6. ',' → logprob: -5.3569254875183105
    7. ' n' → logprob: -5.9819254875183105
    8. ' *' → logprob: -6.1069254875183105
    9. 'n' → logprob: -6.1069254875183105
    10. '   ' → logprob: -6.3569254875183105

Token 275: ' starting' (ID: 8601)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -1.485844612121582
    2. ',' → logprob: -1.735844612121582
    3. '=' → logprob: -1.735844612121582
    4. ' starting' → logprob: -2.610844612121582
    5. 'initial' → logprob: -3.110844612121582
    6. ' value' → logprob: -3.235844612121582
    7. ' current' → logprob: -3.235844612121582
    8. 'int' → logprob: -3.360844612121582
    9. 'value' → logprob: -3.610844612121582
    10. ' position' → logprob: -3.735844612121582

Token 276: ' value' (ID: 1432)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22880055010318756
    2. ' =' → logprob: -2.3538005352020264
    3. ')' → logprob: -3.2288005352020264
    4. ' ,' → logprob: -4.3538007736206055
    5. '<|end|>' → logprob: -4.3538007736206055
    6. '=' → logprob: -4.4788007736206055
    7. ' )' → logprob: -5.1038007736206055
    8. ' ' → logprob: -5.4788007736206055
    9. '_' → logprob: -5.4788007736206055
    10. '_value' → logprob: -5.7288007736206055

Token 277: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12341547012329102
    2. ' =' → logprob: -2.998415470123291
    3. '       ' → logprob: -3.373415470123291
    4. '=' → logprob: -3.873415470123291
    5. ' ,' → logprob: -5.373415470123291
    6. ',n' → logprob: -6.123415470123291
    7. '   ' → logprob: -6.748415470123291
    8. ':' → logprob: -7.873415470123291
    9. ')' → logprob: -7.998415470123291
    10. '(n' → logprob: -8.248414993286133

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6123813986778259
    2. ',' → logprob: -0.8623813986778259
    3. 'n' → logprob: -4.362381458282471
    4. ' ,' → logprob: -4.487381458282471
    5. ' n' → logprob: -6.612381458282471
    6. '   ' → logprob: -6.737381458282471
    7. 'r' → logprob: -7.112381458282471
    8. '=' → logprob: -7.112381458282471
    9. ',n' → logprob: -7.237381458282471
    10. ',
' → logprob: -7.487381458282471

Token 279: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0767303705215454
    2. ',' → logprob: -1.4517303705215454
    3. 'm' → logprob: -2.451730251312256
    4. ' l' → logprob: -2.451730251312256
    5. '   ' → logprob: -2.701730251312256
    6. 'a' → logprob: -2.701730251312256
    7. 'y' → logprob: -4.076730251312256
    8. 'r' → logprob: -4.201730251312256
    9. '_,' → logprob: -4.451730251312256
    10. ' m' → logprob: -4.701730251312256

Token 280: ' m' (ID: 284)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6012041568756104
    2. 'm' → logprob: -1.2262041568756104
    3. 'a' → logprob: -2.8512041568756104
    4. 'l' → logprob: -3.8512041568756104
    5. 'v' → logprob: -4.351203918457031
    6. 'c' → logprob: -4.351203918457031
    7. 'p' → logprob: -4.601203918457031
    8. 'z' → logprob: -4.976203918457031
    9. 'r' → logprob: -4.976203918457031
    10. 'k' → logprob: -5.101203918457031

Token 281: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48577040433883667
    2. '=' → logprob: -1.4857704639434814
    3. ' =' → logprob: -1.8607704639434814
    4. '   ' → logprob: -6.610770225524902
    5. '       ' → logprob: -7.110770225524902
    6. '    ' → logprob: -8.235770225524902
    7. ' ,' → logprob: -9.235770225524902
    8. ',n' → logprob: -9.485770225524902
    9. ')' → logprob: -9.860770225524902
    10. '        ' → logprob: -10.235770225524902

Token 282: ' a' (ID: 261)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3540218770503998
    2. 'int' → logprob: -1.2290219068527222
    3. ' map' → logprob: -5.979022026062012
    4. '=int' → logprob: -6.979022026062012
    5. ' n' → logprob: -7.979022026062012
    6. ' input' → logprob: -7.979022026062012
    7. ' x' → logprob: -8.104022026062012
    8. ' =' → logprob: -8.729022026062012
    9. 'map' → logprob: -8.729022026062012
    10. ')' → logprob: -8.979022026062012

Token 283: ' modulus' (ID: 149464)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5391346216201782
    2. '=' → logprob: -2.5391345024108887
    3. ' =' → logprob: -2.5391345024108887
    4. ',' → logprob: -2.9141345024108887
    5. '=int' → logprob: -3.0391345024108887
    6. ')' → logprob: -3.4141345024108887
    7. 'int' → logprob: -3.9141345024108887
    8. ' range' → logprob: -3.9141345024108887
    9. 'range' → logprob: -4.664134502410889
    10. 'b' → logprob: -5.164134502410889

Token 284: ' value' (ID: 1432)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4084906280040741
    2. '):' → logprob: -1.6584906578063965
    3. ' =' → logprob: -3.0334906578063965
    4. '       ' → logprob: -3.6584906578063965
    5. '=' → logprob: -4.2834906578063965
    6. ',' → logprob: -4.4084906578063965
    7. '   ' → logprob: -4.4084906578063965
    8. ':
' → logprob: -4.5334906578063965
    9. '():' → logprob: -4.6584906578063965
    10. '):
' → logprob: -4.9084906578063965

Token 285: ' controlling' (ID: 44125)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.812163770198822
    2. ':' → logprob: -1.1871638298034668
    3. '=' → logprob: -2.687163829803467
    4. ' =' → logprob: -2.687163829803467
    5. ',' → logprob: -2.812163829803467
    6. '):' → logprob: -3.187163829803467
    7. '   ' → logprob: -5.687163829803467
    8. '():' → logprob: -5.937163829803467
    9. '):
' → logprob: -7.062163829803467
    10. ')' → logprob: -7.062163829803467

Token 286: ' some' (ID: 1236)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5164117813110352
    2. ' ' → logprob: -1.2664117813110352
    3. '10' → logprob: -3.516411781311035
    4. ' (' → logprob: -3.641411781311035
    5. 'the' → logprob: -4.516411781311035
    6. '  ' → logprob: -4.516411781311035
    7. '=' → logprob: -4.891411781311035
    8. '   ' → logprob: -5.266411781311035
    9. ' int' → logprob: -5.266411781311035
    10. '1' → logprob: -5.266411781311035

Token 287: ' modulo' (ID: 112372)
  Prédit: ' operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.6993382573127747
    2. ' range' → logprob: -2.07433819770813
    3. ' ' → logprob: -2.69933819770813
    4. 'operation' → logprob: -3.07433819770813
    5. '=' → logprob: -3.69933819770813
    6. ' constraint' → logprob: -3.69933819770813
    7. '%' → logprob: -3.82433819770813
    8. ' space' → logprob: -3.82433819770813
    9. ' %' → logprob: -4.074338436126709
    10. ' =' → logprob: -4.074338436126709

Token 288: ' operation' (ID: 9506)
  Prédit: ' operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operation' → logprob: -0.17423604428768158
    2. '=' → logprob: -2.7992360591888428
    3. ' ' → logprob: -3.2992360591888428
    4. ' operations' → logprob: -3.4242360591888428
    5. 'operation' → logprob: -5.174235820770264
    6. ' operator' → logprob: -5.299235820770264
    7. ')' → logprob: -5.674235820770264
    8. ' =' → logprob: -5.924235820770264
    9. ' )' → logprob: -5.924235820770264
    10. '   ' → logprob: -6.299235820770264

Token 289: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7901785373687744
    2. '       ' → logprob: -1.2901785373687744
    3. '):' → logprob: -1.5401785373687744
    4. ',' → logprob: -3.9151785373687744
    5. '():' → logprob: -4.290178298950195
    6. '   ' → logprob: -5.165178298950195
    7. '):
' → logprob: -5.540178298950195
    8. ':
' → logprob: -5.790178298950195
    9. ')' → logprob: -5.915178298950195
    10. '(n' → logprob: -6.665178298950195

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0899519994854927
    2. '           ' → logprob: -3.464951992034912
    3. 'n' → logprob: -3.714951992034912
    4. ',' → logprob: -4.964951992034912
    5. '        
' → logprob: -4.964951992034912
    6. '   ' → logprob: -5.839951992034912
    7. '(n' → logprob: -5.839951992034912
    8. ' n' → logprob: -6.089951992034912
    9. ',n' → logprob: -6.589951992034912
    10. ' =' → logprob: -6.839951992034912

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4136342406272888
    2. '   ' → logprob: -1.4136343002319336
    3. ' n' → logprob: -2.5386343002319336
    4. '       ' → logprob: -4.163634300231934
    5. '           ' → logprob: -7.788634300231934
    6. '    ' → logprob: -8.538634300231934
    7. '	n' → logprob: -9.163634300231934
    8. '\n' → logprob: -9.538634300231934
    9. '(n' → logprob: -10.413634300231934
    10. '  ' → logprob: -10.538634300231934

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.101369894575328e-05
    2. ',x' → logprob: -9.500081062316895
    3. ' ,' → logprob: -13.125081062316895
    4. '=' → logprob: -13.250081062316895
    5. ',
' → logprob: -14.125081062316895
    6. ',m' → logprob: -14.500081062316895
    7. 'x' → logprob: -15.500081062316895
    8. ',k' → logprob: -16.000080108642578
    9. ',user' → logprob: -16.500080108642578
    10. ',input' → logprob: -16.500080108642578

Token 293: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011050296947360039
    2. ' x' → logprob: -4.511050224304199
    3. ' ' → logprob: -14.0110502243042
    4. ',x' → logprob: -14.0110502243042
    5. ',' → logprob: -14.5110502243042
    6. '  ' → logprob: -16.011051177978516
    7. '=' → logprob: -16.386051177978516
    8. '    ' → logprob: -16.761051177978516
    9. '*x' → logprob: -17.011051177978516
    10. '<|end|>' → logprob: -17.261051177978516

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00219273311085999
    2. '=' → logprob: -6.127192497253418
    3. ' ,' → logprob: -12.502192497253418
    4. ' =' → logprob: -13.002192497253418
    5. ',m' → logprob: -14.627192497253418
    6. 'n' → logprob: -16.127193450927734
    7. '‌,' → logprob: -16.252193450927734
    8. '_,' → logprob: -16.252193450927734
    9. 'm' → logprob: -16.627193450927734
    10. ')' → logprob: -16.627193450927734

Token 295: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0160394124686718
    2. ' m' → logprob: -4.1410393714904785
    3. ' ' → logprob: -13.016039848327637
    4. '   ' → logprob: -13.766039848327637
    5. '    ' → logprob: -14.516039848327637
    6. '  ' → logprob: -14.766039848327637
    7. '	m' → logprob: -15.391039848327637
    8. '=' → logprob: -15.641039848327637
    9. ' ' → logprob: -16.39103889465332
    10. '=m' → logprob: -16.51603889465332

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020551813766360283
    2. ' =' → logprob: -3.895551919937134
    3. ',' → logprob: -11.770551681518555
    4. ')' → logprob: -13.770551681518555
    5. '=input' → logprob: -14.895551681518555
    6. ')=' → logprob: -15.520551681518555
    7. '   ' → logprob: -15.770551681518555
    8. '=int' → logprob: -16.145551681518555
    9. '=

' → logprob: -16.520551681518555
    10. ' ' → logprob: -16.520551681518555

Token 297: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.061969030648469925
    2. 'map' → logprob: -2.811969041824341
    3. '	map' → logprob: -13.811968803405762
    4. '   ' → logprob: -15.436968803405762
    5. ' ' → logprob: -16.311969757080078
    6. '[' → logprob: -17.186969757080078
    7. '    ' → logprob: -17.811969757080078
    8. ' ' → logprob: -17.811969757080078
    9. '  ' → logprob: -18.311969757080078
    10. '=' → logprob: -18.561969757080078

Token 298: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003032881941180676
    2. '(' → logprob: -8.125303268432617
    3. ' (' → logprob: -13.375303268432617
    4. 'int' → logprob: -13.375303268432617
    5. '(
' → logprob: -13.500303268432617
    6. '[int' → logprob: -14.000303268432617
    7. '(lambda' → logprob: -14.125303268432617
    8. '=int' → logprob: -14.125303268432617
    9. '<int' → logprob: -15.625303268432617
    10. ',int' → logprob: -16.125303268432617

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6261476278305054
    2. ',int' → logprob: -1.0011476278305054
    3. ',input' → logprob: -2.501147747039795
    4. '(int' → logprob: -4.251147747039795
    5. ' ,' → logprob: -6.876147747039795
    6. '(),' → logprob: -8.126147270202637
    7. '(input' → logprob: -9.501147270202637
    8. '(' → logprob: -9.876147270202637
    9. 'int' → logprob: -10.126147270202637
    10. 'input' → logprob: -10.251147270202637

Token 300: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003206234658136964
    2. ' input' → logprob: -5.753206253051758
    3. 'int' → logprob: -10.503206253051758
    4. '   ' → logprob: -14.003206253051758
    5. ' ' → logprob: -16.503206253051758
    6. '(input' → logprob: -17.503206253051758
    7. '=input' → logprob: -17.753206253051758
    8. ' int' → logprob: -18.128206253051758
    9. '    ' → logprob: -18.128206253051758
    10. '  ' → logprob: -18.378206253051758

Token 301: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.2994620242971e-06
    2. '()' → logprob: -11.875008583068848
    3. ' ().' → logprob: -14.000008583068848
    4. ')' → logprob: -15.250008583068848
    5. '.' → logprob: -16.50000762939453
    6. '>().' → logprob: -17.12500762939453
    7. ').' → logprob: -17.25000762939453
    8. '()
' → logprob: -17.37500762939453
    9. '(' → logprob: -18.25000762939453
    10. '().__' → logprob: -19.00000762939453

Token 302: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -15.375000953674316
    3. 'strip' → logprob: -15.375000953674316
    4. ' split' → logprob: -15.500000953674316
    5. '(split' → logprob: -15.625000953674316
    6. '().' → logprob: -16.750001907348633
    7. ').' → logprob: -17.375001907348633
    8. 'spl' → logprob: -17.750001907348633
    9. 'read' → logprob: -18.875001907348633
    10. '_split' → logprob: -19.000001907348633

Token 303: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039504567394033074
    2. '()' → logprob: -8.500394821166992
    3. '())' → logprob: -8.625394821166992
    4. ')
' → logprob: -11.750394821166992
    5. ' )' → logprob: -13.500394821166992
    6. '):' → logprob: -13.625394821166992
    7. '   ' → logprob: -14.875394821166992
    8. ')`' → logprob: -15.125394821166992
    9. '))' → logprob: -15.250394821166992
    10. ')}' → logprob: -16.125394821166992

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011236794292926788
    2. '        
' → logprob: -5.761236667633057
    3. '<|end|>' → logprob: -6.261236667633057
    4. '   ' → logprob: -6.636236667633057
    5. ':' → logprob: -6.761236667633057
    6. '        ' → logprob: -7.386236667633057
    7. '
' → logprob: -7.636236667633057
    8. '    ' → logprob: -8.386237144470215
    9. ',' → logprob: -8.386237144470215
    10. '#' → logprob: -8.511237144470215

Token 305: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2345637083053589
    2. 'res' → logprob: -1.6095637083053589
    3. 'if' → logprob: -1.9845637083053589
    4. 'result' → logprob: -2.4845638275146484
    5. 'ans' → logprob: -2.8595638275146484
    6. 'y' → logprob: -2.9845638275146484
    7. 'total' → logprob: -3.4845638275146484
    8. 'sum' → logprob: -3.7345638275146484
    9. 'r' → logprob: -3.9845638275146484
    10. 'x' → logprob: -3.9845638275146484

Token 306: ' For' (ID: 2214)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0949686765670776
    2. 'res' → logprob: -1.8449686765670776
    3. 'y' → logprob: -2.594968795776367
    4. 'ans' → logprob: -2.719968795776367
    5. 'total' → logprob: -2.969968795776367
    6. 'x' → logprob: -3.219968795776367
    7. 'if' → logprob: -3.219968795776367
    8. 'result' → logprob: -3.344968795776367
    9. 'r' → logprob: -3.469968795776367
    10. 'cur' → logprob: -3.594968795776367

Token 307: ' the' (ID: 290)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6841093301773071
    2. '_' → logprob: -1.4341093301773071
    3. ' i' → logprob: -1.4341093301773071
    4. 'i' → logprob: -4.184109210968018
    5. ' ' → logprob: -6.559109210968018
    6. ' j' → logprob: -6.684109210968018
    7. '_i' → logprob: -8.809109687805176
    8. 'j' → logprob: -9.184109687805176
    9. ' t' → logprob: -9.309109687805176
    10. '_=' → logprob: -9.434109687805176

Token 308: ' whole' (ID: 6062)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8647569417953491
    2. 'i' → logprob: -0.9897569417953491
    3. ' i' → logprob: -2.1147570610046387
    4. ' _' → logprob: -3.1147570610046387
    5. ' next' → logprob: -4.864757061004639
    6. 'for' → logprob: -5.239757061004639
    7. ' for' → logprob: -5.864757061004639
    8. ' range' → logprob: -5.864757061004639
    9. 'next' → logprob: -6.114757061004639
    10. 'n' → logprob: -6.239757061004639

Token 309: ' sequence' (ID: 16281)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1828218698501587
    2. ' _' → logprob: -1.3078218698501587
    3. ' i' → logprob: -1.8078218698501587
    4. 'i' → logprob: -2.307821750640869
    5. ' for' → logprob: -3.057821750640869
    6. 'for' → logprob: -3.182821750640869
    7. ' range' → logprob: -3.307821750640869
    8. 'range' → logprob: -4.932821750640869
    9. ' in' → logprob: -5.307821750640869
    10. ' ' → logprob: -5.807821750640869

Token 310: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5744324922561646
    2. ' =' → logprob: -1.9494324922561646
    3. ',' → logprob: -2.199432373046875
    4. '   ' → logprob: -2.574432373046875
    5. ':' → logprob: -3.074432373046875
    6. ' for' → logprob: -4.574432373046875
    7. '=' → logprob: -4.699432373046875
    8. '#' → logprob: -4.699432373046875
    9. 'for' → logprob: -5.824432373046875
    10. '        ' → logprob: -5.949432373046875

Token 311: 'g' (ID: 70)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.977257251739502
    2. 'i' → logprob: -1.227257251739502
    3. '_' → logprob: -2.227257251739502
    4. 'range' → logprob: -2.477257251739502
    5. 'g' → logprob: -4.227257251739502
    6. 's' → logprob: -4.477257251739502
    7. '_,' → logprob: -4.602257251739502
    8. ' d' → logprob: -4.602257251739502
    9. 'for' → logprob: -4.727257251739502
    10. ' i' → logprob: -4.727257251739502

Token 312: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48368409276008606
    2. '',' → logprob: -1.9836840629577637
    3. '),' → logprob: -2.7336840629577637
    4. ':' → logprob: -3.1086840629577637
    5. '):' → logprob: -3.3586840629577637
    6. ' =' → logprob: -3.4836840629577637
    7. ''),' → logprob: -4.983684062957764
    8. '):
' → logprob: -5.108684062957764
    9. ':',' → logprob: -5.108684062957764
    10. '':' → logprob: -5.233684062957764

Token 313: ' apply' (ID: 6096)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.318481206893921
    2. 's' → logprob: -2.318481206893921
    3. ' y' → logprob: -2.318481206893921
    4. ' acc' → logprob: -2.318481206893921
    5. ' res' → logprob: -2.818481206893921
    6. 'y' → logprob: -2.943481206893921
    7. ' ans' → logprob: -3.568481206893921
    8. 'res' → logprob: -3.693481206893921
    9. '   ' → logprob: -3.818481206893921
    10. ' prev' → logprob: -3.943481206893921

Token 314: ' '' (ID: 461)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3286208212375641
    2. 'lambda' → logprob: -1.3286207914352417
    3. 'map' → logprob: -4.578620910644531
    4. 'is' → logprob: -6.328620910644531
    5. 'pow' → logprob: -7.203620910644531
    6. '(' → logprob: -7.328620910644531
    7. ' lambda' → logprob: -8.078620910644531
    8. '   ' → logprob: -8.328620910644531
    9. ' (' → logprob: -8.703620910644531
    10. 'g' → logprob: -9.203620910644531

Token 315: 'lambda' (ID: 35280)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7291314005851746
    2. 'lambda' → logprob: -0.8541314005851746
    3. 'map' → logprob: -2.4791314601898193
    4. 'is' → logprob: -5.97913122177124
    5. 'pow' → logprob: -6.47913122177124
    6. 'enumer' → logprob: -6.85413122177124
    7. 'list' → logprob: -7.72913122177124
    8. 'it' → logprob: -7.85413122177124
    9. '(' → logprob: -7.97913122177124
    10. 'acc' → logprob: -7.97913122177124

Token 316: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.161415934562683
    2. 'x' → logprob: -1.911415934562683
    3. ' lambda' → logprob: -2.0364160537719727
    4. 'lambda' → logprob: -2.5364160537719727
    5. ' i' → logprob: -2.7864160537719727
    6. 'i' → logprob: -2.7864160537719727
    7. 'a' → logprob: -2.9114160537719727
    8. ' a' → logprob: -3.7864160537719727
    9. 'v' → logprob: -3.9114160537719727
    10. ' y' → logprob: -4.286416053771973

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19957858324050903
    2. ' x' → logprob: -2.9495785236358643
    3. 'x' → logprob: -3.4495785236358643
    4. 'a' → logprob: -3.8245785236358643
    5. ' :' → logprob: -3.9495785236358643
    6. 'i' → logprob: -4.824578762054443
    7. '=' → logprob: -4.949578762054443
    8. ' i' → logprob: -5.199578762054443
    9. ' a' → logprob: -5.324578762054443
    10. '=lambda' → logprob: -5.449578762054443

Token 318: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.290277898311615
    2. '(lambda' → logprob: -1.5402779579162598
    3. '(g' → logprob: -4.29027795791626
    4. ' (' → logprob: -4.54027795791626
    5. 'lambda' → logprob: -5.29027795791626
    6. 'x' → logprob: -5.41527795791626
    7. '((' → logprob: -7.29027795791626
    8. '(y' → logprob: -7.41527795791626
    9. '(d' → logprob: -7.41527795791626
    10. '   ' → logprob: -7.79027795791626

Token 319: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6856192350387573
    2. '%' → logprob: -1.5606192350387573
    3. '+' → logprob: -2.185619354248047
    4. '*' → logprob: -2.685619354248047
    5. ' +' → logprob: -2.935619354248047
    6. ' *' → logprob: -3.935619354248047
    7. ':' → logprob: -4.060619354248047
    8. '**' → logprob: -5.935619354248047
    9. '=' → logprob: -6.185619354248047
    10. '%x' → logprob: -6.685619354248047

Token 320: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05503416433930397
    2. ' m' → logprob: -2.9300341606140137
    3. '(m' → logprob: -9.305034637451172
    4. ' ' → logprob: -10.930034637451172
    5. 'lambda' → logprob: -11.930034637451172
    6. 'x' → logprob: -12.055034637451172
    7. '   ' → logprob: -12.055034637451172
    8. 'g' → logprob: -12.430034637451172
    9. ' (' → logprob: -12.805034637451172
    10. ' lambda' → logprob: -13.055034637451172

Token 321: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5875768661499023
    2. ')'' → logprob: -1.2125768661499023
    3. '),' → logprob: -2.5875768661499023
    4. '),'' → logprob: -4.212576866149902
    5. ' )' → logprob: -4.462576866149902
    6. '))' → logprob: -4.587576866149902
    7. ')',' → logprob: -4.712576866149902
    8. ''' → logprob: -4.962576866149902
    9. ',' → logprob: -5.212576866149902
    10. '')' → logprob: -6.212576866149902

Token 322: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4440750479698181
    2. ',' → logprob: -1.569075107574463
    3. '       ' → logprob: -2.694075107574463
    4. ':' → logprob: -4.194075107574463
    5. '),' → logprob: -4.444075107574463
    6. '):' → logprob: -4.694075107574463
    7. '<|end|>' → logprob: -4.819075107574463
    8. '
' → logprob: -5.319075107574463
    9. ' )' → logprob: -5.319075107574463
    10. '<|end|>' → logprob: -5.944075107574463

Token 323: ' effectively' (ID: 18130)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.019587283954024315
    2. 'g' → logprob: -4.269587516784668
    3. 'list' → logprob: -6.144587516784668
    4. ' map' → logprob: -6.269587516784668
    5. 'filter' → logprob: -7.894587516784668
    6. 'iter' → logprob: -8.144587516784668
    7. 'd' → logprob: -8.519587516784668
    8. ')' → logprob: -9.144587516784668
    9. '(map' → logprob: -9.519587516784668
    10. '(' → logprob: -10.269587516784668

Token 324: ' wrap' (ID: 20404)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6384816765785217
    2. ' map' → logprob: -0.7634816765785217
    3. 'g' → logprob: -6.138481616973877
    4. ')' → logprob: -7.138481616973877
    5. ' g' → logprob: -7.638481616973877
    6. 'print' → logprob: -7.763481616973877
    7. ' is' → logprob: -8.013482093811035
    8. 'is' → logprob: -8.263482093811035
    9. '   ' → logprob: -8.638482093811035
    10. 'd' → logprob: -8.888482093811035

Token 325: ' every' (ID: 1753)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5045292973518372
    2. ' the' → logprob: -1.8795292377471924
    3. ' g' → logprob: -2.5045292377471924
    4. 'the' → logprob: -3.6295292377471924
    5. 'x' → logprob: -4.1295294761657715
    6. '   ' → logprob: -4.3795294761657715
    7. '(' → logprob: -4.6295294761657715
    8. ' each' → logprob: -4.6295294761657715
    9. '(g' → logprob: -4.6295294761657715
    10. ')' → logprob: -4.8795294761657715

Token 326: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.7447684407234192
    2. ' value' → logprob: -1.6197683811187744
    3. 'value' → logprob: -2.3697683811187744
    4. ' number' → logprob: -2.8697683811187744
    5. 'element' → logprob: -2.9947683811187744
    6. ' x' → logprob: -3.6197683811187744
    7. 'x' → logprob: -3.6197683811187744
    8. ' g' → logprob: -3.8697683811187744
    9. 'number' → logprob: -4.2447686195373535
    10. 'g' → logprob: -4.4947686195373535

Token 327: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9460791349411011
    2. ',' → logprob: -1.321079134941101
    3. ')' → logprob: -1.571079134941101
    4. '   ' → logprob: -3.5710792541503906
    5. '(' → logprob: -4.446079254150391
    6. ' in' → logprob: -4.696079254150391
    7. '=' → logprob: -4.946079254150391
    8. ' g' → logprob: -5.071079254150391
    9. 'g' → logprob: -5.196079254150391
    10. ' ,' → logprob: -5.446079254150391

Token 328: ' mod' (ID: 1812)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.001763939857483
    2. 'map' → logprob: -1.501763939857483
    3. ')' → logprob: -2.3767638206481934
    4. '%' → logprob: -2.6267638206481934
    5. 'mod' → logprob: -2.8767638206481934
    6. ' %' → logprob: -3.6267638206481934
    7. 'g' → logprob: -3.6267638206481934
    8. ' lambda' → logprob: -3.7517638206481934
    9. '(lambda' → logprob: -3.7517638206481934
    10. ' map' → logprob: -4.126763820648193

Token 329: ' m' (ID: 284)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8223344683647156
    2. ',' → logprob: -1.6973345279693604
    3. ')' → logprob: -1.9473345279693604
    4. '(' → logprob: -2.9473345279693604
    5. 'g' → logprob: -3.1973345279693604
    6. '   ' → logprob: -3.5723345279693604
    7. ' =' → logprob: -4.447334289550781
    8. '_' → logprob: -4.572334289550781
    9. ' (' → logprob: -4.697334289550781
    10. ' g' → logprob: -4.822334289550781

Token 330: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13013537228107452
    2. ')' → logprob: -3.0051352977752686
    3. ',' → logprob: -3.1301352977752686
    4. ':' → logprob: -4.755135536193848
    5. '   ' → logprob: -5.630135536193848
    6. '):' → logprob: -5.755135536193848
    7. '.' → logprob: -5.880135536193848
    8. ' ,' → logprob: -6.630135536193848
    9. ').' → logprob: -7.130135536193848
    10. '),' → logprob: -7.255135536193848

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12560012936592102
    2. 'g' → logprob: -2.7506000995635986
    3. ')' → logprob: -4.250600337982178
    4. 'for' → logprob: -5.000600337982178
    5. '   ' → logprob: -5.375600337982178
    6. ' for' → logprob: -5.500600337982178
    7. 'd' → logprob: -5.750600337982178
    8. ' g' → logprob: -5.875600337982178
    9. 'x' → logprob: -6.000600337982178
    10. 'map' → logprob: -6.125600337982178

Token 332: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.013597787357866764
    2. 'print' → logprob: -6.0135979652404785
    3. 'res' → logprob: -6.1385979652404785
    4. 'result' → logprob: -6.1385979652404785
    5. 'd' → logprob: -7.1385979652404785
    6. '   ' → logprob: -7.2635979652404785
    7. 's' → logprob: -7.3885979652404785
    8. 'r' → logprob: -7.6385979652404785
    9. 'a' → logprob: -7.6385979652404785
    10. 'f' → logprob: -7.8885979652404785

Token 333: ' This' (ID: 1328)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.031386636197566986
    2. 'res' → logprob: -4.656386852264404
    3. 'result' → logprob: -5.281386852264404
    4. 'print' → logprob: -6.031386852264404
    5. 'r' → logprob: -6.281386852264404
    6. 's' → logprob: -6.406386852264404
    7. 'mod' → logprob: -6.531386852264404
    8. 'seq' → logprob: -6.906386852264404
    9. 'f' → logprob: -7.031386852264404
    10. 'mapped' → logprob: -7.031386852264404

Token 334: ' means' (ID: 4748)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0297361612319946
    2. ' =' → logprob: -1.0297361612319946
    3. '=' → logprob: -1.5297361612319946
    4. ' g' → logprob: -4.154736042022705
    5. 'mod' → logprob: -4.529736042022705
    6. ' is' → logprob: -5.029736042022705
    7. '=g' → logprob: -5.404736042022705
    8. ',' → logprob: -5.654736042022705
    9. 'd' → logprob: -6.029736042022705
    10. ')' → logprob: -6.154736042022705

Token 335: ' every' (ID: 1753)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0683489516377449
    2. '       ' → logprob: -3.6933488845825195
    3. ' g' → logprob: -3.8183488845825195
    4. '   ' → logprob: -5.0683488845825195
    5. 'mod' → logprob: -5.8183488845825195
    6. 'y' → logprob: -6.6933488845825195
    7. 'res' → logprob: -6.9433488845825195
    8. 'result' → logprob: -7.0683488845825195
    9. 's' → logprob: -7.4433488845825195
    10. 'h' → logprob: -7.9433488845825195

Token 336: ' element' (ID: 3577)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.02299119159579277
    2. ' g' → logprob: -4.522991180419922
    3. 'element' → logprob: -6.022991180419922
    4. 'x' → logprob: -6.522991180419922
    5. 'print' → logprob: -6.772991180419922
    6. 'value' → logprob: -6.897991180419922
    7. '   ' → logprob: -7.272991180419922
    8. 'd' → logprob: -7.397991180419922
    9. ')' → logprob: -7.647991180419922
    10. 'elem' → logprob: -8.147991180419922

Token 337: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.466808944940567
    2. ' =' → logprob: -1.0918089151382446
    3. '       ' → logprob: -4.341808795928955
    4. 'g' → logprob: -5.091808795928955
    5. '   ' → logprob: -5.466808795928955
    6. ' is' → logprob: -5.591808795928955
    7. ',' → logprob: -6.216808795928955
    8. ' of' → logprob: -6.216808795928955
    9. ' g' → logprob: -6.966808795928955
    10. 'of' → logprob: -7.216808795928955

Token 338: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.1625104695558548
    2. 'map' → logprob: -2.037510395050049
    3. ' g' → logprob: -4.787510395050049
    4. 'd' → logprob: -5.037510395050049
    5. ' map' → logprob: -5.662510395050049
    6. 'list' → logprob: -7.787510395050049
    7. '(map' → logprob: -8.037510871887207
    8. '(g' → logprob: -8.787510871887207
    9. ' d' → logprob: -9.662510871887207
    10. '(' → logprob: -10.162510871887207

Token 339: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3923225402832031
    2. '=' → logprob: -1.1423225402832031
    3. ' is' → logprob: -6.767322540283203
    4. ',' → logprob: -6.767322540283203
    5. 'mod' → logprob: -7.017322540283203
    6. ' %=' → logprob: -7.517322540283203
    7. '%' → logprob: -7.767322540283203
    8. ' ' → logprob: -8.642322540283203
    9. '_mod' → logprob: -8.642322540283203
    10. ')' → logprob: -8.767322540283203

Token 340: ' replaced' (ID: 21009)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07981861382722855
    2. ' map' → logprob: -2.5798187255859375
    3. 'list' → logprob: -7.9548187255859375
    4. '   ' → logprob: -8.579818725585938
    5. 'mapped' → logprob: -9.579818725585938
    6. '(map' → logprob: -9.829818725585938
    7. ' list' → logprob: -10.204818725585938
    8. ' (' → logprob: -10.329818725585938
    9. ' =' → logprob: -10.454818725585938
    10. ' ' → logprob: -10.704818725585938

Token 341: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2456973791122437
    2. '(' → logprob: -1.3706973791122437
    3. ' =' → logprob: -2.120697498321533
    4. ',' → logprob: -2.245697498321533
    5. ' by' → logprob: -2.745697498321533
    6. ' with' → logprob: -2.870697498321533
    7. '(lambda' → logprob: -3.745697498321533
    8. ')' → logprob: -3.870697498321533
    9. 'map' → logprob: -4.370697498321533
    10. 'with' → logprob: -4.620697498321533

Token 342: ' its' (ID: 1617)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03252240642905235
    2. 'list' → logprob: -4.032522201538086
    3. ' map' → logprob: -5.407522201538086
    4. '(map' → logprob: -6.157522201538086
    5. 'g' → logprob: -6.407522201538086
    6. 'lambda' → logprob: -6.532522201538086
    7. 'x' → logprob: -6.657522201538086
    8. '(lambda' → logprob: -6.782522201538086
    9. '   ' → logprob: -7.282522201538086
    10. '(x' → logprob: -7.282522201538086

Token 343: ' remainder' (ID: 47056)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0066015720367432
    2. '(lambda' → logprob: -1.5066015720367432
    3. 'mod' → logprob: -1.8816015720367432
    4. 'map' → logprob: -2.506601572036743
    5. '%' → logprob: -2.631601572036743
    6. ' lambda' → logprob: -3.631601572036743
    7. ' %' → logprob: -3.631601572036743
    8. '(' → logprob: -4.756601333618164
    9. ' (' → logprob: -4.881601333618164
    10. 'g' → logprob: -4.881601333618164

Token 344: ' when' (ID: 1261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3455395698547363
    2. '%' → logprob: -1.4705395698547363
    3. '(' → logprob: -2.0955395698547363
    4. ',' → logprob: -2.2205395698547363
    5. ' %' → logprob: -2.4705395698547363
    6. ' =' → logprob: -2.5955395698547363
    7. '   ' → logprob: -3.7205395698547363
    8. '       ' → logprob: -4.470539569854736
    9. ')' → logprob: -4.595539569854736
    10. '()' → logprob: -4.595539569854736

Token 345: ' divided' (ID: 28261)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.42836564779281616
    2. ' %' → logprob: -1.178365707397461
    3. ')' → logprob: -5.178365707397461
    4. ' g' → logprob: -5.553365707397461
    5. ' modulo' → logprob: -5.553365707397461
    6. ' ' → logprob: -5.678365707397461
    7. ' divided' → logprob: -5.803365707397461
    8. ' x' → logprob: -5.928365707397461
    9. ' (' → logprob: -6.303365707397461
    10. ' lambda' → logprob: -6.428365707397461

Token 346: ' by' (ID: 656)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.275978684425354
    2. ' by' → logprob: -2.1509785652160645
    3. ',' → logprob: -2.7759785652160645
    4. ')' → logprob: -3.6509785652160645
    5. 'by' → logprob: -4.1509785652160645
    6. '   ' → logprob: -5.2759785652160645
    7. '%' → logprob: -5.2759785652160645
    8. '(' → logprob: -5.7759785652160645
    9. '=lambda' → logprob: -6.2759785652160645
    10. ' =' → logprob: -6.6509785652160645

Token 347: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.17976662516593933
    2. 'm' → logprob: -1.8047666549682617
    3. ' ' → logprob: -11.554766654968262
    4. ' ' → logprob: -11.679766654968262
    5. '1' → logprob: -14.054766654968262
    6. 'space' → logprob: -15.179766654968262
    7. '10' → logprob: -15.304766654968262
    8. '"' → logprob: -15.304766654968262
    9. ',' → logprob: -15.429766654968262
    10. '`' → logprob: -15.554766654968262

Token 348: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7572708129882812
    2. ',' → logprob: -1.3822708129882812
    3. ')' → logprob: -2.1322708129882812
    4. ':' → logprob: -3.1322708129882812
    5. '   ' → logprob: -3.5072708129882812
    6. ' =' → logprob: -4.132270812988281
    7. 'g' → logprob: -4.382270812988281
    8. '=' → logprob: -4.507270812988281
    9. ',
' → logprob: -4.882270812988281
    10. ' g' → logprob: -5.132270812988281

Token 349: '       ' (ID: 309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.20713664591312408
    2. '       ' → logprob: -1.832136631011963
    3. ' g' → logprob: -3.832136631011963
    4. '   ' → logprob: -5.582136631011963
    5. 'd' → logprob: -8.207137107849121
    6. 'x' → logprob: -8.582137107849121
    7. 'map' → logprob: -8.707137107849121
    8. ' ' → logprob: -8.832137107849121
    9. ',' → logprob: -9.332137107849121
    10. '#' → logprob: -9.707137107849121

Token 350: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.004488038830459118
    2. '       ' → logprob: -6.129487991333008
    3. ' g' → logprob: -6.629487991333008
    4. '   ' → logprob: -7.254487991333008
    5. 's' → logprob: -10.504487991333008
    6. 'h' → logprob: -10.629487991333008
    7. 'mod' → logprob: -10.629487991333008
    8. 'mapped' → logprob: -10.754487991333008
    9. 'f' → logprob: -10.879487991333008
    10. 'r' → logprob: -10.879487991333008

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25208884477615356
    2. ' =' → logprob: -1.5020887851715088
    3. 'mod' → logprob: -9.25208854675293
    4. 'g' → logprob: -10.87708854675293
    5. ',' → logprob: -11.00208854675293
    6. '_mod' → logprob: -12.12708854675293
    7. '   ' → logprob: -12.37708854675293
    8. ' %=' → logprob: -12.62708854675293
    9. '%=' → logprob: -12.75208854675293
    10. '=g' → logprob: -13.25208854675293

Token 352: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0003243798855692148
    2. ' map' → logprob: -8.625324249267578
    3. '(map' → logprob: -8.875324249267578
    4. 'list' → logprob: -12.750324249267578
    5. 'lambda' → logprob: -13.750324249267578
    6. '(lambda' → logprob: -14.875324249267578
    7. 'imap' → logprob: -15.625324249267578
    8. '	map' → logprob: -15.875324249267578
    9. '   ' → logprob: -16.000324249267578
    10. '(x' → logprob: -16.375324249267578

Token 353: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.006243857555091381
    2. '(' → logprob: -5.131243705749512
    3. ' (' → logprob: -8.256243705749512
    4. '(
' → logprob: -10.381243705749512
    5. 'lambda' → logprob: -11.631243705749512
    6. '   ' → logprob: -11.756243705749512
    7. '(operator' → logprob: -12.756243705749512
    8. '((' → logprob: -13.381243705749512
    9. '(int' → logprob: -13.881243705749512
    10. '(f' → logprob: -14.131243705749512

Token 354: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38689807057380676
    2. ' x' → logprob: -1.1368980407714844
    3. 'a' → logprob: -11.636898040771484
    4. 'y' → logprob: -12.761898040771484
    5. ' ' → logprob: -12.761898040771484
    6. 'i' → logprob: -12.761898040771484
    7. ' y' → logprob: -12.886898040771484
    8. ' a' → logprob: -13.136898040771484
    9. 'lambda' → logprob: -13.511898040771484
    10. ' i' → logprob: -13.886898040771484

Token 355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013404681347310543
    2. ' :' → logprob: -4.388404846191406
    3. ':x' → logprob: -7.138404846191406
    4. 'x' → logprob: -10.513404846191406
    5. ',' → logprob: -10.513404846191406
    6. ' x' → logprob: -10.638404846191406
    7. ':
' → logprob: -11.763404846191406
    8. '%' → logprob: -12.388404846191406
    9. ':g' → logprob: -13.388404846191406
    10. ' %' → logprob: -13.888404846191406

Token 356: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132629096508026
    2. ' x' → logprob: -1.313262939453125
    3. '(x' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.688262939453125
    5. ' (' → logprob: -16.063262939453125
    6. '	x' → logprob: -16.188262939453125
    7. '(' → logprob: -17.188262939453125
    8. ',' → logprob: -17.188262939453125
    9. ')' → logprob: -17.313262939453125
    10. '   ' → logprob: -17.688262939453125

Token 357: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04928651824593544
    2. '%' → logprob: -3.0492866039276123
    3. '%m' → logprob: -7.299286365509033
    4. '%x' → logprob: -11.424286842346191
    5. '%d' → logprob: -12.174286842346191
    6. '%n' → logprob: -13.049286842346191
    7. '%i' → logprob: -13.049286842346191
    8. ' ' → logprob: -14.049286842346191
    9. ':' → logprob: -14.299286842346191
    10. ' ' → logprob: -14.799286842346191

Token 358: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00861468818038702
    2. ' m' → logprob: -4.758614540100098
    3. '   ' → logprob: -15.883614540100098
    4. '(m' → logprob: -16.883615493774414
    5. ' ' → logprob: -17.008615493774414
    6. '	m' → logprob: -17.258615493774414
    7. ')m' → logprob: -17.883615493774414
    8. '    ' → logprob: -18.633615493774414
    9. ' ' → logprob: -18.633615493774414
    10. '           ' → logprob: -18.883615493774414

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005752799566835165
    2. ')' → logprob: -5.2557525634765625
    3. '),' → logprob: -7.7557525634765625
    4. ' ,' → logprob: -9.880752563476562
    5. '   ' → logprob: -10.630752563476562
    6. ',
' → logprob: -12.380752563476562
    7. ')
' → logprob: -13.505752563476562
    8. ',g' → logprob: -13.505752563476562
    9. '       ' → logprob: -13.630752563476562
    10. ' ' → logprob: -14.005752563476562

Token 360: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0007361313910223544
    2. 'd' → logprob: -7.875736236572266
    3. ' g' → logprob: -8.375736236572266
    4. 'is' → logprob: -9.500736236572266
    5. 'iter' → logprob: -11.500736236572266
    6. 'range' → logprob: -11.500736236572266
    7. '[g' → logprob: -11.750736236572266
    8. '   ' → logprob: -11.750736236572266
    9. ' ' → logprob: -13.000736236572266
    10. '[' → logprob: -13.125736236572266

Token 361: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005288454121910036
    2. ' )' → logprob: -7.625528812408447
    3. ')
' → logprob: -10.750529289245605
    4. ',' → logprob: -11.500529289245605
    5. '   ' → logprob: -12.250529289245605
    6. '[' → logprob: -13.750529289245605
    7. '       ' → logprob: -14.000529289245605
    8. ' ' → logprob: -14.875529289245605
    9. ',)' → logprob: -14.875529289245605
    10. '),' → logprob: -15.250529289245605

Token 362: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8970860838890076
    2. 'sum' → logprob: -2.3970861434936523
    3. 'prev' → logprob: -2.5220861434936523
    4. 'res' → logprob: -2.5220861434936523
    5. 'result' → logprob: -2.8970861434936523
    6. 's' → logprob: -3.0220861434936523
    7. 'next' → logprob: -3.5220861434936523
    8. 'cnt' → logprob: -3.6470861434936523
    9. 'acc' → logprob: -3.8970861434936523
    10. '#' (adapté à ' #') → logprob: -4.147086143493652

Token 364: ' Because' (ID: 13602)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.271384835243225
    2. 'res' → logprob: -1.521384835243225
    3. 'seq' → logprob: -2.2713847160339355
    4. 'acc' → logprob: -2.3963847160339355
    5. 'result' → logprob: -2.6463847160339355
    6. 'prev' → logprob: -2.7713847160339355
    7. 'ans' → logprob: -4.1463847160339355
    8. 'arr' → logprob: -4.1463847160339355
    9. 'total' → logprob: -4.1463847160339355
    10. 'a' → logprob: -4.5213847160339355

Token 365: ' map' (ID: 4014)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22543174028396606
    2. 'n' → logprob: -2.1004316806793213
    3. 'g' → logprob: -3.8504316806793213
    4. 'd' → logprob: -4.6004319190979
    5. 'not' → logprob: -4.6004319190979
    6. ' k' → logprob: -4.7254319190979
    7. ' n' → logprob: -5.2254319190979
    8. 'the' → logprob: -5.9754319190979
    9. 'm' → logprob: -6.1004319190979
    10. 'is' → logprob: -6.1004319190979

Token 366: ' objects' (ID: 11736)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8995112776756287
    2. '(lambda' → logprob: -1.0245113372802734
    3. '<|end|>' → logprob: -2.8995113372802734
    4. 'g' → logprob: -3.0245113372802734
    5. '(
' → logprob: -3.5245113372802734
    6. ',' → logprob: -3.6495113372802734
    7. ' is' → logprob: -3.7745113372802734
    8. 's' → logprob: -4.899511337280273
    9. '<|end|>' → logprob: -5.274511337280273
    10. '   ' → logprob: -5.649511337280273

Token 367: ' (' (ID: 350)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.3814614415168762
    2. '<|end|>' → logprob: -1.2564613819122314
    3. ' is' → logprob: -3.8814613819122314
    4. '<|end|>' → logprob: -5.5064616203308105
    5. ',' → logprob: -5.8814616203308105
    6. 'are' → logprob: -6.2564616203308105
    7. ' can' → logprob: -6.5064616203308105
    8. '...' → logprob: -8.256461143493652
    9. ' cannot' → logprob: -8.506461143493652
    10. 'is' → logprob: -8.881461143493652

Token 368: 'iter' (ID: 2340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24001005291938782
    2. ' iter' → logprob: -1.8650100231170654
    3. 'g' → logprob: -3.7400100231170654
    4. 'iter' → logprob: -4.2400102615356445
    5. ' g' → logprob: -4.4900102615356445
    6. 'd' → logprob: -5.8650102615356445
    7. ' is' → logprob: -6.9900102615356445
    8. ' in' → logprob: -7.6150102615356445
    9. ' )' → logprob: -7.6150102615356445
    10. 'map' → logprob: -8.115010261535645

Token 369: 'ators' (ID: 4840)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7484208345413208
    2. '(g' → logprob: -1.7484208345413208
    3. 'ator' → logprob: -1.7484208345413208
    4. 'ators' → logprob: -2.7484207153320312
    5. 'able' → logprob: -3.4984207153320312
    6. '(' → logprob: -3.7484207153320312
    7. '#' → logprob: -4.873420715332031
    8. '=' → logprob: -5.248420715332031
    9. '(
' → logprob: -5.498420715332031
    10. '().__' → logprob: -5.748420715332031

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03208450227975845
    2. '<|end|>' → logprob: -3.9070844650268555
    3. ' )' → logprob: -4.7820844650268555
    4. '<|end|>' → logprob: -6.5320844650268555
    5. ',' → logprob: -7.7820844650268555
    6. ' are' → logprob: -7.9070844650268555
    7. ')[' → logprob: -9.032084465026855
    8. '[' → logprob: -9.407084465026855
    9. ')return' → logprob: -9.782084465026855
    10. '
' → logprob: -10.282084465026855

Token 371: ' can' (ID: 665)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.2273777574300766
    2. ' can' → logprob: -2.3523776531219482
    3. 'are' → logprob: -2.7273776531219482
    4. 'can' → logprob: -4.227377891540527
    5. '<|end|>' → logprob: -5.352377891540527
    6. ' may' → logprob: -5.602377891540527
    7. 'cannot' → logprob: -5.727377891540527
    8. '#' → logprob: -5.727377891540527
    9. ' cannot' → logprob: -5.852377891540527
    10. ',' → logprob: -6.102377891540527

Token 372: ' only' (ID: 1606)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.44055357575416565
    2. ' be' → logprob: -2.190553665161133
    3. 'not' → logprob: -2.190553665161133
    4. 'only' → logprob: -2.440553665161133
    5. ' only' → logprob: -3.315553665161133
    6. ' not' → logprob: -5.065553665161133
    7. 'have' → logprob: -6.940553665161133
    8. '#' → logprob: -8.190553665161133
    9. 'repeat' → logprob: -8.565553665161133
    10. '   ' → logprob: -8.690553665161133

Token 373: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.005244902800768614
    2. ' be' → logprob: -5.255244731903076
    3. 'iterate' → logprob: -12.380245208740234
    4. 'once' → logprob: -13.505245208740234
    5. '```' → logprob: -14.255245208740234
    6. 'run' → logprob: -14.380245208740234
    7. '	be' → logprob: -14.380245208740234
    8. ' ' → logprob: -14.505245208740234
    9. '_be' → logprob: -14.880245208740234
    10. '   ' → logprob: -15.380245208740234

Token 374: ' passed' (ID: 10292)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6745006442070007
    2. 'iter' → logprob: -1.1745007038116455
    3. 'used' → logprob: -2.5495007038116455
    4. 'rew' → logprob: -3.1745007038116455
    5. 'cons' → logprob: -3.9245007038116455
    6. 'loop' → logprob: -4.424500465393066
    7. 'indexed' → logprob: -5.174500465393066
    8. 'cycled' → logprob: -5.299500465393066
    9. ' iter' → logprob: -5.549500465393066
    10. 'sub' → logprob: -6.424500465393066

Token 375: ' over' (ID: 1072)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.05218574032187462
    2. ' once' → logprob: -3.0521857738494873
    3. 'through' → logprob: -6.177185535430908
    4. ' through' → logprob: -7.552185535430908
    5. 'to' → logprob: -7.677185535430908
    6. 'one' → logprob: -8.927186012268066
    7. ' to' → logprob: -9.552186012268066
    8. 'only' → logprob: -9.802186012268066
    9. 'Once' → logprob: -9.927186012268066
    10. ',' → logprob: -10.052186012268066

Token 376: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.03368615359067917
    2. ' once' → logprob: -3.4086861610412598
    3. 'one' → logprob: -10.408685684204102
    4. ' ' → logprob: -12.533685684204102
    5. '_once' → logprob: -13.283685684204102
    6. ' one' → logprob: -14.158685684204102
    7. 'Once' → logprob: -14.283685684204102
    8. '1' → logprob: -14.408685684204102
    9. '一次' → logprob: -14.408685684204102
    10. ',' → logprob: -14.408685684204102

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031614378094673157
    2. ',
' → logprob: -7.003161430358887
    3. '<|end|>' → logprob: -7.253161430358887
    4. ' and' → logprob: -7.878161430358887
    5. ':' → logprob: -8.003161430358887
    6. ')' → logprob: -8.003161430358887
    7. '       ' → logprob: -9.128161430358887
    8. 'and' → logprob: -9.378161430358887
    9. ' ,' → logprob: -9.878161430358887
    10. '...' → logprob: -9.878161430358887

Token 378: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18803511559963226
    2. ' continue' → logprob: -2.938035011291504
    3. '#' → logprob: -3.938035011291504
    4. 'continue' → logprob: -4.063035011291504
    5. ' result' → logprob: -4.438035011291504
    6. 'result' → logprob: -4.688035011291504
    7. '        ' → logprob: -5.063035011291504
    8. ' g' → logprob: -5.188035011291504
    9. ' #' → logprob: -5.313035011291504
    10. 'prev' → logprob: -5.688035011291504

Token 379: ' '' (ID: 461)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.5639981627464294
    2. 'list' → logprob: -1.5639982223510742
    3. 'is' → logprob: -1.6889982223510742
    4. 'g' → logprob: -3.813998222351074
    5. ' tee' → logprob: -4.563998222351074
    6. 'd' → logprob: -7.063998222351074
    7. ' is' → logprob: -7.813998222351074
    8. ' list' → logprob: -7.813998222351074
    9. 'range' → logprob: -8.438998222351074
    10. 'slice' → logprob: -8.438998222351074

Token 380: 'tee' (ID: 11140)
  Prédit: 'tee'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.14715340733528137
    2. 'list' → logprob: -2.022153377532959
    3. 'is' → logprob: -5.897153377532959
    4. 'g' → logprob: -8.397153854370117
    5. ' tee' → logprob: -8.522153854370117
    6. 'tuple' → logprob: -8.522153854370117
    7. 'deque' → logprob: -8.522153854370117
    8. 'iter' → logprob: -8.772153854370117
    9. 'd' → logprob: -9.147153854370117
    10. 'next' → logprob: -9.147153854370117

Token 381: ''' (ID: 6)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0367162711918354
    2. ' to' → logprob: -3.5367162227630615
    3. '(' → logprob: -5.286716461181641
    4. ',' → logprob: -6.911716461181641
    5. 'g' → logprob: -8.03671646118164
    6. '<|end|>' → logprob: -8.78671646118164
    7. ')' → logprob: -9.16171646118164
    8. 'to' → logprob: -9.53671646118164
    9. ' for' → logprob: -9.66171646118164
    10. '(d' → logprob: -10.66171646118164

Token 382: ' to' (ID: 316)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.23454910516738892
    2. ' to' → logprob: -2.484549045562744
    3. ',' → logprob: -2.859549045562744
    4. '       ' → logprob: -3.234549045562744
    5. '(' → logprob: -3.984549045562744
    6. 'to' → logprob: -5.734549045562744
    7. '<|end|>' → logprob: -6.234549045562744
    8. 'g' → logprob: -6.859549045562744
    9. ')' → logprob: -6.984549045562744
    10. '           ' → logprob: -7.234549045562744

Token 383: ' create' (ID: 2501)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.013403268530964851
    2. 'split' → logprob: -5.388403415679932
    3. 'create' → logprob: -5.513403415679932
    4. ' g' → logprob: -7.013403415679932
    5. ' create' → logprob: -7.138403415679932
    6. 'duplicate' → logprob: -7.388403415679932
    7. 'clone' → logprob: -7.513403415679932
    8. 'generate' → logprob: -8.013402938842773
    9. 'tee' → logprob: -8.138402938842773
    10. 'copy' → logprob: -8.263402938842773

Token 384: ' three' (ID: 3407)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.48871687054634094
    2. ' two' → logprob: -1.1137168407440186
    3. 'g' → logprob: -3.3637168407440186
    4. '2' → logprob: -4.238717079162598
    5. '       ' → logprob: -5.863717079162598
    6. 'multiple' → logprob: -6.613717079162598
    7. ',' → logprob: -6.738717079162598
    8. ' g' → logprob: -7.113717079162598
    9. 's' → logprob: -7.988717079162598
    10. '(g' → logprob: -8.113717079162598

Token 385: ' independent' (ID: 13313)
  Prédit: ' independent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' independent' → logprob: -0.7277917265892029
    2. 'ind' → logprob: -1.2277917861938477
    3. ' iter' → logprob: -2.1027917861938477
    4. '<|end|>' → logprob: -3.1027917861938477
    5. 'iter' → logprob: -3.7277917861938477
    6. ' copies' → logprob: -4.852791786193848
    7. 'g' → logprob: -4.977791786193848
    8. ' g' → logprob: -5.352791786193848
    9. 'copies' → logprob: -5.352791786193848
    10. ',' → logprob: -5.477791786193848

Token 386: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4921115040779114
    2. ' iter' → logprob: -1.4921114444732666
    3. 'g' → logprob: -1.8671114444732666
    4. '_iter' → logprob: -5.742111682891846
    5. ',' → logprob: -6.617111682891846
    6. ' g' → logprob: -6.742111682891846
    7. 'copies' → logprob: -7.367111682891846
    8. '_g' → logprob: -7.492111682891846
    9. '```' → logprob: -7.867111682891846
    10. 'iterator' → logprob: -8.617111206054688

Token 387: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.013295403681695461
    2. '(g' → logprob: -4.3882951736450195
    3. '(' → logprob: -8.01329517364502
    4. '   ' → logprob: -8.51329517364502
    5. 'g' → logprob: -9.51329517364502
    6. 'tools' → logprob: -10.01329517364502
    7. 'ables' → logprob: -10.26329517364502
    8. '       ' → logprob: -10.38829517364502
    9. 'gers' → logprob: -10.76329517364502
    10. ' g' → logprob: -11.51329517364502

Token 388: '.
' (ID: 558)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.6906920671463013
    2. ',' → logprob: -1.3156920671463013
    3. '       ' → logprob: -2.1906919479370117
    4. '(' → logprob: -3.3156919479370117
    5. ' for' → logprob: -3.9406919479370117
    6. ' to' → logprob: -4.190691947937012
    7. '<|end|>' → logprob: -4.565691947937012
    8. ' g' → logprob: -5.315691947937012
    9. ' of' → logprob: -5.440691947937012
    10. '   ' → logprob: -5.440691947937012

Token 389: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5969419479370117
    2. '(' → logprob: -1.7219419479370117
    3. '_,' → logprob: -2.0969419479370117
    4. 'g' → logprob: -2.9719419479370117
    5. ' (' → logprob: -3.4719419479370117
    6. ' ,' → logprob: -4.471941947937012
    7. ' g' → logprob: -4.721941947937012
    8. '(g' → logprob: -4.721941947937012
    9. '       ' → logprob: -5.346941947937012
    10. '<|end|>' → logprob: -5.596941947937012

Token 390: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.713287889957428
    2. 'g' → logprob: -1.2132878303527832
    3. ' a' → logprob: -2.463287830352783
    4. ' g' → logprob: -3.213287830352783
    5. 't' → logprob: -3.838287830352783
    6. ',' → logprob: -4.213287830352783
    7. '_,' → logprob: -4.338287830352783
    8. ' t' → logprob: -5.463287830352783
    9. 'i' → logprob: -5.463287830352783
    10. 'x' → logprob: -5.463287830352783

Token 391: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.38063880801200867
    2. 'a' → logprob: -1.380638837814331
    3. 't' → logprob: -4.005638599395752
    4. 'f' → logprob: -5.005638599395752
    5. 'h' → logprob: -5.380638599395752
    6. ' g' → logprob: -5.505638599395752
    7. 'p' → logprob: -5.630638599395752
    8. 'x' → logprob: -5.755638599395752
    9. 's' → logprob: -5.755638599395752
    10. ' a' → logprob: -5.755638599395752

Token 392: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.343768447637558
    2. '1' → logprob: -2.093768358230591
    3. ' =' → logprob: -2.218768358230591
    4. '=' → logprob: -3.468768358230591
    5. 'g' → logprob: -3.968768358230591
    6. '=g' → logprob: -5.96876859664917
    7. ',g' → logprob: -6.21876859664917
    8. '_g' → logprob: -6.59376859664917
    9. 'a' → logprob: -7.09376859664917
    10. '_,' → logprob: -7.34376859664917

Token 393: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001032095868140459
    2. ',g' → logprob: -7.751031875610352
    3. '1' → logprob: -8.001031875610352
    4. 'g' → logprob: -9.001031875610352
    5. '=' → logprob: -9.376031875610352
    6. ' =' → logprob: -11.001031875610352
    7. ' ,' → logprob: -11.251031875610352
    8. '_,' → logprob: -11.876031875610352
    9. '=g' → logprob: -12.126031875610352
    10. ')' → logprob: -12.751031875610352

Token 394: ' for' (ID: 395)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4224459230899811
    2. 'tee' → logprob: -1.5474458932876587
    3. ' tee' → logprob: -3.0474460124969482
    4. ' g' → logprob: -3.9224460124969482
    5. 'from' → logprob: -4.422445774078369
    6. '*' → logprob: -4.797445774078369
    7. 'is' → logprob: -4.797445774078369
    8. ',' → logprob: -5.297445774078369
    9. 'iter' → logprob: -5.297445774078369
    10. '*g' → logprob: -6.172445774078369

Token 395: ' summ' (ID: 16552)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04772112891077995
    2. 'is' → logprob: -3.5477211475372314
    3. 'tee' → logprob: -4.547720909118652
    4. ' g' → logprob: -6.672720909118652
    5. ' is' → logprob: -6.797720909118652
    6. 'next' → logprob: -7.047720909118652
    7. 'the' → logprob: -7.672720909118652
    8. '1' → logprob: -7.672720909118652
    9. ')' → logprob: -8.297720909118652
    10. 'copy' → logprob: -8.297720909118652

Token 396: 'ing' (ID: 289)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2913176119327545
    2. 'ary' → logprob: -1.6663175821304321
    3. 'e' → logprob: -3.9163177013397217
    4. ' g' → logprob: -4.291317462921143
    5. 'er' → logprob: -4.666317462921143
    6. 'ery' → logprob: -5.166317462921143
    7. 'it' → logprob: -5.291317462921143
    8. 'a' → logprob: -5.791317462921143
    9. 'ry' → logprob: -6.041317462921143
    10. 'ap' → logprob: -6.416317462921143

Token 397: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04030933976173401
    2. ',g' → logprob: -4.165309429168701
    3. ',
' → logprob: -4.415309429168701
    4. '(g' → logprob: -5.415309429168701
    5. 'g' → logprob: -5.540309429168701
    6. '(' → logprob: -6.665309429168701
    7. ' ,' → logprob: -7.665309429168701
    8. ')' → logprob: -7.790309429168701
    9. '=' → logprob: -8.415308952331543
    10. '<|end|>' → logprob: -8.665308952331543

Token 398: ' full' (ID: 3149)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.11582478135824203
    2. 'first' → logprob: -3.1158246994018555
    3. 'g' → logprob: -3.3658246994018555
    4. 'is' → logprob: -4.3658246994018555
    5. ' next' → logprob: -4.8658246994018555
    6. '1' → logprob: -5.9908246994018555
    7. 'elements' → logprob: -6.4908246994018555
    8. '0' → logprob: -6.8658246994018555
    9. 'sum' → logprob: -6.9908246994018555
    10. ' first' → logprob: -7.3658246994018555

Token 399: ' period' (ID: 5265)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.355392336845398
    2. ',' → logprob: -1.855392336845398
    3. ' line' → logprob: -1.855392336845398
    4. ' sequence' → logprob: -1.855392336845398
    5. ' g' → logprob: -2.4803924560546875
    6. ' elements' → logprob: -2.8553924560546875
    7. 'line' → logprob: -4.1053924560546875
    8. ' ,' → logprob: -4.2303924560546875
    9. 'elements' → logprob: -4.3553924560546875
    10. ')' → logprob: -4.3553924560546875

Token 400: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1894138753414154
    2. ',
' → logprob: -2.3144137859344482
    3. '(' → logprob: -2.8144137859344482
    4. '(g' → logprob: -5.689414024353027
    5. '(
' → logprob: -6.064414024353027
    6. ',g' → logprob: -6.189414024353027
    7. 'g' → logprob: -6.314414024353027
    8. ')' → logprob: -6.439414024353027
    9. '[' → logprob: -7.439414024353027
    10. '=' → logprob: -7.564414024353027

Token 401: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0293055959045887
    2. ',
' → logprob: -4.279305458068848
    3. 'g' → logprob: -4.904305458068848
    4. '=' → logprob: -6.404305458068848
    5. ',g' → logprob: -6.404305458068848
    6. ' =' → logprob: -6.654305458068848
    7. ' g' → logprob: -6.779305458068848
    8. '(' → logprob: -7.279305458068848
    9. '   ' → logprob: -8.529305458068848
    10. '       ' → logprob: -8.529305458068848

Token 402: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27915701270103455
    2. ',
' → logprob: -1.529157042503357
    3. 'g' → logprob: -3.9041569232940674
    4. ',g' → logprob: -5.9041571617126465
    5. '=' → logprob: -6.2791571617126465
    6. ' g' → logprob: -7.2791571617126465
    7. ')' → logprob: -7.7791571617126465
    8. ' =' → logprob: -7.7791571617126465
    9. ' ,' → logprob: -8.779156684875488
    10. '[' → logprob: -9.779156684875488

Token 403: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011535219848155975
    2. ' g' → logprob: -4.511535167694092
    3. '	g' → logprob: -8.26153564453125
    4. '   ' → logprob: -8.88653564453125
    5. ',' → logprob: -10.38653564453125
    6. '```' → logprob: -11.13653564453125
    7. ',g' → logprob: -11.51153564453125
    8. '    ' → logprob: -11.76153564453125
    9. '[' → logprob: -12.76153564453125
    10. ')' → logprob: -12.88653564453125

Token 404: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1006864532828331
    2. '2' → logprob: -2.350686550140381
    3. ',' → logprob: -8.850686073303223
    4. '0' → logprob: -8.975686073303223
    5. '3' → logprob: -8.975686073303223
    6. '_' → logprob: -10.100686073303223
    7. '_,' → logprob: -10.350686073303223
    8. ' ' → logprob: -12.350686073303223
    9. '```' → logprob: -13.725686073303223
    10. '4' → logprob: -13.850686073303223

Token 405: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013238313840702176
    2. ',g' → logprob: -9.25013256072998
    3. ' ,' → logprob: -10.87513256072998
    4. 'g' → logprob: -11.87513256072998
    5. '=' → logprob: -12.62513256072998
    6. ' =' → logprob: -12.87513256072998
    7. ':' → logprob: -13.50013256072998
    8. ',k' → logprob: -14.62513256072998
    9. ',
' → logprob: -15.00013256072998
    10. ')' → logprob: -15.12513256072998

Token 406: ' for' (ID: 395)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.7110583782196045
    2. ' tee' → logprob: -0.7110583782196045
    3. 'g' → logprob: -4.961058616638184
    4. ' g' → logprob: -5.086058616638184
    5. 'is' → logprob: -6.961058616638184
    6. '   ' → logprob: -7.461058616638184
    7. ' is' → logprob: -7.711058616638184
    8. 'from' → logprob: -7.961058616638184
    9. ',' → logprob: -8.461058616638184
    10. 'map' → logprob: -8.586058616638184

Token 407: ' summ' (ID: 16552)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.3546023368835449
    2. ' tee' → logprob: -1.229602336883545
    3. 'is' → logprob: -5.979602336883545
    4. 'g' → logprob: -6.104602336883545
    5. ' is' → logprob: -7.229602336883545
    6. ' g' → logprob: -7.729602336883545
    7. ' ' → logprob: -9.729602813720703
    8. '1' → logprob: -11.104602813720703
    9. '0' → logprob: -11.604602813720703
    10. '...' → logprob: -11.604602813720703

Token 408: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.007287862244993448
    2. 'g' → logprob: -5.007287979125977
    3. 'ng' → logprob: -9.382287979125977
    4. 'iting' → logprob: -9.507287979125977
    5. 'icing' → logprob: -9.632287979125977
    6. 'ap' → logprob: -9.757287979125977
    7. 'apping' → logprob: -10.382287979125977
    8. 'sum' → logprob: -10.882287979125977
    9. 'erging' → logprob: -11.007287979125977
    10. 'um' → logprob: -11.132287979125977

Token 409: ' the' (ID: 290)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.899157702922821
    2. 'the' → logprob: -0.899157702922821
    3. ' the' → logprob: -2.274157762527466
    4. ' g' → logprob: -3.274157762527466
    5. '(g' → logprob: -3.899157762527466
    6. '(' → logprob: -4.274157524108887
    7. 'full' → logprob: -5.274157524108887
    8. ' full' → logprob: -6.524157524108887
    9. '1' → logprob: -7.149157524108887
    10. ')' → logprob: -7.649157524108887

Token 410: ' leftover' (ID: 97990)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2748430669307709
    2. 'next' → logprob: -2.1498429775238037
    3. 'k' → logprob: -2.8998429775238037
    4. 'first' → logprob: -3.6498429775238037
    5. 'g' → logprob: -3.8998429775238037
    6. '1' → logprob: -4.774843215942383
    7. ' is' → logprob: -6.149843215942383
    8. 'remaining' → logprob: -6.774843215942383
    9. 'period' → logprob: -6.774843215942383
    10. '0' → logprob: -6.899843215942383

Token 411: ' part' (ID: 997)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7892540097236633
    2. ',' → logprob: -1.1642539501190186
    3. 's' → logprob: -2.6642539501190186
    4. 'g' → logprob: -2.7892539501190186
    5. '<|end|>' → logprob: -3.1642539501190186
    6. '_' → logprob: -4.039254188537598
    7. '<|end|>' → logprob: -4.664254188537598
    8. '[' → logprob: -4.914254188537598
    9. 'tokens' → logprob: -5.289254188537598
    10. ' g' → logprob: -5.914254188537598

Token 412: ' after' (ID: 1934)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2016693353652954
    2. '       ' → logprob: -2.576669216156006
    3. ')' → logprob: -3.076669216156006
    4. ',
' → logprob: -4.076669216156006
    5. '   ' → logprob: -4.451669216156006
    6. 'g' → logprob: -4.576669216156006
    7. '<|end|>' → logprob: -4.826669216156006
    8. 's' → logprob: -5.701669216156006
    9. '=' → logprob: -6.451669216156006
    10. ' g' → logprob: -6.701669216156006

Token 413: ' full' (ID: 3149)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04029926285147667
    2. 'the' → logprob: -4.665299415588379
    3. 'is' → logprob: -4.665299415588379
    4. 'k' → logprob: -4.915299415588379
    5. ' g' → logprob: -5.540299415588379
    6. ' is' → logprob: -6.290299415588379
    7. 'n' → logprob: -6.540299415588379
    8. ' the' → logprob: -6.665299415588379
    9. '1' → logprob: -6.915299415588379
    10. ')' → logprob: -7.790299415588379

Token 414: ' periods' (ID: 27925)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.174960657954216
    2. 'period' → logprob: -1.9249606132507324
    3. '_period' → logprob: -5.674960613250732
    4. ' g' → logprob: -6.049960613250732
    5. 'cycles' → logprob: -6.424960613250732
    6. ' periods' → logprob: -6.424960613250732
    7. 'length' → logprob: -7.049960613250732
    8. '   ' → logprob: -7.049960613250732
    9. 's' → logprob: -7.799960613250732
    10. 'k' → logprob: -7.924960613250732

Token 415: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8229971528053284
    2. ')' → logprob: -1.4479970932006836
    3. ',
' → logprob: -1.6979970932006836
    4. '<|end|>' → logprob: -2.4479970932006836
    5. '   ' → logprob: -3.9479970932006836
    6. '
' → logprob: -4.572997093200684
    7. ')
' → logprob: -5.322997093200684
    8. 'g' → logprob: -5.447997093200684
    9. '(
' → logprob: -5.822997093200684
    10. '       ' → logprob: -5.822997093200684

Token 416: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3728940188884735
    2. ',
' → logprob: -2.122894048690796
    3. 'g' → logprob: -2.997894048690796
    4. '(g' → logprob: -3.622894048690796
    5. '       ' → logprob: -3.747894048690796
    6. '   ' → logprob: -3.997894048690796
    7. ' g' → logprob: -4.122893810272217
    8. ' =' → logprob: -4.122893810272217
    9. '(' → logprob: -4.497893810272217
    10. ',g' → logprob: -4.747893810272217

Token 417: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5218936204910278
    2. '       ' → logprob: -1.0218936204910278
    3. ' g' → logprob: -3.6468935012817383
    4. ',' → logprob: -4.521893501281738
    5. '   ' → logprob: -5.896893501281738
    6. '	g' → logprob: -5.896893501281738
    7. ',g' → logprob: -6.521893501281738
    8. '	' → logprob: -6.771893501281738
    9. '[' → logprob: -8.271893501281738
    10. '
' → logprob: -8.396893501281738

Token 418: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009358783136121929
    2. '       ' → logprob: -7.125936031341553
    3. ' g' → logprob: -9.625935554504395
    4. '   ' → logprob: -9.875935554504395
    5. 'from' → logprob: -12.250935554504395
    6. '	g' → logprob: -12.625935554504395
    7. '```' → logprob: -13.375935554504395
    8. '
' → logprob: -14.125935554504395
    9. '[g' → logprob: -14.375935554504395
    10. '           ' → logprob: -14.375935554504395

Token 419: '3' (ID: 18)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021104181185364723
    2. '=' → logprob: -4.646104335784912
    3. '2' → logprob: -5.646104335784912
    4. ' =' → logprob: -6.146104335784912
    5. '1' → logprob: -6.271104335784912
    6. '3' → logprob: -6.396104335784912
    7. ' ,' → logprob: -6.896104335784912
    8. ':' → logprob: -7.146104335784912
    9. ',g' → logprob: -10.021103858947754
    10. '```' → logprob: -10.021103858947754

Token 420: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.284363716840744
    2. '=' → logprob: -1.4093637466430664
    3. ' =' → logprob: -5.784363746643066
    4. ')' → logprob: -9.909363746643066
    5. ',g' → logprob: -10.034363746643066
    6. '=g' → logprob: -11.159363746643066
    7. ' ,' → logprob: -11.909363746643066
    8. ':' → logprob: -12.409363746643066
    9. 'g' → logprob: -12.409363746643066
    10. ')=' → logprob: -13.034363746643066

Token 421: ' for' (ID: 395)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.5759879350662231
    2. ' tee' → logprob: -0.8259879350662231
    3. '   ' → logprob: -11.575987815856934
    4. ' ' → logprob: -12.575987815856934
    5. 'map' → logprob: -12.575987815856934
    6. 'is' → logprob: -12.700987815856934
    7. 'g' → logprob: -12.700987815856934
    8. ' map' → logprob: -12.825987815856934
    9. '*' → logprob: -12.950987815856934
    10. ' g' → logprob: -12.950987815856934

Token 422: ' checking' (ID: 19141)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.42829275131225586
    2. ' tee' → logprob: -1.1782927513122559
    3. 'is' → logprob: -3.553292751312256
    4. 'g' → logprob: -5.303292751312256
    5. ' is' → logprob: -5.803292751312256
    6. ' g' → logprob: -6.678292751312256
    7. 'k' → logprob: -7.178292751312256
    8. '0' → logprob: -7.928292751312256
    9. ' ' → logprob: -8.553293228149414
    10. 'sum' → logprob: -8.678293228149414

Token 423: ' which' (ID: 1118)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42775413393974304
    2. ' =' → logprob: -2.1777541637420654
    3. ' g' → logprob: -3.0527541637420654
    4. '=' → logprob: -3.0527541637420654
    5. '<|end|>' → logprob: -3.0527541637420654
    6. 'g' → logprob: -3.4277541637420654
    7. ' ,' → logprob: -3.4277541637420654
    8. ')' → logprob: -4.552753925323486
    9. '(' → logprob: -5.302753925323486
    10. '(g' → logprob: -5.677753925323486

Token 424: ' offsets' (ID: 78390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10472286492586136
    2. ')' → logprob: -3.8547229766845703
    3. ' ' → logprob: -4.22972297668457
    4. 'g' → logprob: -4.35472297668457
    5. '<|end|>' → logprob: -4.47972297668457
    6. ' _' → logprob: -4.72972297668457
    7. ',' → logprob: -4.97972297668457
    8. '=' → logprob: -5.85472297668457
    9. 'n' → logprob: -5.85472297668457
    10. ' g' → logprob: -6.10472297668457

Token 425: ' are' (ID: 553)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4937579929828644
    2. ')' → logprob: -2.243757963180542
    3. '   ' → logprob: -2.618757963180542
    4. '<|end|>' → logprob: -2.993757963180542
    5. '(' → logprob: -3.118757963180542
    6. ',
' → logprob: -3.493757963180542
    7. 'g' → logprob: -3.868757963180542
    8. '=' → logprob: -3.993757963180542
    9. ' =' → logprob: -4.618758201599121
    10. '(g' → logprob: -4.868758201599121

Token 426: ' zero' (ID: 12421)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -1.6359505653381348
    2. 'found' → logprob: -2.0109505653381348
    3. 'visited' → logprob: -2.5109505653381348
    4. 'in' → logprob: -2.5109505653381348
    5. 'not' → logprob: -2.7609505653381348
    6. ' in' → logprob: -3.1359505653381348
    7. 'True' → logprob: -3.1359505653381348
    8. 'used' → logprob: -3.2609505653381348
    9. ' x' → logprob: -3.2609505653381348
    10. 'x' → logprob: -3.2609505653381348

Token 427: ' modulo' (ID: 112372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24588514864444733
    2. 'g' → logprob: -2.870885133743286
    3. ' g' → logprob: -3.370885133743286
    4. '(g' → logprob: -3.620885133743286
    5. ',
' → logprob: -3.870885133743286
    6. '       ' → logprob: -3.995885133743286
    7. '(' → logprob: -4.120885372161865
    8. ' =' → logprob: -4.495885372161865
    9. ',g' → logprob: -4.620885372161865
    10. ' ,' → logprob: -4.870885372161865

Token 428: ' m' (ID: 284)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.782010018825531
    2. '   ' → logprob: -1.5320100784301758
    3. ')' → logprob: -2.032010078430176
    4. ',
' → logprob: -2.282010078430176
    5. '(' → logprob: -3.907010078430176
    6. ')
' → logprob: -4.282010078430176
    7. 'g' → logprob: -4.282010078430176
    8. '
' → logprob: -4.532010078430176
    9. '```' → logprob: -4.657010078430176
    10. '       ' → logprob: -4.907010078430176

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.216507911682129
    2. '       ' → logprob: -1.466507911682129
    3. 'g' → logprob: -2.091507911682129
    4. ' g' → logprob: -2.716507911682129
    5. '
' → logprob: -3.466507911682129
    6. '(g' → logprob: -3.466507911682129
    7. ')' → logprob: -3.466507911682129
    8. '(' → logprob: -3.466507911682129
    9. ',
' → logprob: -3.466507911682129
    10. '   ' → logprob: -3.466507911682129

Token 430: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4879479706287384
    2. ')' → logprob: -1.862947940826416
    3. ' g' → logprob: -1.987947940826416
    4. 'g' → logprob: -3.862947940826416
    5. '```' → logprob: -3.862947940826416
    6. '   ' → logprob: -4.362947940826416
    7. ',' → logprob: -4.737947940826416
    8. '<|end|>' → logprob: -5.362947940826416
    9. '(' → logprob: -5.487947940826416
    10. '        
' → logprob: -6.362947940826416

Token 431: ' count' (ID: 3605)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.8654181957244873
    2. ' tee' → logprob: -1.2404181957244873
    3. ' g' → logprob: -2.1154181957244873
    4. 'g' → logprob: -2.7404181957244873
    5. ' check' → logprob: -3.9904181957244873
    6. '   ' → logprob: -4.490418434143066
    7. '       ' → logprob: -4.740418434143066
    8. 'check' → logprob: -4.740418434143066
    9. ',' → logprob: -5.615418434143066
    10. ' is' → logprob: -5.740418434143066

Token 432: ' something' (ID: 3543)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: ' special' (ID: 3582)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4876669645309448
    2. ')' → logprob: -1.6126669645309448
    3. 'g' → logprob: -1.9876669645309448
    4. '<|end|>' → logprob: -2.4876670837402344
    5. ' g' → logprob: -2.6126670837402344
    6. '
' → logprob: -2.7376670837402344
    7. '   ' → logprob: -3.1126670837402344
    8. '       ' → logprob: -3.1126670837402344
    9. ',
' → logprob: -3.3626670837402344
    10. '(' → logprob: -3.6126670837402344

Token 434: ' later' (ID: 4849)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0062527656555176
    2. ')' → logprob: -1.5062527656555176
    3. ',
' → logprob: -2.5062527656555176
    4. 'g' → logprob: -2.6312527656555176
    5. ' g' → logprob: -3.0062527656555176
    6. '(
' → logprob: -3.1312527656555176
    7. '   ' → logprob: -3.1312527656555176
    8. '(g' → logprob: -3.3812527656555176
    9. '```' → logprob: -3.6312527656555176
    10. '(' → logprob: -3.7562527656555176

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5903527736663818
    2. ',' → logprob: -1.0903527736663818
    3. ' g' → logprob: -3.590352773666382
    4. 'g' → logprob: -3.840352773666382
    5. '   ' → logprob: -4.340353012084961
    6. ',
' → logprob: -4.590353012084961
    7. '
' → logprob: -5.090353012084961
    8. '(' → logprob: -5.090353012084961
    9. ',g' → logprob: -5.340353012084961
    10. ' ,' → logprob: -5.590353012084961

Token 436: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14997659623622894
    2. ',
' → logprob: -2.5249764919281006
    3. ')' → logprob: -4.27497673034668
    4. '(' → logprob: -4.39997673034668
    5. '<|end|>' → logprob: -5.27497673034668
    6. '(
' → logprob: -5.39997673034668
    7. '(g' → logprob: -5.39997673034668
    8. '```' → logprob: -5.39997673034668
    9. 'g' → logprob: -5.64997673034668
    10. ':' → logprob: -6.27497673034668

Token 437: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.953204870223999
    2. ' g' → logprob: -1.328204870223999
    3. '(g' → logprob: -1.828204870223999
    4. '<|end|>' → logprob: -2.953204870223999
    5. '(' → logprob: -3.078204870223999
    6. ',' → logprob: -3.578204870223999
    7. '(
' → logprob: -3.828204870223999
    8. ')' → logprob: -4.203205108642578
    9. ' (' → logprob: -5.078205108642578
    10. ',
' → logprob: -5.578205108642578

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3719932734966278
    2. '=' → logprob: -1.6219933032989502
    3. ',' → logprob: -2.24699330329895
    4. ' =' → logprob: -4.996993064880371
    5. '_,' → logprob: -8.621993064880371
    6. 'g' → logprob: -9.121993064880371
    7. 's' → logprob: -9.246993064880371
    8. '=g' → logprob: -9.371993064880371
    9. '_' → logprob: -10.496993064880371
    10. '```' → logprob: -10.621993064880371

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003622793301474303
    2. ',g' → logprob: -8.000362396240234
    3. 'g' → logprob: -11.125362396240234
    4. '=' → logprob: -11.750362396240234
    5. ' ,' → logprob: -12.875362396240234
    6. ' =' → logprob: -14.750362396240234
    7. '1' → logprob: -15.125362396240234
    8. '=g' → logprob: -15.625362396240234
    9. '```' → logprob: -15.625362396240234
    10. '_,' → logprob: -16.250362396240234

Token 440: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.000627014203928411
    2. ' g' → logprob: -7.375627040863037
    3. '<|end|>' → logprob: -15.250626564025879
    4. '_g' → logprob: -16.125627517700195
    5. '*g' → logprob: -16.875627517700195
    6. '	g' → logprob: -17.000627517700195
    7. '   ' → logprob: -17.250627517700195
    8. ' ' → logprob: -18.500627517700195
    9. '    ' → logprob: -18.875627517700195
    10. '  ' → logprob: -19.250627517700195

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012887361459434032
    2. ',' → logprob: -4.512887477874756
    3. 'g' → logprob: -6.762887477874756
    4. '3' → logprob: -8.012887001037598
    5. '_,' → logprob: -8.637887001037598
    6. ',g' → logprob: -9.637887001037598
    7. ' ,' → logprob: -10.512887001037598
    8. '_' → logprob: -11.137887001037598
    9. '=' → logprob: -11.137887001037598
    10. '```' → logprob: -11.762887001037598

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ',g' → logprob: -11.625012397766113
    3. '=' → logprob: -12.875012397766113
    4. 'g' → logprob: -15.375012397766113
    5. ' ,' → logprob: -16.000011444091797
    6. '<|end|>' → logprob: -17.125011444091797
    7. '=g' → logprob: -17.500011444091797
    8. ' =' → logprob: -17.500011444091797
    9. '```' → logprob: -17.500011444091797
    10. '‌,' → logprob: -18.250011444091797

Token 443: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.061975862830877304
    2. ' g' → logprob: -2.8119759559631348
    3. '   ' → logprob: -12.311975479125977
    4. ' ' → logprob: -13.686975479125977
    5. '	g' → logprob: -14.061975479125977
    6. '    ' → logprob: -14.061975479125977
    7. '  ' → logprob: -15.811975479125977
    8. ' ' → logprob: -15.936975479125977
    9. '       ' → logprob: -16.061975479125977
    10. ' =' → logprob: -16.186975479125977

Token 444: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3902033970225602e-05
    2. 'g' → logprob: -11.875014305114746
    3. '=' → logprob: -12.375014305114746
    4. '<|end|>' → logprob: -14.125014305114746
    5. ',' → logprob: -14.500014305114746
    6. '```' → logprob: -14.875014305114746
    7. '³' → logprob: -15.500014305114746
    8. '_' → logprob: -15.750014305114746
    9. 's' → logprob: -16.25001335144043
    10. '۳' → logprob: -16.50001335144043

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044332943856716156
    2. ' =' → logprob: -3.419332981109619
    3. ',' → logprob: -4.544332981109619
    4. '   ' → logprob: -13.419332504272461
    5. '```' → logprob: -14.294332504272461
    6. '=
' → logprob: -14.669332504272461
    7. ')' → logprob: -16.29433250427246
    8. '<|end|>' → logprob: -17.04433250427246
    9. '=torch' → logprob: -17.66933250427246
    10. '=

' → logprob: -17.66933250427246

Token 446: ' tee' (ID: 44157)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.00033546582562848926
    2. ' tee' → logprob: -8.000335693359375
    3. 'tea' → logprob: -19.125335693359375
    4. '   ' → logprob: -19.375335693359375
    5. 'tees' → logprob: -19.750335693359375
    6. 'te' → logprob: -21.500335693359375
    7. 'tei' → logprob: -21.875335693359375
    8. ' Tee' → logprob: -22.000335693359375
    9. 'teen' → logprob: -22.375335693359375
    10. 'tuple' → logprob: -22.750335693359375

Token 447: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.3663626305060461e-05
    2. 'g' → logprob: -11.25001335144043
    3. '(' → logprob: -14.62501335144043
    4. '	g' → logprob: -16.12501335144043
    5. '   ' → logprob: -17.62501335144043
    6. '[g' → logprob: -18.00001335144043
    7. ' g' → logprob: -18.75001335144043
    8. ',g' → logprob: -20.25001335144043
    9. ' (' → logprob: -21.00001335144043
    10. '=g' → logprob: -21.25001335144043

Token 448: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. ',k' → logprob: -11.125027656555176
    3. ' ,' → logprob: -11.875027656555176
    4. ',n' → logprob: -13.000027656555176
    5. '   ' → logprob: -13.625027656555176
    6. '3' → logprob: -13.625027656555176
    7. ')' → logprob: -15.250027656555176
    8. '0' → logprob: -15.500027656555176
    9. ',g' → logprob: -15.875027656555176
    10. '       ' → logprob: -16.250028610229492

Token 449: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '３' → logprob: -18.875001907348633
    4. '۳' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '```' → logprob: -20.250001907348633
    7. '  ' → logprob: -21.000001907348633
    8. '৩' → logprob: -21.000001907348633
    9. ' three' → logprob: -21.250001907348633
    10. '' → logprob: -21.250001907348633

Token 450: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۳' → logprob: -17.625
    4. '３' → logprob: -18.75
    5. '৩' → logprob: -19.3125
    6. '   ' → logprob: -19.4375
    7. '' → logprob: -19.625
    8. '३' → logprob: -19.75
    9. '٣' → logprob: -19.8125
    10. '```' → logprob: -20.5

Token 451: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0100624169572257e-05
    2. ')
' → logprob: -11.500020027160645
    3. '   ' → logprob: -11.875020027160645
    4. '       ' → logprob: -13.875020027160645
    5. ')[' → logprob: -14.500020027160645
    6. ' )' → logprob: -14.875020027160645
    7. '[' → logprob: -15.000020027160645
    8. '<|end|>' → logprob: -15.375020027160645
    9. '),' → logprob: -15.750020027160645
    10. '):' → logprob: -16.12502098083496

Token 452: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7576310038566589
    2. '#' → logprob: -2.0076310634613037
    3. '       ' → logprob: -2.0076310634613037
    4. 'sum' → logprob: -2.0076310634613037
    5. '_' → logprob: -3.6326310634613037
    6. 'for' → logprob: -4.257630825042725
    7. '[' → logprob: -4.382630825042725
    8. 's' → logprob: -4.757630825042725
    9. ')' → logprob: -4.757630825042725
    10. 'n' → logprob: -4.882630825042725

Token 453: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.4485936164855957
    2. 'full' → logprob: -1.6985936164855957
    3. 'period' → logprob: -1.6985936164855957
    4. 'p' → logprob: -1.9485936164855957
    5. 's' → logprob: -2.1985936164855957
    6. 'total' → logprob: -3.0735936164855957
    7. '#' (adapté à ' #') → logprob: -3.5735936164855957
    8. '       ' → logprob: -4.323593616485596
    9. '   ' → logprob: -4.698593616485596
    10. 'S' → logprob: -5.198593616485596

Token 454: ' Calculate' (ID: 38942)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.3779168128967285
    2. 'p' → logprob: -2.3779168128967285
    3. 'sum' → logprob: -3.0029168128967285
    4. 's' → logprob: -3.0029168128967285
    5. 'full' → logprob: -3.0029168128967285
    6. 'total' → logprob: -3.3779168128967285
    7. '#' → logprob: -4.5029168128967285
    8. 'd' → logprob: -5.3779168128967285
    9. 'g' → logprob: -6.1279168128967285
    10. 'psum' → logprob: -6.3779168128967285

Token 455: ' rep' (ID: 2449)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.5224267244338989
    2. 'sum' → logprob: -1.772426724433899
    3. 'p' → logprob: -2.7724266052246094
    4. 'full' → logprob: -3.0224266052246094
    5. 's' → logprob: -3.0224266052246094
    6. 'total' → logprob: -3.1474266052246094
    7. 'psum' → logprob: -4.647426605224609
    8. 'ans' → logprob: -5.647426605224609
    9. 'res' → logprob: -6.022426605224609
    10. 'tot' → logprob: -6.147426605224609

Token 456: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1625022888183594
    2. 'sum' → logprob: -1.5375022888183594
    3. 'et' → logprob: -2.4125022888183594
    4. 'count' → logprob: -2.4125022888183594
    5. '=' → logprob: -2.6625022888183594
    6. '_sum' → logprob: -2.9125022888183594
    7. '_count' → logprob: -3.0375022888183594
    8. 'eat' → logprob: -3.0375022888183594
    9. 's' → logprob: -3.2875022888183594
    10. 'e' → logprob: -4.037502288818359

Token 457: ' rest' (ID: 2867)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.9788561463356018
    2. 'rem' → logprob: -1.728856086730957
    3. 'full' → logprob: -2.228856086730957
    4. 'div' → logprob: -2.603856086730957
    5. '(n' → logprob: -2.603856086730957
    6. 'n' → logprob: -2.853856086730957
    7. 'k' → logprob: -3.728856086730957
    8. 'quot' → logprob: -4.228856086730957
    9. 'left' → logprob: -4.353856086730957
    10. 'period' → logprob: -4.478856086730957

Token 458: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.182546928524971
    2. ' =' → logprob: -1.8075469732284546
    3. '       ' → logprob: -6.557547092437744
    4. '   ' → logprob: -6.682547092437744
    5. ',' → logprob: -9.057546615600586
    6. '    ' → logprob: -12.682546615600586
    7. '=n' → logprob: -13.432546615600586
    8. '```' → logprob: -13.682546615600586
    9. '=
' → logprob: -14.307546615600586
    10. '        ' → logprob: -14.807546615600586

Token 459: '       ' (ID: 309)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.6284703016281128
    2. '       ' → logprob: -1.1284703016281128
    3. ' rep' → logprob: -2.0034704208374023
    4. '   ' → logprob: -6.503470420837402
    5. ' rest' → logprob: -6.628470420837402
    6. '```' → logprob: -6.753470420837402
    7. 'rest' → logprob: -6.878470420837402
    8. ' n' → logprob: -7.003470420837402
    9. 'n' → logprob: -7.003470420837402
    10. '``' → logprob: -7.878470420837402

Token 460: ' #' (ID: 1069)
  Prédit: ' rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rep' → logprob: -0.43172433972358704
    2. 'rep' → logprob: -1.0567243099212646
    3. '   ' → logprob: -6.806724548339844
    4. ' n' → logprob: -6.931724548339844
    5. 'n' → logprob: -7.806724548339844
    6. ' rest' → logprob: -8.931724548339844
    7. '       ' → logprob: -8.931724548339844
    8. '(rep' → logprob: -9.806724548339844
    9. '`' → logprob: -10.056724548339844
    10. 'rest' → logprob: -10.306724548339844

Token 461: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -8.160971628967673e-05
    2. '       ' → logprob: -9.750082015991211
    3. ' rep' → logprob: -11.125082015991211
    4. '   ' → logprob: -11.875082015991211
    5. 'rest' → logprob: -14.375082015991211
    6. '```' → logprob: -14.625082015991211
    7. 'repr' → logprob: -15.500082015991211
    8. '	rep' → logprob: -16.37508201599121
    9. 're' → logprob: -16.75008201599121
    10. '`' → logprob: -17.00008201599121

Token 462: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012969005620107055
    2. ' =' → logprob: -6.7512969970703125
    3. ',' → logprob: -9.001296997070312
    4. '   ' → logprob: -12.876296997070312
    5. '=
' → logprob: -14.501296997070312
    6. '=int' → logprob: -15.876296997070312
    7. '=

' → logprob: -16.626296997070312
    8. '```' → logprob: -17.126296997070312
    9. '=n' → logprob: -17.376296997070312
    10. '//=' → logprob: -17.751296997070312

Token 463: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6213021874427795
    2. '(n' → logprob: -1.4963021278381348
    3. ' n' → logprob: -1.6213021278381348
    4. ' (' → logprob: -3.2463021278381348
    5. 'rep' → logprob: -6.871302127838135
    6. '   ' → logprob: -7.871302127838135
    7. ' rep' → logprob: -8.246302604675293
    8. 'k' → logprob: -8.496302604675293
    9. ' k' → logprob: -9.746302604675293
    10. '(' → logprob: -9.996302604675293

Token 464: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10357174277305603
    2. '(n' → logprob: -2.353571653366089
    3. ' n' → logprob: -6.603571891784668
    4. 'rep' → logprob: -7.228571891784668
    5. 'k' → logprob: -7.603571891784668
    6. ' (' → logprob: -7.853571891784668
    7. 'div' → logprob: -9.103571891784668
    8. 'q' → logprob: -10.478571891784668
    9. 'full' → logprob: -10.478571891784668
    10. 'quot' → logprob: -10.603571891784668

Token 465: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0287305116653442
    2. 'of' → logprob: -1.0287305116653442
    3. '=' → logprob: -2.6537303924560547
    4. '_of' → logprob: -2.9037303924560547
    5. '#' → logprob: -3.2787303924560547
    6. ' =' → logprob: -3.6537303924560547
    7. '`' → logprob: -3.9037303924560547
    8. '   ' → logprob: -4.153730392456055
    9. '_tokens' → logprob: -4.903730392456055
    10. '//' → logprob: -5.028730392456055

Token 466: ' full' (ID: 3149)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5160093307495117
    2. 'n' → logprob: -1.0160093307495117
    3. ' n' → logprob: -3.8910093307495117
    4. ' (' → logprob: -4.391009330749512
    5. 'full' → logprob: -5.141009330749512
    6. ' full' → logprob: -6.141009330749512
    7. 'complete' → logprob: -10.141009330749512
    8. ' complete' → logprob: -10.141009330749512
    9. '   ' → logprob: -10.516009330749512
    10. '(full' → logprob: -10.891009330749512

Token 467: ' cycles' (ID: 41478)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -1.007217526435852
    2. '   ' → logprob: -1.257217526435852
    3. '_period' → logprob: -1.257217526435852
    4. ' periods' → logprob: -3.7572174072265625
    5. ' (' → logprob: -5.0072174072265625
    6. ')' → logprob: -5.2572174072265625
    7. '(n' → logprob: -5.2572174072265625
    8. ' //' → logprob: -5.5072174072265625
    9. 'cycles' → logprob: -5.6322174072265625
    10. 'n' → logprob: -6.1322174072265625

Token 468: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062072329223155975
    2. ' =' → logprob: -2.812072277069092
    3. '   ' → logprob: -9.56207275390625
    4. '=n' → logprob: -10.81207275390625
    5. ',' → logprob: -11.31207275390625
    6. '       ' → logprob: -14.31207275390625
    7. 'n' → logprob: -14.68707275390625
    8. '=int' → logprob: -15.31207275390625
    9. ' ' → logprob: -15.68707275390625
    10. ')' → logprob: -16.18707275390625

Token 469: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2752355635166168
    2. 'n' → logprob: -1.7752355337142944
    3. '(n' → logprob: -2.900235652923584
    4. '(k' → logprob: -4.525235652923584
    5. 'd' → logprob: -6.150235652923584
    6. ' k' → logprob: -6.400235652923584
    7. ' n' → logprob: -7.275235652923584
    8. ' (' → logprob: -7.525235652923584
    9. '   ' → logprob: -9.400235176086426
    10. '(' → logprob: -9.900235176086426

Token 470: ' elements' (ID: 8632)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38701871037483215
    2. ' =' → logprob: -1.1370186805725098
    3. 's' → logprob: -9.387019157409668
    4. ',' → logprob: -10.637019157409668
    5. '   ' → logprob: -11.137019157409668
    6. '=
' → logprob: -12.262019157409668
    7. '`' → logprob: -12.762019157409668
    8. ')' → logprob: -12.887019157409668
    9. 'rep' → logprob: -13.012019157409668
    10. '#' → logprob: -13.637019157409668

Token 471: ' we' (ID: 581)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47422555088996887
    2. '=' → logprob: -0.9742255210876465
    3. '   ' → logprob: -9.099225997924805
    4. ',' → logprob: -10.599225997924805
    5. '       ' → logprob: -12.224225997924805
    6. ' ' → logprob: -13.224225997924805
    7. '=n' → logprob: -13.349225997924805
    8. '    ' → logprob: -14.224225997924805
    9. ')' → logprob: -14.724225997924805
    10. '`' → logprob: -14.974225997924805

Token 472: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15431949496269226
    2. 'can' → logprob: -2.7793195247650146
    3. ' can' → logprob: -3.2793195247650146
    4. ' =' → logprob: -3.4043195247650146
    5. '#' → logprob: -5.5293192863464355
    6. '   ' → logprob: -6.6543192863464355
    7. ' have' → logprob: -6.9043192863464355
    8. ' complete' → logprob: -7.9043192863464355
    9. 'need' → logprob: -7.9043192863464355
    10. 'completed' → logprob: -7.9043192863464355

Token 473: ' go' (ID: 810)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05153559520840645
    2. ' =' → logprob: -3.0515356063842773
    3. ' have' → logprob: -7.551535606384277
    4. '   ' → logprob: -7.801535606384277
    5. ' complete' → logprob: -8.051535606384277
    6. 'have' → logprob: -8.051535606384277
    7. 'div' → logprob: -8.676535606384277
    8. 'count' → logprob: -8.926535606384277
    9. 'complete' → logprob: -9.301535606384277
    10. ' get' → logprob: -9.426535606384277

Token 474: ' through' (ID: 1819)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4456263780593872
    2. '=' → logprob: -1.9456263780593872
    3. 'through' → logprob: -2.0706262588500977
    4. '   ' → logprob: -3.1956262588500977
    5. ' through' → logprob: -3.4456262588500977
    6. ' =' → logprob: -5.195626258850098
    7. 'over' → logprob: -5.695626258850098
    8. 'div' → logprob: -6.070626258850098
    9. '        ' → logprob: -6.820626258850098
    10. ' over' → logprob: -7.445626258850098

Token 475: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5795758962631226
    2. '=' → logprob: -0.8295758962631226
    3. '=n' → logprob: -6.079576015472412
    4. '   ' → logprob: -7.579576015472412
    5. ',' → logprob: -7.954576015472412
    6. 'n' → logprob: -8.079575538635254
    7. ' n' → logprob: -9.329575538635254
    8. '=
' → logprob: -10.579575538635254
    9. '(n' → logprob: -10.704575538635254
    10. ' =
' → logprob: -11.579575538635254

Token 476: ' steps' (ID: 10331)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3297053575515747
    2. 'n' → logprob: -1.3297053575515747
    3. '(n' → logprob: -4.204705238342285
    4. '   ' → logprob: -7.079705238342285
    5. ' (' → logprob: -7.954705238342285
    6. '    ' → logprob: -9.579705238342285
    7. '       ' → logprob: -10.454705238342285
    8. 'rep' → logprob: -11.079705238342285
    9. ')n' → logprob: -11.079705238342285
    10. '`' → logprob: -11.454705238342285

Token 477: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1881791204214096
    2. ' =' → logprob: -1.8131791353225708
    3. '   ' → logprob: -4.813179016113281
    4. ',' → logprob: -8.563179016113281
    5. '=
' → logprob: -10.813179016113281
    6. '=n' → logprob: -10.938179016113281
    7. 'rep' → logprob: -11.438179016113281
    8. '       ' → logprob: -11.688179016113281
    9. ' ' → logprob: -11.813179016113281
    10. 'n' → logprob: -12.563179016113281

Token 478: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8082153797149658
    2. '(n' → logprob: -1.3082153797149658
    3. ' n' → logprob: -2.058215379714966
    4. '       ' → logprob: -2.683215379714966
    5. 'rep' → logprob: -3.308215379714966
    6. '   ' → logprob: -3.558215379714966
    7. ' (' → logprob: -4.183215141296387
    8. ')' → logprob: -5.808215141296387
    9. ' rep' → logprob: -6.183215141296387
    10. ')n' → logprob: -6.433215141296387

Token 479: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4483053684234619
    2. '//' → logprob: -1.198305368423462
    3. ')' → logprob: -3.073305368423462
    4. '#' → logprob: -5.323305130004883
    5. '   ' → logprob: -5.448305130004883
    6. '-' → logprob: -6.198305130004883
    7. ' ' → logprob: -7.698305130004883
    8. ' #' → logprob: -7.698305130004883
    9. '```' → logprob: -7.948305130004883
    10. ' //
' → logprob: -8.698305130004883

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001010538311675191
    2. ' ' → logprob: -7.251010417938232
    3. '   ' → logprob: -8.50101089477539
    4. '2' → logprob: -9.37601089477539
    5. '       ' → logprob: -12.00101089477539
    6. '```' → logprob: -12.50101089477539
    7. '3' → logprob: -14.50101089477539
    8. '           ' → logprob: -14.62601089477539
    9. '  ' → logprob: -14.87601089477539
    10. ')' → logprob: -15.00101089477539

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003143704670947045
    2. '2' → logprob: -8.875314712524414
    3. ' ' → logprob: -9.000314712524414
    4. '   ' → logprob: -10.250314712524414
    5. '```' → logprob: -11.625314712524414
    6. '       ' → logprob: -13.250314712524414
    7. '3' → logprob: -13.375314712524414
    8. '           ' → logprob: -14.125314712524414
    9. ')' → logprob: -14.375314712524414
    10. '
' → logprob: -15.125314712524414

Token 482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002923279767856002
    2. '-' → logprob: -6.752923488616943
    3. ')//' → logprob: -7.377923488616943
    4. '   ' → logprob: -7.752923488616943
    5. '//' → logprob: -8.002923011779785
    6. ' )' → logprob: -8.877923011779785
    7. ' -' → logprob: -9.377923011779785
    8. ' //' → logprob: -10.002923011779785
    9. ')
' → logprob: -10.627923011779785
    10. '       ' → logprob: -10.752923011779785

Token 483: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.542535662651062
    2. ' //' → logprob: -1.042535662651062
    3. '   ' → logprob: -3.2925357818603516
    4. '=' → logprob: -4.292535781860352
    5. '`' → logprob: -5.542535781860352
    6. ')' → logprob: -5.917535781860352
    7. '-' → logprob: -6.167535781860352
    8. '#' → logprob: -6.292535781860352
    9. '*' → logprob: -6.792535781860352
    10. ' =' → logprob: -7.042535781860352

Token 484: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.165027217415627e-05
    2. ' k' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '       ' → logprob: -19.50002098083496
    5. '	k' → logprob: -19.62502098083496
    6. '```' → logprob: -20.37502098083496
    7. ' ' → logprob: -20.87502098083496
    8. '
' → logprob: -21.12502098083496
    9. '           ' → logprob: -21.37502098083496
    10. '`' → logprob: -21.50002098083496

Token 485: '
' (ID: 198)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.6952328085899353
    2. '(rep' → logprob: -1.82023286819458
    3. '   ' → logprob: -2.07023286819458
    4. ')' → logprob: -2.44523286819458
    5. '*' → logprob: -3.69523286819458
    6. '(' → logprob: -4.19523286819458
    7. '       ' → logprob: -4.44523286819458
    8. '=' → logprob: -4.44523286819458
    9. ' rep' → logprob: -4.57023286819458
    10. ',' → logprob: -5.19523286819458

Token 486: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.204713836312294
    2. ' =' → logprob: -1.7047138214111328
    3. 'rep' → logprob: -6.829713821411133
    4. '(rep' → logprob: -7.579713821411133
    5. ')' → logprob: -7.954713821411133
    6. '*' → logprob: -8.579713821411133
    7. '   ' → logprob: -8.579713821411133
    8. ',' → logprob: -8.579713821411133
    9. '_' → logprob: -9.079713821411133
    10. '=
' → logprob: -9.079713821411133

Token 487: ' #' (ID: 1069)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.46706002950668335
    2. '   ' → logprob: -1.8420600891113281
    3. '       ' → logprob: -1.9670600891113281
    4. 'rest' → logprob: -3.217060089111328
    5. ' rep' → logprob: -4.467060089111328
    6. '(rep' → logprob: -5.217060089111328
    7. '_' → logprob: -6.217060089111328
    8. ' rest' → logprob: -6.217060089111328
    9. ')' → logprob: -6.342060089111328
    10. '*' → logprob: -6.717060089111328

Token 488: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.11108113080263138
    2. 'rep' → logprob: -2.361081123352051
    3. ' rest' → logprob: -4.611081123352051
    4. '       ' → logprob: -7.236081123352051
    5. ' rep' → logprob: -9.11108112335205
    6. '   ' → logprob: -10.98608112335205
    7. '```' → logprob: -11.11108112335205
    8. '(rest' → logprob: -12.61108112335205
    9. 'n' → logprob: -13.36108112335205
    10. '``' → logprob: -13.86108112335205

Token 489: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6131581664085388
    2. '=' → logprob: -0.8631581664085388
    3. ',' → logprob: -3.3631582260131836
    4. ':' → logprob: -6.363158226013184
    5. '_' → logprob: -9.363158226013184
    6. '   ' → logprob: -9.988158226013184
    7. ')' → logprob: -11.488158226013184
    8. '```' → logprob: -11.988158226013184
    9. '_rest' → logprob: -12.113158226013184
    10. ' ' → logprob: -12.613158226013184

Token 490: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38689056038856506
    2. '(n' → logprob: -1.1368905305862427
    3. '(' → logprob: -11.136890411376953
    4. 'n' → logprob: -13.011890411376953
    5. ' n' → logprob: -13.636890411376953
    6. '`' → logprob: -14.261890411376953
    7. ' ' → logprob: -14.761890411376953
    8. '(N' → logprob: -15.761890411376953
    9. ' rest' → logprob: -16.511890411376953
    10. ' ' → logprob: -16.761890411376953

Token 491: ' number' (ID: 2086)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18520508706569672
    2. '(n' → logprob: -1.810205101966858
    3. '(' → logprob: -5.810204982757568
    4. ' %' → logprob: -6.810204982757568
    5. ' remainder' → logprob: -7.310204982757568
    6. '%' → logprob: -8.560205459594727
    7. 'n' → logprob: -8.935205459594727
    8. '(
' → logprob: -9.810205459594727
    9. 're' → logprob: -10.060205459594727
    10. ' n' → logprob: -10.060205459594727

Token 492: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.9660048484802246
    2. ' %' → logprob: -1.9660048484802246
    3. '=' → logprob: -2.3410048484802246
    4. '-' → logprob: -2.3410048484802246
    5. ' of' → logprob: -2.4660048484802246
    6. '_' → logprob: -2.4660048484802246
    7. '%' → logprob: -2.7160048484802246
    8. ' -' → logprob: -2.7160048484802246
    9. '   ' → logprob: -3.2160048484802246
    10. ' rest' → logprob: -3.3410048484802246

Token 493: ' leftover' (ID: 97990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5302749872207642
    2. ' (' → logprob: -0.9052749872207642
    3. '(' → logprob: -5.655274868011475
    4. '((' → logprob: -6.280274868011475
    5. ' ((' → logprob: -7.280274868011475
    6. '(k' → logprob: -8.155275344848633
    7. 'k' → logprob: -8.405275344848633
    8. ' ' → logprob: -8.780275344848633
    9. ' n' → logprob: -8.780275344848633
    10. ' k' → logprob: -10.155275344848633

Token 494: ' elements' (ID: 8632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.277355819940567
    2. ' =' → logprob: -1.9023557901382446
    3. '=' → logprob: -3.152355909347534
    4. ' _' → logprob: -4.402355670928955
    5. '_rest' → logprob: -4.402355670928955
    6. '_elements' → logprob: -4.902355670928955
    7. '_tokens' → logprob: -5.777355670928955
    8. '_steps' → logprob: -5.902355670928955
    9. 'rest' → logprob: -6.277355670928955
    10. ')' → logprob: -6.652355670928955

Token 495: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18021351099014282
    2. '=' → logprob: -1.805213451385498
    3. '   ' → logprob: -8.055213928222656
    4. '       ' → logprob: -9.680213928222656
    5. 'rest' → logprob: -10.180213928222656
    6. ',' → logprob: -10.930213928222656
    7. ' rest' → logprob: -11.680213928222656
    8. '```' → logprob: -11.930213928222656
    9. ':' → logprob: -12.555213928222656
    10. ' ' → logprob: -12.680213928222656

Token 496: 'steps' (ID: 27176)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7675730586051941
    2. ' (' → logprob: -1.2675731182098389
    3. 'n' → logprob: -2.017573118209839
    4. '(n' → logprob: -2.892573118209839
    5. ')' → logprob: -3.267573118209839
    6. ' k' → logprob: -5.01757287979126
    7. 'k' → logprob: -5.14257287979126
    8. ' %' → logprob: -5.64257287979126
    9. ' )' → logprob: -5.76757287979126
    10. '(' → logprob: -6.26757287979126

Token 497: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5117813348770142
    2. '%' → logprob: -2.2617812156677246
    3. ' =' → logprob: -2.5117812156677246
    4. '=' → logprob: -2.6367812156677246
    5. '   ' → logprob: -2.7617812156677246
    6. ' -' → logprob: -3.1367812156677246
    7. ')' → logprob: -3.8867812156677246
    8. '       ' → logprob: -5.386781215667725
    9. '-' → logprob: -5.636781215667725
    10. '```' → logprob: -6.511781215667725

Token 498: ' after' (ID: 1934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387636661529541
    2. '=' → logprob: -1.137636661529541
    3. '   ' → logprob: -7.887636661529541
    4. ',' → logprob: -8.762636184692383
    5. 'rest' → logprob: -9.012636184692383
    6. '       ' → logprob: -10.512636184692383
    7. ' rest' → logprob: -10.637636184692383
    8. '```' → logprob: -10.762636184692383
    9. '(rest' → logprob: -11.512636184692383
    10. ' ' → logprob: -12.012636184692383

Token 499: ' these' (ID: 1879)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5254662036895752
    2. '(n' → logprob: -0.9004662036895752
    3. 'k' → logprob: -7.400465965270996
    4. 'div' → logprob: -8.025465965270996
    5. ' n' → logprob: -8.150465965270996
    6. '(' → logprob: -8.275465965270996
    7. 'rep' → logprob: -8.525465965270996
    8. 'n' → logprob: -8.775465965270996
    9. ' k' → logprob: -8.900465965270996
    10. ' rep' → logprob: -9.525465965270996

Token 500: ' full' (ID: 3149)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4947950839996338
    2. ' k' → logprob: -1.6197950839996338
    3. ' %' → logprob: -2.244795083999634
    4. '   ' → logprob: -3.619795083999634
    5. ' rest' → logprob: -3.994795083999634
    6. '%' → logprob: -4.369794845581055
    7. 'rest' → logprob: -5.244794845581055
    8. ' elements' → logprob: -5.869794845581055
    9. ' %
' → logprob: -6.119794845581055
    10. '(k' → logprob: -6.244794845581055

Token 501: ' cycles' (ID: 41478)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.8583426475524902
    2. ' cycles' → logprob: -1.8583426475524902
    3. '_cycles' → logprob: -2.2333426475524902
    4. 'rest' → logprob: -2.3583426475524902
    5. 'cycles' → logprob: -2.8583426475524902
    6. '   ' → logprob: -3.2333426475524902
    7. '_period' → logprob: -3.3583426475524902
    8. '_rest' → logprob: -3.6083426475524902
    9. ' periods' → logprob: -4.73334264755249
    10. '```' → logprob: -4.85834264755249

Token 502: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30695757269859314
    2. '=' → logprob: -1.4319576025009155
    3. '       ' → logprob: -4.056957721710205
    4. '   ' → logprob: -5.306957721710205
    5. 'rep' → logprob: -7.056957721710205
    6. 'rest' → logprob: -7.306957721710205
    7. '
' → logprob: -7.681957721710205
    8. ',' → logprob: -8.306957244873047
    9. '```' → logprob: -8.431957244873047
    10. '(rep' → logprob: -8.681957244873047

Token 503: 'n' (ID: 77)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9818176031112671
    2. '(n' → logprob: -1.356817603111267
    3. 'n' → logprob: -1.731817603111267
    4. ' n' → logprob: -1.856817603111267
    5. ')' → logprob: -3.8568177223205566
    6. 'k' → logprob: -4.981817722320557
    7. ' k' → logprob: -5.981817722320557
    8. '   ' → logprob: -6.231817722320557
    9. '(' → logprob: -7.356817722320557
    10. '(k' → logprob: -7.856817722320557

Token 504: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47717633843421936
    2. '-' → logprob: -0.977176308631897
    3. '   ' → logprob: -6.227176189422607
    4. ')' → logprob: -6.977176189422607
    5. ' ' → logprob: -10.102176666259766
    6. '```' → logprob: -10.102176666259766
    7. '=' → logprob: -10.477176666259766
    8. '       ' → logprob: -11.477176666259766
    9. '[' → logprob: -11.852176666259766
    10. ',' → logprob: -11.852176666259766

Token 505: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00601743720471859
    2. ' ' → logprob: -5.131017208099365
    3. '   ' → logprob: -9.881017684936523
    4. '```' → logprob: -10.756017684936523
    5. ')' → logprob: -12.006017684936523
    6. '>' → logprob: -13.381017684936523
    7. '`' → logprob: -13.381017684936523
    8. '       ' → logprob: -13.631017684936523
    9. '-' → logprob: -13.943517684936523
    10. '           ' → logprob: -14.443517684936523

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001409282092936337
    2. ' ' → logprob: -6.62640905380249
    3. '   ' → logprob: -10.501409530639648
    4. '```' → logprob: -10.751409530639648
    5. 'k' → logprob: -11.126409530639648
    6. '`' → logprob: -12.751409530639648
    7. ' k' → logprob: -12.751409530639648
    8. '%' → logprob: -13.001409530639648
    9. ')' → logprob: -13.251409530639648
    10. '  ' → logprob: -13.626409530639648

Token 507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025329755153506994
    2. '   ' → logprob: -6.377532958984375
    3. '-' → logprob: -8.252532958984375
    4. '//' → logprob: -8.627532958984375
    5. '%' → logprob: -9.502532958984375
    6. ' )' → logprob: -9.752532958984375
    7. ')//' → logprob: -9.877532958984375
    8. ' //' → logprob: -10.002532958984375
    9. '#' → logprob: -10.377532958984375
    10. '```' → logprob: -10.877532958984375

Token 508: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4316297471523285
    2. ' %' → logprob: -2.3066296577453613
    3. '//' → logprob: -2.5566296577453613
    4. '   ' → logprob: -2.8066296577453613
    5. '%' → logprob: -2.9316296577453613
    6. ',' → logprob: -3.5566296577453613
    7. ')' → logprob: -4.556629657745361
    8. '=' → logprob: -5.306629657745361
    9. 'rest' → logprob: -5.931629657745361
    10. ' =' → logprob: -6.181629657745361

Token 509: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20141421258449554
    2. ' k' → logprob: -1.7014142274856567
    3. ' ' → logprob: -15.076414108276367
    4. '   ' → logprob: -15.326414108276367
    5. '	k' → logprob: -16.201414108276367
    6. '(k' → logprob: -16.326414108276367
    7. '    ' → logprob: -16.826414108276367
    8. '`' → logprob: -16.826414108276367
    9. ' ' → logprob: -17.326414108276367
    10. '```' → logprob: -17.451414108276367

Token 510: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24622274935245514
    2. '
' → logprob: -2.371222734451294
    3. '       ' → logprob: -2.621222734451294
    4. 'rep' → logprob: -3.371222734451294
    5. '	rep' → logprob: -4.996222972869873
    6. '    
' → logprob: -6.121222972869873
    7. ' rep' → logprob: -6.496222972869873
    8. 'rest' → logprob: -6.746222972869873
    9. '```' → logprob: -6.746222972869873
    10. '        
' → logprob: -7.121222972869873

Token 511: '       ' (ID: 309)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.46592360734939575
    2. '   ' → logprob: -1.465923547744751
    3. '       ' → logprob: -2.465923547744751
    4. ' rep' → logprob: -3.090923547744751
    5. '
' → logprob: -5.46592378616333
    6. '	rep' → logprob: -5.84092378616333
    7. '```' → logprob: -6.46592378616333
    8. '(rep' → logprob: -6.71592378616333
    9. '.rep' → logprob: -8.590923309326172
    10. ' =' → logprob: -8.715923309326172

Token 512: ' rep' (ID: 2449)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6220798492431641
    2. 'rep' (adapté à ' rep') → logprob: -0.9970798492431641
    3. '
' → logprob: -3.247079849243164
    4. ' rep' → logprob: -3.747079849243164
    5. ' 
' → logprob: -4.872079849243164
    6. '       ' → logprob: -4.997079849243164
    7. '    
' → logprob: -5.122079849243164
    8. '	rep' → logprob: -5.122079849243164
    9. '```' → logprob: -6.497079849243164
    10. '\n' → logprob: -6.622079849243164

Token 513: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10043256729841232
    2. '=' → logprob: -2.6004326343536377
    3. ',' → logprob: -3.8504326343536377
    4. '   ' → logprob: -10.725432395935059
    5. ' ,' → logprob: -10.975432395935059
    6. ' ' → logprob: -13.975432395935059
    7. ' =(' → logprob: -14.100432395935059
    8. '```' → logprob: -15.600432395935059
    9. '=(' → logprob: -15.725432395935059
    10. '=int' → logprob: -15.725432395935059

Token 514: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.018151231110095978
    2. 'rest' → logprob: -4.01815128326416
    3. '(rest' → logprob: -14.01815128326416
    4. '_rest' → logprob: -14.89315128326416
    5. ' ' → logprob: -17.143150329589844
    6. ' ' → logprob: -17.393150329589844
    7. ' resta' → logprob: -17.643150329589844
    8. ' n' → logprob: -17.893150329589844
    9. '.rest' → logprob: -18.393150329589844
    10. ' =' → logprob: -18.643150329589844

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269807070493698
    2. ' =' → logprob: -2.126980781555176
    3. ',' → logprob: -9.876980781555176
    4. '   ' → logprob: -13.876980781555176
    5. ')' → logprob: -15.501980781555176
    6. ' ' → logprob: -17.00197982788086
    7. ' =",' → logprob: -17.12697982788086
    8. '    ' → logprob: -17.62697982788086
    9. '```' → logprob: -17.62697982788086
    10. ')=' → logprob: -17.75197982788086

Token 516: ' div' (ID: 4223)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.43158113956451416
    2. 'div' → logprob: -1.1815811395645142
    3. ' (' → logprob: -3.3065810203552246
    4. '   ' → logprob: -5.556581020355225
    5. ' div' → logprob: -5.806581020355225
    6. ' ' → logprob: -9.556581497192383
    7. '  ' → logprob: -10.431581497192383
    8. '(div' → logprob: -10.556581497192383
    9. '    ' → logprob: -10.681581497192383
    10. '(N' → logprob: -10.931581497192383

Token 517: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04132900759577751
    2. '(n' → logprob: -3.7913289070129395
    3. '(' → logprob: -4.2913289070129395
    4. '((' → logprob: -5.7913289070129395
    5. ' (' → logprob: -7.6663289070129395
    6. '(
' → logprob: -8.541329383850098
    7. ',' → logprob: -8.541329383850098
    8. '   ' → logprob: -9.041329383850098
    9. '(mod' → logprob: -9.916329383850098
    10. 'ision' → logprob: -10.541329383850098

Token 518: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00035214703530073166
    2. 'n' → logprob: -8.000351905822754
    3. '((' → logprob: -11.375351905822754
    4. ' (' → logprob: -12.625351905822754
    5. '   ' → logprob: -13.750351905822754
    6. '(' → logprob: -14.000351905822754
    7. ' n' → logprob: -16.75035285949707
    8. ' ' → logprob: -19.25035285949707
    9. '	n' → logprob: -19.50035285949707
    10. '(
' → logprob: -19.62535285949707

Token 519: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06603676080703735
    2. ' -' → logprob: -2.9410367012023926
    3. '(' → logprob: -5.191036701202393
    4. '1' → logprob: -5.566036701202393
    5. '   ' → logprob: -6.816036701202393
    6. ' (' → logprob: -8.69103717803955
    7. ')' → logprob: -8.81603717803955
    8. '(n' → logprob: -9.19103717803955
    9. ',' → logprob: -9.69103717803955
    10. ' ' → logprob: -10.19103717803955

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010356683051213622
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -12.876035690307617
    4. '```' → logprob: -16.376035690307617
    5. ',' → logprob: -16.626035690307617
    6. '`' → logprob: -17.376035690307617
    7. '	' → logprob: -17.751035690307617
    8. '2' → logprob: -17.876035690307617
    9. '    ' → logprob: -17.876035690307617
    10. '  ' → logprob: -18.251035690307617

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010068230039905757
    2. ' ' → logprob: -9.250101089477539
    3. 'def' → logprob: -13.250101089477539
    4. '2' → logprob: -13.625101089477539
    5. '   ' → logprob: -13.750101089477539
    6. '```' → logprob: -15.375101089477539
    7. '<|end|>' → logprob: -16.37510108947754
    8. 'k' → logprob: -16.93760108947754
    9. '  ' → logprob: -17.06260108947754
    10. '`' → logprob: -17.37510108947754

Token 522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002738781739026308
    2. ',k' → logprob: -6.377738952636719
    3. ' ,' → logprob: -6.877738952636719
    4. '<|end|>' → logprob: -13.502738952636719
    5. ')' → logprob: -13.627738952636719
    6. 'k' → logprob: -13.877738952636719
    7. ',
' → logprob: -14.252738952636719
    8. '(k' → logprob: -14.627738952636719
    9. ' k' → logprob: -15.502738952636719
    10. '[' → logprob: -15.752738952636719

Token 523: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0040785204619169235
    2. ' k' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.379077911376953
    4. '	k' → logprob: -19.754077911376953
    5. '```' → logprob: -19.879077911376953
    6. '    ' → logprob: -20.129077911376953
    7. ')' → logprob: -20.129077911376953
    8. ' ' → logprob: -20.504077911376953
    9. '{k' → logprob: -21.379077911376953
    10. '*k' → logprob: -22.379077911376953

Token 524: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012928384239785373
    2. ')
' → logprob: -9.500129699707031
    3. '       ' → logprob: -10.000129699707031
    4. '   ' → logprob: -11.750129699707031
    5. '<|end|>' → logprob: -14.625129699707031
    6. ' )' → logprob: -15.125129699707031
    7. '[' → logprob: -16.00012969970703
    8. ')

' → logprob: -16.12512969970703
    9. '),' → logprob: -16.75012969970703
    10. '```' → logprob: -17.50012969970703

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7538663148880005
    2. 'sum' → logprob: -0.7538663148880005
    3. 's' → logprob: -3.378866195678711
    4. 'total' → logprob: -5.003866195678711
    5. '
' → logprob: -5.378866195678711
    6. '   ' → logprob: -5.878866195678711
    7. 'rest' → logprob: -6.378866195678711
    8. '#' → logprob: -6.503866195678711
    9. 'full' → logprob: -6.503866195678711
    10. 'period' → logprob: -6.878866195678711

Token 526: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3957092761993408
    2. 's' → logprob: -1.6457092761993408
    3. 'period' → logprob: -3.020709276199341
    4. 'total' → logprob: -3.770709276199341
    5. 'full' → logprob: -4.020709037780762
    6. 'p' → logprob: -4.770709037780762
    7. 'sm' → logprob: -4.895709037780762
    8. '#' (adapté à ' #') → logprob: -5.770709037780762
    9. 'psum' → logprob: -6.145709037780762
    10. 'res' → logprob: -6.145709037780762

Token 527: ' Calculate' (ID: 38942)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0087292194366455
    2. 'sum' → logprob: -1.2587292194366455
    3. 'period' → logprob: -2.0087292194366455
    4. 'total' → logprob: -2.8837292194366455
    5. 'full' → logprob: -3.7587292194366455
    6. 'p' → logprob: -3.8837292194366455
    7. 'sm' → logprob: -4.258728981018066
    8. '#' → logprob: -4.633728981018066
    9. 'ans' → logprob: -4.883728981018066
    10. 'psum' → logprob: -5.008728981018066

Token 528: ' the' (ID: 290)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0772652626037598
    2. 'total' → logprob: -1.5772652626037598
    3. 'period' → logprob: -1.7022652626037598
    4. 's' → logprob: -2.0772652626037598
    5. 'full' → logprob: -2.7022652626037598
    6. 'p' → logprob: -3.9522652626037598
    7. 'psum' → logprob: -4.07726526260376
    8. 'tot' → logprob: -4.57726526260376
    9. 'base' → logprob: -5.45226526260376
    10. 'ans' → logprob: -5.57726526260376

Token 529: ' last' (ID: 2174)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.7142807841300964
    2. 'total' → logprob: -1.9642808437347412
    3. 'sum' → logprob: -1.9642808437347412
    4. 's' → logprob: -2.089280843734741
    5. 'full' → logprob: -3.464280843734741
    6. 'p' → logprob: -4.214280605316162
    7. 'psum' → logprob: -4.464280605316162
    8. 'base' → logprob: -4.464280605316162
    9. 'tot' → logprob: -5.214280605316162
    10. 'cycle' → logprob: -5.464280605316162

Token 530: ' value' (ID: 1432)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.7515827417373657
    2. 'sum' → logprob: -1.7515827417373657
    3. '_val' → logprob: -2.376582622528076
    4. '_' → logprob: -3.001582622528076
    5. 'val' → logprob: -3.251582622528076
    6. ')' → logprob: -3.751582622528076
    7. 's' → logprob: -4.001582622528076
    8. 'g' → logprob: -4.001582622528076
    9. '_g' → logprob: -4.126582622528076
    10. 'rest' → logprob: -4.126582622528076

Token 531: ' reached' (ID: 15237)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5863326787948608
    2. '=' → logprob: -0.8363326787948608
    3. '       ' → logprob: -5.71133279800415
    4. 'x' → logprob: -6.46133279800415
    5. '+=' → logprob: -6.96133279800415
    6. '   ' → logprob: -7.33633279800415
    7. '%=' → logprob: -7.46133279800415
    8. '%' → logprob: -7.71133279800415
    9. 'last' → logprob: -7.83633279800415
    10. 'val' → logprob: -7.96133279800415

Token 532: ' after' (ID: 1934)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6271034479141235
    2. ' =' → logprob: -0.8771034479141235
    3. 'last' → logprob: -4.502103328704834
    4. '   ' → logprob: -4.752103328704834
    5. 'x' → logprob: -4.877103328704834
    6. '       ' → logprob: -5.002103328704834
    7. 'val' → logprob: -5.627103328704834
    8. '+=' → logprob: -6.127103328704834
    9. 'y' → logprob: -6.377103328704834
    10. 'ans' → logprob: -6.877103328704834

Token 533: ' (' (ID: 350)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.8316870927810669
    2. 'rep' → logprob: -1.331687092781067
    3. 'x' → logprob: -1.581687092781067
    4. '(rep' → logprob: -3.3316869735717773
    5. '(rest' → logprob: -3.5816869735717773
    6. 'app' → logprob: -4.831686973571777
    7. '(' → logprob: -5.081686973571777
    8. '(x' → logprob: -5.331686973571777
    9. 'adding' → logprob: -5.706686973571777
    10. '(n' → logprob: -5.706686973571777

Token 534: 'n' (ID: 77)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.5902814269065857
    2. 'rep' → logprob: -0.9652814269065857
    3. 'n' → logprob: -3.0902814865112305
    4. 'x' → logprob: -5.0902814865112305
    5. 'next' → logprob: -5.2152814865112305
    6. '1' → logprob: -5.8402814865112305
    7. ')' → logprob: -6.9652814865112305
    8. 'k' → logprob: -7.2152814865112305
    9. 'sum' → logprob: -7.2152814865112305
    10. ' rest' → logprob: -7.7152814865112305

Token 535: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28201183676719666
    2. ' -' → logprob: -1.407011866569519
    3. '   ' → logprob: -8.157011985778809
    4. ')' → logprob: -8.282011985778809
    5. '```' → logprob: -8.532011985778809
    6. '=' → logprob: -10.532011985778809
    7. 'def' → logprob: -11.157011985778809
    8. ' ' → logprob: -11.532011985778809
    9. '-token' → logprob: -11.657011985778809
    10. '
' → logprob: -11.657011985778809

Token 536: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004114850424230099
    2. ' ' → logprob: -6.129114627838135
    3. '   ' → logprob: -6.629114627838135
    4. ')' → logprob: -7.754114627838135
    5. '-' → logprob: -9.754115104675293
    6. '```' → logprob: -10.254115104675293
    7. '2' → logprob: -10.504115104675293
    8. '       ' → logprob: -11.004115104675293
    9. '`' → logprob: -11.754115104675293
    10. ' )' → logprob: -12.254115104675293

Token 537: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1260080337524414
    2. '-' → logprob: -1.3760080337524414
    3. ' *' → logprob: -2.0010080337524414
    4. ' -' → logprob: -2.0010080337524414
    5. '*' → logprob: -2.6260080337524414
    6. '+' → logprob: -3.2510080337524414
    7. ' +' → logprob: -4.126008033752441
    8. ' )' → logprob: -5.376008033752441
    9. 'steps' → logprob: -5.376008033752441
    10. ',' → logprob: -6.126008033752441

Token 538: ' increments' (ID: 124105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5154328942298889
    2. ' =' → logprob: -1.2654328346252441
    3. '%' → logprob: -3.015432834625244
    4. '%=' → logprob: -3.765432834625244
    5. ',' → logprob: -4.640432834625244
    6. ' %=' → logprob: -4.640432834625244
    7. '_' → logprob: -5.140432834625244
    8. '_value' → logprob: -5.265432834625244
    9. 'x' → logprob: -6.015432834625244
    10. 'value' → logprob: -6.265432834625244

Token 539: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8048529028892517
    2. '+=' → logprob: -1.5548529624938965
    3. '=' → logprob: -1.6798529624938965
    4. ' +=' → logprob: -2.6798529624938965
    5. '       ' → logprob: -3.4298529624938965
    6. 'x' → logprob: -3.5548529624938965
    7. '   ' → logprob: -4.6798529624938965
    8. '+' → logprob: -5.1798529624938965
    9. 'val' → logprob: -6.5548529624938965
    10. 'last' → logprob: -6.5548529624938965

Token 540: ' elements' (ID: 8632)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026847640052437782
    2. 'next' → logprob: -4.026847839355469
    3. ' x' → logprob: -6.276847839355469
    4. 'd' → logprob: -6.276847839355469
    5. 'k' → logprob: -6.526847839355469
    6. '(x' → logprob: -6.901847839355469
    7. '(next' → logprob: -7.401847839355469
    8. 'lambda' → logprob: -8.151847839355469
    9. 'sum' → logprob: -8.276847839355469
    10. 'g' → logprob: -8.401847839355469

Token 541: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2673078179359436
    2. '=' → logprob: -1.5173077583312988
    3. '   ' → logprob: -5.642307758331299
    4. ' +=' → logprob: -5.642307758331299
    5. '+=' → logprob: -5.642307758331299
    6. '       ' → logprob: -6.517307758331299
    7. 'x' → logprob: -7.892307758331299
    8. 'of' → logprob: -8.017308235168457
    9. ',' → logprob: -8.142308235168457
    10. '_val' → logprob: -8.392308235168457

Token 542: ' g' (ID: 329)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7008193135261536
    2. 'g' → logprob: -0.7008193135261536
    3. ' d' → logprob: -5.325819492340088
    4. ' g' → logprob: -5.950819492340088
    5. 'the' → logprob: -10.07581901550293
    6. '*d' → logprob: -10.57581901550293
    7. ' the' → logprob: -10.70081901550293
    8. '*g' → logprob: -11.20081901550293
    9. '```' → logprob: -11.32581901550293
    10. '`' → logprob: -11.82581901550293

Token 543: ':
' (ID: 734)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.27905774116516113
    2. ' =' → logprob: -2.654057741165161
    3. '+=' → logprob: -2.904057741165161
    4. '=' → logprob: -3.654057741165161
    5. 'last' → logprob: -3.654057741165161
    6. ' +=' → logprob: -4.029057502746582
    7. 'for' → logprob: -4.654057502746582
    8. 'val' → logprob: -5.154057502746582
    9. 'next' → logprob: -5.404057502746582
    10. 'sum' → logprob: -5.654057502746582

Token 544: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13513366878032684
    2. 'last' → logprob: -3.510133743286133
    3. 'res' → logprob: -3.635133743286133
    4. 'y' → logprob: -3.635133743286133
    5. 'ans' → logprob: -3.760133743286133
    6. ' x' → logprob: -5.885133743286133
    7. 's' → logprob: -6.135133743286133
    8. 'cur' → logprob: -6.260133743286133
    9. 'for' → logprob: -6.510133743286133
    10. 'r' → logprob: -6.510133743286133

Token 545: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2791905701160431
    2. 'last' → logprob: -2.0291905403137207
    3. 'y' → logprob: -3.6541905403137207
    4. 'res' → logprob: -3.9041905403137207
    5. 'ans' → logprob: -4.279190540313721
    6. ' x' → logprob: -4.404190540313721
    7. ' last' → logprob: -4.529190540313721
    8. 'for' → logprob: -5.154190540313721
    9. 'cur' → logprob: -5.779190540313721
    10. 's' → logprob: -6.029190540313721

Token 546: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.48495012521743774
    2. 'last' → logprob: -1.484950065612793
    3. 'ans' → logprob: -2.984950065612793
    4. 'total' → logprob: -3.734950065612793
    5. 'y' → logprob: -3.984950065612793
    6. 'res' → logprob: -3.984950065612793
    7. 's' → logprob: -4.359950065612793
    8. 'cur' → logprob: -4.484950065612793
    9. 'add' → logprob: -5.609950065612793
    10. 'val' → logprob: -5.859950065612793

Token 547: ' Initially' (ID: 96924)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26663491129875183
    2. 'last' → logprob: -2.766634941101074
    3. 'res' → logprob: -3.016634941101074
    4. '(x' → logprob: -3.391634941101074
    5. 'ans' → logprob: -3.641634941101074
    6. 'y' → logprob: -4.266634941101074
    7. 'cur' → logprob: -4.641634941101074
    8. 'val' → logprob: -5.391634941101074
    9. 'result' → logprob: -5.391634941101074
    10. ' x' → logprob: -5.516634941101074

Token 548: ',' (ID: 11)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1951661109924316
    2. 'x' → logprob: -1.5701661109924316
    3. 'res' → logprob: -2.3201661109924316
    4. 'val' → logprob: -2.3201661109924316
    5. 'ans' → logprob: -3.3201661109924316
    6. 'value' → logprob: -3.4451661109924316
    7. '       ' → logprob: -3.4451661109924316
    8. '=' → logprob: -3.6951661109924316
    9. ' =' → logprob: -4.195166110992432
    10. ' y' → logprob: -4.195166110992432

Token 549: ' start' (ID: 1604)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5512455105781555
    2. 'res' → logprob: -2.0512454509735107
    3. 'ans' → logprob: -2.4262454509735107
    4. 'last' → logprob: -2.8012454509735107
    5. 'cur' → logprob: -3.0512454509735107
    6. 'y' → logprob: -3.3012454509735107
    7. 'val' → logprob: -3.4262454509735107
    8. 'result' → logprob: -4.55124568939209
    9. 'total' → logprob: -5.55124568939209
    10. 'curr' → logprob: -6.05124568939209

Token 550: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26800280809402466
    2. ' =' → logprob: -2.51800274848938
    3. '_value' → logprob: -3.14300274848938
    4. '+=' → logprob: -3.39300274848938
    5. ' +=' → logprob: -3.89300274848938
    6. '_' → logprob: -4.143002986907959
    7. 'x' → logprob: -4.518002986907959
    8. '_val' → logprob: -4.768002986907959
    9. 'value' → logprob: -5.268002986907959
    10. 'with' → logprob: -5.518002986907959

Token 551: ' value' (ID: 1432)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07893793284893036
    2. ' x' → logprob: -2.5789380073547363
    3. '   ' → logprob: -11.203937530517578
    4. '`' → logprob: -11.453937530517578
    5. '(x' → logprob: -11.953937530517578
    6. '```' → logprob: -12.203937530517578
    7. '1' → logprob: -13.328937530517578
    8. '       ' → logprob: -13.578937530517578
    9. ' ' → logprob: -13.703937530517578
    10. ')' → logprob: -13.828937530517578

Token 552: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42997658252716064
    2. ' x' → logprob: -1.0549765825271606
    3. ' =' → logprob: -8.054976463317871
    4. '(x' → logprob: -8.304976463317871
    5. '=' → logprob: -8.679976463317871
    6. ' ' → logprob: -9.304976463317871
    7. '   ' → logprob: -9.804976463317871
    8. ' (' → logprob: -9.929976463317871
    9. '`' → logprob: -10.054976463317871
    10. ',' → logprob: -10.179976463317871

Token 553: '.
' (ID: 558)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.572606086730957
    2. '   ' → logprob: -2.572606086730957
    3. 'prev' → logprob: -2.572606086730957
    4. 'res' → logprob: -2.822606086730957
    5. 'cur' → logprob: -2.822606086730957
    6. 'y' → logprob: -2.947606086730957
    7. ' +' → logprob: -2.947606086730957
    8. 'result' → logprob: -2.947606086730957
    9. '
' → logprob: -3.197606086730957
    10. 'x' → logprob: -3.447606086730957

Token 554: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19274523854255676
    2. 'for' → logprob: -2.6927452087402344
    3. ' x' → logprob: -3.8177452087402344
    4. '       ' → logprob: -3.8177452087402344
    5. 'result' → logprob: -3.9427452087402344
    6. ' for' → logprob: -4.192745208740234
    7. 'res' → logprob: -5.192745208740234
    8. '   ' → logprob: -5.567745208740234
    9. 'prev' → logprob: -5.817745208740234
    10. 'next' → logprob: -5.942745208740234

Token 555: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06293696165084839
    2. 'for' → logprob: -4.062936782836914
    3. 'last' → logprob: -4.437936782836914
    4. 'res' → logprob: -4.812936782836914
    5. 'ans' → logprob: -5.187936782836914
    6. 'cur' → logprob: -5.687936782836914
    7. 'total' → logprob: -6.062936782836914
    8. 'result' → logprob: -6.312936782836914
    9. '   ' → logprob: -6.437936782836914
    10. 'y' → logprob: -6.562936782836914

Token 556: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21716855466365814
    2. 'total' → logprob: -3.3421685695648193
    3. 'res' → logprob: -3.4671685695648193
    4. 'cur' → logprob: -3.5921685695648193
    5. 'ans' → logprob: -3.8421685695648193
    6. 's' → logprob: -3.8421685695648193
    7. 'last' → logprob: -4.21716833114624
    8. 'for' → logprob: -4.84216833114624
    9. 'acc' → logprob: -4.96716833114624
    10. 'result' → logprob: -5.21716833114624

Token 557: ' Add' (ID: 4063)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05530738830566406
    2. 's' → logprob: -4.305307388305664
    3. 'total' → logprob: -4.430307388305664
    4. 'last' → logprob: -4.930307388305664
    5. 'res' → logprob: -5.805307388305664
    6. 'increment' → logprob: -5.930307388305664
    7. 'for' → logprob: -6.055307388305664
    8. 'cur' → logprob: -6.305307388305664
    9. 'add' → logprob: -6.680307388305664
    10. 'inc' → logprob: -6.930307388305664

Token 558: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09182870388031006
    2. ' sum' → logprob: -2.8418288230895996
    3. 'next' → logprob: -3.7168288230895996
    4. ' next' → logprob: -5.4668288230896
    5. 'x' → logprob: -7.3418288230896
    6. ' x' → logprob: -8.966828346252441
    7. '   ' → logprob: -9.716828346252441
    8. 'rep' → logprob: -10.716828346252441
    9. 'rest' → logprob: -11.591828346252441
    10. '(sum' → logprob: -12.716828346252441

Token 559: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.016579948365688324
    2. 'rep' → logprob: -4.266580104827881
    3. 'x' → logprob: -6.891580104827881
    4. 'next' → logprob: -6.891580104827881
    5. 'rest' → logprob: -8.391579627990723
    6. ' sum' → logprob: -9.266579627990723
    7. '(sum' → logprob: -10.391579627990723
    8. ')' → logprob: -11.891579627990723
    9. '   ' → logprob: -12.141579627990723
    10. '(rep' → logprob: -12.391579627990723

Token 560: ' of' (ID: 328)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.9686232805252075
    2. '(sum' → logprob: -1.0936232805252075
    3. '(g' → logprob: -2.718623161315918
    4. '1' → logprob: -2.843623161315918
    5. '=' → logprob: -3.093623161315918
    6. 'sum' → logprob: -3.718623161315918
    7. 'map' → logprob: -3.843623161315918
    8. 'g' → logprob: -4.093623161315918
    9. '=sum' → logprob: -4.343623161315918
    10. '(' → logprob: -4.468623161315918

Token 561: ' one' (ID: 1001)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5330007076263428
    2. 'is' → logprob: -0.9080007076263428
    3. 'list' → logprob: -4.658000946044922
    4. 'next' → logprob: -8.908000946044922
    5. 'd' → logprob: -9.908000946044922
    6. 'it' → logprob: -10.533000946044922
    7. 'i' → logprob: -10.908000946044922
    8. ' g' → logprob: -10.908000946044922
    9. '(is' → logprob: -10.908000946044922
    10. '(g' → logprob: -10.908000946044922

Token 562: ' '' (ID: 461)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.02088436856865883
    2. '(d' → logprob: -4.1458845138549805
    3. 'g' → logprob: -6.8958845138549805
    4. '(' → logprob: -7.0208845138549805
    5. ')' → logprob: -7.0208845138549805
    6. '(map' → logprob: -7.5208845138549805
    7. 'd' → logprob: -7.6458845138549805
    8. '(is' → logprob: -8.14588451385498
    9. '([' → logprob: -9.39588451385498
    10. '+' → logprob: -9.52088451385498

Token 563: 'k' (ID: 74)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008277792483568192
    2. 'is' → logprob: -5.258277893066406
    3. 'd' → logprob: -6.258277893066406
    4. 'list' → logprob: -7.133277893066406
    5. '(g' → logprob: -9.008277893066406
    6. '(is' → logprob: -10.008277893066406
    7. 'map' → logprob: -10.258277893066406
    8. ' g' → logprob: -10.258277893066406
    9. 'it' → logprob: -11.383277893066406
    10. '[g' → logprob: -11.758277893066406

Token 564: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6630055904388428
    2. '(d' → logprob: -1.6630055904388428
    3. 'd' → logprob: -1.7880055904388428
    4. ')d' → logprob: -3.0380055904388428
    5. '*d' → logprob: -3.7880055904388428
    6. ' d' → logprob: -5.038005828857422
    7. 'g' → logprob: -5.163005828857422
    8. '   ' → logprob: -5.163005828857422
    9. '(g' → logprob: -5.163005828857422
    10. '_d' → logprob: -5.413005828857422

Token 565: ' cycle' (ID: 15839)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7326365113258362
    2. ')' → logprob: -1.3576364517211914
    3. 'd' → logprob: -1.7326364517211914
    4. '*d' → logprob: -4.232636451721191
    5. '(g' → logprob: -4.482636451721191
    6. '_d' → logprob: -4.607636451721191
    7. 'g' → logprob: -4.982636451721191
    8. '*' → logprob: -5.357636451721191
    9. '   ' → logprob: -5.482636451721191
    10. ')*' → logprob: -6.107636451721191

Token 566: ')' (ID: 8)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.1402815729379654
    2. '(d' → logprob: -2.5152816772460938
    3. ')' → logprob: -3.6402816772460938
    4. 'g' → logprob: -5.015281677246094
    5. '(map' → logprob: -6.015281677246094
    6. '   ' → logprob: -6.140281677246094
    7. 'of' → logprob: -6.140281677246094
    8. '1' → logprob: -6.390281677246094
    9. '+' → logprob: -6.765281677246094
    10. ')+' → logprob: -6.890281677246094

Token 567: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8082073330879211
    2. '(' → logprob: -1.1832072734832764
    3. '(sum' → logprob: -2.0582072734832764
    4. '(g' → logprob: -2.9332072734832764
    5. ' +' → logprob: -3.8082072734832764
    6. ')' → logprob: -4.4332075119018555
    7. 'sum' → logprob: -4.6832075119018555
    8. '=' → logprob: -4.8082075119018555
    9. '(
' → logprob: -5.9332075119018555
    10. '   ' → logprob: -6.4332075119018555

Token 568: ' number' (ID: 2086)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.0004932218580506742
    2. 'next' → logprob: -8.125493049621582
    3. ' rep' → logprob: -8.750493049621582
    4. '(rep' → logprob: -10.375493049621582
    5. '   ' → logprob: -12.625493049621582
    6. ' next' → logprob: -13.000493049621582
    7. '	rep' → logprob: -14.875493049621582
    8. '    ' → logprob: -15.250493049621582
    9. '       ' → logprob: -15.250493049621582
    10. 'rest' → logprob: -15.250493049621582

Token 569: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.7864280343055725
    2. 'of' → logprob: -1.9114279747009277
    3. '(rep' → logprob: -2.1614279747009277
    4. '       ' → logprob: -2.5364279747009277
    5. '   ' → logprob: -2.7864279747009277
    6. '           ' → logprob: -3.7864279747009277
    7. '+' → logprob: -4.036427974700928
    8. '=' → logprob: -4.411427974700928
    9. 'rep' → logprob: -4.411427974700928
    10. ' of' → logprob: -4.661427974700928

Token 570: ' full' (ID: 3149)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.0029523817356675863
    2. ' rep' → logprob: -5.877952575683594
    3. 're' → logprob: -9.002952575683594
    4. '	rep' → logprob: -12.002952575683594
    5. '   ' → logprob: -12.252952575683594
    6. '(rep' → logprob: -12.627952575683594
    7. ' full' → logprob: -13.002952575683594
    8. 'g' → logprob: -13.252952575683594
    9. 'full' → logprob: -13.502952575683594
    10. ' reps' → logprob: -14.127952575683594

Token 571: ' cycles' (ID: 41478)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -1.321601390838623
    2. ' cycles' → logprob: -1.571601390838623
    3. '   ' → logprob: -1.821601390838623
    4. 'rep' → logprob: -2.071601390838623
    5. ')' → logprob: -2.321601390838623
    6. ' rep' → logprob: -2.571601390838623
    7. ' full' → logprob: -4.071601390838623
    8. 'g' → logprob: -4.946601390838623
    9. '       ' → logprob: -5.196601390838623
    10. ' periods' → logprob: -5.321601390838623

Token 572: ' '' (ID: 461)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38350909948349
    2. ' +' → logprob: -1.2585091590881348
    3. 'sum' → logprob: -5.008509159088135
    4. ')' → logprob: -5.133509159088135
    5. '+
' → logprob: -5.383509159088135
    6. 'd' → logprob: -5.508509159088135
    7. '(sum' → logprob: -6.383509159088135
    8. '   ' → logprob: -6.508509159088135
    9. '+d' → logprob: -6.508509159088135
    10. ' +
' → logprob: -6.633509159088135

Token 573: 'rep' (ID: 17407)
  Prédit: 'rep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.00018744789122138172
    2. ' rep' → logprob: -8.625187873840332
    3. '   ' → logprob: -12.625187873840332
    4. '(rep' → logprob: -12.625187873840332
    5. '       ' → logprob: -14.625187873840332
    6. '           ' → logprob: -15.250187873840332
    7. '	rep' → logprob: -16.000186920166016
    8. '    ' → logprob: -16.500186920166016
    9. '`' → logprob: -16.750186920166016
    10. '
' → logprob: -16.750186920166016

Token 574: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025586508214473724
    2. '+' → logprob: -4.4005866050720215
    3. ')+' → logprob: -5.5255866050720215
    4. ' +' → logprob: -5.9005866050720215
    5. '')' → logprob: -6.2755866050720215
    6. ' )' → logprob: -7.0255866050720215
    7. '       ' → logprob: -7.1505866050720215
    8. '   ' → logprob: -7.2755866050720215
    9. '#' → logprob: -8.025586128234863
    10. ')
' → logprob: -8.400586128234863

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12041756510734558
    2. '+' → logprob: -2.870417594909668
    3. ' +' → logprob: -2.995417594909668
    4. 'sum' → logprob: -6.245417594909668
    5. '   ' → logprob: -6.870417594909668
    6. '#' → logprob: -6.870417594909668
    7. '           ' → logprob: -7.745417594909668
    8. ')' → logprob: -7.995417594909668
    9. '        ' → logprob: -8.120417594909668
    10. '```' → logprob: -8.870417594909668

Token 576: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5637435913085938
    2. ' +' → logprob: -1.4387435913085938
    3. '+' → logprob: -1.6887435913085938
    4. '   ' → logprob: -6.688743591308594
    5. 'sum' → logprob: -6.813743591308594
    6. ' +=' → logprob: -7.438743591308594
    7. '           ' → logprob: -7.813743591308594
    8. ')' → logprob: -7.938743591308594
    9. 'result' → logprob: -7.938743591308594
    10. 'total' → logprob: -8.063743591308594

Token 577: ' -' (ID: 533)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2184635400772095
    2. '+' → logprob: -1.9684635400772095
    3. '       ' → logprob: -1.9684635400772095
    4. 'total' → logprob: -2.09346342086792
    5. ' +' → logprob: -2.96846342086792
    6. ' total' → logprob: -3.46846342086792
    7. 'res' → logprob: -3.71846342086792
    8. ' sum' → logprob: -3.71846342086792
    9. 'print' → logprob: -3.84346342086792
    10. 's' → logprob: -4.21846342086792

Token 578: ' Add' (ID: 4063)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.064592719078064
    2. ' rest' → logprob: -1.064592719078064
    3. ' x' → logprob: -2.8145928382873535
    4. 'rest' → logprob: -2.8145928382873535
    5. 'sum' → logprob: -3.4395928382873535
    6. ' +' → logprob: -3.4395928382873535
    7. ' sum' → logprob: -3.5645928382873535
    8. 'x' → logprob: -3.9395928382873535
    9. ' +=' → logprob: -4.0645928382873535
    10. '+=' → logprob: -4.3145928382873535

Token 579: ' the' (ID: 290)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759960412979126
    2. 'sum' → logprob: -0.8259960412979126
    3. '(sum' → logprob: -9.950996398925781
    4. ' ' → logprob: -13.200996398925781
    5. '   ' → logprob: -13.200996398925781
    6. '	sum' → logprob: -14.075996398925781
    7. ' (' → logprob: -14.200996398925781
    8. ' next' → logprob: -14.325996398925781
    9. 'next' → logprob: -14.450996398925781
    10. '=sum' → logprob: -14.575996398925781

Token 580: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03808315470814705
    2. ' sum' → logprob: -3.288083076477051
    3. '(sum' → logprob: -10.28808307647705
    4. '+' → logprob: -12.78808307647705
    5. '	sum' → logprob: -14.28808307647705
    6. ' +' → logprob: -14.41308307647705
    7. 'next' → logprob: -14.41308307647705
    8. ' ' → logprob: -14.66308307647705
    9. '   ' → logprob: -14.78808307647705
    10. '
' → logprob: -14.91308307647705

Token 581: ' of' (ID: 328)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.10383336991071701
    2. '(' → logprob: -2.7288334369659424
    3. '(sum' → logprob: -3.6038334369659424
    4. '   ' → logprob: -6.728833198547363
    5. 'is' → logprob: -6.853833198547363
    6. 'of' → logprob: -7.228833198547363
    7. '(
' → logprob: -7.478833198547363
    8. '(list' → logprob: -7.478833198547363
    9. '```' → logprob: -7.853833198547363
    10. ' of' → logprob: -7.978833198547363

Token 582: ' the' (ID: 290)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.017353124916553497
    2. 'sum' → logprob: -4.767353057861328
    3. 'list' → logprob: -4.767353057861328
    4. ' is' → logprob: -9.517353057861328
    5. 'next' → logprob: -9.642353057861328
    6. ' list' → logprob: -10.142353057861328
    7. 'import' → logprob: -11.892353057861328
    8. 'from' → logprob: -12.892353057861328
    9. ' sum' → logprob: -13.142353057861328
    10. '```' → logprob: -13.142353057861328

Token 583: ' (' (ID: 350)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22848963737487793
    2. 'list' → logprob: -3.103489637374878
    3. ' list' → logprob: -3.103489637374878
    4. 'rest' → logprob: -3.228489637374878
    5. ' rest' → logprob: -3.478489637374878
    6. 'next' → logprob: -3.978489637374878
    7. ' is' → logprob: -4.103489875793457
    8. ' next' → logprob: -5.478489875793457
    9. 'sum' → logprob: -6.228489875793457
    10. 'g' → logprob: -6.478489875793457

Token 584: 'possibly' (ID: 143660)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011535104364156723
    2. 'list' → logprob: -4.511535167694092
    3. 'sum' → logprob: -8.261534690856934
    4. 'next' → logprob: -8.761534690856934
    5. ' is' → logprob: -10.011534690856934
    6. ' list' → logprob: -11.261534690856934
    7. '   ' → logprob: -11.761534690856934
    8. 'lambda' → logprob: -13.386534690856934
    9. 'import' → logprob: -13.511534690856934
    10. 'x' → logprob: -14.136534690856934

Token 585: ' incomplete' (ID: 60592)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.1471918821334839
    2. ' rest' → logprob: -2.0221920013427734
    3. 'is' → logprob: -6.272192001342773
    4. 'sum' → logprob: -6.772192001342773
    5. 'k' → logprob: -7.522192001342773
    6. '   ' → logprob: -8.022192001342773
    7. 'next' → logprob: -8.022192001342773
    8. ' is' → logprob: -9.522192001342773
    9. '```' → logprob: -10.272192001342773
    10. 'n' → logprob: -10.647192001342773

Token 586: ')' (ID: 8)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5609861612319946
    2. ' is' → logprob: -1.0609861612319946
    3. 'slice' → logprob: -4.060986042022705
    4. 'g' → logprob: -4.185986042022705
    5. ' slice' → logprob: -4.560986042022705
    6. ' rest' → logprob: -5.435986042022705
    7. ' sequence' → logprob: -5.560986042022705
    8. ' g' → logprob: -5.560986042022705
    9. ' part' → logprob: -5.685986042022705
    10. ')' → logprob: -5.935986042022705

Token 587: ' partial' (ID: 13664)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.010711980052292347
    2. 'sum' → logprob: -5.135712146759033
    3. 'list' → logprob: -5.760712146759033
    4. ' is' → logprob: -6.885712146759033
    5. 'rest' → logprob: -8.135711669921875
    6. ' list' → logprob: -8.885711669921875
    7. 'next' → logprob: -9.385711669921875
    8. ' sum' → logprob: -10.510711669921875
    9. 'k' → logprob: -11.135711669921875
    10. ' rest' → logprob: -12.010711669921875

Token 588: ' cycle' (ID: 15839)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -1.2598257064819336
    2. ' is' → logprob: -1.2598257064819336
    3. 'g' → logprob: -1.6348257064819336
    4. 'is' → logprob: -1.8848257064819336
    5. '_' → logprob: -3.6348257064819336
    6. 'sum' → logprob: -4.384825706481934
    7. 'slice' → logprob: -4.509825706481934
    8. 's' → logprob: -4.509825706481934
    9. ' sum' → logprob: -5.009825706481934
    10. ' slice' → logprob: -5.259825706481934

Token 589: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7175610065460205
    2. '       ' → logprob: -2.0925610065460205
    3. ' =' → logprob: -2.4675610065460205
    4. '(sum' → logprob: -2.8425610065460205
    5. '(' → logprob: -3.0925610065460205
    6. 's' → logprob: -3.5925610065460205
    7. 'sum' → logprob: -3.8425610065460205
    8. '=sum' → logprob: -3.9675610065460205
    9. '+' → logprob: -4.217560768127441
    10. ',' → logprob: -4.342560768127441

Token 590: 'the' (ID: 3086)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.43309131264686584
    2. 'sum' → logprob: -1.3080912828445435
    3. ' is' → logprob: -2.933091402053833
    4. ' sum' → logprob: -4.183091163635254
    5. 'next' → logprob: -5.058091163635254
    6. ')' → logprob: -6.183091163635254
    7. ' next' → logprob: -6.808091163635254
    8. 'list' → logprob: -7.308091163635254
    9. 'lambda' → logprob: -7.433091163635254
    10. 'rest' → logprob: -7.683091163635254

Token 591: ' first' (ID: 1577)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0206356048583984
    2. 'sum' → logprob: -1.2706356048583984
    3. 'lambda' → logprob: -1.2706356048583984
    4. 'k' → logprob: -3.1456356048583984
    5. ' next' → logprob: -4.145635604858398
    6. 'is' → logprob: -5.020635604858398
    7. 'from' → logprob: -6.020635604858398
    8. 'list' → logprob: -6.270635604858398
    9. 'import' → logprob: -6.395635604858398
    10. ' sum' → logprob: -6.645635604858398

Token 592: ' '' (ID: 461)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.3158259987831116
    2. ' rest' → logprob: -1.3158259391784668
    3. 'is' → logprob: -6.940825939178467
    4. '(rest' → logprob: -7.440825939178467
    5. 'next' → logprob: -8.315826416015625
    6. ' is' → logprob: -8.565826416015625
    7. 'sum' → logprob: -9.065826416015625
    8. '   ' → logprob: -9.815826416015625
    9. ')' → logprob: -9.815826416015625
    10. ' next' → logprob: -9.940826416015625

Token 593: 'rest' (ID: 7134)
  Prédit: 'rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0014447571011260152
    2. ' rest' → logprob: -6.6264448165893555
    3. 'is' → logprob: -9.501444816589355
    4. 'next' → logprob: -10.751444816589355
    5. '   ' → logprob: -11.751444816589355
    6. 'g' → logprob: -11.876444816589355
    7. '(rest' → logprob: -12.751444816589355
    8. 'list' → logprob: -14.251444816589355
    9. ' ' → logprob: -14.376444816589355
    10. '
' → logprob: -14.626444816589355

Token 594: ''' (ID: 6)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5338149666786194
    2. '+' → logprob: -1.0338149070739746
    3. 'g' → logprob: -4.533814907073975
    4. ')' → logprob: -4.658814907073975
    5. ' g' → logprob: -5.033814907073975
    6. 'is' → logprob: -5.283814907073975
    7. '   ' → logprob: -5.533814907073975
    8. 'rest' → logprob: -5.783814907073975
    9. ' rest' → logprob: -5.908814907073975
    10. '(g' → logprob: -6.033814907073975

Token 595: ' elements' (ID: 8632)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.5434832572937012
    2. '+' → logprob: -1.7934832572937012
    3. 'is' → logprob: -1.9184832572937012
    4. ' elements' → logprob: -2.668483257293701
    5. ' of' → logprob: -2.918483257293701
    6. ')' → logprob: -2.918483257293701
    7. 'g' → logprob: -3.168483257293701
    8. 'of' → logprob: -3.293483257293701
    9. ' +' → logprob: -3.543483257293701
    10. ' g' → logprob: -3.668483257293701

Token 596: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0017284154891968
    2. '[:' → logprob: -1.0017284154891968
    3. '(g' → logprob: -2.3767285346984863
    4. ' of' → logprob: -3.0017285346984863
    5. 'of' → logprob: -3.5017285346984863
    6. '   ' → logprob: -4.251728534698486
    7. 'g' → logprob: -4.251728534698486
    8. 'is' → logprob: -4.501728534698486
    9. '       ' → logprob: -4.751728534698486
    10. '(' → logprob: -5.501728534698486

Token 597: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0611321926116943
    2. '       ' → logprob: -1.6861321926116943
    3. 'sum' → logprob: -1.9361321926116943
    4. 'next' → logprob: -2.1861321926116943
    5. '   ' → logprob: -3.3111321926116943
    6. '=' → logprob: -3.8111321926116943
    7. ' =' → logprob: -4.061132431030273
    8. 'x' → logprob: -4.061132431030273
    9. ' next' → logprob: -4.311132431030273
    10. 'result' → logprob: -4.436132431030273

Token 598: ' last' (ID: 2174)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8023316264152527
    2. 'x' → logprob: -2.0523316860198975
    3. 's' → logprob: -2.6773316860198975
    4. 'ans' → logprob: -2.8023316860198975
    5. 'sum' → logprob: -2.8023316860198975
    6. 'res' → logprob: -3.5523316860198975
    7. 'last' (adapté à ' last') → logprob: -3.9273316860198975
    8. '=' → logprob: -4.052331447601318
    9. 'total' → logprob: -4.302331447601318
    10. ' =' → logprob: -4.427331447601318

Token 599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47057729959487915
    2. '=' → logprob: -1.8455772399902344
    3. '+' → logprob: -1.9705772399902344
    4. ' +' → logprob: -3.0955772399902344
    5. '_' → logprob: -3.7205772399902344
    6. ' +=' → logprob: -5.720577239990234
    7. ')' → logprob: -6.220577239990234
    8. '_value' → logprob: -7.220577239990234
    9. ',' → logprob: -7.595577239990234
    10. '<|end|>' → logprob: -8.220577239990234

Token 600: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00031949623371474445
    2. '(x' → logprob: -8.250319480895996
    3. ' x' → logprob: -10.625319480895996
    4. '   ' → logprob: -10.625319480895996
    5. 'rep' → logprob: -12.875319480895996
    6. ' ' → logprob: -13.500319480895996
    7. '(' → logprob: -13.625319480895996
    8. 'sum' → logprob: -14.000319480895996
    9. '  ' → logprob: -14.875319480895996
    10. 'lambda' → logprob: -15.000319480895996

Token 601: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.634884238243103
    2. '+' → logprob: -0.759884238243103
    3. '
' → logprob: -7.134884357452393
    4. '+
' → logprob: -7.759884357452393
    5. '<|end|>' → logprob: -8.009883880615234
    6. ' +
' → logprob: -8.134883880615234
    7. '       ' → logprob: -8.634883880615234
    8. '   ' → logprob: -9.509883880615234
    9. 'for' → logprob: -10.259883880615234
    10. ')' → logprob: -10.384883880615234

Token 602: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5817800760269165
    2. 'rep' → logprob: -0.8317800760269165
    3. '(rep' → logprob: -5.456779956817627
    4. '(sum' → logprob: -6.581779956817627
    5. ' sum' → logprob: -9.706780433654785
    6. ' rep' → logprob: -10.331780433654785
    7. 'rest' → logprob: -10.331780433654785
    8. '(' → logprob: -10.456780433654785
    9. '   ' → logprob: -12.206780433654785
    10. 'next' → logprob: -13.331780433654785

Token 603: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -2.5107177862082608e-05
    2. 'rep' → logprob: -11.375024795532227
    3. ' sum' → logprob: -12.000024795532227
    4. '(sum' → logprob: -12.125024795532227
    5. '   ' → logprob: -14.125024795532227
    6. '=sum' → logprob: -15.250024795532227
    7. ')' → logprob: -15.375024795532227
    8. '#' → logprob: -15.750024795532227
    9. 'k' → logprob: -16.000024795532227
    10. 'g' → logprob: -16.375024795532227

Token 604: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0012496389681473374
    2. 'g' → logprob: -7.00124979019165
    3. '(' → logprob: -8.126249313354492
    4. '(is' → logprob: -11.251249313354492
    5. '(next' → logprob: -12.001249313354492
    6. ')' → logprob: -12.126249313354492
    7. '(
' → logprob: -12.126249313354492
    8. '+' → logprob: -12.751249313354492
    9. 'is' → logprob: -12.751249313354492
    10. '1' → logprob: -13.626249313354492

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. 'g' → logprob: -10.500029563903809
    3. ')' → logprob: -13.625029563903809
    4. 's' → logprob: -16.000028610229492
    5. '_' → logprob: -16.250028610229492
    6. ' g' → logprob: -16.250028610229492
    7. '))' → logprob: -16.875028610229492
    8. ' ' → logprob: -16.875028610229492
    9. 'is' → logprob: -17.000028610229492
    10. '
' → logprob: -17.750028610229492

Token 606: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005741306114941835
    2. '))' → logprob: -5.755741119384766
    3. ')*' → logprob: -6.630741119384766
    4. ')+' → logprob: -6.755741119384766
    5. ' )' → logprob: -10.505741119384766
    6. '))*' → logprob: -10.880741119384766
    7. ')
' → logprob: -11.255741119384766
    8. '),' → logprob: -12.380741119384766
    9. ')),' → logprob: -13.005741119384766
    10. '*' → logprob: -13.130741119384766

Token 607: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5022337436676025
    2. ' *' → logprob: -1.0022337436676025
    3. ')' → logprob: -3.6272337436676025
    4. ')*' → logprob: -7.127233505249023
    5. '+' → logprob: -8.252233505249023
    6. ' +' → logprob: -9.877233505249023
    7. ' )' → logprob: -10.627233505249023
    8. '*)' → logprob: -11.377233505249023
    9. ' ' → logprob: -11.752233505249023
    10. '   ' → logprob: -13.127233505249023

Token 608: ' rep' (ID: 2449)
  Prédit: 'rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.0007100477814674377
    2. ' rep' → logprob: -7.2507100105285645
    3. '(rep' → logprob: -17.125709533691406
    4. '	rep' → logprob: -18.000709533691406
    5. ' ' → logprob: -19.500709533691406
    6. 'repr' → logprob: -19.500709533691406
    7. ' ' → logprob: -19.875709533691406
    8. 're' → logprob: -20.250709533691406
    9. 'ret' → logprob: -20.625709533691406
    10. ')' → logprob: -20.750709533691406

Token 609: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4490250051021576
    2. '+' → logprob: -1.44902503490448
    3. ')' → logprob: -2.0740249156951904
    4. ')+' → logprob: -6.9490251541137695
    5. ' )' → logprob: -8.69902515411377
    6. '        ' → logprob: -9.82402515411377
    7. ' +
' → logprob: -10.57402515411377
    8. '+)' → logprob: -10.94902515411377
    9. '    ' → logprob: -11.19902515411377
    10. '       ' → logprob: -11.57402515411377

Token 610: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2254481017589569
    2. '+' → logprob: -1.6004481315612793
    3. '    ' → logprob: -11.850447654724121
    4. '   ' → logprob: -11.975447654724121
    5. '       ' → logprob: -12.350447654724121
    6. '+
' → logprob: -12.600447654724121
    7. '        ' → logprob: -12.975447654724121
    8. ' ' → logprob: -13.350447654724121
    9. '      ' → logprob: -13.725447654724121
    10. '<|end|>' → logprob: -13.850447654724121

Token 611: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.014166101813316345
    2. ' sum' → logprob: -4.264165878295898
    3. '(sum' → logprob: -13.014165878295898
    4. '   ' → logprob: -15.264165878295898
    5. '	sum' → logprob: -15.889165878295898
    6. ' ' → logprob: -17.2641658782959
    7. '  ' → logprob: -18.6391658782959
    8. '=sum' → logprob: -18.7641658782959
    9. '    ' → logprob: -19.3891658782959
    10. ' (' → logprob: -19.5141658782959

Token 612: '(is' (ID: 16171)
  Prédit: '(is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.012784389778971672
    2. '(list' → logprob: -4.637784481048584
    3. 'is' → logprob: -5.887784481048584
    4. '(' → logprob: -8.387784004211426
    5. ' (' → logprob: -12.387784004211426
    6. '(next' → logprob: -12.387784004211426
    7. 'list' → logprob: -12.512784004211426
    8. '(tuple' → logprob: -13.012784004211426
    9. '(it' → logprob: -13.512784004211426
    10. '```' → logprob: -13.637784004211426

Token 613: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.014194770716130733
    2. 'slice' → logprob: -4.264194965362549
    3. 'g' → logprob: -11.38919448852539
    4. '(g' → logprob: -12.13919448852539
    5. 'liced' → logprob: -12.63919448852539
    6. '_slice' → logprob: -13.13919448852539
    7. 'lace' → logprob: -13.26419448852539
    8. 'is' → logprob: -13.38919448852539
    9. 'licing' → logprob: -13.51419448852539
    10. 'list' → logprob: -13.88919448852539

Token 614: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. 'g' → logprob: -14.750001907348633
    4. '(
' → logprob: -16.750001907348633
    5. '[g' → logprob: -17.375001907348633
    6. '(rest' → logprob: -17.500001907348633
    7. ' g' → logprob: -17.750001907348633
    8. ')' → logprob: -18.000001907348633
    9. '	g' → logprob: -18.750001907348633
    10. 'rest' → logprob: -18.750001907348633

Token 615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7943130731582642
    2. '(g' → logprob: -0.7943130731582642
    3. 'g' → logprob: -2.5443129539489746
    4. 'rest' → logprob: -4.044312953948975
    5. '(rest' → logprob: -9.669313430786133
    6. ' g' → logprob: -10.169313430786133
    7. '(' → logprob: -11.044313430786133
    8. '[g' → logprob: -11.169313430786133
    9. ')' → logprob: -11.294313430786133
    10. ' rest' → logprob: -12.544313430786133

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07488522678613663
    2. 'g' → logprob: -3.199885129928589
    3. ',g' → logprob: -3.824885129928589
    4. 'rest' → logprob: -5.074885368347168
    5. '(rest' → logprob: -5.824885368347168
    6. ' ,' → logprob: -8.699885368347168
    7. '(g' → logprob: -9.199885368347168
    8. ' rest' → logprob: -10.199885368347168
    9. ' g' → logprob: -10.574885368347168
    10. '(' → logprob: -11.824885368347168

Token 617: ' ' (ID: 220)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.014164329506456852
    2. ' rest' → logprob: -4.264164447784424
    3. '(rest' → logprob: -14.264163970947266
    4. '   ' → logprob: -15.889163970947266
    5. '0' → logprob: -16.264163970947266
    6. ' ' → logprob: -18.264163970947266
    7. '       ' → logprob: -18.389163970947266
    8. '.rest' → logprob: -18.639163970947266
    9. '           ' → logprob: -19.639163970947266
    10. '    ' → logprob: -19.639163970947266

Token 618: '0' (ID: 15)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.4974866644479334e-05
    2. ' rest' → logprob: -11.125015258789062
    3. '(rest' → logprob: -16.500015258789062
    4. '0' → logprob: -17.250015258789062
    5. '   ' → logprob: -20.375015258789062
    6. '+' → logprob: -21.750015258789062
    7. '.rest' → logprob: -22.000015258789062
    8. '       ' → logprob: -22.750015258789062
    9. '{' → logprob: -22.750015258789062
    10. ' ' → logprob: -22.750015258789062

Token 619: ',' (ID: 11)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.1432877779006958
    2. ' rest' → logprob: -2.0182876586914062
    3. ',' → logprob: -7.893287658691406
    4. '(rest' → logprob: -8.393287658691406
    5. ' ,' → logprob: -11.518287658691406
    6. '   ' → logprob: -13.768287658691406
    7. ' ' → logprob: -15.018287658691406
    8. '0' → logprob: -15.143287658691406
    9. '+' → logprob: -15.143287658691406
    10. '.rest' → logprob: -15.268287658691406

Token 620: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.014164102263748646
    2. ' rest' → logprob: -4.264163970947266
    3. '(rest' → logprob: -14.764163970947266
    4. '   ' → logprob: -16.014163970947266
    5. 'Rest' → logprob: -18.764163970947266
    6. ' ' → logprob: -18.764163970947266
    7. '.rest' → logprob: -18.764163970947266
    8. '       ' → logprob: -18.889163970947266
    9. ')' → logprob: -19.514163970947266
    10. '_rest' → logprob: -19.639163970947266

Token 621: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00046033994294703007
    2. ')' → logprob: -8.000460624694824
    3. ')))' → logprob: -9.250460624694824
    4. '))
' → logprob: -11.500460624694824
    5. ' ))' → logprob: -11.500460624694824
    6. '+' → logprob: -12.125460624694824
    7. '),' → logprob: -14.125460624694824
    8. ' ' → logprob: -15.000460624694824
    9. '   ' → logprob: -15.000460624694824
    10. ')),' → logprob: -15.375460624694824

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0514085479080677
    2. '<|end|>' → logprob: -3.676408529281616
    3. '
' → logprob: -3.926408529281616
    4. '        
' → logprob: -5.676408767700195
    5. '```' → logprob: -7.426408767700195
    6. 'print' → logprob: -8.301408767700195
    7. '#' → logprob: -9.176408767700195
    8. '<|end|>' → logprob: -9.176408767700195
    9. ',' → logprob: -9.801408767700195
    10. ')' → logprob: -9.801408767700195

Token 623: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6468206644058228
    2. 'print' → logprob: -0.7718206644058228
    3. 'count' → logprob: -5.021820545196533
    4. '   ' → logprob: -6.771820545196533
    5. 'zero' → logprob: -6.771820545196533
    6. 'answer' → logprob: -7.021820545196533
    7. '        
' → logprob: -7.521820545196533
    8. '#' (adapté à ' #') → logprob: -8.021821022033691
    9. 'result' → logprob: -8.146821022033691
    10. '
' → logprob: -8.271821022033691

Token 624: ' Now' (ID: 6549)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7231862545013428
    2. 'zero' → logprob: -0.9731862545013428
    3. 'cnt' → logprob: -3.3481862545013428
    4. 'count' → logprob: -3.5981862545013428
    5. 'zeros' → logprob: -3.9731862545013428
    6. 'ans' → logprob: -4.223186492919922
    7. 'offset' → logprob: -4.723186492919922
    8. 'res' → logprob: -5.598186492919922
    9. '       ' → logprob: -5.598186492919922
    10. 'answer' → logprob: -6.223186492919922

Token 625: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2476801872253418
    2. 'zero' → logprob: -2.497680187225342
    3. 'count' → logprob: -2.997680187225342
    4. 'print' → logprob: -3.497680187225342
    5. 'cnt' → logprob: -3.997680187225342
    6. 'zeros' → logprob: -4.622680187225342
    7. 'z' → logprob: -5.122680187225342
    8. 'offset' → logprob: -5.872680187225342
    9. 's' → logprob: -6.247680187225342
    10. '#' → logprob: -6.372680187225342

Token 626: ' count' (ID: 3605)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.8416917324066162
    2. 'count' → logprob: -1.5916917324066162
    3. 'cnt' → logprob: -1.7166917324066162
    4. 'print' → logprob: -3.091691732406616
    5. 'zeros' → logprob: -3.216691732406616
    6. 'ans' → logprob: -3.591691732406616
    7. 'offset' → logprob: -4.216691970825195
    8. 'res' → logprob: -4.841691970825195
    9. 'answer' → logprob: -5.216691970825195
    10. 'last' → logprob: -5.216691970825195

Token 627: ':
' (ID: 734)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.6240851879119873
    2. 'zeros' → logprob: -1.6240851879119873
    3. '=' → logprob: -2.2490851879119873
    4. ' =' → logprob: -3.1240851879119873
    5. 'count' → logprob: -3.6240851879119873
    6. 'cnt' → logprob: -3.6240851879119873
    7. 'offset' → logprob: -4.124085426330566
    8. '0' → logprob: -4.874085426330566
    9. ' zero' → logprob: -4.874085426330566
    10. '   ' → logprob: -5.124085426330566

Token 628: '       ' (ID: 309)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7768270969390869
    2. 'count' → logprob: -2.026827096939087
    3. 'cnt' → logprob: -2.151827096939087
    4. ' zero' → logprob: -2.776827096939087
    5. ' cnt' → logprob: -3.151827096939087
    6. ' count' → logprob: -3.151827096939087
    7. 'c' → logprob: -3.151827096939087
    8. 'z' → logprob: -3.651827096939087
    9. ' c' → logprob: -4.526826858520508
    10. 'zeros' → logprob: -4.651826858520508

Token 629: ' #' (ID: 1069)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7583365440368652
    2. 'cnt' → logprob: -1.1333365440368652
    3. 'count' → logprob: -2.2583365440368652
    4. 'c' → logprob: -3.7583365440368652
    5. 'zeros' → logprob: -3.7583365440368652
    6. 'ans' → logprob: -4.508336544036865
    7. 'offset' → logprob: -5.133336544036865
    8. 'z' → logprob: -5.508336544036865
    9. ' cnt' → logprob: -5.758336544036865
    10. ' zero' → logprob: -6.008336544036865

Token 630: ' eq' (ID: 18955)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.8367964029312134
    2. 'cnt' → logprob: -1.2117964029312134
    3. 'count' → logprob: -1.8367964029312134
    4. 'zeros' → logprob: -4.086796283721924
    5. 'print' → logprob: -4.086796283721924
    6. 'c' → logprob: -4.211796283721924
    7. 'ans' → logprob: -4.211796283721924
    8. 'offset' → logprob: -4.336796283721924
    9. 'z' → logprob: -5.836796283721924
    10. 'nz' → logprob: -6.086796283721924

Token 631: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35084888339042664
    2. '=' → logprob: -1.600848913192749
    3. '0' → logprob: -3.975848913192749
    4. '_count' → logprob: -4.10084867477417
    5. 'count' → logprob: -4.22584867477417
    6. 's' → logprob: -4.47584867477417
    7. 'zero' → logprob: -4.60084867477417
    8. '_zero' → logprob: -4.97584867477417
    9. '_' → logprob: -5.35084867477417
    10. 'eq' → logprob: -6.10084867477417

Token 632: ' the' (ID: 290)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.48587173223495483
    2. ' sum' → logprob: -0.9858717322349548
    3. '=sum' → logprob: -5.8608717918396
    4. '0' → logprob: -5.9858717918396
    5. 'next' → logprob: -6.4858717918396
    6. ' next' → logprob: -6.6108717918396
    7. 'eq' → logprob: -7.2358717918396
    8. '   ' → logprob: -7.3608717918396
    9. '=' → logprob: -7.4858717918396
    10. '(sum' → logprob: -7.7358717918396

Token 633: ' number' (ID: 2086)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20719440281391144
    2. 'next' → logprob: -1.832194447517395
    3. ' sum' → logprob: -4.3321943283081055
    4. '0' → logprob: -4.9571943283081055
    5. ' next' → logprob: -5.2071943283081055
    6. 'eq' → logprob: -6.8321943283081055
    7. 'x' → logprob: -9.082194328308105
    8. 'len' → logprob: -9.582194328308105
    9. ' ' → logprob: -10.332194328308105
    10. '=sum' → logprob: -10.457194328308105

Token 634: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20474590361118317
    2. 'eq' → logprob: -2.4547460079193115
    3. ' =' → logprob: -2.9547460079193115
    4. 'of' → logprob: -3.5797460079193115
    5. ' of' → logprob: -5.454745769500732
    6. '_eq' → logprob: -5.829745769500732
    7. '_of' → logprob: -5.954745769500732
    8. '_' → logprob: -6.329745769500732
    9. ' eq' → logprob: -6.454745769500732
    10. '==' → logprob: -6.829745769500732

Token 635: ' times' (ID: 4238)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2134544849395752
    2. 'filter' → logprob: -2.963454484939575
    3. 'sum' → logprob: -3.338454484939575
    4. 'elem' → logprob: -3.588454484939575
    5. 'x' → logprob: -3.838454484939575
    6. 'i' → logprob: -3.963454484939575
    7. 'zero' → logprob: -4.088454246520996
    8. 'v' → logprob: -5.588454246520996
    9. '0' → logprob: -5.963454246520996
    10. 'el' → logprob: -6.213454246520996

Token 636: ' when' (ID: 1261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8006651401519775
    2. 'zero' → logprob: -1.8006651401519775
    3. 'x' → logprob: -2.9256651401519775
    4. '=' → logprob: -2.9256651401519775
    5. 'sum' → logprob: -3.3006651401519775
    6. 'i' → logprob: -3.4256651401519775
    7. 'eq' → logprob: -3.9256651401519775
    8. 'val' → logprob: -4.050664901733398
    9. '1' → logprob: -4.175664901733398
    10. '(next' → logprob: -4.300664901733398

Token 637: ' an' (ID: 448)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.05591641366481781
    2. '(next' → logprob: -3.0559163093566895
    3. 'x' → logprob: -5.9309163093566895
    4. ' next' → logprob: -6.6809163093566895
    5. 'g' → logprob: -7.3059163093566895
    6. 'v' → logprob: -7.4309163093566895
    7. 'val' → logprob: -7.6809163093566895
    8. '(x' → logprob: -8.180916786193848
    9. '0' → logprob: -8.430916786193848
    10. '(g' → logprob: -8.430916786193848

Token 638: ' element' (ID: 3577)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.9664765000343323
    2. 'zero' → logprob: -1.4664764404296875
    3. 'elem' → logprob: -2.0914764404296875
    4. 'next' → logprob: -2.0914764404296875
    5. 'element' → logprob: -3.3414764404296875
    6. '0' → logprob: -3.4664764404296875
    7. 'x' → logprob: -3.9664764404296875
    8. 'e' → logprob: -4.2164764404296875
    9. 'i' → logprob: -5.2164764404296875
    10. '(next' → logprob: -5.5914764404296875

Token 639: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6483762264251709
    2. '==' → logprob: -1.898376226425171
    3. 'g' → logprob: -2.523376226425171
    4. '%' → logprob: -3.023376226425171
    5. ' g' → logprob: -3.648376226425171
    6. '(g' → logprob: -3.898376226425171
    7. ' =' → logprob: -4.02337646484375
    8. ' ==' → logprob: -4.02337646484375
    9. ' in' → logprob: -4.14837646484375
    10. ' of' → logprob: -4.39837646484375

Token 640: ' g' (ID: 329)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1497567892074585
    2. 'g' → logprob: -2.024756908416748
    3. 'list' → logprob: -5.274756908416748
    4. 'filter' → logprob: -6.399756908416748
    5. ' is' → logprob: -9.64975643157959
    6. '(is' → logprob: -10.14975643157959
    7. 'it' → logprob: -10.14975643157959
    8. 'enumer' → logprob: -10.52475643157959
    9. 'take' → logprob: -11.02475643157959
    10. '(g' → logprob: -11.39975643157959

Token 641: ' (' (ID: 350)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02564263716340065
    2. 'g' → logprob: -4.4006428718566895
    3. '%' → logprob: -5.5256428718566895
    4. '_' → logprob: -5.6506428718566895
    5. '==' → logprob: -6.0256428718566895
    6. '=' → logprob: -7.2756428718566895
    7. 's' → logprob: -8.275642395019531
    8. ')' → logprob: -8.400642395019531
    9. '```' → logprob: -8.525642395019531
    10. 'is' → logprob: -8.650642395019531

Token 642: 'the' (ID: 3086)
  Prédit: 'filter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filter' → logprob: -1.1691590547561646
    2. 'g' → logprob: -1.2941590547561646
    3. 'is' → logprob: -1.4191590547561646
    4. 'x' → logprob: -2.669158935546875
    5. 'sum' → logprob: -3.169158935546875
    6. 'list' → logprob: -4.044158935546875
    7. 'enumer' → logprob: -4.919158935546875
    8. 'it' → logprob: -5.044158935546875
    9. 'i' → logprob: -5.294158935546875
    10. 'elem' → logprob: -5.419158935546875

Token 643: ' sequence' (ID: 16281)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4137573540210724
    2. 'sum' → logprob: -2.41375732421875
    3. 'is' → logprob: -2.66375732421875
    4. 'list' → logprob: -2.91375732421875
    5. 'for' → logprob: -3.28875732421875
    6. 'c' → logprob: -4.78875732421875
    7. 'elem' → logprob: -4.78875732421875
    8. 'zip' → logprob: -4.91375732421875
    9. 'offset' → logprob: -5.16375732421875
    10. 'x' → logprob: -5.16375732421875

Token 644: ')' (ID: 8)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9249972105026245
    2. ')' → logprob: -1.2999972105026245
    3. 'g' → logprob: -1.2999972105026245
    4. ' that' → logprob: -4.549997329711914
    5. 'that' → logprob: -5.174997329711914
    6. ' g' → logprob: -5.299997329711914
    7. ')%' → logprob: -5.299997329711914
    8. '==' → logprob: -5.549997329711914
    9. ' of' → logprob: -5.674997329711914
    10. ')==' → logprob: -5.799997329711914

Token 645: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2929414212703705
    2. '%' → logprob: -1.7929414510726929
    3. ' ==' → logprob: -3.2929413318634033
    4. ')' → logprob: -4.542941570281982
    5. ' is' → logprob: -4.667941570281982
    6. ' %' → logprob: -5.167941570281982
    7. '<|end|>' → logprob: -5.667941570281982
    8. '=' → logprob: -5.792941570281982
    9. 'g' → logprob: -6.042941570281982
    10. ')==' → logprob: -6.292941570281982

Token 646: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036531719379127026
    2. 'next' → logprob: -5.628653049468994
    3. ' next' → logprob: -10.878653526306152
    4. 'zero' → logprob: -11.003653526306152
    5. ' ' → logprob: -11.253653526306152
    6. '
' → logprob: -14.003653526306152
    7. 'equal' → logprob: -14.003653526306152
    8. '==' → logprob: -14.628653526306152
    9. '(next' → logprob: -14.628653526306152
    10. 'x' → logprob: -14.628653526306152

Token 647: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002652348019182682
    2. 'next' → logprob: -6.002652168273926
    3. 'g' → logprob: -9.627652168273926
    4. 'zero' → logprob: -9.627652168273926
    5. 'lambda' → logprob: -10.877652168273926
    6. 'x' → logprob: -12.252652168273926
    7. '
' → logprob: -12.377652168273926
    8. ' ' → logprob: -12.752652168273926
    9. 'equal' → logprob: -12.752652168273926
    10. '```' → logprob: -13.002652168273926

Token 648: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19368445873260498
    2. ' =' → logprob: -2.1936845779418945
    3. ',' → logprob: -3.5686845779418945
    4. '=' → logprob: -4.0686845779418945
    5. '   ' → logprob: -5.6936845779418945
    6. ' for' → logprob: -6.4436845779418945
    7. '(' → logprob: -6.4436845779418945
    8. 'for' → logprob: -6.5686845779418945
    9. '      ' → logprob: -6.5686845779418945
    10. '           ' → logprob: -7.0686845779418945

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1424204409122467
    2. '#' → logprob: -3.642420530319214
    3. '=' → logprob: -4.017420291900635
    4. ' ' → logprob: -4.142420291900635
    5. ')' → logprob: -4.142420291900635
    6. '0' → logprob: -5.142420291900635
    7. 'eq' → logprob: -5.267420291900635
    8. '        ' → logprob: -5.642420291900635
    9. ' =' → logprob: -5.767420291900635
    10. '   ' → logprob: -5.767420291900635

Token 650: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31956058740615845
    2. ' =' → logprob: -2.1945605278015137
    3. '+=' → logprob: -3.1945605278015137
    4. ')' → logprob: -3.8195605278015137
    5. ' ' → logprob: -3.9445605278015137
    6. '       ' → logprob: -4.194560527801514
    7. '#' (adapté à ' #') → logprob: -4.569560527801514
    8. 'for' → logprob: -4.819560527801514
    9. '0' → logprob: -4.819560527801514
    10. '1' → logprob: -5.194560527801514

Token 651: ' for' (ID: 395)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.28590303659439087
    2. ' eq' → logprob: -1.785902976989746
    3. '       ' → logprob: -3.035902976989746
    4. '	' → logprob: -4.410902976989746
    5. '\t' → logprob: -5.035902976989746
    6. '0' → logprob: -5.160902976989746
    7. ' ' → logprob: -7.035902976989746
    8. ' =' → logprob: -7.160902976989746
    9. ' \' → logprob: -7.535902976989746
    10. '   ' → logprob: -7.535902976989746

Token 652: ' both' (ID: 2973)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.7196823358535767
    2. '_' → logprob: -1.5946823358535767
    3. 'offset' → logprob: -2.969682216644287
    4. 'x' → logprob: -2.969682216644287
    5. 'i' → logprob: -3.094682216644287
    6. ' eq' → logprob: -3.344682216644287
    7. '_,' → logprob: -3.344682216644287
    8. 'val' → logprob: -4.344682216644287
    9. 'zero' → logprob: -4.719682216644287
    10. ' val' → logprob: -4.969682216644287

Token 653: ' fully' (ID: 9637)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.21418268978595734
    2. ' g' → logprob: -2.7141826152801514
    3. 'x' → logprob: -2.9641826152801514
    4. 'elem' → logprob: -4.3391828536987305
    5. 'el' → logprob: -4.4641828536987305
    6. 'eq' → logprob: -4.8391828536987305
    7. '_' → logprob: -4.9641828536987305
    8. 'i' → logprob: -5.4641828536987305
    9. ' x' → logprob: -5.4641828536987305
    10. 'offset' → logprob: -5.4641828536987305

Token 654: ' repeated' (ID: 24161)
  Prédit: 'period'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'period' → logprob: -0.8648509383201599
    2. 'k' → logprob: -2.2398509979248047
    3. 'range' → logprob: -2.2398509979248047
    4. 'zero' → logprob: -2.4898509979248047
    5. 'cycled' → logprob: -2.6148509979248047
    6. 'rest' → logprob: -3.1148509979248047
    7. 'g' → logprob: -3.1148509979248047
    8. 'cycle' → logprob: -3.8648509979248047
    9. ')' → logprob: -4.239850997924805
    10. 'sum' → logprob: -4.364850997924805

Token 655: ' sections' (ID: 21436)
  Prédit: ' cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -1.1755706071853638
    2. 'k' → logprob: -1.4255706071853638
    3. 'cycles' → logprob: -1.6755706071853638
    4. 'g' → logprob: -2.675570487976074
    5. ' k' → logprob: -3.175570487976074
    6. 'period' → logprob: -3.175570487976074
    7. ' sequences' → logprob: -4.175570487976074
    8. ' g' → logprob: -4.425570487976074
    9. ' periods' → logprob: -4.425570487976074
    10. ' rest' → logprob: -4.425570487976074

Token 656: ' and' (ID: 326)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7291545271873474
    2. ' and' → logprob: -2.104154586791992
    3. 'eq' → logprob: -2.104154586791992
    4. ' =' → logprob: -2.354154586791992
    5. ',' → logprob: -2.979154586791992
    6. '       ' → logprob: -4.104154586791992
    7. 'and' → logprob: -4.229154586791992
    8. ' eq' → logprob: -4.229154586791992
    9. '(eq' → logprob: -4.479154586791992
    10. '0' → logprob: -4.854154586791992

Token 657: ' the' (ID: 290)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.12877920269966125
    2. ' rest' → logprob: -2.878779172897339
    3. 'is' → logprob: -3.253779172897339
    4. 'partial' → logprob: -4.878779411315918
    5. 'sum' → logprob: -5.128779411315918
    6. 'g' → logprob: -5.128779411315918
    7. ' g' → logprob: -6.128779411315918
    8. ' is' → logprob: -7.003779411315918
    9. ' partial' → logprob: -7.003779411315918
    10. '0' → logprob: -7.253779411315918

Token 658: ' possible' (ID: 4149)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.03172101825475693
    2. ' rest' → logprob: -4.281721115112305
    3. 'partial' → logprob: -4.281721115112305
    4. 'is' → logprob: -7.156721115112305
    5. '```' → logprob: -7.531721115112305
    6. 'remaining' → logprob: -7.906721115112305
    7. 'sum' → logprob: -8.281721115112305
    8. ' partial' → logprob: -8.281721115112305
    9. ' remainder' → logprob: -8.406721115112305
    10. '#' → logprob: -8.906721115112305

Token 659: ' leftovers' (ID: 128820)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.13114117085933685
    2. 'rest' → logprob: -3.131141185760498
    3. 'remaining' → logprob: -3.506141185760498
    4. 'left' → logprob: -4.131141185760498
    5. 'is' → logprob: -4.756141185760498
    6. ' partial' → logprob: -4.881141185760498
    7. 'first' → logprob: -5.131141185760498
    8. '```' → logprob: -5.881141185760498
    9. 'part' → logprob: -6.256141185760498
    10. 're' → logprob: -6.881141185760498

Token 660: '.
' (ID: 558)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.8758434057235718
    2. '
' → logprob: -1.1258434057235718
    3. '       ' → logprob: -1.5008434057235718
    4. ' eq' → logprob: -4.875843524932861
    5. '	' → logprob: -5.000843524932861
    6. '0' → logprob: -5.375843524932861
    7. 'count' → logprob: -5.625843524932861
    8. '
' → logprob: -5.875843524932861
    9. 'zero' → logprob: -6.750843524932861
    10. '   ' → logprob: -6.875843524932861

Token 661: '       ' (ID: 309)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.3529476225376129
    2. ' eq' → logprob: -1.2279475927352905
    3. '       ' → logprob: -6.47794771194458
    4. '0' → logprob: -6.72794771194458
    5. ' for' → logprob: -8.602947235107422
    6. '
' → logprob: -8.977947235107422
    7. '   ' → logprob: -9.102947235107422
    8. '[' → logprob: -9.227947235107422
    9. '(eq' → logprob: -9.227947235107422
    10. '`' → logprob: -9.352947235107422

Token 662: ' #' (ID: 1069)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0011496252845972776
    2. ' eq' → logprob: -6.876149654388428
    3. 'zero' → logprob: -10.25114917755127
    4. '       ' → logprob: -10.87614917755127
    5. 'from' → logprob: -11.50114917755127
    6. '0' → logprob: -11.62614917755127
    7. '   ' → logprob: -12.00114917755127
    8. 'count' → logprob: -12.25114917755127
    9. 'sum' → logprob: -12.25114917755127
    10. 'next' → logprob: -12.37614917755127

Token 663: ' For' (ID: 2214)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00047833603457547724
    2. ' eq' → logprob: -7.875478267669678
    3. '       ' → logprob: -9.500478744506836
    4. '```' → logprob: -12.125478744506836
    5. 'from' → logprob: -12.375478744506836
    6. 'zero' → logprob: -12.625478744506836
    7. 'count' → logprob: -12.750478744506836
    8. '   ' → logprob: -13.625478744506836
    9. 'equ' → logprob: -14.000478744506836
    10. 'cnt' → logprob: -14.250478744506836

Token 664: ' each' (ID: 2454)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.9341270923614502
    2. 'offset' → logprob: -1.5591270923614502
    3. 'i' → logprob: -2.30912709236145
    4. '_' → logprob: -2.30912709236145
    5. 'zero' → logprob: -3.05912709236145
    6. 'c' → logprob: -3.93412709236145
    7. 'val' → logprob: -4.184126853942871
    8. 'x' → logprob: -4.184126853942871
    9. 'v' → logprob: -4.309126853942871
    10. 'count' → logprob: -4.684126853942871

Token 665: ' index' (ID: 3472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4687175750732422
    2. 'v' → logprob: -1.5937175750732422
    3. 'y' → logprob: -1.8437175750732422
    4. 'i' → logprob: -1.9687175750732422
    5. 'offset' → logprob: -2.343717575073242
    6. 'val' → logprob: -3.343717575073242
    7. 'e' → logprob: -3.843717575073242
    8. 'x' → logprob: -4.218717575073242
    9. 'a' → logprob: -4.593717575073242
    10. '_,' → logprob: -4.593717575073242

Token 666: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6603371500968933
    2. ' in' → logprob: -1.285337209701538
    3. ',' → logprob: -2.660337209701538
    4. 'i' → logprob: -2.660337209701538
    5. '_' → logprob: -3.785337209701538
    6. ' i' → logprob: -3.785337209701538
    7. '_,' → logprob: -4.535336971282959
    8. '0' → logprob: -5.910336971282959
    9. ' ,' → logprob: -6.035336971282959
    10. ')' → logprob: -7.535336971282959

Token 667: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0022998936474323273
    2. 'g' → logprob: -6.252299785614014
    3. ' range' → logprob: -8.877300262451172
    4. 'is' → logprob: -9.002300262451172
    5. 'enumer' → logprob: -9.502300262451172
    6. '(range' → logprob: -11.127300262451172
    7. 'zip' → logprob: -11.877300262451172
    8. 'list' → logprob: -12.752300262451172
    9. '(' → logprob: -12.752300262451172
    10. '[' → logprob: -13.502300262451172

Token 668: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003835352137684822
    2. 'g' → logprob: -5.753835201263428
    3. 'is' → logprob: -7.753835201263428
    4. ' range' → logprob: -9.378835678100586
    5. 'zip' → logprob: -10.003835678100586
    6. 'list' → logprob: -10.503835678100586
    7. 'enumer' → logprob: -10.628835678100586
    8. '(range' → logprob: -10.878835678100586
    9. '(' → logprob: -12.128835678100586
    10. 'rest' → logprob: -12.253835678100586

Token 669: '..' (ID: 485)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6605015993118286
    2. ',' → logprob: -1.0355015993118286
    3. '..' → logprob: -3.535501480102539
    4. ' ' → logprob: -3.910501480102539
    5. '...' → logprob: -4.160501480102539
    6. ',k' → logprob: -4.660501480102539
    7. ' k' → logprob: -4.785501480102539
    8. '<=' → logprob: -4.910501480102539
    9. 'rest' → logprob: -5.035501480102539
    10. '   ' → logprob: -5.035501480102539

Token 670: '(' (ID: 7)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004592942073941231
    2. ' k' → logprob: -5.7545928955078125
    3. 'rest' → logprob: -7.2545928955078125
    4. 'range' → logprob: -7.5045928955078125
    5. '   ' → logprob: -10.379592895507812
    6. ' rest' → logprob: -10.504592895507812
    7. ' range' → logprob: -10.879592895507812
    8. '(k' → logprob: -11.004592895507812
    9. '```' → logprob: -11.129592895507812
    10. ' ' → logprob: -11.629592895507812

Token 671: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011111628264188766
    2. 'rest' → logprob: -6.876111030578613
    3. ' k' → logprob: -10.251111030578613
    4. '   ' → logprob: -10.751111030578613
    5. 'len' → logprob: -12.126111030578613
    6. '(k' → logprob: -12.501111030578613
    7. '       ' → logprob: -12.876111030578613
    8. ' rest' → logprob: -13.501111030578613
    9. 'n' → logprob: -13.876111030578613
    10. '```' → logprob: -14.126111030578613

Token 672: '-' (ID: 12)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7684029936790466
    2. '+' → logprob: -1.2684030532836914
    3. ',' → logprob: -2.2684030532836914
    4. '   ' → logprob: -3.1434030532836914
    5. ')' → logprob: -3.7684030532836914
    6. '+k' → logprob: -4.018403053283691
    7. ' k' → logprob: -4.643403053283691
    8. ',k' → logprob: -4.768403053283691
    9. ' +' → logprob: -4.893403053283691
    10. '```' → logprob: -5.018403053283691

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16202355921268463
    2. 'k' → logprob: -2.0370235443115234
    3. ')' → logprob: -4.287023544311523
    4. '```' → logprob: -5.912023544311523
    5. '-' → logprob: -6.412023544311523
    6. '   ' → logprob: -8.037023544311523
    7. ' ' → logprob: -8.162023544311523
    8. ' k' → logprob: -8.662023544311523
    9. '``' → logprob: -9.662023544311523
    10. '       ' → logprob: -10.287023544311523

Token 674: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2691659927368164
    2. '):' → logprob: -1.6441659927368164
    3. '+' → logprob: -3.8941659927368164
    4. '       ' → logprob: -5.019165992736816
    5. ')' → logprob: -5.144165992736816
    6. '   ' → logprob: -5.644165992736816
    7. '),' → logprob: -5.769165992736816
    8. '):

' → logprob: -7.394165992736816
    9. ')+' → logprob: -7.519165992736816
    10. ',' → logprob: -7.769165992736816

Token 675: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44618070125579834
    2. ' eq' → logprob: -1.9461807012557983
    3. 'for' → logprob: -2.446180820465088
    4. 'eq' → logprob: -3.071180820465088
    5. ' next' → logprob: -4.071180820465088
    6. ' if' → logprob: -4.196180820465088
    7. ' g' → logprob: -4.696180820465088
    8. '       ' → logprob: -5.196180820465088
    9. '
' → logprob: -5.571180820465088
    10. 'next' → logprob: -5.696180820465088

Token 676: ' #' (ID: 1069)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.050439685583114624
    2. ' eq' → logprob: -3.0504395961761475
    3. '       ' → logprob: -7.175439834594727
    4. 'sum' → logprob: -7.925439834594727
    5. 'for' → logprob: -9.175439834594727
    6. '(eq' → logprob: -9.300439834594727
    7. '0' → logprob: -9.675439834594727
    8. ' sum' → logprob: -9.800439834594727
    9. ' for' → logprob: -9.800439834594727
    10. '#' (adapté à ' #') → logprob: -10.175439834594727

Token 677: '  ' (ID: 256)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.23752877116203308
    2. ' eq' → logprob: -1.6125288009643555
    3. ' for' → logprob: -5.2375288009643555
    4. 'for' → logprob: -5.7375288009643555
    5. '       ' → logprob: -6.2375288009643555
    6. '```' → logprob: -8.362528800964355
    7. '   ' → logprob: -8.487528800964355
    8. '0' → logprob: -8.987528800964355
    9. '
' → logprob: -9.237528800964355
    10. 'i' → logprob: -9.487528800964355

Token 678: ' -' (ID: 533)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0990363284945488
    2. 'for' → logprob: -3.84903621673584
    3. ' eq' → logprob: -3.84903621673584
    4. 'if' → logprob: -4.22403621673584
    5. 'i' → logprob: -4.84903621673584
    6. '       ' → logprob: -5.09903621673584
    7. 'idx' → logprob: -5.34903621673584
    8. ' for' → logprob: -5.84903621673584
    9. 'g' → logprob: -6.09903621673584
    10. '_' → logprob: -6.09903621673584

Token 679: ' For' (ID: 2214)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.09980282932519913
    2. 'i' → logprob: -3.7248027324676514
    3. 'idx' → logprob: -3.8498027324676514
    4. 'if' → logprob: -4.4748029708862305
    5. ' eq' → logprob: -4.8498029708862305
    6. '_' → logprob: -5.5998029708862305
    7. 'x' → logprob: -5.8498029708862305
    8. '       ' → logprob: -5.9748029708862305
    9. 'for' → logprob: -6.0998029708862305
    10. 'offset' → logprob: -6.4748029708862305

Token 680: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10825969278812408
    2. '_' → logprob: -2.483259677886963
    3. ' i' → logprob: -4.358259677886963
    4. 'idx' → logprob: -5.983259677886963
    5. '_i' → logprob: -7.233259677886963
    6. ' _' → logprob: -7.483259677886963
    7. 'x' → logprob: -7.858259677886963
    8. '_=' → logprob: -8.108260154724121
    9. 'offset' → logprob: -8.233260154724121
    10. '0' → logprob: -8.358260154724121

Token 681: ' complete' (ID: 5533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07993858307600021
    2. '_' → logprob: -3.0799386501312256
    3. ' i' → logprob: -4.0799384117126465
    4. 'idx' → logprob: -5.0799384117126465
    5. '_i' → logprob: -6.8299384117126465
    6. ' _' → logprob: -7.0799384117126465
    7. '_=' → logprob: -7.2049384117126465
    8. '0' → logprob: -7.3299384117126465
    9. ' idx' → logprob: -7.4549384117126465
    10. 'x' → logprob: -7.4549384117126465

Token 682: ' cycle' (ID: 15839)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7700271606445312
    2. ' range' → logprob: -1.7700271606445312
    3. 'range' → logprob: -1.8950271606445312
    4. ' for' → logprob: -2.0200271606445312
    5. 'for' → logprob: -2.2700271606445312
    6. 'k' → logprob: -2.2700271606445312
    7. ' i' → logprob: -3.7700271606445312
    8. 'g' → logprob: -3.8950271606445312
    9. '_' → logprob: -4.020027160644531
    10. ')' → logprob: -4.395027160644531

Token 683: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4091542959213257
    2. ' for' → logprob: -1.6591542959213257
    3. ',' → logprob: -1.9091542959213257
    4. 'for' → logprob: -2.1591544151306152
    5. '#' → logprob: -2.5341544151306152
    6. '   ' → logprob: -3.2841544151306152
    7. ' in' → logprob: -3.6591544151306152
    8. ' if' → logprob: -4.034154415130615
    9. 'i' → logprob: -4.284154415130615
    10. '=' → logprob: -4.534154415130615

Token 684: ' that' (ID: 484)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0219135545194149
    2. ' eq' → logprob: -4.271913528442383
    3. 'if' → logprob: -5.521913528442383
    4. '       ' → logprob: -6.396913528442383
    5. ' if' → logprob: -7.146913528442383
    6. '#' → logprob: -7.271913528442383
    7. '           ' → logprob: -8.521913528442383
    8. '   ' → logprob: -9.021913528442383
    9. 'for' → logprob: -10.021913528442383
    10. '(eq' → logprob: -10.021913528442383

Token 685: ' position' (ID: 4010)
  Prédit: ' eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eq' → logprob: -0.6585589051246643
    2. 'eq' → logprob: -1.4085588455200195
    3. ' for' → logprob: -2.6585588455200195
    4. ' is' → logprob: -3.9085588455200195
    5. '=' → logprob: -4.1585588455200195
    6. ' =' → logprob: -4.5335588455200195
    7. 'for' → logprob: -4.5335588455200195
    8. 'idx' → logprob: -4.7835588455200195
    9. ' equals' → logprob: -4.7835588455200195
    10. 'i' → logprob: -4.9085588455200195

Token 686: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5392972826957703
    2. ' is' → logprob: -2.164297342300415
    3. 'in' → logprob: -3.164297342300415
    4. ')' → logprob: -3.289297342300415
    5. 's' → logprob: -3.789297342300415
    6. 'is' → logprob: -3.789297342300415
    7. ',' → logprob: -3.789297342300415
    8. ' was' → logprob: -3.914297342300415
    9. '=' → logprob: -4.539297103881836
    10. ' if' → logprob: -4.539297103881836

Token 687: ' included' (ID: 7360)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06885752081871033
    2. 'zero' → logprob: -3.818857431411743
    3. ' zero' → logprob: -4.443857669830322
    4. ' ' → logprob: -4.693857669830322
    5. ' g' → logprob: -5.443857669830322
    6. 'g' → logprob: -5.443857669830322
    7. '       ' → logprob: -6.318857669830322
    8. 'next' → logprob: -6.818857669830322
    9. 'equal' → logprob: -6.818857669830322
    10. 'sum' → logprob: -6.943857669830322

Token 688: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1244040727615356
    2. '       ' → logprob: -1.2494040727615356
    3. ' if' → logprob: -2.249403953552246
    4. ' for' → logprob: -2.624403953552246
    5. 'for' → logprob: -3.374403953552246
    6. '+' → logprob: -3.749403953552246
    7. ',' → logprob: -3.874403953552246
    8. '   ' → logprob: -3.999403953552246
    9. ' +' → logprob: -4.374403953552246
    10. 'in' → logprob: -4.499403953552246

Token 689: 'rep' (ID: 17407)
  Prédit: 'rep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rep' → logprob: -0.003350009210407734
    2. ' rep' → logprob: -5.753349781036377
    3. '(rep' → logprob: -9.753350257873535
    4. '
' → logprob: -10.628350257873535
    5. '   ' → logprob: -10.753350257873535
    6. 'k' → logprob: -10.753350257873535
    7. 'rest' → logprob: -10.878350257873535
    8. '```' → logprob: -11.753350257873535
    9. '       ' → logprob: -12.628350257873535
    10. ' ' → logprob: -13.003350257873535

Token 690: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8489610552787781
    2. ''' → logprob: -1.3489611148834229
    3. ' +' → logprob: -1.5989611148834229
    4. ' *' → logprob: -3.223961114883423
    5. ')' → logprob: -3.848961114883423
    6. 'times' → logprob: -4.598960876464844
    7. ' times' → logprob: -4.973960876464844
    8. '*' → logprob: -5.223960876464844
    9. ')'' → logprob: -5.223960876464844
    10. '   ' → logprob: -6.098960876464844

Token 691: ' times' (ID: 4238)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9517201781272888
    2. ' times' → logprob: -1.9517202377319336
    3. ')' → logprob: -2.2017202377319336
    4. 'times' → logprob: -2.4517202377319336
    5. ' +' → logprob: -3.2017202377319336
    6. ' and' → logprob: -3.5767202377319336
    7. '<|end|>' → logprob: -3.8267202377319336
    8. '#' → logprob: -3.8267202377319336
    9. '```' → logprob: -3.8267202377319336
    10. ',' → logprob: -4.076720237731934

Token 692: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7674325704574585
    2. '
' → logprob: -1.0174325704574585
    3. 'eq' → logprob: -2.392432689666748
    4. '#' → logprob: -3.892432689666748
    5. ' and' → logprob: -4.392432689666748
    6. ' eq' → logprob: -4.642432689666748
    7. '   ' → logprob: -5.267432689666748
    8. ',' → logprob: -5.642432689666748
    9. ' for' → logprob: -5.892432689666748
    10. 'for' → logprob: -6.142432689666748

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12090276181697845
    2. ' for' → logprob: -3.4959027767181396
    3. 'for' → logprob: -3.6209027767181396
    4. '   ' → logprob: -4.3709025382995605
    5. '#' → logprob: -4.9959025382995605
    6. '<|end|>' → logprob: -5.3709025382995605
    7. '```' → logprob: -5.6209025382995605
    8. ' ' → logprob: -5.6209025382995605
    9. 'count' → logprob: -5.7459025382995605
    10. 'eq' → logprob: -6.1209025382995605

Token 694: ' #' (ID: 1069)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.17137184739112854
    2. '       ' → logprob: -2.2963719367980957
    3. ' eq' → logprob: -3.7963719367980957
    4. '#' (adapté à ' #') → logprob: -3.9213719367980957
    5. '   ' → logprob: -5.296371936798096
    6. '
' → logprob: -6.046371936798096
    7. 'count' → logprob: -6.421371936798096
    8. '```' → logprob: -6.921371936798096
    9. 'for' → logprob: -7.546371936798096
    10. ' for' → logprob: -7.671371936798096

Token 695: '  ' (ID: 256)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.19683222472667694
    2. '       ' → logprob: -2.3218321800231934
    3. ' eq' → logprob: -3.1968321800231934
    4. 'count' → logprob: -3.9468321800231934
    5. '#' → logprob: -5.696832180023193
    6. '   ' → logprob: -6.321832180023193
    7. 'from' → logprob: -6.446832180023193
    8. 'for' → logprob: -6.571832180023193
    9. '
' → logprob: -6.821832180023193
    10. '```' → logprob: -6.946832180023193

Token 696: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7036231160163879
    2. 'eq' → logprob: -1.0786230564117432
    3. '   ' → logprob: -3.203623056411743
    4. 'count' → logprob: -3.453623056411743
    5. '       ' → logprob: -3.453623056411743
    6. ' for' → logprob: -4.578623294830322
    7. '#' → logprob: -5.078623294830322
    8. ' eq' → logprob: -5.328623294830322
    9. '```' → logprob: -5.453623294830322
    10. 'sum' → logprob: -5.703623294830322

Token 697: ' If' (ID: 1843)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.06992875784635544
    2. 'for' → logprob: -3.3199286460876465
    3. '#' → logprob: -4.1949286460876465
    4. ' eq' → logprob: -5.4449286460876465
    5. '       ' → logprob: -5.6949286460876465
    6. '  ' → logprob: -6.3199286460876465
    7. ' for' → logprob: -6.6949286460876465
    8. '   ' → logprob: -7.0699286460876465
    9. 'if' → logprob: -7.3199286460876465
    10. ' ' → logprob: -7.4449286460876465

Token 698: ' index' (ID: 3472)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.04754576086997986
    2. ' rest' → logprob: -3.1725456714630127
    3. '(rest' → logprob: -5.672545909881592
    4. '   ' → logprob: -8.172545433044434
    5. 'is' → logprob: -8.422545433044434
    6. 'eq' → logprob: -8.672545433044434
    7. ' (' → logprob: -9.672545433044434
    8. '(' → logprob: -10.047545433044434
    9. '(g' → logprob: -10.047545433044434
    10. '(eq' → logprob: -10.047545433044434

Token 699: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08492675423622131
    2. '<' → logprob: -3.0849268436431885
    3. ' <=' → logprob: -3.5849268436431885
    4. ' ==' → logprob: -6.334926605224609
    5. '<=' → logprob: -6.584926605224609
    6. ' >=' → logprob: -6.709926605224609
    7. 's' → logprob: -7.584926605224609
    8. '==' → logprob: -7.709926605224609
    9. '<|end|>' → logprob: -7.709926605224609
    10. ' ' → logprob: -7.959926605224609

Token 700: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.014187832362949848
    2. ' rest' → logprob: -4.264187812805176
    3. '=' → logprob: -10.764187812805176
    4. '(rest' → logprob: -13.514187812805176
    5. '
' → logprob: -14.389187812805176
    6. '   ' → logprob: -14.639187812805176
    7. ' ' → logprob: -15.264187812805176
    8. '    ' → logprob: -16.764188766479492
    9. 'rep' → logprob: -16.889188766479492
    10. '```' → logprob: -16.889188766479492

Token 701: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0094174146652222
    2. ':' → logprob: -1.3844174146652222
    3. ' +' → logprob: -2.0094175338745117
    4. ':
' → logprob: -2.2594175338745117
    5. ',' → logprob: -3.0094175338745117
    6. '       ' → logprob: -3.5094175338745117
    7. ' else' → logprob: -3.8844175338745117
    8. ')' → logprob: -4.634417533874512
    9. ' and' → logprob: -5.009417533874512
    10. '   ' → logprob: -5.134417533874512

Token 702: ' the' (ID: 290)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.22710278630256653
    2. ' eq' → logprob: -1.6021027565002441
    3. '       ' → logprob: -6.977102756500244
    4. '           ' → logprob: -8.477103233337402
    5. '   ' → logprob: -8.977103233337402
    6. '1' → logprob: -9.102103233337402
    7. '(eq' → logprob: -9.477103233337402
    8. 'rep' → logprob: -9.852103233337402
    9. '
' → logprob: -10.102103233337402
    10. ' rep' → logprob: -10.852103233337402

Token 703: ' position' (ID: 4010)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0028407759964466095
    2. ' eq' → logprob: -5.877840995788574
    3. 'rep' → logprob: -11.627840995788574
    4. '+' → logprob: -12.377840995788574
    5. '(eq' → logprob: -12.377840995788574
    6. '
' → logprob: -12.627840995788574
    7. '   ' → logprob: -13.127840995788574
    8. ' ' → logprob: -13.502840995788574
    9. 'equ' → logprob: -13.752840995788574
    10. '           ' → logprob: -14.127840995788574

Token 704: ' comes' (ID: 5124)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.136409878730774
    2. '+=' → logprob: -1.886409878730774
    3. ' <' → logprob: -2.0114097595214844
    4. '==' → logprob: -2.2614097595214844
    5. '+' → logprob: -2.8864097595214844
    6. ')' → logprob: -3.1364097595214844
    7. ' is' → logprob: -3.2614097595214844
    8. ' ==' → logprob: -3.7614097595214844
    9. '```' → logprob: -4.261409759521484
    10. '<=' → logprob: -4.761409759521484

Token 705: ' up' (ID: 869)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11498652398586273
    2. ' +' → logprob: -2.9899864196777344
    3. 'from' → logprob: -4.489986419677734
    4. ' up' → logprob: -4.739986419677734
    5. '+=' → logprob: -4.989986419677734
    6. ' +=' → logprob: -5.489986419677734
    7. 'count' → logprob: -5.739986419677734
    8. '<' → logprob: -5.739986419677734
    9. ' in' → logprob: -5.864986419677734
    10. '=' → logprob: -5.864986419677734

Token 706: ' one' (ID: 1001)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7464621663093567
    2. ' +' → logprob: -1.246462106704712
    3. ',' → logprob: -2.621462106704712
    4. ' +=' → logprob: -3.246462106704712
    5. '           ' → logprob: -3.996462106704712
    6. '+=' → logprob: -3.996462106704712
    7. '       ' → logprob: -4.121462345123291
    8. ' once' → logprob: -4.621462345123291
    9. ' ,' → logprob: -4.871462345123291
    10. '1' → logprob: -4.996462345123291

Token 707: ' extra' (ID: 5018)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.561231791973114
    2. '+' → logprob: -1.4362318515777588
    3. ' more' → logprob: -1.8112318515777588
    4. ' +' → logprob: -4.81123161315918
    5. 'additional' → logprob: -5.56123161315918
    6. '+=' → logprob: -5.68623161315918
    7. '<|end|>' → logprob: -5.93623161315918
    8. 'extra' → logprob: -6.56123161315918
    9. ')' → logprob: -6.56123161315918
    10. ' +=' → logprob: -6.81123161315918

Token 708: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8720851540565491
    2. ' time' → logprob: -1.1220850944519043
    3. ' times' → logprob: -1.9970850944519043
    4. 'times' → logprob: -2.8720850944519043
    5. '+' → logprob: -2.9970850944519043
    6. ' +' → logprob: -5.372085094451904
    7. '
' → logprob: -6.747085094451904
    8. ' ' → logprob: -6.997085094451904
    9. '_times' → logprob: -7.122085094451904
    10. '   ' → logprob: -7.122085094451904

Token 709: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11025319248437881
    2. '
' → logprob: -3.485253095626831
    3. 'eq' → logprob: -3.485253095626831
    4. '   ' → logprob: -4.86025333404541
    5. '=' → logprob: -5.11025333404541
    6. ' =' → logprob: -5.23525333404541
    7. ' eq' → logprob: -5.23525333404541
    8. ' for' → logprob: -5.86025333404541
    9. ',' → logprob: -5.86025333404541
    10. '#' → logprob: -6.23525333404541

Token 710: ' leftovers' (ID: 128820)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.6006397008895874
    2. 'eq' → logprob: -1.7256397008895874
    3. ' rest' → logprob: -1.8506397008895874
    4. 'g' → logprob: -2.725639820098877
    5. ' eq' → logprob: -3.975639820098877
    6. ' g' → logprob: -4.100639820098877
    7. '1' → logprob: -5.350639820098877
    8. 'the' → logprob: -6.100639820098877
    9. 'range' → logprob: -6.225639820098877
    10. '
' → logprob: -7.100639820098877

Token 711: '.
' (ID: 558)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.2129174917936325
    2. '       ' → logprob: -1.837917447090149
    3. ' eq' → logprob: -4.212917327880859
    4. '
' → logprob: -4.212917327880859
    5. '   ' → logprob: -6.837917327880859
    6. '        
' → logprob: -7.962917327880859
    7. '```' → logprob: -8.96291732788086
    8. '0' → logprob: -9.08791732788086
    9. '(eq' → logprob: -9.08791732788086
    10. '=' → logprob: -9.21291732788086

Token 712: '       ' (ID: 309)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.4035409986972809
    2. '       ' → logprob: -1.2785409688949585
    3. '```' → logprob: -3.653541088104248
    4. ' eq' → logprob: -4.278541088104248
    5. '
' → logprob: -4.778541088104248
    6. '   ' → logprob: -6.153541088104248
    7. '``' → logprob: -6.153541088104248
    8. '`
' → logprob: -8.52854061126709
    9. '           ' → logprob: -9.02854061126709
    10. '        
' → logprob: -9.15354061126709

Token 713: ' #' (ID: 1069)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00013679367839358747
    2. ' eq' → logprob: -9.250136375427246
    3. '       ' → logprob: -10.500136375427246
    4. '```' → logprob: -12.750136375427246
    5. '   ' → logprob: -13.000136375427246
    6. '=' → logprob: -13.375136375427246
    7. '
' → logprob: -13.875136375427246
    8. 'sum' → logprob: -13.875136375427246
    9. 'equ' → logprob: -13.875136375427246
    10. '(eq' → logprob: -14.000136375427246

Token 714: ' For' (ID: 2214)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.000517886015586555
    2. '       ' → logprob: -7.750517845153809
    3. ' eq' → logprob: -9.625517845153809
    4. 'from' → logprob: -12.000517845153809
    5. '   ' → logprob: -12.250517845153809
    6. '```' → logprob: -12.375517845153809
    7. 'equ' → logprob: -13.250517845153809
    8. 'print' → logprob: -13.500517845153809
    9. '(eq' → logprob: -14.750517845153809
    10. 'sum' → logprob: -15.000517845153809

Token 715: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1793782263994217
    2. 'eq' → logprob: -2.4293782711029053
    3. 'idx' → logprob: -3.1793782711029053
    4. ' i' → logprob: -4.054378032684326
    5. '_' → logprob: -4.929378032684326
    6. ' eq' → logprob: -5.679378032684326
    7. ' idx' → logprob: -5.929378032684326
    8. 'index' → logprob: -6.554378032684326
    9. '_i' → logprob: -7.429378032684326
    10. 'offset' → logprob: -8.304378509521484

Token 716: ' such' (ID: 2238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0312843956053257
    2. ' i' → logprob: -4.406284332275391
    3. 'idx' → logprob: -4.531284332275391
    4. '_' → logprob: -5.906284332275391
    5. '_,' → logprob: -6.031284332275391
    6. '_i' → logprob: -7.156284332275391
    7. ' idx' → logprob: -7.531284332275391
    8. '```' → logprob: -8.40628433227539
    9. 'index' → logprob: -8.65628433227539
    10. '   ' → logprob: -8.65628433227539

Token 717: ' times' (ID: 4238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09020986407995224
    2. ' i' → logprob: -2.8402099609375
    3. 'idx' → logprob: -4.2152099609375
    4. ' idx' → logprob: -5.4652099609375
    5. 'index' → logprob: -6.3402099609375
    6. '_' → logprob: -6.5902099609375
    7. 'x' → logprob: -6.5902099609375
    8. '_,' → logprob: -7.0902099609375
    9. 'range' → logprob: -7.8402099609375
    10. '```' → logprob: -7.9652099609375

Token 718: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8875455856323242
    2. '       ' → logprob: -1.1375455856323242
    3. 'eq' → logprob: -1.7625455856323242
    4. '=' → logprob: -3.262545585632324
    5. ':' → logprob: -3.637545585632324
    6. '   ' → logprob: -4.887545585632324
    7. ':
' → logprob: -5.387545585632324
    8. '#' → logprob: -5.887545585632324
    9. ' =' → logprob: -6.012545585632324
    10. ',
' → logprob: -6.012545585632324

Token 719: ' count' (ID: 3605)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00038455575122497976
    2. ' eq' → logprob: -8.375384330749512
    3. '       ' → logprob: -9.375384330749512
    4. 'zero' → logprob: -11.125384330749512
    5. 'print' → logprob: -11.500384330749512
    6. 'count' → logprob: -12.250384330749512
    7. 'from' → logprob: -12.625384330749512
    8. 'idx' → logprob: -12.750384330749512
    9. '           ' → logprob: -12.875384330749512
    10. '   ' → logprob: -12.875384330749512

Token 720: ' how' (ID: 1495)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.005392295774072409
    2. ' eq' → logprob: -5.380392074584961
    3. '       ' → logprob: -8.130392074584961
    4. '(eq' → logprob: -8.130392074584961
    5. '_eq' → logprob: -10.005392074584961
    6. '0' → logprob: -10.130392074584961
    7. '=' → logprob: -10.505392074584961
    8. '   ' → logprob: -11.130392074584961
    9. '
' → logprob: -11.380392074584961
    10. 'sum' → logprob: -11.505392074584961

Token 721: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.0702885165810585
    2. '_many' → logprob: -3.9452884197235107
    3. '       ' → logprob: -4.07028865814209
    4. ' many' → logprob: -4.19528865814209
    5. '=' → logprob: -5.19528865814209
    6. 'zero' → logprob: -5.32028865814209
    7. '   ' → logprob: -5.69528865814209
    8. '+=' → logprob: -7.94528865814209
    9. '```' → logprob: -8.07028865814209
    10. '    ' → logprob: -8.44528865814209

Token 722: ' of' (ID: 328)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.56501305103302
    2. 'eq' → logprob: -1.44001305103302
    3. 'i' → logprob: -3.0650129318237305
    4. 'x' → logprob: -3.1900129318237305
    5. 'zeros' → logprob: -4.0650129318237305
    6. '0' → logprob: -4.1900129318237305
    7. 'offset' → logprob: -4.5650129318237305
    8. ' zero' → logprob: -4.9400129318237305
    9. 'idx' → logprob: -5.0650129318237305
    10. 'next' → logprob: -5.0650129318237305

Token 723: ' them' (ID: 1373)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6671983599662781
    2. 'range' → logprob: -0.7921983599662781
    3. 'list' → logprob: -4.917198181152344
    4. '(range' → logprob: -5.167198181152344
    5. ' range' → logprob: -5.417198181152344
    6. '(' → logprob: -5.417198181152344
    7. 'enumer' → logprob: -6.042198181152344
    8. 'next' → logprob: -6.167198181152344
    9. 'filter' → logprob: -6.792198181152344
    10. ' g' → logprob: -7.042198181152344

Token 724: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8150007128715515
    2. ' in' → logprob: -1.5650007724761963
    3. '==' → logprob: -2.9400007724761963
    4. '=' → logprob: -2.9400007724761963
    5. '%' → logprob: -3.0650007724761963
    6. ' if' → logprob: -3.3150007724761963
    7. 'in' → logprob: -3.5650007724761963
    8. 'if' → logprob: -3.9400007724761963
    9. ' ==' → logprob: -4.065000534057617
    10. ' for' → logprob: -4.190000534057617

Token 725: ' a' (ID: 261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8267082571983337
    2. '(next' → logprob: -1.7017083168029785
    3. '0' → logprob: -1.8267083168029785
    4. 'g' → logprob: -2.0767083168029785
    5. '(g' → logprob: -2.7017083168029785
    6. ' next' → logprob: -4.8267083168029785
    7. ' (' → logprob: -5.4517083168029785
    8. 'x' → logprob: -5.7017083168029785
    9. 'zero' → logprob: -6.2017083168029785
    10. '(x' → logprob: -6.4517083168029785

Token 726: ' g' (ID: 329)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.096269890666008
    2. 'zero' → logprob: -3.0962698459625244
    3. 'g' → logprob: -3.8462698459625244
    4. ' zero' → logprob: -4.9712700843811035
    5. 'next' → logprob: -5.0962700843811035
    6. '```' → logprob: -6.0962700843811035
    7. ' ' → logprob: -6.2212700843811035
    8. 'x' → logprob: -6.3462700843811035
    9. ' next' → logprob: -6.7212700843811035
    10. ' g' → logprob: -6.9712700843811035

Token 727: ' value' (ID: 1432)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4216225743293762
    2. 'i' → logprob: -2.7966225147247314
    3. '=' → logprob: -3.1716225147247314
    4. '0' → logprob: -3.2966225147247314
    5. 'zero' → logprob: -3.2966225147247314
    6. 'element' → logprob: -3.9216225147247314
    7. 'val' → logprob: -4.0466227531433105
    8. 'elem' → logprob: -4.1716227531433105
    9. 'value' → logprob: -4.5466227531433105
    10. '==' → logprob: -4.5466227531433105

Token 728: ' of' (ID: 328)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()==' → logprob: -1.1707229614257812
    2. '()' → logprob: -1.4207229614257812
    3. '==' → logprob: -1.5457229614257812
    4. '=' → logprob: -2.5457229614257812
    5. ' ==' → logprob: -2.9207229614257812
    6. '0' → logprob: -3.6707229614257812
    7. '(' → logprob: -4.545722961425781
    8. '(g' → logprob: -4.920722961425781
    9. '()%' → logprob: -4.920722961425781
    10. '%' → logprob: -4.920722961425781

Token 729: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.862962229410186e-05
    2. ' ' → logprob: -9.750078201293945
    3. '```' → logprob: -11.000078201293945
    4. 'zero' → logprob: -13.375078201293945
    5. '
' → logprob: -13.875078201293945
    6. '`' → logprob: -14.875078201293945
    7. '``' → logprob: -15.375078201293945
    8. '   ' → logprob: -16.125078201293945
    9. ' zero' → logprob: -16.250078201293945
    10. '<|end|>' → logprob: -16.875078201293945

Token 730: '.
' (ID: 558)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.001797277363948524
    2. ' eq' → logprob: -7.501797199249268
    3. 'zero' → logprob: -8.126797676086426
    4. '       ' → logprob: -8.376797676086426
    5. '=' → logprob: -8.626797676086426
    6. '0' → logprob: -9.126797676086426
    7. 'sum' → logprob: -9.501797676086426
    8. ' =' → logprob: -9.876797676086426
    9. 'count' → logprob: -10.001797676086426
    10. 'cnt' → logprob: -10.126797676086426

Token 731: '       ' (ID: 309)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.2313799411058426
    2. ' eq' → logprob: -1.7313799858093262
    3. '0' → logprob: -4.356379985809326
    4. 'for' → logprob: -6.356379985809326
    5. '[' → logprob: -6.481379985809326
    6. ' for' → logprob: -6.856379985809326
    7. '=' → logprob: -6.856379985809326
    8. ' =' → logprob: -6.856379985809326
    9. 'count' → logprob: -6.856379985809326
    10. 'sum' → logprob: -7.106379985809326

Token 732: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' (adapté à ' eq') → logprob: -0.008170673623681068
    2. ' eq' → logprob: -5.0081706047058105
    3. '       ' → logprob: -7.1331706047058105
    4. '0' → logprob: -9.258171081542969
    5. 'zero' → logprob: -9.258171081542969
    6. 'count' → logprob: -9.883171081542969
    7. 'sum' → logprob: -9.883171081542969
    8. '   ' → logprob: -10.008171081542969
    9. '
' → logprob: -10.008171081542969
    10. 'cnt' → logprob: -10.758171081542969

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5248299241065979
    2. '=' → logprob: -0.8998299241065979
    3. ',' → logprob: -6.399829864501953
    4. '   ' → logprob: -10.774829864501953
    5. ')' → logprob: -12.524829864501953
    6. 's' → logprob: -12.774829864501953
    7. '[' → logprob: -12.899829864501953
    8. ' +=' → logprob: -12.899829864501953
    9. '```' → logprob: -13.149829864501953
    10. ' ,' → logprob: -13.399829864501953

Token 734: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.023164192214608192
    2. ' sum' → logprob: -4.02316427230835
    3. '(sum' → logprob: -5.64816427230835
    4. '0' → logprob: -6.89816427230835
    5. 'rep' → logprob: -8.898163795471191
    6. '   ' → logprob: -9.523163795471191
    7. 'x' → logprob: -9.648163795471191
    8. ' ' → logprob: -10.023163795471191
    9. 'rest' → logprob: -10.273163795471191
    10. '(' → logprob: -10.648163795471191

Token 735: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33027076721191406
    2. '(x' → logprob: -1.830270767211914
    3. '((' → logprob: -2.205270767211914
    4. '(v' → logprob: -4.955270767211914
    5. '(i' → logprob: -6.705270767211914
    6. '(g' → logprob: -7.580270767211914
    7. '(val' → logprob: -7.955270767211914
    8. '(value' → logprob: -8.455270767211914
    9. '(((' → logprob: -8.580270767211914
    10. '(c' → logprob: -8.705270767211914

Token 736: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16592875123023987
    2. '1' → logprob: -2.790928840637207
    3. '((' → logprob: -3.290928840637207
    4. '(i' → logprob: -4.290928840637207
    5. '(x' → logprob: -4.290928840637207
    6. '(next' → logprob: -4.790928840637207
    7. '(g' → logprob: -5.165928840637207
    8. '(rest' → logprob: -5.165928840637207
    9. '(v' → logprob: -6.415928840637207
    10. '(rep' → logprob: -7.415928840637207

Token 737: ' rep' (ID: 2449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4536648094654083
    2. '1' → logprob: -1.328664779663086
    3. '(rest' → logprob: -3.578664779663086
    4. '((' → logprob: -4.078664779663086
    5. '(i' → logprob: -4.078664779663086
    6. '(x' → logprob: -4.703664779663086
    7. '(rep' → logprob: -5.203664779663086
    8. '(next' → logprob: -5.578664779663086
    9. '(v' → logprob: -5.578664779663086
    10. 'rest' → logprob: -5.703664779663086

Token 738: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31121498346328735
    2. '+' → logprob: -2.5612149238586426
    3. ' *' → logprob: -2.5612149238586426
    4. ' if' → logprob: -3.3112149238586426
    5. 'if' → logprob: -3.4362149238586426
    6. 'for' → logprob: -3.8112149238586426
    7. ' for' → logprob: -4.686214923858643
    8. ',' → logprob: -5.061214923858643
    9. ' +' → logprob: -6.061214923858643
    10. '*(' → logprob: -6.811214923858643

Token 739: ' (' (ID: 350)
  Prédit: '(rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rest' → logprob: -1.0584393739700317
    2. '(i' → logprob: -1.5584393739700317
    3. '(' → logprob: -1.9334393739700317
    4. '(idx' → logprob: -2.683439254760742
    5. '(index' → logprob: -2.808439254760742
    6. '(x' → logprob: -3.058439254760742
    7. '(int' → logprob: -3.183439254760742
    8. '((' → logprob: -3.558439254760742
    9. '(rep' → logprob: -3.933439254760742
    10. '(eq' → logprob: -4.683439254760742

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5916737914085388
    2. '(i' → logprob: -1.3416738510131836
    3. '(' → logprob: -1.7166738510131836
    4. '(index' → logprob: -6.091673851013184
    5. '(idx' → logprob: -6.591673851013184
    6. '(int' → logprob: -7.466673851013184
    7. 'i' → logprob: -7.716673851013184
    8. '(rest' → logprob: -7.966673851013184
    9. 'int' → logprob: -9.341673851013184
    10. '(j' → logprob: -9.466673851013184

Token 741: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6932466626167297
    2. ' if' → logprob: -0.6932466626167297
    3. ' ' → logprob: -10.568246841430664
    4. '           ' → logprob: -10.943246841430664
    5. '*(' → logprob: -11.068246841430664
    6. '   ' → logprob: -11.943246841430664
    7. ')' → logprob: -11.943246841430664
    8. '          ' → logprob: -12.193246841430664
    9. 'i' → logprob: -12.568246841430664
    10. '```' → logprob: -12.818246841430664

Token 742: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038159456104040146
    2. '_' → logprob: -3.9131593704223633
    3. ' i' → logprob: -4.663159370422363
    4. 'idx' → logprob: -5.163159370422363
    5. '_i' → logprob: -7.163159370422363
    6. 'rest' → logprob: -7.538159370422363
    7. '_=' → logprob: -8.663159370422363
    8. 'j' → logprob: -8.788159370422363
    9. ' idx' → logprob: -9.038159370422363
    10. ' _' → logprob: -9.288159370422363

Token 743: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3592084050178528
    2. ' <' → logprob: -1.234208345413208
    3. '<i' → logprob: -5.484208583831787
    4. '<len' → logprob: -5.984208583831787
    5. '<n' → logprob: -6.609208583831787
    6. '<size' → logprob: -6.734208583831787
    7. '<num' → logprob: -8.359208106994629
    8. '<int' → logprob: -8.984208106994629
    9. '<=' → logprob: -9.109208106994629
    10. '[i' → logprob: -9.234208106994629

Token 744: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.004078758880496025
    2. ' rest' → logprob: -5.5040788650512695
    3. '       ' → logprob: -16.004077911376953
    4. '(rest' → logprob: -16.254077911376953
    5. '           ' → logprob: -16.504077911376953
    6. '   ' → logprob: -17.379077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '               ' → logprob: -18.379077911376953
    9. '
' → logprob: -18.629077911376953
    10. '          ' → logprob: -18.629077911376953

Token 745: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03156175836920738
    2. 'else' → logprob: -3.531561851501465
    3. ' and' → logprob: -7.281561851501465
    4. '           ' → logprob: -7.531561851501465
    5. 'and' → logprob: -8.406561851501465
    6. '        ' → logprob: -9.031561851501465
    7. ')' → logprob: -9.281561851501465
    8. '            ' → logprob: -9.406561851501465
    9. '          ' → logprob: -11.031561851501465
    10. '         ' → logprob: -11.531561851501465

Token 746: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024034032598137856
    2. ' ' → logprob: -3.774034023284912
    3. '0' → logprob: -7.149034023284912
    4. '   ' → logprob: -13.64903450012207
    5. ')' → logprob: -15.27403450012207
    6. '+' → logprob: -15.39903450012207
    7. '           ' → logprob: -15.64903450012207
    8. '(' → logprob: -15.77403450012207
    9. '  ' → logprob: -16.52403450012207
    10. ' ' → logprob: -16.64903450012207

Token 747: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001542834215797484
    2. ' ' → logprob: -6.501543045043945
    3. '1' → logprob: -10.126543045043945
    4. '   ' → logprob: -14.626543045043945
    5. '       ' → logprob: -18.626543045043945
    6. '  ' → logprob: -18.876543045043945
    7. '+' → logprob: -19.001543045043945
    8. '	' → logprob: -19.501543045043945
    9. '           ' → logprob: -19.626543045043945
    10. '    ' → logprob: -19.876543045043945

Token 748: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39811134338378906
    2. '           ' → logprob: -2.023111343383789
    3. ')' → logprob: -2.273111343383789
    4. 'for' → logprob: -2.398111343383789
    5. '       ' → logprob: -6.898111343383789
    6. '               ' → logprob: -8.398111343383789
    7. '            ' → logprob: -8.523111343383789
    8. '          ' → logprob: -8.523111343383789
    9. ')*' → logprob: -9.148111343383789
    10. '   ' → logprob: -9.398111343383789

Token 749: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2606852948665619
    2. 'for' → logprob: -1.8856853246688843
    3. '           ' → logprob: -2.7606852054595947
    4. '          ' → logprob: -5.510685443878174
    5. 'and' → logprob: -5.760685443878174
    6. '            ' → logprob: -6.135685443878174
    7. ' and' → logprob: -6.635685443878174
    8. 'if' → logprob: -7.510685443878174
    9. '==' → logprob: -7.510685443878174
    10. '*' → logprob: -7.635685443878174

Token 750: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.769882321357727
    2. '           ' → logprob: -0.894882321357727
    3. ' for' → logprob: -2.1448822021484375
    4. 'if' → logprob: -5.3948822021484375
    5. '            ' → logprob: -6.1448822021484375
    6. '               ' → logprob: -6.5198822021484375
    7. 'and' → logprob: -7.2698822021484375
    8. '          ' → logprob: -7.3948822021484375
    9. ' if' → logprob: -7.6448822021484375
    10. '         ' → logprob: -8.269882202148438

Token 751: ' Number' (ID: 9184)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.726620614528656
    2. '(g' → logprob: -1.3516206741333008
    3. '(next' → logprob: -2.226620674133301
    4. ' (' → logprob: -2.726620674133301
    5. '(x' → logprob: -3.351620674133301
    6. 'for' → logprob: -4.726620674133301
    7. '(sum' → logprob: -4.726620674133301
    8. '(i' → logprob: -4.851620674133301
    9. '1' → logprob: -4.976620674133301
    10. 'next' → logprob: -5.476620674133301

Token 752: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19453272223472595
    2. ' of' → logprob: -2.944532632827759
    3. 'of' → logprob: -3.069532632827759
    4. ' for' → logprob: -4.444532871246338
    5. ' =' → logprob: -4.569532871246338
    6. '(
' → logprob: -4.819532871246338
    7. 'for' → logprob: -5.319532871246338
    8. '=i' → logprob: -5.569532871246338
    9. '(' → logprob: -5.694532871246338
    10. ' in' → logprob: -5.819532871246338

Token 753: ' appearances' (ID: 54994)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.2561822831630707
    2. ' times' → logprob: -1.756182312965393
    3. 'occ' → logprob: -4.0061821937561035
    4. '(i' → logprob: -4.1311821937561035
    5. 'g' → logprob: -5.7561821937561035
    6. '(g' → logprob: -6.0061821937561035
    7. ' occurrences' → logprob: -6.0061821937561035
    8. '(' → logprob: -6.2561821937561035
    9. '(times' → logprob: -6.3811821937561035
    10. ' (' → logprob: -6.7561821937561035

Token 754: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6716381311416626
    2. 'for' → logprob: -0.9216381311416626
    3. ' if' → logprob: -3.296638011932373
    4. 'if' → logprob: -3.421638011932373
    5. '           ' → logprob: -4.546638011932373
    6. '*' → logprob: -5.171638011932373
    7. ' *' → logprob: -6.171638011932373
    8. '```' → logprob: -6.921638011932373
    9. ' ' → logprob: -7.921638011932373
    10. '       ' → logprob: -8.171638488769531

Token 755: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6689993739128113
    2. 'i' → logprob: -0.9189993739128113
    3. ' i' → logprob: -4.043999195098877
    4. 'the' → logprob: -4.168999195098877
    5. 'zero' → logprob: -4.168999195098877
    6. ' g' → logprob: -4.293999195098877
    7. 'each' → logprob: -5.293999195098877
    8. ' the' → logprob: -5.668999195098877
    9. '0' → logprob: -5.793999195098877
    10. ' zero' → logprob: -5.918999195098877

Token 756: '3' (ID: 18)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03313230723142624
    2. ' at' → logprob: -4.783132076263428
    3. ' i' → logprob: -5.033132076263428
    4. ' in' → logprob: -5.783132076263428
    5. 'i' → logprob: -6.283132076263428
    6. '[' → logprob: -6.283132076263428
    7. '```' → logprob: -6.408132076263428
    8. ')' → logprob: -6.533132076263428
    9. ' ' → logprob: -6.533132076263428
    10. ' [' → logprob: -7.158132076263428

Token 757: '[i' (ID: 1768)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7334021925926208
    2. 'for' → logprob: -1.9834022521972656
    3. ')' → logprob: -2.2334022521972656
    4. '==' → logprob: -2.4834022521972656
    5. '[i' → logprob: -2.4834022521972656
    6. ' in' → logprob: -3.7334022521972656
    7. ' *' → logprob: -3.9834022521972656
    8. 'in' → logprob: -4.233402252197266
    9. ' ==' → logprob: -4.483402252197266
    10. '           ' → logprob: -4.608402252197266

Token 758: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23105204105377197
    2. ')' → logprob: -1.856052041053772
    3. '==' → logprob: -3.8560519218444824
    4. '           ' → logprob: -4.606051921844482
    5. '])' → logprob: -5.481051921844482
    6. ']==' → logprob: -5.731051921844482
    7. '       ' → logprob: -6.231051921844482
    8. ')]' → logprob: -6.481051921844482
    9. ' ==' → logprob: -6.731051921844482
    10. ' else' → logprob: -7.106051921844482

Token 759: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.522458016872406
    2. 'for' → logprob: -1.7724580764770508
    3. ' *' → logprob: -1.8974580764770508
    4. '*' → logprob: -3.272458076477051
    5. '           ' → logprob: -3.647458076477051
    6. '```' → logprob: -4.272458076477051
    7. ')' → logprob: -6.147458076477051
    8. ' if' → logprob: -6.272458076477051
    9. 'if' → logprob: -6.647458076477051
    10. '          ' → logprob: -7.147458076477051

Token 760: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5940901041030884
    2. 'for' (adapté à ' for') → logprob: -0.8440901041030884
    3. '           ' → logprob: -4.969089984893799
    4. '*' → logprob: -4.969089984893799
    5. ' *' → logprob: -6.469089984893799
    6. 'if' → logprob: -6.969089984893799
    7. '-' → logprob: -7.719089984893799
    8. ' if' → logprob: -7.969089984893799
    9. '+' → logprob: -8.219090461730957
    10. '          ' → logprob: -9.094090461730957

Token 761: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012922625755891204
    2. ' i' → logprob: -6.8762922286987305
    3. '_,' → logprob: -8.50129222869873
    4. '_' → logprob: -10.87629222869873
    5. 'g' → logprob: -11.25129222869873
    6. '_i' → logprob: -11.50129222869873
    7. 'range' → logprob: -12.00129222869873
    8. '   ' → logprob: -13.50129222869873
    9. '	i' → logprob: -13.62629222869873
    10. '0' → logprob: -13.62629222869873

Token 762: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04984420910477638
    2. 'in' → logprob: -3.174844264984131
    3. ',' → logprob: -5.049844264984131
    4. ' i' → logprob: -8.674843788146973
    5. ' ,' → logprob: -8.924843788146973
    6. ' ' → logprob: -10.424843788146973
    7. '<|end|>' → logprob: -10.799843788146973
    8. 'i' → logprob: -10.924843788146973
    9. ')' → logprob: -11.549843788146973
    10. '0' → logprob: -12.424843788146973

Token 763: ' gg' (ID: 87993)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5967409610748291
    2. 'x' → logprob: -1.471740961074829
    3. 'val' → logprob: -1.721740961074829
    4. 'y' → logprob: -3.846740961074829
    5. 'z' → logprob: -5.72174072265625
    6. 'zero' → logprob: -5.72174072265625
    7. 'e' → logprob: -5.84674072265625
    8. 'value' → logprob: -5.97174072265625
    9. 'el' → logprob: -6.22174072265625
    10. 'g' → logprob: -6.59674072265625

Token 764: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.014185008592903614
    2. ' in' → logprob: -4.264184951782227
    3. ',' → logprob: -11.764184951782227
    4. ')' → logprob: -12.264184951782227
    5. ' ' → logprob: -12.639184951782227
    6. '```' → logprob: -13.639184951782227
    7. '
' → logprob: -14.514184951782227
    8. 'n' → logprob: -14.639184951782227
    9. 'g' → logprob: -14.764184951782227
    10. 'is' → logprob: -14.889184951782227

Token 765: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.026454145088791847
    2. ' enumerate' → logprob: -3.651454210281372
    3. 'g' → logprob: -8.901453971862793
    4. 'zip' → logprob: -11.276453971862793
    5. '```' → logprob: -14.026453971862793
    6. 'en' → logprob: -14.151453971862793
    7. ' ' → logprob: -14.276453971862793
    8. 'enum' → logprob: -14.401453971862793
    9. '   ' → logprob: -14.651453971862793
    10. 'in' → logprob: -15.026453971862793

Token 766: '(g' (ID: 7791)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.09220544248819351
    2. '(g' → logprob: -2.46720552444458
    3. ' g' → logprob: -6.21720552444458
    4. 'is' → logprob: -7.21720552444458
    5. 'zip' → logprob: -9.217205047607422
    6. '(' → logprob: -9.592205047607422
    7. '(is' → logprob: -9.717205047607422
    8. '           ' → logprob: -9.967205047607422
    9. 'list' → logprob: -10.092205047607422
    10. '       ' → logprob: -10.342205047607422

Token 767: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0024196531157940626
    2. 'g' → logprob: -6.127419471740723
    3. ')' → logprob: -8.877419471740723
    4. '       ' → logprob: -10.377419471740723
    5. '   ' → logprob: -11.377419471740723
    6. 'if' → logprob: -12.127419471740723
    7. '           ' → logprob: -12.377419471740723
    8. ' if' → logprob: -12.502419471740723
    9. '(g' → logprob: -12.877419471740723
    10. ' ' → logprob: -13.002419471740723

Token 768: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05454617366194725
    2. 'if' → logprob: -3.3045461177825928
    3. ')' → logprob: -4.804546356201172
    4. '       ' → logprob: -5.179546356201172
    5. '   ' → logprob: -7.554546356201172
    6. '           ' → logprob: -7.679546356201172
    7. '        ' → logprob: -8.429546356201172
    8. ':' → logprob: -8.429546356201172
    9. '):
' → logprob: -8.679546356201172
    10. '          ' → logprob: -9.054546356201172

Token 769: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.025076841935515404
    2. 'if' → logprob: -3.9000768661499023
    3. '           ' → logprob: -6.650076866149902
    4. '<|end|>' → logprob: -6.900076866149902
    5. '       ' → logprob: -7.025076866149902
    6. '          ' → logprob: -7.775076866149902
    7. '        ' → logprob: -8.150076866149902
    8. '	if' → logprob: -9.150076866149902
    9. '[' → logprob: -9.650076866149902
    10. ' ' → logprob: -9.900076866149902

Token 770: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5260840654373169
    2. 'if' → logprob: -0.9010840654373169
    3. '       ' → logprob: -6.651083946228027
    4. '           ' → logprob: -6.776083946228027
    5. '	if' → logprob: -9.151083946228027
    6. ')' → logprob: -9.151083946228027
    7. '               ' → logprob: -9.901083946228027
    8. '   ' → logprob: -10.026083946228027
    9. '          ' → logprob: -10.526083946228027
    10. ':' → logprob: -10.651083946228027

Token 771: ' For' (ID: 2214)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.059779565781354904
    2. ' gg' → logprob: -3.934779644012451
    3. '[' → logprob: -4.184779644012451
    4. '(' → logprob: -4.309779644012451
    5. ' (' → logprob: -6.934779644012451
    6. 'g' → logprob: -7.184779644012451
    7. '(g' → logprob: -7.184779644012451
    8. '   ' → logprob: -7.184779644012451
    9. ' ' → logprob: -7.434779644012451
    10. '[]' → logprob: -7.434779644012451

Token 772: ' each' (ID: 2454)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.37761369347572327
    2. '(' → logprob: -1.2526136636734009
    3. ' gg' → logprob: -4.752613544464111
    4. '(i' → logprob: -5.127613544464111
    5. 'range' → logprob: -5.752613544464111
    6. ' (' → logprob: -6.002613544464111
    7. 'i' → logprob: -6.002613544464111
    8. '(g' → logprob: -6.127613544464111
    9. 'g' → logprob: -7.252613544464111
    10. '0' → logprob: -7.627613544464111

Token 773: ' element' (ID: 3577)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.965639054775238
    2. '_' → logprob: -2.215639114379883
    3. '(' → logprob: -2.465639114379883
    4. ' (' → logprob: -2.590639114379883
    5. ' gg' → logprob: -2.590639114379883
    6. 'g' → logprob: -2.840639114379883
    7. ' ' → logprob: -3.340639114379883
    8. '_,' → logprob: -3.590639114379883
    9. ' g' → logprob: -3.715639114379883
    10. '0' → logprob: -3.840639114379883

Token 774: ' and' (ID: 326)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3401045501232147
    2. ' if' → logprob: -2.090104579925537
    3. 'in' → logprob: -2.340104579925537
    4. '       ' → logprob: -4.340104579925537
    5. '           ' → logprob: -4.590104579925537
    6. ':' → logprob: -4.715104579925537
    7. 'if' → logprob: -4.840104579925537
    8. '():
' → logprob: -5.090104579925537
    9. ':
' → logprob: -5.340104579925537
    10. ',' → logprob: -5.465104579925537

Token 775: ' its' (ID: 1617)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5393652319908142
    2. ' (' → logprob: -1.289365291595459
    3. '_' → logprob: -3.289365291595459
    4. '(_,' → logprob: -3.289365291595459
    5. 'gg' → logprob: -4.539365291595459
    6. '(g' → logprob: -4.539365291595459
    7. '(_' → logprob: -4.664365291595459
    8. '(i' → logprob: -4.664365291595459
    9. ' gg' → logprob: -5.039365291595459
    10. ' ' → logprob: -5.664365291595459

Token 776: ' index' (ID: 3472)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.823593020439148
    2. 'i' → logprob: -2.0735931396484375
    3. '0' → logprob: -2.3235931396484375
    4. 'value' → logprob: -2.4485931396484375
    5. '__' → logprob: -2.6985931396484375
    6. ' ==' → logprob: -3.0735931396484375
    7. ' ' → logprob: -3.8235931396484375
    8. 'index' → logprob: -3.9485931396484375
    9. '```' → logprob: -4.0735931396484375
    10. ' i' → logprob: -4.3235931396484375

Token 777: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3689471185207367
    2. 'if' → logprob: -1.243947148323059
    3. ':' → logprob: -4.9939470291137695
    4. '   ' → logprob: -5.7439470291137695
    5. ':
' → logprob: -6.1189470291137695
    6. '       ' → logprob: -6.7439470291137695
    7. 'in' → logprob: -6.9939470291137695
    8. '():
' → logprob: -6.9939470291137695
    9. ')' → logprob: -7.2439470291137695
    10. ',' → logprob: -7.2439470291137695

Token 778: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023182576522231102
    2. 'if' → logprob: -4.273182392120361
    3. '           ' → logprob: -5.398182392120361
    4. '       ' → logprob: -5.773182392120361
    5. '          ' → logprob: -7.273182392120361
    6. '               ' → logprob: -8.77318286895752
    7. '            ' → logprob: -9.39818286895752
    8. '              ' → logprob: -9.64818286895752
    9. '()' → logprob: -9.77318286895752
    10. '```' → logprob: -9.89818286895752

Token 779: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10296078026294708
    2. ' if' → logprob: -2.3529608249664307
    3. '
' → logprob: -6.852960586547852
    4. 'in' → logprob: -8.102960586547852
    5. ':' → logprob: -8.352960586547852
    6. '<|end|>' → logprob: -8.727960586547852
    7. ')' → logprob: -8.852960586547852
    8. ':
' → logprob: -9.227960586547852
    9. ' ' → logprob: -9.352960586547852
    10. '       ' → logprob: -9.852960586547852

Token 780: ' gg' (ID: 87993)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.00033665422233752906
    2. ' gg' → logprob: -8.250336647033691
    3. 'not' → logprob: -10.375336647033691
    4. '   ' → logprob: -10.750336647033691
    5. '           ' → logprob: -11.625336647033691
    6. '       ' → logprob: -12.500336647033691
    7. '         ' → logprob: -13.625336647033691
    8. '     ' → logprob: -14.000336647033691
    9. '(' → logprob: -14.000336647033691
    10. '    ' → logprob: -14.125336647033691

Token 781: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4778107702732086
    2. '==' → logprob: -0.9778107404708862
    3. ')' → logprob: -5.727810859680176
    4. ')==' → logprob: -8.102810859680176
    5. '%' → logprob: -9.727810859680176
    6. '[' → logprob: -10.352810859680176
    7. '0' → logprob: -10.977810859680176
    8. ' ' → logprob: -11.477810859680176
    9. ' %' → logprob: -11.977810859680176
    10. '=' → logprob: -12.227810859680176

Token 782: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '۰' → logprob: -17.750625610351562
    4. '00' → logprob: -18.000625610351562
    5. '   ' → logprob: -18.250625610351562
    6. ' ' → logprob: -18.750625610351562
    7. '```' → logprob: -19.125625610351562
    8. ' ' → logprob: -19.125625610351562
    9. '
' → logprob: -19.250625610351562
    10. '  ' → logprob: -20.000625610351562

Token 783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -17.375015258789062
    4. '```' → logprob: -18.375015258789062
    5. '   ' → logprob: -18.625015258789062
    6. '00' → logprob: -19.125015258789062
    7. ' ' → logprob: -19.500015258789062
    8. '<|end|>' → logprob: -20.125015258789062
    9. '`' → logprob: -20.375015258789062
    10. '  ' → logprob: -20.687515258789062

Token 784: '                   ' (ID: 699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017148085171356797
    2. '       ' → logprob: -6.751714706420898
    3. '<|end|>' → logprob: -8.751714706420898
    4. '):' → logprob: -9.126714706420898
    5. ' )' → logprob: -9.251714706420898
    6. '   ' → logprob: -9.876714706420898
    7. ')
' → logprob: -10.001714706420898
    8. '           ' → logprob: -10.376714706420898
    9. '),' → logprob: -11.376714706420898
    10. '<|end|>' → logprob: -12.126714706420898

Token 785: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014580932911485434
    2. ' )' → logprob: -7.251458168029785
    3. '       ' → logprob: -7.876458168029785
    4. '),' → logprob: -8.626458168029785
    5. ')
' → logprob: -9.626458168029785
    6. '           ' → logprob: -10.751458168029785
    7. ')+' → logprob: -10.876458168029785
    8. '
' → logprob: -11.126458168029785
    9. '<|end|>' → logprob: -11.126458168029785
    10. '   ' → logprob: -11.251458168029785

Token 786: ' But' (ID: 3072)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010494812158867717
    2. ' )' → logprob: -7.626049518585205
    3. 'True' → logprob: -8.876049041748047
    4. '           ' → logprob: -9.126049041748047
    5. '):' → logprob: -9.626049041748047
    6. ' True' → logprob: -9.751049041748047
    7. '       ' → logprob: -9.876049041748047
    8. ')
' → logprob: -10.626049041748047
    9. '),' → logprob: -10.626049041748047
    10. '   ' → logprob: -10.876049041748047

Token 787: ' only' (ID: 1606)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0470619201660156
    2. 'gg' → logprob: -1.5470619201660156
    3. ' True' → logprob: -1.6720619201660156
    4. ' gg' → logprob: -1.9220619201660156
    5. '0' → logprob: -3.2970619201660156
    6. ')' → logprob: -3.5470619201660156
    7. 'False' → logprob: -4.797061920166016
    8. ' not' → logprob: -5.047061920166016
    9. '           ' → logprob: -5.797061920166016
    10. 'i' → logprob: -6.047061920166016

Token 788: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6032717823982239
    2. ':' → logprob: -1.853271722793579
    3. '==' → logprob: -3.103271722793579
    4. '<|end|>' → logprob: -3.353271722793579
    5. '):' → logprob: -3.728271722793579
    6. '           ' → logprob: -3.853271722793579
    7. ' )' → logprob: -4.228271961212158
    8. '          ' → logprob: -4.228271961212158
    9. '.' → logprob: -4.353271961212158
    10. ':
' → logprob: -4.353271961212158

Token 789: ' g' (ID: 329)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gg' → logprob: -0.0196064580231905
    2. ' gg' → logprob: -4.019606590270996
    3. '           ' → logprob: -7.394606590270996
    4. '   ' → logprob: -7.644606590270996
    5. '       ' → logprob: -9.269606590270996
    6. '0' → logprob: -9.269606590270996
    7. '               ' → logprob: -9.644606590270996
    8. ' ' → logprob: -11.394606590270996
    9. 'not' → logprob: -11.519606590270996
    10. '         ' → logprob: -11.644606590270996

Token 790: '3' (ID: 18)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25727975368499756
    2. ' ==' → logprob: -1.5072797536849976
    3. '           ' → logprob: -5.757279872894287
    4. '```' → logprob: -7.757279872894287
    5. '          ' → logprob: -8.382279396057129
    6. ' ' → logprob: -8.507279396057129
    7. '   ' → logprob: -8.757279396057129
    8. '       ' → logprob: -9.132279396057129
    9. '            ' → logprob: -9.382279396057129
    10. '               ' → logprob: -9.382279396057129

Token 791: '[i' (ID: 1768)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2857775390148163
    2. ' ==' → logprob: -1.4107775688171387
    3. '[i' → logprob: -5.410777568817139
    4. ')==' → logprob: -10.16077709197998
    5. ')' → logprob: -10.91077709197998
    6. ']==' → logprob: -11.03577709197998
    7. ' ' → logprob: -11.16077709197998
    8. '```' → logprob: -11.41077709197998
    9. '           ' → logprob: -11.66077709197998
    10. '   ' → logprob: -12.03577709197998

Token 792: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4237591326236725
    2. ' ==' → logprob: -1.54875910282135
    3. ')' → logprob: -2.1737592220306396
    4. ')==' → logprob: -4.2987589836120605
    5. ']==' → logprob: -5.4237589836120605
    6. ']' → logprob: -7.5487589836120605
    7. '```' → logprob: -8.673759460449219
    8. ' )' → logprob: -9.923759460449219
    9. '       ' → logprob: -9.923759460449219
    10. '           ' → logprob: -9.923759460449219

Token 793: ' (' (ID: 350)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2388400286436081
    2. ' ==' → logprob: -1.6138399839401245
    3. ')' → logprob: -4.738840103149414
    4. ')==' → logprob: -5.488840103149414
    5. '):' → logprob: -9.363840103149414
    6. '==
' → logprob: -9.613840103149414
    7. ']==' → logprob: -9.863840103149414
    8. '):
' → logprob: -9.988840103149414
    9. '```' → logprob: -9.988840103149414
    10. ' )' → logprob: -10.488840103149414

Token 794: 'the' (ID: 3086)
  Prédit: 'gg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gg' → logprob: -1.0832420587539673
    2. '==' → logprob: -1.3332420587539673
    3. ')' → logprob: -1.5832420587539673
    4. '0' → logprob: -2.2082419395446777
    5. ' ==' → logprob: -3.9582419395446777
    6. ')==' → logprob: -4.458241939544678
    7. ' gg' → logprob: -4.708241939544678
    8. '           ' → logprob: -4.708241939544678
    9. '=' → logprob: -4.958241939544678
    10. '   ' → logprob: -5.208241939544678

Token 795: ' value' (ID: 1432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22225025296211243
    2. 'x' → logprob: -2.47225022315979
    3. 'gg' → logprob: -3.34725022315979
    4. 'g' → logprob: -4.222250461578369
    5. 'i' → logprob: -4.347250461578369
    6. ' ' → logprob: -4.472250461578369
    7. 'next' → logprob: -4.722250461578369
    8. ')' → logprob: -5.347250461578369
    9. 'value' → logprob: -5.347250461578369
    10. ' x' → logprob: -5.847250461578369

Token 796: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5616801977157593
    2. '==' → logprob: -1.3116801977157593
    3. ' ==' → logprob: -2.186680316925049
    4. ')==' → logprob: -3.186680316925049
    5. ' )' → logprob: -5.811680316925049
    6. '%' → logprob: -6.061680316925049
    7. '```' → logprob: -7.436680316925049
    8. ')%' → logprob: -8.43667984008789
    9. ' %' → logprob: -9.06167984008789
    10. ']==' → logprob: -9.43667984008789

Token 797: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020566295832395554
    2. ' m' → logprob: -3.89556622505188
    3. '```' → logprob: -11.5205659866333
    4. ' ' → logprob: -12.2705659866333
    5. '   ' → logprob: -12.3955659866333
    6. '`' → logprob: -13.5205659866333
    7. '``' → logprob: -13.7705659866333
    8. '	m' → logprob: -14.6455659866333
    9. ' ' → logprob: -14.8955659866333
    10. '  ' → logprob: -14.8955659866333

Token 798: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01754477620124817
    2. ')==' → logprob: -4.642544746398926
    3. '==' → logprob: -5.017544746398926
    4. ' ==' → logprob: -7.517544746398926
    5. ' )' → logprob: -8.392544746398926
    6. ')
' → logprob: -9.392544746398926
    7. '           ' → logprob: -9.642544746398926
    8. '       ' → logprob: -9.767544746398926
    9. '```' → logprob: -10.767544746398926
    10. '   ' → logprob: -11.017544746398926

Token 799: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15822833776474
    2. ' ==' → logprob: -2.7832283973693848
    3. ')' → logprob: -3.1582283973693848
    4. ')==' → logprob: -4.283228397369385
    5. '       ' → logprob: -4.408228397369385
    6. ']==' → logprob: -5.533228397369385
    7. '           ' → logprob: -5.783228397369385
    8. '):' → logprob: -6.283228397369385
    9. ':' → logprob: -6.408228397369385
    10. '):
' → logprob: -6.783228397369385

Token 800: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8789383830153383e-05
    2. ' ' → logprob: -11.000019073486328
    3. '```' → logprob: -13.750019073486328
    4. '==' → logprob: -15.125019073486328
    5. 'zero' → logprob: -15.625019073486328
    6. '
' → logprob: -16.250019073486328
    7. '`' → logprob: -16.500019073486328
    8. '=' → logprob: -16.875019073486328
    9. '   ' → logprob: -17.125019073486328
    10. '==
' → logprob: -17.875019073486328

Token 801: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015351141802966595
    2. '       ' → logprob: -4.765351295471191
    3. '           ' → logprob: -5.515351295471191
    4. ')
' → logprob: -6.640351295471191
    5. '   ' → logprob: -7.140351295471191
    6. ' )' → logprob: -8.640351295471191
    7. '```' → logprob: -8.640351295471191
    8. '):' → logprob: -9.515351295471191
    9. '),' → logprob: -10.140351295471191
    10. '):
' → logprob: -10.140351295471191

Token 802: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0307423397898674
    2. '       ' → logprob: -3.5307424068450928
    3. '           ' → logprob: -7.155742168426514
    4. ' )' → logprob: -9.405742645263672
    5. ')
' → logprob: -10.280742645263672
    6. '   ' → logprob: -10.280742645263672
    7. '),' → logprob: -11.155742645263672
    8. '):' → logprob: -11.905742645263672
    9. '```' → logprob: -11.905742645263672
    10. ')+' → logprob: -12.155742645263672

Token 803: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019922727718949318
    2. '       ' → logprob: -4.269922733306885
    3. ')
' → logprob: -5.269922733306885
    4. '   ' → logprob: -7.519922733306885
    5. ' )' → logprob: -11.269922256469727
    6. ')

' (adapté à ' )

') → logprob: -11.644922256469727
    7. '           ' → logprob: -12.144922256469727
    8. ')return' → logprob: -12.144922256469727
    9. '```' → logprob: -12.644922256469727
    10. '<|end|>' → logprob: -13.144922256469727

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03512345999479294
    2. 'print' → logprob: -3.410123348236084
    3. '
' → logprob: -7.285123348236084
    4. '   ' → logprob: -8.535123825073242
    5. '        
' → logprob: -8.785123825073242
    6. ' print' → logprob: -8.785123825073242
    7. '```' → logprob: -8.785123825073242
    8. '<|end|>' → logprob: -9.410123825073242
    9. '           ' → logprob: -10.785123825073242
    10. '    
' → logprob: -12.035123825073242

Token 805: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12718091905117035
    2. '       ' → logprob: -2.127180814743042
    3. '   ' → logprob: -9.377181053161621
    4. '```' → logprob: -9.502181053161621
    5. ' print' → logprob: -9.752181053161621
    6. '
' → logprob: -10.627181053161621
    7. '        
' → logprob: -12.252181053161621
    8. 'for' → logprob: -13.252181053161621
    9. '	print' → logprob: -14.127181053161621
    10. 'if' → logprob: -14.127181053161621

Token 806: ' The' (ID: 623)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008089098846539855
    2. '       ' → logprob: -7.1258087158203125
    3. '   ' → logprob: -13.250808715820312
    4. 'if' → logprob: -13.750808715820312
    5. ' print' → logprob: -14.125808715820312
    6. '```' → logprob: -14.750808715820312
    7. 'result' → logprob: -15.750808715820312
    8. 'answer' → logprob: -15.750808715820312
    9. '
' → logprob: -17.000808715820312
    10. 'count' → logprob: -17.125808715820312

Token 807: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033206648658961058
    2. '       ' → logprob: -5.878320693969727
    3. ' print' → logprob: -8.503320693969727
    4. '   ' → logprob: -8.753320693969727
    5. 'answer' → logprob: -9.378320693969727
    6. 'result' → logprob: -10.253320693969727
    7. '#' → logprob: -11.003320693969727
    8. 'for' → logprob: -12.253320693969727
    9. '
' → logprob: -13.003320693969727
    10. 'eq' → logprob: -13.253320693969727

Token 808: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6307377815246582
    2. ' =' → logprob: -1.1307377815246582
    3. '       ' → logprob: -2.005737781524658
    4. 'print' → logprob: -5.505737781524658
    5. ',' → logprob: -6.130737781524658
    6. ':' → logprob: -6.505737781524658
    7. ' is' → logprob: -7.130737781524658
    8. '   ' → logprob: -7.380737781524658
    9. '
' → logprob: -8.3807373046875
    10. ' for' → logprob: -8.7557373046875

Token 809: ' calculated' (ID: 25702)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.17548979818820953
    2. ' last' → logprob: -2.425489902496338
    3. 'eq' → logprob: -3.050489902496338
    4. ' eq' → logprob: -4.050489902496338
    5. 'max' → logprob: -6.675489902496338
    6. 'x' → logprob: -6.925489902496338
    7. 'rep' → logprob: -7.050489902496338
    8. '(last' → logprob: -7.175489902496338
    9. '(eq' → logprob: -7.300489902496338
    10. ' x' → logprob: -7.300489902496338

Token 810: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3162544369697571
    2. ' =' → logprob: -1.5662543773651123
    3. ',' → logprob: -3.1912543773651123
    4. '+=' → logprob: -4.691254615783691
    5. '```' → logprob: -6.066254615783691
    6. '       ' → logprob: -6.066254615783691
    7. ' +=' → logprob: -6.566254615783691
    8. '   ' → logprob: -7.191254615783691
    9. '+' → logprob: -7.316254615783691
    10. 'for' → logprob: -7.691254615783691

Token 811: ' follows' (ID: 18183)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.014511463232338428
    2. ' last' → logprob: -5.014511585235596
    3. 'max' → logprob: -6.139511585235596
    4. '(last' → logprob: -6.139511585235596
    5. 'x' → logprob: -7.139511585235596
    6. 'rest' → logprob: -7.514511585235596
    7. 'rep' → logprob: -7.889511585235596
    8. '   ' → logprob: -7.889511585235596
    9. 'eq' → logprob: -8.514511108398438
    10. 'print' → logprob: -8.639511108398438

Token 812: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7748566269874573
    2. 'print' → logprob: -0.7748566269874573
    3. '
' → logprob: -3.1498565673828125
    4. ',' → logprob: -4.2748565673828125
    5. ' print' → logprob: -4.5248565673828125
    6. '        
' → logprob: -5.5248565673828125
    7. ' =' → logprob: -6.8998565673828125
    8. '   ' → logprob: -7.2748565673828125
    9. '```' → logprob: -7.2748565673828125
    10. ',
' → logprob: -7.5248565673828125

Token 813: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.661047101020813
    2. '       ' → logprob: -0.911047101020813
    3. ' print' → logprob: -2.6610469818115234
    4. ' x' → logprob: -5.161046981811523
    5. '```' → logprob: -5.911046981811523
    6. 'return' → logprob: -7.536046981811523
    7. ' if' → logprob: -7.661046981811523
    8. 'x' → logprob: -7.661046981811523
    9. '`' → logprob: -7.911046981811523
    10. ' return' → logprob: -8.161046981811523

Token 814: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017543837428092957
    2. 'eq' → logprob: -5.142543792724609
    3. ' print' → logprob: -5.267543792724609
    4. '       ' → logprob: -5.517543792724609
    5. 'last' → logprob: -7.642543792724609
    6. '   ' → logprob: -7.767543792724609
    7. 'answer' → logprob: -8.39254379272461
    8. 'ans' → logprob: -8.39254379272461
    9. ' eq' → logprob: -8.64254379272461
    10. ' last' → logprob: -9.01754379272461

Token 815: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0066537922248244286
    2. ' print' → logprob: -5.131653785705566
    3. '       ' → logprob: -7.631653785705566
    4. '   ' → logprob: -8.506653785705566
    5. '```' → logprob: -10.756653785705566
    6. 'answer' → logprob: -12.131653785705566
    7. '
' → logprob: -12.881653785705566
    8. '           ' → logprob: -13.006653785705566
    9. 'result' → logprob: -13.506653785705566
    10. 'ans' → logprob: -14.006653785705566

Token 816: 'n' (ID: 77)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2928679883480072
    2. 'eq' → logprob: -1.6678680181503296
    3. 'rep' → logprob: -4.042868137359619
    4. 'n' → logprob: -4.417868137359619
    5. 'x' → logprob: -4.542868137359619
    6. '(eq' → logprob: -5.042868137359619
    7. ' last' → logprob: -5.542868137359619
    8. 'rest' → logprob: -5.542868137359619
    9. '(last' → logprob: -5.542868137359619
    10. ' eq' → logprob: -6.417868137359619

Token 817: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.168554425239563
    2. '-' → logprob: -1.918554425239563
    3. '   ' → logprob: -5.293554306030273
    4. ')' → logprob: -6.668554306030273
    5. ' *' → logprob: -7.293554306030273
    6. '       ' → logprob: -8.543554306030273
    7. '*' → logprob: -8.543554306030273
    8. '%' → logprob: -8.543554306030273
    9. '    ' → logprob: -9.168554306030273
    10. '```' → logprob: -9.293554306030273

Token 818: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40482693910598755
    2. 'eq' → logprob: -1.5298268795013428
    3. ' eq' → logprob: -2.2798268795013428
    4. ' ' → logprob: -4.404827117919922
    5. '   ' → logprob: -6.779827117919922
    6. '(eq' → logprob: -8.029827117919922
    7. ')' → logprob: -9.154827117919922
    8. '2' → logprob: -9.279827117919922
    9. '       ' → logprob: -10.779827117919922
    10. '    ' → logprob: -10.779827117919922

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5769822597503662
    2. 'eq' → logprob: -0.8269822597503662
    3. ' eq' → logprob: -7.326982498168945
    4. '(eq' → logprob: -8.326982498168945
    5. ' ' → logprob: -10.076982498168945
    6. '   ' → logprob: -10.576982498168945
    7. ')' → logprob: -10.576982498168945
    8. '(' → logprob: -11.326982498168945
    9. '
' → logprob: -11.951982498168945
    10. '_eq' → logprob: -12.326982498168945

Token 820: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7853758335113525
    2. ' -' → logprob: -1.0353758335113525
    3. '-' → logprob: -1.9103758335113525
    4. '+' → logprob: -4.285375595092773
    5. ' +' → logprob: -4.785375595092773
    6. ',' → logprob: -4.910375595092773
    7. '   ' → logprob: -5.785375595092773
    8. '%' → logprob: -6.410375595092773
    9. '*' → logprob: -6.535375595092773
    10. ' )' → logprob: -7.035375595092773

Token 821: ' total' (ID: 3609)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7641618847846985
    2. '*' → logprob: -1.3891618251800537
    3. ' -' → logprob: -1.5141618251800537
    4. '-' → logprob: -3.3891618251800537
    5. ')' → logprob: -4.014162063598633
    6. ' +' → logprob: -6.014162063598633
    7. ' ' → logprob: -6.139162063598633
    8. '+' → logprob: -6.389162063598633
    9. '    ' → logprob: -7.139162063598633
    10. '   ' → logprob: -7.264162063598633

Token 822: ' increments' (ID: 124105)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.46093159914016724
    2. ')' → logprob: -1.4609315395355225
    3. '-' → logprob: -2.4609315395355225
    4. '*' → logprob: -4.210931777954102
    5. '+' → logprob: -4.335931777954102
    6. ' +' → logprob: -4.835931777954102
    7. ' *' → logprob: -4.960931777954102
    8. ' )' → logprob: -6.210931777954102
    9. '```' → logprob: -6.585931777954102
    10. '<|end|>' → logprob: -6.585931777954102

Token 823: ' performed' (ID: 14469)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2665905952453613
    2. '+' → logprob: -1.3915905952453613
    3. ' -' → logprob: -1.6415905952453613
    4. ')' → logprob: -2.1415905952453613
    5. '-' → logprob: -2.3915905952453613
    6. '*' → logprob: -3.5165905952453613
    7. ' *' → logprob: -3.6415905952453613
    8. '   ' → logprob: -5.391590595245361
    9. '```' → logprob: -6.641590595245361
    10. ',' → logprob: -7.016590595245361

Token 824: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0739681720733643
    2. '+' → logprob: -1.3239681720733643
    3. ' -' → logprob: -1.5739681720733643
    4. '-' → logprob: -2.1989681720733643
    5. ')' → logprob: -3.1989681720733643
    6. '*' → logprob: -4.448967933654785
    7. '   ' → logprob: -5.198967933654785
    8. '```' → logprob: -5.198967933654785
    9. ' *' → logprob: -5.573967933654785
    10. ',' → logprob: -6.698967933654785

Token 825: 'we' (ID: 854)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2816365659236908
    2. ' -' → logprob: -1.9066365957260132
    3. '-' → logprob: -2.6566364765167236
    4. ' )' → logprob: -4.281636714935303
    5. '*' → logprob: -5.531636714935303
    6. '+' → logprob: -5.906636714935303
    7. ' +' → logprob: -6.031636714935303
    8. ' *' → logprob: -6.281636714935303
    9. ' ' → logprob: -7.281636714935303
    10. ')*' → logprob: -8.156636238098145

Token 826: ' consider' (ID: 3331)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.46138569712638855
    2. ')' → logprob: -1.586385726928711
    3. '+' → logprob: -2.461385726928711
    4. ' -' → logprob: -2.836385726928711
    5. ' +' → logprob: -4.836385726928711
    6. '#' → logprob: -5.711385726928711
    7. '*' → logprob: -5.961385726928711
    8. ' )' → logprob: -5.961385726928711
    9. '   ' → logprob: -6.461385726928711
    10. '```' → logprob: -7.211385726928711

Token 827: ' steps' (ID: 10331)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9040082693099976
    2. ' n' → logprob: -1.9040082693099976
    3. ' ' → logprob: -2.029008388519287
    4. ' (' → logprob: -2.654008388519287
    5. 'n' → logprob: -3.154008388519287
    6. ')' → logprob: -3.154008388519287
    7. ' +' → logprob: -3.404008388519287
    8. '+' → logprob: -4.029008388519287
    9. '(n' → logprob: -4.029008388519287
    10. ' eq' → logprob: -4.404008388519287

Token 828: ' from' (ID: 591)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.552484393119812
    2. ' -' → logprob: -1.677484393119812
    3. ')' → logprob: -2.0524845123291016
    4. '   ' → logprob: -2.5524845123291016
    5. '+' → logprob: -4.552484512329102
    6. '```' → logprob: -5.302484512329102
    7. ' ' → logprob: -5.802484512329102
    8. ' +' → logprob: -5.927484512329102
    9. '=' → logprob: -6.052484512329102
    10. '*' → logprob: -6.427484512329102

Token 829: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17038650810718536
    2. ' ' → logprob: -2.545386552810669
    3. 'x' → logprob: -4.17038631439209
    4. ' n' → logprob: -4.29538631439209
    5. 'n' → logprob: -4.42038631439209
    6. '0' → logprob: -4.42038631439209
    7. '`' → logprob: -4.67038631439209
    8. ' x' → logprob: -5.04538631439209
    9. '```' → logprob: -6.17038631439209
    10. ' the' → logprob: -6.79538631439209

Token 830: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24377039074897766
    2. 'x' → logprob: -1.6187703609466553
    3. '0' → logprob: -4.868770599365234
    4. ' x' → logprob: -5.618770599365234
    5. ' ' → logprob: -5.993770599365234
    6. '```' → logprob: -6.243770599365234
    7. '`' → logprob: -6.493770599365234
    8. '   ' → logprob: -8.243770599365234
    9. 'last' → logprob: -8.743770599365234
    10. 'def' → logprob: -9.368770599365234

Token 831: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.858934760093689
    2. '+' → logprob: -1.483934760093689
    3. ' to' → logprob: -2.6089348793029785
    4. ' +' → logprob: -2.6089348793029785
    5. ',' → logprob: -2.7339348793029785
    6. '   ' → logprob: -3.1089348793029785
    7. '-' → logprob: -4.1089348793029785
    8. '```' → logprob: -4.3589348793029785
    9. ' ,' → logprob: -4.7339348793029785
    10. ' )' → logprob: -4.8589348793029785

Token 832: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1800824999809265
    2. ' n' → logprob: -1.8050825595855713
    3. '(n' → logprob: -8.930082321166992
    4. '```' → logprob: -9.305082321166992
    5. ' (' → logprob: -10.180082321166992
    6. ' ' → logprob: -11.180082321166992
    7. '   ' → logprob: -11.555082321166992
    8. '1' → logprob: -11.930082321166992
    9. '       ' → logprob: -12.055082321166992
    10. '`' → logprob: -12.055082321166992

Token 833: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20018796622753143
    2. '-' → logprob: -1.8251879215240479
    3. ')' → logprob: -3.950187921524048
    4. '   ' → logprob: -7.325188159942627
    5. '```' → logprob: -8.825187683105469
    6. ' ' → logprob: -9.450187683105469
    7. ' )' → logprob: -10.200187683105469
    8. '
' → logprob: -10.825187683105469
    9. '       ' → logprob: -12.200187683105469
    10. ')-' → logprob: -12.325187683105469

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004819326568394899
    2. ' ' → logprob: -5.379819393157959
    3. ')' → logprob: -9.6298189163208
    4. '-' → logprob: -9.8798189163208
    5. '```' → logprob: -9.8798189163208
    6. '   ' → logprob: -11.5048189163208
    7. '`' → logprob: -11.7548189163208
    8. ' -' → logprob: -12.1298189163208
    9. '``' → logprob: -13.2548189163208
    10. '2' → logprob: -13.8798189163208

Token 835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25348377227783203
    2. '+' → logprob: -1.878483772277832
    3. ' +' → logprob: -3.128483772277832
    4. '-' → logprob: -4.753483772277832
    5. ' -' → logprob: -5.003483772277832
    6. ' )' → logprob: -6.003483772277832
    7. '   ' → logprob: -6.128483772277832
    8. '*' → logprob: -6.503483772277832
    9. ')
' → logprob: -7.128483772277832
    10. ')*' → logprob: -7.128483772277832

Token 836: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3986428380012512
    2. ' +' → logprob: -1.6486427783966064
    3. '-' → logprob: -2.7736427783966064
    4. '*' → logprob: -3.3986427783966064
    5. ' -' → logprob: -3.7736427783966064
    6. '%' → logprob: -5.7736430168151855
    7. '
' → logprob: -5.8986430168151855
    8. ',' → logprob: -6.2736430168151855
    9. '+
' → logprob: -6.2736430168151855
    10. ' *' → logprob: -6.5236430168151855

Token 837: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7452014088630676
    2. '-' → logprob: -1.6202013492584229
    3. ' -' → logprob: -1.8702013492584229
    4. ' +' → logprob: -1.8702013492584229
    5. '
' → logprob: -4.620201587677002
    6. ',' → logprob: -5.870201587677002
    7. '+
' → logprob: -6.495201587677002
    8. '*' → logprob: -6.870201587677002
    9. '-
' → logprob: -7.120201587677002
    10. 'print' → logprob: -7.495201587677002

Token 838: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3659311830997467
    2. ' -' → logprob: -1.8659311532974243
    3. '+' → logprob: -2.115931272506714
    4. ' +' → logprob: -4.490931034088135
    5. 'eq' → logprob: -4.990931034088135
    6. ' eq' → logprob: -5.490931034088135
    7. '(eq' → logprob: -5.865931034088135
    8. ',' → logprob: -6.490931034088135
    9. 'print' → logprob: -6.865931034088135
    10. '*' → logprob: -7.365931034088135

Token 839: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.030860066413879395
    2. ' eq' → logprob: -3.53085994720459
    3. '(eq' → logprob: -6.90585994720459
    4. ' (' → logprob: -10.03085994720459
    5. '2' → logprob: -10.78085994720459
    6. '(' → logprob: -10.90585994720459
    7. '(n' → logprob: -11.65585994720459
    8. '   ' → logprob: -12.90585994720459
    9. '1' → logprob: -13.53085994720459
    10. ' ' → logprob: -13.65585994720459

Token 840: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008852696977555752
    2. '<|end|>' → logprob: -5.133852481842041
    3. '+' → logprob: -7.383852481842041
    4. ' )' → logprob: -7.883852481842041
    5. '```' → logprob: -7.883852481842041
    6. ' +' → logprob: -8.0088529586792
    7. ' -' → logprob: -8.5088529586792
    8. '(n' → logprob: -8.7588529586792
    9. '-' → logprob: -9.1338529586792
    10. '<|end|>' → logprob: -9.1338529586792

Token 841: ' subtract' (ID: 71973)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19912347197532654
    2. ' +' → logprob: -3.4491233825683594
    3. ' eq' → logprob: -3.5741233825683594
    4. 'eq' → logprob: -3.6991233825683594
    5. ' (' → logprob: -3.9491233825683594
    6. '+' → logprob: -4.074123382568359
    7. '1' → logprob: -4.074123382568359
    8. ' )' → logprob: -4.949123382568359
    9. '(eq' → logprob: -5.324123382568359
    10. '(n' → logprob: -5.699123382568359

Token 842: ' the' (ID: 290)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.10026339441537857
    2. ' eq' → logprob: -2.3502633571624756
    3. '(eq' → logprob: -9.850263595581055
    4. '1' → logprob: -12.975263595581055
    5. '`' → logprob: -14.350263595581055
    6. '```' → logprob: -14.725263595581055
    7. '_eq' → logprob: -14.975263595581055
    8. '.eq' → logprob: -16.225263595581055
    9. '   ' → logprob: -16.350263595581055
    10. ' ' → logprob: -17.350263595581055

Token 843: ' number' (ID: 2086)
  Prédit: ' eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eq' → logprob: -0.7786355018615723
    2. '1' → logprob: -1.0286355018615723
    3. 'eq' → logprob: -2.1536355018615723
    4. ' ' → logprob: -3.2786355018615723
    5. '\n' → logprob: -4.153635501861572
    6. '0' → logprob: -6.028635501861572
    7. '`' → logprob: -6.028635501861572
    8. '(eq' → logprob: -6.653635501861572
    9. ' (' → logprob: -7.028635501861572
    10. ' \' → logprob: -7.028635501861572

Token 844: ' of' (ID: 328)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9423344731330872
    2. '-' → logprob: -1.5673344135284424
    3. ' of' → logprob: -1.5673344135284424
    4. 'of' → logprob: -1.8173344135284424
    5. '(' → logprob: -4.3173346519470215
    6. '+' → logprob: -5.1923346519470215
    7. ' -' → logprob: -5.5673346519470215
    8. ' (' → logprob: -5.6923346519470215
    9. ')' → logprob: -6.8173346519470215
    10. '`' → logprob: -7.3173346519470215

Token 845: ' zeros' (ID: 42274)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.005229017697274685
    2. '(eq' → logprob: -5.7552289962768555
    3. ' eq' → logprob: -6.2552289962768555
    4. 'times' → logprob: -10.380228996276855
    5. '1' → logprob: -10.630228996276855
    6. '(' → logprob: -10.880228996276855
    7. 'zeros' → logprob: -11.130228996276855
    8. 'equal' → logprob: -11.255228996276855
    9. 'zero' → logprob: -12.380228996276855
    10. 'equ' → logprob: -12.380228996276855

Token 846: ' encountered' (ID: 41065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027616648003458977
    2. '+' → logprob: -5.277616500854492
    3. '
' → logprob: -5.277616500854492
    4. ' +' → logprob: -5.402616500854492
    5. ' -' → logprob: -5.902616500854492
    6. ' )' → logprob: -6.027616500854492
    7. '   ' → logprob: -6.152616500854492
    8. '-' → logprob: -6.152616500854492
    9. ')
' → logprob: -6.777616500854492
    10. '       ' → logprob: -8.152616500854492

Token 847: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6292263865470886
    2. '+' → logprob: -2.1292264461517334
    3. '-' → logprob: -2.3792264461517334
    4. ' -' → logprob: -2.5042264461517334
    5. '   ' → logprob: -3.0042264461517334
    6. ' +' → logprob: -3.1292264461517334
    7. '       ' → logprob: -3.6292264461517334
    8. '
' → logprob: -3.7542264461517334
    9. '```' → logprob: -4.629226207733154
    10. ')
' → logprob: -4.879226207733154

Token 848: ' as' (ID: 472)
  Prédit: ' eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eq' → logprob: -0.6038546562194824
    2. 'eq' → logprob: -1.2288546562194824
    3. ')' → logprob: -2.8538546562194824
    4. '       ' → logprob: -2.9788546562194824
    5. '
' → logprob: -4.478854656219482
    6. '1' → logprob: -4.728854656219482
    7. '(eq' → logprob: -5.103854656219482
    8. ')
' → logprob: -5.478854656219482
    9. ' +' → logprob: -5.478854656219482
    10. '   ' → logprob: -5.603854656219482

Token 849: ' those' (ID: 2617)
  Prédit: ' eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eq' → logprob: -0.6740110516548157
    2. '1' → logprob: -2.049010992050171
    3. '       ' → logprob: -2.549010992050171
    4. 'eq' → logprob: -2.674010992050171
    5. ' (' → logprob: -3.674010992050171
    6. ')' → logprob: -3.674010992050171
    7. '           ' → logprob: -3.799010992050171
    8. ' rest' → logprob: -3.799010992050171
    9. ' ' → logprob: -3.799010992050171
    10. '(eq' → logprob: -3.799010992050171

Token 850: ' don't' (ID: 4128)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6109224557876587
    2. '+' → logprob: -1.8609224557876587
    3. '#' → logprob: -2.485922336578369
    4. ' would' → logprob: -4.235922336578369
    5. ' are' → logprob: -4.235922336578369
    6. ' +' → logprob: -4.235922336578369
    7. 'would' → logprob: -4.360922336578369
    8. '*' → logprob: -4.485922336578369
    9. '```' → logprob: -4.485922336578369
    10. '   ' → logprob: -4.610922336578369

Token 851: ' change' (ID: 3343)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06001409888267517
    2. '+=' → logprob: -4.060014247894287
    3. ' +=' → logprob: -4.560014247894287
    4. 'increase' → logprob: -4.560014247894287
    5. ')' → logprob: -5.060014247894287
    6. ' +' → logprob: -5.435014247894287
    7. '```' → logprob: -6.310014247894287
    8. 'appear' → logprob: -6.935014247894287
    9. ' add' → logprob: -7.060014247894287
    10. 'add' → logprob: -7.060014247894287

Token 852: ' anything' (ID: 6137)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1525038480758667
    2. ')' → logprob: -1.4025038480758667
    3. '+' → logprob: -1.6525038480758667
    4. '1' → logprob: -2.2775039672851562
    5. ' +' → logprob: -2.7775039672851562
    6. '(' → logprob: -3.4025039672851562
    7. '   ' → logprob: -4.152503967285156
    8. ' ' → logprob: -4.402503967285156
    9. '\n' → logprob: -5.527503967285156
    10. '
' → logprob: -5.902503967285156

Token 853: ' after' (ID: 1934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8478648662567139
    2. '+' → logprob: -1.5978648662567139
    3. '
' → logprob: -1.9728648662567139
    4. '-' → logprob: -2.722864866256714
    5. ')
' → logprob: -2.722864866256714
    6. ' +' → logprob: -3.347864866256714
    7. '       ' → logprob: -3.847864866256714
    8. '   ' → logprob: -4.347865104675293
    9. ' -' → logprob: -4.472865104675293
    10. '```' → logprob: -5.347865104675293

Token 854: ' mod' (ID: 1812)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.045319780707359314
    2. '1' → logprob: -4.420319557189941
    3. ' eq' → logprob: -4.420319557189941
    4. '(eq' → logprob: -4.670319557189941
    5. '
' → logprob: -5.545319557189941
    6. 'last' → logprob: -6.420319557189941
    7. ' (' → logprob: -6.670319557189941
    8. '`' → logprob: -7.170319557189941
    9. '(' → logprob: -7.545319557189941
    10. '(n' → logprob: -7.670319557189941

Token 855: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2915053367614746
    2. '+' → logprob: -1.4165053367614746
    3. '   ' → logprob: -1.4165053367614746
    4. '       ' → logprob: -2.4165053367614746
    5. ' +' → logprob: -3.0415053367614746
    6. '-' → logprob: -3.6665053367614746
    7. ')
' → logprob: -3.9165053367614746
    8. '(n' → logprob: -4.291505336761475
    9. ' -' → logprob: -4.916505336761475
    10. '
' → logprob: -4.916505336761475

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0052306652069092
    2. '+' → logprob: -1.6302306652069092
    3. '
' → logprob: -1.6302306652069092
    4. ' +' → logprob: -2.380230665206909
    5. ')' → logprob: -2.630230665206909
    6. '   ' → logprob: -3.255230665206909
    7. ')
' → logprob: -4.005230903625488
    8. 'print' → logprob: -5.130230903625488
    9. '-' → logprob: -5.380230903625488
    10. ' -' → logprob: -6.255230903625488

Token 857: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7707439661026001
    2. 'print' → logprob: -0.7707439661026001
    3. ')' → logprob: -3.0207438468933105
    4. '+' → logprob: -4.8957438468933105
    5. ' print' → logprob: -5.0207438468933105
    6. '   ' → logprob: -5.6457438468933105
    7. ',' → logprob: -6.0207438468933105
    8. ')
' → logprob: -6.2707438468933105
    9. '
' → logprob: -6.7707438468933105
    10. '```' → logprob: -6.8957438468933105

Token 858: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27578338980674744
    2. 'print' → logprob: -1.9007834196090698
    3. ')' → logprob: -3.2757833003997803
    4. '   ' → logprob: -3.4007833003997803
    5. ' print' → logprob: -4.525783538818359
    6. '
' → logprob: -5.900783538818359
    7. ')
' → logprob: -6.275783538818359
    8. '+' → logprob: -6.525783538818359
    9. '```' → logprob: -7.025783538818359
    10. ' +' → logprob: -7.775783538818359

Token 859: ' (' (ID: 350)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.32627683877944946
    2. ' eq' → logprob: -1.5762767791748047
    3. '(eq' → logprob: -2.8262767791748047
    4. ' (' → logprob: -5.451276779174805
    5. '1' → logprob: -5.701276779174805
    6. 'last' → logprob: -6.451276779174805
    7. '(' → logprob: -7.326276779174805
    8. ' last' → logprob: -7.701276779174805
    9. '       ' → logprob: -8.201276779174805
    10. 'rep' → logprob: -8.326276779174805

Token 860: 'last' (ID: 6684)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.03494032099843025
    2. '(eq' → logprob: -4.159940242767334
    3. ' eq' → logprob: -4.284940242767334
    4. 'last' → logprob: -6.284940242767334
    5. '1' → logprob: -6.784940242767334
    6. 'rep' → logprob: -7.159940242767334
    7. '(' → logprob: -8.534940719604492
    8. '(n' → logprob: -8.784940719604492
    9. ' (' → logprob: -9.034940719604492
    10. ' rep' → logprob: -9.034940719604492

Token 861: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05201440677046776
    2. '-' → logprob: -3.4270143508911133
    3. ' +' → logprob: -4.552014350891113
    4. '+' → logprob: -5.427014350891113
    5. ' %' → logprob: -6.427014350891113
    6. '%' → logprob: -6.927014350891113
    7. '==' → logprob: -8.677014350891113
    8. ' ==' → logprob: -8.677014350891113
    9. ')' → logprob: -8.927014350891113
    10. '   ' → logprob: -9.927014350891113

Token 862: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.5690089639974758e-05
    2. ' m' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.000015258789062
    4. ' ' → logprob: -17.625015258789062
    5. '	m' → logprob: -18.875015258789062
    6. '       ' → logprob: -19.625015258789062
    7. '           ' → logprob: -19.625015258789062
    8. ' ' → logprob: -19.750015258789062
    9. '`' → logprob: -19.875015258789062
    10. '  ' → logprob: -19.875015258789062

Token 863: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006966728251427412
    2. '+' → logprob: -5.256966590881348
    3. '))' → logprob: -7.256966590881348
    4. ')*' → logprob: -7.881966590881348
    5. ')))' → logprob: -8.381966590881348
    6. ' +' → logprob: -8.756966590881348
    7. ' )' → logprob: -9.881966590881348
    8. '   ' → logprob: -10.006966590881348
    9. '-' → logprob: -10.506966590881348
    10. '*' → logprob: -10.631966590881348

Token 864: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08420617878437042
    2. '(x' → logprob: -2.5842061042785645
    3. ' x' → logprob: -5.8342061042785645
    4. ' (' → logprob: -7.0842061042785645
    5. '((' → logprob: -7.0842061042785645
    6. 'last' → logprob: -7.8342061042785645
    7. '(' → logprob: -8.834206581115723
    8. '   ' → logprob: -9.834206581115723
    9. '(last' → logprob: -9.959206581115723
    10. '1' → logprob: -11.084206581115723

Token 865: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09324243664741516
    2. ' %' → logprob: -2.9682424068450928
    3. '%' → logprob: -4.468242645263672
    4. ' //' → logprob: -5.343242645263672
    5. '))' → logprob: -5.468242645263672
    6. ' )' → logprob: -5.593242645263672
    7. '```' → logprob: -6.593242645263672
    8. ')))' → logprob: -6.718242645263672
    9. ')%' → logprob: -6.843242645263672
    10. ' +' → logprob: -6.968242645263672

Token 866: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004905993700958788
    2. ' m' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.250490188598633
    4. ' ' → logprob: -14.500490188598633
    5. '  ' → logprob: -16.000490188598633
    6. '```' → logprob: -16.125490188598633
    7. '    ' → logprob: -16.375490188598633
    8. '	m' → logprob: -16.500490188598633
    9. '`' → logprob: -17.000490188598633
    10. ' ' → logprob: -17.750490188598633

Token 867: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004339210223406553
    2. '))' → logprob: -6.004339218139648
    3. ' )' → logprob: -7.379339218139648
    4. ')))' → logprob: -8.004339218139648
    5. '   ' → logprob: -8.379339218139648
    6. ')
' → logprob: -8.504339218139648
    7. ')`' → logprob: -9.004339218139648
    8. '+' → logprob: -9.254339218139648
    9. '       ' → logprob: -9.629339218139648
    10. '),' → logprob: -10.379339218139648

Token 868: ' for' (ID: 395)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1726328283548355
    2. ' last' → logprob: -2.797632932662964
    3. '(last' → logprob: -3.172632932662964
    4. '(n' → logprob: -3.922632932662964
    5. ' rep' → logprob: -4.422632694244385
    6. '(rep' → logprob: -5.047632694244385
    7. ' ((' → logprob: -5.547632694244385
    8. '(' → logprob: -5.672632694244385
    9. ')' → logprob: -6.172632694244385
    10. 'last' → logprob: -6.172632694244385

Token 869: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8347698450088501
    2. '1' → logprob: -1.58476984500885
    3. '(last' → logprob: -1.70976984500885
    4. '(n' → logprob: -2.7097697257995605
    5. ' ((' → logprob: -3.7097697257995605
    6. '(rep' → logprob: -3.9597697257995605
    7. '(' → logprob: -4.0847697257995605
    8. ' last' → logprob: -4.3347697257995605
    9. '(m' → logprob: -4.7097697257995605
    10. 'last' → logprob: -4.9597697257995605

Token 870: ' starting' (ID: 8601)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.5003656148910522
    2. '\n' → logprob: -1.7503656148910522
    3. ''' → logprob: -2.625365734100342
    4. 'mod' → logprob: -2.875365734100342
    5. '"' → logprob: -3.000365734100342
    6. ')' → logprob: -3.125365734100342
    7. ' ' → logprob: -3.375365734100342
    8. '```' → logprob: -3.375365734100342
    9. ' remainder' → logprob: -3.500365734100342
    10. '   ' → logprob: -3.500365734100342

Token 871: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.1337711811065674
    2. 'value' → logprob: -1.2587711811065674
    3. ')' → logprob: -1.5087711811065674
    4. ' )' → logprob: -2.8837711811065674
    5. ' +' → logprob: -3.8837711811065674
    6. '   ' → logprob: -3.8837711811065674
    7. '+' → logprob: -4.383770942687988
    8. ' last' → logprob: -4.633770942687988
    9. ' ' → logprob: -4.883770942687988
    10. '```' → logprob: -5.383770942687988

Token 872: ' x' (ID: 1215)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2356356382369995
    2. ')' → logprob: -1.4856356382369995
    3. '       ' → logprob: -2.360635757446289
    4. '+' → logprob: -2.360635757446289
    5. '   ' → logprob: -2.735635757446289
    6. ' -' → logprob: -2.735635757446289
    7. '```' → logprob: -2.735635757446289
    8. '-' → logprob: -3.985635757446289
    9. ' )' → logprob: -4.235635757446289
    10. ' *' → logprob: -4.735635757446289

Token 873: ' and' (ID: 326)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0614105463027954
    2. ' +' → logprob: -1.6864105463027954
    3. '   ' → logprob: -2.061410427093506
    4. '-' → logprob: -2.311410427093506
    5. '+' → logprob: -2.561410427093506
    6. ')' → logprob: -2.811410427093506
    7. '       ' → logprob: -3.561410427093506
    8. ' ' → logprob: -4.811410427093506
    9. ' *' → logprob: -4.811410427093506
    10. '    ' → logprob: -4.936410427093506

Token 874: ' end' (ID: 1268)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.09065113216638565
    2. ' last' → logprob: -2.590651035308838
    3. '(last' → logprob: -4.465651035308838
    4. ' (' → logprob: -9.090651512145996
    5. ' x' → logprob: -10.590651512145996
    6. 'x' → logprob: -10.965651512145996
    7. '(x' → logprob: -11.590651512145996
    8. '(' → logprob: -11.840651512145996
    9. 'final' → logprob: -12.215651512145996
    10. '       ' → logprob: -12.340651512145996

Token 875: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.1882849931716919
    2. ' value' → logprob: -2.4382848739624023
    3. '   ' → logprob: -3.3132848739624023
    4. '_value' → logprob: -4.563284873962402
    5. ')' → logprob: -4.938284873962402
    6. ' //' → logprob: -5.063284873962402
    7. ' ' → logprob: -5.438284873962402
    8. ' -' → logprob: -5.438284873962402
    9. 'result' → logprob: -5.563284873962402
    10. '//' → logprob: -5.813284873962402

Token 876: ' last' (ID: 2174)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0300930738449097
    2. '```' → logprob: -1.2800930738449097
    3. '//' → logprob: -1.6550930738449097
    4. ' %' → logprob: -2.655093193054199
    5. '`' → logprob: -3.030093193054199
    6. ')' → logprob: -4.155093193054199
    7. '%' → logprob: -4.780093193054199
    8. ',' → logprob: -5.280093193054199
    9. '   ' → logprob: -5.655093193054199
    10. ' *' → logprob: -5.905093193054199

Token 877: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4479435682296753
    2. ':' → logprob: -1.4479435682296753
    3. '):' → logprob: -3.572943687438965
    4. '+' → logprob: -3.697943687438965
    5. ')' → logprob: -3.697943687438965
    6. '   ' → logprob: -4.822943687438965
    7. '):
' → logprob: -5.197943687438965
    8. ':
' → logprob: -5.447943687438965
    9. '```' → logprob: -5.697943687438965
    10. ' +' → logprob: -5.697943687438965

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9703265428543091
    2. '1' → logprob: -1.220326542854309
    3. ')' → logprob: -1.720326542854309
    4. '   ' → logprob: -3.5953264236450195
    5. ')
' → logprob: -3.8453264236450195
    6. '```' → logprob: -3.8453264236450195
    7. '
' → logprob: -4.7203264236450195
    8. '\n' → logprob: -4.7203264236450195
    9. '           ' → logprob: -4.8453264236450195
    10. '`' → logprob: -5.2203264236450195

Token 879: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.355452060699463
    2. '       ' → logprob: -1.605452060699463
    3. ')' → logprob: -2.230452060699463
    4. '+' → logprob: -2.230452060699463
    5. '```' → logprob: -2.855452060699463
    6. '   ' → logprob: -2.980452060699463
    7. '           ' → logprob: -3.105452060699463
    8. '-' → logprob: -3.480452060699463
    9. ' +' → logprob: -3.480452060699463
    10. '`' → logprob: -3.855452060699463

Token 880: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5903581380844116
    2. ')' → logprob: -1.7153581380844116
    3. '           ' → logprob: -1.8403581380844116
    4. '+' → logprob: -3.715358257293701
    5. '#' → logprob: -4.465358257293701
    6. ' (' → logprob: -4.465358257293701
    7. '               ' → logprob: -4.590358257293701
    8. '   ' → logprob: -4.840358257293701
    9. '
' → logprob: -5.215358257293701
    10. '          ' → logprob: -5.215358257293701

Token 881: ' counting' (ID: 43276)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22997461259365082
    2. '1' → logprob: -2.6049745082855225
    3. '           ' → logprob: -3.3549745082855225
    4. '   ' → logprob: -3.4799745082855225
    5. '       ' → logprob: -3.7299745082855225
    6. ' ' → logprob: -4.604974746704102
    7. '#' → logprob: -5.604974746704102
    8. ')
' → logprob: -5.604974746704102
    9. '          ' → logprob: -5.854974746704102
    10. '    ' → logprob: -6.104974746704102

Token 882: ' by' (ID: 656)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6378884315490723
    2. ' (' → logprob: -2.0128884315490723
    3. ')' → logprob: -2.1378884315490723
    4. ' ' → logprob: -2.2628884315490723
    5. '(' → logprob: -3.1378884315490723
    6. '(n' → logprob: -4.262888431549072
    7. '(last' → logprob: -4.387888431549072
    8. ' )' → logprob: -4.512888431549072
    9. ' last' → logprob: -4.762888431549072
    10. ' ((' → logprob: -5.137888431549072

Token 883: ' how' (ID: 1495)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3492407202720642
    2. '(last' → logprob: -2.099240779876709
    3. '1' → logprob: -3.099240779876709
    4. 'last' → logprob: -3.599240779876709
    5. ' ((' → logprob: -3.849240779876709
    6. ' last' → logprob: -3.974240779876709
    7. '(m' → logprob: -4.349240779876709
    8. '(' → logprob: -4.599240779876709
    9. '((' → logprob: -4.599240779876709
    10. '"' → logprob: -4.849240779876709

Token 884: ' many' (ID: 1991)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40462708473205566
    2. ' m' → logprob: -1.6546270847320557
    3. '    ' → logprob: -3.6546270847320557
    4. ' ' → logprob: -3.6546270847320557
    5. '   ' → logprob: -3.6546270847320557
    6. '```' → logprob: -3.7796270847320557
    7. 'm' → logprob: -4.404626846313477
    8. ' +' → logprob: -5.279626846313477
    9. '`' → logprob: -5.404626846313477
    10. '+' → logprob: -6.029626846313477

Token 885: ' multiples' (ID: 70720)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6108772158622742
    2. 'm' → logprob: -1.985877275466919
    3. ' (' → logprob: -2.235877275466919
    4. ' m' → logprob: -2.610877275466919
    5. '(m' → logprob: -3.110877275466919
    6. '(' → logprob: -3.610877275466919
    7. ' ' → logprob: -3.860877275466919
    8. '```' → logprob: -4.86087703704834
    9. ' times' → logprob: -4.98587703704834
    10. 'times' → logprob: -5.11087703704834

Token 886: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3952127993106842
    2. 'of' → logprob: -1.1452127695083618
    3. '_of' → logprob: -5.145212650299072
    4. '```' → logprob: -7.270212650299072
    5. '`' → logprob: -7.520212650299072
    6. '   ' → logprob: -8.02021312713623
    7. '_' → logprob: -8.27021312713623
    8. '=' → logprob: -8.64521312713623
    9. '#' → logprob: -9.27021312713623
    10. ' _' → logprob: -9.64521312713623

Token 887: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.038042180240154266
    2. ' m' → logprob: -3.2880420684814453
    3. '`' → logprob: -15.038042068481445
    4. ' ' → logprob: -16.038042068481445
    5. ' ' → logprob: -16.163042068481445
    6. '```' → logprob: -16.538042068481445
    7. '	m' → logprob: -17.288042068481445
    8. ' `' → logprob: -17.913042068481445
    9. '100' → logprob: -18.038042068481445
    10. 'mod' → logprob: -18.913042068481445

Token 888: ' were' (ID: 1504)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.5262182950973511
    2. ' were' → logprob: -1.776218295097351
    3. 'have' → logprob: -2.2762184143066406
    4. 'were' → logprob: -3.0262184143066406
    5. ' are' → logprob: -3.4012184143066406
    6. ')' → logprob: -3.6512184143066406
    7. 'are' → logprob: -4.276218414306641
    8. '```' → logprob: -5.651218414306641
    9. ' ' → logprob: -6.526218414306641
    10. '   ' → logprob: -6.526218414306641

Token 889: ' passed' (ID: 10292)
  Prédit: ' crossed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crossed' → logprob: -0.07540969550609589
    2. 'cross' → logprob: -3.0754096508026123
    3. 'passed' → logprob: -4.325409889221191
    4. ' passed' → logprob: -4.950409889221191
    5. ' cross' → logprob: -6.075409889221191
    6. '```' → logprob: -6.825409889221191
    7. ' surpassed' → logprob: -7.325409889221191
    8. 'sub' → logprob: -8.075409889221191
    9. 'div' → logprob: -8.200409889221191
    10. 'added' → logprob: -8.200409889221191

Token 890: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1898340880870819
    2. '
' → logprob: -2.5648341178894043
    3. ')' → logprob: -2.6898341178894043
    4. ')
' → logprob: -4.689834117889404
    5. '   ' → logprob: -5.439834117889404
    6. 'print' → logprob: -5.689834117889404
    7. '+' → logprob: -6.064834117889404
    8. '\n' → logprob: -6.689834117889404
    9. '        
' → logprob: -7.189834117889404
    10. '+
' → logprob: -7.314834117889404

Token 891: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10929770022630692
    2. ')' → logprob: -3.359297752380371
    3. 'print' → logprob: -3.609297752380371
    4. '
' → logprob: -3.984297752380371
    5. '   ' → logprob: -4.609297752380371
    6. '+' → logprob: -5.859297752380371
    7. ')
' → logprob: -5.859297752380371
    8. ' print' → logprob: -6.484297752380371
    9. '<|end|>' → logprob: -7.609297752380371
    10. ':' → logprob: -7.859297752380371

Token 892: ' total' (ID: 3609)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.14773212373256683
    2. 'm' → logprob: -3.2727320194244385
    3. '"' → logprob: -3.7727320194244385
    4. '\n' → logprob: -3.8977320194244385
    5. ')' → logprob: -4.272732257843018
    6. ' last' → logprob: -4.522732257843018
    7. ' ' → logprob: -5.272732257843018
    8. '`' → logprob: -5.397732257843018
    9. ' \' → logprob: -5.647732257843018
    10. ''' → logprob: -5.647732257843018

Token 893: ' process' (ID: 2273)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4322749972343445
    2. '       ' → logprob: -1.0572750568389893
    3. '
' → logprob: -6.43227481842041
    4. ')' → logprob: -6.93227481842041
    5. ' print' → logprob: -7.93227481842041
    6. ')
' → logprob: -8.30727481842041
    7. '   ' → logprob: -9.18227481842041
    8. '```' → logprob: -9.55727481842041
    9. '        
' → logprob: -9.93227481842041
    10. '()' → logprob: -10.55727481842041

Token 894: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5762855410575867
    2. 'print' → logprob: -0.8262855410575867
    3. ' print' → logprob: -8.326285362243652
    4. '   ' → logprob: -10.701285362243652
    5. '()' → logprob: -11.451285362243652
    6. ',' → logprob: -11.451285362243652
    7. '```' → logprob: -11.701285362243652
    8. ')' → logprob: -11.951285362243652
    9. 'return' → logprob: -12.076285362243652
    10. '
' → logprob: -12.076285362243652

Token 895: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5036333203315735
    2. 'print' → logprob: -1.0036332607269287
    3. '   ' → logprob: -4.003633499145508
    4. ')' → logprob: -5.128633499145508
    5. ' print' → logprob: -6.253633499145508
    6. '```' → logprob: -7.003633499145508
    7. '
' → logprob: -7.128633499145508
    8. ',' → logprob: -7.753633499145508
    9. '        
' → logprob: -8.878633499145508
    10. ')
' → logprob: -9.003633499145508

Token 896: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19669455289840698
    2. 'return' → logprob: -2.6966946125030518
    3. '   ' → logprob: -2.9466946125030518
    4. '       ' → logprob: -3.3216946125030518
    5. '
' → logprob: -4.696694374084473
    6. ')' → logprob: -5.071694374084473
    7. ' return' → logprob: -5.696694374084473
    8. ' print' → logprob: -6.696694374084473
    9. '```' → logprob: -7.446694374084473
    10. ')
' → logprob: -7.696694374084473

Token 897: ' The' (ID: 623)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02828923426568508
    2. '   ' → logprob: -4.028289318084717
    3. ')' → logprob: -5.278289318084717
    4. ' print' → logprob: -5.653289318084717
    5. 'return' → logprob: -7.403289318084717
    6. '```' → logprob: -8.278288841247559
    7. '=' → logprob: -8.653288841247559
    8. '       ' → logprob: -9.653288841247559
    9. '
' → logprob: -9.903288841247559
    10. ' return' → logprob: -10.028288841247559

Token 898: ' resulting' (ID: 20547)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6078654527664185
    2. ')' → logprob: -1.8578654527664185
    3. '   ' → logprob: -1.8578654527664185
    4. '       ' → logprob: -1.9828654527664185
    5. '=' → logprob: -2.107865333557129
    6. 'print' → logprob: -2.857865333557129
    7. ':' → logprob: -3.232865333557129
    8. ' result' → logprob: -4.107865333557129
    9. 'answer' → logprob: -4.482865333557129
    10. ' print' → logprob: -4.607865333557129

Token 899: ' formula' (ID: 20690)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9335634112358093
    2. ' =' → logprob: -1.808563470840454
    3. 'result' → logprob: -2.308563470840454
    4. 'print' → logprob: -2.433563470840454
    5. ' result' → logprob: -2.558563470840454
    6. ')' → logprob: -2.933563470840454
    7. 'answer' → logprob: -3.058563470840454
    8. ' answer' → logprob: -4.058563232421875
    9. ' print' → logprob: -4.433563232421875
    10. 'return' → logprob: -4.558563232421875

Token 900: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011113251559436321
    2. ' =' → logprob: -4.511113166809082
    3. ')' → logprob: -10.261113166809082
    4. '   ' → logprob: -11.136113166809082
    5. '=
' → logprob: -11.636113166809082
    6. ':' → logprob: -13.136113166809082
    7. ')=' → logprob: -13.886113166809082
    8. ' is' → logprob: -14.261113166809082
    9. ',' → logprob: -14.386113166809082
    10. ' =
' → logprob: -14.511113166809082

Token 901: ' the' (ID: 290)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.806792676448822
    2. ' (' → logprob: -1.6817927360534668
    3. 'eq' → logprob: -2.056792736053467
    4. 'print' → logprob: -2.431792736053467
    5. '(eq' → logprob: -2.931792736053467
    6. '       ' → logprob: -3.056792736053467
    7. '   ' → logprob: -5.056792736053467
    8. 'ans' → logprob: -5.056792736053467
    9. '(ans' → logprob: -5.056792736053467
    10. '(' → logprob: -5.056792736053467

Token 902: ' answer' (ID: 6052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5927860140800476
    2. 'print' → logprob: -0.8427860140800476
    3. '(n' → logprob: -5.592785835266113
    4. ')
' → logprob: -6.092785835266113
    5. 'return' → logprob: -6.592785835266113
    6. '+' → logprob: -6.717785835266113
    7. '   ' → logprob: -7.217785835266113
    8. 'last' → logprob: -7.217785835266113
    9. ':' → logprob: -7.467785835266113
    10. '(' → logprob: -7.717785835266113

Token 903: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00870805699378252
    2. '       ' → logprob: -4.8837080001831055
    3. '   ' → logprob: -6.8837080001831055
    4. ' print' → logprob: -9.633708000183105
    5. '```' → logprob: -12.383708000183105
    6. ')' → logprob: -13.133708000183105
    7. ',' → logprob: -13.133708000183105
    8. '           ' → logprob: -14.133708000183105
    9. '=' → logprob: -14.258708000183105
    10. '	print' → logprob: -14.633708000183105

Token 904: ' the' (ID: 290)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4912084341049194
    2. 'print' → logprob: -1.4912084341049194
    3. 'n' → logprob: -1.9912084341049194
    4. ')' → logprob: -2.241208553314209
    5. '(n' → logprob: -2.741208553314209
    6. '```' → logprob: -2.741208553314209
    7. '       ' → logprob: -2.866208553314209
    8. '   ' → logprob: -3.116208553314209
    9. 'each' → logprob: -3.491208553314209
    10. ' q' → logprob: -4.241208553314209

Token 905: ' current' (ID: 2208)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7383759617805481
    2. 'q' → logprob: -1.8633759021759033
    3. '       ' → logprob: -1.8633759021759033
    4. '   ' → logprob: -3.1133759021759033
    5. 'query' → logprob: -3.2383759021759033
    6. '```' → logprob: -3.2383759021759033
    7. 'for' → logprob: -3.4883759021759033
    8. '           ' → logprob: -3.8633759021759033
    9. '               ' → logprob: -4.988376140594482
    10. ')' → logprob: -5.113376140594482

Token 906: ' query' (ID: 5703)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.673908531665802
    2. '\n' → logprob: -0.923908531665802
    3. ')' → logprob: -3.9239084720611572
    4. '):' → logprob: -4.048908710479736
    5. ':
' → logprob: -4.173908710479736
    6. '   ' → logprob: -4.673908710479736
    7. '       ' → logprob: -5.548908710479736
    8. ':\' → logprob: -6.173908710479736
    9. '\t' → logprob: -6.173908710479736
    10. '```' → logprob: -6.548908710479736

Token 907: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763726830482483
    2. 'print' → logprob: -0.8263726830482483
    3. ' print' → logprob: -7.9513726234436035
    4. '```' → logprob: -9.576373100280762
    5. '   ' → logprob: -12.451373100280762
    6. '        
' → logprob: -13.201373100280762
    7. '           ' → logprob: -13.326373100280762
    8. '
' → logprob: -14.076373100280762
    9. '	print' → logprob: -14.326373100280762
    10. ',' → logprob: -14.326373100280762

Token 908: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31444665789604187
    2. '       ' → logprob: -1.3144466876983643
    3. '```' → logprob: -7.064446449279785
    4. ' print' → logprob: -8.064446449279785
    5. '   ' → logprob: -12.189446449279785
    6. '``' → logprob: -12.439446449279785
    7. '           ' → logprob: -13.064446449279785
    8. '        
' → logprob: -13.814446449279785
    9. '
' → logprob: -13.939446449279785
    10. '`' → logprob: -13.939446449279785

Token 909: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16210110485553741
    2. '       ' → logprob: -1.912101149559021
    3. '```' → logprob: -6.5371012687683105
    4. ' print' → logprob: -7.7871012687683105
    5. '``' → logprob: -12.162100791931152
    6. '   ' → logprob: -13.037100791931152
    7. '           ' → logprob: -13.162100791931152
    8. '`' → logprob: -14.412100791931152
    9. '
' → logprob: -14.912100791931152
    10. '        
' → logprob: -15.162100791931152

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3146686851978302
    2. '=' → logprob: -1.3146686553955078
    3. '       ' → logprob: -7.814668655395508
    4. '   ' → logprob: -8.189668655395508
    5. ')' → logprob: -8.314668655395508
    6. ',' → logprob: -8.939668655395508
    7. '    ' → logprob: -8.939668655395508
    8. '[' → logprob: -9.939668655395508
    9. '_' → logprob: -9.939668655395508
    10. '        ' → logprob: -10.314668655395508

Token 911: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2525287866592407
    2. ' (' → logprob: -1.5025287866592407
    3. '   ' → logprob: -7.627528667449951
    4. '       ' → logprob: -9.50252914428711
    5. 'n' → logprob: -10.75252914428711
    6. ' ' → logprob: -11.62752914428711
    7. '    ' → logprob: -13.00252914428711
    8. '     ' → logprob: -13.62752914428711
    9. '((' → logprob: -13.87752914428711
    10. '  ' → logprob: -14.25252914428711

Token 912: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.643152740551159e-05
    2. '(n' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.375036239624023
    4. ' n' → logprob: -14.625036239624023
    5. '       ' → logprob: -18.125036239624023
    6. ')n' → logprob: -18.625036239624023
    7. ' (' → logprob: -18.875036239624023
    8. '           ' → logprob: -19.125036239624023
    9. '	n' → logprob: -19.375036239624023
    10. '_n' → logprob: -19.375036239624023

Token 913: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03841691091656685
    2. '-' → logprob: -3.288416862487793
    3. ')' → logprob: -8.163416862487793
    4. '   ' → logprob: -10.038416862487793
    5. ' ' → logprob: -10.913416862487793
    6. '```' → logprob: -11.788416862487793
    7. '    ' → logprob: -12.163416862487793
    8. '[' → logprob: -12.413416862487793
    9. '        ' → logprob: -13.163416862487793
    10. '       ' → logprob: -13.538416862487793

Token 914: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015070053050294518
    2. ' ' → logprob: -6.626506805419922
    3. '   ' → logprob: -8.626506805419922
    4. '       ' → logprob: -14.126506805419922
    5. '```' → logprob: -14.501506805419922
    6. '  ' → logprob: -16.251506805419922
    7. '    ' → logprob: -16.376506805419922
    8. '`' → logprob: -16.626506805419922
    9. '<|end|>' → logprob: -16.626506805419922
    10. '           ' → logprob: -16.876506805419922

Token 915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '```' → logprob: -16.875003814697266
    5. '
' → logprob: -18.875003814697266
    6. '`' → logprob: -19.000003814697266
    7. '       ' → logprob: -20.250003814697266
    8. '۱' → logprob: -20.250003814697266
    9. '<|end|>' → logprob: -20.625003814697266
    10. '           ' → logprob: -20.875003814697266

Token 916: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20523788034915924
    2. '-' → logprob: -1.705237865447998
    3. ')' → logprob: -5.580237865447998
    4. '   ' → logprob: -10.205238342285156
    5. ' ' → logprob: -13.330238342285156
    6. '
' → logprob: -13.330238342285156
    7. '    ' → logprob: -13.705238342285156
    8. ')-' → logprob: -13.830238342285156
    9. '       ' → logprob: -14.330238342285156
    10. ' ' → logprob: -14.580238342285156

Token 917: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759576559066772
    2. '-' → logprob: -0.8259576559066772
    3. '   ' → logprob: -11.950957298278809
    4. '<|end|>' → logprob: -12.700957298278809
    5. ' ' → logprob: -13.325957298278809
    6. '```' → logprob: -14.075957298278809
    7. ' ' → logprob: -14.450957298278809
    8. '-ex' → logprob: -14.450957298278809
    9. '  ' → logprob: -14.700957298278809
    10. '    ' → logprob: -14.825957298278809

Token 918: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -1.6405310816480778e-05
    2. ' eq' → logprob: -11.500016212463379
    3. '(eq' → logprob: -12.000016212463379
    4. 'equ' → logprob: -19.250017166137695
    5. '   ' → logprob: -19.500017166137695
    6. 'ans' → logprob: -20.000017166137695
    7. '           ' → logprob: -20.875017166137695
    8. '(' → logprob: -21.000017166137695
    9. 'eg' → logprob: -21.375017166137695
    10. '_eq' → logprob: -21.500017166137695

Token 919: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7816371917724609
    2. '+' → logprob: -1.281637191772461
    3. ' -' → logprob: -1.781637191772461
    4. '-' → logprob: -3.031637191772461
    5. '```' → logprob: -3.656637191772461
    6. '       ' → logprob: -4.406637191772461
    7. '<|end|>' → logprob: -5.531637191772461
    8. '   ' → logprob: -6.031637191772461
    9. '        ' → logprob: -7.031637191772461
    10. '+
' → logprob: -7.406637191772461

Token 920: ' (' (ID: 350)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.011189291253685951
    2. '((' → logprob: -4.5111894607543945
    3. ' (' → logprob: -9.011189460754395
    4. '(max' → logprob: -11.386189460754395
    5. '(' → logprob: -13.136189460754395
    6. '(abs' → logprob: -13.136189460754395
    7. ' ((' → logprob: -13.386189460754395
    8. '   ' → logprob: -13.511189460754395
    9. '(lat' → logprob: -14.511189460754395
    10. '(left' → logprob: -15.386189460754395

Token 921: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0025512888096272945
    2. '(last' → logprob: -6.002551078796387
    3. ' last' → logprob: -9.502551078796387
    4. '[last' → logprob: -14.252551078796387
    5. '   ' → logprob: -15.752551078796387
    6. ' (' → logprob: -17.002552032470703
    7. ',last' → logprob: -17.127552032470703
    8. 'las' → logprob: -17.252552032470703
    9. '	last' → logprob: -17.502552032470703
    10. '(' → logprob: -18.377552032470703

Token 922: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2259203940629959
    2. ' //' → logprob: -1.6009204387664795
    3. '```' → logprob: -8.475920677185059
    4. '`' → logprob: -8.725920677185059
    5. ')' → logprob: -9.975920677185059
    6. '   ' → logprob: -10.600920677185059
    7. ' ' → logprob: -10.725920677185059
    8. ' ' → logprob: -11.475920677185059
    9. ')//' → logprob: -12.475920677185059
    10. '
' → logprob: -12.600920677185059

Token 923: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.1008713702030946e-06
    2. ' m' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '	m' → logprob: -21.750001907348633
    5. ')m' → logprob: -22.125001907348633
    6. '```' → logprob: -22.500001907348633
    7. ' ' → logprob: -22.750001907348633
    8. '$m' → logprob: -23.375001907348633
    9. '    ' → logprob: -23.750001907348633
    10. '
' → logprob: -23.875001907348633

Token 924: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8509172201156616
    2. '+' → logprob: -0.9759172201156616
    3. ' -' → logprob: -1.8509172201156616
    4. ' +' → logprob: -3.850917339324951
    5. ')' → logprob: -4.100917339324951
    6. ')+' → logprob: -7.475917339324951
    7. ' ' → logprob: -8.225916862487793
    8. '   ' → logprob: -8.725916862487793
    9. '```' → logprob: -10.100916862487793
    10. '    ' → logprob: -10.350916862487793

Token 925: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00028982185176573694
    2. ' x' → logprob: -8.375289916992188
    3. '(x' → logprob: -9.750289916992188
    4. '   ' → logprob: -14.125289916992188
    5. '```' → logprob: -16.375289916992188
    6. '	x' → logprob: -16.750289916992188
    7. ')x' → logprob: -17.375289916992188
    8. ' (' → logprob: -17.500289916992188
    9. '{x' → logprob: -18.000289916992188
    10. ' ' → logprob: -18.000289916992188

Token 926: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.002819731831550598
    2. '```' → logprob: -6.252819538116455
    3. ' //' → logprob: -7.127819538116455
    4. '`' → logprob: -9.752820014953613
    5. '//=' → logprob: -12.377820014953613
    6. '<|end|>' → logprob: -12.377820014953613
    7. '://' → logprob: -12.752820014953613
    8. ')//' → logprob: -12.877820014953613
    9. '<|end|>' → logprob: -13.002820014953613
    10. '">//' → logprob: -13.127820014953613

Token 927: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1472419600977446e-06
    2. ' m' → logprob: -13.750000953674316
    3. ')m' → logprob: -19.875001907348633
    4. ' ' → logprob: -20.375001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '	m' → logprob: -20.625001907348633
    7. '```' → logprob: -20.750001907348633
    8. 'м' → logprob: -21.375001907348633
    9. ')' → logprob: -22.250001907348633
    10. '`' → logprob: -22.625001907348633

Token 928: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.910643762443215e-05
    2. ')
' → logprob: -9.625079154968262
    3. ' )' → logprob: -12.500079154968262
    4. '       ' → logprob: -12.750079154968262
    5. '   ' → logprob: -12.750079154968262
    6. ')`' → logprob: -13.375079154968262
    7. ')return' → logprob: -14.875079154968262
    8. ')**' → logprob: -15.000079154968262
    9. ')*' → logprob: -15.250079154968262
    10. ')#' → logprob: -15.875079154968262

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08987301588058472
    2. 'print' → logprob: -2.4648730754852295
    3. '   ' → logprob: -7.58987283706665
    4. '```' → logprob: -8.839873313903809
    5. '        
' → logprob: -8.964873313903809
    6. ' print' → logprob: -9.714873313903809
    7. '
' → logprob: -10.339873313903809
    8. '`' → logprob: -10.964873313903809
    9. '\' → logprob: -11.589873313903809
    10. '    
' → logprob: -11.714873313903809

Token 930: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07904478162527084
    2. '       ' → logprob: -2.579044818878174
    3. '```' → logprob: -9.204044342041016
    4. ' print' → logprob: -9.954044342041016
    5. '   ' → logprob: -12.829044342041016
    6. '
' → logprob: -12.829044342041016
    7. '        
' → logprob: -14.579044342041016
    8. '	print' → logprob: -14.829044342041016
    9. '``' → logprob: -15.579044342041016
    10. '`' → logprob: -16.079044342041016

Token 931: ' yield' (ID: 14376)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3306015716807451e-05
    2. '       ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. ' print' → logprob: -16.75001335144043
    5. '```' → logprob: -17.75001335144043
    6. '           ' → logprob: -21.25001335144043
    7. '``' → logprob: -21.25001335144043
    8. '	print' → logprob: -22.87501335144043
    9. '
' → logprob: -24.12501335144043
    10. '        
' → logprob: -25.00001335144043

Token 932: ' allows' (ID: 7927)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018397033214569092
    2. ' ans' → logprob: -4.268396854400635
    3. 'yield' → logprob: -6.018396854400635
    4. '(ans' → logprob: -6.893396854400635
    5. '   ' → logprob: -8.268397331237793
    6. 'print' → logprob: -8.643397331237793
    7. '       ' → logprob: -8.768397331237793
    8. '
' → logprob: -9.393397331237793
    9. '	ans' → logprob: -10.893397331237793
    10. 'answer' → logprob: -10.893397331237793

Token 933: ' this' (ID: 495)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0020985144656151533
    2. ' ans' → logprob: -6.377098560333252
    3. '(ans' → logprob: -8.502098083496094
    4. '   ' → logprob: -9.877098083496094
    5. '       ' → logprob: -10.002098083496094
    6. '	ans' → logprob: -10.002098083496094
    7. 'from' → logprob: -10.752098083496094
    8. 'answer' → logprob: -11.502098083496094
    9. '           ' → logprob: -12.002098083496094
    10. 'yield' → logprob: -13.002098083496094

Token 934: ' function' (ID: 1114)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.03804263845086098
    2. 'ans' → logprob: -3.6630425453186035
    3. '(ans' → logprob: -4.7880425453186035
    4. '<|end|>' → logprob: -7.1630425453186035
    5. '	ans' → logprob: -7.4130425453186035
    6. '   ' → logprob: -7.4130425453186035
    7. '       ' → logprob: -7.9130425453186035
    8. 'answer' → logprob: -8.538043022155762
    9. '
' → logprob: -8.788043022155762
    10. '        
' → logprob: -9.163043022155762

Token 935: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03948918357491493
    2. '<|end|>' → logprob: -4.039489269256592
    3. ' ans' → logprob: -4.539489269256592
    4. '(ans' → logprob: -5.039489269256592
    5. '   ' → logprob: -6.164489269256592
    6. '<|end|>' → logprob: -7.914489269256592
    7. ',' → logprob: -8.164488792419434
    8. ' to' → logprob: -8.664488792419434
    9. '        
' → logprob: -8.914488792419434
    10. '           ' → logprob: -9.164488792419434

Token 936: ' be' (ID: 413)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.16653233766555786
    2. 'ans' → logprob: -2.041532278060913
    3. 'print' → logprob: -3.916532278060913
    4. 'answer' → logprob: -6.791532516479492
    5. ' yield' → logprob: -7.166532516479492
    6. 'y' → logprob: -7.666532516479492
    7. '(ans' → logprob: -8.541532516479492
    8. 'int' → logprob: -8.541532516479492
    9. '```' → logprob: -9.041532516479492
    10. ' ans' → logprob: -9.166532516479492

Token 937: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0060186185874044895
    2. 'yield' → logprob: -5.75601863861084
    3. 'int' → logprob: -6.38101863861084
    4. 'print' → logprob: -7.75601863861084
    5. '       ' → logprob: -8.00601863861084
    6. ' ans' → logprob: -8.63101863861084
    7. '           ' → logprob: -9.50601863861084
    8. '(ans' → logprob: -9.88101863861084
    9. 'answer' → logprob: -10.25601863861084
    10. '   ' → logprob: -10.63101863861084

Token 938: ' generator' (ID: 23989)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.8021659851074219
    2. '       ' → logprob: -1.3021659851074219
    3. 'ans' → logprob: -2.302165985107422
    4. 'answer' → logprob: -2.677165985107422
    5. '           ' → logprob: -3.927165985107422
    6. 'result' → logprob: -4.177165985107422
    7. '   ' → logprob: -4.177165985107422
    8. ' ans' → logprob: -4.677165985107422
    9. 'value' → logprob: -4.802165985107422
    10. 'return' → logprob: -5.052165985107422

Token 939: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25642499327659607
    2. 'yield' → logprob: -2.006424903869629
    3. '   ' → logprob: -3.131424903869629
    4. '
' → logprob: -4.006424903869629
    5. '        
' → logprob: -4.256424903869629
    6. ' yield' → logprob: -5.131424903869629
    7. '`' → logprob: -6.506424903869629
    8. '    
' → logprob: -6.506424903869629
    9. '```' → logprob: -7.006424903869629
    10. '\n' → logprob: -7.006424903869629

Token 940: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13457344472408295
    2. 'yield' → logprob: -2.634573459625244
    3. ' ans' → logprob: -3.259573459625244
    4. 'ans' → logprob: -5.884573459625244
    5. ' yield' → logprob: -5.884573459625244
    6. '   ' → logprob: -6.134573459625244
    7. '(ans' → logprob: -6.134573459625244
    8. '           ' → logprob: -6.259573459625244
    9. '        
' → logprob: -7.259573459625244
    10. '`' → logprob: -7.259573459625244

Token 941: ' can' (ID: 665)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.3338727355003357
    2. 'yield' → logprob: -1.4588727951049805
    3. '       ' → logprob: -3.0838727951049805
    4. '   ' → logprob: -5.3338727951049805
    5. '	yield' → logprob: -8.83387279510498
    6. ' ' → logprob: -9.20887279510498
    7. ' return' → logprob: -9.45887279510498
    8. ')' → logprob: -9.45887279510498
    9. '           ' → logprob: -9.70887279510498
    10. '    ' → logprob: -9.95887279510498

Token 942: ' iterate' (ID: 63166)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.09551885724067688
    2. ' yield' → logprob: -2.9705188274383545
    3. '       ' → logprob: -4.095519065856934
    4. 'print' → logprob: -4.720519065856934
    5. '           ' → logprob: -4.970519065856934
    6. 'return' → logprob: -5.720519065856934
    7. '```' → logprob: -5.720519065856934
    8. '   ' → logprob: -8.345519065856934
    9. ' return' → logprob: -8.970519065856934
    10. ' print' → logprob: -9.345519065856934

Token 943: ' over' (ID: 1072)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28764715790748596
    2. '       ' → logprob: -2.537647247314453
    3. '(ans' → logprob: -2.537647247314453
    4. 'from' → logprob: -3.037647247314453
    5. ' ans' → logprob: -3.662647247314453
    6. '   ' → logprob: -4.912647247314453
    7. 'yield' → logprob: -5.662647247314453
    8. '	ans' → logprob: -5.787647247314453
    9. ' from' → logprob: -6.412647247314453
    10. '        
' → logprob: -7.162647247314453

Token 944: ' its' (ID: 1617)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0023111922200769186
    2. '(ans' → logprob: -6.2523112297058105
    3. ' ans' → logprob: -8.127310752868652
    4. 'g' → logprob: -10.002310752868652
    5. 'solve' → logprob: -10.502310752868652
    6. '   ' → logprob: -12.127310752868652
    7. '(g' → logprob: -13.252310752868652
    8. 'range' → logprob: -13.877310752868652
    9. 'answer' → logprob: -13.877310752868652
    10. '
' → logprob: -14.502310752868652

Token 945: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.9127175211906433
    2. 'yield' → logprob: -1.162717580795288
    3. 'answers' → logprob: -1.662717580795288
    4. 'values' → logprob: -3.912717580795288
    5. 'outputs' → logprob: -4.162717342376709
    6. ' results' → logprob: -4.287717342376709
    7. ' answers' → logprob: -4.537717342376709
    8. 'ans' → logprob: -4.662717342376709
    9. 'queries' → logprob: -5.412717342376709
    10. ' yield' → logprob: -5.537717342376709

Token 946: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014677218161523342
    2. '   ' → logprob: -5.014677047729492
    3. '        
' → logprob: -5.889677047729492
    4. 'yield' → logprob: -5.889677047729492
    5. '(' → logprob: -7.764677047729492
    6. ' ' → logprob: -8.014677047729492
    7. '```' → logprob: -8.139677047729492
    8. '
' → logprob: -8.639677047729492
    9. '           ' → logprob: -9.014677047729492
    10. ' yield' → logprob: -9.014677047729492

Token 947: ' storing' (ID: 42787)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.4689575433731079
    2. 'print' → logprob: -1.093957543373108
    3. '       ' → logprob: -4.093957424163818
    4. 'return' → logprob: -4.218957424163818
    5. '   ' → logprob: -5.718957424163818
    6. ' yield' → logprob: -6.468957424163818
    7. ' print' → logprob: -6.468957424163818
    8. '     ' → logprob: -8.218957901000977
    9. '```' → logprob: -8.343957901000977
    10. '    ' → logprob: -8.343957901000977

Token 948: ' all' (ID: 722)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03780597448348999
    2. '       ' → logprob: -4.537806034088135
    3. 'yield' → logprob: -4.537806034088135
    4. ' ans' → logprob: -4.912806034088135
    5. '(ans' → logprob: -5.662806034088135
    6. '   ' → logprob: -5.912806034088135
    7. 'answer' → logprob: -7.537806034088135
    8. '	ans' → logprob: -7.537806034088135
    9. 'next' → logprob: -7.912806034088135
    10. '           ' → logprob: -8.787805557250977

Token 949: ' at' (ID: 540)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3660814166069031
    2. ' ans' → logprob: -1.8660814762115479
    3. '(ans' → logprob: -2.991081476211548
    4. '()' → logprob: -3.116081476211548
    5. '   ' → logprob: -4.366081237792969
    6. '\n' → logprob: -4.616081237792969
    7. '    
' → logprob: -5.241081237792969
    8. 'from' → logprob: -5.241081237792969
    9. 'results' → logprob: -5.741081237792969
    10. ' ' → logprob: -6.116081237792969

Token 950: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.011129883117973804
    2. ' once' → logprob: -4.511129856109619
    3. 'yield' → logprob: -9.511130332946777
    4. '```' → logprob: -13.136130332946777
    5. '_once' → logprob: -13.261130332946777
    6. 'a' → logprob: -13.386130332946777
    7. 'return' → logprob: -13.761130332946777
    8. 'length' → logprob: -14.511130332946777
    9. 'Once' → logprob: -14.761130332946777
    10. 'all' → logprob: -15.636130332946777

Token 951: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04741593450307846
    2. 'yield' → logprob: -3.1724159717559814
    3. '   ' → logprob: -6.047415733337402
    4. ' yield' → logprob: -7.297415733337402
    5. '```' → logprob: -8.422415733337402
    6. '(' → logprob: -8.672415733337402
    7. '           ' → logprob: -8.672415733337402
    8. '`' → logprob: -8.797415733337402
    9. 'print' → logprob: -9.297415733337402
    10. '        
' → logprob: -9.422415733337402

Token 952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057018376886844635
    2. 'yield' → logprob: -3.182018280029297
    3. '   ' → logprob: -5.057018280029297
    4. ' yield' → logprob: -5.682018280029297
    5. '`' → logprob: -6.932018280029297
    6. 'print' → logprob: -7.057018280029297
    7. '
' → logprob: -7.307018280029297
    8. '        
' → logprob: -7.557018280029297
    9. '```' → logprob: -8.432018280029297
    10. '           ' → logprob: -8.932018280029297

Token 953: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.029871977865695953
    2. '       ' → logprob: -3.529871940612793
    3. ' yield' → logprob: -9.529871940612793
    4. '```' → logprob: -11.029871940612793
    5. '   ' → logprob: -11.404871940612793
    6. '	yield' → logprob: -11.404871940612793
    7. '           ' → logprob: -12.154871940612793
    8. 'y' → logprob: -13.029871940612793
    9. '`' → logprob: -13.904871940612793
    10. '        
' → logprob: -14.529871940612793

Token 954: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011748670367524028
    2. ' ans' → logprob: -6.7511749267578125
    3. '(ans' → logprob: -12.376174926757812
    4. '	ans' → logprob: -14.876174926757812
    5. '   ' → logprob: -16.376174926757812
    6. 'answer' → logprob: -16.876174926757812
    7. 'ann' → logprob: -18.751174926757812
    8. '`' → logprob: -18.751174926757812
    9. 'int' → logprob: -18.876174926757812
    10. '_ans' → logprob: -19.251174926757812

Token 955: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.001311544212512672
    2. 'solve' → logprob: -6.751311779022217
    3. ' ' → logprob: -9.626311302185059
    4. ' main' → logprob: -10.251311302185059
    5. '_' → logprob: -11.251311302185059
    6. ' solver' → logprob: -12.126311302185059
    7. ' ' → logprob: -12.501311302185059
    8. '_s' → logprob: -12.626311302185059
    9. ' solution' → logprob: -13.126311302185059
    10. ' s' → logprob: -13.376311302185059

Token 958: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006521515315398574
    2. '():
' → logprob: -7.375652313232422
    3. ' ():' → logprob: -11.375652313232422
    4. '()' → logprob: -11.875652313232422
    5. '():
' → logprob: -13.500652313232422
    6. '```' → logprob: -13.625652313232422
    7. '().' → logprob: -14.000652313232422
    8. '_' → logprob: -14.125652313232422
    9. ':' → logprob: -14.250652313232422
    10. '()>' → logprob: -14.375652313232422

Token 959: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045822251588106155
    2. '```' → logprob: -3.2958221435546875
    3. ' for' → logprob: -4.9208221435546875
    4. '``' → logprob: -8.545822143554688
    5. 'for' → logprob: -9.170822143554688
    6. '    
' → logprob: -9.795822143554688
    7. '    ' → logprob: -10.670822143554688
    8. '       ' → logprob: -10.795822143554688
    9. '[' → logprob: -11.045822143554688
    10. '	for' → logprob: -11.170822143554688

Token 960: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29081666469573975
    2. ' for' → logprob: -1.4158166646957397
    3. '   ' → logprob: -4.915816783905029
    4. '```' → logprob: -6.665816783905029
    5. 'import' → logprob: -7.790816783905029
    6. 'results' → logprob: -7.915816783905029
    7. ' results' → logprob: -9.040816307067871
    8. 'result' → logprob: -10.040816307067871
    9. '    
' → logprob: -10.915816307067871
    10. 'print' → logprob: -11.165816307067871

Token 961: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3975282907485962
    2. '   ' → logprob: -1.6475282907485962
    3. ' for' → logprob: -2.0225281715393066
    4. 'import' → logprob: -6.022528171539307
    5. 'def' → logprob: -7.647528171539307
    6. '```' → logprob: -9.397528648376465
    7. 'result' → logprob: -9.522528648376465
    8. 'print' → logprob: -10.522528648376465
    9. 'from' → logprob: -10.772528648376465
    10. 'results' → logprob: -10.897528648376465

Token 962: ' all' (ID: 722)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20031239092350006
    2. ' ans' → logprob: -2.700312376022339
    3. '_ans' → logprob: -3.200312376022339
    4. '_' → logprob: -3.450312376022339
    5. 'res' → logprob: -4.700312614440918
    6. ' line' → logprob: -5.200312614440918
    7. 'line' → logprob: -5.200312614440918
    8. 'answer' → logprob: -5.325312614440918
    9. 'result' → logprob: -5.950312614440918
    10. ' _' → logprob: -6.200312614440918

Token 963: ' answers' (ID: 14716)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0327858030796051
    2. 'res' → logprob: -3.9077858924865723
    3. ' ans' → logprob: -5.282785892486572
    4. 'result' → logprob: -5.407785892486572
    5. 'answer' → logprob: -6.532785892486572
    6. ' res' → logprob: -7.532785892486572
    7. '(ans' → logprob: -8.907785415649414
    8. 'line' → logprob: -9.157785415649414
    9. ' result' → logprob: -9.282785415649414
    10. '_ans' → logprob: -9.407785415649414

Token 964: ' generated' (ID: 13768)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7460651397705078
    2. ' for' → logprob: -0.8710651397705078
    3. 'for' → logprob: -2.371065139770508
    4. 'in' → logprob: -5.121065139770508
    5. ' ans' → logprob: -5.496065139770508
    6. '   ' → logprob: -5.871065139770508
    7. '(ans' → logprob: -7.996065139770508
    8. '```' → logprob: -8.371065139770508
    9. 'ans' → logprob: -8.871065139770508
    10. 'result' → logprob: -10.246065139770508

Token 965: ' by' (ID: 656)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6624118089675903
    2. 'for' → logprob: -1.1624118089675903
    3. ' in' → logprob: -2.412411689758301
    4. 'ans' → logprob: -3.162411689758301
    5. ' for' → logprob: -3.412411689758301
    6. ' ans' → logprob: -5.912411689758301
    7. '(ans' → logprob: -6.287411689758301
    8. '   ' → logprob: -6.787411689758301
    9. 'answer' → logprob: -7.912411689758301
    10. 'i' → logprob: -8.9124116897583

Token 966: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.028028694912791252
    2. 'ans' → logprob: -4.02802848815918
    3. 'result' → logprob: -5.52802848815918
    4. 'answer' → logprob: -5.65302848815918
    5. 'res' → logprob: -6.15302848815918
    6. ' solve' → logprob: -9.02802848815918
    7. 'sol' → logprob: -10.15302848815918
    8. 'output' → logprob: -11.15302848815918
    9. 'a' → logprob: -11.52802848815918
    10. ' ans' → logprob: -11.65302848815918

Token 967: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8483640551567078
    2. '():' → logprob: -1.3483641147613525
    3. '():
' → logprob: -2.0983641147613525
    4. ' in' → logprob: -2.5983641147613525
    5. 'for' → logprob: -3.0983641147613525
    6. 'in' → logprob: -3.2233641147613525
    7. '(' → logprob: -4.348363876342773
    8. ' for' → logprob: -4.723363876342773
    9. '(ans' → logprob: -6.723363876342773
    10. '   ' → logprob: -6.723363876342773

Token 968: ' print' (ID: 2123)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5857517719268799
    2. 'for' → logprob: -0.8357517719268799
    3. '   ' → logprob: -4.710751533508301
    4. 'print' → logprob: -7.460751533508301
    5. ' print' → logprob: -8.8357515335083
    6. '```' → logprob: -10.0857515335083
    7. '       ' → logprob: -12.8357515335083
    8. '	for' → logprob: -14.5857515335083
    9. '    ' → logprob: -14.9607515335083
    10. 'import' → logprob: -15.7107515335083

Token 969: ' them' (ID: 1373)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.37370386719703674
    2. '()' → logprob: -2.498703956604004
    3. '(next' → logprob: -2.623703956604004
    4. '(*' → logprob: -2.998703956604004
    5. 'next' → logprob: -3.373703956604004
    6. 'ans' → logprob: -3.373703956604004
    7. '(answer' → logprob: -4.498703956604004
    8. '(i' → logprob: -4.873703956604004
    9. 'line' → logprob: -5.873703956604004
    10. '```' → logprob: -5.998703956604004

Token 970: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48793166875839233
    2. '()' → logprob: -1.737931728363037
    3. '   ' → logprob: -2.487931728363037
    4. '(' → logprob: -3.237931728363037
    5. '```' → logprob: -3.362931728363037
    6. '()
' → logprob: -3.487931728363037
    7. '('\' → logprob: -4.987931728363037
    8. ' for' → logprob: -5.362931728363037
    9. '(*' → logprob: -5.987931728363037
    10. '("\' → logprob: -6.362931728363037

Token 971: ' separating' (ID: 91998)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476156949996948
    2. 'end' → logprob: -1.6226156949996948
    3. '```' → logprob: -2.1226158142089844
    4. 'for' → logprob: -2.4976158142089844
    5. '       ' → logprob: -3.1226158142089844
    6. '
' → logprob: -3.2476158142089844
    7. ' 
' → logprob: -4.497615814208984
    8. '    
' → logprob: -5.247615814208984
    9. ' for' → logprob: -5.247615814208984
    10. '*' → logprob: -5.497615814208984

Token 972: ' each' (ID: 2454)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.23149797320365906
    2. '()' → logprob: -2.2314980030059814
    3. 'by' → logprob: -3.1064980030059814
    4. '("\' → logprob: -3.8564980030059814
    5. '('' → logprob: -4.481497764587402
    6. '```' → logprob: -4.856497764587402
    7. 'each' → logprob: -5.106497764587402
    8. 'with' → logprob: -6.481497764587402
    9. 'lines' → logprob: -6.731497764587402
    10. '(' → logprob: -6.856497764587402

Token 973: ' answer' (ID: 6052)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.642041802406311
    2. '()' → logprob: -1.017041802406311
    3. '("\' → logprob: -2.2670416831970215
    4. '()\' → logprob: -5.6420416831970215
    5. '(ans' → logprob: -6.7670416831970215
    6. '('' → logprob: -7.2670416831970215
    7. '()
' → logprob: -7.8920416831970215
    8. 'by' → logprob: -7.8920416831970215
    9. ' by' → logprob: -7.8920416831970215
    10. '(' → logprob: -8.14204216003418

Token 974: ' with' (ID: 483)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5588117241859436
    2. '('\' → logprob: -1.0588116645812988
    3. '("\' → logprob: -3.558811664581299
    4. '()
' → logprob: -4.308811664581299
    5. '(' → logprob: -4.683811664581299
    6. 'for' → logprob: -4.683811664581299
    7. 'def' → logprob: -5.433811664581299
    8. '()\' → logprob: -5.558811664581299
    9. '```' → logprob: -5.933811664581299
    10. '   ' → logprob: -6.058811664581299

Token 975: ' a' (ID: 261)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.06949615478515625
    2. '"\' → logprob: -2.8194961547851562
    3. '\n' → logprob: -5.319496154785156
    4. '
' → logprob: -7.069496154785156
    5. '`
' → logprob: -7.194496154785156
    6. ''
' → logprob: -7.569496154785156
    7. '`\' → logprob: -8.819496154785156
    8. ''' → logprob: -8.819496154785156
    9. '"
' → logprob: -10.569496154785156
    10. '"""
' → logprob: -10.569496154785156

Token 976: ' newline' (ID: 95802)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34054747223854065
    2. 'newline' → logprob: -1.3405474424362183
    3. ' newline' → logprob: -3.840547561645508
    4. '
' → logprob: -5.465547561645508
    5. ''\' → logprob: -7.465547561645508
    6. 'space' → logprob: -8.215547561645508
    7. '"\' → logprob: -9.465547561645508
    8. 'n' → logprob: -9.465547561645508
    9. 'print' → logprob: -9.465547561645508
    10. 'new' → logprob: -9.590547561645508

Token 977: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24222531914710999
    2. ':' → logprob: -1.7422252893447876
    3. '```' → logprob: -3.992225408554077
    4. ':
' → logprob: -4.617225170135498
    5. 'for' → logprob: -5.367225170135498
    6. ' for' → logprob: -5.492225170135498
    7. '():
' → logprob: -6.867225170135498
    8. '
' → logprob: -7.617225170135498
    9. '():' → logprob: -7.742225170135498
    10. 'def' → logprob: -8.617225646972656

Token 978: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013851647265255451
    2. 'for' → logprob: -4.638851642608643
    3. '```' → logprob: -6.138851642608643
    4. ' for' → logprob: -6.263851642608643
    5. '    
' → logprob: -11.0138521194458
    6. '
' → logprob: -12.8888521194458
    7. '	for' → logprob: -13.2638521194458
    8. 'import' → logprob: -13.6388521194458
    9. '``' → logprob: -13.8888521194458
    10. ' ' → logprob: -14.0138521194458

Token 979: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01157870702445507
    2. ' for' → logprob: -4.511578559875488
    3. 'print' (adapté à ' print') → logprob: -7.761578559875488
    4. '   ' → logprob: -9.386578559875488
    5. '```' → logprob: -10.886578559875488
    6. ' print' → logprob: -13.511578559875488
    7. 'import' → logprob: -14.886578559875488
    8. '	for' → logprob: -15.011578559875488
    9. '    
' → logprob: -16.136579513549805
    10. '`' → logprob: -16.886579513549805

Token 980: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.3109454810619354
    2. '(' → logprob: -1.6859455108642578
    3. '('\' → logprob: -3.435945510864258
    4. '()' → logprob: -3.560945510864258
    5. '(*(' → logprob: -4.060945510864258
    6. '("\' → logprob: -5.935945510864258
    7. '(
' → logprob: -7.310945510864258
    8. '('' → logprob: -7.810945510864258
    9. '(*)' → logprob: -8.185945510864258
    10. '("")' → logprob: -9.685945510864258

Token 981: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -7.93448489275761e-05
    2. '(s' → logprob: -9.750079154968262
    3. 'list' → logprob: -11.000079154968262
    4. ' solve' → logprob: -12.750079154968262
    5. 'tuple' → logprob: -14.750079154968262
    6. '(' → logprob: -14.875079154968262
    7. 'map' → logprob: -15.375079154968262
    8. 'solver' → logprob: -16.375080108642578
    9. '.solve' → logprob: -16.625080108642578
    10. 'sol' → logprob: -16.625080108642578

Token 982: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0001446611131541431
    2. '())' → logprob: -9.125144958496094
    3. '()' → logprob: -10.750144958496094
    4. ',' → logprob: -11.875144958496094
    5. 'sep' → logprob: -12.375144958496094
    6. '(' → logprob: -13.500144958496094
    7. 'se' → logprob: -14.750144958496094
    8. '(separator' → logprob: -15.000144958496094
    9. '(se' → logprob: -15.750144958496094
    10. '()),' → logprob: -16.000144958496094

Token 983: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0004331725067459047
    2. ' sep' → logprob: -7.750432968139648
    3. 'se' → logprob: -13.500432968139648
    4. 'separator' → logprob: -14.125432968139648
    5. ' ' → logprob: -15.500432968139648
    6. '   ' → logprob: -15.750432968139648
    7. ''\' → logprob: -18.37543296813965
    8. '```' → logprob: -19.00043296813965
    9. 'Sep' → logprob: -19.12543296813965
    10. 'flush' → logprob: -19.25043296813965

Token 984: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.0032494855113327503
    2. '="\' → logprob: -5.753249645233154
    3. ''\' → logprob: -9.628249168395996
    4. '=' → logprob: -12.628249168395996
    5. '='' → logprob: -14.003249168395996
    6. '"\' → logprob: -14.128249168395996
    7. '=\' → logprob: -14.878249168395996
    8. '=
' → logprob: -15.003249168395996
    9. '="
' → logprob: -15.753249168395996
    10. '('\' → logprob: -16.628250122070312

Token 985: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.07898231595754623
    2. 'n' → logprob: -2.578982353210449
    3. '\' → logprob: -9.32898235321045
    4. ''\' → logprob: -13.45398235321045
    5. 'newline' → logprob: -14.32898235321045
    6. ''n' → logprob: -15.32898235321045
    7. '\
' → logprob: -15.45398235321045
    8. 'nl' → logprob: -15.70398235321045
    9. '\\' → logprob: -15.82898235321045
    10. '"\' → logprob: -15.82898235321045

Token 986: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '')' → logprob: -14.125001907348633
    3. '")' → logprob: -14.875001907348633
    4. '`)' → logprob: -15.250001907348633
    5. '))' → logprob: -16.000001907348633
    6. ')
' → logprob: -16.750001907348633
    7. ' )' → logprob: -17.000001907348633
    8. '())' → logprob: -17.250001907348633
    9. ')`' → logprob: -18.000001907348633
    10. ')")' → logprob: -18.625001907348633

Token 987: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002128382766386494
    2. ' if' → logprob: -8.750212669372559
    3. '```' → logprob: -10.250212669372559
    4. 'main' → logprob: -12.125212669372559
    5. '<|end|>' → logprob: -12.125212669372559
    6. '
' → logprob: -12.250212669372559
    7. '#' → logprob: -13.000212669372559
    8. '\n' → logprob: -15.250212669372559
    9. '\' → logprob: -15.875212669372559
    10. '...' → logprob: -15.875212669372559

Token 988: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3553512990474701
    2. ' __' → logprob: -1.2303513288497925
    3. 'name' → logprob: -5.230351448059082
    4. ''' → logprob: -7.355351448059082
    5. '_' → logprob: -8.230351448059082
    6. '___' → logprob: -8.855351448059082
    7. ' ' → logprob: -9.230351448059082
    8. '```' → logprob: -9.480351448059082
    9. '"' → logprob: -9.605351448059082
    10. '_name' → logprob: -9.855351448059082

Token 989: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001797277363948524
    2. '==' → logprob: -6.626797199249268
    3. '__.__' → logprob: -8.501797676086426
    4. '```' → logprob: -9.501797676086426
    5. ' ==' → logprob: -9.626797676086426
    6. '=="' → logprob: -10.501797676086426
    7. 'name' → logprob: -10.876797676086426
    8. 'if' → logprob: -11.376797676086426
    9. '=='' → logprob: -11.626797676086426
    10. '__.' → logprob: -11.751797676086426

Token 990: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.4140441635390744e-05
    2. '__.__' → logprob: -11.375014305114746
    3. '==' → logprob: -13.625014305114746
    4. '__.' → logprob: -14.125014305114746
    5. '__('' → logprob: -15.250014305114746
    6. '____' → logprob: -16.00001335144043
    7. '__
' → logprob: -16.37501335144043
    8. '```' → logprob: -16.37501335144043
    9. '___' → logprob: -16.87501335144043
    10. 'name' → logprob: -17.37501335144043

Token 991: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6053638458251953
    2. ' ==' → logprob: -0.8553638458251953
    3. '=='' → logprob: -4.105363845825195
    4. '=="' → logprob: -4.480363845825195
    5. '__' → logprob: -7.105363845825195
    6. '"' → logprob: -8.980363845825195
    7. ''' → logprob: -8.980363845825195
    8. '```' → logprob: -10.605363845825195
    9. '['' → logprob: -10.855363845825195
    10. '==
' → logprob: -11.230363845825195

Token 992: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38687559962272644
    2. '"' → logprob: -1.1368756294250488
    3. '__' → logprob: -12.51187515258789
    4. ' "__' → logprob: -14.76187515258789
    5. ''"' → logprob: -15.51187515258789
    6. ' '__' → logprob: -15.63687515258789
    7. '   ' → logprob: -16.88687515258789
    8. ''name' → logprob: -17.38687515258789
    9. '"'' → logprob: -17.38687515258789
    10. '"name' → logprob: -17.76187515258789

Token 993: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.019305068999528885
    2. '__' → logprob: -4.019305229187012
    3. 'name' → logprob: -6.769305229187012
    4. '__':
' → logprob: -12.394305229187012
    5. '_main' → logprob: -13.644305229187012
    6. 'm' → logprob: -14.894305229187012
    7. '__
' → logprob: -15.769305229187012
    8. ' main' → logprob: -16.519304275512695
    9. 'python' → logprob: -17.394304275512695
    10. '___' → logprob: -17.394304275512695

Token 994: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.04362395778298378
    2. '__' → logprob: -3.168623924255371
    3. '__":
' → logprob: -8.418623924255371
    4. '_' → logprob: -8.543623924255371
    5. '__:' → logprob: -8.793623924255371
    6. ':' → logprob: -10.168623924255371
    7. '':' → logprob: -11.793623924255371
    8. '('__' → logprob: -12.543623924255371
    9. '':
' → logprob: -13.043623924255371
    10. '==' → logprob: -14.043623924255371

Token 995: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8468226194381714
    2. '```' → logprob: -1.3468226194381714
    3. '   ' → logprob: -1.7218226194381714
    4. 'main' → logprob: -2.471822738647461
    5. ' main' → logprob: -4.096822738647461
    6. '    
' → logprob: -4.846822738647461
    7. '``' → logprob: -5.596822738647461
    8. '_main' → logprob: -5.846822738647461
    9. '	main' → logprob: -6.096822738647461
    10. '`' → logprob: -6.346822738647461

Token 996: ' #' (ID: 1069)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.5776860184123507e-06
    2. ' main' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. '	main' → logprob: -16.000001907348633
    5. '```' → logprob: -20.625001907348633
    6. 'import' → logprob: -21.875001907348633
    7. '_main' → logprob: -22.000001907348633
    8. '(main' → logprob: -22.125001907348633
    9. '.main' → logprob: -23.125001907348633
    10. 'Main' → logprob: -24.125001907348633

Token 997: ' Only' (ID: 12817)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.319370302458992e-06
    2. 'import' → logprob: -12.500005722045898
    3. ' main' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.500005722045898
    5. '	main' → logprob: -17.5000057220459
    6. 'from' → logprob: -22.8750057220459
    7. '(main' → logprob: -23.7500057220459
    8. ' ' → logprob: -24.2500057220459
    9. '.main' → logprob: -24.5000057220459
    10. '
' → logprob: -24.7500057220459

Token 998: ' run' (ID: 2461)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18941615521907806
    2. 'main' → logprob: -2.6894161701202393
    3. '   ' → logprob: -3.1894161701202393
    4. 'import' → logprob: -3.4394161701202393
    5. 'if' → logprob: -3.9394161701202393
    6. ' main' → logprob: -5.68941593170166
    7. 'def' → logprob: -5.68941593170166
    8. ' __' → logprob: -6.43941593170166
    9. '    
' → logprob: -6.43941593170166
    10. '
' → logprob: -7.56441593170166

Token 999: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.015484019182622433
    2. ' main' → logprob: -4.265483856201172
    3. '	main' → logprob: -7.140483856201172
    4. '   ' → logprob: -7.640483856201172
    5. '(main' → logprob: -10.390483856201172
    6. '_main' → logprob: -11.265483856201172
    7. '
' → logprob: -13.390483856201172
    8. '   ' → logprob: -14.765483856201172
    9. '__' → logprob: -14.890483856201172
    10. '```' → logprob: -15.765483856201172

Token 1000: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015073832124471664
    2. '()
' → logprob: -4.265073776245117
    3. '   ' → logprob: -7.640073776245117
    4. '():
' → logprob: -8.390073776245117
    5. 'def' → logprob: -9.640073776245117
    6. '();' → logprob: -9.765073776245117
    7. '_' → logprob: -11.765073776245117
    8. '__' → logprob: -11.765073776245117
    9. 'main' → logprob: -11.765073776245117
    10. 'if' → logprob: -11.890073776245117

Token 1001: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16873064637184143
    2. '   ' → logprob: -2.1687307357788086
    3. '()
' → logprob: -3.6687307357788086
    4. 'main' → logprob: -4.668730735778809
    5. '();' → logprob: -5.793730735778809
    6. 'if' → logprob: -6.793730735778809
    7. '():
' → logprob: -7.543730735778809
    8. '```' → logprob: -8.043730735778809
    9. ' main' → logprob: -8.543730735778809
    10. '
' → logprob: -9.168730735778809

Token 1002: ' the' (ID: 290)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.024320295080542564
    2. ' __' → logprob: -3.774320363998413
    3. ' True' → logprob: -7.274320125579834
    4. 'True' → logprob: -7.899320125579834
    5. ' ' → logprob: -12.274320602416992
    6. '   ' → logprob: -13.149320602416992
    7. ' ' → logprob: -13.899320602416992
    8. '_' → logprob: -14.274320602416992
    9. '  ' → logprob: -15.024320602416992
    10. 'name' → logprob: -15.024320602416992

Token 1003: ' script' (ID: 11713)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000400521676056087
    2. ' __' → logprob: -8.37540054321289
    3. 'name' → logprob: -8.75040054321289
    4. '```' → logprob: -11.75040054321289
    5. '_name' → logprob: -13.87540054321289
    6. ''' → logprob: -14.00040054321289
    7. '`' → logprob: -14.25040054321289
    8. ' name' → logprob: -14.37540054321289
    9. '___' → logprob: -14.87540054321289
    10. '__
' → logprob: -17.25040054321289

Token 1004: ' is' (ID: 382)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4025188684463501
    2. ' ==' → logprob: -1.77751886844635
    3. ' is' → logprob: -2.6525187492370605
    4. '==' → logprob: -3.1525187492370605
    5. ' __' → logprob: -3.2775187492370605
    6. 'is' → logprob: -4.6525187492370605
    7. '_is' → logprob: -7.5275187492370605
    8. 'if' → logprob: -7.6525187492370605
    9. 'name' → logprob: -8.652519226074219
    10. '.__' → logprob: -8.652519226074219

Token 1005: ' being' (ID: 2447)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.7236402034759521
    2. ' run' → logprob: -0.9736402034759521
    3. '__' → logprob: -2.723640203475952
    4. 'execut' → logprob: -3.098640203475952
    5. ' executed' → logprob: -3.723640203475952
    6. '_run' → logprob: -6.348640441894531
    7. '```' → logprob: -8.473640441894531
    8. 'the' → logprob: -8.723640441894531
    9. 'called' → logprob: -9.848640441894531
    10. '-run' → logprob: -9.973640441894531

Token 1006: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.28915858268737793
    2. 'run' → logprob: -1.539158582687378
    3. 'execut' → logprob: -3.789158582687378
    4. ' executed' → logprob: -4.289158821105957
    5. '__' → logprob: -8.664158821105957
    6. '_run' → logprob: -10.414158821105957
    7. '```' → logprob: -12.039158821105957
    8. '-run' → logprob: -13.289158821105957
    9. '.run' → logprob: -13.914158821105957
    10. '	run' → logprob: -14.414158821105957

Token 1007: ' directly' (ID: 8516)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.2533506155014038
    2. '```' → logprob: -1.2533506155014038
    3. ' as' → logprob: -1.8783506155014038
    4. 'direct' → logprob: -1.8783506155014038
    5. ' directly' → logprob: -2.2533507347106934
    6. '__' → logprob: -4.628350734710693
    7. '   ' → logprob: -5.128350734710693
    8. '_as' → logprob: -7.128350734710693
    9. '_direct' → logprob: -7.503350734710693
    10. '
' → logprob: -8.128350257873535

Token 1008: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09713512659072876
    2. ':
' → logprob: -3.222135066986084
    3. ':' → logprob: -3.722135066986084
    4. '
' → logprob: -4.597135066986084
    5. 'main' → logprob: -4.847135066986084
    6. '```' → logprob: -5.347135066986084
    7. '()' → logprob: -6.097135066986084
    8. ' main' → logprob: -7.222135066986084
    9. '():
' → logprob: -7.847135066986084
    10. '(' → logprob: -7.972135066986084

Token 1009: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003883439116179943
    2. '```' → logprob: -5.753883361816406
    3. '    
' → logprob: -8.503883361816406
    4. '
' → logprob: -8.628883361816406
    5. '__' → logprob: -8.753883361816406
    6. '``' → logprob: -9.503883361816406
    7. 'solve' → logprob: -10.253883361816406
    8. 'main' → logprob: -11.128883361816406
    9. 'import' → logprob: -11.878883361816406
    10. ' solve' → logprob: -11.878883361816406

Token 1010: ' imported' (ID: 44997)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.350328266620636
    2. ' imported' → logprob: -1.3503282070159912
    3. 'import' → logprob: -3.475328207015991
    4. ' being' → logprob: -6.22532844543457
    5. '   ' → logprob: -6.72532844543457
    6. 'as' → logprob: -6.97532844543457
    7. ' ' → logprob: -7.97532844543457
    8. ' when' → logprob: -8.22532844543457
    9. ' from' → logprob: -8.35032844543457
    10. '    ' → logprob: -9.35032844543457

Token 1011: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27670764923095703
    2. ':
' → logprob: -2.151707649230957
    3. '```' → logprob: -3.401707649230957
    4. '
' → logprob: -3.526707649230957
    5. ':' → logprob: -3.651707649230957
    6. '():
' → logprob: -4.276707649230957
    7. '.' → logprob: -4.901707649230957
    8. '()
' → logprob: -5.776707649230957
    9. '    
' → logprob: -5.901707649230957
    10. '()' → logprob: -6.026707649230957

Token 1012: ' a' (ID: 261)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048486415296792984
    2. 'a' → logprob: -3.9234864711761475
    3. 'main' → logprob: -3.9234864711761475
    4. 'the' → logprob: -5.798486232757568
    5. 'module' → logprob: -6.423486232757568
    6. ' a' → logprob: -7.298486232757568
    7. ' main' → logprob: -7.423486232757568
    8. ' __' → logprob: -7.673486232757568
    9. 'import' → logprob: -8.048486709594727
    10. '```' → logprob: -8.173486709594727

Token 1013: ' module' (ID: 8827)
  Prédit: 'module'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'module' → logprob: -0.00605038134381175
    2. 'script' → logprob: -5.5060505867004395
    3. 'program' → logprob: -7.1310505867004395
    4. '__' → logprob: -7.7560505867004395
    5. 'main' → logprob: -7.7560505867004395
    6. ' script' → logprob: -8.756050109863281
    7. ' module' → logprob: -9.131050109863281
    8. 'import' → logprob: -11.131050109863281
    9. 'library' → logprob: -11.131050109863281
    10. ' __' → logprob: -12.131050109863281

Token 1014: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007603150443173945
    2. ':
' → logprob: -8.125760078430176
    3. ':' → logprob: -8.625760078430176
    4. 'main' → logprob: -9.125760078430176
    5. '```' → logprob: -9.500760078430176
    6. '    
' → logprob: -9.875760078430176
    7. '	main' → logprob: -10.625760078430176
    8. '
' → logprob: -12.375760078430176
    9. ' main' → logprob: -12.500760078430176
    10. '   ' → logprob: -12.750760078430176

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009263493702746928
    2. '```' → logprob: -8.00092601776123
    3. 'main' → logprob: -8.12592601776123
    4. '    
' → logprob: -9.37592601776123
    5. '	main' → logprob: -9.37592601776123
    6. ':' → logprob: -10.00092601776123
    7. ':
' → logprob: -10.50092601776123
    8. ' main' → logprob: -11.62592601776123
    9. '__' → logprob: -11.62592601776123
    10. '
' → logprob: -11.87592601776123

Token 1016: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.4974866644479334e-05
    2. ' main' → logprob: -11.250015258789062
    3. '	main' → logprob: -13.500015258789062
    4. '   ' → logprob: -14.750015258789062
    5. '_main' → logprob: -16.125015258789062
    6. '__' → logprob: -19.500015258789062
    7. '```' → logprob: -19.875015258789062
    8. 'Main' → logprob: -20.125015258789062
    9. '(main' → logprob: -20.500015258789062
    10. 'import' → logprob: -20.625015258789062

Token 1017: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1015
Tokens correctement prédits (1ère position, stricte): 181
Tokens correctement prédits (1ère position, avec adaptation): 188
Tokens correctement prédits (top 10): 492
Précision stricte (1ère position): 17.83%
Précision adaptée (1ère position): 18.52%
Précision (top 10): 48.47%
================================================================================
