================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque  # Importe la classe deque (double-ended queue) du module collections pour permettre une file efficace

# Lit un entier N à partir de l'entrée standard, qui correspond au nombre de sommets d'un graphe
N = int(input())

# Crée une liste de listes qui sera utilisée pour représenter les arêtes (connexions) du graphe non orienté.
# Chaque élément to[i] sera une liste contenant les sommets adjacents au sommet i.
to = [[] for _ in range(N)]  # Génère N listes vides mises dans une liste (adjacency list)

# Boucle pour lire chaque arête (N-1, car un arbre de N sommets a N-1 arêtes)
for _ in range(N - 1):
    # Lit une ligne, la découpe en deux parties, convertit chacun en entier en soustrayant 1
    # pour que les indices commencent à 0. map applique la fonction lambda sur chaque élément obtenu avec split().
    a, b = map(lambda x: int(x) - 1, input().split())
    # Ajoute b comme voisin de a et vice-versa
    to[a].append(b)
    to[b].append(a)

# Lit une liste d'entiers à partir de l'entrée standard.
# map applique int en conversion sur chaque élément de input().split()
c = list(map(int, input().split()))
# Trie la liste c dans l'ordre croissant; pop() retirera donc les plus grands d'abord
c.sort()

def main():
    # Crée une liste de N zéros, qui va contenir la valeur attribuée à chaque sommet
    ans = [0] * N

    # Attribue à la racine (sommet 0) la valeur la plus grande restante dans la liste c
    # c.pop() supprime et renvoie le dernier élément de la liste c (temps constant)
    ans[0] = c.pop()

    # Initialise S à 0, il va accumuler la somme des valeurs assignées aux sommets autres que la racine
    S = 0

    # Initialise une liste seen de taille N remplie de 0, pour marquer les sommets déjà visités (0 = pas vu, 1 = vu)
    seen = [0] * N
    seen[0] = 1  # Marque la racine (0) comme déjà visitée

    # Initialise une file FIFO (deque) contenant pour l'instant uniquement la racine (0)
    que = deque([0])

    # Boucle tant qu'il y a des éléments dans la file (sommet à explorer)
    while que:
        # Retire et récupère un élément du début de la file, c'est le sommet courant
        v = que.popleft()
        # Parcourt tous les voisins (adjacents) de v selon la liste d'adjacence
        for nv in to[v]:
            # Si le voisin n'a pas encore été visité
            if not seen[nv]:
                seen[nv] = 1  # Marque le voisin comme visité
                # Retire la plus grande valeur restante dans c et l'affecte à ce sommet
                ans[nv] = c.pop()
                # Ajoute la valeur de ans[nv] à la somme S (omettant la racine car on ne l'ajoute pas à S)
                S += ans[nv]
                # Ajoute ce voisin à la file pour explorer ses propres voisins ultérieurement
                que.append(nv)

    # Affiche la somme S sur une ligne
    print(S)
    # Affiche toutes les valeurs attribuées dans l'ordre des sommets en les séparant par des espaces
    # Le * décompose la liste ans en arguments séparés pour print
    print(*ans)

# Point d'entrée du programme : exécute la fonction main uniquement si ce fichier est exécuté comme programme principal
if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.086537480354309
    2. 'deque' → logprob: -1.086537480354309
    3. 'abc' → logprob: -1.836537480354309
    4. 'Counter' → logprob: -2.4615373611450195
    5. ' defaultdict' → logprob: -2.7115373611450195
    6. 'named' → logprob: -5.4615373611450195
    7. ' Counter' → logprob: -5.5865373611450195
    8. ' abc' → logprob: -6.0865373611450195
    9. ' deque' → logprob: -6.4615373611450195
    10. '```' → logprob: -6.8365373611450195

Token 4: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10363256931304932
    2. 'd' → logprob: -2.8536324501037598
    3. '.' → logprob: -4.22863245010376
    4. '\' → logprob: -4.97863245010376
    5. ',' → logprob: -5.60363245010376
    6. 'newline' → logprob: -5.60363245010376
    7. '(
' → logprob: -6.10363245010376
    8. '\n' → logprob: -6.22863245010376
    9. 'a' → logprob: -6.47863245010376
    10. '[' → logprob: -6.60363245010376

Token 6: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0013207156443968415
    2. 'deque' → logprob: -8.876320838928223
    3. ' space' → logprob: -9.126320838928223
    4. 'd' → logprob: -9.126320838928223
    5. 'space' → logprob: -9.251320838928223
    6. ' de' → logprob: -9.251320838928223
    7. '  ' → logprob: -9.251320838928223
    8. '<|end|>' → logprob: -9.626320838928223
    9. ' a' → logprob: -9.751320838928223
    10. '_' → logprob: -9.876320838928223

Token 7: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0001483564410591498
    2. 'ported' → logprob: -9.37514877319336
    3. 'import' → logprob: -10.75014877319336
    4. 'plement' → logprob: -11.00014877319336
    5. 'ports' → logprob: -12.00014877319336
    6. 'por' → logprob: -12.37514877319336
    7. '```' → logprob: -12.50014877319336
    8. 'p' → logprob: -12.87514877319336
    9. 'po' → logprob: -13.12514877319336
    10. 'mutable' → logprob: -13.87514877319336

Token 8: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3175857961177826
    2. ' ' → logprob: -1.567585825920105
    3. ' d' → logprob: -3.3175857067108154
    4. 'r' → logprob: -3.6925857067108154
    5. 'ction' → logprob: -7.1925859451293945
    6. 'ct' → logprob: -7.9425859451293945
    7. '  ' → logprob: -7.9425859451293945
    8. ' space' → logprob: -8.442585945129395
    9. ' r' → logprob: -8.942585945129395
    10. 's' → logprob: -8.942585945129395

Token 9: ' classe' (ID: 29329)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3187131881713867
    2. ' colección' → logprob: -1.5687131881713867
    3. ' estructura' → logprob: -1.6937131881713867
    4. ' cola' → logprob: -2.4437131881713867
    5. ' collections' → logprob: -3.0687131881713867
    6. ' cole' → logprob: -3.3187131881713867
    7. 's' → logprob: -3.5687131881713867
    8. ' col' → logprob: -3.8187131881713867
    9. ' space' → logprob: -3.9437131881713867
    10. ' collection' → logprob: -4.443713188171387

Token 10: ' deque' (ID: 90347)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017424248158931732
    2. ' de' → logprob: -4.5174241065979
    3. '  ' → logprob: -5.8924241065979
    4. '(' → logprob: -7.0174241065979
    5. 'deque' → logprob: -7.6424241065979
    6. ' (' → logprob: -7.8924241065979
    7. ' deque' → logprob: -8.142424583435059
    8. ',' → logprob: -8.142424583435059
    9. ' '' → logprob: -8.892424583435059
    10. ' ,' → logprob: -9.017424583435059

Token 11: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8574542999267578
    2. '(' → logprob: -1.2324542999267578
    3. '\' → logprob: -2.357454299926758
    4. ' ' → logprob: -2.357454299926758
    5. '[' → logprob: -3.482454299926758
    6. '```' → logprob: -4.232454299926758
    7. ',' → logprob: -4.482454299926758
    8. '\n' → logprob: -4.732454299926758
    9. '
' → logprob: -5.232454299926758
    10. 'a' → logprob: -5.482454299926758

Token 12: 'double' (ID: 9489)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048926614224910736
    2. ' pour' → logprob: -3.298926591873169
    3. ' )' → logprob: -5.298926830291748
    4. ' double' → logprob: -5.798926830291748
    5. 'pour' → logprob: -7.298926830291748
    6. ' de' → logprob: -7.423926830291748
    7. 'double' → logprob: -7.673926830291748
    8. ',' → logprob: -8.04892635345459
    9. '```' → logprob: -9.29892635345459
    10. ' des' → logprob: -9.42392635345459

Token 13: '-ended' (ID: 155972)
  Prédit: '-ended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.8965889811515808
    2. ' ' → logprob: -1.3965890407562256
    3. '-' → logprob: -1.6465890407562256
    4. ' ended' → logprob: -2.3965890407562256
    5. ' space' → logprob: -3.3965890407562256
    6. ' espace' → logprob: -5.1465888023376465
    7. ' file' → logprob: -5.1465888023376465
    8. ')' → logprob: -6.0215888023376465
    9. ' d' → logprob: -6.2715888023376465
    10. '```' → logprob: -6.3965888023376465

Token 14: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5009857416152954
    2. ')' → logprob: -1.3759857416152954
    3. 'queue' → logprob: -2.250985622406006
    4. ' ' → logprob: -3.750985622406006
    5. ' )' → logprob: -5.000985622406006
    6. ' que' → logprob: -6.125985622406006
    7. 'que' → logprob: -6.875985622406006
    8. 's' → logprob: -7.250985622406006
    9. ' ' → logprob: -7.625985622406006
    10. ' queues' → logprob: -8.500986099243164

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015717383939772844
    2. ' )' → logprob: -9.250157356262207
    3. '```' → logprob: -11.375157356262207
    4. '`)' → logprob: -11.500157356262207
    5. '')' → logprob: -11.625157356262207
    6. 's' → logprob: -12.000157356262207
    7. ')`' → logprob: -12.625157356262207
    8. ',' → logprob: -12.625157356262207
    9. '.' → logprob: -13.000157356262207
    10. ')
' → logprob: -13.250157356262207

Token 16: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2775757312774658
    2. '\' → logprob: -1.4025757312774658
    3. '\n' → logprob: -1.5275757312774658
    4. '
' → logprob: -2.527575731277466
    5. ',' → logprob: -3.027575731277466
    6. 'd' → logprob: -3.277575731277466
    7. 'a' → logprob: -3.277575731277466
    8. '[' → logprob: -5.027575492858887
    9. '#' → logprob: -5.152575492858887
    10. 'newline' → logprob: -5.152575492858887

Token 17: ' module' (ID: 8827)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.24293522536754608
    2. 'collections' → logprob: -1.9929351806640625
    3. ' module' → logprob: -2.6179351806640625
    4. ' collection' → logprob: -6.1179351806640625
    5. 'module' → logprob: -6.2429351806640625
    6. ' code' → logprob: -6.7429351806640625
    7. '```' → logprob: -8.367935180664062
    8. ' built' → logprob: -9.242935180664062
    9. ' ' → logprob: -9.367935180664062
    10. ' itertools' → logprob: -9.617935180664062

Token 18: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06522627174854279
    2. 'collections' → logprob: -2.9402263164520264
    3. ' ' → logprob: -4.690226078033447
    4. ' collection' → logprob: -8.065226554870605
    5. ' ```' → logprob: -8.940226554870605
    6. ' ' → logprob: -9.065226554870605
    7. ' de' → logprob: -9.690226554870605
    8. '.collections' → logprob: -9.815226554870605
    9. ' queue' → logprob: -9.940226554870605
    10. ' itertools' → logprob: -10.065226554870605

Token 19: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42894119024276733
    2. '
' → logprob: -2.553941249847412
    3. '\' → logprob: -2.928941249847412
    4. '\n' → logprob: -3.178941249847412
    5. ' ' → logprob: -3.178941249847412
    6. ',' → logprob: -3.303941249847412
    7. '```' → logprob: -3.428941249847412
    8. '<|end|>' → logprob: -3.553941249847412
    9. 'a' → logprob: -4.928941249847412
    10. 'import' → logprob: -5.303941249847412

Token 20: ' permettre' (ID: 55483)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.6115061640739441
    2. ' gérer' → logprob: -1.4865062236785889
    3. ' stock' → logprob: -2.486506223678589
    4. ' faciliter' → logprob: -2.736506223678589
    5. ' créer' → logprob: -3.486506223678589
    6. ' permettre' → logprob: -4.11150598526001
    7. 'man' → logprob: -4.61150598526001
    8. 'g' → logprob: -5.61150598526001
    9. ' manipulation' → logprob: -5.73650598526001
    10. ' ' → logprob: -5.86150598526001

Token 21: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31113752722740173
    2. ' d' → logprob: -2.8111374378204346
    3. ' de' → logprob: -2.9361374378204346
    4. 's' → logprob: -2.9361374378204346
    5. '  ' → logprob: -3.1861374378204346
    6. ' l' → logprob: -4.186137676239014
    7. ' la' → logprob: -4.936137676239014
    8. ' des' → logprob: -5.436137676239014
    9. ' à' → logprob: -5.686137676239014
    10. '.' → logprob: -5.811137676239014

Token 22: ' file' (ID: 1974)
  Prédit: ' file'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -0.16090726852416992
    2. ' structure' → logprob: -2.03590726852417
    3. 'file' → logprob: -5.53590726852417
    4. ' ' → logprob: -5.53590726852417
    5. ' utilisation' → logprob: -5.53590726852417
    6. 'structure' → logprob: -6.16090726852417
    7. ' manipulation' → logprob: -6.66090726852417
    8. ' double' → logprob: -7.03590726852417
    9. 'util' → logprob: -7.66090726852417
    10. ' liste' → logprob: -8.910907745361328

Token 23: ' efficace' (ID: 54338)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.539257287979126
    2. '_' → logprob: -1.539257287979126
    3. ' ' → logprob: -1.789257287979126
    4. '.' → logprob: -4.664257049560547
    5. 'space' → logprob: -4.914257049560547
    6. ')' → logprob: -5.414257049560547
    7. '_space' → logprob: -5.789257049560547
    8. '<|end|>' → logprob: -5.914257049560547
    9. '  ' → logprob: -6.664257049560547
    10. '```' → logprob: -6.789257049560547

Token 24: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7229118347167969
    2. ' ' → logprob: -1.7229118347167969
    3. ',' → logprob: -2.847911834716797
    4. '
' → logprob: -3.097911834716797
    5. '\' → logprob: -3.222911834716797
    6. 'd' → logprob: -3.722911834716797
    7. '\n' → logprob: -3.722911834716797
    8. 'import' → logprob: -3.847911834716797
    9. 'newline' → logprob: -3.847911834716797
    10. 'a' → logprob: -4.222911834716797

Token 25: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.072340488433838
    2. ' ' → logprob: -1.447340488433838
    3. ',' → logprob: -2.322340488433838
    4. 'd' → logprob: -2.572340488433838
    5. 'a' → logprob: -2.822340488433838
    6. '\' → logprob: -3.572340488433838
    7. 'n' → logprob: -3.822340488433838
    8. 'import' → logprob: -4.322340488433838
    9. '\n' → logprob: -4.572340488433838
    10. '
' → logprob: -4.572340488433838

Token 26: ' Lit' (ID: 45595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5894338488578796
    2. 'def' → logprob: -2.0894339084625244
    3. ' #' → logprob: -2.7144339084625244
    4. ' class' → logprob: -3.2144339084625244
    5. ' d' → logprob: -3.4644339084625244
    6. ' def' → logprob: -3.7144339084625244
    7. 'deque' → logprob: -3.7144339084625244
    8. '#' → logprob: -3.9644339084625244
    9. 'class' → logprob: -4.214433670043945
    10. 'queue' → logprob: -4.714433670043945

Token 27: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3111807703971863
    2. ' ' → logprob: -2.061180830001831
    3. ' (' → logprob: -3.061180830001831
    4. '()' → logprob: -3.436180830001831
    5. ' =' → logprob: -4.311180591583252
    6. 'e' → logprob: -4.436180591583252
    7. 'es' → logprob: -4.811180591583252
    8. '_' → logprob: -5.311180591583252
    9. '('' → logprob: -5.311180591583252
    10. ' ()' → logprob: -5.436180591583252

Token 28: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008148912340402603
    2. 'a' → logprob: -6.008149147033691
    3. ' ' → logprob: -6.383149147033691
    4. 'f' → logprob: -6.758149147033691
    5. ' fichier' → logprob: -7.008149147033691
    6. 'es' → logprob: -7.633149147033691
    7. ' e' → logprob: -7.883149147033691
    8. 's' → logprob: -8.008149147033691
    9. ' a' → logprob: -8.758149147033691
    10. ' caractère' → logprob: -9.383149147033691

Token 29: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14628461003303528
    2. 'n' → logprob: -2.771284580230713
    3. '\n' → logprob: -4.146284580230713
    4. '(' → logprob: -4.396284580230713
    5. ' )' → logprob: -4.521284580230713
    6. 's' → logprob: -4.771284580230713
    7. '\' → logprob: -5.271284580230713
    8. ' \' → logprob: -5.896284580230713
    9. 'a' → logprob: -6.146284580230713
    10. ')' → logprob: -6.396284580230713

Token 30: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07409431785345078
    2. '\n' → logprob: -3.574094295501709
    3. '
' → logprob: -4.199094295501709
    4. 'N' → logprob: -4.199094295501709
    5. 's' → logprob: -5.324094295501709
    6. '  
' → logprob: -6.824094295501709
    7. '```' → logprob: -6.949094295501709
    8. '<|end|>' → logprob: -6.949094295501709
    9. ' 
' → logprob: -7.199094295501709
    10. 'a' → logprob: -7.324094295501709

Token 31: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5761507749557495
    2. ' partir' → logprob: -1.9511507749557495
    3. 'input' → logprob: -2.326150894165039
    4. 'entr' → logprob: -2.826150894165039
    5. 'l' → logprob: -3.076150894165039
    6. 'su' → logprob: -3.701150894165039
    7. 'contin' → logprob: -4.701150894165039
    8. 'entrée' → logprob: -4.951150894165039
    9. 'la' → logprob: -5.076150894165039
    10. 'n' → logprob: -5.076150894165039

Token 32: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.355774849653244
    2. ' d' → logprob: -1.4807748794555664
    3. ' ' → logprob: -2.9807748794555664
    4. ' a' → logprob: -4.855774879455566
    5. ' des' → logprob: -5.730774879455566
    6. 'd' → logprob: -5.855774879455566
    7. ' of' → logprob: -6.355774879455566
    8. ' du' → logprob: -6.980774879455566
    9. ' input' → logprob: -6.980774879455566
    10. 'de' → logprob: -7.480774879455566

Token 33: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6029188632965088
    2. ' input' → logprob: -1.6029188632965088
    3. 'input' → logprob: -2.102918863296509
    4. ' l' → logprob: -2.102918863296509
    5. 'la' → logprob: -5.72791862487793
    6. ' la' → logprob: -5.85291862487793
    7. '```' → logprob: -8.10291862487793
    8. 'entrée' → logprob: -8.47791862487793
    9. ' ' → logprob: -8.72791862487793
    10. '=input' → logprob: -8.85291862487793

Token 34: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4595165252685547
    2. ''' → logprob: -1.5845165252685547
    3. 'input' → logprob: -2.4595165252685547
    4. 'a' → logprob: -3.0845165252685547
    5. ' input' → logprob: -4.084516525268555
    6. 'entrée' → logprob: -5.584516525268555
    7. 'e' → logprob: -6.084516525268555
    8. ''utilisateur' → logprob: -6.334516525268555
    9. '_input' → logprob: -6.834516525268555
    10. '_' → logprob: -6.834516525268555

Token 35: ' standard' (ID: 7024)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3797990381717682
    2. 'n' → logprob: -1.2547990083694458
    3. '
' → logprob: -3.8797991275787354
    4. '\n' → logprob: -5.004798889160156
    5. '```' → logprob: -6.379798889160156
    6. ' 
' → logprob: -8.004798889160156
    7. '  
' → logprob: -8.254798889160156
    8. '\' → logprob: -8.379798889160156
    9. '
' → logprob: -8.629798889160156
    10. ' N' → logprob: -8.754798889160156

Token 36: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.33654531836509705
    2. 'n' → logprob: -1.7115453481674194
    3. '\n' → logprob: -2.83654522895813
    4. '
' → logprob: -3.33654522895813
    5. '```' → logprob: -5.336545467376709
    6. '\' → logprob: -6.086545467376709
    7. '`' → logprob: -7.211545467376709
    8. '
' → logprob: -7.461545467376709
    9. '`
' → logprob: -7.586545467376709
    10. '  
' → logprob: -7.586545467376709

Token 37: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5903024077415466
    2. 'N' → logprob: -0.8403024077415466
    3. ' N' → logprob: -4.340302467346191
    4. '\n' → logprob: -7.340302467346191
    5. '
' → logprob: -8.965302467346191
    6. ' 
' → logprob: -8.965302467346191
    7. '```' → logprob: -9.090302467346191
    8. '`' → logprob: -9.590302467346191
    9. ' n' → logprob: -9.840302467346191
    10. '\' → logprob: -10.965302467346191

Token 38: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17990536987781525
    2. '=' → logprob: -2.679905414581299
    3. 'est' → logprob: -3.304905414581299
    4. 's' → logprob: -4.054905414581299
    5. ' ' → logprob: -4.179905414581299
    6. ' est' → logprob: -4.304905414581299
    7. ' N' → logprob: -5.304905414581299
    8. ' s' → logprob: -6.304905414581299
    9. ' n' → logprob: -6.304905414581299
    10. '`' → logprob: -7.179905414581299

Token 39: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13244231045246124
    2. ' ' → logprob: -3.1324422359466553
    3. ' =' → logprob: -4.007442474365234
    4. '=' → logprob: -4.132442474365234
    5. '_' → logprob: -4.132442474365234
    6. ' a' → logprob: -4.507442474365234
    7. ' au' → logprob: -5.257442474365234
    8. 'à' → logprob: -5.507442474365234
    9. ' to' → logprob: -6.007442474365234
    10. '  ' → logprob: -6.257442474365234

Token 40: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1673370897769928
    2. 'nombre' → logprob: -1.9173370599746704
    3. ' ' → logprob: -5.042336940765381
    4. ' nombres' → logprob: -8.292337417602539
    5. 'n' → logprob: -8.542337417602539
    6. ' n' → logprob: -9.667337417602539
    7. ' number' → logprob: -10.542337417602539
    8. 's' → logprob: -10.917337417602539
    9. '_nombre' → logprob: -11.167337417602539
    10. ' Nombre' → logprob: -11.292337417602539

Token 41: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11466258019208908
    2. '_' → logprob: -2.4896626472473145
    3. 's' → logprob: -5.1146626472473145
    4. ' de' → logprob: -5.4896626472473145
    5. ' )' → logprob: -5.8646626472473145
    6. '<|end|>' → logprob: -5.8646626472473145
    7. ')' → logprob: -6.2396626472473145
    8. ' d' → logprob: -6.6146626472473145
    9. '  ' → logprob: -7.1146626472473145
    10. ' des' → logprob: -7.4896626472473145

Token 42: ' somm' (ID: 44830)
  Prédit: 'person'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'person' → logprob: -1.0553628206253052
    2. 'élé' → logprob: -2.1803627014160156
    3. ' joueurs' → logprob: -2.1803627014160156
    4. 's' → logprob: -2.8053627014160156
    5. ' lignes' → logprob: -2.8053627014160156
    6. 'l' → logprob: -2.9303627014160156
    7. 'd' → logprob: -3.4303627014160156
    8. ' personnes' → logprob: -3.5553627014160156
    9. ' ' → logprob: -4.305362701416016
    10. ' commandes' → logprob: -4.555362701416016

Token 43: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.008651684038341045
    2. 'et' → logprob: -5.0086517333984375
    3. 'its' → logprob: -7.2586517333984375
    4. 'it' → logprob: -7.8836517333984375
    5. 'es' → logprob: -8.383651733398438
    6. '#' → logprob: -9.258651733398438
    7. 'e' → logprob: -10.008651733398438
    8. '`' → logprob: -10.008651733398438
    9. 'è' → logprob: -10.008651733398438
    10. 'êts' → logprob: -10.133651733398438

Token 44: ' d' (ID: 272)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7396471500396729
    2. 'n' → logprob: -1.1146471500396729
    3. '\n' → logprob: -1.8646471500396729
    4. '\' → logprob: -4.239646911621094
    5. 's' → logprob: -4.364646911621094
    6. '`' → logprob: -5.864646911621094
    7. '
' → logprob: -6.114646911621094
    8. ' N' → logprob: -6.239646911621094
    9. ',' → logprob: -6.989646911621094
    10. '```' → logprob: -7.239646911621094

Token 45: ''un' (ID: 9788)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7767282724380493
    2. ''un' → logprob: -0.9017282724380493
    3. 'e' → logprob: -2.5267281532287598
    4. ''u' → logprob: -3.4017281532287598
    5. ''' → logprob: -4.27672815322876
    6. ''une' → logprob: -6.65172815322876
    7. 'a' → logprob: -6.90172815322876
    8. 'un' → logprob: -7.40172815322876
    9. ' ' → logprob: -7.77672815322876
    10. 'ans' → logprob: -7.77672815322876

Token 46: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.6243467926979065
    2. 'graph' → logprob: -1.1243467330932617
    3. ' graph' → logprob: -2.1243467330932617
    4. ' ' → logprob: -3.9993467330932617
    5. ' ' → logprob: -7.624346733093262
    6. 'raph' → logprob: -8.249346733093262
    7. ' graphique' → logprob: -8.374346733093262
    8. '\' → logprob: -8.499346733093262
    9. 'gr' → logprob: -8.749346733093262
    10. '	graph' → logprob: -9.374346733093262

Token 47: 'he' (ID: 273)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.01362142525613308
    2. 'rap' → logprob: -5.2636213302612305
    3. 'aphe' → logprob: -5.6386213302612305
    4. 'r' → logprob: -6.5136213302612305
    5. 'è' → logprob: -7.8886213302612305
    6. 'h' → logprob: -8.13862133026123
    7. 'aph' → logprob: -8.38862133026123
    8. 'et' → logprob: -8.76362133026123
    9. 'rafo' → logprob: -8.88862133026123
    10. 'rès' → logprob: -8.88862133026123

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.681912362575531
    2. 'N' → logprob: -0.806912362575531
    3. 'n' → logprob: -3.681912422180176
    4. '
' → logprob: -4.306912422180176
    5. '\n' → logprob: -4.931912422180176
    6. '\' → logprob: -7.306912422180176
    7. '```' → logprob: -7.681912422180176
    8. '' → logprob: -8.181912422180176
    9. '

' → logprob: -8.306912422180176
    10. 's' → logprob: -8.931912422180176

Token 49: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18179462850093842
    2. '
' → logprob: -2.1817946434020996
    3. 'n' → logprob: -3.1817946434020996
    4. '\n' → logprob: -4.5567946434021
    5. '```' → logprob: -7.5567946434021
    6. '
' → logprob: -7.9317946434021
    7. '\' → logprob: -8.556794166564941
    8. ' N' → logprob: -9.181794166564941
    9. '

' → logprob: -9.681794166564941
    10. 's' → logprob: -10.181794166564941

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001953371800482273
    2. '=' → logprob: -6.251953601837158
    3. '=int' → logprob: -10.876953125
    4. ',' → logprob: -12.626953125
    5. ' ' → logprob: -13.501953125
    6. '=input' → logprob: -14.001953125
    7. ' ' → logprob: -15.876953125
    8. '  ' → logprob: -16.251953125
    9. ' ,' → logprob: -16.751953125
    10. ' =
' → logprob: -17.126953125

Token 51: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0031781906727701426
    2. 'int' → logprob: -5.753178119659424
    3. ' ' → logprob: -14.878178596496582
    4. '=int' → logprob: -15.878178596496582
    5. ' ' → logprob: -17.378177642822266
    6. '<int' → logprob: -18.128177642822266
    7. ' input' → logprob: -18.503177642822266
    8. '	int' → logprob: -18.503177642822266
    9. '[int' → logprob: -18.628177642822266
    10. '(int' → logprob: -18.753177642822266

Token 52: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38690438866615295
    2. '(' → logprob: -1.1369043588638306
    3. 'input' → logprob: -10.5119047164917
    4. '(
' → logprob: -12.3869047164917
    5. ' (' → logprob: -13.5119047164917
    6. '(

' → logprob: -15.3869047164917
    7. ' input' → logprob: -16.136903762817383
    8. '()' → logprob: -16.636903762817383
    9. '=input' → logprob: -16.636903762817383
    10. '('' → logprob: -17.511903762817383

Token 53: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4745325744152069
    2. '()' → logprob: -0.9745326042175293
    3. '(' → logprob: -8.224532127380371
    4. ')' → logprob: -8.974532127380371
    5. ' ())' → logprob: -10.974532127380371
    6. '()))' → logprob: -11.974532127380371
    7. '()`' → logprob: -12.349532127380371
    8. '();)' → logprob: -12.349532127380371
    9. '('' → logprob: -12.474532127380371
    10. '().' → logprob: -12.599532127380371

Token 54: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13906997442245483
    2. 'graph' → logprob: -2.2640700340270996
    3. '#' → logprob: -5.1390700340271
    4. '
' → logprob: -5.2640700340271
    5. 'adj' → logprob: -5.6390700340271
    6. 'g' → logprob: -6.1390700340271
    7. ' 
' → logprob: -6.5140700340271
    8. '' → logprob: -6.6390700340271
    9. ' graph' → logprob: -6.8890700340271
    10. 's' → logprob: -6.8890700340271

Token 55: ' Cr' (ID: 5790)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5353865623474121
    2. 'graph' → logprob: -1.035386562347412
    3. ' adjacency' → logprob: -3.535386562347412
    4. ' edges' → logprob: -4.285386562347412
    5. 'adj' → logprob: -4.535386562347412
    6. ' adj' → logprob: -5.910386562347412
    7. 'edges' → logprob: -6.785386562347412
    8. ' neighbors' → logprob: -7.785386562347412
    9. '#' → logprob: -8.03538703918457
    10. 'g' → logprob: -8.16038703918457

Token 56: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8216603398323059
    2. 'ef' → logprob: -2.321660280227661
    3. 'ate' → logprob: -2.446660280227661
    4. 'é' → logprob: -3.071660280227661
    5. 'ont' → logprob: -3.071660280227661
    6. 'éer' → logprob: -3.196660280227661
    7. '#' → logprob: -3.446660280227661
    8. 'ée' → logprob: -3.821660280227661
    9. 'er' → logprob: -4.07166051864624
    10. 'om' → logprob: -4.07166051864624

Token 57: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9727004766464233
    2. ' un' → logprob: -1.5977004766464233
    3. ' ' → logprob: -1.8477004766464233
    4. '(' → logprob: -2.222700595855713
    5. ' a' → logprob: -2.847700595855713
    6. '()' → logprob: -2.972700595855713
    7. 'a' → logprob: -4.472700595855713
    8. 's' → logprob: -4.847700595855713
    9. 'une' → logprob: -5.472700595855713
    10. ' ' → logprob: -5.597700595855713

Token 58: ' liste' (ID: 31719)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.45827382802963257
    2. ' deque' → logprob: -2.0832738876342773
    3. ' liste' → logprob: -2.0832738876342773
    4. ' file' → logprob: -3.0832738876342773
    5. 'liste' → logprob: -3.5832738876342773
    6. ' ' → logprob: -4.833273887634277
    7. ' graph' → logprob: -4.833273887634277
    8. 'list' → logprob: -5.083273887634277
    9. 'file' → logprob: -5.333273887634277
    10. ' list' → logprob: -5.458273887634277

Token 59: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14593851566314697
    2. ' de' → logprob: -3.2709383964538574
    3. '[]' → logprob: -4.270938396453857
    4. ' d' → logprob: -4.395938396453857
    5. 'd' → logprob: -4.395938396453857
    6. 'de' → logprob: -4.520938396453857
    7. ' des' → logprob: -4.770938396453857
    8. 's' → logprob: -5.145938396453857
    9. 'des' → logprob: -5.145938396453857
    10. ' =' → logprob: -5.645938396453857

Token 60: ' listes' (ID: 179198)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1879674643278122
    2. '[N' → logprob: -3.187967538833618
    3. '[' → logprob: -3.562967538833618
    4. 'deque' → logprob: -3.687967538833618
    5. ' N' → logprob: -3.937967538833618
    6. ' listes' → logprob: -3.937967538833618
    7. ' []' → logprob: -4.312967300415039
    8. 'list' → logprob: -5.187967300415039
    9. ' adjacency' → logprob: -5.687967300415039
    10. ' lists' → logprob: -5.687967300415039

Token 61: ' qui' (ID: 2780)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.470998078584671
    2. 'adj' → logprob: -1.4709980487823486
    3. ' graph' → logprob: -2.3459980487823486
    4. ' adjacency' → logprob: -4.095998287200928
    5. ' adj' → logprob: -4.970998287200928
    6. '[' → logprob: -5.345998287200928
    7. '_graph' → logprob: -5.345998287200928
    8. ' d' → logprob: -5.595998287200928
    9. '(graph' → logprob: -6.345998287200928
    10. 's' → logprob: -6.345998287200928

Token 62: ' sera' (ID: 15511)
  Prédit: ' cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cont' → logprob: -1.013828158378601
    2. 'cont' → logprob: -1.263828158378601
    3. ' représente' → logprob: -1.763828158378601
    4. ' contient' → logprob: -2.6388282775878906
    5. 'represent' → logprob: -3.7638282775878906
    6. '_cont' → logprob: -3.8888282775878906
    7. ' represent' → logprob: -4.138828277587891
    8. ' va' → logprob: -4.763828277587891
    9. ' représent' → logprob: -5.138828277587891
    10. 's' → logprob: -5.513828277587891

Token 63: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.02638320066034794
    2. ' utilisé' → logprob: -4.151383399963379
    3. ' utilisées' → logprob: -5.776383399963379
    4. ' used' → logprob: -5.901383399963379
    5. ' la' → logprob: -6.776383399963379
    6. ' utilisés' → logprob: -7.151383399963379
    7. ' utilizada' → logprob: -7.526383399963379
    8. '[]' → logprob: -8.151383399963379
    9. ' usada' → logprob: -8.526383399963379
    10. 's' → logprob: -8.776383399963379

Token 64: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.15331245958805084
    2. ' ' → logprob: -3.0283124446868896
    3. ' to' → logprob: -3.1533124446868896
    4. ' for' → logprob: -3.6533124446868896
    5. '[' → logprob: -5.153312683105469
    6. '[]' → logprob: -5.153312683105469
    7. 'pour' → logprob: -5.278312683105469
    8. ' для' → logprob: -6.528312683105469
    9. 's' → logprob: -6.778312683105469
    10. 'for' → logprob: -6.903312683105469

Token 65: ' représ' (ID: 31534)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.04891594499349594
    2. ' représ' → logprob: -3.2989158630371094
    3. 'stock' → logprob: -4.673915863037109
    4. 'represent' → logprob: -7.423915863037109
    5. ' represent' → logprob: -8.17391586303711
    6. 're' → logprob: -8.29891586303711
    7. 'repr' → logprob: -9.42391586303711
    8. ' enregistr' → logprob: -9.92391586303711
    9. '_stock' → logprob: -10.42391586303711
    10. ' conten' → logprob: -10.67391586303711

Token 66: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -7.97024549683556e-05
    2. 'ent' → logprob: -9.750080108642578
    3. 'entation' → logprob: -12.250080108642578
    4. 'er' → logprob: -12.500080108642578
    5. 'anter' → logprob: -12.625080108642578
    6. ' enter' → logprob: -13.000080108642578
    7. 'ender' → logprob: -13.875080108642578
    8. 'a' → logprob: -14.000080108642578
    9. 'ENTER' → logprob: -14.000080108642578
    10. 'ente' → logprob: -14.250080108642578

Token 67: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9442154169082642
    2. ' les' → logprob: -1.0692154169082642
    3. ' le' → logprob: -1.8192154169082642
    4. ' ' → logprob: -3.1942152976989746
    5. 'l' → logprob: -4.069215297698975
    6. ' adjacency' → logprob: -4.194215297698975
    7. 'le' → logprob: -4.694215297698975
    8. 'adj' → logprob: -4.819215297698975
    9. 'les' → logprob: -5.319215297698975
    10. ' graph' → logprob: -5.944215297698975

Token 68: ' ar' (ID: 646)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.6321337223052979
    2. ' adjacency' → logprob: -1.5071337223052979
    3. ' ' → logprob: -2.382133722305298
    4. ' graph' → logprob: -3.257133722305298
    5. ' adj' → logprob: -3.632133722305298
    6. 'adj' → logprob: -4.257133483886719
    7. ' listes' → logprob: -4.507133483886719
    8. ' voisin' → logprob: -4.632133483886719
    9. ' ad' → logprob: -5.007133483886719
    10. ' relations' → logprob: -5.132133483886719

Token 69: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.14841359853744507
    2. 'c' → logprob: -2.14841365814209
    3. 'cs' → logprob: -4.27341365814209
    4. 'ê' → logprob: -5.89841365814209
    5. '^' → logprob: -7.02341365814209
    6. 'r' → logprob: -7.27341365814209
    7. 'êts' → logprob: -7.64841365814209
    8. 'ˆ' → logprob: -7.64841365814209
    9. '�' → logprob: -7.77341365814209
    10. 'g' → logprob: -8.02341365814209

Token 70: ' (' (ID: 350)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.47732338309288025
    2. ' adj' → logprob: -1.7273234128952026
    3. ' adjacency' → logprob: -2.852323293685913
    4. ' d' → logprob: -3.102323293685913
    5. '_adj' → logprob: -3.477323293685913
    6. ' des' → logprob: -4.727323532104492
    7. '[]' → logprob: -4.727323532104492
    8. 'd' → logprob: -4.977323532104492
    9. 'graph' → logprob: -5.102323532104492
    10. ' ' → logprob: -5.102323532104492

Token 71: 'conn' (ID: 12394)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -1.3793035745620728
    2. 'adj' → logprob: -1.3793035745620728
    3. ' adjacency' → logprob: -1.8793035745620728
    4. ' ' → logprob: -2.004303455352783
    5. ' d' → logprob: -3.129303455352783
    6. ')' → logprob: -3.504303455352783
    7. 'd' → logprob: -3.879303455352783
    8. ' )' → logprob: -4.004303455352783
    9. ' des' → logprob: -4.129303455352783
    10. ' du' → logprob: -4.254303455352783

Token 72: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.016989052295684814
    2. 'ect' → logprob: -4.641989231109619
    3. 'exion' → logprob: -5.516989231109619
    4. 'ections' → logprob: -6.016989231109619
    5. 'ection' → logprob: -8.016988754272461
    6. '```' → logprob: -9.016988754272461
    7. 'ected' → logprob: -9.516988754272461
    8. 'et' → logprob: -9.891988754272461
    9. 'e' → logprob: -10.766988754272461
    10. 'exe' → logprob: -11.266988754272461

Token 73: 'ions' (ID: 756)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.16872742772102356
    2. 'ections' → logprob: -2.043727397918701
    3. 'ect' → logprob: -4.668727397918701
    4. 'iv' → logprob: -5.168727397918701
    5. 'ions' → logprob: -5.543727397918701
    6. 'ctions' → logprob: -6.418727397918701
    7. 'ct' → logprob: -6.918727397918701
    8. 'ected' → logprob: -7.043727397918701
    9. 'exion' → logprob: -7.293727397918701
    10. 'es' → logprob: -7.793727397918701

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5971495509147644
    2. ' )' → logprob: -1.2221496105194092
    3. ' entre' → logprob: -2.472149610519409
    4. ' des' → logprob: -4.09714937210083
    5. ' ' → logprob: -4.34714937210083
    6. 'adj' → logprob: -4.72214937210083
    7. 's' → logprob: -5.09714937210083
    8. ' d' → logprob: -5.22214937210083
    9. ' between' → logprob: -5.47214937210083
    10. 'd' → logprob: -5.97214937210083

Token 75: ' du' (ID: 1462)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7095274925231934
    2. ' des' → logprob: -1.4595274925231934
    3. ' adj' → logprob: -2.0845274925231934
    4. ' adjacency' → logprob: -3.2095274925231934
    5. ' d' → logprob: -3.7095274925231934
    6. 'graph' → logprob: -4.334527492523193
    7. '[]' → logprob: -4.459527492523193
    8. ' graph' → logprob: -4.584527492523193
    9. ' du' → logprob: -4.584527492523193
    10. '_adj' → logprob: -4.959527492523193

Token 76: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.6498726010322571
    2. ' graph' → logprob: -1.2748725414276123
    3. 'graph' → logprob: -1.8998725414276123
    4. 'gr' → logprob: -3.0248725414276123
    5. '```' → logprob: -9.524872779846191
    6. '	graph' → logprob: -9.774872779846191
    7. ' ' → logprob: -10.149872779846191
    8. ' adjacency' → logprob: -10.649872779846191
    9. '_graph' → logprob: -11.149872779846191
    10. ' sommet' → logprob: -11.399872779846191

Token 77: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.00112426420673728
    2. 'aph' → logprob: -7.001124382019043
    3. 'phe' → logprob: -8.626124382019043
    4. 'ap' → logprob: -11.251124382019043
    5. 'apho' → logprob: -12.251124382019043
    6. '```' → logprob: -13.001124382019043
    7. 'phes' → logprob: -13.376124382019043
    8. 'he' → logprob: -13.376124382019043
    9. '#' → logprob: -13.501124382019043
    10. 'ph' → logprob: -13.626124382019043

Token 78: ' non' (ID: 2893)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7184783816337585
    2. ' graph' → logprob: -1.4684784412384033
    3. ' adjacency' → logprob: -1.8434784412384033
    4. 'adj' → logprob: -2.4684784412384033
    5. ' edges' → logprob: -4.093478202819824
    6. ' adj' → logprob: -4.468478202819824
    7. 'edges' → logprob: -4.718478202819824
    8. 'g' → logprob: -7.718478202819824
    9. '```' → logprob: -8.468478202819824
    10. ' adjacent' → logprob: -8.468478202819824

Token 79: ' orient' (ID: 13198)
  Prédit: ' orient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.10334450751543045
    2. 'orient' → logprob: -2.478344440460205
    3. ' dirig' → logprob: -4.478344440460205
    4. ' oriented' → logprob: -6.478344440460205
    5. 'or' → logprob: -6.978344440460205
    6. ' dirigido' → logprob: -8.978344917297363
    7. ' directed' → logprob: -9.603344917297363
    8. '_or' → logprob: -9.728344917297363
    9. ' ' → logprob: -10.103344917297363
    10. '0' → logprob: -10.478344917297363

Token 80: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005023594480007887
    2. 'ées' → logprob: -5.63002347946167
    3. 'ée' → logprob: -6.63002347946167
    4. 'és' → logprob: -9.880023956298828
    5. 'e' → logprob: -10.255023956298828
    6. 'è' → logprob: -12.505023956298828
    7. 'es' → logprob: -12.505023956298828
    8. '```' → logprob: -12.505023956298828
    9. 'É' → logprob: -13.755023956298828
    10. 'ed' → logprob: -14.505023956298828

Token 81: '.
' (ID: 558)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.1812727451324463
    2. ' adjacency' → logprob: -1.1812727451324463
    3. 'graph' → logprob: -1.6812727451324463
    4. ' graph' → logprob: -2.0562727451324463
    5. ' adj' → logprob: -2.8062727451324463
    6. ' edges' → logprob: -6.181272506713867
    7. 'g' → logprob: -6.306272506713867
    8. ' adjacent' → logprob: -6.431272506713867
    9. 'edges' → logprob: -6.556272506713867
    10. '```' → logprob: -6.931272506713867

Token 82: '#' (ID: 2)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.6404454708099365
    2. ' graph' → logprob: -1.6404454708099365
    3. 'graph' → logprob: -1.6404454708099365
    4. 'adj' → logprob: -3.1404454708099365
    5. ' edges' → logprob: -4.015445709228516
    6. ' adj' → logprob: -4.140445709228516
    7. 'edges' → logprob: -5.640445709228516
    8. '```' → logprob: -6.765445709228516
    9. 'g' → logprob: -6.890445709228516
    10. ' adjacent' → logprob: -7.515445709228516

Token 83: ' Chaque' (ID: 94758)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.7325268983840942
    2. ' graph' → logprob: -1.3575268983840942
    3. 'graph' → logprob: -1.6075268983840942
    4. 'adj' → logprob: -3.4825267791748047
    5. ' edges' → logprob: -3.9825267791748047
    6. ' adj' → logprob: -4.857526779174805
    7. 'edges' → logprob: -5.732526779174805
    8. ' neighbors' → logprob: -7.857526779174805
    9. ' adjacent' → logprob: -8.232526779174805
    10. 'neighbors' → logprob: -8.732526779174805

Token 84: ' élément' (ID: 99627)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -1.1121317148208618
    2. '_' → logprob: -1.3621317148208618
    3. ' liste' → logprob: -1.6121317148208618
    4. ' _' → logprob: -3.2371315956115723
    5. ' element' → logprob: -3.7371315956115723
    6. ' ' → logprob: -3.9871315956115723
    7. ' adjacency' → logprob: -3.9871315956115723
    8. 's' → logprob: -4.237131595611572
    9. ' élément' → logprob: -4.362131595611572
    10. ' ar' → logprob: -4.612131595611572

Token 85: ' to' (ID: 316)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.383549302816391
    2. ' de' → logprob: -2.258549213409424
    3. ' ' → logprob: -2.883549213409424
    4. '[' → logprob: -3.133549213409424
    5. ' []' → logprob: -3.883549213409424
    6. ' =' → logprob: -4.133549213409424
    7. ' représente' → logprob: -4.258549213409424
    8. ' des' → logprob: -4.508549213409424
    9. ' du' → logprob: -4.883549213409424
    10. '_' → logprob: -4.883549213409424

Token 86: '[i' (ID: 1768)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.934554934501648
    2. 's' → logprob: -1.684554934501648
    3. ' ' → logprob: -2.4345550537109375
    4. 'ur' → logprob: -2.4345550537109375
    5. '_' → logprob: -3.3095550537109375
    6. 'r' → logprob: -3.4345550537109375
    7. ' =' → logprob: -3.5595550537109375
    8. '[' → logprob: -4.0595550537109375
    9. '_list' → logprob: -4.1845550537109375
    10. '[]' → logprob: -4.3095550537109375

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038455575122497976
    2. 's' → logprob: -9.625384330749512
    3. ' ]' → logprob: -9.875384330749512
    4. 'f' → logprob: -10.000384330749512
    5. '][]' → logprob: -10.250384330749512
    6. '][' → logprob: -10.375384330749512
    7. 'ut' → logprob: -10.750384330749512
    8. ']=' → logprob: -10.750384330749512
    9. 'n' → logprob: -10.875384330749512
    10. 'o' → logprob: -11.750384330749512

Token 88: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.410604327917099
    2. ']' → logprob: -1.5356043577194214
    3. '=' → logprob: -2.785604238510132
    4. '[]' → logprob: -3.785604238510132
    5. ' est' → logprob: -4.535604476928711
    6. 's' → logprob: -5.160604476928711
    7. ' représente' → logprob: -5.285604476928711
    8. '=[]' → logprob: -5.660604476928711
    9. '.append' → logprob: -6.285604476928711
    10. ' correspond' → logprob: -6.410604476928711

Token 89: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.022232472896575928
    2. 'une' → logprob: -4.022232532501221
    3. ' la' → logprob: -5.897232532501221
    4. ' a' → logprob: -7.147232532501221
    5. 'a' → logprob: -9.147232055664062
    6. '[]' → logprob: -9.147232055664062
    7. ' un' → logprob: -9.272232055664062
    8. ' []' → logprob: -9.397232055664062
    9. ' ' → logprob: -9.522232055664062
    10. ''une' → logprob: -11.022232055664062

Token 90: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5905018448829651
    2. ' liste' → logprob: -0.8405018448829651
    3. ' list' → logprob: -4.84050178527832
    4. 's' → logprob: -5.84050178527832
    5. 'list' → logprob: -5.96550178527832
    6. '[]' → logprob: -8.71550178527832
    7. 'Liste' → logprob: -9.21550178527832
    8. 'n' → logprob: -9.21550178527832
    9. ' listes' → logprob: -9.34050178527832
    10. ' ' → logprob: -9.46550178527832

Token 91: ' contenant' (ID: 131049)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6748586297035217
    2. '[]' → logprob: -0.7998586297035217
    3. ' de' → logprob: -4.299858570098877
    4. '<|end|>' → logprob: -4.674858570098877
    5. ' ' → logprob: -5.424858570098877
    6. ' d' → logprob: -5.799858570098877
    7. ' []' → logprob: -5.924858570098877
    8. 'des' → logprob: -6.424858570098877
    9. '=[]' → logprob: -6.799858570098877
    10. '[' → logprob: -6.799858570098877

Token 92: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12876315414905548
    2. 'les' → logprob: -2.628763198852539
    3. ' des' → logprob: -4.003763198852539
    4. ' ' → logprob: -4.503763198852539
    5. 's' → logprob: -4.753763198852539
    6. ' ' → logprob: -5.628763198852539
    7. '<|end|>' → logprob: -5.753763198852539
    8. '[]' → logprob: -6.878763198852539
    9. 'des' → logprob: -7.003763198852539
    10. 'es' → logprob: -7.878763198852539

Token 93: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.999204695224762
    2. ' somm' → logprob: -1.1242046356201172
    3. ' voisins' → logprob: -1.4992046356201172
    4. ' noe' → logprob: -3.624204635620117
    5. ' sommet' → logprob: -3.749204635620117
    6. 'som' → logprob: -5.249204635620117
    7. '_s' → logprob: -5.249204635620117
    8. '```' → logprob: -5.624204635620117
    9. ' vertices' → logprob: -5.874204635620117
    10. ' nodes' → logprob: -6.124204635620117

Token 94: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0037099348846822977
    2. 'et' → logprob: -5.75370979309082
    3. 'es' → logprob: -8.62870979309082
    4. 'e' → logprob: -8.87870979309082
    5. 'êts' → logprob: -9.62870979309082
    6. 'és' → logprob: -9.87870979309082
    7. 'ès' → logprob: -10.87870979309082
    8. 'ètes' → logprob: -11.00370979309082
    9. 'è' → logprob: -11.12870979309082
    10. 'ects' → logprob: -12.12870979309082

Token 95: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.0179295539855957
    2. ' adj' → logprob: -1.5179295539855957
    3. ' voisins' → logprob: -1.6429295539855957
    4. ' adjacent' → logprob: -1.7679295539855957
    5. ' auxquels' → logprob: -3.8929295539855957
    6. ' connect' → logprob: -4.017929553985596
    7. 'connect' → logprob: -4.767929553985596
    8. ' accessibles' → logprob: -6.142929553985596
    9. ' adjacency' → logprob: -6.642929553985596
    10. ' connected' → logprob: -6.892929553985596

Token 96: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.007540603168308735
    2. 'acent' → logprob: -6.007540702819824
    3. 'oints' → logprob: -6.132540702819824
    4. '[i' → logprob: -6.632540702819824
    5. '[' → logprob: -7.507540702819824
    6. 'anc' → logprob: -8.382540702819824
    7. '```' → logprob: -8.382540702819824
    8. 'acency' → logprob: -8.632540702819824
    9. ']' → logprob: -10.007540702819824
    10. 'acen' → logprob: -10.382540702819824

Token 97: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.006400815676897764
    2. 'cent' → logprob: -5.8814005851745605
    3. 'ent' → logprob: -5.8814005851745605
    4. 't' → logprob: -8.381401062011719
    5. 'c' → logprob: -9.256401062011719
    6. 'entes' → logprob: -9.381401062011719
    7. 'nts' → logprob: -9.756401062011719
    8. 'd' → logprob: -9.881401062011719
    9. 'centes' → logprob: -9.881401062011719
    10. 'dent' → logprob: -9.881401062011719

Token 98: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.341541588306427
    2. '[i' → logprob: -1.7165415287017822
    3. ' i' → logprob: -2.7165415287017822
    4. 'à' → logprob: -4.216541767120361
    5. 's' → logprob: -4.591541767120361
    6. ' de' → logprob: -5.216541767120361
    7. ' ' → logprob: -5.716541767120361
    8. '[' → logprob: -5.966541767120361
    9. 'i' → logprob: -6.591541767120361
    10. ' au' → logprob: -6.591541767120361

Token 99: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.015038477256894112
    2. 'som' → logprob: -4.64003849029541
    3. ' i' → logprob: -6.01503849029541
    4. 's' → logprob: -6.51503849029541
    5. 'i' → logprob: -6.76503849029541
    6. ' som' → logprob: -8.64003849029541
    7. '```' → logprob: -12.39003849029541
    8. ' ' → logprob: -12.51503849029541
    9. ' somm' → logprob: -12.89003849029541
    10. '	s' → logprob: -14.39003849029541

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12694931030273438
    2. 'i' → logprob: -2.1269493103027344
    3. '[i' → logprob: -11.376949310302734
    4. ' ' → logprob: -12.126949310302734
    5. '	i' → logprob: -13.501949310302734
    6. '_i' → logprob: -14.251949310302734
    7. 's' → logprob: -14.376949310302734
    8. '```' → logprob: -14.376949310302734
    9. ' `' → logprob: -15.001949310302734
    10. '`' → logprob: -15.126949310302734

Token 101: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01611742004752159
    2. '=' → logprob: -4.141117572784424
    3. 'to' → logprob: -10.016117095947266
    4. '.' → logprob: -11.391117095947266
    5. 's' → logprob: -12.016117095947266
    6. ',' → logprob: -12.516117095947266
    7. ' ' → logprob: -12.641117095947266
    8. ' =
' → logprob: -12.766117095947266
    9. ']' → logprob: -13.141117095947266
    10. ')' → logprob: -13.641117095947266

Token 102: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0004480692732613534
    2. '
' → logprob: -7.750448226928711
    3. ' to' → logprob: -11.375448226928711
    4. '```' → logprob: -12.375448226928711
    5. '
' → logprob: -13.750448226928711
    6. '``' → logprob: -15.625448226928711
    7. 'tolist' → logprob: -15.625448226928711
    8. '  
' → logprob: -16.37544822692871
    9. '[to' → logprob: -16.75044822692871
    10. '

' → logprob: -17.00044822692871

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145183801651
    2. '=' → logprob: -1.7014517784118652
    3. '.append' → logprob: -10.951452255249023
    4. '[' → logprob: -11.326452255249023
    5. ' ' → logprob: -12.701452255249023
    6. '.' → logprob: -13.451452255249023
    7. '=[' → logprob: -13.451452255249023
    8. '=[]' → logprob: -14.201452255249023
    9. ' =[' → logprob: -14.201452255249023
    10. '[i' → logprob: -14.451452255249023

Token 104: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.20168960094451904
    2. '[' → logprob: -1.701689600944519
    3. ' [' → logprob: -8.201689720153809
    4. '[]' → logprob: -13.201689720153809
    5. ' []' → logprob: -15.701689720153809
    6. ' ' → logprob: -16.576688766479492
    7. '[:]' → logprob: -17.576688766479492
    8. '[len' → logprob: -17.826688766479492
    9. '[n' → logprob: -18.076688766479492
    10. '   ' → logprob: -18.201688766479492

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47417259216308594
    2. 'for' → logprob: -0.9741725921630859
    3. ')' → logprob: -9.974172592163086
    4. ']' → logprob: -10.849172592163086
    5. '()' → logprob: -11.599172592163086
    6. '(N' → logprob: -12.099172592163086
    7. ' N' → logprob: -12.349172592163086
    8. '(' → logprob: -12.474172592163086
    9. ' ' → logprob: -12.849172592163086
    10. 'N' → logprob: -13.599172592163086

Token 106: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026884309947490692
    2. ' range' → logprob: -4.526884078979492
    3. ' _' → logprob: -4.526884078979492
    4. ' i' → logprob: -5.526884078979492
    5. ' ' → logprob: -7.526884078979492
    6. 'range' → logprob: -8.151884078979492
    7. 'i' → logprob: -9.401884078979492
    8. '_i' → logprob: -12.901884078979492
    9. ' in' → logprob: -12.901884078979492
    10. '_range' → logprob: -13.151884078979492

Token 107: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134691119194031
    2. ' in' → logprob: -1.3134691715240479
    3. 'range' → logprob: -8.688468933105469
    4. 'i' → logprob: -11.188468933105469
    5. ' ' → logprob: -11.438468933105469
    6. ' range' → logprob: -12.063468933105469
    7. 'n' → logprob: -12.938468933105469
    8. ' i' → logprob: -13.438468933105469
    9. ')' → logprob: -14.063468933105469
    10. 'N' → logprob: -14.438468933105469

Token 108: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233882926404476
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.255233764648438
    4. '	range' → logprob: -18.380233764648438
    5. 'rang' → logprob: -18.755233764648438
    6. ' ' → logprob: -19.380233764648438
    7. ')' → logprob: -20.255233764648438
    8. '  ' → logprob: -20.755233764648438
    9. '   ' → logprob: -21.130233764648438
    10. 'ran' → logprob: -21.380233764648438

Token 109: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00016241880075540394
    2. '(' → logprob: -8.750162124633789
    3. ' (' → logprob: -12.625162124633789
    4. 'N' → logprob: -15.125162124633789
    5. '(n' → logprob: -15.125162124633789
    6. '((' → logprob: -17.87516212463379
    7. '(
' → logprob: -18.25016212463379
    8. '(M' → logprob: -18.62516212463379
    9. ')' → logprob: -18.75016212463379
    10. ' N' → logprob: -19.12516212463379

Token 110: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.023293538717553e-05
    2. ')' → logprob: -10.625030517578125
    3. ']' → logprob: -12.625030517578125
    4. ' )' → logprob: -13.250030517578125
    5. '])' → logprob: -15.250030517578125
    6. ')])' → logprob: -15.750030517578125
    7. ')]
' → logprob: -16.125030517578125
    8. ')],' → logprob: -16.625030517578125
    9. ' ]' → logprob: -16.875030517578125
    10. '])]' → logprob: -17.125030517578125

Token 111: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012845216551795602
    2. ' for' → logprob: -6.876284599304199
    3. 'M' → logprob: -9.1262845993042
    4. '#' → logprob: -9.3762845993042
    5. '
' → logprob: -10.5012845993042
    6. 'm' → logprob: -11.6262845993042
    7. '<|end|>' → logprob: -12.1262845993042
    8. 'n' → logprob: -12.5012845993042
    9. 'edges' → logprob: -12.5012845993042
    10. 'Q' → logprob: -12.8762845993042

Token 112: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002799279463943094
    2. ' for' → logprob: -8.250280380249023
    3. '#' → logprob: -11.250280380249023
    4. '
' → logprob: -12.750280380249023
    5. 'M' → logprob: -13.625280380249023
    6. 'n' → logprob: -14.125280380249023
    7. '```' → logprob: -15.375280380249023
    8. '<|end|>' → logprob: -16.125280380249023
    9. 'For' → logprob: -16.250280380249023
    10. 'Q' → logprob: -16.250280380249023

Token 113: ' Gén' (ID: 71828)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003675848012790084
    2. ' for' → logprob: -5.628675937652588
    3. '
' → logprob: -9.62867546081543
    4. '#' → logprob: -12.50367546081543
    5. 'n' → logprob: -12.50367546081543
    6. 'N' → logprob: -14.00367546081543
    7. '```' → logprob: -14.37867546081543
    8. 'For' → logprob: -15.12867546081543
    9. '<|end|>' → logprob: -15.12867546081543
    10. '

' → logprob: -16.00367546081543

Token 114: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.7861584424972534
    2. 'ère' → logprob: -1.1611584424972534
    3. 'érer' → logprob: -2.036158561706543
    4. 'range' → logprob: -2.661158561706543
    5. 'ération' → logprob: -5.286158561706543
    6. 'r' → logprob: -5.661158561706543
    7. 'èr' → logprob: -5.661158561706543
    8. 'érateur' → logprob: -5.786158561706543
    9. 'for' → logprob: -6.161158561706543
    10. 'e' → logprob: -6.161158561706543

Token 115: ' N' (ID: 478)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.416325181722641
    2. ' N' → logprob: -1.7913252115249634
    3. 'range' → logprob: -2.041325092315674
    4. ' ' → logprob: -4.166325092315674
    5. '_' → logprob: -4.291325092315674
    6. 'N' → logprob: -5.041325092315674
    7. ' _' → logprob: -5.541325092315674
    8. '(range' → logprob: -6.291325092315674
    9. ' for' → logprob: -6.916325092315674
    10. '<|end|>' → logprob: -8.166325569152832

Token 116: ' listes' (ID: 179198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' v' (ID: 323)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05510309338569641
    2. ' for' → logprob: -3.055103063583374
    3. '<|end|>' → logprob: -5.180103302001953
    4. '
' → logprob: -7.430103302001953
    5. '<|end|>' → logprob: -9.055103302001953
    6. '#' → logprob: -10.055103302001953
    7. 'n' → logprob: -10.180103302001953
    8. 's' → logprob: -11.180103302001953
    9. '```' → logprob: -11.180103302001953
    10. 'N' → logprob: -11.555103302001953

Token 118: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.6133623123168945
    2. 'idé' → logprob: -1.3633623123168945
    3. 'ides' → logprob: -2.6133623123168945
    4. 'al' → logprob: -3.2383623123168945
    5. 'id' → logprob: -3.2383623123168945
    6. 'ideo' → logprob: -3.6133623123168945
    7. '[]' → logprob: -5.3633623123168945
    8. '```' → logprob: -5.6133623123168945
    9. 'alue' → logprob: -5.7383623123168945
    10. 'i' → logprob: -5.7383623123168945

Token 119: ' mises' (ID: 94675)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6863950490951538
    2. '<|end|>' → logprob: -0.9363950490951538
    3. '
' → logprob: -2.6863951683044434
    4. ' for' → logprob: -3.4363951683044434
    5. '<|end|>' → logprob: -5.936395168304443
    6. '#' → logprob: -7.936395168304443
    7. '\n' → logprob: -8.061394691467285
    8. ')' → logprob: -8.311394691467285
    9. 'n' → logprob: -8.811394691467285
    10. '```' → logprob: -8.936394691467285

Token 120: ' dans' (ID: 2671)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04151292145252228
    2. 'à' → logprob: -4.041512966156006
    3. '[]' → logprob: -5.041512966156006
    4. ']' → logprob: -6.041512966156006
    5. 'dans' → logprob: -6.041512966156006
    6. ' bout' → logprob: -6.166512966156006
    7. '[' → logprob: -6.291512966156006
    8. ' dans' → logprob: -6.666512966156006
    9. 'au' → logprob: -7.041512966156006
    10. 'bout' → logprob: -7.166512966156006

Token 121: ' une' (ID: 2463)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.017213113605976105
    2. ' to' → logprob: -4.392213344573975
    3. '[to' → logprob: -5.767213344573975
    4. 'la' → logprob: -7.392213344573975
    5. '[]' → logprob: -7.642213344573975
    6. 'une' → logprob: -8.517212867736816
    7. ' la' → logprob: -9.017212867736816
    8. '[' → logprob: -9.642212867736816
    9. ' une' → logprob: -9.767212867736816
    10. '```' → logprob: -12.142212867736816

Token 122: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5744390487670898
    2. 'liste' → logprob: -1.5744390487670898
    3. ' liste' → logprob: -2.57443904876709
    4. 'range' → logprob: -2.69943904876709
    5. ' list' → logprob: -2.82443904876709
    6. 'to' → logprob: -3.82443904876709
    7. 'for' → logprob: -7.44943904876709
    8. 'main' → logprob: -7.82443904876709
    9. ' to' → logprob: -7.94943904876709
    10. ' range' → logprob: -7.94943904876709

Token 123: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004916597157716751
    2. ' for' → logprob: -5.754916667938232
    3. '<|end|>' → logprob: -7.129916667938232
    4. '#' → logprob: -7.754916667938232
    5. '
' → logprob: -7.754916667938232
    6. '```' → logprob: -10.504916191101074
    7. 'n' → logprob: -10.879916191101074
    8. '<|end|>' → logprob: -11.004916191101074
    9. 'N' → logprob: -12.379916191101074
    10. ')' → logprob: -12.754916191101074

Token 124: 'adj' (ID: 57001)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24519889056682587
    2. 'range' → logprob: -2.245198965072632
    3. ' range' → logprob: -2.370198965072632
    4. ' )' → logprob: -4.245198726654053
    5. '])' → logprob: -6.370198726654053
    6. ']' → logprob: -7.370198726654053
    7. 'N' → logprob: -8.120199203491211
    8. '(range' → logprob: -8.620199203491211
    9. ' N' → logprob: -8.745199203491211
    10. ' ' → logprob: -8.870199203491211

Token 125: 'acency' (ID: 118557)
  Prédit: 'acency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.019571509212255478
    2. 'ac' → logprob: -4.019571304321289
    3. 'acent' → logprob: -7.269571304321289
    4. ')' → logprob: -8.769571304321289
    5. ']' → logprob: -9.144571304321289
    6. '```' → logprob: -9.644571304321289
    7. '[i' → logprob: -9.769571304321289
    8. '[' → logprob: -10.019571304321289
    9. '_list' → logprob: -10.019571304321289
    10. '])' → logprob: -10.144571304321289

Token 126: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5129693746566772
    2. ')' → logprob: -1.0129693746566772
    3. ']' → logprob: -4.137969493865967
    4. '_lists' → logprob: -4.637969493865967
    5. 's' → logprob: -5.387969493865967
    6. 'list' → logprob: -5.887969493865967
    7. ' list' → logprob: -6.137969493865967
    8. ' ' → logprob: -7.137969493865967
    9. '```' → logprob: -7.637969493865967
    10. '_' → logprob: -8.012969017028809

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016504127415828407
    2. ' )' → logprob: -9.125164985656738
    3. 'for' → logprob: -10.375164985656738
    4. ')

' → logprob: -11.625164985656738
    5. ')
' → logprob: -11.625164985656738
    6. '])' → logprob: -13.000164985656738
    7. ' for' → logprob: -14.000164985656738
    8. '`)' → logprob: -14.125164985656738
    9. ']' → logprob: -14.375164985656738
    10. '#' → logprob: -14.625164985656738

Token 128: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023250321100931615
    2. ' for' → logprob: -8.625232696533203
    3. '#' → logprob: -10.125232696533203
    4. 'Q' → logprob: -11.500232696533203
    5. 'M' → logprob: -13.000232696533203
    6. '
' → logprob: -15.500232696533203
    7. 'For' → logprob: -16.750232696533203
    8. 'm' → logprob: -17.375232696533203
    9. 'K' → logprob: -17.625232696533203
    10. '```' → logprob: -18.125232696533203

Token 129: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028481483459472656
    2. ' for' → logprob: -5.877848148345947
    3. '
' → logprob: -10.752847671508789
    4. '#' → logprob: -11.127847671508789
    5. 'Pour' → logprob: -12.627847671508789
    6. 'For' → logprob: -13.502847671508789
    7. 'pour' → logprob: -14.502847671508789
    8. '```' → logprob: -15.252847671508789
    9. 'n' → logprob: -15.502847671508789
    10. 'A' → logprob: -15.627847671508789

Token 130: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.013484422117471695
    2. 'c' → logprob: -5.263484477996826
    3. 't' → logprob: -5.763484477996826
    4. 'cles' → logprob: -6.263484477996826
    5. 'cl' → logprob: -6.263484477996826
    6. 'cler' → logprob: -7.138484477996826
    7. '#' → logprob: -8.263484001159668
    8. 'r' → logprob: -10.013484001159668
    9. 'clé' → logprob: -10.263484001159668
    10. '```' → logprob: -10.513484001159668

Token 131: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03628318011760712
    2. 'for' → logprob: -3.536283254623413
    3. ' _' → logprob: -5.786283016204834
    4. '_' → logprob: -6.161283016204834
    5. ' i' → logprob: -6.661283016204834
    6. ' ' → logprob: -11.161283493041992
    7. ' ' → logprob: -11.286283493041992
    8. ' range' → logprob: -11.911283493041992
    9. 'i' → logprob: -12.536283493041992
    10. ' N' → logprob: -12.536283493041992

Token 132: ' lire' (ID: 46082)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.38709262013435364
    2. '_' → logprob: -1.1370925903320312
    3. ' range' → logprob: -8.887092590332031
    4. ' i' → logprob: -10.387092590332031
    5. ' ' → logprob: -10.512092590332031
    6. ' ' → logprob: -10.887092590332031
    7. '_i' → logprob: -13.012092590332031
    8. 'range' → logprob: -13.512092590332031
    9. ' in' → logprob: -14.012092590332031
    10. '_range' → logprob: -14.012092590332031

Token 133: ' chaque' (ID: 21194)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.11891605705022812
    2. ' _' → logprob: -3.1189160346984863
    3. '_' → logprob: -3.4939160346984863
    4. 'N' → logprob: -3.8689160346984863
    5. '(N' → logprob: -4.868916034698486
    6. '(' → logprob: -5.993916034698486
    7. ' range' → logprob: -5.993916034698486
    8. ' ' → logprob: -6.118916034698486
    9. 'range' → logprob: -6.993916034698486
    10. ' for' → logprob: -8.118916511535645

Token 134: ' ar' (ID: 646)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.003281452227383852
    2. '_' → logprob: -6.003281593322754
    3. ' i' → logprob: -7.503281593322754
    4. ' ar' → logprob: -8.753281593322754
    5. '_are' → logprob: -10.253281593322754
    6. ' sommet' → logprob: -11.128281593322754
    7. ' edge' → logprob: -11.878281593322754
    8. 'i' → logprob: -11.878281593322754
    9. ' are' → logprob: -11.878281593322754
    10. ' ' → logprob: -12.503281593322754

Token 135: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.020691247656941414
    2. 'êtes' → logprob: -4.395691394805908
    3. 'ète' → logprob: -5.645691394805908
    4. 'te' → logprob: -6.770691394805908
    5. 'êt' → logprob: -7.020691394805908
    6. 'c' → logprob: -7.520691394805908
    7. 'e' → logprob: -8.02069091796875
    8. 't' → logprob: -8.52069091796875
    9. 'r' → logprob: -8.64569091796875
    10. 're' → logprob: -8.77069091796875

Token 136: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08914665877819061
    2. ' for' → logprob: -2.464146614074707
    3. ' range' → logprob: -9.339146614074707
    4. '_' → logprob: -9.964146614074707
    5. 'range' → logprob: -9.964146614074707
    6. ' in' → logprob: -11.714146614074707
    7. 'N' → logprob: -12.214146614074707
    8. ' _' → logprob: -12.964146614074707
    9. '_range' → logprob: -13.089146614074707
    10. 'in' → logprob: -13.339146614074707

Token 137: 'N' (ID: 45)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45867690443992615
    2. '_' → logprob: -1.3336769342422485
    3. 'range' → logprob: -3.208676815032959
    4. ' _' → logprob: -3.958676815032959
    5. ' in' → logprob: -4.083676815032959
    6. ')' → logprob: -4.708676815032959
    7. ' N' → logprob: -5.083676815032959
    8. ' for' → logprob: -5.208676815032959
    9. 'for' → logprob: -5.833676815032959
    10. 'N' → logprob: -5.958676815032959

Token 138: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6328058242797852
    2. '-' → logprob: -0.7578058242797852
    3. ')' → logprob: -9.132805824279785
    4. '):' → logprob: -9.757805824279785
    5. ' ' → logprob: -11.132805824279785
    6. ' ' → logprob: -12.007805824279785
    7. '):
' → logprob: -12.257805824279785
    8. ' )' → logprob: -13.132805824279785
    9. '  ' → logprob: -13.257805824279785
    10. ' ):' → logprob: -13.320305824279785

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '-' → logprob: -14.875036239624023
    4. ')' → logprob: -16.375036239624023
    5. '2' → logprob: -18.750036239624023
    6. ' ' → logprob: -18.875036239624023
    7. '１' → logprob: -19.625036239624023
    8. ' -' → logprob: -19.750036239624023
    9. '```' → logprob: -19.875036239624023
    10. '۱' → logprob: -20.125036239624023

Token 140: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11439904570579529
    2. ')' → logprob: -2.489398956298828
    3. ' ):' → logprob: -3.989398956298828
    4. '):
' → logprob: -6.114398956298828
    5. ' )' → logprob: -6.489398956298828
    6. ' ' → logprob: -6.739398956298828
    7. 'for' → logprob: -7.489398956298828
    8. ' ' → logprob: -8.114398956298828
    9. '_' → logprob: -8.489398956298828
    10. ':' → logprob: -8.614398956298828

Token 141: ' car' (ID: 1669)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.19741342961788177
    2. ')' → logprob: -2.197413444519043
    3. ' for' → logprob: -3.447413444519043
    4. ' range' → logprob: -4.322413444519043
    5. 'N' → logprob: -4.822413444519043
    6. ' )' → logprob: -5.197413444519043
    7. ' ' → logprob: -5.947413444519043
    8. 'for' → logprob: -6.197413444519043
    9. ' _' → logprob: -6.322413444519043
    10. 'range' → logprob: -6.947413444519043

Token 142: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2577168941497803
    2. ' le' → logprob: -1.2577168941497803
    3. ' un' → logprob: -1.5077168941497803
    4. 'for' → logprob: -3.0077168941497803
    5. ' les' → logprob: -3.1327168941497803
    6. 'N' → logprob: -3.1327168941497803
    7. ' N' → logprob: -3.2577168941497803
    8. ' range' → logprob: -5.132717132568359
    9. 'range' → logprob: -5.382717132568359
    10. ' ' → logprob: -5.507717132568359

Token 143: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.01040800753980875
    2. ' grap' → logprob: -5.3854079246521
    3. 'ar' → logprob: -5.8854079246521
    4. ' tree' → logprob: -6.1354079246521
    5. 'gr' → logprob: -8.635408401489258
    6. ' graph' → logprob: -8.635408401489258
    7. 'tree' → logprob: -9.010408401489258
    8. 'graph' → logprob: -9.635408401489258
    9. ' arbres' → logprob: -9.635408401489258
    10. '```' → logprob: -9.885408401489258

Token 144: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.327532023191452
    2. ' for' → logprob: -1.4525320529937744
    3. 'for' → logprob: -4.327531814575195
    4. '):' → logprob: -4.577531814575195
    5. ' pour' → logprob: -4.952531814575195
    6. ' )' → logprob: -4.952531814575195
    7. 'n' → logprob: -6.952531814575195
    8. ':' → logprob: -7.202531814575195
    9. ' n' → logprob: -7.327531814575195
    10. ' de' → logprob: -7.577531814575195

Token 145: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02476254478096962
    2. ' N' → logprob: -4.3997626304626465
    3. 'n' → logprob: -5.0247626304626465
    4. '```' → logprob: -6.7747626304626465
    5. 'edges' → logprob: -7.0247626304626465
    6. ' edges' → logprob: -7.6497626304626465
    7. 's' → logprob: -7.6497626304626465
    8. ')' → logprob: -7.8997626304626465
    9. 'graph' → logprob: -7.8997626304626465
    10. 'code' → logprob: -8.524762153625488

Token 146: ' somm' (ID: 44830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9261841177940369
    2. ' nodes' → logprob: -1.5511841773986816
    3. 's' → logprob: -2.0511841773986816
    4. ' somm' → logprob: -2.4261841773986816
    5. ' n' → logprob: -3.3011841773986816
    6. 'n' → logprob: -3.5511841773986816
    7. ' ' → logprob: -3.5511841773986816
    8. 'nodes' → logprob: -3.6761841773986816
    9. ' vertices' → logprob: -4.301184177398682
    10. ' sommet' → logprob: -4.801184177398682

Token 147: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0038640929851680994
    2. 'es' → logprob: -5.878864288330078
    3. 'ents' → logprob: -7.628864288330078
    4. 'ats' → logprob: -8.503864288330078
    5. 'ts' → logprob: -9.003864288330078
    6. 'et' → logprob: -9.378864288330078
    7. 'vertices' → logprob: -10.628864288330078
    8. 'ètres' → logprob: -11.003864288330078
    9. 'pts' → logprob: -11.378864288330078
    10. 'uts' → logprob: -11.628864288330078

Token 148: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31151890754699707
    2. '):' → logprob: -2.436518907546997
    3. ' for' → logprob: -2.686518907546997
    4. 'for' → logprob: -3.311518907546997
    5. ' pour' → logprob: -3.811518907546997
    6. ' )' → logprob: -4.311518669128418
    7. ' range' → logprob: -4.686518669128418
    8. ':' → logprob: -4.936518669128418
    9. ' dans' → logprob: -5.186518669128418
    10. 'pour' → logprob: -5.936518669128418

Token 149: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4236105680465698
    2. 'N' → logprob: -1.1736105680465698
    3. ')' → logprob: -3.7986106872558594
    4. ' ' → logprob: -4.798610687255859
    5. ' une' → logprob: -6.548610687255859
    6. ' un' → logprob: -7.673610687255859
    7. ' )' → logprob: -7.798610687255859
    8. 'n' → logprob: -7.923610687255859
    9. ' ' → logprob: -7.923610687255859
    10. '  ' → logprob: -8.04861068725586

Token 150: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012512595392763615
    2. ' -' → logprob: -4.387512683868408
    3. ' ' → logprob: -13.63751220703125
    4. ' ' → logprob: -13.88751220703125
    5. ')' → logprob: -14.76251220703125
    6. '<|end|>' → logprob: -16.26251220703125
    7. '```' → logprob: -16.38751220703125
    8. ' tokens' → logprob: -16.76251220703125
    9. '1' → logprob: -17.26251220703125
    10. ' )' → logprob: -18.01251220703125

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09152383357286453
    2. '-' → logprob: -2.4665238857269287
    3. ' ' → logprob: -6.34152364730835
    4. '```' → logprob: -7.34152364730835
    5. '2' → logprob: -9.466524124145508
    6. ')' → logprob: -10.591524124145508
    7. 'edges' → logprob: -11.091524124145508
    8. ' -' → logprob: -11.216524124145508
    9. 'tokens' → logprob: -11.716524124145508
    10. '<|end|>' → logprob: -11.841524124145508

Token 152: ' ar' (ID: 646)
  Prédit: ' ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ar' → logprob: -0.13274133205413818
    2. 'ar' → logprob: -3.1327414512634277
    3. ' ' → logprob: -3.8827414512634277
    4. ')' → logprob: -3.8827414512634277
    5. ' edges' → logprob: -4.007741451263428
    6. 'edges' → logprob: -4.257741451263428
    7. ' ' → logprob: -5.882741451263428
    8. ' lignes' → logprob: -6.507741451263428
    9. ' )' → logprob: -6.882741451263428
    10. 's' → logprob: -7.632741451263428

Token 153: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.0035217944532632828
    2. 'tes' → logprob: -5.753521919250488
    3. 'ê' → logprob: -9.878521919250488
    4. 'ètes' → logprob: -10.003521919250488
    5. 'c' → logprob: -10.378521919250488
    6. 'etes' → logprob: -10.503521919250488
    7. 'cs' → logprob: -10.503521919250488
    8. '�' → logprob: -10.628521919250488
    9. 'êts' → logprob: -11.253521919250488
    10. '```' → logprob: -11.253521919250488

Token 154: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07894135266542435
    2. ' for' → logprob: -2.5789413452148438
    3. '
' → logprob: -10.703941345214844
    4. 'range' → logprob: -11.328941345214844
    5. ' range' → logprob: -12.203941345214844
    6. ':' → logprob: -12.703941345214844
    7. ' in' → logprob: -13.328941345214844
    8. ')' → logprob: -13.328941345214844
    9. ',' → logprob: -13.453941345214844
    10. ':
' → logprob: -13.453941345214844

Token 155: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003679528832435608
    2. ' for' → logprob: -5.6286797523498535
    3. '
' → logprob: -9.503679275512695
    4. 'range' → logprob: -12.878679275512695
    5. 'n' → logprob: -14.128679275512695
    6. ' 
' → logprob: -14.503679275512695
    7. '_' → logprob: -15.128679275512695
    8. 'N' → logprob: -15.503679275512695
    9. '<|end|>' → logprob: -16.003679275512695
    10. '_for' → logprob: -16.253679275512695

Token 156: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.005139357876032591
    2. '_' → logprob: -5.505139350891113
    3. ' i' → logprob: -6.880139350891113
    4. ' ' → logprob: -10.380139350891113
    5. ' ' → logprob: -13.755139350891113
    6. 'i' → logprob: -16.00514030456543
    7. '_i' → logprob: -16.38014030456543
    8. ' _
' → logprob: -17.50514030456543
    9. ' ‌' → logprob: -17.88014030456543
    10. ' range' → logprob: -19.13014030456543

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003943044226616621
    2. 'in' → logprob: -5.628942966461182
    3. ' ' → logprob: -8.00394344329834
    4. '_' → logprob: -12.75394344329834
    5. ' i' → logprob: -13.12894344329834
    6. 'range' → logprob: -14.00394344329834
    7. ' _' → logprob: -14.12894344329834
    8. ' ' → logprob: -14.37894344329834
    9. ',' → logprob: -15.12894344329834
    10. '1' → logprob: -15.50394344329834

Token 158: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0789022371172905
    2. 'range' → logprob: -2.578902244567871
    3. ' ' → logprob: -11.328902244567871
    4. '	range' → logprob: -15.578902244567871
    5. '(range' → logprob: -16.078901290893555
    6. ' rang' → logprob: -17.453901290893555
    7. 'rang' → logprob: -17.453901290893555
    8. ' in' → logprob: -17.703901290893555
    9. '  ' → logprob: -18.078901290893555
    10. ' ' → logprob: -18.328901290893555

Token 159: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003475101664662361
    2. '(' → logprob: -5.753475189208984
    3. ' (' → logprob: -8.128475189208984
    4. '(
' → logprob: -13.503475189208984
    5. '((' → logprob: -15.128475189208984
    6. ' ' → logprob: -15.253475189208984
    7. ' N' → logprob: -15.878475189208984
    8. '(n' → logprob: -16.378475189208984
    9. 'N' → logprob: -17.003475189208984
    10. '(int' → logprob: -17.628475189208984

Token 160: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05488736182451248
    2. '-' → logprob: -2.929887294769287
    3. ' ' → logprob: -12.554887771606445
    4. ')' → logprob: -14.179887771606445
    5. '1' → logprob: -15.054887771606445
    6. ' )' → logprob: -15.429887771606445
    7. ' ' → logprob: -15.929887771606445
    8. ' -
' → logprob: -17.054887771606445
    9. '):
' → logprob: -17.054887771606445
    10. '
' → logprob: -17.179887771606445

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269284337759018
    2. ' ' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. ')' → logprob: -16.751928329467773
    5. '   ' → logprob: -17.501928329467773
    6. '```' → logprob: -17.626928329467773
    7. '2' → logprob: -18.189428329467773
    8. '  ' → logprob: -18.689428329467773
    9. '۱' → logprob: -19.189428329467773
    10. '
' → logprob: -19.376928329467773

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. ')' → logprob: -16.50023078918457
    4. '   ' → logprob: -18.00023078918457
    5. '  ' → logprob: -18.25023078918457
    6. '```' → logprob: -18.50023078918457
    7. ' ' → logprob: -19.37523078918457
    8. ' )' → logprob: -19.68773078918457
    9. '2' → logprob: -20.06273078918457
    10. '

' → logprob: -20.31273078918457

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018800891702994704
    2. '):
' → logprob: -6.751880168914795
    3. ' ):' → logprob: -7.376880168914795
    4. ')' → logprob: -9.751879692077637
    5. ':' → logprob: -10.751879692077637
    6. '):
' → logprob: -13.001879692077637
    7. ' :' → logprob: -13.626879692077637
    8. ' ):
' → logprob: -14.501879692077637
    9. ' )' → logprob: -15.626879692077637
    10. '}:' → logprob: -16.376880645751953

Token 164: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.21698875725269318
    2. '   ' → logprob: -2.2169888019561768
    3. 'u' → logprob: -2.8419888019561768
    4. 'a' → logprob: -4.341988563537598
    5. ' a' → logprob: -4.341988563537598
    6. '	u' → logprob: -7.591988563537598
    7. ' line' → logprob: -8.466988563537598
    8. ' s' → logprob: -8.466988563537598
    9. '    
' → logprob: -8.591988563537598
    10. ' from' → logprob: -9.216988563537598

Token 165: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3878914713859558
    2. 'a' → logprob: -1.1378915309906006
    3. ' u' → logprob: -7.0128912925720215
    4. ' a' → logprob: -9.38789176940918
    5. '   ' → logprob: -11.01289176940918
    6. 'x' → logprob: -11.01289176940918
    7. 'A' → logprob: -13.51289176940918
    8. 'U' → logprob: -14.88789176940918
    9. '	u' → logprob: -14.88789176940918
    10. ' ' → logprob: -15.38789176940918

Token 166: ' Lit' (ID: 45595)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.576616108417511
    2. 'a' → logprob: -0.826616108417511
    3. ' u' → logprob: -7.701616287231445
    4. ' a' → logprob: -9.076616287231445
    5. 'x' → logprob: -9.451616287231445
    6. '   ' → logprob: -11.451616287231445
    7. 'A' → logprob: -11.701616287231445
    8. 's' → logprob: -13.076616287231445
    9. ' ' → logprob: -13.076616287231445
    10. 'f' → logprob: -13.576616287231445

Token 167: ' une' (ID: 2463)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.10163948684930801
    2. 'u' → logprob: -2.72663950920105
    3. ' a' → logprob: -4.101639270782471
    4. 'a' → logprob: -4.226639270782471
    5. ' ' → logprob: -11.351639747619629
    6. 'x' → logprob: -11.726639747619629
    7. ' x' → logprob: -11.726639747619629
    8. '(u' → logprob: -12.226639747619629
    9. '	u' → logprob: -12.351639747619629
    10. ' v' → logprob: -12.476639747619629

Token 168: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.0963568240404129
    2. 'ligne' → logprob: -2.7213568687438965
    3. ' u' → logprob: -4.4713568687438965
    4. ' line' → logprob: -4.9713568687438965
    5. 'u' → logprob: -6.4713568687438965
    6. 'a' → logprob: -6.8463568687438965
    7. ' paire' → logprob: -6.8463568687438965
    8. ' ar' → logprob: -7.4713568687438965
    9. ' ' → logprob: -7.5963568687438965
    10. 'l' → logprob: -7.7213568687438965

Token 169: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8341562151908875
    2. ' u' → logprob: -1.8341562747955322
    3. ' =' → logprob: -2.2091562747955322
    4. 'a' → logprob: -2.3341562747955322
    5. 'u' → logprob: -2.5841562747955322
    6. '()' → logprob: -3.0841562747955322
    7. 's' → logprob: -3.4591562747955322
    8. 'split' → logprob: -4.834156036376953
    9. 'n' → logprob: -5.459156036376953
    10. '().' → logprob: -5.584156036376953

Token 170: ' la' (ID: 557)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.024120282381772995
    2. 'u' → logprob: -4.024120330810547
    3. ' a' → logprob: -5.524120330810547
    4. 'a' → logprob: -6.274120330810547
    5. ' x' → logprob: -10.024120330810547
    6. ' v' → logprob: -12.149120330810547
    7. 'x' → logprob: -12.149120330810547
    8. ' s' → logprob: -12.524120330810547
    9. '   ' → logprob: -12.524120330810547
    10. 's' → logprob: -12.899120330810547

Token 171: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.013890448957681656
    2. ' split' → logprob: -4.638890266418457
    3. 'strip' → logprob: -5.513890266418457
    4. 'map' → logprob: -10.013890266418457
    5. ' strip' → logprob: -11.138890266418457
    6. '.split' → logprob: -11.263890266418457
    7. ' map' → logprob: -11.888890266418457
    8. 'rstrip' → logprob: -12.138890266418457
    9. 's' → logprob: -12.263890266418457
    10. 'spl' → logprob: -13.138890266418457

Token 172: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.034307800233364105
    2. 'page' → logprob: -4.159307956695557
    3. 'per' → logprob: -4.534307956695557
    4. 'p' → logprob: -5.159307956695557
    5. 'pte' → logprob: -6.784307956695557
    6. 'ppe' → logprob: -9.784307479858398
    7. 'pa' → logprob: -10.034307479858398
    8. '```' → logprob: -10.034307479858398
    9. 'nte' → logprob: -10.159307479858398
    10. 'pé' → logprob: -10.534307479858398

Token 173: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009948737919330597
    2. '()' → logprob: -5.00994873046875
    3. '   ' → logprob: -6.00994873046875
    4. '().' → logprob: -8.75994873046875
    5. 'en' → logprob: -8.88494873046875
    6. ',' → logprob: -9.25994873046875
    7. 's' → logprob: -10.13494873046875
    8. ' in' → logprob: -10.38494873046875
    9. ' into' → logprob: -10.38494873046875
    10. 'r' → logprob: -10.63494873046875

Token 174: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.18551023304462433
    2. 'de' → logprob: -1.810510277748108
    3. '2' → logprob: -6.560510158538818
    4. 'ent' → logprob: -6.685510158538818
    5. ' u' → logprob: -6.810510158538818
    6. 'tokens' → logprob: -7.935510158538818
    7. 'u' → logprob: -8.060510635375977
    8. 's' → logprob: -8.310510635375977
    9. ' ent' → logprob: -8.560510635375977
    10. ' ' → logprob: -8.685510635375977

Token 175: ' parties' (ID: 13531)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5015493631362915
    2. ' somm' → logprob: -2.126549243927002
    3. 'a' → logprob: -2.876549243927002
    4. ' sommet' → logprob: -3.126549243927002
    5. ' a' → logprob: -3.251549243927002
    6. ' integers' → logprob: -3.751549243927002
    7. ' u' → logprob: -4.251549243927002
    8. 'ent' → logprob: -4.251549243927002
    9. ' ent' → logprob: -4.501549243927002
    10. ' som' → logprob: -4.751549243927002

Token 176: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6640934348106384
    2. ' u' → logprob: -0.7890934348106384
    3. 'a' → logprob: -4.039093494415283
    4. '   ' → logprob: -4.789093494415283
    5. ' a' → logprob: -6.414093494415283
    6. ',' → logprob: -6.539093494415283
    7. 's' → logprob: -7.289093494415283
    8. ' s' → logprob: -8.414093017578125
    9. ')' → logprob: -8.539093017578125
    10. '(u' → logprob: -8.789093017578125

Token 177: ' convert' (ID: 8452)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7922062277793884
    2. ' u' → logprob: -0.7922062277793884
    3. 'a' → logprob: -2.542206287384033
    4. ' a' → logprob: -4.167206287384033
    5. ' ' → logprob: -9.667205810546875
    6. '   ' → logprob: -10.292205810546875
    7. 'x' → logprob: -11.292205810546875
    8. 'A' → logprob: -12.167205810546875
    9. ' A' → logprob: -13.292205810546875
    10. ' x' → logprob: -13.417205810546875

Token 178: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.021735556423664093
    2. 'ies' → logprob: -4.021735668182373
    3. 'is' → logprob: -6.396735668182373
    4. 'i' → logprob: -7.396735668182373
    5. 'issant' → logprob: -7.521735668182373
    6. 'ir' → logprob: -7.646735668182373
    7. 'int' → logprob: -8.646735191345215
    8. 'ie' → logprob: -10.271735191345215
    9. '(int' → logprob: -11.646735191345215
    10. 't' → logprob: -11.771735191345215

Token 179: ' chacun' (ID: 52136)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.14218831062316895
    2. '()' → logprob: -2.267188310623169
    3. 'en' → logprob: -5.14218807220459
    4. ' les' → logprob: -5.14218807220459
    5. 'l' → logprob: -5.51718807220459
    6. '(' → logprob: -5.76718807220459
    7. 'int' → logprob: -5.89218807220459
    8. 'les' → logprob: -6.51718807220459
    9. ' ' → logprob: -6.51718807220459
    10. 'ent' → logprob: -7.39218807220459

Token 180: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.08341982960700989
    2. 'en' → logprob: -2.5834197998046875
    3. 'es' → logprob: -5.8334197998046875
    4. 'e' → logprob: -6.9584197998046875
    5. ' ' → logprob: -8.958419799804688
    6. '   ' → logprob: -9.208419799804688
    7. 'int' → logprob: -9.333419799804688
    8. '_en' → logprob: -9.333419799804688
    9. 'ent' → logprob: -9.958419799804688
    10. '(en' → logprob: -10.208419799804688

Token 181: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13469409942626953
    2. ' int' → logprob: -2.5096940994262695
    3. 'ent' → logprob: -3.1346940994262695
    4. ' ent' → logprob: -7.6346940994262695
    5. ' entier' → logprob: -8.13469409942627
    6. ' integers' → logprob: -8.63469409942627
    7. 'ints' → logprob: -9.00969409942627
    8. 'inte' → logprob: -9.50969409942627
    9. ' un' → logprob: -11.25969409942627
    10. ' ' → logprob: -11.75969409942627

Token 182: ' en' (ID: 469)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.8669240474700928
    2. 'u' → logprob: -0.9919240474700928
    3. '(u' → logprob: -1.9919240474700928
    4. '   ' → logprob: -3.2419240474700928
    5. 'a' → logprob: -3.4919240474700928
    6. ',' → logprob: -6.866924285888672
    7. '()' → logprob: -7.741924285888672
    8. ' a' → logprob: -7.866924285888672
    9. ',u' → logprob: -8.241924285888672
    10. '_u' → logprob: -8.991924285888672

Token 183: ' sou' (ID: 4069)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3199208080768585
    2. ' u' → logprob: -2.694920778274536
    3. 'map' → logprob: -2.694920778274536
    4. 's' → logprob: -3.319920778274536
    5. ' ' → logprob: -4.694921016693115
    6. ' lis' → logprob: -4.819921016693115
    7. ' input' → logprob: -4.944921016693115
    8. ' a' → logprob: -5.069921016693115
    9. 'u' → logprob: -5.194921016693115
    10. ' s' → logprob: -5.194921016693115

Token 184: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.29083770513534546
    2. 'r' → logprob: -2.0408377647399902
    3. 'stra' → logprob: -2.9158377647399902
    4. 'stract' → logprob: -3.7908377647399902
    5. 'p' → logprob: -3.9158377647399902
    6. 'straction' → logprob: -4.54083776473999
    7. 'tr' → logprob: -5.66583776473999
    8. 'ples' → logprob: -5.79083776473999
    9. 'met' → logprob: -5.91583776473999
    10. 'pes' → logprob: -6.66583776473999

Token 185: 'ayant' (ID: 130896)
  Prédit: 'ait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ait' → logprob: -0.4740455448627472
    2. 'act' → logprob: -1.9740455150604248
    3. 'aient' → logprob: -2.349045515060425
    4. 'ai' → logprob: -3.974045515060425
    5. '(' → logprob: -4.099045753479004
    6. 'ayant' → logprob: -4.224045753479004
    7. 'a' → logprob: -4.349045753479004
    8. '1' → logprob: -4.474045753479004
    9. 'aire' → logprob: -4.474045753479004
    10. 'acting' → logprob: -4.599045753479004

Token 186: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014302060008049011
    2. '1' → logprob: -4.2643022537231445
    3. ' ' → logprob: -8.889302253723145
    4. '_' → logprob: -15.639302253723145
    5. ' one' → logprob: -15.639302253723145
    6. ' un' → logprob: -15.889302253723145
    7. '   ' → logprob: -16.139301300048828
    8. '  ' → logprob: -17.014301300048828
    9. 's' → logprob: -17.139301300048828
    10. ' 
' → logprob: -17.389301300048828

Token 187: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11650604009628296
    2. '1' → logprob: -2.2415060997009277
    3. '(' → logprob: -5.616506099700928
    4. ' ' → logprob: -10.49150562286377
    5. '   ' → logprob: -12.24150562286377
    6. ' (' → logprob: -13.61650562286377
    7. '()' → logprob: -13.74150562286377
    8. 's' → logprob: -13.86650562286377
    9. '  ' → logprob: -13.99150562286377
    10. '_' → logprob: -14.99150562286377

Token 188: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2418123483657837
    2. '   ' → logprob: -1.2418123483657837
    3. 'u' → logprob: -1.7418123483657837
    4. ' u' → logprob: -1.8668123483657837
    5. ' ,' → logprob: -3.366812229156494
    6. 'a' → logprob: -4.116812229156494
    7. 's' → logprob: -4.366812229156494
    8. ')' → logprob: -4.741812229156494
    9. ' a' → logprob: -5.741812229156494
    10. ' s' → logprob: -5.991812229156494

Token 189: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.20600005984306335
    2. ' u' → logprob: -1.8310000896453857
    3. '   ' → logprob: -4.080999851226807
    4. ',' → logprob: -5.830999851226807
    5. 'a' → logprob: -5.830999851226807
    6. '(u' → logprob: -6.705999851226807
    7. 's' → logprob: -7.705999851226807
    8. ',u' → logprob: -8.081000328063965
    9. ' a' → logprob: -8.206000328063965
    10. ' ,' → logprob: -8.581000328063965

Token 190: ' #' (ID: 1069)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2036552131175995
    2. ' u' → logprob: -1.7036552429199219
    3. 'a' → logprob: -6.203655242919922
    4. ' a' → logprob: -8.953655242919922
    5. '   ' → logprob: -9.703655242919922
    6. 'v' → logprob: -12.203655242919922
    7. ' line' → logprob: -12.453655242919922
    8. 'l' → logprob: -12.578655242919922
    9. 'x' → logprob: -12.703655242919922
    10. '(u' → logprob: -12.953655242919922

Token 191: ' pour' (ID: 1930)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.29723912477493286
    2. ' u' → logprob: -1.422239065170288
    3. 'a' → logprob: -4.297239303588867
    4. ' a' → logprob: -6.297239303588867
    5. '   ' → logprob: -7.922239303588867
    6. ' ' → logprob: -9.297239303588867
    7. 'l' → logprob: -11.297239303588867
    8. 'x' → logprob: -11.922239303588867
    9. 'v' → logprob: -12.422239303588867
    10. 's' → logprob: -12.422239303588867

Token 192: ' que' (ID: 661)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.08480288833379745
    2. ' avoir' → logprob: -3.0848028659820557
    3. '_' → logprob: -5.084803104400635
    4. ' adapter' → logprob: -5.334803104400635
    5. ' ' → logprob: -5.459803104400635
    6. ' convertir' → logprob: -5.834803104400635
    7. ' passer' → logprob: -5.959803104400635
    8. ' passage' → logprob: -6.209803104400635
    9. ' index' → logprob: -6.584803104400635
    10. '0' → logprob: -6.834803104400635

Token 193: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2422497421503067
    2. ' ' → logprob: -2.7422497272491455
    3. ' l' → logprob: -2.9922497272491455
    4. ' que' → logprob: -4.242249965667725
    5. ' le' → logprob: -4.617249965667725
    6. 'les' → logprob: -4.617249965667725
    7. ' ce' → logprob: -4.617249965667725
    8. ' la' → logprob: -4.867249965667725
    9. ' chaque' → logprob: -5.117249965667725
    10. '0' → logprob: -5.617249965667725

Token 194: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.6393147706985474
    2. ' somm' → logprob: -1.5143147706985474
    3. 'indices' → logprob: -1.5143147706985474
    4. 's' → logprob: -4.764314651489258
    5. ' sommet' → logprob: -5.014314651489258
    6. 'som' → logprob: -5.139314651489258
    7. 'index' → logprob: -5.264314651489258
    8. 'indexes' → logprob: -7.139314651489258
    9. ' noe' → logprob: -7.264314651489258
    10. ' index' → logprob: -7.389314651489258

Token 195: ' commencent' (ID: 184941)
  Prédit: ' soient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soient' → logprob: -0.6283680200576782
    2. ' commencent' → logprob: -1.3783680200576782
    3. ' des' → logprob: -2.6283679008483887
    4. 's' → logprob: -2.8783679008483887
    5. 'so' → logprob: -4.003367900848389
    6. ' deviennent' → logprob: -4.128367900848389
    7. ' =' → logprob: -4.628367900848389
    8. 'de' → logprob: -5.253367900848389
    9. '=' → logprob: -5.753367900848389
    10. ' so' → logprob: -5.878367900848389

Token 196: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11436757445335388
    2. 'from' → logprob: -3.2393674850463867
    3. ' at' → logprob: -3.4893674850463867
    4. ' from' → logprob: -3.6143674850463867
    5. 'à' → logprob: -4.989367485046387
    6. ' par' → logprob: -5.989367485046387
    7. ' ' → logprob: -7.489367485046387
    8. 'at' → logprob: -7.864367485046387
    9. '0' → logprob: -8.239367485046387
    10. ' de' → logprob: -8.489367485046387

Token 197: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009938470087945461
    2. ' ' → logprob: -4.6349382400512695
    3. ' zéro' → logprob: -9.38493824005127
    4. ' z' → logprob: -10.13493824005127
    5. 'z' → logprob: -10.13493824005127
    6. ' zero' → logprob: -11.50993824005127
    7. 'zero' → logprob: -11.63493824005127
    8. '```' → logprob: -16.134939193725586
    9. ' Z' → logprob: -16.884939193725586
    10. ' ' → logprob: -17.259939193725586

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -10.750060081481934
    3. 'z' → logprob: -10.750060081481934
    4. ' zéro' → logprob: -11.500060081481934
    5. 'zero' → logprob: -12.125060081481934
    6. ' z' → logprob: -14.000060081481934
    7. ' zero' → logprob: -15.375060081481934
    8. '```' → logprob: -16.000059127807617
    9. 'Z' → logprob: -19.250059127807617
    10. ' صفر' → logprob: -19.625059127807617

Token 199: '.' (ID: 13)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28736868500709534
    2. ' u' → logprob: -1.412368655204773
    3. '   ' → logprob: -5.9123687744140625
    4. 'a' → logprob: -6.2873687744140625
    5. ',' → logprob: -6.9123687744140625
    6. ' a' → logprob: -8.412368774414062
    7. ',u' → logprob: -9.287368774414062
    8. '(u' → logprob: -9.412368774414062
    9. '    
' → logprob: -9.662368774414062
    10. ' ,' → logprob: -10.787368774414062

Token 200: ' map' (ID: 4014)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06973455846309662
    2. ' u' → logprob: -2.819734573364258
    3. 'a' → logprob: -4.944734573364258
    4. '   ' → logprob: -8.194734573364258
    5. ' a' → logprob: -8.569734573364258
    6. ' line' → logprob: -9.444734573364258
    7. 'line' → logprob: -10.819734573364258
    8. 'U' → logprob: -11.819734573364258
    9. '(u' → logprob: -11.944734573364258
    10. 's' → logprob: -12.194734573364258

Token 201: ' applique' (ID: 180579)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005460236221551895
    2. '(' → logprob: -5.755460262298584
    3. 'int' → logprob: -6.880460262298584
    4. '(lambda' → logprob: -6.880460262298584
    5. '=int' → logprob: -9.005459785461426
    6. ' int' → logprob: -10.130459785461426
    7. '<int' → logprob: -11.005459785461426
    8. '(str' → logprob: -11.130459785461426
    9. '[int' → logprob: -11.755459785461426
    10. '(list' → logprob: -12.380459785461426

Token 202: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015938643366098404
    2. '(lambda' → logprob: -4.265938758850098
    3. 'int' → logprob: -6.765938758850098
    4. '(' → logprob: -7.515938758850098
    5. '(str' → logprob: -10.390938758850098
    6. 'lambda' → logprob: -10.640938758850098
    7. ' int' → logprob: -11.265938758850098
    8. '(
' → logprob: -12.140938758850098
    9. '<int' → logprob: -13.765938758850098
    10. '[int' → logprob: -14.140938758850098

Token 203: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13055433332920074
    2. 'lambda' → logprob: -2.130554437637329
    3. ' int' → logprob: -6.00555419921875
    4. ' lambda' → logprob: -6.88055419921875
    5. 'str' → logprob: -9.13055419921875
    6. '(lambda' → logprob: -11.88055419921875
    7. 'list' → logprob: -12.88055419921875
    8. '(int' → logprob: -12.88055419921875
    9. 'lam' → logprob: -13.38055419921875
    10. 'input' → logprob: -13.50555419921875

Token 204: ' lambda' (ID: 27871)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0305487047880888
    2. 'int' → logprob: -3.5305488109588623
    3. '(lambda' → logprob: -7.280548572540283
    4. '(str' → logprob: -9.780549049377441
    5. ' int' → logprob: -10.655549049377441
    6. '(' → logprob: -10.780549049377441
    7. 'lambda' → logprob: -12.280549049377441
    8. 'str' → logprob: -13.780549049377441
    9. '[int' → logprob: -14.280549049377441
    10. '<int' → logprob: -14.405549049377441

Token 205: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8547018766403198
    2. '(lambda' → logprob: -0.8547018766403198
    3. '(' → logprob: -2.6047019958496094
    4. '(int' → logprob: -2.8547019958496094
    5. 'int' → logprob: -5.479701995849609
    6. '   ' → logprob: -6.229701995849609
    7. '(
' → logprob: -6.354701995849609
    8. ')' → logprob: -6.479701995849609
    9. 'lambda' → logprob: -6.729701995849609
    10. '(str' → logprob: -6.729701995849609

Token 206: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6595454216003418
    2. 'input' → logprob: -0.7845454216003418
    3. ' la' → logprob: -4.409545421600342
    4. 'l' → logprob: -5.909545421600342
    5. 'int' → logprob: -6.159545421600342
    6. 'la' → logprob: -6.284545421600342
    7. ' l' → logprob: -6.534545421600342
    8. 'range' → logprob: -6.534545421600342
    9. 'lambda' → logprob: -6.659545421600342
    10. ' ' → logprob: -7.659545421600342

Token 207: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2469671368598938
    2. ' x' → logprob: -1.996967077255249
    3. 'token' → logprob: -4.121967315673828
    4. 'element' → logprob: -4.246967315673828
    5. ' token' → logprob: -4.746967315673828
    6. 'item' → logprob: -5.246967315673828
    7. ' element' → logprob: -5.371967315673828
    8. 'int' → logprob: -5.371967315673828
    9. 'elem' → logprob: -5.371967315673828
    10. 'input' → logprob: -5.621967315673828

Token 208: ' obtenu' (ID: 117330)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5200617909431458
    2. '(' → logprob: -2.770061731338501
    3. '(lambda' → logprob: -2.770061731338501
    4. '   ' → logprob: -3.270061731338501
    5. '(input' → logprob: -3.770061731338501
    6. ')' → logprob: -3.770061731338501
    7. '(
' → logprob: -3.895061731338501
    8. '(map' → logprob: -4.02006196975708
    9. '(s' → logprob: -4.02006196975708
    10. 'input' → logprob: -4.39506196975708

Token 209: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30994147062301636
    2. ')' → logprob: -2.309941530227661
    3. '(' → logprob: -2.434941530227661
    4. 'from' → logprob: -3.934941530227661
    5. '   ' → logprob: -4.434941291809082
    6. ':' → logprob: -5.184941291809082
    7. '(
' → logprob: -5.184941291809082
    8. '()' → logprob: -5.434941291809082
    9. ',
' → logprob: -6.059941291809082
    10. '(map' → logprob: -6.184941291809082

Token 210: ' split' (ID: 12648)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.013308235444128513
    2. ' input' → logprob: -4.388308048248291
    3. 'str' → logprob: -7.263308048248291
    4. 'lambda' → logprob: -10.38830852508545
    5. 'split' → logprob: -10.51330852508545
    6. ' str' → logprob: -11.01330852508545
    7. 'map' → logprob: -11.13830852508545
    8. '(input' → logprob: -12.51330852508545
    9. 'int' → logprob: -13.38830852508545
    10. 'line' → logprob: -14.76330852508545

Token 211: '().
' (ID: 58434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7835416197776794
    2. ',' → logprob: -1.7835416793823242
    3. '(' → logprob: -2.033541679382324
    4. ')' → logprob: -2.533541679382324
    5. '(u' → logprob: -3.283541679382324
    6. '(s' → logprob: -4.033541679382324
    7. '()' → logprob: -4.533541679382324
    8. 's' → logprob: -4.658541679382324
    9. ':' → logprob: -4.658541679382324
    10. ' (' → logprob: -5.158541679382324

Token 212: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7394375801086426
    2. ' u' → logprob: -1.2394375801086426
    3. '   ' → logprob: -1.7394375801086426
    4. '(u' → logprob: -4.114437580108643
    5. ' line' → logprob: -4.239437580108643
    6. 'a' → logprob: -4.364437580108643
    7. ' a' → logprob: -5.864437580108643
    8. 'line' → logprob: -6.489437580108643
    9. ',' → logprob: -6.989437580108643
    10. ' edges' → logprob: -6.989437580108643

Token 213: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0421675406396389
    2. 'a' (adapté à ' a') → logprob: -3.6671674251556396
    3. ' u' → logprob: -4.542167663574219
    4. '   ' → logprob: -6.042167663574219
    5. 'l' → logprob: -6.917167663574219
    6. 'line' → logprob: -8.167167663574219
    7. 'x' → logprob: -8.167167663574219
    8. ' a' → logprob: -8.292167663574219
    9. 'U' → logprob: -8.792167663574219
    10. 'edges' → logprob: -8.917167663574219

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008908462710678577
    2. ',b' → logprob: -5.008908271789551
    3. ' ,' → logprob: -6.133908271789551
    4. 'b' → logprob: -11.00890827178955
    5. ',a' → logprob: -12.75890827178955
    6. '_,' → logprob: -13.50890827178955
    7. ' b' → logprob: -14.25890827178955
    8. ',s' → logprob: -15.25890827178955
    9. ',v' → logprob: -15.75890827178955
    10. 'a' → logprob: -16.258909225463867

Token 215: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020732134580612
    2. ' b' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.225207328796387
    4. '=' → logprob: -17.72520637512207
    5. ' =' → logprob: -17.85020637512207
    6. '	b' → logprob: -18.47520637512207
    7. ' 
' → logprob: -18.60020637512207
    8. '   ' → logprob: -18.60020637512207
    9. '  ' → logprob: -18.72520637512207
    10. ' ' → logprob: -18.85020637512207

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020861029624939
    2. '=' → logprob: -2.3502085208892822
    3. ' ' → logprob: -13.850208282470703
    4. ',' → logprob: -14.725208282470703
    5. ')' → logprob: -16.225208282470703
    6. '＝' → logprob: -16.350208282470703
    7. '=int' → logprob: -16.725208282470703
    8. '=list' → logprob: -16.725208282470703
    9. ' =
' → logprob: -16.850208282470703
    10. '=input' → logprob: -16.975208282470703

Token 217: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31329846382141113
    2. ' map' → logprob: -1.3132984638214111
    3. '   ' → logprob: -11.188298225402832
    4. '	map' → logprob: -12.063298225402832
    5. 'list' → logprob: -12.313298225402832
    6. '(map' → logprob: -12.438298225402832
    7. ' ' → logprob: -12.563298225402832
    8. '  ' → logprob: -13.563298225402832
    9. 'm' → logprob: -13.563298225402832
    10. ' list' → logprob: -14.063298225402832

Token 218: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.11411364376544952
    2. '(int' → logprob: -2.6141135692596436
    3. '(' → logprob: -3.3641135692596436
    4. ' (' → logprob: -11.364113807678223
    5. '(
' → logprob: -12.864113807678223
    6. 'lambda' → logprob: -13.239113807678223
    7. '(l' → logprob: -14.114113807678223
    8. 'int' → logprob: -14.364113807678223
    9. '(str' → logprob: -15.239113807678223
    10. ' lambda' → logprob: -16.739112854003906

Token 219: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10939152538776398
    2. ' x' → logprob: -2.359391450881958
    3. 'int' → logprob: -4.734391689300537
    4. ' int' → logprob: -8.109391212463379
    5. ':' → logprob: -11.359391212463379
    6. ':int' → logprob: -11.734391212463379
    7. 's' → logprob: -12.109391212463379
    8. 'y' → logprob: -12.234391212463379
    9. 'lambda' → logprob: -12.359391212463379
    10. 'z' → logprob: -12.984391212463379

Token 220: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7959454655647278
    2. ':int' → logprob: -1.170945405960083
    3. ':' → logprob: -1.670945405960083
    4. ' int' → logprob: -3.420945405960083
    5. ' :' → logprob: -4.045945644378662
    6. 'x' → logprob: -8.545945167541504
    7. ' x' → logprob: -9.295945167541504
    8. '(int' → logprob: -9.295945167541504
    9. '=int' → logprob: -9.920945167541504
    10. '[int' → logprob: -10.545945167541504

Token 221: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00014001218369230628
    2. ' int' → logprob: -8.875140190124512
    3. '(int' → logprob: -16.625139236450195
    4. '[int' → logprob: -17.625139236450195
    5. ':int' → logprob: -18.250139236450195
    6. '=int' → logprob: -18.500139236450195
    7. '   ' → logprob: -18.750139236450195
    8. '<int' → logprob: -18.875139236450195
    9. '	int' → logprob: -19.000139236450195
    10. 'x' → logprob: -19.500139236450195

Token 222: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004657491575926542
    2. 'x' → logprob: -5.37965726852417
    3. '(' → logprob: -10.754657745361328
    4. ' (' → logprob: -11.379657745361328
    5. ')' → logprob: -13.379657745361328
    6. 's' → logprob: -14.129657745361328
    7. ' x' → logprob: -14.629657745361328
    8. '(
' → logprob: -14.879657745361328
    9. 'a' → logprob: -15.004657745361328
    10. '
' → logprob: -15.379657745361328

Token 223: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22799256443977356
    2. ')-' → logprob: -1.7279925346374512
    3. '-' → logprob: -4.102992534637451
    4. '(x' → logprob: -5.227992534637451
    5. ' -' → logprob: -6.477992534637451
    6. 'x' → logprob: -6.852992534637451
    7. ')x' → logprob: -7.352992534637451
    8. ' )' → logprob: -7.477992534637451
    9. '.strip' → logprob: -7.977992534637451
    10. '()-' → logprob: -10.47799301147461

Token 224: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10525896400213242
    2. ' -' → logprob: -2.3552589416503906
    3. '()-' → logprob: -6.105258941650391
    4. ')' → logprob: -6.605258941650391
    5. 'input' → logprob: -7.480258941650391
    6. '()' → logprob: -8.23025894165039
    7. ')-' → logprob: -8.73025894165039
    8. 'x' → logprob: -9.23025894165039
    9. '(x' → logprob: -9.23025894165039
    10. '(input' → logprob: -9.35525894165039

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.000431060791016
    4. '１' → logprob: -21.000431060791016
    5. ')' → logprob: -21.250431060791016
    6. '  ' → logprob: -21.250431060791016
    7. ',' → logprob: -21.375431060791016
    8. ' ' → logprob: -21.500431060791016
    9. '0' → logprob: -21.875431060791016
    10. '```' → logprob: -21.875431060791016

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.812501907348633
    4. '１' → logprob: -19.937501907348633
    5. '```' → logprob: -20.750001907348633
    6. '0' → logprob: -20.812501907348633
    7. ',' → logprob: -21.062501907348633
    8. '
' → logprob: -21.187501907348633
    9. 'input' → logprob: -21.250001907348633
    10. ')' → logprob: -21.250001907348633

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005640312563627958
    2. ',input' → logprob: -5.380640506744385
    3. 'input' → logprob: -7.005640506744385
    4. ' ,' → logprob: -10.130640029907227
    5. ')' → logprob: -10.380640029907227
    6. '(input' → logprob: -11.130640029907227
    7. 'split' → logprob: -11.130640029907227
    8. '   ' → logprob: -12.380640029907227
    9. ' input' → logprob: -12.755640029907227
    10. 'to' → logprob: -13.630640029907227

Token 228: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019287518225610256
    2. ' input' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. ' ' → logprob: -18.251928329467773
    5. '(input' → logprob: -18.876928329467773
    6. ')' → logprob: -20.001928329467773
    7. '=input' → logprob: -20.126928329467773
    8. '	input' → logprob: -20.876928329467773
    9. '<input' → logprob: -21.126928329467773
    10. ',input' → logprob: -21.751928329467773

Token 229: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -16.3750057220459
    4. '(' → logprob: -17.5000057220459
    5. '())' → logprob: -18.1250057220459
    6. ')' → logprob: -18.5000057220459
    7. '.split' → logprob: -18.6250057220459
    8. '()
' → logprob: -19.5000057220459
    9. '.' → logprob: -20.8750057220459
    10. 'split' → logprob: -21.1250057220459

Token 230: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3663626305060461e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -14.25001335144043
    4. '(split' → logprob: -17.75001335144043
    5. 'rstrip' → logprob: -19.25001335144043
    6. '.split' → logprob: -19.37501335144043
    7. '().' → logprob: -19.50001335144043
    8. 'spl' → logprob: -19.75001335144043
    9. '()' → logprob: -22.37501335144043
    10. '_split' → logprob: -22.62501335144043

Token 231: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0761880874633789
    2. ')' → logprob: -2.701188087463379
    3. '()' → logprob: -5.826188087463379
    4. '))' → logprob: -6.201188087463379
    5. '()))' → logprob: -6.701188087463379
    6. '())
' → logprob: -11.576188087463379
    7. '(' → logprob: -11.951188087463379
    8. ' ())' → logprob: -12.201188087463379
    9. ' )' → logprob: -13.326188087463379
    10. '(),' → logprob: -14.326188087463379

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06829173117876053
    2. 'to' → logprob: -2.943291664123535
    3. ' to' → logprob: -4.443291664123535
    4. '    
' → logprob: -6.693291664123535
    5. '[to' → logprob: -9.068291664123535
    6. '	to' → logprob: -9.818291664123535
    7. '
' → logprob: -9.943291664123535
    8. '  
' → logprob: -10.568291664123535
    9. '<|end|>' → logprob: -10.693291664123535
    10. ')' → logprob: -11.193291664123535

Token 233: ' #' (ID: 1069)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1340513825416565
    2. '   ' → logprob: -2.1340513229370117
    3. ' to' → logprob: -5.134051322937012
    4. '
' → logprob: -6.884051322937012
    5. '    
' → logprob: -8.759051322937012
    6. '	to' → logprob: -11.884051322937012
    7. '```' → logprob: -12.259051322937012
    8. ' 
' → logprob: -12.634051322937012
    9. '  
' → logprob: -12.884051322937012
    10. '   
' → logprob: -13.634051322937012

Token 234: ' Aj' (ID: 28294)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.020558703690767288
    2. ' to' → logprob: -3.8955585956573486
    3. '   ' → logprob: -11.52055835723877
    4. '#' → logprob: -12.39555835723877
    5. ' ' → logprob: -13.52055835723877
    6. '
' → logprob: -14.64555835723877
    7. ' #' → logprob: -14.89555835723877
    8. '	to' → logprob: -15.77055835723877
    9. '[to' → logprob: -16.395559310913086
    10. '(to' → logprob: -16.520559310913086

Token 235: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.021973153576254845
    2. 'outer' → logprob: -4.021973133087158
    3. 'out' → logprob: -5.896973133087158
    4. 'outez' → logprob: -6.896973133087158
    5. 'outes' → logprob: -10.146973609924316
    6. 'to' → logprob: -11.646973609924316
    7. 'uste' → logprob: -12.521973609924316
    8. 'ou' → logprob: -13.396973609924316
    9. 'ust' → logprob: -13.771973609924316
    10. 'o' → logprob: -13.896973609924316

Token 236: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.32219570875167847
    2. 'b' → logprob: -1.8221957683563232
    3. ' a' → logprob: -2.8221957683563232
    4. 'a' → logprob: -2.9471957683563232
    5. ' to' → logprob: -6.822195529937744
    6. 'to' → logprob: -7.322195529937744
    7. '   ' → logprob: -10.197196006774902
    8. ' ' → logprob: -11.822196006774902
    9. '	b' → logprob: -12.572196006774902
    10. ' ' → logprob: -13.072196006774902

Token 237: ' comme' (ID: 7971)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.48247823119163513
    2. 'to' → logprob: -1.6074782609939575
    3. ')' → logprob: -2.607478141784668
    4. ' à' → logprob: -2.857478141784668
    5. ' ' → logprob: -4.357478141784668
    6. ' a' → logprob: -4.857478141784668
    7. '.append' → logprob: -4.982478141784668
    8. ' au' → logprob: -5.107478141784668
    9. 'a' → logprob: -5.232478141784668
    10. ' aux' → logprob: -5.482478141784668

Token 238: ' voisin' (ID: 145411)
  Prédit: ' voisin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.25411832332611084
    2. ' sommet' → logprob: -2.3791184425354004
    3. ' un' → logprob: -3.1291184425354004
    4. ' to' → logprob: -3.8791184425354004
    5. ' adjacent' → logprob: -4.0041184425354
    6. 'vo' → logprob: -4.2541184425354
    7. ' vo' → logprob: -4.3791184425354
    8. 'to' → logprob: -4.8791184425354
    9. 'adj' → logprob: -4.8791184425354
    10. ' ' → logprob: -6.2541184425354

Token 239: ' de' (ID: 334)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.9293527603149414
    2. ' de' → logprob: -1.3043527603149414
    3. 'to' → logprob: -1.3043527603149414
    4. 'de' → logprob: -3.0543527603149414
    5. ' to' → logprob: -4.554352760314941
    6. 'a' → logprob: -5.929352760314941
    7. '[a' → logprob: -6.929352760314941
    8. ' a' → logprob: -7.804352760314941
    9. ' of' → logprob: -7.929352760314941
    10. ' à' → logprob: -8.179352760314941

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10037510097026825
    2. ' a' → logprob: -2.350375175476074
    3. 'to' → logprob: -8.975375175476074
    4. ' to' → logprob: -10.100375175476074
    5. '	a' → logprob: -14.600375175476074
    6. '[a' → logprob: -15.475375175476074
    7. '   ' → logprob: -16.100374221801758
    8. ' ' → logprob: -16.100374221801758
    9. ' ' → logprob: -16.975374221801758
    10. ')a' → logprob: -18.225374221801758

Token 241: ' et' (ID: 859)
  Prédit: '[to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[to' → logprob: -0.40558820962905884
    2. 'to' → logprob: -1.405588150024414
    3. ' to' → logprob: -2.780588150024414
    4. '   ' → logprob: -3.655588150024414
    5. '
' → logprob: -8.405588150024414
    6. '(to' → logprob: -9.905588150024414
    7. '	to' → logprob: -11.030588150024414
    8. '[' → logprob: -11.405588150024414
    9. '.to' → logprob: -11.655588150024414
    10. ' ' → logprob: -12.030588150024414

Token 242: ' vice' (ID: 22625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9130051732063293
    2. ' a' → logprob: -1.0380051136016846
    3. ' to' → logprob: -1.5380051136016846
    4. 'to' → logprob: -3.5380051136016846
    5. '   ' → logprob: -7.413005352020264
    6. ' ' → logprob: -11.538004875183105
    7. ' ' → logprob: -12.038004875183105
    8. '    ' → logprob: -12.913004875183105
    9. '	a' → logprob: -13.163004875183105
    10. ' à' → logprob: -13.163004875183105

Token 243: '-' (ID: 12)
  Prédit: ' versa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' versa' → logprob: -0.26298677921295166
    2. 'versa' → logprob: -1.5129867792129517
    3. '-' → logprob: -4.512986660003662
    4. 'a' → logprob: -11.01298713684082
    5. '   ' → logprob: -12.13798713684082
    6. ' vers' → logprob: -12.26298713684082
    7. ' Versa' → logprob: -14.38798713684082
    8. ' ' → logprob: -14.51298713684082
    9. ' de' → logprob: -14.63798713684082
    10. 'b' → logprob: -14.76298713684082

Token 244: 'versa' (ID: 107365)
  Prédit: 'versa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versa' → logprob: -0.038117457181215286
    2. ' versa' → logprob: -3.2881174087524414
    3. 'a' → logprob: -9.788117408752441
    4. 'vers' → logprob: -11.163117408752441
    5. '-' → logprob: -12.288117408752441
    6. 'b' → logprob: -14.788117408752441
    7. 'vera' → logprob: -15.788117408752441
    8. ' vers' → logprob: -15.788117408752441
    9. 'verse' → logprob: -16.288118362426758
    10. 'versal' → logprob: -16.288118362426758

Token 245: '
' (ID: 198)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.767794668674469
    2. 'to' → logprob: -0.767794668674469
    3. '   ' → logprob: -2.642794609069824
    4. '
' → logprob: -7.267794609069824
    5. '	to' → logprob: -10.892794609069824
    6. '    
' → logprob: -11.017794609069824
    7. '[to' → logprob: -11.517794609069824
    8. '```' → logprob: -12.392794609069824
    9. '.to' → logprob: -12.767794609069824
    10. '  
' → logprob: -12.892794609069824

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29852068424224854
    2. 'to' → logprob: -2.048520565032959
    3. ' to' → logprob: -2.048520565032959
    4. '
' → logprob: -8.673521041870117
    5. '    
' → logprob: -10.673521041870117
    6. '[to' → logprob: -11.423521041870117
    7. '	to' → logprob: -11.798521041870117
    8. ' ' → logprob: -12.798521041870117
    9. ' for' → logprob: -12.923521041870117
    10. '  ' → logprob: -13.048521041870117

Token 247: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.012565099634230137
    2. ' to' → logprob: -4.3875651359558105
    3. '   ' → logprob: -10.012564659118652
    4. '
' → logprob: -11.512564659118652
    5. '	to' → logprob: -15.762564659118652
    6. '    
' → logprob: -15.887564659118652
    7. ' 
' → logprob: -16.01256561279297
    8. '```' → logprob: -16.88756561279297
    9. '[to' → logprob: -17.01256561279297
    10. ' ' → logprob: -17.26256561279297

Token 248: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.127333340875339e-06
    2. ' [' → logprob: -13.250003814697266
    3. '[' → logprob: -13.375003814697266
    4. 'a' → logprob: -14.750003814697266
    5. '[i' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '[to' → logprob: -16.500003814697266
    8. '```' → logprob: -18.125003814697266
    9. '[A' → logprob: -18.500003814697266
    10. ' a' → logprob: -18.875003814697266

Token 249: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001520695281215012
    2. '.append' → logprob: -6.50152063369751
    3. ' ].' → logprob: -11.751521110534668
    4. '.' → logprob: -12.251521110534668
    5. ').' → logprob: -12.751521110534668
    6. ']' → logprob: -13.501521110534668
    7. ' .' → logprob: -15.001521110534668
    8. '   ' → logprob: -15.126521110534668
    9. 'append' → logprob: -15.501521110534668
    10. '.app' → logprob: -15.501521110534668

Token 250: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.0
    3. '.append' → logprob: -16.75
    4. 'app' → logprob: -21.25
    5. '	append' → logprob: -22.375
    6. 'appen' → logprob: -22.75
    7. '_append' → logprob: -23.25
    8. 'Append' → logprob: -23.875
    9. 'push' → logprob: -26.25
    10. 'ap' → logprob: -26.75

Token 251: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001239196863025427
    2. 'b' → logprob: -9.000123977661133
    3. '(' → logprob: -14.875123977661133
    4. ' b' → logprob: -16.500123977661133
    5. '	b' → logprob: -19.625123977661133
    6. '(
' → logprob: -19.750123977661133
    7. ' (' → logprob: -19.750123977661133
    8. ')b' → logprob: -20.375123977661133
    9. '(B' → logprob: -22.375123977661133
    10. '_b' → logprob: -22.375123977661133

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002832934260368347
    2. ')
' → logprob: -5.877832889556885
    3. '   ' → logprob: -11.002833366394043
    4. ' )' → logprob: -11.752833366394043
    5. ')
' → logprob: -12.877833366394043
    6. ' )
' → logprob: -15.252833366394043
    7. '),' → logprob: -15.502833366394043
    8. 'to' → logprob: -16.127832412719727
    9. ')

' → logprob: -16.252832412719727
    10. ' to' → logprob: -16.252832412719727

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2751375138759613
    2. 'to' → logprob: -1.5251375436782837
    3. ' to' → logprob: -3.775137424468994
    4. '	to' → logprob: -12.650137901306152
    5. '```' → logprob: -14.025137901306152
    6. '[to' → logprob: -14.150137901306152
    7. ' ' → logprob: -14.400137901306152
    8. '    
' → logprob: -14.650137901306152
    9. '
' → logprob: -14.900137901306152
    10. '.to' → logprob: -14.900137901306152

Token 254: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.032473932951688766
    2. ' to' → logprob: -3.5324740409851074
    3. '   ' → logprob: -5.907474040985107
    4. '	to' → logprob: -15.03247356414795
    5. ' ' → logprob: -15.90747356414795
    6. '
' → logprob: -16.407474517822266
    7. '[to' → logprob: -16.907474517822266
    8. '.to' → logprob: -17.282474517822266
    9. '  ' → logprob: -17.407474517822266
    10. '```' → logprob: -18.032474517822266

Token 255: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.546478935983032e-05
    2. '[a' → logprob: -11.125025749206543
    3. 'b' → logprob: -11.875025749206543
    4. '[' → logprob: -12.750025749206543
    5. '[to' → logprob: -14.750025749206543
    6. ' [' → logprob: -15.875025749206543
    7. '```' → logprob: -16.375024795532227
    8. '[s' → logprob: -17.250024795532227
    9. '[t' → logprob: -17.750024795532227
    10. '[B' → logprob: -18.625024795532227

Token 256: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01861950382590294
    2. ').' → logprob: -4.268619537353516
    3. '[a' → logprob: -5.643619537353516
    4. '.' → logprob: -7.143619537353516
    5. '.append' → logprob: -10.018619537353516
    6. ']' → logprob: -10.268619537353516
    7. ' .' → logprob: -11.143619537353516
    8. ')' → logprob: -12.393619537353516
    9. 'a' → logprob: -12.518619537353516
    10. ' ].' → logprob: -12.643619537353516

Token 257: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -16.625
    4. 'appen' → logprob: -16.75
    5. '	append' → logprob: -18.5
    6. 'app' → logprob: -20.0
    7. 'add' → logprob: -20.375
    8. 'a' → logprob: -20.5
    9. '_append' → logprob: -20.75
    10. 'to' → logprob: -21.875

Token 258: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.5577775128767826e-06
    2. 'a' → logprob: -12.125005722045898
    3. '(' → logprob: -17.0000057220459
    4. '(
' → logprob: -17.5000057220459
    5. '   ' → logprob: -20.7500057220459
    6. '[a' → logprob: -21.2500057220459
    7. '(A' → logprob: -21.5000057220459
    8. '(ai' → logprob: -21.6250057220459
    9. ')a' → logprob: -21.6250057220459
    10. ' (' → logprob: -21.7500057220459

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.250004768371582
    4. '())' → logprob: -15.375004768371582
    5. ')a' → logprob: -15.500004768371582
    6. '   ' → logprob: -15.625004768371582
    7. '))' → logprob: -16.750003814697266
    8. '()' → logprob: -17.250003814697266
    9. '),' → logprob: -17.625003814697266
    10. ')}' → logprob: -17.625003814697266

Token 260: '#' (ID: 2)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.896065354347229
    2. 'dist' → logprob: -1.521065354347229
    3. 'visited' → logprob: -1.521065354347229
    4. '#' → logprob: -2.6460652351379395
    5. 'depth' → logprob: -3.1460652351379395
    6. 'level' → logprob: -4.3960652351379395
    7. 'start' → logprob: -5.1460652351379395
    8. 'color' → logprob: -5.2710652351379395
    9. 'queue' → logprob: -5.6460652351379395
    10. 'root' → logprob: -5.7710652351379395

Token 261: ' Lit' (ID: 45595)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19054801762104034
    2. 'visited' → logprob: -2.1905479431152344
    3. '#' → logprob: -4.315547943115234
    4. 'depth' → logprob: -4.565547943115234
    5. 'q' → logprob: -4.815547943115234
    6. 'distance' → logprob: -4.940547943115234
    7. 'queue' → logprob: -4.940547943115234
    8. 'start' → logprob: -5.315547943115234
    9. 'root' → logprob: -5.440547943115234
    10. 'd' → logprob: -6.815547943115234

Token 262: ' une' (ID: 2463)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.2765864133834839
    2. 'Q' → logprob: -1.2765864133834839
    3. ' K' → logprob: -1.6515864133834839
    4. ' Q' → logprob: -2.5265865325927734
    5. 'S' → logprob: -3.9015865325927734
    6. ' la' → logprob: -4.026586532592773
    7. 'u' → logprob: -4.151586532592773
    8. 'un' → logprob: -4.276586532592773
    9. 's' → logprob: -4.276586532592773
    10. ' un' → logprob: -4.776586532592773

Token 263: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.0136923789978027
    2. 'ligne' → logprob: -1.3886923789978027
    3. 'val' → logprob: -2.5136923789978027
    4. 's' → logprob: -3.0136923789978027
    5. 'de' → logprob: -3.0136923789978027
    6. 'ent' → logprob: -3.5136923789978027
    7. ' ligne' → logprob: -3.6386923789978027
    8. 'question' → logprob: -4.388692378997803
    9. 'variable' → logprob: -4.388692378997803
    10. ' liste' → logprob: -4.638692378997803

Token 264: ' d' (ID: 272)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.6640750169754028
    2. 's' → logprob: -1.9140750169754028
    3. 'S' → logprob: -2.0390748977661133
    4. ' =' → logprob: -2.1640748977661133
    5. 'de' → logprob: -2.4140748977661133
    6. 'Q' → logprob: -2.7890748977661133
    7. 'd' → logprob: -3.0390748977661133
    8. ' des' → logprob: -3.5390748977661133
    9. 'C' → logprob: -3.9140748977661133
    10. 'A' → logprob: -3.9140748977661133

Token 265: ''ent' (ID: 53422)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.34629806876182556
    2. 'int' → logprob: -1.721298098564148
    3. 'inte' → logprob: -2.7212979793548584
    4. 'ints' → logprob: -3.3462979793548584
    5. ' integers' → logprob: -5.9712982177734375
    6. ' ent' → logprob: -6.0962982177734375
    7. 'indices' → logprob: -6.2212982177734375
    8. '(int' → logprob: -6.7212982177734375
    9. 'N' → logprob: -7.2212982177734375
    10. 's' → logprob: -7.4712982177734375

Token 266: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.010109013877809048
    2. 'ières' → logprob: -5.385108947753906
    3. 'rée' → logprob: -6.010108947753906
    4. 'ier' → logprob: -6.635108947753906
    5. 'r' → logprob: -6.885108947753906
    6. 'ités' → logprob: -7.885108947753906
    7. 'rees' → logprob: -8.760108947753906
    8. 'i' → logprob: -9.885108947753906
    9. 'ité' → logprob: -10.760108947753906
    10. 'ées' → logprob: -11.010108947753906

Token 267: ' à' (ID: 1221)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.8727806806564331
    2. ' =' → logprob: -2.1227807998657227
    3. 'q' → logprob: -2.8727807998657227
    4. 'S' → logprob: -2.8727807998657227
    5. 'vals' → logprob: -3.1227807998657227
    6. 'P' → logprob: -3.4977807998657227
    7. 'dist' → logprob: -3.6227807998657227
    8. 'C' → logprob: -3.8727807998657227
    9. 'lst' → logprob: -3.8727807998657227
    10. 'A' → logprob: -4.122780799865723

Token 268: ' partir' (ID: 12100)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.143058180809021
    2. 'map' → logprob: -1.768058180809021
    3. 'part' → logprob: -1.893058180809021
    4. 'liste' → logprob: -2.0180583000183105
    5. 'ints' → logprob: -2.3930583000183105
    6. 'input' → logprob: -2.8930583000183105
    7. 'la' → logprob: -4.1430583000183105
    8. 'l' → logprob: -4.6430583000183105
    9. 'inte' → logprob: -4.7680583000183105
    10. 'points' → logprob: -4.8930583000183105

Token 269: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01897924393415451
    2. 'input' → logprob: -4.643979072570801
    3. '(input' → logprob: -5.393979072570801
    4. '()
' → logprob: -5.643979072570801
    5. '().' → logprob: -7.643979072570801
    6. '(' → logprob: -8.5189790725708
    7. '#' → logprob: -9.7689790725708
    8. '()

' → logprob: -9.7689790725708
    9. '(),' → logprob: -10.0189790725708
    10. ' input' → logprob: -10.0189790725708

Token 270: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1129947081208229
    2. ' input' → logprob: -2.23799467086792
    3. 'l' → logprob: -9.112995147705078
    4. ' l' → logprob: -10.862995147705078
    5. 'list' → logprob: -10.862995147705078
    6. 'la' → logprob: -11.987995147705078
    7. ' la' → logprob: -12.487995147705078
    8. '(input' → logprob: -12.862995147705078
    9. '=input' → logprob: -12.862995147705078
    10. 'a' → logprob: -13.362995147705078

Token 271: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2809978723526001
    2. ''entrée' → logprob: -1.6559978723526
    3. 'entrée' → logprob: -3.0309977531433105
    4. 'a' → logprob: -5.4059977531433105
    5. 'e' → logprob: -7.1559977531433105
    6. ' input' → logprob: -8.405998229980469
    7. 'stdin' → logprob: -9.780998229980469
    8. '#' → logprob: -9.780998229980469
    9. ''ent' → logprob: -10.405998229980469
    10. '=input' → logprob: -10.655998229980469

Token 272: ' standard' (ID: 7024)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.611245036125183
    2. 's' → logprob: -2.4862451553344727
    3. 'Q' → logprob: -2.7362451553344727
    4. 'C' → logprob: -2.8612451553344727
    5. 'lst' → logprob: -2.8612451553344727
    6. 'vals' → logprob: -3.2362451553344727
    7. 'p' → logprob: -3.3612451553344727
    8. 'a' → logprob: -3.3612451553344727
    9. 'c' → logprob: -3.4862451553344727
    10. 'V' → logprob: -3.6112451553344727

Token 273: '.
' (ID: 558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5202521085739136
    2. 'S' → logprob: -2.270252227783203
    3. 'Q' → logprob: -2.395252227783203
    4. 'P' → logprob: -2.395252227783203
    5. 'q' → logprob: -2.770252227783203
    6. 'order' → logprob: -3.020252227783203
    7. 'A' → logprob: -3.020252227783203
    8. 's' → logprob: -3.520252227783203
    9. 'C' → logprob: -3.645252227783203
    10. 'vals' → logprob: -3.770252227783203

Token 274: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5469707250595093
    2. 'order' → logprob: -1.5469707250595093
    3. 'q' → logprob: -2.171970844268799
    4. 'Q' → logprob: -2.171970844268799
    5. 'query' → logprob: -2.671970844268799
    6. 'P' → logprob: -2.796970844268799
    7. 'S' → logprob: -3.546970844268799
    8. 'ans' → logprob: -3.671970844268799
    9. 'guess' → logprob: -4.546970844268799
    10. 'x' → logprob: -4.796970844268799

Token 275: ' map' (ID: 4014)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.1639891862869263
    2. 'p' → logprob: -1.6639891862869263
    3. 'q' → logprob: -2.5389890670776367
    4. 'Q' → logprob: -2.7889890670776367
    5. 'query' → logprob: -2.7889890670776367
    6. 'P' → logprob: -3.0389890670776367
    7. 'ans' → logprob: -3.2889890670776367
    8. 'expected' → logprob: -4.163989067077637
    9. 'S' → logprob: -4.413989067077637
    10. 'guess' → logprob: -4.788989067077637

Token 276: ' applique' (ID: 180579)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.23006440699100494
    2. '(lambda' → logprob: -2.1050643920898438
    3. 'list' → logprob: -2.9800643920898438
    4. 'int' → logprob: -3.9800643920898438
    5. '(' → logprob: -5.105064392089844
    6. '=int' → logprob: -5.855064392089844
    7. 'lambda' → logprob: -6.980064392089844
    8. '_list' → logprob: -7.480064392089844
    9. 'map' → logprob: -7.605064392089844
    10. '(
' → logprob: -7.730064392089844

Token 277: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.053240761160850525
    2. 'int' → logprob: -3.0532407760620117
    3. '(lambda' → logprob: -5.428240776062012
    4. 'lambda' → logprob: -8.803240776062012
    5. '(' → logprob: -10.178240776062012
    6. '=int' → logprob: -10.928240776062012
    7. '```' → logprob: -11.053240776062012
    8. ' int' → logprob: -11.803240776062012
    9. 'l' → logprob: -12.178240776062012
    10. '[int' → logprob: -12.428240776062012

Token 278: ' en' (ID: 469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17308399081230164
    2. '(input' → logprob: -2.173084020614624
    3. ',input' → logprob: -3.423084020614624
    4. 'sur' → logprob: -5.798083782196045
    5. 'input' → logprob: -5.798083782196045
    6. ' sur' → logprob: -6.048083782196045
    7. '(int' → logprob: -6.923083782196045
    8. ',int' → logprob: -7.423083782196045
    9. ' à' → logprob: -7.423083782196045
    10. 'int' → logprob: -8.048084259033203

Token 279: ' conversion' (ID: 22165)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0967743918299675
    2. 'lambda' → logprob: -2.4717743396759033
    3. ' input' → logprob: -5.471774578094482
    4. 'map' → logprob: -6.221774578094482
    5. 'split' → logprob: -7.846774578094482
    6. 'continu' → logprob: -8.221774101257324
    7. '(lambda' → logprob: -8.346774101257324
    8. '(input' → logprob: -8.471774101257324
    9. ' lambda' → logprob: -8.596774101257324
    10. 'entrée' → logprob: -9.971774101257324

Token 280: ' sur' (ID: 1512)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016253363341093063
    2. 'input' → logprob: -4.766253471374512
    3. 'list' → logprob: -6.641253471374512
    4. '(' → logprob: -6.891253471374512
    5. 's' → logprob: -7.016253471374512
    6. '=input' → logprob: -7.016253471374512
    7. ',input' → logprob: -7.391253471374512
    8. 'map' → logprob: -7.516253471374512
    9. '(lambda' → logprob: -7.766253471374512
    10. 'sur' → logprob: -7.891253471374512

Token 281: ' chaque' (ID: 21194)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.025529921054840088
    2. ' input' → logprob: -3.7755298614501953
    3. '(input' → logprob: -6.150529861450195
    4. 'l' → logprob: -9.275529861450195
    5. 'la' → logprob: -10.150529861450195
    6. ' la' → logprob: -12.025529861450195
    7. '=input' → logprob: -12.525529861450195
    8. ' l' → logprob: -13.275529861450195
    9. '[input' → logprob: -13.525529861450195
    10. 'les' → logprob: -14.150529861450195

Token 282: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6385020613670349
    2. 'element' → logprob: -1.6385021209716797
    3. 'token' → logprob: -1.8885021209716797
    4. 'x' → logprob: -3.5135021209716797
    5. ' élément' → logprob: -3.8885021209716797
    6. 'val' → logprob: -4.13850212097168
    7. 'elem' → logprob: -4.13850212097168
    8. '()' → logprob: -4.63850212097168
    9. '(x' → logprob: -4.76350212097168
    10. 'item' → logprob: -5.76350212097168

Token 283: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.4207690954208374
    2. '(input' → logprob: -1.4207690954208374
    3. 'lst' → logprob: -1.6707690954208374
    4. 'liste' → logprob: -3.045769214630127
    5. 'tokens' → logprob: -3.795769214630127
    6. 'values' → logprob: -3.920769214630127
    7. 's' → logprob: -4.295769214630127
    8. 'c' → logprob: -4.420769214630127
    9. '(' → logprob: -4.420769214630127
    10. '_list' → logprob: -4.545769214630127

Token 284: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011072585359215736
    2. ' input' → logprob: -4.511072635650635
    3. 'l' → logprob: -11.136072158813477
    4. '(input' → logprob: -12.511072158813477
    5. 'la' → logprob: -13.386072158813477
    6. 'split' → logprob: -13.511072158813477
    7. ' la' → logprob: -13.511072158813477
    8. '=input' → logprob: -14.636072158813477
    9. '```' → logprob: -15.261072158813477
    10. ' l' → logprob: -15.386072158813477

Token 285: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07028596103191376
    2. '()' → logprob: -2.6952860355377197
    3. 's' → logprob: -9.94528579711914
    4. '()[' → logprob: -9.94528579711914
    5. '(),' → logprob: -10.07028579711914
    6. '()
' → logprob: -10.07028579711914
    7. '_list' → logprob: -10.07028579711914
    8. 'input' → logprob: -10.32028579711914
    9. '())' → logprob: -11.94528579711914
    10. '_values' → logprob: -11.94528579711914

Token 286: 'split' (ID: 13627)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.0011805295944214
    2. 'values' → logprob: -1.5011805295944214
    3. 'map' → logprob: -2.751180648803711
    4. 'vals' → logprob: -3.126180648803711
    5. 'numbers' → logprob: -3.126180648803711
    6. 'input' → logprob: -3.751180648803711
    7. 'visited' → logprob: -3.751180648803711
    8. 'nodes' → logprob: -4.001180648803711
    9. 'data' → logprob: -4.001180648803711
    10. 's' → logprob: -4.126180648803711

Token 287: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009544634260237217
    2. '()
' → logprob: -5.509544849395752
    3. '(),' → logprob: -6.259544849395752
    4. '())' → logprob: -6.384544849395752
    5. '().' → logprob: -7.009544849395752
    6. ')' → logprob: -8.384544372558594
    7. 'map' → logprob: -8.384544372558594
    8. 'input' → logprob: -8.884544372558594
    9. '(' → logprob: -10.009544372558594
    10. ',' → logprob: -10.134544372558594

Token 288: 'c' (ID: 66)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7358920574188232
    2. 'order' → logprob: -1.7358920574188232
    3. 'Q' → logprob: -1.8608920574188232
    4. 'P' → logprob: -1.9858920574188232
    5. 'q' → logprob: -2.6108920574188232
    6. 'query' → logprob: -2.8608920574188232
    7. 'A' → logprob: -3.6108920574188232
    8. 'S' → logprob: -3.8608920574188232
    9. 'C' → logprob: -4.235892295837402
    10. 'ans' → logprob: -4.360892295837402

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0802295058965683
    2. '=' → logprob: -2.5802295207977295
    3. 's' → logprob: -6.83022928237915
    4. '=c' → logprob: -9.455229759216309
    5. 'ost' → logprob: -10.330229759216309
    6. 'c' → logprob: -10.330229759216309
    7. 'ount' → logprob: -11.080229759216309
    8. 'ol' → logprob: -11.205229759216309
    9. 'o' → logprob: -11.580229759216309
    10. '=list' → logprob: -12.080229759216309

Token 290: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0009138475870713592
    2. ' list' → logprob: -7.000913619995117
    3. 'deque' → logprob: -13.375913619995117
    4. 'map' → logprob: -14.250913619995117
    5. '(list' → logprob: -17.125913619995117
    6. '[list' → logprob: -17.875913619995117
    7. 'set' → logprob: -18.500913619995117
    8. '=list' → logprob: -18.750913619995117
    9. ' deque' → logprob: -18.750913619995117
    10. '[' → logprob: -18.875913619995117

Token 291: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.371605948312208e-05
    2. '(' → logprob: -10.000053405761719
    3. 'map' → logprob: -11.750053405761719
    4. '(
' → logprob: -15.500053405761719
    5. '(int' → logprob: -16.25005340576172
    6. ' map' → logprob: -17.75005340576172
    7. ' (' → logprob: -18.87505340576172
    8. ',map' → logprob: -18.87505340576172
    9. '(m' → logprob: -19.00005340576172
    10. '.map' → logprob: -19.12505340576172

Token 292: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.029761716723442078
    2. 'int' → logprob: -3.529761791229248
    3. ' int' → logprob: -12.65476131439209
    4. '[int' → logprob: -13.15476131439209
    5. '=int' → logprob: -13.27976131439209
    6. '<int' → logprob: -13.65476131439209
    7. ',int' → logprob: -13.90476131439209
    8. '(
' → logprob: -14.15476131439209
    9. ':int' → logprob: -14.27976131439209
    10. '(' → logprob: -15.02976131439209

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5794609189033508
    2. ',input' → logprob: -0.8294609189033508
    3. '(input' → logprob: -5.704461097717285
    4. '(),' → logprob: -9.454461097717285
    5. 'input' → logprob: -9.579461097717285
    6. ' ,' → logprob: -10.829461097717285
    7. '(' → logprob: -11.204461097717285
    8. '()' → logprob: -14.204461097717285
    9. ' input' → logprob: -14.329461097717285
    10. ',(' → logprob: -14.954461097717285

Token 294: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0013266648165881634
    2. ' input' → logprob: -6.626326560974121
    3. '(input' → logprob: -14.751326560974121
    4. '   ' → logprob: -15.376326560974121
    5. ' ' → logprob: -16.251327514648438
    6. '<input' → logprob: -17.751327514648438
    7. ',input' → logprob: -17.751327514648438
    8. '	input' → logprob: -18.251327514648438
    9. '
' → logprob: -18.251327514648438
    10. ')' → logprob: -18.376327514648438

Token 295: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.5577775128767826e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -16.3750057220459
    4. '()
' → logprob: -19.3750057220459
    5. '(' → logprob: -20.0000057220459
    6. '()[' → logprob: -20.6250057220459
    7. '.' → logprob: -20.7500057220459
    8. ')' → logprob: -21.1250057220459
    9. '()?.' → logprob: -22.1250057220459
    10. ').' → logprob: -22.3750057220459

Token 296: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -15.625000953674316
    4. '(split' → logprob: -15.875000953674316
    5. ')' → logprob: -16.250001907348633
    6. 'rstrip' → logprob: -19.250001907348633
    7. '.split' → logprob: -19.875001907348633
    8. ' ' → logprob: -20.375001907348633
    9. 'spl' → logprob: -21.000001907348633
    10. '```' → logprob: -21.125001907348633

Token 297: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14747655391693115
    2. '))' → logprob: -2.1474766731262207
    3. '()' → logprob: -3.8974766731262207
    4. '(' → logprob: -10.897476196289062
    5. '()));' → logprob: -11.772476196289062
    6. '()))
' → logprob: -11.897476196289062
    7. '())' → logprob: -11.897476196289062
    8. '(),' → logprob: -13.397476196289062
    9. ' ))' → logprob: -13.772476196289062
    10. '()))

' → logprob: -13.897476196289062

Token 298: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2223175764083862
    2. '<|end|>' → logprob: -1.3473175764083862
    3. 'c' → logprob: -1.9723175764083862
    4. 'distance' → logprob: -2.847317695617676
    5. 'visited' → logprob: -2.847317695617676
    6. 'deque' → logprob: -2.972317695617676
    7. '
' → logprob: -3.472317695617676
    8. ')' → logprob: -3.472317695617676
    9. '[' → logprob: -3.972317695617676
    10. 'Q' → logprob: -4.597317695617676

Token 299: ' Trie' (ID: 131955)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.39552640914917
    2. 'd' → logprob: -1.64552640914917
    3. '#' → logprob: -1.77052640914917
    4. 'q' → logprob: -1.89552640914917
    5. 'c' → logprob: -2.14552640914917
    6. 'pos' → logprob: -4.14552640914917
    7. 'visited' → logprob: -4.14552640914917
    8. 'from' → logprob: -4.27052640914917
    9. 'dq' → logprob: -4.39552640914917
    10. 'order' → logprob: -4.77052640914917

Token 300: ' la' (ID: 557)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5761314034461975
    2. 'c' → logprob: -0.8261314034461975
    3. '(' → logprob: -8.951131820678711
    4. ' c' → logprob: -10.326131820678711
    5. '(
' → logprob: -10.576131820678711
    6. '()' → logprob: -13.826131820678711
    7. ' (' → logprob: -14.076131820678711
    8. '(range' → logprob: -14.701131820678711
    9. '(reverse' → logprob: -14.826131820678711
    10. '(sorted' → logprob: -15.076131820678711

Token 301: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001132593723013997
    2. 'indices' → logprob: -7.251132488250732
    3. ' c' → logprob: -8.12613296508789
    4. 'range' → logprob: -10.12613296508789
    5. 'enumer' → logprob: -10.75113296508789
    6. ' indices' → logprob: -11.12613296508789
    7. 'indexes' → logprob: -11.12613296508789
    8. 'index' → logprob: -12.25113296508789
    9. 'positions' → logprob: -12.25113296508789
    10. 'vertices' → logprob: -12.37613296508789

Token 302: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004364013671875
    2. '(c' → logprob: -5.504364013671875
    3. ' c' → logprob: -8.379364013671875
    4. '()' → logprob: -10.629364013671875
    5. '(' → logprob: -11.254364013671875
    6. '(
' → logprob: -11.254364013671875
    7. '()
' → logprob: -12.504364013671875
    8. 'sorted' → logprob: -14.254364013671875
    9. '_c' → logprob: -14.879364013671875
    10. '(sorted' → logprob: -15.129364013671875

Token 303: ' dans' (ID: 2671)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.09597599506378174
    2. '()' → logprob: -2.845975875854492
    3. 'c' → logprob: -4.220975875854492
    4. '.' → logprob: -4.470975875854492
    5. '.c' → logprob: -5.220975875854492
    6. '(c' → logprob: -7.095975875854492
    7. '()
' → logprob: -8.095975875854492
    8. ')c' → logprob: -8.720975875854492
    9. ')' → logprob: -8.970975875854492
    10. 'sort' → logprob: -9.095975875854492

Token 304: ' l' (ID: 305)
  Prédit: '-place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-place' → logprob: -0.9645644426345825
    2. 'reverse' → logprob: -1.0895644426345825
    3. 'place' → logprob: -1.9645644426345825
    4. 'c' → logprob: -2.089564323425293
    5. ' reverse' → logprob: -4.339564323425293
    6. ' place' → logprob: -6.214564323425293
    7. 'l' → logprob: -6.464564323425293
    8. ' c' → logprob: -7.589564323425293
    9. 'ascending' → logprob: -7.714564323425293
    10. 'le' → logprob: -8.464564323425293

Token 305: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.5620633363723755
    2. 'c' → logprob: -1.3120633363723755
    3. 'ordre' → logprob: -2.187063217163086
    4. ' c' → logprob: -4.062063217163086
    5. '’ordre' → logprob: -4.312063217163086
    6. 'e' → logprob: -5.562063217163086
    7. ' ordre' → logprob: -5.687063217163086
    8. '=' → logprob: -6.062063217163086
    9. 'a' → logprob: -6.937063217163086
    10. ''espace' → logprob: -7.187063217163086

Token 306: ' cro' (ID: 11270)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1561984419822693
    2. 'reverse' → logprob: -2.781198501586914
    3. '()' → logprob: -3.156198501586914
    4. 'sorted' → logprob: -3.906198501586914
    5. 'ascending' → logprob: -4.906198501586914
    6. '(c' → logprob: -5.156198501586914
    7. 'descending' → logprob: -6.031198501586914
    8. 'asc' → logprob: -6.781198501586914
    9. '(reverse' → logprob: -7.031198501586914
    10. '()
' → logprob: -7.656198501586914

Token 307: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.00031294001382775605
    2. 'issante' → logprob: -9.375312805175781
    3. 'issent' → logprob: -9.625312805175781
    4. 'c' → logprob: -9.625312805175781
    5. 'iss' → logprob: -10.500312805175781
    6. 'ss' → logprob: -10.625312805175781
    7. 'issement' → logprob: -11.375312805175781
    8. 'is' → logprob: -11.375312805175781
    9. 'issance' → logprob: -12.000312805175781
    10. 'ant' → logprob: -13.000312805175781

Token 308: ';' (ID: 26)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.088346359931165e-07
    2. '.sort' → logprob: -14.375000953674316
    3. ' c' → logprob: -15.625000953674316
    4. '.' → logprob: -16.875
    5. 'sorted' → logprob: -17.25
    6. ')c' → logprob: -17.75
    7. '.
' → logprob: -18.0
    8. ')' → logprob: -18.25
    9. '
' → logprob: -18.375
    10. 'sort' → logprob: -18.5

Token 309: ' pop' (ID: 2735)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4855663721391466e-05
    2. ' c' → logprob: -11.125015258789062
    3. '
' → logprob: -18.250015258789062
    4. '#' → logprob: -18.500015258789062
    5. 'sorted' → logprob: -19.125015258789062
    6. 'с' → logprob: -20.000015258789062
    7. ' 
' → logprob: -20.125015258789062
    8. '	c' → logprob: -20.250015258789062
    9. '```' → logprob: -20.625015258789062
    10. ')c' → logprob: -21.375015258789062

Token 310: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003519086167216301
    2. '(' → logprob: -8.000351905822754
    3. '()
' → logprob: -11.750351905822754
    4. '()

' → logprob: -12.875351905822754
    5. '().' → logprob: -13.875351905822754
    6. '#' → logprob: -14.250351905822754
    7. '(),' → logprob: -14.250351905822754
    8. ' ()' → logprob: -14.375351905822754
    9. '())' → logprob: -14.625351905822754
    10. 'c' → logprob: -14.750351905822754

Token 311: ' retir' (ID: 35638)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010330478107789531
    2. '()
' → logprob: -9.375102996826172
    3. '(' → logprob: -11.875102996826172
    4. '()

' → logprob: -12.750102996826172
    5. '#' → logprob: -13.000102996826172
    6. 'c' → logprob: -13.875102996826172
    7. '())' → logprob: -13.875102996826172
    8. ')' → logprob: -14.000102996826172
    9. '()>' → logprob: -14.250102996826172
    10. '();' → logprob: -14.375102996826172

Token 312: 'era' (ID: 2060)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28576767444610596
    2. 'pe' → logprob: -1.410767674446106
    3. 'c' → logprob: -6.410767555236816
    4. 'e' → logprob: -6.410767555236816
    5. 'per' → logprob: -7.910767555236816
    6. 's' → logprob: -8.285767555236816
    7. '()
' → logprob: -8.535767555236816
    8. '#' → logprob: -8.910767555236816
    9. '(c' → logprob: -9.910767555236816
    10. 'ped' → logprob: -9.910767555236816

Token 313: ' donc' (ID: 14206)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5205708146095276
    2. ' le' → logprob: -1.0205707550048828
    3. ' les' → logprob: -3.895570755004883
    4. 'les' → logprob: -4.020570755004883
    5. 'l' → logprob: -6.020570755004883
    6. '()' → logprob: -6.645570755004883
    7. ' la' → logprob: -7.020570755004883
    8. 'la' → logprob: -7.020570755004883
    9. ' l' → logprob: -7.645570755004883
    10. 'c' → logprob: -8.520570755004883

Token 314: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0680805966258049
    2. 'les' → logprob: -3.4430806636810303
    3. ' le' → logprob: -3.6930806636810303
    4. 'et' → logprob: -5.693080425262451
    5. ' les' → logprob: -6.068080425262451
    6. 'l' → logprob: -6.693080425262451
    7. 'la' → logprob: -6.943080425262451
    8. 'the' → logprob: -8.06808090209961
    9. '()' → logprob: -8.69308090209961
    10. 'c' → logprob: -8.81808090209961

Token 315: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7373581528663635
    2. ' plus' → logprob: -0.8623581528663635
    3. 'élé' → logprob: -2.4873580932617188
    4. ' derniers' → logprob: -4.487358093261719
    5. 'dern' → logprob: -6.112358093261719
    6. ' éléments' → logprob: -6.237358093261719
    7. 'der' → logprob: -7.862358093261719
    8. ' dernier' → logprob: -8.987358093261719
    9. 'elements' → logprob: -9.987358093261719
    10. '#' → logprob: -9.987358093261719

Token 316: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.1555940806865692
    2. ' grands' → logprob: -2.2805941104888916
    3. 'grand' → logprob: -3.2805941104888916
    4. ' grandes' → logprob: -5.6555938720703125
    5. ' grand' → logprob: -8.405593872070312
    6. 'é' → logprob: -8.405593872070312
    7. '_gr' → logprob: -9.155593872070312
    8. 'g' → logprob: -9.905593872070312
    9. 'élé' → logprob: -10.405593872070312
    10. 'import' → logprob: -10.405593872070312

Token 317: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020419612526893616
    2. '(' → logprob: -4.520419597625732
    3. 'c' → logprob: -5.145419597625732
    4. '()
' → logprob: -6.145419597625732
    5. '(c' → logprob: -7.145419597625732
    6. ')' → logprob: -8.27042007446289
    7. '(
' → logprob: -8.89542007446289
    8. '()

' → logprob: -10.14542007446289
    9. '#' → logprob: -10.64542007446289
    10. '.' → logprob: -10.89542007446289

Token 318: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0062880446203053
    2. 'ans' → logprob: -6.006288051605225
    3. 'u' → logprob: -7.006288051605225
    4. 'eux' → logprob: -7.381288051605225
    5. 'c' → logprob: -7.756288051605225
    6. 'la' → logprob: -7.881288051605225
    7. 'ef' → logprob: -8.131287574768066
    8. 'ep' → logprob: -8.631287574768066
    9. 'ela' → logprob: -8.881287574768066
    10. ''en' → logprob: -8.881287574768066

Token 319: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.696889623621246e-06
    2. ')c' → logprob: -13.62500286102295
    3. ')' → logprob: -14.12500286102295
    4. ')
' → logprob: -14.87500286102295
    5. ' c' → logprob: -15.37500286102295
    6. ').' → logprob: -17.125001907348633
    7. '
' → logprob: -17.375001907348633
    8. '.
' → logprob: -17.375001907348633
    9. ',' → logprob: -17.500001907348633
    10. '```' → logprob: -17.625001907348633

Token 320: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.896309739408025e-07
    2. ' c' → logprob: -14.250000953674316
    3. '
' → logprob: -17.375
    4. '#' → logprob: -18.375
    5. ')c' → logprob: -18.5
    6. '```' → logprob: -19.375
    7. 'sorted' → logprob: -19.625
    8. ' 
' → logprob: -20.0
    9. ')' → logprob: -20.375
    10. 'с' → logprob: -20.875

Token 321: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01133180595934391
    2. '.' → logprob: -4.511332035064697
    3. '.reverse' → logprob: -8.261331558227539
    4. '=' → logprob: -11.386331558227539
    5. '().' → logprob: -12.386331558227539
    6. ' .' → logprob: -12.636331558227539
    7. ' =' → logprob: -12.761331558227539
    8. '=.' → logprob: -13.386331558227539
    9. '.c' → logprob: -13.886331558227539
    10. 'sort' → logprob: -14.386331558227539

Token 322: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042090186616405845
    2. '(reverse' → logprob: -8.000420570373535
    3. 'reverse' → logprob: -9.875420570373535
    4. '()
' → logprob: -10.875420570373535
    5. '(' → logprob: -11.500420570373535
    6. ')' → logprob: -12.750420570373535
    7. '.reverse' → logprob: -14.750420570373535
    8. ' ()' → logprob: -15.250420570373535
    9. '())' → logprob: -15.250420570373535
    10. '();' → logprob: -15.375420570373535

Token 323: 'def' (ID: 1314)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.46469682455062866
    2. 'q' → logprob: -1.9646968841552734
    3. 'que' → logprob: -3.0896968841552734
    4. 'deque' → logprob: -3.7146968841552734
    5. '#' → logprob: -3.8396968841552734
    6. 'visited' → logprob: -4.214696884155273
    7. 'order' → logprob: -4.214696884155273
    8. 'from' → logprob: -4.339696884155273
    9. 'parent' → logprob: -4.589696884155273
    10. 'Q' → logprob: -4.589696884155273

Token 324: ' main' (ID: 2758)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.0015906770713627338
    2. ' dfs' → logprob: -7.251590728759766
    3. 'b' → logprob: -7.626590728759766
    4. ' BFS' → logprob: -9.626590728759766
    5. ' assign' → logprob: -9.751590728759766
    6. ' check' → logprob: -10.626590728759766
    7. ' solve' → logprob: -10.626590728759766
    8. ' main' → logprob: -10.751590728759766
    9. ' is' → logprob: -10.751590728759766
    10. ' validate' → logprob: -11.001590728759766

Token 325: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.125210297293961e-05
    2. '()' → logprob: -10.000081062316895
    3. '_' → logprob: -11.125081062316895
    4. '(' → logprob: -11.250081062316895
    5. ' ():' → logprob: -12.125081062316895
    6. '():
' → logprob: -13.000081062316895
    7. '(:' → logprob: -15.500081062316895
    8. '(":' → logprob: -16.87508201599121
    9. '_:' → logprob: -17.50008201599121
    10. '():
' → logprob: -17.75008201599121

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1657039225101471
    2. ' visited' → logprob: -2.5407040119171143
    3. ' queue' → logprob: -2.9157040119171143
    4. '    
' → logprob: -5.665703773498535
    5. 'visited' → logprob: -5.665703773498535
    6. 'q' → logprob: -6.165703773498535
    7. ' q' → logprob: -6.290703773498535
    8. 'queue' → logprob: -6.540703773498535
    9. '
' → logprob: -7.165703773498535
    10. ' deque' → logprob: -7.290703773498535

Token 327: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1116408109664917
    2. 'queue' → logprob: -1.6116408109664917
    3. '   ' → logprob: -1.8616408109664917
    4. 'dist' → logprob: -1.9866408109664917
    5. ' queue' → logprob: -2.9866409301757812
    6. 'visited' → logprob: -3.4866409301757812
    7. ' q' → logprob: -3.6116409301757812
    8. 'que' → logprob: -4.611640930175781
    9. 'd' → logprob: -4.736640930175781
    10. ' ' → logprob: -5.111640930175781

Token 328: ' Cr' (ID: 5790)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8054790496826172
    2. 'visited' → logprob: -1.6804790496826172
    3. 'dist' → logprob: -1.9304790496826172
    4. 'que' → logprob: -2.680479049682617
    5. 'queue' → logprob: -3.055479049682617
    6. 'd' → logprob: -4.305479049682617
    7. 'Q' → logprob: -4.430479049682617
    8. 'used' → logprob: -4.430479049682617
    9. 'seen' → logprob: -4.680479049682617
    10. 'from' → logprob: -4.805479049682617

Token 329: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4055519700050354
    2. 'ef' → logprob: -1.4055519104003906
    3. 'eef' → logprob: -2.5305519104003906
    4. 'eed' → logprob: -5.030551910400391
    5. 'eft' → logprob: -7.780551910400391
    6. '#' → logprob: -8.03055191040039
    7. '   ' → logprob: -8.40555191040039
    8. 'def' → logprob: -8.78055191040039
    9. 'oot' → logprob: -9.03055191040039
    10. 'eep' → logprob: -9.40555191040039

Token 330: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4357373714447021
    2. ' ' → logprob: -1.5607373714447021
    3. 'dist' → logprob: -1.6857373714447021
    4. 'queue' → logprob: -1.9357373714447021
    5. 'q' → logprob: -2.310737371444702
    6. ' queue' → logprob: -3.435737371444702
    7. 'visited' → logprob: -3.810737371444702
    8. ' q' → logprob: -4.435737609863281
    9. ' a' → logprob: -4.560737609863281
    10. 'a' → logprob: -4.685737609863281

Token 331: ' liste' (ID: 31719)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.232485055923462
    2. 'deque' → logprob: -1.607485055923462
    3. 'queue' → logprob: -1.732485055923462
    4. 'dist' → logprob: -2.357485055923462
    5. 'dq' → logprob: -2.357485055923462
    6. 'q' → logprob: -2.607485055923462
    7. 'que' → logprob: -3.232485055923462
    8. 'stack' → logprob: -4.357484817504883
    9. 'used' → logprob: -5.857484817504883
    10. 'de' → logprob: -5.857484817504883

Token 332: ' de' (ID: 334)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8508970737457275
    2. 'dist' → logprob: -1.3508970737457275
    3. '   ' → logprob: -2.1008970737457275
    4. 'de' → logprob: -2.8508970737457275
    5. ' visited' → logprob: -3.4758970737457275
    6. 'visit' → logprob: -3.8508970737457275
    7. 'd' → logprob: -4.350896835327148
    8. 'vis' → logprob: -4.600896835327148
    9. ' de' → logprob: -4.975896835327148
    10. 'distance' → logprob: -4.975896835327148

Token 333: ' N' (ID: 478)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5568445324897766
    2. 'dist' → logprob: -1.5568444728851318
    3. '-' → logprob: -3.056844472885132
    4. 'bool' → logprob: -3.306844472885132
    5. 'int' → logprob: -3.306844472885132
    6. 'deque' → logprob: -3.681844472885132
    7. 'vis' → logprob: -4.556844711303711
    8. 'False' → logprob: -4.681844711303711
    9. 'None' → logprob: -4.931844711303711
    10. '[' → logprob: -5.181844711303711

Token 334: ' z' (ID: 579)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.8618572950363159
    2. 'visited' → logprob: -1.611857295036316
    3. ' distances' → logprob: -2.1118574142456055
    4. ' visited' → logprob: -2.8618574142456055
    5. 'dist' → logprob: -3.2368574142456055
    6. 'bool' → logprob: -3.3618574142456055
    7. ' bool' → logprob: -3.4868574142456055
    8. ' False' → logprob: -3.4868574142456055
    9. '[' → logprob: -3.9868574142456055
    10. ' visit' → logprob: -4.4868574142456055

Token 335: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.6173107028007507
    2. 'eros' → logprob: -0.8673107028007507
    3. 'éros' → logprob: -3.3673107624053955
    4. 'éro' → logprob: -5.117310523986816
    5. '[' → logprob: -10.742310523986816
    6. '#' → logprob: -11.742310523986816
    7. 'erro' → logprob: -11.742310523986816
    8. 'er' → logprob: -12.117310523986816
    9. 'ERO' → logprob: -12.492310523986816
    10. '   ' → logprob: -13.492310523986816

Token 336: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4274387061595917
    2. 'dist' → logprob: -1.802438735961914
    3. 'visited' → logprob: -3.177438735961914
    4. 'distance' → logprob: -3.302438735961914
    5. ' distances' → logprob: -3.427438735961914
    6. 'dp' → logprob: -3.427438735961914
    7. ' dist' → logprob: -4.802438735961914
    8. 'counts' → logprob: -4.927438735961914
    9. 'count' → logprob: -6.052438735961914
    10. 'scores' → logprob: -6.052438735961914

Token 337: ' qui' (ID: 2780)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4416036903858185
    2. ' dist' → logprob: -2.816603660583496
    3. '   ' → logprob: -2.941603660583496
    4. 'visited' → logprob: -3.066603660583496
    5. 'dp' → logprob: -3.191603660583496
    6. 'd' → logprob: -3.816603660583496
    7. 'used' → logprob: -3.941603660583496
    8. ' visited' → logprob: -4.066603660583496
    9. ' used' → logprob: -4.066603660583496
    10. 'vis' → logprob: -4.316603660583496

Token 338: ' va' (ID: 3423)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8704487085342407
    2. 'vis' → logprob: -1.4954487085342407
    3. 'serv' → logprob: -1.8704487085342407
    4. 'sera' → logprob: -3.120448589324951
    5. 'visit' → logprob: -3.245448589324951
    6. 'represent' → logprob: -3.745448589324951
    7. ' sera' → logprob: -3.870448589324951
    8. 'v' → logprob: -4.370448589324951
    9. 'dist' → logprob: -4.620448589324951
    10. 's' → logprob: -4.745448589324951

Token 339: ' conten' (ID: 23523)
  Prédit: 'serv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'serv' → logprob: -0.2470163106918335
    2. ' servir' → logprob: -2.372016429901123
    3. 'stock' → logprob: -2.372016429901123
    4. ' stock' → logprob: -4.247016429901123
    5. 're' → logprob: -6.122016429901123
    6. 'être' → logprob: -6.372016429901123
    7. 'represent' → logprob: -6.497016429901123
    8. ' compter' → logprob: -6.622016429901123
    9. 'serve' → logprob: -6.747016429901123
    10. 's' → logprob: -6.872016429901123

Token 340: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.041346628218889236
    2. 'uer' → logprob: -3.666346549987793
    3. 't' → logprob: -4.541346549987793
    4. 'ir' → logprob: -6.041346549987793
    5. 'cer' → logprob: -7.291346549987793
    6. 'eur' → logprob: -8.041346549987793
    7. 'ter' → logprob: -8.416346549987793
    8. 'ur' → logprob: -8.541346549987793
    9. '[' → logprob: -8.791346549987793
    10. 'r' → logprob: -8.916346549987793

Token 341: ' la' (ID: 557)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3305729925632477
    2. 'la' → logprob: -1.9555729627609253
    3. 'l' → logprob: -3.080573081970215
    4. 'le' → logprob: -3.330573081970215
    5. ' les' → logprob: -3.330573081970215
    6. ' la' → logprob: -4.080573081970215
    7. 'dist' → logprob: -6.455573081970215
    8. ' l' → logprob: -6.955573081970215
    9. ' le' → logprob: -7.330573081970215
    10. 'pour' → logprob: -7.830573081970215

Token 342: ' valeur' (ID: 41664)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.1626710593700409
    2. 'val' → logprob: -3.2876710891723633
    3. 'cou' → logprob: -3.7876710891723633
    4. 'ordre' → logprob: -3.9126710891723633
    5. 'result' → logprob: -4.662671089172363
    6. 'parent' → logprob: -5.037671089172363
    7. 'color' → logprob: -5.037671089172363
    8. 'rés' → logprob: -5.287671089172363
    9. 'dist' → logprob: -5.412671089172363
    10. 'niveau' → logprob: -5.537671089172363

Token 343: ' attrib' (ID: 72186)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49925053119659424
    2. 'assign' → logprob: -2.2492504119873047
    3. 'max' → logprob: -2.6242504119873047
    4. 'de' → logprob: -3.7492504119873047
    5. 'distance' → logprob: -3.7492504119873047
    6. 'dist' → logprob: -4.124250411987305
    7. ' finale' → logprob: -4.124250411987305
    8. ' assign' → logprob: -4.124250411987305
    9. 'assigned' → logprob: -4.124250411987305
    10. ' maximale' → logprob: -4.249250411987305

Token 344: 'uée' (ID: 179901)
  Prédit: 'uée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uée' → logprob: -0.04884146898984909
    2. 'u' → logprob: -3.0488414764404297
    3. 'ué' → logprob: -8.42384147644043
    4. 'ue' → logprob: -10.42384147644043
    5. 'uer' → logprob: -13.42384147644043
    6. 'ues' → logprob: -13.67384147644043
    7. '[u' → logprob: -14.54884147644043
    8. 'ut' → logprob: -14.79884147644043
    9. 'uable' → logprob: -14.92384147644043
    10. ' u' → logprob: -14.92384147644043

Token 345: ' à' (ID: 1221)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.41076087951660156
    2. '   ' → logprob: -1.5357608795166016
    3. ' à' → logprob: -3.1607608795166016
    4. 'a' → logprob: -3.7857608795166016
    5. ' ' → logprob: -4.410760879516602
    6. 'aux' → logprob: -4.535760879516602
    7. 'à' → logprob: -4.660760879516602
    8. 'ans' → logprob: -5.285760879516602
    9. ' au' → logprob: -5.410760879516602
    10. ' a' → logprob: -5.910760879516602

Token 346: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.2647936940193176
    2. ' chaque' → logprob: -1.5147936344146729
    3. 'ch' → logprob: -4.514793872833252
    4. 'each' → logprob: -6.514793872833252
    5. 'Chaque' → logprob: -9.139793395996094
    6. ' chacun' → logprob: -9.389793395996094
    7. ' each' → logprob: -9.514793395996094
    8. '#' → logprob: -10.389793395996094
    9. 's' → logprob: -11.514793395996094
    10. '   ' → logprob: -11.764793395996094

Token 347: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.3993251323699951
    2. 's' → logprob: -1.5243251323699951
    3. 'som' → logprob: -2.399325132369995
    4. ' noe' → logprob: -4.149325370788574
    5. 'no' → logprob: -5.899325370788574
    6. 'node' → logprob: -7.399325370788574
    7. '```' → logprob: -7.399325370788574
    8. 'n' → logprob: -8.274325370788574
    9. '#' → logprob: -8.274325370788574
    10. ' ' → logprob: -9.399325370788574

Token 348: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1348472386598587
    2. 'values' → logprob: -3.1348471641540527
    3. 'val' → logprob: -3.8848471641540527
    4. 'ans' → logprob: -4.259847164154053
    5. 'vals' → logprob: -4.259847164154053
    6. 'dp' → logprob: -4.634847164154053
    7. ' values' → logprob: -5.134847164154053
    8. ' ans' → logprob: -5.384847164154053
    9. ' val' → logprob: -5.759847164154053
    10. 'v' → logprob: -6.134847164154053

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17210537195205688
    2. ' ans' → logprob: -3.172105312347412
    3. ' values' → logprob: -3.547105312347412
    4. ' val' → logprob: -3.922105312347412
    5. ' assigned' → logprob: -4.297105312347412
    6. 'values' → logprob: -4.672105312347412
    7. 'a' → logprob: -4.797105312347412
    8. 'val' → logprob: -5.047105312347412
    9. ' res' → logprob: -5.172105312347412
    10. 'res' → logprob: -5.547105312347412

Token 350: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5921754240989685
    2. 'res' → logprob: -1.7171754837036133
    3. 'val' → logprob: -2.5921754837036133
    4. 'a' → logprob: -3.0921754837036133
    5. 'value' → logprob: -3.5921754837036133
    6. 'answer' → logprob: -3.9671754837036133
    7. 'values' → logprob: -3.9671754837036133
    8. 'vals' → logprob: -4.342175483703613
    9. 'dp' → logprob: -4.717175483703613
    10. 'd' → logprob: -4.717175483703613

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693849205970764
    2. '=' → logprob: -2.126938581466675
    3. ' ' → logprob: -11.751938819885254
    4. '   ' → logprob: -14.126938819885254
    5. 's' → logprob: -14.876938819885254
    6. '[' → logprob: -15.126938819885254
    7. '＝' → logprob: -15.501938819885254
    8. ' =[' → logprob: -15.626938819885254
    9. '[:]' → logprob: -15.751938819885254
    10. '=[' → logprob: -16.126937866210938

Token 352: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024780353996902704
    2. ' [' → logprob: -6.002478122711182
    3. '[N' → logprob: -13.252477645874023
    4. '[-' → logprob: -14.877477645874023
    5. '[n' → logprob: -16.002477645874023
    6. '[c' → logprob: -17.377477645874023
    7. ' ' → logprob: -17.377477645874023
    8. '[len' → logprob: -17.377477645874023
    9. '[a' → logprob: -18.377477645874023
    10. '   ' → logprob: -18.377477645874023

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.166338137816638e-05
    2. 'None' → logprob: -10.875031471252441
    3. ' ' → logprob: -11.875031471252441
    4. '-' → logprob: -12.125031471252441
    5. '   ' → logprob: -15.750031471252441
    6. ' None' → logprob: -16.750032424926758
    7. ' -' → logprob: -16.750032424926758
    8. ']' → logprob: -17.500032424926758
    9. 'False' → logprob: -18.812532424926758
    10. '
' → logprob: -18.875032424926758

Token 354: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011939177056774497
    2. ']*' → logprob: -6.876194000244141
    3. ' ]' → logprob: -9.50119400024414
    4. ' for' → logprob: -9.50119400024414
    5. 'for' → logprob: -11.50119400024414
    6. ']*(' → logprob: -14.25119400024414
    7. ')' → logprob: -14.62619400024414
    8. ']+' → logprob: -16.50119400024414
    9. ']int' → logprob: -17.25119400024414
    10. '   ' → logprob: -17.37619400024414

Token 355: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0896039754152298
    2. '   ' → logprob: -3.214603900909424
    3. '<|end|>' → logprob: -3.714603900909424
    4. '    
' → logprob: -4.339603900909424
    5. '  
' → logprob: -6.214603900909424
    6. ' 
' → logprob: -6.714603900909424
    7. '
' → logprob: -6.839603900909424
    8. ' ' → logprob: -6.964603900909424
    9. '   
' → logprob: -7.464603900909424
    10. ')' → logprob: -7.839603900909424

Token 356: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.008129963040119e-06
    2. ' N' → logprob: -12.500003814697266
    3. '(N' → logprob: -15.500003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '	N' → logprob: -20.750003814697266
    6. '
' → logprob: -22.375003814697266
    7. 'Ｎ' → logprob: -23.250003814697266
    8. '(' → logprob: -23.625003814697266
    9. ' ' → logprob: -23.750003814697266
    10. 'n' → logprob: -23.750003814697266

Token 357: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05687221139669418
    2. '
' → logprob: -3.0568721294403076
    3. '    
' → logprob: -5.806872367858887
    4. ',' → logprob: -7.056872367858887
    5. '	queue' → logprob: -7.056872367858887
    6. '<|end|>' → logprob: -7.056872367858887
    7. 'queue' → logprob: -7.931872367858887
    8. '  
' → logprob: -8.056872367858887
    9. '  ' → logprob: -8.306872367858887
    10. '' → logprob: -8.431872367858887

Token 358: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6082499027252197
    2. 'queue' → logprob: -0.9832499027252197
    3. 'que' → logprob: -3.3582499027252197
    4. 'dq' → logprob: -3.9832499027252197
    5. 'visited' → logprob: -5.233249664306641
    6. '#' → logprob: -5.733249664306641
    7. 'sum' → logprob: -5.983249664306641
    8. '   ' → logprob: -6.108249664306641
    9. 'used' → logprob: -6.233249664306641
    10. 'stack' → logprob: -6.358249664306641

Token 359: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.27452221512794495
    2. 'queue' → logprob: -2.274522304534912
    3. 'que' → logprob: -3.024522304534912
    4. 'dq' → logprob: -3.024522304534912
    5. 'visited' → logprob: -4.399522304534912
    6. 'used' → logprob: -5.024522304534912
    7. 'd' → logprob: -5.399522304534912
    8. 'stack' → logprob: -5.524522304534912
    9. 'ans' → logprob: -6.024522304534912
    10. 'total' → logprob: -6.149522304534912

Token 360: ' At' (ID: 3604)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3944602310657501
    2. 'dq' → logprob: -2.5194602012634277
    3. 'queue' → logprob: -2.6444602012634277
    4. 'que' → logprob: -2.6444602012634277
    5. 'visited' → logprob: -3.5194602012634277
    6. 'd' → logprob: -3.7694602012634277
    7. 'total' → logprob: -4.644460201263428
    8. 'ans' → logprob: -4.894460201263428
    9. 'used' → logprob: -5.019460201263428
    10. '#' → logprob: -5.769460201263428

Token 361: 'trib' (ID: 1420)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.43834465742111206
    2. '   ' → logprob: -1.4383447170257568
    3. 'q' → logprob: -4.313344478607178
    4. 'tention' → logprob: -4.313344478607178
    5. '  ' → logprob: -4.563344478607178
    6. 't' → logprob: -4.813344478607178
    7. '#' → logprob: -4.813344478607178
    8. '       ' → logprob: -5.188344478607178
    9. 'stack' → logprob: -5.188344478607178
    10. 's' → logprob: -5.188344478607178

Token 362: 'ue' (ID: 466)
  Prédit: 'uer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.12607041001319885
    2. 'ue' → logprob: -2.251070499420166
    3. '   ' → logprob: -4.751070499420166
    4. 'u' → logprob: -5.626070499420166
    5. 'er' → logprob: -8.251070022583008
    6. 'ure' → logprob: -9.501070022583008
    7. 'uez' → logprob: -9.501070022583008
    8. 'ution' → logprob: -10.001070022583008
    9. ' ans' → logprob: -10.001070022583008
    10. '=' → logprob: -10.001070022583008

Token 363: ' à' (ID: 1221)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12048066407442093
    2. 'val' → logprob: -3.12048077583313
    3. ' ans' → logprob: -3.37048077583313
    4. 'value' → logprob: -3.99548077583313
    5. 'total' → logprob: -5.620480537414551
    6. 'current' → logprob: -5.870480537414551
    7. 'cur' → logprob: -6.120480537414551
    8. '0' → logprob: -6.745480537414551
    9. 'sum' → logprob: -6.745480537414551
    10. 's' → logprob: -6.870480537414551

Token 364: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010419690981507301
    2. 'node' → logprob: -6.635419845581055
    3. 'sum' → logprob: -6.760419845581055
    4. 'val' → logprob: -7.010419845581055
    5. 'cur' → logprob: -7.010419845581055
    6. 'total' → logprob: -7.135419845581055
    7. 's' → logprob: -7.385419845581055
    8. 'u' → logprob: -7.385419845581055
    9. 'current' → logprob: -7.385419845581055
    10. ' ans' → logprob: -7.635419845581055

Token 365: ' rac' (ID: 12334)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025869762524962425
    2. 's' → logprob: -5.025869846343994
    3. 'som' → logprob: -5.275869846343994
    4. 'sum' → logprob: -5.650869846343994
    5. 'current' → logprob: -5.775869846343994
    6. 'val' → logprob: -5.775869846343994
    7. 'root' → logprob: -7.150869846343994
    8. 'node' → logprob: -7.650869846343994
    9. 'vertex' → logprob: -7.775869846343994
    10. 'value' → logprob: -7.775869846343994

Token 366: 'ine' (ID: 514)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7046660780906677
    2. 'ine' → logprob: -1.0796661376953125
    3. 'ss' → logprob: -3.5796661376953125
    4. '```' → logprob: -3.5796661376953125
    5. 'c' → logprob: -4.4546661376953125
    6. 'site' → logprob: -4.4546661376953125
    7. '#' → logprob: -4.4546661376953125
    8. '``' → logprob: -4.8296661376953125
    9. 'ïne' → logprob: -5.0796661376953125
    10. 'sie' → logprob: -5.0796661376953125

Token 367: ' (' (ID: 350)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6572218537330627
    2. 'ans' → logprob: -0.7822218537330627
    3. '0' → logprob: -4.157221794128418
    4. '(ans' → logprob: -5.032221794128418
    5. ' (' → logprob: -6.532221794128418
    6. ' ' → logprob: -8.032221794128418
    7. '(' → logprob: -8.532221794128418
    8. ' node' → logprob: -10.032221794128418
    9. '1' → logprob: -10.157221794128418
    10. '[' → logprob: -10.532221794128418

Token 368: 'som' (ID: 35641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.250008583068848
    3. 'ans' → logprob: -12.875008583068848
    4. ')' → logprob: -15.125008583068848
    5. '
' → logprob: -15.125008583068848
    6. ' ans' → logprob: -16.25000762939453
    7. '(' → logprob: -16.37500762939453
    8. '   ' → logprob: -16.37500762939453
    9. '#' → logprob: -17.25000762939453
    10. '=' → logprob: -17.31250762939453

Token 369: 'met' (ID: 3001)
  Prédit: 'met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.00808494072407484
    2. 'me' → logprob: -5.508084774017334
    3. 'ot' → logprob: -6.633084774017334
    4. '#' → logprob: -7.008084774017334
    5. 'e' → logprob: -7.008084774017334
    6. '```' → logprob: -8.258085250854492
    7. 'et' → logprob: -9.133085250854492
    8. '[' → logprob: -9.383085250854492
    9. ']' → logprob: -9.633085250854492
    10. 've' → logprob: -9.883085250854492

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024968255311250687
    2. ' ' → logprob: -6.002496719360352
    3. '=' → logprob: -11.752496719360352
    4. '[' → logprob: -11.877496719360352
    5. ')' → logprob: -12.877496719360352
    6. ' =' → logprob: -13.127496719360352
    7. '(' → logprob: -13.752496719360352
    8. '   ' → logprob: -15.127496719360352
    9. ' zero' → logprob: -16.12749671936035
    10. '#' → logprob: -16.62749671936035

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. '=' → logprob: -15.250001907348633
    5. '(' → logprob: -15.750001907348633
    6. 'ans' → logprob: -18.125001907348633
    7. ')' → logprob: -18.250001907348633
    8. ' =' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '#' → logprob: -19.750001907348633

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. ' )' → logprob: -11.000021934509277
    3. ')
' → logprob: -12.500021934509277
    4. '   ' → logprob: -14.750021934509277
    5. ']' → logprob: -15.125021934509277
    6. '[' → logprob: -15.250021934509277
    7. ' ans' → logprob: -16.000022888183594
    8. ')c' → logprob: -16.375022888183594
    9. ')

' → logprob: -16.750022888183594
    10. 'ans' → logprob: -16.750022888183594

Token 373: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18347859382629395
    2. ' ans' → logprob: -1.808478593826294
    3. '(ans' → logprob: -6.308478355407715
    4. '   ' → logprob: -6.683478355407715
    5. '	ans' → logprob: -7.933478355407715
    6. ' the' → logprob: -9.808478355407715
    7. ',' → logprob: -10.183478355407715
    8. 'the' → logprob: -10.183478355407715
    9. ' =' → logprob: -10.308478355407715
    10. ':' → logprob: -10.433478355407715

Token 374: ' valeur' (ID: 41664)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002585408743470907
    2. 'val' → logprob: -6.502585411071777
    3. 'pop' → logprob: -7.502585411071777
    4. 'max' → logprob: -8.502585411071777
    5. 'value' → logprob: -9.127585411071777
    6. 'largest' → logprob: -9.627585411071777
    7. 'ans' → logprob: -10.252585411071777
    8. ' c' → logprob: -10.627585411071777
    9. 'maximum' → logprob: -10.752585411071777
    10. 'deque' → logprob: -11.002585411071777

Token 375: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001463793101720512
    2. 'ans' → logprob: -7.126463890075684
    3. ' c' → logprob: -7.626463890075684
    4. 'pop' → logprob: -9.626463890075684
    5. 'max' → logprob: -9.876463890075684
    6. ' ans' → logprob: -11.001463890075684
    7. '(ans' → logprob: -11.376463890075684
    8. '   ' → logprob: -11.751463890075684
    9. ' =' → logprob: -12.251463890075684
    10. '(c' → logprob: -12.626463890075684

Token 376: ' plus' (ID: 2932)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0230152606964111
    2. 'plus' → logprob: -1.0230152606964111
    3. ' plus' → logprob: -2.148015260696411
    4. '.pop' → logprob: -3.148015260696411
    5. 'pop' → logprob: -3.273015260696411
    6. 'argest' → logprob: -3.773015260696411
    7. ' c' → logprob: -3.898015260696411
    8. 'b' → logprob: -4.898015022277832
    9. 'import' → logprob: -5.273015022277832
    10. 'largest' → logprob: -5.398015022277832

Token 377: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.04798000305891037
    2. ' grande' → logprob: -3.5479800701141357
    3. 'grand' → logprob: -4.547979831695557
    4. 'import' → logprob: -5.047979831695557
    5. 'é' → logprob: -8.047980308532715
    6. '```' → logprob: -8.422980308532715
    7. ' élevée' → logprob: -9.047980308532715
    8. ' grand' → logprob: -9.547980308532715
    9. 'g' → logprob: -9.547980308532715
    10. 'pet' → logprob: -9.672980308532715

Token 378: ' restante' (ID: 130202)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06693277508020401
    2. '(ans' → logprob: -3.4419326782226562
    3. ' ans' → logprob: -3.5669326782226562
    4. '   ' → logprob: -6.066932678222656
    5. ':' → logprob: -6.816932678222656
    6. '	ans' → logprob: -7.691932678222656
    7. 'c' → logprob: -9.066932678222656
    8. '_ans' → logprob: -9.066932678222656
    9. ')' → logprob: -9.191932678222656
    10. ',' → logprob: -9.566932678222656

Token 379: ' dans' (ID: 2671)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05618635565042496
    2. ' ans' → logprob: -2.9311864376068115
    3. '   ' → logprob: -7.556186199188232
    4. '(ans' → logprob: -7.681186199188232
    5. '
' → logprob: -8.43118667602539
    6. '	ans' → logprob: -9.80618667602539
    7. ',' → logprob: -11.68118667602539
    8. 'val' → logprob: -11.68118667602539
    9. '_ans' → logprob: -11.80618667602539
    10. '    
' → logprob: -12.55618667602539

Token 380: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00020354038861114532
    2. ' c' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.00020408630371
    4. '   ' → logprob: -18.00020408630371
    5. '	c' → logprob: -18.50020408630371
    6. '
' → logprob: -19.00020408630371
    7. ')c' → logprob: -19.12520408630371
    8. '  ' → logprob: -20.62520408630371
    9. 'the' → logprob: -21.00020408630371
    10. 'l' → logprob: -21.62520408630371

Token 381: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.15441757265944e-05
    2. ' c' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.250031471252441
    4. '
' → logprob: -16.875032424926758
    5. '	c' → logprob: -17.875032424926758
    6. ')c' → logprob: -18.125032424926758
    7. ' ' → logprob: -18.625032424926758
    8. 'pop' → logprob: -18.750032424926758
    9. '  ' → logprob: -18.875032424926758
    10. '#' → logprob: -18.875032424926758

Token 382: ' c' (ID: 274)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011856169439852238
    2. ' ans' → logprob: -4.6368560791015625
    3. '(ans' → logprob: -6.6368560791015625
    4. '   ' → logprob: -7.2618560791015625
    5. '	ans' → logprob: -10.511856079101562
    6. 'c' → logprob: -10.761856079101562
    7. ')' → logprob: -11.011856079101562
    8. ',' → logprob: -11.886856079101562
    9. '
' → logprob: -12.761856079101562
    10. '_ans' → logprob: -12.761856079101562

Token 383: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1538553535938263
    2. '   ' → logprob: -2.653855323791504
    3. ' ans' → logprob: -2.653855323791504
    4. '
' → logprob: -6.778855323791504
    5. '(ans' → logprob: -7.778855323791504
    6. '	ans' → logprob: -8.403855323791504
    7. ',' → logprob: -10.903855323791504
    8. '    
' → logprob: -10.903855323791504
    9. ')' → logprob: -12.153855323791504
    10. '_ans' → logprob: -12.403855323791504

Token 384: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4651391804218292
    2. 'ans' → logprob: -1.4651391506195068
    3. ' ans' → logprob: -1.9651391506195068
    4. '(ans' → logprob: -8.215139389038086
    5. '	ans' → logprob: -8.340139389038086
    6. '
' → logprob: -8.840139389038086
    7. '    
' → logprob: -9.715139389038086
    8. ',' → logprob: -10.965139389038086
    9. '  ' → logprob: -12.465139389038086
    10. ')' → logprob: -12.590139389038086

Token 385: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0013296448159962893
    2. ' ans' → logprob: -6.62632942199707
    3. '	ans' → logprob: -12.75132942199707
    4. '(ans' → logprob: -14.75132942199707
    5. '   ' → logprob: -15.37632942199707
    6. '
' → logprob: -15.87632942199707
    7. '_ans' → logprob: -18.12632942199707
    8. 'import' → logprob: -18.62632942199707
    9. 'val' → logprob: -19.12632942199707
    10. 'answer' → logprob: -19.12632942199707

Token 386: ' c' (ID: 274)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00038074489566497505
    2. ' ans' → logprob: -7.875380516052246
    3. '	ans' → logprob: -14.750380516052246
    4. '   ' → logprob: -16.125381469726562
    5. '(ans' → logprob: -16.375381469726562
    6. '
' → logprob: -17.750381469726562
    7. 'import' → logprob: -18.000381469726562
    8. 'anst' → logprob: -19.125381469726562
    9. 'answer' → logprob: -19.125381469726562
    10. 'val' → logprob: -19.625381469726562

Token 387: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.038958460092544556
    2. 'pop' → logprob: -3.5389585494995117
    3. '.' → logprob: -5.413958549499512
    4. '_pop' → logprob: -6.913958549499512
    5. ' .' → logprob: -7.038958549499512
    6. '_val' → logprob: -7.538958549499512
    7. '.reverse' → logprob: -7.663958549499512
    8. '_value' → logprob: -8.038958549499512
    9. ',' → logprob: -8.288958549499512
    10. 'c' → logprob: -8.413958549499512

Token 388: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013131031300872564
    2. '())' → logprob: -9.000131607055664
    3. '()
' → logprob: -13.250131607055664
    4. '()]' → logprob: -13.500131607055664
    5. '()>' → logprob: -14.000131607055664
    6. '()</' → logprob: -14.375131607055664
    7. '(' → logprob: -14.750131607055664
    8. '()

' → logprob: -14.875131607055664
    9. '()-' → logprob: -14.875131607055664
    10. '().' → logprob: -14.875131607055664

Token 389: ' sup' (ID: 1982)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014937956584617496
    2. ')' → logprob: -7.37649393081665
    3. '())' → logprob: -7.37649393081665
    4. '()
' → logprob: -8.376493453979492
    5. '()]' → logprob: -12.876493453979492
    6. '   ' → logprob: -13.626493453979492
    7. '()
' → logprob: -13.751493453979492
    8. '(),' → logprob: -13.751493453979492
    9. '(' → logprob: -13.876493453979492
    10. '()

' → logprob: -14.501493453979492

Token 390: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.004720257129520178
    2. 'prim' → logprob: -5.754720211029053
    3. 'pr' → logprob: -6.629720211029053
    4. 'primer' → logprob: -9.129720687866211
    5. 'prima' → logprob: -9.754720687866211
    6. '```' → logprob: -11.504720687866211
    7. '()' → logprob: -12.129720687866211
    8. '>' → logprob: -12.129720687866211
    9. 'press' → logprob: -12.254720687866211
    10. 'print' → logprob: -12.504720687866211

Token 391: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.735893965815194e-05
    2. 'c' → logprob: -12.500017166137695
    3. '(' → logprob: -12.875017166137695
    4. '(c' → logprob: -13.125017166137695
    5. '())' → logprob: -13.500017166137695
    6. '()
' → logprob: -13.625017166137695
    7. '()>' → logprob: -14.000017166137695
    8. '().' → logprob: -14.000017166137695
    9. 'the' → logprob: -14.000017166137695
    10. '()%' → logprob: -14.375017166137695

Token 392: ' ren' (ID: 5427)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.6693623661994934
    2. ' ren' → logprob: -0.9193623661994934
    3. 'ren' → logprob: -2.9193623065948486
    4. 'return' → logprob: -4.294362545013428
    5. ' récup' → logprob: -4.294362545013428
    6. ' return' → logprob: -5.169362545013428
    7. 'r' → logprob: -7.294362545013428
    8. ' prend' → logprob: -7.419362545013428
    9. 'ret' → logprob: -8.04436206817627
    10. ' returns' → logprob: -8.29436206817627

Token 393: 'voie' (ID: 70072)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.04366355761885643
    2. 'pose' → logprob: -4.293663501739502
    3. 'pr' → logprob: -4.418663501739502
    4. 'p' → logprob: -4.418663501739502
    5. '```' → logprob: -7.668663501739502
    6. 'r' → logprob: -7.668663501739502
    7. 'pl' → logprob: -7.793663501739502
    8. '()' → logprob: -7.918663501739502
    9. 'c' → logprob: -8.16866397857666
    10. 'erce' → logprob: -8.41866397857666

Token 394: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39471590518951416
    2. 'c' → logprob: -1.1447159051895142
    3. ' c' → logprob: -5.519715785980225
    4. ')' → logprob: -5.769715785980225
    5. '())' → logprob: -8.519716262817383
    6. ')c' → logprob: -8.644716262817383
    7. 'le' → logprob: -9.644716262817383
    8. 'l' → logprob: -10.144716262817383
    9. ' )' → logprob: -10.144716262817383
    10. '(' → logprob: -10.394716262817383

Token 395: ' dernier' (ID: 27982)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.055739302188158035
    2. ' dernier' → logprob: -3.180739402770996
    3. 'plus' → logprob: -4.805739402770996
    4. 'der' → logprob: -6.055739402770996
    5. ' plus' → logprob: -7.180739402770996
    6. 'last' → logprob: -7.555739402770996
    7. ' ' → logprob: -8.180739402770996
    8. 'largest' → logprob: -8.305739402770996
    9. 'élé' → logprob: -9.555739402770996
    10. '+' → logprob: -9.930739402770996

Token 396: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.27784064412117004
    2. '()' → logprob: -2.0278406143188477
    3. 'élé' → logprob: -2.4028406143188477
    4. ')' → logprob: -4.277840614318848
    5. 'element' → logprob: -5.527840614318848
    6. ' element' → logprob: -6.277840614318848
    7. '(' → logprob: -8.152840614318848
    8. '())' → logprob: -9.402840614318848
    9. ' ' → logprob: -9.402840614318848
    10. ' )' → logprob: -9.777840614318848

Token 397: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011757015017792583
    2. '()
' → logprob: -6.876175880432129
    3. '())' → logprob: -9.376175880432129
    4. ')' → logprob: -10.751175880432129
    5. '   ' → logprob: -12.001175880432129
    6. '(' → logprob: -12.126175880432129
    7. ' ()' → logprob: -12.376175880432129
    8. '()

' → logprob: -12.626175880432129
    9. '(),' → logprob: -12.751175880432129
    10. 'c' → logprob: -12.751175880432129

Token 398: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020604951307177544
    2. ' c' → logprob: -3.8956048488616943
    3. ')c' → logprob: -10.520605087280273
    4. ')' → logprob: -10.895605087280273
    5. ' la' → logprob: -11.395605087280273
    6. '(c' → logprob: -13.395605087280273
    7. 'la' → logprob: -13.520605087280273
    8. ' ' → logprob: -13.770605087280273
    9. '()' → logprob: -14.520605087280273
    10. '	c' → logprob: -14.895605087280273

Token 399: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.021028660237789154
    2. ' c' → logprob: -4.271028518676758
    3. 'liste' → logprob: -5.646028518676758
    4. 'list' → logprob: -6.271028518676758
    5. ' liste' → logprob: -7.021028518676758
    6. ' list' → logprob: -7.646028518676758
    7. 'l' → logprob: -11.396028518676758
    8. ' ' → logprob: -11.896028518676758
    9. 'lista' → logprob: -11.896028518676758
    10. '```' → logprob: -12.021028518676758

Token 400: ' c' (ID: 274)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01073179766535759
    2. 'ans' → logprob: -5.5107316970825195
    3. '()
' → logprob: -6.3857316970825195
    4. ')' → logprob: -6.6357316970825195
    5. '())' → logprob: -6.8857316970825195
    6. '   ' → logprob: -7.2607316970825195
    7. ' ans' → logprob: -8.01073169708252
    8. '(ans' → logprob: -8.13573169708252
    9. 'val' → logprob: -8.51073169708252
    10. ' ()' → logprob: -8.63573169708252

Token 401: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013506059534847736
    2. '()
' → logprob: -4.388505935668945
    3. ')' → logprob: -7.763505935668945
    4. '   ' → logprob: -7.888505935668945
    5. '())' → logprob: -9.263505935668945
    6. '()
' → logprob: -10.763505935668945
    7. '(),' → logprob: -11.013505935668945
    8. 'ans' → logprob: -11.388505935668945
    9. '(' → logprob: -11.888505935668945
    10. ',' → logprob: -11.888505935668945

Token 402: 'temps' (ID: 42511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019635213539004326
    2. ' )' → logprob: -4.144635200500488
    3. ')c' → logprob: -6.019635200500488
    4. 'c' → logprob: -6.894635200500488
    5. ' c' → logprob: -10.144635200500488
    6. '()' → logprob: -10.894635200500488
    7. ')
' → logprob: -10.894635200500488
    8. ' ' → logprob: -11.019635200500488
    9. ' ' → logprob: -11.519635200500488
    10. '   ' → logprob: -11.519635200500488

Token 403: ' constant' (ID: 9594)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09594523906707764
    2. '()' → logprob: -3.345945358276367
    3. ' )' → logprob: -4.220945358276367
    4. '.' → logprob: -4.595945358276367
    5. '   ' → logprob: -4.970945358276367
    6. ' c' → logprob: -5.720945358276367
    7. '_' → logprob: -5.720945358276367
    8. '())' → logprob: -5.970945358276367
    9. ' de' → logprob: -6.220945358276367
    10. 'c' → logprob: -6.220945358276367

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040325685404241085
    2. '()' → logprob: -6.254032611846924
    3. ' )' → logprob: -6.504032611846924
    4. '())' → logprob: -7.629032611846924
    5. ')
' → logprob: -10.129032135009766
    6. '   ' → logprob: -10.254032135009766
    7. ')c' → logprob: -10.754032135009766
    8. ' ' → logprob: -12.129032135009766
    9. '))' → logprob: -13.129032135009766
    10. '(' → logprob: -13.129032135009766

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46486157178878784
    2. 'ans' → logprob: -1.4648616313934326
    3. ' ans' → logprob: -1.9648616313934326
    4. '	ans' → logprob: -7.9648613929748535
    5. '(ans' → logprob: -8.964861869812012
    6. ')' → logprob: -12.214861869812012
    7. '```' → logprob: -12.964861869812012
    8. ' ' → logprob: -13.464861869812012
    9. '  ' → logprob: -13.589861869812012
    10. '_ans' → logprob: -13.839861869812012

Token 406: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0004341261519584805
    2. ' ans' → logprob: -7.750433921813965
    3. '   ' → logprob: -12.750433921813965
    4. '	ans' → logprob: -15.000433921813965
    5. '(ans' → logprob: -15.875433921813965
    6. 'val' → logprob: -16.25043487548828
    7. 'value' → logprob: -18.62543487548828
    8. 'v' → logprob: -19.00043487548828
    9. 'answer' → logprob: -19.12543487548828
    10. '
' → logprob: -19.75043487548828

Token 407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.250000953674316
    3. '=' → logprob: -16.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. ' =' → logprob: -17.750001907348633
    6. '0' → logprob: -17.875001907348633
    7. '\[' → logprob: -18.625001907348633
    8. '[c' → logprob: -18.750001907348633
    9. '[
' → logprob: -18.875001907348633
    10. '][' → logprob: -19.750001907348633

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7133641196996905e-05
    2. '[' → logprob: -10.87502670288086
    3. ' ' → logprob: -11.75002670288086
    4. '   ' → logprob: -15.87502670288086
    5. ']' → logprob: -17.12502670288086
    6. ')' → logprob: -17.50002670288086
    7. '
' → logprob: -18.00002670288086
    8. ' [' → logprob: -18.37502670288086
    9. '(' → logprob: -18.81252670288086
    10. '```' → logprob: -19.12502670288086

Token 409: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.636475493200123e-05
    2. ']=' → logprob: -9.500076293945312
    3. '=' → logprob: -14.000076293945312
    4. ' ]' → logprob: -14.625076293945312
    5. ')' → logprob: -16.000076293945312
    6. ' =' → logprob: -18.625076293945312
    7. ']+=' → logprob: -19.375076293945312
    8. '[' → logprob: -19.750076293945312
    9. ']
' → logprob: -20.000076293945312
    10. ',' → logprob: -20.375076293945312

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005238140933215618
    2. ' =' → logprob: -5.255238056182861
    3. '=c' → logprob: -12.38023853302002
    4. '.=' → logprob: -16.255237579345703
    5. '+=' → logprob: -18.005237579345703
    6. '＝' → logprob: -18.005237579345703
    7. ',' → logprob: -18.505237579345703
    8. '=

' → logprob: -18.630237579345703
    9. '=}' → logprob: -19.130237579345703
    10. '=int' → logprob: -19.130237579345703

Token 411: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005233763717114925
    2. ' c' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.380233764648438
    4. '	c' → logprob: -18.505233764648438
    5. '   ' → logprob: -19.380233764648438
    6. ')c' → logprob: -20.255233764648438
    7. ' ' → logprob: -20.505233764648438
    8. '(c' → logprob: -21.005233764648438
    9. '[c' → logprob: -21.005233764648438
    10. 'pop' → logprob: -21.380233764648438

Token 412: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.2842308680992573e-05
    2. '.' → logprob: -10.750022888183594
    3. ' .' → logprob: -13.750022888183594
    4. 'pop' → logprob: -15.125022888183594
    5. ').' → logprob: -19.000022888183594
    6. '.p' → logprob: -19.250022888183594
    7. '.Pop' → logprob: -19.375022888183594
    8. ' pop' → logprob: -19.500022888183594
    9. '   ' → logprob: -20.250022888183594
    10. '_pop' → logprob: -21.125022888183594

Token 413: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()]' → logprob: -14.750001907348633
    3. '()`' → logprob: -14.875001907348633
    4. '()
' → logprob: -15.625001907348633
    5. '())' → logprob: -15.625001907348633
    6. '(' → logprob: -16.375001907348633
    7. '()

' → logprob: -16.375001907348633
    8. '()"' → logprob: -17.250001907348633
    9. '()-' → logprob: -17.500001907348633
    10. '().' → logprob: -17.500001907348633

Token 414: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13305100798606873
    2. '   ' → logprob: -2.1330509185791016
    3. '    
' → logprob: -5.383050918579102
    4. 'queue' → logprob: -7.633050918579102
    5. '  
' → logprob: -8.508050918579102
    6. ' queue' → logprob: -8.633050918579102
    7. '	queue' → logprob: -8.758050918579102
    8. '
' → logprob: -8.883050918579102
    9. '```' → logprob: -9.133050918579102
    10. 'deque' → logprob: -9.758050918579102

Token 415: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.08764494210481644
    2. 'q' → logprob: -2.5876450538635254
    3. '   ' → logprob: -5.337645053863525
    4. 'dq' → logprob: -6.337645053863525
    5. '#' (adapté à ' #') → logprob: -7.087645053863525
    6. 'que' → logprob: -7.462645053863525
    7. ' queue' → logprob: -7.962645053863525
    8. 'visited' → logprob: -8.962644577026367
    9. 'Q' → logprob: -9.212644577026367
    10. 'stack' → logprob: -9.962644577026367

Token 416: ' Initialise' (ID: 179601)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.4794262945652008
    2. 'q' → logprob: -1.1044262647628784
    3. 'que' → logprob: -3.854426383972168
    4. 'dq' → logprob: -3.854426383972168
    5. 'visited' → logprob: -5.354426383972168
    6. 'deque' → logprob: -6.854426383972168
    7. '#' → logprob: -7.729426383972168
    8. 'Q' → logprob: -7.979426383972168
    9. 'd' → logprob: -9.229426383972168
    10. 'de' → logprob: -9.229426383972168

Token 417: ' S' (ID: 336)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2833305299282074
    2. ' queue' → logprob: -1.7833305597305298
    3. 'q' → logprob: -3.0333304405212402
    4. 'que' → logprob: -4.40833044052124
    5. '   ' → logprob: -4.78333044052124
    6. 'dq' → logprob: -6.03333044052124
    7. ' q' → logprob: -6.40833044052124
    8. 'd' → logprob: -6.53333044052124
    9. 'deque' → logprob: -6.65833044052124
    10. ' que' → logprob: -6.90833044052124

Token 418: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005940055940300226
    2. '=' → logprob: -5.130939960479736
    3. ' ' → logprob: -12.255940437316895
    4. 't' → logprob: -13.130940437316895
    5. 'deque' → logprob: -13.880940437316895
    6. ' queue' → logprob: -14.130940437316895
    7. '   ' → logprob: -14.380940437316895
    8. 'e' → logprob: -14.880940437316895
    9. ' deque' → logprob: -15.005940437316895
    10. 'queue' → logprob: -15.255940437316895

Token 419: ' ' (ID: 220)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.025449033826589584
    2. '0' → logprob: -3.90044903755188
    3. '1' → logprob: -5.650448799133301
    4. 'c' → logprob: -7.150448799133301
    5. ' deque' → logprob: -8.4004487991333
    6. 'ans' → logprob: -8.7754487991333
    7. '[' → logprob: -9.4004487991333
    8. '{' → logprob: -10.2754487991333
    9. 'a' → logprob: -10.9004487991333
    10. 'N' → logprob: -11.0254487991333

Token 420: '0' (ID: 15)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00018625585653353482
    2. '1' → logprob: -8.8751859664917
    3. '0' → logprob: -10.1251859664917
    4. ' deque' → logprob: -12.2501859664917
    5. '[' → logprob: -14.6251859664917
    6. 'ans' → logprob: -15.5001859664917
    7. 'c' → logprob: -15.5001859664917
    8. '2' → logprob: -15.7501859664917
    9. 'de' → logprob: -16.625186920166016
    10. '
' → logprob: -16.625186920166016

Token 421: ',' (ID: 11)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08560719341039658
    2. ' S' → logprob: -3.2106072902679443
    3. '   ' → logprob: -3.7106072902679443
    4. '
' → logprob: -4.210607051849365
    5. ',' → logprob: -6.835607051849365
    6. 's' → logprob: -7.335607051849365
    7. ' ' → logprob: -8.335607528686523
    8. ' =' → logprob: -8.710607528686523
    9. '
' → logprob: -9.585607528686523
    10. '    
' → logprob: -10.085607528686523

Token 422: ' il' (ID: 1793)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.816980242729187
    2. ' S' → logprob: -2.0669803619384766
    3. 's' → logprob: -2.3169803619384766
    4. 'q' → logprob: -2.4419803619384766
    5. ' queue' → logprob: -2.8169803619384766
    6. 'queue' → logprob: -3.1919803619384766
    7. ' s' → logprob: -3.5669803619384766
    8. ' q' → logprob: -3.6919803619384766
    9. 'sum' → logprob: -4.066980361938477
    10. ' que' → logprob: -4.066980361938477

Token 423: ' va' (ID: 3423)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8052390813827515
    2. ' =' → logprob: -1.4302390813827515
    3. '+=' → logprob: -2.430239200592041
    4. 's' → logprob: -2.805239200592041
    5. ' représente' → logprob: -3.805239200592041
    6. ' +=' → logprob: -4.305239200592041
    7. 'for' → logprob: -4.430239200592041
    8. '#' → logprob: -4.555239200592041
    9. 'represent' → logprob: -4.555239200592041
    10. ' faudra' → logprob: -5.055239200592041

Token 424: ' accum' (ID: 23148)
  Prédit: 'represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'represent' → logprob: -0.8179479241371155
    2. 'serv' → logprob: -1.5679478645324707
    3. ' servir' → logprob: -1.6929478645324707
    4. ' représ' → logprob: -2.5679478645324707
    5. 'repr' → logprob: -3.8179478645324707
    6. 're' → logprob: -4.067947864532471
    7. 'acc' → logprob: -4.317947864532471
    8. 's' → logprob: -4.442947864532471
    9. 'serve' → logprob: -5.942947864532471
    10. ' compter' → logprob: -6.067947864532471

Token 425: 'uler' (ID: 11802)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0006639453349635005
    2. 'erer' → logprob: -7.625663757324219
    3. 'uler' → logprob: -9.500663757324219
    4. 'er' → logprob: -9.625663757324219
    5. 'ér' → logprob: -10.875663757324219
    6. 'rer' → logprob: -11.500663757324219
    7. '#' → logprob: -13.375663757324219
    8. 'è' → logprob: -14.375663757324219
    9. 'éré' → logprob: -14.500663757324219
    10. '   ' → logprob: -14.625663757324219

Token 426: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.036981463432312
    2. ' la' → logprob: -1.411981463432312
    3. 'la' → logprob: -1.661981463432312
    4. '0' → logprob: -2.0369815826416016
    5. 'sum' → logprob: -3.7869815826416016
    6. 'l' → logprob: -4.161981582641602
    7. ' ans' → logprob: -4.286981582641602
    8. 'le' → logprob: -4.661981582641602
    9. 'les' → logprob: -5.786981582641602
    10. 'the' → logprob: -5.911981582641602

Token 427: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.42037561535835266
    2. 'sum' → logprob: -1.4203755855560303
    3. 's' → logprob: -2.6703755855560303
    4. '0' → logprob: -4.170375823974609
    5. ' ans' → logprob: -5.170375823974609
    6. 'total' → logprob: -5.295375823974609
    7. ' sum' → logprob: -5.670375823974609
    8. 'answer' → logprob: -7.170375823974609
    9. 'result' → logprob: -7.795375823974609
    10. ' total' → logprob: -7.920375823974609

Token 428: ' des' (ID: 731)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09587743133306503
    2. '(ans' → logprob: -3.7208774089813232
    3. '   ' → logprob: -3.8458774089813232
    4. 's' → logprob: -4.095877647399902
    5. 'S' → logprob: -4.720877647399902
    6. 'for' → logprob: -5.220877647399902
    7. 'of' → logprob: -5.470877647399902
    8. ' ans' → logprob: -5.595877647399902
    9. ' of' → logprob: -5.845877647399902
    10. 'total' → logprob: -7.095877647399902

Token 429: ' valeurs' (ID: 73668)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014630110003054142
    2. 'val' → logprob: -4.514630317687988
    3. 'values' → logprob: -6.014630317687988
    4. ' ans' → logprob: -7.639630317687988
    5. 'vals' → logprob: -7.639630317687988
    6. ' valeurs' → logprob: -9.889630317687988
    7. 'assigned' → logprob: -10.764630317687988
    8. 'answers' → logprob: -11.014630317687988
    9. '(ans' → logprob: -11.014630317687988
    10. ' values' → logprob: -11.264630317687988

Token 430: ' assign' (ID: 14975)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0616689920425415
    2. 'ans' → logprob: -1.1866689920425415
    3. ' ans' → logprob: -1.6866689920425415
    4. '   ' → logprob: -2.936668872833252
    5. ' +=' → logprob: -3.436668872833252
    6. '=' → logprob: -3.561668872833252
    7. '(ans' → logprob: -3.936668872833252
    8. 's' → logprob: -5.436668872833252
    9. ' for' → logprob: -5.561668872833252
    10. '	ans' → logprob: -5.686668872833252

Token 431: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -1.843177233240567e-05
    2. 'ée' → logprob: -11.750018119812012
    3. 'és' → logprob: -12.250018119812012
    4. 'é' → logprob: -12.500018119812012
    5. '=' → logprob: -14.375018119812012
    6. 'ees' → logprob: -15.125018119812012
    7. 'è' → logprob: -15.250018119812012
    8. 'es' → logprob: -15.250018119812012
    9. '[' → logprob: -15.375018119812012
    10. 'nées' → logprob: -16.125019073486328

Token 432: ' aux' (ID: 5850)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2866361439228058
    2. '   ' → logprob: -1.4116361141204834
    3. ' S' → logprob: -6.0366363525390625
    4. 's' → logprob: -6.6616363525390625
    5. ' =' → logprob: -7.7866363525390625
    6. 'ans' → logprob: -8.286636352539062
    7. 'sum' → logprob: -8.661636352539062
    8. 'for' → logprob: -9.036636352539062
    9. '.' → logprob: -9.411636352539062
    10. ' ' → logprob: -9.661636352539062

Token 433: ' somm' (ID: 44830)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03182518854737282
    2. ' ans' → logprob: -4.281825065612793
    3. 'edges' → logprob: -4.906825065612793
    4. 'vertices' → logprob: -5.531825065612793
    5. 'nodes' → logprob: -6.031825065612793
    6. 'neighbors' → logprob: -7.031825065612793
    7. ' edges' → logprob: -7.281825065612793
    8. 's' → logprob: -7.531825065612793
    9. ' nodes' → logprob: -7.906825065612793
    10. ' vertices' → logprob: -7.906825065612793

Token 434: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.047839440405368805
    2. 'ats' → logprob: -3.422839403152466
    3. 'ots' → logprob: -5.047839641571045
    4. 'its' → logprob: -5.547839641571045
    5. 'ers' → logprob: -6.297839641571045
    6. 'ts' → logprob: -7.047839641571045
    7. 'ents' → logprob: -8.672839164733887
    8. 'et' → logprob: -8.797839164733887
    9. 't' → logprob: -9.172839164733887
    10. 's' → logprob: -9.297839164733887

Token 435: ' autres' (ID: 18701)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011399108916521072
    2. '   ' → logprob: -4.636399269104004
    3. ' S' → logprob: -6.761399269104004
    4. '
' → logprob: -7.886399269104004
    5. ' ' → logprob: -10.386399269104004
    6. ',' → logprob: -10.511399269104004
    7. 's' → logprob: -11.011399269104004
    8. '  ' → logprob: -12.136399269104004
    9. '    
' → logprob: -12.136399269104004
    10. '
' → logprob: -12.761399269104004

Token 436: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6775009632110596
    2. ' que' → logprob: -0.8025009632110596
    3. '0' → logprob: -4.4275007247924805
    4. 'des' → logprob: -4.4275007247924805
    5. ' des' → logprob: -5.5525007247924805
    6. 'aux' → logprob: -5.9275007247924805
    7. '=' → logprob: -6.3025007247924805
    8. 'def' → logprob: -6.5525007247924805
    9. 'import' → logprob: -6.5525007247924805
    10. 's' → logprob: -7.0525007247924805

Token 437: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033273328095674515
    2. 'la' → logprob: -3.658273220062256
    3. 'ans' → logprob: -5.283273220062256
    4. 'root' → logprob: -7.533273220062256
    5. ' ' → logprob: -7.783273220062256
    6. 'l' → logprob: -8.033273696899414
    7. ' la' → logprob: -8.283273696899414
    8. 'le' → logprob: -9.158273696899414
    9. '[' → logprob: -9.658273696899414
    10. 'r' → logprob: -9.783273696899414

Token 438: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.0451035350561142
    2. '0' → logprob: -3.4201035499572754
    3. 'root' → logprob: -4.795103549957275
    4. ' rac' → logprob: -5.795103549957275
    5. 'prem' → logprob: -11.045103073120117
    6. '#' → logprob: -11.045103073120117
    7. ' ' → logprob: -11.420103073120117
    8. '```' → logprob: -11.670103073120117
    9. '[' → logprob: -11.920103073120117
    10. 'ra' → logprob: -12.545103073120117

Token 439: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00830438919365406
    2. 'e' → logprob: -5.508304595947266
    3. 'ïne' → logprob: -7.133304595947266
    4. 'îne' → logprob: -7.383304595947266
    5. '1' → logprob: -7.758304595947266
    6. 'ce' → logprob: -8.258304595947266
    7. 'ë' → logprob: -8.508304595947266
    8. 'ite' → logprob: -8.633304595947266
    9. '#' → logprob: -8.758304595947266
    10. 'é' → logprob: -8.883304595947266

Token 440: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0035198910627514124
    2. '   ' → logprob: -6.2535200119018555
    3. '
' → logprob: -6.7535200119018555
    4. ' S' → logprob: -8.003520011901855
    5. ',' → logprob: -10.503520011901855
    6. 's' → logprob: -11.003520011901855
    7. ' ' → logprob: -11.628520011901855
    8. '
' → logprob: -11.753520011901855
    9. '    
' → logprob: -12.253520011901855
    10. '  ' → logprob: -12.878520011901855

Token 441: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0042245397344231606
    2. '   ' → logprob: -5.87922477722168
    3. ' S' → logprob: -6.62922477722168
    4. '
' → logprob: -10.00422477722168
    5. 's' → logprob: -10.62922477722168
    6. 'sum' → logprob: -11.25422477722168
    7. ' ' → logprob: -11.75422477722168
    8. ',' → logprob: -13.37922477722168
    9. '  ' → logprob: -13.62922477722168
    10. '    
' → logprob: -14.12922477722168

Token 442: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0064133708365261555
    2. ' S' → logprob: -5.131413459777832
    3. '   ' → logprob: -7.756413459777832
    4. 's' → logprob: -10.881413459777832
    5. ' ' → logprob: -11.131413459777832
    6. '
' → logprob: -11.256413459777832
    7. 'sum' → logprob: -12.381413459777832
    8. '```' → logprob: -13.631413459777832
    9. 'from' → logprob: -13.756413459777832
    10. '
' → logprob: -14.506413459777832

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687393069267273
    2. '=' → logprob: -1.1368739604949951
    3. ' +=' → logprob: -13.136874198913574
    4. '+=' → logprob: -14.386874198913574
    5. ' ' → logprob: -15.136874198913574
    6. ',' → logprob: -17.011873245239258
    7. '＝' → logprob: -17.636873245239258
    8. ' =
' → logprob: -17.886873245239258
    9. ' ' → logprob: -18.136873245239258
    10. '=int' → logprob: -18.386873245239258

Token 444: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006360700353980064
    2. ' ' → logprob: -7.375636100769043
    3. 'ans' → logprob: -12.375636100769043
    4. 'c' → logprob: -12.500636100769043
    5. ' ans' → logprob: -14.500636100769043
    6. '   ' → logprob: -15.125636100769043
    7. ' ' → logprob: -15.250636100769043
    8. 'sum' → logprob: -15.625636100769043
    9. ' c' → logprob: -16.750635147094727
    10. '(ans' → logprob: -17.188135147094727

Token 445: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.375019073486328
    3. 'ans' → logprob: -11.875019073486328
    4. 'c' → logprob: -15.875019073486328
    5. 'sum' → logprob: -15.875019073486328
    6. '   ' → logprob: -15.875019073486328
    7. ' ans' → logprob: -17.500019073486328
    8. 'int' → logprob: -17.625019073486328
    9. ' ' → logprob: -17.812519073486328
    10. '۰' → logprob: -17.812519073486328

Token 446: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.397941917181015
    2. '
' → logprob: -1.1479419469833374
    3. '    
' → logprob: -4.772942066192627
    4. 'queue' → logprob: -7.147942066192627
    5. '```' → logprob: -7.647942066192627
    6. ' queue' → logprob: -7.772942066192627
    7. '
' → logprob: -8.272941589355469
    8. '  
' → logprob: -8.397941589355469
    9. '	queue' → logprob: -9.022941589355469
    10. 'deque' → logprob: -9.772941589355469

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044843582436442375
    2. '
' → logprob: -6.254484176635742
    3. '    
' → logprob: -6.379484176635742
    4. 'queue' → logprob: -7.379484176635742
    5. 'q' → logprob: -9.629484176635742
    6. ' queue' → logprob: -9.754484176635742
    7. '  
' → logprob: -10.254484176635742
    8. '#' → logprob: -11.004484176635742
    9. '```' → logprob: -11.004484176635742
    10. 'from' → logprob: -11.879484176635742

Token 448: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6003578901290894
    2. 'q' → logprob: -0.8503578901290894
    3. 'que' → logprob: -4.850358009338379
    4. 'dq' → logprob: -4.850358009338379
    5. '#' (adapté à ' #') → logprob: -4.975358009338379
    6. 'Q' → logprob: -6.725358009338379
    7. 'visited' → logprob: -9.475358009338379
    8. 'deque' → logprob: -9.475358009338379
    9. '   ' → logprob: -9.725358009338379
    10. 'd' → logprob: -9.975358009338379

Token 449: ' Initialise' (ID: 179601)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5079449415206909
    2. 'q' → logprob: -1.007944941520691
    3. 'dq' → logprob: -4.2579450607299805
    4. 'que' → logprob: -4.6329450607299805
    5. '#' → logprob: -5.1329450607299805
    6. 'Q' → logprob: -6.2579450607299805
    7. 'deque' → logprob: -7.2579450607299805
    8. 'visited' → logprob: -8.00794506072998
    9. 'd' → logprob: -8.63294506072998
    10. ' queue' → logprob: -8.63294506072998

Token 450: ' une' (ID: 2463)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.42984530329704285
    2. ' queue' → logprob: -1.9298453330993652
    3. 'q' → logprob: -2.0548453330993652
    4. 'que' → logprob: -2.6798453330993652
    5. 'dq' → logprob: -6.179845333099365
    6. 'deque' → logprob: -6.554845333099365
    7. ' que' → logprob: -6.804845333099365
    8. ' q' → logprob: -7.054845333099365
    9. 'visited' → logprob: -7.179845333099365
    10. '```' → logprob: -7.679845333099365

Token 451: ' liste' (ID: 31719)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.020400453358888626
    2. 'deque' → logprob: -4.020400524139404
    3. ' queue' → logprob: -6.770400524139404
    4. 'que' → logprob: -7.395400524139404
    5. 'file' → logprob: -8.520400047302246
    6. 'q' → logprob: -8.520400047302246
    7. 'dq' → logprob: -10.020400047302246
    8. 'd' → logprob: -10.770400047302246
    9. '
' → logprob: -12.270400047302246
    10. 'visited' → logprob: -12.395400047302246

Token 452: ' seen' (ID: 6177)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.2271745800971985
    2. 'de' → logprob: -2.7271745204925537
    3. 'vis' → logprob: -2.9771745204925537
    4. 'deque' → logprob: -3.4771745204925537
    5. 'visit' → logprob: -3.7271745204925537
    6. ' visited' → logprob: -4.602174758911133
    7. '[' → logprob: -4.977174758911133
    8. ' de' → logprob: -5.352174758911133
    9. '   ' → logprob: -6.102174758911133
    10. 'queue' → logprob: -6.227174758911133

Token 453: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017493189079687
    2. '=' → logprob: -6.376749515533447
    3. '=[' → logprob: -10.376749038696289
    4. ' =[' → logprob: -11.876749038696289
    5. ' ' → logprob: -12.126749038696289
    6. ',' → logprob: -13.251749038696289
    7. '   ' → logprob: -14.126749038696289
    8. '[' → logprob: -14.626749038696289
    9. '```' → logprob: -15.626749038696289
    10. '	' → logprob: -15.626749038696289

Token 454: ' taille' (ID: 41644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16375087201595306
    2. '[N' → logprob: -1.9137508869171143
    3. 'False' → logprob: -6.163750648498535
    4. 'N' → logprob: -6.663750648498535
    5. ' [' → logprob: -8.913750648498535
    6. ' N' → logprob: -12.788750648498535
    7. ' False' → logprob: -14.038750648498535
    8. '   ' → logprob: -14.413750648498535
    9. '(False' → logprob: -14.913750648498535
    10. '```' → logprob: -15.038750648498535

Token 455: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011159272398799658
    2. '(N' → logprob: -7.626115798950195
    3. ' N' → logprob: -7.751115798950195
    4. '[N' → logprob: -8.626115798950195
    5. '   ' → logprob: -11.501115798950195
    6. '```' → logprob: -12.501115798950195
    7. '[' → logprob: -13.751115798950195
    8. '	N' → logprob: -14.126115798950195
    9. ' ' → logprob: -14.251115798950195
    10. ' [' → logprob: -14.876115798950195

Token 456: ' rempl' (ID: 66326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5066672563552856
    2. ' =' → logprob: -1.3816672563552856
    3. ' seen' → logprob: -2.506667137145996
    4. 'seen' → logprob: -3.631667137145996
    5. '   ' → logprob: -4.381667137145996
    6. ' with' → logprob: -4.756667137145996
    7. '=' → logprob: -4.881667137145996
    8. '=[' → logprob: -6.006667137145996
    9. ' ' → logprob: -6.256667137145996
    10. ' avec' → logprob: -6.381667137145996

Token 457: 'ie' (ID: 396)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9215928316116333
    2. ' with' → logprob: -2.1715927124023438
    3. 'with' → logprob: -2.1715927124023438
    4. '=False' → logprob: -2.2965927124023438
    5. '[' → logprob: -2.5465927124023438
    6. ' de' → logprob: -2.9215927124023438
    7. 'avec' → logprob: -2.9215927124023438
    8. 'de' → logprob: -3.0465927124023438
    9. '=True' → logprob: -4.421592712402344
    10. '=[' → logprob: -5.046592712402344

Token 458: ' de' (ID: 334)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.17149868607521057
    2. '[' → logprob: -2.1714987754821777
    3. ' de' → logprob: -3.7964987754821777
    4. '=False' → logprob: -4.671498775482178
    5. 'de' → logprob: -5.296498775482178
    6. 'False' → logprob: -5.921498775482178
    7. 'with' → logprob: -6.421498775482178
    8. ' with' → logprob: -7.296498775482178
    9. '[N' → logprob: -7.421498775482178
    10. 'avec' → logprob: -8.04649829864502

Token 459: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001626502489671111
    2. '[' → logprob: -6.501626491546631
    3. ' False' → logprob: -9.001626968383789
    4. '(False' → logprob: -14.376626968383789
    5. 'F' → logprob: -14.876626968383789
    6. ' [' → logprob: -16.62662696838379
    7. '[F' → logprob: -17.87662696838379
    8. '.False' → logprob: -18.75162696838379
    9. '   ' → logprob: -18.87662696838379
    10. '```' → logprob: -19.25162696838379

Token 460: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000344044849043712
    2. '[' → logprob: -8.000344276428223
    3. ' False' → logprob: -11.750344276428223
    4. '(False' → logprob: -14.625344276428223
    5. 'F' → logprob: -15.125344276428223
    6. '[F' → logprob: -18.375343322753906
    7. '.False' → logprob: -18.875343322753906
    8. '=False' → logprob: -20.250343322753906
    9. '   ' → logprob: -20.750343322753906
    10. '```' → logprob: -20.875343322753906

Token 461: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09760882705450058
    2. ',' → logprob: -3.097608804702759
    3. ' seen' → logprob: -3.347608804702759
    4. 'seen' → logprob: -4.472609043121338
    5. '(se' → logprob: -8.47260856628418
    6. ' ,' → logprob: -8.72260856628418
    7. '[' → logprob: -9.09760856628418
    8. '
' → logprob: -9.09760856628418
    9. ' =' → logprob: -9.22260856628418
    10. '  ' → logprob: -9.47260856628418

Token 462: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1108624935150146
    2. ' seen' → logprob: -1.1108624935150146
    3. 'seen' → logprob: -1.2358624935150146
    4. 'visited' → logprob: -3.3608624935150146
    5. ' which' → logprob: -5.360862731933594
    6. ' que' → logprob: -5.985862731933594
    7. 'which' → logprob: -6.235862731933594
    8. '#' → logprob: -6.360862731933594
    9. ' visited' → logprob: -6.485862731933594
    10. ' qui' → logprob: -7.360862731933594

Token 463: ' mar' (ID: 2674)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.017516661435365677
    2. ' mar' → logprob: -4.392516613006592
    3. 'su' → logprob: -5.892516613006592
    4. 'ind' → logprob: -7.517516613006592
    5. 'mark' → logprob: -8.01751708984375
    6. 'rep' → logprob: -8.39251708984375
    7. '```' → logprob: -8.51751708984375
    8. 'indi' → logprob: -9.01751708984375
    9. 'g' → logprob: -9.26751708984375
    10. '[' → logprob: -9.26751708984375

Token 464: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.006857454776763916
    2. 'ar' → logprob: -5.756857395172119
    3. 'qu' → logprob: -5.881857395172119
    4. 'a' → logprob: -8.006857872009277
    5. 'arqu' → logprob: -8.381857872009277
    6. 'q' → logprob: -9.256857872009277
    7. 'qué' → logprob: -10.006857872009277
    8. '   ' → logprob: -10.131857872009277
    9. 'iquer' → logprob: -10.631857872009277
    10. 'que' → logprob: -10.881857872009277

Token 465: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07966263592243195
    2. 'les' → logprob: -3.329662561416626
    3. ' seen' → logprob: -4.079662799835205
    4. ' True' → logprob: -5.204662799835205
    5. ' False' → logprob: -5.704662799835205
    6. 'False' → logprob: -5.829662799835205
    7. 'seen' → logprob: -6.079662799835205
    8. 'True' → logprob: -6.204662799835205
    9. 'visited' → logprob: -6.204662799835205
    10. ' vus' → logprob: -7.079662799835205

Token 466: ' somm' (ID: 44830)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6530686616897583
    2. ' somm' → logprob: -1.6530686616897583
    3. 's' → logprob: -2.1530685424804688
    4. 'som' → logprob: -2.4030685424804688
    5. ' visited' → logprob: -3.1530685424804688
    6. ' noe' → logprob: -4.903068542480469
    7. 'vis' → logprob: -5.028068542480469
    8. ' visites' → logprob: -5.528068542480469
    9. ' som' → logprob: -5.778068542480469
    10. 'no' → logprob: -6.028068542480469

Token 467: 'ets' (ID: 1719)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0013546408154070377
    2. 'é' → logprob: -6.876354694366455
    3. 'érés' → logprob: -9.001354217529297
    4. 'es' → logprob: -10.001354217529297
    5. '   ' → logprob: -10.126354217529297
    6. 'u' → logprob: -10.501354217529297
    7. 'isés' → logprob: -10.876354217529297
    8. 'ées' → logprob: -11.501354217529297
    9. 'éd' → logprob: -11.876354217529297
    10. 'nés' → logprob: -12.001354217529297

Token 468: ' déjà' (ID: 21229)
  Prédit: ' vus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vus' → logprob: -0.3656904101371765
    2. '   ' → logprob: -1.6156904697418213
    3. 'visited' → logprob: -3.1156904697418213
    4. ' visited' → logprob: -3.7406904697418213
    5. ' seen' → logprob: -3.8656904697418213
    6. ' vu' → logprob: -4.990690231323242
    7. 'seen' → logprob: -5.365690231323242
    8. ' False' → logprob: -5.990690231323242
    9. ' vues' → logprob: -6.865690231323242
    10. ' vistos' → logprob: -7.115690231323242

Token 469: ' visit' (ID: 4030)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.029263444244861603
    2. ' visited' → logprob: -4.154263496398926
    3. '1' → logprob: -4.529263496398926
    4. 'seen' → logprob: -6.654263496398926
    5. ' ' → logprob: -7.404263496398926
    6. 'vis' → logprob: -8.654263496398926
    7. 'visit' → logprob: -9.654263496398926
    8. ' seen' → logprob: -9.654263496398926
    9. ' True' → logprob: -10.279263496398926
    10. '0' → logprob: -10.404263496398926

Token 470: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.10637906938791275
    2. '   ' → logprob: -2.9813790321350098
    3. 'é' → logprob: -3.4813790321350098
    4. 'es' → logprob: -5.60637903213501
    5. '[' → logprob: -5.98137903213501
    6. ' ' → logprob: -6.23137903213501
    7. 'ied' → logprob: -6.48137903213501
    8. 'ed' → logprob: -6.48137903213501
    9. 'ated' → logprob: -6.85637903213501
    10. 'is' → logprob: -7.10637903213501

Token 471: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5268330574035645
    2. 'seen' → logprob: -1.5268330574035645
    3. ' seen' → logprob: -1.6518330574035645
    4. ' ' → logprob: -9.026832580566406
    5. '  ' → logprob: -9.151832580566406
    6. '
' → logprob: -9.401832580566406
    7. 'visited' → logprob: -9.526832580566406
    8. '	' → logprob: -10.026832580566406
    9. ',' → logprob: -10.276832580566406
    10. ' ' → logprob: -10.526832580566406

Token 472: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.19057242572307587
    2. ' False' → logprob: -2.690572500228882
    3. ')' → logprob: -2.940572500228882
    4. '0' → logprob: -3.690572500228882
    5. ')
' → logprob: -4.190572261810303
    6. '   ' → logprob: -4.940572261810303
    7. '1' → logprob: -6.065572261810303
    8. ' )' → logprob: -7.440572261810303
    9. '
' → logprob: -7.565572261810303
    10. ' ' → logprob: -7.565572261810303

Token 473: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5197520852088928
    2. ')
' → logprob: -1.019752025604248
    3. ']' → logprob: -3.269752025604248
    4. ' )
' → logprob: -6.269752025604248
    5. '])' → logprob: -6.769752025604248
    6. ' )' → logprob: -6.894752025604248
    7. '   ' → logprob: -7.019752025604248
    8. '])
' → logprob: -7.894752025604248
    9. ')
' → logprob: -8.144752502441406
    10. ']
' → logprob: -8.269752502441406

Token 474: ' pas' (ID: 2173)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6989694833755493
    2. 'non' → logprob: -0.6989694833755493
    3. ' non' → logprob: -5.82396936416626
    4. ' False' → logprob: -6.32396936416626
    5. 'f' → logprob: -7.57396936416626
    6. 'F' → logprob: -8.073969841003418
    7. 'vu' → logprob: -9.448969841003418
    8. 'Non' → logprob: -9.448969841003418
    9. 'pas' → logprob: -10.948969841003418
    10. 'false' → logprob: -11.448969841003418

Token 475: ' vu' (ID: 12005)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.2104627937078476
    2. 'enc' → logprob: -2.335462808609009
    3. ' vu' → logprob: -3.085462808609009
    4. 'vue' → logprob: -4.46046257019043
    5. 'vist' → logprob: -4.71046257019043
    6. ' encore' → logprob: -5.21046257019043
    7. 'vis' → logprob: -5.46046257019043
    8. 'vus' → logprob: -5.83546257019043
    9. '_' → logprob: -5.83546257019043
    10. '   ' → logprob: -5.96046257019043

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14369311928749084
    2. ')' → logprob: -2.018693208694458
    3. ' ,' → logprob: -7.893692970275879
    4. ' encore' → logprob: -8.143692970275879
    5. ')
' → logprob: -9.393692970275879
    6. ';' → logprob: -9.518692970275879
    7. ' ' → logprob: -9.518692970275879
    8. '),' → logprob: -10.143692970275879
    9. ' )' → logprob: -10.893692970275879
    10. '   ' → logprob: -11.893692970275879

Token 477: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04305445775389671
    2. ' ' → logprob: -3.1680543422698975
    3. '   ' → logprob: -10.293054580688477
    4. '
' → logprob: -11.793054580688477
    5. ',' → logprob: -12.418054580688477
    6. '```' → logprob: -13.418054580688477
    7. '    ' → logprob: -13.668054580688477
    8. '  ' → logprob: -13.668054580688477
    9. ' ' → logprob: -13.668054580688477
    10. '0' → logprob: -13.668054580688477

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006934931734576821
    2. 'False' → logprob: -7.875693321228027
    3. ' ' → logprob: -8.250693321228027
    4. '   ' → logprob: -11.500693321228027
    5. ' False' → logprob: -11.750693321228027
    6. '0' → logprob: -11.750693321228027
    7. '
' → logprob: -12.000693321228027
    8. 'def' → logprob: -12.875693321228027
    9. '```' → logprob: -12.875693321228027
    10. '#' → logprob: -13.000693321228027

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18641707301139832
    2. ')' → logprob: -2.4364171028137207
    3. ' =' → logprob: -2.6864171028137207
    4. ' vu' → logprob: -4.436417102813721
    5. ')
' → logprob: -7.686417102813721
    6. ',' → logprob: -8.061416625976562
    7. 'vu' → logprob: -8.061416625976562
    8. '=True' → logprob: -8.436416625976562
    9. ' )' → logprob: -8.436416625976562
    10. ')=' → logprob: -8.436416625976562

Token 480: ' vu' (ID: 12005)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.04158371314406395
    2. '1' → logprob: -3.791583776473999
    3. ' vu' → logprob: -4.04158353805542
    4. 'vue' → logprob: -8.041584014892578
    5. 'True' → logprob: -9.291584014892578
    6. ' True' → logprob: -9.666584014892578
    7. ' ' → logprob: -9.791584014892578
    8. 'seen' → logprob: -10.916584014892578
    9. 'v' → logprob: -11.041584014892578
    10. 'voir' → logprob: -11.291584014892578

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022558800410479307
    2. ')
' → logprob: -6.127255916595459
    3. ' )' → logprob: -10.2522554397583
    4. ',' → logprob: -11.1272554397583
    5. ')

' → logprob: -11.6272554397583
    6. '   ' → logprob: -12.7522554397583
    7. ')
' → logprob: -13.1272554397583
    8. '`)' → logprob: -13.7522554397583
    9. ')`' → logprob: -13.8772554397583
    10. '```' → logprob: -14.0022554397583

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09606187790632248
    2. 'seen' → logprob: -2.596061944961548
    3. ' seen' → logprob: -4.096061706542969
    4. '	' → logprob: -8.471061706542969
    5. '	se' → logprob: -9.971061706542969
    6. '    
' → logprob: -10.596061706542969
    7. '
' → logprob: -10.721061706542969
    8. '```' → logprob: -10.971061706542969
    9. ' ' → logprob: -11.096061706542969
    10. '_seen' → logprob: -11.471061706542969

Token 483: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.24938862025737762
    2. ' seen' → logprob: -1.624388575553894
    3. '   ' → logprob: -3.7493886947631836
    4. ' ' → logprob: -9.624388694763184
    5. ' ' → logprob: -10.874388694763184
    6. '	' → logprob: -10.999388694763184
    7. '  ' → logprob: -11.249388694763184
    8. '```' → logprob: -11.499388694763184
    9. '
' → logprob: -11.999388694763184
    10. '    
' → logprob: -12.374388694763184

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145954191684723
    2. '=' → logprob: -1.701459527015686
    3. '[' → logprob: -10.076459884643555
    4. '=[' → logprob: -13.576459884643555
    5. ' =[' → logprob: -13.576459884643555
    6. ' ' → logprob: -14.201459884643555
    7. ']' → logprob: -14.701459884643555
    8. ')' → logprob: -14.951459884643555
    9. '   ' → logprob: -16.326459884643555
    10. '```' → logprob: -17.076459884643555

Token 485: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00043126524542458355
    2. ' [' → logprob: -7.750431060791016
    3. '[N' → logprob: -15.000431060791016
    4. '   ' → logprob: -16.250431060791016
    5. ' ' → logprob: -16.625431060791016
    6. '[n' → logprob: -19.000431060791016
    7. '  ' → logprob: -19.375431060791016
    8. '0' → logprob: -19.500431060791016
    9. '([' → logprob: -20.125431060791016
    10. '	' → logprob: -20.125431060791016

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.652451464906335e-05
    2. 'False' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.625016212463379
    4. ' False' → logprob: -17.375017166137695
    5. '   ' → logprob: -17.875017166137695
    6. '۰' → logprob: -19.250017166137695
    7. '
' → logprob: -20.250017166137695
    8. '1' → logprob: -20.625017166137695
    9. '  ' → logprob: -20.625017166137695
    10. '    ' → logprob: -21.125017166137695

Token 487: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017433916218578815
    2. ']*' → logprob: -8.875174522399902
    3. ' ]' → logprob: -10.375174522399902
    4. ' for' → logprob: -13.250174522399902
    5. '   ' → logprob: -14.625174522399902
    6. ')' → logprob: -15.125174522399902
    7. 'for' → logprob: -15.250174522399902
    8. ' ' → logprob: -16.500173568725586
    9. ']*(' → logprob: -16.500173568725586
    10. '0' → logprob: -16.625173568725586

Token 488: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08708992600440979
    2. '*' → logprob: -3.087090015411377
    3. ']' → logprob: -4.087090015411377
    4. '<|end|>' → logprob: -4.337090015411377
    5. ')' → logprob: -5.462090015411377
    6. '   ' → logprob: -7.087090015411377
    7. '*N' → logprob: -7.212090015411377
    8. '
' → logprob: -7.837090015411377
    9. '<|end|>' → logprob: -7.837090015411377
    10. ']*' → logprob: -8.337089538574219

Token 489: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.615255839889869e-05
    2. ' N' → logprob: -9.250096321105957
    3. '(N' → logprob: -18.12509536743164
    4. '   ' → logprob: -20.25009536743164
    5. ' ' → logprob: -20.50009536743164
    6. '(' → logprob: -21.37509536743164
    7. '	N' → logprob: -21.50009536743164
    8. ' (' → logprob: -21.87509536743164
    9. '
' → logprob: -22.00009536743164
    10. 'n' → logprob: -23.00009536743164

Token 490: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21304407715797424
    2. '
' → logprob: -1.8380440473556519
    3. '    
' → logprob: -4.088044166564941
    4. 'seen' → logprob: -5.088044166564941
    5. '  
' → logprob: -5.588044166564941
    6. '<|end|>' → logprob: -5.838044166564941
    7. ' seen' → logprob: -6.463044166564941
    8. '
' → logprob: -8.588044166564941
    9. '```' → logprob: -8.588044166564941
    10. '   
' → logprob: -8.588044166564941

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0387163944542408
    2. 'seen' → logprob: -3.4137163162231445
    3. ' seen' → logprob: -5.4137163162231445
    4. '    
' → logprob: -8.163716316223145
    5. '
' → logprob: -8.413716316223145
    6. '```' → logprob: -9.663716316223145
    7. '_seen' → logprob: -11.413716316223145
    8. '  
' → logprob: -12.288716316223145
    9. '  ' → logprob: -12.663716316223145
    10. '   
' → logprob: -13.288716316223145

Token 492: ' seen' (ID: 6177)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14727842807769775
    2. 'seen' (adapté à ' seen') → logprob: -2.272278308868408
    3. ' seen' → logprob: -3.397278308868408
    4. '
' → logprob: -9.022278785705566
    5. '    
' → logprob: -9.147278785705566
    6. '```' → logprob: -9.397278785705566
    7. '	' → logprob: -10.147278785705566
    8. '   ' → logprob: -11.147278785705566
    9. '\t' → logprob: -11.397278785705566
    10. '_seen' → logprob: -12.522278785705566

Token 493: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. ' [' → logprob: -13.250001907348633
    3. '0' → logprob: -15.375001907348633
    4. '=' → logprob: -17.125001907348633
    5. '][' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. ']' → logprob: -17.375001907348633
    8. '<|end|>' → logprob: -17.750001907348633
    9. ')[' → logprob: -18.250001907348633
    10. ' =' → logprob: -18.250001907348633

Token 494: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '[' → logprob: -15.250007629394531
    4. ']' → logprob: -18.62500762939453
    5. '1' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.12500762939453
    7. '۰' → logprob: -20.31250762939453
    8. '][' → logprob: -20.37500762939453
    9. ')' → logprob: -20.50000762939453
    10. '```' → logprob: -20.75000762939453

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011844364780699834
    2. ']=' → logprob: -9.625118255615234
    3. '=' → logprob: -9.875118255615234
    4. ' ]' → logprob: -14.500118255615234
    5. ' =' → logprob: -15.125118255615234
    6. ')' → logprob: -17.625118255615234
    7. '[' → logprob: -18.625118255615234
    8. '']' → logprob: -20.250118255615234
    9. ']
' → logprob: -20.875118255615234
    10. '"]' → logprob: -20.875118255615234

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007099286303855479
    2. ' =' → logprob: -7.2507100105285645
    3. '=True' → logprob: -19.125709533691406
    4. ']' → logprob: -19.625709533691406
    5. '＝' → logprob: -19.625709533691406
    6. ']=' → logprob: -20.125709533691406
    7. ')' → logprob: -20.500709533691406
    8. '.=' → logprob: -20.625709533691406
    9. '=}' → logprob: -21.000709533691406
    10. ')=' → logprob: -21.000709533691406

Token 497: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'True' → logprob: -15.50001335144043
    4. ' True' → logprob: -19.50001335144043
    5. '   ' → logprob: -19.50001335144043
    6. '  ' → logprob: -21.00001335144043
    7. '１' → logprob: -22.62501335144043
    8. ' ' → logprob: -23.25001335144043
    9. '۱' → logprob: -23.50001335144043
    10. '	' → logprob: -23.62501335144043

Token 498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'True' → logprob: -15.75
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -22.375
    5. 'true' → logprob: -23.25
    6. ' True' → logprob: -23.875
    7. '  ' → logprob: -24.5
    8. '１' → logprob: -24.5
    9. '
' → logprob: -24.75
    10. '#' → logprob: -25.125

Token 499: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019670870155096054
    2. ' queue' → logprob: -4.3946709632873535
    3. 'queue' → logprob: -6.1446709632873535
    4. '	queue' → logprob: -6.3946709632873535
    5. '    
' → logprob: -6.7696709632873535
    6. '```' → logprob: -6.7696709632873535
    7. 'deque' → logprob: -7.5196709632873535
    8. '(queue' → logprob: -8.769670486450195
    9. 'dq' → logprob: -8.894670486450195
    10. ' deque' → logprob: -9.519670486450195

Token 500: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5282974243164062
    2. '   ' → logprob: -1.0282974243164062
    3. 'q' → logprob: -3.0282974243164062
    4. ' queue' → logprob: -5.778297424316406
    5. '    
' → logprob: -7.778297424316406
    6. 'que' → logprob: -8.528297424316406
    7. '```' → logprob: -8.653297424316406
    8. '
' → logprob: -8.903297424316406
    9. 'dq' → logprob: -9.028297424316406
    10. '	queue' → logprob: -9.403297424316406

Token 501: ' Mar' (ID: 3145)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.021819893270730972
    2. 'q' → logprob: -4.271820068359375
    3. ' queue' → logprob: -5.021820068359375
    4. '```' → logprob: -7.896820068359375
    5. 'deque' → logprob: -8.771820068359375
    6. '#' → logprob: -8.771820068359375
    7. 'que' → logprob: -8.896820068359375
    8. '   ' → logprob: -9.146820068359375
    9. 'dq' → logprob: -9.646820068359375
    10. 'Q' → logprob: -10.646820068359375

Token 502: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.06614711135625839
    2. 'qué' → logprob: -3.1911470890045166
    3. 'quer' → logprob: -4.316147327423096
    4. 'quez' → logprob: -5.316147327423096
    5. 'qu' → logprob: -5.441147327423096
    6. 'q' → logprob: -9.066146850585938
    7. 'quée' → logprob: -10.441146850585938
    8. 'ques' → logprob: -10.691146850585938
    9. 'k' → logprob: -10.691146850585938
    10. 'quee' → logprob: -10.816146850585938

Token 503: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032089652959257364
    2. '(' → logprob: -5.753209114074707
    3. ' ' → logprob: -10.378209114074707
    4. '[' → logprob: -15.753209114074707
    5. '   ' → logprob: -18.37820816040039
    6. '(
' → logprob: -19.62820816040039
    7. '  ' → logprob: -20.25320816040039
    8. 'le' → logprob: -20.62820816040039
    9. ' (' → logprob: -20.75320816040039
    10. '```' → logprob: -20.75320816040039

Token 504: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012340463697910309
    2. 'root' → logprob: -4.512340545654297
    3. 'rac' → logprob: -7.012340545654297
    4. ' ' → logprob: -8.387340545654297
    5. ' rac' → logprob: -8.887340545654297
    6. ' root' → logprob: -11.762340545654297
    7. 'prem' → logprob: -12.137340545654297
    8. '[' → logprob: -12.887340545654297
    9. 'som' → logprob: -13.012340545654297
    10. 'source' → logprob: -13.137340545654297

Token 505: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.000215457082958892
    2. '```' → logprob: -9.625215530395508
    3. 'in' → logprob: -10.250215530395508
    4. 'îne' → logprob: -10.875215530395508
    5. 'e' → logprob: -11.125215530395508
    6. 'ïne' → logprob: -11.250215530395508
    7. 'c' → logprob: -11.250215530395508
    8. '>' → logprob: -11.750215530395508
    9. '   ' → logprob: -11.875215530395508
    10. '
' → logprob: -12.000215530395508

Token 506: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23686903715133667
    2. 'queue' → logprob: -1.9868690967559814
    3. ' queue' → logprob: -2.9868690967559814
    4. 'q' → logprob: -4.486868858337402
    5. '
' → logprob: -5.486868858337402
    6. '```' → logprob: -5.861868858337402
    7. 'deque' → logprob: -6.236868858337402
    8. 'que' → logprob: -6.736868858337402
    9. 'Q' → logprob: -7.361868858337402
    10. '    
' → logprob: -7.611868858337402

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -17.00007438659668
    4. '```' → logprob: -21.00007438659668
    5. '1' → logprob: -21.37507438659668
    6. ' )' → logprob: -21.62507438659668
    7. '   ' → logprob: -21.75007438659668
    8. ' ' → logprob: -22.00007438659668
    9. '#' → logprob: -22.25007438659668
    10. '[' → logprob: -22.62507438659668

Token 508: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005051348707638681
    2. ' )' → logprob: -7.625504970550537
    3. ']' → logprob: -12.250505447387695
    4. ')
' → logprob: -12.500505447387695
    5. '`)' → logprob: -13.250505447387695
    6. '[' → logprob: -13.625505447387695
    7. ')#' → logprob: -13.750505447387695
    8. '#' → logprob: -14.500505447387695
    9. ')=' → logprob: -14.500505447387695
    10. '')' → logprob: -14.625505447387695

Token 509: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017081281170248985
    2. 'queue' → logprob: -4.267081260681152
    3. ' queue' → logprob: -6.517081260681152
    4. 'q' → logprob: -7.017081260681152
    5. '    
' → logprob: -8.267081260681152
    6. '```' → logprob: -9.267081260681152
    7. 'que' → logprob: -9.892081260681152
    8. 'Q' → logprob: -10.267081260681152
    9. '	queue' → logprob: -10.517081260681152
    10. 'deque' → logprob: -10.517081260681152

Token 510: ' déjà' (ID: 21229)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.3766621947288513
    2. 'vue' → logprob: -1.251662254333496
    3. 'vis' → logprob: -4.126662254333496
    4. 'vus' → logprob: -5.501662254333496
    5. 'visit' → logprob: -5.501662254333496
    6. 'vist' → logprob: -6.126662254333496
    7. 'v' → logprob: -8.251662254333496
    8. '1' → logprob: -8.751662254333496
    9. 'dé' → logprob: -8.751662254333496
    10. 'seen' → logprob: -9.126662254333496

Token 511: ' visit' (ID: 4030)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.4253008961677551
    2. 'vue' → logprob: -1.3003008365631104
    3. 'seen' → logprob: -3.3003008365631104
    4. 'visited' → logprob: -3.8003008365631104
    5. 'vis' → logprob: -5.3003010749816895
    6. '1' → logprob: -5.8003010749816895
    7. 'visit' → logprob: -6.0503010749816895
    8. 'vist' → logprob: -6.3003010749816895
    9. ' vu' → logprob: -6.8003010749816895
    10. 'v' → logprob: -7.6753010749816895

Token 512: 'ée' (ID: 2894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43832358717918396
    2. '()' → logprob: -1.6883236169815063
    3. 'ue' → logprob: -2.438323497772217
    4. 'u' → logprob: -3.063323497772217
    5. '()
' → logprob: -4.063323497772217
    6. 'e' → logprob: -5.438323497772217
    7. 'ion' → logprob: -5.563323497772217
    8. 'queue' → logprob: -6.063323497772217
    9. 'on' → logprob: -7.063323497772217
    10. ')' → logprob: -7.188323497772217

Token 513: '

' (ID: 279)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.41031235456466675
    2. '   ' → logprob: -1.4103124141693115
    3. 'q' → logprob: -2.4103124141693115
    4. '```' → logprob: -7.160312175750732
    5. 'que' → logprob: -7.410312175750732
    6. 'Q' → logprob: -7.535312175750732
    7. ' queue' → logprob: -7.535312175750732
    8. 'dq' → logprob: -8.66031265258789
    9. '    
' → logprob: -10.53531265258789
    10. '#' → logprob: -11.41031265258789

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6511412858963013
    2. 'queue' → logprob: -0.9011412858963013
    3. 'q' → logprob: -2.9011411666870117
    4. ' queue' → logprob: -4.151141166687012
    5. '```' → logprob: -6.901141166687012
    6. 'que' → logprob: -8.526141166687012
    7. 'Q' → logprob: -8.651141166687012
    8. 'dq' → logprob: -9.151141166687012
    9. '    
' → logprob: -9.276141166687012
    10. '	queue' → logprob: -9.776141166687012

Token 515: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.28542694449424744
    2. 'queue' → logprob: -1.7854269742965698
    3. 'Q' → logprob: -3.0354268550872803
    4. 'que' → logprob: -3.6604268550872803
    5. 'dq' → logprob: -5.035427093505859
    6. 'd' → logprob: -9.53542709350586
    7. 'deque' → logprob: -9.78542709350586
    8. 'de' → logprob: -10.16042709350586
    9. 'D' → logprob: -10.53542709350586
    10. 'qu' → logprob: -10.66042709350586

Token 516: ' Initialise' (ID: 179601)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6021245121955872
    2. 'queue' → logprob: -0.9771245121955872
    3. 'que' → logprob: -2.8521244525909424
    4. 'Q' → logprob: -4.2271246910095215
    5. 'dq' → logprob: -5.8521246910095215
    6. '#' → logprob: -8.352124214172363
    7. 'd' → logprob: -8.727124214172363
    8. 'deque' → logprob: -9.227124214172363
    9. 'de' → logprob: -9.852124214172363
    10. 'qu' → logprob: -9.852124214172363

Token 517: ' une' (ID: 2463)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6117210388183594
    2. 'queue' → logprob: -1.1117210388183594
    3. 'que' → logprob: -2.1117210388183594
    4. 'Q' → logprob: -5.861721038818359
    5. 'dq' → logprob: -5.986721038818359
    6. ' queue' → logprob: -6.486721038818359
    7. 'deque' → logprob: -7.861721038818359
    8. ' q' → logprob: -9.36172103881836
    9. ' que' → logprob: -9.61172103881836
    10. 'd' → logprob: -10.11172103881836

Token 518: ' file' (ID: 1974)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.05502445623278618
    2. 'deque' → logprob: -3.0550243854522705
    3. 'que' → logprob: -5.68002462387085
    4. ' queue' → logprob: -6.18002462387085
    5. 'q' → logprob: -7.18002462387085
    6. 'dq' → logprob: -9.180024147033691
    7. 'Q' → logprob: -10.430024147033691
    8. 'file' → logprob: -10.805024147033691
    9. 'd' → logprob: -12.180024147033691
    10. 'stack' → logprob: -12.430024147033691

Token 519: ' FIFO' (ID: 114077)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.34444016218185425
    2. 'deque' → logprob: -1.594440221786499
    3. ' =' → logprob: -3.219440221786499
    4. 'q' → logprob: -4.21943998336792
    5. '(queue' → logprob: -4.46943998336792
    6. ' queue' → logprob: -4.71943998336792
    7. 'que' → logprob: -5.59443998336792
    8. '_queue' → logprob: -6.09443998336792
    9. 'file' → logprob: -6.46943998336792
    10. '   ' → logprob: -6.71943998336792

Token 520: ' (' (ID: 350)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.07283373922109604
    2. 'q' → logprob: -3.572833776473999
    3. 'que' → logprob: -3.697833776473999
    4. ' queue' → logprob: -4.19783353805542
    5. '   ' → logprob: -7.19783353805542
    6. 'deque' → logprob: -7.32283353805542
    7. ' que' → logprob: -8.072834014892578
    8. '(queue' → logprob: -8.072834014892578
    9. 'Q' → logprob: -8.697834014892578
    10. ' =' → logprob: -10.197834014892578

Token 521: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.012089752592146397
    2. 'queue' → logprob: -4.512089729309082
    3. ' deque' → logprob: -7.762089729309082
    4. 'que' → logprob: -7.762089729309082
    5. ' queue' → logprob: -8.762089729309082
    6. 'q' → logprob: -10.637089729309082
    7. 'dq' → logprob: -11.637089729309082
    8. ' que' → logprob: -15.262089729309082
    9. 'fifo' → logprob: -15.762089729309082
    10. 'Deque' → logprob: -15.762089729309082

Token 522: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2052726447582245
    2. '()
' → logprob: -2.580272674560547
    3. '())' → logprob: -2.955272674560547
    4. '(queue' → logprob: -3.580272674560547
    5. ')' → logprob: -4.330272674560547
    6. 'queue' → logprob: -4.580272674560547
    7. '())
' → logprob: -5.830272674560547
    8. ' queue' → logprob: -6.330272674560547
    9. 'deque' → logprob: -7.455272674560547
    10. '   ' → logprob: -8.205272674560547

Token 523: ' contenant' (ID: 131049)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7070355415344238
    2. 'queue' → logprob: -0.8320355415344238
    3. 'que' → logprob: -3.082035541534424
    4. ' queue' → logprob: -4.332035541534424
    5. '   ' → logprob: -5.082035541534424
    6. '(queue' → logprob: -6.457035541534424
    7. ' =' → logprob: -6.707035541534424
    8. 'Q' → logprob: -6.832035541534424
    9. 'deque' → logprob: -7.082035541534424
    10. ' q' → logprob: -7.707035541534424

Token 524: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6281030178070068
    2. '0' → logprob: -0.8781030178070068
    3. 'deque' → logprob: -3.128103017807007
    4. '(' → logprob: -6.003103256225586
    5. '([' → logprob: -6.003103256225586
    6. ' deque' → logprob: -6.253103256225586
    7. ' [' → logprob: -9.503103256225586
    8. 'de' → logprob: -9.878103256225586
    9. ' ' → logprob: -11.253103256225586
    10. '   ' → logprob: -11.253103256225586

Token 525: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.44794583320617676
    2. '[' → logprob: -1.0729458332061768
    3. '(' → logprob: -4.322945594787598
    4. 'deque' → logprob: -5.822945594787598
    5. ' [' → logprob: -7.072945594787598
    6. '([' → logprob: -7.072945594787598
    7. ' ' → logprob: -7.697945594787598
    8. 'le' → logprob: -8.697945594787598
    9. 'la' → logprob: -8.697945594787598
    10. ' deque' → logprob: -9.322945594787598

Token 526: ''instant' (ID: 166425)
  Prédit: ''instant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''instant' → logprob: -0.3815746009349823
    2. '0' → logprob: -2.6315746307373047
    3. 'deque' → logprob: -3.0065746307373047
    4. 'e' → logprob: -3.1315746307373047
    5. 'a' → logprob: -3.7565746307373047
    6. '[' → logprob: -3.8815746307373047
    7. 'emain' → logprob: -4.506574630737305
    8. 'ep' → logprob: -5.131574630737305
    9. 'aj' → logprob: -5.131574630737305
    10. 'le' → logprob: -5.256574630737305

Token 527: ' uniquement' (ID: 65527)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20313140749931335
    2. '0' → logprob: -1.7031314373016357
    3. '(' → logprob: -6.453131198883057
    4. '([' → logprob: -9.328131675720215
    5. ' [' → logprob: -9.953131675720215
    6. ' ' → logprob: -12.453131675720215
    7. '   ' → logprob: -15.203131675720215
    8. '```' → logprob: -15.828131675720215
    9. '{' → logprob: -16.3281307220459
    10. 'deque' → logprob: -16.4531307220459

Token 528: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033832306507974863
    2. '(' → logprob: -8.000338554382324
    3. ' ' → logprob: -13.000338554382324
    4. '[' → logprob: -14.375338554382324
    5. '([' → logprob: -18.750337600708008
    6. '```' → logprob: -19.000337600708008
    7. '   ' → logprob: -19.125337600708008
    8. ' (' → logprob: -20.000337600708008
    9. '  ' → logprob: -21.125337600708008
    10. '{' → logprob: -21.250337600708008

Token 529: ' rac' (ID: 12334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002633088268339634
    2. 'deque' → logprob: -6.002633094787598
    3. '[' → logprob: -9.252633094787598
    4. 'root' → logprob: -10.377633094787598
    5. ' deque' → logprob: -10.877633094787598
    6. ' ' → logprob: -11.752633094787598
    7. 'node' → logprob: -13.877633094787598
    8. 'de' → logprob: -14.252633094787598
    9. 'vertex' → logprob: -14.377633094787598
    10. 'queue' → logprob: -14.502633094787598

Token 530: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.03235875815153122
    2. '[' → logprob: -4.032358646392822
    3. ' ' → logprob: -5.532358646392822
    4. '(' → logprob: -6.032358646392822
    5. '{' → logprob: -6.282358646392822
    6. '0' → logprob: -7.157358646392822
    7. 'e' → logprob: -7.157358646392822
    8. '   ' → logprob: -7.532358646392822
    9. '
' → logprob: -7.657358646392822
    10. '```' → logprob: -8.15735912322998

Token 531: ' (' (ID: 350)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.012569458223879337
    2. 'dq' → logprob: -4.887569427490234
    3. ' deque' → logprob: -6.137569427490234
    4. 'de' → logprob: -7.012569427490234
    5. 'q' → logprob: -7.262569427490234
    6. 'queue' → logprob: -8.137569427490234
    7. '([' → logprob: -8.262569427490234
    8. '(de' → logprob: -8.387569427490234
    9. '[' → logprob: -8.637569427490234
    10. '   ' → logprob: -9.762569427490234

Token 532: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '[' → logprob: -16.000001907348633
    4. ')' → logprob: -19.000001907348633
    5. '(' → logprob: -19.000001907348633
    6. '```' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '{' → logprob: -21.250001907348633
    9. 'deque' → logprob: -21.625001907348633
    10. '
' → logprob: -22.000001907348633

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019392271060496569
    2. ')
' → logprob: -6.251939296722412
    3. ')
' → logprob: -12.626938819885254
    4. ' )' → logprob: -13.251938819885254
    5. '0' → logprob: -13.501938819885254
    6. '   ' → logprob: -14.126938819885254
    7. ')`' → logprob: -14.376938819885254
    8. '))' → logprob: -14.501938819885254
    9. ')

' → logprob: -14.501938819885254
    10. 'deque' → logprob: -15.001938819885254

Token 534: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.324492871761322
    2. 'queue' → logprob: -1.3244929313659668
    3. 'que' → logprob: -5.324492931365967
    4. 'Q' → logprob: -5.574492931365967
    5. 'dq' → logprob: -6.449492931365967
    6. '   ' → logprob: -7.449492931365967
    7. ' queue' → logprob: -8.324492454528809
    8. 'deque' → logprob: -10.699492454528809
    9. 'fifo' → logprob: -10.699492454528809
    10. ' q' → logprob: -10.824492454528809

Token 535: ' que' (ID: 661)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5703719854354858
    2. 'queue' → logprob: -1.0703719854354858
    3. 'que' (adapté à ' que') → logprob: -2.4453721046447754
    4. 'Q' → logprob: -5.820372104644775
    5. 'dq' → logprob: -6.320372104644775
    6. ' queue' → logprob: -8.820371627807617
    7. ' que' → logprob: -9.695371627807617
    8. ' q' → logprob: -10.570371627807617
    9. 'deque' → logprob: -10.820371627807617
    10. 'd' → logprob: -10.820371627807617

Token 536: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.18475089967250824
    2. ' =' → logprob: -2.30975079536438
    3. '=' → logprob: -2.68475079536438
    4. 'u' → logprob: -6.934751033782959
    5. 'e' → logprob: -9.0597505569458
    6. 'uer' → logprob: -9.8097505569458
    7. '.' → logprob: -12.1847505569458
    8. 'ues' → logprob: -12.4347505569458
    9. '.=' → logprob: -13.3097505569458
    10. 'que' → logprob: -13.4347505569458

Token 537: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002613358374219388
    2. ' deque' → logprob: -8.250261306762695
    3. 'Deque' → logprob: -19.125261306762695
    4. 'de' → logprob: -22.125261306762695
    5. 'dq' → logprob: -22.875261306762695
    6. '	de' → logprob: -24.500261306762695
    7. 'deb' → logprob: -25.125261306762695
    8. '   ' → logprob: -25.375261306762695
    9. '(de' → logprob: -25.500261306762695
    10. '```' → logprob: -25.750261306762695

Token 538: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -6.134509021649137e-05
    2. '()' → logprob: -9.87506103515625
    3. '[' → logprob: -12.00006103515625
    4. '(' → logprob: -12.62506103515625
    5. '()
' → logprob: -15.50006103515625
    6. '([(' → logprob: -16.00006103515625
    7. '([
' → logprob: -17.25006103515625
    8. '({' → logprob: -17.87506103515625
    9. ' ([' → logprob: -18.50006103515625
    10. '([...' → logprob: -18.87506103515625

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.875
    4. '
' → logprob: -20.625
    5. '۰' → logprob: -20.625
    6. '０' → logprob: -21.125
    7. '(' → logprob: -21.375
    8. '```' → logprob: -21.875
    9. '  ' → logprob: -23.0
    10. ')' → logprob: -23.4375

Token 540: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -2.1008713702030946e-06
    2. ')])' → logprob: -14.250001907348633
    3. ')' → logprob: -14.375001907348633
    4. ' ])' → logprob: -14.500001907348633
    5. '])
' → logprob: -15.125001907348633
    6. '))' → logprob: -17.000001907348633
    7. ')]' → logprob: -17.125001907348633
    8. '])]' → logprob: -17.125001907348633
    9. ']))' → logprob: -17.250001907348633
    10. ''])' → logprob: -17.625001907348633

Token 541: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20858819782733917
    2. '   ' → logprob: -1.7085882425308228
    3. ' while' → logprob: -4.958588123321533
    4. '```' → logprob: -9.333588600158691
    5. '	while' → logprob: -10.208588600158691
    6. '    
' → logprob: -14.333588600158691
    7. 'While' → logprob: -15.208588600158691
    8. '``' → logprob: -15.958588600158691
    9. '
' → logprob: -16.833587646484375
    10. '       ' → logprob: -17.958587646484375

Token 542: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003386956872418523
    2. '   ' → logprob: -6.003386974334717
    3. ' while' → logprob: -7.003386974334717
    4. '	while' → logprob: -13.128386497497559
    5. '```' → logprob: -16.753387451171875
    6. '  ' → logprob: -17.003387451171875
    7. 'While' → logprob: -17.628387451171875
    8. '    
' → logprob: -17.753387451171875
    9. ' ' → logprob: -18.128387451171875
    10. '    ' → logprob: -18.503387451171875

Token 543: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.4849443838757e-06
    2. ' while' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '#' → logprob: -16.500003814697266
    5. 'While' → logprob: -17.000003814697266
    6. '	while' → logprob: -18.500003814697266
    7. 'for' → logprob: -19.750003814697266
    8. '
' → logprob: -19.875003814697266
    9. 'sum' → logprob: -20.125003814697266
    10. 'total' → logprob: -20.250003814697266

Token 544: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -3.2855416066013277e-05
    2. 'cler' → logprob: -11.375032424926758
    3. 'clé' → logprob: -11.375032424926758
    4. 'le' → logprob: -12.625032424926758
    5. 'c' → logprob: -13.250032424926758
    6. 'cl' → logprob: -13.375032424926758
    7. '   ' → logprob: -14.250032424926758
    8. 'Cle' → logprob: -14.375032424926758
    9. '#' → logprob: -14.625032424926758
    10. ' cle' → logprob: -14.875032424926758

Token 545: ' tant' (ID: 16235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5719260573387146
    2. ' while' → logprob: -0.9469260573387146
    3. 'while' → logprob: -3.0719261169433594
    4. ' for' → logprob: -7.696926116943359
    5. ':' → logprob: -7.821926116943359
    6. '	while' → logprob: -8.07192611694336
    7. '(' → logprob: -10.32192611694336
    8. 'for' → logprob: -10.44692611694336
    9. ' until' → logprob: -10.82192611694336
    10. '    ' → logprob: -11.57192611694336

Token 546: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.009223767556250095
    2. 'que' → logprob: -4.884223937988281
    3. '   ' → logprob: -6.634223937988281
    4. ' not' → logprob: -8.634223937988281
    5. ' while' → logprob: -9.634223937988281
    6. ' len' → logprob: -10.634223937988281
    7. 'while' → logprob: -11.509223937988281
    8. ' ' → logprob: -11.884223937988281
    9. '  ' → logprob: -12.009223937988281
    10. ' qu' → logprob: -12.759223937988281

Token 547: ''il' (ID: 14683)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0025741136632859707
    2. 'que' → logprob: -6.0025739669799805
    3. ' len' → logprob: -9.25257396697998
    4. ' queue' → logprob: -14.00257396697998
    5. 'Que' → logprob: -14.87757396697998
    6. ' la' → logprob: -15.37757396697998
    7. '(len' → logprob: -15.50257396697998
    8. 'len' → logprob: -15.75257396697998
    9. ' qu' → logprob: -15.87757396697998
    10. '(' → logprob: -15.87757396697998

Token 548: ' y' (ID: 342)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22666962444782257
    2. 'que' → logprob: -1.6016696691513062
    3. 'y' → logprob: -7.726669788360596
    4. ' y' → logprob: -7.726669788360596
    5. 'a' → logprob: -8.226669311523438
    6. ' a' → logprob: -10.476669311523438
    7. 'e' → logprob: -10.726669311523438
    8. 'q' → logprob: -11.726669311523438
    9. '[' → logprob: -11.976669311523438
    10. ' queue' → logprob: -12.101669311523438

Token 549: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0341561920940876
    2. ' a' → logprob: -3.409156084060669
    3. '#a' → logprob: -9.15915584564209
    4. '#' → logprob: -9.28415584564209
    5. '_a' → logprob: -9.78415584564209
    6. ' des' → logprob: -10.03415584564209
    7. '   ' → logprob: -10.28415584564209
    8. 'ad' → logprob: -10.40915584564209
    9. 'à' → logprob: -10.90915584564209
    10. '(a' → logprob: -11.15915584564209

Token 550: ' des' (ID: 731)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.47416800260543823
    2. 'que' → logprob: -0.9741680026054382
    3. 'len' → logprob: -9.724167823791504
    4. ' len' → logprob: -10.849167823791504
    5. 'qu' → logprob: -12.599167823791504
    6. ' ' → logprob: -12.849167823791504
    7. 'queue' → logprob: -13.349167823791504
    8. ' queue' → logprob: -13.599167823791504
    9. ' ' → logprob: -14.474167823791504
    10. 'ques' → logprob: -15.224167823791504

Token 551: ' éléments' (ID: 57375)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.01119081862270832
    2. ' que' → logprob: -4.511190891265869
    3. 'elements' → logprob: -9.886190414428711
    4. ' elements' → logprob: -10.761190414428711
    5. 'vertices' → logprob: -11.636190414428711
    6. 'queued' → logprob: -11.761190414428711
    7. 'ele' → logprob: -11.886190414428711
    8. 'élé' → logprob: -11.886190414428711
    9. 'len' → logprob: -12.136190414428711
    10. 'queues' → logprob: -12.261190414428711

Token 552: ' dans' (ID: 2671)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.26594528555870056
    2. 'in' → logprob: -2.8909451961517334
    3. ' in' → logprob: -2.8909451961517334
    4. '   ' → logprob: -2.8909451961517334
    5. ' que' → logprob: -3.2659451961517334
    6. 'dans' → logprob: -4.0159454345703125
    7. ' dans' → logprob: -4.8909454345703125
    8. ':' → logprob: -7.0159454345703125
    9. '>' → logprob: -7.5159454345703125
    10. ' ' → logprob: -8.515945434570312

Token 553: ' la' (ID: 557)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0011785586830228567
    2. ' que' → logprob: -6.751178741455078
    3. 'la' → logprob: -13.251178741455078
    4. 'queue' → logprob: -13.376178741455078
    5. '(' → logprob: -13.501178741455078
    6. '   ' → logprob: -14.501178741455078
    7. 'une' → logprob: -14.626178741455078
    8. '
' → logprob: -15.126178741455078
    9. '```' → logprob: -15.126178741455078
    10. 'qu' → logprob: -15.251178741455078

Token 554: ' file' (ID: 1974)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -9.126521035796031e-05
    2. ' que' → logprob: -9.375091552734375
    3. 'queue' → logprob: -12.375091552734375
    4. 'qu' → logprob: -14.250091552734375
    5. '```' → logprob: -15.000091552734375
    6. '
' → logprob: -15.250091552734375
    7. 'deque' → logprob: -15.625091552734375
    8. 'q' → logprob: -15.750091552734375
    9. 'quee' → logprob: -16.000091552734375
    10. '`' → logprob: -16.250091552734375

Token 555: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2902264893054962
    2. ':' → logprob: -1.4152264595031738
    3. ':
' → logprob: -4.790226459503174
    4. 'while' → logprob: -8.415226936340332
    5. ' while' → logprob: -9.040226936340332
    6. ' :' → logprob: -9.665226936340332
    7. '):
' → logprob: -9.790226936340332
    8. ' and' → logprob: -10.040226936340332
    9. '):' → logprob: -10.040226936340332
    10. ',' → logprob: -10.290226936340332

Token 556: 'som' (ID: 35641)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00249420665204525
    2. ' que' → logprob: -6.0024943351745605
    3. 'len' → logprob: -11.252493858337402
    4. '   ' → logprob: -12.752493858337402
    5. 'not' → logprob: -13.752493858337402
    6. ' ' → logprob: -14.877493858337402
    7. 'qu' → logprob: -15.252493858337402
    8. ')' → logprob: -15.502493858337402
    9. 'queue' → logprob: -15.502493858337402
    10. '  ' → logprob: -16.25249481201172

Token 557: 'met' (ID: 3001)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ma' → logprob: -1.2048648595809937
    2. 'met' → logprob: -1.4548648595809937
    3. 'que' → logprob: -1.8298648595809937
    4. 'e' → logprob: -2.579864978790283
    5. 'a' → logprob: -2.704864978790283
    6. 'me' → logprob: -3.454864978790283
    7. '#' → logprob: -3.454864978790283
    8. 'ate' → logprob: -3.954864978790283
    9. 'te' → logprob: -4.079864978790283
    10. 'et' → logprob: -4.704864978790283

Token 558: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1124809980392456
    2. '):
' → logprob: -1.2374809980392456
    3. 's' → logprob: -1.8624809980392456
    4. ' =' → logprob: -2.362481117248535
    5. ')' → logprob: -3.362481117248535
    6. '=' → logprob: -3.987481117248535
    7. ':' → logprob: -4.112481117248535
    8. ' :=' → logprob: -4.112481117248535
    9. '   ' → logprob: -4.612481117248535
    10. ' in' → logprob: -4.987481117248535

Token 559: ' explorer' (ID: 73961)
  Prédit: ' traiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traiter' → logprob: -0.2998180091381073
    2. 'trait' → logprob: -1.5498180389404297
    3. 'process' → logprob: -3.7998180389404297
    4. ' visiter' → logprob: -4.54981803894043
    5. 'pop' → logprob: -5.54981803894043
    6. 'tr' → logprob: -5.67481803894043
    7. 'tra' → logprob: -6.17481803894043
    8. 'expl' → logprob: -6.67481803894043
    9. 'visit' → logprob: -7.04981803894043
    10. 'vis' → logprob: -7.29981803894043

Token 560: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29656898975372314
    2. '):
' → logprob: -1.5465689897537231
    3. ')' → logprob: -3.1715688705444336
    4. '   ' → logprob: -6.671568870544434
    5. ')
' → logprob: -8.796568870544434
    6. '):
' → logprob: -9.546568870544434
    7. 'que' → logprob: -9.796568870544434
    8. ':' → logprob: -10.296568870544434
    9. 'and' → logprob: -10.921568870544434
    10. '()):
' → logprob: -11.046568870544434

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021876145619899035
    2. 'while' → logprob: -6.752187728881836
    3. ' while' → logprob: -7.252187728881836
    4. '```' → logprob: -9.002187728881836
    5. ':' → logprob: -9.252187728881836
    6. '    
' → logprob: -9.877187728881836
    7. '	while' → logprob: -11.002187728881836
    8. ',' → logprob: -12.502187728881836
    9. ')' → logprob: -12.502187728881836
    10. '
' → logprob: -12.627187728881836

Token 562: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.20178119838237762
    2. '   ' → logprob: -1.951781153678894
    3. ' while' → logprob: -3.2017812728881836
    4. '	while' → logprob: -11.076781272888184
    5. '```' → logprob: -15.576781272888184
    6. 'While' → logprob: -16.576780319213867
    7. '    
' → logprob: -17.326780319213867
    8. '  ' → logprob: -19.201780319213867
    9. ' ' → logprob: -19.201780319213867
    10. '       ' → logprob: -19.576780319213867

Token 563: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.048817407339811325
    2. ' que' → logprob: -3.0488173961639404
    3. 'len' → logprob: -8.42381763458252
    4. ' len' → logprob: -11.54881763458252
    5. ' ' → logprob: -15.29881763458252
    6. ' ' → logprob: -16.048816680908203
    7. '   ' → logprob: -16.173816680908203
    8. 'queue' → logprob: -16.298816680908203
    9. 'qu' → logprob: -16.673816680908203
    10. 'ques' → logprob: -17.298816680908203

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018323305994272232
    2. ':
' → logprob: -4.0183234214782715
    3. '():' → logprob: -9.768322944641113
    4. '):' → logprob: -10.018322944641113
    5. '):
' → logprob: -10.518322944641113
    6. '():
' → logprob: -10.893322944641113
    7. '.' → logprob: -11.643322944641113
    8. '   ' → logprob: -12.268322944641113
    9. '.size' → logprob: -13.143322944641113
    10. '>:' → logprob: -13.768322944641113

Token 565: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8597188591957092
    2. 'v' → logprob: -1.2347187995910645
    3. 'u' → logprob: -1.4847187995910645
    4. '       ' → logprob: -3.8597187995910645
    5. ' v' → logprob: -3.9847187995910645
    6. ' u' → logprob: -3.9847187995910645
    7. '	u' → logprob: -8.109719276428223
    8. '	v' → logprob: -8.359719276428223
    9. 'node' → logprob: -8.859719276428223
    10. ' node' → logprob: -9.359719276428223

Token 566: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03278453275561333
    2. 'u' → logprob: -3.6577844619750977
    3. '   ' → logprob: -5.407784461975098
    4. 'x' → logprob: -7.032784461975098
    5. ' v' → logprob: -8.157784461975098
    6. 'p' → logprob: -8.407784461975098
    7. 'now' → logprob: -8.407784461975098
    8. 'cur' → logprob: -8.782784461975098
    9. 'node' → logprob: -9.782784461975098
    10. 'current' → logprob: -10.157784461975098

Token 567: ' Ret' (ID: 16724)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0278930701315403
    2. 'u' → logprob: -3.90289306640625
    3. 'x' → logprob: -6.15289306640625
    4. 'now' → logprob: -6.27789306640625
    5. 'cur' → logprob: -6.52789306640625
    6. 'p' → logprob: -7.15289306640625
    7. 'node' → logprob: -8.65289306640625
    8. ' v' → logprob: -8.77789306640625
    9. 'pos' → logprob: -8.90289306640625
    10. 'current' → logprob: -9.52789306640625

Token 568: 'ire' (ID: 594)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2505114078521729
    2. 'urn' → logprob: -1.2505114078521729
    3. ' sommet' → logprob: -1.7505114078521729
    4. 'ent' → logprob: -2.625511407852173
    5. 'our' → logprob: -2.750511407852173
    6. 'node' → logprob: -3.250511407852173
    7. '       ' → logprob: -3.750511407852173
    8. 'som' → logprob: -4.500511169433594
    9. 'u' → logprob: -4.625511169433594
    10. 'vertex' → logprob: -5.625511169433594

Token 569: ' et' (ID: 859)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10844806581735611
    2. ' v' → logprob: -2.608448028564453
    3. 'u' → logprob: -3.608448028564453
    4. ' u' → logprob: -6.608448028564453
    5. 'x' → logprob: -8.358448028564453
    6. ' node' → logprob: -8.483448028564453
    7. 'node' → logprob: -8.733448028564453
    8. 'cur' → logprob: -10.358448028564453
    9. 's' → logprob: -11.983448028564453
    10. '   ' → logprob: -12.233448028564453

Token 570: ' récup' (ID: 62856)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2825417220592499
    2. ' p' → logprob: -1.9075417518615723
    3. ' gauche' → logprob: -3.6575417518615723
    4. 'à' → logprob: -4.282541751861572
    5. 'pop' → logprob: -4.782541751861572
    6. 'opleft' → logprob: -4.907541751861572
    7. ' affiche' → logprob: -5.032541751861572
    8. ' append' → logprob: -5.032541751861572
    9. ' ' → logprob: -5.407541751861572
    10. 'g' → logprob: -5.907541751861572

Token 571: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.45350217819213867
    2. 'e' → logprob: -2.4535021781921387
    3. 'ere' → logprob: -2.7035021781921387
    4. 'ue' → logprob: -2.8285021781921387
    5. 'ule' → logprob: -3.2035021781921387
    6. 'ère' → logprob: -3.8285021781921387
    7. 'ent' → logprob: -4.078502178192139
    8. 'opleft' → logprob: -4.078502178192139
    9. 'o' → logprob: -4.203502178192139
    10. 'left' → logprob: -5.078502178192139

Token 572: ' un' (ID: 537)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09920290857553482
    2. ' v' → logprob: -2.599202871322632
    3. 'u' → logprob: -3.974202871322632
    4. ' u' → logprob: -7.099203109741211
    5. 'x' → logprob: -7.724203109741211
    6. ' node' → logprob: -11.599203109741211
    7. 'node' → logprob: -11.974203109741211
    8. ' x' → logprob: -12.099203109741211
    9. 'cur' → logprob: -12.224203109741211
    10. 's' → logprob: -12.224203109741211

Token 573: ' élément' (ID: 99627)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.07470060884952545
    2. 'som' → logprob: -2.6997005939483643
    3. ' som' → logprob: -6.324700832366943
    4. 's' → logprob: -6.824700832366943
    5. ' node' → logprob: -7.324700832366943
    6. 'u' → logprob: -7.824700832366943
    7. ' u' → logprob: -8.449700355529785
    8. 'vertex' → logprob: -8.824700355529785
    9. ' noe' → logprob: -8.949700355529785
    10. ' vertex' → logprob: -9.324700355529785

Token 574: ' du' (ID: 1462)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9208868741989136
    2. 'u' → logprob: -1.2958868741989136
    3. '   ' → logprob: -1.9208868741989136
    4. ' =' → logprob: -2.670886993408203
    5. ' from' → logprob: -3.295886993408203
    6. 'from' → logprob: -3.420886993408203
    7. '=' → logprob: -4.170886993408203
    8. ' u' → logprob: -5.420886993408203
    9. '       ' → logprob: -5.545886993408203
    10. ' v' → logprob: -5.545886993408203

Token 575: ' début' (ID: 29589)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.003909080754965544
    2. 'deque' → logprob: -6.378909111022949
    3. ' que' → logprob: -6.628909111022949
    4. 'la' → logprob: -7.878909111022949
    5. '```' → logprob: -8.12890911102295
    6. 'quel' → logprob: -10.25390911102295
    7. 'queue' → logprob: -10.62890911102295
    8. ' deque' → logprob: -10.87890911102295
    9. ' ' → logprob: -11.00390911102295
    10. ' la' → logprob: -11.12890911102295

Token 576: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6067023277282715
    2. ' que' → logprob: -1.4817023277282715
    3. '   ' → logprob: -2.2317023277282715
    4. 'que' → logprob: -2.4817023277282715
    5. ' de' → logprob: -3.8567023277282715
    6. '()' → logprob: -4.9817023277282715
    7. '(' → logprob: -5.8567023277282715
    8. 'de' → logprob: -6.4817023277282715
    9. ' of' → logprob: -6.4817023277282715
    10. 'deque' → logprob: -7.1067023277282715

Token 577: ' la' (ID: 557)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0024578184820711613
    2. 'la' → logprob: -6.377457618713379
    3. ' que' → logprob: -7.252457618713379
    4. ' la' → logprob: -10.377457618713379
    5. 'deque' → logprob: -12.502457618713379
    6. '```' → logprob: -12.877457618713379
    7. 'une' → logprob: -13.752457618713379
    8. '   ' → logprob: -13.752457618713379
    9. 'the' → logprob: -13.877457618713379
    10. 'queue' → logprob: -14.002457618713379

Token 578: ' file' (ID: 1974)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0011529591865837574
    2. 'deque' → logprob: -7.126152992248535
    3. 'queue' → logprob: -8.501152992248535
    4. ' que' → logprob: -9.001152992248535
    5. ' queue' → logprob: -11.876152992248535
    6. '```' → logprob: -12.501152992248535
    7. 'quel' → logprob: -13.126152992248535
    8. ' deque' → logprob: -13.126152992248535
    9. 'qu' → logprob: -13.501152992248535
    10. 'qué' → logprob: -14.001152992248535

Token 579: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5393628478050232
    2. 'u' → logprob: -1.164362907409668
    3. ' u' → logprob: -2.789362907409668
    4. 'v' → logprob: -3.539362907409668
    5. ' v' → logprob: -4.789362907409668
    6. ' node' → logprob: -5.914362907409668
    7. 'node' → logprob: -6.164362907409668
    8. ' =' → logprob: -8.664362907409668
    9. '   ' → logprob: -8.914362907409668
    10. ',' → logprob: -9.164362907409668

Token 580: ' c' (ID: 274)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03980793058872223
    2. 'u' → logprob: -3.6648080348968506
    3. ' v' → logprob: -5.2898077964782715
    4. 'x' → logprob: -5.6648077964782715
    5. 'cur' → logprob: -6.7898077964782715
    6. 'now' → logprob: -6.7898077964782715
    7. 'p' → logprob: -7.2898077964782715
    8. ' u' → logprob: -8.03980827331543
    9. 's' → logprob: -8.16480827331543
    10. 'pos' → logprob: -8.16480827331543

Token 581: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9558968544006348
    2. 'ue' → logprob: -0.9558968544006348
    3. ' =' → logprob: -1.9558968544006348
    4. 'que' → logprob: -2.7058968544006348
    5. 'u' → logprob: -4.455896854400635
    6. '   ' → logprob: -6.455896854400635
    7. 'ep' → logprob: -6.580896854400635
    8. 'e' → logprob: -6.830896854400635
    9. 'ues' → logprob: -6.955896854400635
    10. 'eq' → logprob: -7.080896854400635

Token 582: ' le' (ID: 505)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5868524312973022
    2. 'u' → logprob: -2.086852550506592
    3. ' u' → logprob: -2.211852550506592
    4. ' node' → logprob: -2.711852550506592
    5. ' =' → logprob: -2.961852550506592
    6. ' current' → logprob: -3.211852550506592
    7. ' sommet' → logprob: -4.086852550506592
    8. ' vertex' → logprob: -4.586852550506592
    9. 'que' → logprob: -5.211852550506592
    10. 'current' → logprob: -5.711852550506592

Token 583: ' sommet' (ID: 130502)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07387401908636093
    2. 'u' → logprob: -3.073873996734619
    3. ' v' → logprob: -4.323873996734619
    4. 'cur' → logprob: -5.573873996734619
    5. 'x' → logprob: -6.073873996734619
    6. 'now' → logprob: -6.573873996734619
    7. 'node' → logprob: -6.698873996734619
    8. ' u' → logprob: -7.073873996734619
    9. 'p' → logprob: -7.823873996734619
    10. 'q' → logprob: -7.948873996734619

Token 584: ' courant' (ID: 74694)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12055062502622604
    2. 'u' → logprob: -2.9955506324768066
    3. 'v' → logprob: -3.6205506324768066
    4. '   ' → logprob: -3.6205506324768066
    5. '=' → logprob: -5.495550632476807
    6. 'current' → logprob: -5.870550632476807
    7. 'cur' → logprob: -6.245550632476807
    8. 's' → logprob: -8.120550155639648
    9. '_current' → logprob: -8.495550155639648
    10. 'x' → logprob: -8.995550155639648

Token 585: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.16322609782218933
    2. 'v' → logprob: -2.4132261276245117
    3. '       ' → logprob: -3.6632261276245117
    4. ' u' → logprob: -3.6632261276245117
    5. '   ' → logprob: -5.663226127624512
    6. ' v' → logprob: -6.163226127624512
    7. 'node' → logprob: -6.538226127624512
    8. 'current' → logprob: -6.913226127624512
    9. 'cur' → logprob: -6.913226127624512
    10. ' node' → logprob: -8.663226127624512

Token 586: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5125573873519897
    2. 'v' → logprob: -1.0125573873519897
    3. ' u' → logprob: -4.137557506561279
    4. '       ' → logprob: -4.387557506561279
    5. ' v' → logprob: -5.137557506561279
    6. '   ' → logprob: -6.637557506561279
    7. 'node' → logprob: -7.137557506561279
    8. 'cur' → logprob: -7.262557506561279
    9. 'current' → logprob: -8.512557029724121
    10. 'now' → logprob: -8.887557029724121

Token 587: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.025356868281960487
    2. 'u' → logprob: -4.025356769561768
    3. 'cur' → logprob: -6.150356769561768
    4. 'now' → logprob: -6.150356769561768
    5. ' v' → logprob: -6.650356769561768
    6. 'x' → logprob: -7.525356769561768
    7. 'p' → logprob: -8.025357246398926
    8. 'pos' → logprob: -8.650357246398926
    9. 'q' → logprob: -8.775357246398926
    10. 'node' → logprob: -9.400357246398926

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.87692928314209
    4. ' ' → logprob: -15.00192928314209
    5. ')' → logprob: -15.25192928314209
    6. '=v' → logprob: -15.50192928314209
    7. '	' → logprob: -16.001930236816406
    8. 'v' → logprob: -16.376930236816406
    9. '＝' → logprob: -17.251930236816406
    10. '.' → logprob: -17.376930236816406

Token 589: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0005530327325686812
    2. ' que' → logprob: -7.500553131103516
    3. 'qu' → logprob: -16.875553131103516
    4. 'deque' → logprob: -17.875553131103516
    5. 'ques' → logprob: -18.750553131103516
    6. 'quee' → logprob: -19.375553131103516
    7. '	' → logprob: -20.000553131103516
    8. 'queue' → logprob: -20.375553131103516
    9. 'qué' → logprob: -20.875553131103516
    10. 'q' → logprob: -21.000553131103516

Token 590: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.000001907348633
    3. 'p' → logprob: -17.250001907348633
    4. '.pop' → logprob: -17.375001907348633
    5. ' .' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. ').' → logprob: -22.125001907348633
    8. 'opleft' → logprob: -22.125001907348633
    9. '.dequeue' → logprob: -22.875001907348633
    10. '>.' → logprob: -23.625001907348633

Token 591: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.012528955936431885
    2. 'op' → logprob: -4.387528896331787
    3. 'ople' → logprob: -11.262529373168945
    4. 'opl' → logprob: -12.512529373168945
    5. '   ' → logprob: -13.887529373168945
    6. '```' → logprob: -14.137529373168945
    7. 'o' → logprob: -15.262529373168945
    8. 'opf' → logprob: -15.512529373168945
    9. '0' → logprob: -15.887529373168945
    10. 'opc' → logprob: -16.137529373168945

Token 592: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.960946772480384e-05
    2. '()
' → logprob: -9.625099182128906
    3. ')' → logprob: -10.500099182128906
    4. '())' → logprob: -12.750099182128906
    5. '(' → logprob: -13.625099182128906
    6. '()

' → logprob: -14.500099182128906
    7. '   ' → logprob: -14.875099182128906
    8. '()]' → logprob: -15.500099182128906
    9. '()\' → logprob: -15.750099182128906
    10. '();' → logprob: -15.875099182128906

Token 593: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11447570472955704
    2. 'for' → logprob: -2.364475727081299
    3. ' for' → logprob: -4.739475727081299
    4. '       ' → logprob: -5.239475727081299
    5. '```' → logprob: -9.11447525024414
    6. '	for' → logprob: -12.11447525024414
    7. '    
' → logprob: -12.73947525024414
    8. '        
' → logprob: -13.86447525024414
    9. '<|end|>' → logprob: -14.11447525024414
    10. '#' → logprob: -14.86447525024414

Token 594: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006755275186151266
    2. '   ' → logprob: -5.256755352020264
    3. ' for' → logprob: -6.506755352020264
    4. '#' (adapté à ' #') → logprob: -11.131754875183105
    5. '       ' → logprob: -11.756754875183105
    6. '```' → logprob: -12.631754875183105
    7. '	for' → logprob: -14.256754875183105
    8. '
' → logprob: -15.131754875183105
    9. '    
' → logprob: -16.256755828857422
    10. '  ' → logprob: -16.756755828857422

Token 595: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -16.25
    3. '   ' → logprob: -19.125
    4. '#' → logprob: -19.25
    5. '
' → logprob: -22.25
    6. '	for' → logprob: -23.5
    7. '       ' → logprob: -24.25
    8. 'For' → logprob: -26.0
    9. 'while' → logprob: -26.375
    10. '    
' → logprob: -26.5

Token 596: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.2128027230501175
    2. 'ours' → logprob: -2.2128026485443115
    3. 'for' → logprob: -3.0878026485443115
    4. 'ourt' → logprob: -4.587802886962891
    5. 'ur' → logprob: -4.837802886962891
    6. 'or' → logprob: -4.837802886962891
    7. 'hor' → logprob: -5.337802886962891
    8. '#' → logprob: -6.087802886962891
    9. 'urse' → logprob: -7.212802886962891
    10. 'ourse' → logprob: -7.837802886962891

Token 597: ' tous' (ID: 10688)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0004568903532344848
    2. ' to' → logprob: -8.125456809997559
    3. '(to' → logprob: -9.625456809997559
    4. 'for' → logprob: -9.625456809997559
    5. '   ' → logprob: -10.500456809997559
    6. '       ' → logprob: -15.000456809997559
    7. ' for' → logprob: -15.125456809997559
    8. '	to' → logprob: -15.250456809997559
    9. '[to' → logprob: -15.750456809997559
    10. 'all' → logprob: -15.875456809997559

Token 598: ' les' (ID: 1341)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0381290428340435
    2. '(to' → logprob: -3.4131290912628174
    3. 'neighbor' → logprob: -6.663128852844238
    4. 'adj' → logprob: -6.663128852844238
    5. ' to' → logprob: -6.913128852844238
    6. '(ne' → logprob: -8.913128852844238
    7. ' voisin' → logprob: -9.038128852844238
    8. 'neighbors' → logprob: -9.038128852844238
    9. 'w' → logprob: -9.163128852844238
    10. 'vo' → logprob: -9.413128852844238

Token 599: ' voisins' (ID: 166720)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.5947927832603455
    2. 'u' → logprob: -1.4697928428649902
    3. 'to' → logprob: -1.7197928428649902
    4. 'nv' → logprob: -4.46979284286499
    5. ' w' → logprob: -4.96979284286499
    6. ' u' → logprob: -5.34479284286499
    7. ' to' → logprob: -5.34479284286499
    8. 'nx' → logprob: -5.46979284286499
    9. 'n' → logprob: -6.09479284286499
    10. 'neighbors' → logprob: -6.96979284286499

Token 600: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7959762811660767
    2. ' of' → logprob: -2.045976161956787
    3. ' in' → logprob: -2.045976161956787
    4. 'in' → logprob: -2.420976161956787
    5. '       ' → logprob: -3.045976161956787
    6. 'to' → logprob: -3.170976161956787
    7. 'w' → logprob: -3.420976161956787
    8. 'for' → logprob: -3.670976161956787
    9. 'of' → logprob: -4.045976161956787
    10. '(v' → logprob: -4.795976161956787

Token 601: 'adj' (ID: 57001)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.015424861572682858
    2. 'u' → logprob: -4.765424728393555
    3. 'w' → logprob: -5.640424728393555
    4. ' to' → logprob: -5.765424728393555
    5. ' u' → logprob: -9.890424728393555
    6. 'nv' → logprob: -11.015424728393555
    7. ' w' → logprob: -11.015424728393555
    8. '   ' → logprob: -12.265424728393555
    9. 'x' → logprob: -13.015424728393555
    10. 'neighbor' → logprob: -13.515424728393555

Token 602: 'ac' (ID: 359)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5937172770500183
    2. 'ac' → logprob: -0.8437172770500183
    3. 'v' → logprob: -4.843717098236084
    4. 'acent' → logprob: -5.468717098236084
    5. 'acency' → logprob: -5.468717098236084
    6. '[to' → logprob: -7.843717098236084
    7. 'anc' → logprob: -8.093717575073242
    8. 'oints' → logprob: -8.343717575073242
    9. '(v' → logprob: -8.718717575073242
    10. '[' → logprob: -9.593717575073242

Token 603: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0013291679788380861
    2. 'ent' → logprob: -6.751328945159912
    3. 'nts' → logprob: -9.75132942199707
    4. 't' → logprob: -9.87632942199707
    5. 'v' → logprob: -11.00132942199707
    6. 'cent' → logprob: -11.62632942199707
    7. 's' → logprob: -11.75132942199707
    8. 'c' → logprob: -12.87632942199707
    9. '#' → logprob: -12.87632942199707
    10. 'ts' → logprob: -13.25132942199707

Token 604: ')' (ID: 8)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05677580460906029
    2. 'de' → logprob: -3.5567758083343506
    3. '[v' → logprob: -3.8067758083343506
    4. '   ' → logprob: -6.3067755699157715
    5. ' à' → logprob: -6.8067755699157715
    6. ')' → logprob: -7.0567755699157715
    7. 'v' → logprob: -8.18177604675293
    8. '       ' → logprob: -8.93177604675293
    9. '(v' → logprob: -9.43177604675293
    10. 'à' → logprob: -10.43177604675293

Token 605: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6483582854270935
    2. ' in' → logprob: -1.0233583450317383
    3. 'of' → logprob: -3.5233583450317383
    4. 'to' → logprob: -3.6483583450317383
    5. 'in' → logprob: -3.8983583450317383
    6. 'for' → logprob: -4.523358345031738
    7. '   ' → logprob: -4.523358345031738
    8. ' for' → logprob: -4.773358345031738
    9. ' de' → logprob: -4.773358345031738
    10. '       ' → logprob: -6.773358345031738

Token 606: ' v' (ID: 323)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.005112203303724527
    2. ' to' → logprob: -5.505112171173096
    3. 'v' → logprob: -6.880112171173096
    4. ' v' → logprob: -12.255112648010254
    5. '   ' → logprob: -15.130112648010254
    6. '	to' → logprob: -16.380111694335938
    7. '[to' → logprob: -16.755111694335938
    8. 'To' → logprob: -17.630111694335938
    9. '(to' → logprob: -18.755111694335938
    10. 'toc' → logprob: -19.505111694335938

Token 607: ' selon' (ID: 27571)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5749138593673706
    2. '       ' → logprob: -1.1999138593673706
    3. 'for' → logprob: -2.19991397857666
    4. '   ' → logprob: -3.69991397857666
    5. '<|end|>' → logprob: -8.57491397857666
    6. ' in' → logprob: -8.94991397857666
    7. '        
' → logprob: -10.07491397857666
    8. ',' → logprob: -10.32491397857666
    9. '	for' → logprob: -10.69991397857666
    10. '```' → logprob: -10.69991397857666

Token 608: ' la' (ID: 557)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3132913112640381
    2. ' to' → logprob: -1.313291311264038
    3. '   ' → logprob: -10.563291549682617
    4. '       ' → logprob: -13.313291549682617
    5. '[to' → logprob: -14.688291549682617
    6. 'v' → logprob: -15.063291549682617
    7. '           ' → logprob: -15.188291549682617
    8. '	to' → logprob: -15.313291549682617
    9. 'for' → logprob: -15.688291549682617
    10. '(to' → logprob: -15.688291549682617

Token 609: ' liste' (ID: 31719)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00013619766104966402
    2. ' to' → logprob: -9.000136375427246
    3. 'for' → logprob: -11.500136375427246
    4. 'range' → logprob: -13.625136375427246
    5. '   ' → logprob: -14.375136375427246
    6. '```' → logprob: -14.875136375427246
    7. '[to' → logprob: -15.750136375427246
    8. 'toc' → logprob: -16.25013542175293
    9. '       ' → logprob: -16.75013542175293
    10. ' range' → logprob: -17.75013542175293

Token 610: ' d' (ID: 272)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.23253625631332397
    2. ' to' → logprob: -2.2325363159179688
    3. '       ' → logprob: -3.4825363159179688
    4. '[to' → logprob: -3.7325363159179688
    5. ' for' → logprob: -3.9825363159179688
    6. '   ' → logprob: -4.482536315917969
    7. 'for' → logprob: -4.482536315917969
    8. '[v' → logprob: -6.107536315917969
    9. '```' → logprob: -7.107536315917969
    10. '(to' → logprob: -7.732536315917969

Token 611: ''ad' (ID: 36162)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03792902082204819
    2. '[to' → logprob: -4.162929058074951
    3. 'adj' → logprob: -4.412929058074951
    4. ' to' → logprob: -5.537929058074951
    5. ' adjacency' → logprob: -5.787929058074951
    6. 'v' → logprob: -6.912929058074951
    7. '(to' → logprob: -7.662929058074951
    8. 'for' → logprob: -8.287928581237793
    9. '`' → logprob: -8.787928581237793
    10. '[v' → logprob: -9.162928581237793

Token 612: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3873174488544464
    2. 'jac' → logprob: -1.137317419052124
    3. '[j' → logprob: -7.887317657470703
    4. 'jec' → logprob: -10.387317657470703
    5. 'ja' → logprob: -10.887317657470703
    6. 'js' → logprob: -12.512317657470703
    7. '[' → logprob: -12.762317657470703
    8. 'J' → logprob: -12.887317657470703
    9. 'acency' → logprob: -12.887317657470703
    10. 'jc' → logprob: -13.387317657470703

Token 613: 'ence' (ID: 1082)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2779856324195862
    2. '[to' → logprob: -2.1529855728149414
    3. 'ent' → logprob: -2.7779855728149414
    4. 'ents' → logprob: -3.4029855728149414
    5. '(to' → logprob: -4.652985572814941
    6. ' to' → logprob: -5.027985572814941
    7. '[v' → logprob: -5.527985572814941
    8. 'acency' → logprob: -5.777985572814941
    9. 'ac' → logprob: -5.902985572814941
    10. 'v' → logprob: -6.277985572814941

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0509149432182312
    2. ' for' → logprob: -3.050915002822876
    3. 'for' → logprob: -6.300914764404297
    4. '   ' → logprob: -8.050914764404297
    5. '<|end|>' → logprob: -9.300914764404297
    6. ':' → logprob: -10.550914764404297
    7. '        
' → logprob: -10.800914764404297
    8. ',' → logprob: -11.300914764404297
    9. '	for' → logprob: -12.050914764404297
    10. '<|end|>' → logprob: -12.675914764404297

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6075230836868286
    2. ' for' → logprob: -1.3575230836868286
    3. 'for' → logprob: -1.7325230836868286
    4. '   ' → logprob: -3.857522964477539
    5. '```' → logprob: -10.482522964477539
    6. '<|end|>' → logprob: -11.607522964477539
    7. '	for' → logprob: -12.357522964477539
    8. '        
' → logprob: -13.357522964477539
    9. ' ' → logprob: -13.732522964477539
    10. '           ' → logprob: -14.107522964477539

Token 616: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02399691753089428
    2. ' for' → logprob: -3.7739968299865723
    3. '   ' → logprob: -7.273996829986572
    4. '       ' → logprob: -9.77399730682373
    5. '	for' → logprob: -14.02399730682373
    6. ' ' → logprob: -18.273996353149414
    7. '```' → logprob: -18.398996353149414
    8. '  ' → logprob: -19.148996353149414
    9. '    
' → logprob: -19.648996353149414
    10. '
' → logprob: -19.648996353149414

Token 617: ' nv' (ID: 68641)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13875821232795715
    2. 'w' → logprob: -3.0137581825256348
    3. 'nv' → logprob: -3.0137581825256348
    4. 'nx' → logprob: -4.013758182525635
    5. 'e' → logprob: -5.513758182525635
    6. 'x' → logprob: -5.888758182525635
    7. 'n' → logprob: -6.263758182525635
    8. ' u' → logprob: -6.263758182525635
    9. 'to' → logprob: -6.513758182525635
    10. ' nxt' → logprob: -7.763758182525635

Token 618: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313269704580307
    2. 'in' → logprob: -1.3132697343826294
    3. '	in' → logprob: -12.31326961517334
    4. ' ' → logprob: -13.56326961517334
    5. 'v' → logprob: -14.18826961517334
    6. 'n' → logprob: -14.31326961517334
    7. 's' → logprob: -15.43826961517334
    8. '   ' → logprob: -15.68826961517334
    9. '  ' → logprob: -16.063270568847656
    10. '_in' → logprob: -16.188270568847656

Token 619: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0019291093340143561
    2. ' to' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.50192928314209
    4. '	to' → logprob: -17.126928329467773
    5. '[to' → logprob: -17.251928329467773
    6. '(to' → logprob: -18.501928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '       ' → logprob: -19.751928329467773
    9. ',to' → logprob: -20.751928329467773
    10. '_to' → logprob: -21.001928329467773

Token 620: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.875
    3. 'v' → logprob: -16.875
    4. ' [' → logprob: -17.0
    5. '[
' → logprob: -21.25
    6. '[V' → logprob: -21.75
    7. '[u' → logprob: -22.0
    8. '[val' → logprob: -22.125
    9. '(v' → logprob: -22.25
    10. '<v' → logprob: -22.375

Token 621: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0005775776808150113
    2. '):' → logprob: -7.875577449798584
    3. ']:
' → logprob: -9.125577926635742
    4. ']' → logprob: -9.875577926635742
    5. ':' → logprob: -10.500577926635742
    6. ']):' → logprob: -12.125577926635742
    7. ']:
' → logprob: -13.125577926635742
    8. '>:' → logprob: -14.875577926635742
    9. '}:' → logprob: -14.875577926635742
    10. '):
' → logprob: -15.000577926635742

Token 622: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011752494610846043
    2. '           ' → logprob: -5.136752605438232
    3. ' if' → logprob: -5.511752605438232
    4. 'if' → logprob: -7.136752605438232
    5. '<|end|>' → logprob: -7.136752605438232
    6. '	       ' → logprob: -9.886752128601074
    7. '   ' → logprob: -10.636752128601074
    8. '```' → logprob: -10.761752128601074
    9. ',' → logprob: -11.011752128601074
    10. '<|end|>' → logprob: -11.011752128601074

Token 623: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5318194031715393
    2. ' if' → logprob: -1.0318193435668945
    3. '       ' → logprob: -3.6568193435668945
    4. 'if' → logprob: -3.6568193435668945
    5. '	       ' → logprob: -7.0318193435668945
    6. '<|end|>' → logprob: -7.0318193435668945
    7. '           ' → logprob: -7.2818193435668945
    8. '	if' → logprob: -7.7818193435668945
    9. '   ' → logprob: -8.031819343566895
    10. '```' → logprob: -8.281819343566895

Token 624: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.048878252506256104
    2. ' if' → logprob: -3.0488781929016113
    3. '               ' → logprob: -8.17387866973877
    4. '           ' → logprob: -12.42387866973877
    5. '	if' → logprob: -13.04887866973877
    6. '       ' → logprob: -13.42387866973877
    7. '   ' → logprob: -14.17387866973877
    8. '```' → logprob: -14.79887866973877
    9. 'If' → logprob: -16.173877716064453
    10. '            ' → logprob: -16.798877716064453

Token 625: ' le' (ID: 505)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23482288420200348
    2. 'not' → logprob: -1.7348228693008423
    3. 'seen' → logprob: -4.109822750091553
    4. ' seen' → logprob: -4.109822750091553
    5. '!' → logprob: -10.984823226928711
    6. 'se' → logprob: -11.984823226928711
    7. '	not' → logprob: -12.484823226928711
    8. '(not' → logprob: -12.859823226928711
    9. ' ' → logprob: -13.109823226928711
    10. ' no' → logprob: -14.359823226928711

Token 626: ' voisin' (ID: 145411)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31840550899505615
    2. ' not' → logprob: -1.9434055089950562
    3. 'seen' → logprob: -2.0684056282043457
    4. ' seen' → logprob: -5.818405628204346
    5. 'se' → logprob: -9.443405151367188
    6. '!' → logprob: -10.693405151367188
    7. 'see' → logprob: -12.818405151367188
    8. '(not' → logprob: -12.818405151367188
    9. '	not' → logprob: -13.193405151367188
    10. 'shown' → logprob: -13.568405151367188

Token 627: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8623477816581726
    2. 'seen' → logprob: -1.4873478412628174
    3. ' seen' → logprob: -1.6123478412628174
    4. 'not' → logprob: -1.9873478412628174
    5. ' and' → logprob: -4.612347602844238
    6. 'and' → logprob: -5.487347602844238
    7. 'if' → logprob: -8.112347602844238
    8. '   ' → logprob: -8.987347602844238
    9. '!' → logprob: -9.112347602844238
    10. 'se' → logprob: -9.237347602844238

Token 628: ''a' (ID: 10443)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.15563131868839264
    2. '[' → logprob: -2.2806313037872314
    3. 'o' → logprob: -4.1556315422058105
    4. '[v' → logprob: -4.7806315422058105
    5. '[o' → logprob: -5.4056315422058105
    6. 'seen' → logprob: -6.0306315422058105
    7. 'v' → logprob: -6.0306315422058105
    8. '[n' → logprob: -6.0306315422058105
    9. 'n' → logprob: -6.2806315422058105
    10. 'e' → logprob: -6.5306315422058105

Token 629: ' pas' (ID: 2173)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.07812406867742538
    2. 'pas' → logprob: -2.7031240463256836
    3. 'not' → logprob: -5.953124046325684
    4. 'o' → logprob: -6.953124046325684
    5. ' pas' → logprob: -6.953124046325684
    6. 'et' → logprob: -7.453124046325684
    7. 'u' → logprob: -7.578124046325684
    8. 't' → logprob: -7.828124046325684
    9. 'seen' → logprob: -7.828124046325684
    10. '0' → logprob: -8.078124046325684

Token 630: ' encore' (ID: 14043)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.23651623725891113
    2. 'vu' → logprob: -2.486516237258911
    3. ' vu' → logprob: -2.611516237258911
    4. 'been' → logprob: -3.361516237258911
    5. ' été' → logprob: -5.111515998840332
    6. ' been' → logprob: -5.611515998840332
    7. 'vue' → logprob: -6.361515998840332
    8. ' seen' → logprob: -6.361515998840332
    9. 'pas' → logprob: -6.611515998840332
    10. 'été' → logprob: -7.361515998840332

Token 631: ' été' (ID: 9799)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.15566928684711456
    2. 'vu' → logprob: -2.0306692123413086
    3. 'been' → logprob: -4.530669212341309
    4. ' vu' → logprob: -7.030669212341309
    5. 'été' → logprob: -7.405669212341309
    6. 'vue' → logprob: -8.655669212341309
    7. ' seen' → logprob: -8.780669212341309
    8. ' été' → logprob: -9.030669212341309
    9. 'voir' → logprob: -9.530669212341309
    10. '   ' → logprob: -10.030669212341309

Token 632: ' vis' (ID: 1909)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.007031369488686323
    2. ' seen' → logprob: -5.132031440734863
    3. 'vu' → logprob: -6.882031440734863
    4. ' vu' → logprob: -9.882031440734863
    5. 'visited' → logprob: -11.257031440734863
    6. 'voir' → logprob: -12.382031440734863
    7. 'vue' → logprob: -13.007031440734863
    8. 'see' → logprob: -13.382031440734863
    9. '_seen' → logprob: -13.757031440734863
    10. 'vist' → logprob: -14.257031440734863

Token 633: 'ité' (ID: 3761)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.4296596348285675
    2. 'ité' → logprob: -1.0546596050262451
    3. 'ite' → logprob: -7.804659843444824
    4. 'it' → logprob: -7.929659843444824
    5. 'isted' → logprob: -9.804659843444824
    6. 'iter' → logprob: -10.554659843444824
    7. 'ités' → logprob: -11.179659843444824
    8. 'ist' → logprob: -11.679659843444824
    9. '   ' → logprob: -11.679659843444824
    10. 'ted' → logprob: -12.054659843444824

Token 634: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1548873484134674
    2. '               ' → logprob: -2.2798874378204346
    3. '           ' → logprob: -4.2798871994018555
    4. ':' → logprob: -4.6548871994018555
    5. 'and' → logprob: -5.0298871994018555
    6. ',' → logprob: -5.2798871994018555
    7. ' if' → logprob: -5.7798871994018555
    8. ':
' → logprob: -6.0298871994018555
    9. 'if' → logprob: -8.029887199401855
    10. '<|end|>' → logprob: -9.529887199401855

Token 635: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24042744934558868
    2. ':' → logprob: -2.6154274940490723
    3. '           ' → logprob: -2.7404274940490723
    4. '               ' → logprob: -2.9904274940490723
    5. ':
' → logprob: -4.365427494049072
    6. 'and' → logprob: -5.115427494049072
    7. ',' → logprob: -5.740427494049072
    8. ' if' → logprob: -6.365427494049072
    9. '       ' → logprob: -7.615427494049072
    10. ' or' → logprob: -8.365427017211914

Token 636: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5594420433044434
    2. 'if' (adapté à ' if') → logprob: -0.9344420433044434
    3. '               ' → logprob: -3.8094420433044434
    4. '           ' → logprob: -4.309442043304443
    5. ' not' → logprob: -11.309442520141602
    6. 'not' → logprob: -11.559442520141602
    7. '<|end|>' → logprob: -11.684442520141602
    8. '                
' → logprob: -12.184442520141602
    9. 'If' → logprob: -12.184442520141602
    10. ',' → logprob: -12.559442520141602

Token 637: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5264258980751038
    2. 'not' → logprob: -1.776425838470459
    3. 'seen' → logprob: -1.901425838470459
    4. ' seen' → logprob: -2.401425838470459
    5. '!' → logprob: -10.026426315307617
    6. 'se' → logprob: -11.026426315307617
    7. '   ' → logprob: -11.026426315307617
    8. ' ' → logprob: -11.651426315307617
    9. '(not' → logprob: -12.401426315307617
    10. '	not' → logprob: -12.401426315307617

Token 638: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.004621780011802912
    2. ' seen' → logprob: -5.379621982574463
    3. 'see' → logprob: -14.254621505737305
    4. '   ' → logprob: -14.629621505737305
    5. ' ' → logprob: -15.754621505737305
    6. 'shown' → logprob: -16.254621505737305
    7. 'visited' → logprob: -17.004621505737305
    8. '
' → logprob: -17.129621505737305
    9. 'se' → logprob: -17.504621505737305
    10. 'seeing' → logprob: -17.629621505737305

Token 639: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.1054253011243418e-05
    2. 'nv' → logprob: -12.000020980834961
    3. '[' → logprob: -12.500020980834961
    4. '```' → logprob: -12.625020980834961
    5. ' [' → logprob: -12.875020980834961
    6. '   ' → logprob: -13.625020980834961
    7. ')' → logprob: -13.875020980834961
    8. '[v' → logprob: -14.875020980834961
    9. ' ' → logprob: -15.125020980834961
    10. '       ' → logprob: -15.375020980834961

Token 640: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0165780708193779
    2. '[n' → logprob: -4.391578197479248
    3. '[v' → logprob: -5.516578197479248
    4. '[' → logprob: -11.51657772064209
    5. ' nv' → logprob: -11.76657772064209
    6. '   ' → logprob: -12.14157772064209
    7. ']' → logprob: -12.64157772064209
    8. '][' → logprob: -13.01657772064209
    9. '```' → logprob: -13.39157772064209
    10. ')' → logprob: -13.64157772064209

Token 641: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.029870478436350822
    2. ']:' → logprob: -3.5298705101013184
    3. ']:
' → logprob: -10.02987003326416
    4. ']' → logprob: -10.40487003326416
    5. ':
' → logprob: -10.90487003326416
    6. ']:

' → logprob: -11.27987003326416
    7. ':' → logprob: -12.27987003326416
    8. '"]:
' → logprob: -12.52987003326416
    9. '']:
' → logprob: -13.65487003326416
    10. '():
' → logprob: -13.77987003326416

Token 642: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008712020353414118
    2. '<|end|>' → logprob: -7.750871181488037
    3. '                
' → logprob: -8.625871658325195
    4. ' seen' → logprob: -9.625871658325195
    5. '       ' → logprob: -9.750871658325195
    6. '           ' → logprob: -10.625871658325195
    7. '```' → logprob: -11.125871658325195
    8. ',' → logprob: -11.500871658325195
    9. ' ' → logprob: -11.500871658325195
    10. '<|end|>' → logprob: -11.625871658325195

Token 643: ' seen' (ID: 6177)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23912350833415985
    2. ' ans' → logprob: -1.8641234636306763
    3. 'ans' → logprob: -3.239123582839966
    4. '                   ' → logprob: -4.364123344421387
    5. ' seen' → logprob: -5.489123344421387
    6. 'seen' (adapté à ' seen') → logprob: -7.864123344421387
    7. '	ans' → logprob: -7.864123344421387
    8. '                
' → logprob: -8.364123344421387
    9. '   ' → logprob: -8.989123344421387
    10. '           ' → logprob: -9.364123344421387

Token 644: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.25000286102295
    3. '```' → logprob: -15.12500286102295
    4. ' [' → logprob: -16.000001907348633
    5. 'nv' → logprob: -16.375001907348633
    6. '

' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '[N' → logprob: -17.000001907348633
    9. '\[' → logprob: -17.750001907348633
    10. '_nv' → logprob: -17.875001907348633

Token 645: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0631868839263916
    2. '[n' → logprob: -2.8131868839263916
    3. 'nv' → logprob: -7.6881866455078125
    4. '[v' → logprob: -7.9381866455078125
    5. '               ' → logprob: -9.563186645507812
    6. '   ' → logprob: -10.063186645507812
    7. '1' → logprob: -10.188186645507812
    8. ' nv' → logprob: -10.188186645507812
    9. '       ' → logprob: -10.563186645507812
    10. 'w' → logprob: -10.688186645507812

Token 646: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4953487813472748
    2. '=' → logprob: -0.9953488111495972
    3. ']=' → logprob: -4.495348930358887
    4. ' =' → logprob: -4.620348930358887
    5. '[v' → logprob: -10.870348930358887
    6. '[n' → logprob: -12.620348930358887
    7. ')' → logprob: -12.745348930358887
    8. '=True' → logprob: -12.870348930358887
    9. ' ]' → logprob: -12.995348930358887
    10. '[' → logprob: -13.620348930358887

Token 647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=True' → logprob: -17.139163970947266
    4. ',' → logprob: -17.389163970947266
    5. '[' → logprob: -18.389163970947266
    6. ' ' → logprob: -18.764163970947266
    7. ')' → logprob: -19.014163970947266
    8. ']=' → logprob: -19.014163970947266
    9. '   ' → logprob: -19.139163970947266
    10. ']' → logprob: -19.264163970947266

Token 648: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'True' → logprob: -18.5000057220459
    4. '   ' → logprob: -18.6250057220459
    5. '  ' → logprob: -21.7500057220459
    6. ' True' → logprob: -22.1250057220459
    7. '	' → logprob: -23.2500057220459
    8. '[' → logprob: -23.5000057220459
    9. '
' → logprob: -23.5000057220459
    10. '' → logprob: -23.8750057220459

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. 'True' → logprob: -19.0
    4. '   ' → logprob: -22.625
    5. '۱' → logprob: -24.75
    6. 'true' → logprob: -25.125
    7. '```' → logprob: -25.125
    8. '' → logprob: -25.25
    9. '  ' → logprob: -25.25
    10. '<|end|>' → logprob: -25.25

Token 650: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013879163190722466
    2. '
' → logprob: -4.763879299163818
    3. '                
' → logprob: -6.013879299163818
    4. ' ans' → logprob: -6.513879299163818
    5. '<|end|>' → logprob: -8.38887882232666
    6. '   ' → logprob: -8.51387882232666
    7. '```' → logprob: -8.76387882232666
    8. ' 
' → logprob: -8.88887882232666
    9. '           ' → logprob: -9.26387882232666
    10. '
' → logprob: -9.38887882232666

Token 651: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002162633230909705
    2. ' ans' → logprob: -7.127162456512451
    3. '   ' → logprob: -8.12716293334961
    4. 'ans' → logprob: -8.25216293334961
    5. '       ' → logprob: -8.37716293334961
    6. '           ' → logprob: -8.62716293334961
    7. '
' → logprob: -8.75216293334961
    8. '                
' → logprob: -9.25216293334961
    9. '	ans' → logprob: -10.00216293334961
    10. '<|end|>' → logprob: -11.00216293334961

Token 652: ' Mar' (ID: 3145)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2955096364021301
    2. ' ans' → logprob: -1.5455095767974854
    3. '               ' → logprob: -3.1705095767974854
    4. '	ans' → logprob: -8.545509338378906
    5. ' que' → logprob: -9.420509338378906
    6. '
' → logprob: -9.420509338378906
    7. '                
' → logprob: -9.795509338378906
    8. 'que' → logprob: -10.045509338378906
    9. '           ' → logprob: -10.170509338378906
    10. '                   ' → logprob: -10.795509338378906

Token 653: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00013691288768313825
    2. 'quer' → logprob: -9.000137329101562
    3. 'quez' → logprob: -12.000137329101562
    4. 'qu' → logprob: -12.750137329101562
    5. 'q' → logprob: -13.750137329101562
    6. 'ques' → logprob: -13.875137329101562
    7. 'aque' → logprob: -14.000137329101562
    8. 'qué' → logprob: -14.500137329101562
    9. 'quera' → logprob: -15.250137329101562
    10. 'arque' → logprob: -15.250137329101562

Token 654: ' le' (ID: 505)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.2758820950984955
    2. ' nv' → logprob: -1.7758821249008179
    3. '(n' → logprob: -2.6508820056915283
    4. '_nv' → logprob: -7.900882244110107
    5. '[n' → logprob: -8.15088176727295
    6. '               ' → logprob: -8.52588176727295
    7. 'n' → logprob: -8.77588176727295
    8. '1' → logprob: -9.15088176727295
    9. '                   ' → logprob: -11.02588176727295
    10. '	n' → logprob: -11.90088176727295

Token 655: ' voisin' (ID: 145411)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.01263313740491867
    2. ' nv' → logprob: -4.762633323669434
    3. 'vo' → logprob: -5.637633323669434
    4. ' voisin' → logprob: -9.012633323669434
    5. 'neighbor' → logprob: -9.137633323669434
    6. '                   ' → logprob: -9.637633323669434
    7. 'nou' → logprob: -9.887633323669434
    8. '               ' → logprob: -10.012633323669434
    9. 'n' → logprob: -10.762633323669434
    10. '_nv' → logprob: -11.387633323669434

Token 656: ' comme' (ID: 7971)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08531836420297623
    2. ' as' → logprob: -2.8353183269500732
    3. 'as' → logprob: -4.460318565368652
    4. '<|end|>' → logprob: -4.835318565368652
    5. ' comme' → logprob: -7.210318565368652
    6. '                
' → logprob: -7.710318565368652
    7. '                   ' → logprob: -7.710318565368652
    8. 'comme' → logprob: -7.835318565368652
    9. '```' → logprob: -7.835318565368652
    10. '                ' → logprob: -7.960318565368652

Token 657: ' vis' (ID: 1909)
  Prédit: 'vu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vu' → logprob: -0.3765929043292999
    2. '1' → logprob: -1.3765928745269775
    3. ' vu' → logprob: -3.0015928745269775
    4. 'vis' → logprob: -4.751593112945557
    5. 'vue' → logprob: -7.126593112945557
    6. 'v' → logprob: -7.376593112945557
    7. 'seen' → logprob: -8.001592636108398
    8. 'visited' → logprob: -8.126592636108398
    9. ' ' → logprob: -8.251592636108398
    10. '   ' → logprob: -9.001592636108398

Token 658: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.00034821697045117617
    2. 'ited' → logprob: -8.750348091125488
    3. 'it' → logprob: -9.000348091125488
    4. 'itable' → logprob: -10.500348091125488
    5. 'itt' → logprob: -11.375348091125488
    6. 'itado' → logprob: -12.875348091125488
    7. 'rité' → logprob: -13.125348091125488
    8. '[it' → logprob: -13.125348091125488
    9. '
' → logprob: -13.250348091125488
    10. 'ist' → logprob: -13.375348091125488

Token 659: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014167845947667956
    2. ' ans' → logprob: -7.2514166831970215
    3. '                
' → logprob: -8.37641716003418
    4. '
' → logprob: -9.12641716003418
    5. '   ' → logprob: -9.37641716003418
    6. '       ' → logprob: -9.75141716003418
    7. '           ' → logprob: -9.75141716003418
    8. 'ans' → logprob: -10.12641716003418
    9. '```' → logprob: -10.12641716003418
    10. '<|end|>' → logprob: -10.75141716003418

Token 660: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015783412382006645
    2. ' ans' → logprob: -4.390783309936523
    3. '                
' → logprob: -6.265783309936523
    4. '```' → logprob: -7.515783309936523
    5. '
' → logprob: -8.765783309936523
    6. '       ' → logprob: -9.015783309936523
    7. ' 
' → logprob: -9.140783309936523
    8. '                   ' → logprob: -9.640783309936523
    9. 'ans' → logprob: -9.640783309936523
    10. '           ' → logprob: -9.640783309936523

Token 661: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0032086113933473825
    2. ' ans' → logprob: -5.878208637237549
    3. '               ' → logprob: -7.878208637237549
    4. '	ans' → logprob: -11.00320816040039
    5. 'answer' → logprob: -13.12820816040039
    6. '```' → logprob: -13.50320816040039
    7. '   ' → logprob: -13.62820816040039
    8. '(ans' → logprob: -14.25320816040039
    9. '           ' → logprob: -14.37820816040039
    10. '_ans' → logprob: -14.62820816040039

Token 662: ' Ret' (ID: 16724)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01217277068644762
    2. 'val' → logprob: -4.637172698974609
    3. 'value' → logprob: -6.512172698974609
    4. ' ans' → logprob: -7.762172698974609
    5. '               ' → logprob: -7.887172698974609
    6. 'tmp' → logprob: -10.88717269897461
    7. 'answer' → logprob: -10.88717269897461
    8. '                   ' → logprob: -11.26217269897461
    9. 'x' → logprob: -11.38717269897461
    10. 'temp' → logprob: -11.63717269897461

Token 663: 'ire' (ID: 594)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14248143136501312
    2. 'ans' → logprob: -3.5174813270568848
    3. ' ans' → logprob: -3.5174813270568848
    4. '(ans' → logprob: -3.5174813270568848
    5. 'urn' → logprob: -4.142481327056885
    6. '           ' → logprob: -4.392481327056885
    7. '	ans' → logprob: -5.017481327056885
    8. '       ' → logprob: -6.017481327056885
    9. '                   ' → logprob: -6.392481327056885
    10. '_ans' → logprob: -6.767481327056885

Token 664: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3280569911003113
    2. 'ans' → logprob: -1.328057050704956
    3. '(ans' → logprob: -4.828056812286377
    4. '               ' → logprob: -5.328056812286377
    5. '	ans' → logprob: -7.953056812286377
    6. ' and' → logprob: -7.953056812286377
    7. '_ans' → logprob: -8.078057289123535
    8. 'and' → logprob: -8.203057289123535
    9. '                   ' → logprob: -8.703057289123535
    10. 'val' → logprob: -9.328057289123535

Token 665: ' plus' (ID: 2932)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6667729616165161
    2. 'c' → logprob: -1.4167729616165161
    3. 'ans' → logprob: -1.9167729616165161
    4. ' c' → logprob: -2.9167728424072266
    5. 'space' → logprob: -4.041772842407227
    6. ' space' → logprob: -4.791772842407227
    7. ' espace' → logprob: -5.291772842407227
    8. '(ans' → logprob: -6.041772842407227
    9. ')' → logprob: -6.541772842407227
    10. ' ' → logprob: -6.916772842407227

Token 666: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -1.2607460021972656
    2. '.pop' → logprob: -1.7607460021972656
    3. ')' → logprob: -2.5107460021972656
    4. ' large' → logprob: -2.5107460021972656
    5. '   ' → logprob: -2.5107460021972656
    6. ' grandes' → logprob: -2.6357460021972656
    7. 'large' → logprob: -2.6357460021972656
    8. 'pop' → logprob: -2.7607460021972656
    9. ' ' → logprob: -4.010746002197266
    10. '_large' → logprob: -4.010746002197266

Token 667: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.0066999197006226
    2. ' value' → logprob: -1.1316999197006226
    3. ' val' → logprob: -2.256700038909912
    4. 'val' → logprob: -2.506700038909912
    5. 'value' → logprob: -3.131700038909912
    6. ')' → logprob: -3.506700038909912
    7. ' )' → logprob: -4.256700038909912
    8. '()' → logprob: -4.506700038909912
    9. ' c' → logprob: -5.631700038909912
    10. '   ' → logprob: -5.631700038909912

Token 668: ' restante' (ID: 130202)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05827511101961136
    2. ' de' → logprob: -4.55827522277832
    3. ' assign' → logprob: -4.93327522277832
    4. 'assign' → logprob: -5.30827522277832
    5. 'val' → logprob: -5.55827522277832
    6. 'from' → logprob: -5.55827522277832
    7. ' ans' → logprob: -5.68327522277832
    8. ' from' → logprob: -5.93327522277832
    9. 'de' → logprob: -6.05827522277832
    10. '                   ' → logprob: -6.30827522277832

Token 669: ' dans' (ID: 2671)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6560928821563721
    2. ' ans' → logprob: -1.906092882156372
    3. '()' → logprob: -2.031092882156372
    4. 'ans' → logprob: -2.656092882156372
    5. '                   ' → logprob: -3.281092882156372
    6. '(ans' → logprob: -3.906092882156372
    7. ',' → logprob: -4.031092643737793
    8. ' =' → logprob: -4.156092643737793
    9. 'value' → logprob: -5.156092643737793
    10. ' value' → logprob: -5.406092643737793

Token 670: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018185412511229515
    2. ' c' → logprob: -4.018185615539551
    3. ')c' → logprob: -10.64318561553955
    4. '```' → logprob: -12.01818561553955
    5. '(c' → logprob: -13.76818561553955
    6. ')' → logprob: -14.01818561553955
    7. '               ' → logprob: -14.01818561553955
    8. '   ' → logprob: -14.01818561553955
    9. ' the' → logprob: -14.39318561553955
    10. ' ' → logprob: -15.14318561553955

Token 671: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46731677651405334
    2. ' ans' → logprob: -1.467316746711731
    3. 'ans' → logprob: -2.9673168659210205
    4. '()' → logprob: -3.9673168659210205
    5. '                   ' → logprob: -4.092316627502441
    6. ')' → logprob: -4.217316627502441
    7. ',' → logprob: -4.342316627502441
    8. '(ans' → logprob: -4.592316627502441
    9. ' and' → logprob: -4.967316627502441
    10. ' =' → logprob: -5.592316627502441

Token 672: ' l' (ID: 305)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.7239124178886414
    2. ' ans' → logprob: -1.4739124774932861
    3. 'ans' → logprob: -1.5989124774932861
    4. ' assign' → logprob: -3.223912477493286
    5. ' assigns' → logprob: -3.973912477493286
    6. 'aff' → logprob: -4.848912239074707
    7. ' ass' → logprob: -5.598912239074707
    8. '               ' → logprob: -5.723912239074707
    9. '```' → logprob: -6.223912239074707
    10. 'ass' → logprob: -6.473912239074707

Token 673: ''aff' (ID: 53397)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.32739928364753723
    2. 'assign' → logprob: -1.3273992538452148
    3. 'ass' → logprob: -5.202399253845215
    4. '.assign' → logprob: -5.952399253845215
    5. 'assigned' → logprob: -6.952399253845215
    6. '```' → logprob: -7.202399253845215
    7. ' ans' → logprob: -7.327399253845215
    8. '                   ' → logprob: -7.577399253845215
    9. '               ' → logprob: -7.577399253845215
    10. 'pop' → logprob: -7.702399253845215

Token 674: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0010378103470429778
    2. 'ects' → logprob: -7.50103759765625
    3. 'ecta' → logprob: -8.25103759765625
    4. 'iche' → logprob: -8.87603759765625
    5. 'ic' → logprob: -10.87603759765625
    6. 'ec' → logprob: -11.50103759765625
    7. 'igne' → logprob: -11.87603759765625
    8. 'ekte' → logprob: -12.12603759765625
    9. 'e' → logprob: -12.62603759765625
    10. 'ective' → logprob: -12.62603759765625

Token 675: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004000634420663118
    2. 'ans' → logprob: -6.254000663757324
    3. 'er' → logprob: -6.379000663757324
    4. '               ' → logprob: -9.004000663757324
    5. '   ' → logprob: -9.254000663757324
    6. 'es' → logprob: -9.379000663757324
    7. 'ue' → logprob: -11.004000663757324
    8. ' ans' → logprob: -11.379000663757324
    9. '       ' → logprob: -11.754000663757324
    10. '                   ' → logprob: -12.129000663757324

Token 676: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5493794083595276
    2. '               ' → logprob: -1.6743793487548828
    3. 'ans' → logprob: -2.549379348754883
    4. '(ans' → logprob: -2.674379348754883
    5. 'à' → logprob: -3.174379348754883
    6. ' to' → logprob: -4.549379348754883
    7. 'to' → logprob: -4.549379348754883
    8. '                   ' → logprob: -5.049379348754883
    9. '   ' → logprob: -5.174379348754883
    10. '```' → logprob: -5.674379348754883

Token 677: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0028418414294719696
    2. ' ans' → logprob: -5.877841949462891
    3. 'nv' → logprob: -11.50284194946289
    4. '	ans' → logprob: -11.50284194946289
    5. '(ans' → logprob: -12.25284194946289
    6. '               ' → logprob: -12.62784194946289
    7. '
' → logprob: -13.00284194946289
    8. '   ' → logprob: -13.12784194946289
    9. 'answer' → logprob: -13.62784194946289
    10. '                   ' → logprob: -14.12784194946289

Token 678: ' sommet' (ID: 130502)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04690079391002655
    2. ' ans' → logprob: -3.296900749206543
    3. 'nv' → logprob: -5.171900749206543
    4. ' sommet' → logprob: -7.046900749206543
    5. ' nv' → logprob: -7.421900749206543
    6. '[n' → logprob: -8.421900749206543
    7. 'vertex' → logprob: -8.546900749206543
    8. ' voisin' → logprob: -8.671900749206543
    9. '[v' → logprob: -8.796900749206543
    10. '[node' → logprob: -8.796900749206543

Token 679: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00143678137101233
    2. ' ans' → logprob: -7.126436710357666
    3. 'ans' → logprob: -7.501436710357666
    4. '
' → logprob: -10.376437187194824
    5. '```' → logprob: -11.626437187194824
    6. '(ans' → logprob: -12.001437187194824
    7. '	ans' → logprob: -12.251437187194824
    8. '                
' → logprob: -12.251437187194824
    9. '   ' → logprob: -12.376437187194824
    10. '       ' → logprob: -12.376437187194824

Token 680: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008958091028034687
    2. ' ans' → logprob: -5.258957862854004
    3. 'ans' → logprob: -5.633957862854004
    4. '           ' → logprob: -10.633957862854004
    5. '(ans' → logprob: -10.633957862854004
    6. '```' → logprob: -10.633957862854004
    7. '       ' → logprob: -11.008957862854004
    8. '	ans' → logprob: -11.133957862854004
    9. '   ' → logprob: -11.258957862854004
    10. '                   ' → logprob: -11.383957862854004

Token 681: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0015093892579898238
    2. ' ans' → logprob: -6.501509189605713
    3. '	ans' → logprob: -12.501509666442871
    4. '(ans' → logprob: -13.251509666442871
    5. '               ' → logprob: -13.501509666442871
    6. 'answer' → logprob: -16.001508712768555
    7. '_ans' → logprob: -16.876508712768555
    8. '   ' → logprob: -17.376508712768555
    9. '                   ' → logprob: -17.501508712768555
    10. 'anst' → logprob: -17.751508712768555

Token 682: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.360996485454962e-05
    2. '[' → logprob: -9.7500638961792
    3. ' [' → logprob: -13.6250638961792
    4. '```' → logprob: -13.7500638961792
    5. '[
' → logprob: -14.6250638961792
    6. '
' → logprob: -14.6250638961792
    7. '[v' → logprob: -14.7500638961792
    8. '[N' → logprob: -15.0000638961792
    9. '   ' → logprob: -15.0000638961792
    10. 'nv' → logprob: -15.3750638961792

Token 683: 'v' (ID: 85)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.22293409705162048
    2. '[v' → logprob: -1.8479341268539429
    3. '               ' → logprob: -3.7229340076446533
    4. '.append' → logprob: -4.722934246063232
    5. '[s' → logprob: -5.972934246063232
    6. '       ' → logprob: -6.222934246063232
    7. '[' → logprob: -6.722934246063232
    8. 's' → logprob: -7.222934246063232
    9. 'v' → logprob: -7.722934246063232
    10. '   ' → logprob: -7.722934246063232

Token 684: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020931879058480263
    2. '=' → logprob: -4.020931720733643
    3. ']=' → logprob: -5.895931720733643
    4. ')' → logprob: -11.2709321975708
    5. ' =' → logprob: -11.2709321975708
    6. ' ]' → logprob: -13.3959321975708
    7. ')=' → logprob: -15.0209321975708
    8. '   ' → logprob: -16.270931243896484
    9. ' ' → logprob: -16.645931243896484
    10. '}' → logprob: -17.520931243896484

Token 685: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=c' → logprob: -15.639163970947266
    4. '＝' → logprob: -17.514163970947266
    5. '.=' → logprob: -18.264163970947266
    6. ']' → logprob: -18.514163970947266
    7. ')' → logprob: -18.514163970947266
    8. '   ' → logprob: -18.764163970947266
    9. '=v' → logprob: -18.889163970947266
    10. '=
' → logprob: -18.889163970947266

Token 686: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759404897689819
    2. ' c' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.075940132141113
    4. '	c' → logprob: -15.950940132141113
    5. '(c' → logprob: -17.32594108581543
    6. '[c' → logprob: -17.32594108581543
    7. '`' → logprob: -17.32594108581543
    8. ' ' → logprob: -17.95094108581543
    9. '_c' → logprob: -17.95094108581543
    10. ')c' → logprob: -17.95094108581543

Token 687: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -13.000003814697266
    3. 'pop' → logprob: -13.375003814697266
    4. ' .' → logprob: -16.375003814697266
    5. '	pop' → logprob: -18.000003814697266
    6. '.p' → logprob: -19.000003814697266
    7. '_pop' → logprob: -19.375003814697266
    8. '.Pop' → logprob: -19.625003814697266
    9. '-pop' → logprob: -19.750003814697266
    10. ' pop' → logprob: -20.000003814697266

Token 688: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.7053759519476444e-05
    2. '()
' → logprob: -9.875057220458984
    3. '())' → logprob: -13.000057220458984
    4. '()

' → logprob: -13.625057220458984
    5. '()]' → logprob: -14.125057220458984
    6. '(' → logprob: -14.375057220458984
    7. '()`' → logprob: -15.875057220458984
    8. '()\' → logprob: -15.875057220458984
    9. '()>' → logprob: -16.375057220458984
    10. ' ()' → logprob: -16.500057220458984

Token 689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027087211492471397
    2. '                
' → logprob: -9.37527084350586
    3. '
' → logprob: -9.87527084350586
    4. ' que' → logprob: -10.12527084350586
    5. 'que' → logprob: -10.25027084350586
    6. '       ' → logprob: -10.75027084350586
    7. '              ' → logprob: -11.25027084350586
    8. '           ' → logprob: -11.50027084350586
    9. '```' → logprob: -12.37527084350586
    10. '                   ' → logprob: -13.25027084350586

Token 690: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19092804193496704
    2. '               ' → logprob: -1.8159279823303223
    3. 'que' → logprob: -4.815927982330322
    4. ' S' → logprob: -5.940927982330322
    5. ' que' → logprob: -8.81592845916748
    6. '                
' → logprob: -9.31592845916748
    7. '              ' → logprob: -9.44092845916748
    8. '           ' → logprob: -10.81592845916748
    9. '       ' → logprob: -11.06592845916748
    10. '
' → logprob: -11.81592845916748

Token 691: ' Aj' (ID: 28294)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0005311102140694857
    2. '               ' → logprob: -8.125531196594238
    3. ' que' → logprob: -8.375531196594238
    4. '           ' → logprob: -13.375531196594238
    5. '   ' → logprob: -14.125531196594238
    6. '       ' → logprob: -14.125531196594238
    7. '              ' → logprob: -14.625531196594238
    8. 'queue' → logprob: -14.750531196594238
    9. '             ' → logprob: -16.250530242919922
    10. '                
' → logprob: -16.250530242919922

Token 692: 'oute' (ID: 3509)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.3190218210220337
    2. 'que' → logprob: -1.3190218210220337
    3. 'oute' → logprob: -5.319021701812744
    4. 'outer' → logprob: -8.069022178649902
    5. 'oue' → logprob: -8.694022178649902
    6. ' que' → logprob: -8.944022178649902
    7. 'out' → logprob: -9.444022178649902
    8. 'ou' → logprob: -10.194022178649902
    9. 'queue' → logprob: -10.319022178649902
    10. 'e' → logprob: -10.444022178649902

Token 693: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001742650754749775
    2. 'nv' → logprob: -6.751742839813232
    3. ' nv' → logprob: -7.876742839813232
    4. 'n' → logprob: -8.626742362976074
    5. '(nx' → logprob: -11.876742362976074
    6. '_nv' → logprob: -12.876742362976074
    7. '	n' → logprob: -13.251742362976074
    8. '(' → logprob: -14.251742362976074
    9. '[n' → logprob: -14.751742362976074
    10. ' (' → logprob: -15.001742362976074

Token 694: ' valeur' (ID: 41664)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.014165629632771015
    2. ' nv' → logprob: -4.26416540145874
    3. '_nv' → logprob: -13.389165878295898
    4. 'n' → logprob: -15.139165878295898
    5. 'v' → logprob: -15.639165878295898
    6. ' queue' → logprob: -16.2641658782959
    7. 'new' → logprob: -17.2641658782959
    8. 'queue' → logprob: -17.3891658782959
    9. 'nou' → logprob: -17.5141658782959
    10. ' new' → logprob: -17.5141658782959

Token 695: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.297462171758525e-05
    2. '(nx' → logprob: -11.125033378601074
    3. ' (' → logprob: -11.875033378601074
    4. '(' → logprob: -12.625033378601074
    5. 'n' → logprob: -12.875033378601074
    6. '(nb' → logprob: -14.000033378601074
    7. '(
' → logprob: -14.125033378601074
    8. 'nv' → logprob: -14.500033378601074
    9. 'to' → logprob: -14.750033378601074
    10. '(nd' → logprob: -14.875033378601074

Token 696: ' ans' (ID: 3345)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.004806515295058489
    2. ' nv' → logprob: -5.8798065185546875
    3. 'S' → logprob: -6.3798065185546875
    4. 'ans' → logprob: -8.254806518554688
    5. ' S' → logprob: -10.879806518554688
    6. 'n' → logprob: -11.754806518554688
    7. '_nv' → logprob: -12.879806518554688
    8. ' ' → logprob: -13.504806518554688
    9. 'sv' → logprob: -13.629806518554688
    10. '   ' → logprob: -13.879806518554688

Token 697: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.019237768370658e-05
    2. ' [' → logprob: -10.500090599060059
    3. '[' → logprob: -11.000090599060059
    4. '```' → logprob: -11.250090599060059
    5. 'nv' → logprob: -11.375090599060059
    6. 'ans' → logprob: -11.875090599060059
    7. '   ' → logprob: -12.625090599060059
    8. ' ' → logprob: -13.125090599060059
    9. '``' → logprob: -13.250090599060059
    10. '  ' → logprob: -14.000090599060059

Token 698: 'v' (ID: 85)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.008575450628995895
    2. 'nv' → logprob: -4.883575439453125
    3. 'v' → logprob: -7.633575439453125
    4. '[v' → logprob: -8.508575439453125
    5. ' [' → logprob: -9.508575439453125
    6. 'n' → logprob: -9.883575439453125
    7. ' nv' → logprob: -10.508575439453125
    8. ']' → logprob: -10.758575439453125
    9. '   ' → logprob: -10.883575439453125
    10. '```' → logprob: -11.133575439453125

Token 699: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18333955109119415
    2. ' )' → logprob: -2.9333395957946777
    3. '[n' → logprob: -3.3083395957946777
    4. ' to' → logprob: -3.6833395957946777
    5. '               ' → logprob: -3.6833395957946777
    6. 'to' → logprob: -4.683339595794678
    7. '<|end|>' → logprob: -5.558339595794678
    8. '                   ' → logprob: -6.183339595794678
    9. ')+' → logprob: -6.183339595794678
    10. ']' → logprob: -7.058339595794678

Token 700: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1082322970032692
    2. 'to' → logprob: -2.358232259750366
    3. ' +=' → logprob: -5.608232498168945
    4. '               ' → logprob: -6.108232498168945
    5. ' ' → logprob: -7.608232498168945
    6. '<|end|>' → logprob: -7.608232498168945
    7. '                   ' → logprob: -8.358232498168945
    8. '+=' → logprob: -8.858232498168945
    9. '           ' → logprob: -8.983232498168945
    10. '   ' → logprob: -9.358232498168945

Token 701: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023247340694069862
    2. ' S' → logprob: -3.773247241973877
    3. '               ' → logprob: -13.773247718811035
    4. '
' → logprob: -15.023247718811035
    5. ' ' → logprob: -16.14824676513672
    6. '	S' → logprob: -16.27324676513672
    7. '                   ' → logprob: -16.89824676513672
    8. '   ' → logprob: -17.02324676513672
    9. '```' → logprob: -17.02324676513672
    10. 's' → logprob: -17.77324676513672

Token 702: ' somme' (ID: 64484)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0015023599844425917
    2. ' S' → logprob: -6.501502513885498
    3. '+' → logprob: -18.626502990722656
    4. '`' → logprob: -18.876502990722656
    5. '=S' → logprob: -19.251502990722656
    6. '```' → logprob: -19.251502990722656
    7. 's' → logprob: -19.376502990722656
    8. '=' → logprob: -19.501502990722656
    9. ' ' → logprob: -19.501502990722656
    10. '
' → logprob: -19.751502990722656

Token 703: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.36346858739852905
    2. ' S' → logprob: -1.4884686470031738
    3. '               ' → logprob: -3.363468647003174
    4. ' +=' → logprob: -3.738468647003174
    5. '(S' → logprob: -5.113468647003174
    6. '+=' → logprob: -5.238468647003174
    7. '=' → logprob: -5.363468647003174
    8. '                   ' → logprob: -6.363468647003174
    9. ' =' → logprob: -7.363468647003174
    10. '+' → logprob: -8.238468170166016

Token 704: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06906624883413315
    2. '
' → logprob: -3.194066286087036
    3. '                   ' → logprob: -5.069066047668457
    4. ' S' → logprob: -5.569066047668457
    5. '           ' → logprob: -6.194066047668457
    6. 'S' → logprob: -6.194066047668457
    7. ' +' → logprob: -6.319066047668457
    8. '<|end|>' → logprob: -6.319066047668457
    9. ' 
' → logprob: -6.569066047668457
    10. '+' → logprob: -6.944066047668457

Token 705: 'om' (ID: 310)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8405083417892456
    2. ' S' → logprob: -1.5905083417892456
    3. 'S' → logprob: -1.9655083417892456
    4. 'ans' → logprob: -2.215508460998535
    5. '+' → logprob: -2.715508460998535
    6. '+=' → logprob: -3.715508460998535
    7. ' +=' → logprob: -4.090508460998535
    8. ' +' → logprob: -5.590508460998535
    9. ')' → logprob: -6.715508460998535
    10. '                   ' → logprob: -6.840508460998535

Token 706: 'ett' (ID: 5608)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1868361234664917
    2. '   ' → logprob: -1.3118361234664917
    3. '               ' → logprob: -1.8118361234664917
    4. 'S' → logprob: -2.3118362426757812
    5. '                   ' → logprob: -3.0618362426757812
    6. '           ' → logprob: -3.3118362426757812
    7. ' S' → logprob: -3.5618362426757812
    8. '+=' → logprob: -4.186836242675781
    9. '  ' → logprob: -4.811836242675781
    10. '    ' → logprob: -5.311836242675781

Token 707: 'ant' (ID: 493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2888023853302002
    2. 'S' → logprob: -1.4138023853302002
    3. ')' → logprob: -1.6638023853302002
    4. ' S' → logprob: -2.0388023853302
    5. '   ' → logprob: -3.6638023853302
    6. '+=' → logprob: -3.6638023853302
    7. '           ' → logprob: -3.7888023853302
    8. ' +=' → logprob: -4.038802146911621
    9. '               ' → logprob: -4.288802146911621
    10. '  ' → logprob: -4.788802146911621

Token 708: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8967828154563904
    2. 'ans' → logprob: -1.6467828750610352
    3. ' +=' → logprob: -2.021782875061035
    4. ')' → logprob: -2.646782875061035
    5. '(ans' → logprob: -2.771782875061035
    6. '+' → logprob: -3.396782875061035
    7. '=' → logprob: -3.771782875061035
    8. ' )' → logprob: -3.771782875061035
    9. ' +' → logprob: -3.771782875061035
    10. '+=' → logprob: -4.521782875061035

Token 709: ' rac' (ID: 12334)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7021563053131104
    2. 'ans' → logprob: -0.9521563053131104
    3. ' v' → logprob: -2.9521563053131104
    4. 'v' → logprob: -3.2021563053131104
    5. '1' → logprob: -5.702156066894531
    6. ')' → logprob: -5.702156066894531
    7. '=' → logprob: -5.827156066894531
    8. ' )' → logprob: -5.827156066894531
    9. ' =' → logprob: -6.452156066894531
    10. ' S' → logprob: -6.952156066894531

Token 710: 'ine' (ID: 514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.202985405921936
    2. '               ' → logprob: -1.952985405921936
    3. '           ' → logprob: -2.2029852867126465
    4. 'v' → logprob: -2.3279852867126465
    5. '                   ' → logprob: -2.7029852867126465
    6. 'S' → logprob: -2.9529852867126465
    7. '[v' → logprob: -3.0779852867126465
    8. '[val' → logprob: -3.7029852867126465
    9. '       ' → logprob: -3.8279852867126465
    10. 'nv' → logprob: -3.9529852867126465

Token 711: ' car' (ID: 1669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22076602280139923
    2. ')' → logprob: -1.7207660675048828
    3. ')
' → logprob: -4.220766067504883
    4. '                   ' → logprob: -6.345766067504883
    5. '           ' → logprob: -7.470766067504883
    6. ' +=' → logprob: -7.720766067504883
    7. ' )' → logprob: -8.345766067504883
    8. '              ' → logprob: -8.595766067504883
    9. '<|end|>' → logprob: -8.595766067504883
    10. '                ' → logprob: -8.720766067504883

Token 712: ' on' (ID: 402)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4818665683269501
    2. 'ans' → logprob: -0.9818665981292725
    3. ' nv' → logprob: -5.856866359710693
    4. 'nv' → logprob: -6.356866359710693
    5. '(ans' → logprob: -6.856866359710693
    6. ')' → logprob: -7.231866359710693
    7. ' not' → logprob: -7.981866359710693
    8. '	ans' → logprob: -8.606866836547852
    9. '
' → logprob: -8.731866836547852
    10. 'not' → logprob: -8.981866836547852

Token 713: ' ne' (ID: 453)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6820756196975708
    2. 'n' → logprob: -1.8070756196975708
    3. ' v' → logprob: -2.8070755004882812
    4. ' n' → logprob: -3.3070755004882812
    5. ' ajoute' → logprob: -3.4320755004882812
    6. ' ne' → logprob: -3.5570755004882812
    7. ' continue' → logprob: -3.5570755004882812
    8. '[v' → logprob: -3.8070755004882812
    9. ' a' → logprob: -3.8070755004882812
    10. ')v' → logprob: -4.432075500488281

Token 714: ' l' (ID: 305)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.34228774905204773
    2. ' ajoute' → logprob: -2.34228777885437
    3. ' add' → logprob: -3.21728777885437
    4. ' continue' → logprob: -3.59228777885437
    5. '+=' → logprob: -3.96728777885437
    6. ' S' → logprob: -3.96728777885437
    7. ' n' → logprob: -4.342287540435791
    8. ' pas' → logprob: -4.342287540435791
    9. 'n' → logprob: -5.092287540435791
    10. 'v' → logprob: -5.092287540435791

Token 715: ''aj' (ID: 116735)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7175348997116089
    2. '+=' → logprob: -1.5925348997116089
    3. '.append' → logprob: -2.4675350189208984
    4. ' ajoute' → logprob: -3.2175350189208984
    5. '+' → logprob: -3.5925350189208984
    6. 'n' → logprob: -3.9675350189208984
    7. ''aj' → logprob: -4.092535018920898
    8. ' ajouter' → logprob: -4.467535018920898
    9. '.add' → logprob: -4.717535018920898
    10. ' S' → logprob: -4.717535018920898

Token 716: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00030304977553896606
    2. 'outer' → logprob: -8.500303268432617
    3. 'out' → logprob: -9.250303268432617
    4. 'outez' → logprob: -13.250303268432617
    5. 'outes' → logprob: -13.500303268432617
    6. 'oue' → logprob: -15.000303268432617
    7. 'OUT' → logprob: -18.750303268432617
    8. 'ou' → logprob: -19.375303268432617
    9. 'uste' → logprob: -20.125303268432617
    10. 'ouse' → logprob: -20.500303268432617

Token 717: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5992633104324341
    2. '               ' → logprob: -2.0992631912231445
    3. '+' → logprob: -2.3492631912231445
    4. '+=' → logprob: -2.5992631912231445
    5. 'pas' → logprob: -2.7242631912231445
    6. ' +=' → logprob: -3.0992631912231445
    7. '                   ' → logprob: -4.8492631912231445
    8. '=' → logprob: -5.0992631912231445
    9. ')' → logprob: -5.3492631912231445
    10. '           ' → logprob: -5.3492631912231445

Token 718: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8609283566474915
    2. '               ' → logprob: -0.8609283566474915
    3. ')
' → logprob: -2.4859282970428467
    4. ' +=' → logprob: -3.8609282970428467
    5. '                   ' → logprob: -4.360928535461426
    6. '+' → logprob: -4.485928535461426
    7. '+=' → logprob: -5.360928535461426
    8. '=' → logprob: -5.485928535461426
    9. ' )
' → logprob: -5.860928535461426
    10. ' )' → logprob: -5.860928535461426

Token 719: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.25200822949409485
    2. ' S' → logprob: -1.5020081996917725
    3. ')' → logprob: -9.502008438110352
    4. ' ans' → logprob: -13.252008438110352
    5. ' ' → logprob: -13.877008438110352
    6. ' )' → logprob: -14.252008438110352
    7. 'ans' → logprob: -15.377008438110352
    8. '=S' → logprob: -16.12700843811035
    9. ')
' → logprob: -16.25200843811035
    10. ' ' → logprob: -16.25200843811035

Token 720: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07607188075780869
    2. ')' → logprob: -3.0760719776153564
    3. ')
' → logprob: -3.7010719776153564
    4. '                   ' → logprob: -7.201071739196777
    5. '<|end|>' → logprob: -7.701071739196777
    6. '+' → logprob: -8.576071739196777
    7. '           ' → logprob: -8.701071739196777
    8. '
' → logprob: -8.826071739196777
    9. ' +' → logprob: -9.201071739196777
    10. '              ' → logprob: -9.451071739196777

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03749461844563484
    2. '
' → logprob: -3.787494659423828
    3. '                
' → logprob: -5.537494659423828
    4. '                   ' → logprob: -5.912494659423828
    5. ' S' → logprob: -6.412494659423828
    6. ' 
' → logprob: -6.537494659423828
    7. '```' → logprob: -7.037494659423828
    8. '<|end|>' → logprob: -7.287494659423828
    9. '                    
' → logprob: -7.537494659423828
    10. '``' → logprob: -7.662494659423828

Token 722: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.11582700908184052
    2. ' S' → logprob: -2.2408270835876465
    3. '               ' → logprob: -6.2408270835876465
    4. '
' → logprob: -7.4908270835876465
    5. '                   ' → logprob: -8.615826606750488
    6. '   ' → logprob: -8.990826606750488
    7. '```' → logprob: -9.490826606750488
    8. '``' → logprob: -11.115826606750488
    9. '           ' → logprob: -11.365826606750488
    10. ' ' → logprob: -11.490826606750488

Token 723: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04860168322920799
    2. ' +=' → logprob: -3.0486016273498535
    3. '+' → logprob: -11.423602104187012
    4. ']+=' → logprob: -13.423602104187012
    5. '+=(' → logprob: -14.048602104187012
    6. '   ' → logprob: -14.548602104187012
    7. '=' → logprob: -15.423602104187012
    8. '	' → logprob: -15.923602104187012
    9. '    ' → logprob: -16.173601150512695
    10. '+="' → logprob: -16.673601150512695

Token 724: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014166564680635929
    2. ' ans' → logprob: -4.264166355133057
    3. '	ans' → logprob: -13.139166831970215
    4. '(ans' → logprob: -13.764166831970215
    5. '   ' → logprob: -18.0141658782959
    6. '_ans' → logprob: -19.5141658782959
    7. ' ' → logprob: -19.6391658782959
    8. 'answer' → logprob: -20.1391658782959
    9. 'anst' → logprob: -20.5141658782959
    10. 'Ans' → logprob: -20.8891658782959

Token 725: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.5570885807392187e-05
    2. '```' → logprob: -12.750015258789062
    3. ' [' → logprob: -12.875015258789062
    4. 'nv' → logprob: -13.000015258789062
    5. '[' → logprob: -13.125015258789062
    6. '[v' → logprob: -13.625015258789062
    7. '   ' → logprob: -14.125015258789062
    8. '_nv' → logprob: -14.250015258789062
    9. '(n' → logprob: -15.125015258789062
    10. '\[' → logprob: -15.250015258789062

Token 726: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06956509500741959
    2. '[n' → logprob: -2.9445650577545166
    3. '[v' → logprob: -4.569565296173096
    4. 'nv' → logprob: -5.569565296173096
    5. ' nv' → logprob: -7.944565296173096
    6. '_nv' → logprob: -10.694564819335938
    7. '[' → logprob: -11.319564819335938
    8. 'n' → logprob: -12.069564819335938
    9. '```' → logprob: -13.444564819335938
    10. ']' → logprob: -14.694564819335938

Token 727: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10182490944862366
    2. ']' → logprob: -2.476824998855591
    3. '<|end|>' → logprob: -4.476824760437012
    4. ')
' → logprob: -7.476824760437012
    5. '               ' → logprob: -7.726824760437012
    6. '<|end|>' → logprob: -8.726824760437012
    7. '}' → logprob: -9.101824760437012
    8. ']
' → logprob: -10.351824760437012
    9. '```' → logprob: -11.101824760437012
    10. '）' → logprob: -11.226824760437012

Token 728: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006854608654975891
    2. 'que' → logprob: -5.00685453414917
    3. ' que' → logprob: -9.381855010986328
    4. '```' → logprob: -11.006855010986328
    5. '              ' → logprob: -11.631855010986328
    6. '   ' → logprob: -11.881855010986328
    7. '           ' → logprob: -12.006855010986328
    8. '       ' → logprob: -12.006855010986328
    9. '                
' → logprob: -12.506855010986328
    10. '#' → logprob: -13.256855010986328

Token 729: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02157060243189335
    2. 'que' → logprob: -3.8965706825256348
    3. ' que' → logprob: -7.021570682525635
    4. '       ' → logprob: -9.521570205688477
    5. '           ' → logprob: -10.271570205688477
    6. '              ' → logprob: -11.021570205688477
    7. '   ' → logprob: -12.521570205688477
    8. 'queue' → logprob: -12.771570205688477
    9. '```' → logprob: -13.521570205688477
    10. '                   ' → logprob: -14.271570205688477

Token 730: ' Aj' (ID: 28294)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: 0.0
    2. ' que' → logprob: -17.75
    3. '               ' → logprob: -18.875
    4. '#' → logprob: -19.625
    5. '   ' → logprob: -19.75
    6. '       ' → logprob: -20.0
    7. 'queue' → logprob: -20.25
    8. '           ' → logprob: -20.875
    9. 'Que' → logprob: -20.875
    10. 'qu' → logprob: -21.25

Token 731: 'oute' (ID: 3509)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.6339423656463623
    2. 'oute' → logprob: -0.8839423656463623
    3. 'que' → logprob: -3.5089423656463623
    4. ' que' → logprob: -4.883942604064941
    5. 'queue' → logprob: -5.133942604064941
    6. 'outer' → logprob: -5.633942604064941
    7. '[' → logprob: -6.508942604064941
    8. '_queue' → logprob: -6.883942604064941
    9. '(' → logprob: -7.133942604064941
    10. '_' → logprob: -7.258942604064941

Token 732: ' ce' (ID: 2357)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004937358666211367
    2. 'nv' → logprob: -5.504937171936035
    3. ' nv' → logprob: -7.129937171936035
    4. 'n' → logprob: -10.379937171936035
    5. '_nv' → logprob: -11.004937171936035
    6. '(nx' → logprob: -11.879937171936035
    7. '	n' → logprob: -13.629937171936035
    8. '(nb' → logprob: -14.629937171936035
    9. '[n' → logprob: -14.629937171936035
    10. ' (' → logprob: -14.754937171936035

Token 733: ' voisin' (ID: 145411)
  Prédit: ' nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nv' → logprob: -0.20187197625637054
    2. 'nv' → logprob: -1.7018719911575317
    3. 'n' → logprob: -8.201871871948242
    4. '_nv' → logprob: -8.701871871948242
    5. '(n' → logprob: -11.826871871948242
    6. '	n' → logprob: -12.076871871948242
    7. ' n' → logprob: -13.451871871948242
    8. '[n' → logprob: -13.701871871948242
    9. ' new' → logprob: -14.701871871948242
    10. 'nvarchar' → logprob: -14.951871871948242

Token 734: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.646986186504364
    2. '(n' → logprob: -1.1469862461090088
    3. 'to' → logprob: -2.021986246109009
    4. ' nv' → logprob: -5.02198600769043
    5. 'nv' → logprob: -5.14698600769043
    6. ')' → logprob: -5.52198600769043
    7. '               ' → logprob: -5.89698600769043
    8. ' into' → logprob: -5.89698600769043
    9. '```' → logprob: -7.27198600769043
    10. 'n' → logprob: -7.27198600769043

Token 735: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5759574174880981
    2. 'que' → logprob: -0.8259574174880981
    3. ' la' → logprob: -11.325957298278809
    4. 'deque' → logprob: -13.200957298278809
    5. 'queue' → logprob: -14.200957298278809
    6. ' deque' → logprob: -14.325957298278809
    7. '```' → logprob: -14.325957298278809
    8. ' queue' → logprob: -14.325957298278809
    9. ' the' → logprob: -14.700957298278809
    10. 'ques' → logprob: -15.450957298278809

Token 736: ' file' (ID: 1974)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0001146291324403137
    2. ' que' → logprob: -9.375114440917969
    3. 'queue' → logprob: -11.250114440917969
    4. '```' → logprob: -11.250114440917969
    5. 'deque' → logprob: -13.125114440917969
    6. 'queued' → logprob: -14.375114440917969
    7. '`' → logprob: -15.500114440917969
    8. ' queue' → logprob: -15.625114440917969
    9. '
' → logprob: -15.875114440917969
    10. 'quee' → logprob: -16.00011444091797

Token 737: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01262830849736929
    2. ' que' → logprob: -4.762628078460693
    3. 'que' → logprob: -5.637628078460693
    4. '```' → logprob: -9.387628555297852
    5. '   ' → logprob: -9.512628555297852
    6. '           ' → logprob: -9.637628555297852
    7. '              ' → logprob: -9.762628555297852
    8. '                
' → logprob: -9.762628555297852
    9. '                   ' → logprob: -10.012628555297852
    10. '       ' → logprob: -10.637628555297852

Token 738: ' explorer' (ID: 73961)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.050117604434490204
    2. ' que' → logprob: -3.0501174926757812
    3. ' exploration' → logprob: -6.550117492675781
    4. 'expl' → logprob: -9.800117492675781
    5. 'queue' → logprob: -11.300117492675781
    6. ' queue' → logprob: -12.050117492675781
    7. 'queued' → logprob: -12.425117492675781
    8. ' ' → logprob: -12.800117492675781
    9. '```' → logprob: -12.925117492675781
    10. 'deque' → logprob: -12.925117492675781

Token 739: ' ses' (ID: 6707)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.7669835090637207
    2. ' que' → logprob: -1.3919835090637207
    3. ' nv' → logprob: -1.8919835090637207
    4. 'nv' → logprob: -2.1419835090637207
    5. '```' → logprob: -4.766983509063721
    6. '(n' → logprob: -5.891983509063721
    7. 'queue' → logprob: -6.391983509063721
    8. 'le' → logprob: -6.391983509063721
    9. '[n' → logprob: -7.391983509063721
    10. '   ' → logprob: -7.391983509063721

Token 740: ' propres' (ID: 73747)
  Prédit: ' voisins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.22281543910503387
    2. 'vo' → logprob: -2.34781551361084
    3. 'neighbors' → logprob: -2.72281551361084
    4. 'adj' → logprob: -3.59781551361084
    5. ' neighbors' → logprob: -5.09781551361084
    6. ' voisin' → logprob: -5.97281551361084
    7. ' vo' → logprob: -7.22281551361084
    8. ' enfants' → logprob: -7.72281551361084
    9. '_neighbors' → logprob: -8.34781551361084
    10. 'en' → logprob: -9.09781551361084

Token 741: ' voisins' (ID: 166720)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.5164207816123962
    2. ' voisins' → logprob: -1.016420841217041
    3. ' neighbors' → logprob: -4.141420841217041
    4. 'adj' → logprob: -4.266420841217041
    5. 'vo' → logprob: -5.016420841217041
    6. ' voisin' → logprob: -5.641420841217041
    7. '_neighbors' → logprob: -6.891420841217041
    8. ' vo' → logprob: -9.766420364379883
    9. 'neighbor' → logprob: -9.766420364379883
    10. ' adj' → logprob: -9.891420364379883

Token 742: ' ult' (ID: 11619)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001839633216150105
    2. '                
' → logprob: -7.376839637756348
    3. 'que' → logprob: -7.626839637756348
    4. ' que' → logprob: -8.126839637756348
    5. '
' → logprob: -8.751839637756348
    6. '```' → logprob: -9.251839637756348
    7. '           ' → logprob: -9.626839637756348
    8. '              ' → logprob: -10.001839637756348
    9. '       ' → logprob: -11.001839637756348
    10. '   ' → logprob: -11.251839637756348

Token 743: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.005478129722177982
    2. 'érieur' → logprob: -5.2554779052734375
    3. 'é' → logprob: -9.630477905273438
    4. 'érie' → logprob: -9.755477905273438
    5. 'éri' → logprob: -10.005477905273438
    6. 'érieures' → logprob: -10.380477905273438
    7. '```' → logprob: -11.380477905273438
    8. 'érieurs' → logprob: -11.630477905273438
    9. 'éralement' → logprob: -12.005477905273438
    10. 'er' → logprob: -12.005477905273438

Token 744: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.07827289402484894
    2. 'nt' → logprob: -2.703272819519043
    3. 'usement' → logprob: -5.828272819519043
    4. 'ent' → logprob: -5.953272819519043
    5. 'ments' → logprob: -7.203272819519043
    6. 'm' → logprob: -7.328272819519043
    7. 't' → logprob: -7.578272819519043
    8. 'vement' → logprob: -8.078272819519043
    9. 'nement' → logprob: -8.828272819519043
    10. 'ement' → logprob: -9.578272819519043

Token 745: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023166537284851074
    2. ' que' → logprob: -7.127316474914551
    3. '                
' → logprob: -7.377316474914551
    4. 'que' → logprob: -7.627316474914551
    5. '
' → logprob: -8.37731647491455
    6. '```' → logprob: -9.87731647491455
    7. '           ' → logprob: -10.12731647491455
    8. '              ' → logprob: -10.25231647491455
    9. '                   ' → logprob: -11.37731647491455
    10. '       ' → logprob: -11.87731647491455

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29854094982147217
    2. ' que' → logprob: -1.9235409498214722
    3. 'que' → logprob: -2.9235410690307617
    4. '
' → logprob: -3.7985410690307617
    5. '                
' → logprob: -3.7985410690307617
    6. '```' → logprob: -4.923541069030762
    7. '``' → logprob: -6.548541069030762
    8. '                   ' → logprob: -7.048541069030762
    9. '
' → logprob: -7.548541069030762
    10. '           ' → logprob: -7.548541069030762

Token 747: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -7.493430894101039e-05
    2. ' que' → logprob: -9.500075340270996
    3. '```' → logprob: -18.37507438659668
    4. '   ' → logprob: -19.25007438659668
    5. 'queue' → logprob: -19.62507438659668
    6. '       ' → logprob: -20.25007438659668
    7. 'queued' → logprob: -20.50007438659668
    8. 'Que' → logprob: -20.62507438659668
    9. 'qu' → logprob: -20.62507438659668
    10. 'deque' → logprob: -20.87507438659668

Token 748: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.625000953674316
    3. '.extend' → logprob: -16.000001907348633
    4. '.enqueue' → logprob: -17.625001907348633
    5. '.Append' → logprob: -18.875001907348633
    6. ' .' → logprob: -19.125001907348633
    7. '.add' → logprob: -20.000001907348633
    8. '.push' → logprob: -20.000001907348633
    9. ').' → logprob: -20.625001907348633
    10. 'append' → logprob: -20.750001907348633

Token 749: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. '(nx' → logprob: -16.5
    4. ' (' → logprob: -18.125
    5. '(nd' → logprob: -18.125
    6. '(
' → logprob: -18.625
    7. '(nb' → logprob: -18.75
    8. '(N' → logprob: -19.25
    9. '(nt' → logprob: -19.375
    10. '(nn' → logprob: -19.875

Token 750: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00038455575122497976
    2. 'nv' → logprob: -8.125384330749512
    3. ' nv' → logprob: -9.875384330749512
    4. 'w' → logprob: -10.500384330749512
    5. 'в' → logprob: -13.000384330749512
    6. '_nv' → logprob: -13.375384330749512
    7. '```' → logprob: -13.500384330749512
    8. 'av' → logprob: -13.875384330749512
    9. 'n' → logprob: -14.750384330749512
    10. '(n' → logprob: -14.750384330749512

Token 751: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. '())' → logprob: -15.875005722045898
    4. '))' → logprob: -16.6250057220459
    5. ' )' → logprob: -16.8750057220459
    6. '()' → logprob: -17.8750057220459
    7. '）' → logprob: -18.2500057220459
    8. ')return' → logprob: -18.5000057220459
    9. ')

' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.7500057220459

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020470064133405685
    2. 'return' → logprob: -4.645470142364502
    3. 'print' → logprob: -5.145470142364502
    4. 'if' → logprob: -6.020470142364502
    5. '
' → logprob: -6.645470142364502
    6. '    
' → logprob: -7.020470142364502
    7. 'main' → logprob: -9.270469665527344
    8. '```' → logprob: -10.020469665527344
    9. ' return' → logprob: -10.770469665527344
    10. '<|end|>' → logprob: -11.145469665527344

Token 753: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03264586627483368
    2. 'print' → logprob: -3.5326459407806396
    3. 'return' → logprob: -5.9076457023620605
    4. '```' → logprob: -8.907646179199219
    5. '
' → logprob: -10.657646179199219
    6. '    
' → logprob: -12.032646179199219
    7. ' return' → logprob: -12.532646179199219
    8. ' print' → logprob: -13.032646179199219
    9. '	return' → logprob: -14.282646179199219
    10. '	print' → logprob: -14.407646179199219

Token 754: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005993809318169951
    2. 'return' → logprob: -7.875599384307861
    3. '   ' → logprob: -8.500598907470703
    4. ' print' → logprob: -11.125598907470703
    5. '#' → logprob: -14.625598907470703
    6. '#print' → logprob: -15.000598907470703
    7. '```' → logprob: -15.250598907470703
    8. ' return' → logprob: -16.750598907470703
    9. '    
' → logprob: -17.250598907470703
    10. '
' → logprob: -17.625598907470703

Token 755: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.7012835741043091
    2. 'icher' → logprob: -0.7012835741043091
    3. 'ich' → logprob: -5.9512834548950195
    4. '#' → logprob: -6.2012834548950195
    5. '   ' → logprob: -6.2012834548950195
    6. 'ichage' → logprob: -7.0762834548950195
    7. 'f' → logprob: -8.20128345489502
    8. 'print' → logprob: -9.07628345489502
    9. '```' → logprob: -9.82628345489502
    10. 'ic' → logprob: -9.95128345489502

Token 756: ' la' (ID: 557)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.000353100651409477
    2. 'S' → logprob: -8.12535285949707
    3. '(' → logprob: -10.00035285949707
    4. '(sum' → logprob: -12.12535285949707
    5. '(s' → logprob: -13.12535285949707
    6. '(f' → logprob: -13.25035285949707
    7. '(
' → logprob: -14.00035285949707
    8. '   ' → logprob: -15.12535285949707
    9. '(max' → logprob: -15.37535285949707
    10. 'print' → logprob: -15.50035285949707

Token 757: ' somme' (ID: 64484)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0010228052269667387
    2. '(S' → logprob: -7.001022815704346
    3. 'print' → logprob: -9.126022338867188
    4. ' S' → logprob: -14.001022338867188
    5. 'sum' → logprob: -14.126022338867188
    6. '(' → logprob: -14.376022338867188
    7. '(sum' → logprob: -15.626022338867188
    8. 's' → logprob: -16.001022338867188
    9. '(max' → logprob: -16.876022338867188
    10. '
' → logprob: -16.876022338867188

Token 758: ' S' (ID: 336)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3082636594772339
    2. '(S' → logprob: -1.5582636594772339
    3. '   ' → logprob: -3.3082637786865234
    4. '(' → logprob: -4.058263778686523
    5. '(print' → logprob: -7.183263778686523
    6. ' print' → logprob: -9.808263778686523
    7. '(
' → logprob: -10.058263778686523
    8. '()' → logprob: -11.183263778686523
    9. '```' → logprob: -11.433263778686523
    10. '
' → logprob: -11.683263778686523

Token 759: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38821569085121155
    2. 'print' → logprob: -1.1382156610488892
    3. '```' → logprob: -6.6382155418396
    4. ' print' → logprob: -10.388216018676758
    5. '``' → logprob: -13.263216018676758
    6. '
' → logprob: -13.638216018676758
    7. '	print' → logprob: -14.763216018676758
    8. '`' → logprob: -15.763216018676758
    9. '       ' → logprob: -17.013216018676758
    10. '\' → logprob: -17.763216018676758

Token 760: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08659768104553223
    2. '()' → logprob: -3.2115976810455322
    3. 'la' → logprob: -3.4615976810455322
    4. 'une' → logprob: -5.836597442626953
    5. 'l' → logprob: -5.961597442626953
    6. 'un' → logprob: -6.586597442626953
    7. '(print' → logprob: -6.836597442626953
    8. '()
' → logprob: -6.961597442626953
    9. 'le' → logprob: -6.961597442626953
    10. '   ' → logprob: -8.211597442626953

Token 761: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013209539465606213
    2. 'single' → logprob: -7.626320838928223
    3. 'prem' → logprob: -8.376320838928223
    4. 'f' → logprob: -9.001320838928223
    5. ' print' → logprob: -9.626320838928223
    6. 'ff' → logprob: -9.876320838928223
    7. 'pp' → logprob: -10.001320838928223
    8. 'r' → logprob: -10.001320838928223
    9. 's' → logprob: -10.626320838928223
    10. 'n' → logprob: -10.876320838928223

Token 762: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032115804497152567
    2. '   ' → logprob: -5.753211498260498
    3. ' print' → logprob: -10.753211975097656
    4. '```' → logprob: -11.378211975097656
    5. '
' → logprob: -13.878211975097656
    6. '	print' → logprob: -16.253211975097656
    7. '``' → logprob: -16.878211975097656
    8. '(print' → logprob: -18.253211975097656
    9. '.print' → logprob: -19.378211975097656
    10. '    
' → logprob: -19.753211975097656

Token 763: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.048592709004879
    2. '   ' → logprob: -3.0485928058624268
    3. ' print' → logprob: -12.673592567443848
    4. '```' → logprob: -13.048592567443848
    5. '	print' → logprob: -17.548593521118164
    6. '
' → logprob: -19.048593521118164
    7. '``' → logprob: -19.548593521118164
    8. '       ' → logprob: -19.923593521118164
    9. '`' → logprob: -20.423593521118164
    10. 'println' → logprob: -20.798593521118164

Token 764: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.750000953674316
    3. ' print' → logprob: -16.5
    4. '   ' → logprob: -18.25
    5. '``' → logprob: -22.875
    6. '
' → logprob: -23.875
    7. '	print' → logprob: -24.25
    8. '#print' → logprob: -26.25
    9. 'println' → logprob: -26.25
    10. '`' → logprob: -26.375

Token 765: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.029767150059342384
    2. '(' → logprob: -3.5297670364379883
    3. '()' → logprob: -11.654767036437988
    4. '(s' → logprob: -12.779767036437988
    5. '(
' → logprob: -13.154767036437988
    6. ' (' → logprob: -13.154767036437988
    7. '(sum' → logprob: -14.529767036437988
    8. '('' → logprob: -15.279767036437988
    9. '((' → logprob: -15.529767036437988
    10. '("' → logprob: -15.904767036437988

Token 766: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0484450437361374e-05
    2. ')
' → logprob: -10.125040054321289
    3. ' )' → logprob: -16.25004005432129
    4. '()' → logprob: -16.75004005432129
    5. '())' → logprob: -16.87504005432129
    6. ')

' → logprob: -16.87504005432129
    7. ')
' → logprob: -17.25004005432129
    8. ')`' → logprob: -18.00004005432129
    9. '),' → logprob: -18.25004005432129
    10. ')}' → logprob: -18.75004005432129

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010004170471802354
    2. 'print' → logprob: -7.50100040435791
    3. '```' → logprob: -7.75100040435791
    4. '    
' → logprob: -11.50100040435791
    5. '``' → logprob: -13.00100040435791
    6. '[' → logprob: -14.12600040435791
    7. '       ' → logprob: -14.12600040435791
    8. '#' → logprob: -14.37600040435791
    9. '	print' → logprob: -14.50100040435791
    10. '
' → logprob: -14.62600040435791

Token 768: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013691288768313825
    2. 'print' → logprob: -9.000137329101562
    3. '#' (adapté à ' #') → logprob: -11.250137329101562
    4. '```' → logprob: -15.375137329101562
    5. '
' → logprob: -16.625137329101562
    6. '    
' → logprob: -16.875137329101562
    7. '	print' → logprob: -17.875137329101562
    8. '       ' → logprob: -18.125137329101562
    9. '#print' → logprob: -18.875137329101562
    10. '	' → logprob: -18.875137329101562

Token 769: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017040544480551034
    2. '#' → logprob: -9.000170707702637
    3. '   ' → logprob: -10.000170707702637
    4. ' print' → logprob: -13.875170707702637
    5. '#print' → logprob: -14.875170707702637
    6. 'for' → logprob: -15.000170707702637
    7. '
' → logprob: -19.00016975402832
    8. 'return' → logprob: -19.25016975402832
    9. '```' → logprob: -20.00016975402832
    10. '    
' → logprob: -20.25016975402832

Token 770: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -3.0590548703912646e-05
    2. 'icher' → logprob: -10.500030517578125
    3. 'ichage' → logprob: -13.875030517578125
    4. 'ic' → logprob: -14.125030517578125
    5. 'ice' → logprob: -14.500030517578125
    6. 'ich' → logprob: -14.875030517578125
    7. '#' → logprob: -16.000030517578125
    8. '(' → logprob: -16.250030517578125
    9. 'iches' → logprob: -16.375030517578125
    10. 'che' → logprob: -17.000030517578125

Token 771: ' toutes' (ID: 17502)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.01703030616044998
    2. '('' → logprob: -4.267030239105225
    3. '("' → logprob: -6.017030239105225
    4. '(' → logprob: -7.767030239105225
    5. '(*)' → logprob: -13.892030715942383
    6. '()' → logprob: -14.267030715942383
    7. '(*(' → logprob: -14.392030715942383
    8. '*' → logprob: -15.642030715942383
    9. ' (*' → logprob: -16.142030715942383
    10. '(
' → logprob: -16.767030715942383

Token 772: ' les' (ID: 1341)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0008000997477211058
    2. '(' → logprob: -7.250800132751465
    3. '('' → logprob: -9.750800132751465
    4. '("' → logprob: -10.875800132751465
    5. '(*)' → logprob: -12.000800132751465
    6. '(ans' → logprob: -12.125800132751465
    7. '()' → logprob: -14.000800132751465
    8. '(
' → logprob: -15.000800132751465
    9. '(*(' → logprob: -16.25079917907715
    10. ' (*' → logprob: -16.50079917907715

Token 773: ' valeurs' (ID: 73668)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6802982687950134
    2. '(*' → logprob: -1.1802983283996582
    3. 'ans' → logprob: -1.6802983283996582
    4. '(' → logprob: -10.6802978515625
    5. '*' → logprob: -12.9302978515625
    6. ' ans' → logprob: -13.8052978515625
    7. '(
' → logprob: -14.0552978515625
    8. '(*)' → logprob: -14.8052978515625
    9. '	ans' → logprob: -14.9302978515625
    10. 'ANS' → logprob: -15.3052978515625

Token 774: ' attrib' (ID: 72186)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -3.976922744186595e-05
    2. '(' → logprob: -10.875040054321289
    3. '("' → logprob: -11.500040054321289
    4. '('' → logprob: -11.625040054321289
    5. '(*)' → logprob: -13.875040054321289
    6. '()' → logprob: -15.000040054321289
    7. '(ans' → logprob: -15.875040054321289
    8. '*' → logprob: -16.12504005432129
    9. '(*(' → logprob: -16.12504005432129
    10. ' (*' → logprob: -16.50004005432129

Token 775: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.013914664275944233
    2. 'uée' → logprob: -4.763914585113525
    3. 'ué' → logprob: -5.513914585113525
    4. ' u' → logprob: -7.638914585113525
    5. '[u' → logprob: -8.513915061950684
    6. 'ue' → logprob: -8.888915061950684
    7. '   ' → logprob: -8.888915061950684
    8. 'uer' → logprob: -9.513915061950684
    9. 'ées' → logprob: -10.013915061950684
    10. 'érées' → logprob: -10.263915061950684

Token 776: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.05013813450932503
    2. 'es' → logprob: -3.425138235092163
    3. 'és' → logprob: -4.425137996673584
    4. 'ed' → logprob: -5.800137996673584
    5. ''' → logprob: -8.300138473510742
    6. 'ée' → logprob: -8.425138473510742
    7. ' aux' → logprob: -8.550138473510742
    8. 'é' → logprob: -8.925138473510742
    9. '   ' → logprob: -9.175138473510742
    10. ' à' → logprob: -9.550138473510742

Token 777: ' dans' (ID: 2671)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0014095203951001167
    2. '("' → logprob: -7.626409530639648
    3. '('' → logprob: -7.626409530639648
    4. '(' → logprob: -8.126409530639648
    5. '(ans' → logprob: -9.001409530639648
    6. '()' → logprob: -12.001409530639648
    7. '(*)' → logprob: -12.501409530639648
    8. 'ans' → logprob: -13.251409530639648
    9. '   ' → logprob: -13.626409530639648
    10. '(*(' → logprob: -14.626409530639648

Token 778: ' l' (ID: 305)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18004336953163147
    2. '(*' → logprob: -2.5550434589385986
    3. '(ans' → logprob: -2.5550434589385986
    4. ' ans' → logprob: -5.5550432205200195
    5. '*' → logprob: -5.8050432205200195
    6. '"' → logprob: -6.6800432205200195
    7. ''' → logprob: -7.4300432205200195
    8. '('' → logprob: -7.8050432205200195
    9. 'print' → logprob: -8.93004322052002
    10. '("' → logprob: -9.55504322052002

Token 779: ''ordre' (ID: 124753)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7097387909889221
    2. 'a' → logprob: -1.3347387313842773
    3. 'print' → logprob: -2.3347387313842773
    4. 'ine' → logprob: -2.5847387313842773
    5. 'ist' → logprob: -3.2097387313842773
    6. '('' → logprob: -5.209738731384277
    7. '(*' → logprob: -5.459738731384277
    8. '   ' → logprob: -5.834738731384277
    9. 'e' → logprob: -5.834738731384277
    10. 'st' → logprob: -5.834738731384277

Token 780: ' des' (ID: 731)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.16123686730861664
    2. 'print' → logprob: -1.9112368822097778
    3. '(ans' → logprob: -7.536236763000488
    4. '(' → logprob: -8.161236763000488
    5. '(print' → logprob: -9.411236763000488
    6. 'ans' → logprob: -10.286236763000488
    7. '*' → logprob: -10.661236763000488
    8. '   ' → logprob: -10.911236763000488
    9. '(*(' → logprob: -11.786236763000488
    10. ' print' → logprob: -12.161236763000488

Token 781: ' somm' (ID: 44830)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003627150785177946
    2. ' ans' → logprob: -5.878627300262451
    3. '(ans' → logprob: -7.128627300262451
    4. 'range' → logprob: -10.878626823425293
    5. '_ans' → logprob: -14.878626823425293
    6. '	ans' → logprob: -15.128626823425293
    7. ' range' → logprob: -15.503626823425293
    8. 'ann' → logprob: -16.00362777709961
    9. '[' → logprob: -16.00362777709961
    10. 'answer' → logprob: -16.37862777709961

Token 782: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.2521192133426666
    2. 'es' → logprob: -1.5021191835403442
    3. 'et' → logprob: -9.502119064331055
    4. 'ètres' → logprob: -10.002119064331055
    5. 'és' → logprob: -10.252119064331055
    6. 'ès' → logprob: -11.002119064331055
    7. 'ètes' → logprob: -12.252119064331055
    8. 'e' → logprob: -13.127119064331055
    9. 'ices' → logprob: -13.502119064331055
    10. '#' → logprob: -13.752119064331055

Token 783: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18328815698623657
    2. 'print' → logprob: -1.8082880973815918
    3. '()' → logprob: -6.183288097381592
    4. '()
' → logprob: -6.808288097381592
    5. '(' → logprob: -9.30828857421875
    6. '
' → logprob: -9.30828857421875
    7. ' print' → logprob: -10.30828857421875
    8. '(ans' → logprob: -10.30828857421875
    9. '('\' → logprob: -10.55828857421875
    10. ',' → logprob: -10.55828857421875

Token 784: ' les' (ID: 1341)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.13585364818572998
    2. 'print' → logprob: -2.5108537673950195
    3. ' ans' → logprob: -3.1358537673950195
    4. 'ans' → logprob: -6.3858537673950195
    5. '(ans' → logprob: -8.76085376739502
    6. ''' → logprob: -8.88585376739502
    7. ' space' → logprob: -9.26085376739502
    8. ' a' → logprob: -9.51085376739502
    9. 's' → logprob: -10.26085376739502
    10. ' single' → logprob: -10.38585376739502

Token 785: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005651578772813082
    2. ' print' → logprob: -5.255651473999023
    3. 'map' → logprob: -8.005651473999023
    4. 'ans' → logprob: -9.755651473999023
    5. ' map' → logprob: -11.130651473999023
    6. 'sep' → logprob: -12.380651473999023
    7. ' ans' → logprob: -13.380651473999023
    8. 'join' → logprob: -13.755651473999023
    9. 'se' → logprob: -13.880651473999023
    10. ')' → logprob: -14.380651473999023

Token 786: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.35884907841682434
    2. 'print' → logprob: -2.108849048614502
    3. 'é' → logprob: -2.608849048614502
    4. 'e' → logprob: -2.983849048614502
    5. 'ées' → logprob: -4.608849048614502
    6. 'par' → logprob: -4.608849048614502
    7. 'és' → logprob: -4.733849048614502
    8. ' par' → logprob: -5.108849048614502
    9. 'er' → logprob: -5.233849048614502
    10. 'space' → logprob: -6.233849048614502

Token 787: ' par' (ID: 686)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.3929355144500732
    2. ''' → logprob: -1.5179355144500732
    3. ' par' → logprob: -1.5179355144500732
    4. 'par' → logprob: -2.1429355144500732
    5. 'print' → logprob: -2.2679355144500732
    6. 'by' → logprob: -3.1429355144500732
    7. '"' → logprob: -3.8929355144500732
    8. '='' → logprob: -4.142935752868652
    9. '("' → logprob: -6.142935752868652
    10. 'with' → logprob: -6.267935752868652

Token 788: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.051663413643836975
    2. ''espace' → logprob: -4.551663398742676
    3. 'es' → logprob: -4.801663398742676
    4. ''esp' → logprob: -4.926663398742676
    5. 'esp' → logprob: -5.301663398742676
    6. '"' → logprob: -5.426663398742676
    7. ' espaces' → logprob: -5.551663398742676
    8. ' '' → logprob: -5.926663398742676
    9. 'space' → logprob: -6.176663398742676
    10. ' espace' → logprob: -6.426663398742676

Token 789: ' espaces' (ID: 98361)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6037976741790771
    2. ' espaces' → logprob: -1.7287976741790771
    3. 'space' → logprob: -2.103797674179077
    4. ''espace' → logprob: -3.103797674179077
    5. 'esp' → logprob: -3.603797674179077
    6. ' space' → logprob: -3.978797674179077
    7. ''esp' → logprob: -4.228797912597656
    8. ' espace' → logprob: -4.603797912597656
    9. 'es' → logprob: -4.603797912597656
    10. 'spaces' → logprob: -4.603797912597656

Token 790: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47465988993644714
    2. '   ' → logprob: -0.9746599197387695
    3. ' print' → logprob: -7.4746599197387695
    4. ',' → logprob: -11.97465991973877
    5. '
' → logprob: -12.34965991973877
    6. '	print' → logprob: -13.34965991973877
    7. '  ' → logprob: -13.97465991973877
    8. '(print' → logprob: -14.59965991973877
    9. '```' → logprob: -14.59965991973877
    10. '#print' → logprob: -14.84965991973877

Token 791: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00020389800192788243
    2. ' print' → logprob: -8.750204086303711
    3. '   ' → logprob: -10.000204086303711
    4. '```' → logprob: -18.62520408630371
    5. '	print' → logprob: -20.62520408630371
    6. '`' → logprob: -21.00020408630371
    7. '
' → logprob: -21.50020408630371
    8. ',' → logprob: -22.00020408630371
    9. '(print' → logprob: -22.12520408630371
    10. '  ' → logprob: -22.37520408630371

Token 792: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -23.375
    4. '```' → logprob: -24.625
    5. 'for' → logprob: -25.875
    6. '`' → logprob: -27.125
    7. '	print' → logprob: -27.25
    8. '
' → logprob: -28.125
    9. 'printf' → logprob: -28.125
    10. '#print' → logprob: -28.5

Token 793: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '   ' → logprob: -18.25
    4. '
' → logprob: -23.875
    5. '```' → logprob: -24.5
    6. '	print' → logprob: -25.375
    7. '#print' → logprob: -26.625
    8. '    
' → logprob: -26.625
    9. '#' → logprob: -27.625
    10. '`' → logprob: -27.875

Token 794: ' *' (ID: 425)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1019271612167358
    2. '*' → logprob: -1.1019271612167358
    3. 'print' → logprob: -1.7269271612167358
    4. ''' → logprob: -1.8519271612167358
    5. ' print' → logprob: -8.351926803588867
    6. ' *' → logprob: -8.976926803588867
    7. 'end' → logprob: -9.351926803588867
    8. '"*' → logprob: -9.351926803588867
    9. ''end' → logprob: -9.601926803588867
    10. '(*' → logprob: -9.851926803588867

Token 795: ' dé' (ID: 2393)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004086947068572044
    2. ' ans' → logprob: -5.504086971282959
    3. 'args' → logprob: -12.7540864944458
    4. '(ans' → logprob: -12.8790864944458
    5. '	ans' → logprob: -13.8790864944458
    6. 'print' → logprob: -14.2540864944458
    7. '*' → logprob: -14.5040864944458
    8. 'answer' → logprob: -14.7540864944458
    9. '_ans' → logprob: -15.7540864944458
    10. 'an' → logprob: -15.8790864944458

Token 796: 'compose' (ID: 65322)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0719575509428978
    2. 'ans' → logprob: -2.696957588195801
    3. 'pack' → logprob: -7.696957588195801
    4. 'un' → logprob: -7.946957588195801
    5. '*' → logprob: -8.6969575881958
    6. 'é' → logprob: -9.0719575881958
    7. 'e' → logprob: -9.1969575881958
    8. ' unpack' → logprob: -9.1969575881958
    9. '#print' → logprob: -9.1969575881958
    10. 's' → logprob: -9.3219575881958

Token 797: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00010223194840364158
    2. '(ans' → logprob: -9.625102043151855
    3. ' ans' → logprob: -10.250102043151855
    4. '   ' → logprob: -15.125102043151855
    5. '	ans' → logprob: -15.375102043151855
    6. 'args' → logprob: -16.875102996826172
    7. 'Ans' → logprob: -17.000102996826172
    8. 'print' → logprob: -17.625102996826172
    9. '_ans' → logprob: -17.625102996826172
    10. ' ' → logprob: -17.875102996826172

Token 798: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.45848218582978e-06
    2. ' ans' → logprob: -13.00000286102295
    3. 'list' → logprob: -15.62500286102295
    4. '	ans' → logprob: -19.750001907348633
    5. '(ans' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.250001907348633
    7. 'args' → logprob: -20.250001907348633
    8. 'array' → logprob: -20.375001907348633
    9. '_ans' → logprob: -21.000001907348633
    10. 'answer' → logprob: -21.125001907348633

Token 799: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0629625990986824
    2. ' ans' → logprob: -2.812962532043457
    3. 'print' → logprob: -7.062962532043457
    4. '(ans' → logprob: -8.937962532043457
    5. ' print' → logprob: -12.562962532043457
    6. '   ' → logprob: -12.937962532043457
    7. 'args' → logprob: -14.562962532043457
    8. '	ans' → logprob: -15.437962532043457
    9. '(*' → logprob: -16.562963485717773
    10. ',' → logprob: -16.812963485717773

Token 800: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01271471194922924
    2. ' print' → logprob: -4.512714862823486
    3. ',' → logprob: -6.887714862823486
    4. '   ' → logprob: -8.262714385986328
    5. ' ans' → logprob: -8.887714385986328
    6. '(ans' → logprob: -8.887714385986328
    7. 'ans' → logprob: -9.512714385986328
    8. '(*' → logprob: -11.137714385986328
    9. '(print' → logprob: -11.512714385986328
    10. ')' → logprob: -11.762714385986328

Token 801: ' arguments' (ID: 11917)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00523719098418951
    2. ' ans' → logprob: -5.255237102508545
    3. 'args' → logprob: -12.880237579345703
    4. '(ans' → logprob: -14.755237579345703
    5. 'Ans' → logprob: -16.005237579345703
    6. ' ' → logprob: -16.005237579345703
    7. '	ans' → logprob: -16.005237579345703
    8. '   ' → logprob: -16.630237579345703
    9. '_ans' → logprob: -17.130237579345703
    10. 'print' → logprob: -17.130237579345703

Token 802: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003542926860973239
    2. ' print' → logprob: -8.250354766845703
    3. '   ' → logprob: -9.375354766845703
    4. ',' → logprob: -11.750354766845703
    5. '
' → logprob: -15.875354766845703
    6. ')' → logprob: -16.750354766845703
    7. 'ans' → logprob: -17.000354766845703
    8. ' ' → logprob: -17.500354766845703
    9. '.print' → logprob: -18.000354766845703
    10. '(print' → logprob: -18.250354766845703

Token 803: 'és' (ID: 1756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1871919631958008
    2. ''' → logprob: -1.6871919631958008
    3. 'par' → logprob: -1.8121919631958008
    4. 'é' → logprob: -2.312191963195801
    5. 'és' → logprob: -2.437191963195801
    6. 'e' → logprob: -3.187191963195801
    7. ' par' → logprob: -3.937191963195801
    8. 'au' → logprob: -4.312191963195801
    9. 'space' → logprob: -4.687191963195801
    10. 'ateur' → logprob: -4.687191963195801

Token 804: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016765760257840157
    2. ' print' → logprob: -4.141765594482422
    3. ',' → logprob: -8.141765594482422
    4. '   ' → logprob: -8.641765594482422
    5. ')' → logprob: -9.141765594482422
    6. 'ans' → logprob: -10.016765594482422
    7. ' ans' → logprob: -10.141765594482422
    8. '(print' → logprob: -10.141765594482422
    9. '(ans' → logprob: -11.266765594482422
    10. '=' → logprob: -11.766765594482422

Token 805: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012368128227535635
    2. ' print' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.125123977661133
    4. '```' → logprob: -18.500123977661133
    5. '#print' → logprob: -19.750123977661133
    6. 'end' → logprob: -19.750123977661133
    7. '`' → logprob: -19.875123977661133
    8. ' ' → logprob: -19.875123977661133
    9. '	print' → logprob: -20.000123977661133
    10. '(print' → logprob: -20.000123977661133

Token 806: '
' (ID: 198)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.08599766343832016
    2. '(ans' → logprob: -2.7109975814819336
    3. '(' → logprob: -4.960997581481934
    4. 'print' → logprob: -5.085997581481934
    5. ',' → logprob: -6.585997581481934
    6. '   ' → logprob: -7.335997581481934
    7. 'ans' → logprob: -8.460997581481934
    8. ' ans' → logprob: -8.960997581481934
    9. '(print' → logprob: -8.960997581481934
    10. ' (*' → logprob: -9.710997581481934

Token 807: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015463477931916714
    2. '*' → logprob: -4.265463352203369
    3. '(*' → logprob: -7.015463352203369
    4. 'ans' → logprob: -8.515463829040527
    5. ' print' → logprob: -8.640463829040527
    6. '(ans' → logprob: -11.140463829040527
    7. '   ' → logprob: -12.390463829040527
    8. ' ans' → logprob: -12.765463829040527
    9. ' *' → logprob: -13.015463829040527
    10. '```' → logprob: -15.890463829040527

Token 808: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.25
    3. '   ' → logprob: -20.125
    4. '(print' → logprob: -21.875
    5. '#print' → logprob: -24.0
    6. '	print' → logprob: -24.125
    7. '```' → logprob: -25.375
    8. 'printf' → logprob: -25.625
    9. '(*' → logprob: -25.875
    10. 'ans' → logprob: -26.125

Token 809: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00033581978641450405
    2. '(' → logprob: -8.000335693359375
    3. '(*)' → logprob: -15.125335693359375
    4. '(
' → logprob: -16.250335693359375
    5. '*' → logprob: -17.625335693359375
    6. '(ans' → logprob: -18.750335693359375
    7. ' (*' → logprob: -18.875335693359375
    8. '(*(' → logprob: -20.000335693359375
    9. '()' → logprob: -20.250335693359375
    10. '((*' → logprob: -20.375335693359375

Token 810: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. ' ans' → logprob: -16.75
    3. '(ans' → logprob: -17.875
    4. '	ans' → logprob: -21.875
    5. 'Ans' → logprob: -23.5
    6. 'ANS' → logprob: -23.625
    7. '[' → logprob: -24.25
    8. 'ann' → logprob: -24.5
    9. 'answer' → logprob: -24.75
    10. '   ' → logprob: -24.75

Token 811: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.375001907348633
    4. ')#' → logprob: -16.750001907348633
    5. ',' → logprob: -17.875001907348633
    6. ')}' → logprob: -18.625001907348633
    7. ',)' → logprob: -18.625001907348633
    8. ')
' → logprob: -18.625001907348633
    9. '),' → logprob: -18.750001907348633
    10. '())' → logprob: -18.875001907348633

Token 812: '#' (ID: 2)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5766578912734985
    2. 'if' → logprob: -0.8266578912734985
    3. '(main' → logprob: -8.326658248901367
    4. '```' → logprob: -8.576658248901367
    5. '<|end|>' → logprob: -9.076658248901367
    6. '
' → logprob: -9.826658248901367
    7. '#' → logprob: -10.076658248901367
    8. ' main' → logprob: -10.451658248901367
    9. ' if' → logprob: -10.701658248901367
    10. 'print' → logprob: -11.701658248901367

Token 813: ' Point' (ID: 9971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02975245751440525
    2. 'main' → logprob: -3.529752492904663
    3. ' if' → logprob: -13.404752731323242
    4. '(main' → logprob: -15.529752731323242
    5. ' main' → logprob: -15.904752731323242
    6. '__' → logprob: -16.654752731323242
    7. '#' → logprob: -16.779752731323242
    8. '
' → logprob: -18.154752731323242
    9. '#if' → logprob: -18.654752731323242
    10. 'print' → logprob: -18.904752731323242

Token 814: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017954541370272636
    2. ' if' → logprob: -4.642954349517822
    3. '_' → logprob: -5.517954349517822
    4. 'd' → logprob: -6.017954349517822
    5. ' d' → logprob: -6.642954349517822
    6. '_d' → logprob: -9.51795482635498
    7. '_if' → logprob: -9.64295482635498
    8. '  
' → logprob: -9.76795482635498
    9. '#' → logprob: -10.14295482635498
    10. 's' → logprob: -10.64295482635498

Token 815: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.25385117530822754
    2. 'entrée' → logprob: -1.5038511753082275
    3. 'entr' → logprob: -7.253850936889648
    4. ''ex' → logprob: -7.878850936889648
    5. '__' → logprob: -8.378850936889648
    6. 'if' → logprob: -8.503850936889648
    7. '’entrée' → logprob: -9.253850936889648
    8. ''ent' → logprob: -9.628850936889648
    9. 'ex' → logprob: -9.628850936889648
    10. ''' → logprob: -10.003850936889648

Token 816: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006759543903172016
    2. '
' → logprob: -5.0067596435546875
    3. ' if' → logprob: -10.381759643554688
    4. '

' → logprob: -12.006759643554688
    5. '```' → logprob: -12.006759643554688
    6. '``' → logprob: -16.131759643554688
    7. '
' → logprob: -16.381759643554688
    8. '  
' → logprob: -16.381759643554688
    9. '\n' → logprob: -16.381759643554688
    10. '#' → logprob: -16.506759643554688

Token 817: ' programme' (ID: 18190)
  Prédit: 'script'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'script' → logprob: -0.7546246647834778
    2. 'programme' → logprob: -1.379624605178833
    3. ' script' → logprob: -1.504624605178833
    4. 'program' → logprob: -3.504624605178833
    5. ' programme' → logprob: -4.254624843597412
    6. 'if' → logprob: -4.629624843597412
    7. 'programm' → logprob: -7.254624843597412
    8. 'code' → logprob: -7.879624843597412
    9. 'python' → logprob: -8.504624366760254
    10. 'module' → logprob: -8.754624366760254

Token 818: ' :' (ID: 712)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002506697317585349
    2. '
' → logprob: -6.002506732940674
    3. 'main' → logprob: -10.502506256103516
    4. ' if' → logprob: -13.002506256103516
    5. '```' → logprob: -13.752506256103516
    6. '

' → logprob: -15.377506256103516
    7. '  
' → logprob: -18.502506256103516
    8. '``' → logprob: -18.752506256103516
    9. '    
' → logprob: -18.752506256103516
    10. '(main' → logprob: -19.377506256103516

Token 819: ' ex' (ID: 513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004309076175559312
    2. 'main' → logprob: -7.750431060791016
    3. ' if' → logprob: -15.250431060791016
    4. '```' → logprob: -20.000431060791016
    5. ' main' → logprob: -20.375431060791016
    6. '
' → logprob: -20.875431060791016
    7. '__' → logprob: -23.500431060791016
    8. 'If' → logprob: -24.375431060791016
    9. '(main' → logprob: -24.500431060791016
    10. '

' → logprob: -25.500431060791016

Token 820: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.8057740330696106
    2. 'ec' → logprob: -1.0557739734649658
    3. 'if' → logprob: -1.6807739734649658
    4. 'ecut' → logprob: -4.805774211883545
    5. 'éc' → logprob: -5.180774211883545
    6. 'ecution' → logprob: -6.305774211883545
    7. 'ecu' → logprob: -6.680774211883545
    8. '
' → logprob: -6.930774211883545
    9. 'ecutable' → logprob: -7.680774211883545
    10. '```' → logprob: -8.680773735046387

Token 821: 'ute' (ID: 1331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31170397996902466
    2. 'éc' → logprob: -1.6867039203643799
    3. 'ecute' → logprob: -3.06170392036438
    4. 'ec' → logprob: -3.43670392036438
    5. 'écut' → logprob: -6.811704158782959
    6. 'écution' → logprob: -7.061704158782959
    7. 'é' → logprob: -7.061704158782959
    8. 'ecut' → logprob: -7.686704158782959
    9. 'ecution' → logprob: -8.5617036819458
    10. '#' → logprob: -9.8117036819458

Token 822: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12704570591449738
    2. 'if' → logprob: -2.1270456314086914
    3. '__' → logprob: -9.127045631408691
    4. '
' → logprob: -12.627045631408691
    5. ' main' → logprob: -13.002045631408691
    6. '(main' → logprob: -13.502045631408691
    7. '```' → logprob: -14.002045631408691
    8. '_main' → logprob: -14.127045631408691
    9. ' if' → logprob: -16.252046585083008
    10. '\
' → logprob: -16.377046585083008

Token 823: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4742138087749481
    2. 'if' → logprob: -0.9742138385772705
    3. '__' → logprob: -9.099213600158691
    4. ' main' → logprob: -10.849213600158691
    5. '```' → logprob: -12.724213600158691
    6. ' if' → logprob: -13.349213600158691
    7. 'def' → logprob: -15.099213600158691
    8. '
' → logprob: -15.474213600158691
    9. '_main' → logprob: -15.724213600158691
    10. 'python' → logprob: -15.974213600158691

Token 824: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00028970264247618616
    2. 'if' → logprob: -8.250289916992188
    3. '__' → logprob: -10.500289916992188
    4. ' main' → logprob: -14.000289916992188
    5. '```' → logprob: -17.625289916992188
    6. '(main' → logprob: -17.750289916992188
    7. '`' → logprob: -19.375289916992188
    8. '_main' → logprob: -20.000289916992188
    9. '	main' → logprob: -20.250289916992188
    10. ' __' → logprob: -20.250289916992188

Token 825: ' uniquement' (ID: 65527)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06244936212897301
    2. '
' → logprob: -2.8124494552612305
    3. 'main' → logprob: -7.6874494552612305
    4. ' if' → logprob: -11.81244945526123
    5. '

' → logprob: -12.18744945526123
    6. '(main' → logprob: -12.43744945526123
    7. '```' → logprob: -12.93744945526123
    8. '  
' → logprob: -13.56244945526123
    9. '
' → logprob: -13.68744945526123
    10. '    
' → logprob: -14.68744945526123

Token 826: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.162282367469743e-05
    2. '
' → logprob: -9.625091552734375
    3. ' if' → logprob: -10.625091552734375
    4. '

' → logprob: -14.375091552734375
    5. '```' → logprob: -14.375091552734375
    6. '#if' → logprob: -18.750091552734375
    7. '``' → logprob: -19.125091552734375
    8. '
' → logprob: -19.125091552734375
    9. '#' → logprob: -19.375091552734375
    10. 'when' → logprob: -20.250091552734375

Token 827: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0052342405542731285
    2. ' __' → logprob: -5.255234241485596
    3. 'name' → logprob: -14.755233764648438
    4. ' ' → logprob: -17.630233764648438
    5. ' name' → logprob: -18.505233764648438
    6. '_name' → logprob: -18.880233764648438
    7. '/__' → logprob: -19.505233764648438
    8. '```' → logprob: -19.755233764648438
    9. '.__' → logprob: -20.005233764648438
    10. '___' → logprob: -20.130233764648438

Token 828: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0046852570958435535
    2. ' __' → logprob: -5.754685401916504
    3. 'name' → logprob: -6.879685401916504
    4. 'if' → logprob: -8.004685401916504
    5. '_' → logprob: -10.629685401916504
    6. ' ==' → logprob: -10.754685401916504
    7. 'is' → logprob: -11.004685401916504
    8. '==' → logprob: -11.004685401916504
    9. '_name' → logprob: -11.004685401916504
    10. ' if' → logprob: -11.754685401916504

Token 829: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006340872962027788
    2. 'is' → logprob: -6.006340980529785
    3. 'if' → logprob: -6.256340980529785
    4. 'name' → logprob: -7.506340980529785
    5. '==' → logprob: -7.881340980529785
    6. '```' → logprob: -8.006340980529785
    7. ' __' → logprob: -8.381340980529785
    8. ' is' → logprob: -8.881340980529785
    9. '.py' → logprob: -9.381340980529785
    10. '.__' → logprob: -9.381340980529785

Token 830: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011817998252809048
    2. ' exécut' → logprob: -4.886817932128906
    3. ' __' → logprob: -6.386817932128906
    4. 'execut' → logprob: -6.761817932128906
    5. '_ex' → logprob: -7.511817932128906
    6. ' executed' → logprob: -8.386817932128906
    7. ' run' → logprob: -8.761817932128906
    8. '_run' → logprob: -8.886817932128906
    9. 'ex' → logprob: -9.386817932128906
    10. 'run' → logprob: -9.761817932128906

Token 831: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018299540504813194
    2. 'if' → logprob: -4.268299579620361
    3. 'able' → logprob: -7.268299579620361
    4. ' as' → logprob: -7.393299579620361
    5. 'é' → logprob: -7.643299579620361
    6. 'ed' → logprob: -8.393299102783203
    7. 'd' → logprob: -8.518299102783203
    8. ' __' → logprob: -8.643299102783203
    9. ' if' → logprob: -8.643299102783203
    10. 'e' → logprob: -8.768299102783203

Token 832: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06101743504405022
    2. ' if' → logprob: -3.1860175132751465
    3. '__' → logprob: -4.1860175132751465
    4. '```' → logprob: -7.0610175132751465
    5. '
' → logprob: -7.1860175132751465
    6. ' as' → logprob: -7.5610175132751465
    7. 'as' → logprob: -9.186017036437988
    8. '.__' → logprob: -9.811017036437988
    9. ' __' → logprob: -10.311017036437988
    10. '#if' → logprob: -10.436017036437988

Token 833: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02105141431093216
    2. 'un' → logprob: -4.271051406860352
    3. 'le' → logprob: -5.271051406860352
    4. ' le' → logprob: -7.271051406860352
    5. ' __' → logprob: -7.271051406860352
    6. ' un' → logprob: -8.896051406860352
    7. 'script' → logprob: -10.271051406860352
    8. '```' → logprob: -10.396051406860352
    9. ' script' → logprob: -10.521051406860352
    10. '_le' → logprob: -10.646051406860352

Token 834: ' principal' (ID: 10589)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0235439520329237
    2. '
' → logprob: -3.8985438346862793
    3. '```' → logprob: -6.273543834686279
    4. ' if' → logprob: -6.898543834686279
    5. '

' → logprob: -9.898544311523438
    6. '``' → logprob: -10.398544311523438
    7. '__' → logprob: -11.773544311523438
    8. '
' → logprob: -12.273544311523438
    9. '\n' → logprob: -12.648544311523438
    10. '    
' → logprob: -13.398544311523438

Token 835: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5762221813201904
    2. '
' → logprob: -0.8262221813201904
    3. '```' → logprob: -9.07622241973877
    4. '

' → logprob: -9.20122241973877
    5. ' if' → logprob: -9.95122241973877
    6. '
' → logprob: -11.32622241973877
    7. '\n' → logprob: -13.07622241973877
    8. '  
' → logprob: -13.07622241973877
    9. '``' → logprob: -13.45122241973877
    10. '    
' → logprob: -14.57622241973877

Token 836: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003999211359769106
    2. '
' → logprob: -6.00399923324585
    3. '```' → logprob: -6.50399923324585
    4. ' if' → logprob: -10.753998756408691
    5. '``' → logprob: -12.878998756408691
    6. '

' → logprob: -14.378998756408691
    7. '\n' → logprob: -16.003999710083008
    8. '  
' → logprob: -16.378999710083008
    9. '\
' → logprob: -16.753999710083008
    10. '    
' → logprob: -16.753999710083008

Token 837: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741036295890808
    2. ' __' → logprob: -0.9741036295890808
    3. ' ' → logprob: -11.474103927612305
    4. ' ' → logprob: -11.599103927612305
    5. 'name' → logprob: -12.224103927612305
    6. '_name' → logprob: -14.099103927612305
    7. '﻿' → logprob: -15.474103927612305
    8. ' ' → logprob: -15.474103927612305
    9. '_' → logprob: -15.724103927612305
    10. '___' → logprob: -15.974103927612305

Token 838: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.010012470185756683
    2. '==' → logprob: -4.760012626647949
    3. ' ==' → logprob: -6.885012626647949
    4. 'name' → logprob: -8.88501262664795
    5. ' __' → logprob: -8.88501262664795
    6. '_' → logprob: -9.51001262664795
    7. '=' → logprob: -12.01001262664795
    8. '=="' → logprob: -12.13501262664795
    9. '=='' → logprob: -12.88501262664795
    10. '___' → logprob: -13.38501262664795

Token 839: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5094070477061905e-05
    2. '==' → logprob: -11.125015258789062
    3. '__.__' → logprob: -16.625015258789062
    4. '__
' → logprob: -17.125015258789062
    5. '_' → logprob: -17.250015258789062
    6. '___' → logprob: -17.875015258789062
    7. ' ==' → logprob: -17.875015258789062
    8. '____' → logprob: -18.125015258789062
    9. ' __' → logprob: -18.750015258789062
    10. 'name' → logprob: -18.875015258789062

Token 840: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016078360378742218
    2. '==' → logprob: -4.141078472137451
    3. '=="' → logprob: -10.641077995300293
    4. ' ==' → logprob: -11.141077995300293
    5. '=' → logprob: -13.266077995300293
    6. '=='' → logprob: -13.891077995300293
    7. '__.__' → logprob: -14.016077995300293
    8. '_' → logprob: -14.641077995300293
    9. '==
' → logprob: -14.766077995300293
    10. '===' → logprob: -15.016077995300293

Token 841: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011059491895139217
    2. ''' → logprob: -4.511059284210205
    3. ' "__' → logprob: -11.511059761047363
    4. '__' → logprob: -13.386059761047363
    5. ' '__' → logprob: -15.886059761047363
    6. '"name' → logprob: -17.136058807373047
    7. '("__' → logprob: -18.011058807373047
    8. ''"' → logprob: -18.511058807373047
    9. '"user' → logprob: -18.636058807373047
    10. '('__' → logprob: -19.261058807373047

Token 842: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.625
    3. '__' → logprob: -16.0
    4. 'name' → logprob: -17.75
    5. '	main' → logprob: -18.0
    6. '_main' → logprob: -18.375
    7. 'm' → logprob: -18.375
    8. '"' → logprob: -18.375
    9. '-main' → logprob: -18.875
    10. '主' → logprob: -19.0

Token 843: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006723183207213879
    2. '__' → logprob: -5.006723403930664
    3. '__':
' → logprob: -11.756723403930664
    4. '_' → logprob: -18.256723403930664
    5. '__["' → logprob: -19.256723403930664
    6. '__:' → logprob: -19.881723403930664
    7. '```' → logprob: -20.006723403930664
    8. '__("' → logprob: -20.006723403930664
    9. '"' → logprob: -20.381723403930664
    10. '("__' → logprob: -20.881723403930664

Token 844: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.003324103308841586
    2. '__' → logprob: -5.878324031829834
    3. ' main' → logprob: -7.628324031829834
    4. '"' → logprob: -11.378324508666992
    5. '	main' → logprob: -11.628324508666992
    6. '_main' → logprob: -12.128324508666992
    7. '(main' → logprob: -12.253324508666992
    8. ''' → logprob: -15.003324508666992
    9. '__":
' → logprob: -15.128324508666992
    10. '```' → logprob: -15.253324508666992

Token 845: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -23.0
    4. '.main' → logprob: -25.5
    5. '_main' → logprob: -25.875
    6. '(main' → logprob: -26.375
    7. '   ' → logprob: -27.125
    8. 'Main' → logprob: -27.5
    9. 'import' → logprob: -29.625
    10. '/main' → logprob: -30.25

Token 846: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 844
Tokens correctement prédits (1ère position, stricte): 220
Tokens correctement prédits (1ère position, avec adaptation): 235
Tokens correctement prédits (top 10): 472
Précision stricte (1ère position): 26.07%
Précision adaptée (1ère position): 27.84%
Précision (top 10): 55.92%
================================================================================
