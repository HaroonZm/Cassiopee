================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
ans = "Good"
for i in range(3):
    if s[i] == s[i + 1]:
        ans = "Bad"
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005606530699878931
    2. '('' → logprob: -5.880606651306152
    3. '()' → logprob: -6.380606651306152
    4. ''' → logprob: -7.130606651306152
    5. '"' → logprob: -9.130606651306152
    6. '`' → logprob: -10.005606651306152
    7. '("("' → logprob: -10.005606651306152
    8. '(
' → logprob: -10.255606651306152
    9. '```' → logprob: -10.880606651306152
    10. ''s' → logprob: -11.380606651306152

Token 4: 'ans' (ID: 616)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45352861285209656
    2. ' =' → logprob: -1.203528642654419
    3. '_' → logprob: -3.453528642654419
    4. '[' → logprob: -3.828528642654419
    5. ' +=' → logprob: -5.45352840423584
    6. '+' → logprob: -5.70352840423584
    7. '+=' → logprob: -6.07852840423584
    8. ' ' → logprob: -7.95352840423584
    9. '.' → logprob: -8.57852840423584
    10. 's' → logprob: -8.57852840423584

Token 6: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4706273674964905
    2. 's' → logprob: -1.8456273078918457
    3. ' ' → logprob: -2.5956273078918457
    4. '"' → logprob: -3.0956273078918457
    5. ' s' → logprob: -3.3456273078918457
    6. ''s' → logprob: -3.9706273078918457
    7. ''' → logprob: -4.345627307891846
    8. '""' → logprob: -4.720627307891846
    9. 'int' → logprob: -4.970627307891846
    10. 'len' → logprob: -5.845627307891846

Token 7: 'Good' (ID: 17212)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5161117911338806
    2. '"' → logprob: -1.7661118507385254
    3. 'YES' → logprob: -2.2661118507385254
    4. 'Hello' → logprob: -3.5161118507385254
    5. 'No' → logprob: -3.6411118507385254
    6. '0' → logprob: -3.8911118507385254
    7. 'NO' → logprob: -4.141111850738525
    8. 's' → logprob: -5.391111850738525
    9. 'yes' → logprob: -5.516111850738525
    10. '1' → logprob: -5.766111850738525

Token 8: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6759305000305176
    2. '")' → logprob: -1.8009305000305176
    3. ' job' → logprob: -2.0509305000305176
    4. ' Job' → logprob: -2.8009305000305176
    5. ' "' → logprob: -4.050930500030518
    6. ' ")' → logprob: -4.175930500030518
    7. 'Job' → logprob: -4.175930500030518
    8. 'Bye' → logprob: -4.675930500030518
    9. ' Bye' → logprob: -4.675930500030518
    10. '!' → logprob: -4.925930500030518

Token 9: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0023865913972258568
    2. ' if' → logprob: -6.377386569976807
    3. 'print' → logprob: -8.502387046813965
    4. '_' → logprob: -9.377387046813965
    5. '```' → logprob: -9.502387046813965
    6. 's' → logprob: -9.752387046813965
    7. '_if' → logprob: -10.252387046813965
    8. '=' → logprob: -10.502387046813965
    9. 'If' → logprob: -10.502387046813965
    10. 'while' → logprob: -10.627387046813965

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018398789688944817
    2. ' i' → logprob: -4.143398761749268
    3. '  ' → logprob: -6.393398761749268
    4. ' s' → logprob: -8.143399238586426
    5. 'i' → logprob: -8.268399238586426
    6. '_' → logprob: -9.393399238586426
    7. ' _' → logprob: -10.518399238586426
    8. 's' → logprob: -11.643399238586426
    9. ' ‌' → logprob: -12.393399238586426
    10. ' ' → logprob: -13.018399238586426

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25478407740592957
    2. 'in' → logprob: -1.504784107208252
    3. ' ' → logprob: -6.254784107208252
    4. '  ' → logprob: -7.504784107208252
    5. 'n' → logprob: -8.879783630371094
    6. 's' → logprob: -9.754783630371094
    7. '_' → logprob: -10.629783630371094
    8. ',' → logprob: -10.879783630371094
    9. ' s' → logprob: -10.879783630371094
    10. ' n' → logprob: -10.879783630371094

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7545059323310852
    2. ' s' → logprob: -1.0045058727264404
    3. 's' → logprob: -2.5045058727264404
    4. 'range' → logprob: -2.5045058727264404
    5. ' ' → logprob: -9.75450611114502
    6. '"' → logprob: -10.62950611114502
    7. ''' → logprob: -12.62950611114502
    8. '  ' → logprob: -13.37950611114502
    9. ' "' → logprob: -13.75450611114502
    10. ''s' → logprob: -14.19200611114502

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.693398118019104
    2. '(len' → logprob: -0.693398118019104
    3. ' (' → logprob: -8.443398475646973
    4. '(s' → logprob: -11.068398475646973
    5. '(length' → logprob: -11.943398475646973
    6. ' len' → logprob: -12.568398475646973
    7. '(
' → logprob: -12.693398475646973
    8. 'len' → logprob: -12.943398475646973
    9. '(n' → logprob: -13.693398475646973
    10. '(

' → logprob: -14.318398475646973

Token 14: '3' (ID: 18)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031663142144680023
    2. '1' → logprob: -6.503166198730469
    3. ' len' → logprob: -7.003166198730469
    4. '3' → logprob: -8.503166198730469
    5. 's' → logprob: -8.503166198730469
    6. '2' → logprob: -9.128166198730469
    7. '10' → logprob: -9.253166198730469
    8. '(len' → logprob: -9.753166198730469
    9. '5' → logprob: -10.128166198730469
    10. '4' → logprob: -11.503166198730469

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016807749634608626
    2. ')' → logprob: -6.626680850982666
    3. ' ):' → logprob: -8.001680374145508
    4. ':' → logprob: -11.376680374145508
    5. '):
' → logprob: -12.626680374145508
    6. ',' → logprob: -13.501680374145508
    7. 's' → logprob: -14.001680374145508
    8. ' )' → logprob: -14.376680374145508
    9. '```' → logprob: -14.751680374145508
    10. '**' → logprob: -15.001680374145508

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017111632972955704
    2. ':' → logprob: -5.267111778259277
    3. '```' → logprob: -5.267111778259277
    4. ' ' → logprob: -5.892111778259277
    5. ' s' → logprob: -6.392111778259277
    6. ' if' → logprob: -6.892111778259277
    7. 's' → logprob: -8.392111778259277
    8. '    
' → logprob: -8.517111778259277
    9. 'if' → logprob: -9.267111778259277
    10. '{' → logprob: -9.517111778259277

Token 17: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4624941647052765
    2. ' s' → logprob: -1.337494134902954
    3. '   ' → logprob: -2.962494134902954
    4. 's' → logprob: -3.462494134902954
    5. ' ' → logprob: -4.087494373321533
    6. 'if' (adapté à ' if') → logprob: -5.212494373321533
    7. ' for' → logprob: -7.587494373321533
    8. ' try' → logprob: -7.712494373321533
    9. '    ' → logprob: -7.837494373321533
    10. ' ans' → logprob: -8.212493896484375

Token 18: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023616725578904152
    2. 's' → logprob: -3.7736167907714844
    3. ' ' → logprob: -8.148616790771484
    4. ' len' → logprob: -10.398616790771484
    5. ' not' → logprob: -10.398616790771484
    6. ' ord' → logprob: -11.898616790771484
    7. '  ' → logprob: -12.648616790771484
    8. ' i' → logprob: -12.773616790771484
    9. ' ' → logprob: -13.023616790771484
    10. ' abs' → logprob: -13.648616790771484

Token 19: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011718906462192535
    2. '[' → logprob: -6.751172065734863
    3. '[int' → logprob: -14.876172065734863
    4. '[I' → logprob: -15.126172065734863
    5. '[len' → logprob: -15.501172065734863
    6. '[:' → logprob: -15.751172065734863
    7. '[j' → logprob: -15.876172065734863
    8. '[a' → logprob: -16.126171112060547
    9. '[s' → logprob: -16.501171112060547
    10. '!=' → logprob: -16.626171112060547

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021272704005241394
    2. ']!=' → logprob: -4.146272659301758
    3. '!=' → logprob: -5.646272659301758
    4. ' ]' → logprob: -6.646272659301758
    5. ' !=' → logprob: -8.521272659301758
    6. ']==' → logprob: -9.271272659301758
    7. '[' → logprob: -9.646272659301758
    8. ' not' → logprob: -11.896272659301758
    9. ']!='' → logprob: -11.896272659301758
    10. ')!=' → logprob: -12.521272659301758

Token 21: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.038531627506017685
    2. ' !=' → logprob: -3.288531541824341
    3. '==' → logprob: -7.91353178024292
    4. ' not' → logprob: -9.788531303405762
    5. ' ' → logprob: -11.413531303405762
    6. ' ==' → logprob: -11.538531303405762
    7. ']!=' → logprob: -11.913531303405762
    8. 'not' → logprob: -12.038531303405762
    9. '!==' → logprob: -12.038531303405762
    10. '()!=' → logprob: -12.413531303405762

Token 22: ' s' (ID: 265)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5316013693809509
    2. ''' → logprob: -1.9066014289855957
    3. ''a' → logprob: -2.6566014289855957
    4. ''O' → logprob: -2.9066014289855957
    5. ''o' → logprob: -3.0316014289855957
    6. '"O' → logprob: -3.7816014289855957
    7. ''A' → logprob: -4.156601428985596
    8. '"a' → logprob: -4.531601428985596
    9. 'a' → logprob: -5.281601428985596
    10. '"s' → logprob: -5.406601428985596

Token 23: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36738264560699463
    2. 's' → logprob: -1.7423826456069946
    3. ''s' → logprob: -3.367382526397705
    4. '[' → logprob: -3.617382526397705
    5. ''' → logprob: -3.742382526397705
    6. ''.' → logprob: -4.242382526397705
    7. 'i' → logprob: -5.367382526397705
    8. ''i' → logprob: -5.367382526397705
    9. '".' → logprob: -5.742382526397705
    10. '"' → logprob: -5.867382526397705

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1311587393283844
    2. '-' → logprob: -2.3811588287353516
    3. ']:' → logprob: -3.7561588287353516
    4. ']' → logprob: -5.631158828735352
    5. 's' → logprob: -6.506158828735352
    6. ':' → logprob: -7.756158828735352
    7. ' +' → logprob: -7.756158828735352
    8. '"]:' → logprob: -8.631158828735352
    9. '+:' → logprob: -8.756158828735352
    10. ' -' → logprob: -9.006158828735352

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009339710813947022
    2. ' ' → logprob: -7.00093412399292
    3. '2' → logprob: -11.500933647155762
    4. '3' → logprob: -12.125933647155762
    5. '`' → logprob: -13.375933647155762
    6. '```' → logprob: -13.750933647155762
    7. ''' → logprob: -14.125933647155762
    8. '4' → logprob: -14.250933647155762
    9. ')' → logprob: -14.688433647155762
    10. '6' → logprob: -14.750933647155762

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037967207026667893
    2. ' ' → logprob: -8.62537956237793
    3. '3' → logprob: -8.75037956237793
    4. '2' → logprob: -10.37537956237793
    5. '4' → logprob: -11.87537956237793
    6. '   ' → logprob: -14.00037956237793
    7. 'i' → logprob: -15.00037956237793
    8. '6' → logprob: -15.25037956237793
    9. '```' → logprob: -15.43787956237793
    10. '`' → logprob: -15.68787956237793

Token 27: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8008742332458496
    2. ']:' → logprob: -1.1758742332458496
    3. '):' → logprob: -1.9258742332458496
    4. ']' → logprob: -2.8008742332458496
    5. ')' → logprob: -4.30087423324585
    6. ' ):' → logprob: -5.17587423324585
    7. ' :' → logprob: -5.30087423324585
    8. '=' → logprob: -5.80087423324585
    9. ' ]' → logprob: -6.05087423324585
    10. ' ' → logprob: -6.05087423324585

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01457242015749216
    2. '   ' → logprob: -4.764572620391846
    3. '\n' → logprob: -5.889572620391846
    4. 'ans' → logprob: -6.514572620391846
    5. ' ans' → logprob: -7.389572620391846
    6. ':
' → logprob: -8.389572143554688
    7. '     ' → logprob: -9.014572143554688
    8. '	ans' → logprob: -9.014572143554688
    9. '           ' → logprob: -9.139572143554688
    10. '\' → logprob: -9.514572143554688

Token 29: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06104513630270958
    2. ' ans' → logprob: -3.3110451698303223
    3. '   ' → logprob: -3.9360451698303223
    4. '	ans' → logprob: -6.186045169830322
    5. '(ans' → logprob: -8.061044692993164
    6. '\n' → logprob: -8.311044692993164
    7. '       ' → logprob: -8.436044692993164
    8. '           ' → logprob: -8.936044692993164
    9. ' ' → logprob: -9.186044692993164
    10. '```' → logprob: -10.436044692993164

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021961480379105
    2. '=' → logprob: -2.3502197265625
    3. ' +=' → logprob: -11.6002197265625
    4. '+=' → logprob: -12.9752197265625
    5. ' ' → logprob: -14.2252197265625
    6. ' ="' → logprob: -15.6002197265625
    7. '＝' → logprob: -15.8502197265625
    8. '!=' → logprob: -16.6002197265625
    9. ' !=' → logprob: -16.7252197265625
    10. ' *=' → logprob: -16.8502197265625

Token 31: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006850820034742355
    2. ' "' → logprob: -5.006850719451904
    3. ' ' → logprob: -9.506851196289062
    4. ''' → logprob: -10.506851196289062
    5. '"No' → logprob: -11.506851196289062
    6. 'Bad' → logprob: -12.006851196289062
    7. ' bad' → logprob: -12.756851196289062
    8. 'bad' → logprob: -13.506851196289062
    9. '  ' → logprob: -13.506851196289062
    10. '   ' → logprob: -13.756851196289062

Token 32: 'Bad' (ID: 22048)
  Prédit: 'Bad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bad' → logprob: -1.4617256056226324e-05
    2. '"' → logprob: -11.875014305114746
    3. ' Bad' → logprob: -13.250014305114746
    4. 'No' → logprob: -13.750014305114746
    5. 'bad' → logprob: -13.875014305114746
    6. '_bad' → logprob: -13.875014305114746
    7. 'BAD' → logprob: -14.875014305114746
    8. '.Bad' → logprob: -15.000014305114746
    9. 'Good' → logprob: -15.125014305114746
    10. 'Wrong' → logprob: -15.125014305114746

Token 33: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014182545244693756
    2. '"
' → logprob: -4.2641825675964355
    3. '"
' → logprob: -11.014182090759277
    4. '"

' → logprob: -13.764182090759277
    5. '```' → logprob: -14.264182090759277
    6. '")' → logprob: -15.264182090759277
    7. '"\' → logprob: -15.639182090759277
    8. 's' → logprob: -16.014183044433594
    9. ''' → logprob: -16.639183044433594
    10. 'print' → logprob: -16.639183044433594

Token 34: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007735580671578646
    2. '\n' → logprob: -5.132735729217529
    3. '
' → logprob: -7.257735729217529
    4. '<|end|>' → logprob: -8.007735252380371
    5. '```' → logprob: -8.507735252380371
    6. '\' → logprob: -8.757735252380371
    7. '    
' → logprob: -9.757735252380371
    8. 'newline' → logprob: -10.382735252380371
    9. ' print' → logprob: -10.507735252380371
    10. '  
' → logprob: -10.507735252380371

Token 35: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1269993931055069
    2. '(ans' → logprob: -2.1269993782043457
    3. '("("' → logprob: -9.876999855041504
    4. '()' → logprob: -11.501999855041504
    5. '('' → logprob: -12.376999855041504
    6. '(
' → logprob: -13.001999855041504
    7. '(

' → logprob: -14.126999855041504
    8. 'ans' → logprob: -14.501999855041504
    9. '("' → logprob: -14.626999855041504
    10. '(an' → logprob: -15.126999855041504

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.875
    3. ' )' → logprob: -17.125
    4. '))' → logprob: -17.125
    5. '`)' → logprob: -17.75
    6. '()' → logprob: -18.25
    7. '")' → logprob: -18.25
    8. '')' → logprob: -18.375
    9. '）' → logprob: -19.75
    10. ')
' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 44.12%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 76.47%
================================================================================
