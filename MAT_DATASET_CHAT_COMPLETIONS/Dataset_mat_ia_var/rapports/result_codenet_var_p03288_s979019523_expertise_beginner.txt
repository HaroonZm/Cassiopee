================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
R = int(input())
if R < 1200:
    print("ABC")
else:
    if R < 2800:
        print("ARC")
    else:
        print("AGC")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'R' (ID: 49)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002429644111543894
    2. ''' → logprob: -6.252429485321045
    3. '('' → logprob: -8.627429962158203
    4. ')' → logprob: -9.502429962158203
    5. '[' → logprob: -10.002429962158203
    6. '"' → logprob: -10.252429962158203
    7. ' (' → logprob: -10.377429962158203
    8. 'R' → logprob: -10.377429962158203
    9. '(
' → logprob: -10.627429962158203
    10. '(R' → logprob: -10.752429962158203

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005099626258015633
    2. '()' → logprob: -5.755099773406982
    3. ')' → logprob: -6.630099773406982
    4. '(
' → logprob: -8.380099296569824
    5. '('' → logprob: -9.505099296569824
    6. '())' → logprob: -9.880099296569824
    7. '("("' → logprob: -10.255099296569824
    8. '```' → logprob: -10.255099296569824
    9. '(()' → logprob: -10.505099296569824
    10. ''' → logprob: -10.630099296569824

Token 5: 'if' (ID: 366)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8880174160003662
    2. '+' → logprob: -1.0130174160003662
    3. '*' → logprob: -1.7630174160003662
    4. '\n' → logprob: -3.763017416000366
    5. '#' → logprob: -4.763017654418945
    6. ')' → logprob: -5.263017654418945
    7. 'if' → logprob: -5.388017654418945
    8. '\' → logprob: -6.388017654418945
    9. ''' → logprob: -6.513017654418945
    10. '```' → logprob: -6.638017654418945

Token 6: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.5245254635810852
    2. ' ' → logprob: -0.8995254635810852
    3. 'R' → logprob: -6.7745256423950195
    4. '  ' → logprob: -8.64952564239502
    5. ' not' → logprob: -10.52452564239502
    6. ' ' → logprob: -10.64952564239502
    7. ''' → logprob: -12.27452564239502
    8. ' (' → logprob: -12.39952564239502
    9. ' )' → logprob: -12.64952564239502
    10. ' '' → logprob: -12.89952564239502

Token 7: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07158076018095016
    2. '>' → logprob: -3.696580648422241
    3. ' >=' → logprob: -3.946580648422241
    4. ' <' → logprob: -4.19658088684082
    5. ' ' → logprob: -5.19658088684082
    6. ' <=' → logprob: -6.44658088684082
    7. ' ==' → logprob: -6.82158088684082
    8. '<' → logprob: -7.44658088684082
    9. '  ' → logprob: -8.44658088684082
    10. '>=' → logprob: -8.44658088684082

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11216353625059128
    2. '10' → logprob: -3.362163543701172
    3. '100' → logprob: -4.112163543701172
    4. '0' → logprob: -4.362163543701172
    5. '=' → logprob: -4.487163543701172
    6. '20' → logprob: -4.612163543701172
    7. '50' → logprob: -5.362163543701172
    8. '30' → logprob: -5.862163543701172
    9. '60' → logprob: -6.112163543701172
    10. '5' → logprob: -6.612163543701172

Token 9: '120' (ID: 6106)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.423790693283081
    2. ' ' → logprob: -1.548790693283081
    3. '18' → logprob: -1.673790693283081
    4. '0' → logprob: -2.173790693283081
    5. '100' → logprob: -2.298790693283081
    6. '20' → logprob: -3.798790693283081
    7. '5' → logprob: -3.923790693283081
    8. '50' → logprob: -4.04879093170166
    9. '1' → logprob: -4.42379093170166
    10. '30' → logprob: -4.79879093170166

Token 10: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.676292231422849e-05
    2. ':**' → logprob: -12.500017166137695
    3. '>' → logprob: -13.000017166137695
    4. '0' → logprob: -13.125017166137695
    5. '>:' → logprob: -13.500017166137695
    6. ':
' → logprob: -13.500017166137695
    7. '':' → logprob: -13.875017166137695
    8. ' :' → logprob: -13.875017166137695
    9. ',' → logprob: -14.250017166137695
    10. '):' → logprob: -14.250017166137695

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1875571544806007e-05
    2. ':
' → logprob: -11.500011444091797
    3. '):' → logprob: -14.875011444091797
    4. ' :' → logprob: -15.000011444091797
    5. '>:' → logprob: -15.500011444091797
    6. ':**' → logprob: -15.500011444091797
    7. '>' → logprob: -15.625011444091797
    8. '':' → logprob: -15.875011444091797
    9. ':return' → logprob: -16.875011444091797
    10. ':
' → logprob: -17.250011444091797

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025975702330470085
    2. ' print' → logprob: -4.025975704193115
    3. 'print' → logprob: -4.900975704193115
    4. ':' → logprob: -8.900975227355957
    5. ' ' → logprob: -9.775975227355957
    6. '	print' → logprob: -9.900975227355957
    7. '    ' → logprob: -10.150975227355957
    8. ''' → logprob: -10.900975227355957
    9. '   ' → logprob: -11.275975227355957
    10. '  ' → logprob: -11.650975227355957

Token 13: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1604672223329544
    2. 'print' (adapté à ' print') → logprob: -1.910467267036438
    3. '   ' → logprob: -8.410467147827148
    4. ' ' → logprob: -11.535467147827148
    5. '    ' → logprob: -13.285467147827148
    6. '	print' → logprob: -13.285467147827148
    7. ' prin' → logprob: -13.535467147827148
    8. ''' → logprob: -13.535467147827148
    9. '```' → logprob: -14.347967147827148
    10. ' pass' → logprob: -14.597967147827148

Token 14: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20383578538894653
    2. '("' → logprob: -1.8288357257843018
    3. '('' → logprob: -4.328835964202881
    4. '("("' → logprob: -4.578835964202881
    5. '("")' → logprob: -8.453835487365723
    6. '("(' → logprob: -10.078835487365723
    7. '()' → logprob: -10.203835487365723
    8. '"' → logprob: -11.453835487365723
    9. '("""' → logprob: -11.578835487365723
    10. '(""' → logprob: -11.953835487365723

Token 15: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.6328397989273071
    2. '"' → logprob: -2.0078396797180176
    3. 'New' → logprob: -2.5078396797180176
    4. 'Brown' → logprob: -2.6328396797180176
    5. ' newbie' → logprob: -4.007839679718018
    6. 'Blue' → logprob: -4.132839679718018
    7. 'Bron' → logprob: -4.132839679718018
    8. 'No' → logprob: -4.757839679718018
    9. 'Begin' → logprob: -4.757839679718018
    10. '   ' → logprob: -5.132839679718018

Token 16: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00014323067443910986
    2. ')' → logprob: -9.375143051147461
    3. ')")' → logprob: -10.250143051147461
    4. '")
' → logprob: -11.375143051147461
    5. '")
' → logprob: -12.375143051147461
    6. '\")' → logprob: -13.250143051147461
    7. '")

' → logprob: -13.500143051147461
    8. '"' → logprob: -14.250143051147461
    9. '”)' → logprob: -14.375143051147461
    10. '!")' → logprob: -14.625143051147461

Token 17: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18909215927124023
    2. 'else' → logprob: -1.8140921592712402
    3. '```' → logprob: -5.56409215927124
    4. ' else' → logprob: -5.81409215927124
    5. ' elif' → logprob: -6.18909215927124
    6. 'el' → logprob: -8.564092636108398
    7. '\n' → logprob: -9.064092636108398
    8. '
' → logprob: -10.314092636108398
    9. 'e' → logprob: -11.314092636108398
    10. '``' → logprob: -11.689092636108398

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.372294698550832e-06
    2. ':
' → logprob: -12.125009536743164
    3. ' :' → logprob: -13.000009536743164
    4. '   ' → logprob: -13.625009536743164
    5. '):' → logprob: -16.250009536743164
    6. ':**' → logprob: -16.750009536743164
    7. ':return' → logprob: -17.000009536743164
    8. '():' → logprob: -17.250009536743164
    9. 'if' → logprob: -17.250009536743164
    10. '```' → logprob: -17.375009536743164

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005262265913188457
    2. '    ' → logprob: -8.000526428222656
    3. '"' → logprob: -9.500526428222656
    4. '       ' → logprob: -10.000526428222656
    5. '```' → logprob: -10.625526428222656
    6. ' ' → logprob: -11.000526428222656
    7. '    
' → logprob: -11.500526428222656
    8. 'print' → logprob: -12.500526428222656
    9. '\n' → logprob: -12.750526428222656
    10. '  ' → logprob: -13.125526428222656

Token 20: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010407892055809498
    2. ' print' → logprob: -4.8854079246521
    3. '   ' → logprob: -5.8854079246521
    4. ' ' → logprob: -11.885407447814941
    5. '"' → logprob: -12.635407447814941
    6. '```' → logprob: -13.135407447814941
    7. 'if' (adapté à ' if') → logprob: -13.260407447814941
    8. '    ' → logprob: -14.010407447814941
    9. '  ' → logprob: -14.385407447814941
    10. 'B' → logprob: -14.510407447814941

Token 21: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.08039629459381104
    2. 'R' → logprob: -2.5803961753845215
    3. ' ' → logprob: -6.5803961753845215
    4. '<|end|>' → logprob: -10.08039665222168
    5. ' ' → logprob: -10.45539665222168
    6. '   ' → logprob: -10.95539665222168
    7. '  ' → logprob: -11.70539665222168
    8. '    ' → logprob: -13.01789665222168
    9. '	R' → logprob: -13.20539665222168
    10. ')' → logprob: -13.26789665222168

Token 22: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.01668546535074711
    2. ' <' → logprob: -4.766685485839844
    3. '>=' → logprob: -4.891685485839844
    4. ' >' → logprob: -8.266685485839844
    5. '<' → logprob: -8.641685485839844
    6. ' ' → logprob: -10.266685485839844
    7. '>' → logprob: -10.766685485839844
    8. '   ' → logprob: -10.891685485839844
    9. '    ' → logprob: -12.016685485839844
    10. '[' → logprob: -12.641685485839844

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5190933346748352
    2. '200' → logprob: -2.1440932750701904
    3. '160' → logprob: -2.5190932750701904
    4. '180' → logprob: -2.7690932750701904
    5. '220' → logprob: -3.1440932750701904
    6. '140' → logprob: -3.2690932750701904
    7. '190' → logprob: -4.0190935134887695
    8. '210' → logprob: -4.2690935134887695
    9. '170' → logprob: -4.8940935134887695
    10. '150' → logprob: -4.8940935134887695

Token 24: '280' (ID: 17713)
  Prédit: '280'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.22587798535823822
    2. '220' → logprob: -3.1008780002593994
    3. ' ' → logprob: -3.2258780002593994
    4. '200' → logprob: -3.3508780002593994
    5. '210' → logprob: -3.8508780002593994
    6. '180' → logprob: -4.10087776184082
    7. '140' → logprob: -4.22587776184082
    8. '190' → logprob: -4.72587776184082
    9. '160' → logprob: -5.22587776184082
    10. '```' → logprob: -5.72587776184082

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4617256056226324e-05
    2. '   ' → logprob: -12.000014305114746
    3. '00' → logprob: -13.000014305114746
    4. '8' → logprob: -13.375014305114746
    5. '       ' → logprob: -14.062514305114746
    6. '000' → logprob: -14.375014305114746
    7. '1' → logprob: -15.000014305114746
    8. '4' → logprob: -15.062514305114746
    9. '9' → logprob: -15.125014305114746
    10. '400' → logprob: -15.187514305114746

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012385640293359756
    2. ':
' → logprob: -6.7512383460998535
    3. '):' → logprob: -9.876238822937012
    4. '       ' → logprob: -11.876238822937012
    5. '   ' → logprob: -12.376238822937012
    6. ' :' → logprob: -12.876238822937012
    7. '):
' → logprob: -13.751238822937012
    8. ')' → logprob: -14.751238822937012
    9. ':

' → logprob: -15.001238822937012
    10. '>:' → logprob: -15.751238822937012

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003387430217117071
    2. '   ' → logprob: -6.128387451171875
    3. '    ' → logprob: -7.878387451171875
    4. 'print' → logprob: -8.128387451171875
    5. ' ' → logprob: -8.878387451171875
    6. '      ' → logprob: -9.503387451171875
    7. '     ' → logprob: -9.628387451171875
    8. ' print' → logprob: -9.878387451171875
    9. '           ' → logprob: -10.753387451171875
    10. '"' → logprob: -10.753387451171875

Token 28: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1752985566854477
    2. '       ' → logprob: -2.5502984523773193
    3. ' print' → logprob: -2.8002984523773193
    4. '   ' → logprob: -3.9252984523773193
    5. '           ' → logprob: -6.300298690795898
    6. ' ' → logprob: -8.800298690795898
    7. '	print' → logprob: -9.925298690795898
    8. '```' → logprob: -9.925298690795898
    9. '  ' → logprob: -10.862798690795898
    10. '    ' → logprob: -10.925298690795898

Token 29: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014371869154274464
    2. '(' → logprob: -4.264371871948242
    3. '("("' → logprob: -8.514371871948242
    4. '("")' → logprob: -12.764371871948242
    5. '('' → logprob: -13.389371871948242
    6. '("(' → logprob: -13.889371871948242
    7. '(""' → logprob: -14.139371871948242
    8. '("\"' → logprob: -14.639371871948242
    9. '("""' → logprob: -14.889371871948242
    10. '(">' → logprob: -16.139371871948242

Token 30: 'ARC' (ID: 64758)
  Prédit: 'ARC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARC' → logprob: -0.2536317706108093
    2. '"' → logprob: -1.503631830215454
    3. ' ARC' → logprob: -6.503631591796875
    4. ''' → logprob: -9.253631591796875
    5. '"W' → logprob: -11.378631591796875
    6. '""' → logprob: -11.378631591796875
    7. '“' → logprob: -11.628631591796875
    8. 'AG' → logprob: -11.753631591796875
    9. '-' → logprob: -11.753631591796875
    10. '"P' → logprob: -12.003631591796875

Token 31: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0014613081002607942
    2. '")
' → logprob: -6.626461505889893
    3. ')' → logprob: -9.501461029052734
    4. '")
' → logprob: -10.126461029052734
    5. ')")' → logprob: -11.501461029052734
    6. '"' → logprob: -13.501461029052734
    7. '()' → logprob: -13.626461029052734
    8. '")

' → logprob: -13.751461029052734
    9. 'C' → logprob: -13.751461029052734
    10. 'A' → logprob: -14.251461029052734

Token 32: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08842849731445312
    2. '   ' → logprob: -2.963428497314453
    3. ' else' → logprob: -3.463428497314453
    4. 'elif' → logprob: -7.338428497314453
    5. '```' → logprob: -7.463428497314453
    6. '<|end|>' → logprob: -8.588428497314453
    7. '	else' → logprob: -8.713428497314453
    8. ')' → logprob: -10.713428497314453
    9. ':' → logprob: -11.463428497314453
    10. '
' → logprob: -11.838428497314453

Token 33: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005822736769914627
    2. ' else' → logprob: -5.255822658538818
    3. 'elif' → logprob: -7.755822658538818
    4. '   ' → logprob: -8.880823135375977
    5. '	else' → logprob: -11.380823135375977
    6. '```' → logprob: -12.755823135375977
    7. '<|end|>' → logprob: -12.880823135375977
    8. ')' → logprob: -13.630823135375977
    9. '       ' → logprob: -14.255823135375977
    10. ' elif' → logprob: -14.755823135375977

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001805377542041242
    2. ':
' → logprob: -8.6251802444458
    3. '):' → logprob: -15.1251802444458
    4. '   ' → logprob: -15.3751802444458
    5. ' :' → logprob: -15.7501802444458
    6. '<|end|>' → logprob: -16.000181198120117
    7. ':
' → logprob: -16.500181198120117
    8. '       ' → logprob: -17.125181198120117
    9. ':

' → logprob: -17.250181198120117
    10. '```' → logprob: -18.250181198120117

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.394135612528771e-05
    2. 'print' → logprob: -10.500043869018555
    3. '   ' → logprob: -11.250043869018555
    4. '```' → logprob: -13.625043869018555
    5. '           ' → logprob: -13.875043869018555
    6. ' print' → logprob: -14.125043869018555
    7. '      ' → logprob: -15.750043869018555
    8. '     ' → logprob: -15.875043869018555
    9. '	   ' → logprob: -16.750043869018555
    10. '<|end|>' → logprob: -16.875043869018555

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010779452277347445
    2. ' print' → logprob: -7.001078128814697
    3. '       ' → logprob: -9.501077651977539
    4. '           ' → logprob: -9.751077651977539
    5. '   ' → logprob: -10.626077651977539
    6. '```' → logprob: -12.001077651977539
    7. '	print' → logprob: -13.376077651977539
    8. ' ' → logprob: -14.251077651977539
    9. 'if' → logprob: -16.25107765197754
    10. '.print' → logprob: -16.37607765197754

Token 37: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.019468160346150398
    2. '(' → logprob: -4.019468307495117
    3. '("("' → logprob: -6.644468307495117
    4. '("")' → logprob: -12.269468307495117
    5. '('' → logprob: -12.519468307495117
    6. '("(' → logprob: -12.769468307495117
    7. '("="' → logprob: -13.644468307495117
    8. '()' → logprob: -14.019468307495117
    9. '(">' → logprob: -14.019468307495117
    10. '("""' → logprob: -14.394468307495117

Token 38: 'AG' (ID: 2971)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5824365019798279
    2. 'AG' → logprob: -0.8324365019798279
    3. '""' → logprob: -6.457436561584473
    4. '"""' → logprob: -6.832436561584473
    5. '")' → logprob: -6.957436561584473
    6. '"A' → logprob: -7.457436561584473
    7. '   ' → logprob: -8.082436561584473
    8. ''' → logprob: -8.332436561584473
    9. ' AG' → logprob: -8.332436561584473
    10. '":"' → logprob: -8.332436561584473

Token 39: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -8.41866585687967e-06
    2. '"C' → logprob: -13.000008583068848
    3. 'Ｃ' → logprob: -13.125008583068848
    4. ' C' → logprob: -13.750008583068848
    5. 'CO' → logprob: -13.875008583068848
    6. 'I' → logprob: -14.375008583068848
    7. '```' → logprob: -15.125008583068848
    8. 'CODE' → logprob: -15.250008583068848
    9. '   ' → logprob: -15.625008583068848
    10. '	C' → logprob: -15.750008583068848

Token 40: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.895480277715251e-06
    2. '")
' → logprob: -11.750008583068848
    3. ')' → logprob: -14.625008583068848
    4. ')")' → logprob: -14.875008583068848
    5. '"' → logprob: -16.500009536743164
    6. '()' → logprob: -16.625009536743164
    7. '")
' → logprob: -18.125009536743164
    8. '\")' → logprob: -18.375009536743164
    9. '```' → logprob: -18.625009536743164
    10. '”)' → logprob: -18.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 44.74%
Précision adaptée (1ère position): 52.63%
Précision (top 10): 92.11%
================================================================================
