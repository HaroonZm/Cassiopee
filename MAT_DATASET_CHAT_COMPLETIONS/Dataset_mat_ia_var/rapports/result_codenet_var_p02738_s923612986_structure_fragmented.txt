================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import zeros, roll

def read_input():
    return map(int, input().split())

def compute_l(n):
    return n * 3 + 1

def allocate_d(l, n):
    return zeros((l, n * 5), dtype='int64')

def initialize_d(d):
    d[0][0] = 1

def get_indices(i):
    return i - 1, i - 2

def mult_prev_val(d, i, k, j):
    if i < 3:
        return 0
    return d[i - 3] * k * j

def shift_and_mult(d, k, j):
    if k < 0:
        return 0
    return roll(d[k], -1) * j

def shift_right(d, j):
    if j < 0:
        return 0
    return roll(d[j], 1)

def sum_modulo(arr, l, M):
    return arr[-1][:l].sum() % M

def main_loop(n, M, l, d):
    for i in range(1, l):
        j, k = get_indices(i)
        part1 = mult_prev_val(d, i, k, j)
        part2 = shift_and_mult(d, k, j)
        part3 = shift_right(d, j)
        d[i] = (part1 + part2 + part3) % M

def main():
    n, M = read_input()
    l = compute_l(n)
    d = allocate_d(l, n)
    initialize_d(d)
    main_loop(n, M, l, d)
    result = sum_modulo(d, l, M)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' zeros' (ID: 42274)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6354337930679321
    2. ' array' → logprob: -0.7604337930679321
    3. ' as' → logprob: -7.010433673858643
    4. 'random' → logprob: -7.010433673858643
    5. ' random' → logprob: -7.385433673858643
    6. ' ndarray' → logprob: -8.7604341506958
    7. 'empty' → logprob: -10.0104341506958
    8. '```' → logprob: -10.3854341506958
    9. ' np' → logprob: -10.6354341506958
    10. 'as' → logprob: -10.6354341506958

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.2378600735682994e-05
    2. '\(' → logprob: -10.750032424926758
    3. '.' → logprob: -12.375032424926758
    4. ' (' → logprob: -12.750032424926758
    5. '()' → logprob: -13.625032424926758
    6. '(
' → logprob: -14.000032424926758
    7. '((' → logprob: -14.625032424926758
    8. ',' → logprob: -15.250032424926758
    9. '\' → logprob: -15.625032424926758
    10. '```' → logprob: -15.750032424926758

Token 5: ' roll' (ID: 8465)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.721413791179657
    2. ' ones' → logprob: -0.721413791179657
    3. 'empty' → logprob: -3.7214138507843018
    4. 'array' → logprob: -5.971413612365723
    5. 'shape' → logprob: -7.721413612365723
    6. 'dot' → logprob: -8.596413612365723
    7. ' empty' → logprob: -8.721413612365723
    8. 'full' → logprob: -9.346413612365723
    9. ' array' → logprob: -9.721413612365723
    10. '```' → logprob: -10.096413612365723

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005135946557857096
    2. '(
' → logprob: -8.500514030456543
    3. '\(' → logprob: -8.875514030456543
    4. '.' → logprob: -9.875514030456543
    5. '#' → logprob: -10.875514030456543
    6. ',' → logprob: -11.125514030456543
    7. ' (' → logprob: -11.625514030456543
    8. '\' → logprob: -11.625514030456543
    9. '`' → logprob: -11.750514030456543
    10. '[' → logprob: -11.875514030456543

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016870817635208368
    2. '(
' → logprob: -6.876687049865723
    3. '\(' → logprob: -8.376687049865723
    4. '```' → logprob: -9.626687049865723
    5. 'newline' → logprob: -9.751687049865723
    6. '.' → logprob: -9.876687049865723
    7. 'import' → logprob: -10.251687049865723
    8. '`' → logprob: -10.376687049865723
    9. '\' → logprob: -10.751687049865723
    10. '#' → logprob: -10.751687049865723

Token 8: ' read' (ID: 1729)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -1.0545710325241089
    2. ' array' → logprob: -1.8045710325241089
    3. ' shift' → logprob: -1.9295710325241089
    4. ' matrix' → logprob: -2.4295711517333984
    5. ' create' → logprob: -2.6795711517333984
    6. ' my' → logprob: -2.9295711517333984
    7. ' calculate' → logprob: -3.1795711517333984
    8. ' zeros' → logprob: -4.554571151733398
    9. ' compute' → logprob: -4.679571151733398
    10. ' ' → logprob: -5.179571151733398

Token 9: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03303518891334534
    2. '(' → logprob: -3.7830352783203125
    3. '_line' → logprob: -5.1580352783203125
    4. '_data' → logprob: -7.0330352783203125
    5. '_file' → logprob: -7.2830352783203125
    6. ' (' → logprob: -7.7830352783203125
    7. '_array' → logprob: -8.033035278320312
    8. '_csv' → logprob: -8.408035278320312
    9. '_text' → logprob: -8.533035278320312
    10. ')' → logprob: -9.033035278320312

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09511636942625046
    2. '():' → logprob: -2.970116376876831
    3. '_' → logprob: -3.345116376876831
    4. '_line' → logprob: -7.470116138458252
    5. '(:' → logprob: -7.595116138458252
    6. 's' → logprob: -7.845116138458252
    7. '):' → logprob: -8.09511661529541
    8. '_:' → logprob: -8.09511661529541
    9. ':' → logprob: -8.22011661529541
    10. '(_:' → logprob: -8.34511661529541

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007214006967842579
    2. '```' → logprob: -6.382214069366455
    3. '()' → logprob: -6.632214069366455
    4. '\' → logprob: -7.007214069366455
    5. '(' → logprob: -7.132214069366455
    6. '    ' → logprob: -7.757214069366455
    7. ' ' → logprob: -8.007213592529297
    8. '[' → logprob: -8.007213592529297
    9. ' return' → logprob: -8.507213592529297
    10. '  ' → logprob: -8.632213592529297

Token 12: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.106565237045288
    2. '   ' → logprob: -1.856565237045288
    3. 'data' → logprob: -2.106565237045288
    4. ' return' → logprob: -2.356565237045288
    5. 'return' (adapté à ' return') → logprob: -2.606565237045288
    6. ' data' → logprob: -2.856565237045288
    7. 'user' → logprob: -3.356565237045288
    8. 'input' → logprob: -3.356565237045288
    9. ' user' → logprob: -4.106565475463867
    10. 'text' → logprob: -4.356565475463867

Token 13: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.29429030418396
    2. ' zeros' → logprob: -1.29429030418396
    3. ' input' → logprob: -1.66929030418396
    4. ' []' → logprob: -2.29429030418396
    5. ' int' → logprob: -2.79429030418396
    6. ' None' → logprob: -4.169290542602539
    7. ' ""' → logprob: -4.419290542602539
    8. 'input' → logprob: -4.419290542602539
    9. ' ''' → logprob: -4.419290542602539
    10. ' list' → logprob: -4.794290542602539

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16255322098731995
    2. '(' → logprob: -1.9125531911849976
    3. '<|end|>' → logprob: -7.412553310394287
    4. '(list' → logprob: -7.537553310394287
    5. '(lambda' → logprob: -8.162552833557129
    6. '(str' → logprob: -8.287552833557129
    7. '(input' → logprob: -8.662552833557129
    8. 'int' → logprob: -8.912552833557129
    9. 'list' → logprob: -9.037552833557129
    10. '[int' → logprob: -9.912552833557129

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12395019084215164
    2. ')' → logprob: -2.623950242996216
    3. '(' → logprob: -3.498950242996216
    4. 'input' → logprob: -5.248950004577637
    5. '<|end|>' → logprob: -6.373950004577637
    6. '(read' → logprob: -6.498950004577637
    7. '())' → logprob: -7.248950004577637
    8. '(stdin' → logprob: -7.498950004577637
    9. '(
' → logprob: -7.748950004577637
    10. '.readline' → logprob: -7.748950004577637

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07210506498813629
    2. ' input' → logprob: -2.6971051692962646
    3. ')' → logprob: -6.1971049308776855
    4. '(input' → logprob: -9.947105407714844
    5. ',input' → logprob: -10.572105407714844
    6. 'open' → logprob: -11.822105407714844
    7. '[input' → logprob: -12.322105407714844
    8. 'list' → logprob: -12.322105407714844
    9. '=input' → logprob: -12.447105407714844
    10. 'split' → logprob: -12.447105407714844

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.503075897693634
    2. '()' → logprob: -1.6280758380889893
    3. '())' → logprob: -1.6280758380889893
    4. '(' → logprob: -6.503076076507568
    5. '()))' → logprob: -8.12807559967041
    6. '(()' → logprob: -8.50307559967041
    7. '('' → logprob: -8.62807559967041
    8. ')' → logprob: -9.25307559967041
    9. '());' → logprob: -9.25307559967041
    10. '();)' → logprob: -9.62807559967041

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003184363478794694
    2. 'strip' → logprob: -5.7531843185424805
    3. ' split' → logprob: -12.25318431854248
    4. 'rstrip' → logprob: -13.25318431854248
    5. '(split' → logprob: -16.628185272216797
    6. 'spl' → logprob: -17.128185272216797
    7. ' strip' → logprob: -17.503185272216797
    8. 's' → logprob: -18.003185272216797
    9. 'str' → logprob: -18.753185272216797
    10. 'read' → logprob: -18.878185272216797

Token 19: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11424944549798965
    2. '()))' → logprob: -2.4892494678497314
    3. ')' → logprob: -4.114249229431152
    4. '))' → logprob: -4.989249229431152
    5. '()' → logprob: -6.489249229431152
    6. '(' → logprob: -8.364249229431152
    7. '())
' → logprob: -11.114249229431152
    8. ' ())' → logprob: -11.114249229431152
    9. '()),' → logprob: -11.239249229431152
    10. '()))
' → logprob: -11.239249229431152

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6475942134857178
    2. 'n' → logprob: -0.8975942134857178
    3. 'a' → logprob: -4.272594451904297
    4. 'x' → logprob: -4.647594451904297
    5. 'for' → logprob: -5.272594451904297
    6. '\n' → logprob: -5.522594451904297
    7. 'd' → logprob: -5.647594451904297
    8. 'N' → logprob: -5.647594451904297
    9. 'size' → logprob: -5.897594451904297
    10. 'grid' → logprob: -5.897594451904297

Token 21: ' compute' (ID: 23864)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -0.9924580454826355
    2. ' predict' → logprob: -2.4924581050872803
    3. ' calculate' → logprob: -2.6174581050872803
    4. ' main' → logprob: -2.6174581050872803
    5. ' evolve' → logprob: -2.6174581050872803
    6. ' update' → logprob: -2.7424581050872803
    7. ' con' → logprob: -3.6174581050872803
    8. ' solve' → logprob: -3.7424581050872803
    9. ' convolution' → logprob: -3.8674581050872803
    10. ' process' → logprob: -3.9924581050872803

Token 22: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.332744836807251
    2. '(' → logprob: -1.957744836807251
    3. '_step' → logprob: -4.207744598388672
    4. '_array' → logprob: -4.457744598388672
    5. '_next' → logprob: -4.582744598388672
    6. '_sum' → logprob: -4.707744598388672
    7. '_diff' → logprob: -4.832744598388672
    8. '_cycle' → logprob: -4.957744598388672
    9. '_score' → logprob: -5.207744598388672
    10. '_max' → logprob: -5.582744598388672

Token 23: '(n' (ID: 2406)
  Prédit: 'oop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oop' → logprob: -0.9826573729515076
    2. 'ife' → logprob: -1.9826574325561523
    3. 'ength' → logprob: -2.4826574325561523
    4. 'ist' → logprob: -2.4826574325561523
    5. 'en' → logprob: -2.6076574325561523
    6. 'ine' → logprob: -2.8576574325561523
    7. 'inear' → logprob: -3.9826574325561523
    8. 'ong' → logprob: -4.232657432556152
    9. 'og' → logprob: -4.357657432556152
    10. 'e' → logprob: -4.357657432556152

Token 24: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2946804463863373
    2. ')' → logprob: -1.4196804761886597
    3. ',)' → logprob: -5.419680595397949
    4. '+' → logprob: -7.169680595397949
    5. ',n' → logprob: -7.169680595397949
    6. ',k' → logprob: -7.419680595397949
    7. ',l' → logprob: -7.669680595397949
    8. '_,' → logprob: -7.794680595397949
    9. '_)' → logprob: -7.919680595397949
    10. '):' → logprob: -7.919680595397949

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031657394021749496
    2. '(' → logprob: -4.6566572189331055
    3. ' ' → logprob: -5.7816572189331055
    4. '(n' → logprob: -5.9066572189331055
    5. '\' → logprob: -6.0316572189331055
    6. '\n' → logprob: -6.0316572189331055
    7. 'n' → logprob: -6.5316572189331055
    8. '    
' → logprob: -6.5316572189331055
    9. ' zeros' → logprob: -6.6566572189331055
    10. '[' → logprob: -6.7816572189331055

Token 26: ' return' (ID: 622)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17420600354671478
    2. ' zeros' → logprob: -2.174206018447876
    3. 'l' → logprob: -4.174205780029297
    4. '   ' → logprob: -4.299205780029297
    5. ' ' → logprob: -5.049205780029297
    6. 'zeros' → logprob: -5.549205780029297
    7. '[' → logprob: -6.924205780029297
    8. ' return' → logprob: -7.174205780029297
    9. ' [' → logprob: -7.299205780029297
    10. ' n' → logprob: -7.299205780029297

Token 27: ' n' (ID: 297)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.4789717495441437
    2. ' n' → logprob: -1.1039717197418213
    3. ' [' → logprob: -4.2289719581604
    4. ' ' → logprob: -5.1039719581604
    5. 'zeros' → logprob: -5.1039719581604
    6. 'n' → logprob: -5.3539719581604
    7. ' roll' → logprob: -5.8539719581604
    8. ' int' → logprob: -5.8539719581604
    9. '[' → logprob: -5.9789719581604
    10. '[n' → logprob: -5.9789719581604

Token 28: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5181009769439697
    2. '*' → logprob: -1.8931009769439697
    3. '(' → logprob: -2.6431009769439697
    4. '[' → logprob: -2.8931009769439697
    5. ' ' → logprob: -3.7681009769439697
    6. ' +' → logprob: -4.018100738525391
    7. '**' → logprob: -4.143100738525391
    8. ')' → logprob: -4.268100738525391
    9. '%' → logprob: -4.643100738525391
    10. ' *' → logprob: -4.643100738525391

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5972524285316467
    2. 'n' → logprob: -1.722252368927002
    3. ' ' → logprob: -2.347252368927002
    4. ' n' → logprob: -2.847252368927002
    5. '(n' → logprob: -2.972252368927002
    6. ' (' → logprob: -3.722252368927002
    7. '3' → logprob: -4.222252368927002
    8. '(' → logprob: -5.097252368927002
    9. '4' → logprob: -5.347252368927002
    10. '0' → logprob: -5.347252368927002

Token 30: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4343707859516144
    2. 'n' → logprob: -1.434370756149292
    3. '(n' → logprob: -2.684370756149292
    4. '3' → logprob: -4.309370994567871
    5. '(' → logprob: -4.434370994567871
    6. '10' → logprob: -5.559370994567871
    7. '0' → logprob: -5.559370994567871
    8. '4' → logprob: -5.684370994567871
    9. '1' → logprob: -6.184370994567871
    10. '5' → logprob: -6.559370994567871

Token 31: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3383088111877441
    2. 'def' → logprob: -1.3383088111877441
    3. '_' → logprob: -2.588308811187744
    4. '(' → logprob: -2.588308811187744
    5. '\n' → logprob: -2.713308811187744
    6. 'n' → logprob: -2.963308811187744
    7. '(n' → logprob: -3.088308811187744
    8. '\' → logprob: -3.338308811187744
    9. '+' → logprob: -3.588308811187744
    10. ')' → logprob: -3.713308811187744

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20599821209907532
    2. '1' → logprob: -2.455998182296753
    3. '2' → logprob: -2.580998182296753
    4. '3' → logprob: -5.080998420715332
    5. '4' → logprob: -5.205998420715332
    6. '7' → logprob: -5.205998420715332
    7. '6' → logprob: -6.080998420715332
    8. '5' → logprob: -6.080998420715332
    9. ' n' → logprob: -7.080998420715332
    10. '9' → logprob: -7.205998420715332

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9495907425880432
    2. '2' → logprob: -0.9495907425880432
    3. ' ' → logprob: -2.0745906829833984
    4. '7' → logprob: -3.1995906829833984
    5. '4' → logprob: -3.5745906829833984
    6. '5' → logprob: -4.449590682983398
    7. '3' → logprob: -4.449590682983398
    8. '6' → logprob: -5.574590682983398
    9. '10' → logprob: -7.074590682983398
    10. '8' → logprob: -7.199590682983398

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47286680340766907
    2. '

' → logprob: -1.9728667736053467
    3. 'def' → logprob: -2.4728667736053467
    4. '\n' → logprob: -3.2228667736053467
    5. '\' → logprob: -3.3478667736053467
    6. '*' → logprob: -3.5978667736053467
    7. 'newline' → logprob: -4.722867012023926
    8. 'n' → logprob: -4.722867012023926
    9. ')' → logprob: -4.847867012023926
    10. '<|end|>' → logprob: -5.097867012023926

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0379536934196949
    2. '
' → logprob: -4.287953853607178
    3. '\' → logprob: -4.787953853607178
    4. '```' → logprob: -5.412953853607178
    5. '\n' → logprob: -5.912953853607178
    6. '

' → logprob: -6.787953853607178
    7. '(' → logprob: -6.912953853607178
    8. ':' → logprob: -7.037953853607178
    9. '_' → logprob: -7.162953853607178
    10. 'n' → logprob: -7.412953853607178

Token 36: ' allocate' (ID: 48502)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.0958419218659401
    2. ' main' → logprob: -3.345841884613037
    3. ' solve' → logprob: -3.595841884613037
    4. '_compute' → logprob: -4.970841884613037
    5. ' calculate' → logprob: -5.595841884613037
    6. ' l' → logprob: -6.095841884613037
    7. ' run' → logprob: -6.220841884613037
    8. ' _' → logprob: -6.345841884613037
    9. ' process' → logprob: -6.345841884613037
    10. 'compute' → logprob: -6.720841884613037

Token 37: '_d' (ID: 1565)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.31715044379234314
    2. '_buffer' → logprob: -2.567150354385376
    3. '_' → logprob: -2.692150354385376
    4. '_arrays' → logprob: -3.692150354385376
    5. '_l' → logprob: -4.067150592803955
    6. '(' → logprob: -4.067150592803955
    7. '_memory' → logprob: -4.192150592803955
    8. '_buffers' → logprob: -4.442150592803955
    9. '_output' → logprob: -4.692150592803955
    10. '(n' → logprob: -5.067150592803955

Token 38: '(l' (ID: 4179)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.3155219852924347
    2. 'ouble' → logprob: -1.6905219554901123
    3. 'array' → logprob: -3.8155219554901123
    4. 'p' → logprob: -4.190522193908691
    5. 'ense' → logprob: -4.815522193908691
    6. '_array' → logprob: -4.940522193908691
    7. 'e' → logprob: -5.190522193908691
    8. 'evice' → logprob: -5.440522193908691
    9. 'ynamic' → logprob: -6.065522193908691
    10. 'atas' → logprob: -6.190522193908691

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10033897310495377
    2. ')' → logprob: -2.475338935852051
    3. '):
' → logprob: -4.600338935852051
    4. ',' → logprob: -7.225338935852051
    5. ' ):' → logprob: -8.60033893585205
    6. '):
' → logprob: -9.10033893585205
    7. '=' → logprob: -9.60033893585205
    8. ':' → logprob: -9.72533893585205
    9. ' )' → logprob: -10.22533893585205
    10. '_' → logprob: -11.22533893585205

Token 40: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.2019059658050537
    2. 'n' → logprob: -2.4519059658050537
    3. ' m' → logprob: -2.4519059658050537
    4. ' n' → logprob: -2.4519059658050537
    5. 'dtype' → logprob: -2.9519059658050537
    6. ' dtype' → logprob: -3.0769059658050537
    7. ' t' → logprob: -3.2019059658050537
    8. 'k' → logprob: -3.3269059658050537
    9. 't' → logprob: -3.3269059658050537
    10. 'd' → logprob: -3.5144059658050537

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48364168405532837
    2. ',' → logprob: -0.9836416840553284
    3. '):
' → logprob: -5.358641624450684
    4. ')' → logprob: -5.483641624450684
    5. ' ):' → logprob: -8.858641624450684
    6. ' ,' → logprob: -9.608641624450684
    7. '):
' → logprob: -9.858641624450684
    8. 's' → logprob: -9.983641624450684
    9. '=' → logprob: -10.233641624450684
    10. '   ' → logprob: -10.733641624450684

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04160132631659508
    2. ' return' → logprob: -3.2916014194488525
    3. '    ' → logprob: -7.041601181030273
    4. 'return' → logprob: -7.291601181030273
    5. ' zeros' → logprob: -7.416601181030273
    6. ' ' → logprob: -7.791601181030273
    7. '	return' → logprob: -8.541601181030273
    8. '[' → logprob: -8.791601181030273
    9. '```' → logprob: -9.041601181030273
    10. '    
' → logprob: -9.541601181030273

Token 43: ' return' (ID: 622)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.27781155705451965
    2. 'zeros' → logprob: -2.0278115272521973
    3. ' return' → logprob: -2.4028115272521973
    4. 'return' (adapté à ' return') → logprob: -4.152811527252197
    5. '   ' → logprob: -5.527811527252197
    6. ' ' → logprob: -8.402812004089355
    7. '```' → logprob: -9.777812004089355
    8. ' [' → logprob: -9.965312004089355
    9. ' array' → logprob: -10.027812004089355
    10. 'z' → logprob: -10.590312004089355

Token 44: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.2256401926279068
    2. ' zeros' → logprob: -1.6006401777267456
    3. ' ' → logprob: -9.975640296936035
    4. 'zero' → logprob: -10.475640296936035
    5. '   ' → logprob: -10.475640296936035
    6. '[' → logprob: -10.850640296936035
    7. 'roll' → logprob: -11.225640296936035
    8. 'zer' → logprob: -11.350640296936035
    9. '.zeros' → logprob: -11.538140296936035
    10. ' [' → logprob: -11.725640296936035

Token 45: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.018343433737754822
    2. '(' → logprob: -4.018343448638916
    3. '(l' → logprob: -8.643342971801758
    4. '([' → logprob: -12.018342971801758
    5. ' (' → logprob: -12.393342971801758
    6. ' ((' → logprob: -13.268342971801758
    7. '(shape' → logprob: -13.768342971801758
    8. ' ' → logprob: -13.768342971801758
    9. '(s' → logprob: -14.268342971801758
    10. '(int' → logprob: -14.393342971801758

Token 46: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018692858517169952
    2. ' l' → logprob: -4.143692970275879
    3. '(l' → logprob: -7.518692970275879
    4. ',' → logprob: -7.643692970275879
    5. '2' → logprob: -7.893692970275879
    6. ')' → logprob: -8.268692970275879
    7. 'n' → logprob: -8.393692970275879
    8. '(' → logprob: -8.518692970275879
    9. ' ' → logprob: -9.018692970275879
    10. '3' → logprob: -9.143692970275879

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019979889038950205
    2. ' ,' → logprob: -7.001997947692871
    3. '+' → logprob: -8.001997947692871
    4. '))' → logprob: -8.751997947692871
    5. ',n' → logprob: -9.126997947692871
    6. '-' → logprob: -9.251997947692871
    7. ')' → logprob: -9.376997947692871
    8. ' ' → logprob: -9.751997947692871
    9. ' +' → logprob: -10.126997947692871
    10. ',)' → logprob: -10.126997947692871

Token 48: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5613734126091003
    2. '3' → logprob: -1.6863734722137451
    3. ' n' → logprob: -2.686373472213745
    4. 'l' → logprob: -2.936373472213745
    5. '2' → logprob: -3.686373472213745
    6. '4' → logprob: -3.811373472213745
    7. '6' → logprob: -4.061373233795166
    8. ' ' → logprob: -4.311373233795166
    9. '7' → logprob: -4.811373233795166
    10. '1' → logprob: -4.936373233795166

Token 49: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31637564301490784
    2. '),' → logprob: -1.3163756132125854
    3. ')' → logprob: -6.566375732421875
    4. ',' → logprob: -7.066375732421875
    5. ' ))' → logprob: -7.816375732421875
    6. ' ),' → logprob: -8.566375732421875
    7. '+' → logprob: -9.191375732421875
    8. ' ' → logprob: -9.941375732421875
    9. '))
' → logprob: -10.941375732421875
    10. ')))' → logprob: -11.066375732421875

Token 50: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.48320433497428894
    2. '2' → logprob: -1.3582043647766113
    3. '4' → logprob: -2.7332043647766113
    4. '6' → logprob: -4.108204364776611
    5. '))' → logprob: -4.358204364776611
    6. ' ' → logprob: -4.483204364776611
    7. ',' → logprob: -4.733204364776611
    8. '7' → logprob: -5.858204364776611
    9. '*' → logprob: -6.733204364776611
    10. '+' → logprob: -6.733204364776611

Token 51: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42647048830986023
    2. '2' → logprob: -1.4264705181121826
    3. '4' → logprob: -2.9264705181121826
    4. '6' → logprob: -3.6764705181121826
    5. '5' → logprob: -4.6764702796936035
    6. '7' → logprob: -4.8014702796936035
    7. 'l' → logprob: -5.8014702796936035
    8. '8' → logprob: -6.1764702796936035
    9. '9' → logprob: -6.6764702796936035
    10. ' ' → logprob: -6.8014702796936035

Token 52: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017061131075024605
    2. '),' → logprob: -4.267061233520508
    3. ')' → logprob: -6.642061233520508
    4. ' ))' → logprob: -7.142061233520508
    5. '+' → logprob: -7.767061233520508
    6. ')))' → logprob: -9.267061233520508
    7. ',' → logprob: -9.642061233520508
    8. ' ' → logprob: -10.017061233520508
    9. ' +' → logprob: -10.142061233520508
    10. ' ),' → logprob: -10.892061233520508

Token 53: ' dtype' (ID: 29770)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.7733218669891357
    2. ' float' → logprob: -1.2733218669891357
    3. ' dtype' → logprob: -2.2733218669891357
    4. 'dtype' → logprob: -2.3983218669891357
    5. ')' → logprob: -2.8983218669891357
    6. 'int' → logprob: -5.023322105407715
    7. ' int' → logprob: -6.523322105407715
    8. ' )' → logprob: -8.023322105407715
    9. 'bool' → logprob: -8.148322105407715
    10. ' ' → logprob: -8.398322105407715

Token 54: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934909224510193
    2. '=int' → logprob: -0.6934909224510193
    3. '=np' → logprob: -8.818490982055664
    4. '=
' → logprob: -9.943490982055664
    5. '=

' → logprob: -10.193490982055664
    6. '='' → logprob: -10.443490982055664
    7. '=float' → logprob: -10.693490982055664
    8. '=`' → logprob: -10.943490982055664
    9. ')=' → logprob: -11.818490982055664
    10. 'int' → logprob: -12.568490982055664

Token 55: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.39801278710365295
    2. 'float' → logprob: -2.14801287651062
    3. 'uint' → logprob: -2.77301287651062
    4. 'bool' → logprob: -3.02301287651062
    5. 'u' → logprob: -3.39801287651062
    6. 'b' → logprob: -3.77301287651062
    7. 'i' → logprob: -3.77301287651062
    8. 'f' → logprob: -5.148012638092041
    9. ' int' → logprob: -5.148012638092041
    10. 'complex' → logprob: -6.148012638092041

Token 56: '64' (ID: 2220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.12958011031150818
    2. '32' → logprob: -2.129580020904541
    3. '')' → logprob: -6.629580020904541
    4. '64' → logprob: -6.879580020904541
    5. ''))' → logprob: -8.3795804977417
    6. '16' → logprob: -10.3795804977417
    7. '_' → logprob: -11.2545804977417
    8. ''' → logprob: -11.3795804977417
    9. ')' → logprob: -12.0045804977417
    10. '6' → logprob: -12.7545804977417

Token 57: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5794028043746948
    2. '')' → logprob: -0.8294028043746948
    3. ''))' → logprob: -5.954402923583984
    4. '))' → logprob: -7.079402923583984
    5. ''' → logprob: -11.454402923583984
    6. ')'' → logprob: -12.829402923583984
    7. ' )' → logprob: -13.329402923583984
    8. '")' → logprob: -14.204402923583984
    9. '')))' → logprob: -14.204402923583984
    10. ')")' → logprob: -14.204402923583984

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05076923593878746
    2. '
' → logprob: -3.925769329071045
    3. '

' → logprob: -3.925769329071045
    4. '\n' → logprob: -5.550769329071045
    5. ' def' → logprob: -6.175769329071045
    6. '\' → logprob: -6.550769329071045
    7. '_' → logprob: -7.550769329071045
    8. ' 

' → logprob: -7.800769329071045
    9. '```' → logprob: -7.800769329071045
    10. 'd' → logprob: -8.175768852233887

Token 59: ' initialize' (ID: 18400)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.03427888825535774
    2. '_' → logprob: -5.034278869628906
    3. ' process' → logprob: -5.034278869628906
    4. ' update' → logprob: -5.409278869628906
    5. '_compute' → logprob: -6.159278869628906
    6. 'compute' → logprob: -6.159278869628906
    7. ' run' → logprob: -6.284278869628906
    8. ' calculate' → logprob: -6.784278869628906
    9. ' main' → logprob: -7.034278869628906
    10. ' initialize' → logprob: -7.034278869628906

Token 60: '_d' (ID: 1565)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5933422446250916
    2. '_d' → logprob: -1.3433423042297363
    3. '_(' → logprob: -2.3433423042297363
    4. '(' → logprob: -2.7183423042297363
    5. '_array' → logprob: -4.718342304229736
    6. '_data' → logprob: -4.968342304229736
    7. '(d' → logprob: -5.718342304229736
    8. '_D' → logprob: -7.593342304229736
    9. '_arrays' → logprob: -7.843342304229736
    10. '```' → logprob: -8.093341827392578

Token 61: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6497934460639954
    2. '(d' → logprob: -0.8997934460639954
    3. '(l' → logprob: -2.6497933864593506
    4. '((' → logprob: -8.14979362487793
    5. ' (' → logprob: -9.64979362487793
    6. '(D' → logprob: -9.89979362487793
    7. '(n' → logprob: -10.14979362487793
    8. '_d' → logprob: -11.39979362487793
    9. '(s' → logprob: -11.39979362487793
    10. '(a' → logprob: -11.39979362487793

Token 62: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5808506011962891
    2. '):' → logprob: -0.8308506011962891
    3. ')' → logprob: -5.955850601196289
    4. '):
' → logprob: -7.330850601196289
    5. ' ):' → logprob: -7.455850601196289
    6. ',d' → logprob: -7.580850601196289
    7. ' ,' → logprob: -7.830850601196289
    8. ')):' → logprob: -10.080850601196289
    9. ' ' → logprob: -11.080850601196289
    10. '):
' → logprob: -11.205850601196289

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1452425867319107
    2. ' d' → logprob: -2.520242691040039
    3. 'd' → logprob: -3.270242691040039
    4. ' for' → logprob: -4.270242691040039
    5. '    
' → logprob: -7.395242691040039
    6. 'for' → logprob: -7.895242691040039
    7. '```' → logprob: -8.145242691040039
    8. '    ' → logprob: -8.395242691040039
    9. '	d' → logprob: -8.645242691040039
    10. ' roll' → logprob: -8.645242691040039

Token 64: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.38029181957244873
    2. 'd' (adapté à ' d') → logprob: -1.3802918195724487
    3. ' for' → logprob: -3.2552919387817383
    4. '   ' → logprob: -4.005291938781738
    5. 'for' → logprob: -5.505291938781738
    6. ' roll' → logprob: -6.755291938781738
    7. ' return' → logprob: -6.880291938781738
    8. 'roll' → logprob: -8.005291938781738
    9. 'n' → logprob: -8.380291938781738
    10. '```' → logprob: -8.505291938781738

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02922884374856949
    2. '[:' → logprob: -4.654228687286377
    3. '[:]' → logprob: -4.654228687286377
    4. '[:,' → logprob: -4.779228687286377
    5. '.fill' → logprob: -7.154228687286377
    6. '[...]' → logprob: -8.154229164123535
    7. '[:,:,' → logprob: -9.279229164123535
    8. '[-' → logprob: -9.904229164123535
    9. '[...,' → logprob: -10.404229164123535
    10. '=' → logprob: -10.904229164123535

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03290784731507301
    2. ' ' → logprob: -3.5329079627990723
    3. ',' → logprob: -6.157907962799072
    4. '1' → logprob: -8.032907485961914
    5. '[' → logprob: -8.407907485961914
    6. ' ,' → logprob: -9.032907485961914
    7. '-' → logprob: -9.157907485961914
    8. ':' → logprob: -10.032907485961914
    9. '(' → logprob: -10.282907485961914
    10. ' :' → logprob: -10.470407485961914

Token 67: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024506783112883568
    2. '][' → logprob: -4.649506568908691
    3. '[' → logprob: -4.774506568908691
    4. ']' → logprob: -5.524506568908691
    5. ' ,' → logprob: -6.274506568908691
    6. ' ' → logprob: -9.649506568908691
    7. ',[' → logprob: -9.774506568908691
    8. ' ][' → logprob: -10.399506568908691
    9. '   ' → logprob: -10.649506568908691
    10. ')' → logprob: -11.149506568908691

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03782308101654053
    2. '2' → logprob: -4.66282320022583
    3. ':' → logprob: -4.78782320022583
    4. '::' → logprob: -5.28782320022583
    5. 'd' → logprob: -5.41282320022583
    6. ':]' → logprob: -6.16282320022583
    7. '...]' → logprob: -6.16282320022583
    8. '...' → logprob: -6.53782320022583
    9. '-' → logprob: -6.66282320022583
    10. ':d' → logprob: -7.16282320022583

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009203928639180958
    2. ']=' → logprob: -7.375920295715332
    3. ' ]' → logprob: -8.250920295715332
    4. '=' → logprob: -11.875920295715332
    5. ',' → logprob: -12.250920295715332
    6. ']+=' → logprob: -12.375920295715332
    7. ':]' → logprob: -13.000920295715332
    8. '[' → logprob: -13.125920295715332
    9. '`]' → logprob: -13.375920295715332
    10. ']==' → logprob: -13.500920295715332

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005292457528412342
    2. ' =' → logprob: -5.2552924156188965
    3. ']=' → logprob: -10.755292892456055
    4. '+=' → logprob: -11.005292892456055
    5. ']' → logprob: -11.130292892456055
    6. '[' → logprob: -13.380292892456055
    7. ',' → logprob: -14.380292892456055
    8. ' +=' → logprob: -14.505292892456055
    9. '=}' → logprob: -14.880292892456055
    10. '=

' → logprob: -15.005292892456055

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00689652469009161
    2. '0' → logprob: -6.256896495819092
    3. ' ' → logprob: -6.506896495819092
    4. '-' → logprob: -6.756896495819092
    5. '2' → logprob: -6.881896495819092
    6. '3' → logprob: -7.381896495819092
    7. '5' → logprob: -8.88189697265625
    8. '4' → logprob: -9.13189697265625
    9. 'd' → logprob: -9.75689697265625
    10. '7' → logprob: -10.25689697265625

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017729124054312706
    2. '3' → logprob: -5.26772928237915
    3. '0' → logprob: -5.39272928237915
    4. '2' → logprob: -5.76772928237915
    5. '-' → logprob: -6.14272928237915
    6. '5' → logprob: -7.26772928237915
    7. '4' → logprob: -7.64272928237915
    8. '7' → logprob: -8.267728805541992
    9. '10' → logprob: -8.642728805541992
    10. 'd' → logprob: -8.892728805541992

Token 73: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9714627265930176
    2. '\n' → logprob: -1.4714627265930176
    3. '<|end|>' → logprob: -1.4714627265930176
    4. '\' → logprob: -2.8464627265930176
    5. ' 
' → logprob: -3.4714627265930176
    6. ' ' → logprob: -3.9714627265930176
    7. 'd' → logprob: -4.596462726593018
    8. '    
' → logprob: -4.971462726593018
    9. '' → logprob: -5.096462726593018
    10. '   ' → logprob: -5.221462726593018

Token 74: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2716786861419678
    2. '<|end|>' → logprob: -1.6466786861419678
    3. '\n' → logprob: -3.6466786861419678
    4. 'def' → logprob: -5.021678924560547
    5. '<|end|>' → logprob: -5.271678924560547
    6. '```' → logprob: -6.271678924560547
    7. '\' → logprob: -6.271678924560547
    8. '   ' → logprob: -7.146678924560547
    9. 'd' → logprob: -8.021678924560547
    10. '    
' → logprob: -8.021678924560547

Token 75: ' get' (ID: 717)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.4637520909309387
    2. ' initialize' → logprob: -1.338752031326294
    3. ' update' → logprob: -3.088752031326294
    4. ' shift' → logprob: -4.213752269744873
    5. ' apply' → logprob: -4.338752269744873
    6. ' ' → logprob: -5.338752269744873
    7. ' def' → logprob: -5.838752269744873
    8. ' evolve' → logprob: -5.963752269744873
    9. ' continue' → logprob: -6.213752269744873
    10. ' main' → logprob: -6.338752269744873

Token 76: '_indices' (ID: 43508)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.5435341596603394
    2. '_d' → logprob: -2.168534278869629
    3. '_max' → logprob: -2.543534278869629
    4. '_neighbors' → logprob: -2.543534278869629
    5. '_roll' → logprob: -2.668534278869629
    6. '_l' → logprob: -3.043534278869629
    7. '_input' → logprob: -3.293534278869629
    8. '_value' → logprob: -3.668534278869629
    9. '_initial' → logprob: -4.043534278869629
    10. '_' → logprob: -4.043534278869629

Token 77: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10128740221261978
    2. '(n' → logprob: -2.851287364959717
    3. '():' → logprob: -4.101287364959717
    4. '(l' → logprob: -4.476287364959717
    5. '(i' → logprob: -6.476287364959717
    6. '(line' → logprob: -6.976287364959717
    7. '(s' → logprob: -7.226287364959717
    8. '(:' → logprob: -7.601287364959717
    9. '(row' → logprob: -7.726287364959717
    10. '(size' → logprob: -7.726287364959717

Token 78: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04515594244003296
    2. '):' → logprob: -3.1701560020446777
    3. ' ,' → logprob: -7.170156002044678
    4. ',n' → logprob: -7.420156002044678
    5. '):
' → logprob: -7.920156002044678
    6. ',i' → logprob: -8.92015552520752
    7. ')' → logprob: -9.54515552520752
    8. ',j' → logprob: -9.79515552520752
    9. ' ):' → logprob: -10.29515552520752
    10. ',k' → logprob: -10.92015552520752

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02629147283732891
    2. ' return' → logprob: -4.026291370391846
    3. 'return' → logprob: -5.901291370391846
    4. ':' → logprob: -5.901291370391846
    5. ':return' → logprob: -7.526291370391846
    6. '<|end|>' → logprob: -7.526291370391846
    7. ' ' → logprob: -8.276291847229004
    8. '[' → logprob: -8.401291847229004
    9. ',' → logprob: -8.651291847229004
    10. ':
' → logprob: -8.776291847229004

Token 80: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6573748588562012
    2. 'return' (adapté à ' return') → logprob: -1.7823748588562012
    3. '   ' → logprob: -2.032374858856201
    4. ' return' → logprob: -3.032374858856201
    5. '[' → logprob: -3.407374858856201
    6. '(i' → logprob: -3.532374858856201
    7. ' (' → logprob: -3.657374858856201
    8. ':' → logprob: -3.907374858856201
    9. ':return' → logprob: -4.657374858856201
    10. ' i' → logprob: -5.532374858856201

Token 81: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3875786364078522
    2. ' (' → logprob: -2.0125787258148193
    3. 'i' → logprob: -2.6375787258148193
    4. ' [' → logprob: -3.5125787258148193
    5. '(i' → logprob: -3.7625787258148193
    6. '(' → logprob: -3.8875787258148193
    7. ' ' → logprob: -4.38757848739624
    8. '0' → logprob: -4.63757848739624
    9. '[' → logprob: -4.88757848739624
    10. '[i' → logprob: -4.88757848739624

Token 82: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18262629210948944
    2. '+' → logprob: -2.432626247406006
    3. ' +' → logprob: -3.807626247406006
    4. ' ' → logprob: -4.182626247406006
    5. '<|end|>' → logprob: -4.557626247406006
    6. '*' → logprob: -5.057626247406006
    7. '(' → logprob: -5.307626247406006
    8. '[' → logprob: -5.307626247406006
    9. ' *' → logprob: -5.932626247406006
    10. ',i' → logprob: -6.432626247406006

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08311983197927475
    2. '3' → logprob: -3.0831198692321777
    3. '2' → logprob: -3.8331198692321777
    4. 'compute' → logprob: -5.458119869232178
    5. ' ' → logprob: -5.833119869232178
    6. '4' → logprob: -6.583119869232178
    7. 'i' → logprob: -7.208119869232178
    8. '5' → logprob: -7.458119869232178
    9. '6' → logprob: -7.708119869232178
    10. '(' → logprob: -7.833119869232178

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04067394882440567
    2. '3' → logprob: -4.040673732757568
    3. '2' → logprob: -4.040673732757568
    4. '4' → logprob: -6.790673732757568
    5. '5' → logprob: -7.165673732757568
    6. '6' → logprob: -7.415673732757568
    7. '10' → logprob: -8.290674209594727
    8. 'i' → logprob: -8.540674209594727
    9. '(' → logprob: -8.665674209594727
    10. '15' → logprob: -8.790674209594727

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24714061617851257
    2. '<|end|>' → logprob: -2.247140645980835
    3. '+' → logprob: -2.372140645980835
    4. 'def' → logprob: -5.122140407562256
    5. ',
' → logprob: -5.497140407562256
    6. '*' → logprob: -5.747140407562256
    7. ' +' → logprob: -6.122140407562256
    8. '<|end|>' → logprob: -6.747140407562256
    9. '
' → logprob: -7.122140407562256
    10. ' ' → logprob: -7.497140407562256

Token 86: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5717829465866089
    2. ' i' → logprob: -1.0717829465866089
    3. '0' → logprob: -2.8217830657958984
    4. ' ' → logprob: -3.8217830657958984
    5. '1' → logprob: -5.196783065795898
    6. '2' → logprob: -6.446783065795898
    7. ' max' → logprob: -7.571783065795898
    8. ' (' → logprob: -7.571783065795898
    9. '...' → logprob: -8.071783065795898
    10. '  ' → logprob: -8.071783065795898

Token 87: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2862284481525421
    2. '1' → logprob: -1.5362284183502197
    3. ' ' → logprob: -3.5362284183502197
    4. '3' → logprob: -5.661228656768799
    5. '0' → logprob: -8.53622817993164
    6. '5' → logprob: -8.78622817993164
    7. '4' → logprob: -9.03622817993164
    8. '6' → logprob: -9.28622817993164
    9. '7' → logprob: -9.84872817993164
    10. 'i' → logprob: -9.84872817993164

Token 89: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2482425421476364
    2. '1' → logprob: -1.7482424974441528
    3. '3' → logprob: -3.1232426166534424
    4. '4' → logprob: -7.873242378234863
    5. '0' → logprob: -8.248242378234863
    6. '5' → logprob: -8.248242378234863
    7. 'i' → logprob: -8.373242378234863
    8. ' ' → logprob: -8.498242378234863
    9. '6' → logprob: -8.873242378234863
    10. '7' → logprob: -10.060742378234863

Token 90: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3921356201171875
    2. '<|end|>' → logprob: -1.1421356201171875
    3. '<|end|>' → logprob: -6.1421356201171875
    4. '
' → logprob: -6.3921356201171875
    5. ',' → logprob: -7.5171356201171875
    6. '```' → logprob: -8.017135620117188
    7. ' def' → logprob: -8.142135620117188
    8. '[' → logprob: -9.642135620117188
    9. '

' → logprob: -10.392135620117188
    10. '\' → logprob: -10.892135620117188

Token 91: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5603666305541992
    2. '<|end|>' → logprob: -0.9353666305541992
    3. ',' → logprob: -3.685366630554199
    4. '<|end|>' → logprob: -5.060366630554199
    5. ' def' → logprob: -5.935366630554199
    6. '
' → logprob: -7.435366630554199
    7. ')' → logprob: -7.560366630554199
    8. '[' → logprob: -8.3103666305542
    9. '```' → logprob: -8.5603666305542
    10. ' ' → logprob: -8.8103666305542

Token 92: ' mult' (ID: 3469)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.7648276686668396
    2. ' update' → logprob: -1.6398277282714844
    3. ' process' → logprob: -2.0148277282714844
    4. 'compute' → logprob: -3.2648277282714844
    5. ' get' → logprob: -3.3898277282714844
    6. ' shift' → logprob: -3.7648277282714844
    7. ' apply' → logprob: -4.389827728271484
    8. ' roll' → logprob: -4.639827728271484
    9. 'process' → logprob: -4.764827728271484
    10. ' def' → logprob: -4.889827728271484

Token 93: '_prev' (ID: 60491)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.03873187303543091
    2. 'ipy' → logprob: -3.913731813430786
    3. 'iline' → logprob: -5.538732051849365
    4. 'ipl' → logprob: -5.663732051849365
    5. 'iplier' → logprob: -5.788732051849365
    6. '_array' → logprob: -6.788732051849365
    7. 'def' → logprob: -7.288732051849365
    8. 'line' → logprob: -7.413732051849365
    9. 'ply' → logprob: -7.413732051849365
    10. 'il' → logprob: -7.538732051849365

Token 94: '_val' (ID: 13694)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.760333240032196
    2. '(i' → logprob: -1.8853332996368408
    3. 'ip' → logprob: -2.010333299636841
    4. 'iplier' → logprob: -2.135333299636841
    5. 'ipl' → logprob: -2.635333299636841
    6. '_indices' → logprob: -3.760333299636841
    7. '(' → logprob: -5.010333061218262
    8. 'iple' → logprob: -5.385333061218262
    9. '_prev' → logprob: -5.385333061218262
    10. '_ip' → logprob: -5.885333061218262

Token 95: '(d' (ID: 2572)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.37117910385131836
    2. '(i' → logprob: -1.2461791038513184
    3. 's' → logprob: -3.9961791038513184
    4. '(' → logprob: -5.871179103851318
    5. '(d' → logprob: -8.371179580688477
    6. '(s' → logprob: -8.871179580688477
    7. 'ip' → logprob: -8.871179580688477
    8. '(ip' → logprob: -8.996179580688477
    9. '(n' → logprob: -9.121179580688477
    10. '(val' → logprob: -9.621179580688477

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009978002868592739
    2. ',i' → logprob: -5.5099778175354
    3. '[i' → logprob: -5.7599778175354
    4. '[' → logprob: -6.3849778175354
    5. ' ,' → logprob: -7.1349778175354
    6. '   ' → logprob: -8.884978294372559
    7. '[:,' → logprob: -10.884978294372559
    8. ')' → logprob: -11.384978294372559
    9. ' ' → logprob: -11.384978294372559
    10. '):' → logprob: -11.634978294372559

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23109501600265503
    2. 'i' → logprob: -1.6060950756072998
    3. ' n' → logprob: -5.856094837188721
    4. ' d' → logprob: -7.606094837188721
    5. ' l' → logprob: -7.731094837188721
    6. 'n' → logprob: -7.731094837188721
    7. ' ' → logprob: -8.356095314025879
    8. ' j' → logprob: -8.606095314025879
    9. ' indices' → logprob: -8.606095314025879
    10. 'd' → logprob: -8.731095314025879

Token 98: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2866840064525604
    2. ',' → logprob: -1.5366840362548828
    3. '):
' → logprob: -3.536684036254883
    4. ')' → logprob: -6.036684036254883
    5. ' ):' → logprob: -6.786684036254883
    6. '-' → logprob: -8.286684036254883
    7. '):
' → logprob: -8.411684036254883
    8. '   ' → logprob: -8.786684036254883
    9. '1' → logprob: -8.786684036254883
    10. ' ,' → logprob: -9.161684036254883

Token 99: ' k' (ID: 372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8401515483856201
    2. ' n' → logprob: -1.0901515483856201
    3. 'l' → logprob: -3.21515154838562
    4. 'j' → logprob: -3.34015154838562
    5. ' l' → logprob: -3.46515154838562
    6. ' j' → logprob: -3.84015154838562
    7. 'd' → logprob: -3.84015154838562
    8. ' d' → logprob: -4.340151786804199
    9. 'i' → logprob: -4.590151786804199
    10. ' ' → logprob: -4.840151786804199

Token 100: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10487691313028336
    2. ',' → logprob: -2.97987699508667
    3. '):
' → logprob: -3.10487699508667
    4. ')' → logprob: -5.97987699508667
    5. '):
' → logprob: -7.47987699508667
    6. ' ):' → logprob: -8.104876518249512
    7. '   ' → logprob: -8.854876518249512
    8. '):

' → logprob: -9.604876518249512
    9. 's' → logprob: -10.354876518249512
    10. ' ,' → logprob: -10.479876518249512

Token 101: ' j' (ID: 441)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3737363815307617
    2. ' j' → logprob: -1.3737363815307617
    3. ' l' → logprob: -2.1237363815307617
    4. 'j' → logprob: -2.1237363815307617
    5. 'n' → logprob: -2.4987363815307617
    6. 'l' → logprob: -3.3737363815307617
    7. ' prev' → logprob: -4.123736381530762
    8. ' val' → logprob: -4.123736381530762
    9. ' indices' → logprob: -4.498736381530762
    10. ' idx' → logprob: -4.873736381530762

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3936687409877777
    2. '):
' → logprob: -1.1436687707901
    3. ',' → logprob: -5.5186686515808105
    4. ')' → logprob: -7.0186686515808105
    5. '):
' → logprob: -7.1436686515808105
    6. '-' → logprob: -7.7686686515808105
    7. '   ' → logprob: -8.393669128417969
    8. ' ):' → logprob: -8.768669128417969
    9. ' ):
' → logprob: -9.768669128417969
    10. ' ' → logprob: -10.143669128417969

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9441078305244446
    2. ' d' → logprob: -0.9441078305244446
    3. 'd' → logprob: -1.8191077709197998
    4. '    ' → logprob: -3.3191077709198
    5. ' ' → logprob: -4.319108009338379
    6. ' =' → logprob: -5.319108009338379
    7. ' return' → logprob: -5.944108009338379
    8. '=' → logprob: -7.319108009338379
    9. '	d' → logprob: -7.819108009338379
    10. '[' → logprob: -8.194108009338379

Token 104: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.117418646812439
    2. '   ' → logprob: -1.492418646812439
    3. ' d' → logprob: -1.617418646812439
    4. ' return' → logprob: -1.742418646812439
    5. 'return' → logprob: -2.6174187660217285
    6. ' ' → logprob: -7.7424187660217285
    7. '    ' → logprob: -7.9924187660217285
    8. 'if' (adapté à ' if') → logprob: -8.86741828918457
    9. '       ' → logprob: -8.99241828918457
    10. ' if' → logprob: -9.11741828918457

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8668899536132812
    2. ' j' → logprob: -0.9918899536132812
    3. ' k' → logprob: -1.7418899536132812
    4. 'j' → logprob: -4.616889953613281
    5. 'i' → logprob: -4.866889953613281
    6. 'k' → logprob: -4.991889953613281
    7. ' d' → logprob: -5.116889953613281
    8. ' ' → logprob: -6.116889953613281
    9. ' (' → logprob: -7.491889953613281
    10. 'd' → logprob: -8.741889953613281

Token 106: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16760821640491486
    2. '>' → logprob: -2.1676082611083984
    3. ' <' → logprob: -4.167608261108398
    4. '-' → logprob: -5.167608261108398
    5. '[' → logprob: -5.292608261108398
    6. ' ==' → logprob: -5.667608261108398
    7. ' ' → logprob: -5.792608261108398
    8. '<' → logprob: -6.417608261108398
    9. ' <=' → logprob: -6.417608261108398
    10. '==' → logprob: -6.667608261108398

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021996699273586273
    2. ' ' → logprob: -4.27199649810791
    3. '1' → logprob: -5.27199649810791
    4. '3' → logprob: -6.02199649810791
    5. 'len' → logprob: -9.27199649810791
    6. 'compute' → logprob: -9.77199649810791
    7. 'k' → logprob: -11.14699649810791
    8. '=' → logprob: -11.27199649810791
    9. '0' → logprob: -11.27199649810791
    10. 'get' → logprob: -11.33449649810791

Token 108: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007810558192431927
    2. '1' → logprob: -5.132810592651367
    3. '3' → logprob: -6.757810592651367
    4. 'len' → logprob: -7.757810592651367
    5. ' ' → logprob: -8.382810592651367
    6. 'k' → logprob: -11.007810592651367
    7. '0' → logprob: -11.632810592651367
    8. 'compute' → logprob: -11.632810592651367
    9. 'l' → logprob: -11.757810592651367
    10. '   ' → logprob: -12.382810592651367

Token 109: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2896057665348053
    2. ':' → logprob: -1.414605736732483
    3. ' and' → logprob: -5.539605617523193
    4. '   ' → logprob: -6.414605617523193
    5. ':return' → logprob: -6.414605617523193
    6. '       ' → logprob: -7.539605617523193
    7. ' or' → logprob: -7.914605617523193
    8. ' :
' → logprob: -8.789606094360352
    9. 'and' → logprob: -9.664606094360352
    10. ':
' → logprob: -10.414606094360352

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015104594640433788
    2. '        ' → logprob: -5.7651047706604
    3. ' return' → logprob: -5.8901047706604
    4. '    ' → logprob: -6.2651047706604
    5. '   ' → logprob: -6.6401047706604
    6. ' ' → logprob: -6.6401047706604
    7. 'd' → logprob: -6.7651047706604
    8. ' d' → logprob: -7.0151047706604
    9. ':' → logprob: -7.6401047706604
    10. ':return' → logprob: -8.140104293823242

Token 111: ' return' (ID: 622)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.054687261581421
    2. '       ' → logprob: -1.179687261581421
    3. ' return' → logprob: -1.679687261581421
    4. 'd' → logprob: -2.179687261581421
    5. 'return' (adapté à ' return') → logprob: -3.304687261581421
    6. '   ' → logprob: -6.0546875
    7. '           ' → logprob: -6.4296875
    8. '        ' → logprob: -6.4296875
    9. ' ' → logprob: -6.9296875
    10. '    ' → logprob: -7.4296875

Token 112: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9850315451622009
    2. ' d' → logprob: -1.3600316047668457
    3. ' ' → logprob: -1.4850316047668457
    4. '0' → logprob: -2.9850316047668457
    5. '1' → logprob: -3.3600316047668457
    6. ' None' → logprob: -3.9850316047668457
    7. 'None' → logprob: -4.360031604766846
    8. '   ' → logprob: -4.485031604766846
    9. '
' → logprob: -4.735031604766846
    10. ' zeros' → logprob: -6.610031604766846

Token 113: '0' (ID: 15)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7356452345848083
    2. '0' → logprob: -1.2356452941894531
    3. '1' → logprob: -1.4856452941894531
    4. ' ' → logprob: -6.235645294189453
    5. 'None' → logprob: -7.610645294189453
    6. ' d' → logprob: -7.735645294189453
    7. '   ' → logprob: -7.985645294189453
    8. '
' → logprob: -9.485645294189453
    9. 'False' → logprob: -9.985645294189453
    10. 'return' → logprob: -9.985645294189453

Token 114: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08069642633199692
    2. ' else' → logprob: -3.4556963443756104
    3. ' ' → logprob: -4.0806965827941895
    4. '    
' → logprob: -4.8306965827941895
    5. ' 
' → logprob: -5.0806965827941895
    6. '<|end|>' → logprob: -5.3306965827941895
    7. '
' → logprob: -6.7056965827941895
    8. '    ' → logprob: -6.7056965827941895
    9. '  
' → logprob: -6.8306965827941895
    10. '   
' → logprob: -6.9556965827941895

Token 116: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11680371314287186
    2. '
' → logprob: -3.2418036460876465
    3. ' else' → logprob: -4.1168036460876465
    4. 'return' (adapté à ' return') → logprob: -4.2418036460876465
    5. 'else' → logprob: -4.3668036460876465
    6. '    
' → logprob: -4.3668036460876465
    7. 'd' → logprob: -5.2418036460876465
    8. ' return' → logprob: -5.6168036460876465
    9. '  
' → logprob: -6.7418036460876465
    10. 'if' → logprob: -6.9918036460876465

Token 117: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3526768982410431
    2. 'd' → logprob: -1.2276768684387207
    3. '   ' → logprob: -5.727676868438721
    4. ' ' → logprob: -7.852676868438721
    5. '    ' → logprob: -8.852677345275879
    6. '(d' → logprob: -9.477677345275879
    7. '3' → logprob: -9.602677345275879
    8. '2' → logprob: -9.852677345275879
    9. 'int' → logprob: -10.102677345275879
    10. '	d' → logprob: -10.352677345275879

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.64970643306151e-05
    2. '[' → logprob: -9.500086784362793
    3. ' [' → logprob: -11.875086784362793
    4. '[
' → logprob: -13.375086784362793
    5. '[I' → logprob: -14.250086784362793
    6. '[(' → logprob: -14.500086784362793
    7. ' ' → logprob: -14.750086784362793
    8. '   ' → logprob: -14.875086784362793
    9. '[k' → logprob: -15.500086784362793
    10. '[j' → logprob: -15.750086784362793

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018898174166679382
    2. ' -' → logprob: -4.143898010253906
    3. 'get' → logprob: -6.643898010253906
    4. 'k' → logprob: -7.393898010253906
    5. '-get' → logprob: -8.518898010253906
    6. '   ' → logprob: -8.893898010253906
    7. '][' → logprob: -9.018898010253906
    8. ' ' → logprob: -9.143898010253906
    9. '[get' → logprob: -9.393898010253906
    10. '-k' → logprob: -9.518898010253906

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.040785081684589386
    2. '2' → logprob: -3.415785074234009
    3. '3' → logprob: -5.665785312652588
    4. ' ' → logprob: -5.665785312652588
    5. 'k' → logprob: -9.29078483581543
    6. '```' → logprob: -10.72828483581543
    7. '   ' → logprob: -10.91578483581543
    8. ']' → logprob: -11.47828483581543
    9. '][' → logprob: -11.79078483581543
    10. 'j' → logprob: -12.04078483581543

Token 121: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25468817353248596
    2. '2' → logprob: -1.5046881437301636
    3. '3' → logprob: -6.129688262939453
    4. 'k' → logprob: -8.129688262939453
    5. ' ' → logprob: -8.254688262939453
    6. '```' → logprob: -12.067188262939453
    7. '   ' → logprob: -12.817188262939453
    8. 'j' → logprob: -12.879688262939453
    9. ']' → logprob: -13.754688262939453
    10. '-' → logprob: -14.317188262939453

Token 122: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022537452168762684
    2. ',k' → logprob: -6.877253532409668
    3. ',' → logprob: -7.252253532409668
    4. ']' → logprob: -8.127253532409668
    5. ' ][' → logprob: -9.877253532409668
    6. '[k' → logprob: -9.877253532409668
    7. '   ' → logprob: -10.127253532409668
    8. 'k' → logprob: -10.252253532409668
    9. ',j' → logprob: -11.002253532409668
    10. ' ' → logprob: -12.377253532409668

Token 123: ' *' (ID: 425)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.02750670723617077
    2. '[' → logprob: -4.2775068283081055
    3. '[j' → logprob: -4.6525068283081055
    4. '][' → logprob: -5.7775068283081055
    5. ' [' → logprob: -8.402506828308105
    6. 'k' → logprob: -9.402506828308105
    7. ',k' → logprob: -9.527506828308105
    8. '   ' → logprob: -9.652506828308105
    9. '```' → logprob: -9.902506828308105
    10. ' ' → logprob: -10.777506828308105

Token 124: ' k' (ID: 372)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2227569818496704
    2. 'j' → logprob: -1.4727569818496704
    3. ' d' → logprob: -2.097756862640381
    4. '[' → logprob: -2.347756862640381
    5. 'd' → logprob: -2.722756862640381
    6. '[j' → logprob: -3.097756862640381
    7. ' k' → logprob: -3.222756862640381
    8. 'k' → logprob: -3.597756862640381
    9. ' (' → logprob: -3.847756862640381
    10. ' [' → logprob: -4.097756862640381

Token 125: ' *' (ID: 425)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.4074572026729584
    2. '[' → logprob: -1.2824572324752808
    3. '[i' → logprob: -2.907457113265991
    4. ' [' → logprob: -7.03245735168457
    5. '[
' → logprob: -7.03245735168457
    6. '[k' → logprob: -8.65745735168457
    7. ',j' → logprob: -8.78245735168457
    8. ',' → logprob: -9.03245735168457
    9. '[:,' → logprob: -9.28245735168457
    10. '[...,' → logprob: -9.53245735168457

Token 126: ' j' (ID: 441)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7651560306549072
    2. 'j' → logprob: -1.3901560306549072
    3. 'd' → logprob: -1.7651560306549072
    4. ' j' → logprob: -2.2651560306549072
    5. ' ' → logprob: -5.765155792236328
    6. '   ' → logprob: -6.265155792236328
    7. '[' → logprob: -6.390155792236328
    8. '[j' → logprob: -6.515155792236328
    9. '  ' → logprob: -7.515155792236328
    10. '    ' → logprob: -7.765155792236328

Token 127: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.478242963552475
    2. '[i' → logprob: -0.9782429933547974
    3. '[
' → logprob: -5.728242874145508
    4. '<|end|>' → logprob: -7.978242874145508
    5. '[I' → logprob: -9.103242874145508
    6. '[(' → logprob: -9.853242874145508
    7. '(' → logprob: -10.103242874145508
    8. ' [' → logprob: -10.228242874145508
    9. '[d' → logprob: -10.353242874145508
    10. ' ' → logprob: -10.478242874145508

Token 128: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39163899421691895
    2. '[i' → logprob: -1.141638994216919
    3. '[
' → logprob: -5.89163875579834
    4. '<|end|>' → logprob: -6.76663875579834
    5. '[(' → logprob: -8.64163875579834
    6. '(' → logprob: -9.39163875579834
    7. '[I' → logprob: -9.64163875579834
    8. '```' → logprob: -10.14163875579834
    9. '(i' → logprob: -10.51663875579834
    10. '[user' → logprob: -10.64163875579834

Token 129: ' shift' (ID: 12847)
  Prédit: ' mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mult' → logprob: -0.1022827997803688
    2. ' multiply' → logprob: -2.977282762527466
    3. 'mult' → logprob: -3.727282762527466
    4. '_mult' → logprob: -4.602283000946045
    5. ' d' → logprob: -5.602283000946045
    6. 'multiply' → logprob: -6.102283000946045
    7. ' compute' → logprob: -6.352283000946045
    8. ' roll' → logprob: -6.727283000946045
    9. ' initialize' → logprob: -6.852283000946045
    10. ' update' → logprob: -8.477282524108887

Token 130: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1497927904129028
    2. '(d' → logprob: -1.1497927904129028
    3. '_d' → logprob: -1.3997927904129028
    4. '_' → logprob: -2.2747926712036133
    5. '_(' → logprob: -5.024792671203613
    6. 'd' → logprob: -5.649792671203613
    7. '_left' → logprob: -6.149792671203613
    8. 'ed' → logprob: -6.774792671203613
    9. '_val' → logprob: -7.274792671203613
    10. ' (' → logprob: -7.774792671203613

Token 131: '_mult' (ID: 44050)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.1552649885416031
    2. 'add' → logprob: -3.0302650928497314
    3. 'fill' → logprob: -3.5302650928497314
    4. 'multiply' → logprob: -4.030264854431152
    5. '_roll' → logprob: -4.530264854431152
    6. 'update' → logprob: -4.780264854431152
    7. 'append' → logprob: -4.780264854431152
    8. 'd' → logprob: -5.405264854431152
    9. 'assign' → logprob: -5.530264854431152
    10. 'apply' → logprob: -6.280264854431152

Token 132: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.05169612914323807
    2. '(' → logprob: -3.8016960620880127
    3. '_' → logprob: -4.301696300506592
    4. '_(' → logprob: -4.301696300506592
    5. ' (' → logprob: -7.551696300506592
    6. '_d' → logprob: -8.301695823669434
    7. '(_' → logprob: -9.926695823669434
    8. '```' → logprob: -10.051695823669434
    9. '(
' → logprob: -10.801695823669434
    10. 's' → logprob: -11.551695823669434

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027247585356235504
    2. '(d' → logprob: -3.777247667312622
    3. ',d' → logprob: -5.902247428894043
    4. '   ' → logprob: -7.527247428894043
    5. ' ,' → logprob: -7.527247428894043
    6. ' (' → logprob: -9.777247428894043
    7. '(' → logprob: -9.902247428894043
    8. 'd' → logprob: -10.902247428894043
    9. '[' → logprob: -11.402247428894043
    10. '[d' → logprob: -11.527247428894043

Token 134: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7463728785514832
    2. ' i' → logprob: -0.7463728785514832
    3. ' k' → logprob: -4.121372699737549
    4. 'k' → logprob: -4.121372699737549
    5. ' d' → logprob: -4.621372699737549
    6. 'd' → logprob: -4.996372699737549
    7. ' j' → logprob: -7.496372699737549
    8. ' ' → logprob: -7.621372699737549
    9. 'j' → logprob: -7.621372699737549
    10. ' n' → logprob: -8.371373176574707

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019546831026673317
    2. ' ,' → logprob: -7.376954555511475
    3. ',i' → logprob: -7.876954555511475
    4. '):' → logprob: -8.501955032348633
    5. '   ' → logprob: -8.626955032348633
    6. '[i' → logprob: -8.751955032348633
    7. '[' → logprob: -9.001955032348633
    8. ',j' → logprob: -9.376955032348633
    9. '):
' → logprob: -9.501955032348633
    10. ',d' → logprob: -10.626955032348633

Token 136: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3455091416835785
    2. ' j' → logprob: -1.7205091714859009
    3. 'i' → logprob: -2.5955090522766113
    4. ' i' → logprob: -3.8455090522766113
    5. 'k' → logprob: -5.595509052276611
    6. ')' → logprob: -6.095509052276611
    7. 'n' → logprob: -6.470509052276611
    8. 'd' → logprob: -6.595509052276611
    9. 'l' → logprob: -6.845509052276611
    10. ' k' → logprob: -6.845509052276611

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3236425518989563
    2. '):
' → logprob: -1.4486424922943115
    3. ',' → logprob: -3.1986424922943115
    4. ')' → logprob: -8.32364273071289
    5. '   ' → logprob: -8.32364273071289
    6. ' ):' → logprob: -9.19864273071289
    7. '):
' → logprob: -9.69864273071289
    8. ' ):
' → logprob: -10.44864273071289
    9. '):

' → logprob: -10.69864273071289
    10. ',d' → logprob: -10.69864273071289

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7015261650085449
    2. ' d' → logprob: -1.576526165008545
    3. ' return' → logprob: -2.076526165008545
    4. 'd' → logprob: -2.451526165008545
    5. ' for' → logprob: -2.951526165008545
    6. '
' → logprob: -3.951526165008545
    7. 'return' → logprob: -5.201526165008545
    8. 'for' → logprob: -6.576526165008545
    9. ' n' → logprob: -6.951526165008545
    10. 'def' → logprob: -6.951526165008545

Token 139: ' if' (ID: 538)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.1687493920326233
    2. 'return' → logprob: -2.5437493324279785
    3. ' roll' → logprob: -3.5437493324279785
    4. 'd' → logprob: -3.9187493324279785
    5. '   ' → logprob: -4.6687493324279785
    6. 'def' → logprob: -5.4187493324279785
    7. 'rolled' → logprob: -5.9187493324279785
    8. ' return' → logprob: -6.0437493324279785
    9. 'shift' → logprob: -6.0437493324279785
    10. 'for' → logprob: -6.0437493324279785

Token 140: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.27030447125434875
    2. 'k' → logprob: -2.2703044414520264
    3. ' d' → logprob: -2.3953044414520264
    4. ' j' → logprob: -4.6453046798706055
    5. 'd' → logprob: -4.7703046798706055
    6. ' len' → logprob: -4.8953046798706055
    7. ' not' → logprob: -5.3953046798706055
    8. ' i' → logprob: -5.7703046798706055
    9. 'len' → logprob: -6.1453046798706055
    10. ' ' → logprob: -6.6453046798706055

Token 141: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7835458517074585
    2. ' ==' → logprob: -1.0335458517074585
    3. '<' → logprob: -2.908545970916748
    4. '==' → logprob: -3.033545970916748
    5. ' >' → logprob: -3.283545970916748
    6. ' <=' → logprob: -3.658545970916748
    7. '>' → logprob: -5.033545970916748
    8. ' ' → logprob: -5.533545970916748
    9. ' >=' → logprob: -5.783545970916748
    10. '<=' → logprob: -6.283545970916748

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8477466106414795
    2. '3' → logprob: -1.3477466106414795
    3. '0' → logprob: -1.5977466106414795
    4. '2' → logprob: -2.4727466106414795
    5. ' ' → logprob: -3.8477466106414795
    6. '4' → logprob: -6.847746849060059
    7. 'len' → logprob: -7.097746849060059
    8. '5' → logprob: -7.347746849060059
    9. 'j' → logprob: -7.597746849060059
    10. 'd' → logprob: -8.847746849060059

Token 143: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7756605744361877
    2. '3' → logprob: -0.9006605744361877
    3. '0' → logprob: -2.775660514831543
    4. '2' → logprob: -2.775660514831543
    5. 'len' → logprob: -5.650660514831543
    6. '5' → logprob: -6.650660514831543
    7. ' ' → logprob: -6.650660514831543
    8. '4' → logprob: -6.900660514831543
    9. 'd' → logprob: -7.525660514831543
    10. 'j' → logprob: -8.275660514831543

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6958979368209839
    2. ':
' → logprob: -0.6958979368209839
    3. '   ' → logprob: -6.320898056030273
    4. '       ' → logprob: -7.695898056030273
    5. ':return' → logprob: -8.570898056030273
    6. ' or' → logprob: -9.320898056030273
    7. ',' → logprob: -9.570898056030273
    8. '):
' → logprob: -10.070898056030273
    9. ' :
' → logprob: -10.320898056030273
    10. ' :' → logprob: -10.695898056030273

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36918675899505615
    2. ' return' → logprob: -1.3691867589950562
    3. '   ' → logprob: -3.9941868782043457
    4. 'return' → logprob: -4.119186878204346
    5. ' d' → logprob: -4.994186878204346
    6. ' ' → logprob: -6.244186878204346
    7. 'd' → logprob: -6.369186878204346
    8. ':return' → logprob: -6.369186878204346
    9. ':' → logprob: -6.494186878204346
    10. '0' → logprob: -6.494186878204346

Token 146: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8378458023071289
    2. 'return' (adapté à ' return') → logprob: -1.212845802307129
    3. ' d' → logprob: -2.087845802307129
    4. 'd' → logprob: -2.837845802307129
    5. ' roll' → logprob: -3.087845802307129
    6. 'roll' → logprob: -3.712845802307129
    7. '   ' → logprob: -4.837845802307129
    8. ' zeros' → logprob: -5.962845802307129
    9. 'k' → logprob: -6.712845802307129
    10. '0' → logprob: -7.087845802307129

Token 147: ' ' (ID: 220)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.9101589918136597
    2. ' roll' → logprob: -0.9101589918136597
    3. ' zeros' → logprob: -2.285159111022949
    4. 'zeros' → logprob: -2.785159111022949
    5. 'None' → logprob: -4.660159111022949
    6. '0' → logprob: -4.660159111022949
    7. ' None' → logprob: -5.535159111022949
    8. ' d' → logprob: -6.285159111022949
    9. '-' → logprob: -6.285159111022949
    10. ' ' → logprob: -6.410159111022949

Token 148: '0' (ID: 15)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.21320225298404694
    2. 'zeros' → logprob: -2.4632022380828857
    3. '-roll' → logprob: -3.0882022380828857
    4. '0' → logprob: -3.9632022380828857
    5. ' roll' → logprob: -4.088202476501465
    6. '-' → logprob: -4.213202476501465
    7. ' zeros' → logprob: -5.088202476501465
    8. 'None' → logprob: -6.713202476501465
    9. '-zero' → logprob: -6.963202476501465
    10. ' -' → logprob: -7.088202476501465

Token 149: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1446390002965927
    2. '
' → logprob: -2.269639015197754
    3. '    
' → logprob: -4.144639015197754
    4. '<|end|>' → logprob: -5.269639015197754
    5. '  
' → logprob: -5.644639015197754
    6. 'd' → logprob: -6.769639015197754
    7. ' ' → logprob: -6.769639015197754
    8. ',' → logprob: -7.269639015197754
    9. ' 
' → logprob: -7.394639015197754
    10. ',
' → logprob: -7.644639015197754

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016240105032920837
    2. ' d' → logprob: -5.016240119934082
    3. 'd' → logprob: -5.266240119934082
    4. ' return' → logprob: -6.766240119934082
    5. '
' → logprob: -6.891240119934082
    6. '    
' → logprob: -7.516240119934082
    7. 'return' → logprob: -8.016240119934082
    8. ' roll' → logprob: -8.641240119934082
    9. ',' → logprob: -9.141240119934082
    10. ' ' → logprob: -9.391240119934082

Token 151: ' return' (ID: 622)
  Prédit: ' roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.6324288249015808
    2. 'roll' → logprob: -1.6324288845062256
    3. ' return' → logprob: -2.1324288845062256
    4. 'return' (adapté à ' return') → logprob: -2.1324288845062256
    5. ' d' → logprob: -4.1324286460876465
    6. 'd' → logprob: -4.5074286460876465
    7. '   ' → logprob: -5.2574286460876465
    8. 'shift' → logprob: -7.3824286460876465
    9. 'def' → logprob: -7.6324286460876465
    10. ' shift' → logprob: -8.007429122924805

Token 152: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.062373995780944824
    2. ' roll' → logprob: -3.0623741149902344
    3. 'd' → logprob: -4.437374114990234
    4. ' d' → logprob: -6.562374114990234
    5. 'k' → logprob: -8.812374114990234
    6. '(' → logprob: -8.937374114990234
    7. ' ' → logprob: -10.937374114990234
    8. 'j' → logprob: -11.187374114990234
    9. '(d' → logprob: -11.187374114990234
    10. ' k' → logprob: -11.312374114990234

Token 153: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0007130279554985464
    2. '(' → logprob: -7.250712871551514
    3. 'd' → logprob: -13.875713348388672
    4. '<|end|>' → logprob: -13.875713348388672
    5. ',d' → logprob: -14.750713348388672
    6. ' (' → logprob: -14.875713348388672
    7. '(
' → logprob: -15.875713348388672
    8. '((' → logprob: -16.500713348388672
    9. ')d' → logprob: -16.500713348388672
    10. '(k' → logprob: -17.875713348388672

Token 154: '[k' (ID: 14298)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3247548043727875
    2. ',k' → logprob: -2.3247547149658203
    3. '(d' → logprob: -2.4497547149658203
    4. ',d' → logprob: -2.5747547149658203
    5. '(k' → logprob: -4.57475471496582
    6. ' ,' → logprob: -6.32475471496582
    7. '(' → logprob: -6.57475471496582
    8. '[' → logprob: -6.57475471496582
    9. 'd' → logprob: -6.82475471496582
    10. ',(' → logprob: -8.07475471496582

Token 155: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.011202491819858551
    2. ',' → logprob: -4.761202335357666
    3. '],[' → logprob: -7.386202335357666
    4. ',j' → logprob: -7.386202335357666
    5. ']' → logprob: -7.761202335357666
    6. ',k' → logprob: -8.511202812194824
    7. '][' → logprob: -8.636202812194824
    8. ',-' → logprob: -8.886202812194824
    9. '-' → logprob: -9.261202812194824
    10. 'j' → logprob: -9.261202812194824

Token 156: ' -' (ID: 533)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.14184007048606873
    2. ' j' → logprob: -2.8918399810791016
    3. '-j' → logprob: -3.1418399810791016
    4. ' -' → logprob: -4.266839981079102
    5. '1' → logprob: -4.266839981079102
    6. '-' → logprob: -5.766839981079102
    7. ' ' → logprob: -7.141839981079102
    8. ')' → logprob: -7.891839981079102
    9. 'shift' → logprob: -8.266839981079102
    10. '(-' → logprob: -8.891839981079102

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5342826247215271
    2. 'j' → logprob: -0.9092826247215271
    3. '3' → logprob: -4.784282684326172
    4. '(' → logprob: -6.534282684326172
    5. '2' → logprob: -7.284282684326172
    6. '(j' → logprob: -8.159282684326172
    7. 'i' → logprob: -9.534282684326172
    8. ' j' → logprob: -9.659282684326172
    9. ' ' → logprob: -10.409282684326172
    10. '((' → logprob: -10.534282684326172

Token 158: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17373818159103394
    2. ')' → logprob: -2.2987382411956787
    3. '*j' → logprob: -3.2987382411956787
    4. 'j' → logprob: -5.1737380027771
    5. ',j' → logprob: -5.1737380027771
    6. '*' → logprob: -5.6737380027771
    7. ' *' → logprob: -5.7987380027771
    8. '[j' → logprob: -6.4237380027771
    9. ' ,' → logprob: -7.1737380027771
    10. '[' → logprob: -7.7987380027771

Token 159: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012562860734760761
    2. ' j' → logprob: -4.3875627517700195
    3. ' ' → logprob: -10.76256275177002
    4. '   ' → logprob: -11.63756275177002
    5. ' ' → logprob: -11.88756275177002
    6. '  ' → logprob: -12.38756275177002
    7. '(' → logprob: -12.88756275177002
    8. 'k' → logprob: -13.88756275177002
    9. '	j' → logprob: -14.07506275177002
    10. '(j' → logprob: -14.13756275177002

Token 161: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6916574239730835
    2. '(' → logprob: -1.3166574239730835
    3. ':' → logprob: -2.191657543182373
    4. '<|end|>' → logprob: -2.941657543182373
    5. '.' → logprob: -4.066657543182373
    6. ')' → logprob: -4.316657543182373
    7. ',' → logprob: -4.941657543182373
    8. '
' → logprob: -5.441657543182373
    9. '(
' → logprob: -5.441657543182373
    10. '[
' → logprob: -5.441657543182373

Token 163: ' shift' (ID: 12847)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.30669480562210083
    2. ' process' → logprob: -2.306694746017456
    3. ' compute' → logprob: -2.931694746017456
    4. ' solve' → logprob: -3.681694746017456
    5. ' multiply' → logprob: -4.056694984436035
    6. ' shift' → logprob: -4.181694984436035
    7. 'main' → logprob: -4.806694984436035
    8. ' update' → logprob: -5.056694984436035
    9. ' calculate' → logprob: -5.181694984436035
    10. ' run' → logprob: -5.556694984436035

Token 164: '_right' (ID: 24402)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00010282796574756503
    2. '_' → logprob: -10.125102996826172
    3. '(d' → logprob: -11.125102996826172
    4. '_d' → logprob: -11.250102996826172
    5. 'and' → logprob: -11.375102996826172
    6. 'd' → logprob: -11.750102996826172
    7. '(' → logprob: -12.500102996826172
    8. '```' → logprob: -12.500102996826172
    9. '(_' → logprob: -13.750102996826172
    10. ' and' → logprob: -14.000102996826172

Token 165: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011697351932525635
    2. '(' → logprob: -4.511697292327881
    3. '_(' → logprob: -7.761697292327881
    4. '(def' → logprob: -9.511697769165039
    5. '_and' → logprob: -10.011697769165039
    6. ' (' → logprob: -10.261697769165039
    7. '_' → logprob: -10.511697769165039
    8. 'def' → logprob: -11.386697769165039
    9. '(_' → logprob: -11.636697769165039
    10. '(s' → logprob: -12.261697769165039

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013860702747479081
    2. ',k' → logprob: -7.0013861656188965
    3. '[' → logprob: -8.501385688781738
    4. '[k' → logprob: -9.001385688781738
    5. ' ,' → logprob: -10.126385688781738
    6. ',d' → logprob: -10.376385688781738
    7. '):' → logprob: -10.626385688781738
    8. '   ' → logprob: -11.376385688781738
    9. 'd' → logprob: -11.626385688781738
    10. ',
' → logprob: -12.126385688781738

Token 167: ' j' (ID: 441)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.30811548233032227
    2. ' k' → logprob: -1.4331154823303223
    3. '1' → logprob: -5.683115482330322
    4. 'i' → logprob: -5.683115482330322
    5. '0' → logprob: -5.808115482330322
    6. ' ' → logprob: -5.933115482330322
    7. ' i' → logprob: -5.933115482330322
    8. 'd' → logprob: -6.183115482330322
    9. 'j' → logprob: -6.183115482330322
    10. ')' → logprob: -6.308115482330322

Token 168: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34255245327949524
    2. '):
' → logprob: -1.3425524234771729
    3. '):' → logprob: -3.592552423477173
    4. ',k' → logprob: -7.592552661895752
    5. ')' → logprob: -8.342552185058594
    6. '):
' → logprob: -8.842552185058594
    7. 'k' → logprob: -9.467552185058594
    8. ')
' → logprob: -9.467552185058594
    9. '[k' → logprob: -9.842552185058594
    10. '   ' → logprob: -9.842552185058594

Token 169: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6962112784385681
    2. ' return' → logprob: -0.8212112784385681
    3. '   ' → logprob: -2.821211338043213
    4. 'd' → logprob: -6.446211338043213
    5. ' d' → logprob: -8.446210861206055
    6. 'def' → logprob: -9.571210861206055
    7. 'roll' → logprob: -9.571210861206055
    8. ' roll' → logprob: -9.571210861206055
    9. '```' → logprob: -10.071210861206055
    10. ' ' → logprob: -11.196210861206055

Token 170: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024586578831076622
    2. ' return' → logprob: -3.7745866775512695
    3. 'roll' → logprob: -6.7745866775512695
    4. 'd' → logprob: -9.02458667755127
    5. '   ' → logprob: -10.14958667755127
    6. ' roll' → logprob: -10.77458667755127
    7. 'def' → logprob: -12.52458667755127
    8. ' d' → logprob: -12.64958667755127
    9. ' ' → logprob: -12.64958667755127
    10. 'if' (adapté à ' if') → logprob: -13.39958667755127

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5811291337013245
    2. ' j' → logprob: -0.8311291337013245
    3. ' d' → logprob: -6.33112907409668
    4. 'd' → logprob: -6.33112907409668
    5. 'not' → logprob: -7.45612907409668
    6. ' not' → logprob: -7.58112907409668
    7. 'len' → logprob: -9.20612907409668
    8. ' ' → logprob: -9.45612907409668
    9. ' isinstance' → logprob: -9.45612907409668
    10. '0' → logprob: -9.83112907409668

Token 172: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5577179789543152
    2. '<' → logprob: -1.30771803855896
    3. ' >' → logprob: -3.18271803855896
    4. '>' → logprob: -3.18271803855896
    5. ' <=' → logprob: -3.43271803855896
    6. ' ==' → logprob: -4.057717800140381
    7. '==' → logprob: -4.557717800140381
    8. '<=' → logprob: -4.807717800140381
    9. ' ' → logprob: -6.307717800140381
    10. ' >=' → logprob: -6.432717800140381

Token 173: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20386505126953125
    2. ' ' → logprob: -2.0788650512695312
    3. '1' → logprob: -2.8288650512695312
    4. '=' → logprob: -9.078865051269531
    5. '2' → logprob: -10.078865051269531
    6. '   ' → logprob: -10.453865051269531
    7. 'd' → logprob: -10.953865051269531
    8. ' d' → logprob: -11.203865051269531
    9. ' =' → logprob: -11.453865051269531
    10. 'len' → logprob: -11.578865051269531

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06359314918518066
    2. '1' → logprob: -2.8135931491851807
    3. ' ' → logprob: -6.688592910766602
    4. '2' → logprob: -8.938592910766602
    5. 'd' → logprob: -9.188592910766602
    6. 'len' → logprob: -10.188592910766602
    7. '5' → logprob: -10.438592910766602
    8. '3' → logprob: -10.563592910766602
    9. 'def' → logprob: -12.251092910766602
    10. 'n' → logprob: -12.251092910766602

Token 175: ':
' (ID: 734)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23787812888622284
    2. ':
' → logprob: -2.4878780841827393
    3. '):' → logprob: -2.6128780841827393
    4. '   ' → logprob: -3.6128780841827393
    5. ':' → logprob: -3.7378780841827393
    6. '       ' → logprob: -6.987878322601318
    7. ',' → logprob: -6.987878322601318
    8. ')' → logprob: -6.987878322601318
    9. ':return' → logprob: -8.11287784576416
    10. '():
' → logprob: -8.23787784576416

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4036976993083954
    2. 'return' → logprob: -1.2786977291107178
    3. ' return' → logprob: -3.4036977291107178
    4. '       ' → logprob: -3.9036977291107178
    5. 'd' → logprob: -8.903697967529297
    6. '	return' → logprob: -9.403697967529297
    7. '0' → logprob: -10.278697967529297
    8. ' ' → logprob: -10.528697967529297
    9. '    ' → logprob: -11.278697967529297
    10. '  ' → logprob: -11.403697967529297

Token 177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05748724937438965
    2. '0' → logprob: -3.4324872493743896
    3. ' return' → logprob: -3.8074872493743896
    4. ' ' → logprob: -7.682487487792969
    5. '   ' → logprob: -7.932487487792969
    6. '1' → logprob: -8.182487487792969
    7. '       ' → logprob: -8.682487487792969
    8. '
' → logprob: -10.432487487792969
    9. 'None' → logprob: -11.307487487792969
    10. '           ' → logprob: -11.807487487792969

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22622032463550568
    2. ' ' → logprob: -1.6012203693389893
    3. 'd' → logprob: -8.35122013092041
    4. ' zeros' → logprob: -8.60122013092041
    5. 'None' → logprob: -9.10122013092041
    6. ' d' → logprob: -9.22622013092041
    7. 'zeros' → logprob: -9.22622013092041
    8. ' None' → logprob: -10.22622013092041
    9. '   ' → logprob: -11.35122013092041
    10. '[' → logprob: -12.10122013092041

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007513784803450108
    2. 'zeros' → logprob: -8.000751495361328
    3. 'd' → logprob: -8.875751495361328
    4. ' ' → logprob: -8.875751495361328
    5. 'None' → logprob: -10.250751495361328
    6. '[' → logprob: -10.375751495361328
    7. 'array' → logprob: -10.500751495361328
    8. ' zeros' → logprob: -11.500751495361328
    9. '1' → logprob: -12.500751495361328
    10. '-' → logprob: -12.625751495361328

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002561864908784628
    2. ' return' → logprob: -6.377562046051025
    3. 'return' → logprob: -7.377562046051025
    4. '
' → logprob: -9.252561569213867
    5. '	return' → logprob: -9.752561569213867
    6. '    
' → logprob: -11.002561569213867
    7. '       ' → logprob: -11.502561569213867
    8. ',' → logprob: -11.752561569213867
    9. ':return' → logprob: -12.002561569213867
    10. '<|end|>' → logprob: -12.002561569213867

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13805817067623138
    2. 'return' → logprob: -2.1380581855773926
    3. ' return' → logprob: -4.513058185577393
    4. '	return' → logprob: -10.013057708740234
    5. '
' → logprob: -11.263057708740234
    6. ' ' → logprob: -11.638057708740234
    7. '       ' → logprob: -11.638057708740234
    8. '  ' → logprob: -11.888057708740234
    9. '    
' → logprob: -12.013057708740234
    10. 'd' → logprob: -12.388057708740234

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020031037274748087
    2. '   ' → logprob: -6.752003192901611
    3. ' return' → logprob: -7.127003192901611
    4. 'd' → logprob: -10.752002716064453
    5. '
' → logprob: -13.252002716064453
    6. 'roll' → logprob: -13.377002716064453
    7. ' ' → logprob: -13.627002716064453
    8. 'def' → logprob: -14.002002716064453
    9. '```' → logprob: -14.002002716064453
    10. '  ' → logprob: -14.502002716064453

Token 183: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.01609795168042183
    2. ' roll' → logprob: -4.1410980224609375
    3. 'd' → logprob: -10.016098022460938
    4. ' d' → logprob: -12.141098022460938
    5. ' ' → logprob: -12.266098022460938
    6. 'rol' → logprob: -13.266098022460938
    7. 'shift' → logprob: -13.391098022460938
    8. 'zeros' → logprob: -14.016098022460938
    9. '0' → logprob: -14.141098022460938
    10. '.roll' → logprob: -14.391098022460938

Token 184: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. 'd' → logprob: -15.87617015838623
    4. '(
' → logprob: -16.251171112060547
    5. ' (' → logprob: -18.501171112060547
    6. ',d' → logprob: -18.751171112060547
    7. '(de' → logprob: -19.001171112060547
    8. ')d' → logprob: -19.501171112060547
    9. '(

' → logprob: -19.626171112060547
    10. '(def' → logprob: -19.751171112060547

Token 185: '[j' (ID: 7895)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5287425518035889
    2. '[j' → logprob: -1.4037425518035889
    3. ',j' → logprob: -2.778742551803589
    4. '(j' → logprob: -2.903742551803589
    5. 'd' → logprob: -4.278742790222168
    6. '[' → logprob: -4.778742790222168
    7. '(d' → logprob: -5.278742790222168
    8. ',d' → logprob: -5.403742790222168
    9. '[:,' → logprob: -5.528742790222168
    10. '(' → logprob: -5.528742790222168

Token 186: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0031633416656404734
    2. ',' → logprob: -6.0031633377075195
    3. ']' → logprob: -7.6281633377075195
    4. ' ],' → logprob: -10.25316333770752
    5. ',j' → logprob: -10.25316333770752
    6. '],[' → logprob: -10.37816333770752
    7. ' ,' → logprob: -10.87816333770752
    8. 'j' → logprob: -11.12816333770752
    9. '[j' → logprob: -11.37816333770752
    10. '1' → logprob: -12.00316333770752

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04729132354259491
    2. ' ' → logprob: -3.1722912788391113
    3. '-' → logprob: -5.672291278839111
    4. ')' → logprob: -7.797291278839111
    5. '+' → logprob: -8.54729175567627
    6. ' -' → logprob: -8.67229175567627
    7. '0' → logprob: -11.23479175567627
    8. '2' → logprob: -11.42229175567627
    9. ' +' → logprob: -11.98479175567627
    10. '[' → logprob: -12.23479175567627

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005321870092302561
    2. '-' → logprob: -5.380321979522705
    3. ' ' → logprob: -7.505321979522705
    4. '+' → logprob: -9.380321502685547
    5. ')' → logprob: -10.005321502685547
    6. ' -' → logprob: -12.005321502685547
    7. '0' → logprob: -12.067821502685547
    8. '[' → logprob: -13.317821502685547
    9. '   ' → logprob: -14.192821502685547
    10. '
' → logprob: -14.380321502685547

Token 189: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ' )' → logprob: -12.625005722045898
    3. ')
' → logprob: -13.250005722045898
    4. '   ' → logprob: -15.000005722045898
    5. ')}' → logprob: -15.625005722045898
    6. '}' → logprob: -16.0000057220459
    7. '')' → logprob: -16.3750057220459
    8. '<|end|>' → logprob: -16.3750057220459
    9. '))' → logprob: -16.7500057220459
    10. ')#' → logprob: -16.8750057220459

Token 190: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' sum' (ID: 4215)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3584175109863281
    2. ' main' → logprob: -1.6084175109863281
    3. 'process' → logprob: -3.733417510986328
    4. 'shift' → logprob: -4.233417510986328
    5. 'compute' → logprob: -4.483417510986328
    6. 'multiply' → logprob: -4.608417510986328
    7. 'solve' → logprob: -4.733417510986328
    8. 'mult' → logprob: -5.358417510986328
    9. ' process' → logprob: -5.858417510986328
    10. ' shift' → logprob: -5.983417510986328

Token 192: '_mod' (ID: 15325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044355977326631546
    2. '(d' → logprob: -3.544355869293213
    3. '_' → logprob: -4.794355869293213
    4. 'def' → logprob: -5.919355869293213
    5. '(
' → logprob: -6.794355869293213
    6. '(_' → logprob: -7.669355869293213
    7. ' (' → logprob: -7.794355869293213
    8. '_d' → logprob: -8.169356346130371
    9. '_(' → logprob: -8.169356346130371
    10. '_elements' → logprob: -9.169356346130371

Token 193: 'ulo' (ID: 5953)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2543821632862091
    2. '(' → logprob: -1.5043821334838867
    3. '_' → logprob: -7.004382133483887
    4. '(a' → logprob: -7.504382133483887
    5. 'def' → logprob: -8.754382133483887
    6. '_(' → logprob: -8.879382133483887
    7. '(_' → logprob: -9.129382133483887
    8. '(s' → logprob: -9.629382133483887
    9. ' (' → logprob: -10.129382133483887
    10. '(arr' → logprob: -10.254382133483887

Token 194: '(arr' (ID: 19646)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009991814382374287
    2. '(' → logprob: -4.634991645812988
    3. '(a' → logprob: -8.759991645812988
    4. 'def' → logprob: -10.759991645812988
    5. '(s' → logprob: -11.009991645812988
    6. '(def' → logprob: -11.509991645812988
    7. ' (' → logprob: -12.009991645812988
    8. '(
' → logprob: -12.884991645812988
    9. '```' → logprob: -13.259991645812988
    10. '(A' → logprob: -13.259991645812988

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004091104958206415
    2. '):' → logprob: -5.754091262817383
    3. '):
' → logprob: -7.754091262817383
    4. ' ,' → logprob: -8.129091262817383
    5. '(arr' → logprob: -9.004091262817383
    6. ',array' → logprob: -10.754091262817383
    7. ',
' → logprob: -11.754091262817383
    8. '   ' → logprob: -11.754091262817383
    9. 'arr' → logprob: -12.379091262817383
    10. '(' → logprob: -12.504091262817383

Token 196: ' l' (ID: 305)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.79937744140625
    2. ' mod' → logprob: -1.04937744140625
    3. 'm' → logprob: -2.42437744140625
    4. ' m' → logprob: -3.29937744140625
    5. '100' → logprob: -4.04937744140625
    6. ' modulus' → logprob: -4.54937744140625
    7. ' ' → logprob: -4.67437744140625
    8. '10' → logprob: -5.17437744140625
    9. 'k' → logprob: -5.67437744140625
    10. ' k' → logprob: -5.92437744140625

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13003697991371155
    2. '):' → logprob: -2.6300370693206787
    3. '):
' → logprob: -3.0050370693206787
    4. ',
' → logprob: -9.255037307739258
    5. '):
' → logprob: -9.880037307739258
    6. '):

' → logprob: -10.130037307739258
    7. ')' → logprob: -10.255037307739258
    8. ' ,' → logprob: -10.505037307739258
    9. 's' → logprob: -11.630037307739258
    10. 'def' → logprob: -11.880037307739258

Token 198: ' M' (ID: 391)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.656050682067871
    2. 'm' → logprob: -1.906050682067871
    3. 'mod' → logprob: -2.031050682067871
    4. '100' → logprob: -2.281050682067871
    5. 'arr' → logprob: -2.531050682067871
    6. '10' → logprob: -2.781050682067871
    7. ' l' → logprob: -3.156050682067871
    8. 'k' → logprob: -3.406050682067871
    9. 'n' → logprob: -3.531050682067871
    10. '3' → logprob: -3.906050682067871

Token 199: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37030744552612305
    2. ',' → logprob: -1.870307445526123
    3. '):' → logprob: -1.870307445526123
    4. '):
' → logprob: -7.120307445526123
    5. '):

' → logprob: -7.995307445526123
    6. ')' → logprob: -9.120307922363281
    7. ',
' → logprob: -10.495307922363281
    8. 's' → logprob: -12.620307922363281
    9. ' ):
' → logprob: -12.620307922363281
    10. '=' → logprob: -12.745307922363281

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009186560288071632
    2. ' return' → logprob: -5.884186744689941
    3. ':' → logprob: -7.009186744689941
    4. 'return' → logprob: -7.134186744689941
    5. ' result' → logprob: -7.384186744689941
    6. ':
' → logprob: -7.634186744689941
    7. ' =' → logprob: -7.884186744689941
    8. ' sum' → logprob: -7.884186744689941
    9. 'result' → logprob: -8.009186744689941
    10. '=' → logprob: -8.134186744689941

Token 201: ' return' (ID: 622)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.3536409139633179
    2. 'return' (adapté à ' return') → logprob: -1.4786409139633179
    3. 'result' → logprob: -1.8536409139633179
    4. '   ' → logprob: -2.7286410331726074
    5. ' total' → logprob: -2.7286410331726074
    6. 'res' → logprob: -2.7286410331726074
    7. 's' → logprob: -2.9786410331726074
    8. ' return' → logprob: -3.4786410331726074
    9. ' s' → logprob: -3.4786410331726074
    10. ' result' → logprob: -3.6036410331726074

Token 202: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.16355887055397034
    2. 'sum' → logprob: -2.2885589599609375
    3. '(arr' → logprob: -3.5385589599609375
    4. ' arr' → logprob: -4.7885589599609375
    5. ' sum' → logprob: -5.0385589599609375
    6. '(sum' → logprob: -5.2885589599609375
    7. ' (' → logprob: -8.288558959960938
    8. 'np' → logprob: -9.288558959960938
    9. 'int' → logprob: -9.413558959960938
    10. '((' → logprob: -10.163558959960938

Token 203: '[-' (ID: 17503)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22709403932094574
    2. ' %' → logprob: -1.602094054222107
    3. '[:' → logprob: -6.9770941734313965
    4. '.sum' → logprob: -7.7270941734313965
    5. '[' → logprob: -8.602093696594238
    6. '%d' → logprob: -10.477093696594238
    7. '%s' → logprob: -10.602093696594238
    8. '[l' → logprob: -11.352093696594238
    9. '%i' → logprob: -11.352093696594238
    10. '%c' → logprob: -11.977093696594238

Token 204: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6332529187202454
    2. '1' → logprob: -0.7582529187202454
    3. 'M' → logprob: -8.25825309753418
    4. '(' → logprob: -8.63325309753418
    5. ' l' → logprob: -10.13325309753418
    6. 'len' → logprob: -10.25825309753418
    7. '(l' → logprob: -10.50825309753418
    8. ':l' → logprob: -11.13325309753418
    9. '```' → logprob: -11.50825309753418
    10. '-' → logprob: -11.75825309753418

Token 205: '][:' (ID: 63357)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021307668066583574
    2. ']%' → logprob: -8.625212669372559
    3. ':]' → logprob: -11.500212669372559
    4. ' ]' → logprob: -12.000212669372559
    5. '])' → logprob: -12.500212669372559
    6. '-' → logprob: -12.500212669372559
    7. ',' → logprob: -12.625212669372559
    8. ']
' → logprob: -13.625212669372559
    9. ':' → logprob: -13.750212669372559
    10. '%' → logprob: -14.125212669372559

Token 206: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03362725302577019
    2. ']' → logprob: -3.5336272716522217
    3. 'M' → logprob: -5.908627033233643
    4. ']%' → logprob: -7.158627033233643
    5. 'n' → logprob: -9.2836275100708
    6. ' l' → logprob: -9.7836275100708
    7. '%' → logprob: -9.9086275100708
    8. '-' → logprob: -10.2836275100708
    9. ',' → logprob: -11.2836275100708
    10. '3' → logprob: -11.6586275100708

Token 207: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015717383939772844
    2. ']%' → logprob: -9.000157356262207
    3. '])' → logprob: -10.750157356262207
    4. ' ]' → logprob: -12.125157356262207
    5. '%' → logprob: -13.125157356262207
    6. ',' → logprob: -14.000157356262207
    7. ')' → logprob: -14.125157356262207
    8. '],' → logprob: -14.375157356262207
    9. ']
' → logprob: -14.625157356262207
    10. '-' → logprob: -14.875157356262207

Token 208: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4056728780269623
    2. 'mod' → logprob: -1.4056729078292847
    3. 'astype' → logprob: -3.280672788619995
    4. 'tolist' → logprob: -3.280672788619995
    5. 'copy' → logprob: -4.405673027038574
    6. 'dot' → logprob: -8.030673027038574
    7. 'c' → logprob: -8.405673027038574
    8. 'reshape' → logprob: -9.155673027038574
    9. '%' → logprob: -9.280673027038574
    10. '__' → logprob: -9.905673027038574

Token 209: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3874959647655487
    2. '()%' → logprob: -1.137495994567871
    3. '(' → logprob: -7.887495994567871
    4. '%' → logprob: -8.387495994567871
    5. ' ()' → logprob: -12.762495994567871
    6. '()
' → logprob: -12.762495994567871
    7. '()(' → logprob: -12.887495994567871
    8. '()<' → logprob: -13.262495994567871
    9. '()`' → logprob: -13.387495994567871
    10. '()+' → logprob: -13.512495994567871

Token 210: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.36560970544815063
    2. '%' → logprob: -1.2406096458435059
    3. '<|end|>' → logprob: -4.365609645843506
    4. '()' → logprob: -6.115609645843506
    5. '(' → logprob: -6.990609645843506
    6. 'def' → logprob: -8.240610122680664
    7. '()%' → logprob: -8.365610122680664
    8. ')' → logprob: -8.615610122680664
    9. ' ' → logprob: -8.740610122680664
    10. '[' → logprob: -9.615610122680664

Token 211: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04858827963471413
    2. ' M' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.798588752746582
    4. '(M' → logprob: -15.423588752746582
    5. ' (' → logprob: -16.298587799072266
    6. '```' → logprob: -16.423587799072266
    7. '(' → logprob: -17.048587799072266
    8. '   ' → logprob: -17.173587799072266
    9. '  ' → logprob: -17.798587799072266
    10. '
' → logprob: -17.923587799072266

Token 212: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.764783501625061
    2. '(' → logprob: -1.264783501625061
    3. '[' → logprob: -2.1397833824157715
    4. '<|end|>' → logprob: -3.1397833824157715
    5. ')' → logprob: -3.2647833824157715
    6. ',' → logprob: -4.2647833824157715
    7. '=' → logprob: -4.3897833824157715
    8. ' ' → logprob: -5.2647833824157715
    9. 'def' → logprob: -5.5147833824157715
    10. '```' → logprob: -6.1397833824157715

Token 214: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11583433300256729
    2. 'main' → logprob: -2.2408342361450195
    3. ' compute' → logprob: -7.3658342361450195
    4. ' process' → logprob: -7.6158342361450195
    5. ' solve' → logprob: -7.7408342361450195
    6. 'compute' → logprob: -7.8658342361450195
    7. 'process' → logprob: -7.9908342361450195
    8. 'solve' → logprob: -8.11583423614502
    9. ' read' → logprob: -9.36583423614502
    10. 'read' → logprob: -9.86583423614502

Token 215: '_loop' (ID: 40621)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002398938377154991
    2. '():
' → logprob: -8.375240325927734
    3. ' ():' → logprob: -12.375240325927734
    4. '()' → logprob: -13.000240325927734
    5. '(' → logprob: -13.250240325927734
    6. '_' → logprob: -14.375240325927734
    7. '():
' → logprob: -15.250240325927734
    8. '():

' → logprob: -16.125240325927734
    9. 'def' → logprob: -16.875240325927734
    10. '().' → logprob: -17.750240325927734

Token 216: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35936304926872253
    2. '(d' → logprob: -1.484363079071045
    3. '(i' → logprob: -2.984363079071045
    4. '(n' → logprob: -3.984363079071045
    5. '():' → logprob: -5.484363079071045
    6. '(def' → logprob: -7.234363079071045
    7. '(l' → logprob: -8.359362602233887
    8. '(:' → logprob: -8.484362602233887
    9. '(k' → logprob: -9.234362602233887
    10. '(s' → logprob: -9.234362602233887

Token 217: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13227388262748718
    2. ',' → logprob: -2.1322739124298096
    3. '):
' → logprob: -5.2572736740112305
    4. ')' → logprob: -9.63227367401123
    5. ':' → logprob: -11.25727367401123
    6. ',n' → logprob: -11.63227367401123
    7. '):

' → logprob: -12.13227367401123
    8. ' ):' → logprob: -12.50727367401123
    9. 'def' → logprob: -12.88227367401123
    10. '   ' → logprob: -12.88227367401123

Token 218: ' M' (ID: 391)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4999600052833557
    2. 'M' → logprob: -1.499959945678711
    3. 'k' → logprob: -2.624959945678711
    4. ' M' → logprob: -3.374959945678711
    5. ' d' → logprob: -3.499959945678711
    6. 'l' → logprob: -3.624959945678711
    7. ' k' → logprob: -5.499959945678711
    8. ' l' → logprob: -6.249959945678711
    9. 'j' → logprob: -8.874959945678711
    10. 'm' → logprob: -9.124959945678711

Token 219: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22585146129131317
    2. ',' → logprob: -1.7258514165878296
    3. '):
' → logprob: -3.725851535797119
    4. ':' → logprob: -11.100851058959961
    5. ')' → logprob: -11.350851058959961
    6. '   ' → logprob: -12.350851058959961
    7. '):

' → logprob: -12.475851058959961
    8. ',
' → logprob: -12.600851058959961
    9. '):
' → logprob: -12.975851058959961
    10. ',d' → logprob: -13.225851058959961

Token 220: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004755853675305843
    2. ' d' → logprob: -5.504755973815918
    3. 'k' → logprob: -8.254755973815918
    4. 'l' → logprob: -8.504755973815918
    5. '):' → logprob: -9.879755973815918
    6. '   ' → logprob: -10.254755973815918
    7. 'i' → logprob: -10.629755973815918
    8. ')' → logprob: -10.754755973815918
    9. '):
' → logprob: -11.129755973815918
    10. ')d' → logprob: -12.067255973815918

Token 221: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6100524067878723
    2. '):
' → logprob: -1.3600523471832275
    3. ',' → logprob: -1.6100523471832275
    4. '):
' → logprob: -9.485052108764648
    5. ')' → logprob: -10.485052108764648
    6. '):

' → logprob: -10.735052108764648
    7. ',
' → logprob: -11.735052108764648
    8. '   ' → logprob: -12.360052108764648
    9. ':' → logprob: -12.485052108764648
    10. ' ):' → logprob: -13.235052108764648

Token 222: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.013237171806395054
    2. ' d' → logprob: -4.388236999511719
    3. 'k' → logprob: -7.763236999511719
    4. 'j' → logprob: -9.263236999511719
    5. ')' → logprob: -10.013236999511719
    6. '   ' → logprob: -10.263236999511719
    7. ' k' → logprob: -10.638236999511719
    8. ' ' → logprob: -10.888236999511719
    9. '):' → logprob: -10.888236999511719
    10. '):
' → logprob: -11.263236999511719

Token 223: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046358536928892136
    2. '):' → logprob: -3.671358585357666
    3. '):
' → logprob: -3.921358585357666
    4. ',
' → logprob: -11.546358108520508
    5. '):
' → logprob: -11.796358108520508
    6. ' ,' → logprob: -11.796358108520508
    7. ',k' → logprob: -12.421358108520508
    8. '   ' → logprob: -12.546358108520508
    9. '):

' → logprob: -12.921358108520508
    10. ',i' → logprob: -13.296358108520508

Token 224: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5378992557525635
    2. '   ' → logprob: -0.9128992557525635
    3. 'for' → logprob: -4.787899017333984
    4. '	for' → logprob: -5.912899017333984
    5. '```' → logprob: -6.662899017333984
    6. '<|end|>' → logprob: -7.037899017333984
    7. '
' → logprob: -7.162899017333984
    8. ':' → logprob: -8.912899017333984
    9. 'def' → logprob: -9.287899017333984
    10. '    ' → logprob: -9.412899017333984

Token 225: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2728199362754822
    2. 'for' (adapté à ' for') → logprob: -1.522819995880127
    3. '   ' → logprob: -3.897819995880127
    4. '```' → logprob: -8.022819519042969
    5. '	for' → logprob: -11.022819519042969
    6. ' i' → logprob: -11.272819519042969
    7. '
' → logprob: -11.522819519042969
    8. 'def' → logprob: -11.772819519042969
    9. ' ' → logprob: -12.522819519042969
    10. '``' → logprob: -12.647819519042969

Token 226: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28138384222984314
    2. 'i' → logprob: -1.4063838720321655
    3. '   ' → logprob: -9.531383514404297
    4. 'k' → logprob: -9.531383514404297
    5. ' k' → logprob: -11.031383514404297
    6. ' ' → logprob: -11.406383514404297
    7. 'j' → logprob: -11.531383514404297
    8. '```' → logprob: -11.531383514404297
    9. '	i' → logprob: -11.531383514404297
    10. '_i' → logprob: -12.031383514404297

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05492933839559555
    2. 'in' → logprob: -2.929929256439209
    3. ' ' → logprob: -10.304929733276367
    4. ',' → logprob: -11.929929733276367
    5. '   ' → logprob: -13.179929733276367
    6. ')' → logprob: -14.054929733276367
    7. '```' → logprob: -14.429929733276367
    8. 'n' → logprob: -14.679929733276367
    9. 'import' → logprob: -14.679929733276367
    10. '0' → logprob: -14.679929733276367

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269427090883255
    2. ' range' → logprob: -2.1269426345825195
    3. ' ' → logprob: -12.00194263458252
    4. '   ' → logprob: -12.37694263458252
    5. '  ' → logprob: -14.00194263458252
    6. '	range' → logprob: -14.25194263458252
    7. 'in' → logprob: -14.62694263458252
    8. ' in' → logprob: -14.87694263458252
    9. '```' → logprob: -15.00194263458252
    10. '    ' → logprob: -15.37694263458252

Token 229: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12738706171512604
    2. '(l' → logprob: -2.127387046813965
    3. '1' → logprob: -8.002387046813965
    4. '(n' → logprob: -9.252387046813965
    5. 'l' → logprob: -11.502387046813965
    6. '(len' → logprob: -12.502387046813965
    7. '(d' → logprob: -12.752387046813965
    8. ' (' → logprob: -13.002387046813965
    9. '(M' → logprob: -13.502387046813965
    10. '   ' → logprob: -13.627387046813965

Token 230: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6739699840545654
    2. '1' → logprob: -0.7989699840545654
    3. '2' → logprob: -3.9239699840545654
    4. 'l' → logprob: -4.0489702224731445
    5. '4' → logprob: -5.7989702224731445
    6. 'n' → logprob: -8.423970222473145
    7. 'len' → logprob: -10.423970222473145
    8. '5' → logprob: -11.298970222473145
    9. '0' → logprob: -11.423970222473145
    10. 'd' → logprob: -11.798970222473145

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002019907406065613
    2. ' ,' → logprob: -8.750202178955078
    3. ',n' → logprob: -10.375202178955078
    4. ',l' → logprob: -11.375202178955078
    5. '   ' → logprob: -15.625202178955078
    6. 'n' → logprob: -16.125202178955078
    7. ',len' → logprob: -16.375202178955078
    8. ' ' → logprob: -16.375202178955078
    9. ',
' → logprob: -16.500202178955078
    10. '(n' → logprob: -16.875202178955078

Token 232: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013006336987018585
    2. ' l' → logprob: -4.388006210327148
    3. 'n' → logprob: -8.388006210327148
    4. 'len' → logprob: -8.638006210327148
    5. 'compute' → logprob: -10.263006210327148
    6. ' n' → logprob: -10.888006210327148
    7. 'd' → logprob: -11.763006210327148
    8. ' compute' → logprob: -12.138006210327148
    9. '   ' → logprob: -12.263006210327148
    10. ' ' → logprob: -12.263006210327148

Token 233: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38697752356529236
    2. '):
' → logprob: -1.1369775533676147
    3. ':' → logprob: -9.886977195739746
    4. '   ' → logprob: -10.386977195739746
    5. '):
' → logprob: -11.386977195739746
    6. ',' → logprob: -12.386977195739746
    7. ':
' → logprob: -12.761977195739746
    8. '+' → logprob: -13.261977195739746
    9. ' ):' → logprob: -13.261977195739746
    10. '):

' → logprob: -14.386977195739746

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05034785717725754
    2. ' for' → logprob: -3.4253478050231934
    3. 'for' → logprob: -4.175347805023193
    4. '   ' → logprob: -7.050347805023193
    5. ',' → logprob: -8.800348281860352
    6. '```' → logprob: -9.425348281860352
    7. '[' → logprob: -10.675348281860352
    8. '	for' → logprob: -11.050348281860352
    9. '        
' → logprob: -11.425348281860352
    10. 'k' → logprob: -11.675348281860352

Token 235: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09632931649684906
    2. ' for' → logprob: -2.4713292121887207
    3. '       ' → logprob: -5.471329212188721
    4. '   ' → logprob: -6.221329212188721
    5. 'k' → logprob: -6.971329212188721
    6. 'j' (adapté à ' j') → logprob: -9.721329689025879
    7. 'd' → logprob: -9.721329689025879
    8. ' k' → logprob: -10.096329689025879
    9. '```' → logprob: -10.721329689025879
    10. ' ' → logprob: -10.971329689025879

Token 236: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9475526213645935
    2. 'in' → logprob: -1.1975526809692383
    3. '=' → logprob: -1.9475526809692383
    4. ' =' → logprob: -2.0725526809692383
    5. ',' → logprob: -3.4475526809692383
    6. 'for' → logprob: -5.947552680969238
    7. ')' → logprob: -5.947552680969238
    8. '   ' → logprob: -6.572552680969238
    9. 'n' → logprob: -6.947552680969238
    10. ' ' → logprob: -7.072552680969238

Token 237: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10760743916034698
    2. ' k' → logprob: -2.857607364654541
    3. 'i' → logprob: -3.982607364654541
    4. '0' → logprob: -4.732607364654541
    5. '=' → logprob: -4.982607364654541
    6. ' i' → logprob: -5.732607364654541
    7. ' =' → logprob: -6.107607364654541
    8. 'j' → logprob: -6.732607364654541
    9. 'n' → logprob: -6.982607364654541
    10. 'for' → logprob: -7.107607364654541

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410500049591064
    2. ' =' → logprob: -0.9741050004959106
    3. '=get' → logprob: -11.224104881286621
    4. ',' → logprob: -11.724104881286621
    5. '=j' → logprob: -12.849104881286621
    6. '   ' → logprob: -13.724104881286621
    7. '    ' → logprob: -14.224104881286621
    8. ' ' → logprob: -14.599104881286621
    9. '=k' → logprob: -14.974104881286621
    10. '=i' → logprob: -15.349104881286621

Token 239: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12177987396717072
    2. 'i' → logprob: -2.7467799186706543
    3. ' get' → logprob: -3.3717799186706543
    4. '0' → logprob: -4.496779918670654
    5. 'j' → logprob: -6.246779918670654
    6. ' i' → logprob: -6.246779918670654
    7. '(i' → logprob: -7.496779918670654
    8. '(get' → logprob: -8.871779441833496
    9. ' ' → logprob: -9.246779441833496
    10. '1' → logprob: -9.371779441833496

Token 240: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.019662216305732727
    2. '(i' → logprob: -4.144662380218506
    3. 'indices' → logprob: -5.644662380218506
    4. 'i' → logprob: -10.519661903381348
    5. 'Indices' → logprob: -10.769661903381348
    6. '[i' → logprob: -11.519661903381348
    7. ' indices' → logprob: -11.769661903381348
    8. ' i' → logprob: -11.894661903381348
    9. '_i' → logprob: -12.894661903381348
    10. '(indices' → logprob: -13.019661903381348

Token 241: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(j' → logprob: -16.250001907348633
    5. ' ' → logprob: -19.125001907348633
    6. 'i' → logprob: -19.125001907348633
    7. '(I' → logprob: -19.625001907348633
    8. '   ' → logprob: -20.125001907348633
    9. '(ii' → logprob: -20.125001907348633
    10. '```' → logprob: -20.375001907348633

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011376124806702137
    2. ')
' → logprob: -4.511375904083252
    3. '()' → logprob: -8.26137638092041
    4. '())' → logprob: -10.26137638092041
    5. ')
' → logprob: -10.76137638092041
    6. '   ' → logprob: -12.51137638092041
    7. '()
' → logprob: -12.63637638092041
    8. ' )' → logprob: -12.76137638092041
    9. '())
' → logprob: -13.26137638092041
    10. ')

' → logprob: -14.26137638092041

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08451274037361145
    2. 'for' → logprob: -2.959512710571289
    3. ' for' → logprob: -3.959512710571289
    4. 'd' → logprob: -4.959512710571289
    5. '   ' → logprob: -7.209512710571289
    6. '```' → logprob: -7.459512710571289
    7. 'if' → logprob: -7.584512710571289
    8. ',' → logprob: -7.959512710571289
    9. '<|end|>' → logprob: -8.459512710571289
    10. ' if' → logprob: -8.709512710571289

Token 244: ' part' (ID: 997)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33040714263916016
    2. 'd' → logprob: -1.8304071426391602
    3. ' for' → logprob: -2.20540714263916
    4. ' d' → logprob: -5.20540714263916
    5. 'if' → logprob: -6.08040714263916
    6. '   ' → logprob: -7.08040714263916
    7. 'val' → logprob: -7.20540714263916
    8. '       ' → logprob: -7.83040714263916
    9. ' if' → logprob: -7.83040714263916
    10. 'temp' → logprob: -8.58040714263916

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3017595708370209
    2. ' =' → logprob: -1.5517596006393433
    3. '_' → logprob: -3.9267594814300537
    4. '=' → logprob: -4.801759719848633
    5. '_val' → logprob: -4.801759719848633
    6. 'ial' → logprob: -5.426759719848633
    7. '_d' → logprob: -5.801759719848633
    8. '_sum' → logprob: -6.176759719848633
    9. '_a' → logprob: -6.551759719848633
    10. '0' → logprob: -7.176759719848633

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602540910243988
    2. '=' → logprob: -1.9102541208267212
    3. ',' → logprob: -10.91025447845459
    4. '_val' → logprob: -11.91025447845459
    5. ' ' → logprob: -13.28525447845459
    6. '   ' → logprob: -13.41025447845459
    7. '_value' → logprob: -14.78525447845459
    8. 'd' → logprob: -15.28525447845459
    9. '  ' → logprob: -15.53525447845459
    10. 's' → logprob: -16.035253524780273

Token 247: ' mult' (ID: 3469)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.27984362840652466
    2. ' mult' → logprob: -1.5298435688018799
    3. 'd' → logprob: -4.404843807220459
    4. ' d' → logprob: -4.529843807220459
    5. 'shift' → logprob: -6.029843807220459
    6. ' shift' → logprob: -6.529843807220459
    7. '0' → logprob: -8.1548433303833
    8. ' ' → logprob: -9.5298433303833
    9. ' zeros' → logprob: -9.6548433303833
    10. ' roll' → logprob: -9.7798433303833

Token 248: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -1.9361264946837764e-07
    2. 'prev' → logprob: -16.0
    3. '_previous' → logprob: -18.25
    4. '(prev' → logprob: -18.875
    5. '_val' → logprob: -19.0
    6. 'Prev' → logprob: -20.375
    7. '_next' → logprob: -20.625
    8. '```' → logprob: -21.5
    9. '_rev' → logprob: -21.625
    10. '[' → logprob: -22.0

Token 249: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.8889261304575484e-06
    2. 'val' → logprob: -12.625003814697266
    3. '_vals' → logprob: -15.125003814697266
    4. '_prev' → logprob: -16.000003814697266
    5. '_' → logprob: -17.000003814697266
    6. '_value' → logprob: -17.500003814697266
    7. 'Val' → logprob: -17.875003814697266
    8. '_VAL' → logprob: -18.375003814697266
    9. '[val' → logprob: -18.625003814697266
    10. '(val' → logprob: -18.875003814697266

Token 250: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -13.00000286102295
    3. '(' → logprob: -14.62500286102295
    4. 'd' → logprob: -19.500001907348633
    5. '(
' → logprob: -19.625001907348633
    6. '```' → logprob: -21.375001907348633
    7. '
' → logprob: -21.875001907348633
    8. ' ' → logprob: -22.000001907348633
    9. '(D' → logprob: -22.125001907348633
    10. '(de' → logprob: -22.375001907348633

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030868053436279297
    2. ',d' → logprob: -5.878087043762207
    3. ',j' → logprob: -9.503087043762207
    4. ' ,' → logprob: -9.878087043762207
    5. ',i' → logprob: -9.878087043762207
    6. '[i' → logprob: -10.003087043762207
    7. '(d' → logprob: -10.628087043762207
    8. '[' → logprob: -11.378087043762207
    9. '(i' → logprob: -11.878087043762207
    10. '[d' → logprob: -12.253087043762207

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01746745966374874
    2. ' i' → logprob: -4.142467498779297
    3. 'd' → logprob: -7.142467498779297
    4. 'j' → logprob: -7.642467498779297
    5. '   ' → logprob: -10.017467498779297
    6. ' d' → logprob: -10.517467498779297
    7. ' j' → logprob: -10.642467498779297
    8. '       ' → logprob: -10.892467498779297
    9. 'k' → logprob: -11.017467498779297
    10. ' ' → logprob: -11.642467498779297

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021033499797340482
    2. ' ,' → logprob: -9.250210762023926
    3. ',j' → logprob: -10.000210762023926
    4. ',k' → logprob: -10.500210762023926
    5. '[j' → logprob: -10.625210762023926
    6. '[i' → logprob: -11.500210762023926
    7. '[k' → logprob: -12.500210762023926
    8. '[' → logprob: -13.375210762023926
    9. ',i' → logprob: -14.000210762023926
    10. '   ' → logprob: -15.250210762023926

Token 254: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000145137935760431
    2. ' k' → logprob: -8.875144958496094
    3. 'j' → logprob: -12.250144958496094
    4. ' ' → logprob: -16.250144958496094
    5. '   ' → logprob: -16.375144958496094
    6. 'l' → logprob: -16.500144958496094
    7. 'd' → logprob: -16.750144958496094
    8. 'n' → logprob: -16.875144958496094
    9. '    ' → logprob: -17.250144958496094
    10. '  ' → logprob: -17.375144958496094

Token 255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013239304535090923
    2. ',j' → logprob: -7.376323699951172
    3. '[j' → logprob: -7.751323699951172
    4. ' ,' → logprob: -8.501323699951172
    5. '[:,' → logprob: -10.376323699951172
    6. '[' → logprob: -10.751323699951172
    7. 'j' → logprob: -13.251323699951172
    8. '=' → logprob: -13.501323699951172
    9. ',k' → logprob: -13.751323699951172
    10. '[i' → logprob: -13.876323699951172

Token 256: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06197631359100342
    2. ' j' → logprob: -2.811976432800293
    3. ' ' → logprob: -12.561976432800293
    4. '   ' → logprob: -13.436976432800293
    5. '
' → logprob: -14.186976432800293
    6. ' ' → logprob: -14.311976432800293
    7. '  ' → logprob: -14.561976432800293
    8. '    ' → logprob: -15.186976432800293
    9. '0' → logprob: -15.436976432800293
    10. 'k' → logprob: -15.686976432800293

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15368689596652985
    2. ',' → logprob: -2.653687000274658
    3. '[j' → logprob: -3.653687000274658
    4. '[:,' → logprob: -3.778687000274658
    5. '[' → logprob: -4.653687000274658
    6. '[i' → logprob: -5.528687000274658
    7. ',)' → logprob: -5.653687000274658
    8. ')
' → logprob: -6.278687000274658
    9. ',j' → logprob: -6.528687000274658
    10. ')[' → logprob: -7.028687000274658

Token 258: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7388097643852234
    2. '+' → logprob: -1.8638098239898682
    3. '<|end|>' → logprob: -1.8638098239898682
    4. '[j' → logprob: -2.363809823989868
    5. ' +' → logprob: -3.113809823989868
    6. '[i' → logprob: -4.113809585571289
    7. '
' → logprob: -4.738809585571289
    8. '       ' → logprob: -4.988809585571289
    9. '[
' → logprob: -4.988809585571289
    10. '*' → logprob: -5.238809585571289

Token 259: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' (adapté à ' part') → logprob: -0.05050178989768028
    2. ' part' → logprob: -3.050501823425293
    3. 'if' → logprob: -7.050501823425293
    4. '+' → logprob: -8.300501823425293
    5. ' if' → logprob: -8.550501823425293
    6. '[' → logprob: -8.925501823425293
    7. '       ' → logprob: -9.050501823425293
    8. '(part' → logprob: -9.550501823425293
    9. 'shift' → logprob: -10.300501823425293
    10. 'd' → logprob: -10.300501823425293

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003696039319038391
    2. '1' → logprob: -5.753695964813232
    3. '=' → logprob: -8.37869644165039
    4. ' =' → logprob: -8.75369644165039
    5. '3' → logprob: -10.25369644165039
    6. '[' → logprob: -10.75369644165039
    7. '_' → logprob: -10.87869644165039
    8. '0' → logprob: -11.25369644165039
    9. ' ' → logprob: -11.25369644165039
    10. '```' → logprob: -11.50369644165039

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -15.475207328796387
    4. ' ' → logprob: -15.600207328796387
    5. ' +=' → logprob: -16.10020637512207
    6. ' ' → logprob: -16.47520637512207
    7. '  ' → logprob: -17.22520637512207
    8. '   ' → logprob: -17.47520637512207
    9. ')' → logprob: -17.60020637512207
    10. ' =
' → logprob: -17.85020637512207

Token 262: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.42873039841651917
    2. ' shift' → logprob: -1.0537303686141968
    3. ' ' → logprob: -11.553730010986328
    4. ' roll' → logprob: -12.303730010986328
    5. 'roll' → logprob: -12.553730010986328
    6. 'sh' → logprob: -13.178730010986328
    7. 'mult' → logprob: -13.678730010986328
    8. 'sum' → logprob: -13.803730010986328
    9. ' d' → logprob: -13.928730010986328
    10. 'd' → logprob: -14.053730010986328

Token 263: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.00015920029545668513
    2. '_right' → logprob: -8.75015926361084
    3. 'and' → logprob: -14.25015926361084
    4. '_' → logprob: -16.875158309936523
    5. '_left' → logprob: -16.875158309936523
    6. 'right' → logprob: -18.000158309936523
    7. 'd' → logprob: -19.000158309936523
    8. '_to' → logprob: -19.125158309936523
    9. '_that' → logprob: -19.500158309936523
    10. '_AND' → logprob: -20.000158309936523

Token 264: '_mult' (ID: 44050)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.001190225942991674
    2. '_mult' → logprob: -6.751190185546875
    3. '(d' → logprob: -11.626190185546875
    4. 'd' → logprob: -12.376190185546875
    5. '(mult' → logprob: -12.751190185546875
    6. ' mult' → logprob: -12.876190185546875
    7. 'Mult' → logprob: -14.001190185546875
    8. 'multip' → logprob: -15.126190185546875
    9. ' d' → logprob: -15.876190185546875
    10. 'roll' → logprob: -16.376190185546875

Token 265: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.375001907348633
    3. '(' → logprob: -14.750001907348633
    4. 'd' → logprob: -17.375001907348633
    5. '(
' → logprob: -17.500001907348633
    6. '```' → logprob: -19.125001907348633
    7. '[d' → logprob: -19.125001907348633
    8. '(def' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '=d' → logprob: -20.125001907348633

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005040321499109268
    2. '[' → logprob: -6.630040168762207
    3. ',d' → logprob: -7.130040168762207
    4. ',k' → logprob: -7.255040168762207
    5. '[k' → logprob: -7.505040168762207
    6. '[j' → logprob: -7.630040168762207
    7. '(d' → logprob: -8.005040168762207
    8. '[d' → logprob: -8.130040168762207
    9. ' ,' → logprob: -8.880040168762207
    10. ',j' → logprob: -8.880040168762207

Token 267: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.26516494154930115
    2. 'j' → logprob: -1.5151649713516235
    3. ' k' → logprob: -4.765164852142334
    4. ' j' → logprob: -5.390164852142334
    5. ' ' → logprob: -10.765165328979492
    6. '   ' → logprob: -11.640165328979492
    7. 'i' → logprob: -12.077665328979492
    8. '    ' → logprob: -12.327665328979492
    9. 'get' → logprob: -12.515165328979492
    10. '  ' → logprob: -12.890165328979492

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022594700567424297
    2. ' ,' → logprob: -8.750226020812988
    3. ',j' → logprob: -9.625226020812988
    4. 'j' → logprob: -14.500226020812988
    5. '[' → logprob: -14.625226020812988
    6. '[j' → logprob: -15.375226020812988
    7. '   ' → logprob: -16.500225067138672
    8. ',
' → logprob: -17.125225067138672
    9. ',k' → logprob: -17.125225067138672
    10. '```' → logprob: -17.500225067138672

Token 269: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10023406147956848
    2. ' j' → logprob: -2.350234031677246
    3. '   ' → logprob: -11.975234031677246
    4. ' ' → logprob: -12.225234031677246
    5. 'k' → logprob: -12.225234031677246
    6. 'i' → logprob: -13.225234031677246
    7. '    ' → logprob: -13.475234031677246
    8. '  ' → logprob: -13.975234031677246
    9. ',' → logprob: -14.100234031677246
    10. '[j' → logprob: -14.100234031677246

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31343337893486023
    2. ')
' → logprob: -1.3134334087371826
    3. '       ' → logprob: -9.313433647155762
    4. '   ' → logprob: -9.813433647155762
    5. ' )' → logprob: -11.688433647155762
    6. ')
' → logprob: -12.063433647155762
    7. ' )
' → logprob: -12.063433647155762
    8. ')

' → logprob: -12.813433647155762
    9. ',' → logprob: -13.688433647155762
    10. '[' → logprob: -14.563433647155762

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06748061627149582
    2. '+' → logprob: -3.5674805641174316
    3. '
' → logprob: -4.317480564117432
    4. '<|end|>' → logprob: -4.817480564117432
    5. ' part' → logprob: -5.567480564117432
    6. 'part' → logprob: -5.817480564117432
    7. ' +' → logprob: -6.192480564117432
    8. '        
' → logprob: -6.692480564117432
    9. '   ' → logprob: -6.692480564117432
    10. '[' → logprob: -6.942480564117432

Token 272: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' (adapté à ' part') → logprob: -0.5810415744781494
    2. ' part' → logprob: -0.8310415744781494
    3. '       ' → logprob: -5.45604133605957
    4. '   ' → logprob: -7.33104133605957
    5. ' ' → logprob: -10.20604133605957
    6. '	part' → logprob: -10.58104133605957
    7. '(part' → logprob: -11.33104133605957
    8. '
' → logprob: -11.58104133605957
    9. '+' → logprob: -11.58104133605957
    10. '           ' → logprob: -11.70604133605957

Token 273: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2814643681049347
    2. '2' → logprob: -1.4064643383026123
    3. '1' → logprob: -8.531464576721191
    4. '=' → logprob: -10.031464576721191
    5. ' =' → logprob: -11.281464576721191
    6. ' ' → logprob: -11.531464576721191
    7. '[' → logprob: -11.656464576721191
    8. '```' → logprob: -11.781464576721191
    9. '_' → logprob: -12.031464576721191
    10. '   ' → logprob: -12.281464576721191

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -15.350207328796387
    4. ' ' → logprob: -15.600207328796387
    5. ' ' → logprob: -16.47520637512207
    6. '   ' → logprob: -16.72520637512207
    7. '=d' → logprob: -17.35020637512207
    8. ')' → logprob: -17.47520637512207
    9. 'def' → logprob: -17.72520637512207
    10. ' =
' → logprob: -18.10020637512207

Token 275: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.2520815134048462
    2. 'shift' → logprob: -1.5020815134048462
    3. ' roll' → logprob: -9.877081871032715
    4. 'd' → logprob: -10.502081871032715
    5. ' d' → logprob: -11.127081871032715
    6. 'roll' → logprob: -11.377081871032715
    7. ' ' → logprob: -11.752081871032715
    8. '   ' → logprob: -12.002081871032715
    9. '    ' → logprob: -12.002081871032715
    10. ' sum' → logprob: -12.502081871032715

Token 276: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.006721059791743755
    2. '_and' → logprob: -5.006721019744873
    3. '_left' → logprob: -12.506721496582031
    4. 'right' → logprob: -13.631721496582031
    5. '_' → logprob: -14.756721496582031
    6. 'and' → logprob: -15.881721496582031
    7. '_down' → logprob: -16.00672149658203
    8. 'Right' → logprob: -17.00672149658203
    9. '_to' → logprob: -18.00672149658203
    10. '```' → logprob: -18.38172149658203

Token 277: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.676981345459353e-06
    2. ' (' → logprob: -12.625005722045898
    3. '(' → logprob: -13.375005722045898
    4. 'd' → logprob: -14.875005722045898
    5. '(
' → logprob: -16.0000057220459
    6. '```' → logprob: -16.1250057220459
    7. '   ' → logprob: -17.1250057220459
    8. '[d' → logprob: -17.8750057220459
    9. ',' → logprob: -18.0000057220459
    10. 'and' → logprob: -18.1250057220459

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05972767993807793
    2. ',j' → logprob: -3.434727668762207
    3. '(j' → logprob: -4.059727668762207
    4. '[j' → logprob: -5.434727668762207
    5. ' ,' → logprob: -6.934727668762207
    6. 'j' → logprob: -6.934727668762207
    7. ',k' → logprob: -6.934727668762207
    8. '(' → logprob: -8.184727668762207
    9. '[' → logprob: -8.434727668762207
    10. '(k' → logprob: -8.559727668762207

Token 279: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4050147831439972
    2. 'k' → logprob: -1.4050147533416748
    3. ' j' → logprob: -2.655014753341675
    4. ' k' → logprob: -4.155014991760254
    5. 'i' → logprob: -7.280014991760254
    6. '   ' → logprob: -8.280014991760254
    7. '0' → logprob: -8.405014991760254
    8. ' i' → logprob: -9.030014991760254
    9. ' ' → logprob: -9.155014991760254
    10. '    ' → logprob: -9.780014991760254

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004358433187007904
    2. ',' → logprob: -5.879358291625977
    3. ')
' → logprob: -6.754358291625977
    4. ' )' → logprob: -9.004358291625977
    5. ',)' → logprob: -9.504358291625977
    6. '   ' → logprob: -9.879358291625977
    7. '[' → logprob: -9.879358291625977
    8. ')[' → logprob: -10.629358291625977
    9. '[j' → logprob: -11.254358291625977
    10. '[i' → logprob: -12.254358291625977

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2527662217617035
    2. 'd' → logprob: -1.8777662515640259
    3. '<|end|>' → logprob: -4.002766132354736
    4. '   ' → logprob: -4.252766132354736
    5. '+' → logprob: -4.627766132354736
    6. ' d' → logprob: -4.627766132354736
    7. ' +' → logprob: -5.502766132354736
    8. '        
' → logprob: -6.377766132354736
    9. 'sum' → logprob: -6.502766132354736
    10. 's' → logprob: -6.502766132354736

Token 282: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.007794828619807959
    2. '       ' → logprob: -4.8827948570251465
    3. ' d' → logprob: -9.132794380187988
    4. '   ' → logprob: -9.757794380187988
    5. 'for' → logprob: -12.007794380187988
    6. '```' → logprob: -13.007794380187988
    7. ' ' → logprob: -13.382794380187988
    8. 'import' → logprob: -13.382794380187988
    9. '           ' → logprob: -13.382794380187988
    10. 'result' → logprob: -13.507794380187988

Token 283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.375004768371582
    3. ' [' → logprob: -14.125004768371582
    4. '```' → logprob: -14.250004768371582
    5. '[I' → logprob: -14.500004768371582
    6. ')[' → logprob: -14.875004768371582
    7. '[j' → logprob: -15.750004768371582
    8. '
' → logprob: -15.750004768371582
    9. '}[' → logprob: -16.750003814697266
    10. 'i' → logprob: -17.125003814697266

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011112194508314133
    2. '][:' → logprob: -4.886112213134766
    3. '][' → logprob: -6.136112213134766
    4. ']+=' → logprob: -7.261112213134766
    5. ']=' → logprob: -7.511112213134766
    6. '][]' → logprob: -10.761112213134766
    7. ' ]' → logprob: -11.136112213134766
    8. ',' → logprob: -11.386112213134766
    9. '[:]' → logprob: -11.886112213134766
    10. '[i' → logprob: -12.011112213134766

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028522711247205734
    2. '+=' → logprob: -3.9035227298736572
    3. '[:]' → logprob: -5.278522491455078
    4. ' =' → logprob: -6.028522491455078
    5. ' +=' → logprob: -8.528522491455078
    6. '%=' → logprob: -9.153522491455078
    7. '[:' → logprob: -9.403522491455078
    8. '.=' → logprob: -11.153522491455078
    9. ']+=' → logprob: -11.278522491455078
    10. '[' → logprob: -11.278522491455078

Token 286: ' (' (ID: 350)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.1836206614971161
    2. ' part' → logprob: -1.8086206912994385
    3. '(part' → logprob: -5.808620452880859
    4. ' (' → logprob: -7.558620452880859
    5. ' d' → logprob: -9.05862045288086
    6. 'd' → logprob: -9.05862045288086
    7. '(' → logprob: -10.18362045288086
    8. '   ' → logprob: -10.93362045288086
    9. ' ' → logprob: -11.18362045288086
    10. '	part' → logprob: -11.55862045288086

Token 287: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0892261490225792
    2. ' part' → logprob: -2.464226245880127
    3. '(part' → logprob: -8.214225769042969
    4. ' (' → logprob: -12.214225769042969
    5. '	part' → logprob: -12.839225769042969
    6. ' ' → logprob: -13.339225769042969
    7. 'd' → logprob: -13.464225769042969
    8. '   ' → logprob: -13.964225769042969
    9. ' d' → logprob: -14.339225769042969
    10. ')' → logprob: -14.339225769042969

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '3' → logprob: -13.125003814697266
    3. '2' → logprob: -14.000003814697266
    4. '0' → logprob: -15.750003814697266
    5. '
' → logprob: -16.000003814697266
    6. ' ' → logprob: -16.000003814697266
    7. '_' → logprob: -16.437503814697266
    8. '```' → logprob: -17.312503814697266
    9. '１' → logprob: -18.187503814697266
    10. '[' → logprob: -18.187503814697266

Token 289: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08895593881607056
    2. '+' → logprob: -2.463955879211426
    3. ' ' → logprob: -11.588955879211426
    4. ' +
' → logprob: -12.838955879211426
    5. '[' → logprob: -13.963955879211426
    6. '%' → logprob: -13.963955879211426
    7. '   ' → logprob: -14.588955879211426
    8. '+
' → logprob: -14.588955879211426
    9. ' %' → logprob: -14.838955879211426
    10. ' +
' → logprob: -15.213955879211426

Token 290: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.17975378036499023
    2. ' part' → logprob: -1.8047537803649902
    3. '	part' → logprob: -12.304754257202148
    4. '(part' → logprob: -13.429754257202148
    5. ' ' → logprob: -14.054754257202148
    6. '    ' → logprob: -14.804754257202148
    7. '   ' → logprob: -15.304754257202148
    8. ' ' → logprob: -15.304754257202148
    9. '_part' → logprob: -15.554754257202148
    10. '  ' → logprob: -15.679754257202148

Token 291: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06993798911571503
    2. '2' → logprob: -2.6949379444122314
    3. 'part' → logprob: -15.444937705993652
    4. '*' → logprob: -15.944937705993652
    5. ' ' → logprob: -16.00743865966797
    6. '```' → logprob: -16.19493865966797
    7. 'ort' → logprob: -16.56993865966797
    8. ')' → logprob: -16.63243865966797
    9. '
' → logprob: -16.75743865966797
    10. 's' → logprob: -17.00743865966797

Token 292: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519417703151703
    2. '+' → logprob: -1.5019418001174927
    3. ')' → logprob: -11.751941680908203
    4. '[' → logprob: -13.626941680908203
    5. ' ' → logprob: -13.626941680908203
    6. ' +
' → logprob: -14.126941680908203
    7. '+
' → logprob: -14.376941680908203
    8. ' +

' → logprob: -15.626941680908203
    9. ')+' → logprob: -15.876941680908203
    10. '+

' → logprob: -16.126941680908203

Token 293: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.03806065768003464
    2. ' part' → logprob: -3.2880606651306152
    3. '	part' → logprob: -12.038060188293457
    4. ' ' → logprob: -12.288060188293457
    5. '(part' → logprob: -13.038060188293457
    6. '   ' → logprob: -13.538060188293457
    7. '    ' → logprob: -14.163060188293457
    8. '+' → logprob: -14.163060188293457
    9. '  ' → logprob: -14.288060188293457
    10. ' ' → logprob: -14.413060188293457

Token 294: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. 's' → logprob: -18.75
    3. ' ' → logprob: -19.5
    4. '[' → logprob: -19.5
    5. ')' → logprob: -20.625
    6. '３' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. '   ' → logprob: -21.125
    9. 'd' → logprob: -21.125
    10. '2' → logprob: -21.1875

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006129645276814699
    2. ')%' → logprob: -5.131129741668701
    3. ' )' → logprob: -8.756129264831543
    4. '%' → logprob: -10.506129264831543
    5. ' %' → logprob: -11.506129264831543
    6. ').' → logprob: -13.631129264831543
    7. ')
' → logprob: -14.131129264831543
    8. ')[' → logprob: -14.756129264831543
    9. '%d' → logprob: -14.756129264831543
    10. '%i' → logprob: -14.756129264831543

Token 296: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12968920171260834
    2. ' %' → logprob: -2.1296892166137695
    3. '%i' → logprob: -6.7546892166137695
    4. '[i' → logprob: -7.0046892166137695
    5. '%d' → logprob: -8.00468921661377
    6. '[' → logprob: -9.25468921661377
    7. ')' → logprob: -9.62968921661377
    8. ')%' → logprob: -10.37968921661377
    9. ' %=' → logprob: -10.62968921661377
    10. '```' → logprob: -11.00468921661377

Token 297: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.008615042082965374
    2. ' M' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.008615493774414
    4. ' ' → logprob: -16.508615493774414
    5. '   ' → logprob: -17.133615493774414
    6. '	M' → logprob: -17.133615493774414
    7. '  ' → logprob: -17.883615493774414
    8. '```' → logprob: -18.258615493774414
    9. '(M' → logprob: -18.508615493774414
    10. '<M' → logprob: -18.508615493774414

Token 298: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3527352511882782
    2. ' read' → logprob: -2.2277352809906006
    3. 'if' → logprob: -2.6027352809906006
    4. 'main' → logprob: -3.3527352809906006
    5. ' if' → logprob: -3.4777352809906006
    6. '__' → logprob: -3.8527352809906006
    7. ' __' → logprob: -4.2277350425720215
    8. 'read' → logprob: -4.4777350425720215
    9. ' run' → logprob: -6.3527350425720215
    10. 'run' → logprob: -8.60273551940918

Token 301: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0018337996443733573
    2. '()' → logprob: -6.376833915710449
    3. '(' → logprob: -9.25183391571045
    4. '_' → logprob: -11.25183391571045
    5. '():
' → logprob: -11.50183391571045
    6. '()>' → logprob: -12.75183391571045
    7. '_loop' → logprob: -13.62683391571045
    8. 'def' → logprob: -13.75183391571045
    9. '();' → logprob: -13.87683391571045
    10. '().__' → logprob: -13.87683391571045

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06670062243938446
    2. 'n' → logprob: -3.3167006969451904
    3. ' n' → logprob: -3.5667006969451904
    4. '	n' → logprob: -12.81670093536377
    5. '(n' → logprob: -14.94170093536377
    6. ',n' → logprob: -15.56670093536377
    7. '```' → logprob: -15.81670093536377
    8. ',' → logprob: -16.191699981689453
    9. ' for' → logprob: -16.941699981689453
    10. ' ' → logprob: -17.191699981689453

Token 303: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02336718700826168
    2. ' n' → logprob: -3.773367166519165
    3. '   ' → logprob: -9.023366928100586
    4. '```' → logprob: -14.148366928100586
    5. 'if' → logprob: -15.648366928100586
    6. '	n' → logprob: -16.023366928100586
    7. ' if' → logprob: -17.273366928100586
    8. 'import' → logprob: -17.398366928100586
    9. ' ' → logprob: -17.398366928100586
    10. '
' → logprob: -18.648366928100586

Token 304: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.432572603225708
    2. '=' → logprob: -1.057572603225708
    3. ',' → logprob: -5.557572364807129
    4. ' ,' → logprob: -13.057572364807129
    5. '=int' → logprob: -13.807572364807129
    6. ' ' → logprob: -13.932572364807129
    7. '   ' → logprob: -14.307572364807129
    8. ')' → logprob: -14.682572364807129
    9. '=input' → logprob: -15.432572364807129
    10. '.' → logprob: -16.182573318481445

Token 305: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.38688698410987854
    2. ' M' → logprob: -1.1368869543075562
    3. ' ' → logprob: -11.511886596679688
    4. '=' → logprob: -13.761886596679688
    5. 'm' → logprob: -13.761886596679688
    6. '*' → logprob: -13.761886596679688
    7. '   ' → logprob: -14.511886596679688
    8. '*M' → logprob: -14.511886596679688
    9. ' =' → logprob: -14.636886596679688
    10. '    ' → logprob: -14.636886596679688

Token 306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688117265701294
    2. ' =' → logprob: -1.1368811130523682
    3. ',' → logprob: -11.636880874633789
    4. '=input' → logprob: -14.261880874633789
    5. ')' → logprob: -14.761880874633789
    6. ')=' → logprob: -16.63688087463379
    7. '=int' → logprob: -16.63688087463379
    8. '＝' → logprob: -17.26188087463379
    9. ' ' → logprob: -17.38688087463379
    10. '   ' → logprob: -17.51188087463379

Token 307: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.23016272485256195
    2. 'read' → logprob: -1.9801627397537231
    3. ' map' → logprob: -2.8551626205444336
    4. 'map' → logprob: -4.605162620544434
    5. ' tuple' → logprob: -13.980162620544434
    6. '	read' → logprob: -14.605162620544434
    7. 'tuple' → logprob: -15.355162620544434
    8. ' ' → logprob: -15.480162620544434
    9. '   ' → logprob: -15.855162620544434
    10. '[' → logprob: -16.23016357421875

Token 308: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01606498844921589
    2. '()' → logprob: -4.1410651206970215
    3. 'input' → logprob: -11.391064643859863
    4. '()
' → logprob: -12.141064643859863
    5. '_' → logprob: -12.141064643859863
    6. '(' → logprob: -12.766064643859863
    7. 'Input' → logprob: -13.516064643859863
    8. '_int' → logprob: -14.016064643859863
    9. '_output' → logprob: -14.891064643859863
    10. '_inputs' → logprob: -14.891064643859863

Token 309: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43125665187835693
    2. '()
' → logprob: -1.056256651878357
    3. '
' → logprob: -6.0562567710876465
    4. '()\' → logprob: -9.681256294250488
    5. '(
' → logprob: -10.681256294250488
    6. '()

' → logprob: -11.056256294250488
    7. '(' → logprob: -11.181256294250488
    8. '(n' → logprob: -11.181256294250488
    9. '():
' → logprob: -11.306256294250488
    10. '   ' → logprob: -11.556256294250488

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0793599784374237
    2. 'l' → logprob: -2.579360008239746
    3. ' l' → logprob: -7.829360008239746
    4. '```' → logprob: -10.079360008239746
    5. '	l' → logprob: -10.579360008239746
    6. 'n' → logprob: -13.704360008239746
    7. ' ' → logprob: -14.329360008239746
    8. ',l' → logprob: -14.579360008239746
    9. 'L' → logprob: -14.704360008239746
    10. '  ' → logprob: -14.954360008239746

Token 311: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.01609736680984497
    2. ' l' → logprob: -4.266097545623779
    3. '   ' → logprob: -6.266097545623779
    4. '```' → logprob: -10.641097068786621
    5. '	l' → logprob: -12.391097068786621
    6. ' ' → logprob: -13.016097068786621
    7. '  ' → logprob: -14.016097068786621
    8. '`' → logprob: -15.016097068786621
    9. '``' → logprob: -15.016097068786621
    10. '
' → logprob: -15.766097068786621

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693147599697113
    2. ' =' → logprob: -0.693147599697113
    3. ',' → logprob: -15.568147659301758
    4. ' ' → logprob: -16.818147659301758
    5. ')' → logprob: -17.318147659301758
    6. '=

' → logprob: -17.568147659301758
    7. '＝' → logprob: -17.568147659301758
    8. ' =
' → logprob: -17.693147659301758
    9. '=int' → logprob: -18.443147659301758
    10. '=
' → logprob: -19.193147659301758

Token 313: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.47407716512680054
    2. 'compute' → logprob: -0.9740771651268005
    3. '_compute' → logprob: -16.724077224731445
    4. ' ' → logprob: -17.224077224731445
    5. '.compute' → logprob: -17.224077224731445
    6. 'n' → logprob: -17.849077224731445
    7. 'calculate' → logprob: -17.974077224731445
    8. ' calculate' → logprob: -18.224077224731445
    9. ' n' → logprob: -18.724077224731445
    10. 'computer' → logprob: -19.974077224731445

Token 314: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: 0.0
    2. '_' → logprob: -18.0
    3. ' _' → logprob: -19.625
    4. 'l' → logprob: -19.875
    5. '(_' → logprob: -20.75
    6. '```' → logprob: -20.75
    7. '(' → logprob: -21.5
    8. '_n' → logprob: -21.625
    9. '_L' → logprob: -21.75
    10. '"_' → logprob: -22.0

Token 315: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.250006675720215
    3. 'n' → logprob: -13.500006675720215
    4. ' (' → logprob: -15.625006675720215
    5. '	n' → logprob: -20.1250057220459
    6. '(
' → logprob: -20.2500057220459
    7. '(int' → logprob: -20.5000057220459
    8. '(N' → logprob: -21.1250057220459
    9. '<n' → logprob: -21.1250057220459
    10. ' n' → logprob: -21.2500057220459

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018041854491457343
    2. ')
' → logprob: -8.6251802444458
    3. ')
' → logprob: -15.0001802444458
    4. ' )' → logprob: -15.1251802444458
    5. ')

' → logprob: -16.125181198120117
    6. '()' → logprob: -17.125181198120117
    7. '())' → logprob: -17.625181198120117
    8. '),' → logprob: -17.625181198120117
    9. '   ' → logprob: -17.750181198120117
    10. '))' → logprob: -18.125181198120117

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25387105345726013
    2. 'd' → logprob: -1.5038710832595825
    3. ' d' → logprob: -6.253870964050293
    4. '```' → logprob: -11.378870964050293
    5. ' ' → logprob: -12.628870964050293
    6. '	d' → logprob: -13.378870964050293
    7. '  ' → logprob: -14.628870964050293
    8. '   ' → logprob: -15.628870964050293
    9. '       ' → logprob: -16.37887191772461
    10. '    
' → logprob: -16.87887191772461

Token 318: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0009345670696347952
    2. '   ' → logprob: -7.500934600830078
    3. ' d' → logprob: -7.875934600830078
    4. '```' → logprob: -14.000934600830078
    5. '	d' → logprob: -14.875934600830078
    6. ' ' → logprob: -15.125934600830078
    7. '    
' → logprob: -16.125934600830078
    8. '
' → logprob: -16.250934600830078
    9. '  ' → logprob: -16.375934600830078
    10. 'n' → logprob: -17.875934600830078

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ',' → logprob: -14.578890800476074
    4. ' ' → logprob: -16.703889846801758
    5. '	' → logprob: -17.828889846801758
    6. '＝' → logprob: -18.453889846801758
    7. '```' → logprob: -18.453889846801758
    8. ' ' → logprob: -18.703889846801758
    9. '   ' → logprob: -18.953889846801758
    10. '=create' → logprob: -19.203889846801758

Token 320: ' allocate' (ID: 48502)
  Prédit: 'allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocate' → logprob: -0.3868774473667145
    2. ' allocate' → logprob: -1.136877417564392
    3. '_allocate' → logprob: -12.511877059936523
    4. '.allocate' → logprob: -13.261877059936523
    5. 'alloc' → logprob: -14.261877059936523
    6. 'initialize' → logprob: -15.136877059936523
    7. '   ' → logprob: -17.386877059936523
    8. ' ' → logprob: -17.636877059936523
    9. ' ' → logprob: -17.636877059936523
    10. 'Allocate' → logprob: -17.761877059936523

Token 321: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.649307131767273
    2. '(d' → logprob: -0.899307131767273
    3. 'd' → logprob: -2.6493072509765625
    4. '(' → logprob: -10.774307250976562
    5. ' d' → logprob: -11.899307250976562
    6. '	d' → logprob: -12.149307250976562
    7. '(l' → logprob: -13.024307250976562
    8. ' (' → logprob: -13.524307250976562
    9. 'D' → logprob: -14.524307250976562
    10. '_' → logprob: -14.524307250976562

Token 322: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.125
    3. '(d' → logprob: -16.0
    4. 'l' → logprob: -18.25
    5. ' (' → logprob: -18.375
    6. '(L' → logprob: -20.0
    7. '(s' → logprob: -20.125
    8. 'd' → logprob: -20.125
    9. '((' → logprob: -21.625
    10. '(ld' → logprob: -21.75

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043460296001285315
    2. ',n' → logprob: -7.750434398651123
    3. ' ,' → logprob: -12.750434875488281
    4. '(n' → logprob: -14.125434875488281
    5. ',
' → logprob: -15.125434875488281
    6. 'n' → logprob: -17.12543487548828
    7. '(' → logprob: -18.62543487548828
    8. '```' → logprob: -19.12543487548828
    9. ',

' → logprob: -19.62543487548828
    10. ')' → logprob: -19.87543487548828

Token 324: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7697225252486533e-06
    2. ' n' → logprob: -12.500003814697266
    3. ')n' → logprob: -18.000003814697266
    4. '	n' → logprob: -18.625003814697266
    5. '(n' → logprob: -20.750003814697266
    6. '   ' → logprob: -21.250003814697266
    7. '5' → logprob: -21.750003814697266
    8. ',n' → logprob: -22.000003814697266
    9. ')' → logprob: -22.625003814697266
    10. '
' → logprob: -22.875003814697266

Token 325: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011057252995669842
    2. ')
' → logprob: -4.511057376861572
    3. ')

' → logprob: -12.511056900024414
    4. ')
' → logprob: -12.761056900024414
    5. ' )' → logprob: -14.011056900024414
    6. '))' → logprob: -14.136056900024414
    7. ')`' → logprob: -15.386056900024414
    8. '),' → logprob: -15.886056900024414
    9. ')d' → logprob: -15.886056900024414
    10. ')n' → logprob: -16.261056900024414

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4749505817890167
    2. 'initialize' → logprob: -0.9749505519866943
    3. ' initialize' → logprob: -7.224950790405273
    4. '	initialize' → logprob: -9.474950790405273
    5. '```' → logprob: -9.724950790405273
    6. '_initialize' → logprob: -12.599950790405273
    7. '.initialize' → logprob: -13.349950790405273
    8. '    
' → logprob: -13.849950790405273
    9. '
' → logprob: -14.349950790405273
    10. '   ' → logprob: -14.474950790405273

Token 327: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' (adapté à ' initialize') → logprob: -8.208653162000701e-05
    2. '   ' → logprob: -9.500082015991211
    3. ' initialize' → logprob: -12.125082015991211
    4. '	initialize' → logprob: -13.750082015991211
    5. '
' → logprob: -15.250082015991211
    6. '```' → logprob: -15.375082015991211
    7. '.initialize' → logprob: -15.875082015991211
    8. '_initialize' → logprob: -16.87508201599121
    9. '    
' → logprob: -17.12508201599121
    10. 'initial' → logprob: -18.12508201599121

Token 328: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.6957211494445801
    2. '(d' → logprob: -0.6957211494445801
    3. 'd' → logprob: -6.44572114944458
    4. '_' → logprob: -7.19572114944458
    5. '(' → logprob: -8.695720672607422
    6. '_(' → logprob: -9.945720672607422
    7. '(_' → logprob: -11.695720672607422
    8. ' (' → logprob: -12.570720672607422
    9. '```' → logprob: -12.695720672607422
    10. '	d' → logprob: -14.570720672607422

Token 329: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.0339031834737398e-05
    2. 'd' → logprob: -10.875020027160645
    3. '(' → logprob: -13.625020027160645
    4. '_d' → logprob: -16.87502098083496
    5. '(
' → logprob: -17.37502098083496
    6. '	d' → logprob: -18.00002098083496
    7. ' (' → logprob: -18.75002098083496
    8. '```' → logprob: -18.75002098083496
    9. ' d' → logprob: -20.12502098083496
    10. ',d' → logprob: -20.25002098083496

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00318912067450583
    2. ')
' → logprob: -5.7531890869140625
    3. '   ' → logprob: -11.753189086914062
    4. ')d' → logprob: -13.253189086914062
    5. ' )' → logprob: -14.503189086914062
    6. ')

' → logprob: -14.878189086914062
    7. ')
' → logprob: -15.003189086914062
    8. '()' → logprob: -15.253189086914062
    9. '())' → logprob: -16.753189086914062
    10. ',' → logprob: -16.753189086914062

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09366554021835327
    2. 'main' → logprob: -2.468665599822998
    3. '```' → logprob: -6.343665599822998
    4. ' main' → logprob: -6.843665599822998
    5. '
' → logprob: -7.093665599822998
    6. 'for' → logprob: -7.468665599822998
    7. 'def' → logprob: -8.34366512298584
    8. '    
' → logprob: -9.34366512298584
    9. ' for' → logprob: -9.96866512298584
    10. '	main' → logprob: -10.34366512298584

Token 332: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.04637720808386803
    2. '   ' → logprob: -3.296377182006836
    3. 'for' → logprob: -5.296377182006836
    4. ' main' → logprob: -5.796377182006836
    5. ' for' → logprob: -8.796377182006836
    6. '```' → logprob: -10.296377182006836
    7. '	main' → logprob: -10.796377182006836
    8. '    
' → logprob: -11.296377182006836
    9. ' ' → logprob: -11.421377182006836
    10. '  ' → logprob: -11.671377182006836

Token 333: '_loop' (ID: 40621)
  Prédit: '_loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -7.896309739408025e-07
    2. '_lo' → logprob: -14.750000953674316
    3. '_' → logprob: -15.625000953674316
    4. ' _' → logprob: -16.75
    5. '__' → logprob: -18.0
    6. '_LOOP' → logprob: -18.5
    7. '_main' → logprob: -18.625
    8. '_line' → logprob: -18.75
    9. '(_' → logprob: -19.0
    10. '```' → logprob: -19.5

Token 334: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032721837051212788
    2. '(d' → logprob: -5.75327205657959
    3. '(l' → logprob: -9.50327205657959
    4. '(' → logprob: -10.87827205657959
    5. ' (' → logprob: -14.00327205657959
    6. '(
' → logprob: -17.003273010253906
    7. '```' → logprob: -17.753273010253906
    8. '((' → logprob: -18.003273010253906
    9. '(def' → logprob: -18.003273010253906
    10. '(len' → logprob: -18.128273010253906

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -12.375007629394531
    3. ',n' → logprob: -13.250007629394531
    4. '(' → logprob: -14.625007629394531
    5. '(n' → logprob: -14.625007629394531
    6. ',M' → logprob: -14.875007629394531
    7. ',l' → logprob: -15.000007629394531
    8. ')' → logprob: -15.250007629394531
    9. ',
' → logprob: -16.75000762939453
    10. ',d' → logprob: -17.25000762939453

Token 336: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018255533650517464
    2. ' M' → logprob: -4.018255710601807
    3. 'l' → logprob: -9.268255233764648
    4. ' l' → logprob: -12.893255233764648
    5. 'n' → logprob: -13.018255233764648
    6. 'd' → logprob: -13.393255233764648
    7. '   ' → logprob: -13.518255233764648
    8. ' ' → logprob: -13.643255233764648
    9. 'm' → logprob: -14.018255233764648
    10. ')' → logprob: -14.393255233764648

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001229634741321206
    2. 'l' → logprob: -6.876229763031006
    3. ',l' → logprob: -8.876229286193848
    4. ' ,' → logprob: -10.626229286193848
    5. '(l' → logprob: -11.001229286193848
    6. '(' → logprob: -11.626229286193848
    7. ')' → logprob: -12.251229286193848
    8. ' l' → logprob: -13.751229286193848
    9. '   ' → logprob: -14.501229286193848
    10. 'd' → logprob: -14.876229286193848

Token 338: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0067161982879042625
    2. ' l' → logprob: -5.006716251373291
    3. 'd' → logprob: -14.756715774536133
    4. '   ' → logprob: -15.631715774536133
    5. ' ' → logprob: -16.006715774536133
    6. '	l' → logprob: -16.131715774536133
    7. 'n' → logprob: -17.256715774536133
    8. '```' → logprob: -17.381715774536133
    9. '(l' → logprob: -17.881715774536133
    10. ' d' → logprob: -18.131715774536133

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000205566844670102
    2. ',d' → logprob: -8.750205993652344
    3. 'd' → logprob: -10.000205993652344
    4. ' ,' → logprob: -13.625205993652344
    5. ' d' → logprob: -16.125205993652344
    6. ',
' → logprob: -16.125205993652344
    7. ')' → logprob: -16.500205993652344
    8. '   ' → logprob: -17.125205993652344
    9. '(d' → logprob: -17.125205993652344
    10. '(' → logprob: -18.125205993652344

Token 340: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002476016292348504
    2. ' d' → logprob: -6.002476215362549
    3. '
' → logprob: -16.25247573852539
    4. '	d' → logprob: -16.50247573852539
    5. ')d' → logprob: -17.12747573852539
    6. '   ' → logprob: -17.25247573852539
    7. ')' → logprob: -17.87747573852539
    8. ' ' → logprob: -18.75247573852539
    9. '_d' → logprob: -18.75247573852539
    10. '```' → logprob: -18.87747573852539

Token 341: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01818072982132435
    2. ')' → logprob: -4.018180847167969
    3. ')
' → logprob: -10.893180847167969
    4. '   ' → logprob: -11.643180847167969
    5. ')

' → logprob: -13.268180847167969
    6. ' )
' → logprob: -13.518180847167969
    7. ' ' → logprob: -15.893180847167969
    8. ')d' → logprob: -16.26818084716797
    9. ')`
' → logprob: -17.01818084716797
    10. '
' → logprob: -17.26818084716797

Token 342: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2548222243785858
    2. '   ' → logprob: -1.5048222541809082
    3. ' print' → logprob: -6.004822254180908
    4. 'result' → logprob: -8.62982177734375
    5. 'return' → logprob: -9.00482177734375
    6. '```' → logprob: -9.12982177734375
    7. '	print' → logprob: -12.50482177734375
    8. ' result' → logprob: -13.12982177734375
    9. ' return' → logprob: -13.12982177734375
    10. '    
' → logprob: -14.00482177734375

Token 343: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008765661623328924
    2. '   ' → logprob: -7.750876426696777
    3. 'result' (adapté à ' result') → logprob: -8.000876426696777
    4. ' print' → logprob: -9.125876426696777
    5. '```' → logprob: -14.500876426696777
    6. 'return' → logprob: -15.125876426696777
    7. ' result' → logprob: -15.125876426696777
    8. 'answer' → logprob: -15.375876426696777
    9. 'res' → logprob: -15.875876426696777
    10. 'output' → logprob: -16.375877380371094

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014193832874298
    2. '=' → logprob: -1.7014193534851074
    3. ' ' → logprob: -13.451419830322266
    4. '   ' → logprob: -13.576419830322266
    5. '[' → logprob: -13.701419830322266
    6. '_' → logprob: -13.701419830322266
    7. 's' → logprob: -15.326419830322266
    8. ' ' → logprob: -15.451419830322266
    9. '```' → logprob: -15.951419830322266
    10. '  ' → logprob: -16.201419830322266

Token 345: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20141607522964478
    2. ' sum' → logprob: -1.701416015625
    3. '(sum' → logprob: -13.326416015625
    4. 'd' → logprob: -14.076416015625
    5. ' d' → logprob: -15.576416015625
    6. '   ' → logprob: -16.451416015625
    7. '	sum' → logprob: -16.451416015625
    8. ' ' → logprob: -17.576416015625
    9. '=sum' → logprob: -18.701416015625
    10. '
' → logprob: -19.701416015625

Token 346: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.004452789667993784
    2. '(d' → logprob: -5.504452705383301
    3. 'mod' → logprob: -8.1294527053833
    4. 'd' → logprob: -9.8794527053833
    5. '(_' → logprob: -11.2544527053833
    6. '_' → logprob: -12.5044527053833
    7. '_MOD' → logprob: -13.1294527053833
    8. '_(' → logprob: -13.5044527053833
    9. 'Mod' → logprob: -13.8794527053833
    10. ' _' → logprob: -14.1294527053833

Token 347: 'ulo' (ID: 5953)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.14074718952178955
    2. 'odule' → logprob: -2.8907470703125
    3. 'oto' → logprob: -3.2657470703125
    4. 'ute' → logprob: -4.5157470703125
    5. 'odo' → logprob: -4.6407470703125
    6. 'o' → logprob: -5.0157470703125
    7. 'uto' → logprob: -5.2657470703125
    8. 'ulo' → logprob: -6.0157470703125
    9. 'ode' → logprob: -6.7657470703125
    10. 'odu' → logprob: -7.8907470703125

Token 348: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -14.375000953674316
    3. '(' → logprob: -14.500000953674316
    4. '(arr' → logprob: -16.625001907348633
    5. 'd' → logprob: -16.875001907348633
    6. '((' → logprob: -17.375001907348633
    7. '(
' → logprob: -19.125001907348633
    8. '```' → logprob: -19.625001907348633
    9. '(s' → logprob: -20.750001907348633
    10. 'arr' → logprob: -20.750001907348633

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034127507358789444
    2. ',l' → logprob: -4.534127712249756
    3. ',d' → logprob: -4.909127712249756
    4. ',n' → logprob: -5.034127712249756
    5. '(n' → logprob: -5.409127712249756
    6. '(l' → logprob: -7.159127712249756
    7. '[' → logprob: -7.409127712249756
    8. '(d' → logprob: -7.534127712249756
    9. ',[' → logprob: -7.659127712249756
    10. '(' → logprob: -7.784127712249756

Token 350: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6478047966957092
    2. 'n' → logprob: -0.7728047966957092
    3. ' n' → logprob: -4.8978047370910645
    4. ' l' → logprob: -5.1478047370910645
    5. 'compute' → logprob: -6.7728047370910645
    6. '3' → logprob: -8.022805213928223
    7. ' compute' → logprob: -9.022805213928223
    8. ' ' → logprob: -10.147805213928223
    9. '   ' → logprob: -10.397805213928223
    10. '(n' → logprob: -10.647805213928223

Token 351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04049411788582802
    2. '[' → logprob: -3.290494203567505
    3. ',n' → logprob: -6.540493965148926
    4. '[n' → logprob: -7.915493965148926
    5. ' ,' → logprob: -8.290493965148926
    6. '[-' → logprob: -9.040493965148926
    7. '-' → logprob: -9.165493965148926
    8. '(n' → logprob: -9.540493965148926
    9. 'n' → logprob: -10.165493965148926
    10. '[:,' → logprob: -11.290493965148926

Token 352: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007164848502725363
    2. ' M' → logprob: -7.250716686248779
    3. 'n' → logprob: -12.625716209411621
    4. '   ' → logprob: -13.000716209411621
    5. ' ' → logprob: -15.500716209411621
    6. ')' → logprob: -15.625716209411621
    7. '  ' → logprob: -15.875716209411621
    8. '    ' → logprob: -16.125717163085938
    9. '       ' → logprob: -16.250717163085938
    10. 'М' → logprob: -17.250717163085938

Token 353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02993098832666874
    2. ')' → logprob: -3.52993106842041
    3. ')
' → logprob: -8.90493106842041
    4. '   ' → logprob: -11.15493106842041
    5. ' )
' → logprob: -11.15493106842041
    6. '[' → logprob: -12.27993106842041
    7. ')`
' → logprob: -12.52993106842041
    8. ')

' → logprob: -13.02993106842041
    9. ' ' → logprob: -13.40493106842041
    10. '[-' → logprob: -14.02993106842041

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13707485795021057
    2. 'print' → logprob: -2.3870749473571777
    3. ' print' → logprob: -3.3870749473571777
    4. ' return' → logprob: -6.762074947357178
    5. '
' → logprob: -7.262074947357178
    6. '```' → logprob: -8.38707447052002
    7. 'return' → logprob: -8.51207447052002
    8. '	print' → logprob: -10.01207447052002
    9. '    
' → logprob: -10.26207447052002
    10. '<|end|>' → logprob: -11.76207447052002

Token 355: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.244413766078651e-05
    2. '   ' → logprob: -10.000082015991211
    3. ' print' → logprob: -10.250082015991211
    4. 'return' → logprob: -13.625082015991211
    5. '```' → logprob: -14.875082015991211
    6. '	print' → logprob: -16.50008201599121
    7. '#print' → logprob: -20.12508201599121
    8. '
' → logprob: -20.50008201599121
    9. ' return' → logprob: -20.87508201599121
    10. '``' → logprob: -21.12508201599121

Token 356: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015293825417757034
    2. '(' → logprob: -6.501529216766357
    3. 'result' → logprob: -10.626529693603516
    4. '()' → logprob: -13.876529693603516
    5. '(sum' → logprob: -14.376529693603516
    6. ' (' → logprob: -14.626529693603516
    7. '(
' → logprob: -15.251529693603516
    8. '(res' → logprob: -15.626529693603516
    9. '(results' → logprob: -15.626529693603516
    10. '((' → logprob: -16.751529693603516

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -14.37500286102295
    3. ' )' → logprob: -14.37500286102295
    4. '()' → logprob: -14.50000286102295
    5. '())' → logprob: -14.87500286102295
    6. '))' → logprob: -15.25000286102295
    7. ')`' → logprob: -16.000001907348633
    8. '`)' → logprob: -16.750001907348633
    9. '(' → logprob: -16.875001907348633
    10. '')' → logprob: -17.750001907348633

Token 358: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0011701062321662903
    2. '
' → logprob: -7.3761701583862305
    3. ' if' → logprob: -8.37617015838623
    4. '<|end|>' → logprob: -8.87617015838623
    5. '```' → logprob: -9.87617015838623
    6. 'main' → logprob: -10.50117015838623
    7. '#' → logprob: -10.75117015838623
    8. '()' → logprob: -11.00117015838623
    9. '\n' → logprob: -11.37617015838623
    10. '[' → logprob: -11.62617015838623

Token 359: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0703384131193161
    2. '(' → logprob: -2.695338487625122
    3. '()
' → logprob: -8.695338249206543
    4. '(
' → logprob: -8.945338249206543
    5. '#' → logprob: -10.195338249206543
    6. '<|end|>' → logprob: -11.570338249206543
    7. '```' → logprob: -11.820338249206543
    8. '()

' → logprob: -12.070338249206543
    9. '();' → logprob: -12.070338249206543
    10. ')' → logprob: -12.695338249206543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 38.66%
Précision adaptée (1ère position): 41.74%
Précision (top 10): 82.63%
================================================================================
