================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
seq = []
for j in range(1, 10): seq.append(j)
i = 0
found = False
while i < len(seq):
    el = seq[i]
    if not N % el:
        q = N // el
        if q in seq:
            print("Yes")
            found = True
            break
    i += 1
if not found:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'seq' (ID: 27794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38794681429862976
    2. 'if' → logprob: -1.3879468441009521
    3. 'x' → logprob: -4.262946605682373
    4. 's' → logprob: -4.387946605682373
    5. 'i' → logprob: -4.637946605682373
    6. 'a' → logprob: -5.137946605682373
    7. 'f' → logprob: -5.762946605682373
    8. 'result' → logprob: -6.012946605682373
    9. 'print' → logprob: -6.012946605682373
    10. '`' → logprob: -6.137946605682373

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013923490419983864
    2. 'u' → logprob: -5.138923645019531
    3. '[]' → logprob: -6.263923645019531
    4. '[u' → logprob: -6.388923645019531
    5. '\[' → logprob: -6.888923645019531
    6. '_' → logprob: -6.888923645019531
    7. '.' → logprob: -7.263923645019531
    8. '(' → logprob: -8.013923645019531
    9. 'ence' → logprob: -8.013923645019531
    10. '[len' → logprob: -9.138923645019531

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.049308184534311295
    2. '[]' → logprob: -3.2993083000183105
    3. ' ' → logprob: -5.1743083000183105
    4. ' list' → logprob: -6.0493083000183105
    5. 'list' → logprob: -6.6743083000183105
    6. 'input' → logprob: -7.5493083000183105
    7. ' input' → logprob: -7.6743083000183105
    8. ' [' → logprob: -7.9243083000183105
    9. '[' → logprob: -8.299307823181152
    10. '[input' → logprob: -8.424307823181152

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001934469910338521
    2. ' for' → logprob: -6.25193452835083
    3. '```' → logprob: -12.376934051513672
    4. '
' → logprob: -14.376934051513672
    5. '\n' → logprob: -14.876934051513672
    6. ' 
' → logprob: -15.626934051513672
    7. 'i' → logprob: -16.001934051513672
    8. '`' → logprob: -16.626934051513672
    9. '``' → logprob: -16.751934051513672
    10. '[' → logprob: -17.001934051513672

Token 9: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19108690321445465
    2. ' i' → logprob: -2.066087007522583
    3. '  ' → logprob: -3.066087007522583
    4. 'i' → logprob: -8.066086769104004
    5. ' N' → logprob: -9.191086769104004
    6. ' ‌' → logprob: -9.816086769104004
    7. '_' → logprob: -10.191086769104004
    8. ' ' → logprob: -10.316086769104004
    9. ' _' → logprob: -10.941086769104004
    10. ' n' → logprob: -11.191086769104004

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07943253964185715
    2. 'in' → logprob: -3.079432487487793
    3. ' ' → logprob: -3.579432487487793
    4. 'n' → logprob: -6.204432487487793
    5. '  ' → logprob: -8.454432487487793
    6. '_' → logprob: -9.454432487487793
    7. ' i' → logprob: -9.579432487487793
    8. 'i' → logprob: -11.079432487487793
    9. ' n' → logprob: -11.079432487487793
    10. ',' → logprob: -11.579432487487793

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01605818420648575
    2. 'range' → logprob: -4.141057968139648
    3. ' ' → logprob: -10.891057968139648
    4. ' in' → logprob: -12.516057968139648
    5. '	range' → logprob: -14.391057968139648
    6. ' xrange' → logprob: -15.016057968139648
    7. ')' → logprob: -16.01605796813965
    8. '(range' → logprob: -16.01605796813965
    9. '```' → logprob: -16.14105796813965
    10. 'in' → logprob: -16.39105796813965

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014820091892033815
    2. ' (' → logprob: -6.626482009887695
    3. '(N' → logprob: -9.626482009887695
    4. '(len' → logprob: -10.126482009887695
    5. '(
' → logprob: -10.626482009887695
    6. '(range' → logprob: -11.751482009887695
    7. '(n' → logprob: -12.001482009887695
    8. ' ' → logprob: -12.751482009887695
    9. '```' → logprob: -13.126482009887695
    10. '(j' → logprob: -13.501482009887695

Token 13: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003192578151356429
    2. ' N' → logprob: -8.500319480895996
    3. '1' → logprob: -9.750319480895996
    4. '0' → logprob: -9.875319480895996
    5. '2' → logprob: -12.750319480895996
    6. 'n' → logprob: -14.000319480895996
    7. 'range' → logprob: -14.375319480895996
    8. ' ' → logprob: -14.625319480895996
    9. ')' → logprob: -15.000319480895996
    10. '10' → logprob: -15.250319480895996

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015812820056453347
    2. ' ,' → logprob: -6.626581192016602
    3. ',N' → logprob: -8.376581192016602
    4. ',n' → logprob: -11.001581192016602
    5. ',j' → logprob: -12.626581192016602
    6. ' ' → logprob: -13.626581192016602
    7. '(' → logprob: -14.251581192016602
    8. ')' → logprob: -14.501581192016602
    9. ',len' → logprob: -14.501581192016602
    10. ',num' → logprob: -14.751581192016602

Token 15: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008615042082965374
    2. ' N' → logprob: -4.758615016937256
    3. 'n' → logprob: -15.383615493774414
    4. ')' → logprob: -16.383615493774414
    5. '10' → logprob: -16.383615493774414
    6. ' ' → logprob: -17.008615493774414
    7. '20' → logprob: -18.133615493774414
    8. '2' → logprob: -18.383615493774414
    9. ',' → logprob: -18.383615493774414
    10. '	N' → logprob: -19.133615493774414

Token 16: '10' (ID: 702)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014025058771949261
    2. ' N' → logprob: -8.875140190124512
    3. '10' → logprob: -16.375141143798828
    4. 'n' → logprob: -16.500141143798828
    5. ')' → logprob: -17.250141143798828
    6. ' ' → logprob: -17.750141143798828
    7. '1' → logprob: -18.125141143798828
    8. '100' → logprob: -18.375141143798828
    9. '2' → logprob: -18.750141143798828
    10. '(N' → logprob: -18.875141143798828

Token 17: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011566802859306335
    2. ')' → logprob: -4.511566638946533
    3. '+' → logprob: -7.761566638946533
    4. ':' → logprob: -10.011567115783691
    5. '**' → logprob: -10.636567115783691
    6. '):
' → logprob: -11.761567115783691
    7. ' ):' → logprob: -12.011567115783691
    8. ',' → logprob: -12.386567115783691
    9. ')):' → logprob: -13.511567115783691
    10. ' ' → logprob: -14.511567115783691

Token 18: ' seq' (ID: 26775)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5803855657577515
    2. '   ' → logprob: -1.5803855657577515
    3. '    ' → logprob: -1.5803855657577515
    4. '    
' → logprob: -5.080385684967041
    5. ' 
' → logprob: -5.205385684967041
    6. ':' → logprob: -5.955385684967041
    7. '     
' → logprob: -5.955385684967041
    8. '\' → logprob: -6.205385684967041
    9. '  ' → logprob: -6.580385684967041
    10. '[' → logprob: -6.955385684967041

Token 19: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5767430663108826
    2. '.' → logprob: -0.8267430663108826
    3. '.extend' → logprob: -7.451743125915527
    4. '.app' → logprob: -9.576743125915527
    5. ' .' → logprob: -9.951743125915527
    6. '.ap' → logprob: -10.451743125915527
    7. 'append' → logprob: -10.451743125915527
    8. '.a' → logprob: -11.701743125915527
    9. '.e' → logprob: -12.326743125915527
    10. '.add' → logprob: -12.576743125915527

Token 20: '(j' (ID: 4997)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1551767736673355
    2. '(j' → logprob: -2.155176877975464
    3. '((' → logprob: -4.405176639556885
    4. '(seq' → logprob: -5.030176639556885
    5. '(str' → logprob: -6.405176639556885
    6. '(int' → logprob: -6.405176639556885
    7. '([' → logprob: -6.530176639556885
    8. '(lambda' → logprob: -6.530176639556885
    9. '(range' → logprob: -6.780176639556885
    10. '(chr' → logprob: -7.530176639556885

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005803157109767199
    2. '))' → logprob: -7.500580310821533
    3. '+' → logprob: -10.750580787658691
    4. ')
' → logprob: -13.625580787658691
    5. ')))' → logprob: -14.125580787658691
    6. '*' → logprob: -14.250580787658691
    7. ' )' → logprob: -14.375580787658691
    8. '**' → logprob: -14.375580787658691
    9. '`)' → logprob: -14.500580787658691
    10. '+)' → logprob: -15.125580787658691

Token 22: 'i' (ID: 72)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8682608604431152
    2. '[' → logprob: -2.1182608604431152
    3. 'for' → logprob: -2.3682608604431152
    4. '*' → logprob: -2.4932608604431152
    5. ')' → logprob: -2.4932608604431152
    6. '
' → logprob: -3.3682608604431152
    7. '<|end|>' → logprob: -3.7432608604431152
    8. ' ' → logprob: -3.7432608604431152
    9. '#' → logprob: -4.118260860443115
    10. '\n' → logprob: -4.368260860443115

Token 23: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4982762634754181
    2. '+' → logprob: -1.6232762336730957
    3. 'f' → logprob: -2.2482762336730957
    4. '=' → logprob: -2.9982762336730957
    5. ' =' → logprob: -3.8732762336730957
    6. ' +=' → logprob: -5.623276233673096
    7. ' +' → logprob: -5.873276233673096
    8. 'nt' → logprob: -5.998276233673096
    9. '++' → logprob: -6.248276233673096
    10. ' n' → logprob: -6.248276233673096

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29548922181129456
    2. '0' → logprob: -1.5454891920089722
    3. '1' → logprob: -3.1704893112182617
    4. ' N' → logprob: -8.295489311218262
    5. '10' → logprob: -8.670489311218262
    6. 'N' → logprob: -9.295489311218262
    7. '2' → logprob: -9.920489311218262
    8. ' seq' → logprob: -10.920489311218262
    9. '9' → logprob: -11.295489311218262
    10. ' len' → logprob: -11.545489311218262

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32203906774520874
    2. '1' → logprob: -1.3220391273498535
    3. '2' → logprob: -5.9470391273498535
    4. ' ' → logprob: -5.9470391273498535
    5. 'N' → logprob: -6.3220391273498535
    6. '10' → logprob: -6.9470391273498535
    7. '9' → logprob: -8.447038650512695
    8. 'len' → logprob: -8.697038650512695
    9. 'int' → logprob: -8.947038650512695
    10. 'seq' → logprob: -9.322038650512695

Token 26: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5344746112823486
    2. ' while' → logprob: -1.1594746112823486
    3. '+' → logprob: -3.1594746112823486
    4. ' ' → logprob: -3.7844746112823486
    5. '
' → logprob: -3.9094746112823486
    6. '<|end|>' → logprob: -5.4094743728637695
    7. ',' → logprob: -5.6594743728637695
    8. ' 
' → logprob: -6.7844743728637695
    9. 'i' → logprob: -7.2844743728637695
    10. 'While' → logprob: -7.5344743728637695

Token 27: 'found' (ID: 26334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2206210047006607
    2. ' while' → logprob: -1.7206209897994995
    3. ' ' → logprob: -4.970621109008789
    4. '<|end|>' → logprob: -5.845621109008789
    5. 'w' → logprob: -5.970621109008789
    6. '
' → logprob: -6.470621109008789
    7. '+' → logprob: -6.970621109008789
    8. ',' → logprob: -7.470621109008789
    9. '```' → logprob: -7.470621109008789
    10. ' 
' → logprob: -7.845621109008789

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6134887933731079
    2. '=' → logprob: -1.238488793373108
    3. ' ' → logprob: -1.988488793373108
    4. '_' → logprob: -4.113488674163818
    5. ':' → logprob: -5.113488674163818
    6. ' ==' → logprob: -5.488488674163818
    7. '[:]' → logprob: -6.488488674163818
    8. ' :' → logprob: -7.363488674163818
    9. ' +=' → logprob: -7.363488674163818
    10. ')' → logprob: -7.863488674163818

Token 29: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.18076905608177185
    2. 'False' → logprob: -1.8057690858840942
    3. ' True' → logprob: -7.055768966674805
    4. 'True' → logprob: -9.680768966674805
    5. ' ' → logprob: -9.930768966674805
    6. '0' → logprob: -10.055768966674805
    7. ' None' → logprob: -12.680768966674805
    8. '(False' → logprob: -13.680768966674805
    9. '=False' → logprob: -13.805768966674805
    10. '[]' → logprob: -14.680768966674805

Token 30: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7788565158843994
    2. '
' → logprob: -1.5288565158843994
    3. ' while' → logprob: -1.6538565158843994
    4. ' 
' → logprob: -2.2788565158843994
    5. ':' → logprob: -4.15385627746582
    6. '  
' → logprob: -5.52885627746582
    7. '<|end|>' → logprob: -5.77885627746582
    8. ':
' → logprob: -6.15385627746582
    9. ' ' → logprob: -6.27885627746582
    10. ',' → logprob: -6.65385627746582

Token 31: 'while' (ID: 7032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26847419142723083
    2. 'while' → logprob: -1.8934742212295532
    3. ' while' → logprob: -2.7684741020202637
    4. '
' → logprob: -5.018474102020264
    5. ':
' → logprob: -5.268474102020264
    6. ' 
' → logprob: -5.893474102020264
    7. ' ' → logprob: -6.393474102020264
    8. ',' → logprob: -6.643474102020264
    9. 'w' → logprob: -6.893474102020264
    10. '\' → logprob: -7.018474102020264

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23313240706920624
    2. ' not' → logprob: -1.6081323623657227
    3. 'i' → logprob: -5.733132362365723
    4. ' ' → logprob: -6.108132362365723
    5. ' True' → logprob: -6.608132362365723
    6. 'not' → logprob: -7.233132362365723
    7. ' found' → logprob: -10.358132362365723
    8. 'True' → logprob: -10.358132362365723
    9. ' (' → logprob: -10.608132362365723
    10. '(i' → logprob: -10.983132362365723

Token 33: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006934166885912418
    2. '<' → logprob: -5.00693416595459
    3. ' <=' → logprob: -8.88193416595459
    4. ' ' → logprob: -9.50693416595459
    5. '<len' → logprob: -13.00693416595459
    6. '<=' → logprob: -13.50693416595459
    7. ' <
' → logprob: -14.38193416595459
    8. '<size' → logprob: -15.25693416595459
    9. '<n' → logprob: -15.75693416595459
    10. '[' → logprob: -16.006935119628906

Token 34: ' len' (ID: 4631)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4990142583847046
    2. 'N' → logprob: -0.9990142583847046
    3. ' len' → logprob: -4.374014377593994
    4. 'len' → logprob: -5.124014377593994
    5. ' ' → logprob: -5.249014377593994
    6. '10' → logprob: -7.499014377593994
    7. '9' → logprob: -8.749013900756836
    8. '100' → logprob: -10.249013900756836
    9. '20' → logprob: -11.124013900756836
    10. '  ' → logprob: -11.874013900756836

Token 35: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00318353995680809
    2. '(' → logprob: -5.753183364868164
    3. '(sequence' → logprob: -12.753183364868164
    4. '(se' → logprob: -13.628183364868164
    5. '(s' → logprob: -14.253183364868164
    6. ' (' → logprob: -15.003183364868164
    7. 'seq' → logprob: -15.003183364868164
    8. '(
' → logprob: -16.503183364868164
    9. '(q' → logprob: -17.003183364868164
    10. ' seq' → logprob: -17.253183364868164

Token 36: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4223311245441437
    2. '):' → logprob: -1.4223310947418213
    3. ' and' → logprob: -2.2973310947418213
    4. ' )' → logprob: -6.9223313331604
    5. 'and' → logprob: -7.0473313331604
    6. '):
' → logprob: -7.9223313331604
    7. ' ):' → logprob: -8.047330856323242
    8. ':' → logprob: -9.422330856323242
    9. '[' → logprob: -9.547330856323242
    10. ' ' → logprob: -9.672330856323242

Token 37: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3861486613750458
    2. '   ' → logprob: -1.8861486911773682
    3. ' :' → logprob: -2.761148691177368
    4. ' ' → logprob: -3.136148691177368
    5. ' if' → logprob: -3.136148691177368
    6. ' :
' → logprob: -5.511148452758789
    7. '    ' → logprob: -5.511148452758789
    8. ' and' → logprob: -5.761148452758789
    9. ':
' → logprob: -5.886148452758789
    10. 'if' → logprob: -6.136148452758789

Token 38: ' el' (ID: 650)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39939919114112854
    2. '   ' → logprob: -1.5243991613388062
    3. 'if' → logprob: -3.1493992805480957
    4. '    ' → logprob: -3.2743992805480957
    5. ' ' → logprob: -3.7743992805480957
    6. ':' → logprob: -6.399399280548096
    7. ' :' → logprob: -6.899399280548096
    8. ' s' → logprob: -7.274399280548096
    9. '  ' → logprob: -7.899399280548096
    10. '     
' → logprob: -8.024398803710938

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5547329783439636
    2. ' =' → logprob: -1.6797330379486084
    3. 'if' → logprob: -2.3047330379486084
    4. 'm' → logprob: -2.8047330379486084
    5. 'ement' → logprob: -4.054732799530029
    6. ' ' → logprob: -4.304732799530029
    7. 'ment' → logprob: -4.554732799530029
    8. '==' → logprob: -4.929732799530029
    9. ' ==' → logprob: -5.179732799530029
    10. 'mnt' → logprob: -5.429732799530029

Token 40: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.023302778601646423
    2. 'seq' → logprob: -3.7733027935028076
    3. '(seq' → logprob: -10.023303031921387
    4. ' sequence' → logprob: -12.148303031921387
    5. '_seq' → logprob: -13.398303031921387
    6. ' ' → logprob: -13.648303031921387
    7. ' sequ' → logprob: -13.773303031921387
    8. ' ' → logprob: -13.898303031921387
    9. '.seq' → logprob: -14.148303031921387
    10. 'sequence' → logprob: -15.023303031921387

Token 41: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00033665422233752906
    2. '[' → logprob: -8.000336647033691
    3. ' [' → logprob: -15.000336647033691
    4. '[j' → logprob: -15.125336647033691
    5. '```' → logprob: -15.375336647033691
    6. '\[' → logprob: -15.375336647033691
    7. '[]' → logprob: -17.000337600708008
    8. '[I' → logprob: -17.125337600708008
    9. '   ' → logprob: -18.000337600708008
    10. '[
' → logprob: -18.000337600708008

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006138292141258717
    2. '])' → logprob: -5.256138324737549
    3. ')' → logprob: -7.506138324737549
    4. ']
' → logprob: -8.50613784790039
    5. ' ]' → logprob: -9.13113784790039
    6. ']+' → logprob: -11.13113784790039
    7. ')]' → logprob: -12.00613784790039
    8. '[' → logprob: -12.13113784790039
    9. '[i' → logprob: -12.63113784790039
    10. '+' → logprob: -12.75613784790039

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' not' (ID: 625)
  Prédit: ' el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' el' → logprob: -0.18167921900749207
    2. 'el' → logprob: -1.8066792488098145
    3. ' N' → logprob: -7.3066792488098145
    4. ' i' → logprob: -7.5566792488098145
    5. '(el' → logprob: -8.556678771972656
    6. 'N' → logprob: -8.681678771972656
    7. ' ' → logprob: -9.306678771972656
    8. 'i' → logprob: -9.806678771972656
    9. ' found' → logprob: -10.056678771972656
    10. ' n' → logprob: -10.306678771972656

Token 46: ' N' (ID: 478)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.5344470143318176
    2. ' el' → logprob: -1.4094469547271729
    3. ' ' → logprob: -2.159446954727173
    4. 'found' → logprob: -3.534446954727173
    5. 'el' → logprob: -4.159447193145752
    6. ' (' → logprob: -5.784447193145752
    7. ' i' → logprob: -6.284447193145752
    8. '(found' → logprob: -7.034447193145752
    9. ' isinstance' → logprob: -7.659447193145752
    10. ' f' → logprob: -7.909447193145752

Token 47: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16144339740276337
    2. ' %' → logprob: -1.9114433526992798
    3. '>' → logprob: -7.91144323348999
    4. '==' → logprob: -8.036443710327148
    5. ' ' → logprob: -8.911443710327148
    6. ' ==' → logprob: -9.411443710327148
    7. '%i' → logprob: -9.536443710327148
    8. ')' → logprob: -9.786443710327148
    9. ' >' → logprob: -10.161443710327148
    10. '=' → logprob: -10.536443710327148

Token 48: ' el' (ID: 650)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.008616461418569088
    2. ' el' → logprob: -4.7586164474487305
    3. '	el' → logprob: -13.75861644744873
    4. ' ' → logprob: -14.88361644744873
    5. ' ' → logprob: -15.38361644744873
    6. '(el' → logprob: -16.008617401123047
    7. 'e' → logprob: -16.508617401123047
    8. '2' → logprob: -16.633617401123047
    9. 'ele' → logprob: -17.258617401123047
    10. '_el' → logprob: -17.633617401123047

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01211271807551384
    2. '==' → logprob: -4.762112617492676
    3. ' :' → logprob: -6.137112617492676
    4. ' ==' → logprob: -7.137112617492676
    5. '):' → logprob: -8.137112617492676
    6. ':**' → logprob: -9.262112617492676
    7. ' and' → logprob: -9.887112617492676
    8. '=' → logprob: -10.137112617492676
    9. '>:' → logprob: -11.137112617492676
    10. ':
' → logprob: -11.637112617492676

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15787586569786072
    2. ':' → logprob: -2.0328757762908936
    3. '   ' → logprob: -4.532876014709473
    4. ' :' → logprob: -6.782876014709473
    5. '    ' → logprob: -7.157876014709473
    6. ' ' → logprob: -7.907876014709473
    7. ':
' → logprob: -8.032876014709473
    8. ',' → logprob: -8.282876014709473
    9. '):' → logprob: -8.282876014709473
    10. '        
' → logprob: -8.532876014709473

Token 51: ' q' (ID: 2335)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.6944034695625305
    2. '           ' → logprob: -1.4444034099578857
    3. '       ' → logprob: -2.1944034099578857
    4. '\n' → logprob: -2.8194034099578857
    5. 'found' → logprob: -3.8194034099578857
    6. '\' → logprob: -3.9444034099578857
    7. ' 
' → logprob: -4.194403648376465
    8. '(found' → logprob: -4.944403648376465
    9. ' print' → logprob: -5.569403648376465
    10. 'print' → logprob: -5.694403648376465

Token 52: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.633254885673523
    2. ' =' → logprob: -1.133254885673523
    3. '=' → logprob: -2.6332550048828125
    4. 'uit' → logprob: -3.8832550048828125
    5. 'uer' → logprob: -4.1332550048828125
    6. '       ' → logprob: -4.6332550048828125
    7. 'ual' → logprob: -5.0082550048828125
    8. '   ' → logprob: -5.5082550048828125
    9. 'uir' → logprob: -5.8832550048828125
    10. 'uart' → logprob: -6.2582550048828125

Token 53: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.3869418203830719
    2. 'N' → logprob: -1.1369417905807495
    3. ' ' → logprob: -10.261941909790039
    4. 'n' → logprob: -11.511941909790039
    5. 'int' → logprob: -12.011941909790039
    6. ' ' → logprob: -12.011941909790039
    7. '0' → logprob: -13.511941909790039
    8. ' (' → logprob: -13.636941909790039
    9. '2' → logprob: -13.761941909790039
    10. ' n' → logprob: -13.886941909790039

Token 54: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.013087058439850807
    2. '//' → logprob: -4.388087272644043
    3. ' /' → logprob: -7.888087272644043
    4. '/' → logprob: -9.513087272644043
    5. ' ' → logprob: -9.513087272644043
    6. ' ' → logprob: -10.388087272644043
    7. 'div' → logprob: -11.888087272644043
    8. '%' → logprob: -13.200587272644043
    9. '<|end|>' → logprob: -13.700587272644043
    10. '```' → logprob: -13.763087272644043

Token 55: ' el' (ID: 650)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.002186545403674245
    2. ' el' → logprob: -6.1271867752075195
    3. '	el' → logprob: -13.62718677520752
    4. ' ' → logprob: -16.252185821533203
    5. ' ' → logprob: -16.627185821533203
    6. 'ell' → logprob: -17.627185821533203
    7. '.el' → logprob: -18.127185821533203
    8. 'elp' → logprob: -18.252185821533203
    9. '_el' → logprob: -18.252185821533203
    10. 'elb' → logprob: -18.377185821533203

Token 56: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003908014856278896
    2. ' if' → logprob: -6.253908157348633
    3. 'if' → logprob: -7.253908157348633
    4. '        
' → logprob: -7.628908157348633
    5. '
' → logprob: -9.253908157348633
    6. '           ' → logprob: -9.378908157348633
    7. '   ' → logprob: -9.628908157348633
    8. ',' → logprob: -9.628908157348633
    9. 'print' → logprob: -9.878908157348633
    10. '+' → logprob: -10.003908157348633

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006837221444584429
    2. ' if' → logprob: -8.250683784484863
    3. '        
' → logprob: -8.375683784484863
    4. ',' → logprob: -9.625683784484863
    5. '
' → logprob: -10.125683784484863
    6. '<|end|>' → logprob: -10.500683784484863
    7. 'if' → logprob: -11.125683784484863
    8. '   ' → logprob: -11.875683784484863
    9. '```' → logprob: -12.500683784484863
    10. ' 
' → logprob: -12.625683784484863

Token 58: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2469828873872757
    2. '       ' → logprob: -1.8719829320907593
    3. ' if' → logprob: -3.1219828128814697
    4. 'for' → logprob: -4.746983051300049
    5. 'print' → logprob: -5.121983051300049
    6. 'seq' → logprob: -6.496983051300049
    7. 'found' → logprob: -6.496983051300049
    8. ' for' → logprob: -7.121983051300049
    9. 'while' → logprob: -7.246983051300049
    10. 'break' → logprob: -8.12198257446289

Token 59: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.39182770252227783
    2. 'q' → logprob: -1.1418277025222778
    3. 'seq' → logprob: -6.641827583312988
    4. ' seq' → logprob: -7.016827583312988
    5. ' ' → logprob: -7.391827583312988
    6. ' not' → logprob: -7.641827583312988
    7. '1' → logprob: -7.891827583312988
    8. ' el' → logprob: -7.891827583312988
    9. ' found' → logprob: -8.516827583312988
    10. 'found' → logprob: -8.891827583312988

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034343965351581573
    2. 'in' → logprob: -4.28434419631958
    3. ' <=' → logprob: -5.03434419631958
    4. ' ==' → logprob: -5.53434419631958
    5. '==' → logprob: -5.65934419631958
    6. '<=' → logprob: -6.03434419631958
    7. ' <' → logprob: -7.03434419631958
    8. '>' → logprob: -7.40934419631958
    9. ' >' → logprob: -7.78434419631958
    10. ' >=' → logprob: -7.78434419631958

Token 61: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.01604997180402279
    2. ' seq' → logprob: -4.141049861907959
    3. '(seq' → logprob: -11.391050338745117
    4. 'sequence' → logprob: -13.266050338745117
    5. 'se' → logprob: -13.891050338745117
    6. '   ' → logprob: -14.391050338745117
    7. ' sequence' → logprob: -15.266050338745117
    8. ' ' → logprob: -15.391050338745117
    9. '.seq' → logprob: -15.516050338745117
    10. '_seq' → logprob: -15.766050338745117

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011229841969907284
    2. '):' → logprob: -5.011229991912842
    3. ' and' → logprob: -5.636229991912842
    4. ':
' → logprob: -7.136229991912842
    5. ' :' → logprob: -10.261229515075684
    6. '):
' → logprob: -10.886229515075684
    7. 'and' → logprob: -10.886229515075684
    8. '<|end|>' → logprob: -11.011229515075684
    9. '           ' → logprob: -11.511229515075684
    10. ')' → logprob: -11.511229515075684

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13165657222270966
    2. ':' → logprob: -2.1316566467285156
    3. ':
' → logprob: -5.631656646728516
    4. ' and' → logprob: -7.506656646728516
    5. ',' → logprob: -9.006656646728516
    6. '               ' → logprob: -9.256656646728516
    7. ' :' → logprob: -9.256656646728516
    8. '\n' → logprob: -10.131656646728516
    9. '            
' → logprob: -10.256656646728516
    10. '):' → logprob: -10.756656646728516

Token 64: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09308364987373352
    2. '           ' → logprob: -2.968083620071411
    3. ' found' → logprob: -3.593083620071411
    4. 'found' → logprob: -4.71808385848999
    5. '(found' → logprob: -8.218083381652832
    6. 'print' (adapté à ' print') → logprob: -8.218083381652832
    7. ' break' → logprob: -9.468083381652832
    8. ' print' → logprob: -9.593083381652832
    9. '                
' → logprob: -9.968083381652832
    10. '	found' → logprob: -10.218083381652832

Token 65: '("' (ID: 568)
  Prédit: '(el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -0.40186434984207153
    2. '(' → logprob: -1.4018642902374268
    3. '(q' → logprob: -3.1518642902374268
    4. '(f' → logprob: -3.4018642902374268
    5. '(i' → logprob: -5.526864528656006
    6. '('' → logprob: -6.401864528656006
    7. '(seq' → logprob: -6.901864528656006
    8. '((' → logprob: -7.401864528656006
    9. '("' → logprob: -7.776864528656006
    10. '("("' → logprob: -7.901864528656006

Token 66: 'Yes' (ID: 13022)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.1890604943037033
    2. '",' → logprob: -2.8140604496002197
    3. '{' → logprob: -3.0640604496002197
    4. '(",' → logprob: -4.064060688018799
    5. '{}' → logprob: -4.689060688018799
    6. 'q' → logprob: -5.064060688018799
    7. 'i' → logprob: -5.314060688018799
    8. 'f' → logprob: -5.314060688018799
    9. '(el' → logprob: -5.439060688018799
    10. 'Yes' → logprob: -5.939060688018799

Token 67: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14335647225379944
    2. '")
' → logprob: -2.0183565616607666
    3. '")
' → logprob: -7.6433563232421875
    4. '!")' → logprob: -10.018356323242188
    5. '");' → logprob: -10.268356323242188
    6. '"' → logprob: -10.268356323242188
    7. '",' → logprob: -10.518356323242188
    8. ' ")' → logprob: -10.768356323242188
    9. ')' → logprob: -11.518356323242188
    10. '!")
' → logprob: -12.018356323242188

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.666993507067673e-05
    2. '               ' → logprob: -11.500036239624023
    3. '
' → logprob: -11.750036239624023
    4. '<|end|>' → logprob: -12.000036239624023
    5. '            
' → logprob: -12.500036239624023
    6. ',' → logprob: -12.875036239624023
    7. '       ' → logprob: -13.500036239624023
    8. '```' → logprob: -13.750036239624023
    9. ')' → logprob: -14.000036239624023
    10. '\n' → logprob: -15.000036239624023

Token 69: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5254992246627808
    2. 'found' (adapté à ' found') → logprob: -1.0254992246627808
    3. ' found' → logprob: -3.0254993438720703
    4. '
' → logprob: -6.90049934387207
    5. '(found' → logprob: -7.90049934387207
    6. '            
' → logprob: -10.02549934387207
    7. '	found' → logprob: -10.27549934387207
    8. '```' → logprob: -10.40049934387207
    9. ')' → logprob: -10.65049934387207
    10. '               ' → logprob: -10.65049934387207

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6940220594406128
    2. ' =' → logprob: -0.6940220594406128
    3. '=True' → logprob: -7.069022178649902
    4. '=False' → logprob: -11.194022178649902
    5. ' ' → logprob: -12.194022178649902
    6. '   ' → logprob: -14.194022178649902
    7. '=true' → logprob: -14.194022178649902
    8. '<|end|>' → logprob: -14.569022178649902
    9. ' =
' → logprob: -14.944022178649902
    10. '=
' → logprob: -15.194022178649902

Token 71: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01815006136894226
    2. 'True' → logprob: -4.0181498527526855
    3. '=True' → logprob: -16.018150329589844
    4. '(True' → logprob: -16.393150329589844
    5. ' Tru' → logprob: -18.268150329589844
    6. ' true' → logprob: -20.768150329589844
    7. ' ' → logprob: -20.768150329589844
    8. ' Tr' → logprob: -21.518150329589844
    9. '.True' → logprob: -21.518150329589844
    10. '   ' → logprob: -22.268150329589844

Token 72: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.019237768370658e-05
    2. '
' → logprob: -10.500090599060059
    3. '            
' → logprob: -10.625090599060059
    4. '               ' → logprob: -11.375090599060059
    5. '<|end|>' → logprob: -11.875090599060059
    6. '       ' → logprob: -12.125090599060059
    7. ' 
' → logprob: -12.750090599060059
    8. '    
' → logprob: -12.875090599060059
    9. '\n' → logprob: -13.250090599060059
    10. '  
' → logprob: -13.250090599060059

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010354319238103926
    2. '       ' → logprob: -10.250103950500488
    3. '               ' → logprob: -10.500103950500488
    4. '            
' → logprob: -10.625103950500488
    5. '
' → logprob: -13.125103950500488
    6. '   ' → logprob: -13.250103950500488
    7. '		' → logprob: -13.250103950500488
    8. '    
' → logprob: -13.500103950500488
    9. '          ' → logprob: -13.500103950500488
    10. '        
' → logprob: -13.750103950500488

Token 74: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3650315999984741
    2. 'break' (adapté à ' break') → logprob: -1.3650315999984741
    3. ' break' → logprob: -2.9900317192077637
    4. '       ' → logprob: -9.615031242370605
    5. '   ' → logprob: -10.365031242370605
    6. '	break' → logprob: -10.615031242370605
    7. '
' → logprob: -11.240031242370605
    8. '```' → logprob: -11.365031242370605
    9. '            
' → logprob: -12.115031242370605
    10. '               ' → logprob: -12.115031242370605

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012251086300238967
    2. 'i' → logprob: -7.251224994659424
    3. ' i' → logprob: -7.876224994659424
    4. '       ' → logprob: -10.001225471496582
    5. '    
' → logprob: -10.126225471496582
    6. '  ' → logprob: -10.876225471496582
    7. ' ' → logprob: -11.626225471496582
    8. '  
' → logprob: -11.626225471496582
    9. '   
' → logprob: -12.126225471496582
    10. '
' → logprob: -13.001225471496582

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006697250530123711
    2. 'i' → logprob: -5.256697177886963
    3. '
' → logprob: -6.756697177886963
    4. '    
' → logprob: -8.506697654724121
    5. ' i' → logprob: -9.381697654724121
    6. '  
' → logprob: -12.631697654724121
    7. '	i' → logprob: -12.756697654724121
    8. ' 
' → logprob: -13.256697654724121
    9. '        
' → logprob: -13.881697654724121
    10. '       ' → logprob: -13.881697654724121

Token 77: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4777994453907013
    2. 'i' (adapté à ' i') → logprob: -0.9777994155883789
    3. ' i' → logprob: -5.602799415588379
    4. '	i' → logprob: -11.102799415588379
    5. ' ' → logprob: -11.852799415588379
    6. '    
' → logprob: -12.852799415588379
    7. '```' → logprob: -14.102799415588379
    8. '  ' → logprob: -14.227799415588379
    9. 'else' → logprob: -14.227799415588379
    10. '       ' → logprob: -15.102799415588379

Token 78: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06241139397025108
    2. '+' → logprob: -3.062411308288574
    3. ' +=' → logprob: -4.312411308288574
    4. '=' → logprob: -8.187411308288574
    5. '++' → logprob: -10.062411308288574
    6. '+++' → logprob: -12.812411308288574
    7. '+='' → logprob: -13.312411308288574
    8. '+="' → logprob: -13.937411308288574
    9. '<|end|>' → logprob: -14.937411308288574
    10. ' +' → logprob: -15.187411308288574

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -18.125625610351562
    4. '   ' → logprob: -18.375625610351562
    5. '+' → logprob: -19.125625610351562
    6. '  ' → logprob: -19.563125610351562
    7. ' ' → logprob: -20.000625610351562
    8. '１' → logprob: -20.563125610351562
    9. '0' → logprob: -21.063125610351562
    10. '۱' → logprob: -21.250625610351562

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.687503814697266
    5. '+' → logprob: -19.375003814697266
    6. '  ' → logprob: -19.687503814697266
    7. '2' → logprob: -19.750003814697266
    8. '１' → logprob: -19.812503814697266
    9. '۱' → logprob: -20.125003814697266
    10. '0' → logprob: -20.687503814697266

Token 81: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007457832107320428
    2. 'else' → logprob: -7.50074577331543
    3. '
' → logprob: -9.00074577331543
    4. '```' → logprob: -10.12574577331543
    5. 'If' → logprob: -11.50074577331543
    6. ' if' → logprob: -11.87574577331543
    7. 'print' → logprob: -12.12574577331543
    8. '  
' → logprob: -13.50074577331543
    9. '``' → logprob: -13.75074577331543
    10. 'i' → logprob: -14.12574577331543

Token 82: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012201975914649665
    2. 'else' → logprob: -9.2501220703125
    3. '```' → logprob: -10.7501220703125
    4. 'print' → logprob: -13.1251220703125
    5. ' if' → logprob: -13.7501220703125
    6. 'If' → logprob: -14.0001220703125
    7. '``' → logprob: -15.7501220703125
    8. '
' → logprob: -16.2501220703125
    9. '  
' → logprob: -17.8751220703125
    10. ';if' → logprob: -17.8751220703125

Token 83: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0012382064014673233
    2. 'not' → logprob: -7.1262383460998535
    3. ' found' → logprob: -7.7512383460998535
    4. 'found' → logprob: -13.251237869262695
    5. ' ' → logprob: -13.751237869262695
    6. ' ' → logprob: -14.501237869262695
    7. '	not' → logprob: -16.501237869262695
    8. ' no' → logprob: -16.876237869262695
    9. '(not' → logprob: -18.126237869262695
    10. '   ' → logprob: -19.251237869262695

Token 84: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.3868784010410309
    2. 'found' → logprob: -1.1368783712387085
    3. '	found' → logprob: -13.01187801361084
    4. ' ' → logprob: -13.13687801361084
    5. '(found' → logprob: -13.51187801361084
    6. ' ' → logprob: -13.51187801361084
    7. 'Found' → logprob: -15.63687801361084
    8. '_found' → logprob: -16.011878967285156
    9. '   ' → logprob: -16.386878967285156
    10. '  ' → logprob: -17.136878967285156

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011705794604495168
    2. ':
' → logprob: -6.751170635223389
    3. ' :' → logprob: -15.50117015838623
    4. ':

' → logprob: -16.251171112060547
    5. ':
' → logprob: -16.501171112060547
    6. 'print' → logprob: -18.626171112060547
    7. ' :
' → logprob: -18.751171112060547
    8. '   ' → logprob: -19.126171112060547
    9. ':**' → logprob: -19.376171112060547
    10. ':</' → logprob: -19.501171112060547

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38863420486450195
    2. ' print' → logprob: -1.138634204864502
    3. 'print' → logprob: -6.388634204864502
    4. '	print' → logprob: -9.638633728027344
    5. '       ' → logprob: -11.763633728027344
    6. '```' → logprob: -13.013633728027344
    7. '    ' → logprob: -13.763633728027344
    8. '.print' → logprob: -14.013633728027344
    9. '    
' → logprob: -14.138633728027344
    10. ' prints' → logprob: -14.263633728027344

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06203277409076691
    2. ' print' → logprob: -2.812032699584961
    3. '   ' → logprob: -9.687032699584961
    4. '	print' → logprob: -13.062032699584961
    5. '```' → logprob: -14.187032699584961
    6. '       ' → logprob: -16.93703269958496
    7. '.print' → logprob: -17.06203269958496
    8. '    ' → logprob: -17.31203269958496
    9. ' ' → logprob: -18.31203269958496
    10. '(print' → logprob: -18.81203269958496

Token 88: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.20208753645420074
    2. '(' → logprob: -1.7020875215530396
    3. '()' → logprob: -8.07708740234375
    4. '("")' → logprob: -8.45208740234375
    5. '("("' → logprob: -8.95208740234375
    6. '('' → logprob: -11.57708740234375
    7. '("(' → logprob: -12.20208740234375
    8. '("""' → logprob: -13.70208740234375
    9. '(""' → logprob: -13.82708740234375
    10. '(None' → logprob: -14.20208740234375

Token 89: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00016229959146585315
    2. '"No' → logprob: -8.750162124633789
    3. 'NO' → logprob: -13.250162124633789
    4. '"' → logprob: -13.375162124633789
    5. ' No' → logprob: -14.750162124633789
    6. 'Yes' → logprob: -16.50016212463379
    7. '“No' → logprob: -16.87516212463379
    8. '>No' → logprob: -17.37516212463379
    9. '")' → logprob: -17.75016212463379
    10. '_No' → logprob: -18.00016212463379

Token 90: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005277725285850465
    2. ')' → logprob: -7.750527858734131
    3. ')")' → logprob: -9.250527381896973
    4. '")
' → logprob: -14.250527381896973
    5. '}")' → logprob: -15.250527381896973
    6. '')' → logprob: -16.62552833557129
    7. '"' → logprob: -17.75052833557129
    8. '!")' → logprob: -17.87552833557129
    9. '"))' → logprob: -18.00052833557129
    10. ')"' → logprob: -18.12552833557129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 39.77%
Précision adaptée (1ère position): 42.05%
Précision (top 10): 84.09%
================================================================================
