================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_integer = int(input())
user_input_string = input()
threshold_value = 3200
output_string_if_above_threshold = user_input_string
output_string_if_below_threshold = 'red'
if user_input_integer >= threshold_value:
    print(output_string_if_above_threshold)
else:
    print(output_string_if_below_threshold)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_integer' (ID: 82911)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8181504607200623
    2. '=' → logprob: -1.318150520324707
    3. ')' → logprob: -2.568150520324707
    4. '[' → logprob: -2.568150520324707
    5. ' =' → logprob: -2.818150520324707
    6. '+' → logprob: -3.693150520324707
    7. '.' → logprob: -4.318150520324707
    8. '```' → logprob: -4.318150520324707
    9. ' ' → logprob: -4.568150520324707
    10. '(' → logprob: -4.818150520324707

Token 4: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7390319108963013
    2. ' ' → logprob: -0.8640319108963013
    3. ' input' → logprob: -2.9890317916870117
    4. 'int' → logprob: -3.7390317916870117
    5. 'input' → logprob: -3.9890317916870117
    6. '0' → logprob: -4.864031791687012
    7. ' user' → logprob: -8.864031791687012
    8. '1' → logprob: -8.989031791687012
    9. ' "' → logprob: -9.739031791687012
    10. 'user' → logprob: -10.489031791687012

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0061264485120773315
    2. '(user' → logprob: -5.256126403808594
    3. 'user' → logprob: -7.381126403808594
    4. '```' → logprob: -9.756126403808594
    5. '`' → logprob: -10.131126403808594
    6. 'User' → logprob: -10.506126403808594
    7. '("("' → logprob: -10.756126403808594
    8. '('' → logprob: -10.756126403808594
    9. '(User' → logprob: -11.131126403808594
    10. ''' → logprob: -11.131126403808594

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024973485618829727
    2. ')' → logprob: -4.274973392486572
    3. '()' → logprob: -4.774973392486572
    4. '())' → logprob: -6.899973392486572
    5. '('' → logprob: -8.14997386932373
    6. '(()' → logprob: -8.39997386932373
    7. '(user' → logprob: -8.77497386932373
    8. '("("' → logprob: -9.27497386932373
    9. '(
' → logprob: -9.39997386932373
    10. '(""))' → logprob: -9.77497386932373

Token 7: 'user' (ID: 1428)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05491997301578522
    2. '%' → logprob: -3.179919958114624
    3. 'if' → logprob: -5.054920196533203
    4. '*' → logprob: -6.054920196533203
    5. ' if' → logprob: -7.304920196533203
    6. '=' → logprob: -7.679920196533203
    7. '+
' → logprob: -7.679920196533203
    8. ' ' → logprob: -8.304920196533203
    9. '_' → logprob: -8.429920196533203
    10. ')' → logprob: -8.679920196533203

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48452168703079224
    2. '_input' → logprob: -0.9845216870307922
    3. '_put' → logprob: -4.984521865844727
    4. '_p' → logprob: -7.109521865844727
    5. '_output' → logprob: -7.234521865844727
    6. ' _' → logprob: -7.984521865844727
    7. '_s' → logprob: -8.359521865844727
    8. '_f' → logprob: -8.484521865844727
    9. '._' → logprob: -8.484521865844727
    10. '_.' → logprob: -8.859521865844727

Token 9: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2817867398262024
    2. '_integer' → logprob: -1.4067866802215576
    3. ')' → logprob: -8.781786918640137
    4. '_)' → logprob: -9.031786918640137
    5. ' _' → logprob: -9.406786918640137
    6. '_Integer' → logprob: -10.031786918640137
    7. '```' → logprob: -10.656786918640137
    8. '_variable' → logprob: -10.906786918640137
    9. '_INTEGER' → logprob: -10.906786918640137
    10. '_int' → logprob: -10.906786918640137

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7743009328842163
    2. ')' → logprob: -1.7743009328842163
    3. '+' → logprob: -1.7743009328842163
    4. '[' → logprob: -2.274301052093506
    5. '.' → logprob: -2.524301052093506
    6. '=' → logprob: -5.274301052093506
    7. '```' → logprob: -5.774301052093506
    8. ' +' → logprob: -6.649301052093506
    9. '[:]' → logprob: -7.024301052093506
    10. '[]' → logprob: -7.524301052093506

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232495665550232
    2. 'input' → logprob: -0.8982495665550232
    3. 'str' → logprob: -10.023249626159668
    4. ' str' → logprob: -10.273249626159668
    5. '=input' → logprob: -11.273249626159668
    6. ' ' → logprob: -11.648249626159668
    7. '(input' → logprob: -11.648249626159668
    8. '"' → logprob: -12.648249626159668
    9. '""' → logprob: -13.023249626159668
    10. ''' → logprob: -13.148249626159668

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28335100412368774
    2. '()' → logprob: -1.408350944519043
    3. ' (' → logprob: -7.658350944519043
    4. ')' → logprob: -7.783350944519043
    5. '```' → logprob: -7.783350944519043
    6. ' ' → logprob: -9.033350944519043
    7. '`()' → logprob: -9.158350944519043
    8. '`' → logprob: -9.283350944519043
    9. '(
' → logprob: -9.533350944519043
    10. '('' → logprob: -9.533350944519043

Token 13: 'threshold' (ID: 67677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04566137492656708
    2. 'result' → logprob: -3.920661449432373
    3. 'print' → logprob: -4.170661449432373
    4. 'for' → logprob: -5.170661449432373
    5. 'user' → logprob: -7.295661449432373
    6. 'sum' → logprob: -7.295661449432373
    7. 'try' → logprob: -7.420661449432373
    8. 'n' → logprob: -8.045660972595215
    9. 'output' → logprob: -8.920660972595215
    10. '#' → logprob: -8.920660972595215

Token 14: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11512134969234467
    2. ' =' → logprob: -3.240121364593506
    3. '_space' → logprob: -3.990121364593506
    4. '=' → logprob: -4.365121364593506
    5. ' _' → logprob: -4.490121364593506
    6. '>' → logprob: -4.865121364593506
    7. ' ' → logprob: -5.240121364593506
    8. ')' → logprob: -5.490121364593506
    9. ' >' → logprob: -5.865121364593506
    10. ' <=' → logprob: -6.240121364593506

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46324458718299866
    2. ' =' → logprob: -1.8382445573806763
    3. ' _' → logprob: -2.963244676589966
    4. ' >=' → logprob: -2.963244676589966
    5. ' >' → logprob: -3.338244676589966
    6. ' ' → logprob: -3.963244676589966
    7. ' <=' → logprob: -4.338244438171387
    8. '<|end|>' → logprob: -4.463244438171387
    9. ')' → logprob: -4.588244438171387
    10. '>' → logprob: -5.088244438171387

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8357018828392029
    2. '10' → logprob: -0.9607018828392029
    3. '100' → logprob: -1.7107019424438477
    4. '50' → logprob: -6.460701942443848
    5. '0' → logprob: -6.835701942443848
    6. '5' → logprob: -8.460701942443848
    7. '20' → logprob: -9.085701942443848
    8. '1' → logprob: -10.585701942443848
    9. 'int' → logprob: -10.585701942443848
    10. '42' → logprob: -11.960701942443848

Token 17: '320' (ID: 15415)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23714403808116913
    2. '100' → logprob: -1.6121439933776855
    3. '0' → logprob: -5.2371439933776855
    4. '50' → logprob: -5.8621439933776855
    5. ' ' → logprob: -6.2371439933776855
    6. 'user' → logprob: -6.8621439933776855
    7. '5' → logprob: -8.362144470214844
    8. '1' → logprob: -9.362144470214844
    9. 'int' → logprob: -9.362144470214844
    10. '20' → logprob: -10.112144470214844

Token 18: '0' (ID: 15)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5220630764961243
    2. ' if' → logprob: -1.2720630168914795
    3. '
' → logprob: -3.2720630168914795
    4. ':' → logprob: -3.5220630168914795
    5. '\n' → logprob: -4.647063255310059
    6. '>' → logprob: -5.022063255310059
    7. '\' → logprob: -5.022063255310059
    8. '+' → logprob: -5.022063255310059
    9. '+
' → logprob: -5.272063255310059
    10. '```' → logprob: -5.522063255310059

Token 19: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0573166087269783
    2. '
' → logprob: -2.932316541671753
    3. ' if' → logprob: -6.182316780090332
    4. '\n' → logprob: -8.182316780090332
    5. ' 
' → logprob: -10.432316780090332
    6. '```' → logprob: -10.932316780090332
    7. 'for' → logprob: -11.807316780090332
    8. '  
' → logprob: -11.932316780090332
    9. 'i' → logprob: -12.307316780090332
    10. 'print' → logprob: -12.557316780090332

Token 20: 'output' (ID: 6130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00031139038037508726
    2. '
' → logprob: -8.500311851501465
    3. ' if' → logprob: -9.875311851501465
    4. '\n' → logprob: -10.500311851501465
    5. 'i' → logprob: -11.500311851501465
    6. 'for' → logprob: -11.625311851501465
    7. '```' → logprob: -12.375311851501465
    8. '`
' → logprob: -13.875311851501465
    9. '\' → logprob: -14.250311851501465
    10. '' → logprob: -14.625311851501465

Token 21: '_string' (ID: 8609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12355350703001022
    2. ' =' → logprob: -2.248553514480591
    3. '_' → logprob: -4.623553276062012
    4. '_value' → logprob: -8.373553276062012
    5. '```' → logprob: -8.498553276062012
    6. 'if' → logprob: -9.498553276062012
    7. '_if' → logprob: -10.123553276062012
    8. 's' → logprob: -10.248553276062012
    9. ' ' → logprob: -10.748553276062012
    10. ':' → logprob: -10.873553276062012

Token 22: '_if' (ID: 25821)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24629542231559753
    2. '=' → logprob: -1.62129545211792
    3. '_' → logprob: -3.99629545211792
    4. ' ' → logprob: -6.37129545211792
    5. ' +=' → logprob: -7.87129545211792
    6. ' _' → logprob: -10.246294975280762
    7. ')' → logprob: -10.746294975280762
    8. '_space' → logprob: -10.746294975280762
    9. '>' → logprob: -11.121294975280762
    10. ',' → logprob: -11.621294975280762

Token 23: '_ab' (ID: 53632)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.1286139041185379
    2. 'user' → logprob: -2.1286139488220215
    3. '_user' → logprob: -6.5036139488220215
    4. '_' → logprob: -9.253613471984863
    5. '(user' → logprob: -10.378613471984863
    6. ' ' → logprob: -10.878613471984863
    7. '"user' → logprob: -11.253613471984863
    8. '	user' → logprob: -12.503613471984863
    9. ''user' → logprob: -12.503613471984863
    10. 'threshold' → logprob: -13.003613471984863

Token 24: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.006987803149968386
    2. 're' → logprob: -5.756987571716309
    3. 'ov' → logprob: -6.756987571716309
    4. 'r' → logprob: -8.131987571716309
    5. 've' → logprob: -8.131987571716309
    6. 'sent' → logprob: -8.131987571716309
    7. 's' → logprob: -8.256987571716309
    8. '_user' → logprob: -8.631987571716309
    9. 'user' → logprob: -8.756987571716309
    10. '>' → logprob: -8.881987571716309

Token 25: '_threshold' (ID: 51747)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08332112431526184
    2. '=' → logprob: -2.5833210945129395
    3. '_' → logprob: -5.4583210945129395
    4. ' ' → logprob: -10.458321571350098
    5. '=_' → logprob: -10.958321571350098
    6. '_=' → logprob: -11.208321571350098
    7. '=""' → logprob: -11.333321571350098
    8. '_user' → logprob: -11.458321571350098
    9. '="_' → logprob: -11.583321571350098
    10. '="' → logprob: -11.833321571350098

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08897501975297928
    2. '=' → logprob: -2.463974952697754
    3. '_' → logprob: -10.963974952697754
    4. ' ' → logprob: -11.588974952697754
    5. ',' → logprob: -12.713974952697754
    6. ')' → logprob: -13.588974952697754
    7. ' =
' → logprob: -14.463974952697754
    8. 'if' → logprob: -14.588974952697754
    9. ' ==' → logprob: -14.713974952697754
    10. '>' → logprob: -14.713974952697754

Token 27: ' user' (ID: 1825)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2668071985244751
    2. ' "' → logprob: -1.766807198524475
    3. ''' → logprob: -3.2668070793151855
    4. '""' → logprob: -4.5168070793151855
    5. '"user' → logprob: -5.1418070793151855
    6. ' ""' → logprob: -5.6418070793151855
    7. ' '' → logprob: -6.2668070793151855
    8. ' ' → logprob: -7.3918070793151855
    9. '''' → logprob: -7.5168070793151855
    10. '"""' → logprob: -8.516807556152344

Token 28: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002453065011650324
    2. '_' → logprob: -6.502452850341797
    3. '_output' → logprob: -7.127452850341797
    4. '_user' → logprob: -9.877452850341797
    5. '_string' → logprob: -10.377452850341797
    6. '_s' → logprob: -10.877452850341797
    7. '_value' → logprob: -11.752452850341797
    8. ' _' → logprob: -12.002452850341797
    9. '_in' → logprob: -12.377452850341797
    10. '_name' → logprob: -12.377452850341797

Token 29: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.09796750545501709
    2. '_' → logprob: -2.4729676246643066
    3. '_integer' → logprob: -4.722967624664307
    4. '_value' → logprob: -11.347967147827148
    5. '_variable' → logprob: -11.347967147827148
    6. ' _' → logprob: -11.472967147827148
    7. 'string' → logprob: -11.972967147827148
    8. '```' → logprob: -12.097967147827148
    9. '_strings' → logprob: -12.097967147827148
    10. '_String' → logprob: -12.222967147827148

Token 30: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.728992223739624
    2. ' if' → logprob: -1.353992223739624
    3. '<|end|>' → logprob: -1.478992223739624
    4. '>' → logprob: -4.728992462158203
    5. '.' → logprob: -5.478992462158203
    6. '<|end|>' → logprob: -5.853992462158203
    7. '```' → logprob: -6.353992462158203
    8. '[' → logprob: -6.603992462158203
    9. '
' → logprob: -6.853992462158203
    10. '\n' → logprob: -6.853992462158203

Token 31: 'output' (ID: 6130)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24439798295497894
    2. '
' → logprob: -2.3693978786468506
    3. ' if' → logprob: -2.6193978786468506
    4. '<|end|>' → logprob: -3.6193978786468506
    5. '\n' → logprob: -3.9943978786468506
    6. '```' → logprob: -7.24439811706543
    7. '_' → logprob: -7.49439811706543
    8. '\' → logprob: -7.49439811706543
    9. 'i' → logprob: -7.99439811706543
    10. '#' → logprob: -8.11939811706543

Token 32: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.01757194660604
    2. '_' → logprob: -4.642571926116943
    3. ' =' → logprob: -5.767571926116943
    4. '=' → logprob: -6.267571926116943
    5. '_str' → logprob: -7.142571926116943
    6. '_value' → logprob: -7.267571926116943
    7. '_strings' → logprob: -7.767571926116943
    8. '_s' → logprob: -8.142572402954102
    9. '_if' → logprob: -9.392572402954102
    10. '=_' → logprob: -10.142572402954102

Token 33: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.1310981959104538
    2. '=' → logprob: -2.1310982704162598
    3. ' =' → logprob: -6.13109827041626
    4. '_' → logprob: -7.25609827041626
    5. 'if' → logprob: -7.88109827041626
    6. '=_' → logprob: -8.131097793579102
    7. '_else' → logprob: -8.381097793579102
    8. '_=' → logprob: -9.256097793579102
    9. '_lower' → logprob: -9.381097793579102
    10. '_is' → logprob: -10.256097793579102

Token 34: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0049111428670585155
    2. '_ab' → logprob: -6.379910945892334
    3. '_not' → logprob: -6.629910945892334
    4. 'Below' → logprob: -8.254911422729492
    5. 'below' → logprob: -8.379911422729492
    6. ' user' → logprob: -8.504911422729492
    7. '_lower' → logprob: -8.629911422729492
    8. '_else' → logprob: -8.754911422729492
    9. ' ' → logprob: -8.879911422729492
    10. ' below' → logprob: -9.129911422729492

Token 35: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -0.00027015688829123974
    2. 'ellow' → logprob: -8.875269889831543
    3. 'el' → logprob: -10.000269889831543
    4. '_' → logprob: -10.000269889831543
    5. '_else' → logprob: -10.625269889831543
    6. '```' → logprob: -12.000269889831543
    7. 'below' → logprob: -13.125269889831543
    8. '_el' → logprob: -13.250269889831543
    9. 'else' → logprob: -13.375269889831543
    10. 'e' → logprob: -14.125269889831543

Token 36: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -0.0028376842383295298
    2. '_or' → logprob: -7.252837657928467
    3. '_' → logprob: -7.377837657928467
    4. ''_' → logprob: -8.002838134765625
    5. '"_' → logprob: -8.377838134765625
    6. '="_' → logprob: -8.502838134765625
    7. ' =' → logprob: -8.627838134765625
    8. '_thresh' → logprob: -9.252838134765625
    9. 'threshold' → logprob: -9.377838134765625
    10. '=' → logprob: -9.377838134765625

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004623799119144678
    2. '=' → logprob: -5.379623889923096
    3. ' ' → logprob: -12.629623413085938
    4. ',' → logprob: -16.754623413085938
    5. ' =
' → logprob: -17.004623413085938
    6. '=user' → logprob: -17.004623413085938
    7. ')' → logprob: -17.129623413085938
    8. ' ==' → logprob: -17.254623413085938
    9. 'user' → logprob: -17.754623413085938
    10. '_' → logprob: -18.004623413085938

Token 38: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6836785078048706
    2. ' "' → logprob: -1.8086785078048706
    3. '""' → logprob: -1.8086785078048706
    4. ' ""' → logprob: -2.30867862701416
    5. ''' → logprob: -3.68367862701416
    6. '"user' → logprob: -4.43367862701416
    7. '''' → logprob: -4.55867862701416
    8. ' ''' → logprob: -5.05867862701416
    9. ' '' → logprob: -5.18367862701416
    10. ' ' → logprob: -5.30867862701416

Token 39: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.004860496148467064
    2. ''' → logprob: -7.3798604011535645
    3. 'Red' → logprob: -7.3798604011535645
    4. 'a' → logprob: -7.6298604011535645
    5. '赤' → logprob: -7.8798604011535645
    6. '"' → logprob: -8.379860877990723
    7. '不' → logprob: -8.754860877990723
    8. 'In' → logprob: -9.129860877990723
    9. 'Below' → logprob: -9.254860877990723
    10. 'AG' → logprob: -9.254860877990723

Token 40: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2774849236011505
    2. 'emption' → logprob: -2.277484893798828
    3. 'hat' → logprob: -3.277484893798828
    4. 'shirt' → logprob: -4.402484893798828
    5. '\n' → logprob: -4.527484893798828
    6. 'print' → logprob: -4.902484893798828
    7. ' and' → logprob: -5.152484893798828
    8. '```' → logprob: -5.277484893798828
    9. 'fish' → logprob: -5.402484893798828
    10. '''' → logprob: -5.402484893798828

Token 41: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23610089719295502
    2. '\n' → logprob: -1.9861009120941162
    3. 'if' → logprob: -2.986100912094116
    4. ' if' → logprob: -4.986100673675537
    5. '```' → logprob: -5.236100673675537
    6. 'output' → logprob: -6.236100673675537
    7. '' → logprob: -6.236100673675537
    8. '
' → logprob: -6.361100673675537
    9. '<|end|>' → logprob: -6.611100673675537
    10. 'print' → logprob: -6.986100673675537

Token 42: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.002301674336194992
    2. 'user' → logprob: -6.1273016929626465
    3. ' ' → logprob: -9.127301216125488
    4. ' ' → logprob: -12.377301216125488
    5. '	user' → logprob: -14.002301216125488
    6. ' use' → logprob: -14.502301216125488
    7. ' (' → logprob: -14.752301216125488
    8. '"user' → logprob: -14.752301216125488
    9. '  ' → logprob: -14.877301216125488
    10. '(user' → logprob: -14.877301216125488

Token 43: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0004086275293957442
    2. '_put' → logprob: -8.750408172607422
    3. '_' → logprob: -9.125408172607422
    4. ' _' → logprob: -9.625408172607422
    5. 'put' → logprob: -10.250408172607422
    6. '_output' → logprob: -10.625408172607422
    7. '_user' → logprob: -12.875408172607422
    8. '_value' → logprob: -13.125408172607422
    9. 'input' → logprob: -13.625408172607422
    10. '_s' → logprob: -13.625408172607422

Token 44: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.002603841247037053
    2. '_' → logprob: -6.377604007720947
    3. '_input' → logprob: -7.252604007720947
    4. '_int' → logprob: -9.252603530883789
    5. ' _' → logprob: -10.002603530883789
    6. '_in' → logprob: -10.752603530883789
    7. '_value' → logprob: -11.377603530883789
    8. '_string' → logprob: -11.877603530883789
    9. '_i' → logprob: -13.127603530883789
    10. '_INTEGER' → logprob: -13.752603530883789

Token 45: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4593318998813629
    2. ' >' → logprob: -1.5843318700790405
    3. ' <' → logprob: -1.9593318700790405
    4. '>' → logprob: -4.95933198928833
    5. ' <=' → logprob: -4.95933198928833
    6. '>=' → logprob: -5.20933198928833
    7. '<' → logprob: -6.20933198928833
    8. ' ' → logprob: -7.33433198928833
    9. '<=' → logprob: -9.709331512451172
    10. '   ' → logprob: -11.834331512451172

Token 46: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.3486160635948181
    2. 'threshold' → logprob: -1.223616123199463
    3. '320' → logprob: -8.723615646362305
    4. ' ' → logprob: -12.973615646362305
    5. 'th' → logprob: -12.973615646362305
    6. ' ' → logprob: -13.973615646362305
    7. '_threshold' → logprob: -13.973615646362305
    8. '.threshold' → logprob: -14.098615646362305
    9. ' thresh' → logprob: -14.848615646362305
    10. '   ' → logprob: -14.973615646362305

Token 47: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00028135839966125786
    2. '_' → logprob: -9.00028133392334
    3. ' _' → logprob: -9.00028133392334
    4. ':' → logprob: -10.62528133392334
    5. '_val' → logprob: -12.37528133392334
    6. '```' → logprob: -14.12528133392334
    7. '_threshold' → logprob: -14.25028133392334
    8. ')_' → logprob: -14.50028133392334
    9. '_Value' → logprob: -14.75028133392334
    10. '}_' → logprob: -14.87528133392334

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003278368094470352
    2. ':
' → logprob: -8.375328063964844
    3. ' :' → logprob: -9.250328063964844
    4. ' :
' → logprob: -15.375328063964844
    5. ':return' → logprob: -15.625328063964844
    6. ':
' → logprob: -15.750328063964844
    7. ':**' → logprob: -15.750328063964844
    8. ':

' → logprob: -16.125328063964844
    9. '=' → logprob: -17.000328063964844
    10. ':\' → logprob: -17.125328063964844

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6595754623413086
    2. ' print' → logprob: -0.9095754623413086
    3. ' output' → logprob: -3.0345754623413086
    4. 'print' → logprob: -3.6595754623413086
    5. ' 
' → logprob: -6.284575462341309
    6. 'output' → logprob: -6.659575462341309
    7. '    
' → logprob: -6.909575462341309
    8. '
' → logprob: -7.284575462341309
    9. ' ' → logprob: -8.159575462341309
    10. '```' → logprob: -8.284575462341309

Token 50: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.06304530799388885
    2. 'print' (adapté à ' print') → logprob: -3.0630452632904053
    3. ' output' → logprob: -4.313045501708984
    4. 'output' → logprob: -7.563045501708984
    5. '   ' → logprob: -8.438045501708984
    6. '    ' → logprob: -8.688045501708984
    7. ' pass' → logprob: -11.188045501708984
    8. ' ' → logprob: -11.438045501708984
    9. ' return' → logprob: -12.438045501708984
    10. '```' → logprob: -12.438045501708984

Token 51: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.09054049849510193
    2. '(' → logprob: -2.4655404090881348
    3. '(user' → logprob: -6.590540409088135
    4. '('' → logprob: -8.840540885925293
    5. 'output' → logprob: -10.840540885925293
    6. 'user' → logprob: -11.090540885925293
    7. '(f' → logprob: -11.215540885925293
    8. ' (' → logprob: -11.465540885925293
    9. '("' → logprob: -11.715540885925293
    10. '()' → logprob: -12.340540885925293

Token 52: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.250000953674316
    3. '_str' → logprob: -15.250000953674316
    4. '_s' → logprob: -15.375000953674316
    5. '_strings' → logprob: -16.625001907348633
    6. '_output' → logprob: -16.875001907348633
    7. 'string' → logprob: -17.000001907348633
    8. 'String' → logprob: -17.875001907348633
    9. '_String' → logprob: -18.000001907348633
    10. '_text' → logprob: -18.250001907348633

Token 53: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -2.45848218582978e-06
    2. 'if' → logprob: -13.50000286102295
    3. '_string' → logprob: -14.25000286102295
    4. 'If' → logprob: -15.75000286102295
    5. '_' → logprob: -17.000001907348633
    6. ')_' → logprob: -17.750001907348633
    7. ')' → logprob: -17.875001907348633
    8. ' if' → logprob: -18.000001907348633
    9. '_IF' → logprob: -19.000001907348633
    10. '_else' → logprob: -19.000001907348633

Token 54: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.38782232999801636
    2. 'above' → logprob: -1.1378223896026611
    3. 'ab' → logprob: -7.012822151184082
    4. 'a' → logprob: -11.137822151184082
    5. 'Above' → logprob: -11.762822151184082
    6. 'below' → logprob: -12.137822151184082
    7. 'b' → logprob: -12.387822151184082
    8. '_b' → logprob: -12.512822151184082
    9. '_threshold' → logprob: -12.762822151184082
    10. ' above' → logprob: -12.762822151184082

Token 55: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -6.146429223008454e-05
    2. 've' → logprob: -10.50006103515625
    3. 're' → logprob: -11.00006103515625
    4. '_' → logprob: -12.25006103515625
    5. '_threshold' → logprob: -12.50006103515625
    6. '_re' → logprob: -12.87506103515625
    7. '_b' → logprob: -14.00006103515625
    8. 'ov' → logprob: -14.62506103515625
    9. 'b' → logprob: -14.62506103515625
    10. 'e' → logprob: -14.75006103515625

Token 56: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -5.9153885558771435e-06
    2. '_string' → logprob: -12.375005722045898
    3. '_thresh' → logprob: -13.500005722045898
    4. 'threshold' → logprob: -16.0000057220459
    5. '_th' → logprob: -17.1250057220459
    6. '_value' → logprob: -17.5000057220459
    7. '_output' → logprob: -17.5000057220459
    8. '_' → logprob: -18.1250057220459
    9. '_t' → logprob: -18.3750057220459
    10. '_length' → logprob: -18.6250057220459

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.00000286102295
    3. ')
' → logprob: -14.75000286102295
    4. '))' → logprob: -16.375001907348633
    5. '')' → logprob: -17.000001907348633
    6. 'else' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '),' → logprob: -18.750001907348633
    9. ' ' → logprob: -19.000001907348633
    10. '")' → logprob: -19.000001907348633

Token 58: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00011796683247666806
    2. ' else' → logprob: -9.625118255615234
    3. 'elif' → logprob: -10.000118255615234
    4. '```' → logprob: -12.250118255615234
    5. 'elser' → logprob: -14.750118255615234
    6. ')' → logprob: -15.375118255615234
    7. '_else' → logprob: -15.875118255615234
    8. '}else' → logprob: -15.875118255615234
    9. '<|end|>' → logprob: -15.875118255615234
    10. 'elses' → logprob: -16.000118255615234

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.015305552864447e-05
    2. ' :' → logprob: -9.750060081481934
    3. ':
' → logprob: -13.375060081481934
    4. ':return' → logprob: -16.12506103515625
    5. '   ' → logprob: -16.50006103515625
    6. '：' → logprob: -17.50006103515625
    7. '<|end|>' → logprob: -17.87506103515625
    8. ':def' → logprob: -18.25006103515625
    9. ':

' → logprob: -18.37506103515625
    10. ':list' → logprob: -18.87506103515625

Token 60: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4201982319355011
    2. '   ' → logprob: -1.1701982021331787
    3. 'print' → logprob: -3.4201982021331787
    4. '	print' → logprob: -10.795198440551758
    5. '    ' → logprob: -11.420198440551758
    6. '(print' → logprob: -11.545198440551758
    7. ' ' → logprob: -11.670198440551758
    8. '   ' → logprob: -12.170198440551758
    9. ' red' → logprob: -12.420198440551758
    10. '.print' → logprob: -12.670198440551758

Token 61: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3132897615432739
    2. ' print' → logprob: -1.313289761543274
    3. '   ' → logprob: -10.563289642333984
    4. '.print' → logprob: -14.438289642333984
    5. '(print' → logprob: -14.438289642333984
    6. '	print' → logprob: -14.813289642333984
    7. '    ' → logprob: -15.188289642333984
    8. 'pr' → logprob: -15.938289642333984
    9. ' ' → logprob: -15.938289642333984
    10. '_print' → logprob: -16.688289642333984

Token 62: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.20144784450531006
    2. '(' → logprob: -1.70144784450531
    3. '('' → logprob: -10.826447486877441
    4. '(out' → logprob: -11.576447486877441
    5. '(open' → logprob: -13.701447486877441
    6. '()' → logprob: -13.826447486877441
    7. '("("' → logprob: -14.201447486877441
    8. '(input' → logprob: -14.576447486877441
    9. '(
' → logprob: -15.201447486877441
    10. '((' → logprob: -15.201447486877441

Token 63: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.5941604690160602e-05
    2. '_s' → logprob: -11.750025749206543
    3. '_' → logprob: -12.000025749206543
    4. '_str' → logprob: -13.000025749206543
    5. 'String' → logprob: -13.125025749206543
    6. '_output' → logprob: -13.125025749206543
    7. 'string' → logprob: -13.625025749206543
    8. '_strings' → logprob: -13.875025749206543
    9. '_sn' → logprob: -14.250025749206543
    10. '_String' → logprob: -14.250025749206543

Token 64: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.014323573559522629
    2. '_string' → logprob: -4.264323711395264
    3. '_b' → logprob: -9.764323234558105
    4. ')_' → logprob: -10.014323234558105
    5. '_else' → logprob: -10.139323234558105
    6. ')' → logprob: -12.139323234558105
    7. '))' → logprob: -12.389323234558105
    8. 'if' → logprob: -12.764323234558105
    9. '_' → logprob: -13.139323234558105
    10. 'If' → logprob: -13.514323234558105

Token 65: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.2603901015827432e-05
    2. 'below' → logprob: -11.500022888183594
    3. '_ab' → logprob: -12.250022888183594
    4. '_if' → logprob: -12.625022888183594
    5. 'Below' → logprob: -13.500022888183594
    6. '_else' → logprob: -13.625022888183594
    7. '_string' → logprob: -13.750022888183594
    8. 'elow' → logprob: -15.875022888183594
    9. 'b' → logprob: -16.625022888183594
    10. '_or' → logprob: -16.625022888183594

Token 66: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -2.117345684382599e-05
    2. 'el' → logprob: -11.000020980834961
    3. 'ellow' → logprob: -12.625020980834961
    4. 'e' → logprob: -14.500020980834961
    5. 'below' → logprob: -15.125020980834961
    6. 'elo' → logprob: -15.625020980834961
    7. 'low' → logprob: -16.62502098083496
    8. 'output' → logprob: -17.25002098083496
    9. 'elong' → logprob: -17.62502098083496
    10. 'elif' → logprob: -17.87502098083496

Token 67: '_threshold' (ID: 51747)
  Prédit: '_threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_threshold' → logprob: -5.157039049663581e-05
    2. ')_' → logprob: -10.250051498413086
    3. '_thresh' → logprob: -12.000051498413086
    4. 'threshold' → logprob: -12.125051498413086
    5. ')' → logprob: -13.625051498413086
    6. '_value' → logprob: -14.000051498413086
    7. ''_' → logprob: -14.625051498413086
    8. '```' → logprob: -14.875051498413086
    9. '_THRESHOLD' → logprob: -15.500051498413086
    10. '_string' → logprob: -15.625051498413086

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.000000953674316
    3. '))' → logprob: -16.250001907348633
    4. ' )' → logprob: -16.750001907348633
    5. '')' → logprob: -17.625001907348633
    6. '()' → logprob: -18.625001907348633
    7. '`)' → logprob: -18.750001907348633
    8. ')`' → logprob: -19.000001907348633
    9. '())' → logprob: -19.375001907348633
    10. '")' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 54.55%
Précision adaptée (1ère position): 56.06%
Précision (top 10): 72.73%
================================================================================
