================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections

S = input()
ans = ''
for i in range(len(S)):
    ans += 'x'
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'S' (ID: 50)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007939128205180168
    2. '.Counter' → logprob: -5.132939338684082
    3. ',' → logprob: -7.382939338684082
    4. 'import' → logprob: -8.257939338684082
    5. '.default' → logprob: -8.382939338684082
    6. 'Counter' → logprob: -8.382939338684082
    7. '_' → logprob: -8.507939338684082
    8. '\' → logprob: -10.007939338684082
    9. '.
' → logprob: -10.257939338684082
    10. '`' → logprob: -10.382939338684082

Token 4: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.07526563853025436
    2. 'e' → logprob: -2.950265645980835
    3. 'etter' → logprob: -4.950265407562256
    4. 'tring' → logprob: -5.325265407562256
    5. 't' → logprob: -6.200265407562256
    6. '=' → logprob: -6.700265407562256
    7. ' =' → logprob: -6.950265407562256
    8. 'Counter' → logprob: -7.325265407562256
    9. 'tr' → logprob: -7.575265407562256
    10. 'ets' → logprob: -8.200265884399414

Token 5: ' input' (ID: 3422)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5025680661201477
    2. 'collections' → logprob: -1.627568006515503
    3. '"' → logprob: -2.502568006515503
    4. ' "' → logprob: -3.002568006515503
    5. ' ' → logprob: -3.752568006515503
    6. ' '' → logprob: -4.252568244934082
    7. ' set' → logprob: -4.752568244934082
    8. ' []' → logprob: -4.752568244934082
    9. ' [' → logprob: -5.502568244934082
    10. ''' → logprob: -5.877568244934082

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020413640595506877
    2. '(
' → logprob: -9.625204086303711
    3. ')' → logprob: -10.625204086303711
    4. '('' → logprob: -10.750204086303711
    5. '("("' → logprob: -11.000204086303711
    6. ''' → logprob: -11.125204086303711
    7. ' (' → logprob: -11.625204086303711
    8. '```' → logprob: -11.625204086303711
    9. '"' → logprob: -11.750204086303711
    10. '(

' → logprob: -11.750204086303711

Token 7: 'ans' (ID: 616)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2946832776069641
    2. '_' → logprob: -2.0446832180023193
    3. '=' → logprob: -2.4196832180023193
    4. '[' → logprob: -3.6696832180023193
    5. '_counter' → logprob: -5.919683456420898
    6. '(' → logprob: -6.419683456420898
    7. ')' → logprob: -6.794683456420898
    8. 'Counter' → logprob: -7.169683456420898
    9. 's' → logprob: -7.544683456420898
    10. ' =' → logprob: -7.544683456420898

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7137513756752014
    2. '=' → logprob: -0.8387513756752014
    3. ' =' → logprob: -2.7137513160705566
    4. '_' → logprob: -4.963751316070557
    5. '.' → logprob: -5.588751316070557
    6. ' ' → logprob: -7.713751316070557
    7. '[]' → logprob: -9.463751792907715
    8. '[:]' → logprob: -9.463751792907715
    9. ',' → logprob: -9.713751792907715
    10. ')' → logprob: -9.713751792907715

Token 9: ' ''
' (ID: 25366)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06320725381374359
    2. 'collections' → logprob: -2.8132071495056152
    3. ' ' → logprob: -6.813207149505615
    4. ' []' → logprob: -9.188207626342773
    5. ' collection' → logprob: -11.688207626342773
    6. ''' → logprob: -11.938207626342773
    7. ' {}' → logprob: -12.688207626342773
    8. ' ' → logprob: -12.813207626342773
    9. ' '' → logprob: -12.938207626342773
    10. '.collections' → logprob: -13.188207626342773

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025069063529372215
    2. 'd' → logprob: -4.775069236755371
    3. 'c' → logprob: -5.025069236755371
    4. 'counter' → logprob: -5.525069236755371
    5. ' for' → logprob: -6.400069236755371
    6. '_' → logprob: -6.525069236755371
    7. 'collections' → logprob: -7.400069236755371
    8. 'Counter' → logprob: -8.025069236755371
    9. ':' → logprob: -8.150069236755371
    10. 'a' → logprob: -8.400069236755371

Token 11: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.44687125086784363
    2. ' ' → logprob: -1.696871280670166
    3. ' i' → logprob: -1.946871280670166
    4. 'c' → logprob: -4.071871280670166
    5. ' _' → logprob: -4.571871280670166
    6. '_' → logprob: -5.946871280670166
    7. ' s' → logprob: -6.821871280670166
    8. ' ch' → logprob: -7.071871280670166
    9. 'i' → logprob: -7.196871280670166
    10. ' char' → logprob: -7.321871280670166

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013781934976577759
    2. 'in' → logprob: -4.513782024383545
    3. 'n' → logprob: -6.388782024383545
    4. ' ' → logprob: -7.138782024383545
    5. ' n' → logprob: -9.013781547546387
    6. ',' → logprob: -9.638781547546387
    7. 's' → logprob: -11.263781547546387
    8. '  ' → logprob: -11.388781547546387
    9. '	in' → logprob: -11.638781547546387
    10. ' ,' → logprob: -12.138781547546387

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2523808181285858
    2. 'range' → logprob: -1.6273808479309082
    3. 'S' → logprob: -4.377380847930908
    4. ' S' → logprob: -4.377380847930908
    5. 'collections' → logprob: -7.127380847930908
    6. ' collections' → logprob: -7.377380847930908
    7. ' ' → logprob: -10.62738037109375
    8. 's' → logprob: -12.00238037109375
    9. '(range' → logprob: -12.00238037109375
    10. ' xrange' → logprob: -12.50238037109375

Token 14: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.06197956204414368
    2. '(' → logprob: -2.8119795322418213
    3. '(length' → logprob: -12.186979293823242
    4. ' (' → logprob: -13.186979293823242
    5. '(
' → logprob: -13.561979293823242
    6. '(s' → logprob: -13.936979293823242
    7. '(S' → logprob: -14.561979293823242
    8. '(l' → logprob: -14.936979293823242
    9. '((' → logprob: -15.061979293823242
    10. '(n' → logprob: -15.061979293823242

Token 15: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0013418971793726087
    2. '(' → logprob: -6.626341819763184
    3. '(s' → logprob: -11.751341819763184
    4. 'S' → logprob: -12.251341819763184
    5. '(ans' → logprob: -13.001341819763184
    6. '(`' → logprob: -15.001341819763184
    7. '(
' → logprob: -15.251341819763184
    8. ' (' → logprob: -15.876341819763184
    9. '('' → logprob: -16.5013427734375
    10. 's' → logprob: -16.5013427734375

Token 16: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.026306800544261932
    2. '):' → logprob: -3.7763068675994873
    3. '))' → logprob: -6.651306629180908
    4. ')' → logprob: -7.276306629180908
    5. ')):
' → logprob: -7.651306629180908
    6. ' ):' → logprob: -8.276307106018066
    7. ' ' → logprob: -8.901307106018066
    8. '-' → logprob: -9.651307106018066
    9. ' ))' → logprob: -9.776307106018066
    10. ':' → logprob: -10.901307106018066

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6340819597244263
    2. ' if' → logprob: -1.5090819597244263
    3. ' for' → logprob: -2.0090818405151367
    4. ' ' → logprob: -2.7590818405151367
    5. ' ans' → logprob: -3.7590818405151367
    6. '    ' → logprob: -4.759081840515137
    7. 'for' → logprob: -5.634081840515137
    8. ' collections' → logprob: -5.759081840515137
    9. 'if' → logprob: -6.259081840515137
    10. 's' → logprob: -6.759081840515137

Token 18: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3852044641971588
    2. 'if' → logprob: -1.7602044343948364
    3. ' for' → logprob: -2.510204553604126
    4. ' if' → logprob: -4.135204315185547
    5. 'ans' (adapté à ' ans') → logprob: -4.385204315185547
    6. 'count' → logprob: -4.760204315185547
    7. 'counter' → logprob: -5.010204315185547
    8. 'cnt' → logprob: -5.260204315185547
    9. 'collections' → logprob: -5.760204315185547
    10. '   ' → logprob: -5.760204315185547

Token 19: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.28654947876930237
    2. '+=' → logprob: -1.41154944896698
    3. '+' → logprob: -5.4115495681762695
    4. '+='' → logprob: -7.2865495681762695
    5. ' +' → logprob: -8.53654956817627
    6. '+="' → logprob: -10.53654956817627
    7. '=' → logprob: -12.28654956817627
    8. ']+=' → logprob: -13.28654956817627
    9. ' =' → logprob: -13.28654956817627
    10. '[' → logprob: -14.03654956817627

Token 20: ' '' (ID: 461)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.017590221017599106
    2. 'collections' → logprob: -4.767590045928955
    3. ''S' → logprob: -5.892590045928955
    4. ''' → logprob: -6.142590045928955
    5. 'chr' → logprob: -6.392590045928955
    6. ' S' → logprob: -6.642590045928955
    7. 'str' → logprob: -7.392590045928955
    8. ''s' → logprob: -9.392590522766113
    9. ' ' → logprob: -9.517590522766113
    10. 'max' → logprob: -10.017590522766113

Token 21: 'x' (ID: 87)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8167423605918884
    2. ''' → logprob: -1.0667424201965332
    3. ''*' → logprob: -2.566742420196533
    4. ''S' → logprob: -2.941742420196533
    5. '')' → logprob: -3.691742420196533
    6. '(' → logprob: -4.566742420196533
    7. ''.' → logprob: -5.441742420196533
    8. 'a' → logprob: -5.566742420196533
    9. ')' → logprob: -5.691742420196533
    10. 'chr' → logprob: -5.816742420196533

Token 22: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4047237038612366
    2. '')' → logprob: -1.9047236442565918
    3. ' ' → logprob: -2.779723644256592
    4. '<|end|>' → logprob: -2.904723644256592
    5. ''''' → logprob: -4.154723644256592
    6. '[' → logprob: -4.404723644256592
    7. ')' → logprob: -4.779723644256592
    8. '[i' → logprob: -5.279723644256592
    9. 'i' → logprob: -5.529723644256592
    10. 'a' → logprob: -5.904723644256592

Token 23: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4559832215309143
    2. ' ' → logprob: -2.8309831619262695
    3. 'for' → logprob: -3.0809831619262695
    4. '(' → logprob: -3.0809831619262695
    5. ''' → logprob: -3.4559831619262695
    6. '#' → logprob: -3.4559831619262695
    7. '```' → logprob: -4.2059831619262695
    8. '<|end|>' → logprob: -4.3309831619262695
    9. ')' → logprob: -4.4559831619262695
    10. '\n' → logprob: -4.4559831619262695

Token 24: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007675960194319487
    2. '(ans' → logprob: -5.132676124572754
    3. '('' → logprob: -6.382676124572754
    4. '("("' → logprob: -10.882676124572754
    5. '()' → logprob: -11.507676124572754
    6. '(len' → logprob: -12.007676124572754
    7. '(s' → logprob: -12.507676124572754
    8. '(
' → logprob: -12.757676124572754
    9. '(`' → logprob: -13.132676124572754
    10. '(S' → logprob: -13.257676124572754

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '))' → logprob: -12.625005722045898
    3. ' )' → logprob: -14.125005722045898
    4. '')' → logprob: -14.375005722045898
    5. '`)' → logprob: -14.875005722045898
    6. ')`' → logprob: -15.625005722045898
    7. '()' → logprob: -17.0000057220459
    8. '(' → logprob: -17.7500057220459
    9. '[' → logprob: -17.8750057220459
    10. '")' → logprob: -18.1250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 14
Précision stricte (1ère position): 34.78%
Précision adaptée (1ère position): 34.78%
Précision (top 10): 60.87%
================================================================================
