================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a,b,c,d,e,k = [int(input()) for _ in range(6)]
a1 = [a,b,c,d,e]
import itertools as it
x1 = list(it.combinations(range(5), 2))
ans = "Yay!"
for i,j in x1:
    if abs(a1[i] - a1[j]) > k:
        ans = ":("
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',b' (ID: 17568)
  → Token d'amorce (pas de prédiction)

Token 2: ',c' (ID: 22261)
  → Token d'amorce (pas de prédiction)

Token 3: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0370296984910965
    2. ',d' → logprob: -3.41202974319458
    3. '=' → logprob: -6.28702974319458
    4. '+' → logprob: -7.28702974319458
    5. '```' → logprob: -8.662029266357422
    6. '<|end|>' → logprob: -8.912029266357422
    7. ';' → logprob: -9.162029266357422
    8. 'd' → logprob: -9.412029266357422
    9. '[' → logprob: -9.787029266357422
    10. ')' → logprob: -9.912029266357422

Token 4: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11403514444828033
    2. '=' → logprob: -2.364035129547119
    3. ',e' → logprob: -4.489035129547119
    4. '<|end|>' → logprob: -6.864035129547119
    5. ' =' → logprob: -7.864035129547119
    6. ';' → logprob: -8.239035606384277
    7. '```' → logprob: -8.364035606384277
    8. 'e' → logprob: -8.739035606384277
    9. '.' → logprob: -9.364035606384277
    10. ')' → logprob: -9.489035606384277

Token 5: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23366808891296387
    2. '=' → logprob: -1.6086680889129639
    3. '<|end|>' → logprob: -5.858668327331543
    4. '```' → logprob: -6.233668327331543
    5. ',f' → logprob: -6.858668327331543
    6. ')' → logprob: -7.233668327331543
    7. ';' → logprob: -7.608668327331543
    8. ' =' → logprob: -8.108668327331543
    9. '.' → logprob: -8.358668327331543
    10. 'f' → logprob: -9.108668327331543

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046315405517816544
    2. ' =' → logprob: -3.7963154315948486
    3. ',' → logprob: -3.9213154315948486
    4. '+' → logprob: -7.2963151931762695
    5. '<|end|>' → logprob: -7.6713151931762695
    6. ')' → logprob: -7.7963151931762695
    7. '.' → logprob: -8.04631519317627
    8. '```' → logprob: -8.42131519317627
    9. '[' → logprob: -8.54631519317627
    10. ';' → logprob: -8.54631519317627

Token 7: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5397851467132568
    2. '0' → logprob: -1.2897851467132568
    3. ' [' → logprob: -2.414785146713257
    4. '1' → logprob: -3.664785146713257
    5. '[' → logprob: -4.414785385131836
    6. ' map' → logprob: -5.789785385131836
    7. ' None' → logprob: -6.164785385131836
    8. 'map' → logprob: -6.289785385131836
    9. ' []' → logprob: -6.414785385131836
    10. '10' → logprob: -6.789785385131836

Token 8: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1815696656703949
    2. '1' → logprob: -2.4315695762634277
    3. ']' → logprob: -2.6815695762634277
    4. ' ' → logprob: -5.681569576263428
    5. '[' → logprob: -5.806569576263428
    6. '[]' → logprob: -6.681569576263428
    7. '10' → logprob: -7.431569576263428
    8. ']int' → logprob: -8.181570053100586
    9. ' ]' → logprob: -8.306570053100586
    10. ')' → logprob: -8.431570053100586

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030971599742770195
    2. ']' → logprob: -3.5309715270996094
    3. '(x' → logprob: -7.155971527099609
    4. '](' → logprob: -8.40597152709961
    5. '()]' → logprob: -10.28097152709961
    6. '[' → logprob: -10.40597152709961
    7. '(i' → logprob: -10.65597152709961
    8. ']()' → logprob: -10.65597152709961
    9. ' (' → logprob: -11.03097152709961
    10. '('' → logprob: -11.53097152709961

Token 10: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.162371039390564
    2. '())' → logprob: -1.162371039390564
    3. ')]' → logprob: -1.537371039390564
    4. '()]' → logprob: -2.5373711585998535
    5. ')' → logprob: -3.4123711585998535
    6. '()' → logprob: -4.1623711585998535
    7. '('' → logprob: -4.1623711585998535
    8. '(()' → logprob: -5.1623711585998535
    9. ')])' → logprob: -6.1623711585998535
    10. ']' → logprob: -6.5373711585998535

Token 11: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22878403961658478
    2. ')' → logprob: -2.2287840843200684
    3. ')]' → logprob: -2.3537840843200684
    4. '])' → logprob: -7.353784084320068
    5. '()]' → logprob: -7.728784084320068
    6. ')])' → logprob: -8.85378360748291
    7. '`]' → logprob: -9.10378360748291
    8. '[' → logprob: -9.35378360748291
    9. '],' → logprob: -9.97878360748291
    10. '])]' → logprob: -9.97878360748291

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13941307365894318
    2. ' ' → logprob: -2.7644131183624268
    3. ' _' → logprob: -3.6394131183624268
    4. ' i' → logprob: -4.514412879943848
    5. 'range' → logprob: -4.889412879943848
    6. ' a' → logprob: -5.389412879943848
    7. '_' → logprob: -5.389412879943848
    8. '<|end|>' → logprob: -5.764412879943848
    9. ' in' → logprob: -5.889412879943848
    10. '  ' → logprob: -6.264412879943848

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023508911952376366
    2. 'in' → logprob: -3.7735090255737305
    3. ' ' → logprob: -8.39850902557373
    4. 'range' → logprob: -10.77350902557373
    5. ' range' → logprob: -12.64850902557373
    6. '  ' → logprob: -12.77350902557373
    7. 'import' → logprob: -13.14850902557373
    8. '_' → logprob: -13.52350902557373
    9. '	in' → logprob: -13.52350902557373
    10. '<|end|>' → logprob: -13.52350902557373

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326186656951904
    2. 'range' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.188261032104492
    4. '	range' → logprob: -16.813261032104492
    5. '(range' → logprob: -17.813261032104492
    6. '[' → logprob: -19.313261032104492
    7. ' xrange' → logprob: -19.688261032104492
    8. '.range' → logprob: -20.438261032104492
    9. '```' → logprob: -20.563261032104492
    10. 'rang' → logprob: -20.563261032104492

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0041003660298883915
    2. '6' → logprob: -5.504100322723389
    3. '7' → logprob: -11.004100799560547
    4. ' (' → logprob: -12.754100799560547
    5. '5' → logprob: -14.004100799560547
    6. '```' → logprob: -14.004100799560547
    7. '(
' → logprob: -14.879100799560547
    8. ')' → logprob: -15.629100799560547
    9. '0' → logprob: -15.754100799560547
    10. ' ' → logprob: -17.004100799560547

Token 16: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.004080897197127342
    2. '5' → logprob: -5.504080772399902
    3. '7' → logprob: -13.379080772399902
    4. ' ' → logprob: -13.879080772399902
    5. ')' → logprob: -18.50408172607422
    6. '```' → logprob: -19.75408172607422
    7. '3' → logprob: -20.75408172607422
    8. '1' → logprob: -21.00408172607422
    9. '   ' → logprob: -21.12908172607422
    10. '10' → logprob: -21.37908172607422

Token 17: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000294586323434487
    2. ')' → logprob: -8.25029468536377
    3. ']' → logprob: -10.50029468536377
    4. ')])' → logprob: -12.62529468536377
    5. '')]' → logprob: -14.12529468536377
    6. '])]' → logprob: -15.12529468536377
    7. '])' → logprob: -15.37529468536377
    8. ')],' → logprob: -15.37529468536377
    9. ' )' → logprob: -15.62529468536377
    10. '))' → logprob: -15.87529468536377

Token 18: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4629350006580353
    2. 'f' → logprob: -2.087934970855713
    3. '+' → logprob: -2.712934970855713
    4. 'i' → logprob: -2.712934970855713
    5. '\n' → logprob: -3.212934970855713
    6. '#' → logprob: -3.462934970855713
    7. '
' → logprob: -4.212934970855713
    8. '\' → logprob: -4.962934970855713
    9. '+
' → logprob: -5.962934970855713
    10. ' if' → logprob: -6.087934970855713

Token 19: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010871073231101036
    2. '*' → logprob: -5.385870933532715
    3. ' +' → logprob: -6.135870933532715
    4. '%' → logprob: -6.260870933532715
    5. ',' → logprob: -7.260870933532715
    6. '>' → logprob: -8.135870933532715
    7. ' ' → logprob: -8.510870933532715
    8. ')' → logprob: -9.135870933532715
    9. '**' → logprob: -9.260870933532715
    10. '<|end|>' → logprob: -9.260870933532715

Token 20: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5825079679489136
    2. '*' → logprob: -1.2075079679489136
    3. ' *' → logprob: -3.457508087158203
    4. '=' → logprob: -3.707508087158203
    5. ' +' → logprob: -4.082508087158203
    6. ',' → logprob: -4.207508087158203
    7. ')' → logprob: -4.457508087158203
    8. ' =' → logprob: -4.957508087158203
    9. '-' → logprob: -5.332508087158203
    10. '>' → logprob: -5.457508087158203

Token 21: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15278246998786926
    2. ' a' → logprob: -2.027782440185547
    3. '(a' → logprob: -5.527782440185547
    4. '0' → logprob: -6.027782440185547
    5. 'b' → logprob: -7.152782440185547
    6. ' (' → logprob: -7.402782440185547
    7. ' ' → logprob: -7.652782440185547
    8. ' max' → logprob: -7.902782440185547
    9. ' b' → logprob: -8.027782440185547
    10. 'k' → logprob: -8.402782440185547

Token 22: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07682370394468307
    2. '0' → logprob: -3.0768237113952637
    3. 'i' → logprob: -5.076823711395264
    4. 'b' → logprob: -5.326823711395264
    5. ']' → logprob: -5.451823711395264
    6. 'int' → logprob: -5.576823711395264
    7. 'k' → logprob: -5.701823711395264
    8. '(a' → logprob: -6.326823711395264
    9. 'abs' → logprob: -7.076823711395264
    10. '(' → logprob: -7.576823711395264

Token 23: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14915581047534943
    2. ']' → logprob: -2.399155855178833
    3. ' ,' → logprob: -4.149155616760254
    4. '+' → logprob: -4.524155616760254
    5. ',a' → logprob: -5.024155616760254
    6. '-' → logprob: -5.774155616760254
    7. ',b' → logprob: -5.774155616760254
    8. ' -' → logprob: -6.899155616760254
    9. ' ]' → logprob: -6.899155616760254
    10. ' +' → logprob: -7.149155616760254

Token 24: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08033182471990585
    2. ',c' → logprob: -2.580331802368164
    3. ',a' → logprob: -7.080331802368164
    4. ']' → logprob: -8.330331802368164
    5. ' ,' → logprob: -8.705331802368164
    6. ',d' → logprob: -9.330331802368164
    7. ',e' → logprob: -10.080331802368164
    8. ',b' → logprob: -10.955331802368164
    9. ',k' → logprob: -11.455331802368164
    10. ',,' → logprob: -12.205331802368164

Token 25: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18959318101406097
    2. ',d' → logprob: -1.9395931959152222
    3. ']' → logprob: -3.5645930767059326
    4. ' ,' → logprob: -7.814593315124512
    5. ' ]' → logprob: -9.314593315124512
    6. ',a' → logprob: -9.939593315124512
    7. ',e' → logprob: -10.314593315124512
    8. 'd' → logprob: -10.939593315124512
    9. ' ' → logprob: -11.814593315124512
    10. ',f' → logprob: -12.064593315124512

Token 26: ',e' (ID: 43127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28707030415534973
    2. ',e' → logprob: -1.4120702743530273
    3. ']' → logprob: -5.162070274353027
    4. ',f' → logprob: -9.537070274353027
    5. ' ,' → logprob: -9.912070274353027
    6. 'e' → logprob: -11.662070274353027
    7. ',a' → logprob: -12.037070274353027
    8. ' ]' → logprob: -12.162070274353027
    9. ',,' → logprob: -12.162070274353027
    10. ',d' → logprob: -12.662070274353027

Token 27: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07061693072319031
    2. ',' → logprob: -2.6956169605255127
    3. ' ]' → logprob: -7.570616722106934
    4. ',a' → logprob: -9.945616722106934
    5. ',k' → logprob: -10.570616722106934
    6. ',f' → logprob: -10.945616722106934
    7. ' ,' → logprob: -11.320616722106934
    8. '[' → logprob: -11.570616722106934
    9. '   ' → logprob: -11.945616722106934
    10. '`]' → logprob: -12.570616722106934

Token 28: 'import' (ID: 561)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2674541473388672
    2. ',k' → logprob: -1.7674541473388672
    3. '[' → logprob: -2.142454147338867
    4. '.sort' → logprob: -2.642454147338867
    5. '.append' → logprob: -2.642454147338867
    6. '+' → logprob: -3.267454147338867
    7. ']' → logprob: -3.392454147338867
    8. ',' → logprob: -3.392454147338867
    9. 'k' → logprob: -3.767454147338867
    10. '*' → logprob: -4.017454147338867

Token 29: ' itertools' (ID: 103178)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.21424099802970886
    2. ' math' → logprob: -2.3392410278320312
    3. ' random' → logprob: -3.2142410278320312
    4. ' itertools' → logprob: -3.2142410278320312
    5. ' numpy' → logprob: -4.839241027832031
    6. ' space' → logprob: -5.589241027832031
    7. ' collections' → logprob: -6.339241027832031
    8. ' ' → logprob: -6.464241027832031
    9. ' pandas' → logprob: -7.964241027832031
    10. ' statistics' → logprob: -8.839241027832031

Token 30: ' as' (ID: 472)
  Prédit: '.per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.per' → logprob: -1.0027496814727783
    2. '.' → logprob: -1.3777496814727783
    3. 'for' → logprob: -1.3777496814727783
    4. '.for' → logprob: -3.1277496814727783
    5. '.com' → logprob: -3.7527496814727783
    6. '.f' → logprob: -4.127749443054199
    7. 'per' → logprob: -4.377749443054199
    8. '
' → logprob: -4.502749443054199
    9. ' for' → logprob: -5.877749443054199
    10. 'f' → logprob: -6.002749443054199

Token 31: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00033081689616665244
    2. ' it' → logprob: -8.250330924987793
    3. 'itl' → logprob: -10.250330924987793
    4. 'itm' → logprob: -11.250330924987793
    5. 'It' → logprob: -12.000330924987793
    6. 'itt' → logprob: -12.625330924987793
    7. 'itg' → logprob: -12.750330924987793
    8. 'its' → logprob: -12.875330924987793
    9. '	it' → logprob: -13.000330924987793
    10. '_it' → logprob: -13.500330924987793

Token 32: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18919092416763306
    2. 'f' → logprob: -2.8141908645629883
    3. '
' → logprob: -3.5641908645629883
    4. '.' → logprob: -3.5641908645629883
    5. 'k' → logprob: -4.064190864562988
    6. 'a' → logprob: -4.189190864562988
    7. 'print' → logprob: -5.314190864562988
    8. '.f' → logprob: -5.564190864562988
    9. '.for' → logprob: -5.689190864562988
    10. ' for' → logprob: -6.314190864562988

Token 33: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1300840824842453
    2. 'f' → logprob: -3.5050840377807617
    3. 'per' → logprob: -3.8800840377807617
    4. '.per' → logprob: -4.130084037780762
    5. '.for' → logprob: -4.630084037780762
    6. '.' → logprob: -5.005084037780762
    7. 'k' → logprob: -5.130084037780762
    8. '
' → logprob: -5.130084037780762
    9. ' for' → logprob: -5.505084037780762
    10. 'com' → logprob: -5.505084037780762

Token 34: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14398838579654694
    2. '=' → logprob: -2.0189883708953857
    3. '.' → logprob: -7.393988609313965
    4. '_' → logprob: -7.893988609313965
    5. ',' → logprob: -9.643988609313965
    6. 's' → logprob: -10.018988609313965
    7. '1' → logprob: -10.268988609313965
    8. ' ' → logprob: -10.393988609313965
    9. 'for' → logprob: -10.393988609313965
    10. 'o' → logprob: -10.893988609313965

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871409595012665
    2. ' =' → logprob: -1.1371409893035889
    3. 's' → logprob: -8.762141227722168
    4. '.' → logprob: -10.512141227722168
    5. '_' → logprob: -10.637141227722168
    6. ',' → logprob: -11.387141227722168
    7. '.=' → logprob: -11.887141227722168
    8. ' ' → logprob: -12.012141227722168
    9. '=int' → logprob: -12.637141227722168
    10. 'x' → logprob: -12.762141227722168

Token 36: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.26776066422462463
    2. ' list' → logprob: -1.5177606344223022
    3. 'it' → logprob: -4.642760753631592
    4. 'sum' → logprob: -6.017760753631592
    5. ' it' → logprob: -6.517760753631592
    6. ' sum' → logprob: -7.392760753631592
    7. 'len' → logprob: -8.017760276794434
    8. 'set' → logprob: -8.142760276794434
    9. '[' → logprob: -8.267760276794434
    10. '[it' → logprob: -8.767760276794434

Token 37: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.00023107275774236768
    2. '(' → logprob: -8.37523078918457
    3. '()' → logprob: -16.25023078918457
    4. 'it' → logprob: -16.25023078918457
    5. '(

' → logprob: -17.12523078918457
    6. '(
' → logprob: -17.12523078918457
    7. '[it' → logprob: -17.12523078918457
    8. '	it' → logprob: -18.12523078918457
    9. '(et' → logprob: -18.12523078918457
    10. '(It' → logprob: -18.37523078918457

Token 38: '.com' (ID: 1136)
  Prédit: '.per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.per' → logprob: -0.31649699807167053
    2. '.product' → logprob: -1.9414969682693481
    3. '.com' → logprob: -2.0664970874786377
    4. '.chain' → logprob: -7.441496849060059
    5. '.' → logprob: -8.191496849060059
    6. '.p' → logprob: -9.066496849060059
    7. '.acc' → logprob: -9.441496849060059
    8. '.prod' → logprob: -10.316496849060059
    9. ' .' → logprob: -11.066496849060059
    10. '.c' → logprob: -11.316496849060059

Token 39: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0001205893131555058
    2. 'b' → logprob: -9.500120162963867
    3. 'inations' → logprob: -10.750120162963867
    4. '>' → logprob: -11.875120162963867
    5. '```' → logprob: -11.875120162963867
    6. '>b' → logprob: -12.500120162963867
    7. 'bin' → logprob: -12.875120162963867
    8. '[b' → logprob: -14.375120162963867
    9. 'utations' → logprob: -14.625120162963867
    10. 'ib' → logprob: -14.875120162963867

Token 40: '(range' (ID: 50017)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -14.12500286102295
    4. ')' → logprob: -14.87500286102295
    5. '(x' → logprob: -15.37500286102295
    6. '((' → logprob: -17.875003814697266
    7. '(A' → logprob: -17.875003814697266
    8. '(range' → logprob: -18.250003814697266
    9. ')(' → logprob: -18.375003814697266
    10. 'a' → logprob: -19.000003814697266

Token 41: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01607624813914299
    2. '(len' → logprob: -4.14107608795166
    3. 'len' → logprob: -11.14107608795166
    4. '(a' → logprob: -11.51607608795166
    5. ' (' → logprob: -11.89107608795166
    6. '5' → logprob: -12.51607608795166
    7. '(n' → logprob: -13.26607608795166
    8. '6' → logprob: -13.64107608795166
    9. '(
' → logprob: -14.14107608795166
    10. ')' → logprob: -14.39107608795166

Token 42: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.002312622731551528
    2. '1' → logprob: -7.252312660217285
    3. '6' → logprob: -7.377312660217285
    4. ' ' → logprob: -7.627312660217285
    5. 'len' → logprob: -8.002312660217285
    6. '4' → logprob: -9.377312660217285
    7. 'a' → logprob: -10.502312660217285
    8. '3' → logprob: -11.689812660217285
    9. '2' → logprob: -11.814812660217285
    10. '7' → logprob: -12.377312660217285

Token 43: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0433906726539135
    2. '),' → logprob: -3.1683907508850098
    3. ' ,' → logprob: -8.168390274047852
    4. ')' → logprob: -10.168390274047852
    5. ',k' → logprob: -11.418390274047852
    6. ' ),' → logprob: -11.668390274047852
    7. '>,' → logprob: -11.793390274047852
    8. ',),' → logprob: -11.793390274047852
    9. '},' → logprob: -12.293390274047852
    10. '],' → logprob: -12.293390274047852

Token 44: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5824769735336304
    2. ' ' → logprob: -1.4574769735336304
    3. '4' → logprob: -1.5824769735336304
    4. '2' → logprob: -5.95747709274292
    5. '5' → logprob: -8.832476615905762
    6. '1' → logprob: -8.957476615905762
    7. 'k' → logprob: -8.957476615905762
    8. '   ' → logprob: -9.332476615905762
    9. ' k' → logprob: -9.957476615905762
    10. '  ' → logprob: -11.082476615905762

Token 45: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11475452780723572
    2. '4' → logprob: -2.6147544384002686
    3. ' ' → logprob: -3.9897544384002686
    4. '2' → logprob: -4.114754676818848
    5. '5' → logprob: -8.989754676818848
    6. '1' → logprob: -9.114754676818848
    7. 'k' → logprob: -9.489754676818848
    8. '   ' → logprob: -9.989754676818848
    9. ')' → logprob: -11.364754676818848
    10. '  ' → logprob: -11.802254676818848

Token 46: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021217912435532
    2. ')' → logprob: -2.3502120971679688
    3. '),' → logprob: -13.100212097167969
    4. ')))' → logprob: -13.100212097167969
    5. '))
' → logprob: -14.475212097167969
    6. ')
' → logprob: -14.600212097167969
    7. ' ))' → logprob: -16.10021209716797
    8. ').' → logprob: -16.72521209716797
    9. '));' → logprob: -17.22521209716797
    10. ')}' → logprob: -17.47521209716797

Token 47: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1614314466714859
    2. 'x' → logprob: -2.9114315509796143
    3. '\n' → logprob: -3.5364315509796143
    4. 'for' → logprob: -4.036431312561035
    5. ')' → logprob: -4.661431312561035
    6. '  
' → logprob: -4.911431312561035
    7. '
' → logprob: -5.286431312561035
    8. ' 
' → logprob: -5.536431312561035
    9. '<|end|>' → logprob: -5.661431312561035
    10. '[' → logprob: -5.911431312561035

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0621761754155159
    2. '=' → logprob: -2.81217622756958
    3. 's' → logprob: -9.312175750732422
    4. '_' → logprob: -9.687175750732422
    5. '=[]' → logprob: -11.312175750732422
    6. '[:]' → logprob: -11.562175750732422
    7. '[' → logprob: -11.687175750732422
    8. ' ' → logprob: -12.312175750732422
    9. '.' → logprob: -12.812175750732422
    10. ',' → logprob: -12.937175750732422

Token 49: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.052662968635559
    2. 'max' → logprob: -1.427662968635559
    3. 'float' → logprob: -2.0526628494262695
    4. '[]' → logprob: -2.8026628494262695
    5. '100' → logprob: -2.9276628494262695
    6. 'sum' → logprob: -3.1776628494262695
    7. 'a' → logprob: -3.8026628494262695
    8. '-' → logprob: -3.8026628494262695
    9. 'False' → logprob: -3.8026628494262695
    10. '999' → logprob: -4.1776628494262695

Token 50: 'Y' (ID: 56)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.6120065450668335
    2. 'NO' → logprob: -1.8620065450668335
    3. '"' → logprob: -2.612006664276123
    4. '0' → logprob: -2.612006664276123
    5. '-' → logprob: -2.737006664276123
    6. 'N' → logprob: -4.362006664276123
    7. '"No' → logprob: -4.612006664276123
    8. 'Yes' → logprob: -5.237006664276123
    9. 'IMP' → logprob: -5.487006664276123
    10. 'Impossible' → logprob: -5.487006664276123

Token 51: 'ay' (ID: 356)
  Prédit: 'ES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ES' → logprob: -0.012009546160697937
    2. 'es' → logprob: -4.637009620666504
    3. 'E' → logprob: -6.137009620666504
    4. '""' → logprob: -11.012009620666504
    5. '"' → logprob: -11.512009620666504
    6. 'Es' → logprob: -11.637009620666504
    7. '```' → logprob: -11.637009620666504
    8. 'e' → logprob: -11.887009620666504
    9. 'N' → logprob: -12.137009620666504
    10. 'et' → logprob: -12.512009620666504

Token 52: '!"
' (ID: 44450)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.530531108379364
    2. '"' → logprob: -0.905531108379364
    3. '!' → logprob: -5.65553092956543
    4. '"\' → logprob: -6.53053092956543
    5. '
' → logprob: -7.28053092956543
    6. '!"' → logprob: -7.28053092956543
    7. '")' → logprob: -8.28053092956543
    8. '!\' → logprob: -8.78053092956543
    9. '"
' → logprob: -9.28053092956543
    10. '\' → logprob: -9.40553092956543

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006940447725355625
    2. ' for' → logprob: -5.7569403648376465
    3. '
' → logprob: -5.8819403648376465
    4. '\n' → logprob: -7.0069403648376465
    5. 'if' → logprob: -10.381940841674805
    6. '<|end|>' → logprob: -11.131940841674805
    7. '\' → logprob: -12.881940841674805
    8. '\
' → logprob: -13.631940841674805
    9. '```' → logprob: -13.631940841674805
    10. ' 
' → logprob: -13.756940841674805

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5390560030937195
    2. ' i' → logprob: -1.0390560626983643
    3. ' idx' → logprob: -4.664055824279785
    4. 'p' → logprob: -4.789055824279785
    5. 'x' → logprob: -4.789055824279785
    6. 'idx' → logprob: -4.789055824279785
    7. ' p' → logprob: -5.164055824279785
    8. ' x' → logprob: -5.789055824279785
    9. ' pair' → logprob: -6.039055824279785
    10. 'pair' → logprob: -6.539055824279785

Token 55: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06453403830528259
    2. 'in' → logprob: -2.9395339488983154
    3. ' ' → logprob: -4.8145341873168945
    4. 'n' → logprob: -7.6895341873168945
    5. ',' → logprob: -8.064534187316895
    6. '_' → logprob: -8.064534187316895
    7. ' n' → logprob: -8.189534187316895
    8. '  ' → logprob: -10.064534187316895
    9. ' ,' → logprob: -10.564534187316895
    10. ' _' → logprob: -11.064534187316895

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17975398898124695
    2. 'in' → logprob: -1.8047540187835693
    3. ' ' → logprob: -12.804754257202148
    4. ',' → logprob: -13.179754257202148
    5. '	in' → logprob: -13.554754257202148
    6. 'n' → logprob: -14.429754257202148
    7. '  ' → logprob: -14.929754257202148
    8. ' i' → logprob: -15.054754257202148
    9. ')' → logprob: -15.179754257202148
    10. 'In' → logprob: -15.429754257202148

Token 57: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02324722334742546
    2. ' x' → logprob: -3.773247241973877
    3. ' ' → logprob: -13.648246765136719
    4. '	x' → logprob: -15.523246765136719
    5. '(x' → logprob: -15.898246765136719
    6. '   ' → logprob: -16.02324676513672
    7. 'range' → logprob: -16.39824676513672
    8. '    ' → logprob: -17.39824676513672
    9. ')x' → logprob: -17.39824676513672
    10. '  ' → logprob: -17.64824676513672

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4656579120783135e-05
    2. ':' → logprob: -11.000044822692871
    3. '_' → logprob: -11.500044822692871
    4. ')' → logprob: -11.625044822692871
    5. '```' → logprob: -12.750044822692871
    6. '):' → logprob: -12.875044822692871
    7. 'er' → logprob: -13.625044822692871
    8. '_:' → logprob: -14.500044822692871
    9. ' ' → logprob: -14.875044822692871
    10. '_)' → logprob: -15.750044822692871

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3557529857498594e-05
    2. ':
' → logprob: -11.00002384185791
    3. ' :' → logprob: -12.62502384185791
    4. '):' → logprob: -13.37502384185791
    5. ':**' → logprob: -13.37502384185791
    6. ',' → logprob: -16.000022888183594
    7. '=' → logprob: -16.875022888183594
    8. ')' → logprob: -17.125022888183594
    9. ':

' → logprob: -17.250022888183594
    10. '>' → logprob: -17.625022888183594

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01878880150616169
    2. ' if' → logprob: -4.393788814544678
    3. '
' → logprob: -6.643788814544678
    4. '<|end|>' → logprob: -6.643788814544678
    5. '    
' → logprob: -6.768788814544678
    6. ' ' → logprob: -6.768788814544678
    7. 'if' → logprob: -7.768788814544678
    8. '	if' → logprob: -8.51878833770752
    9. '```' → logprob: -8.76878833770752
    10. ' 
' → logprob: -9.01878833770752

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5297220349311829
    2. 'if' (adapté à ' if') → logprob: -1.279721975326538
    3. '   ' → logprob: -2.029721975326538
    4. ' ' → logprob: -7.279722213745117
    5. 'k' → logprob: -8.904722213745117
    6. '       ' → logprob: -8.904722213745117
    7. ' for' → logprob: -9.029722213745117
    8. 'x' → logprob: -9.154722213745117
    9. ' s' → logprob: -9.154722213745117
    10. ' x' → logprob: -9.279722213745117

Token 62: ' abs' (ID: 8443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6958053112030029
    2. ' a' → logprob: -0.6958053112030029
    3. ' ' → logprob: -7.070805549621582
    4. '(a' → logprob: -7.820805549621582
    5. ' abs' → logprob: -7.945805549621582
    6. '   ' → logprob: -8.070805549621582
    7. ' (' → logprob: -8.195805549621582
    8. 'k' → logprob: -8.820805549621582
    9. ' k' → logprob: -9.445805549621582
    10. 'abs' → logprob: -9.445805549621582

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001434690784662962
    2. '(' → logprob: -9.875143051147461
    3. '((' → logprob: -10.375143051147461
    4. '(i' → logprob: -10.500143051147461
    5. 'a' → logprob: -11.125143051147461
    6. '(k' → logprob: -11.500143051147461
    7. '(e' → logprob: -13.125143051147461
    8. '(c' → logprob: -13.750143051147461
    9. '(ai' → logprob: -13.750143051147461
    10. '(x' → logprob: -14.125143051147461

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008301171474158764
    2. '[i' → logprob: -7.125830173492432
    3. 'i' → logprob: -11.750829696655273
    4. ' -' → logprob: -12.250829696655273
    5. 'a' → logprob: -13.000829696655273
    6. '[j' → logprob: -13.500829696655273
    7. '-' → logprob: -13.500829696655273
    8. '[k' → logprob: -13.813329696655273
    9. '```' → logprob: -13.938329696655273
    10. ' ' → logprob: -14.063329696655273

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8206473871250637e-05
    2. '[j' → logprob: -11.500028610229492
    3. '[' → logprob: -11.875028610229492
    4. 'i' → logprob: -12.125028610229492
    5. '[a' → logprob: -12.500028610229492
    6. '[k' → logprob: -14.500028610229492
    7. ' [' → logprob: -14.750028610229492
    8. '   ' → logprob: -15.750028610229492
    9. ' ' → logprob: -16.000028610229492
    10. 'a' → logprob: -16.250028610229492

Token 66: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34919098019599915
    2. ' -' → logprob: -1.2241909503936768
    3. '-a' → logprob: -7.349191188812256
    4. '-k' → logprob: -10.599190711975098
    5. ' ' → logprob: -10.849190711975098
    6. '[' → logprob: -11.474190711975098
    7. '   ' → logprob: -11.474190711975098
    8. '-e' → logprob: -11.974190711975098
    9. '+' → logprob: -12.099190711975098
    10. '  ' → logprob: -12.724190711975098

Token 67: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020577972754836082
    2. ' -' → logprob: -3.895577907562256
    3. '-a' → logprob: -10.895578384399414
    4. '+' → logprob: -12.520578384399414
    5. '-
' → logprob: -12.520578384399414
    6. ' ' → logprob: -12.645578384399414
    7. '   ' → logprob: -12.895578384399414
    8. '  ' → logprob: -13.395578384399414
    9. '-k' → logprob: -13.770578384399414
    10. '-

' → logprob: -14.770578384399414

Token 68: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00977497547864914
    2. ' a' → logprob: -4.634775161743164
    3. ' ' → logprob: -11.259775161743164
    4. 'k' → logprob: -12.509775161743164
    5. ' k' → logprob: -14.384775161743164
    6. '  ' → logprob: -14.384775161743164
    7. '	a' → logprob: -15.009775161743164
    8. '<|end|>' → logprob: -15.384775161743164
    9. '   ' → logprob: -15.509775161743164
    10. '>a' → logprob: -15.634775161743164

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7385154428193346e-05
    2. '4' → logprob: -11.62503719329834
    3. '2' → logprob: -11.75003719329834
    4. ' ' → logprob: -12.25003719329834
    5. '[k' → logprob: -12.62503719329834
    6. '[' → logprob: -13.12503719329834
    7. '[a' → logprob: -13.31253719329834
    8. 'a' → logprob: -13.68753719329834
    9. 'k' → logprob: -13.93753719329834
    10. '[j' → logprob: -14.25003719329834

Token 70: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00017350474081467837
    2. '[' → logprob: -9.625173568725586
    3. '[k' → logprob: -10.375173568725586
    4. '[i' → logprob: -10.500173568725586
    5. ' [' → logprob: -10.875173568725586
    6. '1' → logprob: -11.000173568725586
    7. '[a' → logprob: -12.000173568725586
    8. '   ' → logprob: -12.875173568725586
    9. ' ' → logprob: -13.250173568725586
    10. '  ' → logprob: -15.125173568725586

Token 71: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008585774339735508
    2. ')>' → logprob: -7.250858783721924
    3. ' )' → logprob: -9.625858306884766
    4. ')>=' → logprob: -9.875858306884766
    5. '>)' → logprob: -11.625858306884766
    6. '）' → logprob: -12.375858306884766
    7. '>' → logprob: -12.500858306884766
    8. ')`' → logprob: -12.625858306884766
    9. '])' → logprob: -12.875858306884766
    10. '`)' → logprob: -13.375858306884766

Token 72: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5245914459228516
    2. '>' → logprob: -1.8995914459228516
    3. ' <' → logprob: -2.0245914459228516
    4. ' >' → logprob: -2.8995914459228516
    5. '<=' → logprob: -3.5245914459228516
    6. '>=' → logprob: -4.024591445922852
    7. ' <=' → logprob: -4.399591445922852
    8. '==' → logprob: -5.274591445922852
    9. ' >=' → logprob: -5.899591445922852
    10. ' ==' → logprob: -6.274591445922852

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005824613617733121
    2. ' k' → logprob: -7.500582695007324
    3. ' ' → logprob: -11.375582695007324
    4. '   ' → logprob: -11.875582695007324
    5. '	k' → logprob: -12.875582695007324
    6. '2' → logprob: -13.375582695007324
    7. '1' → logprob: -13.500582695007324
    8. '5' → logprob: -14.250582695007324
    9. '10' → logprob: -14.250582695007324
    10. '  ' → logprob: -14.375582695007324

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002015836536884308
    2. ' :' → logprob: -6.752016067504883
    3. ':
' → logprob: -7.127016067504883
    4. '):' → logprob: -10.627016067504883
    5. ' :
' → logprob: -12.252016067504883
    6. ':return' → logprob: -12.252016067504883
    7. ')' → logprob: -12.877016067504883
    8. ' ' → logprob: -14.002016067504883
    9. '   ' → logprob: -14.002016067504883
    10. ' and' → logprob: -14.502016067504883

Token 75: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3347072899341583
    2. '   ' → logprob: -2.584707260131836
    3. ':' → logprob: -2.834707260131836
    4. '    ' → logprob: -3.209707260131836
    5. '=' → logprob: -3.209707260131836
    6. '\n' → logprob: -4.084707260131836
    7. ' ans' → logprob: -4.584707260131836
    8. ')' → logprob: -4.584707260131836
    9. ' =' → logprob: -4.959707260131836
    10. '       ' → logprob: -5.459707260131836

Token 76: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3184000551700592
    2. ' ans' → logprob: -1.3184000253677368
    3. '\n' → logprob: -6.193399906158447
    4. '   ' → logprob: -6.693399906158447
    5. '	ans' → logprob: -6.818399906158447
    6. '(ans' → logprob: -8.443400382995605
    7. '
' → logprob: -8.568400382995605
    8. ' 
' → logprob: -9.318400382995605
    9. '\' → logprob: -10.193400382995605
    10. ' ' → logprob: -10.443400382995605

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408589720726013
    2. ' =' → logprob: -0.9740859270095825
    3. ' ' → logprob: -12.099085807800293
    4. '+=' → logprob: -13.724085807800293
    5. ' +=' → logprob: -13.849085807800293
    6. ' ="' → logprob: -14.974085807800293
    7. ' *=' → logprob: -15.724085807800293
    8. ',' → logprob: -15.849085807800293
    9. '="' → logprob: -16.22408676147461
    10. ' ='' → logprob: -16.22408676147461

Token 78: ' ":' (ID: 27274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024884648621082306
    2. '"No' → logprob: -4.1498847007751465
    3. '":' → logprob: -5.1498847007751465
    4. ' "' → logprob: -6.5248847007751465
    5. '"N' → logprob: -6.8998847007751465
    6. '"B' → logprob: -9.274884223937988
    7. '"S' → logprob: -9.399884223937988
    8. '"Oh' → logprob: -9.649884223937988
    9. '"O' → logprob: -9.774884223937988
    10. '"s' → logprob: -10.149884223937988

Token 79: '("
' (ID: 193063)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06719508767127991
    2. '("' → logprob: -3.317195177078247
    3. ''(' → logprob: -4.442194938659668
    4. '"' → logprob: -5.067194938659668
    5. '"(' → logprob: -5.067194938659668
    6. ''' → logprob: -6.067194938659668
    7. '(":' → logprob: -7.817194938659668
    8. '")' → logprob: -8.192194938659668
    9. '("("' → logprob: -8.192194938659668
    10. '((' → logprob: -8.317194938659668

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028936810791492462
    2. 'break' → logprob: -4.403936862945557
    3. '       ' → logprob: -4.778936862945557
    4. '   ' → logprob: -5.028936862945557
    5. '\n' → logprob: -7.278936862945557
    6. '```' → logprob: -8.653936386108398
    7. ' break' → logprob: -9.028936386108398
    8. ' print' → logprob: -9.153936386108398
    9. '           ' → logprob: -9.153936386108398
    10. '    ' → logprob: -9.903936386108398

Token 81: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.006721655838191509
    2. '(' → logprob: -5.006721496582031
    3. 'ans' → logprob: -12.131721496582031
    4. '(
' → logprob: -15.131721496582031
    5. ' (' → logprob: -15.131721496582031
    6. '("("' → logprob: -15.256721496582031
    7. '(answer' → logprob: -16.38172149658203
    8. '(

' → logprob: -17.13172149658203
    9. '(a' → logprob: -17.38172149658203
    10. '("' → logprob: -17.88172149658203

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. ')`' → logprob: -17.875
    4. '))' → logprob: -18.375
    5. ')
' → logprob: -19.125
    6. '')' → logprob: -19.5
    7. '`)' → logprob: -20.25
    8. '")' → logprob: -20.375
    9. '）' → logprob: -20.625
    10. ')#' → logprob: -21.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 80
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 28.75%
Précision adaptée (1ère position): 30.00%
Précision (top 10): 73.75%
================================================================================
