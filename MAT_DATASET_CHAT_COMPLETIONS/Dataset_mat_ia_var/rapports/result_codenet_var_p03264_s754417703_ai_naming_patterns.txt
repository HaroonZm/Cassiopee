================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())
quotient, remainder = divmod(input_value, 2)
result = quotient * (quotient + remainder)
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2533738315105438
    2. '"' → logprob: -2.628373861312866
    3. 'input' → logprob: -2.628373861312866
    4. ' input' → logprob: -3.253373861312866
    5. ' "' → logprob: -4.003373622894287
    6. ''' → logprob: -4.503373622894287
    7. ' '' → logprob: -5.753373622894287
    8. '0' → logprob: -6.003373622894287
    9. ' a' → logprob: -6.753373622894287
    10. '_' → logprob: -7.003373622894287

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002594799967482686
    2. '(input' → logprob: -6.377594947814941
    3. '```' → logprob: -7.877594947814941
    4. '('' → logprob: -9.252594947814941
    5. '[' → logprob: -9.502594947814941
    6. '`' → logprob: -9.752594947814941
    7. '("("' → logprob: -10.252594947814941
    8. ''' → logprob: -10.252594947814941
    9. '()' → logprob: -10.377594947814941
    10. ' (' → logprob: -10.502594947814941

Token 5: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11737767606973648
    2. '(' → logprob: -2.742377758026123
    3. '())' → logprob: -3.242377758026123
    4. '()' → logprob: -4.992377758026123
    5. '))' → logprob: -8.492377281188965
    6. '")' → logprob: -9.867377281188965
    7. '')' → logprob: -9.992377281188965
    8. '[' → logprob: -10.992377281188965
    9. '`)' → logprob: -11.117377281188965
    10. ' )' → logprob: -11.242377281188965

Token 6: 'quot' (ID: 17555)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22554591298103333
    2. '*' → logprob: -2.225545883178711
    3. '%' → logprob: -2.725545883178711
    4. 'if' → logprob: -4.475545883178711
    5. ')' → logprob: -5.600545883178711
    6. ' if' → logprob: -5.850545883178711
    7. '#' → logprob: -5.975545883178711
    8. '```' → logprob: -6.350545883178711
    9. '+
' → logprob: -6.975545883178711
    10. '\' → logprob: -7.350545883178711

Token 7: 'ient' (ID: 773)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3142333924770355
    2. 'ient' → logprob: -1.439233422279358
    3. '_ent' → logprob: -4.314233303070068
    4. 'ent' → logprob: -4.689233303070068
    5. 'e' → logprob: -6.439233303070068
    6. '.' → logprob: -6.564233303070068
    7. '=' → logprob: -6.939233303070068
    8. '_en' → logprob: -7.064233303070068
    9. '```' → logprob: -7.314233303070068
    10. '__' → logprob: -7.439233303070068

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26723435521125793
    2. '_' → logprob: -1.8922343254089355
    3. '=' → logprob: -3.5172343254089355
    4. ')' → logprob: -3.8922343254089355
    5. ' =' → logprob: -4.3922343254089355
    6. '```' → logprob: -5.1422343254089355
    7. '()' → logprob: -5.3922343254089355
    8. ',' → logprob: -6.0172343254089355
    9. '_div' → logprob: -6.3922343254089355
    10. '*' → logprob: -6.8922343254089355

Token 9: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.014741822145879269
    2. 're' → logprob: -4.264741897583008
    3. 'mod' → logprob: -8.514741897583008
    4. ' modulus' → logprob: -9.014741897583008
    5. '_re' → logprob: -9.639741897583008
    6. '=' → logprob: -10.139741897583008
    7. 'rest' → logprob: -10.389741897583008
    8. ' input' → logprob: -10.514741897583008
    9. '=re' → logprob: -10.764741897583008
    10. ' ' → logprob: -10.764741897583008

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07898430526256561
    2. '=' → logprob: -2.578984260559082
    3. ' ' → logprob: -10.078984260559082
    4. ',' → logprob: -10.203984260559082
    5. ')' → logprob: -12.328984260559082
    6. '<|end|>' → logprob: -12.578984260559082
    7. ' =
' → logprob: -13.453984260559082
    8. ' =)' → logprob: -13.953984260559082
    9. '_' → logprob: -14.453984260559082
    10. '"' → logprob: -14.578984260559082

Token 11: ' div' (ID: 4223)
  Prédit: ' div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -0.2783131003379822
    2. 'div' → logprob: -1.653313159942627
    3. ' input' → logprob: -3.028313159942627
    4. 'input' → logprob: -5.778313159942627
    5. ' ' → logprob: -10.528312683105469
    6. '	div' → logprob: -12.653312683105469
    7. '0' → logprob: -14.278312683105469
    8. '<div' → logprob: -14.403312683105469
    9. '(input' → logprob: -14.653312683105469
    10. '_div' → logprob: -14.653312683105469

Token 12: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014753920957446098
    2. 'ision' → logprob: -4.889753818511963
    3. 'ide' → logprob: -5.014753818511963
    4. '(input' → logprob: -8.389754295349121
    5. 'input' → logprob: -9.014754295349121
    6. '(' → logprob: -10.264754295349121
    7. '```' → logprob: -10.764754295349121
    8. '%' → logprob: -10.889754295349121
    9. '_mod' → logprob: -11.514754295349121
    10. '(mod' → logprob: -11.764754295349121

Token 13: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023257127031683922
    2. '(' → logprob: -3.77325701713562
    3. '(
' → logprob: -12.3982572555542
    4. '(value' → logprob: -12.8982572555542
    5. ' (' → logprob: -13.2732572555542
    6. '(user' → logprob: -13.6482572555542
    7. '((' → logprob: -15.0232572555542
    8. '(

' → logprob: -15.2732572555542
    9. '(open' → logprob: -15.2732572555542
    10. '(output' → logprob: -15.6482572555542

Token 14: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1279553291387856e-05
    2. ')_' → logprob: -12.000011444091797
    3. '_val' → logprob: -12.875011444091797
    4. '_input' → logprob: -13.750011444091797
    5. ')' → logprob: -14.750011444091797
    6. '_' → logprob: -15.250011444091797
    7. 'value' → logprob: -15.625011444091797
    8. '_values' → logprob: -15.875011444091797
    9. '_token' → logprob: -16.000011444091797
    10. ' _' → logprob: -16.375011444091797

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002912486088462174
    2. ')' → logprob: -8.875290870666504
    3. '`,' → logprob: -9.500290870666504
    4. ',input' → logprob: -10.375290870666504
    5. ' ,' → logprob: -10.875290870666504
    6. '',' → logprob: -11.625290870666504
    7. '",' → logprob: -12.000290870666504
    8. '),' → logprob: -12.625290870666504
    9. '2' → logprob: -13.125290870666504
    10. 'input' → logprob: -13.875290870666504

Token 16: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6398210525512695
    2. ' ' → logprob: -1.0148210525512695
    3. '2' → logprob: -2.2648210525512695
    4. '100' → logprob: -5.7648210525512695
    5. '5' → logprob: -6.6398210525512695
    6. '4' → logprob: -7.6398210525512695
    7. '3' → logprob: -7.7648210525512695
    8. '20' → logprob: -8.38982105255127
    9. '1' → logprob: -8.76482105255127
    10. '32' → logprob: -8.76482105255127

Token 17: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4016602039337158
    2. '10' → logprob: -1.1516602039337158
    3. '3' → logprob: -5.401659965515137
    4. '5' → logprob: -5.526659965515137
    5. ' ' → logprob: -6.026659965515137
    6. '100' → logprob: -6.151659965515137
    7. '7' → logprob: -7.526659965515137
    8. '4' → logprob: -7.901659965515137
    9. '1' → logprob: -8.526659965515137
    10. '12' → logprob: -9.401659965515137

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.500000953674316
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -16.75
    5. ' )' → logprob: -17.0
    6. '`)' → logprob: -18.0
    7. '')' → logprob: -18.0
    8. '),' → logprob: -18.5
    9. ')

' → logprob: -19.0
    10. '()' → logprob: -19.375

Token 19: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6456659436225891
    2. 'print' → logprob: -1.0206658840179443
    3. ':' → logprob: -3.1456658840179443
    4. ' if' → logprob: -3.6456658840179443
    5. '#' → logprob: -4.270666122436523
    6. '\n' → logprob: -5.270666122436523
    7. ')' → logprob: -5.770666122436523
    8. '*' → logprob: -5.895666122436523
    9. '```' → logprob: -6.020666122436523
    10. '
' → logprob: -6.270666122436523

Token 20: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4515037536621094
    2. '=' → logprob: -1.9515037536621094
    3. ' =' → logprob: -2.2015037536621094
    4. '_' → logprob: -2.5765037536621094
    5. ')' → logprob: -5.076503753662109
    6. '<|end|>' → logprob: -5.201503753662109
    7. '```' → logprob: -5.326503753662109
    8. ' ' → logprob: -5.701503753662109
    9. '[]' → logprob: -6.076503753662109
    10. '(' → logprob: -6.326503753662109

Token 21: ' quotient' (ID: 169302)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.5418079495429993
    2. 're' → logprob: -1.9168078899383545
    3. ' quotient' → logprob: -2.1668078899383545
    4. ' remainder' → logprob: -2.5418078899383545
    5. '"' → logprob: -3.4168078899383545
    6. ''' → logprob: -3.6668078899383545
    7. 'str' → logprob: -4.666808128356934
    8. ' str' → logprob: -5.666808128356934
    9. ' '' → logprob: -6.291808128356934
    10. ' "' → logprob: -6.916808128356934

Token 22: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8192993998527527
    2. '+' → logprob: -0.9442993998527527
    3. '%' → logprob: -2.3192994594573975
    4. '*' → logprob: -3.3192994594573975
    5. ' %' → logprob: -4.194299221038818
    6. ' *' → logprob: -4.194299221038818
    7. ' if' → logprob: -5.819299221038818
    8. 'if' → logprob: -6.569299221038818
    9. '-' → logprob: -8.444299697875977
    10. '<|end|>' → logprob: -8.569299697875977

Token 23: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1222321167588234
    2. '10' → logprob: -2.49723219871521
    3. '"' → logprob: -4.247231960296631
    4. ''' → logprob: -4.872231960296631
    5. '3' → logprob: -5.372231960296631
    6. ' ' → logprob: -6.247231960296631
    7. ''*' → logprob: -6.747231960296631
    8. '4' → logprob: -7.372231960296631
    9. '1' → logprob: -7.622231960296631
    10. '5' → logprob: -7.747231960296631

Token 24: 'quot' (ID: 17555)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05150185152888298
    2. '10' → logprob: -3.176501750946045
    3. '3' → logprob: -5.676501750946045
    4. ' ' → logprob: -6.176501750946045
    5. 're' → logprob: -7.176501750946045
    6. '1' → logprob: -7.301501750946045
    7. ''' → logprob: -8.176502227783203
    8. '4' → logprob: -8.426502227783203
    9. 'input' → logprob: -8.551502227783203
    10. 'quot' → logprob: -8.676502227783203

Token 25: 'ient' (ID: 773)
  Prédit: 'ient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00271416874602437
    2. 'ent' → logprob: -6.627714157104492
    3. 'ot' → logprob: -6.877714157104492
    4. '+' → logprob: -9.502714157104492
    5. '   ' → logprob: -9.502714157104492
    6. '```' → logprob: -10.377714157104492
    7. '_' → logprob: -10.877714157104492
    8. '%' → logprob: -11.002714157104492
    9. '*' → logprob: -11.127714157104492
    10. '1' → logprob: -11.627714157104492

Token 26: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3217017650604248
    2. '+' → logprob: -1.6967017650604248
    3. ' -' → logprob: -2.446701765060425
    4. '-' → logprob: -5.321702003479004
    5. ')' → logprob: -9.071702003479004
    6. '2' → logprob: -9.196702003479004
    7. ' )' → logprob: -10.196702003479004
    8. ' *' → logprob: -11.321702003479004
    9. '4' → logprob: -11.571702003479004
    10. ' ' → logprob: -11.571702003479004

Token 27: ' remainder' (ID: 47056)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002858370542526245
    2. ' ' → logprob: -5.8778581619262695
    3. ')' → logprob: -9.87785816192627
    4. '  ' → logprob: -14.62785816192627
    5. ' remainder' → logprob: -15.00285816192627
    6. ' )' → logprob: -15.12785816192627
    7. '<|end|>' → logprob: -15.37785816192627
    8. '   ' → logprob: -15.37785816192627
    9. '```' → logprob: -15.62785816192627
    10. '"' → logprob: -16.377859115600586

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. ' )' → logprob: -10.87503433227539
    3. '*' → logprob: -12.25003433227539
    4. '+' → logprob: -12.62503433227539
    5. '))' → logprob: -13.12503433227539
    6. '```' → logprob: -14.00003433227539
    7. ')
' → logprob: -14.25003433227539
    8. ')`' → logprob: -14.37503433227539
    9. '`)' → logprob: -14.50003433227539
    10. '**' → logprob: -14.62503433227539

Token 29: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016034134896472096
    2. '(result' → logprob: -6.501603603363037
    3. '("("' → logprob: -9.626603126525879
    4. '('' → logprob: -10.376603126525879
    5. ' (' → logprob: -14.001603126525879
    6. '()' → logprob: -14.251603126525879
    7. '(

' → logprob: -15.001603126525879
    8. '(`' → logprob: -15.126603126525879
    9. '((' → logprob: -15.376603126525879
    10. '(output' → logprob: -15.626603126525879

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '))' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.500003814697266
    4. '')' → logprob: -16.625003814697266
    5. ')`' → logprob: -17.125003814697266
    6. '`)' → logprob: -17.375003814697266
    7. ')))' → logprob: -18.625003814697266
    8. ')
' → logprob: -19.000003814697266
    9. '）' → logprob: -19.125003814697266
    10. '```' → logprob: -19.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 29
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 23
Précision stricte (1ère position): 37.93%
Précision adaptée (1ère position): 37.93%
Précision (top 10): 79.31%
================================================================================
