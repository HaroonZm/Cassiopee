================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import itertools
import operator
import functools

def solve(X: int, Y: int, Z: int):
    args = (X, Y, Z)
    indices = [2, 0, 1]
    result = tuple(operator.getitem(args, i) for i in indices)
    print(*result)

def main():
    tokens = functools.reduce(
        lambda z, y: itertools.chain(z, y),
        map(str.split, sys.stdin),
        []
    )
    tokens_iter = iter(tokens)
    input_values = list(
        map(int, itertools.islice(tokens_iter, 3))
    )
    functools.partial(solve, *input_values)()
    
if __name__ == '__main__':
    list(map(lambda f: f(), [main]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00023321842309087515
    2. 'os' → logprob: -8.37523365020752
    3. ' math' → logprob: -13.87523365020752
    4. ' re' → logprob: -14.37523365020752
    5. '"os' → logprob: -14.87523365020752
    6. ' json' → logprob: -15.12523365020752
    7. '_os' → logprob: -15.87523365020752
    8. '	os' → logprob: -16.375232696533203
    9. ' ' → logprob: -16.750232696533203
    10. ' ' → logprob: -17.000232696533203

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0007373234839178622
    2. '\' → logprob: -8.875737190246582
    3. 'import' → logprob: -8.875737190246582
    4. '\n' → logprob: -9.000737190246582
    5. '.
' → logprob: -9.375737190246582
    6. ',' → logprob: -9.500737190246582
    7. '```' → logprob: -10.375737190246582
    8. 'newline' → logprob: -10.875737190246582
    9. '<|end|>' → logprob: -11.000737190246582
    10. '<|end|>' → logprob: -11.125737190246582

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018302230164408684
    2. 'import' → logprob: -5.0183024406433105
    3. '\' → logprob: -5.6433024406433105
    4. '```' → logprob: -5.7683024406433105
    5. '\n' → logprob: -6.1433024406433105
    6. '.
' → logprob: -6.8933024406433105
    7. ',' → logprob: -8.018301963806152
    8. ' as' → logprob: -8.268301963806152
    9. 'from' → logprob: -8.893301963806152
    10. '.

' → logprob: -8.893301963806152

Token 7: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6951577067375183
    2. ' collections' → logprob: -1.445157766342163
    3. 'os' → logprob: -2.445157766342163
    4. ' math' → logprob: -2.570157766342163
    5. 'collections' → logprob: -3.070157766342163
    6. ' functools' → logprob: -3.320157766342163
    7. 'math' → logprob: -4.445157527923584
    8. ' operator' → logprob: -5.820157527923584
    9. ' re' → logprob: -6.820157527923584
    10. 'fun' → logprob: -6.820157527923584

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15002360939979553
    2. ',' → logprob: -2.9000236988067627
    3. '\' → logprob: -3.7750236988067627
    4. 'import' → logprob: -3.7750236988067627
    5. '\n' → logprob: -4.275023460388184
    6. 'from' → logprob: -5.150023460388184
    7. '```' → logprob: -5.525023460388184
    8. '#' → logprob: -5.775023460388184
    9. 'def' → logprob: -6.650023460388184
    10. '_' → logprob: -6.650023460388184

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.034530431032180786
    2. ',' → logprob: -4.2845306396484375
    3. '\' → logprob: -5.5345306396484375
    4. 'import' → logprob: -5.6595306396484375
    5. '```' → logprob: -5.6595306396484375
    6. '(' → logprob: -5.9095306396484375
    7. 'from' → logprob: -6.6595306396484375
    8. '.
' → logprob: -7.0345306396484375
    9. '\n' → logprob: -7.4095306396484375
    10. 'def' → logprob: -7.5345306396484375

Token 10: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.10562853515148163
    2. ' collections' → logprob: -2.855628490447998
    3. 'fun' → logprob: -3.855628490447998
    4. 'collections' → logprob: -4.480628490447998
    5. ' math' → logprob: -5.105628490447998
    6. ' os' → logprob: -6.105628490447998
    7. 'math' → logprob: -6.855628490447998
    8. 'os' → logprob: -7.480628490447998
    9. ' fun' → logprob: -9.855628967285156
    10. ' re' → logprob: -10.230628967285156

Token 11: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12951160967350006
    2. '\' → logprob: -3.254511594772339
    3. 'import' → logprob: -3.629511594772339
    4. '\n' → logprob: -3.879511594772339
    5. ',' → logprob: -4.504511833190918
    6. '```' → logprob: -5.254511833190918
    7. '#' → logprob: -5.504511833190918
    8. 'def' → logprob: -5.754511833190918
    9. ' as' → logprob: -6.379511833190918
    10. '
' → logprob: -6.504511833190918

Token 12: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03461403399705887
    2. '\' → logprob: -4.159614086151123
    3. ',' → logprob: -5.284614086151123
    4. 'import' → logprob: -6.034614086151123
    5. '=' → logprob: -6.159614086151123
    6. 'def' → logprob: -6.284614086151123
    7. '_' → logprob: -6.409614086151123
    8. 'from' → logprob: -6.784614086151123
    9. '#' → logprob: -7.034614086151123
    10. '```' → logprob: -7.159614086151123

Token 13: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10164153575897217
    2. ' factorial' → logprob: -3.2266416549682617
    3. '_' → logprob: -3.4766416549682617
    4. ' main' → logprob: -4.726641654968262
    5. ' calculate' → logprob: -5.601641654968262
    6. ' _' → logprob: -6.101641654968262
    7. ' test' → logprob: -6.226641654968262
    8. ' process' → logprob: -6.601641654968262
    9. ' parse' → logprob: -7.226641654968262
    10. ' compute' → logprob: -7.226641654968262

Token 14: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0351705327630043
    2. '_' → logprob: -3.410170555114746
    3. '```' → logprob: -7.785170555114746
    4. '():' → logprob: -8.660170555114746
    5. ':' → logprob: -8.785170555114746
    6. '(:' → logprob: -8.910170555114746
    7. '_:' → logprob: -9.160170555114746
    8. ' (' → logprob: -9.535170555114746
    9. '):' → logprob: -9.785170555114746
    10. '(
' → logprob: -10.410170555114746

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3497266173362732
    2. ',' → logprob: -1.224726676940918
    3. ':' → logprob: -7.224726676940918
    4. ')' → logprob: -7.974726676940918
    5. '[' → logprob: -9.974726676940918
    6. ' ):' → logprob: -9.974726676940918
    7. '=' → logprob: -10.099726676940918
    8. ' ,' → logprob: -11.474726676940918
    9. '):
' → logprob: -11.849726676940918
    10. '[]):' → logprob: -12.224726676940918

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25401854515075684
    2. ' int' → logprob: -1.5040185451507568
    3. ' str' → logprob: -6.754018783569336
    4. 'str' → logprob: -8.254018783569336
    5. ')' → logprob: -8.379018783569336
    6. '[int' → logprob: -9.129018783569336
    7. 'List' → logprob: -9.379018783569336
    8. ' list' → logprob: -9.629018783569336
    9. 'list' → logprob: -10.004018783569336
    10. ' List' → logprob: -10.254018783569336

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1829281449317932
    2. ')' → logprob: -1.9329280853271484
    3. '):' → logprob: -3.8079280853271484
    4. ' ,' → logprob: -8.682928085327148
    5. ' )' → logprob: -10.932928085327148
    6. ')->' → logprob: -11.432928085327148
    7. ':' → logprob: -11.557928085327148
    8. ',int' → logprob: -12.057928085327148
    9. ',)' → logprob: -12.182928085327148
    10. '=' → logprob: -12.682928085327148

Token 18: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.12969046831130981
    2. 'Y' → logprob: -2.629690408706665
    3. ' N' → logprob: -3.879690408706665
    4. ' K' → logprob: -4.879690647125244
    5. ' n' → logprob: -5.879690647125244
    6. ' M' → logprob: -6.004690647125244
    7. ' L' → logprob: -6.254690647125244
    8. 'N' → logprob: -6.379690647125244
    9. ' T' → logprob: -6.754690647125244
    10. ' lst' → logprob: -6.942190647125244

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04617142304778099
    2. '):' → logprob: -3.9211714267730713
    3. ')' → logprob: -4.046171188354492
    4. ',' → logprob: -4.921171188354492
    5. ':int' → logprob: -7.796171188354492
    6. ' :' → logprob: -10.046171188354492
    7. '=' → logprob: -11.171171188354492
    8. ' ,' → logprob: -12.171171188354492
    9. '[int' → logprob: -12.171171188354492
    10. '1' → logprob: -12.546171188354492

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11295637488365173
    2. ' int' → logprob: -2.2379562854766846
    3. ')' → logprob: -9.612956047058105
    4. '[int' → logprob: -10.737956047058105
    5. ' str' → logprob: -11.237956047058105
    6. ' ' → logprob: -11.737956047058105
    7. 'str' → logprob: -11.862956047058105
    8. ':int' → logprob: -12.862956047058105
    9. '(int' → logprob: -12.987956047058105
    10. '	int' → logprob: -13.362956047058105

Token 21: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056278642266988754
    2. '):' → logprob: -3.056278705596924
    3. ',' → logprob: -4.931278705596924
    4. ')->' → logprob: -7.931278705596924
    5. ':' → logprob: -10.181278228759766
    6. ' )' → logprob: -12.306278228759766
    7. '`)' → logprob: -12.431278228759766
    8. '```' → logprob: -12.431278228759766
    9. '   ' → logprob: -12.556278228759766
    10. '->' → logprob: -12.681278228759766

Token 22: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.3852365016937256
    2. ' Z' → logprob: -1.3852365016937256
    3. 'N' → logprob: -4.010236740112305
    4. ' N' → logprob: -5.010236740112305
    5. 'K' → logprob: -5.260236740112305
    6. 'A' → logprob: -5.760236740112305
    7. ' M' → logprob: -5.760236740112305
    8. 'M' → logprob: -5.760236740112305
    9. ' K' → logprob: -5.885236740112305
    10. ' W' → logprob: -5.885236740112305

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11930981278419495
    2. '):' → logprob: -2.369309902191162
    3. ')' → logprob: -4.119309902191162
    4. ',' → logprob: -6.119309902191162
    5. ':int' → logprob: -8.369309425354004
    6. ' :' → logprob: -9.244309425354004
    7. '=' → logprob: -9.869309425354004
    8. '```' → logprob: -10.869309425354004
    9. ' ):' → logprob: -11.619309425354004
    10. '   ' → logprob: -12.119309425354004

Token 24: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02353382110595703
    2. ' int' → logprob: -3.773533821105957
    3. ')' → logprob: -8.773533821105957
    4. '[int' → logprob: -10.148533821105957
    5. 'List' → logprob: -10.773533821105957
    6. '(int' → logprob: -11.148533821105957
    7. 'str' → logprob: -11.273533821105957
    8. '):' → logprob: -11.648533821105957
    9. ' str' → logprob: -12.023533821105957
    10. 'float' → logprob: -12.023533821105957

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16050255298614502
    2. ')' → logprob: -1.910502552986145
    3. ',' → logprob: -9.410502433776855
    4. '):
' → logprob: -10.035502433776855
    5. ')->' → logprob: -10.035502433776855
    6. ':' → logprob: -10.285502433776855
    7. '```' → logprob: -10.660502433776855
    8. ')>' → logprob: -10.785502433776855
    9. '>):' → logprob: -12.660502433776855
    10. '   ' → logprob: -12.660502433776855

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07186702638864517
    2. '```' → logprob: -3.196866989135742
    3. '\n' → logprob: -4.946866989135742
    4. ':' → logprob: -5.071866989135742
    5. '    
' → logprob: -5.196866989135742
    6. '\' → logprob: -5.446866989135742
    7. '    ' → logprob: -6.196866989135742
    8. '
' → logprob: -6.946866989135742
    9. '' → logprob: -8.321866989135742
    10. '``' → logprob: -8.321866989135742

Token 27: ' args' (ID: 4966)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9388613104820251
    2. 'n' → logprob: -1.93886137008667
    3. '    ' → logprob: -1.93886137008667
    4. '\n' → logprob: -2.56386137008667
    5. '\' → logprob: -3.06386137008667
    6. ' n' → logprob: -3.68886137008667
    7. 'result' → logprob: -3.81386137008667
    8. '    
' → logprob: -3.93886137008667
    9. '```' → logprob: -3.93886137008667
    10. ' 
' → logprob: -4.18886137008667

Token 28: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24382971227169037
    2. ' =' → logprob: -2.2438297271728516
    3. '=' → logprob: -2.3688297271728516
    4. ' .' → logprob: -5.118829727172852
    5. '[' → logprob: -5.618829727172852
    6. ',' → logprob: -5.618829727172852
    7. '   ' → logprob: -6.618829727172852
    8. '=[]' → logprob: -7.118829727172852
    9. ')' → logprob: -8.118829727172852
    10. '[:]' → logprob: -8.493829727172852

Token 29: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.860014796257019
    2. ' (' → logprob: -1.610014796257019
    3. '[' → logprob: -2.2350149154663086
    4. '[X' → logprob: -2.2350149154663086
    5. '(X' → logprob: -2.9850149154663086
    6. '(sys' → logprob: -3.7350149154663086
    7. '   ' → logprob: -4.485014915466309
    8. '(' → logprob: -4.485014915466309
    9. '[f' → logprob: -4.610014915466309
    10. 'sys' → logprob: -4.985014915466309

Token 30: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0032720642630010843
    2. ' X' → logprob: -5.75327205657959
    3. ')' → logprob: -9.75327205657959
    4. '   ' → logprob: -10.37827205657959
    5. '	X' → logprob: -14.00327205657959
    6. ' ' → logprob: -14.12827205657959
    7. '  ' → logprob: -14.25327205657959
    8. 'x' → logprob: -14.25327205657959
    9. '0' → logprob: -14.75327205657959
    10. '_X' → logprob: -15.00327205657959

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ',Y' → logprob: -13.00003433227539
    4. ',
' → logprob: -15.37503433227539
    5. '   ' → logprob: -16.25003433227539
    6. '+' → logprob: -16.75003433227539
    7. ' ' → logprob: -17.37503433227539
    8. ')' → logprob: -17.50003433227539
    9. '‌,' → logprob: -18.87503433227539
    10. ',Z' → logprob: -18.87503433227539

Token 32: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.2811874449253082
    2. ' Y' → logprob: -1.4061874151229858
    3. ' ' → logprob: -11.156187057495117
    4. '	Y' → logprob: -11.906187057495117
    5. ')' → logprob: -12.031187057495117
    6. '   ' → logprob: -12.656187057495117
    7. ',' → logprob: -13.156187057495117
    8. '  ' → logprob: -13.406187057495117
    9. '    ' → logprob: -14.406187057495117
    10. ',Y' → logprob: -14.468687057495117

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.043078898685053e-05
    2. ')' → logprob: -10.000090599060059
    3. ',Z' → logprob: -10.875090599060059
    4. '[' → logprob: -11.500090599060059
    5. ' ,' → logprob: -11.625090599060059
    6. '   ' → logprob: -12.500090599060059
    7. ',)' → logprob: -13.500090599060059
    8. 'Z' → logprob: -14.500090599060059
    9. ',
' → logprob: -14.875090599060059
    10. '),' → logprob: -15.375090599060059

Token 34: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.6931799054145813
    2. ' Z' → logprob: -0.6931799054145813
    3. ')' → logprob: -11.068180084228516
    4. ' ' → logprob: -12.193180084228516
    5. '    ' → logprob: -12.943180084228516
    6. ',' → logprob: -13.568180084228516
    7. ' and' → logprob: -13.755680084228516
    8. ' )' → logprob: -14.193180084228516
    9. ',Z' → logprob: -14.255680084228516
    10. '	Z' → logprob: -14.380680084228516

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032032581511884928
    2. ')
' → logprob: -5.753203392028809
    3. '   ' → logprob: -11.878203392028809
    4. ',' → logprob: -12.253203392028809
    5. '))' → logprob: -12.253203392028809
    6. '[' → logprob: -12.628203392028809
    7. ')

' → logprob: -13.503203392028809
    8. '[::-' → logprob: -13.503203392028809
    9. ')
' → logprob: -14.503203392028809
    10. ' )' → logprob: -14.628203392028809

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22497178614139557
    2. '   ' → logprob: -1.7249717712402344
    3. '    
' → logprob: -4.474971771240234
    4. ')' → logprob: -6.474971771240234
    5. ':' → logprob: -6.474971771240234
    6. '\n' → logprob: -6.474971771240234
    7. '```' → logprob: -6.599971771240234
    8. ')
' → logprob: -6.849971771240234
    9. ':
' → logprob: -6.849971771240234
    10. ',
' → logprob: -7.349971771240234

Token 37: ' indices' (ID: 30378)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1981942653656006
    2. 'result' → logprob: -1.5731942653656006
    3. ' return' → logprob: -1.6981942653656006
    4. '   ' → logprob: -1.8231942653656006
    5. ' result' → logprob: -2.6981942653656006
    6. 'res' → logprob: -4.19819450378418
    7. ' for' → logprob: -4.57319450378418
    8. ')' → logprob: -4.69819450378418
    9. 'for' → logprob: -4.94819450378418
    10. 'max' → logprob: -5.19819450378418

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043003883212804794
    2. '=' → logprob: -3.168003797531128
    3. '_' → logprob: -13.793004035949707
    4. ' =)' → logprob: -14.168004035949707
    5. '=[]' → logprob: -14.418004035949707
    6. ' =[' → logprob: -14.543004035949707
    7. '[' → logprob: -15.168004035949707
    8. ')' → logprob: -15.168004035949707
    9. '   ' → logprob: -15.293004035949707
    10. 's' → logprob: -15.418004035949707

Token 39: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1022422313690186
    2. ' range' → logprob: -1.3522422313690186
    3. '[' → logprob: -1.8522422313690186
    4. ' [' → logprob: -1.9772422313690186
    5. '(' → logprob: -2.8522422313690186
    6. ' (' → logprob: -3.7272422313690186
    7. ' list' → logprob: -4.477242469787598
    8. 'list' → logprob: -4.977242469787598
    9. ' itertools' → logprob: -5.227242469787598
    10. 'it' → logprob: -6.227242469787598

Token 40: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013560286723077297
    2. 'i' → logprob: -4.5135602951049805
    3. 'x' → logprob: -7.3885602951049805
    4. ' i' → logprob: -7.5135602951049805
    5. '1' → logprob: -7.8885602951049805
    6. '(i' → logprob: -8.13856029510498
    7. ' ' → logprob: -8.26356029510498
    8. '*' → logprob: -9.38856029510498
    9. '(' → logprob: -9.38856029510498
    10. '2' → logprob: -10.01356029510498

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013872806914150715
    2. ']' → logprob: -4.8888726234436035
    3. ' ,' → logprob: -5.2638726234436035
    4. ')' → logprob: -8.638873100280762
    5. ' for' → logprob: -8.638873100280762
    6. ' -' → logprob: -9.263873100280762
    7. '-' → logprob: -9.513873100280762
    8. ' ' → logprob: -9.513873100280762
    9. ' ]' → logprob: -9.513873100280762
    10. '1' → logprob: -9.763873100280762

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6583796143531799
    2. '0' → logprob: -1.1583795547485352
    3. '1' → logprob: -1.7833795547485352
    4. '3' → logprob: -8.408379554748535
    5. '4' → logprob: -11.158379554748535
    6. '5' → logprob: -12.658379554748535
    7. '  ' → logprob: -13.408379554748535
    8. '2' → logprob: -13.595879554748535
    9. '7' → logprob: -14.345879554748535
    10. '<|end|>' → logprob: -14.533379554748535

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7150745987892151
    2. '1' → logprob: -0.7150745987892151
    3. ' ' → logprob: -3.8400745391845703
    4. '3' → logprob: -8.71507453918457
    5. '4' → logprob: -11.34007453918457
    6. '5' → logprob: -11.84007453918457
    7. '2' → logprob: -12.46507453918457
    8. '-' → logprob: -12.71507453918457
    9. '6' → logprob: -13.59007453918457
    10. ')' → logprob: -14.02757453918457

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012205826351419091
    2. ']' → logprob: -7.001220703125
    3. ' ,' → logprob: -8.126220703125
    4. ' ]' → logprob: -12.001220703125
    5. '1' → logprob: -12.501220703125
    6. '2' → logprob: -13.751220703125
    7. '   ' → logprob: -14.376220703125
    8. ' ' → logprob: -14.876220703125
    9. '3' → logprob: -14.876220703125
    10. ')' → logprob: -15.001220703125

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151583150029182
    2. ' ' → logprob: -4.018151760101318
    3. '```' → logprob: -14.39315128326416
    4. ')' → logprob: -15.70565128326416
    5. ']' → logprob: -15.76815128326416
    6. '   ' → logprob: -15.83065128326416
    7. '3' → logprob: -16.018152236938477
    8. '`' → logprob: -16.268152236938477
    9. '4' → logprob: -16.330652236938477
    10. '  ' → logprob: -16.393152236938477

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. ' ' → logprob: -7.8753814697265625
    3. ']' → logprob: -14.562881469726562
    4. '```' → logprob: -15.312881469726562
    5. ')' → logprob: -15.687881469726562
    6. '3' → logprob: -15.812881469726562
    7. '0' → logprob: -16.062881469726562
    8. '`' → logprob: -16.312881469726562
    9. '   ' → logprob: -16.625381469726562
    10. '2' → logprob: -16.937881469726562

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022964231902733445
    2. '])' → logprob: -9.250229835510254
    3. ')' → logprob: -9.375229835510254
    4. ' ]' → logprob: -10.375229835510254
    5. ']
' → logprob: -11.625229835510254
    6. '   ' → logprob: -13.000229835510254
    7. ',' → logprob: -13.125229835510254
    8. ')]' → logprob: -13.375229835510254
    9. ']

' → logprob: -14.625229835510254
    10. '```' → logprob: -14.875229835510254

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7754127979278564
    2. 'result' → logprob: -1.2754127979278564
    3. '   ' → logprob: -1.5254127979278564
    4. '    
' → logprob: -4.775412559509277
    5. ')
' → logprob: -4.900412559509277
    6. 'args' → logprob: -5.900412559509277
    7. '[::-' → logprob: -5.900412559509277
    8. 'sorted' → logprob: -6.275412559509277
    9. '\n' → logprob: -6.400412559509277
    10. '```' → logprob: -6.400412559509277

Token 49: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.5776479840278625
    2. '   ' → logprob: -1.5776479244232178
    3. ']' → logprob: -3.3276479244232178
    4. ')' → logprob: -3.8276479244232178
    5. 'sorted' → logprob: -3.8276479244232178
    6. 'res' → logprob: -4.077648162841797
    7. 'args' → logprob: -4.202648162841797
    8. 'per' → logprob: -4.327648162841797
    9. 'selected' → logprob: -4.327648162841797
    10. ' result' → logprob: -4.452648162841797

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016035424545407295
    2. '=' → logprob: -4.141035556793213
    3. 's' → logprob: -15.016035079956055
    4. ' =
' → logprob: -15.141035079956055
    5. '_' → logprob: -15.516035079956055
    6. ' =)' → logprob: -16.016035079956055
    7. ' ' → logprob: -16.266035079956055
    8. ')' → logprob: -16.516035079956055
    9. '  ' → logprob: -17.016035079956055
    10. '=

' → logprob: -17.766035079956055

Token 51: ' tuple' (ID: 31311)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.5153449177742004
    2. ' functools' → logprob: -1.0153448581695557
    3. 'tuple' → logprob: -4.390345096588135
    4. ' tuple' → logprob: -4.390345096588135
    5. 'operator' → logprob: -5.265345096588135
    6. ' operator' → logprob: -5.765345096588135
    7. ' fun' → logprob: -6.015345096588135
    8. 'args' → logprob: -6.515345096588135
    9. ' [' → logprob: -6.765345096588135
    10. '[' → logprob: -7.390345096588135

Token 52: '(operator' (ID: 145734)
  Prédit: '(args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.44454532861709595
    2. '(operator' → logprob: -1.3195452690124512
    3. '(map' → logprob: -2.569545269012451
    4. '(f' → logprob: -4.444545269012451
    5. '(' → logprob: -7.069545269012451
    6. '(fun' → logprob: -7.194545269012451
    7. '(it' → logprob: -7.569545269012451
    8. 'operator' → logprob: -7.944545269012451
    9. 'args' → logprob: -8.44454574584961
    10. '(re' → logprob: -9.19454574584961

Token 53: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.2071809321641922
    2. '.item' → logprob: -1.7071809768676758
    3. '.method' → logprob: -5.957180976867676
    4. '.attr' → logprob: -6.457180976867676
    5. '.mul' → logprob: -7.457180976867676
    6. '.' → logprob: -8.082180976867676
    7. 'getitem' → logprob: -8.957180976867676
    8. '.pow' → logprob: -9.332180976867676
    9. '.eq' → logprob: -9.582180976867676
    10. '.set' → logprob: -10.207180976867676

Token 54: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.03805435076355934
    2. 'attr' → logprob: -3.2880544662475586
    3. 'attribute' → logprob: -12.413054466247559
    4. ' item' → logprob: -12.538054466247559
    5. 'getitem' → logprob: -13.038054466247559
    6. 'tem' → logprob: -13.913054466247559
    7. 'attro' → logprob: -14.163054466247559
    8. ' attr' → logprob: -15.413054466247559
    9. 'at' → logprob: -15.538054466247559
    10. 'att' → logprob: -15.663054466247559

Token 55: '(args' (ID: 14885)
  Prédit: '(args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(args' → logprob: -0.00047475993051193655
    2. ' (' → logprob: -7.75047492980957
    3. ')(' → logprob: -10.75047492980957
    4. ')' → logprob: -11.62547492980957
    5. '(' → logprob: -11.87547492980957
    6. ',args' → logprob: -12.62547492980957
    7. 'args' → logprob: -13.50047492980957
    8. '(indices' → logprob: -14.37547492980957
    9. ' args' → logprob: -14.87547492980957
    10. '(arguments' → logprob: -15.00047492980957

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003038558876141906
    2. ' ,' → logprob: -5.87803840637207
    3. ',i' → logprob: -8.75303840637207
    4. ',index' → logprob: -11.12803840637207
    5. '(i' → logprob: -11.37803840637207
    6. 'indices' → logprob: -11.50303840637207
    7. ')' → logprob: -11.62803840637207
    8. '   ' → logprob: -11.75303840637207
    9. '[i' → logprob: -12.12803840637207
    10. 'i' → logprob: -12.37803840637207

Token 57: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4971385598182678
    2. ' i' → logprob: -1.122138500213623
    3. ' idx' → logprob: -3.247138500213623
    4. 'idx' → logprob: -4.872138500213623
    5. ' index' → logprob: -4.872138500213623
    6. ' indices' → logprob: -5.122138500213623
    7. 'index' → logprob: -5.747138500213623
    8. 'indices' → logprob: -5.997138500213623
    9. ' ix' → logprob: -9.372138977050781
    10. '   ' → logprob: -9.497138977050781

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.550411151489243e-05
    2. '))' → logprob: -10.125055313110352
    3. ' )' → logprob: -12.000055313110352
    4. 's' → logprob: -12.250055313110352
    5. 'for' → logprob: -14.000055313110352
    6. '   ' → logprob: -14.250055313110352
    7. ' ' → logprob: -14.750055313110352
    8. 'x' → logprob: -14.750055313110352
    9. ')`' → logprob: -15.250055313110352
    10. ' for' → logprob: -15.375055313110352

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1787072718143463
    2. 'for' → logprob: -2.3037073612213135
    3. ')' → logprob: -2.9287073612213135
    4. '   ' → logprob: -4.678707122802734
    5. ' ' → logprob: -8.053707122802734
    6. ' )' → logprob: -8.178707122802734
    7. ']' → logprob: -9.428707122802734
    8. 'indices' → logprob: -9.428707122802734
    9. '    ' → logprob: -9.678707122802734
    10. '  ' → logprob: -9.803707122802734

Token 60: ' i' (ID: 575)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.22626489400863647
    2. 'indices' → logprob: -1.6012649536132812
    3. 'i' → logprob: -7.601264953613281
    4. ' i' → logprob: -8.101264953613281
    5. ' index' → logprob: -11.976264953613281
    6. 'indice' → logprob: -11.976264953613281
    7. '"indices' → logprob: -12.101264953613281
    8. ' idx' → logprob: -12.601264953613281
    9. 'index' → logprob: -12.601264953613281
    10. 'ind' → logprob: -12.726264953613281

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06708762794733047
    2. 'in' → logprob: -2.8170876502990723
    3. 'indices' → logprob: -5.317087650299072
    4. ' indices' → logprob: -9.192087173461914
    5. ')' → logprob: -10.067087173461914
    6. '(indices' → logprob: -11.192087173461914
    7. '   ' → logprob: -11.567087173461914
    8. ' ' → logprob: -11.942087173461914
    9. 's' → logprob: -11.942087173461914
    10. '_indices' → logprob: -12.192087173461914

Token 62: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.0263105146586895
    2. ' indices' → logprob: -3.651310443878174
    3. 'indexes' → logprob: -12.651310920715332
    4. '(indices' → logprob: -13.276310920715332
    5. '.indices' → logprob: -13.401310920715332
    6. 'range' → logprob: -13.526310920715332
    7. 'index' → logprob: -14.276310920715332
    8. '"indices' → logprob: -14.526310920715332
    9. '[' → logprob: -14.901310920715332
    10. 'indice' → logprob: -15.151310920715332

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7014437364414334e-05
    2. ')
' → logprob: -10.62502670288086
    3. ' )' → logprob: -13.50002670288086
    4. '   ' → logprob: -14.00002670288086
    5. '))' → logprob: -14.87502670288086
    6. ')`' → logprob: -16.62502670288086
    7. ')

' → logprob: -17.75002670288086
    8. ')))' → logprob: -17.87502670288086
    9. ')**' → logprob: -18.25002670288086
    10. ' ' → logprob: -18.75002670288086

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032147299498319626
    2. '
' → logprob: -3.9071474075317383
    3. ')' → logprob: -5.532147407531738
    4. 'return' → logprob: -5.532147407531738
    5. '    
' → logprob: -6.407147407531738
    6. '<|end|>' → logprob: -7.282147407531738
    7. ' return' → logprob: -7.407147407531738
    8. ')
' → logprob: -7.782147407531738
    9. '```' → logprob: -9.532147407531738
    10. '	return' → logprob: -10.657147407531738

Token 65: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36033710837364197
    2. 'return' → logprob: -1.2353371381759644
    3. ' return' → logprob: -4.985337257385254
    4. '<|end|>' → logprob: -6.610337257385254
    5. ')' → logprob: -6.735337257385254
    6. '    
' → logprob: -7.360337257385254
    7. '	return' → logprob: -7.485337257385254
    8. ' ' → logprob: -7.985337257385254
    9. '  ' → logprob: -8.360337257385254
    10. 'print' (adapté à ' print') → logprob: -8.985337257385254

Token 66: '(*' (ID: 9000)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.03818332403898239
    2. '(' → logprob: -3.2881832122802734
    3. '(tuple' → logprob: -9.538183212280273
    4. '(*' → logprob: -10.413183212280273
    5. ' (' → logprob: -10.663183212280273
    6. '((' → logprob: -11.788183212280273
    7. '('' → logprob: -12.913183212280273
    8. '(results' → logprob: -13.663183212280273
    9. 'result' → logprob: -13.913183212280273
    10. '(f' → logprob: -14.163183212280273

Token 67: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.2729995988775045e-06
    2. ' result' → logprob: -12.000006675720215
    3. ')' → logprob: -18.2500057220459
    4. '(result' → logprob: -19.0000057220459
    5. 'results' → logprob: -20.8750057220459
    6. '	result' → logprob: -21.6250057220459
    7. '_result' → logprob: -21.8750057220459
    8. '   ' → logprob: -21.8750057220459
    9. '$result' → logprob: -22.0000057220459
    10. ' ' → logprob: -22.1250057220459

Token 68: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.250001907348633
    3. '))' → logprob: -15.375001907348633
    4. ' )' → logprob: -16.250001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.375001907348633
    7. ')#' → logprob: -18.000001907348633
    8. ')**' → logprob: -18.500001907348633
    9. ')

' → logprob: -19.125001907348633
    10. ')}' → logprob: -19.250001907348633

Token 69: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5105623006820679
    2. ')' → logprob: -1.8855623006820679
    3. '<|end|>' → logprob: -2.1355624198913574
    4. '
' → logprob: -3.0105624198913574
    5. '\' → logprob: -3.7605624198913574
    6. '(' → logprob: -4.510562419891357
    7. '```' → logprob: -4.635562419891357
    8. 'solve' → logprob: -4.760562419891357
    9. '#' → logprob: -5.010562419891357
    10. '(
' → logprob: -5.635562419891357

Token 70: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01724240556359291
    2. ' solve' → logprob: -4.142242431640625
    3. ' __' → logprob: -7.267242431640625
    4. ' test' → logprob: -9.017242431640625
    5. ' factorial' → logprob: -9.392242431640625
    6. ' solution' → logprob: -10.142242431640625
    7. 'main' → logprob: -10.267242431640625
    8. '__' → logprob: -10.392242431640625
    9. ' sys' → logprob: -10.642242431640625
    10. ' run' → logprob: -10.642242431640625

Token 71: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006788347964175045
    2. '(' → logprob: -7.750679016113281
    3. '()' → logprob: -8.375679016113281
    4. ' ():' → logprob: -11.500679016113281
    5. '(:' → logprob: -12.625679016113281
    6. ':' → logprob: -13.125679016113281
    7. '()>' → logprob: -14.375679016113281
    8. '():
' → logprob: -14.500679016113281
    9. '(":' → logprob: -15.250679016113281
    10. '```' → logprob: -16.00067901611328

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00106436712667346
    2. 'import' → logprob: -7.001064300537109
    3. 'if' → logprob: -10.25106430053711
    4. ' for' → logprob: -10.37606430053711
    5. 'for' → logprob: -10.37606430053711
    6. '    
' → logprob: -11.37606430053711
    7. ' import' → logprob: -11.62606430053711
    8. '```' → logprob: -11.75106430053711
    9. 'args' → logprob: -11.87606430053711
    10. '	import' → logprob: -13.12606430053711

Token 73: ' tokens' (ID: 20290)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3743883967399597
    2. 'import' → logprob: -1.2493884563446045
    3. '   ' → logprob: -4.624388217926025
    4. 'solve' → logprob: -5.124388217926025
    5. 'for' → logprob: -5.874388217926025
    6. 'if' → logprob: -5.999388217926025
    7. ' X' → logprob: -6.249388217926025
    8. ' import' → logprob: -7.374388217926025
    9. 'args' → logprob: -7.499388217926025
    10. 'x' → logprob: -7.499388217926025

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005243479739874601
    2. '=' → logprob: -5.255243301391602
    3. ' ' → logprob: -12.255243301391602
    4. '   ' → logprob: -13.380243301391602
    5. '  ' → logprob: -13.505243301391602
    6. ')' → logprob: -15.005243301391602
    7. '=sys' → logprob: -15.005243301391602
    8. '_' → logprob: -15.505243301391602
    9. ',' → logprob: -15.505243301391602
    10. '=[]' → logprob: -15.880243301391602

Token 75: ' functools' (ID: 142636)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1542467325925827
    2. 'sys' → logprob: -2.2792468070983887
    3. ' input' → logprob: -3.7792468070983887
    4. 'input' → logprob: -4.529246807098389
    5. ' list' → logprob: -5.404246807098389
    6. 'list' → logprob: -6.529246807098389
    7. ' iter' → logprob: -7.654246807098389
    8. ' [' → logprob: -9.15424633026123
    9. ' ' → logprob: -9.52924633026123
    10. '   ' → logprob: -9.65424633026123

Token 76: '.reduce' (ID: 49441)
  Prédit: '.partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.partial' → logprob: -0.025242850184440613
    2. '.reduce' → logprob: -3.900242805480957
    3. '.' → logprob: -6.150242805480957
    4. '.l' → logprob: -6.525242805480957
    5. '.wrap' → logprob: -8.025242805480957
    6. '.cache' → logprob: -8.400242805480957
    7. '.chain' → logprob: -8.525242805480957
    8. ' .' → logprob: -9.275242805480957
    9. '.import' → logprob: -9.400242805480957
    10. '.token' → logprob: -9.900242805480957

Token 77: '(
' (ID: 1607)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.023570850491523743
    2. '(lambda' → logprob: -3.7735707759857178
    3. 'operator' → logprob: -9.023571014404297
    4. '(' → logprob: -9.148571014404297
    5. '(f' → logprob: -10.523571014404297
    6. '(sys' → logprob: -11.273571014404297
    7. '(str' → logprob: -11.398571014404297
    8. '(op' → logprob: -11.523571014404297
    9. '   ' → logprob: -11.648571014404297
    10. '```' → logprob: -11.773571014404297

Token 78: '       ' (ID: 309)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.14490891993045807
    2. '(operator' → logprob: -2.394908905029297
    3. '   ' → logprob: -3.394908905029297
    4. ' operator' → logprob: -5.269908905029297
    5. 'lambda' → logprob: -5.644908905029297
    6. '(lambda' → logprob: -7.269908905029297
    7. '```' → logprob: -9.019908905029297
    8. ' ' → logprob: -9.019908905029297
    9. 'op' → logprob: -9.394908905029297
    10. '	operator' → logprob: -9.519908905029297

Token 79: ' lambda' (ID: 27871)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.06146615743637085
    2. ' operator' → logprob: -3.4364662170410156
    3. '   ' → logprob: -4.061466217041016
    4. 'lambda' (adapté à ' lambda') → logprob: -4.936466217041016
    5. '(operator' → logprob: -6.436466217041016
    6. ' lambda' → logprob: -7.061466217041016
    7. '	operator' → logprob: -8.311466217041016
    8. 'str' → logprob: -9.936466217041016
    9. '(lambda' → logprob: -9.936466217041016
    10. ' ' → logprob: -10.186466217041016

Token 80: ' z' (ID: 579)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.6872612833976746
    2. ' lambda' → logprob: -1.5622613430023193
    3. 'operator' → logprob: -2.0622613430023193
    4. 'lambda' → logprob: -2.3122613430023193
    5. ' op' → logprob: -4.43726110458374
    6. ' a' → logprob: -4.43726110458374
    7. ' x' → logprob: -4.43726110458374
    8. ' ' → logprob: -5.06226110458374
    9. 'a' → logprob: -5.31226110458374
    10. 'x' → logprob: -5.43726110458374

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017405731603503227
    2. ',x' → logprob: -5.0174055099487305
    3. ',a' → logprob: -5.8924055099487305
    4. ' a' → logprob: -5.8924055099487305
    5. ' x' → logprob: -6.5174055099487305
    6. ' ,' → logprob: -6.7674055099487305
    7. ':' → logprob: -7.8924055099487305
    8. ',l' → logprob: -7.8924055099487305
    9. ' acc' → logprob: -8.14240550994873
    10. ',y' → logprob: -8.51740550994873

Token 82: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8001713156700134
    2. ' x' → logprob: -1.1751713752746582
    3. 'a' → logprob: -2.425171375274658
    4. ' a' → logprob: -3.050171375274658
    5. 'y' → logprob: -3.300171375274658
    6. ' y' → logprob: -3.300171375274658
    7. 'acc' → logprob: -4.800171375274658
    8. ' t' → logprob: -5.425171375274658
    9. 't' → logprob: -5.550171375274658
    10. ' acc' → logprob: -5.925171375274658

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010757996933534741
    2. ' :' → logprob: -6.876075744628906
    3. ',' → logprob: -10.876075744628906
    4. ':y' → logprob: -12.001075744628906
    5. 'y' → logprob: -12.751075744628906
    6. '_:' → logprob: -13.501075744628906
    7. ':list' → logprob: -13.751075744628906
    8. ':
' → logprob: -14.313575744628906
    9. ':z' → logprob: -14.376075744628906
    10. '   ' → logprob: -14.376075744628906

Token 84: ' itertools' (ID: 103178)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2628445327281952
    2. 'z' → logprob: -1.5128445625305176
    3. 'operator' → logprob: -5.512844562530518
    4. ' operator' → logprob: -5.762844562530518
    5. 'lambda' → logprob: -7.512844562530518
    6. ' ' → logprob: -7.762844562530518
    7. 'sys' → logprob: -7.762844562530518
    8. 'int' → logprob: -8.13784408569336
    9. ' lambda' → logprob: -8.13784408569336
    10. ' sys' → logprob: -8.26284408569336

Token 85: '.chain' (ID: 103950)
  Prédit: '.chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.00021093101531732827
    2. '.product' → logprob: -9.250210762023926
    3. '.c' → logprob: -10.125210762023926
    4. '.' → logprob: -10.250210762023926
    5. '.st' → logprob: -11.000210762023926
    6. '.zip' → logprob: -12.125210762023926
    7. '.acc' → logprob: -12.250210762023926
    8. '.is' → logprob: -12.625210762023926
    9. '.per' → logprob: -13.375210762023926
    10. '.count' → logprob: -13.625210762023926

Token 86: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0008693021372891963
    2. '.from' → logprob: -7.750869274139404
    3. '(' → logprob: -8.125869750976562
    4. 'from' → logprob: -9.875869750976562
    5. '(tokens' → logprob: -10.125869750976562
    6. '(y' → logprob: -10.750869750976562
    7. '(token' → logprob: -11.250869750976562
    8. '(t' → logprob: -13.000869750976562
    9. '(
' → logprob: -13.125869750976562
    10. '(*' → logprob: -13.250869750976562

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008746705949306488
    2. ' ,' → logprob: -5.63374662399292
    3. ',y' → logprob: -5.75874662399292
    4. '(y' → logprob: -7.00874662399292
    5. '       ' → logprob: -8.008747100830078
    6. '   ' → logprob: -8.008747100830078
    7. '(' → logprob: -8.133747100830078
    8. '(),' → logprob: -11.258747100830078
    9. ' (' → logprob: -11.258747100830078
    10. '           ' → logprob: -11.508747100830078

Token 88: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.45030659437179565
    2. ' y' → logprob: -1.0753066539764404
    3. '[y' → logprob: -4.700306415557861
    4. '   ' → logprob: -5.575306415557861
    5. ' [' → logprob: -5.575306415557861
    6. '[' → logprob: -5.950306415557861
    7. '['' → logprob: -8.20030689239502
    8. 'iter' → logprob: -8.20030689239502
    9. '(y' → logprob: -8.20030689239502
    10. ' ' → logprob: -8.45030689239502

Token 89: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04719046875834465
    2. '),
' → logprob: -3.1721904277801514
    3. ')' → logprob: -6.1721906661987305
    4. ' ),' → logprob: -7.7971906661987305
    5. '.split' → logprob: -7.9221906661987305
    6. '   ' → logprob: -8.42219066619873
    7. 'tokens' → logprob: -8.54719066619873
    8. '),

' → logprob: -9.04719066619873
    9. ' ),
' → logprob: -9.04719066619873
    10. 'split' → logprob: -9.54719066619873

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42599251866340637
    2. ' [' → logprob: -1.925992488861084
    3. ' map' → logprob: -3.050992488861084
    4. ' sys' → logprob: -3.050992488861084
    5. '       ' → logprob: -3.425992488861084
    6. '[' → logprob: -3.425992488861084
    7. 'sys' → logprob: -5.175992488861084
    8. 'map' → logprob: -5.175992488861084
    9. '           ' → logprob: -5.300992488861084
    10. '(sys' → logprob: -5.675992488861084

Token 91: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.219359040260315
    2. '(map' → logprob: -1.469359040260315
    3. 'map' (adapté à ' map') → logprob: -1.844359040260315
    4. '[' → logprob: -1.969359040260315
    5. ' [' → logprob: -2.7193589210510254
    6. '(sys' → logprob: -3.3443589210510254
    7. ' (' → logprob: -4.219358921051025
    8. 'sys' → logprob: -4.344358921051025
    9. ' sys' → logprob: -4.719358921051025
    10. '[list' → logprob: -5.094358921051025

Token 92: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.053017020225525
    2. '(' → logprob: -1.553017020225525
    3. '(lambda' → logprob: -1.803017020225525
    4. '(list' → logprob: -2.4280171394348145
    5. '(int' → logprob: -2.8030171394348145
    6. '(operator' → logprob: -3.0530171394348145
    7. '(tuple' → logprob: -3.5530171394348145
    8. '(sys' → logprob: -3.6780171394348145
    9. '(print' → logprob: -4.8030171394348145
    10. '(s' → logprob: -5.5530171394348145

Token 93: '.split' (ID: 10347)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017621612176299095
    2. ',(' → logprob: -4.6426215171813965
    3. ',args' → logprob: -5.2676215171813965
    4. ',[' → logprob: -6.1426215171813965
    5. ',t' → logprob: -9.142621994018555
    6. '(' → logprob: -9.267621994018555
    7. ' ,' → logprob: -9.892621994018555
    8. ',['' → logprob: -10.517621994018555
    9. '(tokens' → logprob: -10.642621994018555
    10. '   ' → logprob: -10.767621994018555

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12850184738636017
    2. '(sys' → logprob: -2.1285018920898438
    3. ',input' → logprob: -7.628501892089844
    4. ',(' → logprob: -8.378501892089844
    5. ' ,' → logprob: -8.753501892089844
    6. '(' → logprob: -9.128501892089844
    7. '   ' → logprob: -9.378501892089844
    8. '=sys' → logprob: -10.003501892089844
    9. 'sys' → logprob: -10.003501892089844
    10. '(",' → logprob: -10.128501892089844

Token 95: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.11681728065013885
    2. ' sys' → logprob: -2.2418172359466553
    3. '   ' → logprob: -5.741817474365234
    4. 'open' → logprob: -7.741817474365234
    5. ' open' → logprob: -9.116817474365234
    6. '(sys' → logprob: -9.491817474365234
    7. ' ' → logprob: -10.366817474365234
    8. '[' → logprob: -10.366817474365234
    9. '	sys' → logprob: -10.366817474365234
    10. '       ' → logprob: -10.991817474365234

Token 96: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005243360530585051
    2. '.argv' → logprob: -5.255243301391602
    3. '.' → logprob: -11.630243301391602
    4. '.stdout' → logprob: -15.755243301391602
    5. 'stdin' → logprob: -16.0052433013916
    6. '.std' → logprob: -16.0052433013916
    7. '.input' → logprob: -16.1302433013916
    8. '.__' → logprob: -16.8802433013916
    9. '._' → logprob: -17.2552433013916
    10. 'argv' → logprob: -17.6302433013916

Token 97: '),
' (ID: 2313)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01567557454109192
    2. ')' → logprob: -4.3906755447387695
    3. '.readline' → logprob: -6.2656755447387695
    4. '.readlines' → logprob: -7.3906755447387695
    5. '()' → logprob: -7.8906755447387695
    6. '())
' → logprob: -9.51567554473877
    7. ' ())' → logprob: -9.64067554473877
    8. '()),' → logprob: -10.51567554473877
    9. '.' → logprob: -10.76567554473877
    10. '(),' → logprob: -11.26567554473877

Token 98: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6462749242782593
    2. '       ' → logprob: -1.2712749242782593
    3. ')' → logprob: -1.7712749242782593
    4. 'tokens' → logprob: -5.521275043487549
    5. ' )' → logprob: -5.646275043487549
    6. '[' → logprob: -5.771275043487549
    7. ' [' → logprob: -6.396275043487549
    8. ' sys' → logprob: -6.521275043487549
    9. 'args' → logprob: -6.521275043487549
    10. '           ' → logprob: -6.521275043487549

Token 99: ' []
' (ID: 8911)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.25589868426322937
    2. '[]' → logprob: -2.0058987140655518
    3. 'iter' → logprob: -2.6308987140655518
    4. '())' → logprob: -5.130898475646973
    5. '()' → logprob: -5.380898475646973
    6. '[]
' (adapté à ' []
') → logprob: -5.505898475646973
    7. ' iter' → logprob: -7.005898475646973
    8. 'it' → logprob: -7.130898475646973
    9. '[])
' → logprob: -7.255898475646973
    10. '   ' → logprob: -7.255898475646973

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029759865254163742
    2. ')' → logprob: -3.5297598838806152
    3. ' )' → logprob: -11.904759407043457
    4. ' ' → logprob: -13.779759407043457
    5. '       ' → logprob: -14.029759407043457
    6. ')
' → logprob: -14.779759407043457
    7. ')

' → logprob: -15.779759407043457
    8. ',' → logprob: -16.029760360717773
    9. '  ' → logprob: -17.029760360717773
    10. '),' → logprob: -17.029760360717773

Token 101: ' )
' (ID: 3270)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.482577919960022
    2. ')' → logprob: -0.982577919960022
    3. ')
' (adapté à ' )
') → logprob: -4.982577800750732
    4. ' )' → logprob: -6.857577800750732
    5. ' ' → logprob: -7.732577800750732
    6. ' )
' → logprob: -9.48257827758789
    7. ')

' → logprob: -10.73257827758789
    8. '  ' → logprob: -12.23257827758789
    9. ',' → logprob: -12.48257827758789
    10. '       ' → logprob: -12.60757827758789

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013827363727614284
    2. ' for' → logprob: -7.626382827758789
    3. '    
' → logprob: -7.751382827758789
    4. '<|end|>' → logprob: -8.751382827758789
    5. 'for' → logprob: -9.001382827758789
    6. 'tokens' → logprob: -9.626382827758789
    7. ')' → logprob: -9.751382827758789
    8. '    ' → logprob: -11.626382827758789
    9. ' tokens' → logprob: -11.626382827758789
    10. '<|end|>' → logprob: -12.251382827758789

Token 103: ' tokens' (ID: 20290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7101791501045227
    2. 'for' → logprob: -1.460179090499878
    3. 'try' → logprob: -2.210179090499878
    4. 'X' → logprob: -3.085179090499878
    5. ' for' → logprob: -3.085179090499878
    6. 'args' → logprob: -3.960179090499878
    7. 'next' → logprob: -4.585179328918457
    8. 'tokens' (adapté à ' tokens') → logprob: -4.585179328918457
    9. 'n' → logprob: -4.960179328918457
    10. 'x' → logprob: -5.085179328918457

Token 104: '_iter' (ID: 27043)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057219911366701126
    2. '=' → logprob: -2.932219982147217
    3. '_next' → logprob: -6.932219982147217
    4. '_' → logprob: -8.057219505310059
    5. ' ' → logprob: -8.307219505310059
    6. '    ' → logprob: -8.682219505310059
    7. 'next' → logprob: -9.057219505310059
    8. '   ' → logprob: -9.432219505310059
    9. ',' → logprob: -9.557219505310059
    10. '_tokens' → logprob: -9.557219505310059

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602497100830078
    2. '=' → logprob: -1.9102497100830078
    3. 'ator' → logprob: -10.785249710083008
    4. '   ' → logprob: -13.035249710083008
    5. ' ' → logprob: -13.285249710083008
    6. '  ' → logprob: -14.785249710083008
    7. ' ' → logprob: -15.785249710083008
    8. '	' → logprob: -16.285249710083008
    9. '    ' → logprob: -16.410249710083008
    10. '＝' → logprob: -16.535249710083008

Token 106: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0006421420839615166
    2. ' iter' → logprob: -7.3756422996521
    3. '   ' → logprob: -12.250641822814941
    4. '(iter' → logprob: -12.500641822814941
    5. 'map' → logprob: -13.000641822814941
    6. 'iterator' → logprob: -13.500641822814941
    7. 'it' → logprob: -13.500641822814941
    8. '	iter' → logprob: -13.750641822814941
    9. '  ' → logprob: -14.750641822814941
    10. ' ' → logprob: -15.375641822814941

Token 107: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -1.6240566083070007e-06
    2. 'tokens' → logprob: -13.875001907348633
    3. '(' → logprob: -15.125001907348633
    4. '(token' → logprob: -15.375001907348633
    5. ' (' → logprob: -17.000001907348633
    6. '(tok' → logprob: -17.750001907348633
    7. ' tokens' → logprob: -18.000001907348633
    8. '(tasks' → logprob: -18.125001907348633
    9. '(tags' → logprob: -18.500001907348633
    10. '```' → logprob: -18.750001907348633

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007148314267396927
    2. '   ' → logprob: -5.007148265838623
    3. ')
' → logprob: -7.882148265838623
    4. '()' → logprob: -10.632148742675781
    5. 'def' → logprob: -11.757148742675781
    6. ' )' → logprob: -11.882148742675781
    7. '    
' → logprob: -12.382148742675781
    8. ' ' → logprob: -12.632148742675781
    9. '())' → logprob: -12.632148742675781
    10. 'tokens' → logprob: -13.507148742675781

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020403841510415077
    2. 'def' → logprob: -5.270403861999512
    3. 'try' → logprob: -5.520403861999512
    4. '<|end|>' → logprob: -5.645403861999512
    5. '    
' → logprob: -6.020403861999512
    6. 'X' → logprob: -6.020403861999512
    7. '```' → logprob: -7.145403861999512
    8. ')' → logprob: -7.395403861999512
    9. '
' → logprob: -8.270403861999512
    10. '  
' → logprob: -8.895403861999512

Token 110: ' input' (ID: 3422)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.059747111052274704
    2. 'try' → logprob: -3.3097472190856934
    3. '   ' → logprob: -4.684747219085693
    4. 'def' → logprob: -4.684747219085693
    5. 'while' → logprob: -6.434747219085693
    6. ' X' → logprob: -7.809747219085693
    7. 'for' → logprob: -8.184746742248535
    8. 'n' → logprob: -8.434746742248535
    9. 'Q' → logprob: -8.684746742248535
    10. 'T' → logprob: -9.434746742248535

Token 111: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.9209585189819336
    2. '_line' → logprob: -1.6709585189819336
    3. 's' → logprob: -1.7959585189819336
    4. '_' → logprob: -2.4209585189819336
    5. '_vals' → logprob: -2.6709585189819336
    6. '_tokens' → logprob: -3.2959585189819336
    7. '_data' → logprob: -3.5459585189819336
    8. '_args' → logprob: -4.920958518981934
    9. '_val' → logprob: -6.170958518981934
    10. '_token' → logprob: -6.295958518981934

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012510710395872593
    2. '=' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.387510299682617
    4. ' ' → logprob: -15.887510299682617
    5. '  ' → logprob: -16.262510299682617
    6. ':' → logprob: -16.887510299682617
    7. ',' → logprob: -17.137510299682617
    8. ' =
' → logprob: -17.262510299682617
    9. '_' → logprob: -18.137510299682617
    10. '    ' → logprob: -18.137510299682617

Token 113: ' list' (ID: 1562)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.7839589715003967
    2. 'list' → logprob: -1.533958911895752
    3. '[' → logprob: -1.783958911895752
    4. '[list' → logprob: -2.158958911895752
    5. '(tuple' → logprob: -4.533958911895752
    6. ' tuple' → logprob: -4.658958911895752
    7. ' list' → logprob: -4.908958911895752
    8. ' [' → logprob: -5.033958911895752
    9. 'map' → logprob: -5.033958911895752
    10. '(list' → logprob: -5.908958911895752

Token 114: '(
' (ID: 1607)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.39135804772377014
    2. '(it' → logprob: -1.3913580179214478
    3. '(next' → logprob: -2.6413581371307373
    4. '(f' → logprob: -6.516357898712158
    5. '(operator' → logprob: -6.516357898712158
    6. '(' → logprob: -7.266357898712158
    7. '(int' → logprob: -9.391358375549316
    8. '((' → logprob: -10.016358375549316
    9. '(fun' → logprob: -11.391358375549316
    10. '(iter' → logprob: -11.391358375549316

Token 115: '       ' (ID: 309)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.5953466296195984
    2. '(it' → logprob: -0.8453466296195984
    3. '(next' → logprob: -4.470346450805664
    4. '(f' → logprob: -5.720346450805664
    5. '(operator' → logprob: -6.095346450805664
    6. '(' → logprob: -6.845346450805664
    7. '   ' → logprob: -7.595346450805664
    8. 'map' → logprob: -7.970346450805664
    9. '  ' → logprob: -9.720346450805664
    10. 'it' → logprob: -9.845346450805664

Token 116: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' (adapté à ' map') → logprob: -0.0014866470592096448
    2. 'it' → logprob: -7.001486778259277
    3. '   ' → logprob: -7.876486778259277
    4. 'operator' → logprob: -9.876486778259277
    5. 'fun' → logprob: -10.251486778259277
    6. 'next' → logprob: -10.501486778259277
    7. ' ' → logprob: -10.751486778259277
    8. ' map' → logprob: -10.751486778259277
    9. '  ' → logprob: -11.251486778259277
    10. 'int' → logprob: -11.376486778259277

Token 117: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025355906691402197
    2. '(' → logprob: -6.502535820007324
    3. '(lambda' → logprob: -7.377535820007324
    4. '(
' → logprob: -8.252535820007324
    5. 'int' → logprob: -9.127535820007324
    6. '   ' → logprob: -11.127535820007324
    7. '<int' → logprob: -11.877535820007324
    8. '(next' → logprob: -12.002535820007324
    9. ',int' → logprob: -12.627535820007324
    10. 'next' → logprob: -13.252535820007324

Token 118: ',' (ID: 11)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.4698725938796997
    2. ',' → logprob: -1.0948725938796997
    3. '(' → logprob: -4.34487247467041
    4. '(lambda' → logprob: -4.71987247467041
    5. 'tokens' → logprob: -4.84487247467041
    6. '(iter' → logprob: -5.34487247467041
    7. '(next' → logprob: -6.21987247467041
    8. ',(' → logprob: -7.34487247467041
    9. '(it' → logprob: -7.46987247467041
    10. '(token' → logprob: -7.59487247467041

Token 119: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.4354458749294281
    2. 'tokens' → logprob: -1.3104459047317505
    3. 'fun' → logprob: -3.685445785522461
    4. '(it' → logprob: -3.935445785522461
    5. 'iter' → logprob: -4.560445785522461
    6. '(tokens' → logprob: -4.935445785522461
    7. ' itertools' → logprob: -4.935445785522461
    8. 'lambda' → logprob: -5.935445785522461
    9. '   ' → logprob: -6.060445785522461
    10. '(lambda' → logprob: -6.435445785522461

Token 120: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0016098396154120564
    2. 'is' → logprob: -6.501609802246094
    3. '.chain' → logprob: -10.376609802246094
    4. '.' → logprob: -10.501609802246094
    5. '   ' → logprob: -11.001609802246094
    6. '(is' → logprob: -11.126609802246094
    7. '.take' → logprob: -11.251609802246094
    8. '	is' → logprob: -13.751609802246094
    9. '=is' → logprob: -14.376609802246094
    10. ' .' → logprob: -14.501609802246094

Token 121: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -14.875000953674316
    3. 'lices' → logprob: -15.500000953674316
    4. 'instance' → logprob: -16.25
    5. 'lic' → logprob: -17.0
    6. '  ' → logprob: -17.75
    7. 'slice' → logprob: -17.875
    8. 'ice' → logprob: -18.125
    9. 'liced' → logprob: -18.5
    10. '
' → logprob: -18.5

Token 122: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.00045152619713917375
    2. 'tokens' → logprob: -7.750451564788818
    3. '(' → logprob: -11.00045108795166
    4. ' tokens' → logprob: -12.87545108795166
    5. '(
' → logprob: -14.37545108795166
    6. '   ' → logprob: -14.75045108795166
    7. '_tokens' → logprob: -16.125452041625977
    8. '.tokens' → logprob: -16.250452041625977
    9. '(tasks' → logprob: -16.375452041625977
    10. ' (' → logprob: -16.625452041625977

Token 123: '_iter' (ID: 27043)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.0003349890175741166
    2. 'tokens' → logprob: -8.250334739685059
    3. ',' → logprob: -10.500334739685059
    4. '_tokens' → logprob: -10.875334739685059
    5. ' tokens' → logprob: -11.625334739685059
    6. '(' → logprob: -12.000334739685059
    7. '.tokens' → logprob: -12.750334739685059
    8. '(token' → logprob: -13.000334739685059
    9. '(iter' → logprob: -13.125334739685059
    10. ' (' → logprob: -13.375334739685059

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14314232766628265
    2. '(' → logprob: -2.0181422233581543
    3. ' ,' → logprob: -8.018142700195312
    4. '   ' → logprob: -9.643142700195312
    5. '       ' → logprob: -11.268142700195312
    6. '           ' → logprob: -11.518142700195312
    7. ' (' → logprob: -11.643142700195312
    8. ',(' → logprob: -11.768142700195312
    9. '(len' → logprob: -12.143142700195312
    10. '(),' → logprob: -12.268142700195312

Token 125: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001657565007917583
    2. ' ' → logprob: -9.250165939331055
    3. '6' → logprob: -10.000165939331055
    4. '   ' → logprob: -10.750165939331055
    5. '  ' → logprob: -13.750165939331055
    6. '       ' → logprob: -14.250165939331055
    7. '           ' → logprob: -15.000165939331055
    8. '9' → logprob: -15.125165939331055
    9. '    ' → logprob: -15.875165939331055
    10. '               ' → logprob: -16.625165939331055

Token 126: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.633853652398102e-05
    2. '6' → logprob: -10.250056266784668
    3. ' ' → logprob: -11.250056266784668
    4. '   ' → logprob: -12.250056266784668
    5. '(' → logprob: -13.000056266784668
    6. '9' → logprob: -14.750056266784668
    7. '  ' → logprob: -14.875056266784668
    8. '       ' → logprob: -16.500057220458984
    9. '           ' → logprob: -17.500057220458984
    10. '    ' → logprob: -17.500057220458984

Token 127: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004936986370012164
    2. ')))' → logprob: -7.75049352645874
    3. '))
' → logprob: -9.750494003295898
    4. ')' → logprob: -12.625494003295898
    5. '()))' → logprob: -14.250494003295898
    6. '))

' → logprob: -15.500494003295898
    7. '   ' → logprob: -15.750494003295898
    8. '));' → logprob: -15.875494003295898
    9. ' ' → logprob: -16.1254940032959
    10. ' ))' → logprob: -16.1254940032959

Token 128: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04895748570561409
    2. '   ' → logprob: -3.048957586288452
    3. ')
' → logprob: -7.923957347869873
    4. ' )' → logprob: -12.423957824707031
    5. '))' → logprob: -13.548957824707031
    6. ' ' → logprob: -13.923957824707031
    7. '       ' → logprob: -14.173957824707031
    8. ')))' → logprob: -15.423957824707031
    9. ')

' → logprob: -15.673957824707031
    10. '`)' → logprob: -15.798957824707031

Token 129: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013220814988017082
    2. '   ' → logprob: -4.51322078704834
    3. ')
' (adapté à ' )
') → logprob: -6.13822078704834
    4. ' )' → logprob: -11.63822078704834
    5. '))' → logprob: -13.51322078704834
    6. ' ' → logprob: -14.01322078704834
    7. ')

' → logprob: -15.38822078704834
    8. ')`' → logprob: -16.013221740722656
    9. ')
' → logprob: -16.263221740722656
    10. ' )
' → logprob: -16.263221740722656

Token 130: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5385543704032898
    2. '   ' → logprob: -1.0385544300079346
    3. '    
' → logprob: -3.4135544300079346
    4. '<|end|>' → logprob: -4.0385541915893555
    5. '```' → logprob: -5.5385541915893555
    6. ')' → logprob: -5.7885541915893555
    7. ')
' → logprob: -6.4135541915893555
    8. 'def' → logprob: -6.7885541915893555
    9. ',
' → logprob: -6.9135541915893555
    10. ',' → logprob: -7.7885541915893555

Token 131: ' functools' (ID: 142636)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.3917527496814728
    2. 'X' → logprob: -1.1417527198791504
    3. 'result' → logprob: -6.64175271987915
    4. '   ' → logprob: -6.76675271987915
    5. ' solve' → logprob: -7.01675271987915
    6. ' X' → logprob: -7.26675271987915
    7. 'if' → logprob: -7.64175271987915
    8. 'def' → logprob: -9.641753196716309
    9. 'for' → logprob: -9.766753196716309
    10. 'x' → logprob: -10.141753196716309

Token 132: '.partial' (ID: 178537)
  Prédit: '.reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.007683054078370333
    2. '.partial' → logprob: -4.882683277130127
    3. ' .' → logprob: -10.507682800292969
    4. '.' → logprob: -10.882682800292969
    5. '   ' → logprob: -11.757682800292969
    6. '.chain' → logprob: -12.507682800292969
    7. '.wrap' → logprob: -12.757682800292969
    8. '.update' → logprob: -12.757682800292969
    9. '.call' → logprob: -13.007682800292969
    10. '.re' → logprob: -13.257682800292969

Token 133: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.093505099765025e-05
    2. 'solve' → logprob: -11.250020980834961
    3. '(' → logprob: -11.875020980834961
    4. '(
' → logprob: -15.000020980834961
    5. '(sol' → logprob: -15.625020980834961
    6. ' solve' → logprob: -15.875020980834961
    7. '(resolve' → logprob: -16.37502098083496
    8. '(main' → logprob: -16.75002098083496
    9. '(solution' → logprob: -17.25002098083496
    10. '(run' → logprob: -17.50002098083496

Token 134: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -4.320199877838604e-07
    2. 'solve' → logprob: -15.125
    3. 'ol' → logprob: -17.375
    4. 'OLVE' → logprob: -17.5
    5. 'olver' → logprob: -17.875
    6. 'ove' → logprob: -18.125
    7. 'erve' → logprob: -19.25
    8. 't' → logprob: -20.125
    9. 'olv' → logprob: -20.5
    10. ' solve' → logprob: -20.5

Token 135: ',' (ID: 11)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.10062231123447418
    2. ')(' → logprob: -2.3506224155426025
    3. ',' → logprob: -8.100622177124023
    4. '(' → logprob: -9.975622177124023
    5. ')(
' → logprob: -10.350622177124023
    6. ')' → logprob: -10.850622177124023
    7. '```' → logprob: -12.600622177124023
    8. ' (*' → logprob: -12.850622177124023
    9. '>(*' → logprob: -13.100622177124023
    10. '   ' → logprob: -13.600622177124023

Token 136: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -9.305326966568828e-05
    2. '*object' → logprob: -11.125093460083008
    3. ')' → logprob: -11.250093460083008
    4. '   ' → logprob: -11.375093460083008
    5. '**' → logprob: -11.625093460083008
    6. ' *' → logprob: -11.750093460083008
    7. '*out' → logprob: -12.250093460083008
    8. '*a' → logprob: -12.375093460083008
    9. '*(' → logprob: -12.500093460083008
    10. '*C' → logprob: -12.875093460083008

Token 137: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.5213274309644476e-05
    2. ' input' → logprob: -11.125015258789062
    3. '(input' → logprob: -15.250015258789062
    4. 'tuple' → logprob: -16.625015258789062
    5. '   ' → logprob: -17.500015258789062
    6. '<input' → logprob: -19.000015258789062
    7. ')' → logprob: -19.250015258789062
    8. 'inputs' → logprob: -19.750015258789062
    9. 'list' → logprob: -20.000015258789062
    10. '  ' → logprob: -20.000015258789062

Token 138: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.704273118884885e-07
    2. 'values' → logprob: -14.500000953674316
    3. '_value' → logprob: -17.75
    4. '_' → logprob: -18.0
    5. '_VALUES' → logprob: -20.5
    6. 'Values' → logprob: -20.875
    7. ' _' → logprob: -21.375
    8. '_vals' → logprob: -21.5
    9. 's' → logprob: -21.875
    10. '_variables' → logprob: -22.0

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04756689816713333
    2. '()' → logprob: -3.2975668907165527
    3. '())' → logprob: -4.672566890716553
    4. ']()' → logprob: -10.047567367553711
    5. ' )' → logprob: -10.297567367553711
    6. ')(' → logprob: -10.547567367553711
    7. ').' → logprob: -11.797567367553711
    8. '()).' → logprob: -11.797567367553711
    9. ' ())' → logprob: -12.922567367553711
    10. '();)' → logprob: -13.422567367553711

Token 140: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006442877347581089
    2. '().' → logprob: -7.375644207000732
    3. '()<' → logprob: -12.00064468383789
    4. '()
' → logprob: -12.37564468383789
    5. '().__' → logprob: -13.00064468383789
    6. '()`' → logprob: -14.00064468383789
    7. '();' → logprob: -14.25064468383789
    8. '()\' → logprob: -14.37564468383789
    9. '()

' → logprob: -14.62564468383789
    10. '()%' → logprob: -15.00064468383789

Token 141: '    
' (ID: 1944)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7250858545303345
    2. '<|end|>' → logprob: -0.7250858545303345
    3. '
' → logprob: -3.975085735321045
    4. 'main' → logprob: -5.225085735321045
    5. '    
' → logprob: -5.975085735321045
    6. '```' → logprob: -6.100085735321045
    7. '\n' → logprob: -7.850085735321045
    8. '  
' → logprob: -7.975085735321045
    9. ')' → logprob: -7.975085735321045
    10. ' if' → logprob: -7.975085735321045

Token 142: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.141186450899113e-05
    2. ' if' → logprob: -11.500020980834961
    3. 'main' → logprob: -12.000020980834961
    4. '<|end|>' → logprob: -13.000020980834961
    5. '```' → logprob: -13.250020980834961
    6. '
' → logprob: -15.500020980834961
    7. '    
' → logprob: -15.500020980834961
    8. '#' → logprob: -15.750020980834961
    9. 'print' → logprob: -15.875020980834961
    10. '  
' → logprob: -16.00002098083496

Token 143: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00018327576981391758
    2. '__' → logprob: -8.62518310546875
    3. ' ' → logprob: -13.00018310546875
    4. ' ' → logprob: -13.75018310546875
    5. ' _' → logprob: -15.87518310546875
    6. '_' → logprob: -16.37518310546875
    7. ' ___' → logprob: -16.87518310546875
    8. ' ​' → logprob: -18.00018310546875
    9. ' True' → logprob: -18.12518310546875
    10. ' ‌' → logprob: -18.37518310546875

Token 144: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002590169431641698
    2. '==' → logprob: -6.877590179443359
    3. '__.__' → logprob: -7.377590179443359
    4. ' ==' → logprob: -7.502590179443359
    5. '__.' → logprob: -8.75259017944336
    6. ' __' → logprob: -8.87759017944336
    7. '.__' → logprob: -9.62759017944336
    8. '__["' → logprob: -12.75259017944336
    9. '.' → logprob: -13.25259017944336
    10. '__[' → logprob: -13.50259017944336

Token 145: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6405310816480778e-05
    2. '__.__' → logprob: -11.750016212463379
    3. '==' → logprob: -11.875016212463379
    4. ' ==' → logprob: -13.750016212463379
    5. '____' → logprob: -15.625016212463379
    6. '__.' → logprob: -16.000017166137695
    7. '___' → logprob: -16.750017166137695
    8. '__
' → logprob: -16.875017166137695
    9. '__,' → logprob: -18.000017166137695
    10. '=="' → logprob: -18.125017166137695

Token 146: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21451498568058014
    2. '==' → logprob: -2.339514970779419
    3. ' ==' → logprob: -2.339514970779419
    4. '=="' → logprob: -8.83951473236084
    5. '__.__' → logprob: -8.96451473236084
    6. '.__' → logprob: -11.21451473236084
    7. '=='' → logprob: -11.21451473236084
    8. '.' → logprob: -12.58951473236084
    9. '__.' → logprob: -12.83951473236084
    10. '===' → logprob: -12.96451473236084

Token 147: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759901404380798
    2. '"' → logprob: -0.8259901404380798
    3. ' "__' → logprob: -10.325989723205566
    4. ' '__' → logprob: -11.575989723205566
    5. '__' → logprob: -12.075989723205566
    6. ' "' → logprob: -13.575989723205566
    7. '"user' → logprob: -14.200989723205566
    8. ' '' → logprob: -15.075989723205566
    9. '`' → logprob: -16.075990676879883
    10. ''user' → logprob: -16.200990676879883

Token 148: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.4034345187828876e-05
    2. 'name' → logprob: -10.75002384185791
    3. '__' → logprob: -12.87502384185791
    4. 'm' → logprob: -17.125024795532227
    5. ' main' → logprob: -18.375024795532227
    6. '_main' → logprob: -18.875024795532227
    7. '-main' → logprob: -19.250024795532227
    8. 'code' → logprob: -19.625024795532227
    9. '__':
' → logprob: -19.750024795532227
    10. 'built' → logprob: -20.000024795532227

Token 149: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.693202018737793
    2. '__':
' → logprob: -0.693202018737793
    3. '__:' → logprob: -10.318202018737793
    4. '__.' → logprob: -11.443202018737793
    5. '__":
' → logprob: -11.693202018737793
    6. '_' → logprob: -13.693202018737793
    7. '__.__' → logprob: -13.943202018737793
    8. '':' → logprob: -15.068202018737793
    9. '__('' → logprob: -15.943202018737793
    10. '___' → logprob: -15.943202018737793

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5991981029510498
    2. 'main' → logprob: -0.8491981029510498
    3. ' main' → logprob: -4.349198341369629
    4. '	main' → logprob: -4.599198341369629
    5. '   ' → logprob: -11.974198341369629
    6. '_main' → logprob: -12.599198341369629
    7. ' ' → logprob: -13.099198341369629
    8. '  ' → logprob: -14.974198341369629
    9. '```' → logprob: -15.349198341369629
    10. 'import' → logprob: -15.724198341369629

Token 151: ' list' (ID: 1562)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -20.875
    4. 'import' → logprob: -21.75
    5. '   ' → logprob: -22.875
    6. '_main' → logprob: -26.25
    7. '(main' → logprob: -26.25
    8. '.main' → logprob: -26.25
    9. '```' → logprob: -27.625
    10. 'Main' → logprob: -27.875

Token 152: '(map' (ID: 16946)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.04684733971953392
    2. '(map' → logprob: -3.546847343444824
    3. '(sys' → logprob: -4.546847343444824
    4. 'main' → logprob: -5.546847343444824
    5. '(' → logprob: -6.046847343444824
    6. '()' → logprob: -11.046847343444824
    7. '(s' → logprob: -11.171847343444824
    8. '_main' → logprob: -11.296847343444824
    9. '(stdin' → logprob: -12.296847343444824
    10. '```' → logprob: -12.421847343444824

Token 153: '(lambda' (ID: 43341)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.003948386758565903
    2. '(int' → logprob: -5.628948211669922
    3. 'main' → logprob: -8.753948211669922
    4. '(' → logprob: -9.253948211669922
    5. '(lambda' → logprob: -10.003948211669922
    6. '(print' → logprob: -10.753948211669922
    7. ' main' → logprob: -11.378948211669922
    8. '(str' → logprob: -12.378948211669922
    9. '(input' → logprob: -12.753948211669922
    10. '(func' → logprob: -12.878948211669922

Token 154: ' f' (ID: 285)
  Prédit: '_:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.22408974170684814
    2. ' _:' → logprob: -2.3490896224975586
    3. '_' → logprob: -3.4740896224975586
    4. ' x' → logprob: -3.5990896224975586
    5. 'x' → logprob: -3.9740896224975586
    6. ':' → logprob: -4.349089622497559
    7. '   ' → logprob: -5.724089622497559
    8. ' _' → logprob: -5.849089622497559
    9. ' :' → logprob: -5.974089622497559
    10. 'line' → logprob: -7.099089622497559

Token 155: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026051891967654228
    2. ' :' → logprob: -4.401051998138428
    3. ' f' → logprob: -4.651051998138428
    4. ':f' → logprob: -5.651051998138428
    5. 'f' → logprob: -8.27605152130127
    6. '(f' → logprob: -9.02605152130127
    7. ':list' → logprob: -13.27605152130127
    8. ':int' → logprob: -13.27605152130127
    9. ',f' → logprob: -13.52605152130127
    10. '	f' → logprob: -13.65105152130127

Token 156: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05492448806762695
    2. ' f' → logprob: -2.929924488067627
    3. '   ' → logprob: -10.679924011230469
    4. ' ' → logprob: -12.679924011230469
    5. '	f' → logprob: -12.679924011230469
    6. 'print' → logprob: -13.054924011230469
    7. '  ' → logprob: -13.554924011230469
    8. '__' → logprob: -13.929924011230469
    9. '(f' → logprob: -14.054924011230469
    10. 'globals' → logprob: -14.054924011230469

Token 157: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.008607125841081142
    2. ' (),' → logprob: -5.508606910705566
    3. '():' → logprob: -6.008606910705566
    4. '()' → logprob: -6.258606910705566
    5. ' ()' → logprob: -10.508606910705566
    6. '().__' → logprob: -10.633606910705566
    7. '(),
' → logprob: -11.258606910705566
    8. '():
' → logprob: -11.258606910705566
    9. ',' → logprob: -11.258606910705566
    10. '()[' → logprob: -11.758606910705566

Token 158: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012726159766316414
    2. '[
' → logprob: -6.876272678375244
    3. ' [' → logprob: -9.376272201538086
    4. '[int' → logprob: -9.876272201538086
    5. '   ' → logprob: -10.001272201538086
    6. '[get' → logprob: -11.126272201538086
    7. '[str' → logprob: -11.876272201538086
    8. ' ' → logprob: -12.001272201538086
    9. '[module' → logprob: -12.376272201538086
    10. '[class' → logprob: -12.876272201538086

Token 159: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.8889261304575484e-06
    2. ' main' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '(main' → logprob: -20.625003814697266
    5. '	main' → logprob: -20.625003814697266
    6. ' ' → logprob: -20.875003814697266
    7. '
' → logprob: -21.500003814697266
    8. 'lambda' → logprob: -22.000003814697266
    9. '  ' → logprob: -22.125003814697266
    10. '```' → logprob: -22.750003814697266

Token 160: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.003277768148109317
    2. '])' → logprob: -6.378277778625488
    3. ',' → logprob: -6.628277778625488
    4. ']' → logprob: -8.753277778625488
    5. ']))
' → logprob: -9.628277778625488
    6. '])))' → logprob: -11.503277778625488
    7. ']))

' → logprob: -12.628277778625488
    8. '))' → logprob: -13.003277778625488
    9. ' ]' → logprob: -13.128277778625488
    10. '()' → logprob: -13.253277778625488


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 40.51%
Précision adaptée (1ère position): 41.77%
Précision (top 10): 83.54%
================================================================================
