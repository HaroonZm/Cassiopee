================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import fractions

N = int(input())
A = [int(a) for a in input().split()]

func = fractions.gcd
ie = 0
getLEN = 1
while getLEN < N:
    getLEN *= 2
getsize = getLEN * 2
getLIN = getsize - getLEN
ST = [ie] * getsize

for i, a in enumerate(A):
    idx = i + getLIN
    ST[idx] = a

for i in range(getLIN-1, 0, -1):
    ST[i] = func(ST[2*i], ST[2*i+1])

ans = 0
for i, a in enumerate(A):
    idx = i + getLIN
    ST[idx] = 0
    j = idx
    while j > 1:
        j //= 2
        ST[j] = func(ST[2*j], ST[2*j+1])

    a_ = 0 + getLIN
    b_ = N + getLIN
    if b_ - a_ <= 0:
        ret = ie
    else:
        ret = func(ST[a_], ST[b_-1])
        aa = a_
        bb = b_
        while aa+1 < bb:
            if aa % 2 == 1:
                ret = func(ST[aa], ret)
                aa += 1
            aa //= 2
            if bb % 2 == 1:
                ret = func(ST[bb-1], ret)
            bb //= 2
        if aa == bb:
            pass
        else:
            ret = func(ret, ST[aa])
    ans = max(ans, ret)

    ST[idx] = a
    j = idx
    while j > 1:
        j //= 2
        ST[j] = func(ST[2*j], ST[2*j+1])

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' fractions' (ID: 110523)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0026421258226037025
    2. '.f' → logprob: -7.2526421546936035
    3. '\n' → logprob: -7.5026421546936035
    4. '\' → logprob: -7.8776421546936035
    5. 'import' → logprob: -8.002641677856445
    6. '.F' → logprob: -9.127641677856445
    7. 'as' → logprob: -9.252641677856445
    8. '```' → logprob: -9.377641677856445
    9. ' as' → logprob: -9.752641677856445
    10. '(' → logprob: -10.002641677856445

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27537044882774353
    2. '.' → logprob: -1.900370478630066
    3. ',' → logprob: -3.4003703594207764
    4. '_' → logprob: -3.7753703594207764
    5. ' =' → logprob: -4.1503705978393555
    6. 'umber' → logprob: -5.2753705978393555
    7. 'a' → logprob: -6.1503705978393555
    8. 'T' → logprob: -6.1503705978393555
    9. ')' → logprob: -6.7753705978393555
    10. ' ' → logprob: -6.7753705978393555

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046013761311769485
    2. ' fractions' → logprob: -3.671013832092285
    3. ' int' → logprob: -5.296013832092285
    4. '10' → logprob: -5.421013832092285
    5. 'int' → logprob: -5.921013832092285
    6. '1' → logprob: -6.046013832092285
    7. '0' → logprob: -7.046013832092285
    8. '4' → logprob: -7.046013832092285
    9. '5' → logprob: -7.171013832092285
    10. '3' → logprob: -7.546013832092285

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014299227041192353
    2. '('' → logprob: -9.875143051147461
    3. ''' → logprob: -10.750143051147461
    4. '```' → logprob: -11.250143051147461
    5. '`' → logprob: -11.375143051147461
    6. '("("' → logprob: -11.750143051147461
    7. '()' → logprob: -11.875143051147461
    8. '(`' → logprob: -12.125143051147461
    9. ' (' → logprob: -12.250143051147461
    10. '(
' → logprob: -12.625143051147461

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.467230886220932
    2. ')' → logprob: -1.7172309160232544
    3. '()' → logprob: -1.8422309160232544
    4. '())' → logprob: -3.467230796813965
    5. '(
' → logprob: -6.842230796813965
    6. '))' → logprob: -7.092230796813965
    7. '('' → logprob: -7.092230796813965
    8. '")' → logprob: -8.717230796813965
    9. '("("' → logprob: -8.967230796813965
    10. '```' → logprob: -8.967230796813965

Token 8: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5439565181732178
    2. 'result' → logprob: -1.6689565181732178
    3. 'a' → logprob: -2.0439565181732178
    4. 'x' → logprob: -2.6689565181732178
    5. 'fact' → logprob: -2.9189565181732178
    6. 'for' → logprob: -2.9189565181732178
    7. '`' → logprob: -3.4189565181732178
    8. 'total' → logprob: -3.5439565181732178
    9. 'factor' → logprob: -3.5439565181732178
    10. 'f' → logprob: -3.7939565181732178

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007432461716234684
    2. '.' → logprob: -5.132432460784912
    3. '[]' → logprob: -7.007432460784912
    4. '[A' → logprob: -8.38243293762207
    5. '[:]' → logprob: -9.00743293762207
    6. '[i' → logprob: -10.00743293762207
    7. '\[' → logprob: -10.25743293762207
    8. ')' → logprob: -10.38243293762207
    9. '.append' → logprob: -10.50743293762207
    10. '[a' → logprob: -11.25743293762207

Token 10: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9364716410636902
    2. ' [' → logprob: -1.186471700668335
    3. ' fractions' → logprob: -1.561471700668335
    4. ' list' → logprob: -2.686471700668335
    5. 'list' → logprob: -4.811471462249756
    6. '[]' → logprob: -4.936471462249756
    7. '[' → logprob: -5.186471462249756
    8. 'fra' → logprob: -6.311471462249756
    9. '[int' → logprob: -7.061471462249756
    10. '[f' → logprob: -8.186471939086914

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005722135538235307
    2. ' int' → logprob: -7.500572204589844
    3. '(int' → logprob: -11.750572204589844
    4. 'fra' → logprob: -12.000572204589844
    5. ']int' → logprob: -13.500572204589844
    6. '```' → logprob: -13.625572204589844
    7. '0' → logprob: -14.000572204589844
    8. ')' → logprob: -15.000572204589844
    9. '<int' → logprob: -15.125572204589844
    10. '[int' → logprob: -15.125572204589844

Token 12: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02687293291091919
    2. '(input' → logprob: -3.6518728733062744
    3. '()' → logprob: -8.276872634887695
    4. '(x' → logprob: -8.401872634887695
    5. ' (' → logprob: -10.901872634887695
    6. '()]' → logprob: -11.401872634887695
    7. '(user' → logprob: -11.526872634887695
    8. '(i' → logprob: -11.776872634887695
    9. '(

' → logprob: -12.026872634887695
    10. ')' → logprob: -12.276872634887695

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021311102900654078
    2. '())' → logprob: -6.25213098526001
    3. 'input' → logprob: -9.377131462097168
    4. ' )' → logprob: -9.752131462097168
    5. ')]' → logprob: -10.252131462097168
    6. '()' → logprob: -11.752131462097168
    7. '(input' → logprob: -12.127131462097168
    8. ')])' → logprob: -13.252131462097168
    9. '(' → logprob: -13.502131462097168
    10. 'a' → logprob: -14.252131462097168

Token 14: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029617734253406525
    2. 'for' → logprob: -6.1279616355896
    3. ' for' → logprob: -8.252962112426758
    4. '(' → logprob: -8.752962112426758
    5. ')]' → logprob: -9.252962112426758
    6. 'input' → logprob: -10.002962112426758
    7. '()' → logprob: -10.002962112426758
    8. '(input' → logprob: -10.252962112426758
    9. '(i' → logprob: -10.752962112426758
    10. '(x' → logprob: -10.877962112426758

Token 15: ' a' (ID: 261)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0072387405671179295
    2. 'input' → logprob: -5.257238864898682
    3. ' ' → logprob: -6.632238864898682
    4. ' range' → logprob: -7.382238864898682
    5. '(input' → logprob: -10.132238388061523
    6. 'range' → logprob: -12.382238388061523
    7. '_input' → logprob: -12.382238388061523
    8. '=input' → logprob: -12.507238388061523
    9. ' in' → logprob: -13.007238388061523
    10. ' a' → logprob: -13.257238388061523

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004302884452044964
    2. 'in' → logprob: -5.504302978515625
    3. ' ' → logprob: -9.129302978515625
    4. 'a' → logprob: -10.004302978515625
    5. 'input' → logprob: -10.879302978515625
    6. 'import' → logprob: -11.379302978515625
    7. '_' → logprob: -11.379302978515625
    8. '  ' → logprob: -11.754302978515625
    9. '<|end|>' → logprob: -12.754302978515625
    10. '_in' → logprob: -13.129302978515625

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002078503370285
    2. ' input' → logprob: -2.350207805633545
    3. 'range' → logprob: -14.100208282470703
    4. '(input' → logprob: -15.350208282470703
    5. ' range' → logprob: -16.225208282470703
    6. ' ' → logprob: -16.350208282470703
    7. '=input' → logprob: -17.100208282470703
    8. '<input' → logprob: -17.975208282470703
    9. '_input' → logprob: -18.100208282470703
    10. '	input' → logprob: -18.100208282470703

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.22997300326824188
    2. '()' → logprob: -1.9799729585647583
    3. '()]' → logprob: -2.729973077774048
    4. '())' → logprob: -6.229972839355469
    5. '(' → logprob: -8.979972839355469
    6. '()].' → logprob: -10.354972839355469
    7. '()],' → logprob: -12.229972839355469
    8. '()][' → logprob: -12.479972839355469
    9. '(),' → logprob: -12.729972839355469
    10. '()[' → logprob: -13.104972839355469

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005642342148348689
    2. 'strip' → logprob: -7.500564098358154
    3. 'rstrip' → logprob: -11.500564575195312
    4. ' split' → logprob: -13.875564575195312
    5. '(split' → logprob: -16.625564575195312
    6. 'spl' → logprob: -18.125564575195312
    7. 'read' → logprob: -20.250564575195312
    8. ' strip' → logprob: -20.250564575195312
    9. 'replace' → logprob: -20.375564575195312
    10. '.split' → logprob: -21.500564575195312

Token 20: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6204931139945984
    2. '())' → logprob: -0.8704931139945984
    3. '(' → logprob: -3.620493173599243
    4. '()' → logprob: -4.495492935180664
    5. ')]' → logprob: -5.495492935180664
    6. '('' → logprob: -6.620492935180664
    7. '')]' → logprob: -9.620492935180664
    8. ']' → logprob: -10.245492935180664
    9. ')' → logprob: -10.745492935180664
    10. '("' → logprob: -11.120492935180664

Token 21: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5192410945892334
    2. ')]' → logprob: -1.0192410945892334
    3. ')' → logprob: -3.5192410945892334
    4. '])' → logprob: -4.2692413330078125
    5. '])]' → logprob: -8.019241333007812
    6. ')])' → logprob: -8.644241333007812
    7. '()]' → logprob: -11.769241333007812
    8. ' ]' → logprob: -11.894241333007812
    9. '`]' → logprob: -12.019241333007812
    10. '）' → logprob: -12.394241333007812

Token 22: 'func' (ID: 5652)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17995832860469818
    2. 'l' → logprob: -2.0549583435058594
    3. 'result' → logprob: -3.9299583435058594
    4. 'ans' → logprob: -5.304958343505859
    5. 'res' → logprob: -6.054958343505859
    6. 'from' → logprob: -6.054958343505859
    7. 'answer' → logprob: -6.679958343505859
    8. 'count' → logprob: -6.929958343505859
    9. 'd' → logprob: -6.929958343505859
    10. 'x' → logprob: -7.179958343505859

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827576279640198
    2. 's' → logprob: -1.232757568359375
    3. '_' → logprob: -2.607757568359375
    4. 'tion' → logprob: -4.857757568359375
    5. '_t' → logprob: -5.232757568359375
    6. '_s' → logprob: -6.357757568359375
    7. ' =' → logprob: -7.357757568359375
    8. 't' → logprob: -7.857757568359375
    9. '=' → logprob: -7.857757568359375
    10. '(_' → logprob: -8.607757568359375

Token 24: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.015199231915175915
    2. ' fractions' → logprob: -4.765199184417725
    3. 'lambda' → logprob: -5.265199184417725
    4. 'max' → logprob: -7.015199184417725
    5. 'fraction' → logprob: -8.390199661254883
    6. ' lambda' → logprob: -9.140199661254883
    7. 'fr' → logprob: -10.515199661254883
    8. 'min' → logprob: -10.515199661254883
    9. ' ' → logprob: -10.640199661254883
    10. '(lambda' → logprob: -11.140199661254883

Token 25: '.g' (ID: 1940)
  Prédit: '.F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.F' → logprob: -0.5601336359977722
    2. '.' → logprob: -1.310133695602417
    3. '.g' → logprob: -1.935133695602417
    4. '.f' → logprob: -4.435133457183838
    5. ' .' → logprob: -6.435133457183838
    6. '.G' → logprob: -7.560133457183838
    7. '.factor' → logprob: -8.310133934020996
    8. '.Counter' → logprob: -8.810133934020996
    9. '.Future' → logprob: -10.310133934020996
    10. '.Function' → logprob: -10.560133934020996

Token 26: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.60414821645827e-06
    2. 'cdn' → logprob: -12.750004768371582
    3. 'CD' → logprob: -14.625004768371582
    4. 'roup' → logprob: -14.875004768371582
    5. 'reat' → logprob: -15.125004768371582
    6. '```' → logprob: -15.125004768371582
    7. 'g' → logprob: -16.250003814697266
    8. ' gcd' → logprob: -16.625003814697266
    9. 'mp' → logprob: -17.375003814697266
    10. 'r' → logprob: -17.375003814697266

Token 27: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027608913369476795
    2. '(A' → logprob: -7.127760887145996
    3. '<|end|>' → logprob: -7.127760887145996
    4. '(
' → logprob: -7.877760887145996
    5. '(a' → logprob: -8.127760887145996
    6. ')' → logprob: -9.002760887145996
    7. '<|end|>' → logprob: -10.002760887145996
    8. '(N' → logprob: -10.377760887145996
    9. '(n' → logprob: -10.377760887145996
    10. '(f' → logprob: -10.502760887145996

Token 28: 'ie' (ID: 396)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043205626308918
    2. '_' → logprob: -3.418205738067627
    3. ')' → logprob: -5.918205738067627
    4. '<|end|>' → logprob: -6.043205738067627
    5. '(
' → logprob: -6.918205738067627
    6. '(a' → logprob: -6.918205738067627
    7. '(A' → logprob: -7.293205738067627
    8. 's' → logprob: -8.543205261230469
    9. '<|end|>' → logprob: -8.918205261230469
    10. 'def' → logprob: -9.043205261230469

Token 29: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7784861326217651
    2. '.' → logprob: -0.9034861326217651
    3. 'x' → logprob: -2.6534862518310547
    4. '=' → logprob: -3.5284862518310547
    5. 't' → logprob: -5.528486251831055
    6. 'f' → logprob: -5.778486251831055
    7. 'l' → logprob: -5.778486251831055
    8. 'e' → logprob: -5.903486251831055
    9. '_' → logprob: -6.028486251831055
    10. '._' → logprob: -6.028486251831055

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4258206784725189
    2. '0' → logprob: -2.5508205890655518
    3. ' ' → logprob: -2.5508205890655518
    4. 'len' → logprob: -3.1758205890655518
    5. 'N' → logprob: -3.3008205890655518
    6. ' N' → logprob: -3.4258205890655518
    7. '2' → logprob: -4.800820827484131
    8. 'A' → logprob: -4.925820827484131
    9. '-' → logprob: -4.925820827484131
    10. 'func' → logprob: -5.050820827484131

Token 31: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35339808464050293
    2. 'A' → logprob: -2.103398084640503
    3. '0' → logprob: -2.853398084640503
    4. 'len' → logprob: -3.353398084640503
    5. 'N' → logprob: -4.103398323059082
    6. 'func' → logprob: -4.353398323059082
    7. 'float' → logprob: -4.478398323059082
    8. '-' → logprob: -4.978398323059082
    9. 'reduce' → logprob: -4.978398323059082
    10. '2' → logprob: -5.353398323059082

Token 32: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: 'get' (ID: 522)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20134267210960388
    2. 'while' → logprob: -2.5763425827026367
    3. 'i' → logprob: -3.5763425827026367
    4. 'x' → logprob: -3.8263425827026367
    5. '
' → logprob: -3.9513425827026367
    6. '<|end|>' → logprob: -4.201342582702637
    7. ' for' → logprob: -5.201342582702637
    8. 'N' → logprob: -5.451342582702637
    9. 'if' → logprob: -6.076342582702637
    10. 'n' → logprob: -6.201342582702637

Token 34: 'LEN' (ID: 83946)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10970298200845718
    2. 'attr' → logprob: -3.4847030639648438
    3. '_item' → logprob: -4.234703063964844
    4. ' ' → logprob: -4.359703063964844
    5. 'item' → logprob: -4.859703063964844
    6. 'func' → logprob: -4.859703063964844
    7. ' _' → logprob: -4.984703063964844
    8. ')' → logprob: -5.734703063964844
    9. 'f' → logprob: -5.859703063964844
    10. 's' → logprob: -6.109703063964844

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8835359215736389
    2. '(' → logprob: -1.2585358619689941
    3. ' =' → logprob: -1.7585358619689941
    4. '=len' → logprob: -2.883535861968994
    5. '_' → logprob: -3.383535861968994
    6. ')' → logprob: -4.633535861968994
    7. 's' → logprob: -5.508535861968994
    8. 'len' → logprob: -5.633535861968994
    9. 'func' → logprob: -5.758535861968994
    10. 'A' → logprob: -5.758535861968994

Token 36: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2045997977256775
    2. ' len' → logprob: -1.8295998573303223
    3. 'N' → logprob: -4.704599857330322
    4. ' N' → logprob: -4.829599857330322
    5. '(len' → logprob: -6.079599857330322
    6. ' ' → logprob: -6.704599857330322
    7. '1' → logprob: -6.829599857330322
    8. '0' → logprob: -7.454599857330322
    9. 'min' → logprob: -7.704599857330322
    10. '[len' → logprob: -8.079599380493164

Token 37: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.012112479656934738
    2. 'N' → logprob: -5.137112617492676
    3. ' len' → logprob: -6.012112617492676
    4. '1' → logprob: -6.137112617492676
    5. 'lambda' → logprob: -7.762112617492676
    6. '2' → logprob: -8.387112617492676
    7. '0' → logprob: -8.762112617492676
    8. '10' → logprob: -9.262112617492676
    9. 'min' → logprob: -9.387112617492676
    10. '[len' → logprob: -9.887112617492676

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.24112069606781
    2. 'while' → logprob: -1.49112069606781
    3. '
' → logprob: -2.2411208152770996
    4. '+' → logprob: -2.4911208152770996
    5. ' ' → logprob: -2.8661208152770996
    6. '0' → logprob: -3.3661208152770996
    7. ' while' → logprob: -3.4911208152770996
    8. ':' → logprob: -3.7411208152770996
    9. ' for' → logprob: -3.7411208152770996
    10. ',' → logprob: -3.8661208152770996

Token 40: ' get' (ID: 717)
  Prédit: ' ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ie' → logprob: -0.6907191276550293
    2. ' get' → logprob: -0.8157191276550293
    3. 'get' → logprob: -3.6907191276550293
    4. 'ie' → logprob: -3.9407191276550293
    5. ' ' → logprob: -5.440719127655029
    6. ' N' → logprob: -6.065719127655029
    7. ' len' → logprob: -6.190719127655029
    8. ' i' → logprob: -6.190719127655029
    9. 'N' → logprob: -7.815719127655029
    10. ' A' → logprob: -9.065719604492188

Token 41: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.008720578625798225
    2. '<len' → logprob: -5.508720397949219
    3. '_LEN' → logprob: -6.133720397949219
    4. '<' → logprob: -7.508720397949219
    5. '_len' → logprob: -7.633720397949219
    6. ' <' → logprob: -7.633720397949219
    7. 'len' → logprob: -8.133720397949219
    8. '<=' → logprob: -8.758720397949219
    9. ' LEN' → logprob: -9.508720397949219
    10. '_' → logprob: -9.883720397949219

Token 42: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04676349461078644
    2. ' <=' → logprob: -3.4217634201049805
    3. '<' → logprob: -4.5467634201049805
    4. ' ' → logprob: -6.2967634201049805
    5. '<=' → logprob: -8.04676342010498
    6. '<len' → logprob: -8.67176342010498
    7. ' >' → logprob: -10.54676342010498
    8. ' !=' → logprob: -11.42176342010498
    9. ' <<=' → logprob: -11.54676342010498
    10. ' <<' → logprob: -12.04676342010498

Token 43: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.021134648472070694
    2. 'len' → logprob: -4.146134853363037
    3. ' N' → logprob: -5.396134853363037
    4. ' len' → logprob: -8.271134376525879
    5. ' ' → logprob: -9.646134376525879
    6. '=' → logprob: -9.646134376525879
    7. '2' → logprob: -9.896134376525879
    8. 'n' → logprob: -10.771134376525879
    9. '10' → logprob: -11.021134376525879
    10. '=N' → logprob: -11.271134376525879

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09495247155427933
    2. ' and' → logprob: -2.5949525833129883
    3. ' :' → logprob: -4.469952583312988
    4. ':
' → logprob: -6.094952583312988
    5. 'and' → logprob: -6.219952583312988
    6. ' :
' → logprob: -9.094952583312988
    7. ' ' → logprob: -9.594952583312988
    8. '():' → logprob: -11.469952583312988
    9. '1' → logprob: -12.469952583312988
    10. '6' → logprob: -12.594952583312988

Token 45: '   ' (ID: 271)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6162881851196289
    2. ' ' → logprob: -1.241288185119629
    3. ' if' → logprob: -2.491288185119629
    4. ' func' → logprob: -3.741288185119629
    5. 'get' → logprob: -3.991288185119629
    6. ' 
' → logprob: -4.116288185119629
    7. '   ' → logprob: -4.491288185119629
    8. '    ' → logprob: -5.491288185119629
    9. '<|end|>' → logprob: -5.616288185119629
    10. ' ' → logprob: -6.366288185119629

Token 46: ' get' (ID: 717)
  Prédit: ' ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ie' → logprob: -1.1362444162368774
    2. ' func' → logprob: -1.2612444162368774
    3. ' get' → logprob: -1.5112444162368774
    4. ' ' → logprob: -2.511244297027588
    5. ' if' → logprob: -3.136244297027588
    6. ' new' → logprob: -4.386244297027588
    7. ' g' → logprob: -5.011244297027588
    8. ' val' → logprob: -5.511244297027588
    9. 'ie' → logprob: -5.636244297027588
    10. 'func' → logprob: -6.136244297027588

Token 47: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.0006171276327222586
    2. '_LEN' → logprob: -8.250617027282715
    3. '_len' → logprob: -8.625617027282715
    4. 'len' → logprob: -9.750617027282715
    5. '=' → logprob: -10.125617027282715
    6. ' =' → logprob: -10.500617027282715
    7. ' LEN' → logprob: -11.000617027282715
    8. 'L' → logprob: -12.000617027282715
    9. 'func' → logprob: -12.125617027282715
    10. 'Len' → logprob: -12.750617027282715

Token 48: ' *=' (ID: 25253)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.13768428564071655
    2. '*=' → logprob: -2.7626843452453613
    3. ' *=' → logprob: -3.3876843452453613
    4. '<<' → logprob: -3.6376843452453613
    5. '=' → logprob: -5.512684345245361
    6. '*' → logprob: -7.762684345245361
    7. ' ' → logprob: -8.137683868408203
    8. ' =' → logprob: -8.512683868408203
    9. '2' → logprob: -8.762683868408203
    10. '+=' → logprob: -9.637683868408203

Token 49: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023303363472223282
    2. ' ' → logprob: -3.773303270339966
    3. 'func' → logprob: -10.148303031921387
    4. ' func' → logprob: -12.148303031921387
    5. '3' → logprob: -12.898303031921387
    6. '  ' → logprob: -13.148303031921387
    7. '   ' → logprob: -13.523303031921387
    8. 'A' → logprob: -13.648303031921387
    9. ' A' → logprob: -14.085803031921387
    10. 'get' → logprob: -14.210803031921387

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017438429640606046
    2. ' ' → logprob: -6.376743793487549
    3. 'func' → logprob: -10.626744270324707
    4. '3' → logprob: -12.376744270324707
    5. 'A' → logprob: -12.501744270324707
    6. '10' → logprob: -12.751744270324707
    7. ' func' → logprob: -13.814244270324707
    8. '   ' → logprob: -13.876744270324707
    9. ' A' → logprob: -14.189244270324707
    10. '  ' → logprob: -14.189244270324707

Token 51: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6151620149612427
    2. '
' → logprob: -1.4901620149612427
    3. ' 
' → logprob: -1.9901620149612427
    4. ',' → logprob: -3.490161895751953
    5. 'func' → logprob: -4.490161895751953
    6. ' ,' → logprob: -4.615161895751953
    7. '<|end|>' → logprob: -4.615161895751953
    8. '   ' → logprob: -5.490161895751953
    9. '  
' → logprob: -5.490161895751953
    10. ' func' → logprob: -5.615161895751953

Token 52: 'get' (ID: 522)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.8007699847221375
    2. 'get' → logprob: -2.1757700443267822
    3. '
' → logprob: -2.4257700443267822
    4. ' func' → logprob: -2.6757700443267822
    5. ' 
' → logprob: -3.1757700443267822
    6. 'import' → logprob: -3.5507700443267822
    7. 'if' → logprob: -3.8007700443267822
    8. ' if' → logprob: -3.8007700443267822
    9. ' get' → logprob: -3.9257700443267822
    10. 'while' → logprob: -4.175769805908203

Token 53: 'size' (ID: 4461)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.00025108797126449645
    2. 'L' → logprob: -8.500250816345215
    3. 'FUNC' → logprob: -11.500250816345215
    4. 'LEM' → logprob: -11.750250816345215
    5. 'len' → logprob: -12.125250816345215
    6. 'LIN' → logprob: -12.500250816345215
    7. ' LEN' → logprob: -12.750250816345215
    8. 'func' → logprob: -12.875250816345215
    9. 'LE' → logprob: -13.000250816345215
    10. '_LEN' → logprob: -13.000250816345215

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02136244997382164
    2. '=' → logprob: -4.1463623046875
    3. 's' → logprob: -5.2713623046875
    4. ' ' → logprob: -9.6463623046875
    5. 'size' → logprob: -10.6463623046875
    6. '_' → logprob: -11.0213623046875
    7. 'd' → logprob: -11.2713623046875
    8. '=get' → logprob: -11.2713623046875
    9. '=size' → logprob: -11.3963623046875
    10. '  ' → logprob: -12.1463623046875

Token 55: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2772118151187897
    2. ' get' → logprob: -1.5272117853164673
    3. '[get' → logprob: -3.902211904525757
    4. '2' → logprob: -6.277211666107178
    5. ' [' → logprob: -6.777211666107178
    6. '[' → logprob: -6.902211666107178
    7. ' ' → logprob: -8.402212142944336
    8. 'len' → logprob: -8.527212142944336
    9. '1' → logprob: -8.902212142944336
    10. 'func' → logprob: -10.652212142944336

Token 56: 'LEN' (ID: 83946)
  Prédit: 'LEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.0003103175258729607
    2. 'SIZE' → logprob: -8.125309944152832
    3. '_LEN' → logprob: -12.375309944152832
    4. 'L' → logprob: -12.750309944152832
    5. 'len' → logprob: -12.750309944152832
    6. 'size' → logprob: -13.500309944152832
    7. ' LEN' → logprob: -13.500309944152832
    8. 'LEM' → logprob: -15.375309944152832
    9. '_len' → logprob: -15.750309944152832
    10. 'LE' → logprob: -15.875309944152832

Token 57: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09226230531930923
    2. ' *' → logprob: -2.4672622680664062
    3. ' //' → logprob: -6.967262268066406
    4. '//' → logprob: -7.217262268066406
    5. ' ' → logprob: -7.842262268066406
    6. '2' → logprob: -7.842262268066406
    7. '```' → logprob: -8.717262268066406
    8. 'import' → logprob: -8.842262268066406
    9. '**' → logprob: -9.467262268066406
    10. '
' → logprob: -9.842262268066406

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1002708226442337
    2. ' ' → logprob: -2.3502707481384277
    3. '  ' → logprob: -11.100271224975586
    4. '4' → logprob: -11.225271224975586
    5. '   ' → logprob: -11.600271224975586
    6. '*' → logprob: -12.600271224975586
    7. '<|end|>' → logprob: -12.912771224975586
    8. '`' → logprob: -13.412771224975586
    9. '1' → logprob: -13.475271224975586
    10. '3' → logprob: -13.662771224975586

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001194275333546102
    2. ' ' → logprob: -6.751194477081299
    3. '4' → logprob: -10.87619400024414
    4. '3' → logprob: -13.87619400024414
    5. '1' → logprob: -14.06369400024414
    6. '*' → logprob: -14.87619400024414
    7. '  ' → logprob: -14.87619400024414
    8. '8' → logprob: -15.43869400024414
    9. '   ' → logprob: -15.43869400024414
    10. '-' → logprob: -15.68869400024414

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6062145829200745
    2. '<|end|>' → logprob: -1.9812145233154297
    3. '*' → logprob: -2.1062145233154297
    4. '+' → logprob: -3.2312145233154297
    5. '\n' → logprob: -3.3562145233154297
    6. '[' → logprob: -3.8562145233154297
    7. '<|end|>' → logprob: -4.35621452331543
    8. 'newline' → logprob: -4.48121452331543
    9. ':' → logprob: -4.60621452331543
    10. '\' → logprob: -4.85621452331543

Token 61: 'get' (ID: 522)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1676210165023804
    2. 'dp' → logprob: -1.2926210165023804
    3. 'tree' → logprob: -2.04262113571167
    4. 'arr' → logprob: -2.41762113571167
    5. 'seg' → logprob: -3.29262113571167
    6. ' data' → logprob: -3.79262113571167
    7. 'res' → logprob: -3.91762113571167
    8. 'array' → logprob: -4.41762113571167
    9. 'result' → logprob: -4.66762113571167
    10. ' seg' → logprob: -4.79262113571167

Token 62: 'LIN' (ID: 61147)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.43945762515068054
    2. 'size' → logprob: -1.314457654953003
    3. 'array' → logprob: -3.439457654953003
    4. 'SIZE' → logprob: -4.564457416534424
    5. 'arr' → logprob: -4.689457416534424
    6. 'len' → logprob: -5.064457416534424
    7. 'A' → logprob: -5.689457416534424
    8. 'data' → logprob: -5.689457416534424
    9. '_len' → logprob: -6.189457416534424
    10. 'list' → logprob: -6.314457416534424

Token 63: ' =' (ID: 314)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.07522627711296082
    2. 'F' → logprob: -2.950226306915283
    3. 'K' → logprob: -4.575226306915283
    4. 'T' → logprob: -5.950226306915283
    5. 'G' → logprob: -6.575226306915283
    6. 'EN' → logprob: -6.825226306915283
    7. 'e' → logprob: -7.325226306915283
    8. ' =' → logprob: -7.700226306915283
    9. 'k' → logprob: -7.825226306915283
    10. 'EW' → logprob: -7.825226306915283

Token 64: ' get' (ID: 717)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9408420920372009
    2. ' [' → logprob: -1.8158421516418457
    3. '[get' → logprob: -1.8158421516418457
    4. 'get' → logprob: -2.3158421516418457
    5. '0' → logprob: -2.3158421516418457
    6. '[]' → logprob: -3.4408421516418457
    7. '1' → logprob: -3.9408421516418457
    8. ' get' → logprob: -4.315842151641846
    9. ' ' → logprob: -5.190842151641846
    10. ' []' → logprob: -5.565842151641846

Token 65: 'size' (ID: 4461)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.4598219394683838
    2. 'size' → logprob: -1.7098219394683838
    3. 'SIZE' → logprob: -1.7098219394683838
    4. 'S' → logprob: -6.334821701049805
    5. '_SIZE' → logprob: -6.959821701049805
    6. 'L' → logprob: -7.084821701049805
    7. '_size' → logprob: -7.709821701049805
    8. ' size' → logprob: -7.834821701049805
    9. 'len' → logprob: -8.584821701049805
    10. '_LEN' → logprob: -8.584821701049805

Token 66: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6071923971176147
    2. '//' → logprob: -1.6071923971176147
    3. '<|end|>' → logprob: -2.2321925163269043
    4. '
' → logprob: -2.3571925163269043
    5. ' -' → logprob: -3.9821925163269043
    6. ' ' → logprob: -4.357192516326904
    7. ' 
' → logprob: -4.982192516326904
    8. '-' → logprob: -5.982192516326904
    9. '```' → logprob: -5.982192516326904
    10. '<|end|>' → logprob: -6.107192516326904

Token 67: ' get' (ID: 717)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009850997477769852
    2. ' ' → logprob: -4.634850978851318
    3. '2' → logprob: -10.509851455688477
    4. 'N' → logprob: -10.634851455688477
    5. 'get' → logprob: -10.759851455688477
    6. ' get' → logprob: -12.009851455688477
    7. ' N' → logprob: -12.134851455688477
    8. '  ' → logprob: -12.634851455688477
    9. '   ' → logprob: -13.009851455688477
    10. '<|end|>' → logprob: -14.322351455688477

Token 68: 'LEN' (ID: 83946)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6232203841209412
    2. 'LEN' → logprob: -0.9982203841209412
    3. 'size' → logprob: -3.373220443725586
    4. 'L' → logprob: -3.498220443725586
    5. 'LIN' → logprob: -5.248220443725586
    6. '1' → logprob: -5.873220443725586
    7. 'x' → logprob: -5.873220443725586
    8. 'IN' → logprob: -6.123220443725586
    9. 'R' → logprob: -6.123220443725586
    10. 'X' → logprob: -6.373220443725586

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8906266093254089
    2. 'while' → logprob: -1.6406266689300537
    3. ' while' → logprob: -1.8906266689300537
    4. ' for' → logprob: -2.6406266689300537
    5. '<|end|>' → logprob: -3.0156266689300537
    6. 'for' → logprob: -3.3906266689300537
    7. ' 
' → logprob: -4.015626430511475
    8. '*' → logprob: -4.515626430511475
    9. 'get' → logprob: -4.515626430511475
    10. ' ' → logprob: -5.140626430511475

Token 70: 'ST' (ID: 1117)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.060999870300293
    2. ' while' → logprob: -2.060999870300293
    3. 'data' → logprob: -2.435999870300293
    4. 'tree' → logprob: -2.435999870300293
    5. 'for' → logprob: -3.310999870300293
    6. 'result' → logprob: -3.310999870300293
    7. 'get' → logprob: -3.435999870300293
    8. '#' → logprob: -3.685999870300293
    9. ' for' → logprob: -3.810999870300293
    10. '+' → logprob: -3.810999870300293

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028810808435082436
    2. '=' → logprob: -3.778810739517212
    3. 'ree' → logprob: -5.903810977935791
    4. '_' → logprob: -7.028810977935791
    5. '_size' → logprob: -7.653810977935791
    6. '=[]' → logprob: -8.028810501098633
    7. '=[' → logprob: -8.528810501098633
    8. ' ' → logprob: -8.653810501098633
    9. 'REE' → logprob: -8.903810501098633
    10. '_SIZE' → logprob: -8.903810501098633

Token 72: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34857216477394104
    2. ' [' → logprob: -1.2235721349716187
    3. '[f' → logprob: -10.22357177734375
    4. '[int' → logprob: -10.59857177734375
    5. '[n' → logprob: -11.47357177734375
    6. '[a' → logprob: -11.59857177734375
    7. '[get' → logprob: -11.72357177734375
    8. '[-' → logprob: -11.84857177734375
    9. '[len' → logprob: -12.47357177734375
    10. ' ' → logprob: -12.84857177734375

Token 73: 'ie' (ID: 396)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006102866027504206
    2. ' ' → logprob: -5.131103038787842
    3. '-' → logprob: -9.381102561950684
    4. '1' → logprob: -10.131102561950684
    5. 'None' → logprob: -11.006102561950684
    6. ' -' → logprob: -11.256102561950684
    7. ']' → logprob: -12.131102561950684
    8. ' None' → logprob: -12.881102561950684
    9. 'float' → logprob: -13.006102561950684
    10. '(' → logprob: -13.631102561950684

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03480597212910652
    2. ',' → logprob: -4.159805774688721
    3. ' for' → logprob: -4.909805774688721
    4. ']*' → logprob: -4.909805774688721
    5. ' ]' → logprob: -5.659805774688721
    6. ']*(' → logprob: -8.784806251525879
    7. 'for' → logprob: -9.784806251525879
    8. ']+' → logprob: -10.409806251525879
    9. ')' → logprob: -10.659806251525879
    10. '()]' → logprob: -10.784806251525879

Token 75: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3146193325519562
    2. '0' → logprob: -1.5646193027496338
    3. ' *' → logprob: -4.314619541168213
    4. '*' → logprob: -4.564619541168213
    5. '+' → logprob: -4.939619541168213
    6. '[' → logprob: -5.314619541168213
    7. ' for' → logprob: -5.439619541168213
    8. ' ' → logprob: -5.439619541168213
    9. ']' → logprob: -5.564619541168213
    10. ' ,' → logprob: -5.814619541168213

Token 76: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.02122381702065468
    2. ' get' → logprob: -4.146224021911621
    3. '(get' → logprob: -5.271224021911621
    4. ' (' → logprob: -10.396224021911621
    5. '[get' → logprob: -12.271224021911621
    6. '(' → logprob: -13.521224021911621
    7. '@get' → logprob: -13.771224021911621
    8. '.get' → logprob: -15.771224021911621
    9. ')get' → logprob: -15.771224021911621
    10. '_get' → logprob: -16.021223068237305

Token 77: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.00029351349803619087
    2. 'SIZE' → logprob: -8.375293731689453
    3. 'siz' → logprob: -10.875293731689453
    4. 'LIN' → logprob: -11.375293731689453
    5. 'get' → logprob: -11.500293731689453
    6. 'sizei' → logprob: -11.875293731689453
    7. 'LEN' → logprob: -12.250293731689453
    8. 'sz' → logprob: -12.875293731689453
    9. 'ize' → logprob: -13.875293731689453
    10. '<size' → logprob: -14.000293731689453

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23405086994171143
    2. ' 
' → logprob: -2.359050750732422
    3. '<|end|>' → logprob: -3.609050750732422
    4. '  
' → logprob: -4.484050750732422
    5. 'def' → logprob: -4.609050750732422
    6. ' ' → logprob: -4.734050750732422
    7. '
' → logprob: -4.859050750732422
    8. '\n' → logprob: -4.859050750732422
    9. '[' → logprob: -5.234050750732422
    10. 'while' → logprob: -5.609050750732422

Token 79: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.78961580991745
    2. ')' → logprob: -1.4146158695220947
    3. '<|end|>' → logprob: -1.4146158695220947
    4. 'for' → logprob: -4.414615631103516
    5. '
' → logprob: -4.414615631103516
    6. '<|end|>' → logprob: -4.789615631103516
    7. ' ' → logprob: -5.039615631103516
    8. ']' → logprob: -5.039615631103516
    9. ' for' → logprob: -5.664615631103516
    10. ' 
' → logprob: -6.039615631103516

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0032534082420170307
    2. 'i' → logprob: -6.00325345993042
    3. ' range' → logprob: -8.253252983093262
    4. ' _' → logprob: -8.878252983093262
    5. ' ' → logprob: -9.003252983093262
    6. ' index' → logprob: -9.628252983093262
    7. ' in' → logprob: -10.003252983093262
    8. ' (' → logprob: -10.253252983093262
    9. ' I' → logprob: -11.003252983093262
    10. ' idx' → logprob: -11.003252983093262

Token 81: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023369863629341125
    2. 'in' → logprob: -3.773369789123535
    3. ',' → logprob: -9.648369789123535
    4. ' ' → logprob: -9.898369789123535
    5. '	in' → logprob: -12.773369789123535
    6. 'range' → logprob: -13.273369789123535
    7. ',in' → logprob: -13.898369789123535
    8. 'n' → logprob: -14.148369789123535
    9. ')' → logprob: -14.273369789123535
    10. '  ' → logprob: -14.523369789123535

Token 82: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2654576003551483
    2. ' a' → logprob: -1.6404576301574707
    3. 'v' → logprob: -3.8904576301574707
    4. ' v' → logprob: -5.015457630157471
    5. 'x' → logprob: -5.140457630157471
    6. 'num' → logprob: -6.515457630157471
    7. 'ai' → logprob: -6.765457630157471
    8. ' x' → logprob: -6.890457630157471
    9. 'val' → logprob: -7.390457630157471
    10. ' num' → logprob: -7.515457630157471

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18457378447055817
    2. 'in' → logprob: -2.4345738887786865
    3. 'n' → logprob: -2.5595738887786865
    4. ',' → logprob: -5.809573650360107
    5. 'enumer' → logprob: -8.559574127197266
    6. 's' → logprob: -8.684574127197266
    7. ' ' → logprob: -9.434574127197266
    8. ',n' → logprob: -11.059574127197266
    9. 'a' → logprob: -11.434574127197266
    10. '<|end|>' → logprob: -11.434574127197266

Token 84: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6931498050689697
    2. 'enumer' → logprob: -0.6931498050689697
    3. '(en' → logprob: -13.69314956665039
    4. ' zip' → logprob: -14.69314956665039
    5. 'zip' → logprob: -15.31814956665039
    6. 'en' → logprob: -15.56814956665039
    7. '```' → logprob: -15.81814956665039
    8. '.enumer' → logprob: -15.94314956665039
    9. ' ' → logprob: -16.56814956665039
    10. ' en' → logprob: -16.81814956665039

Token 85: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.8789383830153383e-05
    2. 'A' → logprob: -11.250019073486328
    3. '(' → logprob: -12.250019073486328
    4. '(a' → logprob: -15.000019073486328
    5. ' A' → logprob: -15.375019073486328
    6. ' (' → logprob: -16.500019073486328
    7. ',A' → logprob: -16.750019073486328
    8. ')' → logprob: -17.000019073486328
    9. '	A' → logprob: -17.500019073486328
    10. '((' → logprob: -17.625019073486328

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1801975816488266
    2. '):
' → logprob: -1.8051975965499878
    3. '):
' → logprob: -8.180197715759277
    4. ':' → logprob: -9.180197715759277
    5. ')' → logprob: -9.930197715759277
    6. ' ):' → logprob: -11.680197715759277
    7. ':
' → logprob: -12.305197715759277
    8. ' ):
' → logprob: -12.930197715759277
    9. ',' → logprob: -13.055197715759277
    10. '):

' → logprob: -13.680197715759277

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27291929721832275
    2. 'ST' → logprob: -2.147919178009033
    3. ' ST' → logprob: -2.647919178009033
    4. '	ST' → logprob: -3.397919178009033
    5. '<|end|>' → logprob: -5.397919178009033
    6. ':' → logprob: -5.522919178009033
    7. '_ST' → logprob: -5.897919178009033
    8. ',' → logprob: -6.647919178009033
    9. '    
' → logprob: -6.772919178009033
    10. ' ' → logprob: -7.272919178009033

Token 88: ' idx' (ID: 14016)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.2930848002433777
    2. ' ST' → logprob: -1.5430848598480225
    3. '   ' → logprob: -3.9180848598480225
    4. '	ST' → logprob: -4.543084621429443
    5. '
' → logprob: -5.793084621429443
    6. ' 
' → logprob: -6.418084621429443
    7. '_ST' → logprob: -6.543084621429443
    8. '    
' → logprob: -6.668084621429443
    9. '<|end|>' → logprob: -6.793084621429443
    10. ' ' → logprob: -8.293085098266602

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05812688171863556
    2. '=' → logprob: -2.933126926422119
    3. '=get' → logprob: -5.808126926422119
    4. 'get' → logprob: -9.433126449584961
    5. '   ' → logprob: -10.183126449584961
    6. ' get' → logprob: -10.558126449584961
    7. ' ' → logprob: -10.808126449584961
    8. 's' → logprob: -11.183126449584961
    9. '+' → logprob: -11.183126449584961
    10. 'idx' → logprob: -11.808126449584961

Token 90: ' i' (ID: 575)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03393463045358658
    2. ' get' → logprob: -3.5339345932006836
    3. 'i' → logprob: -5.533934593200684
    4. ' i' → logprob: -8.658934593200684
    5. '[get' → logprob: -11.533934593200684
    6. ' ' → logprob: -11.658934593200684
    7. '(get' → logprob: -12.158934593200684
    8. '   ' → logprob: -12.158934593200684
    9. '@get' → logprob: -12.533934593200684
    10. '_get' → logprob: -12.783934593200684

Token 91: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25196346640586853
    2. ' +' → logprob: -1.501963496208191
    3. 'get' → logprob: -11.25196361541748
    4. '   ' → logprob: -11.62696361541748
    5. '+=' → logprob: -12.50196361541748
    6. ' get' → logprob: -13.12696361541748
    7. ' ' → logprob: -13.50196361541748
    8. '+n' → logprob: -13.75196361541748
    9. ' +=' → logprob: -14.37696361541748
    10. '＋' → logprob: -14.75196361541748

Token 92: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -7.505351095460355e-05
    2. ' get' → logprob: -9.500075340270996
    3. '[get' → logprob: -16.87507438659668
    4. '_get' → logprob: -17.75007438659668
    5. '(get' → logprob: -17.75007438659668
    6. '=get' → logprob: -18.12507438659668
    7. '@get' → logprob: -19.12507438659668
    8. '	get' → logprob: -19.12507438659668
    9. '/get' → logprob: -19.87507438659668
    10. ')get' → logprob: -20.50007438659668

Token 93: 'LIN' (ID: 61147)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.0052360063418745995
    2. 'LIN' → logprob: -5.2552361488342285
    3. 'LINE' → logprob: -14.13023567199707
    4. ' LEN' → logprob: -14.13023567199707
    5. 'LN' → logprob: -15.00523567199707
    6. 'L' → logprob: -16.13023567199707
    7. 'LEX' → logprob: -16.38023567199707
    8. 'LAN' → logprob: -16.75523567199707
    9. 'len' → logprob: -17.13023567199707
    10. 'LEM' → logprob: -17.25523567199707

Token 94: '
' (ID: 198)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.024745572358369827
    2. '
' → logprob: -4.524745464324951
    3. ' ST' → logprob: -5.024745464324951
    4. '[' → logprob: -5.649745464324951
    5. '	ST' → logprob: -7.149745464324951
    6. '   ' → logprob: -7.899745464324951
    7. '<|end|>' → logprob: -8.14974594116211
    8. '    
' → logprob: -8.14974594116211
    9. ']' → logprob: -8.52474594116211
    10. '_ST' → logprob: -8.77474594116211

Token 95: '   ' (ID: 271)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.026594726368784904
    2. '
' → logprob: -4.026594638824463
    3. '   ' → logprob: -5.401594638824463
    4. ' ST' → logprob: -6.651594638824463
    5. '	ST' → logprob: -6.651594638824463
    6. '    
' → logprob: -7.401594638824463
    7. '<|end|>' → logprob: -7.901594638824463
    8. '  
' → logprob: -9.276595115661621
    9. '_ST' → logprob: -10.276595115661621
    10. '[' → logprob: -10.401595115661621

Token 96: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' (adapté à ' ST') → logprob: -0.003115091472864151
    2. '   ' → logprob: -5.878115177154541
    3. ' ST' → logprob: -8.253114700317383
    4. '	ST' → logprob: -10.253114700317383
    5. '_ST' → logprob: -12.378114700317383
    6. ' ' → logprob: -12.878114700317383
    7. 'import' → logprob: -13.253114700317383
    8. 'st' → logprob: -14.003114700317383
    9. '  ' → logprob: -14.128114700317383
    10. '
' → logprob: -14.378114700317383

Token 97: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003403495065867901
    2. '[' → logprob: -8.250340461730957
    3. '[i' → logprob: -9.750340461730957
    4. ' [' → logprob: -11.625340461730957
    5. '[index' → logprob: -13.125340461730957
    6. 'idx' → logprob: -13.750340461730957
    7. '[ix' → logprob: -14.000340461730957
    8. '```' → logprob: -14.000340461730957
    9. '[:]' → logprob: -14.250340461730957
    10. '[id' → logprob: -14.375340461730957

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11119057983160019
    2. ' =' → logprob: -2.6111905574798584
    3. '=' → logprob: -3.9861905574798584
    4. ' ]' → logprob: -4.9861907958984375
    5. ']=' → logprob: -5.1111907958984375
    6. ')' → logprob: -8.111190795898438
    7. ' )' → logprob: -11.361190795898438
    8. ')=' → logprob: -11.611190795898438
    9. ' ' → logprob: -11.736190795898438
    10. ')]' → logprob: -11.861190795898438

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234377980232239
    2. '=' → logprob: -0.8984377980232239
    3. '=a' → logprob: -8.1484375
    4. '=f' → logprob: -11.7734375
    5. 'a' → logprob: -11.8984375
    6. '=A' → logprob: -12.7734375
    7. ' ' → logprob: -13.2734375
    8. '=int' → logprob: -14.1484375
    9. '=

' → logprob: -14.2734375
    10. '＝' → logprob: -14.8984375

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889385521411896
    2. ' a' → logprob: -2.5788938999176025
    3. 'A' → logprob: -13.953893661499023
    4. ' ' → logprob: -14.078893661499023
    5. 'func' → logprob: -14.203893661499023
    6. '	a' → logprob: -14.703893661499023
    7. 'fra' → logprob: -14.828893661499023
    8. ' fractions' → logprob: -15.453893661499023
    9. '(a' → logprob: -16.078893661499023
    10. ' func' → logprob: -16.328893661499023

Token 101: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9824385046958923
    2. '
' → logprob: -1.607438564300537
    3. ' while' → logprob: -1.607438564300537
    4. '   ' → logprob: -2.857438564300537
    5. '<|end|>' → logprob: -2.982438564300537
    6. ' ' → logprob: -3.482438564300537
    7. '    
' → logprob: -3.857438564300537
    8. 'idx' → logprob: -4.107438564300537
    9. 'for' → logprob: -4.357438564300537
    10. ' 
' → logprob: -4.357438564300537

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11002755910158157
    2. ' for' → logprob: -2.735027551651001
    3. 'while' → logprob: -3.610027551651001
    4. '
' → logprob: -5.73502779006958
    5. ' while' → logprob: -5.73502779006958
    6. 'idx' → logprob: -5.73502779006958
    7. ' ' → logprob: -6.86002779006958
    8. '    
' → logprob: -7.98502779006958
    9. '   ' → logprob: -8.235027313232422
    10. ' 
' → logprob: -8.360027313232422

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030314883217215538
    2. ' idx' → logprob: -3.9053149223327637
    3. ' _' → logprob: -5.030314922332764
    4. ' ' → logprob: -5.905314922332764
    5. 'i' → logprob: -8.155314445495605
    6. '  ' → logprob: -10.155314445495605
    7. 'idx' → logprob: -10.405314445495605
    8. '_' → logprob: -10.780314445495605
    9. ' range' → logprob: -10.905314445495605
    10. ' (' → logprob: -11.155314445495605

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005280722863972187
    2. 'in' → logprob: -5.255280494689941
    3. 'range' → logprob: -11.130280494689941
    4. ' ' → logprob: -11.755280494689941
    5. 'get' → logprob: -11.755280494689941
    6. '   ' → logprob: -11.880280494689941
    7. ' reversed' → logprob: -13.005280494689941
    8. ' get' → logprob: -13.505280494689941
    9. ' range' → logprob: -14.005280494689941
    10. '  ' → logprob: -14.255280494689941

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06282233446836472
    2. ' range' → logprob: -2.8128223419189453
    3. 're' → logprob: -7.562822341918945
    4. ' reversed' → logprob: -8.062822341918945
    5. ' ' → logprob: -11.187822341918945
    6. '   ' → logprob: -12.687822341918945
    7. '  ' → logprob: -13.812822341918945
    8. '(range' → logprob: -13.937822341918945
    9. 'reverse' → logprob: -14.437822341918945
    10. 'get' → logprob: -15.687822341918945

Token 106: '(get' (ID: 7119)
  Prédit: '(get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -2.935296834039036e-06
    2. ' (' → logprob: -13.25000286102295
    3. 'get' → logprob: -14.37500286102295
    4. '((' → logprob: -15.37500286102295
    5. '(' → logprob: -15.87500286102295
    6. ' get' → logprob: -16.500003814697266
    7. ',get' → logprob: -17.375003814697266
    8. '[get' → logprob: -17.875003814697266
    9. '(Get' → logprob: -18.125003814697266
    10. '(len' → logprob: -18.625003814697266

Token 107: 'LIN' (ID: 61147)
  Prédit: 'LIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.0014526135055348277
    2. 'size' → logprob: -7.251452445983887
    3. 'LEN' → logprob: -7.251452445983887
    4. ' LIN' → logprob: -11.376452445983887
    5. 'get' → logprob: -11.626452445983887
    6. 'LN' → logprob: -12.126452445983887
    7. 'LINE' → logprob: -12.501452445983887
    8. 'SIZE' → logprob: -13.376452445983887
    9. ' ' → logprob: -14.876452445983887
    10. 'idx' → logprob: -15.501452445983887

Token 108: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07000935077667236
    2. '-' → logprob: -2.695009231567383
    3. ' ' → logprob: -9.570009231567383
    4. ',' → logprob: -13.570009231567383
    5. '   ' → logprob: -13.820009231567383
    6. ' ' → logprob: -15.070009231567383
    7. '  ' → logprob: -15.195009231567383
    8. '1' → logprob: -16.195009231567383
    9. ' ,' → logprob: -16.195009231567383
    10. '2' → logprob: -17.257509231567383

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '2' → logprob: -15.125123977661133
    4. '-' → logprob: -16.750123977661133
    5. '
' → logprob: -17.187623977661133
    6. '   ' → logprob: -17.500123977661133
    7. '  ' → logprob: -17.562623977661133
    8. '```' → logprob: -17.750123977661133
    9. '１' → logprob: -18.000123977661133
    10. '0' → logprob: -18.125123977661133

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003944496565964073
    2. ' ,' → logprob: -7.875394344329834
    3. ',-' → logprob: -11.250394821166992
    4. '0' → logprob: -14.875394821166992
    5. ' ,-' → logprob: -15.000394821166992
    6. ' -' → logprob: -15.250394821166992
    7. '-' → logprob: -15.375394821166992
    8. ',
' → logprob: -16.250394821166992
    9. '1' → logprob: -16.500394821166992
    10. '   ' → logprob: -17.500394821166992

Token 111: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7879937887191772
    2. '0' → logprob: -1.0379937887191772
    3. ' ' → logprob: -2.287993907928467
    4. ' -' → logprob: -2.412993907928467
    5. ',' → logprob: -10.537993431091309
    6. '   ' → logprob: -11.037993431091309
    7. '  ' → logprob: -11.287993431091309
    8. '    ' → logprob: -12.912993431091309
    9. '
' → logprob: -13.162993431091309
    10. ',-' → logprob: -13.787993431091309

Token 112: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4744253158569336
    2. '0' → logprob: -0.9744253158569336
    3. ' ' → logprob: -8.599425315856934
    4. ' -' → logprob: -8.724425315856934
    5. '   ' → logprob: -13.849425315856934
    6. '  ' → logprob: -15.474425315856934
    7. '
' → logprob: -15.474425315856934
    8. '    ' → logprob: -17.09942626953125
    9. '     ' → logprob: -17.59942626953125
    10. '-get' → logprob: -17.72442626953125

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003442832676228136
    2. ',-' → logprob: -8.250344276428223
    3. ' ,' → logprob: -9.625344276428223
    4. '-' → logprob: -11.250344276428223
    5. ' -' → logprob: -13.000344276428223
    6. ' ,-' → logprob: -13.500344276428223
    7. '   ' → logprob: -15.750344276428223
    8. '-,' → logprob: -15.750344276428223
    9. '0' → logprob: -17.75034523010254
    10. ',
' → logprob: -18.00034523010254

Token 114: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931737065315247
    2. ' -' → logprob: -0.6931737065315247
    3. ' ' → logprob: -11.3181734085083
    4. '   ' → logprob: -12.0681734085083
    5. ',' → logprob: -12.4431734085083
    6. ',-' → logprob: -12.9431734085083
    7. '  ' → logprob: -13.5681734085083
    8. '	' → logprob: -15.4431734085083
    9. '    ' → logprob: -15.5681734085083
    10. ')' → logprob: -15.6931734085083

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035083942930214107
    2. '-' → logprob: -8.125350952148438
    3. ' -' → logprob: -10.000350952148438
    4. ' ' → logprob: -12.125350952148438
    5. ')' → logprob: -13.375350952148438
    6. '):
' → logprob: -14.000350952148438
    7. ',' → logprob: -14.500350952148438
    8. ',-' → logprob: -14.625350952148438
    9. '```' → logprob: -15.500350952148438
    10. '+' → logprob: -16.250350952148438

Token 116: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8512594103813171
    2. '-' → logprob: -0.8512594103813171
    3. '):
' → logprob: -2.226259469985962
    4. ',-' → logprob: -3.726259469985962
    5. ' -' → logprob: -4.726259231567383
    6. '):' → logprob: -5.476259231567383
    7. ')' → logprob: -7.851259231567383
    8. '   ' → logprob: -8.601259231567383
    9. ' ,' → logprob: -8.726259231567383
    10. ' ):
' → logprob: -9.101259231567383

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10462646931409836
    2. ' ST' → logprob: -2.729626417160034
    3. 'ST' → logprob: -3.604626417160034
    4. '	ST' → logprob: -5.604626655578613
    5. ' ' → logprob: -6.604626655578613
    6. ',' → logprob: -7.979626655578613
    7. '<|end|>' → logprob: -7.979626655578613
    8. '       ' → logprob: -8.354626655578613
    9. '>' → logprob: -8.604626655578613
    10. '```' → logprob: -9.229626655578613

Token 118: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' (adapté à ' ST') → logprob: -0.014628231525421143
    2. ' ST' → logprob: -4.2646284103393555
    3. '   ' → logprob: -7.8896284103393555
    4. '	ST' → logprob: -9.889628410339355
    5. ' ' → logprob: -11.139628410339355
    6. '_ST' → logprob: -11.764628410339355
    7. 'st' → logprob: -12.389628410339355
    8. 'St' → logprob: -13.389628410339355
    9. '  ' → logprob: -13.514628410339355
    10. '    ' → logprob: -13.889628410339355

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0135399354621768
    2. '[' → logprob: -4.638539791107178
    3. '[idx' → logprob: -5.638539791107178
    4. ' [' → logprob: -9.638540267944336
    5. '=' → logprob: -10.388540267944336
    6. ' =' → logprob: -10.638540267944336
    7. '[S' → logprob: -11.263540267944336
    8. '[index' → logprob: -11.388540267944336
    9. '[:]' → logprob: -11.388540267944336
    10. ' ' → logprob: -11.763540267944336

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024779161904007196
    2. ' ]' → logprob: -6.252478122711182
    3. ']=' → logprob: -7.627478122711182
    4. ')' → logprob: -10.252477645874023
    5. '=' → logprob: -10.877477645874023
    6. ' =' → logprob: -12.627477645874023
    7. ' )' → logprob: -13.627477645874023
    8. '   ' → logprob: -14.002477645874023
    9. ' ' → logprob: -14.002477645874023
    10. '])' → logprob: -14.877477645874023

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251930296421051
    2. ' =' → logprob: -1.5019302368164062
    3. '=f' → logprob: -15.001930236816406
    4. ',' → logprob: -15.251930236816406
    5. '=

' → logprob: -15.376930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '＝' → logprob: -16.251930236816406
    8. ' +=' → logprob: -18.001930236816406
    9. '.=' → logprob: -18.126930236816406
    10. ' =
' → logprob: -18.126930236816406

Token 122: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.004930243361741304
    2. ' func' → logprob: -5.379930019378662
    3. 'fra' → logprob: -8.25493049621582
    4. ' fractions' → logprob: -11.75493049621582
    5. '(func' → logprob: -11.87993049621582
    6. '	func' → logprob: -12.00493049621582
    7. 'frac' → logprob: -12.12993049621582
    8. ' ' → logprob: -12.37993049621582
    9. 'fr' → logprob: -12.50493049621582
    10. 'min' → logprob: -12.81743049621582

Token 123: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.0015192650025710464
    2. '(' → logprob: -6.501519203186035
    3. 'ST' → logprob: -11.501519203186035
    4. '(S' → logprob: -12.751519203186035
    5. '(
' → logprob: -13.376519203186035
    6. '(St' → logprob: -13.501519203186035
    7. '(st' → logprob: -14.376519203186035
    8. ' ST' → logprob: -16.12652015686035
    9. ' (' → logprob: -16.25152015686035
    10. '((' → logprob: -16.75152015686035

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02324652671813965
    2. '[i' → logprob: -3.7732465267181396
    3. '2' → logprob: -14.148246765136719
    4. '[left' → logprob: -15.648246765136719
    5. 'i' → logprob: -16.27324676513672
    6. '*' → logprob: -17.39824676513672
    7. '[
' → logprob: -18.52324676513672
    8. '	' → logprob: -19.02324676513672
    9. '```' → logprob: -19.02324676513672
    10. '[int' → logprob: -19.14824676513672

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5777888298034668
    2. 'i' → logprob: -0.8277888298034668
    3. '*' → logprob: -6.452788829803467
    4. '*i' → logprob: -8.327789306640625
    5. '[i' → logprob: -11.452789306640625
    6. ' i' → logprob: -12.327789306640625
    7. ' ' → logprob: -12.452789306640625
    8. '(i' → logprob: -12.452789306640625
    9. ' *' → logprob: -13.452789306640625
    10. '0' → logprob: -13.827789306640625

Token 126: '*i' (ID: 51147)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40399491786956787
    2. '*i' → logprob: -1.1539949178695679
    3. '[i' → logprob: -4.278995037078857
    4. '*' → logprob: -5.903995037078857
    5. ' *' → logprob: -8.0289945602417
    6. ' i' → logprob: -10.1539945602417
    7. '_i' → logprob: -11.9039945602417
    8. ' ' → logprob: -12.2789945602417
    9. '[' → logprob: -12.5289945602417
    10. ')' → logprob: -12.6539945602417

Token 127: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0002003218833124265
    2. ' ],' → logprob: -9.000200271606445
    3. ']' → logprob: -9.625200271606445
    4. ',' → logprob: -11.500200271606445
    5. '],
' → logprob: -14.500200271606445
    6. ' ,' → logprob: -16.125200271606445
    7. '],

' → logprob: -17.250200271606445
    8. ' ' → logprob: -17.250200271606445
    9. '1' → logprob: -17.375200271606445
    10. ']+' → logprob: -17.500200271606445

Token 128: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.0007100477814674377
    2. ' ST' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.750709533691406
    4. '	ST' → logprob: -17.000709533691406
    5. '_ST' → logprob: -19.500709533691406
    6. 'STS' → logprob: -19.750709533691406
    7. ' ' → logprob: -20.000709533691406
    8. 'SP' → logprob: -20.750709533691406
    9. '(ST' → logprob: -21.000709533691406
    10. '    ' → logprob: -21.000709533691406

Token 129: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011995171196758747
    2. '])' → logprob: -5.011995315551758
    3. '*i' → logprob: -6.261995315551758
    4. '[' → logprob: -6.636995315551758
    5. ']' → logprob: -6.886995315551758
    6. 'i' → logprob: -7.136995315551758
    7. ')' → logprob: -9.136995315551758
    8. ' i' → logprob: -10.636995315551758
    9. ')i' → logprob: -10.761995315551758
    10. '*' → logprob: -10.761995315551758

Token 130: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002453662164043635
    2. ' i' → logprob: -9.000245094299316
    3. '2' → logprob: -9.125245094299316
    4. '*i' → logprob: -12.375245094299316
    5. '1' → logprob: -12.625245094299316
    6. '])' → logprob: -12.750245094299316
    7. ')' → logprob: -14.500245094299316
    8. ']' → logprob: -14.500245094299316
    9. ' ' → logprob: -14.875245094299316
    10. ')i' → logprob: -15.000245094299316

Token 131: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.5800693035125732
    2. 'i' → logprob: -0.8300693035125732
    3. '+i' → logprob: -5.580069541931152
    4. '[i' → logprob: -8.580069541931152
    5. '+' → logprob: -9.205069541931152
    6. ' +' → logprob: -11.080069541931152
    7. ' i' → logprob: -11.080069541931152
    8. '_i' → logprob: -11.830069541931152
    9. ')i' → logprob: -12.205069541931152
    10. ''i' → logprob: -12.205069541931152

Token 132: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -9.841743303695694e-05
    2. ')' → logprob: -9.62509822845459
    3. '])
' → logprob: -11.25009822845459
    4. ' ])' → logprob: -11.37509822845459
    5. ')])' → logprob: -12.75009822845459
    6. ']' → logprob: -14.12509822845459
    7. '))' → logprob: -14.37509822845459
    8. ')]' → logprob: -14.37509822845459
    9. ' )' → logprob: -14.75009822845459
    10. ''])' → logprob: -14.87509822845459

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004412671085447073
    2. 'i' → logprob: -6.254412651062012
    3. '0' → logprob: -6.379412651062012
    4. '])' → logprob: -7.254412651062012
    5. ' ' → logprob: -10.004412651062012
    6. 'idx' → logprob: -11.129412651062012
    7. '2' → logprob: -12.129412651062012
    8. 'index' → logprob: -12.504412651062012
    9. ')' → logprob: -12.754412651062012
    10. ' i' → logprob: -13.504412651062012

Token 134: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.87500286102295
    3. ' )' → logprob: -13.87500286102295
    4. '))' → logprob: -14.00000286102295
    5. '])' → logprob: -15.12500286102295
    6. '})' → logprob: -16.875003814697266
    7. ')`' → logprob: -16.875003814697266
    8. '）' → logprob: -17.375003814697266
    9. '),' → logprob: -17.750003814697266
    10. ')}' → logprob: -18.125003814697266

Token 135: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.222114697098732
    2. '[' → logprob: -2.0971148014068604
    3. '<|end|>' → logprob: -2.9721148014068604
    4. '(' → logprob: -4.472114562988281
    5. '```' → logprob: -5.722114562988281
    6. 'def' → logprob: -6.347114562988281
    7. ' ' → logprob: -6.597114562988281
    8. 'for' → logprob: -6.722114562988281
    9. ']' → logprob: -7.222114562988281
    10. '.' → logprob: -7.347114562988281

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08010838180780411
    2. '=' → logprob: -2.580108404159546
    3. '_' → logprob: -7.205108165740967
    4. '[' → logprob: -8.205108642578125
    5. '[]' → logprob: -10.330108642578125
    6. '_idx' → logprob: -10.330108642578125
    7. ':' → logprob: -10.705108642578125
    8. 's' → logprob: -10.830108642578125
    9. '[:]' → logprob: -10.830108642578125
    10. ' ' → logprob: -10.955108642578125

Token 137: ' ' (ID: 220)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.21813668310642242
    2. ' ST' → logprob: -2.718136787414551
    3. '0' → logprob: -3.343136787414551
    4. '1' → logprob: -3.468136787414551
    5. 'get' → logprob: -4.218136787414551
    6. 'ie' → logprob: -4.218136787414551
    7. '[]' → logprob: -4.343136787414551
    8. 'func' → logprob: -5.468136787414551
    9. ' ie' → logprob: -5.718136787414551
    10. 'A' → logprob: -6.218136787414551

Token 138: '0' (ID: 15)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.004894058220088482
    2. '0' → logprob: -6.379894256591797
    3. '[]' → logprob: -7.254894256591797
    4. 'get' → logprob: -7.379894256591797
    5. 'A' → logprob: -7.629894256591797
    6. 'max' → logprob: -7.754894256591797
    7. 'func' → logprob: -8.004894256591797
    8. '1' → logprob: -8.504894256591797
    9. 'ie' → logprob: -9.004894256591797
    10. 'N' → logprob: -9.629894256591797

Token 139: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014847763814032078
    2. ' for' → logprob: -4.764847755432129
    3. 'i' → logprob: -5.264847755432129
    4. '
' → logprob: -7.514847755432129
    5. 'while' → logprob: -8.389847755432129
    6. 'idx' → logprob: -9.389847755432129
    7. '<|end|>' → logprob: -10.389847755432129
    8. '+' → logprob: -10.514847755432129
    9. '```' → logprob: -11.014847755432129
    10. 'range' → logprob: -11.139847755432129

Token 140: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053168412297964096
    2. 'i' → logprob: -3.178168296813965
    3. 'idx' → logprob: -5.178168296813965
    4. ' for' → logprob: -6.428168296813965
    5. 'while' → logprob: -6.678168296813965
    6. 'index' → logprob: -7.553168296813965
    7. 'pos' → logprob: -7.803168296813965
    8. 'l' → logprob: -8.928168296813965
    9. 'def' → logprob: -9.303168296813965
    10. 'stack' → logprob: -9.553168296813965

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021379482001066208
    2. 'x' → logprob: -5.021379470825195
    3. 'a' → logprob: -5.646379470825195
    4. 'l' → logprob: -6.146379470825195
    5. 'v' → logprob: -6.146379470825195
    6. ' i' → logprob: -6.271379470825195
    7. 'k' → logprob: -7.271379470825195
    8. 'idx' → logprob: -7.521379470825195
    9. 'val' → logprob: -7.896379470825195
    10. 'j' → logprob: -8.021379470825195

Token 142: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21686890721321106
    2. 'in' → logprob: -1.7168688774108887
    3. ',' → logprob: -4.216868877410889
    4. ' ' → logprob: -7.841868877410889
    5. ' ,' → logprob: -8.716869354248047
    6. '1' → logprob: -12.591869354248047
    7. '_' → logprob: -12.591869354248047
    8. '	in' → logprob: -12.591869354248047
    9. 'range' → logprob: -12.716869354248047
    10. ',in' → logprob: -12.716869354248047

Token 143: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.046308230608701706
    2. 'v' → logprob: -3.4213082790374756
    3. 'x' → logprob: -5.0463080406188965
    4. 'val' → logprob: -6.5463080406188965
    5. ' a' → logprob: -6.7963080406188965
    6. 'value' → logprob: -7.4213080406188965
    7. 'num' → logprob: -7.7963080406188965
    8. 's' → logprob: -7.9213080406188965
    9. 'st' → logprob: -8.546308517456055
    10. 'l' → logprob: -8.546308517456055

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47493523359298706
    2. 'in' → logprob: -0.9749352335929871
    3. ',' → logprob: -7.099935054779053
    4. ' ' → logprob: -10.849935531616211
    5. ' ,' → logprob: -11.974935531616211
    6. '	in' → logprob: -13.099935531616211
    7. ',in' → logprob: -14.474935531616211
    8. '_in' → logprob: -14.474935531616211
    9. '  ' → logprob: -14.724935531616211
    10. ')' → logprob: -14.974935531616211

Token 145: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.061968132853507996
    2. ' enumerate' → logprob: -2.8119680881500244
    3. 'range' → logprob: -15.561967849731445
    4. '```' → logprob: -16.311967849731445
    5. 'en' → logprob: -16.686967849731445
    6. '.enumer' → logprob: -16.811967849731445
    7. '(en' → logprob: -17.061967849731445
    8. ' range' → logprob: -17.686967849731445
    9. 'enum' → logprob: -17.936967849731445
    10. ' ' → logprob: -18.061967849731445

Token 146: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0002112886286340654
    2. 'A' → logprob: -8.625211715698242
    3. '(ST' → logprob: -11.250211715698242
    4. '(' → logprob: -12.500211715698242
    5. 'enumer' → logprob: -12.625211715698242
    6. '(range' → logprob: -13.125211715698242
    7. '(a' → logprob: -13.625211715698242
    8. ',' → logprob: -13.750211715698242
    9. '((' → logprob: -13.875211715698242
    10. ' (' → logprob: -14.125211715698242

Token 147: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4106268584728241
    2. '):' → logprob: -1.1606268882751465
    3. ':' → logprob: -3.7856268882751465
    4. ':
' → logprob: -7.6606268882751465
    5. '):
' → logprob: -8.785626411437988
    6. ')' → logprob: -9.535626411437988
    7. ' ):
' → logprob: -10.285626411437988
    8. ',' → logprob: -10.910626411437988
    9. ' ):' → logprob: -11.160626411437988
    10. '):

' → logprob: -11.660626411437988

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4086320400238037
    2. ' idx' → logprob: -1.4086320400238037
    3. ' for' → logprob: -4.033632278442383
    4. ' if' → logprob: -4.033632278442383
    5. 'idx' → logprob: -4.283632278442383
    6. ' current' → logprob: -4.908632278442383
    7. '```' → logprob: -5.533632278442383
    8. ' ans' → logprob: -5.658632278442383
    9. ',' → logprob: -5.783632278442383
    10. ' token' → logprob: -6.033632278442383

Token 149: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4910407066345215
    2. ' l' → logprob: -2.2410407066345215
    3. ' if' → logprob: -2.3660407066345215
    4. ' idx' → logprob: -2.3660407066345215
    5. 'l' → logprob: -2.6160407066345215
    6. 'for' → logprob: -2.7410407066345215
    7. 'idx' (adapté à ' idx') → logprob: -2.7410407066345215
    8. ' left' → logprob: -3.2410407066345215
    9. 'if' → logprob: -3.3660407066345215
    10. ' j' → logprob: -3.4910407066345215

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043049316853284836
    2. '=' → logprob: -3.1680493354797363
    3. '=i' → logprob: -10.543048858642578
    4. ',' → logprob: -11.668048858642578
    5. 'idx' → logprob: -12.293048858642578
    6. ')' → logprob: -12.793048858642578
    7. ' ' → logprob: -13.418048858642578
    8. 'a' → logprob: -13.543048858642578
    9. '=index' → logprob: -14.043048858642578
    10. ' idx' → logprob: -15.043048858642578

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04326019063591957
    2. ' i' → logprob: -3.168260097503662
    3. 'get' → logprob: -8.66826057434082
    4. ' get' → logprob: -9.54326057434082
    5. '0' → logprob: -12.54326057434082
    6. ' ' → logprob: -12.66826057434082
    7. 'N' → logprob: -12.91826057434082
    8. ' ie' → logprob: -13.16826057434082
    9. '1' → logprob: -13.79326057434082
    10. '
' → logprob: -14.41826057434082

Token 152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20157745480537415
    2. ' +' → logprob: -1.7015774250030518
    3. '=' → logprob: -9.451577186584473
    4. '+=' → logprob: -10.576577186584473
    5. '+
' → logprob: -11.076577186584473
    6. ' +=' → logprob: -11.076577186584473
    7. '   ' → logprob: -11.326577186584473
    8. ' =' → logprob: -12.076577186584473
    9. ' ' → logprob: -13.076577186584473
    10. ' +
' → logprob: -13.326577186584473

Token 153: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03364846482872963
    2. ' get' → logprob: -3.4086484909057617
    3. ' ' → logprob: -14.033648490905762
    4. '1' → logprob: -14.283648490905762
    5. '   ' → logprob: -14.908648490905762
    6. '(get' → logprob: -15.033648490905762
    7. '0' → logprob: -15.783648490905762
    8. '[get' → logprob: -15.908648490905762
    9. '_get' → logprob: -16.158647537231445
    10. '	get' → logprob: -16.408647537231445

Token 154: 'LIN' (ID: 61147)
  Prédit: 'LIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.005383756943047047
    2. 'get' → logprob: -5.2553839683532715
    3. 'LEN' → logprob: -9.755383491516113
    4. 'LINE' → logprob: -10.630383491516113
    5. '1' → logprob: -10.880383491516113
    6. ' get' → logprob: -11.380383491516113
    7. ' LIN' → logprob: -11.630383491516113
    8. 'LN' → logprob: -11.880383491516113
    9. 'i' → logprob: -12.380383491516113
    10. '0' → logprob: -12.880383491516113

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0811656713485718
    2. '   ' → logprob: -1.3311656713485718
    3. '+' → logprob: -1.7061656713485718
    4. ')' → logprob: -2.7061657905578613
    5. '<|end|>' → logprob: -3.3311657905578613
    6. '    
' → logprob: -4.206165790557861
    7. ' ' → logprob: -4.206165790557861
    8. ',' → logprob: -4.331165790557861
    9. '  
' → logprob: -4.831165790557861
    10. ' 
' → logprob: -4.831165790557861

Token 156: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32706159353256226
    2. ' while' → logprob: -2.202061653137207
    3. '   ' → logprob: -2.702061653137207
    4. 'current' → logprob: -4.202061653137207
    5. 'left' → logprob: -4.202061653137207
    6. 'cur' → logprob: -4.452061653137207
    7. 'parent' → logprob: -4.702061653137207
    8. 'temp' → logprob: -5.077061653137207
    9. 'if' → logprob: -5.327061653137207
    10. 'val' → logprob: -5.452061653137207

Token 157: ' ST' (ID: 6433)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.337296962738037
    2. 'while' → logprob: -1.462296962738037
    3. 'cur' → logprob: -1.587296962738037
    4. 'val' → logprob: -2.462296962738037
    5. 'ST' (adapté à ' ST') → logprob: -2.712296962738037
    6. 'curr' → logprob: -3.462296962738037
    7. 'current' → logprob: -3.837296962738037
    8. 'l' → logprob: -3.962296962738037
    9. 'tmp' → logprob: -3.962296962738037
    10. 'temp' → logprob: -4.212296962738037

Token 158: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.08569832891225815
    2. '[' → logprob: -2.585698366165161
    3. 'idx' → logprob: -5.960698127746582
    4. ' =' → logprob: -6.710698127746582
    5. '[i' → logprob: -6.835698127746582
    6. '=' → logprob: -8.210698127746582
    7. '[:]' → logprob: -8.210698127746582
    8. ']' → logprob: -8.835698127746582
    9. '[index' → logprob: -8.835698127746582
    10. '[val' → logprob: -9.085698127746582

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09522420912981033
    2. '=' → logprob: -2.720224142074585
    3. ' =' → logprob: -4.095224380493164
    4. ']=' → logprob: -5.095224380493164
    5. ' ]' → logprob: -6.720224380493164
    6. ')' → logprob: -7.095224380493164
    7. ',' → logprob: -9.845224380493164
    8. ')=' → logprob: -10.845224380493164
    9. ']+=' → logprob: -11.095224380493164
    10. '-' → logprob: -11.595224380493164

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030297785997390747
    2. ' =' → logprob: -3.5302977561950684
    3. '+=' → logprob: -8.655298233032227
    4. '//=' → logprob: -8.905298233032227
    5. '-=' → logprob: -9.030298233032227
    6. '*=' → logprob: -10.030298233032227
    7. ' +=' → logprob: -11.155298233032227
    8. ' -=' → logprob: -11.405298233032227
    9. '%=' → logprob: -11.905298233032227
    10. '//' → logprob: -12.030298233032227

Token 161: ' ' (ID: 220)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.1059168130159378
    2. '0' → logprob: -3.105916738510132
    3. '1' → logprob: -3.105916738510132
    4. 'func' → logprob: -5.355916976928711
    5. 'a' → logprob: -6.105916976928711
    6. ' ie' → logprob: -6.230916976928711
    7. 'ans' → logprob: -6.730916976928711
    8. ' ' → logprob: -8.355916976928711
    9. '-' → logprob: -9.105916976928711
    10. 'int' → logprob: -9.230916976928711

Token 162: '0' (ID: 15)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.35247132182121277
    2. '1' → logprob: -1.4774713516235352
    3. '0' → logprob: -2.977471351623535
    4. 'func' → logprob: -4.227471351623535
    5. 'a' → logprob: -6.227471351623535
    6. 'ans' → logprob: -7.477471351623535
    7. 'int' → logprob: -8.977471351623535
    8. ' ie' → logprob: -9.227471351623535
    9. '-' → logprob: -9.727471351623535
    10. '2' → logprob: -9.977471351623535

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5783676505088806
    2. 'idx' → logprob: -1.3283677101135254
    3. '   ' → logprob: -2.0783677101135254
    4. ' i' → logprob: -4.078367710113525
    5. ')' → logprob: -4.453367710113525
    6. ' ' → logprob: -5.078367710113525
    7. 'while' → logprob: -5.578367710113525
    8. 'for' → logprob: -6.703367710113525
    9. ' idx' → logprob: -6.703367710113525
    10. ' while' → logprob: -6.828367710113525

Token 165: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2359628677368164
    2. 'p' → logprob: -2.1109628677368164
    3. 'while' → logprob: -2.9859628677368164
    4. 'idx' → logprob: -4.110962867736816
    5. 'pos' → logprob: -4.485962867736816
    6. 'cur' → logprob: -5.610962867736816
    7. 'j' (adapté à ' j') → logprob: -6.235962867736816
    8. 'parent' → logprob: -6.485962867736816
    9. 'current' → logprob: -6.735962867736816
    10. 'k' → logprob: -7.360962867736816

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31365352869033813
    2. '=' → logprob: -1.3136534690856934
    3. 'x' → logprob: -8.688653945922852
    4. 'dx' → logprob: -9.063653945922852
    5. ',' → logprob: -9.813653945922852
    6. '=index' → logprob: -11.438653945922852
    7. 'd' → logprob: -11.563653945922852
    8. '=i' → logprob: -12.063653945922852
    9. ' ' → logprob: -12.563653945922852
    10. '=j' → logprob: -12.813653945922852

Token 167: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00019042797794099897
    2. '(idx' → logprob: -9.000190734863281
    3. ' idx' → logprob: -9.875190734863281
    4. 'i' → logprob: -12.000190734863281
    5. '(' → logprob: -12.750190734863281
    6. 'get' → logprob: -12.875190734863281
    7. '   ' → logprob: -13.750190734863281
    8. '	idx' → logprob: -14.625190734863281
    9. ' (' → logprob: -14.750190734863281
    10. '(i' → logprob: -14.875190734863281

Token 168: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1525256186723709
    2. '   ' → logprob: -2.0275256633758545
    3. ' while' → logprob: -4.652525424957275
    4. 'j' → logprob: -8.902525901794434
    5. '    
' → logprob: -9.902525901794434
    6. '>>' → logprob: -11.027525901794434
    7. '  ' → logprob: -11.027525901794434
    8. ' ' → logprob: -11.402525901794434
    9. 'While' → logprob: -12.027525901794434
    10. '	while' → logprob: -12.277525901794434

Token 170: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02728818915784359
    2. '   ' → logprob: -3.6522881984710693
    3. 'j' → logprob: -7.02728796005249
    4. ' while' → logprob: -9.277288436889648
    5. '	while' → logprob: -13.902288436889648
    6. '  ' → logprob: -14.027288436889648
    7. 'While' → logprob: -14.152288436889648
    8. 'parent' → logprob: -14.152288436889648
    9. '1' → logprob: -14.527288436889648
    10. '    
' → logprob: -14.652288436889648

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006209384882822633
    2. ' j' → logprob: -7.6256208419799805
    3. '1' → logprob: -9.37562084197998
    4. '   ' → logprob: -10.37562084197998
    5. 'True' → logprob: -11.25062084197998
    6. ' ' → logprob: -13.75062084197998
    7. '>' → logprob: -14.37562084197998
    8. '	j' → logprob: -14.37562084197998
    9. ' True' → logprob: -14.62562084197998
    10. '  ' → logprob: -15.25062084197998

Token 172: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0691988542675972
    2. '<' → logprob: -3.0691988468170166
    3. '<=' → logprob: -4.444199085235596
    4. '//' → logprob: -5.694199085235596
    5. '>=' → logprob: -5.819199085235596
    6. '//=' → logprob: -7.194199085235596
    7. '>>' → logprob: -7.319199085235596
    8. ' >' → logprob: -7.694199085235596
    9. '!=' → logprob: -9.444198608398438
    10. '=' → logprob: -10.069198608398438

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00305364653468132
    2. ' ' → logprob: -6.378053665161133
    3. '0' → logprob: -6.628053665161133
    4. '   ' → logprob: -11.253053665161133
    5. '>' → logprob: -11.378053665161133
    6. '=' → logprob: -13.253053665161133
    7. '  ' → logprob: -14.253053665161133
    8. '    ' → logprob: -14.753053665161133
    9. '/' → logprob: -15.503053665161133
    10. '.' → logprob: -15.878053665161133

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029949959367513657
    2. '0' → logprob: -3.529949903488159
    3. ' ' → logprob: -8.529950141906738
    4. '   ' → logprob: -14.029950141906738
    5. '=' → logprob: -14.154950141906738
    6. '>' → logprob: -15.154950141906738
    7. '  ' → logprob: -16.279949188232422
    8. '    ' → logprob: -17.217449188232422
    9. '/' → logprob: -17.404949188232422
    10. '[' → logprob: -17.592449188232422

Token 175: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08845042437314987
    2. ':' → logprob: -3.0884504318237305
    3. ':
' → logprob: -3.3384504318237305
    4. 'and' → logprob: -5.7134504318237305
    5. '   ' → logprob: -9.33845043182373
    6. ' :
' → logprob: -9.33845043182373
    7. ' :' → logprob: -10.33845043182373
    8. ' ' → logprob: -11.21345043182373
    9. '	and' → logprob: -11.33845043182373
    10. '<|end|>' → logprob: -11.33845043182373

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025236995425075293
    2. '   ' → logprob: -6.627523899078369
    3. '```' → logprob: -7.377523899078369
    4. ' j' → logprob: -7.877523899078369
    5. 'j' → logprob: -9.127523422241211
    6. ',' → logprob: -10.502523422241211
    7. ' ' → logprob: -11.502523422241211
    8. '``' → logprob: -11.877523422241211
    9. '     ' → logprob: -12.252523422241211
    10. '    ' → logprob: -12.502523422241211

Token 177: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8854687809944153
    2. 'ST' → logprob: -0.8854687809944153
    3. 'j' (adapté à ' j') → logprob: -2.2604687213897705
    4. '       ' → logprob: -2.7604687213897705
    5. ' j' → logprob: -5.63546895980835
    6. ' ST' → logprob: -5.88546895980835
    7. '	ST' → logprob: -7.63546895980835
    8. ' ' → logprob: -8.385468482971191
    9. '           ' → logprob: -9.510468482971191
    10. '  ' → logprob: -9.510468482971191

Token 178: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.02928394265472889
    2. ' //' → logprob: -3.6542840003967285
    3. '=' → logprob: -6.1542840003967285
    4. '//' → logprob: -7.1542840003967285
    5. '>>' → logprob: -10.40428352355957
    6. ' =' → logprob: -10.90428352355957
    7. ' >>=' → logprob: -11.02928352355957
    8. '   ' → logprob: -12.02928352355957
    9. ' ' → logprob: -13.90428352355957
    10. '	' → logprob: -14.90428352355957

Token 179: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.696077227592468e-05
    2. '2' → logprob: -9.500077247619629
    3. '=
' → logprob: -14.500077247619629
    4. '=}' → logprob: -14.500077247619629
    5. '=.' → logprob: -15.500077247619629
    6. '=_' → logprob: -15.750077247619629
    7. '=/' → logprob: -15.750077247619629
    8. '==' → logprob: -16.000076293945312
    9. '=j' → logprob: -16.250076293945312
    10. '=*/' → logprob: -16.875076293945312

Token 180: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -15.000019073486328
    4. '   ' → logprob: -15.625019073486328
    5. '```' → logprob: -17.500019073486328
    6. '>' → logprob: -18.625019073486328
    7. '２' → logprob: -19.250019073486328
    8. '
' → logprob: -19.875019073486328
    9. '  ' → logprob: -19.875019073486328
    10. '    ' → logprob: -20.000019073486328

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '=' → logprob: -18.750001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '```' → logprob: -20.000001907348633
    6. '
' → logprob: -21.500001907348633
    7. '  ' → logprob: -21.500001907348633
    8. '２' → logprob: -21.750001907348633
    9. '>' → logprob: -22.500001907348633
    10. '3' → logprob: -22.500001907348633

Token 182: '
' (ID: 198)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.027564816176891327
    2. '   ' → logprob: -3.902564764022827
    3. ' ST' → logprob: -5.402565002441406
    4. '       ' → logprob: -6.152565002441406
    5. '	ST' → logprob: -8.527565002441406
    6. '```' → logprob: -10.152565002441406
    7. ' ' → logprob: -10.402565002441406
    8. '  ' → logprob: -11.152565002441406
    9. '_ST' → logprob: -11.277565002441406
    10. ',' → logprob: -11.277565002441406

Token 183: '       ' (ID: 309)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.036347683519124985
    2. '   ' → logprob: -3.7863476276397705
    3. '       ' → logprob: -4.53634786605835
    4. ' ST' → logprob: -6.28634786605835
    5. '```' → logprob: -8.661347389221191
    6. '	ST' → logprob: -9.411347389221191
    7. ' ' → logprob: -9.661347389221191
    8. ',' → logprob: -10.911347389221191
    9. '  ' → logprob: -11.036347389221191
    10. '[' → logprob: -11.661347389221191

Token 184: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' (adapté à ' ST') → logprob: -0.00023977462842594832
    2. ' ST' → logprob: -8.875239372253418
    3. '   ' → logprob: -9.375239372253418
    4. '       ' → logprob: -11.875239372253418
    5. '	ST' → logprob: -12.500239372253418
    6. ' ' → logprob: -12.875239372253418
    7. '  ' → logprob: -14.375239372253418
    8. '_ST' → logprob: -14.750239372253418
    9. '           ' → logprob: -15.375239372253418
    10. '
' → logprob: -15.750239372253418

Token 185: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004973902832716703
    2. '[' → logprob: -8.000497817993164
    3. '[i' → logprob: -8.750497817993164
    4. '[idx' → logprob: -13.875497817993164
    5. '```' → logprob: -14.500497817993164
    6. '[js' → logprob: -14.875497817993164
    7. 'j' → logprob: -15.125497817993164
    8. '[...]' → logprob: -15.625497817993164
    9. '[index' → logprob: -16.000497817993164
    10. ']' → logprob: -16.125497817993164

Token 186: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01835736073553562
    2. ' =' → logprob: -4.018357276916504
    3. ']' → logprob: -8.893357276916504
    4. ']=' → logprob: -10.393357276916504
    5. ')' → logprob: -10.518357276916504
    6. ')=' → logprob: -11.518357276916504
    7. '>' → logprob: -14.393357276916504
    8. '*=' → logprob: -15.268357276916504
    9. ' ' → logprob: -15.518357276916504
    10. '=f' → logprob: -15.643357276916504

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008045066497288644
    2. ' =' → logprob: -7.125804424285889
    3. '=f' → logprob: -16.750804901123047
    4. '＝' → logprob: -17.000804901123047
    5. '=

' → logprob: -17.500804901123047
    6. '+=' → logprob: -18.125804901123047
    7. '*=' → logprob: -18.250804901123047
    8. '.=' → logprob: -18.375804901123047
    9. '>' → logprob: -19.625804901123047
    10. ' ' → logprob: -20.000804901123047

Token 188: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -6.0033853515051305e-05
    2. ' func' → logprob: -9.750060081481934
    3. 'fra' → logprob: -14.000060081481934
    4. '(func' → logprob: -15.375060081481934
    5. 'fun' → logprob: -15.500060081481934
    6. '   ' → logprob: -16.000059127807617
    7. '	func' → logprob: -16.250059127807617
    8. ' ' → logprob: -16.750059127807617
    9. 'frac' → logprob: -16.750059127807617
    10. 'ST' → logprob: -17.000059127807617

Token 189: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.00043102685594931245
    2. 'ST' → logprob: -7.750431060791016
    3. '(S' → logprob: -15.375431060791016
    4. '(' → logprob: -16.750431060791016
    5. ' ST' → logprob: -17.500431060791016
    6. '	ST' → logprob: -17.625431060791016
    7. 's' → logprob: -19.000431060791016
    8. '(
' → logprob: -19.375431060791016
    9. '(St' → logprob: -19.500431060791016
    10. '(st' → logprob: -19.875431060791016

Token 190: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0484450437361374e-05
    2. '[j' → logprob: -10.125040054321289
    3. 'ST' → logprob: -15.875040054321289
    4. 'j' → logprob: -16.37504005432129
    5. '(ST' → logprob: -16.75004005432129
    6. '(' → logprob: -17.75004005432129
    7. '[(' → logprob: -18.12504005432129
    8. '	ST' → logprob: -18.50004005432129
    9. '[
' → logprob: -18.62504005432129
    10. ' [' → logprob: -18.75004005432129

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009381395066156983
    2. '[' → logprob: -7.0009379386901855
    3. 'j' → logprob: -10.625938415527344
    4. '(' → logprob: -13.375938415527344
    5. ' ' → logprob: -14.750938415527344
    6. '[j' → logprob: -14.875938415527344
    7. '   ' → logprob: -17.125938415527344
    8. '1' → logprob: -17.875938415527344
    9. '[
' → logprob: -18.500938415527344
    10. '  ' → logprob: -18.750938415527344

Token 192: '*j' (ID: 138193)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3869169354438782
    2. '*j' → logprob: -1.1369168758392334
    3. '*' → logprob: -10.011917114257812
    4. ' j' → logprob: -14.636917114257812
    5. '[j' → logprob: -15.261917114257812
    6. ' *' → logprob: -15.761917114257812
    7. '	j' → logprob: -16.261917114257812
    8. '
' → logprob: -17.261917114257812
    9. '```' → logprob: -17.386917114257812
    10. '*i' → logprob: -17.386917114257812

Token 193: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0025157311465591192
    2. 'ST' → logprob: -6.00251579284668
    3. ']' → logprob: -10.62751579284668
    4. ' ],' → logprob: -12.00251579284668
    5. ',' → logprob: -12.50251579284668
    6. '],
' → logprob: -13.50251579284668
    7. '],[' → logprob: -13.62751579284668
    8. 'j' → logprob: -14.00251579284668
    9. '[' → logprob: -14.00251579284668
    10. '_ST' → logprob: -15.12751579284668

Token 194: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -7.5649528298527e-05
    2. ' ST' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.375075340270996
    4. '	ST' → logprob: -16.375076293945312
    5. '2' → logprob: -17.375076293945312
    6. ' ' → logprob: -17.625076293945312
    7. '    ' → logprob: -17.875076293945312
    8. '  ' → logprob: -18.000076293945312
    9. '_ST' → logprob: -18.750076293945312
    10. '       ' → logprob: -19.250076293945312

Token 195: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012066666968166828
    2. '*' → logprob: -5.012066841125488
    3. '2' → logprob: -5.262066841125488
    4. '(' → logprob: -9.512066841125488
    5. 'j' → logprob: -10.387066841125488
    6. '*j' → logprob: -11.137066841125488
    7. '[j' → logprob: -11.512066841125488
    8. '*[' → logprob: -11.637066841125488
    9. '[
' → logprob: -12.637066841125488
    10. '+' → logprob: -13.137066841125488

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.309382373117842e-05
    2. '(' → logprob: -10.375033378601074
    3. ' ' → logprob: -13.375033378601074
    4. '   ' → logprob: -15.375033378601074
    5. '  ' → logprob: -17.000032424926758
    6. '```' → logprob: -17.750032424926758
    7. '{' → logprob: -18.625032424926758
    8. '
' → logprob: -18.750032424926758
    9. '`' → logprob: -19.000032424926758
    10. ' (' → logprob: -19.625032424926758

Token 197: '*j' (ID: 138193)
  Prédit: '*j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*j' → logprob: -0.5264583826065063
    2. 'j' → logprob: -0.9014583826065063
    3. '*' → logprob: -6.401458263397217
    4. '2' → logprob: -7.526458263397217
    5. '1' → logprob: -8.026458740234375
    6. '*i' → logprob: -8.151458740234375
    7. ']' → logprob: -8.526458740234375
    8. '])' → logprob: -9.026458740234375
    9. 'i' → logprob: -9.526458740234375
    10. ')' → logprob: -10.151458740234375

Token 198: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003874166286550462
    2. '])' → logprob: -7.875387191772461
    3. ' +' → logprob: -12.750387191772461
    4. '1' → logprob: -13.375387191772461
    5. '+)' → logprob: -13.375387191772461
    6. '+
' → logprob: -15.125387191772461
    7. '+j' → logprob: -16.00038719177246
    8. '])
' → logprob: -16.37538719177246
    9. '+]' → logprob: -16.37538719177246
    10. ')])' → logprob: -16.50038719177246

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -15.625000953674316
    4. '])' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '2' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.062501907348633
    8. '11' → logprob: -17.562501907348633
    9. '7' → logprob: -17.625001907348633
    10. '0' → logprob: -17.625001907348633

Token 200: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.347765181795694e-05
    2. ')
' → logprob: -9.875053405761719
    3. '))' → logprob: -13.500053405761719
    4. '])' → logprob: -15.500053405761719
    5. ' )' → logprob: -16.37505340576172
    6. ')`' → logprob: -16.87505340576172
    7. '),' → logprob: -17.12505340576172
    8. ')

' → logprob: -17.25005340576172
    9. '})' → logprob: -17.50005340576172
    10. '）' → logprob: -17.50005340576172

Token 201: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30560430884361267
    2. 'print' → logprob: -2.0556042194366455
    3. '   ' → logprob: -2.8056042194366455
    4. ')' → logprob: -4.180604457855225
    5. ' print' → logprob: -4.555604457855225
    6. '0' → logprob: -4.805604457855225
    7. ' ' → logprob: -5.055604457855225
    8. ',' → logprob: -5.180604457855225
    9. ' ans' → logprob: -5.555604457855225
    10. ' if' → logprob: -5.930604457855225

Token 202: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2264771461486816
    2. 'l' → logprob: -1.3514771461486816
    3. 'left' → logprob: -2.1014771461486816
    4. 'ans' → logprob: -2.3514771461486816
    5. 'low' → logprob: -2.3514771461486816
    6. 'while' → logprob: -3.1014771461486816
    7. 'tmp' → logprob: -3.9764771461486816
    8. 'res' → logprob: -4.226477146148682
    9. 'val' → logprob: -4.726477146148682
    10. 'current' → logprob: -5.351477146148682

Token 203: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4297782778739929
    2. ' =' → logprob: -1.1797783374786377
    3. ' ' → logprob: -4.429778099060059
    4. 'g' → logprob: -5.179778099060059
    5. '_' → logprob: -5.679778099060059
    6. 'idx' → logprob: -5.929778099060059
    7. 's' → logprob: -6.429778099060059
    8. '_=' → logprob: -6.429778099060059
    9. '_val' → logprob: -6.679778099060059
    10. '_idx' → logprob: -6.679778099060059

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9752518534660339
    2. 'ns' → logprob: -0.9752518534660339
    3. ' =' → logprob: -1.4752519130706787
    4. '_' → logprob: -6.4752516746521
    5. 'll' → logprob: -6.4752516746521
    6. '_=' → logprob: -6.4752516746521
    7. '_val' → logprob: -6.9752516746521
    8. 'idx' → logprob: -7.1002516746521
    9. '+=' → logprob: -7.3502516746521
    10. '_value' → logprob: -7.3502516746521

Token 205: ' ' (ID: 220)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.02039285935461521
    2. 'func' → logprob: -4.395392894744873
    3. ' ST' → logprob: -5.645392894744873
    4. '0' → logprob: -6.395392894744873
    5. '1' → logprob: -6.395392894744873
    6. 'ans' → logprob: -7.395392894744873
    7. ' func' → logprob: -9.770392417907715
    8. '-ST' → logprob: -10.270392417907715
    9. 'fra' → logprob: -10.395392417907715
    10. 'st' → logprob: -10.395392417907715

Token 206: '0' (ID: 15)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.05017508938908577
    2. 'func' → logprob: -3.050175189971924
    3. 'ans' → logprob: -7.175175189971924
    4. 'fra' → logprob: -8.550174713134766
    5. ' ST' → logprob: -8.550174713134766
    6. 'a' → logprob: -9.175174713134766
    7. 'st' → logprob: -9.300174713134766
    8. '0' → logprob: -9.425174713134766
    9. 'A' → logprob: -10.050174713134766
    10. 'abs' → logprob: -11.175174713134766

Token 207: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: ' get' (ID: 717)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8266431093215942
    2. 'ST' → logprob: -1.2016431093215942
    3. 'A' → logprob: -1.4516431093215942
    4. '1' → logprob: -4.326642990112305
    5. 'ans' → logprob: -5.326642990112305
    6. ' ST' → logprob: -6.076642990112305
    7. 'func' → logprob: -6.201642990112305
    8. ' A' → logprob: -6.451642990112305
    9. ' a' → logprob: -6.576642990112305
    10. '0' → logprob: -7.826642990112305

Token 209: 'LIN' (ID: 61147)
  Prédit: 'LEN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LEN' → logprob: -0.4396835267543793
    2. 'LIN' → logprob: -1.0646835565567017
    3. 'ST' → logprob: -4.939683437347412
    4. 'a' → logprob: -7.439683437347412
    5. 'LN' → logprob: -7.689683437347412
    6. 'i' → logprob: -7.814683437347412
    7. 'A' → logprob: -7.814683437347412
    8. 'LINE' → logprob: -7.939683437347412
    9. 'idx' → logprob: -8.43968391418457
    10. 'len' → logprob: -8.68968391418457

Token 210: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' b' (ID: 287)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8324019908905029
    2. 'while' → logprob: -1.082401990890503
    3. 'r' → logprob: -2.332401990890503
    4. 'b' (adapté à ' b') → logprob: -2.957401990890503
    5. 'left' → logprob: -3.082401990890503
    6. 'j' → logprob: -4.707402229309082
    7. 'idx' → logprob: -4.957402229309082
    8. ' while' → logprob: -5.082402229309082
    9. 'right' → logprob: -6.082402229309082
    10. 'i' → logprob: -6.457402229309082

Token 213: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132711350917816
    2. ' =' → logprob: -1.313271164894104
    3. ',' → logprob: -12.563271522521973
    4. '_' → logprob: -13.063271522521973
    5. ' ' → logprob: -13.313271522521973
    6. '_=' → logprob: -14.938271522521973
    7. 'a' → logprob: -15.063271522521973
    8. '+' → logprob: -15.188271522521973
    9. '   ' → logprob: -15.188271522521973
    10. '=_' → logprob: -16.313270568847656

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693252682685852
    2. ' =' → logprob: -0.693252682685852
    3. ',' → logprob: -9.193252563476562
    4. ' ' → logprob: -13.068252563476562
    5. ' ,' → logprob: -14.068252563476562
    6. '   ' → logprob: -14.568252563476562
    7. 'a' → logprob: -15.818252563476562
    8. '  ' → logprob: -16.568252563476562
    9. '    ' → logprob: -16.568252563476562
    10. ')' → logprob: -16.818252563476562

Token 215: ' N' (ID: 478)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.03653905913233757
    2. 'N' → logprob: -3.411539077758789
    3. ' get' → logprob: -6.411539077758789
    4. 'len' → logprob: -7.911539077758789
    5. 'idx' → logprob: -7.911539077758789
    6. '0' → logprob: -8.411539077758789
    7. ' N' → logprob: -9.536539077758789
    8. '1' → logprob: -9.661539077758789
    9. '   ' → logprob: -10.036539077758789
    10. 'i' → logprob: -10.536539077758789

Token 216: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02639004960656166
    2. ' +' → logprob: -3.6513900756835938
    3. '-' → logprob: -9.651390075683594
    4. '<|end|>' → logprob: -11.276390075683594
    5. ' ' → logprob: -12.651390075683594
    6. '   ' → logprob: -12.776390075683594
    7. ' -' → logprob: -13.401390075683594
    8. '+
' → logprob: -13.776390075683594
    9. '+a' → logprob: -14.151390075683594
    10. '0' → logprob: -14.276390075683594

Token 217: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -9.722539834911004e-05
    2. ' get' → logprob: -9.250097274780273
    3. '+' → logprob: -15.125097274780273
    4. '0' → logprob: -15.125097274780273
    5. '(get' → logprob: -15.500097274780273
    6. '[get' → logprob: -15.750097274780273
    7. '_get' → logprob: -16.625097274780273
    8. '	get' → logprob: -17.125097274780273
    9. '1' → logprob: -17.250097274780273
    10. '=get' → logprob: -17.375097274780273

Token 218: 'LIN' (ID: 61147)
  Prédit: 'LIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIN' → logprob: -0.0014378506457433105
    2. 'LEN' → logprob: -6.626437664031982
    3. 'get' → logprob: -10.00143814086914
    4. 'a' → logprob: -10.75143814086914
    5. 'LINE' → logprob: -11.37643814086914
    6. '_L' → logprob: -11.50143814086914
    7. '_' → logprob: -11.87643814086914
    8. 'LN' → logprob: -12.00143814086914
    9. '_lin' → logprob: -12.87643814086914
    10. ' LIN' → logprob: -13.25143814086914

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05285829305648804
    2. '<|end|>' → logprob: -3.427858352661133
    3. 'while' → logprob: -5.302858352661133
    4. '
' → logprob: -5.677858352661133
    5. '    
' → logprob: -5.927858352661133
    6. ' while' → logprob: -5.927858352661133
    7. '  
' → logprob: -6.802858352661133
    8. '+' → logprob: -6.802858352661133
    9. '```' → logprob: -7.427858352661133
    10. '<|end|>' → logprob: -7.677858352661133

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3194504380226135
    2. 'while' → logprob: -1.6944503784179688
    3. ' while' → logprob: -2.4444503784179688
    4. '    
' → logprob: -7.444450378417969
    5. '<|end|>' → logprob: -7.569450378417969
    6. ')' → logprob: -7.694450378417969
    7. ',' → logprob: -7.944450378417969
    8. ' ' → logprob: -8.444450378417969
    9. '```' → logprob: -8.819450378417969
    10. '  ' → logprob: -8.944450378417969

Token 221: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0012945238268002868
    2. 'res' → logprob: -7.0012946128845215
    3. ' while' → logprob: -8.876294136047363
    4. 'l' → logprob: -9.001294136047363
    5. '   ' → logprob: -10.001294136047363
    6. 's' → logprob: -11.001294136047363
    7. 'ans' → logprob: -11.501294136047363
    8. 'result' → logprob: -11.876294136047363
    9. 'mid' → logprob: -12.126294136047363
    10. '
' → logprob: -12.251294136047363

Token 222: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16633199155330658
    2. ' a' → logprob: -2.2913320064544678
    3. 'ST' → logprob: -4.166331768035889
    4. 'b' → logprob: -4.291331768035889
    5. 'A' → logprob: -4.916331768035889
    6. ' ST' → logprob: -5.541331768035889
    7. 'get' → logprob: -5.791331768035889
    8. 'func' → logprob: -5.916331768035889
    9. ' A' → logprob: -6.416331768035889
    10. ' b' → logprob: -6.666331768035889

Token 223: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10067211091518402
    2. '>' → logprob: -3.3506720066070557
    3. ' >' → logprob: -3.3506720066070557
    4. ' <=' → logprob: -4.225672245025635
    5. '<=' → logprob: -5.100672245025635
    6. '[' → logprob: -6.600672245025635
    7. '=' → logprob: -6.725672245025635
    8. ' ' → logprob: -7.850672245025635
    9. '-' → logprob: -7.975672245025635
    10. '==' → logprob: -8.350671768188477

Token 224: ' -' (ID: 533)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8303121328353882
    2. '<=' → logprob: -1.4553121328353882
    3. ' >' → logprob: -1.9553121328353882
    4. '>' → logprob: -1.9553121328353882
    5. ' <' → logprob: -3.9553122520446777
    6. '<' → logprob: -4.330312252044678
    7. '==' → logprob: -5.080312252044678
    8. ' ==' → logprob: -6.080312252044678
    9. '%' → logprob: -6.205312252044678
    10. '!=' → logprob: -6.955312252044678

Token 225: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2309257984161377
    2. 'a' → logprob: -1.6059257984161377
    3. 'get' → logprob: -5.855925559997559
    4. '>' → logprob: -6.105925559997559
    5. '==' → logprob: -9.230925559997559
    6. ' a' → logprob: -9.355925559997559
    7. '>a' → logprob: -9.480925559997559
    8. ' >' → logprob: -9.730925559997559
    9. ' get' → logprob: -10.855925559997559
    10. ' ' → logprob: -10.855925559997559

Token 226: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023157147224992514
    2. '>' → logprob: -6.127315521240234
    3. ' >' → logprob: -9.752315521240234
    4. '_<' → logprob: -10.752315521240234
    5. '<' → logprob: -11.502315521240234
    6. '_=' → logprob: -11.752315521240234
    7. '_
' → logprob: -12.127315521240234
    8. '1' → logprob: -12.627315521240234
    9. '<=' → logprob: -12.752315521240234
    10. '```' → logprob: -12.877315521240234

Token 227: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16243800520896912
    2. ' >' → logprob: -2.037437915802002
    3. '==' → logprob: -5.162437915802002
    4. '<=' → logprob: -5.287437915802002
    5. '>=' → logprob: -5.662437915802002
    6. ' <=' → logprob: -6.287437915802002
    7. ' ==' → logprob: -6.787437915802002
    8. '<' → logprob: -6.787437915802002
    9. ' <' → logprob: -7.662437915802002
    10. ' >=' → logprob: -7.662437915802002

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0050322525203228
    2. '2' → logprob: -6.130032062530518
    3. 'get' → logprob: -6.630032062530518
    4. ' ' → logprob: -6.880032062530518
    5. '0' → logprob: -8.130032539367676
    6. '3' → logprob: -10.130032539367676
    7. '16' → logprob: -10.380032539367676
    8. ' get' → logprob: -10.505032539367676
    9. '100' → logprob: -10.755032539367676
    10. '4' → logprob: -10.880032539367676

Token 229: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027806314174085855
    2. '2' → logprob: -6.752780437469482
    3. 'get' → logprob: -7.127780437469482
    4. '0' → logprob: -7.752780437469482
    5. ' ' → logprob: -8.37778091430664
    6. 'N' → logprob: -10.25278091430664
    7. '16' → logprob: -10.87778091430664
    8. '3' → logprob: -11.12778091430664
    9. '64' → logprob: -11.37778091430664
    10. ' get' → logprob: -11.50278091430664

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030939815565943718
    2. ':
' → logprob: -3.530939817428589
    3. ' or' → logprob: -7.03093957901001
    4. ':return' → logprob: -8.530940055847168
    5. '   ' → logprob: -9.655940055847168
    6. ' :' → logprob: -11.155940055847168
    7. '<|end|>' → logprob: -12.155940055847168
    8. '       ' → logprob: -12.530940055847168
    9. ' :
' → logprob: -12.780940055847168
    10. ' and' → logprob: -12.780940055847168

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19215047359466553
    2. '   ' → logprob: -2.192150592803955
    3. '0' → logprob: -3.317150592803955
    4. ' continue' → logprob: -4.442150592803955
    5. '1' → logprob: -5.067150592803955
    6. 'continue' → logprob: -5.692150592803955
    7. ' None' → logprob: -6.442150592803955
    8. ' break' → logprob: -6.567150592803955
    9. ' ' → logprob: -7.692150592803955
    10. 'None' → logprob: -7.942150592803955

Token 232: ' ret' (ID: 2881)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1375828981399536
    2. '0' → logprob: -1.5125828981399536
    3. 'continue' → logprob: -1.8875828981399536
    4. ' continue' → logprob: -2.762582778930664
    5. 'ans' → logprob: -2.887582778930664
    6. 'pass' → logprob: -3.012582778930664
    7. 'break' → logprob: -3.012582778930664
    8. ' break' → logprob: -3.887582778930664
    9. 'print' → logprob: -4.262582778930664
    10. ' pass' → logprob: -4.262582778930664

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1860457956790924
    2. '=' → logprob: -1.81104576587677
    3. ' ' → logprob: -5.1860456466674805
    4. '0' → logprob: -7.5610456466674805
    5. 'urn' → logprob: -10.43604564666748
    6. ' +=' → logprob: -10.56104564666748
    7. 's' → logprob: -10.81104564666748
    8. ' =
' → logprob: -11.56104564666748
    9. ',' → logprob: -11.81104564666748
    10. '   ' → logprob: -11.93604564666748

Token 234: ' ie' (ID: 25745)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.07214932888746262
    2. '0' → logprob: -2.6971492767333984
    3. ' ie' → logprob: -6.447149276733398
    4. 'ST' → logprob: -7.947149276733398
    5. ' ' → logprob: -9.072149276733398
    6. 'a' → logprob: -10.572149276733398
    7. '1' → logprob: -10.947149276733398
    8. 'IE' → logprob: -11.072149276733398
    9. 'get' → logprob: -11.384649276733398
    10. 'N' → logprob: -11.447149276733398

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34867796301841736
    2. '<|end|>' → logprob: -2.22367787361145
    3. 'else' → logprob: -2.47367787361145
    4. ' else' → logprob: -2.97367787361145
    5. '   ' → logprob: -3.84867787361145
    6. 'elif' → logprob: -4.973678112030029
    7. '    
' → logprob: -5.098678112030029
    8. '<|end|>' → logprob: -5.098678112030029
    9. '+' → logprob: -6.098678112030029
    10. ' 
' → logprob: -6.973678112030029

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16546249389648438
    2. 'else' → logprob: -2.6654624938964844
    3. '<|end|>' → logprob: -3.0404624938964844
    4. ' else' → logprob: -3.5404624938964844
    5. ')' → logprob: -6.290462493896484
    6. 'elif' → logprob: -6.915462493896484
    7. ':' → logprob: -7.040462493896484
    8. '<|end|>' → logprob: -7.415462493896484
    9. '...' → logprob: -8.290462493896484
    10. '       ' → logprob: -8.540462493896484

Token 237: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5411924123764038
    2. ':' → logprob: -1.5411924123764038
    3. ' else' → logprob: -1.7911924123764038
    4. ':
' → logprob: -3.4161925315856934
    5. '   ' → logprob: -5.666192531585693
    6. '<|end|>' → logprob: -8.916192054748535
    7. '	else' → logprob: -9.416192054748535
    8. 'elif' → logprob: -9.541192054748535
    9. '[' → logprob: -9.666192054748535
    10. 'while' → logprob: -10.041192054748535

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048221081495285034
    2. ':
' → logprob: -3.6732211112976074
    3. '       ' → logprob: -3.9232211112976074
    4. '   ' → logprob: -6.423221111297607
    5. '    ' → logprob: -8.92322063446045
    6. '<|end|>' → logprob: -10.67322063446045
    7. ' :' → logprob: -11.04822063446045
    8. '[' → logprob: -11.29822063446045
    9. ',' → logprob: -11.42322063446045
    10. '):' → logprob: -11.67322063446045

Token 239: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0837960243225098
    2. ' l' → logprob: -1.4587960243225098
    3. '       ' → logprob: -1.4587960243225098
    4. '   ' → logprob: -2.0837960243225098
    5. ' left' → logprob: -3.3337960243225098
    6. 'left' → logprob: -4.08379602432251
    7. 'i' → logprob: -5.20879602432251
    8. ' i' → logprob: -5.58379602432251
    9. 'ret' → logprob: -6.20879602432251
    10. ' func' → logprob: -6.33379602432251

Token 240: ' ret' (ID: 2881)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05547250434756279
    2. 'ret' (adapté à ' ret') → logprob: -3.3054726123809814
    3. 'left' → logprob: -4.680472373962402
    4. 'a' → logprob: -6.430472373962402
    5. 'res' → logprob: -6.555472373962402
    6. 'def' → logprob: -6.555472373962402
    7. 'i' → logprob: -6.555472373962402
    8. 'while' → logprob: -6.805472373962402
    9. 'lo' → logprob: -8.055472373962402
    10. 's' → logprob: -8.305472373962402

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014353722333908
    2. '=' → logprob: -1.7014353275299072
    3. ' ' → logprob: -11.451435089111328
    4. '_' → logprob: -11.826435089111328
    5. ',' → logprob: -13.326435089111328
    6. ' =
' → logprob: -14.451435089111328
    7. ' _' → logprob: -14.826435089111328
    8. '   ' → logprob: -15.451435089111328
    9. '＝' → logprob: -15.701435089111328
    10. '_=' → logprob: -15.701435089111328

Token 242: ' func' (ID: 4660)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.01537439227104187
    2. 'ie' → logprob: -5.015374183654785
    3. ' ST' → logprob: -5.515374183654785
    4. 'func' → logprob: -5.515374183654785
    5. ' ie' → logprob: -8.265374183654785
    6. '0' → logprob: -9.640374183654785
    7. 'IE' → logprob: -9.765374183654785
    8. ' func' → logprob: -10.390374183654785
    9. 'a' → logprob: -10.515374183654785
    10. 'get' → logprob: -10.640374183654785

Token 243: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.002092207781970501
    2. '(' → logprob: -6.502092361450195
    3. '(
' → logprob: -7.502092361450195
    4. '(S' → logprob: -10.627092361450195
    5. '(st' → logprob: -12.252092361450195
    6. ' (' → logprob: -12.752092361450195
    7. '(

' → logprob: -13.252092361450195
    8. '((' → logprob: -13.627092361450195
    9. 'ST' → logprob: -14.002092361450195
    10. '(St' → logprob: -15.002092361450195

Token 244: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.010743238963186741
    2. '[' → logprob: -4.635743141174316
    3. 'a' → logprob: -7.385743141174316
    4. '[b' → logprob: -9.010743141174316
    5. '(a' → logprob: -10.260743141174316
    6. '[j' → logprob: -10.385743141174316
    7. ')' → logprob: -10.635743141174316
    8. '[
' → logprob: -10.635743141174316
    9. ',a' → logprob: -10.760743141174316
    10. '2' → logprob: -10.885743141174316

Token 245: '_' (ID: 62)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.19192636013031006
    2. '])' → logprob: -1.94192636013031
    3. ']' → logprob: -3.9419264793395996
    4. '],
' → logprob: -5.9419264793396
    5. '][' → logprob: -6.3169264793396
    6. '_' → logprob: -6.3169264793396
    7. ' ],' → logprob: -7.3169264793396
    8. '],[' → logprob: -7.3169264793396
    9. ':' → logprob: -7.4419264793396
    10. 'b' → logprob: -7.5669264793396

Token 246: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0004965558764524758
    2. '],
' → logprob: -8.375496864318848
    3. ']' → logprob: -8.500496864318848
    4. ' ],' → logprob: -10.000496864318848
    5. '])' → logprob: -12.500496864318848
    6. ',' → logprob: -12.875496864318848
    7. '],

' → logprob: -13.000496864318848
    8. '+' → logprob: -13.250496864318848
    9. ']+' → logprob: -13.500496864318848
    10. '],
' → logprob: -13.750496864318848

Token 247: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -4.644463479053229e-05
    2. ' ST' → logprob: -10.000046730041504
    3. '	ST' → logprob: -14.625046730041504
    4. '   ' → logprob: -16.125045776367188
    5. '_ST' → logprob: -16.250045776367188
    6. '
' → logprob: -16.625045776367188
    7. '...' → logprob: -16.750045776367188
    8. '0' → logprob: -16.875045776367188
    9. '[' → logprob: -17.250045776367188
    10. '  ' → logprob: -17.375045776367188

Token 248: '[b' (ID: 40800)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004700564779341221
    2. '+b' → logprob: -5.879700660705566
    3. '])' → logprob: -7.629700660705566
    4. ' +' → logprob: -7.754700660705566
    5. ']' → logprob: -8.254700660705566
    6. ')' → logprob: -8.629700660705566
    7. 'b' → logprob: -9.004700660705566
    8. '[b' → logprob: -9.004700660705566
    9. '[' → logprob: -9.504700660705566
    10. 'ST' → logprob: -10.129700660705566

Token 249: '_-' (ID: 78132)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02382359653711319
    2. '_-' → logprob: -3.7738234996795654
    3. '_]' → logprob: -8.273823738098145
    4. '-' → logprob: -8.523823738098145
    5. '])' → logprob: -10.023823738098145
    6. '_*' → logprob: -10.523823738098145
    7. '_)' → logprob: -10.773823738098145
    8. '_/' → logprob: -11.898823738098145
    9. '_^' → logprob: -12.023823738098145
    10. '_:' → logprob: -12.648823738098145

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007815150311216712
    2. '2' → logprob: -7.250781536102295
    3. ' ' → logprob: -10.250781059265137
    4. '])' → logprob: -10.375781059265137
    5. '-' → logprob: -13.125781059265137
    6. ']' → logprob: -14.125781059265137
    7. '   ' → logprob: -14.625781059265137
    8. '  ' → logprob: -15.313281059265137
    9. '3' → logprob: -15.500781059265137
    10. '0' → logprob: -15.563281059265137

Token 251: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05582239106297493
    2. ')' → logprob: -2.9308223724365234
    3. '])
' → logprob: -8.055822372436523
    4. ' ])' → logprob: -8.555822372436523
    5. '+' → logprob: -9.305822372436523
    6. ' )' → logprob: -9.555822372436523
    7. ')])' → logprob: -9.555822372436523
    8. ')
' → logprob: -9.555822372436523
    9. ')]' → logprob: -10.055822372436523
    10. ']' → logprob: -10.430822372436523

Token 252: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9802603721618652
    2. '<|end|>' → logprob: -0.9802603721618652
    3. ')' → logprob: -2.1052603721618652
    4. '    ' → logprob: -3.1052603721618652
    5. '   ' → logprob: -3.2302603721618652
    6. '[' → logprob: -4.105260372161865
    7. '#' → logprob: -4.980260372161865
    8. '  ' → logprob: -5.105260372161865
    9. '...' → logprob: -5.855260372161865
    10. ':' → logprob: -6.355260372161865

Token 253: ' aa' (ID: 40260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3399626910686493
    2. '<|end|>' → logprob: -2.2149627208709717
    3. ')' → logprob: -2.7149627208709717
    4. '...' → logprob: -3.3399627208709717
    5. '    ' → logprob: -3.5899627208709717
    6. '       ' → logprob: -4.714962482452393
    7. ' ' → logprob: -5.089962482452393
    8. '[' → logprob: -5.339962482452393
    9. 'a' → logprob: -5.589962482452393
    10. ']' → logprob: -5.589962482452393

Token 254: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014425568282604218
    2. '_=' → logprob: -5.514425754547119
    3. '+=' → logprob: -5.764425754547119
    4. ' =' → logprob: -6.014425754547119
    5. ' +=' → logprob: -6.764425754547119
    6. '=' → logprob: -6.764425754547119
    7. '+' → logprob: -6.889425754547119
    8. 'a' → logprob: -7.014425754547119
    9. '++' → logprob: -9.389425277709961
    10. ',' → logprob: -9.639425277709961

Token 255: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004295522812753916
    2. 'b' → logprob: -5.629295349121094
    3. ' a' → logprob: -7.379295349121094
    4. '(a' → logprob: -10.879295349121094
    5. ' b' → logprob: -11.379295349121094
    6. 'ret' → logprob: -11.379295349121094
    7. 'get' → logprob: -12.004295349121094
    8. 'aa' → logprob: -12.254295349121094
    9. '[a' → logprob: -12.879295349121094
    10. '   ' → logprob: -13.004295349121094

Token 256: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012349952012300491
    2. '+' → logprob: -6.751235008239746
    3. '_=' → logprob: -10.126235008239746
    4. '_[' → logprob: -11.876235008239746
    5. '_
' → logprob: -12.126235008239746
    6. 'a' → logprob: -13.251235008239746
    7. '_,' → logprob: -13.626235008239746
    8. '__' → logprob: -13.876235008239746
    9. '```' → logprob: -13.876235008239746
    10. '_-' → logprob: -14.001235008239746

Token 257: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031862251460552216
    2. ' +' → logprob: -3.906862258911133
    3. '+=' → logprob: -4.906862258911133
    4. ' +=' → logprob: -6.406862258911133
    5. '=' → logprob: -6.906862258911133
    6. '<|end|>' → logprob: -7.781862258911133
    7. '++' → logprob: -8.281862258911133
    8. '+
' → logprob: -8.406862258911133
    9. ' =' → logprob: -9.156862258911133
    10. '<|end|>' → logprob: -10.031862258911133

Token 258: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' (adapté à ' bb') → logprob: -0.0013719070702791214
    2. 'ab' → logprob: -6.87637186050415
    3. 'aa' → logprob: -8.251372337341309
    4. '(bb' → logprob: -11.126372337341309
    5. '1' → logprob: -11.501372337341309
    6. 'abb' → logprob: -11.626372337341309
    7. '   ' → logprob: -11.751372337341309
    8. 'cc' → logprob: -11.876372337341309
    9. '_bb' → logprob: -11.876372337341309
    10. 'ba' → logprob: -12.626372337341309

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03367763012647629
    2. ' =' → logprob: -3.408677577972412
    3. ',' → logprob: -10.40867805480957
    4. '<|end|>' → logprob: -14.53367805480957
    5. '=
' → logprob: -15.28367805480957
    6. ' ' → logprob: -15.90867805480957
    7. '   ' → logprob: -15.90867805480957
    8. '+' → logprob: -16.03367805480957
    9. '=a' → logprob: -16.40867805480957
    10. '=int' → logprob: -16.53367805480957

Token 260: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011064798571169376
    2. ' b' → logprob: -4.5110650062561035
    3. 'a' → logprob: -11.886064529418945
    4. '   ' → logprob: -12.886064529418945
    5. '       ' → logprob: -13.511064529418945
    6. '    ' → logprob: -13.511064529418945
    7. 'get' → logprob: -13.761064529418945
    8. '	b' → logprob: -13.761064529418945
    9. 'bb' → logprob: -14.386064529418945
    10. ' ' → logprob: -14.761064529418945

Token 261: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0020479592494666576
    2. '-' → logprob: -6.627048015594482
    3. '_-' → logprob: -7.252048015594482
    4. '_=' → logprob: -12.627047538757324
    5. '_
' → logprob: -13.002047538757324
    6. '_
' → logprob: -13.127047538757324
    7. '_

' → logprob: -13.627047538757324
    8. '_]' → logprob: -14.127047538757324
    9. '_)' → logprob: -14.252047538757324
    10. '-_' → logprob: -14.627047538757324

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3630499243736267
    2. '<|end|>' → logprob: -1.2380499839782715
    3. '   ' → logprob: -5.7380499839782715
    4. ' ' → logprob: -6.3630499839782715
    5. '<|end|>' → logprob: -6.3630499839782715
    6. '        ' → logprob: -6.4880499839782715
    7. ' ' → logprob: -6.7380499839782715
    8. '+' → logprob: -6.7380499839782715
    9. '    ' → logprob: -7.3630499839782715
    10. ' while' → logprob: -7.6130499839782715

Token 263: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.40384912490844727
    2. '       ' → logprob: -1.1538491249084473
    3. '   ' → logprob: -4.528849124908447
    4. ' while' → logprob: -5.153849124908447
    5. ' ' → logprob: -10.028848648071289
    6. '	while' → logprob: -10.028848648071289
    7. '    ' → logprob: -10.653848648071289
    8. '      ' → logprob: -10.653848648071289
    9. '     ' → logprob: -10.903848648071289
    10. '  ' → logprob: -11.028848648071289

Token 264: ' aa' (ID: 40260)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0036363035906106234
    2. 'aa' → logprob: -5.628636360168457
    3. ' bb' → logprob: -10.878636360168457
    4. '(bb' → logprob: -11.253636360168457
    5. 'ba' → logprob: -13.253636360168457
    6. 'b' → logprob: -14.378636360168457
    7. '   ' → logprob: -14.628636360168457
    8. ' aa' → logprob: -14.878636360168457
    9. '
' → logprob: -15.503636360168457
    10. '(' → logprob: -15.628636360168457

Token 265: '+' (ID: 10)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.014813936315476894
    2. '+' → logprob: -4.3898138999938965
    3. ' <' → logprob: -6.2648138999938965
    4. ' +' → logprob: -8.389814376831055
    5. '<ll' → logprob: -9.764814376831055
    6. '<int' → logprob: -9.889814376831055
    7. '<b' → logprob: -10.889814376831055
    8. '<size' → logprob: -12.264814376831055
    9. '<n' → logprob: -12.514814376831055
    10. '<std' → logprob: -12.514814376831055

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014673690311610699
    2. '<' → logprob: -7.251467227935791
    3. 'bb' → logprob: -8.12646770477295
    4. '+' → logprob: -8.25146770477295
    5. ' ' → logprob: -8.62646770477295
    6. ' <' → logprob: -12.87646770477295
    7. '(' → logprob: -12.87646770477295
    8. '2' → logprob: -13.12646770477295
    9. '(bb' → logprob: -13.12646770477295
    10. ' bb' → logprob: -13.25146770477295

Token 267: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0003687053394969553
    2. ' <' → logprob: -8.00036907196045
    3. '<b' → logprob: -11.50036907196045
    4. '<ll' → logprob: -11.50036907196045
    5. '<std' → logprob: -13.37536907196045
    6. '<n' → logprob: -13.50036907196045
    7. '!=' → logprob: -13.50036907196045
    8. '<num' → logprob: -13.75036907196045
    9. ' ' → logprob: -14.00036907196045
    10. '<class' → logprob: -14.12536907196045

Token 268: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -7.941850526549388e-06
    2. ' bb' → logprob: -11.750007629394531
    3. '_bb' → logprob: -17.75000762939453
    4. '.bb' → logprob: -18.25000762939453
    5. '(bb' → logprob: -19.75000762939453
    6. 'b' → logprob: -20.00000762939453
    7. 'bbbb' → logprob: -20.87500762939453
    8. 'bbb' → logprob: -22.00000762939453
    9. ' ' → logprob: -22.12500762939453
    10. 'bbs' → logprob: -22.25000762939453

Token 269: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6536839008331299
    2. ':' → logprob: -0.7786839008331299
    3. ' and' → logprob: -3.90368390083313
    4. '       ' → logprob: -8.27868366241455
    5. '<|end|>' → logprob: -8.77868366241455
    6. '<|end|>' → logprob: -9.77868366241455
    7. ':

' → logprob: -10.02868366241455
    8. 'and' → logprob: -10.15368366241455
    9. '           ' → logprob: -10.52868366241455
    10. '=' → logprob: -10.52868366241455

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06993932276964188
    2. '	       ' → logprob: -3.569939374923706
    3. '<|end|>' → logprob: -4.319939136505127
    4. ' ' → logprob: -4.569939136505127
    5. ' ' → logprob: -4.944939136505127
    6. '```' → logprob: -6.569939136505127
    7. '		' → logprob: -6.944939136505127
    8. '   ' → logprob: -6.944939136505127
    9. '<|end|>' → logprob: -7.319939136505127
    10. ',' → logprob: -7.569939136505127

Token 271: ' if' (ID: 538)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.15324057638645172
    2. 'if' (adapté à ' if') → logprob: -2.15324068069458
    3. 'm' → logprob: -4.02824068069458
    4. ' if' → logprob: -5.90324068069458
    5. ' mid' → logprob: -6.15324068069458
    6. '           ' → logprob: -6.52824068069458
    7. 'middle' → logprob: -6.77824068069458
    8. '   ' → logprob: -7.77824068069458
    9. ' midpoint' → logprob: -9.528240203857422
    10. ' ' → logprob: -10.028240203857422

Token 272: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.00010270876373397186
    2. ' aa' → logprob: -9.250102996826172
    3. 'bb' → logprob: -12.375102996826172
    4. '#aa' → logprob: -13.875102996826172
    5. '(' → logprob: -14.000102996826172
    6. '   ' → logprob: -15.000102996826172
    7. ' ' → logprob: -16.125102996826172
    8. 'a' → logprob: -16.375102996826172
    9. 'aaa' → logprob: -16.500102996826172
    10. '  ' → logprob: -17.625102996826172

Token 273: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3211597800254822
    2. ' %' → logprob: -1.321159839630127
    3. ' &' → logprob: -5.196159839630127
    4. '&' → logprob: -6.196159839630127
    5. ' ' → logprob: -9.321159362792969
    6. ' ' → logprob: -9.571159362792969
    7. '+' → logprob: -9.821159362792969
    8. '[' → logprob: -10.821159362792969
    9. '```' → logprob: -11.321159362792969
    10. ')' → logprob: -11.821159362792969

Token 274: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -16.500001907348633
    4. '==' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '=' → logprob: -17.250001907348633
    7. '```' → logprob: -18.000001907348633
    8. '
' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.687501907348633
    10. '4' → logprob: -20.125001907348633

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.625004768371582
    3. '0' → logprob: -13.625004768371582
    4. '==' → logprob: -15.500004768371582
    5. '=' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.8750057220459
    7. '
' → logprob: -17.6250057220459
    8. '1' → logprob: -17.8750057220459
    9. ' ==' → logprob: -18.2500057220459
    10. '```' → logprob: -18.5000057220459

Token 276: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007810558192431927
    2. ' ==' → logprob: -4.882810592651367
    3. ':' → logprob: -9.382810592651367
    4. '!=' → logprob: -10.007810592651367
    5. '1' → logprob: -10.632810592651367
    6. '0' → logprob: -10.632810592651367
    7. '==
' → logprob: -11.257810592651367
    8. '=' → logprob: -11.757810592651367
    9. ' ' → logprob: -13.382810592651367
    10. ':
' → logprob: -13.632810592651367

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.7530574849806726e-05
    2. '1' → logprob: -10.000057220458984
    3. ' ' → logprob: -11.500057220458984
    4. '=' → logprob: -13.250057220458984
    5. '==' → logprob: -17.375057220458984
    6. '   ' → logprob: -17.375057220458984
    7. '2' → logprob: -17.687557220458984
    8. '00' → logprob: -17.875057220458984
    9. '```' → logprob: -18.562557220458984
    10. '4' → logprob: -19.000057220458984

Token 278: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000169332604855299
    2. '1' → logprob: -8.75016975402832
    3. ' ' → logprob: -11.50016975402832
    4. '=' → logprob: -15.50016975402832
    5. '   ' → logprob: -16.25016975402832
    6. '4' → logprob: -16.31266975402832
    7. '2' → logprob: -16.81266975402832
    8. 'a' → logprob: -16.93766975402832
    9. '00' → logprob: -17.37516975402832
    10. '6' → logprob: -17.37516975402832

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5781047940254211
    2. ':
' → logprob: -0.8281047940254211
    3. ' and' → logprob: -6.7031049728393555
    4. ' :
' → logprob: -7.7031049728393555
    5. ' :' → logprob: -8.203104972839355
    6. ' or' → logprob: -9.578104972839355
    7. ':return' → logprob: -10.328104972839355
    8. ':

' → logprob: -10.828104972839355
    9. 'and' → logprob: -10.953104972839355
    10. ':
' → logprob: -10.953104972839355

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18302880227565765
    2. ' ret' → logprob: -2.1830286979675293
    3. ' ST' → logprob: -4.058028697967529
    4. ' ' → logprob: -4.183028697967529
    5. '           ' → logprob: -5.183028697967529
    6. '   ' → logprob: -5.558028697967529
    7. '                ' → logprob: -5.933028697967529
    8. '<|end|>' → logprob: -6.308028697967529
    9. '            ' → logprob: -6.808028697967529
    10. 'ret' → logprob: -6.933028697967529

Token 281: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.00041053479071706533
    2. ' ret' → logprob: -8.000410079956055
    3. '               ' → logprob: -11.000410079956055
    4. '           ' → logprob: -11.125410079956055
    5. '   ' → logprob: -11.250410079956055
    6. 'rett' → logprob: -11.750410079956055
    7. ' ' → logprob: -11.875410079956055
    8. '	ret' → logprob: -12.250410079956055
    9. 'retval' → logprob: -12.500410079956055
    10. '                   ' → logprob: -13.000410079956055

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931560039520264
    2. ' =' → logprob: -0.6931560039520264
    3. ' ' → logprob: -12.193156242370605
    4. 'func' → logprob: -13.693156242370605
    5. '=
' → logprob: -13.943156242370605
    6. ' =
' → logprob: -15.443156242370605
    7. '=

' → logprob: -15.443156242370605
    8. ' func' → logprob: -15.568156242370605
    9. '=f' → logprob: -16.06815528869629
    10. '＝' → logprob: -16.19315528869629

Token 283: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.11282891035079956
    2. ' func' → logprob: -2.2378289699554443
    3. '	func' → logprob: -12.737829208374023
    4. '(func' → logprob: -13.987829208374023
    5. 'fun' → logprob: -14.112829208374023
    6. ' ' → logprob: -14.362829208374023
    7. '   ' → logprob: -14.487829208374023
    8. '    ' → logprob: -15.362829208374023
    9. '  ' → logprob: -15.987829208374023
    10. '.func' → logprob: -16.237829208374023

Token 284: '(ST' (ID: 62064)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.008781078271567822
    2. '(func' → logprob: -4.7587809562683105
    3. '(ST' → logprob: -9.133781433105469
    4. 'ret' → logprob: -10.008781433105469
    5. 'func' → logprob: -11.883781433105469
    6. '(' → logprob: -12.633781433105469
    7. ' ret' → logprob: -13.258781433105469
    8. '(st' → logprob: -14.633781433105469
    9. '(
' → logprob: -14.758781433105469
    10. '	ret' → logprob: -15.508781433105469

Token 285: '[' (ID: 58)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.02325456403195858
    2. '[' → logprob: -3.773254632949829
    3. ' aa' → logprob: -12.27325439453125
    4. '(' → logprob: -13.77325439453125
    5. '#aa' → logprob: -13.89825439453125
    6. 'aaa' → logprob: -14.14825439453125
    7. '   ' → logprob: -14.64825439453125
    8. '[
' → logprob: -15.02325439453125
    9. '[a' → logprob: -15.77325439453125
    10. 'AA' → logprob: -16.02325439453125

Token 286: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -6.034592388459714e-06
    2. ' aa' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.375005722045898
    4. ' ' → logprob: -15.875005722045898
    5. 'aaa' → logprob: -15.875005722045898
    6. '
' → logprob: -16.1250057220459
    7. '(' → logprob: -16.3750057220459
    8. '[' → logprob: -16.5000057220459
    9. 'ST' → logprob: -16.5000057220459
    10. '#aa' → logprob: -17.3750057220459

Token 287: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.038498472422361374
    2. ' ],' → logprob: -3.2884984016418457
    3. ',' → logprob: -8.413498878479004
    4. ']' → logprob: -9.288498878479004
    5. '+' → logprob: -10.038498878479004
    6. ' ,' → logprob: -10.163498878479004
    7. '],
' → logprob: -10.913498878479004
    8. '],[' → logprob: -11.163498878479004
    9. '),' → logprob: -11.913498878479004
    10. ' ]' → logprob: -12.163498878479004

Token 288: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0011711753904819489
    2. ' ret' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.751171112060547
    4. '	ret' → logprob: -15.751171112060547
    5. '  ' → logprob: -16.001171112060547
    6. 'ST' → logprob: -16.126171112060547
    7. ' ' → logprob: -16.126171112060547
    8. '    ' → logprob: -17.001171112060547
    9. '       ' → logprob: -17.626171112060547
    10. '     ' → logprob: -18.126171112060547

Token 289: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20834974944591522
    2. ')' → logprob: -1.7083497047424316
    3. ' )
' → logprob: -5.333349704742432
    4. '               ' → logprob: -6.458349704742432
    5. ' )' → logprob: -8.45835018157959
    6. ')
' → logprob: -8.70835018157959
    7. '                   ' → logprob: -9.70835018157959
    8. '           ' → logprob: -10.33335018157959
    9. ' ' → logprob: -11.70835018157959
    10. '       ' → logprob: -12.20835018157959

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029013818129897118
    2. '       ' → logprob: -3.9040138721466064
    3. '           ' → logprob: -5.779013633728027
    4. '   ' → logprob: -6.279013633728027
    5. ' aa' → logprob: -6.654013633728027
    6. ' ' → logprob: -7.779013633728027
    7. '              ' → logprob: -7.904013633728027
    8. '                   ' → logprob: -8.404013633728027
    9. '<|end|>' → logprob: -8.404013633728027
    10. '                
' → logprob: -8.779013633728027

Token 291: ' aa' (ID: 40260)
  Prédit: ' aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aa' → logprob: -0.004108442459255457
    2. 'aa' (adapté à ' aa') → logprob: -5.504108428955078
    3. '               ' → logprob: -11.254108428955078
    4. '                   ' → logprob: -12.129108428955078
    5. ' ++' → logprob: -12.629108428955078
    6. '   ' → logprob: -13.254108428955078
    7. '           ' → logprob: -13.504108428955078
    8. '++' → logprob: -13.629108428955078
    9. ' aaa' → logprob: -14.129108428955078
    10. ' ' → logprob: -14.254108428955078

Token 292: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12713682651519775
    2. ' +=' → logprob: -2.127136707305908
    3. '+' → logprob: -9.002137184143066
    4. '=' → logprob: -9.502137184143066
    5. ']+=' → logprob: -12.627137184143066
    6. '+='' → logprob: -12.877137184143066
    7. '<|end|>' → logprob: -13.377137184143066
    8. '+="' → logprob: -13.627137184143066
    9. ' =' → logprob: -13.877137184143066
    10. '++' → logprob: -15.002137184143066

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.875015258789062
    4. '<|end|>' → logprob: -19.125015258789062
    5. '```' → logprob: -19.250015258789062
    6. '  ' → logprob: -20.875015258789062
    7. '۱' → logprob: -21.125015258789062
    8. '
' → logprob: -21.625015258789062
    9. '+' → logprob: -21.750015258789062
    10. '１' → logprob: -21.875015258789062

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -16.250001907348633
    4. '```' → logprob: -17.625001907348633
    5. '2' → logprob: -19.375001907348633
    6. '
' → logprob: -19.437501907348633
    7. '+' → logprob: -19.687501907348633
    8. '   ' → logprob: -19.750001907348633
    9. '۱' → logprob: -19.875001907348633
    10. '१' → logprob: -19.937501907348633

Token 295: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20551446080207825
    2. '```' → logprob: -2.330514430999756
    3. '   ' → logprob: -3.330514430999756
    4. '<|end|>' → logprob: -4.330514430999756
    5. '       ' → logprob: -4.705514430999756
    6. '
' → logprob: -4.955514430999756
    7. ' ' → logprob: -5.205514430999756
    8. ' ' → logprob: -5.705514430999756
    9. ' 
' → logprob: -5.955514430999756
    10. '  
' → logprob: -6.080514430999756

Token 296: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7090833187103271
    2. '<|end|>' → logprob: -1.3340833187103271
    3. ')' → logprob: -2.584083318710327
    4. ' ' → logprob: -2.709083318710327
    5. '           ' → logprob: -3.959083318710327
    6. '   ' → logprob: -3.959083318710327
    7. ' ' → logprob: -3.959083318710327
    8. ' if' → logprob: -4.084083557128906
    9. '       ' → logprob: -5.209083557128906
    10. ' while' → logprob: -5.334083557128906

Token 297: ' aa' (ID: 40260)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016047976911067963
    2. 'if' → logprob: -4.266047954559326
    3. ' bb' → logprob: -6.891047954559326
    4. ' ' → logprob: -8.141048431396484
    5. '           ' → logprob: -8.641048431396484
    6. ' ' → logprob: -9.141048431396484
    7. 'bb' → logprob: -9.266048431396484
    8. ' b' → logprob: -9.391048431396484
    9. ' while' → logprob: -10.266048431396484
    10. 'b' → logprob: -10.891048431396484

Token 298: ' //' (ID: 602)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.42376554012298584
    2. '+=' → logprob: -1.5487655401229858
    3. '%' → logprob: -2.5487656593322754
    4. '=' → logprob: -4.298765659332275
    5. ' %=' → logprob: -4.298765659332275
    6. ' %' → logprob: -4.923765659332275
    7. ' ' → logprob: -5.173765659332275
    8. '%=' → logprob: -5.298765659332275
    9. '```' → logprob: -5.423765659332275
    10. ' =' → logprob: -6.298765659332275

Token 299: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.625000953674316
    3. '=}' → logprob: -16.625
    4. '/=' → logprob: -16.75
    5. '=
' → logprob: -17.125
    6. ' =' → logprob: -17.5
    7. '=

' → logprob: -17.5
    8. '==' → logprob: -17.875
    9. ' ' → logprob: -18.375
    10. '=*/' → logprob: -18.625

Token 300: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.375076293945312
    4. '```' → logprob: -16.375076293945312
    5. '  ' → logprob: -18.000076293945312
    6. '
' → logprob: -18.000076293945312
    7. '=' → logprob: -18.875076293945312
    8. '    ' → logprob: -19.500076293945312
    9. '       ' → logprob: -19.750076293945312
    10. '>' → logprob: -20.000076293945312

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -16.6250057220459
    5. '
' → logprob: -16.7500057220459
    6. '=' → logprob: -16.7500057220459
    7. '  ' → logprob: -18.5000057220459
    8. '２' → logprob: -19.6250057220459
    9. '۲' → logprob: -19.8125057220459
    10. '>' → logprob: -19.8750057220459

Token 302: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008555353619158268
    2. ',' → logprob: -5.3835554122924805
    3. '```' → logprob: -7.1335554122924805
    4. '<|end|>' → logprob: -7.1335554122924805
    5. '          ' → logprob: -7.6335554122924805
    6. '   ' → logprob: -8.13355541229248
    7. '       ' → logprob: -8.13355541229248
    8. '            ' → logprob: -8.25855541229248
    9. ' bb' → logprob: -8.25855541229248
    10. ',b' → logprob: -8.75855541229248

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010658086277544498
    2. ' bb' → logprob: -5.135658264160156
    3. '```' → logprob: -6.510658264160156
    4. 'bb' → logprob: -6.635658264160156
    5. ' ' → logprob: -7.385658264160156
    6. 'b' → logprob: -8.385658264160156
    7. '   ' → logprob: -8.510658264160156
    8. '          ' → logprob: -8.760658264160156
    9. ' ' → logprob: -8.760658264160156
    10. '       ' → logprob: -8.885658264160156

Token 304: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5712032914161682
    2. 'bb' → logprob: -1.3212032318115234
    3. ' if' → logprob: -1.8212032318115234
    4. ' bb' → logprob: -5.071203231811523
    5. '           ' → logprob: -9.196203231811523
    6. 'b' → logprob: -10.446203231811523
    7. '```' → logprob: -10.446203231811523
    8. '            ' → logprob: -10.696203231811523
    9. ' ' → logprob: -10.946203231811523
    10. '    ' → logprob: -11.196203231811523

Token 305: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.03805181756615639
    2. ' bb' → logprob: -3.2880518436431885
    3. '(bb' → logprob: -11.53805160522461
    4. '_bb' → logprob: -15.16305160522461
    5. ' ' → logprob: -15.91305160522461
    6. '.bb' → logprob: -16.03805160522461
    7. 'b' → logprob: -17.28805160522461
    8. '   ' → logprob: -18.16305160522461
    9. '  ' → logprob: -18.28805160522461
    10. 'bbb' → logprob: -18.53805160522461

Token 306: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3172479271888733
    2. ' %' → logprob: -1.3172478675842285
    3. ' //' → logprob: -6.0672478675842285
    4. '//' → logprob: -7.9422478675842285
    5. '=' → logprob: -8.317248344421387
    6. ' ' → logprob: -8.442248344421387
    7. '%=' → logprob: -8.942248344421387
    8. '//=' → logprob: -9.067248344421387
    9. '       ' → logprob: -9.317248344421387
    10. '>' → logprob: -9.817248344421387

Token 307: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03387447074055672
    2. ' ' → logprob: -3.40887451171875
    3. '```' → logprob: -8.53387451171875
    4. '1' → logprob: -12.03387451171875
    5. '>' → logprob: -12.15887451171875
    6. '=' → logprob: -12.15887451171875
    7. '   ' → logprob: -12.53387451171875
    8. '[' → logprob: -12.78387451171875
    9. '``' → logprob: -12.90887451171875
    10. '  ' → logprob: -13.15887451171875

Token 308: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005567280459217727
    2. ' ' → logprob: -7.500556945800781
    3. '```' → logprob: -13.625556945800781
    4. '>' → logprob: -13.875556945800781
    5. '=' → logprob: -14.250556945800781
    6. '   ' → logprob: -15.500556945800781
    7. '  ' → logprob: -15.500556945800781
    8. '``' → logprob: -15.750556945800781
    9. '==' → logprob: -16.18805694580078
    10. '0' → logprob: -16.93805694580078

Token 309: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2817733585834503
    2. '==' → logprob: -1.406773328781128
    3. '0' → logprob: -7.906773567199707
    4. ' !=' → logprob: -9.031773567199707
    5. ' ' → logprob: -9.656773567199707
    6. '=' → logprob: -10.656773567199707
    7. '1' → logprob: -10.781773567199707
    8. '!=' → logprob: -10.906773567199707
    9. '[' → logprob: -13.531773567199707
    10. '           ' → logprob: -14.031773567199707

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2057093381881714
    2. ' ' → logprob: -1.7057093381881714
    3. '1' → logprob: -5.455709457397461
    4. '2' → logprob: -11.205709457397461
    5. '   ' → logprob: -14.580709457397461
    6. '```' → logprob: -14.955709457397461
    7. '  ' → logprob: -15.205709457397461
    8. '[' → logprob: -15.830709457397461
    9. '==' → logprob: -16.20570945739746
    10. '=' → logprob: -16.95570945739746

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25196588039398193
    2. '0' → logprob: -1.501965880393982
    3. ' ' → logprob: -10.251965522766113
    4. '   ' → logprob: -14.126965522766113
    5. '  ' → logprob: -16.00196647644043
    6. '```' → logprob: -16.12696647644043
    7. '-' → logprob: -16.50196647644043
    8. '#' → logprob: -17.06446647644043
    9. '[' → logprob: -17.12696647644043
    10. '=' → logprob: -17.25196647644043

Token 312: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6537967324256897
    2. ':
' → logprob: -1.028796672821045
    3. ':' → logprob: -2.278796672821045
    4. '-' → logprob: -5.028796672821045
    5. '=' → logprob: -5.403796672821045
    6. ' -' → logprob: -5.653796672821045
    7. ' -=' → logprob: -6.028796672821045
    8. '           ' → logprob: -7.153796672821045
    9. '-=' → logprob: -7.278796672821045
    10. '       ' → logprob: -7.778796672821045

Token 313: '               ' (ID: 506)
  Prédit: ' bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bb' → logprob: -0.7477564215660095
    2. '               ' → logprob: -1.7477564811706543
    3. 'bb' → logprob: -1.7477564811706543
    4. ' ret' → logprob: -2.7477564811706543
    5. '           ' → logprob: -2.9977564811706543
    6. '```' → logprob: -3.4977564811706543
    7. 'ret' → logprob: -4.747756481170654
    8. '       ' → logprob: -4.997756481170654
    9. '=' → logprob: -5.622756481170654
    10. ' ' → logprob: -5.747756481170654

Token 314: ' ret' (ID: 2881)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.35718128085136414
    2. 'ret' (adapté à ' ret') → logprob: -1.2321813106536865
    3. ' ret' → logprob: -5.732181072235107
    4. ' bb' → logprob: -5.857181072235107
    5. '           ' → logprob: -6.607181072235107
    6. 'b' → logprob: -7.607181072235107
    7. '       ' → logprob: -7.982181072235107
    8. '   ' → logprob: -8.357181549072266
    9. '               ' → logprob: -9.732181549072266
    10. 'bbb' → logprob: -10.482181549072266

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.313261985778809
    4. '=
' → logprob: -15.813261985778809
    5. 'func' → logprob: -16.063262939453125
    6. ')' → logprob: -16.438262939453125
    7. ' =
' → logprob: -17.438262939453125
    8. '=

' → logprob: -17.938262939453125
    9. '＝' → logprob: -18.688262939453125
    10. ' func' → logprob: -18.938262939453125

Token 316: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.0232557263225317
    2. ' func' → logprob: -3.7732558250427246
    3. '(func' → logprob: -11.898255348205566
    4. '	func' → logprob: -13.148255348205566
    5. 'fun' → logprob: -14.648255348205566
    6. ' ' → logprob: -14.898255348205566
    7. '.func' → logprob: -15.898255348205566
    8. '   ' → logprob: -16.023256301879883
    9. '
' → logprob: -16.023256301879883
    10. '  ' → logprob: -16.648256301879883

Token 317: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -1.8624639324116288e-06
    2. 'ST' → logprob: -13.875001907348633
    3. '(S' → logprob: -15.000001907348633
    4. '(' → logprob: -15.250001907348633
    5. '(
' → logprob: -15.625001907348633
    6. ' (' → logprob: -17.125001907348633
    7. '(St' → logprob: -17.500001907348633
    8. '(st' → logprob: -18.000001907348633
    9. '	ST' → logprob: -18.250001907348633
    10. '(func' → logprob: -18.750001907348633

Token 318: '[' (ID: 58)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.3135351538658142
    2. '[' → logprob: -1.313535213470459
    3. '(bb' → logprob: -8.6885347366333
    4. '[b' → logprob: -9.5635347366333
    5. 'bbb' → logprob: -10.8135347366333
    6. ' bb' → logprob: -12.0635347366333
    7. 'b' → logprob: -13.0635347366333
    8. '.bb' → logprob: -13.1885347366333
    9. '_bb' → logprob: -13.8135347366333
    10. '[
' → logprob: -13.9385347366333

Token 319: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -2.9875325708417222e-05
    2. '(bb' → logprob: -10.625029563903809
    3. ' bb' → logprob: -12.875029563903809
    4. 'bbb' → logprob: -13.125029563903809
    5. '[' → logprob: -14.875029563903809
    6. 'b' → logprob: -15.375029563903809
    7. 'bbs' → logprob: -16.125030517578125
    8. ' ' → logprob: -16.500030517578125
    9. 'bbbb' → logprob: -16.875030517578125
    10. '_bb' → logprob: -16.875030517578125

Token 320: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026323288679122925
    2. ' -' → logprob: -3.6513233184814453
    3. '],' → logprob: -11.401323318481445
    4. '1' → logprob: -12.401323318481445
    5. ' ' → logprob: -12.776323318481445
    6. ']' → logprob: -13.651323318481445
    7. ']-' → logprob: -14.151323318481445
    8. '[' → logprob: -14.276323318481445
    9. ',' → logprob: -14.651323318481445
    10. '2' → logprob: -14.901323318481445

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.85235276655294e-05
    2. '2' → logprob: -9.875088691711426
    3. ' ' → logprob: -10.500088691711426
    4. '   ' → logprob: -12.375088691711426
    5. '           ' → logprob: -13.125088691711426
    6. '       ' → logprob: -13.625088691711426
    7. '```' → logprob: -13.875088691711426
    8. '               ' → logprob: -15.125088691711426
    9. '                   ' → logprob: -15.375088691711426
    10. '  ' → logprob: -16.37508773803711

Token 322: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005367091507650912
    2. ' ,' → logprob: -8.000536918640137
    3. '),' → logprob: -8.625536918640137
    4. '],' → logprob: -11.125536918640137
    5. ',
' → logprob: -12.500536918640137
    6. '       ' → logprob: -14.500536918640137
    7. '   ' → logprob: -14.750536918640137
    8. '           ' → logprob: -15.250536918640137
    9. 'ret' → logprob: -15.375536918640137
    10. ')' → logprob: -15.500536918640137

Token 323: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.3132641315460205
    2. ' ret' → logprob: -1.3132641315460205
    3. 'bb' → logprob: -13.313263893127441
    4. ' bb' → logprob: -14.563263893127441
    5. ' ' → logprob: -16.188264846801758
    6. '       ' → logprob: -17.313264846801758
    7. '(ret' → logprob: -17.438264846801758
    8. '	ret' → logprob: -17.563264846801758
    9. ')' → logprob: -18.188264846801758
    10. '$ret' → logprob: -18.188264846801758

Token 324: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5831372141838074
    2. ')
' → logprob: -1.0831372737884521
    3. ')' → logprob: -2.458137273788452
    4. '           ' → logprob: -4.083137035369873
    5. '       ' → logprob: -8.083137512207031
    6. '                   ' → logprob: -8.458137512207031
    7. '              ' → logprob: -9.333137512207031
    8. '   ' → logprob: -10.208137512207031
    9. '                ' → logprob: -10.583137512207031
    10. ' )
' → logprob: -10.833137512207031

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5652384161949158
    2. '               ' → logprob: -0.9402384161949158
    3. ' bb' → logprob: -4.5652384757995605
    4. '       ' → logprob: -4.6902384757995605
    5. 'bb' → logprob: -4.6902384757995605
    6. '```' → logprob: -4.6902384757995605
    7. '   ' → logprob: -7.0652384757995605
    8. ' ' → logprob: -7.3152384757995605
    9. '
' → logprob: -8.190237998962402
    10. '(bb' → logprob: -8.315237998962402

Token 326: ' bb' (ID: 32433)
  Prédit: ' bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bb' → logprob: -0.001088662538677454
    2. '           ' → logprob: -7.251088619232178
    3. 'bb' (adapté à ' bb') → logprob: -8.126089096069336
    4. '```' → logprob: -10.751089096069336
    5. ' ' → logprob: -11.126089096069336
    6. '.bb' → logprob: -11.376089096069336
    7. '   ' → logprob: -11.626089096069336
    8. '(bb' → logprob: -11.751089096069336
    9. '       ' → logprob: -12.376089096069336
    10. ' ' → logprob: -13.001089096069336

Token 327: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.053023479878902435
    2. '//=' → logprob: -3.05302357673645
    3. '//' → logprob: -5.428023338317871
    4. '=' → logprob: -11.428023338317871
    5. ' -=' → logprob: -11.678023338317871
    6. '-=' → logprob: -11.803023338317871
    7. '```' → logprob: -12.678023338317871
    8. '   ' → logprob: -13.303023338317871
    9. ' ' → logprob: -13.553023338317871
    10. ' =' → logprob: -14.928023338317871

Token 328: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.096126576769166e-05
    2. '/=' → logprob: -10.250041007995605
    3. '2' → logprob: -12.250041007995605
    4. ' ' → logprob: -14.500041007995605
    5. '/' → logprob: -16.50004005432129
    6. '>' → logprob: -16.87504005432129
    7. '=
' → logprob: -16.87504005432129
    8. '```' → logprob: -17.87504005432129
    9. '//=' → logprob: -18.00004005432129
    10. ' /=' → logprob: -18.62504005432129

Token 329: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01105206273496151
    2. ' ' → logprob: -4.511052131652832
    3. '   ' → logprob: -12.761052131652832
    4. '=' → logprob: -14.636052131652832
    5. '  ' → logprob: -15.386052131652832
    6. '```' → logprob: -15.636052131652832
    7. '       ' → logprob: -15.761052131652832
    8. '           ' → logprob: -15.761052131652832
    9. '    ' → logprob: -17.136051177978516
    10. '>' → logprob: -17.136051177978516

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2603901015827432e-05
    2. ' ' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.875022888183594
    4. '           ' → logprob: -17.750022888183594
    5. '       ' → logprob: -17.750022888183594
    6. '  ' → logprob: -17.875022888183594
    7. '```' → logprob: -18.000022888183594
    8. '
' → logprob: -19.625022888183594
    9. '=' → logprob: -19.625022888183594
    10. '    ' → logprob: -19.750022888183594

Token 331: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 333: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08770392090082169
    2. '   ' → logprob: -2.7127039432525635
    3. '+' → logprob: -4.587703704833984
    4. ' )' → logprob: -6.712703704833984
    5. ' ' → logprob: -6.837703704833984
    6. ' ans' → logprob: -7.212703704833984
    7. 'a' → logprob: -7.462703704833984
    8. ')+' → logprob: -7.587703704833984
    9. ',' → logprob: -7.962703704833984
    10. '(ans' → logprob: -8.337703704833984

Token 334: ' aa' (ID: 40260)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -1.0837414264678955
    2. ' ret' → logprob: -1.5837414264678955
    3. 'a' → logprob: -1.7087414264678955
    4. ' a' → logprob: -2.5837414264678955
    5. 'b' → logprob: -3.2087414264678955
    6. ' b' → logprob: -3.2087414264678955
    7. '__' → logprob: -4.458741188049316
    8. 'bb' → logprob: -4.458741188049316
    9. ' aa' → logprob: -4.833741188049316
    10. ' bb' → logprob: -4.833741188049316

Token 335: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47025418281555176
    2. '+' → logprob: -1.8452541828155518
    3. ' %' → logprob: -2.5952541828155518
    4. ' +' → logprob: -2.7202541828155518
    5. '==' → logprob: -3.3452541828155518
    6. '!=' → logprob: -4.095253944396973
    7. ' ==' → logprob: -4.345253944396973
    8. ' !=' → logprob: -4.470253944396973
    9. '   ' → logprob: -8.970253944396973
    10. ' ' → logprob: -9.470253944396973

Token 336: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.007643902208656073
    2. ' bb' → logprob: -4.882643699645996
    3. '   ' → logprob: -11.757643699645996
    4. '(bb' → logprob: -11.757643699645996
    5. ' ' → logprob: -11.882643699645996
    6. 'b' → logprob: -12.257643699645996
    7. '    ' → logprob: -12.507643699645996
    8. '     ' → logprob: -12.882643699645996
    9. '_bb' → logprob: -13.632643699645996
    10. 'aa' → logprob: -13.757643699645996

Token 337: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2025885432958603
    2. ':' → logprob: -1.8275885581970215
    3. '           ' → logprob: -3.9525885581970215
    4. ' and' → logprob: -6.2025885581970215
    5. '       ' → logprob: -7.4525885581970215
    6. '==' → logprob: -8.577588081359863
    7. 'and' → logprob: -9.077588081359863
    8. '               ' → logprob: -9.702588081359863
    9. ' or' → logprob: -9.827588081359863
    10. ' ==' → logprob: -9.952588081359863

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00442691333591938
    2. ':' → logprob: -6.504426956176758
    3. ' ret' → logprob: -6.754426956176758
    4. ':
' → logprob: -7.254426956176758
    5. ' and' → logprob: -7.629426956176758
    6. '       ' → logprob: -8.379426956176758
    7. 'ret' → logprob: -9.629426956176758
    8. '               ' → logprob: -9.879426956176758
    9. '   ' → logprob: -11.004426956176758
    10. '	       ' → logprob: -11.004426956176758

Token 339: ' pass' (ID: 1853)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.14330367743968964
    2. ' ret' → logprob: -2.018303632736206
    3. '       ' → logprob: -7.518303871154785
    4. '   ' → logprob: -10.393303871154785
    5. '           ' → logprob: -10.518303871154785
    6. '	ret' → logprob: -11.393303871154785
    7. 'pass' (adapté à ' pass') → logprob: -12.893303871154785
    8. '    ' → logprob: -12.893303871154785
    9. 'return' → logprob: -13.268303871154785
    10. '$ret' → logprob: -13.393303871154785

Token 340: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03927004337310791
    2. '<|end|>' → logprob: -3.9142699241638184
    3. ')' → logprob: -4.289269924163818
    4. '   ' → logprob: -6.789269924163818
    5. '       ' → logprob: -7.539269924163818
    6. '[' → logprob: -7.789269924163818
    7. '):' → logprob: -7.789269924163818
    8. ' :' → logprob: -7.914269924163818
    9. ']' → logprob: -7.914269924163818
    10. ':return' → logprob: -8.289270401000977

Token 341: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7286877632141113
    2. ':' → logprob: -1.3536877632141113
    3. '   ' → logprob: -2.1036877632141113
    4. '<|end|>' → logprob: -2.1036877632141113
    5. '       ' → logprob: -5.478687763214111
    6. ':return' → logprob: -5.853687763214111
    7. '):' → logprob: -6.103687763214111
    8. '[' → logprob: -6.853687763214111
    9. '```' → logprob: -7.228687763214111
    10. '<|end|>' → logprob: -7.353687763214111

Token 342: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1632122993469238
    2. '   ' → logprob: -1.2882122993469238
    3. '<|end|>' → logprob: -1.7882122993469238
    4. ')' → logprob: -2.913212299346924
    5. ':' → logprob: -2.913212299346924
    6. '[' → logprob: -3.538212299346924
    7. ' else' → logprob: -3.538212299346924
    8. '           ' → logprob: -4.288212299346924
    9. '+' → logprob: -4.788212299346924
    10. ']' → logprob: -4.913212299346924

Token 343: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5257079005241394
    2. ':
' → logprob: -1.2757079601287842
    3. ':' → logprob: -2.150707960128784
    4. ' if' → logprob: -5.275707721710205
    5. '               ' → logprob: -5.400707721710205
    6. '{
' → logprob: -7.275707721710205
    7. ' :
' → logprob: -7.525707721710205
    8. '       ' → logprob: -7.650707721710205
    9. ' {
' → logprob: -8.150708198547363
    10. '{' → logprob: -8.525708198547363

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6434006690979004
    2. 'ret' → logprob: -1.1434006690979004
    3. ' ret' → logprob: -2.0184006690979004
    4. ' if' → logprob: -4.6434006690979
    5. '       ' → logprob: -4.7684006690979
    6. 'if' → logprob: -6.0184006690979
    7. '   ' → logprob: -6.8934006690979
    8. '               ' → logprob: -8.143400192260742
    9. '	ret' → logprob: -8.768400192260742
    10. '            ' → logprob: -9.018400192260742

Token 345: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.004357010126113892
    2. ' ret' → logprob: -5.629356861114502
    3. 'if' → logprob: -8.00435733795166
    4. '           ' → logprob: -8.25435733795166
    5. 'pass' → logprob: -10.12935733795166
    6. '       ' → logprob: -10.37935733795166
    7. '   ' → logprob: -10.87935733795166
    8. 'aa' → logprob: -11.37935733795166
    9. ' if' → logprob: -11.50435733795166
    10. 'return' → logprob: -11.87935733795166

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693022191524506
    2. '=' → logprob: -2.1269302368164062
    3. ' ' → logprob: -14.376930236816406
    4. ' +=' → logprob: -14.626930236816406
    5. '   ' → logprob: -14.751930236816406
    6. '[' → logprob: -16.126930236816406
    7. ')' → logprob: -16.501930236816406
    8. '```' → logprob: -16.626930236816406
    9. '    ' → logprob: -16.876930236816406
    10. 's' → logprob: -17.001930236816406

Token 347: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.020546091720461845
    2. ' func' → logprob: -3.8955461978912354
    3. '0' → logprob: -13.770545959472656
    4. 'ret' → logprob: -13.770545959472656
    5. '	func' → logprob: -14.145545959472656
    6. '(func' → logprob: -14.395545959472656
    7. ' ' → logprob: -15.520545959472656
    8. 'fun' → logprob: -16.520545959472656
    9. 'ie' → logprob: -16.520545959472656
    10. '  ' → logprob: -16.645545959472656

Token 348: '(ret' (ID: 35317)
  Prédit: '(ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.31356433033943176
    2. '(ret' → logprob: -1.3135643005371094
    3. '(func' → logprob: -8.43856430053711
    4. '(' → logprob: -10.18856430053711
    5. '(st' → logprob: -10.31356430053711
    6. 'ret' → logprob: -11.81356430053711
    7. '(St' → logprob: -13.18856430053711
    8. '()' → logprob: -13.81356430053711
    9. '(S' → logprob: -13.93856430053711
    10. ' ret' → logprob: -14.31356430053711

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. '(ST' → logprob: -10.500041961669922
    3. ' ,' → logprob: -12.125041961669922
    4. ',
' → logprob: -12.375041961669922
    5. '           ' → logprob: -13.125041961669922
    6. 'ST' → logprob: -13.375041961669922
    7. '       ' → logprob: -15.000041961669922
    8. '               ' → logprob: -15.625041961669922
    9. '(),' → logprob: -15.875041961669922
    10. '[' → logprob: -16.500041961669922

Token 350: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.002813194179907441
    2. ' ST' → logprob: -5.877813339233398
    3. 'func' → logprob: -12.752813339233398
    4. '	ST' → logprob: -13.252813339233398
    5. ' ' → logprob: -14.127813339233398
    6. '   ' → logprob: -14.252813339233398
    7. '    ' → logprob: -14.502813339233398
    8. '0' → logprob: -14.502813339233398
    9. '_ST' → logprob: -15.002813339233398
    10. '  ' → logprob: -15.252813339233398

Token 351: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.27099974633893e-05
    2. '[b' → logprob: -11.375012397766113
    3. '[(' → logprob: -14.625012397766113
    4. '[min' → logprob: -15.375012397766113
    5. '[get' → logprob: -15.875012397766113
    6. '[a' → logprob: -16.37501335144043
    7. '[max' → logprob: -16.62501335144043
    8. 'aa' → logprob: -16.87501335144043
    9. '[
' → logprob: -17.12501335144043
    10. 'bb' → logprob: -17.12501335144043

Token 352: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.00016063073417171836
    2. 'bb' → logprob: -8.750160217285156
    3. ' aa' → logprob: -14.125160217285156
    4. '[' → logprob: -14.250160217285156
    5. '#aa' → logprob: -14.625160217285156
    6. '   ' → logprob: -16.250160217285156
    7. ' ' → logprob: -16.375160217285156
    8. 'aaa' → logprob: -17.625160217285156
    9. 'ab' → logprob: -17.875160217285156
    10. '  ' → logprob: -18.250160217285156

Token 353: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003149080788716674
    2. '])
' → logprob: -6.378149032592773
    3. '+' → logprob: -6.628149032592773
    4. ' ])' → logprob: -9.253149032592773
    5. '])

' → logprob: -12.128149032592773
    6. '-' → logprob: -12.128149032592773
    7. ')' → logprob: -12.753149032592773
    8. '   ' → logprob: -12.878149032592773
    9. '])
' → logprob: -13.128149032592773
    10. ' +' → logprob: -13.378149032592773

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014964384026825428
    2. '<|end|>' → logprob: -5.014964580535889
    3. ')' → logprob: -5.514964580535889
    4. 'ans' → logprob: -7.014964580535889
    5. ' ans' → logprob: -7.139964580535889
    6. '  ' → logprob: -7.764964580535889
    7. '	ans' → logprob: -7.889964580535889
    8. '+' → logprob: -8.01496410369873
    9. ',' → logprob: -8.01496410369873
    10. ' ' → logprob: -8.13996410369873

Token 355: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42960333824157715
    2. ' ans' → logprob: -1.6796033382415771
    3. 'ans' (adapté à ' ans') → logprob: -2.304603338241577
    4. ')' → logprob: -3.554603338241577
    5. '(ans' → logprob: -4.304603576660156
    6. '	ans' → logprob: -5.554603576660156
    7. '<|end|>' → logprob: -5.929603576660156
    8. '
' → logprob: -6.054603576660156
    9. '\n' → logprob: -6.304603576660156
    10. ' ' → logprob: -6.429603576660156

Token 356: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3486492931842804
    2. '+=' → logprob: -1.223649263381958
    3. '=' → logprob: -9.098649024963379
    4. ' =' → logprob: -10.473649024963379
    5. ' ^=' → logprob: -10.723649024963379
    6. '+' → logprob: -11.098649024963379
    7. '   ' → logprob: -11.473649024963379
    8. ']+=' → logprob: -11.598649024963379
    9. ' |=' → logprob: -13.348649024963379
    10. '```' → logprob: -14.223649024963379

Token 357: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2666422128677368
    2. 'max' → logprob: -1.5166422128677368
    3. ' func' → logprob: -4.641642093658447
    4. 'func' → logprob: -5.391642093658447
    5. ' ret' → logprob: -8.266642570495605
    6. 'ret' → logprob: -9.266642570495605
    7. ' ans' → logprob: -10.266642570495605
    8. 'ans' → logprob: -11.266642570495605
    9. ' ' → logprob: -13.391642570495605
    10. '+' → logprob: -13.516642570495605

Token 358: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9862216504407115e-05
    2. 'ans' → logprob: -11.000020027160645
    3. '(' → logprob: -12.875020027160645
    4. '(ret' → logprob: -14.625020027160645
    5. ' ans' → logprob: -17.125019073486328
    6. '	ans' → logprob: -17.750019073486328
    7. '(answer' → logprob: -18.125019073486328
    8. ' (' → logprob: -18.875019073486328
    9. '(
' → logprob: -19.125019073486328
    10. '(a' → logprob: -19.125019073486328

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018590014427900314
    2. '(ret' → logprob: -4.018589973449707
    3. ' ,' → logprob: -8.018589973449707
    4. ' ret' → logprob: -9.768589973449707
    5. 'ret' → logprob: -10.018589973449707
    6. '(' → logprob: -13.018589973449707
    7. ',
' → logprob: -13.018589973449707
    8. '(ans' → logprob: -13.268589973449707
    9. ',max' → logprob: -13.393589973449707
    10. '$ret' → logprob: -14.893589973449707

Token 360: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.026301691308617592
    2. ' ret' → logprob: -3.651301622390747
    3. 'abs' → logprob: -14.401301383972168
    4. ' ' → logprob: -15.401301383972168
    5. '	ret' → logprob: -15.526301383972168
    6. '   ' → logprob: -16.026302337646484
    7. '(ret' → logprob: -16.401302337646484
    8. ' abs' → logprob: -16.901302337646484
    9. '    ' → logprob: -17.151302337646484
    10. '$ret' → logprob: -17.526302337646484

Token 361: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017923936247825623
    2. ' -' → logprob: -7.8767924308776855
    3. '   ' → logprob: -7.8767924308776855
    4. '-' → logprob: -8.001791954040527
    5. '[' → logprob: -8.376791954040527
    6. '+' → logprob: -8.626791954040527
    7. ')
' → logprob: -8.876791954040527
    8. ' +' → logprob: -10.251791954040527
    9. ' )' → logprob: -10.626791954040527
    10. '-)' → logprob: -11.251791954040527

Token 362: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' ST' (ID: 6433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42646685242652893
    2. '\n' → logprob: -1.6764668226242065
    3. '<|end|>' → logprob: -2.051466941833496
    4. 'print' → logprob: -4.301466941833496
    5. '
' → logprob: -4.301466941833496
    6. '```' → logprob: -7.051466941833496
    7. 'newline' → logprob: -7.301466941833496
    8. ']' → logprob: -7.676466941833496
    9. ' ' → logprob: -8.051466941833496
    10. 'return' → logprob: -8.176466941833496

Token 364: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.007542142178863287
    2. '[' → logprob: -5.007542133331299
    3. 'idx' → logprob: -8.257542610168457
    4. '[i' → logprob: -8.882542610168457
    5. '[j' → logprob: -9.507542610168457
    6. '_idx' → logprob: -9.757542610168457
    7. '[index' → logprob: -10.132542610168457
    8. '[:]' → logprob: -10.507542610168457
    9. '	idx' → logprob: -10.632542610168457
    10. ' idx' → logprob: -10.757542610168457

Token 365: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11605449765920639
    2. ']' → logprob: -2.7410545349121094
    3. ' =' → logprob: -3.1160545349121094
    4. ']=' → logprob: -7.241054534912109
    5. ')' → logprob: -11.36605453491211
    6. '+=' → logprob: -12.74105453491211
    7. ']+=' → logprob: -13.24105453491211
    8. ' ]' → logprob: -13.86605453491211
    9. '=a' → logprob: -13.86605453491211
    10. ')=' → logprob: -13.99105453491211

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007101670489646494
    2. ' =' → logprob: -7.2507100105285645
    3. '+=' → logprob: -16.125709533691406
    4. '=a' → logprob: -17.875709533691406
    5. '0' → logprob: -18.500709533691406
    6. '=f' → logprob: -19.125709533691406
    7. '＝' → logprob: -19.375709533691406
    8. '=
' → logprob: -19.375709533691406
    9. '=

' → logprob: -19.375709533691406
    10. '.=' → logprob: -19.500709533691406

Token 367: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.259079363080673e-05
    2. '0' → logprob: -11.750012397766113
    3. ' a' → logprob: -12.375012397766113
    4. 'A' → logprob: -15.250012397766113
    5. '   ' → logprob: -15.625012397766113
    6. ' ' → logprob: -17.12501335144043
    7. '  ' → logprob: -17.62501335144043
    8. 'int' → logprob: -18.62501335144043
    9. '```' → logprob: -18.62501335144043
    10. '	a' → logprob: -18.75001335144043

Token 368: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' j' (ID: 441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11744561791419983
    2. '<|end|>' → logprob: -2.242445707321167
    3. '```' → logprob: -6.117445468902588
    4. ']' → logprob: -6.367445468902588
    5. '<|end|>' → logprob: -9.117445945739746
    6. '...' → logprob: -9.367445945739746
    7. ')]' → logprob: -9.492445945739746
    8. '}' → logprob: -9.492445945739746
    9. '#' → logprob: -9.617445945739746
    10. '[' → logprob: -9.867445945739746

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0399389266967773
    2. ' +=' → logprob: -1.4149389266967773
    3. '+=' → logprob: -1.4149389266967773
    4. ' =' → logprob: -2.0399389266967773
    5. '//=' → logprob: -4.164938926696777
    6. '    ' → logprob: -5.539938926696777
    7. '   ' → logprob: -5.664938926696777
    8. '<|end|>' → logprob: -5.914938926696777
    9. '*=' → logprob: -7.039938926696777
    10. ' *=' → logprob: -7.039938926696777

Token 372: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005944086704403162
    2. ' idx' → logprob: -5.13094425201416
    3. 'i' → logprob: -11.88094425201416
    4. '	idx' → logprob: -13.00594425201416
    5. '(idx' → logprob: -13.13094425201416
    6. '   ' → logprob: -13.13094425201416
    7. 'j' → logprob: -13.75594425201416
    8. 'index' → logprob: -15.38094425201416
    9. '[idx' → logprob: -15.50594425201416
    10. '  ' → logprob: -15.88094425201416

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29697924852371216
    2. '<|end|>' → logprob: -2.1719791889190674
    3. ' while' → logprob: -3.1719791889190674
    4. 'while' → logprob: -3.2969791889190674
    5. ' //' → logprob: -3.2969791889190674
    6. '<|end|>' → logprob: -4.9219794273376465
    7. '//=' → logprob: -5.1719794273376465
    8. '//' → logprob: -5.2969794273376465
    9. ' =' → logprob: -6.4219794273376465
    10. '=' → logprob: -6.6719794273376465

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015229643322527409
    2. '```' → logprob: -5.26522970199585
    3. ' while' → logprob: -5.39022970199585
    4. '       ' → logprob: -6.14022970199585
    5. '<|end|>' → logprob: -6.14022970199585
    6. 'while' → logprob: -7.26522970199585
    7. '<|end|>' → logprob: -8.640229225158691
    8. '	while' → logprob: -9.640229225158691
    9. 'While' → logprob: -10.515229225158691
    10. '    
' → logprob: -10.765229225158691

Token 375: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2749898433685303
    2. ' while' → logprob: -1.7749898433685303
    3. '   ' → logprob: -2.6499898433685303
    4. '```' → logprob: -9.14999008178711
    5. '	while' → logprob: -9.14999008178711
    6. '       ' → logprob: -9.77499008178711
    7. '``' → logprob: -11.64999008178711
    8. 'While' → logprob: -12.89999008178711
    9. '    ' → logprob: -14.52499008178711
    10. '>' → logprob: -14.89999008178711

Token 376: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.17974692583084106
    2. 'j' → logprob: -1.8047468662261963
    3. '   ' → logprob: -14.179746627807617
    4. '	j' → logprob: -14.929746627807617
    5. '>' → logprob: -15.179746627807617
    6. 'True' → logprob: -15.554746627807617
    7. '$j' → logprob: -15.804746627807617
    8. '```' → logprob: -15.929746627807617
    9. '1' → logprob: -16.054746627807617
    10. ' ' → logprob: -16.554746627807617

Token 377: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06701339036226273
    2. '//=' → logprob: -2.8170135021209717
    3. ' >' → logprob: -5.817013263702393
    4. '//' → logprob: -6.942013263702393
    5. ' //' → logprob: -7.692013263702393
    6. '!=' → logprob: -8.19201374053955
    7. '   ' → logprob: -8.81701374053955
    8. '>=' → logprob: -9.31701374053955
    9. '/=' → logprob: -9.94201374053955
    10. '=' → logprob: -10.06701374053955

Token 378: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015318859368562698
    2. ' ' → logprob: -4.265318870544434
    3. '0' → logprob: -6.765318870544434
    4. '=' → logprob: -13.890318870544434
    5. '   ' → logprob: -14.515318870544434
    6. '```' → logprob: -16.765317916870117
    7. '<|end|>' → logprob: -16.890317916870117
    8. '>' → logprob: -17.265317916870117
    9. 'j' → logprob: -17.640317916870117
    10. '[' → logprob: -17.765317916870117

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. '0' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.250020980834961
    4. '   ' → logprob: -19.12502098083496
    5. '  ' → logprob: -20.87502098083496
    6. '=' → logprob: -21.12502098083496
    7. '    ' → logprob: -22.31252098083496
    8. '```' → logprob: -22.68752098083496
    9. '１' → logprob: -22.81252098083496
    10. '>' → logprob: -22.81252098083496

Token 380: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7738969326019287
    2. ':' → logprob: -1.1488969326019287
    3. ':
' → logprob: -1.8988969326019287
    4. '   ' → logprob: -2.7738969326019287
    5. '):
' → logprob: -5.273897171020508
    6. '```' → logprob: -6.523897171020508
    7. '():
' → logprob: -7.523897171020508
    8. '<|end|>' → logprob: -7.773897171020508
    9. 'j' → logprob: -8.023897171020508
    10. '=' → logprob: -8.023897171020508

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.194110756041482e-05
    2. 'j' → logprob: -10.250061988830566
    3. '   ' → logprob: -11.500061988830566
    4. ' j' → logprob: -11.750061988830566
    5. '```' → logprob: -11.750061988830566
    6. '<|end|>' → logprob: -15.750061988830566
    7. '[j' → logprob: -15.875061988830566
    8. '[' → logprob: -16.25006103515625
    9. '1' → logprob: -16.50006103515625
    10. ',j' → logprob: -16.50006103515625

Token 382: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09623848646879196
    2. 'j' (adapté à ' j') → logprob: -2.596238374710083
    3. '   ' → logprob: -4.346238613128662
    4. ' j' → logprob: -5.471238613128662
    5. '```' → logprob: -10.846238136291504
    6. '	j' → logprob: -11.471238136291504
    7. ' ' → logprob: -12.721238136291504
    8. '[j' → logprob: -14.221238136291504
    9. '           ' → logprob: -14.346238136291504
    10. '``' → logprob: -14.971238136291504

Token 383: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.007443231996148825
    2. ' //' → logprob: -5.257443428039551
    3. '//' → logprob: -6.132443428039551
    4. '=' → logprob: -10.50744342803955
    5. '/=' → logprob: -11.75744342803955
    6. ' =' → logprob: -16.007442474365234
    7. '>>' → logprob: -16.007442474365234
    8. ' /=' → logprob: -16.132442474365234
    9. ' >>=' → logprob: -16.632442474365234
    10. '   ' → logprob: -16.757442474365234

Token 384: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.704273118884885e-07
    2. '/=' → logprob: -15.000000953674316
    3. '=
' → logprob: -15.625000953674316
    4. '=}' → logprob: -16.75
    5. '2' → logprob: -17.125
    6. '=

' → logprob: -17.875
    7. '=_' → logprob: -18.125
    8. '=/' → logprob: -18.5
    9. '==' → logprob: -18.75
    10. '_=' → logprob: -18.875

Token 385: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.875005722045898
    4. '```' → logprob: -18.3750057220459
    5. '       ' → logprob: -19.0000057220459
    6. '=' → logprob: -19.6250057220459
    7. '    ' → logprob: -20.3750057220459
    8. '<|end|>' → logprob: -20.7500057220459
    9. '>' → logprob: -21.2500057220459
    10. '  ' → logprob: -21.3750057220459

Token 386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -19.125
    4. '=' → logprob: -21.5
    5. '```' → logprob: -21.75
    6. '  ' → logprob: -23.125
    7. '       ' → logprob: -23.5
    8. '>' → logprob: -23.75
    9. '[' → logprob: -23.75
    10. '۲' → logprob: -24.0

Token 387: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.391617089509964
    2. '   ' → logprob: -1.1416170597076416
    3. 'ST' → logprob: -5.391617298126221
    4. '           ' → logprob: -9.641616821289062
    5. ' ST' → logprob: -10.016616821289062
    6. '	ST' → logprob: -10.141616821289062
    7. '  ' → logprob: -11.266616821289062
    8. '```' → logprob: -11.766616821289062
    9. '      ' → logprob: -12.766616821289062
    10. '    ' → logprob: -13.266616821289062

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4206598103046417
    2. '   ' → logprob: -1.1706597805023193
    3. 'ST' → logprob: -3.4206597805023193
    4. ' ST' → logprob: -7.920660018920898
    5. '	ST' → logprob: -9.170660018920898
    6. '           ' → logprob: -9.920660018920898
    7. '```' → logprob: -11.545660018920898
    8. '_ST' → logprob: -13.170660018920898
    9. '	   ' → logprob: -14.045660018920898
    10. '  ' → logprob: -14.670660018920898

Token 389: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' (adapté à ' ST') → logprob: -0.0004137496289331466
    2. '   ' → logprob: -7.87541389465332
    3. ' ST' → logprob: -11.00041389465332
    4. '       ' → logprob: -11.12541389465332
    5. '	ST' → logprob: -13.50041389465332
    6. '           ' → logprob: -15.25041389465332
    7. ' ' → logprob: -15.50041389465332
    8. '  ' → logprob: -15.75041389465332
    9. '```' → logprob: -17.25041389465332
    10. '_ST' → logprob: -17.62541389465332

Token 390: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014931005716789514
    2. '[' → logprob: -8.875149726867676
    3. 'j' → logprob: -12.250149726867676
    4. '[i' → logprob: -13.000149726867676
    5. '```' → logprob: -14.000149726867676
    6. '[js' → logprob: -15.000149726867676
    7. '[]' → logprob: -15.250149726867676
    8. '=' → logprob: -16.12514877319336
    9. '[...]' → logprob: -16.37514877319336
    10. '[
' → logprob: -16.37514877319336

Token 391: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006825604941695929
    2. '=' → logprob: -5.3818254470825195
    3. ' =' → logprob: -6.5068254470825195
    4. ']=' → logprob: -7.6318254470825195
    5. ' ]' → logprob: -8.63182544708252
    6. '   ' → logprob: -10.38182544708252
    7. ')' → logprob: -11.38182544708252
    8. '    ' → logprob: -13.75682544708252
    9. '```' → logprob: -14.88182544708252
    10. '[' → logprob: -15.00682544708252

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. ' ' → logprob: -18.061967849731445
    4. ')' → logprob: -18.436967849731445
    5. '   ' → logprob: -18.561967849731445
    6. '=
' → logprob: -18.686967849731445
    7. '=

' → logprob: -18.811967849731445
    8. '<|end|>' → logprob: -19.061967849731445
    9. '＝' → logprob: -19.311967849731445
    10. ']' → logprob: -19.686967849731445

Token 393: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.007611243985593319
    2. ' func' → logprob: -4.882611274719238
    3. '	func' → logprob: -13.132611274719238
    4. ' ' → logprob: -13.757611274719238
    5. 'fun' → logprob: -14.382611274719238
    6. '(func' → logprob: -14.632611274719238
    7. '   ' → logprob: -15.007611274719238
    8. '  ' → logprob: -15.007611274719238
    9. 'max' → logprob: -16.632610321044922
    10. '.func' → logprob: -16.882610321044922

Token 394: '(ST' (ID: 62064)
  Prédit: '(ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ST' → logprob: -0.00011355629976605996
    2. 'func' → logprob: -9.625113487243652
    3. '(func' → logprob: -10.125113487243652
    4. '(' → logprob: -12.750113487243652
    5. 'ST' → logprob: -12.875113487243652
    6. '(S' → logprob: -13.750113487243652
    7. '(St' → logprob: -15.375113487243652
    8. '(st' → logprob: -16.50011444091797
    9. '```' → logprob: -16.62511444091797
    10. '(
' → logprob: -16.87511444091797

Token 395: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004791704413946718
    2. '2' → logprob: -8.250478744506836
    3. '(' → logprob: -8.625478744506836
    4. 'ST' → logprob: -10.500478744506836
    5. '   ' → logprob: -13.000478744506836
    6. '(ST' → logprob: -13.000478744506836
    7. '       ' → logprob: -13.250478744506836
    8. ' ' → logprob: -13.625478744506836
    9. '[get' → logprob: -14.125478744506836
    10. ']' → logprob: -15.375478744506836

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. '[' → logprob: -11.625019073486328
    3. ' ' → logprob: -12.000019073486328
    4. '(' → logprob: -13.125019073486328
    5. '1' → logprob: -14.250019073486328
    6. 'j' → logprob: -14.625019073486328
    7. 'get' → logprob: -14.875019073486328
    8. '   ' → logprob: -15.250019073486328
    9. '  ' → logprob: -16.375019073486328
    10. '	' → logprob: -16.625019073486328

Token 397: '*j' (ID: 138193)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038044244050979614
    2. '*j' → logprob: -3.2880442142486572
    3. ' j' → logprob: -13.413043975830078
    4. '	j' → logprob: -13.663043975830078
    5. '$j' → logprob: -16.788043975830078
    6. '_j' → logprob: -17.163043975830078
    7. '[j' → logprob: -17.413043975830078
    8. '*' → logprob: -17.538043975830078
    9. '```' → logprob: -17.788043975830078
    10. '   ' → logprob: -18.163043975830078

Token 398: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00011844364780699834
    2. '],
' → logprob: -9.750118255615234
    3. ',' → logprob: -10.625118255615234
    4. ' ],' → logprob: -11.000118255615234
    5. ']' → logprob: -11.125118255615234
    6. '],[' → logprob: -13.250118255615234
    7. '],

' → logprob: -14.000118255615234
    8. '+' → logprob: -14.125118255615234
    9. ''],' → logprob: -15.250118255615234
    10. '],
' → logprob: -15.625118255615234

Token 399: ' ST' (ID: 6433)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -13.37500286102295
    3. ' ST' → logprob: -13.37500286102295
    4. '   ' → logprob: -18.000003814697266
    5. '	ST' → logprob: -18.625003814697266
    6. '       ' → logprob: -19.500003814697266
    7. 'SP' → logprob: -19.625003814697266
    8. 'STS' → logprob: -20.125003814697266
    9. '_ST' → logprob: -20.250003814697266
    10. '[' → logprob: -20.625003814697266

Token 400: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2813285291194916
    2. '[' → logprob: -1.406328558921814
    3. '[j' → logprob: -9.406328201293945
    4. ' ' → logprob: -10.156328201293945
    5. '+' → logprob: -11.031328201293945
    6. '*' → logprob: -11.156328201293945
    7. 'ST' → logprob: -11.656328201293945
    8. '.' → logprob: -12.281328201293945
    9. '```' → logprob: -12.781328201293945
    10. '   ' → logprob: -13.031328201293945

Token 401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.500001907348633
    4. '(' → logprob: -16.625001907348633
    5. '  ' → logprob: -18.875001907348633
    6. '+' → logprob: -19.000001907348633
    7. 'j' → logprob: -19.375001907348633
    8. '       ' → logprob: -20.375001907348633
    9. '	' → logprob: -20.625001907348633
    10. '```' → logprob: -20.750001907348633

Token 402: '*j' (ID: 138193)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28622111678123474
    2. 'j' → logprob: -1.7862211465835571
    3. '1' → logprob: -2.6612210273742676
    4. '+j' → logprob: -5.036221027374268
    5. '+' → logprob: -5.411221027374268
    6. ' ' → logprob: -8.661221504211426
    7. '*j' → logprob: -8.911221504211426
    8. ' j' → logprob: -10.161221504211426
    9. '   ' → logprob: -10.161221504211426
    10. '(j' → logprob: -10.411221504211426

Token 403: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023607931507285684
    2. '1' → logprob: -8.375236511230469
    3. ' +' → logprob: -12.250236511230469
    4. '])' → logprob: -15.625236511230469
    5. '[' → logprob: -16.25023651123047
    6. '   ' → logprob: -16.37523651123047
    7. '```' → logprob: -16.62523651123047
    8. ']+' → logprob: -16.75023651123047
    9. '9' → logprob: -17.50023651123047
    10. ']' → logprob: -17.50023651123047

Token 404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.872261317563243e-05
    2. 'ST' → logprob: -10.250059127807617
    3. '+' → logprob: -11.125059127807617
    4. '2' → logprob: -12.625059127807617
    5. ' ' → logprob: -12.750059127807617
    6. ' ST' → logprob: -14.000059127807617
    7. '   ' → logprob: -14.750059127807617
    8. '3' → logprob: -15.875059127807617
    9. '```' → logprob: -15.875059127807617
    10. '
' → logprob: -16.062559127807617

Token 405: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004202463198453188
    2. ')' → logprob: -5.504202365875244
    3. ')])' → logprob: -9.754202842712402
    4. ']' → logprob: -10.629202842712402
    5. ')]' → logprob: -10.629202842712402
    6. '])
' → logprob: -11.504202842712402
    7. '))' → logprob: -12.629202842712402
    8. ']))' → logprob: -14.129202842712402
    9. ' ])' → logprob: -14.254202842712402
    10. '])]' → logprob: -14.379202842712402

Token 406: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.31435301899909973
    2. '(' → logprob: -1.3143529891967773
    3. '(max' → logprob: -7.064352989196777
    4. '("("' → logprob: -9.564352989196777
    5. '('' → logprob: -10.064352989196777
    6. '(len' → logprob: -10.564352989196777
    7. '()' → logprob: -10.939352989196777
    8. ' (' → logprob: -11.189352989196777
    9. '(answer' → logprob: -11.439352989196777
    10. '((' → logprob: -11.439352989196777

Token 408: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.537180211627856e-05
    2. ')
' → logprob: -10.125045776367188
    3. '))' → logprob: -13.375045776367188
    4. ')`' → logprob: -13.875045776367188
    5. '[' → logprob: -14.000045776367188
    6. '+' → logprob: -14.625045776367188
    7. ' )' → logprob: -14.750045776367188
    8. '`)' → logprob: -16.000045776367188
    9. ']' → logprob: -16.250045776367188
    10. '()' → logprob: -16.250045776367188


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 406
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 346
Précision stricte (1ère position): 34.73%
Précision adaptée (1ère position): 37.68%
Précision (top 10): 85.22%
================================================================================
