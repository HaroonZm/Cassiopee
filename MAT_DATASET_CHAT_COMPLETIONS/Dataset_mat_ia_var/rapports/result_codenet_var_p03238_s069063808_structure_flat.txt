================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x = int(input())
if x == 1:
    print("Hello World")
else:
    y = int(input())
    z = int(input())
    print(y + z)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019376569252926856
    2. '(x' → logprob: -8.87519359588623
    3. ''' → logprob: -10.87519359588623
    4. '```' → logprob: -11.75019359588623
    5. 'x' → logprob: -12.37519359588623
    6. '`' → logprob: -12.50019359588623
    7. ' (' → logprob: -12.62519359588623
    8. '("("' → logprob: -12.75019359588623
    9. '\(' → logprob: -13.00019359588623
    10. '(
' → logprob: -13.00019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06821667402982712
    2. ')' → logprob: -2.818216562271118
    3. '()' → logprob: -5.568216800689697
    4. '())' → logprob: -6.443216800689697
    5. '(x' → logprob: -8.693216323852539
    6. '```' → logprob: -9.193216323852539
    7. '(()' → logprob: -9.818216323852539
    8. '(
' → logprob: -9.818216323852539
    9. '))' → logprob: -10.068216323852539
    10. '('' → logprob: -10.193216323852539

Token 5: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0718134343624115
    2. '*' → logprob: -3.1968133449554443
    3. '%' → logprob: -4.196813583374023
    4. 'if' → logprob: -5.321813583374023
    5. '#' → logprob: -6.446813583374023
    6. 'x' → logprob: -6.696813583374023
    7. ')' → logprob: -7.071813583374023
    8. ' ' → logprob: -7.446813583374023
    9. '**' → logprob: -7.446813583374023
    10. '+
' → logprob: -7.446813583374023

Token 6: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08903489261865616
    2. ' x' → logprob: -2.4640347957611084
    3. 'x' → logprob: -9.339035034179688
    4. '  ' → logprob: -11.964035034179688
    5. ' (' → logprob: -14.839035034179688
    6. ' ' → logprob: -14.964035034179688
    7. ' )' → logprob: -16.714035034179688
    8. ' not' → logprob: -16.714035034179688
    9. '(x' → logprob: -16.839035034179688
    10. '   ' → logprob: -16.839035034179688

Token 7: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08525366336107254
    2. ' ' → logprob: -3.2102537155151367
    3. ' <' → logprob: -4.085253715515137
    4. ' >=' → logprob: -4.710253715515137
    5. '>' → logprob: -4.835253715515137
    6. ' ==' → logprob: -5.460253715515137
    7. '  ' → logprob: -6.835253715515137
    8. ' %' → logprob: -7.210253715515137
    9. ')' → logprob: -8.085253715515137
    10. ' <=' → logprob: -8.210253715515137

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15714174509048462
    2. '0' → logprob: -2.40714168548584
    3. '1' → logprob: -2.90714168548584
    4. '2' → logprob: -8.53214168548584
    5. '10' → logprob: -8.65714168548584
    6. '4' → logprob: -9.40714168548584
    7. '32' → logprob: -9.65714168548584
    8. ''' → logprob: -10.53214168548584
    9. '3' → logprob: -10.65714168548584
    10. '5' → logprob: -10.90714168548584

Token 9: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24257773160934448
    2. '1' → logprob: -1.6175777912139893
    3. ' ' → logprob: -4.11757755279541
    4. '5' → logprob: -8.24257755279541
    5. '2' → logprob: -8.74257755279541
    6. '10' → logprob: -8.74257755279541
    7. '4' → logprob: -10.11757755279541
    8. '3' → logprob: -10.24257755279541
    9. ''' → logprob: -10.49257755279541
    10. '42' → logprob: -10.86757755279541

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.511406809295295e-06
    2. ':
' → logprob: -12.750006675720215
    3. ':**' → logprob: -13.500006675720215
    4. '':'' → logprob: -14.250006675720215
    5. ' :' → logprob: -14.500006675720215
    6. '':' → logprob: -15.125006675720215
    7. ':return' → logprob: -15.625006675720215
    8. '):' → logprob: -15.875006675720215
    9. '>:' → logprob: -16.3750057220459
    10. '":"' → logprob: -16.3750057220459

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5216493010520935
    2. ' print' → logprob: -1.3966493606567383
    3. '\n' → logprob: -2.3966493606567383
    4. '    ' → logprob: -3.3966493606567383
    5. '\' → logprob: -4.271649360656738
    6. 'print' → logprob: -4.521649360656738
    7. ' ' → logprob: -5.146649360656738
    8. '    
' → logprob: -6.271649360656738
    9. ' 
' → logprob: -7.396649360656738
    10. ' \' → logprob: -8.396649360656738

Token 12: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09396498650312424
    2. 'print' (adapté à ' print') → logprob: -2.4689650535583496
    3. '    ' → logprob: -5.96896505355835
    4. '   ' → logprob: -6.46896505355835
    5. ' ' → logprob: -7.46896505355835
    6. ' pass' → logprob: -8.843964576721191
    7. ' \' → logprob: -10.093964576721191
    8. '\' → logprob: -10.593964576721191
    9. ' 
' → logprob: -10.593964576721191
    10. '    
' → logprob: -11.343964576721191

Token 13: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002805110299959779
    2. '('' → logprob: -6.127805233001709
    3. '("("' → logprob: -7.627805233001709
    4. '("' → logprob: -9.12780475616455
    5. '()' → logprob: -11.62780475616455
    6. '(x' → logprob: -11.87780475616455
    7. '("")' → logprob: -13.12780475616455
    8. '("""' → logprob: -13.25280475616455
    9. '(
' → logprob: -13.87780475616455
    10. '(True' → logprob: -14.00280475616455

Token 14: 'Hello' (ID: 13225)
  Prédit: 'Hello'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hello' → logprob: -0.10618794709444046
    2. 'Yes' → logprob: -2.9811880588531494
    3. '1' → logprob: -4.10618782043457
    4. 'One' → logprob: -4.35618782043457
    5. 'hello' → logprob: -4.48118782043457
    6. 'one' → logprob: -5.48118782043457
    7. 'True' → logprob: -6.60618782043457
    8. '0' → logprob: -7.23118782043457
    9. 'YES' → logprob: -7.35618782043457
    10. 'Done' → logprob: -7.60618782043457

Token 15: ' World' (ID: 5922)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0029912516474723816
    2. ')' → logprob: -6.502991199493408
    3. ')")' → logprob: -6.877991199493408
    4. '!")' → logprob: -7.752991199493408
    5. ' ")' → logprob: -11.877991676330566
    6. '\")' → logprob: -12.002991676330566
    7. '")
' → logprob: -12.002991676330566
    8. ' World' → logprob: -13.252991676330566
    9. '"' → logprob: -13.502991676330566
    10. '}")' → logprob: -13.627991676330566

Token 16: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -7.433829159708694e-05
    2. '!")' → logprob: -10.25007438659668
    3. ')' → logprob: -10.50007438659668
    4. ')")' → logprob: -11.75007438659668
    5. '")
' → logprob: -13.50007438659668
    6. '\")' → logprob: -14.00007438659668
    7. '"' → logprob: -14.75007438659668
    8. '```' → logprob: -15.25007438659668
    9. '}")' → logprob: -15.75007438659668
    10. '”)' → logprob: -16.12507438659668

Token 17: 'else' (ID: 2807)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.310152292251587
    2. '
' → logprob: -1.560152292251587
    3. '```' → logprob: -1.810152292251587
    4. '<|end|>' → logprob: -1.810152292251587
    5. 'else' → logprob: -2.435152292251587
    6. ':' → logprob: -3.685152292251587
    7. 'newline' → logprob: -4.185152053833008
    8. ' else' → logprob: -4.310152053833008
    9. 'elif' → logprob: -4.560152053833008
    10. '\' → logprob: -4.935152053833008

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5213274309644476e-05
    2. ' :' → logprob: -11.250015258789062
    3. ':**' → logprob: -13.750015258789062
    4. ':
' → logprob: -14.875015258789062
    5. '():' → logprob: -15.500015258789062
    6. '):' → logprob: -15.500015258789062
    7. '':' → logprob: -16.125015258789062
    8. '>:' → logprob: -16.375015258789062
    9. '   ' → logprob: -17.000015258789062
    10. '':'' → logprob: -17.375015258789062

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10513470321893692
    2. '    ' → logprob: -2.4801347255706787
    3. '    
' → logprob: -5.1051344871521
    4. '\n' → logprob: -5.6051344871521
    5. '     
' → logprob: -6.4801344871521
    6. '\' → logprob: -6.7301344871521
    7. ' print' → logprob: -7.1051344871521
    8. ' 
' → logprob: -7.3551344871521
    9. '"' → logprob: -7.4801344871521
    10. 'print' → logprob: -7.6051344871521

Token 20: ' y' (ID: 342)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7347699403762817
    2. 'print' → logprob: -0.8597699403762817
    3. '   ' → logprob: -2.359769821166992
    4. '    ' → logprob: -5.984769821166992
    5. ' ' → logprob: -10.109769821166992
    6. '\n' → logprob: -10.359769821166992
    7. '```' → logprob: -10.609769821166992
    8. ' pass' → logprob: -10.859769821166992
    9. '\' → logprob: -11.609769821166992
    10. '       ' → logprob: -12.109769821166992

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.761884331703186
    2. '=' → logprob: -1.011884331703186
    3. ' ==' → logprob: -2.0118842124938965
    4. ' ' → logprob: -3.7618842124938965
    5. '==' → logprob: -4.6368842124938965
    6. '+' → logprob: -6.8868842124938965
    7. '   ' → logprob: -7.3868842124938965
    8. ' +=' → logprob: -8.011884689331055
    9. ')' → logprob: -8.386884689331055
    10. ' +' → logprob: -8.511884689331055

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5433425307273865
    2. 'int' → logprob: -1.6683425903320312
    3. ' x' → logprob: -1.7933425903320312
    4. 'x' → logprob: -2.9183425903320312
    5. ' ' → logprob: -5.168342590332031
    6. '0' → logprob: -6.168342590332031
    7. ' input' → logprob: -7.043342590332031
    8. '2' → logprob: -7.543342590332031
    9. 'input' → logprob: -8.043342590332031
    10. '5' → logprob: -8.543342590332031

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4741939604282379
    2. '(' → logprob: -0.9741939306259155
    3. ' (' → logprob: -9.599193572998047
    4. 'input' → logprob: -11.099193572998047
    5. '(user' → logprob: -11.224193572998047
    6. '()' → logprob: -11.724193572998047
    7. '(x' → logprob: -12.849193572998047
    8. '(
' → logprob: -13.224193572998047
    9. ' ' → logprob: -13.599193572998047
    10. ' input' → logprob: -13.724193572998047

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07937198132276535
    2. '()' → logprob: -2.579371929168701
    3. ')' → logprob: -7.829371929168701
    4. ' ())' → logprob: -10.45437240600586
    5. '()))' → logprob: -11.07937240600586
    6. '(' → logprob: -11.20437240600586
    7. '())
' → logprob: -11.82937240600586
    8. '()
' → logprob: -12.07937240600586
    9. '();)' → logprob: -12.07937240600586
    10. '()>' → logprob: -13.82937240600586

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6444640159606934
    2. '\n' → logprob: -1.3944640159606934
    3. ' ' → logprob: -3.0194640159606934
    4. '
' → logprob: -3.3944640159606934
    5. ')' → logprob: -3.7694640159606934
    6. '    
' → logprob: -3.8944640159606934
    7. '    ' → logprob: -3.8944640159606934
    8. '\' → logprob: -3.8944640159606934
    9. ' 
' → logprob: -4.269464015960693
    10. '#' → logprob: -5.269464015960693

Token 26: ' z' (ID: 579)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05278502404689789
    2. ' if' → logprob: -3.5527849197387695
    3. ' ' → logprob: -4.6777849197387695
    4. 'i' → logprob: -4.8027849197387695
    5. 'print' → logprob: -6.4277849197387695
    6. ' 
' → logprob: -6.9277849197387695
    7. '   ' → logprob: -7.5527849197387695
    8. '\n' → logprob: -7.5527849197387695
    9. '    
' → logprob: -8.30278491973877
    10. 'n' → logprob: -8.30278491973877

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21570882201194763
    2. ' +=' → logprob: -2.5907087326049805
    3. ' ==' → logprob: -3.3407087326049805
    4. '=' → logprob: -3.4657087326049805
    5. '+' → logprob: -3.7157087326049805
    6. ' +' → logprob: -3.8407087326049805
    7. ' ' → logprob: -5.3407087326049805
    8. ')' → logprob: -7.8407087326049805
    9. ' *' → logprob: -7.9657087326049805
    10. '+=' → logprob: -7.9657087326049805

Token 28: ' int' (ID: 677)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.6665557622909546
    2. ' x' → logprob: -0.7915557622909546
    3. 'x' → logprob: -3.791555881500244
    4. 'y' → logprob: -4.541555881500244
    5. ' ' → logprob: -9.291555404663086
    6. ' int' → logprob: -10.791555404663086
    7. '   ' → logprob: -11.041555404663086
    8. '0' → logprob: -11.791555404663086
    9. 'int' → logprob: -11.916555404663086
    10. '    ' → logprob: -12.416555404663086

Token 29: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13350817561149597
    2. '(input' → logprob: -2.3835082054138184
    3. '()' → logprob: -3.5085082054138184
    4. '(x' → logprob: -7.258508205413818
    5. ' (' → logprob: -7.508508205413818
    6. '(y' → logprob: -7.508508205413818
    7. '('' → logprob: -7.633508205413818
    8. ')' → logprob: -9.00850772857666
    9. '(user' → logprob: -9.38350772857666
    10. ' ()' → logprob: -10.25850772857666

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2096010148525238
    2. '()' → logprob: -1.7096010446548462
    3. ')' → logprob: -4.834600925445557
    4. '())
' → logprob: -9.209601402282715
    5. '()
' → logprob: -9.834601402282715
    6. ' ())' → logprob: -10.709601402282715
    7. '(' → logprob: -11.209601402282715
    8. '();)' → logprob: -13.209601402282715
    9. '())

' → logprob: -13.459601402282715
    10. '`)' → logprob: -13.459601402282715

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019426073879003525
    2. '\n' → logprob: -5.269425868988037
    3. '
' → logprob: -5.644425868988037
    4. '    
' → logprob: -5.769425868988037
    5. '    ' → logprob: -6.144425868988037
    6. '<|end|>' → logprob: -6.144425868988037
    7. '\' → logprob: -7.019425868988037
    8. ' ' → logprob: -7.144425868988037
    9. '```' → logprob: -8.394426345825195
    10. 'if' → logprob: -8.644426345825195

Token 32: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19314272701740265
    2. ' if' → logprob: -2.0681426525115967
    3. ' ' → logprob: -4.193142890930176
    4. 'i' → logprob: -4.193142890930176
    5. '   ' → logprob: -4.818142890930176
    6. ' 
' → logprob: -5.818142890930176
    7. '    
' → logprob: -6.193142890930176
    8. '\n' → logprob: -6.818142890930176
    9. '  
' → logprob: -6.818142890930176
    10. '
' → logprob: -7.818142890930176

Token 33: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02515345811843872
    2. '(y' → logprob: -3.900153398513794
    3. '(z' → logprob: -6.150153636932373
    4. '(x' → logprob: -7.275153636932373
    5. '(max' → logprob: -7.275153636932373
    6. '('' → logprob: -7.775153636932373
    7. '((' → logprob: -8.275153160095215
    8. '("' → logprob: -8.650153160095215
    9. '(sum' → logprob: -8.900153160095215
    10. '("("' → logprob: -10.400153160095215

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3137398660182953
    2. ' +' → logprob: -1.3137398958206177
    3. ')' → logprob: -7.938739776611328
    4. '*' → logprob: -9.563739776611328
    5. '+y' → logprob: -10.813739776611328
    6. ' *' → logprob: -11.438739776611328
    7. '+)' → logprob: -11.688739776611328
    8. ',' → logprob: -12.813739776611328
    9. '-' → logprob: -13.313739776611328
    10. '>' → logprob: -13.438739776611328

Token 35: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.08897087723016739
    2. 'z' → logprob: -2.463970899581909
    3. ' x' → logprob: -11.713971138000488
    4. ' ' → logprob: -11.838971138000488
    5. '    ' → logprob: -11.963971138000488
    6. ')' → logprob: -12.838971138000488
    7. '	z' → logprob: -12.838971138000488
    8. 'x' → logprob: -12.963971138000488
    9. '   ' → logprob: -14.713971138000488
    10. ' ' → logprob: -15.088971138000488

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. '))' → logprob: -13.87500286102295
    3. '')' → logprob: -14.00000286102295
    4. '`)' → logprob: -15.00000286102295
    5. ' )' → logprob: -15.25000286102295
    6. '")' → logprob: -16.375001907348633
    7. ')`' → logprob: -17.250001907348633
    8. ')
' → logprob: -18.000001907348633
    9. ')))' → logprob: -18.125001907348633
    10. ')")' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 38.24%
Précision adaptée (1ère position): 38.24%
Précision (top 10): 85.29%
================================================================================
