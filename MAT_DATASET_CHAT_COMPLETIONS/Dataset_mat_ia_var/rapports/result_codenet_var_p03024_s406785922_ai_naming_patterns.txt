================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input = input()
count_o = user_input.count('o')
max_length = 15
required_count = 8
possible_count = count_o + max_length - len(user_input)
result = 'YES' if possible_count >= required_count else 'NO'
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.40100085735321045
    2. ' "' → logprob: -1.9010008573532104
    3. 'input' → logprob: -2.6510009765625
    4. ' ' → logprob: -3.4010009765625
    5. ' input' → logprob: -3.4010009765625
    6. ''' → logprob: -3.6510009765625
    7. '""' → logprob: -5.2760009765625
    8. ' '' → logprob: -5.4010009765625
    9. ' ""' → logprob: -5.4010009765625
    10. ' ''' → logprob: -6.4010009765625

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004840453155338764
    2. ''' → logprob: -6.12984037399292
    3. '('' → logprob: -6.25484037399292
    4. '"' → logprob: -8.379840850830078
    5. '`' → logprob: -9.129840850830078
    6. '```' → logprob: -9.254840850830078
    7. '("("' → logprob: -9.254840850830078
    8. '(
' → logprob: -9.629840850830078
    9. '()' → logprob: -9.879840850830078
    10. '[' → logprob: -11.129840850830078

Token 5: 'count' (ID: 5420)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10711371898651123
    2. '.strip' → logprob: -3.357113838195801
    3. '_' → logprob: -3.857113838195801
    4. '=' → logprob: -3.982113838195801
    5. '+' → logprob: -4.357113838195801
    6. '\n' → logprob: -6.357113838195801
    7. '.lower' → logprob: -6.357113838195801
    8. '```' → logprob: -6.357113838195801
    9. '#' → logprob: -6.607113838195801
    10. ''' → logprob: -6.732113838195801

Token 6: '_o' (ID: 28960)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.581358015537262
    2. '(' → logprob: -0.831358015537262
    3. '=' → logprob: -5.706357955932617
    4. ')' → logprob: -7.456357955932617
    5. '.' → logprob: -7.956357955932617
    6. '_space' → logprob: -8.206357955932617
    7. '[' → logprob: -8.456357955932617
    8. 's' → logprob: -8.456357955932617
    9. 'space' → logprob: -9.456357955932617
    10. ' =' → logprob: -9.831357955932617

Token 7: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4711638391017914
    2. '=' → logprob: -1.2211638689041138
    3. 'c' → logprob: -3.221163749694824
    4. 'ut' → logprob: -4.471163749694824
    5. 's' → logprob: -4.846163749694824
    6. ' =' → logprob: -4.971163749694824
    7. 'f' → logprob: -5.846163749694824
    8. 't' → logprob: -6.096163749694824
    9. 'cc' → logprob: -6.471163749694824
    10. '_' → logprob: -6.721163749694824

Token 8: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.5282326936721802
    2. 'user' → logprob: -1.4032326936721802
    3. ' ' → logprob: -2.1532325744628906
    4. '0' → logprob: -3.0282325744628906
    5. ' ' → logprob: -11.52823257446289
    6. ''user' → logprob: -12.15323257446289
    7. '"user' → logprob: -12.40323257446289
    8. '	user' → logprob: -12.77823257446289
    9. '(user' → logprob: -12.90323257446289
    10. '1' → logprob: -13.15323257446289

Token 9: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.02739235758781433
    2. '_' → logprob: -3.6523923873901367
    3. '_output' → logprob: -8.152392387390137
    4. 's' → logprob: -8.902392387390137
    5. '._' → logprob: -9.027392387390137
    6. '_count' → logprob: -9.902392387390137
    7. '_put' → logprob: -9.902392387390137
    8. '_user' → logprob: -10.027392387390137
    9. 'put' → logprob: -10.152392387390137
    10. '_p' → logprob: -10.277392387390137

Token 10: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06286028772592545
    2. '.count' → logprob: -2.8128602504730225
    3. '.lower' → logprob: -7.312860488891602
    4. '.replace' → logprob: -9.437860488891602
    5. '.startswith' → logprob: -10.812860488891602
    6. '.
' → logprob: -10.812860488891602
    7. '.get' → logprob: -11.062860488891602
    8. ' .' → logprob: -11.187860488891602
    9. '.split' → logprob: -12.062860488891602
    10. '.Count' → logprob: -12.062860488891602

Token 11: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11573176831007004
    2. '(' → logprob: -2.240731716156006
    3. '("("' → logprob: -5.990731716156006
    4. ''' → logprob: -8.115732192993164
    5. '(o' → logprob: -10.740732192993164
    6. '`' → logprob: -10.865732192993164
    7. '```' → logprob: -11.240732192993164
    8. '("' → logprob: -11.865732192993164
    9. '(`' → logprob: -12.240732192993164
    10. ''s' → logprob: -12.240732192993164

Token 12: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0005060884868726134
    2. ''o' → logprob: -7.6255059242248535
    3. '_o' → logprob: -12.125506401062012
    4. ' o' → logprob: -12.875506401062012
    5. '')' → logprob: -13.375506401062012
    6. '('' → logprob: -13.625506401062012
    7. '(o' → logprob: -13.625506401062012
    8. ')' → logprob: -13.750506401062012
    9. '0' → logprob: -13.750506401062012
    10. 'о' → logprob: -13.875506401062012

Token 13: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.1602558046579361
    2. ')' → logprob: -1.910255789756775
    3. ''' → logprob: -11.160255432128906
    4. 'o' → logprob: -11.410255432128906
    5. '")' → logprob: -12.785255432128906
    6. ''o' → logprob: -13.285255432128906
    7. '`)' → logprob: -14.035255432128906
    8. '')
' → logprob: -14.785255432128906
    9. '('' → logprob: -15.910255432128906
    10. ' ')' → logprob: -16.160255432128906

Token 14: 'max' (ID: 3228)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13425225019454956
    2. 'print' → logprob: -2.5092523097991943
    3. ' if' → logprob: -4.259252071380615
    4. '+' → logprob: -4.384252071380615
    5. ')' → logprob: -4.509252071380615
    6. 'i' → logprob: -6.009252071380615
    7. '*' → logprob: -7.009252071380615
    8. '#' → logprob: -7.634252071380615
    9. '```' → logprob: -7.759252071380615
    10. 'p' → logprob: -8.009252548217773

Token 15: '_length' (ID: 11514)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8528092503547668
    2. '_' → logprob: -0.9778092503547668
    3. '_r' → logprob: -2.727809190750122
    4. '_count' → logprob: -2.727809190750122
    5. '(' → logprob: -2.977809190750122
    6. '_o' → logprob: -5.602809429168701
    7. 'ut' → logprob: -6.227809429168701
    8. '(_)' → logprob: -6.352809429168701
    9. 'u' → logprob: -6.852809429168701
    10. '_u' → logprob: -7.102809429168701

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02153840661048889
    2. ' =' → logprob: -4.271538257598877
    3. '=' → logprob: -5.271538257598877
    4. ' ' → logprob: -6.896538257598877
    5. ' _' → logprob: -7.896538257598877
    6. ')' → logprob: -8.396538734436035
    7. '_space' → logprob: -8.646538734436035
    8. '_=' → logprob: -8.771538734436035
    9. '(' → logprob: -10.271538734436035
    10. '.' → logprob: -10.396538734436035

Token 17: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2972560524940491
    2. ' count' → logprob: -2.5472559928894043
    3. 'len' → logprob: -2.6722559928894043
    4. ' ' → logprob: -2.7972559928894043
    5. 'count' → logprob: -3.5472559928894043
    6. ' user' → logprob: -4.547255992889404
    7. ' max' → logprob: -5.547255992889404
    8. '0' → logprob: -5.922255992889404
    9. '100' → logprob: -7.297255992889404
    10. 'max' → logprob: -7.297255992889404

Token 18: '15' (ID: 1055)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22187648713588715
    2. 'len' → logprob: -1.8468765020370483
    3. 'user' → logprob: -3.596876382827759
    4. '100' → logprob: -5.596876621246338
    5. '1' → logprob: -5.721876621246338
    6. '0' → logprob: -5.846876621246338
    7. 'max' → logprob: -6.346876621246338
    8. ' len' → logprob: -7.596876621246338
    9. ' count' → logprob: -8.34687614440918
    10. '10' → logprob: -8.34687614440918

Token 19: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07690153270959854
    2. ' if' → logprob: -3.451901435852051
    3. 'i' → logprob: -3.576901435852051
    4. ')' → logprob: -6.076901435852051
    5. '```' → logprob: -6.326901435852051
    6. '_' → logprob: -6.451901435852051
    7. ' ' → logprob: -6.951901435852051
    8. 'print' → logprob: -7.076901435852051
    9. '\n' → logprob: -7.201901435852051
    10. ',' → logprob: -7.201901435852051

Token 20: 'required' (ID: 12919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1261754035949707
    2. '
' → logprob: -2.5011754035949707
    3. 'i' → logprob: -4.126175403594971
    4. 'print' → logprob: -5.251175403594971
    5. ' if' → logprob: -5.626175403594971
    6. ' 
' → logprob: -5.751175403594971
    7. 'newline' → logprob: -6.626175403594971
    8. 'result' → logprob: -6.751175403594971
    9. '```' → logprob: -7.001175403594971
    10. '\n' → logprob: -7.001175403594971

Token 21: '_count' (ID: 7536)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.46608805656433105
    2. '_' → logprob: -1.091088056564331
    3. '_o' → logprob: -3.966088056564331
    4. '_count' → logprob: -4.84108829498291
    5. '_len' → logprob: -5.59108829498291
    6. '_space' → logprob: -5.84108829498291
    7. '_output' → logprob: -7.46608829498291
    8. ' =' → logprob: -7.59108829498291
    9. ' _' → logprob: -8.21608829498291
    10. '_l' → logprob: -8.84108829498291

Token 22: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43569380044937134
    2. '_o' → logprob: -1.0606937408447266
    3. ' =' → logprob: -5.560693740844727
    4. '=' → logprob: -6.185693740844727
    5. '_=' → logprob: -7.060693740844727
    6. '_of' → logprob: -9.435693740844727
    7. '_a' → logprob: -10.685693740844727
    8. '_e' → logprob: -11.185693740844727
    9. 's' → logprob: -11.310693740844727
    10. ' _' → logprob: -11.810693740844727

Token 23: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7062271237373352
    2. ' ' → logprob: -1.0812270641326904
    3. '5' → logprob: -2.8312270641326904
    4. 'count' → logprob: -3.2062270641326904
    5. ' count' → logprob: -3.9562270641326904
    6. ' max' → logprob: -4.0812273025512695
    7. '2' → logprob: -4.7062273025512695
    8. 'max' → logprob: -4.9562273025512695
    9. '4' → logprob: -5.2062273025512695
    10. '7' → logprob: -5.4562273025512695

Token 24: '8' (ID: 23)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4106999635696411
    2. '5' → logprob: -1.5356999635696411
    3. '10' → logprob: -3.2856998443603516
    4. '7' → logprob: -3.6606998443603516
    5. '8' → logprob: -3.9106998443603516
    6. '4' → logprob: -4.660699844360352
    7. '6' → logprob: -5.035699844360352
    8. 'count' → logprob: -5.285699844360352
    9. 'max' → logprob: -5.285699844360352
    10. '1' → logprob: -5.535699844360352

Token 25: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2452307790517807
    2. ' if' → logprob: -2.2452306747436523
    3. '
' → logprob: -2.9952306747436523
    4. 'i' → logprob: -3.4952306747436523
    5. '\n' → logprob: -4.745230674743652
    6. ' ' → logprob: -5.245230674743652
    7. '\' → logprob: -5.620230674743652
    8. ':' → logprob: -5.745230674743652
    9. ' 
' → logprob: -5.870230674743652
    10. ',' → logprob: -6.620230674743652

Token 26: 'possible' (ID: 50714)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6807923316955566
    2. 'if' → logprob: -0.8057923316955566
    3. ' if' → logprob: -3.8057923316955566
    4. 'i' → logprob: -4.555792331695557
    5. '<|end|>' → logprob: -5.555792331695557
    6. '\n' → logprob: -6.055792331695557
    7. ':' → logprob: -6.555792331695557
    8. ' 
' → logprob: -6.805792331695557
    9. '\' → logprob: -6.805792331695557
    10. '```' → logprob: -6.805792331695557

Token 27: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0867060124874115
    2. ' =' → logprob: -3.2117059230804443
    3. '_length' → logprob: -3.7117059230804443
    4. '_count' → logprob: -5.461706161499023
    5. '_len' → logprob: -5.586706161499023
    6. '_chars' → logprob: -5.836706161499023
    7. '=' → logprob: -5.961706161499023
    8. '_to' → logprob: -6.836706161499023
    9. '_lengths' → logprob: -6.961706161499023
    10. '_counts' → logprob: -8.336706161499023

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01690009981393814
    2. '=' → logprob: -4.266900062561035
    3. 's' → logprob: -6.141900062561035
    4. '_' → logprob: -7.766900062561035
    5. ' ' → logprob: -9.141900062561035
    6. ')' → logprob: -11.016900062561035
    7. ',' → logprob: -12.141900062561035
    8. ' _' → logprob: -12.266900062561035
    9. ' ==' → logprob: -12.766900062561035
    10. '.' → logprob: -12.766900062561035

Token 29: ' count' (ID: 3605)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7520864605903625
    2. ' max' → logprob: -1.5020864009857178
    3. 'max' → logprob: -2.3770864009857178
    4. 'min' → logprob: -2.5020864009857178
    5. ' user' → logprob: -3.2520864009857178
    6. ' count' → logprob: -3.6270864009857178
    7. ' len' → logprob: -3.7520864009857178
    8. 'count' → logprob: -4.002086639404297
    9. 'user' → logprob: -4.627086639404297
    10. 'len' → logprob: -4.752086639404297

Token 30: '_o' (ID: 28960)
  Prédit: '_o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.006812599487602711
    2. '_' → logprob: -5.006812572479248
    3. '_s' → logprob: -10.381813049316406
    4. ' _' → logprob: -11.756813049316406
    5. '_a' → logprob: -12.006813049316406
    6. '_i' → logprob: -12.006813049316406
    7. '_possible' → logprob: -12.006813049316406
    8. '_oc' → logprob: -12.256813049316406
    9. '_u' → logprob: -12.506813049316406
    10. 's' → logprob: -12.756813049316406

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6950515508651733
    2. '<|end|>' → logprob: -2.320051670074463
    3. ' +' → logprob: -2.695051670074463
    4. ' ' → logprob: -2.695051670074463
    5. '>' → logprob: -3.070051670074463
    6. ' <=' → logprob: -3.195051670074463
    7. ' if' → logprob: -3.195051670074463
    8. ' >=' → logprob: -3.820051670074463
    9. ' >' → logprob: -3.820051670074463
    10. ' *' → logprob: -4.320051670074463

Token 32: ' max' (ID: 2999)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.885871946811676
    2. ' user' → logprob: -1.3858718872070312
    3. 'user' → logprob: -2.2608718872070312
    4. '(user' → logprob: -3.1358718872070312
    5. ' len' → logprob: -3.2608718872070312
    6. 'len' → logprob: -3.5108718872070312
    7. '(len' → logprob: -3.6358718872070312
    8. '(' → logprob: -3.8858718872070312
    9. ' max' → logprob: -3.8858718872070312
    10. '(max' → logprob: -4.010871887207031

Token 33: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.327856630785391e-05
    2. '_' → logprob: -10.375082969665527
    3. 'length' → logprob: -10.625082969665527
    4. '(' → logprob: -12.250082969665527
    5. '_possible' → logprob: -12.250082969665527
    6. 'Length' → logprob: -12.375082969665527
    7. '_l' → logprob: -13.125082969665527
    8. '(length' → logprob: -13.125082969665527
    9. '_len' → logprob: -13.375082969665527
    10. '_count' → logprob: -13.625082969665527

Token 34: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.4033517837524414
    2. '>=' → logprob: -1.5283517837524414
    3. '<|end|>' → logprob: -1.5283517837524414
    4. '
' → logprob: -2.0283517837524414
    5. '>' → logprob: -3.0283517837524414
    6. ' <=' → logprob: -3.5283517837524414
    7. '<=' → logprob: -3.6533517837524414
    8. ' >' → logprob: -3.7783517837524414
    9. ' ' → logprob: -4.028351783752441
    10. 'if' → logprob: -4.653351783752441

Token 35: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004330532974563539
    2. ' len' → logprob: -7.750432968139648
    3. '(len' → logprob: -13.875432968139648
    4. '	len' → logprob: -14.375432968139648
    5. '15' → logprob: -15.750432968139648
    6. ' ' → logprob: -15.875432968139648
    7. '1' → logprob: -16.00043296813965
    8. '[len' → logprob: -16.12543296813965
    9. 'length' → logprob: -16.25043296813965
    10. '=len' → logprob: -16.37543296813965

Token 36: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.0007118358626030385
    2. '(' → logprob: -7.250711917877197
    3. 'user' → logprob: -13.625711441040039
    4. '(us' → logprob: -15.125711441040039
    5. '(u' → logprob: -15.875711441040039
    6. '(use' → logprob: -16.37571144104004
    7. '(
' → logprob: -16.62571144104004
    8. ' user' → logprob: -17.37571144104004
    9. ' (' → logprob: -17.50071144104004
    10. '(s' → logprob: -17.62571144104004

Token 37: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.3199920178740285e-05
    2. 'input' → logprob: -11.750022888183594
    3. '_user' → logprob: -11.750022888183594
    4. '_' → logprob: -12.625022888183594
    5. ')' → logprob: -13.375022888183594
    6. '```' → logprob: -14.125022888183594
    7. 'put' → logprob: -15.000022888183594
    8. 'Input' → logprob: -15.125022888183594
    9. '_output' → logprob: -15.125022888183594
    10. '_put' → logprob: -15.375022888183594

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020330198458395898
    2. '')' → logprob: -9.375203132629395
    3. ')
' → logprob: -9.500203132629395
    4. ' )' → logprob: -10.625203132629395
    5. '))' → logprob: -11.750203132629395
    6. ')>' → logprob: -13.125203132629395
    7. '`)' → logprob: -13.375203132629395
    8. '<|end|>' → logprob: -13.500203132629395
    9. ')))' → logprob: -14.125203132629395
    10. '<|end|>' → logprob: -14.625203132629395

Token 39: 'result' (ID: 2521)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6269069314002991
    2. '<|end|>' → logprob: -1.6269068717956543
    3. ' >=' → logprob: -2.1269068717956543
    4. '<=' → logprob: -3.2519068717956543
    5. '>' → logprob: -3.5019068717956543
    6. 'if' → logprob: -4.001906871795654
    7. '
' → logprob: -4.251906871795654
    8. ' <=' → logprob: -4.376906871795654
    9. ' if' → logprob: -4.376906871795654
    10. ' ' → logprob: -4.876906871795654

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07287652045488358
    2. '=' → logprob: -2.822876453399658
    3. '_' → logprob: -4.572876453399658
    4. ' ' → logprob: -8.697876930236816
    5. ')' → logprob: -8.947876930236816
    6. '(' → logprob: -9.947876930236816
    7. 's' → logprob: -10.447876930236816
    8. 'if' → logprob: -10.572876930236816
    9. '>' → logprob: -11.447876930236816
    10. '_space' → logprob: -11.572876930236816

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8112108707427979
    2. '"' → logprob: -1.5612108707427979
    3. 'possible' → logprob: -1.6862108707427979
    4. ' '' → logprob: -3.936210870742798
    5. ' min' → logprob: -3.936210870742798
    6. ' possible' → logprob: -3.936210870742798
    7. 'True' → logprob: -4.311210632324219
    8. 'min' → logprob: -4.311210632324219
    9. 'max' → logprob: -4.311210632324219
    10. 'required' → logprob: -4.561210632324219

Token 42: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40766164660453796
    2. 'o' → logprob: -2.4076616764068604
    3. 'Yes' → logprob: -2.4076616764068604
    4. 'No' → logprob: -3.2826616764068604
    5. 'YES' → logprob: -3.5326616764068604
    6. 'NO' → logprob: -4.407661437988281
    7. 'O' → logprob: -4.532661437988281
    8. ''o' → logprob: -4.657661437988281
    9. 'Y' → logprob: -5.157661437988281
    10. 'ok' → logprob: -5.157661437988281

Token 43: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00027575582498684525
    2. 'if' → logprob: -8.875275611877441
    3. '\n' → logprob: -9.000275611877441
    4. ' if' → logprob: -11.750275611877441
    5. '"' → logprob: -12.625275611877441
    6. ' '' → logprob: -15.000275611877441
    7. ''''' → logprob: -15.250275611877441
    8. '```' → logprob: -15.750275611877441
    9. '
' → logprob: -16.250276565551758
    10. ''
' → logprob: -16.625276565551758

Token 44: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47948217391967773
    2. '\n' → logprob: -1.2294821739196777
    3. 'if' → logprob: -2.4794821739196777
    4. ' if' → logprob: -5.854482173919678
    5. '```' → logprob: -6.979482173919678
    6. '
' → logprob: -8.479482650756836
    7. '' → logprob: -8.729482650756836
    8. '

' → logprob: -9.104482650756836
    9. '  
' → logprob: -9.354482650756836
    10. '\' → logprob: -9.354482650756836

Token 45: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.2394256889820099
    2. ' required' → logprob: -1.6144256591796875
    3. 'possible' → logprob: -4.3644256591796875
    4. 'required' → logprob: -7.1144256591796875
    5. ' ' → logprob: -8.489425659179688
    6. ' (' → logprob: -9.239425659179688
    7. '(required' → logprob: -10.239425659179688
    8. ' count' → logprob: -10.864425659179688
    9. '   ' → logprob: -12.364425659179688
    10. '_possible' → logprob: -13.114425659179688

Token 46: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0001105762057704851
    2. '_' → logprob: -9.625110626220703
    3. ' _' → logprob: -11.750110626220703
    4. '_counts' → logprob: -11.875110626220703
    5. '_possible' → logprob: -12.500110626220703
    6. '_c' → logprob: -12.625110626220703
    7. 'count' → logprob: -13.250110626220703
    8. '```' → logprob: -13.375110626220703
    9. '>=' → logprob: -13.625110626220703
    10. '<count' → logprob: -13.750110626220703

Token 47: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2520526051521301
    2. '>=' → logprob: -1.5020525455474854
    3. ' ' → logprob: -9.502052307128906
    4. '>' → logprob: -10.127052307128906
    5. ' >' → logprob: -12.252052307128906
    6. ')>=' → logprob: -13.627052307128906
    7. ']>=' → logprob: -14.627052307128906
    8. ' <=' → logprob: -15.127052307128906
    9. '   ' → logprob: -15.127052307128906
    10. '==' → logprob: -15.252052307128906

Token 48: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.47417956590652466
    2. ' required' → logprob: -0.9741795659065247
    3. '	required' → logprob: -9.8491792678833
    4. '8' → logprob: -10.4741792678833
    5. ' ' → logprob: -11.2241792678833
    6. '(required' → logprob: -12.0991792678833
    7. '_required' → logprob: -14.4741792678833
    8. '7' → logprob: -14.5991792678833
    9. '-required' → logprob: -15.2241792678833
    10. '.required' → logprob: -15.4741792678833

Token 49: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.392202976712724e-06
    2. '_counts' → logprob: -13.625006675720215
    3. ' _' → logprob: -13.875006675720215
    4. '_' → logprob: -13.875006675720215
    5. '_o' → logprob: -13.875006675720215
    6. '```' → logprob: -14.250006675720215
    7. 'count' → logprob: -14.625006675720215
    8. '_co' → logprob: -15.500006675720215
    9. ''_' → logprob: -15.750006675720215
    10. '_c' → logprob: -16.0000057220459

Token 50: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.004094073548913002
    2. 'else' → logprob: -5.504094123840332
    3. ' and' → logprob: -11.504094123840332
    4. ' ' → logprob: -12.754094123840332
    5. 'and' → logprob: -13.504094123840332
    6. ' ' → logprob: -14.879094123840332
    7. '_else' → logprob: -15.129094123840332
    8. '<|end|>' → logprob: -15.629094123840332
    9. '```' → logprob: -16.004093170166016
    10. '	else' → logprob: -16.254093170166016

Token 51: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00043686782009899616
    2. ' '' → logprob: -7.750436782836914
    3. '"' → logprob: -12.000436782836914
    4. ' ' → logprob: -16.750436782836914
    5. '`' → logprob: -16.875436782836914
    6. ' ' → logprob: -17.250436782836914
    7. '''' → logprob: -18.125436782836914
    8. '```' → logprob: -19.125436782836914
    9. '('' → logprob: -19.375436782836914
    10. ' NO' → logprob: -20.000436782836914

Token 52: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006717743817716837
    2. 'NO' → logprob: -5.006717681884766
    3. ''N' → logprob: -13.881717681884766
    4. ' '' → logprob: -15.256717681884766
    5. '''' → logprob: -15.256717681884766
    6. ' NO' → logprob: -15.506717681884766
    7. 'No' → logprob: -15.756717681884766
    8. '"' → logprob: -15.756717681884766
    9. ' ' → logprob: -16.381717681884766
    10. '   ' → logprob: -16.381717681884766

Token 53: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.704273118884885e-07
    2. '"' → logprob: -15.625000953674316
    3. ''
' → logprob: -15.750000953674316
    4. '```' → logprob: -16.25
    5. ' '' → logprob: -16.5
    6. ''''' → logprob: -16.875
    7. ''value' → logprob: -17.125
    8. '')' → logprob: -17.375
    9. ''user' → logprob: -17.625
    10. '"'' → logprob: -18.125

Token 54: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11845745146274567
    2. '<|end|>' → logprob: -2.243457555770874
    3. '\n' → logprob: -5.868457317352295
    4. '
' → logprob: -6.868457317352295
    5. '```' → logprob: -7.618457317352295
    6. ')' → logprob: -7.743457317352295
    7. ' print' → logprob: -7.993457317352295
    8. '<|end|>' → logprob: -8.493457794189453
    9. '\' → logprob: -9.243457794189453
    10. '#' → logprob: -9.993457794189453

Token 55: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5789565443992615
    2. '(' → logprob: -0.8289565443992615
    3. '('' → logprob: -5.828956604003906
    4. '()' → logprob: -10.953956604003906
    5. '(user' → logprob: -11.078956604003906
    6. '("("' → logprob: -11.078956604003906
    7. 'result' → logprob: -12.328956604003906
    8. ' (' → logprob: -12.578956604003906
    9. '('(' → logprob: -12.828956604003906
    10. '(f' → logprob: -12.953956604003906

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.0
    3. '')' → logprob: -16.375
    4. '))' → logprob: -16.75
    5. '`)' → logprob: -18.125
    6. ')`' → logprob: -18.5
    7. ')
' → logprob: -19.375
    8. '")' → logprob: -19.625
    9. '()' → logprob: -20.25
    10. '）' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 35.19%
Précision adaptée (1ère position): 35.19%
Précision (top 10): 79.63%
================================================================================
