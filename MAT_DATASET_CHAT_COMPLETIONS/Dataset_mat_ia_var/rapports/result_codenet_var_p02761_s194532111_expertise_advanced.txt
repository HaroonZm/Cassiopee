================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
from collections import defaultdict

n, m = map(int, stdin.readline().split())
defs = [tuple(map(int, stdin.readline().split())) for _ in range(m)]

# On regroupe les contraintes pour chaque position
pos_constraints = defaultdict(set)
for pos, digit in defs:
    pos_constraints[pos - 1].add(digit)

# Vérifier les contradictions
if any(len(digits) > 1 for digits in pos_constraints.values()):
    print(-1)
    exit()

# Générer la solution
num = [None] * n

for i in range(n):
    if i in pos_constraints:
        num[i] = next(iter(pos_constraints[i]))

# Gestion du premier chiffre (pas de zéro en tête si n > 1)
if n == 1:
    num[0] = num[0] if num[0] is not None else 0
else:
    if num[0] is not None:
        if num[0] == 0:
            print(-1)
            exit()
    else:
        num[0] = 1
    for i in range(1, n):
        if num[i] is None:
            num[i] = 0

print(''.join(map(str, num)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.09094277024269104
    2. ' argv' → logprob: -2.715942859649658
    3. 'exit' → logprob: -4.465942859649658
    4. ' exit' → logprob: -5.590942859649658
    5. 'import' → logprob: -5.965942859649658
    6. 'stdout' → logprob: -6.465942859649658
    7. 'stdin' → logprob: -7.715942859649658
    8. 'path' → logprob: -7.715942859649658
    9. 'version' → logprob: -8.5909423828125
    10. ' import' → logprob: -9.2159423828125

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012440306134521961
    2. '.readline' → logprob: -4.637440204620361
    3. '\n' → logprob: -6.512440204620361
    4. 'import' → logprob: -7.887440204620361
    5. '.read' → logprob: -8.13744068145752
    6. '.
' → logprob: -9.38744068145752
    7. '```' → logprob: -9.38744068145752
    8. 'newline' → logprob: -9.51244068145752
    9. 'print' → logprob: -10.01244068145752
    10. '\' → logprob: -10.13744068145752

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37536492943763733
    2. '.readline' → logprob: -1.500364899635315
    3. '\n' → logprob: -3.3753650188446045
    4. 'newline' → logprob: -4.375364780426025
    5. '```' → logprob: -4.625364780426025
    6. 'import' → logprob: -4.750364780426025
    7. 'print' → logprob: -5.000364780426025
    8. 'for' → logprob: -5.375364780426025
    9. '.read' → logprob: -5.500364780426025
    10. '
' → logprob: -6.000364780426025

Token 6: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.029315900057554245
    2. ' sys' → logprob: -3.779315948486328
    3. ' io' → logprob: -5.779315948486328
    4. 'os' → logprob: -6.404315948486328
    5. ' typing' → logprob: -7.779315948486328
    6. ' math' → logprob: -8.154315948486328
    7. ' stdout' → logprob: -9.029315948486328
    8. 'sys' → logprob: -9.154315948486328
    9. ' subprocess' → logprob: -9.529315948486328
    10. ' itertools' → logprob: -9.529315948486328

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1014505997300148
    2. 'import' → logprob: -2.3514506816864014
    3. ' ' → logprob: -7.601450443267822
    4. ' defaultdict' → logprob: -7.851450443267822
    5. '.' → logprob: -9.47645092010498
    6. '.Counter' → logprob: -9.47645092010498
    7. '```' → logprob: -9.60145092010498
    8. ' Counter' → logprob: -10.47645092010498
    9. '<|end|>' → logprob: -10.85145092010498
    10. '	import' → logprob: -11.35145092010498

Token 8: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2666345238685608
    2. ' defaultdict' → logprob: -1.766634464263916
    3. 'deque' → logprob: -2.766634464263916
    4. 'default' → logprob: -8.391634941101074
    5. ' default' → logprob: -11.391634941101074
    6. ' Counter' → logprob: -11.766634941101074
    7. 'de' → logprob: -12.266634941101074
    8. ' counter' → logprob: -12.766634941101074
    9. ' named' → logprob: -12.766634941101074
    10. ' de' → logprob: -13.016634941101074

Token 9: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8326376676559448
    2. '
' → logprob: -1.2076376676559448
    3. '\n' → logprob: -1.7076376676559448
    4. '```' → logprob: -3.0826377868652344
    5. 'import' → logprob: -5.082637786865234
    6. '\' → logprob: -5.082637786865234
    7. 'newline' → logprob: -5.207637786865234
    8. '' → logprob: -5.207637786865234
    9. '
' → logprob: -5.957637786865234
    10. '``' → logprob: -6.457637786865234

Token 10: 'n' (ID: 77)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.43120530247688293
    2. 'graph' → logprob: -2.3062052726745605
    3. 'counter' → logprob: -2.4312052726745605
    4. 'd' → logprob: -3.3062052726745605
    5. 'def' → logprob: -3.5562052726745605
    6. 'default' → logprob: -4.1812052726745605
    7. '```' → logprob: -4.5562052726745605
    8. 'counts' → logprob: -4.6812052726745605
    9. '`' → logprob: -4.8062052726745605
    10. 'count' → logprob: -5.0562052726745605

Token 11: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17392705380916595
    2. '=' → logprob: -1.9239270687103271
    3. ' ' → logprob: -4.548926830291748
    4. ',' → logprob: -6.298926830291748
    5. '.' → logprob: -7.673926830291748
    6. '_' → logprob: -8.423927307128906
    7. '  ' → logprob: -8.923927307128906
    8. ')' → logprob: -9.298927307128906
    9. ' ,' → logprob: -9.923927307128906
    10. 'u' → logprob: -9.923927307128906

Token 12: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.455947607755661
    2. ' m' → logprob: -1.0809476375579834
    3. ' ' → logprob: -4.080947399139404
    4. ' k' → logprob: -5.080947399139404
    5. 'k' → logprob: -6.330947399139404
    6. '=' → logprob: -7.080947399139404
    7. 'input' → logprob: -8.455947875976562
    8. ' =' → logprob: -8.580947875976562
    9. ' n' → logprob: -8.955947875976562
    10. ' input' → logprob: -9.330947875976562

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02498941496014595
    2. '=' → logprob: -3.774989366531372
    3. ',' → logprob: -6.649989604949951
    4. ' ,' → logprob: -8.274989128112793
    5. ' ' → logprob: -8.899989128112793
    6. '<|end|>' → logprob: -10.524989128112793
    7. ')' → logprob: -11.399989128112793
    8. ' =
' → logprob: -12.149989128112793
    9. ' =)' → logprob: -12.274989128112793
    10. ' =",' → logprob: -12.899989128112793

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0017421740340068936
    2. 'map' → logprob: -6.376742362976074
    3. ' stdin' → logprob: -10.751742362976074
    4. ' input' → logprob: -11.126742362976074
    5. ' ' → logprob: -13.001742362976074
    6. ' list' → logprob: -14.501742362976074
    7. 'input' → logprob: -14.751742362976074
    8. 'stdin' → logprob: -14.876742362976074
    9. ' [' → logprob: -16.251741409301758
    10. '	map' → logprob: -16.626741409301758

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5584852695465088
    2. '(int' → logprob: -0.9334852695465088
    3. '(str' → logprob: -3.808485269546509
    4. '(stdin' → logprob: -4.68348503112793
    5. '(lambda' → logprob: -6.05848503112793
    6. '(input' → logprob: -7.68348503112793
    7. '(len' → logprob: -9.55848503112793
    8. '()' → logprob: -9.68348503112793
    9. '(list' → logprob: -10.05848503112793
    10. '(std' → logprob: -10.43348503112793

Token 16: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.028325969353318214
    2. ',' → logprob: -4.403326034545898
    3. '(' → logprob: -4.778326034545898
    4. ')' → logprob: -5.278326034545898
    5. 'stdin' → logprob: -6.528326034545898
    6. ' stdin' → logprob: -7.778326034545898
    7. '(st' → logprob: -8.903326034545898
    8. '(input' → logprob: -10.278326034545898
    9. ' ,' → logprob: -10.903326034545898
    10. '.stdin' → logprob: -11.153326034545898

Token 17: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2017107456922531
    2. ' stdin' → logprob: -1.7017107009887695
    3. '(stdin' → logprob: -8.32671070098877
    4. 'input' → logprob: -10.07671070098877
    5. ')' → logprob: -12.70171070098877
    6. '.stdin' → logprob: -12.95171070098877
    7. ' input' → logprob: -13.20171070098877
    8. 'int' → logprob: -13.32671070098877
    9. 'str' → logprob: -13.70171070098877
    10. 'stdout' → logprob: -13.95171070098877

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003416770603507757
    2. '.read' → logprob: -5.753416538238525
    3. '.' → logprob: -8.378417015075684
    4. '.readlines' → logprob: -12.003417015075684
    5. ').' → logprob: -13.378417015075684
    6. '.Read' → logprob: -14.878417015075684
    7. ' .' → logprob: -15.003417015075684
    8. '.write' → logprob: -15.003417015075684
    9. ')' → logprob: -16.378416061401367
    10. '.READ' → logprob: -16.753416061401367

Token 19: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39188718795776367
    2. '()' → logprob: -1.2668871879577637
    3. '().' → logprob: -3.2668871879577637
    4. ')' → logprob: -6.391887187957764
    5. '()[' → logprob: -6.766887187957764
    6. '(' → logprob: -7.141887187957764
    7. '()))' → logprob: -8.516887664794922
    8. '(),' → logprob: -8.641887664794922
    9. '('' → logprob: -9.266887664794922
    10. ' ())' → logprob: -9.266887664794922

Token 20: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.13254432380199432
    2. 'split' → logprob: -2.1325442790985107
    3. 'rstrip' → logprob: -5.63254451751709
    4. ')' → logprob: -6.25754451751709
    5. '())' → logprob: -10.25754451751709
    6. ' strip' → logprob: -10.75754451751709
    7. 's' → logprob: -10.88254451751709
    8. '()' → logprob: -11.38254451751709
    9. 'read' → logprob: -12.00754451751709
    10. ' split' → logprob: -12.75754451751709

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002143716439604759
    2. '))' → logprob: -6.252143859863281
    3. '())' → logprob: -9.002143859863281
    4. '()' → logprob: -9.502143859863281
    5. '`)' → logprob: -11.752143859863281
    6. '(' → logprob: -12.752143859863281
    7. ')))' → logprob: -13.252143859863281
    8. '),' → logprob: -13.752143859863281
    9. ')`' → logprob: -13.752143859863281
    10. '')' → logprob: -14.752143859863281

Token 22: 'defs' (ID: 120321)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -1.2771108150482178
    2. 'd' → logprob: -1.7771108150482178
    3. 'graph' → logprob: -1.9021108150482178
    4. '
' → logprob: -1.9021108150482178
    5. 'count' → logprob: -3.5271108150482178
    6. 'a' → logprob: -4.152111053466797
    7. 'team' → logprob: -4.152111053466797
    8. 'data' → logprob: -4.402111053466797
    9. '\n' → logprob: -4.527111053466797
    10. 'result' → logprob: -4.527111053466797

Token 23: ' =' (ID: 314)
  Prédit: 'ault'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ault' → logprob: -0.20782986283302307
    2. 'a' → logprob: -3.4578299522399902
    3. ' =' → logprob: -3.4578299522399902
    4. 'ult' → logprob: -3.5828299522399902
    5. 'f' → logprob: -3.9578299522399902
    6. '[' → logprob: -3.9578299522399902
    7. 'default' → logprob: -4.08282995223999
    8. '=' → logprob: -4.70782995223999
    9. ' defaultdict' → logprob: -4.70782995223999
    10. '_default' → logprob: -5.45782995223999

Token 24: ' [' (ID: 723)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.009819013066589832
    2. 'default' → logprob: -4.634819030761719
    3. ' default' → logprob: -9.884819030761719
    4. ' [' → logprob: -12.634819030761719
    5. '(default' → logprob: -13.009819030761719
    6. '.default' → logprob: -13.634819030761719
    7. ' []' → logprob: -13.759819030761719
    8. ' ' → logprob: -13.884819030761719
    9. '"default' → logprob: -14.134819030761719
    10. '[' → logprob: -14.509819030761719

Token 25: 'tuple' (ID: 52834)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.35428544878959656
    2. '{}' → logprob: -1.354285478591919
    3. '[]' → logprob: -4.22928524017334
    4. 'set' → logprob: -4.85428524017334
    5. 'dict' → logprob: -5.22928524017334
    6. 'list' → logprob: -5.35428524017334
    7. '0' → logprob: -6.10428524017334
    8. 'int' → logprob: -6.60428524017334
    9. 'lambda' → logprob: -6.85428524017334
    10. ']' → logprob: -7.22928524017334

Token 26: '(map' (ID: 16946)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.12830273807048798
    2. '(map' → logprob: -2.128302812576294
    3. '(int' → logprob: -7.253302574157715
    4. '(' → logprob: -7.753302574157715
    5. '(std' → logprob: -8.753302574157715
    6. '()' → logprob: -10.003302574157715
    7. 'map' → logprob: -11.253302574157715
    8. 'stdin' → logprob: -11.628302574157715
    9. '(st' → logprob: -12.378302574157715
    10. '()]' → logprob: -13.503302574157715

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000596043246332556
    2. '(' → logprob: -7.875596046447754
    3. '(str' → logprob: -8.500596046447754
    4. 'int' → logprob: -12.125596046447754
    5. ',int' → logprob: -12.750596046447754
    6. '<int' → logprob: -13.750596046447754
    7. '=int' → logprob: -14.375596046447754
    8. '(stdin' → logprob: -14.500596046447754
    9. ')' → logprob: -15.000596046447754
    10. ']int' → logprob: -15.125596046447754

Token 28: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.07049495726823807
    2. ',' → logprob: -2.6954948902130127
    3. 'stdin' → logprob: -8.820494651794434
    4. ')' → logprob: -8.945494651794434
    5. ',std' → logprob: -9.445494651794434
    6. '(' → logprob: -9.445494651794434
    7. ' ,' → logprob: -10.570494651794434
    8. '(std' → logprob: -10.695494651794434
    9. '(),' → logprob: -10.820494651794434
    10. '(st' → logprob: -11.195494651794434

Token 29: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.02999253198504448
    2. ' stdin' → logprob: -3.5299925804138184
    3. '(stdin' → logprob: -8.40499210357666
    4. '.stdin' → logprob: -11.52999210357666
    5. 'stdout' → logprob: -12.52999210357666
    6. ')' → logprob: -12.52999210357666
    7. 'st' → logprob: -15.65499210357666
    8. 'std' → logprob: -15.65499210357666
    9. '))' → logprob: -15.90499210357666
    10. 'stdlib' → logprob: -16.154993057250977

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.107425062713446e-06
    2. '().' → logprob: -12.250006675720215
    3. '.' → logprob: -13.125006675720215
    4. '.readlines' → logprob: -15.375006675720215
    5. ')' → logprob: -17.25000762939453
    6. ' readline' → logprob: -18.37500762939453
    7. ')))' → logprob: -18.62500762939453
    8. ').' → logprob: -18.75000762939453
    9. ' .' → logprob: -19.00000762939453
    10. '.read' → logprob: -19.12500762939453

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.751746746478602e-05
    2. '()' → logprob: -10.12504768371582
    3. '.readline' → logprob: -12.00004768371582
    4. '()))' → logprob: -14.87504768371582
    5. ' ().' → logprob: -15.00004768371582
    6. '(' → logprob: -15.50004768371582
    7. '()
' → logprob: -16.12504768371582
    8. '())' → logprob: -16.75004768371582
    9. '.split' → logprob: -16.75004768371582
    10. ')' → logprob: -16.87504768371582

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.466968650580384e-05
    2. 'strip' → logprob: -9.875054359436035
    3. 'rstrip' → logprob: -13.125054359436035
    4. ' split' → logprob: -14.000054359436035
    5. '(split' → logprob: -15.500054359436035
    6. ')' → logprob: -17.00005531311035
    7. '```' → logprob: -18.37505531311035
    8. 'read' → logprob: -18.50005531311035
    9. 's' → logprob: -18.62505531311035
    10. 'spl' → logprob: -18.87505531311035

Token 33: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.697070837020874
    2. '()))' → logprob: -0.697070837020874
    3. '())' → logprob: -6.197071075439453
    4. '()' → logprob: -6.572071075439453
    5. ')' → logprob: -8.322071075439453
    6. ')))' → logprob: -8.947071075439453
    7. '(' → logprob: -9.697071075439453
    8. '())))' → logprob: -10.697071075439453
    9. '()))
' → logprob: -11.447071075439453
    10. ' ))' → logprob: -12.697071075439453

Token 34: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09711099416017532
    2. 'for' → logprob: -2.8471109867095947
    3. ' for' → logprob: -3.7221109867095947
    4. '()' → logprob: -5.472111225128174
    5. ')]' → logprob: -5.597111225128174
    6. ']' → logprob: -7.097111225128174
    7. '),' → logprob: -7.472111225128174
    8. '(' → logprob: -7.597111225128174
    9. ')],' → logprob: -8.472110748291016
    10. ',' → logprob: -9.972110748291016

Token 35: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22693835198879242
    2. '_' → logprob: -1.7269383668899536
    3. 'range' → logprob: -3.726938247680664
    4. '_range' → logprob: -7.476938247680664
    5. '(range' → logprob: -8.226938247680664
    6. ' _' → logprob: -8.351938247680664
    7. ' in' → logprob: -10.351938247680664
    8. '	range' → logprob: -11.101938247680664
    9. ' ' → logprob: -11.601938247680664
    10. ' xrange' → logprob: -12.226938247680664

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22018550336360931
    2. 'in' → logprob: -1.7201855182647705
    3. 'range' → logprob: -4.095185279846191
    4. ' ' → logprob: -6.595185279846191
    5. ' range' → logprob: -7.595185279846191
    6. 'i' → logprob: -10.595185279846191
    7. 'n' → logprob: -11.095185279846191
    8. '  ' → logprob: -12.345185279846191
    9. '(' → logprob: -12.470185279846191
    10. ')' → logprob: -12.595185279846191

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00029637437546625733
    2. ' range' → logprob: -8.125296592712402
    3. '(range' → logprob: -15.875296592712402
    4. '	range' → logprob: -15.875296592712402
    5. ' ' → logprob: -16.750295639038086
    6. '[' → logprob: -18.125295639038086
    7. '```' → logprob: -18.250295639038086
    8. '   ' → logprob: -18.625295639038086
    9. ')' → logprob: -18.750295639038086
    10. '  ' → logprob: -18.875295639038086

Token 38: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000769009639043361
    2. '(' → logprob: -7.250769138336182
    3. '(m' → logprob: -9.750768661499023
    4. '(
' → logprob: -14.875768661499023
    5. 'n' → logprob: -15.250768661499023
    6. ' (' → logprob: -16.750768661499023
    7. ' n' → logprob: -17.125768661499023
    8. ')n' → logprob: -17.125768661499023
    9. ')' → logprob: -17.625768661499023
    10. '(

' → logprob: -18.500768661499023

Token 39: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007393499254249036
    2. ')' → logprob: -7.250739574432373
    3. ']' → logprob: -10.875739097595215
    4. ')])' → logprob: -11.875739097595215
    5. ')],' → logprob: -14.000739097595215
    6. ' )' → logprob: -14.250739097595215
    7. '])]' → logprob: -14.500739097595215
    8. '))' → logprob: -14.750739097595215
    9. ')]
' → logprob: -15.500739097595215
    10. '')]' → logprob: -15.500739097595215

Token 40: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018130043521523476
    2. 'd' → logprob: -4.393129825592041
    3. '
' → logprob: -6.518129825592041
    4. ' 
' → logprob: -6.643129825592041
    5. 'a' → logprob: -7.268129825592041
    6. '\n' → logprob: -7.518129825592041
    7. '' → logprob: -8.6431303024292
    8. 's' → logprob: -8.6431303024292
    9. ':' → logprob: -8.8931303024292
    10. 'default' → logprob: -8.8931303024292

Token 41: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9597451090812683
    2. ' d' → logprob: -1.584745168685913
    3. ' graph' → logprob: -2.334745168685913
    4. 'graph' → logprob: -2.584745168685913
    5. 's' → logprob: -3.084745168685913
    6. 'dp' → logprob: -3.584745168685913
    7. 'counts' → logprob: -3.834745168685913
    8. ' freq' → logprob: -4.084744930267334
    9. ' dp' → logprob: -4.459744930267334
    10. 'count' → logprob: -4.459744930267334

Token 42: ' reg' (ID: 1324)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003943874966353178
    2. ' e' → logprob: -5.878943920135498
    3. 'es' → logprob: -8.37894344329834
    4. 'line' → logprob: -8.50394344329834
    5. 'def' → logprob: -8.87894344329834
    6. 'ed' → logprob: -9.12894344329834
    7. '_e' → logprob: -9.62894344329834
    8. '_' → logprob: -10.00394344329834
    9. ' the' → logprob: -10.00394344329834
    10. 'edef' → logprob: -10.25394344329834

Token 43: 'roupe' (ID: 23290)
  Prédit: 'ister'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ister' → logprob: -0.08238840103149414
    2. 'ions' → logprob: -3.207388401031494
    3. 'isters' → logprob: -3.957388401031494
    4. 'istry' → logprob: -5.082388401031494
    5. 'ular' → logprob: -5.582388401031494
    6. 'istration' → logprob: -5.957388401031494
    7. 'ion' → logprob: -6.332388401031494
    8. 's' → logprob: -6.582388401031494
    9. 'ex' → logprob: -6.957388401031494
    10. '[' → logprob: -7.582388401031494

Token 44: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07083628326654434
    2. ' par' → logprob: -3.695836305618286
    3. 'les' → logprob: -3.820836305618286
    4. ' ' → logprob: -5.195836067199707
    5. 's' → logprob: -5.820836067199707
    6. 'def' → logprob: -6.570836067199707
    7. ' defs' → logprob: -6.695836067199707
    8. 'defs' → logprob: -6.695836067199707
    9. '(' → logprob: -6.820836067199707
    10. ' the' → logprob: -6.945836067199707

Token 45: ' contraintes' (ID: 167366)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6149516105651855
    2. 'd' → logprob: -2.3649516105651855
    3. 'élé' → logprob: -2.3649516105651855
    4. 'defs' → logprob: -2.9899516105651855
    5. ' éléments' → logprob: -3.3649516105651855
    6. ' déf' → logprob: -3.4899516105651855
    7. 'def' → logprob: -4.2399516105651855
    8. 'm' → logprob: -4.7399516105651855
    9. 'é' → logprob: -4.7399516105651855
    10. ' tuples' → logprob: -5.2399516105651855

Token 46: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9152073264122009
    2. ',' → logprob: -1.2902073860168457
    3. 'd' → logprob: -2.6652073860168457
    4. '_' → logprob: -3.1652073860168457
    5. ':' → logprob: -3.1652073860168457
    6. ' defaultdict' → logprob: -3.4152073860168457
    7. ' ' → logprob: -3.5402073860168457
    8. ' ,' → logprob: -3.9152073860168457
    9. ' par' → logprob: -4.415207386016846
    10. ' :' → logprob: -4.540207386016846

Token 47: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.054491546005010605
    2. ' each' → logprob: -3.1794915199279785
    3. 'each' → logprob: -4.9294915199279785
    4. 'cha' → logprob: -5.9294915199279785
    5. ' ' → logprob: -7.8044915199279785
    6. 'ch' → logprob: -8.304491996765137
    7. ' chacune' → logprob: -8.554491996765137
    8. ' cha' → logprob: -9.304491996765137
    9. 'Chaque' → logprob: -9.554491996765137
    10. ' every' → logprob: -9.554491996765137

Token 48: ' position' (ID: 4010)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.7371513843536377
    2. ' variable' → logprob: -0.8621513843536377
    3. ' sommet' → logprob: -3.7371513843536377
    4. '```' → logprob: -4.862151145935059
    5. ' tâche' → logprob: -4.987151145935059
    6. 'élé' → logprob: -5.112151145935059
    7. 's' → logprob: -5.612151145935059
    8. 'clé' → logprob: -5.862151145935059
    9. ' machine' → logprob: -5.987151145935059
    10. 'point' → logprob: -6.174651145935059

Token 49: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0762577056884766
    2. 'position' → logprob: -2.2012577056884766
    3. ' :' → logprob: -2.3262577056884766
    4. ':' → logprob: -2.4512577056884766
    5. ' ,' → logprob: -2.5762577056884766
    6. 's' → logprob: -2.5762577056884766
    7. ' ' → logprob: -2.9512577056884766
    8. 'positions' → logprob: -3.2012577056884766
    9. ' position' → logprob: -3.4512577056884766
    10. ' defaultdict' → logprob: -4.451257705688477

Token 50: 'pos' (ID: 1103)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6748185157775879
    2. 'pos' → logprob: -1.674818515777588
    3. 'constraints' → logprob: -1.799818515777588
    4. 'position' → logprob: -2.799818515777588
    5. ':' → logprob: -3.674818515777588
    6. ' positions' → logprob: -3.924818515777588
    7. ' position' → logprob: -4.674818515777588
    8. ' constraints' → logprob: -4.924818515777588
    9. ' pos' → logprob: -5.424818515777588
    10. ' :' → logprob: -5.924818515777588

Token 51: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -0.5319262742996216
    2. 'itions' → logprob: -1.5319262742996216
    3. ' =' → logprob: -2.906926155090332
    4. '_' → logprob: -2.906926155090332
    5. 's' → logprob: -3.281926155090332
    6. 'itional' → logprob: -4.406926155090332
    7. '_to' → logprob: -4.531926155090332
    8. '=' → logprob: -4.656926155090332
    9. 'ition' → logprob: -5.281926155090332
    10. '_con' → logprob: -5.531926155090332

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. 's' → logprob: -14.100208282470703
    4. '_' → logprob: -15.600208282470703
    5. '=[]' → logprob: -15.850208282470703
    6. '[' → logprob: -15.850208282470703
    7. '={}' → logprob: -16.100208282470703
    8. ' ' → logprob: -16.350208282470703
    9. ',' → logprob: -16.475208282470703
    10. ']' → logprob: -16.600208282470703

Token 53: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.225583016872406
    2. ' defaultdict' → logprob: -1.6005830764770508
    3. ' default' → logprob: -8.85058307647705
    4. '(default' → logprob: -11.97558307647705
    5. '"default' → logprob: -11.97558307647705
    6. '.default' → logprob: -12.47558307647705
    7. ''default' → logprob: -12.85058307647705
    8. '[' → logprob: -12.97558307647705
    9. ' [' → logprob: -13.22558307647705
    10. '	default' → logprob: -14.10058307647705

Token 54: '(set' (ID: 25904)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.00024192029377445579
    2. '(' → logprob: -9.000242233276367
    3. '(lambda' → logprob: -9.750242233276367
    4. '(set' → logprob: -10.000242233276367
    5. 'list' → logprob: -11.375242233276367
    6. '(
' → logprob: -13.750242233276367
    7. '(<' → logprob: -14.625242233276367
    8. '(dict' → logprob: -14.750242233276367
    9. ' list' → logprob: -15.000242233276367
    10. '(l' → logprob: -15.125242233276367

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.621933451038785e-05
    2. '()' → logprob: -11.000056266784668
    3. '())' → logprob: -11.125056266784668
    4. ' )' → logprob: -11.500056266784668
    5. '[' → logprob: -12.375056266784668
    6. ')
' → logprob: -12.750056266784668
    7. ')`' → logprob: -13.000056266784668
    8. '(' → logprob: -13.375056266784668
    9. '))' → logprob: -13.375056266784668
    10. ')

' → logprob: -14.750056266784668

Token 56: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4752769470214844
    2. ' for' → logprob: -0.9752769470214844
    3. '
' → logprob: -6.975276947021484
    4. '<|end|>' → logprob: -8.600276947021484
    5. ' 
' → logprob: -10.850276947021484
    6. ')' → logprob: -11.225276947021484
    7. '```' → logprob: -11.225276947021484
    8. '<|end|>' → logprob: -11.725276947021484
    9. '' → logprob: -12.350276947021484
    10. '\n' → logprob: -12.600276947021484

Token 57: ' pos' (ID: 1253)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.864798665046692
    2. ' i' → logprob: -1.989798665046692
    3. ' x' → logprob: -2.1147985458374023
    4. ' p' → logprob: -2.4897985458374023
    5. ' _' → logprob: -2.8647985458374023
    6. ' d' → logprob: -2.8647985458374023
    7. 'a' → logprob: -2.9897985458374023
    8. ' l' → logprob: -3.1147985458374023
    9. ' u' → logprob: -3.4897985458374023
    10. ' idx' → logprob: -3.4897985458374023

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00795651599764824
    2. ' in' → logprob: -5.132956504821777
    3. ' ,' → logprob: -6.507956504821777
    4. 'in' → logprob: -9.132956504821777
    5. '_,' → logprob: -9.382956504821777
    6. ',val' → logprob: -9.507956504821777
    7. 's' → logprob: -10.132956504821777
    8. '1' → logprob: -10.382956504821777
    9. ',_' → logprob: -10.507956504821777
    10. ',value' → logprob: -10.507956504821777

Token 59: ' digit' (ID: 19181)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.268685907125473
    2. ' val' → logprob: -2.518685817718506
    3. 'lim' → logprob: -4.268685817718506
    4. 'value' → logprob: -4.518685817718506
    5. 'limit' → logprob: -4.518685817718506
    6. 'v' → logprob: -4.768685817718506
    7. 'd' → logprob: -5.018685817718506
    8. 'color' → logprob: -5.018685817718506
    9. 'typ' → logprob: -5.268685817718506
    10. 'c' → logprob: -5.393685817718506

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08726614713668823
    2. 'in' → logprob: -2.587266206741333
    3. 's' → logprob: -4.837265968322754
    4. ',' → logprob: -9.087265968322754
    5. ' ' → logprob: -9.587265968322754
    6. 'dans' → logprob: -10.087265968322754
    7. 'es' → logprob: -10.212265968322754
    8. 'set' → logprob: -10.462265968322754
    9. '_set' → logprob: -10.587265968322754
    10. '_in' → logprob: -11.087265968322754

Token 61: ' defs' (ID: 192560)
  Prédit: ' defs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defs' → logprob: -0.25195568799972534
    2. 'defs' → logprob: -1.5019557476043701
    3. 'def' → logprob: -11.12695598602295
    4. '_defs' → logprob: -12.50195598602295
    5. 'Defs' → logprob: -12.62695598602295
    6. ' ' → logprob: -13.00195598602295
    7. ' def' → logprob: -13.12695598602295
    8. 'edef' → logprob: -15.87695598602295
    9. ' dfs' → logprob: -16.251955032348633
    10. 'efs' → logprob: -16.501955032348633

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004972710739821196
    2. '):' → logprob: -8.500496864318848
    3. ':
' → logprob: -8.875496864318848
    4. ')' → logprob: -10.375496864318848
    5. ',' → logprob: -10.375496864318848
    6. ' in' → logprob: -10.625496864318848
    7. '[' → logprob: -10.750496864318848
    8. ' :' → logprob: -10.875496864318848
    9. ']:' → logprob: -12.000496864318848
    10. ':**' → logprob: -12.500496864318848

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03894103318452835
    2. ' pos' → logprob: -3.2889411449432373
    3. '	pos' → logprob: -7.663940906524658
    4. 'pos' → logprob: -8.288941383361816
    5. '    
' → logprob: -9.413941383361816
    6. ' 
' → logprob: -10.788941383361816
    7. ' ' → logprob: -10.913941383361816
    8. '[pos' → logprob: -11.413941383361816
    9. '   ' → logprob: -11.538941383361816
    10. '```' → logprob: -11.663941383361816

Token 64: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.013298346661031246
    2. 'pos' (adapté à ' pos') → logprob: -4.513298511505127
    3. '   ' → logprob: -6.138298511505127
    4. '	pos' → logprob: -9.638298034667969
    5. '[pos' → logprob: -11.513298034667969
    6. '_pos' → logprob: -12.638298034667969
    7. ',pos' → logprob: -12.763298034667969
    8. ' ' → logprob: -13.513298034667969
    9. '.pos' → logprob: -13.513298034667969
    10. ' 
' → logprob: -13.513298034667969

Token 65: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.250001907348633
    3. ' _' → logprob: -15.000001907348633
    4. 'constraints' → logprob: -15.250001907348633
    5. '```' → logprob: -15.375001907348633
    6. '_constraint' → logprob: -15.750001907348633
    7. '_const' → logprob: -16.625001907348633
    8. '[_' → logprob: -16.625001907348633
    9. ' constraints' → logprob: -17.125001907348633
    10. '[' → logprob: -17.125001907348633

Token 66: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.1888679839321412e-05
    2. '[' → logprob: -10.750021934509277
    3. '[position' → logprob: -15.000021934509277
    4. '[val' → logprob: -18.50002098083496
    5. ' [' → logprob: -18.62502098083496
    6. '[idx' → logprob: -19.62502098083496
    7. '[prop' → logprob: -19.75002098083496
    8. '```' → logprob: -20.00002098083496
    9. '[param' → logprob: -20.50002098083496
    10. '\[' → logprob: -20.62502098083496

Token 67: ' -' (ID: 533)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00021843716967850924
    2. ' ].' → logprob: -8.750218391418457
    3. ']' → logprob: -9.750218391418457
    4. '.add' → logprob: -14.125218391418457
    5. '.' → logprob: -15.250218391418457
    6. '   ' → logprob: -16.125219345092773
    7. ' ' → logprob: -16.375219345092773
    8. ').' → logprob: -16.500219345092773
    9. '[' → logprob: -16.500219345092773
    10. '}.' → logprob: -16.875219345092773

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004971518646925688
    2. ' ' → logprob: -7.625497341156006
    3. '<|end|>' → logprob: -11.750496864318848
    4. '=' → logprob: -14.875496864318848
    5. ')' → logprob: -15.250496864318848
    6. '```' → logprob: -15.500496864318848
    7. '<|end|>' → logprob: -16.000497817993164
    8. 'to' → logprob: -16.500497817993164
    9. ']' → logprob: -16.812997817993164
    10. '2' → logprob: -17.000497817993164

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.812512397766113
    4. '<|end|>' → logprob: -16.375011444091797
    5. '0' → logprob: -17.062511444091797
    6. '>' → logprob: -17.625011444091797
    7. '`' → logprob: -17.812511444091797
    8. ')' → logprob: -17.875011444091797
    9. 'to' → logprob: -17.937511444091797
    10. '=' → logprob: -18.000011444091797

Token 70: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00036442498094402254
    2. ']' → logprob: -8.875364303588867
    3. '.add' → logprob: -8.875364303588867
    4. ' ].' → logprob: -9.500364303588867
    5. ').' → logprob: -12.125364303588867
    6. '.' → logprob: -13.375364303588867
    7. '}.' → logprob: -14.750364303588867
    8. ''].' → logprob: -15.125364303588867
    9. '   ' → logprob: -15.375364303588867
    10. ')].' → logprob: -15.500364303588867

Token 71: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.7432603272027336e-06
    2. ' add' → logprob: -14.625001907348633
    3. 'ad' → logprob: -15.000001907348633
    4. '.add' → logprob: -15.125001907348633
    5. 'update' → logprob: -15.500001907348633
    6. 'addi' → logprob: -15.750001907348633
    7. 'append' → logprob: -16.500001907348633
    8. '	add' → logprob: -16.500001907348633
    9. 'adde' → logprob: -16.875001907348633
    10. ')add' → logprob: -17.000001907348633

Token 72: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00015478975547011942
    2. '(' → logprob: -8.875154495239258
    3. 'digit' → logprob: -11.250154495239258
    4. 'd' → logprob: -13.625154495239258
    5. '(str' → logprob: -14.625154495239258
    6. ' (' → logprob: -16.875154495239258
    7. '((' → logprob: -17.125154495239258
    8. '(
' → logprob: -17.250154495239258
    9. '(int' → logprob: -17.250154495239258
    10. ' digit' → logprob: -17.625154495239258

Token 73: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -3.650518920039758e-06
    2. 'digit' → logprob: -12.750003814697266
    3. 'ig' → logprob: -16.000003814697266
    4. 'igital' → logprob: -16.250003814697266
    5. 'igid' → logprob: -16.250003814697266
    6. 'igits' → logprob: -16.375003814697266
    7. 'igi' → logprob: -16.375003814697266
    8. 'igt' → logprob: -16.500003814697266
    9. '_digit' → logprob: -16.875003814697266
    10. '-digit' → logprob: -17.125003814697266

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.0590548703912646e-05
    2. ' )' → logprob: -10.625030517578125
    3. ')
' → logprob: -12.000030517578125
    4. ')

' → logprob: -16.875030517578125
    5. '))' → logprob: -17.500030517578125
    6. '}' → logprob: -17.500030517578125
    7. '`)' → logprob: -18.000030517578125
    8. ')
' → logprob: -18.125030517578125
    9. ')return' → logprob: -18.500030517578125
    10. ')`' → logprob: -18.875030517578125

Token 75: '#' (ID: 2)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.684802770614624
    2. 'result' → logprob: -1.184802770614624
    3. 's' → logprob: -3.059802770614624
    4. 'number' → logprob: -3.059802770614624
    5. '
' → logprob: -4.059803009033203
    6. 'ans' → logprob: -4.184803009033203
    7. 'num' → logprob: -4.309803009033203
    8. 'answers' → logprob: -4.559803009033203
    9. 'possible' → logprob: -4.934803009033203
    10. 'valid' → logprob: -5.059803009033203

Token 76: ' Vér' (ID: 159169)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.137442946434021
    2. 'result' → logprob: -1.262442946434021
    3. 'for' → logprob: -1.887442946434021
    4. 'possible' → logprob: -3.0124430656433105
    5. ' res' → logprob: -3.2624430656433105
    6. 'ans' → logprob: -3.5124430656433105
    7. '#' → logprob: -4.0124430656433105
    8. 'answer' → logprob: -4.1374430656433105
    9. 'dp' → logprob: -4.1374430656433105
    10. 'digits' → logprob: -4.3874430656433105

Token 77: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.034244898706674576
    2. 'ification' → logprob: -3.784245014190674
    3. 'ifie' → logprob: -4.784245014190674
    4. 'if' → logprob: -6.534245014190674
    5. 'ifiez' → logprob: -7.159245014190674
    6. 'ifications' → logprob: -8.659244537353516
    7. 'ifi' → logprob: -9.284244537353516
    8. 'ify' → logprob: -10.909244537353516
    9. 'IFIER' → logprob: -11.409244537353516
    10. 'ifies' → logprob: -11.534244537353516

Token 78: ' les' (ID: 1341)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.819221556186676
    2. '(' → logprob: -1.8192214965820312
    3. '<|end|>' → logprob: -2.3192214965820312
    4. ' if' → logprob: -2.4442214965820312
    5. 'if' → logprob: -2.8192214965820312
    6. ' ' → logprob: -3.5692214965820312
    7. 'for' → logprob: -3.5692214965820312
    8. ' def' → logprob: -3.9442214965820312
    9. ' for' → logprob: -4.069221496582031
    10. 's' → logprob: -4.819221496582031

Token 79: ' contradictions' (ID: 176907)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.4759024381637573
    2. 'poss' → logprob: -1.8509024381637573
    3. 'contr' → logprob: -2.350902557373047
    4. 'conditions' → logprob: -3.350902557373047
    5. ' conditions' → logprob: -3.600902557373047
    6. 'contra' → logprob: -4.100902557373047
    7. ' possibilités' → logprob: -4.100902557373047
    8. 'possible' → logprob: -5.850902557373047
    9. ' possibles' → logprob: -5.850902557373047
    10. ' ' → logprob: -6.225902557373047

Token 80: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1640627384185791
    2. ' for' → logprob: -2.164062738418579
    3. '
' → logprob: -3.414062738418579
    4. 'if' → logprob: -6.9140625
    5. 's' → logprob: -7.4140625
    6. 'possible' → logprob: -7.5390625
    7. '<|end|>' → logprob: -7.6640625
    8. ':' → logprob: -8.2890625
    9. 'in' → logprob: -9.6640625
    10. ' in' → logprob: -9.7890625

Token 81: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013066678075119853
    2. 'contr' → logprob: -6.876306533813477
    3. ' for' → logprob: -8.251306533813477
    4. 'possible' → logprob: -11.751306533813477
    5. 'if' → logprob: -13.001306533813477
    6. 'valid' → logprob: -14.126306533813477
    7. 'im' → logprob: -15.001306533813477
    8. 'flag' → logprob: -15.001306533813477
    9. 'is' → logprob: -15.251306533813477
    10. 'has' → logprob: -15.626306533813477

Token 82: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.5778501033782959
    2. 'any' → logprob: -0.8278501033782959
    3. 'len' → logprob: -6.452850341796875
    4. ' len' → logprob: -8.952850341796875
    5. ' ' → logprob: -9.827850341796875
    6. 'pos' → logprob: -10.452850341796875
    7. '(any' → logprob: -10.952850341796875
    8. '0' → logprob: -11.077850341796875
    9. '   ' → logprob: -11.077850341796875
    10. '```' → logprob: -11.202850341796875

Token 83: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.01448807492852211
    2. 'len' → logprob: -4.264488220214844
    3. '(pos' → logprob: -8.639488220214844
    4. 'pos' → logprob: -9.639488220214844
    5. ' len' → logprob: -10.389488220214844
    6. '(' → logprob: -10.889488220214844
    7. '(not' → logprob: -11.764488220214844
    8. '{' → logprob: -12.139488220214844
    9. '(
' → logprob: -12.889488220214844
    10. 'not' → logprob: -13.014488220214844

Token 84: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5023585557937622
    2. '(pos' → logprob: -1.5023585557937622
    3. '(s' → logprob: -2.0023584365844727
    4. '(const' → logprob: -4.002358436584473
    5. '(ds' → logprob: -4.877358436584473
    6. '(v' → logprob: -5.377358436584473
    7. '(c' → logprob: -6.002358436584473
    8. '(vals' → logprob: -6.377358436584473
    9. 'digits' → logprob: -6.877358436584473
    10. '(cs' → logprob: -8.752358436584473

Token 85: 'igits' (ID: 64824)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8219612240791321
    2. 'igits' → logprob: -0.8219612240791321
    3. 's' → logprob: -2.4469611644744873
    4. 'constraints' → logprob: -4.446961402893066
    5. 'ig' → logprob: -5.321961402893066
    6. 'igit' → logprob: -5.446961402893066
    7. 'c' → logprob: -5.821961402893066
    8. '[pos' → logprob: -6.196961402893066
    9. 'igs' → logprob: -6.321961402893066
    10. ')' → logprob: -6.821961402893066

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012429672060534358
    2. ')>' → logprob: -7.1262431144714355
    3. ' )' → logprob: -8.001242637634277
    4. '>' → logprob: -10.501242637634277
    5. ' >' → logprob: -10.876242637634277
    6. ' for' → logprob: -11.251242637634277
    7. '   ' → logprob: -11.376242637634277
    8. ' ' → logprob: -11.876242637634277
    9. '  ' → logprob: -12.251242637634277
    10. '```' → logprob: -12.626242637634277

Token 87: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.38791799545288086
    2. '>' → logprob: -1.1379179954528809
    3. ')' → logprob: -7.637917995452881
    4. '()>' → logprob: -8.387918472290039
    5. ')>' → logprob: -8.512918472290039
    6. ' ' → logprob: -9.512918472290039
    7. ' for' → logprob: -10.637918472290039
    8. ' )' → logprob: -11.137918472290039
    9. '()' → logprob: -11.887918472290039
    10. '&gt' → logprob: -12.387918472290039

Token 88: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029753267765045166
    2. ' ' → logprob: -3.5297532081604004
    3. '   ' → logprob: -14.279753684997559
    4. '>' → logprob: -14.279753684997559
    5. '  ' → logprob: -14.529753684997559
    6. '```' → logprob: -14.967253684997559
    7. ' ' → logprob: -15.904753684997559
    8. '0' → logprob: -15.967253684997559
    9. '<|end|>' → logprob: -16.779752731323242
    10. ')' → logprob: -17.154752731323242

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.125141143798828
    4. '>' → logprob: -15.625141143798828
    5. '  ' → logprob: -15.750141143798828
    6. '```' → logprob: -15.750141143798828
    7. ' ' → logprob: -17.250141143798828
    8. '<|end|>' → logprob: -17.625141143798828
    9. '2' → logprob: -18.187641143798828
    10. '۱' → logprob: -18.250141143798828

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.022600708529353142
    2. ')' → logprob: -4.1476006507873535
    3. ' ' → logprob: -6.1476006507873535
    4. 'for' → logprob: -6.3976006507873535
    5. '):' → logprob: -6.6476006507873535
    6. ' or' → logprob: -6.7726006507873535
    7. ' )' → logprob: -8.397601127624512
    8. ' ):' → logprob: -10.397601127624512
    9. '	for' → logprob: -11.397601127624512
    10. '  ' → logprob: -11.647601127624512

Token 91: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.05490800738334656
    2. 'digits' → logprob: -2.929908037185669
    3. ' pos' → logprob: -11.55490779876709
    4. 'pos' → logprob: -12.55490779876709
    5. ' digit' → logprob: -12.80490779876709
    6. 'd' → logprob: -12.80490779876709
    7. '_digits' → logprob: -12.92990779876709
    8. 'digit' → logprob: -13.30490779876709
    9. ' ' → logprob: -14.30490779876709
    10. 'Digits' → logprob: -14.55490779876709

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024257178883999586
    2. 'in' → logprob: -6.127425670623779
    3. 'pos' → logprob: -8.377426147460938
    4. ' pos' → logprob: -12.002426147460938
    5. ')' → logprob: -13.627426147460938
    6. ' ' → logprob: -13.752426147460938
    7. ',pos' → logprob: -14.502426147460938
    8. '(pos' → logprob: -15.252426147460938
    9. '_pos' → logprob: -15.377426147460938
    10. ',' → logprob: -15.752426147460938

Token 93: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.1797490119934082
    2. 'pos' → logprob: -1.8047490119934082
    3. '	pos' → logprob: -13.55474853515625
    4. ' ' → logprob: -14.17974853515625
    5. '(pos' → logprob: -14.30474853515625
    6. '[pos' → logprob: -14.80474853515625
    7. ')' → logprob: -14.92974853515625
    8. '_pos' → logprob: -15.05474853515625
    9. ',pos' → logprob: -15.42974853515625
    10. '.pos' → logprob: -15.42974853515625

Token 94: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -5.9153885558771435e-06
    2. 'constraints' → logprob: -12.875005722045898
    3. '_constraint' → logprob: -13.625005722045898
    4. '_const' → logprob: -14.625005722045898
    5. 'Constraints' → logprob: -14.875005722045898
    6. ' constraints' → logprob: -15.625005722045898
    7. '_constants' → logprob: -16.0000057220459
    8. '_cons' → logprob: -16.0000057220459
    9. '_' → logprob: -16.1250057220459
    10. '```' → logprob: -16.1250057220459

Token 95: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -5.300083648762666e-05
    2. 'values' → logprob: -10.500053405761719
    3. '.' → logprob: -10.875053405761719
    4. ')' → logprob: -12.250053405761719
    5. ' .' → logprob: -13.625053405761719
    6. '.value' → logprob: -15.625053405761719
    7. ' values' → logprob: -16.62505340576172
    8. '.items' → logprob: -16.75005340576172
    9. '.Values' → logprob: -17.00005340576172
    10. '	values' → logprob: -17.87505340576172

Token 96: '()):
' (ID: 83536)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07834597676992416
    2. '):' → logprob: -2.828346014022827
    3. '():' → logprob: -4.203345775604248
    4. '()):
' → logprob: -6.953345775604248
    5. ')' → logprob: -8.703346252441406
    6. '())' → logprob: -9.828346252441406
    7. '(' → logprob: -10.328346252441406
    8. ' ):' → logprob: -10.578346252441406
    9. ' (' → logprob: -10.703346252441406
    10. '):
' → logprob: -11.203346252441406

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011990458704531193
    2. 'print' → logprob: -4.886990547180176
    3. ' print' → logprob: -5.511990547180176
    4. '```' → logprob: -9.511990547180176
    5. '
' → logprob: -9.636990547180176
    6. ':
' → logprob: -10.136990547180176
    7. '    
' → logprob: -10.261990547180176
    8. '	print' → logprob: -10.386990547180176
    9. 'exit' → logprob: -10.761990547180176
    10. '\n' → logprob: -10.761990547180176

Token 98: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09136228263378143
    2. ' print' → logprob: -2.966362237930298
    3. '   ' → logprob: -3.341362237930298
    4. '```' → logprob: -9.216361999511719
    5. '    ' → logprob: -9.341361999511719
    6. '0' → logprob: -9.341361999511719
    7. ' ' → logprob: -9.966361999511719
    8. '	print' → logprob: -10.341361999511719
    9. '
' → logprob: -10.966361999511719
    10. '-' → logprob: -11.216361999511719

Token 99: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.06540103256702423
    2. '(' → logprob: -2.940401077270508
    3. '-' → logprob: -4.940401077270508
    4. '("-' → logprob: -6.065401077270508
    5. '0' → logprob: -7.190401077270508
    6. '("' → logprob: -9.065401077270508
    7. '('-' → logprob: -10.190401077270508
    8. '(
' → logprob: -10.440401077270508
    9. '('' → logprob: -11.440401077270508
    10. '()' → logprob: -11.940401077270508

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -12.875003814697266
    3. ' ' → logprob: -15.000003814697266
    4. '11' → logprob: -15.437503814697266
    5. '10' → logprob: -15.750003814697266
    6. ')' → logprob: -16.875003814697266
    7. 'int' → logprob: -16.937503814697266
    8. '```' → logprob: -16.937503814697266
    9. '12' → logprob: -17.062503814697266
    10. '18' → logprob: -17.062503814697266

Token 101: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07898672670125961
    2. ')' → logprob: -2.578986644744873
    3. ')
' → logprob: -9.453987121582031
    4. ' )
' → logprob: -11.078987121582031
    5. ' )' → logprob: -13.328987121582031
    6. ')return' → logprob: -14.203987121582031
    7. '')
' → logprob: -15.578987121582031
    8. ')`
' → logprob: -15.703987121582031
    9. ')

' → logprob: -16.45398712158203
    10. '   ' → logprob: -16.57898712158203

Token 102: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0033643851056694984
    2. '   ' → logprob: -5.878364562988281
    3. 'elif' → logprob: -7.628364562988281
    4. ' else' → logprob: -10.003364562988281
    5. '```' → logprob: -11.628364562988281
    6. '
' → logprob: -12.003364562988281
    7. 'exit' → logprob: -12.003364562988281
    8. '    
' → logprob: -13.253364562988281
    9. ')' → logprob: -13.878364562988281
    10. '<|end|>' → logprob: -14.128364562988281

Token 103: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03408879041671753
    2. 'exit' (adapté à ' exit') → logprob: -3.5340888500213623
    3. '
' → logprob: -6.534088611602783
    4. '   ' → logprob: -6.534088611602783
    5. 'elif' → logprob: -7.159088611602783
    6. ' else' → logprob: -8.034089088439941
    7. ' exit' → logprob: -8.909089088439941
    8. '	exit' → logprob: -8.909089088439941
    9. '    
' → logprob: -10.909089088439941
    10. '```' → logprob: -11.284089088439941

Token 104: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004237627435941249
    2. '(' → logprob: -7.875423908233643
    3. '()
' → logprob: -10.125423431396484
    4. '()\' → logprob: -13.250423431396484
    5. '())' → logprob: -14.750423431396484
    6. '()]' → logprob: -15.000423431396484
    7. '0' → logprob: -15.125423431396484
    8. '()

' → logprob: -15.125423431396484
    9. '()`' → logprob: -15.625423431396484
    10. '()(' → logprob: -16.000423431396484

Token 105: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9316102862358093
    2. 'ans' → logprob: -1.181610345840454
    3. 'res' → logprob: -1.806610345840454
    4. 'number' → logprob: -2.806610345840454
    5. 'answer' → logprob: -3.181610345840454
    6. 'num' → logprob: -3.931610345840454
    7. 'digits' → logprob: -4.806610107421875
    8. 'password' → logprob: -6.306610107421875
    9. 's' → logprob: -6.681610107421875
    10. 'code' → logprob: -6.806610107421875

Token 106: ' Gén' (ID: 71828)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8267611265182495
    2. 'result' → logprob: -1.3267611265182495
    3. 'number' → logprob: -1.9517611265182495
    4. 'ans' → logprob: -2.451761245727539
    5. 'answer' → logprob: -3.826761245727539
    6. 'digits' → logprob: -4.076761245727539
    7. 'num' → logprob: -4.201761245727539
    8. 'password' → logprob: -4.951761245727539
    9. 'code' → logprob: -5.951761245727539
    10. 'solution' → logprob: -6.951761245727539

Token 107: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8509299159049988
    2. 'érer' → logprob: -0.9759299159049988
    3. '#' → logprob: -2.7259299755096436
    4. '_number' → logprob: -3.6009299755096436
    5. 'result' → logprob: -4.3509297370910645
    6. 'res' → logprob: -4.6009297370910645
    7. 'number' → logprob: -4.7259297370910645
    8. 'rate' → logprob: -4.7259297370910645
    9. '_code' → logprob: -4.8509297370910645
    10. 'eral' → logprob: -5.1009297370910645

Token 108: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5315846800804138
    2. 'number' → logprob: -1.9065847396850586
    3. ' the' → logprob: -2.9065847396850586
    4. 'res' → logprob: -3.2815847396850586
    5. 'the' → logprob: -3.4065847396850586
    6. 'ans' → logprob: -3.7815847396850586
    7. 'answer' → logprob: -4.156584739685059
    8. ' result' → logprob: -4.156584739685059
    9. ' number' → logprob: -4.406584739685059
    10. ' le' → logprob: -4.656584739685059

Token 109: ' solution' (ID: 7578)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24663054943084717
    2. 'number' → logprob: -2.2466306686401367
    3. 'answer' → logprob: -2.4966306686401367
    4. 'ans' → logprob: -5.246630668640137
    5. 'num' → logprob: -5.246630668640137
    6. 'digits' → logprob: -5.246630668640137
    7. 'code' → logprob: -5.371630668640137
    8. 'res' → logprob: -6.121630668640137
    9. 's' → logprob: -6.121630668640137
    10. 'min' → logprob: -6.621630668640137

Token 110: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6277890801429749
    2. 'res' → logprob: -1.25278902053833
    3. 'number' → logprob: -2.50278902053833
    4. 'ans' → logprob: -3.00278902053833
    5. 'answer' → logprob: -3.87778902053833
    6. 'solution' → logprob: -4.25278902053833
    7. 'num' → logprob: -4.87778902053833
    8. 'digits' → logprob: -5.87778902053833
    9. 'for' → logprob: -6.12778902053833
    10. '```' → logprob: -7.37778902053833

Token 111: 'num' (ID: 4571)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4989350140094757
    2. 'res' → logprob: -1.1239349842071533
    3. 'ans' → logprob: -2.9989349842071533
    4. 'answer' → logprob: -4.498935222625732
    5. 'solution' → logprob: -5.373935222625732
    6. 'number' → logprob: -6.623935222625732
    7. 'digits' → logprob: -7.623935222625732
    8. '```' → logprob: -8.873934745788574
    9. 'for' → logprob: -9.123934745788574
    10. 'num' → logprob: -9.623934745788574

Token 112: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30203139781951904
    2. '=' → logprob: -2.0520315170288086
    3. ' =' → logprob: -2.0520315170288086
    4. 'ber' → logprob: -5.802031517028809
    5. '=[]' → logprob: -8.302031517028809
    6. 'bers' → logprob: -8.802031517028809
    7. '_chars' → logprob: -9.802031517028809
    8. '=[' → logprob: -10.677031517028809
    9. '=s' → logprob: -10.802031517028809
    10. '_s' → logprob: -10.802031517028809

Token 113: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43646642565727234
    2. '[' → logprob: -1.6864664554595947
    3. '['' → logprob: -1.8114664554595947
    4. '["' → logprob: -5.436466217041016
    5. '[-' → logprob: -8.061466217041016
    6. '[]
' → logprob: -8.561466217041016
    7. '0' → logprob: -10.061466217041016
    8. '[:]' → logprob: -10.061466217041016
    9. ' [' → logprob: -10.686466217041016
    10. '[n' → logprob: -10.811466217041016

Token 114: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004414332564920187
    2. '-' → logprob: -5.8794145584106445
    3. ''' → logprob: -7.5044145584106445
    4. 'None' → logprob: -7.6294145584106445
    5. '1' → logprob: -7.8794145584106445
    6. ' ' → logprob: -9.504414558410645
    7. ' -' → logprob: -10.254414558410645
    8. '9' → logprob: -10.379414558410645
    9. 'str' → logprob: -11.254414558410645
    10. '   ' → logprob: -11.629414558410645

Token 115: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10294647514820099
    2. ' for' → logprob: -2.4779465198516846
    3. 'for' → logprob: -4.8529462814331055
    4. ']*' → logprob: -5.8529462814331055
    5. ' ]' → logprob: -6.2279462814331055
    6. '()]' → logprob: -7.4779462814331055
    7. '()' → logprob: -7.8529462814331055
    8. ')' → logprob: -8.852946281433105
    9. ']*(' → logprob: -9.977946281433105
    10. ' if' → logprob: -10.102946281433105

Token 116: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5195103883743286
    2. ' for' → logprob: -1.1445103883743286
    3. 'for' → logprob: -3.144510269165039
    4. ']*' → logprob: -3.144510269165039
    5. 'm' → logprob: -8.394510269165039
    6. ' ]' → logprob: -9.769510269165039
    7. ']*(' → logprob: -9.769510269165039
    8. '0' → logprob: -10.019510269165039
    9. '*m' → logprob: -10.769510269165039
    10. ' m' → logprob: -10.769510269165039

Token 117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.5577775128767826e-06
    2. ' n' → logprob: -12.125005722045898
    3. '(n' → logprob: -19.3750057220459
    4. '	n' → logprob: -19.5000057220459
    5. '   ' → logprob: -21.2500057220459
    6. ')n' → logprob: -21.7500057220459
    7. '_n' → logprob: -22.0000057220459
    8. '0' → logprob: -22.3750057220459
    9. 'int' → logprob: -22.6250057220459
    10. '
' → logprob: -22.6250057220459

Token 118: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001818489981815219
    2. ' for' → logprob: -8.625182151794434
    3. '
' → logprob: -13.500182151794434
    4. 'if' → logprob: -15.125182151794434
    5. '```' → logprob: -15.125182151794434
    6. '<|end|>' → logprob: -15.875182151794434
    7. '0' → logprob: -16.625181198120117
    8. '	for' → logprob: -17.625181198120117
    9. 's' → logprob: -17.875181198120117
    10. '#' → logprob: -18.000181198120117

Token 119: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6240566083070007e-06
    2. ' for' → logprob: -13.375001907348633
    3. 'if' → logprob: -19.125001907348633
    4. '	for' → logprob: -20.250001907348633
    5. 'valid' → logprob: -20.250001907348633
    6. '0' → logprob: -20.500001907348633
    7. '```' → logprob: -20.750001907348633
    8. 'def' → logprob: -20.875001907348633
    9. '#' → logprob: -21.250001907348633
    10. 'pos' → logprob: -21.375001907348633

Token 120: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012670095078647137
    2. 'pos' → logprob: -5.012670040130615
    3. ' i' → logprob: -5.137670040130615
    4. ' pos' → logprob: -10.012670516967773
    5. 'idx' → logprob: -11.012670516967773
    6. '```' → logprob: -13.637670516967773
    7. 'index' → logprob: -14.512670516967773
    8. '	i' → logprob: -14.637670516967773
    9. ' ' → logprob: -15.012670516967773
    10. '   ' → logprob: -15.137670516967773

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013213884085416794
    2. 'in' → logprob: -4.388214111328125
    3. ',' → logprob: -7.388214111328125
    4. ' ' → logprob: -9.513214111328125
    5. ' ,' → logprob: -11.638214111328125
    6. 'range' → logprob: -14.263214111328125
    7. ' ' → logprob: -14.513214111328125
    8. 'n' → logprob: -14.763214111328125
    9. '	in' → logprob: -15.513214111328125
    10. 'import' → logprob: -15.638214111328125

Token 122: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975199744105339
    2. ' range' → logprob: -3.529752016067505
    3. '(range' → logprob: -14.154751777648926
    4. '	range' → logprob: -14.529751777648926
    5. ')' → logprob: -16.029752731323242
    6. ' ' → logprob: -16.529752731323242
    7. '```' → logprob: -17.154752731323242
    8. '.range' → logprob: -17.654752731323242
    9. 'ran' → logprob: -17.779752731323242
    10. 'rang' → logprob: -17.779752731323242

Token 123: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021855637896806002
    2. 'n' → logprob: -8.750218391418457
    3. '(' → logprob: -9.750218391418457
    4. ')' → logprob: -14.375218391418457
    5. ' n' → logprob: -14.625218391418457
    6. '(len' → logprob: -15.125218391418457
    7. ')n' → logprob: -15.375218391418457
    8. '(
' → logprob: -15.750218391418457
    9. ',n' → logprob: -17.375219345092773
    10. ' (' → logprob: -17.500219345092773

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06230287253856659
    2. '):
' → logprob: -2.812302827835083
    3. ')' → logprob: -8.437302589416504
    4. '):
' → logprob: -9.312302589416504
    5. ' ):' → logprob: -11.062302589416504
    6. '):

' → logprob: -11.937302589416504
    7. ':' → logprob: -12.437302589416504
    8. ' ):
' → logprob: -13.687302589416504
    9. ']:' → logprob: -15.562302589416504
    10. ' ' → logprob: -15.937302589416504

Token 125: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0178815126419067
    2. '   ' → logprob: -1.1428815126419067
    3. ' if' → logprob: -1.1428815126419067
    4. 'num' → logprob: -8.017881393432617
    5. 'digit' → logprob: -9.017881393432617
    6. ' ' → logprob: -9.392881393432617
    7. ':' → logprob: -9.767881393432617
    8. ' num' → logprob: -9.892881393432617
    9. 'digits' → logprob: -10.267881393432617
    10. '	if' → logprob: -10.267881393432617

Token 126: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014505907893180847
    2. '   ' → logprob: -7.501450538635254
    3. 'digits' → logprob: -7.626450538635254
    4. ' if' → logprob: -7.876450538635254
    5. 'allowed' → logprob: -11.126450538635254
    6. 'digit' → logprob: -12.501450538635254
    7. 'possible' → logprob: -12.626450538635254
    8. 'available' → logprob: -13.001450538635254
    9. 'd' → logprob: -13.126450538635254
    10. 'constraints' → logprob: -13.376450538635254

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048892900347709656
    2. ' i' → logprob: -3.0488929748535156
    3. 'pos' → logprob: -8.298892974853516
    4. ' pos' → logprob: -10.423892974853516
    5. '   ' → logprob: -11.673892974853516
    6. ' ' → logprob: -11.923892974853516
    7. '(i' → logprob: -12.923892974853516
    8. 'len' → logprob: -13.173892974853516
    9. '	i' → logprob: -13.548892974853516
    10. '  ' → logprob: -13.798892974853516

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06225715950131416
    2. 'in' → logprob: -2.8122570514678955
    3. ' ' → logprob: -8.687256813049316
    4. ' not' → logprob: -9.687256813049316
    5. 'not' → logprob: -11.187256813049316
    6. ')' → logprob: -11.437256813049316
    7. ']' → logprob: -11.687256813049316
    8. ' i' → logprob: -12.187256813049316
    9. '<|end|>' → logprob: -12.812256813049316
    10. 'n' → logprob: -12.937256813049316

Token 129: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0067156096920371056
    2. ' pos' → logprob: -5.006715774536133
    3. '	pos' → logprob: -16.256715774536133
    4. '_pos' → logprob: -17.256715774536133
    5. 'position' → logprob: -17.381715774536133
    6. '[pos' → logprob: -17.756715774536133
    7. '(pos' → logprob: -17.881715774536133
    8. '.pos' → logprob: -19.131715774536133
    9. '   ' → logprob: -19.631715774536133
    10. ',pos' → logprob: -19.756715774536133

Token 130: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -1.4498052223643754e-05
    2. 'constraints' → logprob: -11.500014305114746
    3. 'Constraints' → logprob: -13.375014305114746
    4. '_cons' → logprob: -14.500014305114746
    5. '_const' → logprob: -15.000014305114746
    6. ' constraints' → logprob: -15.125014305114746
    7. '_' → logprob: -15.250014305114746
    8. '_constraint' → logprob: -15.250014305114746
    9. '_pos' → logprob: -15.250014305114746
    10. '-_' → logprob: -15.500014305114746

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018323305994272232
    2. ':
' → logprob: -4.0183234214782715
    3. ' and' → logprob: -9.268322944641113
    4. ' :' → logprob: -10.018322944641113
    5. '):' → logprob: -11.518322944641113
    6. 'and' → logprob: -12.268322944641113
    7. '):
' → logprob: -12.643322944641113
    8. '>:' → logprob: -13.018322944641113
    9. '<|end|>' → logprob: -13.143322944641113
    10. ']:' → logprob: -13.143322944641113

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6737739443778992
    2. '   ' → logprob: -1.298774003982544
    3. ':' → logprob: -2.298774003982544
    4. ':
' → logprob: -2.298774003982544
    5. 'num' → logprob: -5.798773765563965
    6. '
' → logprob: -6.048773765563965
    7. ' num' → logprob: -6.298773765563965
    8. ' ' → logprob: -6.298773765563965
    9. '    
' → logprob: -6.298773765563965
    10. '):
' → logprob: -6.423773765563965

Token 133: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.04375267028808594
    2. '   ' → logprob: -3.793752670288086
    3. ' num' → logprob: -4.418752670288086
    4. 'digit' → logprob: -5.543752670288086
    5. 'digits' → logprob: -5.668752670288086
    6. 'nums' → logprob: -8.418752670288086
    7. ' digit' → logprob: -8.668752670288086
    8. ' ' → logprob: -8.918752670288086
    9. ' digits' → logprob: -9.168752670288086
    10. '[num' → logprob: -9.293752670288086

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '[I' → logprob: -15.750000953674316
    4. ' =' → logprob: -16.125001907348633
    5. '```' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '][' → logprob: -16.750001907348633
    8. '[
' → logprob: -17.125001907348633
    9. '=' → logprob: -17.250001907348633
    10. '[num' → logprob: -17.625001907348633

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021138587035238743
    2. ']=' → logprob: -6.2521138191223145
    3. '=' → logprob: -9.252114295959473
    4. ' ]' → logprob: -9.877114295959473
    5. ' =' → logprob: -10.502114295959473
    6. ')' → logprob: -11.877114295959473
    7. '[' → logprob: -13.002114295959473
    8. ' ' → logprob: -15.752114295959473
    9. '   ' → logprob: -15.877114295959473
    10. ')=' → logprob: -16.252113342285156

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16032952070236206
    2. ' =' → logprob: -1.9103295803070068
    3. '=list' → logprob: -9.285329818725586
    4. '[' → logprob: -12.660329818725586
    5. '=int' → logprob: -12.660329818725586
    6. '=

' → logprob: -13.910329818725586
    7. ' ' → logprob: -14.035329818725586
    8. '=num' → logprob: -14.035329818725586
    9. ')=' → logprob: -14.660329818725586
    10. ']=' → logprob: -14.660329818725586

Token 137: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.23239225149154663
    2. 'list' → logprob: -2.2323923110961914
    3. ' next' → logprob: -2.6073923110961914
    4. 'pos' → logprob: -3.8573923110961914
    5. ' list' → logprob: -5.732392311096191
    6. 'str' → logprob: -7.107392311096191
    7. 'min' → logprob: -7.107392311096191
    8. ' pos' → logprob: -8.107392311096191
    9. ' min' → logprob: -10.732392311096191
    10. ' str' → logprob: -10.732392311096191

Token 138: '(iter' (ID: 61014)
  Prédit: '(iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(iter' → logprob: -5.1689596148207784e-05
    2. 'iter' → logprob: -9.875051498413086
    3. ' iter' → logprob: -16.250051498413086
    4. '	iter' → logprob: -16.500051498413086
    5. '   ' → logprob: -19.000051498413086
    6. '(' → logprob: -19.750051498413086
    7. '
' → logprob: -20.375051498413086
    8. '(i' → logprob: -20.375051498413086
    9. '.iter' → logprob: -21.125051498413086
    10. '(
' → logprob: -21.250051498413086

Token 139: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.011084253899753094
    2. 'pos' → logprob: -4.511084079742432
    3. ' pos' → logprob: -10.26108455657959
    4. '(' → logprob: -14.63608455657959
    5. ',pos' → logprob: -14.63608455657959
    6. '	pos' → logprob: -15.26108455657959
    7. '[pos' → logprob: -15.51108455657959
    8. '_pos' → logprob: -16.011083602905273
    9. '.pos' → logprob: -17.761083602905273
    10. 'Pos' → logprob: -18.136083602905273

Token 140: '_constraints' (ID: 153522)
  Prédit: '_constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_constraints' → logprob: -0.0005406428826972842
    2. 'constraints' → logprob: -7.875540733337402
    3. 'Constraints' → logprob: -9.875540733337402
    4. '(pos' → logprob: -10.625540733337402
    5. '_constraint' → logprob: -10.750540733337402
    6. 's' → logprob: -10.875540733337402
    7. '[pos' → logprob: -11.750540733337402
    8. '_pos' → logprob: -12.375540733337402
    9. ' constraints' → logprob: -12.375540733337402
    10. 'const' → logprob: -12.625540733337402

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023443112149834633
    2. '[pos' → logprob: -3.7734432220458984
    3. '[num' → logprob: -8.648443222045898
    4. '[' → logprob: -11.273443222045898
    5. ')[' → logprob: -12.148443222045898
    6. 'pos' → logprob: -13.273443222045898
    7. ' [' → logprob: -14.648443222045898
    8. '[
' → logprob: -14.773443222045898
    9. '[idx' → logprob: -15.398443222045898
    10. 's' → logprob: -15.523443222045898

Token 142: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004664015024900436
    2. ']))' → logprob: -5.504663944244385
    3. '))
' → logprob: -8.254664421081543
    4. ')))' → logprob: -8.629664421081543
    5. '}))' → logprob: -9.504664421081543
    6. ' ))' → logprob: -10.254664421081543
    7. ')' → logprob: -11.504664421081543
    8. '()))' → logprob: -12.129664421081543
    9. '']))' → logprob: -12.254664421081543
    10. ']))
' → logprob: -12.379664421081543

Token 143: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.42708149552345276
    2. '   ' → logprob: -1.1770814657211304
    3. ' else' → logprob: -3.30208158493042
    4. 'elif' → logprob: -6.05208158493042
    5. ' elif' → logprob: -9.177081108093262
    6. '	else' → logprob: -9.427081108093262
    7. '<|end|>' → logprob: -10.177081108093262
    8. '	elif' → logprob: -11.552081108093262
    9. '
' → logprob: -11.927081108093262
    10. ' ' → logprob: -12.677081108093262

Token 144: ' Gestion' (ID: 109866)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.163018599152565
    2. 'else' → logprob: -2.1630187034606934
    3. ' for' → logprob: -3.5380187034606934
    4. ' else' → logprob: -5.663018703460693
    5. 'if' → logprob: -6.413018703460693
    6. 'elif' → logprob: -6.913018703460693
    7. '#' → logprob: -9.538018226623535
    8. '   ' → logprob: -9.663018226623535
    9. ' ' → logprob: -10.288018226623535
    10. ' elif' → logprob: -10.913018226623535

Token 145: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05972285568714142
    2. ' if' → logprob: -3.684722900390625
    3. ' du' → logprob: -4.184722900390625
    4. ' de' → logprob: -4.934722900390625
    5. ' for' → logprob: -5.434722900390625
    6. 'des' → logprob: -6.309722900390625
    7. ' of' → logprob: -6.559722900390625
    8. '   ' → logprob: -7.059722900390625
    9. 'if' → logprob: -7.434722900390625
    10. 'for' → logprob: -7.809722900390625

Token 146: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.367304265499115
    2. 'cas' → logprob: -1.7423043251037598
    3. '0' → logprob: -3.1173043251037598
    4. ' premier' → logprob: -3.2423043251037598
    5. 'for' → logprob: -3.7423043251037598
    6. ' cas' → logprob: -4.36730432510376
    7. 'first' → logprob: -5.24230432510376
    8. '```' → logprob: -6.74230432510376
    9. 'code' → logprob: -7.24230432510376
    10. 'dé' → logprob: -7.36730432510376

Token 147: ' chiffre' (ID: 107420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.148528590798378
    2. 'i' → logprob: -3.273528575897217
    3. 'else' → logprob: -3.523528575897217
    4. ' if' → logprob: -3.898528575897217
    5. 'for' → logprob: -3.898528575897217
    6. 'elif' → logprob: -4.648528575897217
    7. ' i' → logprob: -4.773528575897217
    8. 'digit' → logprob: -6.023528575897217
    9. 'élé' → logprob: -6.523528575897217
    10. ' for' → logprob: -7.023528575897217

Token 148: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019404089078307152
    2. ' if' → logprob: -4.01940393447876
    3. 'for' → logprob: -7.14440393447876
    4. '   ' → logprob: -7.76940393447876
    5. ' for' → logprob: -10.394404411315918
    6. '
' → logprob: -12.644404411315918
    7. 'else' → logprob: -12.644404411315918
    8. ',' → logprob: -13.769404411315918
    9. '    
' → logprob: -14.269404411315918
    10. 'elif' → logprob: -14.519404411315918

Token 149: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46277540922164917
    2. 'if' → logprob: -1.337775468826294
    3. ' if' → logprob: -2.462775468826294
    4. ')
' → logprob: -4.087775230407715
    5. '0' → logprob: -5.837775230407715
    6. ' )' → logprob: -6.962775230407715
    7. ' for' → logprob: -7.837775230407715
    8. '):' → logprob: -7.837775230407715
    9. ' ' → logprob: -8.087775230407715
    10. '   ' → logprob: -8.337775230407715

Token 150: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.314330816268921
    2. ' de' → logprob: -1.689330816268921
    3. ' zero' → logprob: -2.314330816268921
    4. ' pour' → logprob: -2.439330816268921
    5. ' en' → logprob: -2.689330816268921
    6. ' for' → logprob: -3.439330816268921
    7. '0' → logprob: -3.439330816268921
    8. ' zéro' → logprob: -3.564330816268921
    9. 'de' → logprob: -3.689330816268921
    10. '   ' → logprob: -3.814330816268921

Token 151: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1795581579208374
    2. ' ' → logprob: -2.429558277130127
    3. ' zero' → logprob: -2.679558277130127
    4. 'zero' → logprob: -5.304558277130127
    5. ' zéro' → logprob: -6.179558277130127
    6. ' num' → logprob: -7.929558277130127
    7. ' leading' → logprob: -8.804557800292969
    8. 'num' → logprob: -9.679557800292969
    9. ' ' → logprob: -10.804557800292969
    10. '   ' → logprob: -11.679557800292969

Token 152: ' en' (ID: 469)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3675956428050995
    2. 'if' → logprob: -1.3675956726074219
    3. ')' → logprob: -3.117595672607422
    4. ' and' → logprob: -5.367595672607422
    5. ' )' → logprob: -6.867595672607422
    6. ' or' → logprob: -7.367595672607422
    7. '   ' → logprob: -7.742595672607422
    8. ' for' → logprob: -8.117595672607422
    9. '):' → logprob: -8.117595672607422
    10. 'and' → logprob: -8.242595672607422

Token 153: ' tête' (ID: 36447)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.06507313996553421
    2. 'position' → logprob: -3.940073251724243
    3. ' première' → logprob: -4.065073013305664
    4. 'num' → logprob: -4.815073013305664
    5. 't' → logprob: -5.065073013305664
    6. 'first' → logprob: -5.315073013305664
    7. ' tête' → logprob: -6.190073013305664
    8. 'leading' → logprob: -7.065073013305664
    9. 'dé' → logprob: -7.065073013305664
    10. ' premier' → logprob: -7.315073013305664

Token 154: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4035063683986664
    2. 'if' → logprob: -1.6535063982009888
    3. ' if' → logprob: -2.028506278991699
    4. ')
' → logprob: -5.028506278991699
    5. ' )' → logprob: -7.028506278991699
    6. ',' → logprob: -7.153506278991699
    7. '   ' → logprob: -7.278506278991699
    8. 'for' → logprob: -10.4035062789917
    9. ' for' → logprob: -10.5285062789917
    10. ' )
' → logprob: -10.5285062789917

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07089825719594955
    2. ' n' → logprob: -2.6958982944488525
    3. 'num' → logprob: -7.320898056030273
    4. 'i' → logprob: -8.820898056030273
    5. ' num' → logprob: -10.070898056030273
    6. ')' → logprob: -10.320898056030273
    7. ' i' → logprob: -10.320898056030273
    8. '   ' → logprob: -11.445898056030273
    9. ' ' → logprob: -11.945898056030273
    10. ' ' → logprob: -12.195898056030273

Token 156: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05498158186674118
    2. ' >' → logprob: -2.9299814701080322
    3. ')' → logprob: -9.804981231689453
    4. ' ' → logprob: -11.304981231689453
    5. '!=' → logprob: -12.054981231689453
    6. ' !=' → logprob: -12.054981231689453
    7. '==' → logprob: -12.304981231689453
    8. '
' → logprob: -12.429981231689453
    9. '```' → logprob: -12.804981231689453
    10. ')>' → logprob: -13.179981231689453

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.000049591064453
    3. '>' → logprob: -13.000049591064453
    4. '=' → logprob: -14.000049591064453
    5. '```' → logprob: -15.375049591064453
    6. '
' → logprob: -15.500049591064453
    7. '   ' → logprob: -15.750049591064453
    8. ')' → logprob: -16.750049591064453
    9. '0' → logprob: -17.250049591064453
    10. '!' → logprob: -17.625049591064453

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.125001907348633
    4. '0' → logprob: -16.375001907348633
    5. '
' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '>' → logprob: -16.875001907348633
    8. '１' → logprob: -16.875001907348633
    9. '=' → logprob: -17.875001907348633
    10. '

' → logprob: -18.375001907348633

Token 159: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47532331943511963
    2. ')' → logprob: -0.9753233194351196
    3. ' )
' → logprob: -7.47532320022583
    4. 'if' → logprob: -8.725323677062988
    5. ' )' → logprob: -8.850323677062988
    6. '   ' → logprob: -8.850323677062988
    7. ' if' → logprob: -8.975323677062988
    8. ')

' → logprob: -10.225323677062988
    9. ',' → logprob: -10.225323677062988
    10. ')
' → logprob: -11.475323677062988

Token 160: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006972290575504303
    2. ' if' → logprob: -5.256972312927246
    3. 'for' → logprob: -6.506972312927246
    4. '   ' → logprob: -8.381972312927246
    5. ' for' → logprob: -11.381972312927246
    6. 'i' → logprob: -13.131972312927246
    7. '```' → logprob: -14.381972312927246
    8. ' ' → logprob: -15.131972312927246
    9. '    
' → logprob: -15.631972312927246
    10. 'elif' → logprob: -15.756972312927246

Token 161: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5242607593536377
    2. ' n' → logprob: -0.8992607593536377
    3. 'num' → logprob: -6.899260520935059
    4. ' num' → logprob: -9.024260520935059
    5. ' ' → logprob: -13.399260520935059
    6. '   ' → logprob: -13.524260520935059
    7. '	n' → logprob: -13.649260520935059
    8. '(n' → logprob: -13.774260520935059
    9. 'len' → logprob: -14.024260520935059
    10. ' ' → logprob: -14.899260520935059

Token 162: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42948445677757263
    2. '>' → logprob: -1.054484486579895
    3. ' ==' → logprob: -7.9294843673706055
    4. '==' → logprob: -8.054484367370605
    5. ' ' → logprob: -9.554484367370605
    6. '=' → logprob: -10.929484367370605
    7. ' !=' → logprob: -12.554484367370605
    8. '1' → logprob: -12.679484367370605
    9. ')' → logprob: -13.054484367370605
    10. ' ' → logprob: -13.679484367370605

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01251271367073059
    2. ' ' → logprob: -4.387512683868408
    3. '2' → logprob: -13.762513160705566
    4. '   ' → logprob: -14.137513160705566
    5. '0' → logprob: -15.262513160705566
    6. '  ' → logprob: -15.262513160705566
    7. '>' → logprob: -15.262513160705566
    8. '=' → logprob: -15.887513160705566
    9. ' ' → logprob: -16.57501220703125
    10. '
' → logprob: -16.95001220703125

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.75002670288086
    4. '>' → logprob: -14.75002670288086
    5. '
' → logprob: -15.75002670288086
    6. '0' → logprob: -16.00002670288086
    7. '```' → logprob: -16.00002670288086
    8. '=' → logprob: -16.50002670288086
    9. '2' → logprob: -16.75002670288086
    10. '  ' → logprob: -17.00002670288086

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14648374915122986
    2. ':
' → logprob: -2.1464836597442627
    3. ' and' → logprob: -4.396483898162842
    4. 'and' → logprob: -5.521483898162842
    5. ' :' → logprob: -6.021483898162842
    6. ' :
' → logprob: -8.396483421325684
    7. '   ' → logprob: -8.771483421325684
    8. ':num' → logprob: -8.896483421325684
    9. ' ' → logprob: -10.021483421325684
    10. ':return' → logprob: -11.146483421325684

Token 166: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.058654479682445526
    2. '   ' → logprob: -2.933654546737671
    3. 'num' → logprob: -6.058654308319092
    4. ' if' → logprob: -7.308654308319092
    5. 'print' → logprob: -7.933654308319092
    6. 'for' → logprob: -8.05865478515625
    7. 'pass' → logprob: -9.80865478515625
    8. '#' → logprob: -11.18365478515625
    9. '    
' → logprob: -12.80865478515625
    10. ' num' → logprob: -13.30865478515625

Token 167: ' num' (ID: 2269)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021105000749230385
    2. 'num' (adapté à ' num') → logprob: -4.14610481262207
    3. '   ' → logprob: -6.02110481262207
    4. 'print' → logprob: -6.39610481262207
    5. 'pass' → logprob: -7.77110481262207
    6. 'for' → logprob: -8.02110481262207
    7. ' if' → logprob: -8.77110481262207
    8. '#' → logprob: -10.77110481262207
    9. '    
' → logprob: -11.89610481262207
    10. 'continue' → logprob: -11.89610481262207

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001911384635604918
    2. '=' → logprob: -6.501911163330078
    3. '[i' → logprob: -8.251911163330078
    4. ' =' → logprob: -9.626911163330078
    5. '[num' → logprob: -10.001911163330078
    6. '=[' → logprob: -11.376911163330078
    7. '==' → logprob: -11.751911163330078
    8. '[-' → logprob: -12.126911163330078
    9. 'num' → logprob: -13.376911163330078
    10. ' [' → logprob: -13.376911163330078

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021807955636177212
    2. 'i' → logprob: -8.625218391418457
    3. ' ' → logprob: -10.500218391418457
    4. ']' → logprob: -12.750218391418457
    5. '-' → logprob: -12.875218391418457
    6. '   ' → logprob: -13.250218391418457
    7. 'n' → logprob: -13.375218391418457
    8. ')' → logprob: -15.062718391418457
    9. '[' → logprob: -15.187718391418457
    10. '1' → logprob: -15.312718391418457

Token 170: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05287537723779678
    2. ' =' → logprob: -3.052875280380249
    3. ')' → logprob: -6.052875518798828
    4. ')=' → logprob: -7.177875518798828
    5. ']=' → logprob: -8.052875518798828
    6. '=num' → logprob: -8.177875518798828
    7. ' in' → logprob: -8.927875518798828
    8. ']' → logprob: -9.177875518798828
    9. ' )' → logprob: -9.427875518798828
    10. 'if' → logprob: -9.427875518798828

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017120669363066554
    2. ' =' → logprob: -6.376711845397949
    3. 'if' → logprob: -12.25171184539795
    4. 'or' → logprob: -13.00171184539795
    5. '=num' → logprob: -14.37671184539795
    6. ' or' → logprob: -14.62671184539795
    7. '%=' → logprob: -15.25171184539795
    8. '=

' → logprob: -15.25171184539795
    9. '==' → logprob: -16.001712799072266
    10. '=max' → logprob: -16.001712799072266

Token 172: ' num' (ID: 2269)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20083774626255035
    2. 'num' → logprob: -1.8258377313613892
    3. 'pos' → logprob: -4.2008376121521
    4. ' num' → logprob: -6.2008376121521
    5. ' ' → logprob: -6.3258376121521
    6. 'max' → logprob: -7.0758376121521
    7. 'next' → logprob: -7.2008376121521
    8. '1' → logprob: -8.450838088989258
    9. ' pos' → logprob: -9.075838088989258
    10. 'min' → logprob: -9.950838088989258

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. 'if' → logprob: -13.000003814697266
    3. '0' → logprob: -14.250003814697266
    4. 'or' → logprob: -16.000003814697266
    5. '[i' → logprob: -16.000003814697266
    6. ' or' → logprob: -16.375003814697266
    7. ' if' → logprob: -16.625003814697266
    8. '```' → logprob: -16.875003814697266
    9. ' ' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.625003814697266

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. '[' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '```' → logprob: -15.250005722045898
    5. '   ' → logprob: -15.750005722045898
    6. '
' → logprob: -15.750005722045898
    7. '1' → logprob: -16.8125057220459
    8. ']' → logprob: -16.8750057220459
    9. 'None' → logprob: -17.3125057220459
    10. '-' → logprob: -17.6875057220459

Token 175: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6921144127845764
    2. 'if' → logprob: -1.1921143531799316
    3. ' or' → logprob: -1.6921143531799316
    4. 'or' → logprob: -4.442114353179932
    5. ' ' → logprob: -12.69211483001709
    6. '   ' → logprob: -15.19211483001709
    7. '	if' → logprob: -15.44211483001709
    8. '	or' → logprob: -15.94211483001709
    9. ')' → logprob: -17.067113876342773
    10. 'If' → logprob: -17.317113876342773

Token 176: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5899087190628052
    2. 'or' → logprob: -1.0899087190628052
    3. ' or' → logprob: -2.3399085998535156
    4. ' if' → logprob: -4.339908599853516
    5. ' ' → logprob: -15.464908599853516
    6. '```' → logprob: -15.964908599853516
    7. '	or' → logprob: -16.089908599853516
    8. '
' → logprob: -16.214908599853516
    9. 'is' → logprob: -16.214908599853516
    10. 'If' → logprob: -16.714908599853516

Token 177: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.023252584040164948
    2. ' num' → logprob: -3.773252487182617
    3. 'None' → logprob: -12.398252487182617
    4. '0' → logprob: -13.398252487182617
    5. 'not' → logprob: -14.773252487182617
    6. ' None' → logprob: -15.023252487182617
    7. ' ' → logprob: -15.523252487182617
    8. '(num' → logprob: -15.773252487182617
    9. '	num' → logprob: -16.273252487182617
    10. ' not' → logprob: -16.398252487182617

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -11.875007629394531
    3. 'is' → logprob: -15.500007629394531
    4. '```' → logprob: -16.00000762939453
    5. '
' → logprob: -17.12500762939453
    6. ' is' → logprob: -17.25000762939453
    7. 'and' → logprob: -17.62500762939453
    8. '!=' → logprob: -18.25000762939453
    9. '1' → logprob: -18.50000762939453
    10. '[
' → logprob: -18.50000762939453

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.125009536743164
    3. 'None' → logprob: -13.000009536743164
    4. '
' → logprob: -14.500009536743164
    5. '```' → logprob: -14.750009536743164
    6. '   ' → logprob: -15.812509536743164
    7. ']' → logprob: -17.125009536743164
    8. '1' → logprob: -17.375009536743164
    9. '#' → logprob: -17.500009536743164
    10. '
' → logprob: -17.562509536743164

Token 180: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3132965564727783
    2. 'is' → logprob: -1.3132965564727783
    3. 'else' → logprob: -10.3132963180542
    4. ' else' → logprob: -14.3132963180542
    5. '!=' → logprob: -14.3132963180542
    6. ' ' → logprob: -15.4382963180542
    7. 'in' → logprob: -15.8132963180542
    8. '```' → logprob: -17.938297271728516
    9. '
' → logprob: -18.063297271728516
    10. '	is' → logprob: -18.188297271728516

Token 181: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3135848045349121
    2. ' is' → logprob: -1.313584804534912
    3. 'else' → logprob: -8.18858528137207
    4. '!=' → logprob: -10.18858528137207
    5. ' else' → logprob: -12.43858528137207
    6. 'in' → logprob: -13.06358528137207
    7. ' ' → logprob: -15.06358528137207
    8. ' !=' → logprob: -15.18858528137207
    9. '```' → logprob: -15.68858528137207
    10. ' in' → logprob: -15.81358528137207

Token 182: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.027798809111118317
    2. ' not' → logprob: -3.652798891067505
    3. 'None' → logprob: -6.527798652648926
    4. '   ' → logprob: -11.652798652648926
    5. ' None' → logprob: -11.652798652648926
    6. '```' → logprob: -12.902798652648926
    7. '``' → logprob: -13.152798652648926
    8. '       ' → logprob: -13.277798652648926
    9. '	not' → logprob: -13.652798652648926
    10. 'none' → logprob: -13.652798652648926

Token 183: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.627176768844947e-05
    2. ' None' → logprob: -9.250096321105957
    3. '0' → logprob: -16.50009536743164
    4. 'not' → logprob: -18.12509536743164
    5. '   ' → logprob: -18.75009536743164
    6. 'none' → logprob: -19.25009536743164
    7. ' ' → logprob: -19.62509536743164
    8. '(None' → logprob: -19.87509536743164
    9. '_None' → logprob: -20.25009536743164
    10. '       ' → logprob: -20.62509536743164

Token 184: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04866378381848335
    2. ' else' → logprob: -3.048663854598999
    3. '   ' → logprob: -9.548664093017578
    4. ' ' → logprob: -12.923664093017578
    5. '    ' → logprob: -14.298664093017578
    6. 'or' → logprob: -15.048664093017578
    7. '  ' → logprob: -15.298664093017578
    8. '        ' → logprob: -15.548664093017578
    9. ' or' → logprob: -15.673664093017578
    10. '       ' → logprob: -15.798664093017578

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004752367385663092
    2. '1' → logprob: -8.00047492980957
    3. ' ' → logprob: -8.87547492980957
    4. '9' → logprob: -17.12547492980957
    5. '   ' → logprob: -17.25047492980957
    6. '
' → logprob: -18.50047492980957
    7. '  ' → logprob: -18.87547492980957
    8. ' ' → logprob: -19.37547492980957
    9. '

' → logprob: -19.75047492980957
    10. '"' → logprob: -20.25047492980957

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -12.00001049041748
    3. '1' → logprob: -12.37501049041748
    4. ''' → logprob: -18.125009536743164
    5. '"' → logprob: -18.125009536743164
    6. '9' → logprob: -18.500009536743164
    7. '   ' → logprob: -18.937509536743164
    8. 'digit' → logprob: -19.000009536743164
    9. '۰' → logprob: -19.062509536743164
    10. '０' → logprob: -19.250009536743164

Token 187: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06200319528579712
    2. 'elif' → logprob: -2.8120031356811523
    3. ' else' → logprob: -10.312003135681152
    4. ' elif' → logprob: -13.062003135681152
    5. 'el' → logprob: -17.18700408935547
    6. '   ' → logprob: -17.56200408935547
    7. '```' → logprob: -18.06200408935547
    8. '
' → logprob: -18.68700408935547
    9. 'elseif' → logprob: -18.68700408935547
    10. '	else' → logprob: -19.18700408935547

Token 188: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3868727385997772
    2. 'elif' → logprob: -1.1368727684020996
    3. ' else' → logprob: -13.761872291564941
    4. ' elif' → logprob: -14.261872291564941
    5. '```' → logprob: -17.386873245239258
    6. 'elseif' → logprob: -18.886873245239258
    7. 'el' → logprob: -20.261873245239258
    8. '   ' → logprob: -20.511873245239258
    9. 'elsif' → logprob: -21.011873245239258
    10. '#elif' → logprob: -21.136873245239258

Token 189: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3712053596973419
    2. ':' → logprob: -1.2462053298950195
    3. '   ' → logprob: -3.8712053298950195
    4. ' if' → logprob: -6.4962053298950195
    5. ' :
' → logprob: -9.49620532989502
    6. 'if' → logprob: -9.87120532989502
    7. ' :' → logprob: -11.24620532989502
    8. '  ' → logprob: -12.37120532989502
    9. ' ' → logprob: -12.49620532989502
    10. ',' → logprob: -12.49620532989502

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16471245884895325
    2. 'if' → logprob: -2.414712429046631
    3. ' if' → logprob: -2.914712429046631
    4. 'num' → logprob: -5.039712429046631
    5. ' num' → logprob: -6.414712429046631
    6. '	if' → logprob: -9.414712905883789
    7. '	num' → logprob: -10.664712905883789
    8. ' ' → logprob: -11.664712905883789
    9. '   ' → logprob: -11.914712905883789
    10. '       ' → logprob: -12.164712905883789

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.043102528899908066
    2. ' if' → logprob: -3.293102502822876
    3. '   ' → logprob: -5.293102741241455
    4. 'for' → logprob: -11.043102264404297
    5. '	if' → logprob: -13.418102264404297
    6. 'num' → logprob: -13.543102264404297
    7. ' ' → logprob: -13.668102264404297
    8. ' for' → logprob: -14.293102264404297
    9. '    
' → logprob: -14.543102264404297
    10. '       ' → logprob: -14.918102264404297

Token 192: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0046636611223220825
    2. ' num' → logprob: -5.379663467407227
    3. '   ' → logprob: -10.254663467407227
    4. 'pos' → logprob: -12.004663467407227
    5. ' ' → logprob: -14.004663467407227
    6. '(num' → logprob: -14.879663467407227
    7. '	num' → logprob: -15.004663467407227
    8. '0' → logprob: -15.379663467407227
    9. '  ' → logprob: -15.629663467407227
    10. '1' → logprob: -16.129663467407227

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016349162615370005
    2. '[i' → logprob: -8.750163078308105
    3. '0' → logprob: -12.625163078308105
    4. ' [' → logprob: -13.625163078308105
    5. ' ' → logprob: -15.250163078308105
    6. '```' → logprob: -17.000164031982422
    7. '   ' → logprob: -17.375164031982422
    8. '[
' → logprob: -17.750164031982422
    9. '[num' → logprob: -17.750164031982422
    10. '[n' → logprob: -18.125164031982422

Token 194: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '[' → logprob: -16.000003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '
' → logprob: -17.250003814697266
    6. '۰' → logprob: -18.375003814697266
    7. '

' → logprob: -18.812503814697266
    8. '1' → logprob: -18.937503814697266
    9. '```' → logprob: -19.000003814697266
    10. ']' → logprob: -19.375003814697266

Token 195: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20156830549240112
    2. 'is' → logprob: -1.701568365097046
    3. '==' → logprob: -8.951568603515625
    4. ')' → logprob: -11.076568603515625
    5. ']' → logprob: -12.826568603515625
    6. '	is' → logprob: -13.201568603515625
    7. 'in' → logprob: -13.451568603515625
    8. ' ==' → logprob: -13.951568603515625
    9. '=' → logprob: -14.201568603515625
    10. ' ' → logprob: -14.576568603515625

Token 196: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4029638469219208
    2. ' is' → logprob: -1.1529638767242432
    3. '==' → logprob: -4.152963638305664
    4. '=' → logprob: -8.777963638305664
    5. ' ==' → logprob: -9.527963638305664
    6. 'in' → logprob: -11.402963638305664
    7. ' =' → logprob: -12.902963638305664
    8. ' in' → logprob: -13.027963638305664
    9. '	is' → logprob: -14.027963638305664
    10. 'if' → logprob: -14.527963638305664

Token 197: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04946964979171753
    2. ' None' → logprob: -3.0494697093963623
    3. 'not' → logprob: -7.424469470977783
    4. '0' → logprob: -8.799469947814941
    5. ' not' → logprob: -9.049469947814941
    6. ' ' → logprob: -11.799469947814941
    7. '   ' → logprob: -11.799469947814941
    8. 'Not' → logprob: -13.799469947814941
    9. 'none' → logprob: -15.049469947814941
    10. '  ' → logprob: -15.299469947814941

Token 198: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0205889530479908
    2. ' None' → logprob: -3.8955888748168945
    3. '(None' → logprob: -10.520588874816895
    4. '_None' → logprob: -11.895588874816895
    5. '   ' → logprob: -12.270588874816895
    6. '_none' → logprob: -12.645588874816895
    7. '=None' → logprob: -13.270588874816895
    8. ' ' → logprob: -13.770588874816895
    9. '0' → logprob: -14.145588874816895
    10. '```' → logprob: -15.145588874816895

Token 199: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6628099679946899
    2. ' and' → logprob: -0.7878099679946899
    3. '==' → logprob: -4.1628098487854
    4. '       ' → logprob: -4.9128098487854
    5. '   ' → logprob: -5.7878098487854
    6. ':
' → logprob: -5.9128098487854
    7. ':' → logprob: -7.9128098487854
    8. '    ' → logprob: -8.412810325622559
    9. '=' → logprob: -8.662810325622559
    10. ' ==' → logprob: -9.662810325622559

Token 200: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49763187766075134
    2. ' if' → logprob: -1.3726319074630737
    3. '   ' → logprob: -2.747631788253784
    4. '0' → logprob: -3.122631788253784
    5. 'num' → logprob: -4.247632026672363
    6. '       ' → logprob: -4.497632026672363
    7. ' num' → logprob: -5.872632026672363
    8. '    ' → logprob: -7.247632026672363
    9. '=' → logprob: -7.747632026672363
    10. ' ' → logprob: -8.372632026672363

Token 201: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007378743030130863
    2. ' if' → logprob: -5.132378578186035
    3. '   ' → logprob: -7.257378578186035
    4. 'print' → logprob: -7.882378578186035
    5. '       ' → logprob: -8.132378578186035
    6. 'num' → logprob: -10.882378578186035
    7. '
' → logprob: -11.382378578186035
    8. '0' → logprob: -11.382378578186035
    9. 'pass' → logprob: -11.632378578186035
    10. '           ' → logprob: -11.632378578186035

Token 202: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -6.2729995988775045e-06
    2. ' num' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.0000057220459
    4. '	num' → logprob: -21.0000057220459
    5. ' ' → logprob: -21.5000057220459
    6. 'n' → logprob: -23.3750057220459
    7. '(num' → logprob: -23.3750057220459
    8. '  ' → logprob: -24.1250057220459
    9. '0' → logprob: -24.2500057220459
    10. '[num' → logprob: -24.6250057220459

Token 203: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.0
    3. '```' → logprob: -18.125
    4. '[
' → logprob: -18.75
    5. 'num' → logprob: -19.125
    6. 'import' → logprob: -19.625
    7. '
' → logprob: -19.75
    8. '   ' → logprob: -20.125
    9. ' ' → logprob: -20.375
    10. '[i' → logprob: -20.5

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.875024795532227
    3. '[' → logprob: -12.125024795532227
    4. '```' → logprob: -16.750024795532227
    5. '۰' → logprob: -17.000024795532227
    6. '   ' → logprob: -17.125024795532227
    7. '０' → logprob: -17.187524795532227
    8. '
' → logprob: -18.250024795532227
    9. '  ' → logprob: -18.625024795532227
    10. '#' → logprob: -18.687524795532227

Token 205: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08915790170431137
    2. ' ==' → logprob: -2.464157819747925
    3. ']==' → logprob: -8.964158058166504
    4. ']' → logprob: -10.589158058166504
    5. ')' → logprob: -10.964158058166504
    6. '=' → logprob: -11.089158058166504
    7. ')==' → logprob: -11.589158058166504
    8. '0' → logprob: -11.964158058166504
    9. '```' → logprob: -12.089158058166504
    10. ' ' → logprob: -12.464158058166504

Token 206: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01105878408998251
    2. ' ==' → logprob: -4.511058807373047
    3. '=' → logprob: -12.386058807373047
    4. '==
' → logprob: -12.636058807373047
    5. ']==' → logprob: -14.011058807373047
    6. '!=' → logprob: -14.386058807373047
    7. '```' → logprob: -14.386058807373047
    8. '	' → logprob: -15.261058807373047
    9. ')==' → logprob: -15.261058807373047
    10. '[' → logprob: -15.386058807373047

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -18.125123977661133
    4. '０' → logprob: -19.625123977661133
    5. '০' → logprob: -20.625123977661133
    6. '٠' → logprob: -20.625123977661133
    7. '   ' → logprob: -21.750123977661133
    8. '०' → logprob: -21.875123977661133
    9. '00' → logprob: -22.437623977661133
    10. '  ' → logprob: -22.562623977661133

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '۰' → logprob: -17.500036239624023
    4. '０' → logprob: -18.937536239624023
    5. '০' → logprob: -19.062536239624023
    6. '٠' → logprob: -19.125036239624023
    7. '०' → logprob: -20.312536239624023
    8. '00' → logprob: -20.562536239624023
    9. '```' → logprob: -21.312536239624023
    10. '   ' → logprob: -21.375036239624023

Token 209: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.006346796173602343
    2. ':' → logprob: -5.506346702575684
    3. '   ' → logprob: -6.381346702575684
    4. '       ' → logprob: -8.256346702575684
    5. '):
' → logprob: -8.881346702575684
    6. '           ' → logprob: -9.256346702575684
    7. ' :
' → logprob: -10.131346702575684
    8. 'print' → logprob: -10.756346702575684
    9. ':
' → logprob: -11.756346702575684
    10. ' print' → logprob: -12.506346702575684

Token 210: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7296954989433289
    2. '           ' → logprob: -0.7296954989433289
    3. 'print' → logprob: -3.9796955585479736
    4. '   ' → logprob: -4.2296953201293945
    5. ' print' → logprob: -6.1046953201293945
    6. '```' → logprob: -8.979695320129395
    7. '	print' → logprob: -9.229695320129395
    8. '	       ' → logprob: -10.354695320129395
    9. ',' → logprob: -10.479695320129395
    10. '-' → logprob: -10.979695320129395

Token 211: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009382586576975882
    2. '           ' → logprob: -7.625938415527344
    3. ' print' → logprob: -8.000938415527344
    4. '   ' → logprob: -9.250938415527344
    5. '               ' → logprob: -11.625938415527344
    6. '       ' → logprob: -12.250938415527344
    7. '```' → logprob: -12.875938415527344
    8. '	print' → logprob: -13.250938415527344
    9. ' ' → logprob: -14.500938415527344
    10. '-' → logprob: -15.250938415527344

Token 212: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020969063043594
    2. '(-' → logprob: -2.3502097129821777
    3. ' -' → logprob: -13.10020923614502
    4. '(' → logprob: -14.85020923614502
    5. '("-' → logprob: -15.47520923614502
    6. '()-' → logprob: -15.60020923614502
    7. '```' → logprob: -15.60020923614502
    8. '   ' → logprob: -17.225210189819336
    9. '``' → logprob: -17.850210189819336
    10. '-print' → logprob: -18.100210189819336

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -16.0
    4. ')' → logprob: -17.75
    5. '
' → logprob: -18.125
    6. '-' → logprob: -18.5
    7. '``' → logprob: -19.25
    8. '   ' → logprob: -19.875
    9. '}' → logprob: -20.125
    10. '１' → logprob: -20.1875

Token 214: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03843538463115692
    2. '           ' → logprob: -3.913435459136963
    3. ')' → logprob: -4.038435459136963
    4. ')
' → logprob: -9.913434982299805
    5. '       ' → logprob: -10.288434982299805
    6. '               ' → logprob: -11.413434982299805
    7. ' )
' → logprob: -12.538434982299805
    8. '   ' → logprob: -12.663434982299805
    9. ')return' → logprob: -13.288434982299805
    10. '')
' → logprob: -14.038434982299805

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004533142491709441
    2. '       ' → logprob: -7.750453472137451
    3. '   ' → logprob: -11.250452995300293
    4. '
' → logprob: -12.750452995300293
    5. 'else' → logprob: -13.375452995300293
    6. '               ' → logprob: -13.625452995300293
    7. '		' → logprob: -13.875452995300293
    8. '	       ' → logprob: -14.000452995300293
    9. 'exit' → logprob: -14.375452995300293
    10. '```' → logprob: -15.000452995300293

Token 216: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.31521499156951904
    2. '           ' → logprob: -1.315214991569519
    3. ' exit' → logprob: -6.315215110778809
    4. '   ' → logprob: -9.190215110778809
    5. '	exit' → logprob: -11.065215110778809
    6. '       ' → logprob: -11.315215110778809
    7. '               ' → logprob: -12.190215110778809
    8. '.exit' → logprob: -13.190215110778809
    9. ' ' → logprob: -13.565215110778809
    10. '```' → logprob: -13.565215110778809

Token 217: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014201470650732517
    2. '()
' → logprob: -4.264201641082764
    3. '())' → logprob: -10.389201164245605
    4. '(' → logprob: -13.139201164245605
    5. '()

' → logprob: -13.264201164245605
    6. '()
' → logprob: -13.889201164245605
    7. '()`' → logprob: -14.264201164245605
    8. ')' → logprob: -14.389201164245605
    9. '())
' → logprob: -14.514201164245605
    10. '()\' → logprob: -14.514201164245605

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014331908896565437
    2. 'else' → logprob: -4.264331817626953
    3. ' else' → logprob: -8.764331817626953
    4. '	else' → logprob: -12.389331817626953
    5. '```' → logprob: -12.514331817626953
    6. 'elif' → logprob: -12.889331817626953
    7. '   ' → logprob: -13.389331817626953
    8. '       ' → logprob: -16.639331817626953
    9. ',' → logprob: -17.139331817626953
    10. '  ' → logprob: -17.389331817626953

Token 219: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4776056110858917
    2. '   ' → logprob: -0.9776055812835693
    3. 'elif' → logprob: -6.227605819702148
    4. ' else' → logprob: -6.477605819702148
    5. ' elif' → logprob: -11.977605819702148
    6. ' ' → logprob: -13.227605819702148
    7. '	else' → logprob: -13.602605819702148
    8. '       ' → logprob: -14.602605819702148
    9. '  ' → logprob: -14.852605819702148
    10. '```' → logprob: -15.727605819702148

Token 220: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24848005175590515
    2. ':' → logprob: -1.6234800815582275
    3. ':
' → logprob: -3.8734800815582275
    4. '   ' → logprob: -6.373479843139648
    5. '0' → logprob: -9.748479843139648
    6. ' num' → logprob: -9.873479843139648
    7. ',' → logprob: -9.873479843139648
    8. '[' → logprob: -10.248479843139648
    9. 'num' → logprob: -10.748479843139648
    10. ' :' → logprob: -10.873479843139648

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5336320400238037
    2. '       ' → logprob: -1.0336320400238037
    3. ' num' → logprob: -3.2836320400238037
    4. 'num' → logprob: -3.9086320400238037
    5. ' for' → logprob: -8.783632278442383
    6. '   ' → logprob: -10.533632278442383
    7. '	num' → logprob: -11.033632278442383
    8. 'for' → logprob: -11.158632278442383
    9. '	   ' → logprob: -11.908632278442383
    10. ' ' → logprob: -12.283632278442383

Token 222: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.00948205403983593
    2. '1' → logprob: -4.884481906890869
    3. ' num' → logprob: -6.759481906890869
    4. '   ' → logprob: -7.259481906890869
    5. '       ' → logprob: -11.884482383728027
    6. ' ' → logprob: -13.384482383728027
    7. '	num' → logprob: -13.884482383728027
    8. '  ' → logprob: -15.134482383728027
    9. '           ' → logprob: -15.384482383728027
    10. 'for' → logprob: -15.384482383728027

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.125
    3. '=' → logprob: -16.75
    4. '[i' → logprob: -16.875
    5. '0' → logprob: -17.0
    6. '```' → logprob: -17.625
    7. '   ' → logprob: -18.0
    8. ')[' → logprob: -18.125
    9. '][' → logprob: -18.5
    10. '=[' → logprob: -18.875

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '[' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.750001907348633
    5. ']' → logprob: -19.125001907348633
    6. '1' → logprob: -19.250001907348633
    7. '
' → logprob: -20.375001907348633
    8. ')' → logprob: -20.375001907348633
    9. '```' → logprob: -20.437501907348633
    10. '=' → logprob: -20.750001907348633

Token 225: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02606048807501793
    2. ' =' → logprob: -3.7760605812072754
    3. ']' → logprob: -5.901060581207275
    4. ']=' → logprob: -9.526060104370117
    5. ')' → logprob: -13.651060104370117
    6. ' ]' → logprob: -15.401060104370117
    7. ')=' → logprob: -15.901060104370117
    8. '}' → logprob: -17.526060104370117
    9. ',' → logprob: -17.901060104370117
    10. ' ' → logprob: -18.151060104370117

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '＝' → logprob: -19.254077911376953
    4. '0' → logprob: -19.629077911376953
    5. '=
' → logprob: -19.629077911376953
    6. '.=' → logprob: -20.129077911376953
    7. '=

' → logprob: -20.254077911376953
    8. '=}' → logprob: -20.379077911376953
    9. ' ' → logprob: -21.379077911376953
    10. ')' → logprob: -21.754077911376953

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '１' → logprob: -21.375001907348633
    5. ' ' → logprob: -21.375001907348633
    6. '`' → logprob: -22.375001907348633
    7. '```' → logprob: -22.750001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '۱' → logprob: -23.000001907348633
    10. '
' → logprob: -23.125001907348633

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '
' → logprob: -20.75
    4. '１' → logprob: -21.375
    5. 'from' → logprob: -21.75
    6. '```' → logprob: -21.75
    7. '`' → logprob: -22.125
    8. '   ' → logprob: -22.625
    9. 'print' → logprob: -22.75
    10. '' → logprob: -22.75

Token 229: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7578784823417664
    2. '   ' → logprob: -1.0078785419464111
    3. 'else' → logprob: -2.257878541946411
    4. ' for' → logprob: -2.882878541946411
    5. '
' → logprob: -6.257878303527832
    6. 'elif' → logprob: -6.382878303527832
    7. ' else' → logprob: -7.007878303527832
    8. '    
' → logprob: -7.757878303527832
    9. '       ' → logprob: -7.882878303527832
    10. '<|end|>' → logprob: -9.007878303527832

Token 230: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002375534735620022
    2. ' for' → logprob: -6.627375602722168
    3. 'else' → logprob: -6.877375602722168
    4. '   ' → logprob: -11.502375602722168
    5. '```' → logprob: -12.502375602722168
    6. 'elif' → logprob: -13.377375602722168
    7. ' else' → logprob: -14.377375602722168
    8. '#' → logprob: -14.752375602722168
    9. 'i' → logprob: -14.877375602722168
    10. '<|end|>' → logprob: -15.377375602722168

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.779520092299208e-05
    2. ' for' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.125078201293945
    4. 'else' → logprob: -14.000078201293945
    5. '```' → logprob: -16.250078201293945
    6. '#' → logprob: -17.375078201293945
    7. 'elif' → logprob: -18.750078201293945
    8. '    
' → logprob: -19.000078201293945
    9. '0' → logprob: -19.625078201293945
    10. 'if' → logprob: -19.750078201293945

Token 232: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009119403548538685
    2. ' i' → logprob: -7.000911712646484
    3. '	i' → logprob: -15.250911712646484
    4. ' ' → logprob: -16.000911712646484
    5. 'idx' → logprob: -16.750911712646484
    6. 'j' → logprob: -16.875911712646484
    7. '  ' → logprob: -17.875911712646484
    8. '   ' → logprob: -18.125911712646484
    9. ' ' → logprob: -19.250911712646484
    10. '```' → logprob: -19.500911712646484

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007628399878740311
    2. 'in' → logprob: -4.882628440856934
    3. 'range' → logprob: -11.257628440856934
    4. ' ' → logprob: -12.882628440856934
    5. '   ' → logprob: -13.132628440856934
    6. ',' → logprob: -13.632628440856934
    7. '  ' → logprob: -14.007628440856934
    8. '```' → logprob: -14.382628440856934
    9. ' range' → logprob: -14.757628440856934
    10. 'd' → logprob: -15.257628440856934

Token 234: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008048642775975168
    2. ' range' → logprob: -7.125804901123047
    3. '(range' → logprob: -16.625804901123047
    4. '   ' → logprob: -16.875804901123047
    5. ' ' → logprob: -17.125804901123047
    6. '	range' → logprob: -17.500804901123047
    7. 'r' → logprob: -18.250804901123047
    8. '  ' → logprob: -18.375804901123047
    9. 'ran' → logprob: -18.750804901123047
    10. 'rang' → logprob: -19.000804901123047

Token 235: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023643692838959396
    2. '1' → logprob: -8.875236511230469
    3. '(n' → logprob: -9.250236511230469
    4. 'n' → logprob: -15.125236511230469
    5. ' (' → logprob: -15.375236511230469
    6. '(len' → logprob: -17.00023651123047
    7. ' ' → logprob: -18.75023651123047
    8. '[' → logprob: -19.12523651123047
    9. '(i' → logprob: -19.12523651123047
    10. '   ' → logprob: -19.81273651123047

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024876687675714493
    2. 'n' → logprob: -6.002487659454346
    3. ' ' → logprob: -12.002488136291504
    4. '(' → logprob: -13.002488136291504
    5. 'len' → logprob: -14.002488136291504
    6. '(n' → logprob: -14.127488136291504
    7. '0' → logprob: -14.502488136291504
    8. '   ' → logprob: -14.502488136291504
    9. ' n' → logprob: -15.127488136291504
    10. '

' → logprob: -15.377488136291504

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005296798190101981
    2. ',n' → logprob: -8.000529289245605
    3. 'n' → logprob: -8.875529289245605
    4. ' ,' → logprob: -9.875529289245605
    5. ' n' → logprob: -13.125529289245605
    6. '(n' → logprob: -14.500529289245605
    7. ',
' → logprob: -15.500529289245605
    8. '1' → logprob: -17.000530242919922
    9. ',len' → logprob: -17.000530242919922
    10. '   ' → logprob: -17.500530242919922

Token 238: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1756367712223437e-05
    2. ' n' → logprob: -11.375011444091797
    3. 'len' → logprob: -16.375011444091797
    4. '   ' → logprob: -17.625011444091797
    5. '	n' → logprob: -18.625011444091797
    6. ')n' → logprob: -20.375011444091797
    7. '```' → logprob: -21.125011444091797
    8. 'num' → logprob: -21.500011444091797
    9. ',n' → logprob: -21.500011444091797
    10. ')' → logprob: -21.750011444091797

Token 239: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25201135873794556
    2. '):' → logprob: -1.5020112991333008
    3. ')' → logprob: -10.5020112991333
    4. ':' → logprob: -10.7520112991333
    5. '):
' → logprob: -11.2520112991333
    6. '   ' → logprob: -11.3770112991333
    7. ',' → logprob: -12.6270112991333
    8. '):

' → logprob: -13.0020112991333
    9. ':
' → logprob: -13.7520112991333
    10. ' ):
' → logprob: -13.7520112991333

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03446893021464348
    2. ' if' → logprob: -4.034469127655029
    3. 'if' → logprob: -4.284469127655029
    4. ':' → logprob: -6.159469127655029
    5. ':
' → logprob: -8.659468650817871
    6. '   ' → logprob: -10.284468650817871
    7. '	   ' → logprob: -10.534468650817871
    8. '[' → logprob: -11.784468650817871
    9. '	if' → logprob: -12.034468650817871
    10. '<|end|>' → logprob: -12.159468650817871

Token 241: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07101064175367355
    2. ' if' → logprob: -2.6960105895996094
    3. '       ' → logprob: -7.946010589599609
    4. 'num' → logprob: -7.946010589599609
    5. '           ' → logprob: -8.19601058959961
    6. '	if' → logprob: -9.82101058959961
    7. '   ' → logprob: -10.57101058959961
    8. ' num' → logprob: -12.94601058959961
    9. '	       ' → logprob: -13.32101058959961
    10. ' ' → logprob: -13.69601058959961

Token 242: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0232557263225317
    2. ' num' → logprob: -3.7732558250427246
    3. '   ' → logprob: -11.523255348205566
    4. '       ' → logprob: -15.773255348205566
    5. '	num' → logprob: -16.148256301879883
    6. ' ' → logprob: -16.398256301879883
    7. '  ' → logprob: -18.148256301879883
    8. '    ' → logprob: -18.398256301879883
    9. '(num' → logprob: -18.523256301879883
    10. '[num' → logprob: -18.773256301879883

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[num' → logprob: -14.750000953674316
    3. '[' → logprob: -15.000000953674316
    4. '```' → logprob: -17.375
    5. '[I' → logprob: -17.375
    6. 'i' → logprob: -17.625
    7. ' [' → logprob: -17.75
    8. '[n' → logprob: -18.375
    9. '
' → logprob: -18.5
    10. '   ' → logprob: -18.75

Token 244: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20175451040267944
    2. 'is' → logprob: -1.7017545700073242
    3. ')' → logprob: -8.076754570007324
    4. ']' → logprob: -10.951754570007324
    5. '==' → logprob: -12.326754570007324
    6. '	is' → logprob: -13.201754570007324
    7. ' ' → logprob: -13.451754570007324
    8. ')is' → logprob: -13.951754570007324
    9. '   ' → logprob: -14.451754570007324
    10. '

' → logprob: -14.451754570007324

Token 245: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.16028647124767303
    2. ' is' → logprob: -1.9102864265441895
    3. '==' → logprob: -10.160286903381348
    4. '=' → logprob: -10.785286903381348
    5. ')' → logprob: -14.160286903381348
    6. '	is' → logprob: -14.660286903381348
    7. 'Is' → logprob: -15.160286903381348
    8. '[' → logprob: -15.410286903381348
    9. 's' → logprob: -15.535286903381348
    10. ' =' → logprob: -15.660286903381348

Token 246: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001503313542343676
    2. ' None' → logprob: -6.5015034675598145
    3. '   ' → logprob: -13.876502990722656
    4. ' ' → logprob: -17.126502990722656
    5. '_None' → logprob: -19.126502990722656
    6. '  ' → logprob: -19.501502990722656
    7. '=None' → logprob: -19.876502990722656
    8. 'not' → logprob: -20.126502990722656
    9. '_none' → logprob: -20.126502990722656
    10. '0' → logprob: -21.001502990722656

Token 247: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5805999040603638
    2. ':' → logprob: -1.2055999040603638
    3. ':
' → logprob: -2.080599784851074
    4. '       ' → logprob: -5.205599784851074
    5. '0' → logprob: -5.330599784851074
    6. ' =' → logprob: -5.580599784851074
    7. '           ' → logprob: -6.705599784851074
    8. '   ' → logprob: -8.205599784851074
    9. ',' → logprob: -9.705599784851074
    10. '<|end|>' → logprob: -9.830599784851074

Token 248: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20338298380374908
    2. '           ' → logprob: -2.078382968902588
    3. '=' → logprob: -3.453382968902588
    4. 'num' → logprob: -4.453382968902588
    5. '       ' → logprob: -4.703382968902588
    6. ' =' → logprob: -5.828382968902588
    7. ' num' → logprob: -6.078382968902588
    8. ' ' → logprob: -7.953382968902588
    9. '=num' → logprob: -8.328383445739746
    10. '10' → logprob: -8.453383445739746

Token 249: ' num' (ID: 2269)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6959658265113831
    2. 'num' (adapté à ' num') → logprob: -0.6959658265113831
    3. ' num' → logprob: -6.195965766906738
    4. '           ' → logprob: -7.695965766906738
    5. '       ' → logprob: -8.320965766906738
    6. ' ' → logprob: -10.195965766906738
    7. '   ' → logprob: -10.570965766906738
    8. '	num' → logprob: -12.070965766906738
    9. '               ' → logprob: -12.445965766906738
    10. ',num' → logprob: -14.195965766906738

Token 250: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '[I' → logprob: -18.125
    4. ' [' → logprob: -18.625
    5. '```' → logprob: -18.75
    6. 'i' → logprob: -19.75
    7. '\[' → logprob: -20.125
    8. '   ' → logprob: -20.375
    9. '[num' → logprob: -20.5
    10. '[
' → logprob: -21.0

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012582412920892239
    2. '=' → logprob: -4.887582302093506
    3. ']=' → logprob: -5.387582302093506
    4. ' =' → logprob: -7.887582302093506
    5. ' ]' → logprob: -11.512582778930664
    6. '[' → logprob: -13.137582778930664
    7. ')' → logprob: -13.637582778930664
    8. '       ' → logprob: -14.887582778930664
    9. '0' → logprob: -15.387582778930664
    10. '           ' → logprob: -15.762582778930664

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=num' → logprob: -17.288042068481445
    4. '=
' → logprob: -17.413042068481445
    5. '.=' → logprob: -17.413042068481445
    6. ' ' → logprob: -17.663042068481445
    7. '0' → logprob: -17.788042068481445
    8. '＝' → logprob: -18.288042068481445
    9. ')' → logprob: -18.788042068481445
    10. '<|end|>' → logprob: -18.788042068481445

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.875011444091797
    4. '０' → logprob: -19.250011444091797
    5. '  ' → logprob: -19.375011444091797
    6. '       ' → logprob: -20.000011444091797
    7. '    ' → logprob: -20.375011444091797
    8. '۰' → logprob: -20.375011444091797
    9. '1' → logprob: -20.937511444091797
    10. '           ' → logprob: -21.812511444091797

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -19.0
    4. '０' → logprob: -20.125
    5. '
' → logprob: -20.75
    6. '   ' → logprob: -21.0
    7. ''' → logprob: -21.6875
    8. '  ' → logprob: -22.125
    9. '۰' → logprob: -22.1875
    10. 'o' → logprob: -22.4375

Token 255: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.074907287256792e-05
    2. '
' → logprob: -9.87506103515625
    3. ' print' → logprob: -11.75006103515625
    4. '    
' → logprob: -14.75006103515625
    5. ')
' → logprob: -15.00006103515625
    6. ')' → logprob: -15.12506103515625
    7. '```' → logprob: -16.50006103515625
    8. '

' → logprob: -16.75006103515625
    9. '  
' → logprob: -16.75006103515625
    10. 'if' → logprob: -16.87506103515625

Token 256: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.9650025428272784e-05
    2. ' print' → logprob: -10.375040054321289
    3. '
' → logprob: -12.375040054321289
    4. ')' → logprob: -13.125040054321289
    5. ')
' → logprob: -13.625040054321289
    6. '```' → logprob: -14.375040054321289
    7. 'for' → logprob: -16.25004005432129
    8. '   ' → logprob: -16.37504005432129
    9. 'if' → logprob: -16.62504005432129
    10. ']' → logprob: -17.37504005432129

Token 257: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3542872369289398
    2. '("' → logprob: -1.3542872667312622
    3. '(*' → logprob: -3.3542871475219727
    4. '(' → logprob: -5.479287147521973
    5. '(int' → logprob: -6.854287147521973
    6. 'int' → logprob: -11.104287147521973
    7. '''.' → logprob: -12.479287147521973
    8. '"' → logprob: -12.479287147521973
    9. '(*(' → logprob: -12.604287147521973
    10. '(""' → logprob: -12.729287147521973

Token 258: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.030306559056043625
    2. ''.' → logprob: -3.530306577682495
    3. ''' → logprob: -7.780306339263916
    4. '''' → logprob: -9.905306816101074
    5. ' ''.' → logprob: -10.530306816101074
    6. '"' → logprob: -10.655306816101074
    7. '```' → logprob: -11.155306816101074
    8. '".' → logprob: -11.905306816101074
    9. '.join' → logprob: -12.405306816101074
    10. '{}.' → logprob: -12.405306816101074

Token 259: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.375
    3. 'strip' → logprob: -18.75
    4. 'jo' → logprob: -19.375
    5. 'str' → logprob: -20.125
    6. '.join' → logprob: -20.625
    7. 'j' → logprob: -21.0
    8. 'print' → logprob: -21.125
    9. 'joint' → logprob: -22.0
    10. '```' → logprob: -22.0

Token 260: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.33281928300857544
    2. '(str' → logprob: -1.3328192234039307
    3. 'map' → logprob: -4.33281946182251
    4. 'str' → logprob: -5.08281946182251
    5. ' map' → logprob: -10.707818984985352
    6. '[str' → logprob: -11.582818984985352
    7. ' str' → logprob: -13.582818984985352
    8. '(' → logprob: -14.332818984985352
    9. '	map' → logprob: -14.707818984985352
    10. '.map' → logprob: -15.332818984985352

Token 261: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.008619893342256546
    2. 'str' → logprob: -4.758619785308838
    3. ' str' → logprob: -12.758620262145996
    4. '(' → logprob: -13.133620262145996
    5. '	str' → logprob: -15.883620262145996
    6. '=str' → logprob: -16.38361930847168
    7. '```' → logprob: -16.50861930847168
    8. '[str' → logprob: -16.50861930847168
    9. '(int' → logprob: -17.00861930847168
    10. ')' → logprob: -17.38361930847168

Token 262: ',' (ID: 11)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.1285233348608017
    2. ',num' → logprob: -2.128523349761963
    3. ',' → logprob: -6.878523349761963
    4. 'num' → logprob: -7.503523349761963
    5. ' num' → logprob: -11.753522872924805
    6. '(' → logprob: -13.628522872924805
    7. '	num' → logprob: -13.878522872924805
    8. ' (' → logprob: -14.003522872924805
    9. '[num' → logprob: -14.003522872924805
    10. '<num' → logprob: -14.378522872924805

Token 263: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0001234428636962548
    2. ' num' → logprob: -9.000123023986816
    3. '(num' → logprob: -17.500123977661133
    4. '[num' → logprob: -18.500123977661133
    5. ',num' → logprob: -19.375123977661133
    6. '	num' → logprob: -19.500123977661133
    7. '<num' → logprob: -21.500123977661133
    8. '*num' → logprob: -21.875123977661133
    9. ' ' → logprob: -22.000123977661133
    10. 'nums' → logprob: -22.000123977661133

Token 264: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.60414821645827e-06
    2. ')))' → logprob: -12.375004768371582
    3. ')' → logprob: -15.500004768371582
    4. '))
' → logprob: -16.125003814697266
    5. ' ))' → logprob: -18.125003814697266
    6. '()))' → logprob: -19.875003814697266
    7. ''))' → logprob: -20.625003814697266
    8. '));' → logprob: -21.625003814697266
    9. '}))' → logprob: -21.625003814697266
    10. '))))' → logprob: -21.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 262
Tokens correctement prédits (1ère position, stricte): 99
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 221
Précision stricte (1ère position): 37.79%
Précision adaptée (1ère position): 41.98%
Précision (top 10): 84.35%
================================================================================
