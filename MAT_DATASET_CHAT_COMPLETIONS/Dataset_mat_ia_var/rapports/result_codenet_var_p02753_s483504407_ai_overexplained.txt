================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une chaîne de caractères et stocke la saisie dans la variable S
S = input()

# Initialise une liste L avec deux entiers, tous les deux à 0
# L[0] servira à compter le nombre de fois où "A" apparaît
# L[1] servira à compter le nombre de fois où tout autre caractère apparaît
L = [0, 0]

# Utilise une boucle for pour répéter les instructions à l'intérieur du bloc 3 fois
# La fonction range(3) génère une séquence des entiers : 0, 1, 2 (donc 3 valeurs, pour S[0], S[1], S[2])
for i in range(3):
    # Vérifie si le caractère à la position i dans la chaîne S est exactement "A"
    if S[i] == "A":
        # Si c'est le cas, incrémente la valeur à l'index 0 de la liste L de 1
        # Cela augmente le compteur du nombre de "A" rencontrés jusque là
        L[0] += 1
    else:
        # Si le caractère n'est pas "A", incrémente la valeur à l'index 1 de L de 1
        # Cela augmente le compteur du nombre de caractères différents de "A"
        L[1] += 1

# Utilise la fonction max pour obtenir la plus grande valeur dans la liste L (soit le nombre maximum de "A", soit d'autres caractères)
if max(L) == 3:
    # Cela signifie que tous les caractères sont les mêmes : soit tous "A", soit tous autres
    # Dans ce cas, affiche la chaîne de caractères "No" à l'écran
    print("No")
else:
    # Sinon, cela veut dire qu'il y a au moins deux types de caractères différents parmi les trois (tous ne sont pas identiques)
    # Dans ce cas, affiche la chaîne de caractères "Yes"
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2601135969161987
    2. ' ' → logprob: -1.5101135969161987
    3. ':' → logprob: -1.6351135969161987
    4. 's' → logprob: -1.7601135969161987
    5. ' =' → logprob: -3.5101137161254883
    6. ''' → logprob: -3.7601137161254883
    7. '_' → logprob: -3.7601137161254883
    8. ' d' → logprob: -4.260113716125488
    9. '```' → logprob: -4.385113716125488
    10. ' :' → logprob: -4.760113716125488

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013277056626975536
    2. ' l' → logprob: -4.388277053833008
    3. 'user' → logprob: -8.388277053833008
    4. '#' → logprob: -8.638277053833008
    5. 'util' → logprob: -9.513277053833008
    6. ''' → logprob: -10.263277053833008
    7. '`' → logprob: -10.263277053833008
    8. '```' → logprob: -10.638277053833008
    9. ' ' → logprob: -10.888277053833008
    10. 'la' → logprob: -11.013277053833008

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.6239869594573975
    2. 'util' → logprob: -1.4989869594573975
    3. 'u' → logprob: -1.6239869594573975
    4. ' utilisateur' → logprob: -4.248987197875977
    5. 'a' → logprob: -4.498987197875977
    6. ''' → logprob: -4.873987197875977
    7. '’utilisateur' → logprob: -4.998987197875977
    8. 'us' → logprob: -6.748987197875977
    9. '_util' → logprob: -7.498987197875977
    10. 'Utilisateur' → logprob: -7.748987197875977

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.41761481761932373
    2. 'name' → logprob: -1.9176148176193237
    3. 'user' → logprob: -2.4176149368286133
    4. 'input' → logprob: -3.0426149368286133
    5. 'age' → logprob: -4.292614936828613
    6. 'print' → logprob: -4.542614936828613
    7. 'username' → logprob: -5.167614936828613
    8. 's' → logprob: -5.167614936828613
    9. 'prenom' → logprob: -5.167614936828613
    10. 'n' → logprob: -5.292614936828613

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010186896659433842
    2. 'entr' → logprob: -5.135186672210693
    3. 'r' → logprob: -7.010186672210693
    4. '```' → logprob: -7.010186672210693
    5. ' saisir' → logprob: -7.010186672210693
    6. '#' → logprob: -7.510186672210693
    7. 'input' → logprob: -8.760187149047852
    8. 'entrée' → logprob: -8.885187149047852
    9. 'sa' → logprob: -8.885187149047852
    10. 'don' → logprob: -9.010187149047852

Token 8: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.770935595035553
    2. ' une' → logprob: -1.1459355354309082
    3. ' son' → logprob: -2.395935535430908
    4. ' ' → logprob: -3.020935535430908
    5. ' le' → logprob: -3.895935535430908
    6. 'une' → logprob: -5.145935535430908
    7. 'un' → logprob: -5.145935535430908
    8. '_' → logprob: -5.270935535430908
    9. ''un' → logprob: -5.270935535430908
    10. 'le' → logprob: -5.395935535430908

Token 9: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.665398120880127
    2. ' phrase' → logprob: -1.665398120880127
    3. ' ' → logprob: -1.790398120880127
    4. ' valeur' → logprob: -3.290398120880127
    5. 'chaine' → logprob: -3.415398120880127
    6. ' ligne' → logprob: -3.915398120880127
    7. 'phrase' → logprob: -4.165398120880127
    8. ' chaine' → logprob: -4.290398120880127
    9. ' variable' → logprob: -6.040398120880127
    10. 'variable' → logprob: -6.790398120880127

Token 10: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759298205375671
    2. 'input' → logprob: -1.450929880142212
    3. 'user' → logprob: -2.075929880142212
    4. '_' → logprob: -3.950929880142212
    5. 'i' → logprob: -4.325929641723633
    6. 'chaine' → logprob: -4.325929641723633
    7. '```' → logprob: -5.325929641723633
    8. '`' → logprob: -5.325929641723633
    9. 'print' → logprob: -5.825929641723633
    10. 'entrée' → logprob: -5.825929641723633

Token 11: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0056071155704557896
    2. ' caractères' → logprob: -5.2556071281433105
    3. '#' → logprob: -8.505606651306152
    4. 'texte' → logprob: -9.005606651306152
    5. ' caracteres' → logprob: -11.880606651306152
    6. 'chars' → logprob: -12.005606651306152
    7. 's' → logprob: -12.130606651306152
    8. ' caract' → logprob: -12.380606651306152
    9. 'c' → logprob: -12.380606651306152
    10. '```' → logprob: -12.380606651306152

Token 12: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9574593901634216
    2. 'user' → logprob: -0.9574593901634216
    3. 'input' → logprob: -1.8324594497680664
    4. 'chaine' → logprob: -2.8324594497680664
    5. 'u' → logprob: -5.957459449768066
    6. 'i' → logprob: -6.332459449768066
    7. 'c' → logprob: -6.707459449768066
    8. '```' → logprob: -6.832459449768066
    9. 'a' → logprob: -6.957459449768066
    10. 'n' → logprob: -7.332459449768066

Token 13: ' stock' (ID: 6546)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.20194923877716064
    2. 'l' → logprob: -2.826949119567871
    3. 'la' → logprob: -2.951949119567871
    4. 'v' → logprob: -3.826949119567871
    5. '#' → logprob: -4.451949119567871
    6. 'print' → logprob: -4.576949119567871
    7. ' affiche' → logprob: -5.576949119567871
    8. 'concat' → logprob: -6.076949119567871
    9. ' l' → logprob: -6.326949119567871
    10. 'é' → logprob: -6.326949119567871

Token 14: 'e' (ID: 68)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22460418939590454
    2. '_' → logprob: -2.0996041297912598
    3. 'e' → logprob: -3.0996041297912598
    4. ' ' → logprob: -3.7246041297912598
    5. ' =' → logprob: -5.72460412979126
    6. 'é' → logprob: -6.34960412979126
    7. 'er' → logprob: -6.84960412979126
    8. 'd' → logprob: -6.97460412979126
    9. 'a' → logprob: -7.72460412979126
    10. ' _' → logprob: -8.099604606628418

Token 15: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21109969913959503
    2. ' ' → logprob: -1.7110997438430786
    3. ' ' → logprob: -6.336099624633789
    4. '```' → logprob: -6.336099624633789
    5. ''' → logprob: -6.836099624633789
    6. 'r' → logprob: -6.961099624633789
    7. 's' → logprob: -6.961099624633789
    8. ' _' → logprob: -6.961099624633789
    9. '`' → logprob: -7.711099624633789
    10. 'u' → logprob: -8.211099624633789

Token 16: ' sais' (ID: 30010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43575209379196167
    2. ' ' → logprob: -1.5607521533966064
    3. 's' → logprob: -2.3107521533966064
    4. 'r' → logprob: -4.435751914978027
    5. 'chaine' → logprob: -4.935751914978027
    6. ' _' → logprob: -5.560751914978027
    7. 'input' → logprob: -5.685751914978027
    8. 'entrée' → logprob: -6.060751914978027
    9. ' =' → logprob: -6.685751914978027
    10. ' input' → logprob: -6.810751914978027

Token 17: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0010448360117152333
    2. 's' → logprob: -8.001045227050781
    3. 'r' → logprob: -8.376045227050781
    4. 'é' → logprob: -8.376045227050781
    5. '#' → logprob: -10.001045227050781
    6. 'es' → logprob: -10.126045227050781
    7. ' e' → logprob: -10.876045227050781
    8. ' ' → logprob: -10.876045227050781
    9. '_' → logprob: -11.001045227050781
    10. 'ie' → logprob: -11.376045227050781

Token 18: ' dans' (ID: 2671)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5049715042114258
    2. 's' → logprob: -1.2549715042114258
    3. 'chaine' → logprob: -2.504971504211426
    4. 'u' → logprob: -4.754971504211426
    5. 'input' → logprob: -4.879971504211426
    6. 'us' → logprob: -5.504971504211426
    7. '_' → logprob: -6.754971504211426
    8. 'c' → logprob: -6.879971504211426
    9. 'use' → logprob: -7.129971504211426
    10. 'ch' → logprob: -7.254971504211426

Token 19: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.268601894378662
    2. 'la' → logprob: -1.518601894378662
    3. ' input' → logprob: -1.643601894378662
    4. 'une' → logprob: -2.268601894378662
    5. 'chaine' → logprob: -2.518601894378662
    6. ' la' → logprob: -2.643601894378662
    7. 'user' → logprob: -4.018601894378662
    8. ' une' → logprob: -4.268601894378662
    9. 'variable' → logprob: -5.268601894378662
    10. 's' → logprob: -5.393601894378662

Token 20: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.04634181037545204
    2. 'chaine' → logprob: -3.421341896057129
    3. ' variable' → logprob: -5.296341896057129
    4. 'user' → logprob: -6.296341896057129
    5. 'input' → logprob: -6.296341896057129
    6. 's' → logprob: -6.546341896057129
    7. 'string' → logprob: -7.296341896057129
    8. 'cha' → logprob: -7.671341896057129
    9. 'var' → logprob: -7.671341896057129
    10. '```' → logprob: -7.796341896057129

Token 21: ' S' (ID: 336)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5016581416130066
    2. 's' → logprob: -1.2516582012176514
    3. 'input' → logprob: -2.8766582012176514
    4. ' user' → logprob: -3.8766582012176514
    5. '_' → logprob: -4.876657962799072
    6. 'chaine' → logprob: -5.001657962799072
    7. ' input' → logprob: -5.251657962799072
    8. 'u' → logprob: -6.251657962799072
    9. 'entrée' → logprob: -7.126657962799072
    10. '`' → logprob: -7.126657962799072

Token 22: '
' (ID: 198)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.016592489555478096
    2. 's' → logprob: -4.141592502593994
    3. '```' → logprob: -9.516592025756836
    4. '`' → logprob: -9.641592025756836
    5. '#' → logprob: -9.641592025756836
    6. ' S' → logprob: -9.766592025756836
    7. 'i' → logprob: -9.766592025756836
    8. 'x' → logprob: -9.766592025756836
    9. 'n' → logprob: -10.141592025756836
    10. '_' → logprob: -10.266592025756836

Token 23: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0004074354947078973
    2. 's' → logprob: -7.8754072189331055
    3. '```' → logprob: -11.625407218933105
    4. 'print' → logprob: -12.000407218933105
    5. ' S' → logprob: -12.375407218933105
    6. 'n' → logprob: -12.500407218933105
    7. '`' → logprob: -13.375407218933105
    8. '#' → logprob: -14.500407218933105
    9. '_' → logprob: -15.000407218933105
    10. 'x' → logprob: -15.500407218933105

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023406660184264183
    2. '=' → logprob: -3.773406744003296
    3. '=input' → logprob: -9.648406982421875
    4. 's' → logprob: -10.023406982421875
    5. '.' → logprob: -11.023406982421875
    6. 'input' → logprob: -11.898406982421875
    7. ' ' → logprob: -11.898406982421875
    8. ' ' → logprob: -12.398406982421875
    9. ' +=' → logprob: -12.523406982421875
    10. '_' → logprob: -12.648406982421875

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28116151690483093
    2. 'input' → logprob: -1.4061615467071533
    3. '=input' → logprob: -12.031161308288574
    4. '(input' → logprob: -13.656161308288574
    5. ' ' → logprob: -13.781161308288574
    6. ' ' → logprob: -13.781161308288574
    7. '	input' → logprob: -14.281161308288574
    8. '<input' → logprob: -14.656161308288574
    9. '```' → logprob: -15.281161308288574
    10. 'str' → logprob: -15.781161308288574

Token 26: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09785909205675125
    2. '("("' → logprob: -2.4728591442108154
    3. '('' → logprob: -5.097858905792236
    4. '("' → logprob: -6.347858905792236
    5. '("")' → logprob: -7.472858905792236
    6. '("(' → logprob: -8.097859382629395
    7. '()' → logprob: -9.472859382629395
    8. '("""' → logprob: -9.972859382629395
    9. '(">' → logprob: -11.472859382629395
    10. '(
' → logprob: -13.097859382629395

Token 27: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1190195083618164
    2. 'print' → logprob: -1.1190195083618164
    3. '.' → logprob: -1.3690195083618164
    4. '#' → logprob: -2.9940195083618164
    5. 's' → logprob: -4.619019508361816
    6. ' if' → logprob: -5.244019508361816
    7. 'i' → logprob: -5.744019508361816
    8. ')' → logprob: -5.869019508361816
    9. '.strip' → logprob: -6.119019508361816
    10. '[' → logprob: -6.494019508361816

Token 28: ' Initialise' (ID: 179601)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19528287649154663
    2. 'if' → logprob: -2.9452829360961914
    3. ' print' → logprob: -3.0702829360961914
    4. ' if' → logprob: -3.0702829360961914
    5. '#' → logprob: -4.570282936096191
    6. 'length' → logprob: -4.820282936096191
    7. 'len' → logprob: -5.195282936096191
    8. ' length' → logprob: -6.195282936096191
    9. ' #' → logprob: -6.695282936096191
    10. ' longueur' → logprob: -6.695282936096191

Token 29: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22526541352272034
    2. 'a' → logprob: -2.9752655029296875
    3. ' a' → logprob: -3.4752655029296875
    4. 's' → logprob: -3.9752655029296875
    5. ' une' → logprob: -4.2252655029296875
    6. 'count' → logprob: -4.3502655029296875
    7. 'r' → logprob: -4.6002655029296875
    8. 'n' → logprob: -4.7252655029296875
    9. ' ' → logprob: -4.8502655029296875
    10. ' la' → logprob: -5.2252655029296875

Token 30: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6119723320007324
    2. 'chaine' → logprob: -1.7369723320007324
    3. 's' → logprob: -3.1119723320007324
    4. 'comp' → logprob: -3.1119723320007324
    5. 'i' → logprob: -3.2369723320007324
    6. 'count' → logprob: -3.3619723320007324
    7. '#' → logprob: -3.6119723320007324
    8. 'n' → logprob: -4.361972332000732
    9. 'counter' → logprob: -4.611972332000732
    10. 'variable' → logprob: -4.861972332000732

Token 31: ' L' (ID: 451)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6465305685997009
    2. 's' → logprob: -2.0215306282043457
    3. 'L' → logprob: -2.5215306282043457
    4. 'liste' → logprob: -2.8965306282043457
    5. '[]' → logprob: -3.2715306282043457
    6. ' lst' → logprob: -3.2715306282043457
    7. 'S' → logprob: -3.5215306282043457
    8. ' L' → logprob: -3.7715306282043457
    9. 'l' → logprob: -4.271530628204346
    10. '_l' → logprob: -5.021530628204346

Token 32: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04490751400589943
    2. '[]' → logprob: -3.669907569885254
    3. 'L' → logprob: -4.794907569885254
    4. '=[]' → logprob: -5.419907569885254
    5. ' L' → logprob: -6.044907569885254
    6. ' []' → logprob: -6.544907569885254
    7. '=' → logprob: -6.919907569885254
    8. '[' → logprob: -8.294907569885254
    9. ' ' → logprob: -8.919907569885254
    10. '_' → logprob: -9.294907569885254

Token 33: ' deux' (ID: 10301)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.34481626749038696
    2. '[' → logprob: -1.4698162078857422
    3. '['' → logprob: -3.969816207885742
    4. ' [' → logprob: -4.219816207885742
    5. ' []' → logprob: -4.469816207885742
    6. '["' → logprob: -4.594816207885742
    7. '[:]' → logprob: -6.719816207885742
    8. '[int' → logprob: -6.844816207885742
    9. 'une' → logprob: -7.219816207885742
    10. ' ' → logprob: -7.594816207885742

Token 34: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.05569326877594
    2. ' éléments' → logprob: -1.05569326877594
    3. ' espaces' → logprob: -1.30569326877594
    4. ' ' → logprob: -5.05569314956665
    5. ' chaînes' → logprob: -5.05569314956665
    6. 'ent' → logprob: -5.80569314956665
    7. 'esp' → logprob: -5.80569314956665
    8. ' elements' → logprob: -6.05569314956665
    9. 'elements' → logprob: -6.43069314956665
    10. ' []' → logprob: -6.68069314956665

Token 35: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0008940708357840776
    2. 'i' → logprob: -7.875894069671631
    3. 'ières' → logprob: -7.875894069671631
    4. 'ier' → logprob: -9.875894546508789
    5. 'ités' → logprob: -10.125894546508789
    6. 'ies' → logprob: -11.625894546508789
    7. 'er' → logprob: -11.750894546508789
    8. 'ers' → logprob: -12.000894546508789
    9. '```' → logprob: -12.625894546508789
    10. 'ié' → logprob: -12.625894546508789

Token 36: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8415356874465942
    2. ' =' → logprob: -1.3415356874465942
    3. 's' → logprob: -1.9665356874465942
    4. ' [' → logprob: -2.0915355682373047
    5. ' :' → logprob: -4.466535568237305
    6. ' ' → logprob: -4.841535568237305
    7. '=[' → logprob: -4.841535568237305
    8. '=' → logprob: -5.716535568237305
    9. ' =[' → logprob: -6.091535568237305
    10. ' s' → logprob: -6.216535568237305

Token 37: ' tous' (ID: 10688)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.663038432598114
    2. ' ' → logprob: -0.788038432598114
    3. '[' → logprob: -3.913038492202759
    4. ' [' → logprob: -4.78803825378418
    5. '1' → logprob: -6.91303825378418
    6. '2' → logprob: -8.78803825378418
    7. '10' → logprob: -8.78803825378418
    8. '3' → logprob: -9.78803825378418
    9. 's' → logprob: -9.91303825378418
    10. '32' → logprob: -10.53803825378418

Token 38: ' les' (ID: 1341)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9778148531913757
    2. ' ég' → logprob: -1.2278149127960205
    3. 'de' → logprob: -1.9778149127960205
    4. ' les' → logprob: -2.6028149127960205
    5. ' à' → logprob: -3.6028149127960205
    6. ' ' → logprob: -4.227814674377441
    7. '0' → logprob: -4.352814674377441
    8. 'les' → logprob: -4.602814674377441
    9. '=' → logprob: -4.852814674377441
    10. 's' → logprob: -5.102814674377441

Token 39: ' deux' (ID: 10301)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3426073491573334
    2. 'de' → logprob: -2.092607259750366
    3. ' ' → logprob: -2.842607259750366
    4. 'élé' → logprob: -3.717607259750366
    5. ' zeros' → logprob: -4.342607498168945
    6. 'z' → logprob: -4.467607498168945
    7. 'zeros' → logprob: -4.467607498168945
    8. ' deux' → logprob: -4.717607498168945
    9. ' z' → logprob: -4.842607498168945
    10. ' éléments' → logprob: -5.092607498168945

Token 40: ' à' (ID: 1221)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.2917030155658722
    2. 'ég' → logprob: -2.04170298576355
    3. ' à' → logprob: -2.66670298576355
    4. '0' → logprob: -3.54170298576355
    5. 'à' → logprob: -4.541703224182129
    6. ' n' → logprob: -5.666703224182129
    7. ' val' → logprob: -5.916703224182129
    8. ' initial' → logprob: -6.166703224182129
    9. ' ' → logprob: -6.541703224182129
    10. 'val' → logprob: -6.916703224182129

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11522939801216125
    2. ' ' → logprob: -2.365229368209839
    3. '1' → logprob: -4.865229606628418
    4. 'z' → logprob: -5.990229606628418
    5. ' zéro' → logprob: -6.115229606628418
    6. ' z' → logprob: -6.615229606628418
    7. ' zero' → logprob: -7.490229606628418
    8. 'zero' → logprob: -8.365229606628418
    9. ' ' → logprob: -8.865229606628418
    10. '2' → logprob: -9.990229606628418

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00035965684219263494
    2. ' ' → logprob: -8.375359535217285
    3. '1' → logprob: -9.375359535217285
    4. 'z' → logprob: -10.500359535217285
    5. '2' → logprob: -12.375359535217285
    6. 'zero' → logprob: -13.500359535217285
    7. '3' → logprob: -13.750359535217285
    8. '10' → logprob: -13.750359535217285
    9. '5' → logprob: -13.875359535217285
    10. 's' → logprob: -14.312859535217285

Token 43: '
' (ID: 198)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02361730858683586
    2. ' L' → logprob: -3.7736172676086426
    3. '[' → logprob: -8.7736177444458
    4. '
' → logprob: -9.5236177444458
    5. ',' → logprob: -10.3986177444458
    6. 's' → logprob: -10.7736177444458
    7. ' :' → logprob: -10.8986177444458
    8. ' ' → logprob: -10.8986177444458
    9. ':' → logprob: -11.2736177444458
    10. ' =' → logprob: -11.3986177444458

Token 44: '#' (ID: 2)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0007188651943579316
    2. ' L' → logprob: -7.25071907043457
    3. '
' → logprob: -12.50071907043457
    4. '[' → logprob: -12.62571907043457
    5. '```' → logprob: -13.37571907043457
    6. '``' → logprob: -16.37571907043457
    7. '`' → logprob: -16.50071907043457
    8. '[
' → logprob: -16.87571907043457
    9. '[L' → logprob: -17.12571907043457
    10. ' 
' → logprob: -17.37571907043457

Token 45: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002827342599630356
    2. ' L' → logprob: -5.877827167510986
    3. '
' → logprob: -11.252827644348145
    4. '```' → logprob: -12.752827644348145
    5. '[' → logprob: -12.877827644348145
    6. ' ' → logprob: -14.502827644348145
    7. '[
' → logprob: -14.627827644348145
    8. 'S' → logprob: -14.877827644348145
    9. '\' → logprob: -14.877827644348145
    10. ' ' → logprob: -15.002827644348145

Token 46: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009243015199899673
    2. '=' → logprob: -5.009243011474609
    3. '.append' → logprob: -6.259243011474609
    4. '[' → logprob: -7.634243011474609
    5. '=[' → logprob: -10.00924301147461
    6. ' =[' → logprob: -10.13424301147461
    7. ' ' → logprob: -11.63424301147461
    8. '.extend' → logprob: -11.63424301147461
    9. ' +=' → logprob: -11.75924301147461
    10. '.' → logprob: -11.75924301147461

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06218536198139191
    2. ' ' → logprob: -3.562185287475586
    3. ']' → logprob: -3.562185287475586
    4. ' ]' → logprob: -6.187185287475586
    5. '2' → logprob: -7.312185287475586
    6. '1' → logprob: -7.437185287475586
    7. ' :]' → logprob: -9.562185287475586
    8. ':]' → logprob: -10.562185287475586
    9. ']=' → logprob: -10.687185287475586
    10. ':' → logprob: -10.687185287475586

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02900802716612816
    2. '],' → logprob: -3.904007911682129
    3. ' ]' → logprob: -5.029007911682129
    4. ',' → logprob: -6.904007911682129
    5. ']=' → logprob: -7.529007911682129
    6. ' ],' → logprob: -8.279007911682129
    7. ' ,' → logprob: -10.404007911682129
    8. ':' → logprob: -11.029007911682129
    9. ' ' → logprob: -11.654007911682129
    10. ':]' → logprob: -12.779007911682129

Token 49: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12318933755159378
    2. ',' → logprob: -2.7481894493103027
    3. '=' → logprob: -3.3731894493103027
    4. ' ,' → logprob: -4.123189449310303
    5. ' ' → logprob: -7.248189449310303
    6. ']' → logprob: -8.248188972473145
    7. ' +=' → logprob: -8.373188972473145
    8. '[' → logprob: -9.873188972473145
    9. ' ]' → logprob: -10.873188972473145
    10. 's' → logprob: -11.123188972473145

Token 50: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.029783006757497787
    2. 'ir' → logprob: -3.654783010482788
    3. 'ent' → logprob: -7.154782772064209
    4. 'ant' → logprob: -7.279782772064209
    5. 'irà' → logprob: -7.654782772064209
    6. '#' → logprob: -7.779782772064209
    7. 'i' → logprob: -8.279783248901367
    8. 'era' → logprob: -8.529783248901367
    9. 'irai' → logprob: -8.779783248901367
    10. '```' → logprob: -9.154783248901367

Token 51: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.007674891501665115
    2. 'à' → logprob: -5.007674694061279
    3. ' to' → logprob: -8.257675170898438
    4. ' ' → logprob: -8.632675170898438
    5. ''à' → logprob: -9.132675170898438
    6. '#' → logprob: -9.632675170898438
    7. ' #' → logprob: -10.132675170898438
    8. ' a' → logprob: -10.257675170898438
    9. '```' → logprob: -10.382675170898438
    10. ')' → logprob: -10.507675170898438

Token 52: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.14130614697933197
    2. 'comp' → logprob: -2.141306161880493
    3. ' stock' → logprob: -5.266305923461914
    4. 'stock' → logprob: -5.516305923461914
    5. ' compt' → logprob: -6.141305923461914
    6. 'count' → logprob: -6.766305923461914
    7. 'com' → logprob: -7.641305923461914
    8. ' comp' → logprob: -8.141305923461914
    9. 'acc' → logprob: -9.266305923461914
    10. 'con' → logprob: -9.266305923461914

Token 53: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.30140379071235657
    2. ' le' → logprob: -2.176403760910034
    3. 'les' → logprob: -2.551403760910034
    4. ' ' → logprob: -3.676403760910034
    5. 'le' → logprob: -4.426403999328613
    6. ' la' → logprob: -4.551403999328613
    7. 's' → logprob: -5.301403999328613
    8. '(' → logprob: -6.051403999328613
    9. ' '' → logprob: -6.801403999328613
    10. ')' → logprob: -6.801403999328613

Token 54: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.32274705171585083
    2. ' nombre' → logprob: -1.322746992111206
    3. 's' → logprob: -5.197747230529785
    4. 'n' → logprob: -6.822747230529785
    5. ' ' → logprob: -7.072747230529785
    6. ' nombres' → logprob: -7.822747230529785
    7. 'nb' → logprob: -7.947747230529785
    8. ' espaces' → logprob: -8.322747230529785
    9. 'spaces' → logprob: -9.072747230529785
    10. 'es' → logprob: -9.322747230529785

Token 55: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2866527736186981
    2. ' d' → logprob: -2.1616528034210205
    3. 'd' → logprob: -3.4116528034210205
    4. 'de' → logprob: -3.4116528034210205
    5. ' des' → logprob: -3.5366528034210205
    6. ' ' → logprob: -4.161652565002441
    7. 's' → logprob: -5.036652565002441
    8. 'des' → logprob: -5.411652565002441
    9. ' total' → logprob: -5.536652565002441
    10. 'total' → logprob: -5.661652565002441

Token 56: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.196794033050537
    2. ' espaces' → logprob: -1.196794033050537
    3. 'a' → logprob: -2.196794033050537
    4. ''' → logprob: -2.821794033050537
    5. ' a' → logprob: -3.071794033050537
    6. ' '' → logprob: -3.196794033050537
    7. ''a' → logprob: -3.946794033050537
    8. 's' → logprob: -4.321794033050537
    9. '0' → logprob: -4.821794033050537
    10. ''s' → logprob: -5.071794033050537

Token 57: ' où' (ID: 15113)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07752665877342224
    2. ''' → logprob: -3.452526569366455
    3. ' que' → logprob: -4.202526569366455
    4. ' où' → logprob: -4.577526569366455
    5. ' '' → logprob: -5.077526569366455
    6. 'où' → logprob: -5.952526569366455
    7. 'que' → logprob: -6.577526569366455
    8. ' (' → logprob: -6.827526569366455
    9. '"' → logprob: -6.952526569366455
    10. '(' → logprob: -7.077526569366455

Token 58: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4646444022655487
    2. 'S' → logprob: -1.714644432067871
    3. ' S' → logprob: -2.589644432067871
    4. ' '' → logprob: -3.839644432067871
    5. ''S' → logprob: -3.964644432067871
    6. '"' → logprob: -4.214644432067871
    7. ''a' → logprob: -4.214644432067871
    8. 'a' → logprob: -4.714644432067871
    9. ' ' → logprob: -5.589644432067871
    10. 's' → logprob: -5.839644432067871

Token 59: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37229201197624207
    2. 'e' → logprob: -1.8722920417785645
    3. '0' → logprob: -3.3722920417785645
    4. 'o' → logprob: -3.8722920417785645
    5. 'i' → logprob: -4.4972920417785645
    6. ' a' → logprob: -4.7472920417785645
    7. '"' → logprob: -4.8722920417785645
    8. 'n' → logprob: -5.1222920417785645
    9. '1' → logprob: -5.2472920417785645
    10. 'b' → logprob: -5.3722920417785645

Token 60: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.046917058527469635
    2. 'p' → logprob: -3.671916961669922
    3. ' "' → logprob: -4.296916961669922
    4. 'A' → logprob: -6.546916961669922
    5. 'P' → logprob: -6.671916961669922
    6. 'pp' → logprob: -6.796916961669922
    7. 'B' → logprob: -7.046916961669922
    8. 'n' → logprob: -8.046916961669922
    9. 'r' → logprob: -8.296916961669922
    10. '"A' → logprob: -8.296916961669922

Token 61: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.23406881093978882
    2. ' a' → logprob: -2.3590688705444336
    3. ' est' → logprob: -3.3590688705444336
    4. ' appara' → logprob: -3.8590688705444336
    5. ' '' → logprob: -4.359068870544434
    6. ' ' → logprob: -4.359068870544434
    7. ' "' → logprob: -4.859068870544434
    8. '"' → logprob: -5.734068870544434
    9. 'a' → logprob: -5.734068870544434
    10. ' appar' → logprob: -5.984068870544434

Token 62: '
' (ID: 198)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.25632989406585693
    2. ',' → logprob: -2.2563300132751465
    3. 's' → logprob: -3.1313300132751465
    4. ' L' → logprob: -3.7563300132751465
    5. ' ,' → logprob: -4.5063300132751465
    6. 'S' → logprob: -4.5063300132751465
    7. ' 
' → logprob: -4.6313300132751465
    8. '```' → logprob: -5.1313300132751465
    9. ',
' → logprob: -5.3813300132751465
    10. '  
' → logprob: -6.1313300132751465

Token 63: '#' (ID: 2)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.026816537603735924
    2. ',' → logprob: -4.901816368103027
    3. 'S' → logprob: -5.026816368103027
    4. '[' → logprob: -5.901816368103027
    5. ' L' → logprob: -6.026816368103027
    6. 's' → logprob: -6.151816368103027
    7. '```' → logprob: -6.526816368103027
    8. '#' → logprob: -7.276816368103027
    9. 'A' → logprob: -7.276816368103027
    10. ' ,' → logprob: -7.276816368103027

Token 64: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0022866877261549234
    2. ' L' → logprob: -6.252286911010742
    3. 'S' → logprob: -8.502286911010742
    4. '#' → logprob: -9.627286911010742
    5. 'A' → logprob: -9.627286911010742
    6. ' #' → logprob: -12.252286911010742
    7. '```' → logprob: -12.252286911010742
    8. 's' → logprob: -12.752286911010742
    9. ' ' → logprob: -12.752286911010742
    10. ' ' → logprob: -13.627286911010742

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001382974674925208
    2. ' =' → logprob: -6.751382827758789
    3. '=' → logprob: -9.001382827758789
    4. '0' → logprob: -10.251382827758789
    5. '#' → logprob: -11.001382827758789
    6. '=[' → logprob: -11.376382827758789
    7. '[
' → logprob: -11.501382827758789
    8. '```' → logprob: -12.001382827758789
    9. ' [' → logprob: -12.751382827758789
    10. 's' → logprob: -13.501382827758789

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013547601411119103
    2. '0' → logprob: -6.751354694366455
    3. ' ' → logprob: -8.751355171203613
    4. '```' → logprob: -12.251355171203613
    5. ']' → logprob: -12.813855171203613
    6. '2' → logprob: -12.813855171203613
    7. '   ' → logprob: -13.126355171203613
    8. '[' → logprob: -13.251355171203613
    9. '  ' → logprob: -13.313855171203613
    10. '#' → logprob: -13.626355171203613

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002807623823173344
    2. ' ]' → logprob: -8.250280380249023
    3. 'serv' → logprob: -11.750280380249023
    4. '[' → logprob: -13.250280380249023
    5. '#' → logprob: -13.375280380249023
    6. '0' → logprob: -13.500280380249023
    7. ' serv' → logprob: -14.250280380249023
    8. 's' → logprob: -14.375280380249023
    9. ' ' → logprob: -14.375280380249023
    10. 'd' → logprob: -15.000280380249023

Token 68: ' serv' (ID: 2096)
  Prédit: ' serv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' serv' → logprob: -0.5222871899604797
    2. 'serv' → logprob: -1.022287130355835
    3. ' =' → logprob: -4.022287368774414
    4. ' sert' → logprob: -4.522287368774414
    5. ' servir' → logprob: -4.897287368774414
    6. ' ' → logprob: -5.522287368774414
    7. '=' → logprob: -5.522287368774414
    8. ' servent' → logprob: -7.522287368774414
    9. ' #' → logprob: -8.147287368774414
    10. ' servant' → logprob: -8.397287368774414

Token 69: 'ira' (ID: 2633)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.3810518980026245
    2. 'ira' → logprob: -1.2560518980026245
    3. 'a' → logprob: -3.506052017211914
    4. 'era' → logprob: -7.006052017211914
    5. '```' → logprob: -7.381052017211914
    6. '#' → logprob: -8.506052017211914
    7. 'irà' → logprob: -10.131052017211914
    8. 'i' → logprob: -10.131052017211914
    9. '[' → logprob: -10.381052017211914
    10. ' ira' → logprob: -10.381052017211914

Token 70: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04463566467165947
    2. 'à' → logprob: -3.169635772705078
    3. ' to' → logprob: -7.294635772705078
    4. ' ' → logprob: -8.044635772705078
    5. ''à' → logprob: -8.044635772705078
    6. 'a' → logprob: -9.794635772705078
    7. 'to' → logprob: -9.919635772705078
    8. ' a' → logprob: -10.044635772705078
    9. '_' → logprob: -10.419635772705078
    10. '’à' → logprob: -10.544635772705078

Token 71: ' compter' (ID: 81694)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7000815272331238
    2. ' compter' → logprob: -0.7000815272331238
    3. 'count' → logprob: -5.2000813484191895
    4. 'com' → logprob: -7.7000813484191895
    5. '<|end|>' → logprob: -8.950081825256348
    6. 'con' → logprob: -9.200081825256348
    7. 'c' → logprob: -9.450081825256348
    8. 'cont' → logprob: -9.575081825256348
    9. '```' → logprob: -9.575081825256348
    10. ' compt' → logprob: -9.700081825256348

Token 72: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.04017742723226547
    2. 'le' → logprob: -3.790177345275879
    3. ' ' → logprob: -4.665177345275879
    4. ' ' → logprob: -5.790177345275879
    5. '_le' → logprob: -6.540177345275879
    6. 'au' → logprob: -7.415177345275879
    7. ' the' → logprob: -7.790177345275879
    8. ' au' → logprob: -8.165177345275879
    9. '  ' → logprob: -8.290177345275879
    10. 'nombre' → logprob: -8.665177345275879

Token 73: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.20159479975700378
    2. 'nombre' → logprob: -1.7015948295593262
    3. ' ' → logprob: -9.576594352722168
    4. ' nombres' → logprob: -9.826594352722168
    5. ' nomb' → logprob: -11.326594352722168
    6. 'n' → logprob: -11.701594352722168
    7. ' number' → logprob: -11.951594352722168
    8. ' ' → logprob: -12.076594352722168
    9. '_nombre' → logprob: -12.076594352722168
    10. 'Nombre' → logprob: -12.451594352722168

Token 74: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5754011273384094
    2. ' de' → logprob: -1.0754010677337646
    3. 'd' → logprob: -2.9504010677337646
    4. ' d' → logprob: -3.5754010677337646
    5. 'des' → logprob: -5.200401306152344
    6. ' of' → logprob: -5.450401306152344
    7. ' des' → logprob: -6.450401306152344
    8. ' ' → logprob: -6.825401306152344
    9. 'où' → logprob: -7.325401306152344
    10. '[' → logprob: -7.825401306152344

Token 75: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.14011061191558838
    2. ' fois' → logprob: -2.390110492706299
    3. '"' → logprob: -4.265110492706299
    4. 'de' → logprob: -4.765110492706299
    5. 'f' → logprob: -5.015110492706299
    6. ' ' → logprob: -5.640110492706299
    7. '```' → logprob: -7.140110492706299
    8. ' "' → logprob: -7.515110492706299
    9. ''f' → logprob: -7.515110492706299
    10. 'fo' → logprob: -7.640110492706299

Token 76: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.6750986576080322
    2. 'où' → logprob: -1.1750986576080322
    3. ' where' → logprob: -1.9250986576080322
    4. ' ' → logprob: -3.9250986576080322
    5. 'where' → logprob: -5.050098419189453
    6. ' "' → logprob: -5.925098419189453
    7. '  ' → logprob: -6.675098419189453
    8. '"' → logprob: -7.050098419189453
    9. '(' → logprob: -7.300098419189453
    10. 's' → logprob: -7.550098419189453

Token 77: ' tout' (ID: 5501)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12099380791187286
    2. ' "' → logprob: -2.7459938526153564
    3. '"B' → logprob: -3.8709938526153564
    4. ''' → logprob: -4.495993614196777
    5. ' ' → logprob: -4.745993614196777
    6. 'B' → logprob: -5.620993614196777
    7. '"A' → logprob: -7.620993614196777
    8. '`' → logprob: -7.620993614196777
    9. 'S' → logprob: -7.745993614196777
    10. '"S' → logprob: -7.745993614196777

Token 78: ' autre' (ID: 20278)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.6501079797744751
    2. 'e' → logprob: -1.650107979774475
    3. ' autre' → logprob: -2.5251078605651855
    4. 'es' → logprob: -2.9001078605651855
    5. ' caract' → logprob: -3.2751078605651855
    6. ' e' → logprob: -4.4001078605651855
    7. ' ' → logprob: -4.4001078605651855
    8. 'car' → logprob: -4.5251078605651855
    9. '```' → logprob: -4.5251078605651855
    10. ' caractères' → logprob: -4.6501078605651855

Token 79: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.7861155271530151
    2. 'car' → logprob: -0.9111155271530151
    3. ' caract' → logprob: -2.5361156463623047
    4. ' ' → logprob: -3.7861156463623047
    5. 's' → logprob: -4.286115646362305
    6. ' caractères' → logprob: -4.536115646362305
    7. 'e' → logprob: -6.036115646362305
    8. ' car' → logprob: -6.161115646362305
    9. ' lettre' → logprob: -6.161115646362305
    10. 'c' → logprob: -6.286115646362305

Token 80: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.20743711292743683
    2. ' appara' → logprob: -2.582437038421631
    3. 's' → logprob: -3.207437038421631
    4. 'appe' → logprob: -3.582437038421631
    5. ' est' → logprob: -4.832437038421631
    6. ' s' → logprob: -4.957437038421631
    7. ' n' → logprob: -5.082437038421631
    8. ' ' → logprob: -5.457437038421631
    9. ' appar' → logprob: -5.707437038421631
    10. '```' → logprob: -6.207437038421631

Token 81: '
' (ID: 198)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0004481885116547346
    2. '
' → logprob: -8.375448226928711
    3. '```' → logprob: -9.000448226928711
    4. ' L' → logprob: -10.000448226928711
    5. 'for' → logprob: -11.125448226928711
    6. 's' → logprob: -11.625448226928711
    7. ' 
' → logprob: -12.375448226928711
    8. '#' → logprob: -12.500448226928711
    9. '  
' → logprob: -12.875448226928711
    10. '`' → logprob: -13.125448226928711

Token 82: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002715873415581882
    2. '
' → logprob: -8.500271797180176
    3. '```' → logprob: -10.250271797180176
    4. 'for' → logprob: -11.125271797180176
    5. ' L' → logprob: -11.375271797180176
    6. 's' → logprob: -13.125271797180176
    7. '  
' → logprob: -13.750271797180176
    8. '

' → logprob: -14.250271797180176
    9. '``' → logprob: -14.375271797180176
    10. ' 
' → logprob: -14.375271797180176

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039616137742996216
    2. '=' → logprob: -3.289616107940674
    3. '[' → logprob: -6.539616107940674
    4. '=[' → logprob: -9.664616584777832
    5. ' =[' → logprob: -10.039616584777832
    6. '[:]' → logprob: -12.664616584777832
    7. '[]' → logprob: -13.039616584777832
    8. '.append' → logprob: -13.039616584777832
    9. '.' → logprob: -13.039616584777832
    10. '=[]' → logprob: -13.164616584777832

Token 84: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029751067981123924
    2. ' [' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.02975082397461
    4. '0' → logprob: -16.52975082397461
    5. ' ' → logprob: -17.27975082397461
    6. '[]' → logprob: -17.90475082397461
    7. '['' → logprob: -18.15475082397461
    8. '([' → logprob: -18.15475082397461
    9. '=[' → logprob: -18.27975082397461
    10. '[-' → logprob: -18.52975082397461

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '2' → logprob: -19.500003814697266
    4. '00' → logprob: -19.750003814697266
    5. ',' → logprob: -20.375003814697266
    6. '۰' → logprob: -20.375003814697266
    7. ' ' → logprob: -21.000003814697266
    8. '```' → logprob: -21.062503814697266
    9. '  ' → logprob: -21.187503814697266
    10. '1' → logprob: -21.437503814697266

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ' ,' → logprob: -10.500033378601074
    3. '0' → logprob: -12.125033378601074
    4. ' ' → logprob: -15.625033378601074
    5. ',
' → logprob: -15.625033378601074
    6. ']' → logprob: -17.62503433227539
    7. '2' → logprob: -17.75003433227539
    8. '00' → logprob: -19.25003433227539
    9. '```' → logprob: -19.25003433227539
    10. '1' → logprob: -19.37503433227539

Token 87: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163747429847717
    2. ' ' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.764163970947266
    4. '   ' → logprob: -16.389163970947266
    5. '  ' → logprob: -16.889163970947266
    6. '1' → logprob: -17.951663970947266
    7. '2' → logprob: -18.264163970947266
    8. '```' → logprob: -18.639163970947266
    9. '۰' → logprob: -18.639163970947266
    10. '00' → logprob: -19.014163970947266

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. ']' → logprob: -15.6250581741333
    4. '۰' → logprob: -17.625059127807617
    5. ')' → logprob: -17.812559127807617
    6. '1' → logprob: -18.250059127807617
    7. '   ' → logprob: -18.625059127807617
    8. '０' → logprob: -18.687559127807617
    9. '00' → logprob: -18.750059127807617
    10. '```' → logprob: -18.812559127807617

Token 89: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02978312037885189
    2. ')' → logprob: -3.529783010482788
    3. '])' → logprob: -10.654783248901367
    4. ' ]' → logprob: -12.404783248901367
    5. ']
' → logprob: -13.154783248901367
    6. ')]' → logprob: -13.529783248901367
    7. ']

' → logprob: -15.029783248901367
    8. '）' → logprob: -15.154783248901367
    9. '```' → logprob: -15.154783248901367
    10. '}' → logprob: -15.654783248901367

Token 90: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003416607796680182
    2. '
' → logprob: -8.625341415405273
    3. ' for' → logprob: -9.125341415405273
    4. 'f' → logprob: -10.000341415405273
    5. '```' → logprob: -12.625341415405273
    6. '' → logprob: -14.000341415405273
    7. 'F' → logprob: -14.250341415405273
    8. 'i' → logprob: -14.375341415405273
    9. '#' → logprob: -14.500341415405273
    10. '

' → logprob: -14.750341415405273

Token 91: ' Util' (ID: 13564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5928495486150496e-05
    2. ' for' → logprob: -11.250016212463379
    3. '```' → logprob: -13.000016212463379
    4. 'pour' → logprob: -15.250016212463379
    5. 'f' → logprob: -16.000015258789062
    6. 'For' → logprob: -16.250015258789062
    7. 'fo' → logprob: -16.875015258789062
    8. '#' → logprob: -16.875015258789062
    9. 'Pour' → logprob: -17.750015258789062
    10. '`' → logprob: -18.000015258789062

Token 92: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.01159744430333376
    2. 's' → logprob: -5.136597633361816
    3. 'ser' → logprob: -5.386597633361816
    4. '#' → logprob: -7.886597633361816
    5. 'ses' → logprob: -8.136597633361816
    6. 'sé' → logprob: -8.386597633361816
    7. '```' → logprob: -9.511597633361816
    8. 'sage' → logprob: -10.386597633361816
    9. 'sement' → logprob: -11.761597633361816
    10. 'sera' → logprob: -12.011597633361816

Token 93: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5180553793907166
    2. 'for' → logprob: -1.2680554389953613
    3. ' a' → logprob: -3.2680554389953613
    4. ' un' → logprob: -3.3930554389953613
    5. ' une' → logprob: -3.5180554389953613
    6. 'r' → logprob: -4.518055438995361
    7. ' ' → logprob: -5.518055438995361
    8. 's' → logprob: -5.643055438995361
    9. 'a' → logprob: -6.768055438995361
    10. 'une' → logprob: -8.143054962158203

Token 94: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4745118319988251
    2. ' for' → logprob: -0.9745118618011475
    3. 'f' → logprob: -8.974512100219727
    4. ' ' → logprob: -9.724512100219727
    5. ':' → logprob: -9.849512100219727
    6. ' boucle' → logprob: -9.849512100219727
    7. ' f' → logprob: -10.849512100219727
    8. ' ' → logprob: -11.099512100219727
    9. 'pour' → logprob: -11.474512100219727
    10. 's' → logprob: -11.474512100219727

Token 95: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3484855592250824
    2. 'for' → logprob: -1.2234855890274048
    3. ' pour' → logprob: -10.723485946655273
    4. ':' → logprob: -12.348485946655273
    5. ' ' → logprob: -12.598485946655273
    6. ' `' → logprob: -12.723485946655273
    7. 'pour' → logprob: -12.723485946655273
    8. '```' → logprob: -13.848485946655273
    9. '.for' → logprob: -14.223485946655273
    10. 's' → logprob: -14.598485946655273

Token 96: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3133329153060913
    2. ' for' → logprob: -1.5633329153060913
    3. 'for' → logprob: -4.313333034515381
    4. ' pour' → logprob: -4.438333034515381
    5. ' ' → logprob: -4.563333034515381
    6. ' caract' → logprob: -4.813333034515381
    7. 'i' → logprob: -5.938333034515381
    8. 'pour' → logprob: -6.188333034515381
    9. ' c' → logprob: -6.313333034515381
    10. 'car' → logprob: -6.563333034515381

Token 97: ' rép' (ID: 64372)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.15319320559501648
    2. ' i' → logprob: -2.528193235397339
    3. 'c' → logprob: -3.528193235397339
    4. ' char' → logprob: -4.52819299697876
    5. ' caract' → logprob: -4.77819299697876
    6. ' car' → logprob: -5.40319299697876
    7. 'car' → logprob: -5.65319299697876
    8. ' ' → logprob: -6.40319299697876
    9. 'i' → logprob: -6.40319299697876
    10. 'char' → logprob: -7.15319299697876

Token 98: 'éter' (ID: 73737)
  Prédit: 'éter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.0003074566484428942
    2. 'eter' → logprob: -8.250307083129883
    3. 'ét' → logprob: -11.500307083129883
    4. 'et' → logprob: -11.750307083129883
    5. 'é' → logprob: -11.750307083129883
    6. 'êter' → logprob: -11.875307083129883
    7. 'érer' → logprob: -12.000307083129883
    8. 'étr' → logprob: -13.125307083129883
    9. 'été' → logprob: -13.625307083129883
    10. '#' → logprob: -14.500307083129883

Token 99: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04585573077201843
    2. ' ' → logprob: -4.045855522155762
    3. ' S' → logprob: -4.670855522155762
    4. 'i' → logprob: -5.420855522155762
    5. ' c' → logprob: -5.420855522155762
    6. ' caract' → logprob: -5.920855522155762
    7. ' for' → logprob: -6.795855522155762
    8. ' car' → logprob: -7.295855522155762
    9. ' len' → logprob: -7.420855522155762
    10. 'c' → logprob: -7.795855522155762

Token 100: ' instructions' (ID: 15543)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.058597031980752945
    2. ' caract' → logprob: -3.1835970878601074
    3. ' car' → logprob: -4.808597087860107
    4. ' c' → logprob: -6.433597087860107
    5. 'c' → logprob: -6.808597087860107
    6. ' caractère' → logprob: -6.933597087860107
    7. ' i' → logprob: -7.058597087860107
    8. 'char' → logprob: -7.308597087860107
    9. ' caractères' → logprob: -7.558597087860107
    10. ' ' → logprob: -7.808597087860107

Token 101: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22582407295703888
    2. 'for' → logprob: -1.6008241176605225
    3. ' in' → logprob: -8.350824356079102
    4. ' ' → logprob: -10.475824356079102
    5. ' i' → logprob: -10.600824356079102
    6. 'in' → logprob: -10.975824356079102
    7. ' en' → logprob: -10.975824356079102
    8. ' pour' → logprob: -11.225824356079102
    9. 's' → logprob: -11.350824356079102
    10. ' dans' → logprob: -11.725824356079102

Token 102: ' l' (ID: 305)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9727082848548889
    2. 'p' → logprob: -1.8477082252502441
    3. ' chaque' → logprob: -1.9727082252502441
    4. ' travers' → logprob: -2.972708225250244
    5. 'pp' → logprob: -3.847708225250244
    6. ' parcour' → logprob: -3.972708225250244
    7. 'for' → logprob: -4.097708225250244
    8. 'faire' → logprob: -4.222708225250244
    9. 'r' → logprob: -4.347708225250244
    10. 'len' → logprob: -4.347708225250244

Token 103: ''intérieur' (ID: 102083)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1973123401403427
    2. 'len' → logprob: -1.947312355041504
    3. 'ange' → logprob: -3.947312355041504
    4. 'for' → logprob: -5.322312355041504
    5. 'rang' → logprob: -6.197312355041504
    6. 'en' → logprob: -6.572312355041504
    7. 's' → logprob: -6.697312355041504
    8. 'ength' → logprob: -6.697312355041504
    9. '=len' → logprob: -6.697312355041504
    10. 'long' → logprob: -8.072312355041504

Token 104: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34968075156211853
    2. 'for' → logprob: -1.224680781364441
    3. ' in' → logprob: -7.0996809005737305
    4. ':' → logprob: -9.59968090057373
    5. 's' → logprob: -9.59968090057373
    6. ' en' → logprob: -9.72468090057373
    7. 'in' → logprob: -9.72468090057373
    8. ' ' → logprob: -10.59968090057373
    9. '```' → logprob: -10.97468090057373
    10. ' range' → logprob: -11.09968090057373

Token 105: ' bloc' (ID: 51218)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.51325523853302
    2. 'for' → logprob: -1.88825523853302
    3. ' S' → logprob: -2.3882551193237305
    4. 'range' → logprob: -3.2632551193237305
    5. 'code' → logprob: -3.2632551193237305
    6. ' code' → logprob: -3.7632551193237305
    7. ' for' → logprob: -4.0132551193237305
    8. ' range' → logprob: -4.7632551193237305
    9. 'texte' → logprob: -5.0132551193237305
    10. 'chaine' → logprob: -5.2632551193237305

Token 106: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.524614155292511
    2. ' for' → logprob: -0.899614155292511
    3. 's' → logprob: -7.524614334106445
    4. ' in' → logprob: -8.149614334106445
    5. ' i' → logprob: -8.399614334106445
    6. 'car' → logprob: -9.399614334106445
    7. 'i' → logprob: -9.649614334106445
    8. 'S' → logprob: -10.024614334106445
    9. 'in' → logprob: -10.024614334106445
    10. ' c' → logprob: -10.024614334106445

Token 107: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12947893142700195
    2. ' for' → logprob: -2.129478931427002
    3. 'pour' → logprob: -6.129478931427002
    4. 'in' → logprob: -9.129478454589844
    5. ' pour' → logprob: -9.379478454589844
    6. 's' → logprob: -9.879478454589844
    7. ':' → logprob: -10.254478454589844
    8. 'S' → logprob: -10.629478454589844
    9. ' in' → logprob: -10.754478454589844
    10. 'car' → logprob: -11.504478454589844

Token 108: ' fois' (ID: 14697)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.405668169260025
    2. 'for' → logprob: -1.1556681394577026
    3. ':' → logprob: -4.655668258666992
    4. ' in' → logprob: -6.030668258666992
    5. ' ' → logprob: -6.405668258666992
    6. 'in' → logprob: -7.030668258666992
    7. ' :' → logprob: -7.655668258666992
    8. 's' → logprob: -7.780668258666992
    9. ' S' → logprob: -7.780668258666992
    10. ' range' → logprob: -7.780668258666992

Token 109: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47421976923942566
    2. ' for' → logprob: -0.974219799041748
    3. 'range' → logprob: -10.34921932220459
    4. '3' → logprob: -10.72421932220459
    5. ':' → logprob: -10.72421932220459
    6. ' range' → logprob: -11.22421932220459
    7. '
' → logprob: -11.34921932220459
    8. ' 
' → logprob: -11.72421932220459
    9. '```' → logprob: -11.97421932220459
    10. ':
' → logprob: -12.22421932220459

Token 110: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06997466832399368
    2. ' for' → logprob: -2.694974660873413
    3. 'range' → logprob: -11.444974899291992
    4. '
' → logprob: -11.819974899291992
    5. '```' → logprob: -12.194974899291992
    6. '3' → logprob: -12.194974899291992
    7. ':' → logprob: -13.069974899291992
    8. ' range' → logprob: -13.194974899291992
    9. 'S' → logprob: -13.444974899291992
    10. ' 
' → logprob: -14.194974899291992

Token 111: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003600901924073696
    2. ' for' → logprob: -5.62860107421875
    3. '
' → logprob: -14.75360107421875
    4. '```' → logprob: -15.50360107421875
    5. 'i' → logprob: -15.75360107421875
    6. 'range' → logprob: -17.00360107421875
    7. '3' → logprob: -18.87860107421875
    8. 'while' → logprob: -19.00360107421875
    9. 'For' → logprob: -19.00360107421875
    10. '	for' → logprob: -19.25360107421875

Token 112: ' fonction' (ID: 17610)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2312450408935547
    2. 'for' → logprob: -1.7312450408935547
    3. ' range' → logprob: -3.9812450408935547
    4. ' ' → logprob: -6.106245040893555
    5. ' code' → logprob: -6.231245040893555
    6. 'range' → logprob: -6.231245040893555
    7. 'r' → logprob: -6.606245040893555
    8. 's' → logprob: -6.981245040893555
    9. ' ' → logprob: -7.981245040893555
    10. ' in' → logprob: -8.231245040893555

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1433756798505783
    2. 'range' → logprob: -2.0183756351470947
    3. ' for' → logprob: -8.393375396728516
    4. ' ' → logprob: -9.143375396728516
    5. ' len' → logprob: -9.143375396728516
    6. '```' → logprob: -9.643375396728516
    7. 'for' → logprob: -9.893375396728516
    8. '`' → logprob: -10.143375396728516
    9. ' `' → logprob: -10.768375396728516
    10. ' ' → logprob: -11.143375396728516

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -16.0
    3. '(
' → logprob: -16.25
    4. '3' → logprob: -17.625
    5. '(len' → logprob: -18.25
    6. '```' → logprob: -18.25
    7. '()' → logprob: -19.0
    8. '((' → logprob: -19.5
    9. 's' → logprob: -19.75
    10. '(n' → logprob: -19.75

Token 115: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5803211331367493
    2. '3' → logprob: -0.8303211331367493
    3. ')' → logprob: -5.455321311950684
    4. ')(' → logprob: -9.455321311950684
    5. ' ' → logprob: -11.830321311950684
    6. '```' → logprob: -12.080321311950684
    7. '1' → logprob: -13.080321311950684
    8. ' (' → logprob: -13.830321311950684
    9. ' )' → logprob: -13.955321311950684
    10. '0' → logprob: -14.205321311950684

Token 116: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012559917755424976
    2. ')' → logprob: -4.38755989074707
    3. '(len' → logprob: -10.76255989074707
    4. ' )' → logprob: -11.88755989074707
    5. '(n' → logprob: -12.26255989074707
    6. '3' → logprob: -12.51255989074707
    7. ' (' → logprob: -12.51255989074707
    8. '```' → logprob: -13.01255989074707
    9. ')(' → logprob: -13.13755989074707
    10. '())' → logprob: -13.88755989074707

Token 117: ' gén' (ID: 15330)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15156002342700958
    2. 'for' → logprob: -2.401560068130493
    3. ' for' → logprob: -3.526560068130493
    4. ' :' → logprob: -3.901560068130493
    5. ':
' → logprob: -8.651559829711914
    6. ' ' → logprob: -9.526559829711914
    7. ' pour' → logprob: -10.026559829711914
    8. ')' → logprob: -10.276559829711914
    9. '):' → logprob: -10.526559829711914
    10. ' :
' → logprob: -10.651559829711914

Token 118: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3189854025840759
    2. 'ère' → logprob: -1.3189854621887207
    3. 'ere' → logprob: -5.693985462188721
    4. 'èr' → logprob: -6.818985462188721
    5. 'érer' → logprob: -8.193984985351562
    6. 'range' → logprob: -8.568984985351562
    7. 'era' → logprob: -8.568984985351562
    8. '```' → logprob: -9.193984985351562
    9. 'ération' → logprob: -9.568984985351562
    10. 'èrent' → logprob: -9.818984985351562

Token 119: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6235421299934387
    2. ' ' → logprob: -1.498542070388794
    3. ' range' → logprob: -2.498542070388794
    4. ' (' → logprob: -2.998542070388794
    5. ' un' → logprob: -3.498542070388794
    6. '3' → logprob: -3.873542070388794
    7. ' une' → logprob: -4.248542308807373
    8. ' la' → logprob: -4.373542308807373
    9. 'range' → logprob: -4.498542308807373
    10. '(range' → logprob: -5.123542308807373

Token 120: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.11078464239835739
    2. 'sequence' → logprob: -2.8607845306396484
    3. ' sé' → logprob: -3.3607845306396484
    4. 's' → logprob: -4.860784530639648
    5. 'range' → logprob: -6.360784530639648
    6. ' range' → logprob: -6.610784530639648
    7. 'sé' → logprob: -6.735784530639648
    8. ' liste' → logprob: -8.360784530639648
    9. ' série' → logprob: -8.360784530639648
    10. ' plage' → logprob: -8.735784530639648

Token 121: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0040603517554700375
    2. 'quences' → logprob: -6.0040602684021
    3. 'q' → logprob: -7.5040602684021
    4. 'que' → logprob: -8.004060745239258
    5. 'rie' → logprob: -8.004060745239258
    6. 'range' → logprob: -8.504060745239258
    7. 'qu' → logprob: -9.754060745239258
    8. 'ries' → logprob: -10.754060745239258
    9. 'QUENCE' → logprob: -11.129060745239258
    10. 'quent' → logprob: -11.504060745239258

Token 122: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2508993446826935
    2. ' for' → logprob: -2.250899314880371
    3. ' (' → logprob: -2.875899314880371
    4. '(range' → logprob: -3.875899314880371
    5. 'for' → logprob: -4.250899314880371
    6. ' ' → logprob: -4.375899314880371
    7. ' de' → logprob: -5.250899314880371
    8. ' range' → logprob: -5.875899314880371
    9. 'range' → logprob: -6.500899314880371
    10. ':' → logprob: -7.250899314880371

Token 123: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.597173273563385
    2. 'ent' → logprob: -1.3471732139587402
    3. ' ent' → logprob: -2.8471732139587402
    4. ' valeurs' → logprob: -3.0971732139587402
    5. '3' → logprob: -3.2221732139587402
    6. '0' → logprob: -4.34717321395874
    7. 'nombre' → logprob: -4.34717321395874
    8. 'val' → logprob: -4.47217321395874
    9. 'n' → logprob: -6.09717321395874
    10. ' ' → logprob: -6.34717321395874

Token 124: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.07013160735368729
    2. 'ières' → logprob: -2.820131540298462
    3. 'ier' → logprob: -5.570131778717041
    4. 'i' → logprob: -6.320131778717041
    5. '3' → logprob: -6.945131778717041
    6. 'ière' → logprob: -7.570131778717041
    7. 'range' → logprob: -7.945131778717041
    8. 'er' → logprob: -7.945131778717041
    9. 'ités' → logprob: -10.070131301879883
    10. '```' → logprob: -10.070131301879883

Token 125: ' ' (ID: 5310)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12835779786109924
    2. ' (' → logprob: -2.8783578872680664
    3. ' ' → logprob: -3.8783578872680664
    4. ':' → logprob: -4.378357887268066
    5. ' de' → logprob: -4.753357887268066
    6. '0' → logprob: -4.878357887268066
    7. ' allant' → logprob: -5.253357887268066
    8. '[' → logprob: -5.628357887268066
    9. ' [' → logprob: -7.128357887268066
    10. ' :' → logprob: -7.253357887268066

Token 126: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19691281020641327
    2. '0' → logprob: -2.3219127655029297
    3. ' ' → logprob: -3.9469127655029297
    4. ' (' → logprob: -4.07191276550293
    5. ':' → logprob: -4.57191276550293
    6. ' de' → logprob: -4.82191276550293
    7. ' allant' → logprob: -5.07191276550293
    8. 'for' → logprob: -5.44691276550293
    9. '[' → logprob: -5.44691276550293
    10. ' for' → logprob: -5.94691276550293

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3799472749233246
    2. ' ' → logprob: -1.379947304725647
    3. '3' → logprob: -2.7549471855163574
    4. ' range' → logprob: -7.629947185516357
    5. 'range' → logprob: -8.254947662353516
    6. ' for' → logprob: -9.879947662353516
    7. '(' → logprob: -10.629947662353516
    8. 'for' → logprob: -10.879947662353516
    9. '1' → logprob: -11.129947662353516
    10. ' ' → logprob: -11.379947662353516

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004112000111490488
    2. ' ' → logprob: -5.5041117668151855
    3. '3' → logprob: -10.504112243652344
    4. '```' → logprob: -13.129112243652344
    5. '[' → logprob: -14.004112243652344
    6. 'range' → logprob: -14.129112243652344
    7. '(' → logprob: -14.254112243652344
    8. ' range' → logprob: -14.504112243652344
    9. '  ' → logprob: -14.879112243652344
    10. '   ' → logprob: -15.504112243652344

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012299923691898584
    2. ' ,' → logprob: -6.876229763031006
    3. ' ' → logprob: -9.876230239868164
    4. '1' → logprob: -9.876230239868164
    5. '3' → logprob: -10.126230239868164
    6. '0' → logprob: -10.626230239868164
    7. '2' → logprob: -11.126230239868164
    8. '
' → logprob: -12.751230239868164
    9. ',
' → logprob: -13.376230239868164
    10. ' to' → logprob: -13.376230239868164

Token 130: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25196754932403564
    2. '1' → logprob: -1.5019675493240356
    3. ' ' → logprob: -10.251967430114746
    4. ',' → logprob: -14.001967430114746
    5. '  ' → logprob: -14.251967430114746
    6. '```' → logprob: -14.501967430114746
    7. ' ' → logprob: -14.626967430114746
    8. ' ,' → logprob: -14.751967430114746
    9. '3' → logprob: -16.001968383789062
    10. ' 
' → logprob: -17.126968383789062

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024758970830589533
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.00247573852539
    4. ',' → logprob: -17.12747573852539
    5. '```' → logprob: -17.12747573852539
    6. '  ' → logprob: -17.37747573852539
    7. ' ' → logprob: -18.75247573852539
    8. '
' → logprob: -18.87747573852539
    9. ' ,' → logprob: -19.62747573852539
    10. '3' → logprob: -19.75247573852539

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003218766360078007
    2. ' ,' → logprob: -8.125322341918945
    3. '2' → logprob: -11.000322341918945
    4. ' et' → logprob: -12.375322341918945
    5. ',
' → logprob: -13.500322341918945
    6. '<|end|>' → logprob: -13.750322341918945
    7. '3' → logprob: -14.250322341918945
    8. ' and' → logprob: -15.250322341918945
    9. '```' → logprob: -15.375322341918945
    10. '1' → logprob: -15.375322341918945

Token 133: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06998111307621002
    2. ' ' → logprob: -2.694981098175049
    3. ' and' → logprob: -11.069981575012207
    4. ' et' → logprob: -11.444981575012207
    5. 'et' → logprob: -11.944981575012207
    6. '```' → logprob: -11.944981575012207
    7. 'and' → logprob: -12.944981575012207
    8. ',' → logprob: -14.069981575012207
    9. ' ' → logprob: -14.319981575012207
    10. '<|end|>' → logprob: -14.694981575012207

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008070098701864481
    2. ' ' → logprob: -7.12580680847168
    3. ' and' → logprob: -13.87580680847168
    4. 'et' → logprob: -14.25080680847168
    5. 'and' → logprob: -14.62580680847168
    6. ' et' → logprob: -15.37580680847168
    7. '```' → logprob: -15.37580680847168
    8. ',' → logprob: -17.12580680847168
    9. '۲' → logprob: -18.00080680847168
    10. '<|end|>' → logprob: -18.00080680847168

Token 135: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22567425668239594
    2. ' for' → logprob: -1.6006742715835571
    3. '
' → logprob: -8.850674629211426
    4. ':' → logprob: -9.850674629211426
    5. ':
' → logprob: -9.975674629211426
    6. ' 
' → logprob: -11.475674629211426
    7. '```' → logprob: -12.850674629211426
    8. ' :
' → logprob: -13.850674629211426
    9. 's' → logprob: -14.350674629211426
    10. '  
' → logprob: -14.475674629211426

Token 136: 'don' (ID: 22130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07209885865449905
    2. '):' → logprob: -2.822098970413208
    3. ' )' → logprob: -4.822098731994629
    4. ' ):' → logprob: -6.572098731994629
    5. '):
' → logprob: -7.947098731994629
    6. 'for' → logprob: -9.322098731994629
    7. ')
' → logprob: -9.947098731994629
    8. ' ' → logprob: -10.572098731994629
    9. ' for' → logprob: -10.572098731994629
    10. ',' → logprob: -10.822098731994629

Token 137: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44583672285079956
    2. 'c' → logprob: -1.0708367824554443
    3. 'nées' → logprob: -4.445836544036865
    4. 'ner' → logprob: -7.070836544036865
    5. 'e' → logprob: -7.320836544036865
    6. 'nant' → logprob: -7.320836544036865
    7. 'née' → logprob: -7.695836544036865
    8. ''t' → logprob: -7.945836544036865
    9. '#' → logprob: -8.195837020874023
    10. 'ne' → logprob: -8.195837020874023

Token 138: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2884492874145508
    2. ' )' → logprob: -1.2884492874145508
    3. ')' → logprob: -1.4134492874145508
    4. '3' → logprob: -2.413449287414551
    5. ' ):' → logprob: -3.288449287414551
    6. '):' → logprob: -3.663449287414551
    7. ' ' → logprob: -3.788449287414551
    8. '  ' → logprob: -4.538449287414551
    9. ' :' → logprob: -5.538449287414551
    10. ':' → logprob: -5.913449287414551

Token 139: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0258084237575531
    2. ' ' → logprob: -3.775808334350586
    3. ' trois' → logprob: -7.400808334350586
    4. 'S' → logprob: -8.025808334350586
    5. ':' → logprob: -8.400808334350586
    6. '```' → logprob: -8.525808334350586
    7. ' ' → logprob: -8.650808334350586
    8. ' )' → logprob: -8.775808334350586
    9. 'range' → logprob: -9.150808334350586
    10. ')' → logprob: -9.275808334350586

Token 140: ' valeurs' (ID: 73668)
  Prédit: ' ):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ):' → logprob: -1.0993797779083252
    2. ')' → logprob: -1.3493797779083252
    3. '):' → logprob: -1.3493797779083252
    4. ' )' → logprob: -1.9743797779083252
    5. ' ):
' → logprob: -5.474379539489746
    6. ' ' → logprob: -5.974379539489746
    7. '):
' → logprob: -6.474379539489746
    8. '```' → logprob: -7.974379539489746
    9. ' ' → logprob: -8.599379539489746
    10. ':' → logprob: -9.099379539489746

Token 141: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015707729384303093
    2. '):' → logprob: -4.515707492828369
    3. ' )' → logprob: -5.640707492828369
    4. 'for' → logprob: -7.640707492828369
    5. '):
' → logprob: -8.265707969665527
    6. ')
' → logprob: -9.015707969665527
    7. ' for' → logprob: -9.140707969665527
    8. ' ):' → logprob: -9.390707969665527
    9. ' ' → logprob: -11.640707969665527
    10. ',' → logprob: -12.265707969665527

Token 142: ' pour' (ID: 1930)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5974710583686829
    2. ')' → logprob: -0.9724710583686829
    3. ' i' → logprob: -3.722470998764038
    4. ' ' → logprob: -4.472471237182617
    5. ' ):
' → logprob: -5.597471237182617
    6. '```' → logprob: -5.722471237182617
    7. '1' → logprob: -5.847471237182617
    8. '3' → logprob: -5.847471237182617
    9. ' ' → logprob: -6.222471237182617
    10. ' ):' → logprob: -6.472471237182617

Token 143: ' S' (ID: 336)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05372834578156471
    2. ' i' → logprob: -3.5537283420562744
    3. '_' → logprob: -3.8037283420562744
    4. 'i' → logprob: -7.0537285804748535
    5. ' ' → logprob: -8.053728103637695
    6. ' ' → logprob: -8.803728103637695
    7. ' _)' → logprob: -11.178728103637695
    8. '```' → logprob: -11.553728103637695
    9. '_i' → logprob: -11.678728103637695
    10. ' ' → logprob: -12.053728103637695

Token 144: '[' (ID: 58)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.351523756980896
    2. 'i' → logprob: -2.6015238761901855
    3. ' _' → logprob: -2.6015238761901855
    4. ' c' → logprob: -3.1015238761901855
    5. ' in' → logprob: -3.3515238761901855
    6. '_' → logprob: -3.8515238761901855
    7. ' ' → logprob: -4.8515238761901855
    8. ' char' → logprob: -4.8515238761901855
    9. 'c' → logprob: -4.9765238761901855
    10. 'car' → logprob: -5.4765238761901855

Token 145: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1745382398366928
    2. ' i' → logprob: -2.6745381355285645
    3. ' :' → logprob: -3.5495381355285645
    4. '0' → logprob: -3.6745381355285645
    5. '3' → logprob: -4.2995381355285645
    6. ' ' → logprob: -4.5495381355285645
    7. ':' → logprob: -5.5495381355285645
    8. ']' → logprob: -5.7995381355285645
    9. '])' → logprob: -6.4245381355285645
    10. '[i' → logprob: -6.9245381355285645

Token 146: '],' (ID: 2155)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.530412495136261
    2. ']' → logprob: -1.2804124355316162
    3. '])' → logprob: -2.405412435531616
    4. '],' → logprob: -3.905412435531616
    5. ' :' → logprob: -4.405412673950195
    6. ']:' → logprob: -5.280412673950195
    7. ' ])' → logprob: -6.530412673950195
    8. ' ]' → logprob: -7.030412673950195
    9. ':]' → logprob: -7.155412673950195
    10. ' :]' → logprob: -7.655412673950195

Token 147: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8739451766014099
    2. 'S' → logprob: -1.3739452362060547
    3. ' S' → logprob: -1.6239452362060547
    4. '1' → logprob: -2.4989452362060547
    5. '2' → logprob: -3.2489452362060547
    6. '3' → logprob: -4.623945236206055
    7. '0' → logprob: -7.373945236206055
    8. 's' → logprob: -8.623945236206055
    9. ' ' → logprob: -8.623945236206055
    10. '```' → logprob: -8.998945236206055

Token 148: '[' (ID: 58)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.7636395692825317
    2. '[' → logprob: -1.7636395692825317
    3. ']' → logprob: -1.7636395692825317
    4. '1' → logprob: -2.513639450073242
    5. ':' → logprob: -2.638639450073242
    6. '3' → logprob: -4.513639450073242
    7. ' ' → logprob: -5.013639450073242
    8. '[i' → logprob: -5.138639450073242
    9. '0' → logprob: -5.763639450073242
    10. ',' → logprob: -5.888639450073242

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013391617685556412
    2. ' ' → logprob: -4.513391494750977
    3. '0' → logprob: -7.138391494750977
    4. ':' → logprob: -7.388391494750977
    5. ']' → logprob: -8.263391494750977
    6. 'i' → logprob: -8.763391494750977
    7. ' :' → logprob: -8.763391494750977
    8. '2' → logprob: -9.513391494750977
    9. '3' → logprob: -9.638391494750977
    10. '],' → logprob: -9.638391494750977

Token 150: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4194295108318329
    2. ']' → logprob: -1.2944295406341553
    3. ' ],' → logprob: -3.9194295406341553
    4. ':' → logprob: -3.9194295406341553
    5. ',' → logprob: -4.794429302215576
    6. '])' → logprob: -4.794429302215576
    7. ' ]' → logprob: -5.044429302215576
    8. ']:' → logprob: -6.169429302215576
    9. ' ,' → logprob: -7.294429302215576
    10. ' ])' → logprob: -7.294429302215576

Token 151: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.20329749584198
    2. 'S' → logprob: -1.45329749584198
    3. '2' → logprob: -1.82829749584198
    4. ' S' → logprob: -2.3282976150512695
    5. ' et' → logprob: -2.4532976150512695
    6. 'et' → logprob: -2.7032976150512695
    7. ' and' → logprob: -3.5782976150512695
    8. '3' → logprob: -3.8282976150512695
    9. 'and' → logprob: -5.8282976150512695
    10. ' ' → logprob: -6.7032976150512695

Token 152: '[' (ID: 58)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.2263386249542236
    2. ']' → logprob: -1.7263386249542236
    3. '],' → logprob: -1.8513386249542236
    4. ':' → logprob: -1.8513386249542236
    5. '3' → logprob: -2.2263386249542236
    6. '2' → logprob: -3.3513386249542236
    7. ']):' → logprob: -3.8513386249542236
    8. ',' → logprob: -4.8513383865356445
    9. ']:' → logprob: -4.9763383865356445
    10. ' ])' → logprob: -5.2263383865356445

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013542051427066326
    2. '0' → logprob: -4.763542175292969
    3. ']' → logprob: -6.138542175292969
    4. ' ' → logprob: -6.263542175292969
    5. '])' → logprob: -7.888542175292969
    6. '3' → logprob: -8.138542175292969
    7. '1' → logprob: -9.513542175292969
    8. ':' → logprob: -10.388542175292969
    9. ')' → logprob: -11.263542175292969
    10. '```' → logprob: -11.513542175292969

Token 154: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1943882703781128
    2. ']' → logprob: -2.1943883895874023
    3. ')' → logprob: -3.6943883895874023
    4. ']):' → logprob: -4.069388389587402
    5. '):' → logprob: -4.944388389587402
    6. ')]' → logprob: -5.069388389587402
    7. ']:' → logprob: -5.319388389587402
    8. '])
' → logprob: -6.694388389587402
    9. ')])' → logprob: -6.694388389587402
    10. '])]' → logprob: -6.944388389587402

Token 155: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043019745498895645
    2. ' for' → logprob: -3.1680197715759277
    3. ':' → logprob: -11.04301929473877
    4. 'f' → logprob: -13.79301929473877
    5. 'i' → logprob: -13.79301929473877
    6. '
' → logprob: -14.04301929473877
    7. ' 
' → logprob: -15.04301929473877
    8. ':
' → logprob: -15.16801929473877
    9. '```' → logprob: -15.41801929473877
    10. ' ' → logprob: -16.043020248413086

Token 156: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014220036566257477
    2. 'i' → logprob: -4.889220237731934
    3. ' ' → logprob: -5.139220237731934
    4. ' _' → logprob: -7.764220237731934
    5. ' ' → logprob: -8.639220237731934
    6. '	i' → logprob: -9.889220237731934
    7. '_' → logprob: -10.264220237731934
    8. '  ' → logprob: -11.264220237731934
    9. ' ' → logprob: -12.139220237731934
    10. '```' → logprob: -12.389220237731934

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004111880902200937
    2. 'in' → logprob: -5.5041117668151855
    3. ' ' → logprob: -10.504112243652344
    4. 's' → logprob: -13.879112243652344
    5. ' ' → logprob: -14.004112243652344
    6. '	in' → logprob: -14.129112243652344
    7. '  ' → logprob: -14.379112243652344
    8. ' i' → logprob: -14.379112243652344
    9. '```' → logprob: -14.504112243652344
    10. 'import' → logprob: -14.504112243652344

Token 158: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06995221972465515
    2. 'range' → logprob: -2.6949522495269775
    3. ' ' → logprob: -12.194952011108398
    4. '(range' → logprob: -12.694952011108398
    5. ' ' → logprob: -13.069952011108398
    6. '	range' → logprob: -13.194952011108398
    7. '3' → logprob: -13.694952011108398
    8. '```' → logprob: -14.194952011108398
    9. ')' → logprob: -15.319952011108398
    10. '  ' → logprob: -15.319952011108398

Token 159: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. ' (' → logprob: -16.375
    3. '(
' → logprob: -16.875
    4. '3' → logprob: -18.125
    5. '(len' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. '((' → logprob: -21.75
    8. '(

' → logprob: -22.375
    9. '()' → logprob: -22.5
    10. ' ' → logprob: -23.3125

Token 160: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '(' → logprob: -15.500066757202148
    4. ')' → logprob: -16.87506675720215
    5. '   ' → logprob: -17.25006675720215
    6. 'len' → logprob: -18.62506675720215
    7. '```' → logprob: -18.87506675720215
    8. '  ' → logprob: -19.00006675720215
    9. 'min' → logprob: -19.50006675720215
    10. '３' → logprob: -19.75006675720215

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000629279064014554
    2. ')' → logprob: -7.625629425048828
    3. ' ):' → logprob: -9.125629425048828
    4. '):
' → logprob: -10.750629425048828
    5. ':' → logprob: -11.500629425048828
    6. '():' → logprob: -15.625629425048828
    7. ' :' → logprob: -16.250629425048828
    8. ']:' → logprob: -16.375629425048828
    9. '):
' → logprob: -16.500629425048828
    10. ' )' → logprob: -16.500629425048828

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19296711683273315
    2. ' if' → logprob: -2.442967176437378
    3. ' 
' → logprob: -2.942967176437378
    4. ' ' → logprob: -4.192966938018799
    5. ':' → logprob: -5.067966938018799
    6. '    
' → logprob: -5.317966938018799
    7. '<|end|>' → logprob: -6.067966938018799
    8. 'if' → logprob: -6.317966938018799
    9. '  
' → logprob: -6.692966938018799
    10. '    ' → logprob: -7.317966938018799

Token 163: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11491438001394272
    2. 'if' → logprob: -2.6149144172668457
    3. '   ' → logprob: -3.3649144172668457
    4. ' c' → logprob: -8.739913940429688
    5. ' ' → logprob: -8.989913940429688
    6. '    ' → logprob: -9.364913940429688
    7. '    
' → logprob: -9.614913940429688
    8. 'c' → logprob: -9.739913940429688
    9. ' 
' → logprob: -9.739913940429688
    10. '	if' → logprob: -9.864913940429688

Token 164: ' Vér' (ID: 159169)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6347629427909851
    2. 'if' → logprob: -0.7597629427909851
    3. 'c' → logprob: -7.134762763977051
    4. 'char' → logprob: -7.509762763977051
    5. ' char' → logprob: -8.13476276397705
    6. ' c' → logprob: -8.50976276397705
    7. '   ' → logprob: -8.75976276397705
    8. 'car' → logprob: -9.75976276397705
    9. 'ch' → logprob: -10.50976276397705
    10. ' car' → logprob: -10.63476276397705

Token 165: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0008682293118909001
    2. 'if' → logprob: -7.375868320465088
    3. 'ifier' → logprob: -9.00086784362793
    4. 'ify' → logprob: -9.50086784362793
    5. 'ifiez' → logprob: -10.75086784362793
    6. 'ifies' → logprob: -11.25086784362793
    7. 'ife' → logprob: -12.62586784362793
    8. ' if' → logprob: -12.87586784362793
    9. '   ' → logprob: -13.25086784362793
    10. 'ifi' → logprob: -14.62586784362793

Token 166: ' si' (ID: 1784)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3690710961818695
    2. ' if' → logprob: -1.369071125984192
    3. 'S' → logprob: -3.3690710067749023
    4. ' ' → logprob: -4.494071006774902
    5. 'if' → logprob: -4.869071006774902
    6. ' si' → logprob: -7.994071006774902
    7. '   ' → logprob: -8.494071006774902
    8. ' ' → logprob: -8.619071006774902
    9. '  ' → logprob: -9.744071006774902
    10. 's' → logprob: -9.994071006774902

Token 167: ' le' (ID: 505)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.17549560964107513
    2. 'S' → logprob: -2.3004956245422363
    3. ' i' → logprob: -2.9254956245422363
    4. 'i' → logprob: -5.050495624542236
    5. ' len' → logprob: -7.925495624542236
    6. ' ' → logprob: -8.175495147705078
    7. ' ' → logprob: -10.675495147705078
    8. 'len' → logprob: -11.175495147705078
    9. '  ' → logprob: -11.862995147705078
    10. 's' → logprob: -12.362995147705078

Token 168: ' caractère' (ID: 80509)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.43628552556037903
    2. ' S' → logprob: -1.0612854957580566
    3. 'i' → logprob: -5.436285495758057
    4. ' i' → logprob: -5.811285495758057
    5. ' ' → logprob: -8.936285972595215
    6. 's' → logprob: -10.811285972595215
    7. ' len' → logprob: -11.061285972595215
    8. ' ' → logprob: -11.311285972595215
    9. 'len' → logprob: -11.811285972595215
    10. '   ' → logprob: -12.311285972595215

Token 169: ' à' (ID: 1221)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.03468208387494087
    2. 'S' → logprob: -3.534682035446167
    3. ' ' → logprob: -5.409682273864746
    4. 's' → logprob: -8.659682273864746
    5. ' ==' → logprob: -8.784682273864746
    6. ' i' → logprob: -10.409682273864746
    7. ' s' → logprob: -10.409682273864746
    8. '  ' → logprob: -11.034682273864746
    9. '   ' → logprob: -11.409682273864746
    10. ' =' → logprob: -12.159682273864746

Token 170: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.38704848289489746
    2. 'i' → logprob: -2.1370484828948975
    3. ' S' → logprob: -2.2620484828948975
    4. ' i' → logprob: -2.3870484828948975
    5. ' index' → logprob: -6.387048721313477
    6. ' ' → logprob: -6.512048721313477
    7. 'index' → logprob: -7.012048721313477
    8. 's' → logprob: -7.512048721313477
    9. ' ' → logprob: -8.012048721313477
    10. 'indice' → logprob: -8.012048721313477

Token 171: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5784568786621094
    2. 'i' → logprob: -1.9534568786621094
    3. ' position' → logprob: -1.9534568786621094
    4. 'S' → logprob: -2.0784568786621094
    5. ' i' → logprob: -4.453456878662109
    6. ' S' → logprob: -4.703456878662109
    7. 'pos' → logprob: -5.328456878662109
    8. 'index' → logprob: -6.953456878662109
    9. 'posit' → logprob: -7.078456878662109
    10. 's' → logprob: -7.203456878662109

Token 172: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08916542679071426
    2. 'i' → logprob: -2.464165449142456
    3. ' ' → logprob: -8.839165687561035
    4. ' ' → logprob: -9.714165687561035
    5. '	i' → logprob: -11.464165687561035
    6. ' S' → logprob: -12.964165687561035
    7. 'S' → logprob: -13.089165687561035
    8. '  ' → logprob: -13.464165687561035
    9. '[i' → logprob: -13.714165687561035
    10. '   ' → logprob: -14.339165687561035

Token 173: ' dans' (ID: 2671)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.372239112854004
    2. ' ==' → logprob: -1.622239112854004
    3. ' dans' → logprob: -1.747239112854004
    4. 'S' → logprob: -1.872239112854004
    5. ' est' → logprob: -1.997239112854004
    6. ' ' → logprob: -3.372239112854004
    7. '==' → logprob: -3.872239112854004
    8. 'dans' → logprob: -4.497239112854004
    9. 's' → logprob: -4.997239112854004
    10. ' is' → logprob: -5.622239112854004

Token 174: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6931508183479309
    2. ' S' → logprob: -0.6931508183479309
    3. ' ' → logprob: -13.318150520324707
    4. ' ' → logprob: -13.318150520324707
    5. 's' → logprob: -16.318151473999023
    6. ' the' → logprob: -17.193151473999023
    7. '```' → logprob: -17.318151473999023
    8. '`' → logprob: -17.693151473999023
    9. '  ' → logprob: -17.818151473999023
    10. '	S' → logprob: -18.068151473999023

Token 175: ' chaîne' (ID: 89288)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08917271345853806
    2. ' S' → logprob: -2.464172601699829
    3. ' chaîne' → logprob: -9.58917236328125
    4. 'string' → logprob: -10.08917236328125
    5. 'chaine' → logprob: -10.21417236328125
    6. 's' → logprob: -10.21417236328125
    7. ' string' → logprob: -10.33917236328125
    8. ' chaine' → logprob: -11.71417236328125
    9. '```' → logprob: -12.96417236328125
    10. ' ' → logprob: -13.21417236328125

Token 176: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.22841328382492065
    2. 'S' → logprob: -1.6034133434295654
    3. ' ' → logprob: -6.103413105010986
    4. 's' → logprob: -7.728413105010986
    5. ' s' → logprob: -9.353413581848145
    6. '   ' → logprob: -9.478413581848145
    7. ' ==' → logprob: -10.478413581848145
    8. '  ' → logprob: -10.478413581848145
    9. '(S' → logprob: -10.853413581848145
    10. ' ' → logprob: -11.603413581848145

Token 177: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02003748156130314
    2. '   ' → logprob: -4.395037651062012
    3. '==' → logprob: -5.395037651062012
    4. ' ' → logprob: -6.395037651062012
    5. ' is' → logprob: -8.020037651062012
    6. ' if' → logprob: -8.395037651062012
    7. ' est' → logprob: -8.770037651062012
    8. '  ' → logprob: -9.270037651062012
    9. '    ' → logprob: -9.270037651062012
    10. ' =' → logprob: -9.520037651062012

Token 178: ' exactement' (ID: 108701)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8256070017814636
    2. ' "' → logprob: -1.2006070613861084
    3. ''A' → logprob: -2.3256070613861084
    4. '"A' → logprob: -2.3256070613861084
    5. 'A' → logprob: -3.7006070613861084
    6. ' égal' → logprob: -3.8256070613861084
    7. ' ég' → logprob: -5.575606822967529
    8. '"' → logprob: -5.700606822967529
    9. ' equal' → logprob: -5.950606822967529
    10. ' A' → logprob: -6.075606822967529

Token 179: ' "' (ID: 392)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.7335836887359619
    2. '"A' → logprob: -0.9835836887359619
    3. ' "' → logprob: -2.608583688735962
    4. ' '' → logprob: -2.733583688735962
    5. 'A' → logprob: -5.858583450317383
    6. '"' → logprob: -5.858583450317383
    7. ''' → logprob: -6.733583450317383
    8. ' A' → logprob: -8.858583450317383
    9. ''S' → logprob: -10.108583450317383
    10. ''a' → logprob: -10.358583450317383

Token 180: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.165027217415627e-05
    2. ''A' → logprob: -11.500021934509277
    3. '"A' → logprob: -11.875021934509277
    4. ' A' → logprob: -12.750021934509277
    5. 'a' → logprob: -14.375021934509277
    6. '"' → logprob: -14.750021934509277
    7. ''' → logprob: -15.250021934509277
    8. '```' → logprob: -16.00002098083496
    9. 'А' → logprob: -16.50002098083496
    10. '`' → logprob: -17.00002098083496

Token 181: '"
' (ID: 1092)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0712333470582962
    2. '"' → logprob: -2.6962332725524902
    3. '":
' → logprob: -6.94623327255249
    4. ' ":' → logprob: -9.196233749389648
    5. ':' → logprob: -9.821233749389648
    6. ' "' → logprob: -9.821233749389648
    7. '   ' → logprob: -10.196233749389648
    8. '"):' → logprob: -10.571233749389648
    9. '):' → logprob: -11.196233749389648
    10. '":
' → logprob: -11.821233749389648

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013851531781256199
    2. ':' → logprob: -4.888851642608643
    3. ' if' → logprob: -6.388851642608643
    4. 'if' → logprob: -7.263851642608643
    5. '    ' → logprob: -7.388851642608643
    6. '    
' → logprob: -7.388851642608643
    7. '       ' → logprob: -7.763851642608643
    8. '  ' → logprob: -8.013851165771484
    9. ':
' → logprob: -8.138851165771484
    10. ' :' → logprob: -8.138851165771484

Token 183: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5503996014595032
    2. ' if' → logprob: -0.9253996014595032
    3. 'if' (adapté à ' if') → logprob: -3.6753995418548584
    4. '    ' → logprob: -7.0503997802734375
    5. '    
' → logprob: -8.550399780273438
    6. '       ' → logprob: -8.925399780273438
    7. ' 
' → logprob: -9.425399780273438
    8. ' ' → logprob: -9.675399780273438
    9. '  ' → logprob: -9.925399780273438
    10. '	if' → logprob: -10.175399780273438

Token 184: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.0028965247329324484
    2. 'S' → logprob: -5.877896308898926
    3. ' ' → logprob: -9.877896308898926
    4. ' ' → logprob: -10.127896308898926
    5. '  ' → logprob: -15.627896308898926
    6. 's' → logprob: -15.877896308898926
    7. '   ' → logprob: -16.627897262573242
    8. '	S' → logprob: -16.877897262573242
    9. ' ' → logprob: -17.377897262573242
    10. ' "' → logprob: -18.752897262573242

Token 185: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [' → logprob: -14.37501049041748
    4. '[I' → logprob: -17.000011444091797
    5. ' ==' → logprob: -18.250011444091797
    6. '[A' → logprob: -18.500011444091797
    7. '==' → logprob: -19.000011444091797
    8. '   ' → logprob: -19.250011444091797
    9. '```' → logprob: -19.250011444091797
    10. '[
' → logprob: -20.625011444091797

Token 186: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6387553811073303
    2. '==' → logprob: -0.7637553811073303
    3. ']' → logprob: -5.2637553215026855
    4. ']==' → logprob: -7.3887553215026855
    5. '=' → logprob: -8.888755798339844
    6. ')' → logprob: -9.763755798339844
    7. '=="' → logprob: -9.763755798339844
    8. '"' → logprob: -10.388755798339844
    9. ' ' → logprob: -11.388755798339844
    10. ' ]' → logprob: -11.763755798339844

Token 187: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34867194294929504
    2. ' ==' → logprob: -1.2236719131469727
    3. '=' → logprob: -8.848671913146973
    4. '=="' → logprob: -10.098671913146973
    5. '=='' → logprob: -11.223671913146973
    6. '"' → logprob: -12.098671913146973
    7. '===' → logprob: -12.723671913146973
    8. ']==' → logprob: -12.848671913146973
    9. ' =="' → logprob: -12.973671913146973
    10. ' ' → logprob: -13.098671913146973

Token 188: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.8433048129081726
    2. '"A' → logprob: -0.9683048129081726
    3. '"' → logprob: -2.2183048725128174
    4. ' '' → logprob: -3.0933048725128174
    5. ''A' → logprob: -3.7183048725128174
    6. ''' → logprob: -4.468304634094238
    7. 'A' → logprob: -9.843304634094238
    8. '"А' → logprob: -10.843304634094238
    9. ''a' → logprob: -12.093304634094238
    10. ' ' → logprob: -12.093304634094238

Token 189: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.8624639324116288e-06
    2. ' A' → logprob: -13.875001907348633
    3. '"A' → logprob: -14.125001907348633
    4. '"' → logprob: -16.875001907348633
    5. ''A' → logprob: -17.000001907348633
    6. 'a' → logprob: -17.875001907348633
    7. 'А' → logprob: -18.250001907348633
    8. '	A' → logprob: -18.500001907348633
    9. 'Ａ' → logprob: -19.250001907348633
    10. '_A' → logprob: -19.375001907348633

Token 190: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.005409957841038704
    2. '"' → logprob: -5.255410194396973
    3. '":
' → logprob: -8.880410194396973
    4. ':' → logprob: -10.755410194396973
    5. ' ":' → logprob: -11.755410194396973
    6. '":
' → logprob: -13.255410194396973
    7. '):' → logprob: -13.380410194396973
    8. ' "' → logprob: -14.005410194396973
    9. '">' → logprob: -14.005410194396973
    10. '"):' → logprob: -14.130410194396973

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09937972575426102
    2. ' L' → logprob: -3.224379777908325
    3. 'L' → logprob: -3.474379777908325
    4. ':' → logprob: -4.599379539489746
    5. '   ' → logprob: -4.974379539489746
    6. '
' → logprob: -6.224379539489746
    7. ':
' → logprob: -6.349379539489746
    8. '<|end|>' → logprob: -6.474379539489746
    9. '        
' → logprob: -8.474379539489746
    10. ' :
' → logprob: -8.474379539489746

Token 192: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20153222978115082
    2. ' L' → logprob: -1.701532244682312
    3. '   ' → logprob: -9.576532363891602
    4. '
' → logprob: -10.951532363891602
    5. '       ' → logprob: -11.326532363891602
    6. '           ' → logprob: -12.201532363891602
    7. ' 
' → logprob: -12.576532363891602
    8. '    ' → logprob: -12.701532363891602
    9. ' ' → logprob: -12.951532363891602
    10. ' ' → logprob: -13.326532363891602

Token 193: ' Si' (ID: 7832)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3486837148666382
    2. ' L' → logprob: -1.2236837148666382
    3. '   ' → logprob: -8.84868335723877
    4. '       ' → logprob: -9.84868335723877
    5. '           ' → logprob: -11.34868335723877
    6. '    ' → logprob: -11.34868335723877
    7. ' ' → logprob: -11.84868335723877
    8. ' ' → logprob: -12.09868335723877
    9. '  ' → logprob: -13.22368335723877
    10. '	L' → logprob: -13.47368335723877

Token 194: ' c' (ID: 274)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2519853413105011
    2. 'L' → logprob: -1.5019853115081787
    3. ' ' → logprob: -10.501985549926758
    4. '   ' → logprob: -11.501985549926758
    5. '    ' → logprob: -11.501985549926758
    6. ' ' → logprob: -12.626985549926758
    7. '       ' → logprob: -13.251985549926758
    8. '	L' → logprob: -13.876985549926758
    9. '           ' → logprob: -13.876985549926758
    10. '        ' → logprob: -14.376985549926758

Token 195: ''est' (ID: 6616)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0752754807472229
    2. ' L' → logprob: -2.950275421142578
    3. '   ' → logprob: -4.450275421142578
    4. 'ont' → logprob: -5.950275421142578
    5. '       ' → logprob: -6.450275421142578
    6. 'ount' → logprob: -6.825275421142578
    7. '    ' → logprob: -7.700275421142578
    8. 'e' → logprob: -8.200275421142578
    9. '      ' → logprob: -8.200275421142578
    10. 'on' → logprob: -8.325275421142578

Token 196: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.05937783047556877
    2. 'L' → logprob: -2.934377908706665
    3. '   ' → logprob: -6.309377670288086
    4. '    ' → logprob: -6.809377670288086
    5. ' ' → logprob: -7.684377670288086
    6. '           ' → logprob: -7.934377670288086
    7. ' ' → logprob: -8.059377670288086
    8. '       ' → logprob: -8.434377670288086
    9. '  ' → logprob: -9.184377670288086
    10. '     ' → logprob: -10.434377670288086

Token 197: ' cas' (ID: 2108)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.17433689534664154
    2. ' L' → logprob: -2.1743369102478027
    3. 'prem' → logprob: -3.7993369102478027
    4. ' premier' → logprob: -4.549336910247803
    5. ' ' → logprob: -5.674336910247803
    6. '   ' → logprob: -6.174336910247803
    7. 'S' → logprob: -6.674336910247803
    8. 'A' → logprob: -6.924336910247803
    9. '1' → logprob: -6.924336910247803
    10. ' code' → logprob: -7.049336910247803

Token 198: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5949462056159973
    2. ' L' → logprob: -1.0949461460113525
    3. 'L' → logprob: -2.5949461460113525
    4. ':' → logprob: -4.094946384429932
    5. '       ' → logprob: -4.469946384429932
    6. '
' → logprob: -5.469946384429932
    7. ':
' → logprob: -6.344946384429932
    8. ' :' → logprob: -6.344946384429932
    9. ' :
' → logprob: -6.594946384429932
    10. '   ' → logprob: -6.969946384429932

Token 199: ' incr' (ID: 52395)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2300291657447815
    2. 'L' → logprob: -1.6050291061401367
    3. '           ' → logprob: -5.605029106140137
    4. '       ' → logprob: -7.230029106140137
    5. ' ' → logprob: -9.105029106140137
    6. '        ' → logprob: -10.855029106140137
    7. '   ' → logprob: -10.980029106140137
    8. ' ' → logprob: -11.105029106140137
    9. '            
' → logprob: -11.980029106140137
    10. '	L' → logprob: -12.230029106140137

Token 200: 'é' (ID: 377)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9958108067512512
    2. 'ment' → logprob: -1.2458107471466064
    3. 'mente' → logprob: -1.9958107471466064
    4. 'ément' → logprob: -2.8708107471466064
    5. '   ' → logprob: -3.1208107471466064
    6. 'é' → logprob: -3.3708107471466064
    7. ' L' → logprob: -3.7458107471466064
    8. 'm' → logprob: -4.3708109855651855
    9. '       ' → logprob: -4.9958109855651855
    10. 'emente' → logprob: -5.4958109855651855

Token 201: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0028841642197221518
    2. 'ment' → logprob: -6.627884387969971
    3. 'mentation' → logprob: -8.002883911132812
    4. 'ments' → logprob: -8.627883911132812
    5. 'mental' → logprob: -8.752883911132812
    6. 'm' → logprob: -9.252883911132812
    7. ' mente' → logprob: -9.502883911132812
    8. '[' → logprob: -9.627883911132812
    9. 'me' → logprob: -9.627883911132812
    10. 'nte' → logprob: -9.752883911132812

Token 202: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.38688960671424866
    2. ' L' → logprob: -1.1368895769119263
    3. '   ' → logprob: -11.761889457702637
    4. ' ' → logprob: -12.261889457702637
    5. '1' → logprob: -13.011889457702637
    6. '	L' → logprob: -13.511889457702637
    7. ' ' → logprob: -13.761889457702637
    8. '       ' → logprob: -14.511889457702637
    9. '    ' → logprob: -14.636889457702637
    10. '  ' → logprob: -16.261890411376953

Token 203: ' valeur' (ID: 41664)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.009797411039471626
    2. ' L' → logprob: -4.6347975730896
    3. '1' → logprob: -10.884797096252441
    4. '0' → logprob: -11.759797096252441
    5. '   ' → logprob: -11.884797096252441
    6. ' ' → logprob: -12.134797096252441
    7. '[' → logprob: -14.384797096252441
    8. '  ' → logprob: -14.759797096252441
    9. '    ' → logprob: -15.259797096252441
    10. '	L' → logprob: -15.384797096252441

Token 204: ' à' (ID: 1221)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.34958192706108093
    2. 'L' → logprob: -1.2245819568634033
    3. '[' → logprob: -7.099581718444824
    4. '(' → logprob: -9.099581718444824
    5. ' ' → logprob: -9.599581718444824
    6. 's' → logprob: -10.474581718444824
    7. ' de' → logprob: -10.724581718444824
    8. ' (' → logprob: -11.474581718444824
    9. '(L' → logprob: -11.474581718444824
    10. '   ' → logprob: -11.599581718444824

Token 205: ' l' (ID: 305)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.04326007887721062
    2. ' L' → logprob: -3.168260097503662
    3. '1' → logprob: -9.043259620666504
    4. '0' → logprob: -9.543259620666504
    5. ' ' → logprob: -10.168259620666504
    6. '   ' → logprob: -11.543259620666504
    7. 'index' → logprob: -12.293259620666504
    8. 'l' → logprob: -12.668259620666504
    9. '[' → logprob: -12.918259620666504
    10. '```' → logprob: -12.918259620666504

Token 206: ''' (ID: 6)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011110896244645119
    2. '[' → logprob: -5.011110782623291
    3. '0' → logprob: -6.511110782623291
    4. ' L' → logprob: -7.136110782623291
    5. '   ' → logprob: -7.386110782623291
    6. 'index' → logprob: -7.511110782623291
    7. 'i' → logprob: -8.01111125946045
    8. '[L' → logprob: -8.76111125946045
    9. ']' → logprob: -9.51111125946045
    10. 'indice' → logprob: -9.88611125946045

Token 207: 'index' (ID: 2257)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06888733059167862
    2. '0' → logprob: -3.568887233734131
    3. '[' → logprob: -3.568887233734131
    4. ' L' → logprob: -4.693887233734131
    5. 'S' → logprob: -8.568887710571289
    6. 'i' → logprob: -8.568887710571289
    7. ' ' → logprob: -8.818887710571289
    8. '   ' → logprob: -8.818887710571289
    9. '1' → logprob: -9.318887710571289
    10. 'index' → logprob: -9.318887710571289

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062020447105169296
    2. ' ' → logprob: -2.8120205402374268
    3. 'L' → logprob: -10.937020301818848
    4. ' L' → logprob: -10.937020301818848
    5. '[' → logprob: -11.312020301818848
    6. '   ' → logprob: -12.687020301818848
    7. '  ' → logprob: -14.312020301818848
    8. ' [' → logprob: -14.687020301818848
    9. ' ' → logprob: -14.937020301818848
    10. '```' → logprob: -15.562020301818848

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007541201775893569
    2. 'L' → logprob: -7.625754356384277
    3. ' ' → logprob: -8.500754356384277
    4. '[' → logprob: -9.875754356384277
    5. ' L' → logprob: -11.500754356384277
    6. '   ' → logprob: -14.375754356384277
    7. ' [' → logprob: -15.250754356384277
    8. '```' → logprob: -15.875754356384277
    9. '[L' → logprob: -16.12575340270996
    10. 'S' → logprob: -16.50075340270996

Token 210: ' de' (ID: 334)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5933786034584045
    2. 'L' → logprob: -1.5933785438537598
    3. ' +=' → logprob: -1.7183785438537598
    4. ']' → logprob: -4.34337854385376
    5. ' of' → logprob: -4.96837854385376
    6. ' de' → logprob: -4.96837854385376
    7. ' +' → logprob: -4.96837854385376
    8. '+' → logprob: -5.09337854385376
    9. '[' → logprob: -5.21837854385376
    10. '   ' → logprob: -5.34337854385376

Token 211: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07889077812433243
    2. ' L' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.578890800476074
    4. ' ' → logprob: -15.203890800476074
    5. '	L' → logprob: -15.453890800476074
    6. '   ' → logprob: -17.078889846801758
    7. '`' → logprob: -17.078889846801758
    8. 'l' → logprob: -17.578889846801758
    9. '  ' → logprob: -17.703889846801758
    10. '```' → logprob: -17.828889846801758

Token 212: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011050417087972164
    2. ' L' → logprob: -4.511050224304199
    3. ' ' → logprob: -14.0110502243042
    4. '`' → logprob: -14.7610502243042
    5. '	L' → logprob: -15.0110502243042
    6. '1' → logprob: -15.8860502243042
    7. '   ' → logprob: -16.136051177978516
    8. ' ' → logprob: -16.261051177978516
    9. '```' → logprob: -16.261051177978516
    10. '0' → logprob: -16.573551177978516

Token 213: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.42874211072921753
    2. ' L' → logprob: -1.0537421703338623
    3. '(L' → logprob: -11.428742408752441
    4. ' ' → logprob: -11.678742408752441
    5. '[' → logprob: -11.928742408752441
    6. '   ' → logprob: -12.428742408752441
    7. '[L' → logprob: -13.053742408752441
    8. ' (' → logprob: -13.178742408752441
    9. '(' → logprob: -13.303742408752441
    10. '0' → logprob: -13.678742408752441

Token 214: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.266851007938385
    2. ' L' → logprob: -2.1418509483337402
    3. '+=' → logprob: -2.7668509483337402
    4. 'L' → logprob: -3.1418509483337402
    5. '[' → logprob: -4.89185094833374
    6. '   ' → logprob: -6.64185094833374
    7. '+' → logprob: -7.51685094833374
    8. ' +' → logprob: -7.64185094833374
    9. ']+=' → logprob: -9.016851425170898
    10. '1' → logprob: -9.016851425170898

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033667489886283875
    2. ' ' → logprob: -3.40866756439209
    3. '   ' → logprob: -11.40866756439209
    4. '+' → logprob: -11.90866756439209
    5. ' +' → logprob: -12.78366756439209
    6. '  ' → logprob: -15.40866756439209
    7. ' ' → logprob: -15.40866756439209
    8. 'L' → logprob: -16.158666610717773
    9. '    ' → logprob: -16.158666610717773
    10. '```' → logprob: -16.158666610717773

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006282062386162579
    2. ' ' → logprob: -7.3756279945373535
    3. '+' → logprob: -13.500628471374512
    4. '   ' → logprob: -16.125627517700195
    5. ' +' → logprob: -16.500627517700195
    6. '```' → logprob: -17.875627517700195
    7. '  ' → logprob: -18.375627517700195
    8. ' ' → logprob: -19.375627517700195
    9. ' plus' → logprob: -19.875627517700195
    10. '
' → logprob: -21.000627517700195

Token 217: '
' (ID: 198)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2531406581401825
    2. 'L' → logprob: -1.5031406879425049
    3. '   ' → logprob: -7.128140449523926
    4. '       ' → logprob: -8.003140449523926
    5. '	L' → logprob: -11.128140449523926
    6. '    ' → logprob: -11.378140449523926
    7. '           ' → logprob: -11.378140449523926
    8. '1' → logprob: -12.003140449523926
    9. '
' → logprob: -12.503140449523926
    10. '  ' → logprob: -12.753140449523926

Token 218: '       ' (ID: 309)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7016677856445312
    2. '       ' → logprob: -1.0766677856445312
    3. 'L' → logprob: -1.8266677856445312
    4. '   ' → logprob: -6.201667785644531
    5. '           ' → logprob: -8.076667785644531
    6. '
' → logprob: -10.076667785644531
    7. '        
' → logprob: -10.326667785644531
    8. '    ' → logprob: -10.576667785644531
    9. '	L' → logprob: -10.826667785644531
    10. '     ' → logprob: -11.076667785644531

Token 219: ' #' (ID: 1069)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10028959065675735
    2. ' L' → logprob: -2.3502895832061768
    3. '       ' → logprob: -9.725289344787598
    4. '   ' → logprob: -10.725289344787598
    5. '           ' → logprob: -14.600289344787598
    6. '	L' → logprob: -14.600289344787598
    7. ' ' → logprob: -15.725289344787598
    8. '  ' → logprob: -16.475290298461914
    9. '    ' → logprob: -16.725290298461914
    10. '     ' → logprob: -17.975290298461914

Token 220: ' Cela' (ID: 44403)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.3540475070476532
    2. 'L' → logprob: -1.2290475368499756
    3. '       ' → logprob: -5.3540472984313965
    4. '   ' → logprob: -7.2290472984313965
    5. '           ' → logprob: -9.979047775268555
    6. '	L' → logprob: -10.479047775268555
    7. '    ' → logprob: -10.979047775268555
    8. ' ' → logprob: -11.104047775268555
    9. ' ' → logprob: -11.729047775268555
    10. '        ' → logprob: -12.604047775268555

Token 221: ' augmente' (ID: 150199)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.12097343057394028
    2. 'L' → logprob: -3.2459733486175537
    3. ' +=' → logprob: -3.2459733486175537
    4. '   ' → logprob: -4.370973587036133
    5. '       ' → logprob: -4.620973587036133
    6. ' ' → logprob: -5.870973587036133
    7. '    ' → logprob: -5.870973587036133
    8. '           ' → logprob: -6.370973587036133
    9. ' continue' → logprob: -6.870973587036133
    10. '+=' → logprob: -7.245973587036133

Token 222: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.029756275936961174
    2. 'L' → logprob: -3.5297563076019287
    3. ' ' → logprob: -12.654756546020508
    4. ' ' → logprob: -13.529756546020508
    5. '1' → logprob: -14.529756546020508
    6. '   ' → logprob: -15.904756546020508
    7. '	L' → logprob: -15.904756546020508
    8. ' the' → logprob: -16.029756546020508
    9. ' de' → logprob: -16.154756546020508
    10. ' la' → logprob: -16.279756546020508

Token 223: ' compteur' (ID: 163344)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.018337585031986237
    2. ' L' → logprob: -4.018337726593018
    3. 'count' → logprob: -9.01833724975586
    4. ' count' → logprob: -10.64333724975586
    5. 'nombre' → logprob: -11.39333724975586
    6. ' compteur' → logprob: -11.39333724975586
    7. ' ' → logprob: -11.64333724975586
    8. 'counter' → logprob: -12.51833724975586
    9. ' nombre' → logprob: -13.26833724975586
    10. '```' → logprob: -13.39333724975586

Token 224: ' du' (ID: 1462)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6328011155128479
    2. ' L' → logprob: -0.7578011155128479
    3. ' de' → logprob: -9.382801055908203
    4. 's' → logprob: -10.382801055908203
    5. '[' → logprob: -10.507801055908203
    6. '   ' → logprob: -10.757801055908203
    7. ' ' → logprob: -11.132801055908203
    8. '           ' → logprob: -12.882801055908203
    9. '	L' → logprob: -13.132801055908203
    10. '    ' → logprob: -13.257801055908203

Token 225: ' nombre' (ID: 9733)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20271800458431244
    2. 'A' → logprob: -1.8277180194854736
    3. ' L' → logprob: -3.9527180194854736
    4. ' A' → logprob: -6.7027177810668945
    5. 'nombre' → logprob: -7.0777177810668945
    6. '0' → logprob: -8.077717781066895
    7. '1' → logprob: -8.327717781066895
    8. ' ' → logprob: -8.577717781066895
    9. ' nombre' → logprob: -8.952717781066895
    10. '"A' → logprob: -9.202717781066895

Token 226: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7452922463417053
    2. ' L' → logprob: -0.8702922463417053
    3. 'L' → logprob: -2.3702921867370605
    4. ' d' → logprob: -5.2452921867370605
    5. 'de' → logprob: -5.6202921867370605
    6. 'd' → logprob: -7.2452921867370605
    7. ' des' → logprob: -7.4952921867370605
    8. '[' → logprob: -7.6202921867370605
    9. '    ' → logprob: -7.6202921867370605
    10. '   ' → logprob: -7.6202921867370605

Token 227: ' "' (ID: 392)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35934796929359436
    2. ' A' → logprob: -1.859347939491272
    3. ' "' → logprob: -2.6093480587005615
    4. '"A' → logprob: -3.2343480587005615
    5. ''A' → logprob: -4.359347820281982
    6. '"' → logprob: -4.734347820281982
    7. ' '' → logprob: -4.734347820281982
    8. 'L' → logprob: -7.609347820281982
    9. ''' → logprob: -7.984347820281982
    10. ' ' → logprob: -8.10934829711914

Token 228: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.009814292192459106
    2. ' A' → logprob: -4.634814262390137
    3. '"A' → logprob: -10.759814262390137
    4. ' ' → logprob: -11.009814262390137
    5. '"' → logprob: -11.884814262390137
    6. ' "' → logprob: -12.134814262390137
    7. '_A' → logprob: -13.509814262390137
    8. '	A' → logprob: -13.884814262390137
    9. '   ' → logprob: -14.134814262390137
    10. ''A' → logprob: -14.384814262390137

Token 229: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2903737723827362
    2. 's' → logprob: -1.9153738021850586
    3. ' "' → logprob: -2.6653738021850586
    4. ']' → logprob: -4.665373802185059
    5. ' ")' → logprob: -5.165373802185059
    6. '")' → logprob: -5.290373802185059
    7. ' "]' → logprob: -5.415373802185059
    8. '"]' → logprob: -5.665373802185059
    9. '"L' → logprob: -6.915373802185059
    10. '[' → logprob: -7.040373802185059

Token 230: ' rencontr' (ID: 49751)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.3588460683822632
    2. 'L' → logprob: -1.2338460683822632
    3. '   ' → logprob: -5.858846187591553
    4. ']' → logprob: -6.483846187591553
    5. '       ' → logprob: -6.858846187591553
    6. ')' → logprob: -6.983846187591553
    7. '[' → logprob: -7.483846187591553
    8. '           ' → logprob: -7.608846187591553
    9. ' ]' → logprob: -7.608846187591553
    10. 's' → logprob: -7.858846187591553

Token 231: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.30153465270996094
    2. 'ée' → logprob: -1.551534652709961
    3. 'és' → logprob: -3.551534652709961
    4. 'ées' → logprob: -4.176534652709961
    5. 'e' → logprob: -5.676534652709961
    6. 'ent' → logprob: -7.551534652709961
    7. 'es' → logprob: -8.426534652709961
    8. 'ements' → logprob: -9.801534652709961
    9. 'er' → logprob: -10.551534652709961
    10. 'ement' → logprob: -10.676534652709961

Token 232: ' jusque' (ID: 188953)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.17246408760547638
    2. 'L' → logprob: -2.04746413230896
    3. '       ' → logprob: -4.172463893890381
    4. '   ' → logprob: -4.297463893890381
    5. '    ' → logprob: -9.547464370727539
    6. '           ' → logprob: -9.922464370727539
    7. '
' → logprob: -10.297464370727539
    8. '	L' → logprob: -10.672464370727539
    9. ')' → logprob: -10.797464370727539
    10. ' ' → logprob: -10.797464370727539

Token 233: ' là' (ID: 8052)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1699104309082031
    2. 'L' → logprob: -1.2949104309082031
    3. 'dans' → logprob: -2.169910430908203
    4. '+=' → logprob: -3.294910430908203
    5. ' ' → logprob: -3.419910430908203
    6. '   ' → logprob: -3.419910430908203
    7. ']' → logprob: -3.419910430908203
    8. 'à' → logprob: -3.669910430908203
    9. '1' → logprob: -3.919910430908203
    10. '```' → logprob: -4.044910430908203

Token 234: '
' (ID: 198)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5435187816619873
    2. 'L' → logprob: -0.9185187816619873
    3. '   ' → logprob: -4.543519020080566
    4. '       ' → logprob: -4.668519020080566
    5. '    ' → logprob: -10.293519020080566
    6. '
' → logprob: -10.918519020080566
    7. '    
' → logprob: -10.918519020080566
    8. '           ' → logprob: -11.168519020080566
    9. '        
' → logprob: -11.168519020080566
    10. ' 
' → logprob: -11.418519020080566

Token 235: '       ' (ID: 309)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6884064078330994
    2. '       ' → logprob: -0.8134064078330994
    3. 'L' → logprob: -2.938406467437744
    4. '   ' → logprob: -6.688406467437744
    5. '           ' → logprob: -10.188405990600586
    6. '	L' → logprob: -11.313405990600586
    7. ' ' → logprob: -11.688405990600586
    8. '
' → logprob: -11.813405990600586
    9. '```' → logprob: -12.563405990600586
    10. '  ' → logprob: -12.813405990600586

Token 236: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5335349440574646
    2. 'L' (adapté à ' L') → logprob: -1.4085350036621094
    3. '       ' → logprob: -1.7835350036621094
    4. '   ' → logprob: -7.033535003662109
    5. ' ' → logprob: -11.03353500366211
    6. '           ' → logprob: -11.40853500366211
    7. '	L' → logprob: -12.03353500366211
    8. '  ' → logprob: -12.53353500366211
    9. ' ' → logprob: -12.65853500366211
    10. '    ' → logprob: -13.40853500366211

Token 237: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -13.750001907348633
    3. '[i' → logprob: -15.500001907348633
    4. '```' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '0' → logprob: -18.625001907348633
    7. '[L' → logprob: -18.750001907348633
    8. '[
' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '\[' → logprob: -19.750001907348633

Token 238: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.1250057220459
    4. '[' → logprob: -17.8750057220459
    5. '```' → logprob: -19.0000057220459
    6. ']' → logprob: -19.6875057220459
    7. '۰' → logprob: -19.7500057220459
    8. '
' → logprob: -20.0000057220459
    9. '０' → logprob: -20.1875057220459
    10. '  ' → logprob: -20.5000057220459

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005253798794001341
    2. ']+=' → logprob: -5.255253791809082
    3. ']+' → logprob: -11.255253791809082
    4. ' ]' → logprob: -12.255253791809082
    5. ')' → logprob: -13.630253791809082
    6. '']' → logprob: -15.130253791809082
    7. '+' → logprob: -15.130253791809082
    8. '"]' → logprob: -15.380253791809082
    9. '+=' → logprob: -15.755253791809082
    10. '   ' → logprob: -16.7552547454834

Token 240: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2025202065706253
    2. ' +=' → logprob: -1.7025202512741089
    3. '=' → logprob: -6.827520370483398
    4. '+' → logprob: -11.327520370483398
    5. ']+=' → logprob: -12.077520370483398
    6. ' =' → logprob: -12.327520370483398
    7. '   ' → logprob: -15.577520370483398
    8. '+="' → logprob: -15.952520370483398
    9. '+='' → logprob: -16.2025203704834
    10. ')' → logprob: -16.8275203704834

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.500911712646484
    4. '```' → logprob: -20.500911712646484
    5. '  ' → logprob: -20.750911712646484
    6. ' ' → logprob: -21.000911712646484
    7. '       ' → logprob: -22.125911712646484
    8. '0' → logprob: -22.625911712646484
    9. '	' → logprob: -22.625911712646484
    10. '１' → logprob: -22.625911712646484

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -22.125001907348633
    4. '   ' → logprob: -22.250001907348633
    5. '  ' → logprob: -24.500001907348633
    6. '１' → logprob: -24.750001907348633
    7. '`' → logprob: -25.000001907348633
    8. '0' → logprob: -25.500001907348633
    9. ' ' → logprob: -25.625001907348633
    10. '2' → logprob: -25.750001907348633

Token 243: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3416573107242584
    2. 'else' → logprob: -1.466657280921936
    3. ' else' → logprob: -2.8416574001312256
    4. '	else' → logprob: -8.716657638549805
    5. '    
' → logprob: -9.216657638549805
    6. '
' → logprob: -10.341657638549805
    7. '  
' → logprob: -10.966657638549805
    8. 'elif' → logprob: -11.091657638549805
    9. '<|end|>' → logprob: -11.091657638549805
    10. '```' → logprob: -11.216657638549805

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13920378684997559
    2. 'else' → logprob: -2.3892037868499756
    3. ' else' → logprob: -3.2642037868499756
    4. '	else' → logprob: -11.764204025268555
    5. '    
' → logprob: -12.139204025268555
    6. '```' → logprob: -13.139204025268555
    7. 'elif' → logprob: -13.264204025268555
    8. '<|end|>' → logprob: -14.389204025268555
    9. '   ' → logprob: -14.514204025268555
    10. ' elif' → logprob: -15.014204025268555

Token 245: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07929302006959915
    2. ' else' → logprob: -2.5792930126190186
    3. '   ' → logprob: -7.829293251037598
    4. '	else' → logprob: -12.454293251037598
    5. ' ' → logprob: -15.079293251037598
    6. '    
' → logprob: -15.329293251037598
    7. 'els' → logprob: -15.579293251037598
    8. 'el' → logprob: -15.829293251037598
    9. 'elif' → logprob: -16.32929229736328
    10. 'e' → logprob: -16.57929229736328

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16096797585487366
    2. ':
' → logprob: -1.9109679460525513
    3. '       ' → logprob: -7.910967826843262
    4. '   ' → logprob: -8.160967826843262
    5. ' :
' → logprob: -9.660967826843262
    6. ' :' → logprob: -10.660967826843262
    7. ':
' → logprob: -13.160967826843262
    8. ':

' → logprob: -14.160967826843262
    9. '    ' → logprob: -15.035967826843262
    10. ' ' → logprob: -16.035968780517578

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073747155256569386
    2. '   ' → logprob: -5.6323747634887695
    3. ' L' → logprob: -5.6323747634887695
    4. 'L' → logprob: -9.25737476348877
    5. ' ' → logprob: -10.75737476348877
    6. '    ' → logprob: -11.00737476348877
    7. '    ' → logprob: -11.00737476348877
    8. '     ' → logprob: -11.50737476348877
    9. ' ' → logprob: -12.38237476348877
    10. '        
' → logprob: -12.88237476348877

Token 248: ' #' (ID: 1069)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.09068553149700165
    2. 'L' → logprob: -2.8406856060028076
    3. '       ' → logprob: -3.5906856060028076
    4. '   ' → logprob: -7.3406853675842285
    5. '    ' → logprob: -9.715685844421387
    6. ' ' → logprob: -11.965685844421387
    7. '        ' → logprob: -12.715685844421387
    8. '     ' → logprob: -12.715685844421387
    9. ' ' → logprob: -13.215685844421387
    10. '	L' → logprob: -13.215685844421387

Token 249: ' Si' (ID: 7832)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7028355002403259
    2. ' L' → logprob: -0.7028355002403259
    3. '       ' → logprob: -5.327835559844971
    4. '   ' → logprob: -5.452835559844971
    5. '    ' → logprob: -7.827835559844971
    6. ' ' → logprob: -10.577835083007812
    7. '  ' → logprob: -10.952835083007812
    8. '        ' → logprob: -11.077835083007812
    9. ' ' → logprob: -11.077835083007812
    10. '     ' → logprob: -11.702835083007812

Token 250: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.04975880682468414
    2. 'L' → logprob: -3.0497589111328125
    3. '   ' → logprob: -7.7997589111328125
    4. '    ' → logprob: -8.299758911132812
    5. '       ' → logprob: -8.299758911132812
    6. ' ' → logprob: -9.049758911132812
    7. ' ' → logprob: -9.674758911132812
    8. '        ' → logprob: -10.424758911132812
    9. '           ' → logprob: -10.674758911132812
    10. '  ' → logprob: -11.549758911132812

Token 251: ' caractère' (ID: 80509)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004124588333070278
    2. ' L' → logprob: -5.504124641418457
    3. 'else' → logprob: -12.129124641418457
    4. ' code' → logprob: -12.129124641418457
    5. '       ' → logprob: -12.254124641418457
    6. '```' → logprob: -12.379124641418457
    7. '   ' → logprob: -12.504124641418457
    8. 'code' → logprob: -12.629124641418457
    9. ' ' → logprob: -12.879124641418457
    10. 's' → logprob: -12.879124641418457

Token 252: ' n' (ID: 297)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9931454658508301
    2. ' L' → logprob: -1.24314546585083
    3. ' !=' → logprob: -1.61814546585083
    4. '!=' → logprob: -2.74314546585083
    5. ' n' → logprob: -3.24314546585083
    6. '[' → logprob: -4.24314546585083
    7. 'n' → logprob: -4.36814546585083
    8. '   ' → logprob: -5.61814546585083
    9. ' est' → logprob: -6.36814546585083
    10. 's' → logprob: -6.36814546585083

Token 253: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.34592893719673157
    2. ' n' → logprob: -1.8459289073944092
    3. ''' → logprob: -2.595928907394409
    4. 'est' → logprob: -3.845928907394409
    5. '[' → logprob: -4.845929145812988
    6. ' est' → logprob: -4.970929145812988
    7. '['' → logprob: -5.220929145812988
    8. 'n' → logprob: -5.470929145812988
    9. 'e' → logprob: -6.095929145812988
    10. '   ' → logprob: -6.345929145812988

Token 254: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3524473011493683
    2. ' pas' → logprob: -1.227447271347046
    3. '"' → logprob: -5.852447509765625
    4. '_pas' → logprob: -7.727447509765625
    5. ''' → logprob: -8.477447509765625
    6. 'Pas' → logprob: -8.602447509765625
    7. 'not' → logprob: -8.852447509765625
    8. 's' → logprob: -9.352447509765625
    9. 'A' → logprob: -11.477447509765625
    10. ' not' → logprob: -11.977447509765625

Token 255: ' "' (ID: 392)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.781197190284729
    2. ' A' → logprob: -1.656197190284729
    3. '"A' → logprob: -1.781197190284729
    4. ' "' → logprob: -2.0311970710754395
    5. '"' → logprob: -3.0311970710754395
    6. ''A' → logprob: -6.7811970710754395
    7. ' a' → logprob: -7.7811970710754395
    8. ' '' → logprob: -8.156197547912598
    9. ' ' → logprob: -8.281197547912598
    10. ' un' → logprob: -8.531197547912598

Token 256: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00020127551397308707
    2. '"A' → logprob: -8.875201225280762
    3. ' A' → logprob: -10.375201225280762
    4. ''A' → logprob: -11.000201225280762
    5. '"' → logprob: -11.500201225280762
    6. ' "' → logprob: -13.625201225280762
    7. ''' → logprob: -13.750201225280762
    8. 'S' → logprob: -15.375201225280762
    9. 'a' → logprob: -15.375201225280762
    10. ' ' → logprob: -16.125202178955078

Token 257: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32304152846336365
    2. '       ' → logprob: -2.1980414390563965
    3. ':
' → logprob: -2.1980414390563965
    4. ':' → logprob: -3.9480414390563965
    5. '   ' → logprob: -4.0730414390563965
    6. 'L' → logprob: -5.4480414390563965
    7. '           ' → logprob: -5.6980414390563965
    8. ' ,' → logprob: -6.1980414390563965
    9. '",' → logprob: -6.3230414390563965
    10. ' L' → logprob: -6.6980414390563965

Token 258: ' incr' (ID: 52395)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6486771106719971
    2. '       ' → logprob: -1.023677110671997
    3. 'L' → logprob: -2.148677110671997
    4. '   ' → logprob: -6.773676872253418
    5. '           ' → logprob: -9.648676872253418
    6. ' ' → logprob: -10.023676872253418
    7. ' ' → logprob: -10.398676872253418
    8. '    ' → logprob: -10.898676872253418
    9. '	L' → logprob: -11.398676872253418
    10. '        ' → logprob: -11.773676872253418

Token 259: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0015212877187877893
    2. 'L' → logprob: -6.751521110534668
    3. 'mente' → logprob: -8.876521110534668
    4. 'ément' → logprob: -9.001521110534668
    5. 'è' → logprob: -10.626521110534668
    6. ' L' → logprob: -11.001521110534668
    7. 'mé' → logprob: -11.626521110534668
    8. '       ' → logprob: -12.376521110534668
    9. 'éments' → logprob: -12.376521110534668
    10. 'ém' → logprob: -12.376521110534668

Token 260: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.16214357316493988
    2. 'nte' → logprob: -2.5371434688568115
    3. 'L' → logprob: -2.7871434688568115
    4. 'ment' → logprob: -5.287143707275391
    5. 'm' → logprob: -6.912143707275391
    6. '1' → logprob: -7.662143707275391
    7. 'ments' → logprob: -8.16214370727539
    8. 'mentation' → logprob: -8.28714370727539
    9. 'n' → logprob: -8.41214370727539
    10. ' mente' → logprob: -8.53714370727539

Token 261: ' la' (ID: 557)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.38687410950660706
    2. 'L' → logprob: -1.1368740797042847
    3. ' la' → logprob: -13.886874198913574
    4. '   ' → logprob: -14.261874198913574
    5. ' ' → logprob: -14.636874198913574
    6. '       ' → logprob: -14.761874198913574
    7. '    ' → logprob: -15.636874198913574
    8. '1' → logprob: -15.886874198913574
    9. 'l' → logprob: -16.011873245239258
    10. ' ' → logprob: -16.136873245239258

Token 262: ' valeur' (ID: 41664)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02329462766647339
    2. ' L' → logprob: -3.773294687271118
    3. 'value' → logprob: -10.773294448852539
    4. 'val' → logprob: -11.273294448852539
    5. ' valeur' → logprob: -11.773294448852539
    6. ' ' → logprob: -12.773294448852539
    7. ' value' → logprob: -13.023294448852539
    8. '1' → logprob: -13.398294448852539
    9. '   ' → logprob: -15.273294448852539
    10. '[' → logprob: -15.273294448852539

Token 263: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.037193041294813156
    2. '   ' → logprob: -3.6621930599212646
    3. '[' → logprob: -5.7871928215026855
    4. ' at' → logprob: -5.9121928215026855
    5. ' L' → logprob: -6.4121928215026855
    6. 'à' → logprob: -6.9121928215026855
    7. 'L' → logprob: -7.0371928215026855
    8. ' ' → logprob: -7.6621928215026855
    9. '    ' → logprob: -8.287193298339844
    10. '       ' → logprob: -8.287193298339844

Token 264: ' l' (ID: 305)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2060021013021469
    2. ' L' → logprob: -1.831002116203308
    3. '1' → logprob: -4.456002235412598
    4. 'l' → logprob: -4.706002235412598
    5. '0' → logprob: -6.081002235412598
    6. ' l' → logprob: -6.331002235412598
    7. ' ' → logprob: -6.956002235412598
    8. 'index' → logprob: -9.081002235412598
    9. ' index' → logprob: -9.581002235412598
    10. '[' → logprob: -10.456002235412598

Token 265: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.529474675655365
    2. '1' → logprob: -1.1544747352600098
    3. 'index' → logprob: -2.4044747352600098
    4. ' index' → logprob: -5.40447473526001
    5. 'indice' → logprob: -7.65447473526001
    6. ' ' → logprob: -8.529474258422852
    7. '0' → logprob: -9.404474258422852
    8. 'L' → logprob: -9.404474258422852
    9. ' [' → logprob: -9.779474258422852
    10. '`' → logprob: -10.654474258422852

Token 266: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2923348844051361
    2. 'index' → logprob: -1.4173349142074585
    3. '[' → logprob: -4.542335033416748
    4. 'indice' → logprob: -7.917335033416748
    5. ' index' → logprob: -10.16733455657959
    6. '0' → logprob: -10.29233455657959
    7. '```' → logprob: -11.66733455657959
    8. 'L' → logprob: -12.16733455657959
    9. 'idx' → logprob: -12.29233455657959
    10. '#' → logprob: -12.79233455657959

Token 267: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25194066762924194
    2. '1' → logprob: -1.5019407272338867
    3. '[' → logprob: -12.126940727233887
    4. '0' → logprob: -12.626940727233887
    5. ' ' → logprob: -13.501940727233887
    6. '```' → logprob: -14.376940727233887
    7. 'space' → logprob: -15.251940727233887
    8. '`' → logprob: -15.751940727233887
    9. ' space' → logprob: -15.751940727233887
    10. '(' → logprob: -15.876940727233887

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '[' → logprob: -18.250001907348633
    4. '```' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '0' → logprob: -20.000001907348633
    7. '`' → logprob: -20.500001907348633
    8. '<|end|>' → logprob: -21.375001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '' → logprob: -22.062501907348633

Token 269: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5866439938545227
    2. ' de' → logprob: -0.9616439938545227
    3. '    ' → logprob: -3.336643934249878
    4. '       ' → logprob: -4.711644172668457
    5. ' of' → logprob: -4.961644172668457
    6. ']' → logprob: -5.586644172668457
    7. ' ]' → logprob: -6.211644172668457
    8. 'de' → logprob: -6.711644172668457
    9. ' +=' → logprob: -7.211644172668457
    10. '  ' → logprob: -7.711644172668457

Token 270: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.000912774819880724
    2. ' L' → logprob: -7.000912666320801
    3. ' la' → logprob: -14.2509126663208
    4. 'l' → logprob: -14.8759126663208
    5. 'la' → logprob: -16.000913619995117
    6. ' ' → logprob: -16.375913619995117
    7. '```' → logprob: -16.875913619995117
    8. '1' → logprob: -17.500913619995117
    9. '	L' → logprob: -17.875913619995117
    10. 'La' → logprob: -17.875913619995117

Token 271: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.039746519178152084
    2. '+=' → logprob: -3.2897465229034424
    3. '       ' → logprob: -6.664746284484863
    4. '   ' → logprob: -7.914746284484863
    5. ']+=' → logprob: -10.914746284484863
    6. '    ' → logprob: -11.039746284484863
    7. '[' → logprob: -11.164746284484863
    8. '1' → logprob: -12.164746284484863
    9. '=' → logprob: -13.039746284484863
    10. '        ' → logprob: -13.289746284484863

Token 272: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.254077911376953
    4. ' ' → logprob: -18.754077911376953
    5. '```' → logprob: -19.004077911376953
    6. '  ' → logprob: -19.254077911376953
    7. '	' → logprob: -21.254077911376953
    8. '１' → logprob: -21.629077911376953
    9. '<|end|>' → logprob: -21.879077911376953
    10. '    ' → logprob: -21.879077911376953

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.3750581741333
    4. '```' → logprob: -18.500059127807617
    5. '  ' → logprob: -19.375059127807617
    6. '       ' → logprob: -20.500059127807617
    7. '
' → logprob: -20.500059127807617
    8. ' ' → logprob: -21.250059127807617
    9. '    ' → logprob: -21.500059127807617
    10. '１' → logprob: -21.875059127807617

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038693982060067356
    2. '   ' → logprob: -8.000387191772461
    3. ' L' → logprob: -10.750387191772461
    4. '<|end|>' → logprob: -11.625387191772461
    5. '        
' → logprob: -12.125387191772461
    6. 'L' → logprob: -12.500387191772461
    7. '      ' → logprob: -12.875387191772461
    8. '        ' → logprob: -13.000387191772461
    9. '    ' → logprob: -13.125387191772461
    10. '           ' → logprob: -13.500387191772461

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001643165247514844
    2. ' L' → logprob: -6.751643180847168
    3. 'L' → logprob: -8.251643180847168
    4. '   ' → logprob: -8.501643180847168
    5. '           ' → logprob: -13.001643180847168
    6. '      ' → logprob: -13.626643180847168
    7. '    ' → logprob: -13.876643180847168
    8. '     ' → logprob: -14.001643180847168
    9. '        
' → logprob: -14.001643180847168
    10. '```' → logprob: -14.501643180847168

Token 276: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7266619205474854
    2. 'L' → logprob: -0.9766619205474854
    3. ' L' → logprob: -1.9766619205474854
    4. '   ' → logprob: -6.601661682128906
    5. '           ' → logprob: -11.976661682128906
    6. '    ' → logprob: -12.351661682128906
    7. ' ' → logprob: -12.726661682128906
    8. '      ' → logprob: -12.726661682128906
    9. '     ' → logprob: -12.976661682128906
    10. '	L' → logprob: -13.101661682128906

Token 277: ' Cela' (ID: 44403)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.0287243127822876
    2. '       ' → logprob: -1.0287243127822876
    3. ' L' → logprob: -1.2787243127822876
    4. '   ' → logprob: -5.028724193572998
    5. ' ' → logprob: -10.278724670410156
    6. '    ' → logprob: -10.528724670410156
    7. '  ' → logprob: -10.778724670410156
    8. '      ' → logprob: -10.903724670410156
    9. '     ' → logprob: -11.403724670410156
    10. '           ' → logprob: -11.403724670410156

Token 278: ' augmente' (ID: 150199)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.3230046033859253
    2. ' L' → logprob: -1.4480046033859253
    3. '   ' → logprob: -3.823004722595215
    4. '       ' → logprob: -4.073004722595215
    5. '    ' → logprob: -7.323004722595215
    6. ' +=' → logprob: -7.573004722595215
    7. '  ' → logprob: -7.948004722595215
    8. '+=' → logprob: -8.698004722595215
    9. ' ' → logprob: -8.823004722595215
    10. '      ' → logprob: -9.573004722595215

Token 279: ' le' (ID: 505)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.05579894036054611
    2. 'L' → logprob: -2.9307990074157715
    3. ' la' → logprob: -7.3057990074157715
    4. ' l' → logprob: -9.180798530578613
    5. ' ' → logprob: -9.680798530578613
    6. ' le' → logprob: -11.180798530578613
    7. ' ' → logprob: -11.180798530578613
    8. '       ' → logprob: -11.305798530578613
    9. ' the' → logprob: -11.305798530578613
    10. 'l' → logprob: -11.430798530578613

Token 280: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.7731798887252808
    2. ' compteur' → logprob: -1.3981798887252808
    3. 'L' → logprob: -1.5231798887252808
    4. 'nombre' → logprob: -2.8981800079345703
    5. ' L' → logprob: -4.64818000793457
    6. 'counter' → logprob: -5.64818000793457
    7. ' ' → logprob: -6.64818000793457
    8. ' nombre' → logprob: -6.64818000793457
    9. 'count' → logprob: -7.27318000793457
    10. 'com' → logprob: -7.39818000793457

Token 281: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15854141116142273
    2. ' de' → logprob: -3.033541440963745
    3. ' L' → logprob: -3.408541440963745
    4. 'des' → logprob: -3.533541440963745
    5. '<|end|>' → logprob: -4.033541202545166
    6. ' du' → logprob: -5.533541202545166
    7. 'L' → logprob: -5.533541202545166
    8. ' ' → logprob: -5.908541202545166
    9. '       ' → logprob: -6.283541202545166
    10. ' of' → logprob: -6.658541202545166

Token 282: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.17304208874702454
    2. ' nombre' → logprob: -1.9230420589447021
    3. '1' → logprob: -4.548042297363281
    4. ' ' → logprob: -7.298042297363281
    5. ' L' → logprob: -7.798042297363281
    6. 'aut' → logprob: -8.048042297363281
    7. 'tout' → logprob: -8.923042297363281
    8. ' nombres' → logprob: -9.048042297363281
    9. ' autre' → logprob: -9.548042297363281
    10. '0' → logprob: -9.673042297363281

Token 283: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.031767725944519
    2. '[' → logprob: -1.406767725944519
    3. ' à' → logprob: -1.781767725944519
    4. ' de' → logprob: -2.0317678451538086
    5. ' des' → logprob: -3.1567678451538086
    6. 'd' → logprob: -3.7817678451538086
    7. ' ' → logprob: -4.656767845153809
    8. 'de' → logprob: -5.531767845153809
    9. ' of' → logprob: -5.656767845153809
    10. 'à' → logprob: -6.031767845153809

Token 284: ' caractères' (ID: 183106)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.8574538230895996
    2. 'aut' → logprob: -1.4824538230895996
    3. 'car' → logprob: -2.1074538230895996
    4. 't' → logprob: -2.8574538230895996
    5. ' tout' → logprob: -2.9824538230895996
    6. ' autres' → logprob: -3.4824538230895996
    7. '"' → logprob: -4.2324538230896
    8. ' caractères' → logprob: -4.2324538230896
    9. ' ' → logprob: -4.2324538230896
    10. '1' → logprob: -4.4824538230896

Token 285: ' différents' (ID: 36009)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.3479835987091064
    2. ' différents' → logprob: -1.4729835987091064
    3. ' différent' → logprob: -2.0979835987091064
    4. ' different' → logprob: -2.2229835987091064
    5. ' autres' → logprob: -2.3479835987091064
    6. ' autre' → logprob: -2.7229835987091064
    7. 'aut' → logprob: -3.3479835987091064
    8. 'different' → logprob: -3.7229835987091064
    9. ' non' → logprob: -4.347983360290527
    10. ' rencontr' → logprob: -4.347983360290527

Token 286: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.533820390701294
    2. ' de' → logprob: -1.408820390701294
    3. 'de' → logprob: -2.408820390701294
    4. '   ' → logprob: -3.658820390701294
    5. '       ' → logprob: -4.533820152282715
    6. 'from' → logprob: -4.783820152282715
    7. ' L' → logprob: -4.783820152282715
    8. '```' → logprob: -5.533820152282715
    9. '1' → logprob: -5.783820152282715
    10. 'L' → logprob: -5.908820152282715

Token 287: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.012343292124569416
    2. 'A' → logprob: -4.512343406677246
    3. ''A' → logprob: -6.762343406677246
    4. '"' → logprob: -9.887343406677246
    5. '0' → logprob: -9.887343406677246
    6. ' "' → logprob: -10.637343406677246
    7. ' A' → logprob: -12.262343406677246
    8. ' ' → logprob: -13.137343406677246
    9. '"L' → logprob: -13.512343406677246
    10. '“A' → logprob: -14.137343406677246

Token 288: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.129266067640856e-05
    2. '"A' → logprob: -10.875020980834961
    3. ''A' → logprob: -13.375020980834961
    4. '"' → logprob: -14.625020980834961
    5. ' A' → logprob: -15.375020980834961
    6. '```' → logprob: -17.00002098083496
    7. '_A' → logprob: -17.12502098083496
    8. 'a' → logprob: -17.50002098083496
    9. '`' → logprob: -17.62502098083496
    10. 'А' → logprob: -18.12502098083496

Token 289: '"
' (ID: 1092)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03344811871647835
    2. '"]' → logprob: -3.7834482192993164
    3. ')' → logprob: -5.533448219299316
    4. ' ]' → logprob: -6.283448219299316
    5. '")' → logprob: -6.908448219299316
    6. '[' → logprob: -7.533448219299316
    7. '   ' → logprob: -7.783448219299316
    8. '.' → logprob: -8.033448219299316
    9. 's' → logprob: -8.033448219299316
    10. '```' → logprob: -8.033448219299316

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3444472551345825
    2. ' L' → logprob: -1.8444472551345825
    3. 'L' → logprob: -2.094447135925293
    4. '   ' → logprob: -4.594447135925293
    5. ' ' → logprob: -11.594447135925293
    6. '           ' → logprob: -12.094447135925293
    7. '  ' → logprob: -12.469447135925293
    8. '    ' → logprob: -12.969447135925293
    9. '      ' → logprob: -13.344447135925293
    10. '     ' → logprob: -13.344447135925293

Token 291: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.007745040114969015
    2. ' L' → logprob: -5.007745265960693
    3. '   ' → logprob: -7.007745265960693
    4. '       ' → logprob: -9.007744789123535
    5. '    ' → logprob: -14.257744789123535
    6. ' ' → logprob: -15.007744789123535
    7. '  ' → logprob: -15.007744789123535
    8. '	L' → logprob: -15.382744789123535
    9. '           ' → logprob: -16.38274574279785
    10. '```' → logprob: -16.50774574279785

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. ' [' → logprob: -13.375001907348633
    3. '1' → logprob: -15.625001907348633
    4. '```' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.250001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '.' → logprob: -18.000001907348633
    9. '﻿' → logprob: -18.500001907348633
    10. '][' → logprob: -18.625001907348633

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. ']' → logprob: -15.50000286102295
    4. '0' → logprob: -15.75000286102295
    5. '   ' → logprob: -17.375003814697266
    6. '```' → logprob: -18.250003814697266
    7. ')' → logprob: -18.625003814697266
    8. '[' → logprob: -18.625003814697266
    9. '
' → logprob: -18.625003814697266
    10. '  ' → logprob: -18.750003814697266

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045009577297605574
    2. ']+=' → logprob: -7.875450134277344
    3. ' ]' → logprob: -9.625450134277344
    4. ']+' → logprob: -13.625450134277344
    5. '   ' → logprob: -13.625450134277344
    6. '']' → logprob: -14.750450134277344
    7. ' +=' → logprob: -15.000450134277344
    8. '"]' → logprob: -15.375450134277344
    9. '+=' → logprob: -15.375450134277344
    10. ')' → logprob: -15.875450134277344

Token 295: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038050100207328796
    2. ' +=' → logprob: -3.2880501747131348
    3. '+' → logprob: -12.413049697875977
    4. ']+=' → logprob: -12.413049697875977
    5. '=' → logprob: -14.788049697875977
    6. '   ' → logprob: -16.038049697875977
    7. ' ' → logprob: -17.788049697875977
    8. '+='' → logprob: -18.288049697875977
    9. '+="' → logprob: -18.663049697875977
    10. ' ' → logprob: -18.663049697875977

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.518150329589844
    4. '   ' → logprob: -17.643150329589844
    5. '```' → logprob: -18.393150329589844
    6. '  ' → logprob: -19.268150329589844
    7. '<|end|>' → logprob: -19.893150329589844
    8. '	' → logprob: -20.018150329589844
    9. '0' → logprob: -20.393150329589844
    10. '
' → logprob: -20.393150329589844

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -19.1250057220459
    4. '  ' → logprob: -20.6250057220459
    5. '```' → logprob: -20.6250057220459
    6. '１' → logprob: -21.7500057220459
    7. ' ' → logprob: -22.2500057220459
    8. '' → logprob: -23.0000057220459
    9. '۱' → logprob: -23.1250057220459
    10. '	' → logprob: -23.2500057220459

Token 298: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022874027490615845
    2. '
' → logprob: -6.6272873878479
    3. '<|end|>' → logprob: -7.6272873878479
    4. '#' → logprob: -7.8772873878479
    5. 'for' → logprob: -10.127287864685059
    6. '```' → logprob: -10.502287864685059
    7. '#print' → logprob: -11.377287864685059
    8. ')' → logprob: -12.252287864685059
    9. ' print' → logprob: -12.377287864685059
    10. '  
' → logprob: -12.752287864685059

Token 299: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006938508013263345
    2. '#' → logprob: -7.8756937980651855
    3. 'if' → logprob: -8.625694274902344
    4. 'for' → logprob: -9.250694274902344
    5. '```' → logprob: -11.750694274902344
    6. ' print' → logprob: -11.875694274902344
    7. '#print' → logprob: -11.875694274902344
    8. '<|end|>' → logprob: -12.375694274902344
    9. 'L' → logprob: -12.750694274902344
    10. '[' → logprob: -13.375694274902344

Token 300: ' Util' (ID: 13564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019066639652010053
    2. 'for' → logprob: -9.250190734863281
    3. 'if' → logprob: -10.250190734863281
    4. ' print' → logprob: -10.250190734863281
    5. '#' → logprob: -10.750190734863281
    6. '#print' → logprob: -14.375190734863281
    7. ' for' → logprob: -15.000190734863281
    8. 'Print' → logprob: -15.250190734863281
    9. 'prin' → logprob: -15.500190734863281
    10. 'result' → logprob: -15.500190734863281

Token 301: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0017421740340068936
    2. '#' → logprob: -7.001742362976074
    3. 'print' → logprob: -7.251742362976074
    4. '```' → logprob: -10.751742362976074
    5. 'isation' → logprob: -11.001742362976074
    6. 'iser' → logprob: -11.001742362976074
    7. 'isateur' → logprob: -11.126742362976074
    8. '#print' → logprob: -11.251742362976074
    9. 'isez' → logprob: -11.251742362976074
    10. 'isé' → logprob: -11.876742362976074

Token 302: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18105924129486084
    2. ' print' → logprob: -1.8060592412948608
    3. 'for' → logprob: -8.181058883666992
    4. 'if' → logprob: -8.806058883666992
    5. 'prin' → logprob: -9.306058883666992
    6. ' une' → logprob: -9.431058883666992
    7. 'a' → logprob: -9.431058883666992
    8. '#' → logprob: -9.556058883666992
    9. 'une' → logprob: -9.681058883666992
    10. ' ' → logprob: -9.681058883666992

Token 303: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5941604690160602e-05
    2. ' print' → logprob: -10.875025749206543
    3. 'for' → logprob: -12.250025749206543
    4. 'prin' → logprob: -14.125025749206543
    5. '#' → logprob: -14.875025749206543
    6. 'if' → logprob: -15.125025749206543
    7. 'pr' → logprob: -15.500025749206543
    8. '```' → logprob: -15.750025749206543
    9. '
' → logprob: -16.12502670288086
    10. '#print' → logprob: -16.87502670288086

Token 304: ' max' (ID: 2999)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.318681188422488e-05
    2. ' print' → logprob: -11.25001335144043
    3. 'sum' → logprob: -17.12501335144043
    4. 'len' → logprob: -18.62501335144043
    5. '#print' → logprob: -20.12501335144043
    6. 'for' → logprob: -20.25001335144043
    7. '#' → logprob: -20.25001335144043
    8. 'prin' → logprob: -20.50001335144043
    9. 'pr' → logprob: -20.75001335144043
    10. '```' → logprob: -21.37501335144043

Token 305: ' pour' (ID: 1930)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.9790825843811035
    2. '_val' → logprob: -0.9790825843811035
    3. '_value' → logprob: -1.6040825843811035
    4. 'val' → logprob: -3.6040825843811035
    5. '_index' → logprob: -4.6040825843811035
    6. 'L' → logprob: -5.2290825843811035
    7. '(' → logprob: -6.2290825843811035
    8. 'value' → logprob: -7.2290825843811035
    9. '_' → logprob: -7.3540825843811035
    10. '_result' → logprob: -7.9790825843811035

Token 306: ' obtenir' (ID: 54423)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9566082954406738
    2. 'print' → logprob: -1.0816082954406738
    3. ' afficher' → logprob: -2.081608295440674
    4. 'aff' → logprob: -2.706608295440674
    5. ' max' → logprob: -2.706608295440674
    6. ' print' → logprob: -4.456608295440674
    7. '(max' → logprob: -5.206608295440674
    8. 'Afficher' → logprob: -7.581608295440674
    9. ' déterminer' → logprob: -8.581607818603516
    10. ' L' → logprob: -8.831607818603516

Token 307: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7870038151741028
    2. '(max' → logprob: -0.7870038151741028
    3. '(L' → logprob: -2.537003755569458
    4. '(' → logprob: -4.662003993988037
    5. ' max' → logprob: -8.037003517150879
    6. 'la' → logprob: -8.412003517150879
    7. '(
' → logprob: -8.662003517150879
    8. 'L' → logprob: -8.662003517150879
    9. 'val' → logprob: -10.162003517150879
    10. '=max' → logprob: -11.162003517150879

Token 308: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01182506512850523
    2. 'val' → logprob: -5.386825084686279
    3. '(' → logprob: -6.386825084686279
    4. 'maximum' → logprob: -6.386825084686279
    5. '(L' → logprob: -6.636825084686279
    6. '(max' → logprob: -6.636825084686279
    7. '(
' → logprob: -8.011824607849121
    8. ' max' → logprob: -8.011824607849121
    9. 'L' → logprob: -9.136824607849121
    10. 'result' → logprob: -9.261824607849121

Token 309: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.07434611022472382
    2. 'max' → logprob: -3.0743460655212402
    3. ' grande' → logprob: -4.44934606552124
    4. 'grand' → logprob: -4.44934606552124
    5. '_' → logprob: -7.57434606552124
    6. 'large' → logprob: -7.94934606552124
    7. '_gr' → logprob: -8.074346542358398
    8. 'import' → logprob: -8.199346542358398
    9. '```' → logprob: -9.074346542358398
    10. '(max' → logprob: -9.199346542358398

Token 310: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12084052711725235
    2. '(L' → logprob: -2.495840549468994
    3. '(' → logprob: -4.245840549468994
    4. ' valeur' → logprob: -4.245840549468994
    5. 'value' → logprob: -7.245840549468994
    6. 'des' → logprob: -7.620840549468994
    7. 'max' → logprob: -7.870840549468994
    8. 'de' → logprob: -8.245840072631836
    9. '(
' → logprob: -8.370840072631836
    10. 'Vale' → logprob: -8.620840072631836

Token 311: ' dans' (ID: 2671)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5113224983215332
    2. 'val' → logprob: -1.3863224983215332
    3. 'de' → logprob: -2.886322498321533
    4. '(L' → logprob: -3.761322498321533
    5. 'dans' → logprob: -4.511322498321533
    6. ' =' → logprob: -5.011322498321533
    7. 'L' → logprob: -5.011322498321533
    8. 'entre' → logprob: -5.386322498321533
    9. 'value' → logprob: -5.511322498321533
    10. ' entre' → logprob: -5.636322498321533

Token 312: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002188449027016759
    2. ' L' → logprob: -6.127188682556152
    3. '(L' → logprob: -12.627188682556152
    4. '[L' → logprob: -16.502187728881836
    5. ' ' → logprob: -17.627187728881836
    6. '	L' → logprob: -18.377187728881836
    7. '```' → logprob: -18.377187728881836
    8. ' ' → logprob: -18.502187728881836
    9. 'l' → logprob: -18.627187728881836
    10. '(' → logprob: -19.127187728881836

Token 313: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002549024939071387
    2. ' L' → logprob: -8.37525463104248
    3. 'liste' → logprob: -10.87525463104248
    4. 'list' → logprob: -12.62525463104248
    5. '(L' → logprob: -13.87525463104248
    6. ' liste' → logprob: -14.50025463104248
    7. 'Liste' → logprob: -14.87525463104248
    8. ' list' → logprob: -16.000255584716797
    9. 'l' → logprob: -16.875255584716797
    10. '[L' → logprob: -17.000255584716797

Token 314: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.06232694536447525
    2. '(L' → logprob: -2.9373269081115723
    3. 'max' → logprob: -5.312326908111572
    4. ' L' → logprob: -6.437326908111572
    5. 'val' → logprob: -7.687326908111572
    6. 'result' → logprob: -8.43732738494873
    7. 'print' → logprob: -9.56232738494873
    8. 'value' → logprob: -9.93732738494873
    9. '(max' → logprob: -11.06232738494873
    10. '(' → logprob: -11.18732738494873

Token 315: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07773050665855408
    2. 'result' → logprob: -2.827730417251587
    3. 'print' → logprob: -4.452730655670166
    4. 'ma' → logprob: -6.827730655670166
    5. 'm' → logprob: -7.202730655670166
    6. ' max' → logprob: -7.202730655670166
    7. 'maximum' → logprob: -7.452730655670166
    8. 'res' → logprob: -8.327730178833008
    9. 'val' → logprob: -8.702730178833008
    10. 'best' → logprob: -9.327730178833008

Token 316: 'so' (ID: 786)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.15593767166137695
    2. ')' → logprob: -2.030937671661377
    3. ')
' → logprob: -5.155937671661377
    4. ' L' → logprob: -5.280937671661377
    5. 'max' → logprob: -6.780937671661377
    6. '),' → logprob: -8.280937194824219
    7. ',' → logprob: -8.530937194824219
    8. ')L' → logprob: -8.530937194824219
    9. ' )' → logprob: -8.655937194824219
    10. ')

' → logprob: -9.155937194824219

Token 317: 'it' (ID: 278)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6093470454216003
    2. 'it' → logprob: -1.6093471050262451
    3. 'us' → logprob: -1.7343471050262451
    4. 'n' → logprob: -3.109347105026245
    5. 'ur' → logprob: -3.859347105026245
    6. 'r' → logprob: -5.859346866607666
    7. '#' → logprob: -5.984346866607666
    8. '```' → logprob: -6.734346866607666
    9. 'nt' → logprob: -6.984346866607666
    10. 'ule' → logprob: -7.109346866607666

Token 318: ' le' (ID: 505)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.017239006236195564
    2. ' L' → logprob: -4.767239093780518
    3. 'max' → logprob: -4.767239093780518
    4. ' max' → logprob: -10.01723861694336
    5. ')' → logprob: -11.89223861694336
    6. 'la' → logprob: -12.01723861694336
    7. '(L' → logprob: -12.14223861694336
    8. '   ' → logprob: -12.51723861694336
    9. ' ' → logprob: -12.64223861694336
    10. '  ' → logprob: -13.01723861694336

Token 319: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.050045039504766464
    2. 'nombre' → logprob: -3.3000450134277344
    3. 'maximum' → logprob: -4.800045013427734
    4. 'L' → logprob: -5.925045013427734
    5. 'count' → logprob: -8.550045013427734
    6. ' max' → logprob: -8.550045013427734
    7. 'prem' → logprob: -9.425045013427734
    8. 'comp' → logprob: -9.425045013427734
    9. 'plus' → logprob: -9.925045013427734
    10. ' nombre' → logprob: -9.925045013427734

Token 320: ' maximum' (ID: 10562)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8148535490036011
    2. ' de' → logprob: -1.689853549003601
    3. 'd' → logprob: -2.0648536682128906
    4. ' d' → logprob: -2.1898536682128906
    5. 'max' → logprob: -2.9398536682128906
    6. '#' → logprob: -3.1898536682128906
    7. 'L' → logprob: -4.439853668212891
    8. ' des' → logprob: -4.814853668212891
    9. 'des' → logprob: -5.064853668212891
    10. ' L' → logprob: -5.439853668212891

Token 321: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.24461017549037933
    2. 'd' → logprob: -1.9946101903915405
    3. ' de' → logprob: -3.244610071182251
    4. ')' → logprob: -4.24461030960083
    5. 'des' → logprob: -4.36961030960083
    6. ' d' → logprob: -5.11961030960083
    7. 'L' → logprob: -5.86961030960083
    8. '#' → logprob: -6.36961030960083
    9. ' des' → logprob: -6.49461030960083
    10. ',' → logprob: -7.49461030960083

Token 322: ' "' (ID: 392)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.28430095314979553
    2. 'L' → logprob: -1.4093009233474731
    3. ' L' → logprob: -6.284300804138184
    4. ' A' → logprob: -7.284300804138184
    5. '(A' → logprob: -9.284300804138184
    6. ')' → logprob: -9.659300804138184
    7. '"A' → logprob: -9.784300804138184
    8. '(' → logprob: -10.034300804138184
    9. '[A' → logprob: -10.284300804138184
    10. 'S' → logprob: -10.284300804138184

Token 323: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0007366081699728966
    2. ' A' → logprob: -7.625736713409424
    3. '"A' → logprob: -9.250736236572266
    4. '"' → logprob: -9.625736236572266
    5. 'L' → logprob: -10.375736236572266
    6. ' ' → logprob: -11.500736236572266
    7. '```' → logprob: -11.750736236572266
    8. '")' → logprob: -11.875736236572266
    9. ')' → logprob: -12.000736236572266
    10. ''A' → logprob: -12.250736236572266

Token 324: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.22085167467594147
    2. '"' → logprob: -2.0958516597747803
    3. ',' → logprob: -2.8458516597747803
    4. ' ou' → logprob: -4.720851898193359
    5. 's' → logprob: -6.095851898193359
    6. '"),' → logprob: -6.345851898193359
    7. ',"' → logprob: -7.345851898193359
    8. '")' → logprob: -7.345851898193359
    9. '),' → logprob: -7.470851898193359
    10. ' ",' → logprob: -7.595851898193359

Token 325: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.05504036694765091
    2. 'so' → logprob: -3.1800403594970703
    3. '#' → logprob: -5.30504035949707
    4. ' so' → logprob: -6.43004035949707
    5. ',' → logprob: -6.68004035949707
    6. ' #' → logprob: -6.93004035949707
    7. ' L' → logprob: -6.93004035949707
    8. ' ' → logprob: -7.68004035949707
    9. ' or' → logprob: -7.93004035949707
    10. ' max' → logprob: -8.43004035949707

Token 326: ' d' (ID: 272)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9645739793777466
    2. ' L' → logprob: -0.9645739793777466
    3. ' le' → logprob: -1.9645739793777466
    4. 'le' → logprob: -2.964573860168457
    5. ' de' → logprob: -4.464573860168457
    6. 'de' → logprob: -4.464573860168457
    7. ' des' → logprob: -4.839573860168457
    8. ' celui' → logprob: -5.839573860168457
    9. 'max' → logprob: -6.089573860168457
    10. ' d' → logprob: -6.214573860168457

Token 327: ''autres' (ID: 38753)
  Prédit: ''autres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''autres' → logprob: -0.11697371304035187
    2. ' L' → logprob: -2.741973638534546
    3. ''autre' → logprob: -4.366973876953125
    4. ''' → logprob: -4.616973876953125
    5. ''aut' → logprob: -5.241973876953125
    6. ' de' → logprob: -5.491973876953125
    7. 'L' → logprob: -5.491973876953125
    8. ''un' → logprob: -6.616973876953125
    9. ''L' → logprob: -6.741973876953125
    10. ''A' → logprob: -6.991973876953125

Token 328: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.010929679498076439
    2. 'car' → logprob: -5.135929584503174
    3. ' caracteres' → logprob: -6.260929584503174
    4. '_car' → logprob: -6.510929584503174
    5. ' car' → logprob: -7.760929584503174
    6. ')' → logprob: -8.260930061340332
    7. ' caract' → logprob: -8.510930061340332
    8. ' caractère' → logprob: -8.760930061340332
    9. ',' → logprob: -8.885930061340332
    10. ' ,' → logprob: -9.260930061340332

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002984121209010482
    2. ' )' → logprob: -6.377984046936035
    3. ')
' → logprob: -7.127984046936035
    4. ',' → logprob: -8.752984046936035
    5. 'max' → logprob: -9.377984046936035
    6. '))' → logprob: -10.377984046936035
    7. '")' → logprob: -10.502984046936035
    8. ').' → logprob: -10.627984046936035
    9. 'print' → logprob: -10.752984046936035
    10. ')#' → logprob: -11.002984046936035

Token 330: 'if' (ID: 366)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04738659784197807
    2. 'print' → logprob: -3.672386646270752
    3. 'result' → logprob: -4.547386646270752
    4. 'm' → logprob: -5.422386646270752
    5. ' max' → logprob: -5.547386646270752
    6. 'maximum' → logprob: -7.297386646270752
    7. 'res' → logprob: -8.047386169433594
    8. 'ma' → logprob: -8.922386169433594
    9. 'M' → logprob: -9.047386169433594
    10. 'most' → logprob: -9.172386169433594

Token 331: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.12693072855472565
    2. 'max' → logprob: -2.1269307136535645
    3. ' L' → logprob: -13.126931190490723
    4. '(max' → logprob: -14.376931190490723
    5. 'L' → logprob: -16.751930236816406
    6. '	max' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '=max' → logprob: -18.626930236816406
    9. ' ' → logprob: -18.751930236816406
    10. ' maximum' → logprob: -19.126930236816406

Token 332: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -3.128163257315464e-07
    2. 'L' → logprob: -15.5
    3. '(' → logprob: -16.625
    4. ' (' → logprob: -18.125
    5. '[L' → logprob: -19.625
    6. ')' → logprob: -19.75
    7. '(
' → logprob: -19.75
    8. '```' → logprob: -20.75
    9. '(S' → logprob: -20.875
    10. ')L' → logprob: -21.125

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001996066712308675
    2. ')==' → logprob: -9.125199317932129
    3. ' )' → logprob: -9.875199317932129
    4. ')>' → logprob: -10.375199317932129
    5. '[' → logprob: -12.125199317932129
    6. '())' → logprob: -13.750199317932129
    7. ')>=' → logprob: -14.875199317932129
    8. '()' → logprob: -15.125199317932129
    9. '==' → logprob: -15.250199317932129
    10. ')
' → logprob: -15.500199317932129

Token 334: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15752246975898743
    2. '==' → logprob: -2.157522439956665
    3. ' >' → logprob: -3.782522439956665
    4. '>' → logprob: -5.032522678375244
    5. ' >=' → logprob: -7.657522678375244
    6. '>=' → logprob: -8.657522201538086
    7. '[' → logprob: -9.282522201538086
    8. ' ' → logprob: -10.282522201538086
    9. ' <' → logprob: -11.157522201538086
    10. ' ' → logprob: -11.657522201538086

Token 335: ' ' (ID: 220)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.64970643306151e-05
    2. '0' → logprob: -9.750086784362793
    3. ' L' → logprob: -10.500086784362793
    4. '   ' → logprob: -15.375086784362793
    5. ' ' → logprob: -15.500086784362793
    6. '	L' → logprob: -16.625085830688477
    7. '[' → logprob: -17.250085830688477
    8. '1' → logprob: -17.375085830688477
    9. '[L' → logprob: -18.125085830688477
    10. '>L' → logprob: -18.875085830688477

Token 336: '3' (ID: 18)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00035072024911642075
    2. '0' → logprob: -8.125350952148438
    3. ' L' → logprob: -9.875350952148438
    4. ' ' → logprob: -13.625350952148438
    5. '   ' → logprob: -14.375350952148438
    6. '1' → logprob: -14.750350952148438
    7. '[' → logprob: -15.250350952148438
    8. '	L' → logprob: -15.500350952148438
    9. 'S' → logprob: -15.875350952148438
    10. 'A' → logprob: -16.000350952148438

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011444123461842537
    2. ':
' → logprob: -4.511444091796875
    3. ' :' → logprob: -7.886444091796875
    4. ' :
' → logprob: -10.886444091796875
    5. '   ' → logprob: -14.386444091796875
    6. ' and' → logprob: -14.761444091796875
    7. ':
' → logprob: -15.011444091796875
    8. ':

' → logprob: -15.386444091796875
    9. ',' → logprob: -16.511444091796875
    10. ':#' → logprob: -16.761444091796875

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004195929039269686
    2. 'print' → logprob: -5.6291961669921875
    3. ' print' → logprob: -7.5041961669921875
    4. ':' → logprob: -10.504196166992188
    5. '	print' → logprob: -11.879196166992188
    6. '   ' → logprob: -12.254196166992188
    7. '
' → logprob: -13.129196166992188
    8. ':
' → logprob: -13.754196166992188
    9. '    
' → logprob: -14.254196166992188
    10. '  ' → logprob: -14.754196166992188

Token 339: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4027705490589142
    2. '   ' → logprob: -1.1527705192565918
    3. ' print' → logprob: -4.152770519256592
    4. '	print' → logprob: -10.52777099609375
    5. ' ' → logprob: -11.15277099609375
    6. 'if' → logprob: -12.27777099609375
    7. '  ' → logprob: -13.02777099609375
    8. '   ' → logprob: -13.65277099609375
    9. '       ' → logprob: -14.27777099609375
    10. '
' → logprob: -14.40277099609375

Token 340: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20489878952503204
    2. ' print' → logprob: -1.7048988342285156
    3. '   ' → logprob: -5.704898834228516
    4. 'if' → logprob: -9.829898834228516
    5. ' if' → logprob: -10.329898834228516
    6. '	print' → logprob: -10.954898834228516
    7. ' ' → logprob: -11.329898834228516
    8. '    ' → logprob: -11.579898834228516
    9. '#' → logprob: -11.954898834228516
    10. '
' → logprob: -12.329898834228516

Token 341: ' signifie' (ID: 81149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.37973037362098694
    2. ' print' → logprob: -1.3797303438186646
    3. ':' → logprob: -2.879730463027954
    4. ' signifie' → logprob: -5.254730224609375
    5. '   ' → logprob: -6.379730224609375
    6. ' :' → logprob: -7.504730224609375
    7. ' means' → logprob: -8.879730224609375
    8. ':
' → logprob: -9.004730224609375
    9. ' veut' → logprob: -9.254730224609375
    10. ' imprime' → logprob: -9.379730224609375

Token 342: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1263294368982315
    2. ' que' → logprob: -2.8763294219970703
    3. 'print' → logprob: -3.0013294219970703
    4. ' print' → logprob: -4.50132942199707
    5. ' ' → logprob: -7.75132942199707
    6. ' qu' → logprob: -8.12632942199707
    7. '#' → logprob: -8.62632942199707
    8. '  ' → logprob: -8.75132942199707
    9. '    ' → logprob: -9.00132942199707
    10. 'que' → logprob: -9.12632942199707

Token 343: ' tous' (ID: 10688)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7590486407279968
    2. 'L' → logprob: -1.7590487003326416
    3. ' print' → logprob: -1.7590487003326416
    4. ' L' → logprob: -1.7590487003326416
    5. ' S' → logprob: -5.1340484619140625
    6. 'S' → logprob: -5.5090484619140625
    7. '   ' → logprob: -6.1340484619140625
    8. ' ' → logprob: -6.7590484619140625
    9. '"' → logprob: -7.6340484619140625
    10. '  ' → logprob: -8.009048461914062

Token 344: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5354308485984802
    2. ' les' → logprob: -1.035430908203125
    3. 'S' → logprob: -3.160430908203125
    4. '(S' → logprob: -5.035430908203125
    5. ' S' → logprob: -5.410430908203125
    6. ' ' → logprob: -6.160430908203125
    7. '#' → logprob: -6.910430908203125
    8. '(' → logprob: -7.160430908203125
    9. '   ' → logprob: -7.660430908203125
    10. '("' → logprob: -7.910430908203125

Token 345: ' caractères' (ID: 183106)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.7032915353775024
    2. 'car' → logprob: -0.7032915353775024
    3. '3' → logprob: -5.328291416168213
    4. ' caractères' → logprob: -6.578291416168213
    5. 'L' → logprob: -6.828291416168213
    6. 'A' → logprob: -7.203291416168213
    7. ' S' → logprob: -7.328291416168213
    8. ' ' → logprob: -7.578291416168213
    9. 'i' → logprob: -8.328291893005371
    10. 'characters' → logprob: -9.078291893005371

Token 346: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3581652343273163
    2. ' sont' → logprob: -2.3581652641296387
    3. 'de' → logprob: -2.7331652641296387
    4. ' de' → logprob: -2.7331652641296387
    5. ' S' → logprob: -3.2331652641296387
    6. 'S' → logprob: -4.358165264129639
    7. 'dans' → logprob: -4.733165264129639
    8. ' dans' → logprob: -5.358165264129639
    9. 'éta' → logprob: -6.233165264129639
    10. ' ' → logprob: -6.233165264129639

Token 347: ' les' (ID: 1341)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.057761382311582565
    2. 'A' → logprob: -3.5577614307403564
    3. ' "' → logprob: -4.557761192321777
    4. ' ident' → logprob: -5.557761192321777
    5. ''A' → logprob: -5.682761192321777
    6. '"' → logprob: -5.932761192321777
    7. 'ident' → logprob: -5.932761192321777
    8. 'des' → logprob: -6.307761192321777
    9. ' soit' → logprob: -7.432761192321777
    10. 'les' → logprob: -8.057761192321777

Token 348: ' mêmes' (ID: 71634)
  Prédit: ' mêmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mêmes' → logprob: -0.06109840050339699
    2. 'A' → logprob: -4.311098575592041
    3. ' même' → logprob: -4.436098575592041
    4. 'm' → logprob: -4.561098575592041
    5. '"A' → logprob: -4.561098575592041
    6. ' "' → logprob: -4.811098575592041
    7. '"' → logprob: -5.686098575592041
    8. ' A' → logprob: -7.186098575592041
    9. ' same' → logprob: -8.561098098754883
    10. ' ' → logprob: -9.436098098754883

Token 349: ' ' (ID: 5310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050898853689432144
    2. ':' → logprob: -3.675898790359497
    3. ' print' → logprob: -4.550899028778076
    4. 'print' → logprob: -5.050899028778076
    5. ' and' → logprob: -5.675899028778076
    6. ':
' → logprob: -5.675899028778076
    7. ' if' → logprob: -9.050898551940918
    8. ' :' → logprob: -9.300898551940918
    9. ' ' → logprob: -10.050898551940918
    10. '  ' → logprob: -10.425898551940918

Token 350: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13372762501239777
    2. ' print' → logprob: -2.883727550506592
    3. 'print' → logprob: -3.633727550506592
    4. ' and' → logprob: -3.883727550506592
    5. ':' → logprob: -4.008727550506592
    6. ' if' → logprob: -6.258727550506592
    7. ' :' → logprob: -7.133727550506592
    8. ' ' → logprob: -8.38372802734375
    9. ',' → logprob: -8.63372802734375
    10. ':
' → logprob: -8.63372802734375

Token 351: ' soit' (ID: 17293)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5946864485740662
    2. 'print' → logprob: -1.219686508178711
    3. '   ' → logprob: -2.344686508178711
    4. ' if' → logprob: -3.094686508178711
    5. 'if' → logprob: -4.469686508178711
    6. ' ' → logprob: -8.969686508178711
    7. '    ' → logprob: -10.094686508178711
    8. '  ' → logprob: -10.344686508178711
    9. '	print' → logprob: -10.344686508178711
    10. ' S' → logprob: -10.594686508178711

Token 352: ' tous' (ID: 10688)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.05894884467124939
    2. ''A' → logprob: -3.0589487552642822
    3. '"' → logprob: -5.308948993682861
    4. 'A' → logprob: -6.183948993682861
    5. ' "' → logprob: -6.683948993682861
    6. '"L' → logprob: -7.183948993682861
    7. '"S' → logprob: -8.058948516845703
    8. 'print' → logprob: -8.433948516845703
    9. '   ' → logprob: -8.683948516845703
    10. ' ' → logprob: -9.308948516845703

Token 353: ' "' (ID: 392)
  Prédit: '"A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"A' → logprob: -0.8057019710540771
    2. '"S' → logprob: -1.5557019710540771
    3. 'A' → logprob: -1.6807019710540771
    4. 'S' → logprob: -3.055701971054077
    5. 'des' → logprob: -3.180701971054077
    6. '"' → logprob: -4.180702209472656
    7. 's' → logprob: -4.555702209472656
    8. ''A' → logprob: -4.680702209472656
    9. '("' → logprob: -4.805702209472656
    10. 'les' → logprob: -5.055702209472656

Token 354: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010533124441280961
    2. ' A' → logprob: -9.750104904174805
    3. '"A' → logprob: -10.125104904174805
    4. ''A' → logprob: -12.375104904174805
    5. '"' → logprob: -13.625104904174805
    6. '```' → logprob: -15.125104904174805
    7. 'Ａ' → logprob: -15.875104904174805
    8. ' ' → logprob: -16.000104904174805
    9. 'А' → logprob: -16.125104904174805
    10. 's' → logprob: -16.312604904174805

Token 355: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03403671458363533
    2. '"' → logprob: -3.409036636352539
    3. '   ' → logprob: -9.159036636352539
    4. 's' → logprob: -9.534036636352539
    5. ',' → logprob: -9.784036636352539
    6. 'print' → logprob: -9.909036636352539
    7. ' ",' → logprob: -10.784036636352539
    8. '"
' → logprob: -11.034036636352539
    9. 'S' → logprob: -11.659036636352539
    10. ' soit' → logprob: -11.784036636352539

Token 356: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1639469861984253
    2. '#' → logprob: -2.163947105407715
    3. 'print' → logprob: -3.538947105407715
    4. ' #' → logprob: -5.413947105407715
    5. ' print' → logprob: -6.163947105407715
    6. ' ' → logprob: -9.038947105407715
    7. ',' → logprob: -9.038947105407715
    8. '  ' → logprob: -9.163947105407715
    9. ' soit' → logprob: -9.288947105407715
    10. '    ' → logprob: -9.538947105407715

Token 357: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1783744096755981
    2. 'all' → logprob: -1.3033744096755981
    3. ' all' → logprob: -1.6783744096755981
    4. ' tous' → logprob: -1.8033744096755981
    5. '"' → logprob: -3.8033742904663086
    6. 'tout' → logprob: -3.8033742904663086
    7. 'aut' → logprob: -5.178374290466309
    8. ' ' → logprob: -6.053374290466309
    9. ' autres' → logprob: -6.303374290466309
    10. 'les' → logprob: -6.303374290466309

Token 358: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.2436472475528717
    2. ' autres' → logprob: -2.243647336959839
    3. 'les' → logprob: -3.118647336959839
    4. ' autre' → logprob: -3.868647336959839
    5. ' les' → logprob: -4.36864709854126
    6. '"' → logprob: -4.49364709854126
    7. 'diff' → logprob: -4.86864709854126
    8. 'd' → logprob: -5.99364709854126
    9. ' différents' → logprob: -6.49364709854126
    10. 's' → logprob: -6.61864709854126

Token 359: '
' (ID: 198)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.3311581611633301
    2. 'car' → logprob: -1.45615816116333
    3. '.' → logprob: -3.95615816116333
    4. '#' → logprob: -4.58115816116333
    5. ' caracteres' → logprob: -5.08115816116333
    6. ' caract' → logprob: -6.08115816116333
    7. ' characters' → logprob: -6.83115816116333
    8. ' (' → logprob: -6.83115816116333
    9. ':' → logprob: -6.83115816116333
    10. ',' → logprob: -6.95615816116333

Token 360: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005741663742810488
    2. ' print' → logprob: -5.630741596221924
    3. 'print' → logprob: -6.255741596221924
    4. ':' → logprob: -8.630742073059082
    5. ' if' → logprob: -11.505742073059082
    6. '   ' → logprob: -11.880742073059082
    7. ':
' → logprob: -12.005742073059082
    8. '	print' → logprob: -12.380742073059082
    9. 'if' → logprob: -12.505742073059082
    10. '       ' → logprob: -13.005742073059082

Token 361: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05816928297281265
    2. ' print' → logprob: -3.308169364929199
    3. '   ' → logprob: -3.933169364929199
    4. 'if' → logprob: -8.3081693649292
    5. ' if' → logprob: -10.0581693649292
    6. ' ' → logprob: -10.4331693649292
    7. '	print' → logprob: -11.4331693649292
    8. '  ' → logprob: -11.5581693649292
    9. '    ' → logprob: -13.0581693649292
    10. '#' (adapté à ' #') → logprob: -13.8081693649292

Token 362: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007907193154096603
    2. ' print' → logprob: -5.132907390594482
    3. '   ' → logprob: -6.382907390594482
    4. 'if' → logprob: -8.257906913757324
    5. ' if' → logprob: -11.132906913757324
    6. '	print' → logprob: -12.507906913757324
    7. ' ' → logprob: -12.632906913757324
    8. '  ' → logprob: -13.382906913757324
    9. '    ' → logprob: -14.257906913757324
    10. '#' → logprob: -14.507906913757324

Token 363: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6493551135063171
    2. 'L' → logprob: -1.524355173110962
    3. 'S' → logprob: -2.024355173110962
    4. 'max' → logprob: -3.149355173110962
    5. ' ce' → logprob: -3.274355173110962
    6. 'ce' → logprob: -3.899355173110962
    7. 'le' → logprob: -5.274354934692383
    8. ' ' → logprob: -5.649354934692383
    9. 'la' → logprob: -5.774354934692383
    10. '#' → logprob: -6.399354934692383

Token 364: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.9535228610038757
    2. 'case' → logprob: -1.3285229206085205
    3. 'print' → logprob: -1.4535229206085205
    4. ' cas' → logprob: -3.3285229206085205
    5. 'code' → logprob: -3.4535229206085205
    6. 'if' → logprob: -3.7035229206085205
    7. 'else' → logprob: -4.578522682189941
    8. 'elif' → logprob: -5.203522682189941
    9. '#' → logprob: -5.828522682189941
    10. '```' → logprob: -6.703522682189941

Token 365: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8564126491546631
    2. 'print' → logprob: -1.356412649154663
    3. ' print' → logprob: -1.731412649154663
    4. ':' → logprob: -1.981412649154663
    5. ':
' → logprob: -6.356412887573242
    6. '    ' → logprob: -8.106412887573242
    7. ' :' → logprob: -8.231412887573242
    8. '	print' → logprob: -8.731412887573242
    9. '       ' → logprob: -9.481412887573242
    10. ' ' → logprob: -9.981412887573242

Token 366: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007071728352457285
    2. ' print' → logprob: -5.007071495056152
    3. '   ' → logprob: -8.007071495056152
    4. 'if' → logprob: -11.007071495056152
    5. ' ' → logprob: -13.382071495056152
    6. ' if' → logprob: -13.882071495056152
    7. '  ' → logprob: -13.882071495056152
    8. '	print' → logprob: -14.007071495056152
    9. 'for' → logprob: -14.382071495056152
    10. 'pass' → logprob: -14.632071495056152

Token 367: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005753128207288682
    2. '(' → logprob: -8.125575065612793
    3. '"' → logprob: -8.750575065612793
    4. '('' → logprob: -9.875575065612793
    5. '"S' → logprob: -10.375575065612793
    6. 'print' → logprob: -10.875575065612793
    7. '(S' → logprob: -12.500575065612793
    8. '"L' → logprob: -12.750575065612793
    9. '("\' → logprob: -13.250575065612793
    10. '"La' → logprob: -13.500575065612793

Token 368: ' chaîne' (ID: 89288)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.031382251530885696
    2. '"' → logprob: -3.9063823223114014
    3. ' print' → logprob: -5.281382083892822
    4. 'chaine' → logprob: -6.531382083892822
    5. 'message' → logprob: -6.906382083892822
    6. '("' → logprob: -7.281382083892822
    7. 'phrase' → logprob: -8.15638256072998
    8. 't' → logprob: -8.40638256072998
    9. 'string' → logprob: -8.40638256072998
    10. ' ' → logprob: -8.53138256072998

Token 369: ' de' (ID: 334)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.04010527953505516
    2. 'print' → logprob: -3.5401053428649902
    3. '(S' → logprob: -4.66510534286499
    4. ' S' → logprob: -7.29010534286499
    5. '"S' → logprob: -9.290104866027832
    6. ' print' → logprob: -9.790104866027832
    7. '(' → logprob: -10.915104866027832
    8. '"' → logprob: -12.040104866027832
    9. '("' → logprob: -12.040104866027832
    10. '   ' → logprob: -12.415104866027832

Token 370: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.05671026185154915
    2. ' caractères' → logprob: -3.3067102432250977
    3. 'S' → logprob: -4.181710243225098
    4. '3' → logprob: -7.056710243225098
    5. '"S' → logprob: -7.056710243225098
    6. 'print' → logprob: -7.181710243225098
    7. '"' → logprob: -9.056710243225098
    8. 'chars' → logprob: -9.306710243225098
    9. '#' → logprob: -9.306710243225098
    10. ' S' → logprob: -9.431710243225098

Token 371: ' "' (ID: 392)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.534233808517456
    2. 'S' → logprob: -1.034233808517456
    3. ' print' → logprob: -3.284233808517456
    4. ' S' → logprob: -3.909233808517456
    5. '   ' → logprob: -8.034234046936035
    6. ':' → logprob: -8.534234046936035
    7. '(S' → logprob: -9.534234046936035
    8. ' ' → logprob: -10.034234046936035
    9. ',' → logprob: -10.159234046936035
    10. ' :' → logprob: -10.659234046936035

Token 372: 'No' (ID: 3160)
  Prédit: 'AAA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AAA' → logprob: -1.139461636543274
    2. 'Tous' → logprob: -1.389461636543274
    3. '3' → logprob: -2.6394615173339844
    4. '"' → logprob: -3.1394615173339844
    5. 'A' → logprob: -3.3894615173339844
    6. 'O' → logprob: -3.6394615173339844
    7. 'Tout' → logprob: -3.6394615173339844
    8. 'OK' → logprob: -3.6394615173339844
    9. 'Tro' → logprob: -4.014461517333984
    10. 'GG' → logprob: -4.264461517333984

Token 373: '"' (ID: 1)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1558256149291992
    2. ' match' → logprob: -2.030825614929199
    3. 'ne' → logprob: -2.155825614929199
    4. 'te' → logprob: -3.155825614929199
    5. ' A' → logprob: -3.155825614929199
    6. 'A' → logprob: -3.280825614929199
    7. 'n' → logprob: -3.780825614929199
    8. ' change' → logprob: -3.780825614929199
    9. ' error' → logprob: -3.968325614929199
    10. 'Match' → logprob: -4.405825614929199

Token 374: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09432878345251083
    2. '
' → logprob: -2.8443288803100586
    3. 'else' → logprob: -3.5943288803100586
    4. '   ' → logprob: -6.219328880310059
    5. ' print' → logprob: -6.469328880310059
    6. ' else' → logprob: -8.094328880310059
    7. 'elif' → logprob: -8.844328880310059
    8. '```' → logprob: -8.844328880310059
    9. ')' → logprob: -9.344328880310059
    10. '    
' → logprob: -9.969328880310059

Token 375: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030826441943645477
    2. ' print' → logprob: -6.128082752227783
    3. 'la' → logprob: -7.628082752227783
    4. ')' → logprob: -9.003082275390625
    5. '   ' → logprob: -9.378082275390625
    6. ' la' → logprob: -10.128082275390625
    7. 'l' → logprob: -10.628082275390625
    8. ' ' → logprob: -10.753082275390625
    9. '`' → logprob: -11.378082275390625
    10. '```' → logprob: -11.503082275390625

Token 376: ''écran' (ID: 147901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023452966706827283
    2. '   ' → logprob: -9.000234603881836
    3. 'else' → logprob: -10.500234603881836
    4. 'elif' → logprob: -10.625234603881836
    5. 'a' → logprob: -11.250234603881836
    6. '```' → logprob: -11.750234603881836
    7. 'e' → logprob: -11.875234603881836
    8. ' print' → logprob: -11.875234603881836
    9. 'console' → logprob: -12.000234603881836
    10. 'aise' → logprob: -12.875234603881836

Token 377: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022140119690448046
    2. '   ' → logprob: -6.252213954925537
    3. ' print' → logprob: -8.502214431762695
    4. '
' → logprob: -9.877214431762695
    5. 'else' → logprob: -11.252214431762695
    6. '```' → logprob: -11.252214431762695
    7. '    
' → logprob: -13.002214431762695
    8. 'elif' → logprob: -14.127214431762695
    9. '	print' → logprob: -14.877214431762695
    10. '``' → logprob: -15.502214431762695

Token 378: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009346961043775082
    2. ' print' → logprob: -4.884346961975098
    3. '   ' → logprob: -6.509346961975098
    4. '
' → logprob: -8.384346961975098
    5. '```' → logprob: -11.259346961975098
    6. '    
' → logprob: -12.259346961975098
    7. ' 
' → logprob: -13.509346961975098
    8. 'Print' → logprob: -14.509346961975098
    9. '	print' → logprob: -14.509346961975098
    10. '  
' → logprob: -15.384346961975098

Token 379: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00033558503491804004
    2. ' print' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '```' → logprob: -17.250335693359375
    5. '
' → logprob: -18.000335693359375
    6. 'Print' → logprob: -19.000335693359375
    7. '	print' → logprob: -19.375335693359375
    8. 'if' → logprob: -20.375335693359375
    9. '    
' → logprob: -20.750335693359375
    10. ' 
' → logprob: -21.875335693359375

Token 380: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018290061503648758
    2. '(' → logprob: -4.018290042877197
    3. ' ("' → logprob: -9.643290519714355
    4. '('' → logprob: -9.768290519714355
    5. ' (' → logprob: -11.393290519714355
    6. '()' → logprob: -12.893290519714355
    7. '("")' → logprob: -13.018290519714355
    8. '("("' → logprob: -14.268290519714355
    9. '(
' → logprob: -14.643290519714355
    10. ' ' → logprob: -14.893290519714355

Token 381: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ' No' → logprob: -20.875
    3. '"No' → logprob: -23.375
    4. 'Yes' → logprob: -24.0
    5. 'no' → logprob: -25.125
    6. '_No' → logprob: -25.5
    7. 'NO' → logprob: -26.5
    8. '.No' → logprob: -26.875
    9. '_no' → logprob: -27.5
    10. 'N' → logprob: -27.75

Token 382: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -3.650518920039758e-06
    2. ')")' → logprob: -13.250003814697266
    3. '")
' → logprob: -13.500003814697266
    4. ')' → logprob: -15.375003814697266
    5. ' ")' → logprob: -17.000003814697266
    6. '"' → logprob: -17.000003814697266
    7. '")
' → logprob: -17.500003814697266
    8. '")

' → logprob: -18.000003814697266
    9. '");' → logprob: -18.500003814697266
    10. '!")' → logprob: -18.625003814697266

Token 383: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008715503849089146
    2. 'elif' → logprob: -4.758715629577637
    3. ' else' → logprob: -9.258715629577637
    4. ')' → logprob: -13.258715629577637
    5. '<|end|>' → logprob: -13.633715629577637
    6. '```' → logprob: -13.883715629577637
    7. ' elif' → logprob: -14.633715629577637
    8. 'el' → logprob: -14.883715629577637
    9. 'elseif' → logprob: -15.258715629577637
    10. 'e' → logprob: -15.508715629577637

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01840932108461857
    2. ':
' → logprob: -4.018409252166748
    3. ' :' → logprob: -9.018409729003906
    4. '   ' → logprob: -9.143409729003906
    5. ' :
' → logprob: -10.518409729003906
    6. '():' → logprob: -13.393409729003906
    7. 'print' → logprob: -14.518409729003906
    8. ':

' → logprob: -14.643409729003906
    9. '():
' → logprob: -14.768409729003906
    10. ':
' → logprob: -14.893409729003906

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29066452383995056
    2. 'print' → logprob: -1.415664553642273
    3. ' print' → logprob: -4.6656646728515625
    4. '    
' → logprob: -11.165664672851562
    5. '	print' → logprob: -11.290664672851562
    6. '   ' → logprob: -11.540664672851562
    7. '
' → logprob: -11.790664672851562
    8. ' ' → logprob: -12.290664672851562
    9. '#' → logprob: -13.540664672851562
    10. '```' → logprob: -13.665664672851562

Token 386: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0042367661371827126
    2. ' print' → logprob: -5.754236698150635
    3. '   ' → logprob: -6.879236698150635
    4. '#' (adapté à ' #') → logprob: -11.254237174987793
    5. ' ' → logprob: -11.629237174987793
    6. 'for' → logprob: -12.754237174987793
    7. '	print' → logprob: -13.254237174987793
    8. '  ' → logprob: -14.004237174987793
    9. 'if' → logprob: -14.754237174987793
    10. 'pass' → logprob: -14.754237174987793

Token 387: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1102592721581459
    2. ' print' → logprob: -2.4852592945098877
    3. '   ' → logprob: -3.8602592945098877
    4. ' ' → logprob: -11.485259056091309
    5. '	print' → logprob: -12.235259056091309
    6. '  ' → logprob: -12.485259056091309
    7. '#' → logprob: -12.610259056091309
    8. '    ' → logprob: -13.110259056091309
    9. 'if' → logprob: -13.360259056091309
    10. '
' → logprob: -13.610259056091309

Token 388: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12551844120025635
    2. 'print' → logprob: -2.250518321990967
    3. ' print' → logprob: -4.375518321990967
    4. ':' → logprob: -11.375518798828125
    5. '   ' → logprob: -11.625518798828125
    6. '	print' → logprob: -12.375518798828125
    7. '
' → logprob: -13.125518798828125
    8. '    
' → logprob: -13.375518798828125
    9. ' ' → logprob: -13.500518798828125
    10. '    ' → logprob: -13.875518798828125

Token 389: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1685340702533722
    2. ' print' → logprob: -2.04353404045105
    3. '   ' → logprob: -3.66853404045105
    4. '	print' → logprob: -12.043534278869629
    5. ' ' → logprob: -12.918534278869629
    6. '
' → logprob: -14.043534278869629
    7. '   ' → logprob: -14.168534278869629
    8. '  ' → logprob: -14.168534278869629
    9. '    
' → logprob: -14.543534278869629
    10. '```' → logprob: -14.668534278869629

Token 390: ' veut' (ID: 41653)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24233554303646088
    2. 'print' → logprob: -1.742335557937622
    3. ' print' → logprob: -3.492335557937622
    4. '   ' → logprob: -5.117335319519043
    5. ':
' → logprob: -5.742335319519043
    6. ' :' → logprob: -8.242335319519043
    7. '	print' → logprob: -10.367335319519043
    8. '#' → logprob: -10.492335319519043
    9. '
' → logprob: -10.617335319519043
    10. ' prints' → logprob: -10.992335319519043

Token 391: ' dire' (ID: 4071)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.043881721794605255
    2. 'dire' → logprob: -3.41888165473938
    3. '   ' → logprob: -5.043881893157959
    4. ' dire' → logprob: -6.418881893157959
    5. '#' → logprob: -6.918881893157959
    6. 'im' → logprob: -8.1688814163208
    7. 'sign' → logprob: -8.2938814163208
    8. 'ind' → logprob: -8.5438814163208
    9. ' print' → logprob: -8.7938814163208
    10. '#print' → logprob: -9.6688814163208

Token 392: ' qu' (ID: 474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5865407586097717
    2. '   ' → logprob: -0.8365407586097717
    3. ' print' → logprob: -4.586540699005127
    4. '  ' → logprob: -8.336541175842285
    5. ' ' → logprob: -9.836541175842285
    6. '    ' → logprob: -10.461541175842285
    7. '	print' → logprob: -11.836541175842285
    8. '"' → logprob: -11.961541175842285
    9. ' ' → logprob: -12.336541175842285
    10. '#' → logprob: -12.336541175842285

Token 393: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0451816320419312
    2. ' print' → logprob: -1.5451816320419312
    3. 'print' → logprob: -1.7951816320419312
    4. '   ' → logprob: -2.1701817512512207
    5. ' que' → logprob: -2.6701817512512207
    6. ' il' → logprob: -3.1701817512512207
    7. ''il' → logprob: -4.295181751251221
    8. 'il' → logprob: -5.420181751251221
    9. ' le' → logprob: -5.545181751251221
    10. ' la' → logprob: -5.545181751251221

Token 394: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31203895807266235
    2. ' a' → logprob: -2.0620388984680176
    3. 'a' → logprob: -2.4370388984680176
    4. 'y' → logprob: -3.0620388984680176
    5. 'print' → logprob: -5.437038898468018
    6. ' print' → logprob: -6.437038898468018
    7. '#' → logprob: -7.937038898468018
    8. 'f' → logprob: -9.937039375305176
    9. 's' → logprob: -10.062039375305176
    10. ' n' → logprob: -10.187039375305176

Token 395: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011143906973302364
    2. ' a' → logprob: -4.511143684387207
    3. ''a' → logprob: -9.636143684387207
    4. '#' → logprob: -11.636143684387207
    5. 'avait' → logprob: -12.011143684387207
    6. '#a' → logprob: -12.136143684387207
    7. '```' → logprob: -13.761143684387207
    8. 'à' → logprob: -14.136143684387207
    9. 'at' → logprob: -14.136143684387207
    10. 'au' → logprob: -14.136143684387207

Token 396: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.11154443025588989
    2. ' a' → logprob: -3.736544370651245
    3. ' une' → logprob: -3.986544370651245
    4. ' un' → logprob: -3.986544370651245
    5. 'au' → logprob: -4.236544609069824
    6. ' at' → logprob: -4.236544609069824
    7. ' ' → logprob: -5.236544609069824
    8. ' des' → logprob: -5.236544609069824
    9. 'une' → logprob: -6.861544609069824
    10. ' "' → logprob: -7.361544609069824

Token 397: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0005581548321060836
    2. 'mo' → logprob: -7.875558376312256
    3. '```' → logprob: -10.000557899475098
    4. '   ' → logprob: -10.250557899475098
    5. 'minimum' → logprob: -10.625557899475098
    6. ' moins' → logprob: -10.875557899475098
    7. 'plus' → logprob: -11.375557899475098
    8. 'm' → logprob: -11.375557899475098
    9. 'menos' → logprob: -11.625557899475098
    10. '#' → logprob: -12.625557899475098

Token 398: ' deux' (ID: 10301)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5342859625816345
    2. ' un' → logprob: -1.9092860221862793
    3. ' une' → logprob: -2.0342860221862793
    4. 'un' → logprob: -2.0342860221862793
    5. ' one' → logprob: -6.534286022186279
    6. ' ' → logprob: -6.784286022186279
    7. ''un' → logprob: -7.784286022186279
    8. ''une' → logprob: -8.159285545349121
    9. '```' → logprob: -8.409285545349121
    10. '1' → logprob: -8.534285545349121

Token 399: ' types' (ID: 6009)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.652927041053772
    2. ' "' → logprob: -2.1529269218444824
    3. ' different' → logprob: -2.4029269218444824
    4. ' caracteres' → logprob: -2.6529269218444824
    5. ' characters' → logprob: -3.0279269218444824
    6. ' caract' → logprob: -3.2779269218444824
    7. ' A' → logprob: -3.5279269218444824
    8. ' print' → logprob: -3.9029269218444824
    9. '"' → logprob: -4.277926921844482
    10. 'A' → logprob: -4.527926921844482

Token 400: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0626140832901001
    2. ' different' → logprob: -4.0626139640808105
    3. ' différents' → logprob: -4.1876139640808105
    4. 'de' → logprob: -4.4376139640808105
    5. 'different' → logprob: -5.0626139640808105
    6. ' différent' → logprob: -5.6876139640808105
    7. '   ' → logprob: -6.0626139640808105
    8. 'diff' → logprob: -7.0626139640808105
    9. ' print' → logprob: -7.1876139640808105
    10. 'print' → logprob: -7.3126139640808105

Token 401: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.25405433773994446
    2. ' caractères' → logprob: -1.504054307937622
    3. ' caract' → logprob: -7.379054546356201
    4. 'characters' → logprob: -7.629054546356201
    5. ' caracteres' → logprob: -7.629054546356201
    6. ' caractère' → logprob: -8.379054069519043
    7. ' characters' → logprob: -9.254054069519043
    8. 'char' → logprob: -9.879054069519043
    9. 'c' → logprob: -10.379054069519043
    10. ' car' → logprob: -10.504054069519043

Token 402: ' différents' (ID: 36009)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32163912057876587
    2. '   ' → logprob: -1.321639060974121
    3. ':' → logprob: -5.571639060974121
    4. ' print' → logprob: -5.821639060974121
    5. ':
' → logprob: -6.821639060974121
    6. '	print' → logprob: -8.696639060974121
    7. '    
' → logprob: -9.696639060974121
    8. '
' → logprob: -9.696639060974121
    9. '       ' → logprob: -10.071639060974121
    10. '```' → logprob: -10.571639060974121

Token 403: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005509195849299431
    2. 'print' → logprob: -5.255509376525879
    3. ' print' → logprob: -8.255509376525879
    4. '       ' → logprob: -12.130509376525879
    5. '
' → logprob: -12.380509376525879
    6. '	print' → logprob: -13.505509376525879
    7. '```' → logprob: -13.505509376525879
    8. '    
' → logprob: -13.755509376525879
    9. '   ' → logprob: -14.505509376525879
    10. '    ' → logprob: -15.005509376525879

Token 404: ' les' (ID: 1341)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2040153592824936
    2. ' S' → logprob: -1.8290153741836548
    3. 'les' → logprob: -4.454015254974365
    4. ' les' → logprob: -4.704015254974365
    5. ' ceux' → logprob: -6.454015254974365
    6. ' ' → logprob: -6.829015254974365
    7. '   ' → logprob: -8.829015731811523
    8. '#' → logprob: -9.579015731811523
    9. 'la' → logprob: -9.579015731811523
    10. 's' → logprob: -9.704015731811523

Token 405: ' trois' (ID: 25564)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12111622095108032
    2. '3' → logprob: -2.3711161613464355
    3. 'car' → logprob: -4.7461161613464355
    4. 'tro' → logprob: -5.2461161613464355
    5. 'print' → logprob: -5.9961161613464355
    6. ' S' → logprob: -6.4961161613464355
    7. ' ' → logprob: -6.6211161613464355
    8. ' trois' → logprob: -7.4961161613464355
    9. 'prem' → logprob: -7.6211161613464355
    10. '   ' → logprob: -10.496116638183594

Token 406: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46484610438346863
    2. 'print' → logprob: -1.089846134185791
    3. ' print' → logprob: -3.339846134185791
    4. ' ' → logprob: -11.339845657348633
    5. '	print' → logprob: -11.839845657348633
    6. ':' → logprob: -11.964845657348633
    7. '
' → logprob: -12.214845657348633
    8. '  ' → logprob: -12.339845657348633
    9. '       ' → logprob: -12.464845657348633
    10. '   ' → logprob: -12.464845657348633

Token 407: 't' (ID: 83)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29757052659988403
    2. ')' → logprob: -2.2975704669952393
    3. 'print' → logprob: -2.2975704669952393
    4. ' print' → logprob: -3.1725704669952393
    5. '#' → logprob: -5.047570705413818
    6. ' )' → logprob: -6.297570705413818
    7. '    ' → logprob: -6.422570705413818
    8. '  ' → logprob: -7.297570705413818
    9. ' la' → logprob: -7.297570705413818
    10. ' #' → logprob: -7.422570705413818

Token 408: 'ous' (ID: 784)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.322519451379776
    2. 'ous' → logprob: -1.9475194215774536
    3. 'rès' → logprob: -2.572519540786743
    4. 'r' → logprob: -3.947519540786743
    5. 'out' → logprob: -4.322519302368164
    6. 'outes' → logprob: -5.697519302368164
    7. 'ype' → logprob: -5.822519302368164
    8. 'h' → logprob: -5.947519302368164
    9. 'ou' → logprob: -6.322519302368164
    10. 'res' → logprob: -6.322519302368164

Token 409: ' ne' (ID: 453)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9875375628471375
    2. ' trois' → logprob: -2.1125376224517822
    3. ')' → logprob: -2.2375376224517822
    4. ' les' → logprob: -2.8625376224517822
    5. ' three' → logprob: -2.8625376224517822
    6. ' different' → logprob: -3.2375376224517822
    7. ' )' → logprob: -3.4875376224517822
    8. ' ' → logprob: -3.6125376224517822
    9. ' ,' → logprob: -3.8625376224517822
    10. ' n' → logprob: -3.9875376224517822

Token 410: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6693556308746338
    2. 'print' → logprob: -1.2943556308746338
    3. 's' → logprob: -2.044355630874634
    4. '==' → logprob: -3.294355630874634
    5. ' print' → logprob: -4.669355392456055
    6. 'ont' → logprob: -5.169355392456055
    7. ')' → logprob: -5.294355392456055
    8. 'êtes' → logprob: -5.544355392456055
    9. ' sont' → logprob: -5.669355392456055
    10. ' ==' → logprob: -5.669355392456055

Token 411: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.011068572290241718
    2. ' pas' → logprob: -4.511068344116211
    3. 'not' → logprob: -12.511068344116211
    4. ')' → logprob: -12.761068344116211
    5. ' ' → logprob: -12.761068344116211
    6. 'pass' → logprob: -12.886068344116211
    7. '   ' → logprob: -13.011068344116211
    8. ' ' → logprob: -13.761068344116211
    9. 'print' → logprob: -13.886068344116211
    10. 's' → logprob: -13.886068344116211

Token 412: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.40966132283210754
    2. ' ident' → logprob: -1.1596612930297852
    3. 'les' → logprob: -4.784661293029785
    4. ' ég' → logprob: -5.284661293029785
    5. 'ég' → logprob: -5.534661293029785
    6. '"' → logprob: -6.034661293029785
    7. 'pare' → logprob: -7.534661293029785
    8. ' les' → logprob: -7.784661293029785
    9. 'eg' → logprob: -8.659661293029785
    10. 'égal' → logprob: -8.659661293029785

Token 413: 'iques' (ID: 11654)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.6566938757896423
    2. 'ques' → logprob: -0.9066938757896423
    3. 'c' → logprob: -2.781693935394287
    4. 'que' → logprob: -4.656693935394287
    5. 'iques' → logprob: -6.781693935394287
    6. '```' → logprob: -6.906693935394287
    7. 'f' → logprob: -7.531693935394287
    8. 'aux' → logprob: -7.656693935394287
    9. 'cs' → logprob: -8.031693458557129
    10. '#' → logprob: -8.031693458557129

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06449079513549805
    2. ')
' → logprob: -3.439490795135498
    3. '   ' → logprob: -3.939490795135498
    4. '")' → logprob: -5.064490795135498
    5. '):' → logprob: -6.189490795135498
    6. '")
' → logprob: -7.564490795135498
    7. ' )' → logprob: -7.689490795135498
    8. ',' → logprob: -7.814490795135498
    9. '):
' → logprob: -7.814490795135498
    10. ')")
' → logprob: -8.314491271972656

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01585322991013527
    2. 'print' → logprob: -4.265853404998779
    3. ' print' → logprob: -6.390853404998779
    4. '```' → logprob: -12.515852928161621
    5. '
' → logprob: -12.890852928161621
    6. '       ' → logprob: -13.265852928161621
    7. '   ' → logprob: -13.640852928161621
    8. '	print' → logprob: -13.765852928161621
    9. '    
' → logprob: -14.390852928161621
    10. '    ' → logprob: -14.765852928161621

Token 416: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06673898547887802
    2. '   ' → logprob: -2.941739082336426
    3. ' print' → logprob: -4.441739082336426
    4. '	print' → logprob: -12.191739082336426
    5. '```' → logprob: -12.941739082336426
    6. ' ' → logprob: -13.441739082336426
    7. '       ' → logprob: -14.191739082336426
    8. 'Print' → logprob: -14.941739082336426
    9. '    ' → logprob: -15.191739082336426
    10. '  ' → logprob: -15.191739082336426

Token 417: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3307459056377411
    2. ' print' → logprob: -1.5807459354400635
    3. '   ' → logprob: -2.5807459354400635
    4. '	print' → logprob: -10.580745697021484
    5. ' ' → logprob: -11.330745697021484
    6. '
' → logprob: -11.455745697021484
    7. '    ' → logprob: -12.330745697021484
    8. '       ' → logprob: -12.455745697021484
    9. '```' → logprob: -12.705745697021484
    10. '    
' → logprob: -12.830745697021484

Token 418: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017621025443077087
    2. '   ' → logprob: -4.517621040344238
    3. ' print' → logprob: -5.142621040344238
    4. ' ' → logprob: -7.642621040344238
    5. '  ' → logprob: -9.267621040344238
    6. ' la' → logprob: -10.267621040344238
    7. '    ' → logprob: -10.392621040344238
    8. '    
' → logprob: -10.767621040344238
    9. '#' → logprob: -11.517621040344238
    10. '"' → logprob: -12.267621040344238

Token 419: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6129873991012573
    2. '   ' → logprob: -1.2379873991012573
    3. ':' → logprob: -2.112987518310547
    4. ' print' → logprob: -3.487987518310547
    5. ' ' → logprob: -6.112987518310547
    6. ' case' → logprob: -6.237987518310547
    7. 'else' → logprob: -6.237987518310547
    8. ':
' → logprob: -6.612987518310547
    9. '```' → logprob: -6.612987518310547
    10. '  ' → logprob: -6.737987518310547

Token 420: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01147865504026413
    2. ':' → logprob: -4.636478424072266
    3. ':
' → logprob: -6.886478424072266
    4. 'print' → logprob: -7.761478424072266
    5. ' print' → logprob: -8.886478424072266
    6. '
' → logprob: -9.261478424072266
    7. '    
' → logprob: -11.761478424072266
    8. '    ' → logprob: -11.886478424072266
    9. ' :' → logprob: -12.011478424072266
    10. '       ' → logprob: -12.136478424072266

Token 421: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22581511735916138
    2. ' print' → logprob: -1.7258150577545166
    3. '   ' → logprob: -3.7258150577545166
    4. '	print' → logprob: -11.975814819335938
    5. ' ' → logprob: -12.600814819335938
    6. '```' → logprob: -13.850814819335938
    7. '       ' → logprob: -14.475814819335938
    8. '  ' → logprob: -14.725814819335938
    9. '    ' → logprob: -14.850814819335938
    10. '
' → logprob: -14.975814819335938

Token 422: ' la' (ID: 557)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00107389607001096
    2. '(' → logprob: -6.876073837280273
    3. '"' → logprob: -10.251073837280273
    4. '(
' → logprob: -13.001073837280273
    5. '"No' → logprob: -13.501073837280273
    6. ' ("' → logprob: -14.251073837280273
    7. '('' → logprob: -14.376073837280273
    8. '"O' → logprob: -15.251073837280273
    9. ' "' → logprob: -16.001073837280273
    10. '("")' → logprob: -16.751073837280273

Token 423: ' chaîne' (ID: 89288)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03941228240728378
    2. '"' → logprob: -3.414412260055542
    3. '"O' → logprob: -5.789412498474121
    4. '"No' → logprob: -7.039412498474121
    5. 'print' → logprob: -7.164412498474121
    6. 'Yes' → logprob: -7.289412498474121
    7. '(' → logprob: -9.164412498474121
    8. '"A' → logprob: -9.289412498474121
    9. 'O' → logprob: -10.664412498474121
    10. '"P' → logprob: -10.914412498474121

Token 424: ' de' (ID: 334)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02977640926837921
    2. '(' → logprob: -3.5297763347625732
    3. '('' → logprob: -11.279776573181152
    4. '(
' → logprob: -11.529776573181152
    5. '"' → logprob: -13.529776573181152
    6. ' ("' → logprob: -13.904776573181152
    7. '()' → logprob: -15.029776573181152
    8. ' ' → logprob: -15.654776573181152
    9. '(

' → logprob: -15.779776573181152
    10. '   ' → logprob: -16.029775619506836

Token 425: ' caractères' (ID: 183106)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04017055779695511
    2. '("' → logprob: -4.165170669555664
    3. '"O' → logprob: -4.165170669555664
    4. 'Yes' → logprob: -5.665170669555664
    5. 'characters' → logprob: -7.165170669555664
    6. ''' → logprob: -7.290170669555664
    7. '"No' → logprob: -7.415170669555664
    8. '"D' → logprob: -8.165170669555664
    9. ''O' → logprob: -8.165170669555664
    10. 'Oui' → logprob: -8.165170669555664

Token 426: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -1.5928495486150496e-05
    2. '"' → logprob: -11.750016212463379
    3. '(' → logprob: -11.875016212463379
    4. '('' → logprob: -14.500016212463379
    5. 'Yes' → logprob: -15.750016212463379
    6. '"O' → logprob: -16.000015258789062
    7. '"No' → logprob: -16.750015258789062
    8. '(
' → logprob: -17.750015258789062
    9. ' ("' → logprob: -18.000015258789062
    10. '("")' → logprob: -18.000015258789062

Token 427: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0018393946811556816
    2. 'Oui' → logprob: -6.3768391609191895
    3. 'Ok' → logprob: -9.626839637756348
    4. 'Ye' → logprob: -11.376839637756348
    5. 'Go' → logprob: -11.501839637756348
    6. 'YES' → logprob: -11.501839637756348
    7. 'OK' → logprob: -11.751839637756348
    8. 'yes' → logprob: -12.126839637756348
    9. 'Si' → logprob: -12.501839637756348
    10. 'Ya' → logprob: -12.751839637756348

Token 428: '"
' (ID: 1092)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -3.650518920039758e-06
    2. ')")' → logprob: -13.500003814697266
    3. '")
' → logprob: -14.250003814697266
    4. '("' → logprob: -14.500003814697266
    5. ')' → logprob: -14.875003814697266
    6. '()' → logprob: -15.250003814697266
    7. '"' → logprob: -15.250003814697266
    8. '!")' → logprob: -15.625003814697266
    9. ' ")' → logprob: -17.375003814697266
    10. '")
' → logprob: -17.500003814697266

Token 429: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08338845521211624
    2. '   ' → logprob: -2.583388566970825
    3. ' print' → logprob: -5.458388328552246
    4. '
' → logprob: -8.833388328552246
    5. '(print' → logprob: -10.458388328552246
    6. '```' → logprob: -10.833388328552246
    7. '    
' → logprob: -10.958388328552246
    8. '	print' → logprob: -11.708388328552246
    9. '  
' → logprob: -12.833388328552246
    10. '  ' → logprob: -14.083388328552246

Token 430: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008623555302619934
    2. ' print' → logprob: -4.7586236000061035
    3. '   ' → logprob: -11.633623123168945
    4. '```' → logprob: -17.508623123168945
    5. 'Print' → logprob: -17.883623123168945
    6. '	print' → logprob: -18.133623123168945
    7. '.print' → logprob: -19.383623123168945
    8. '    
' → logprob: -20.008623123168945
    9. '(print' → logprob: -20.008623123168945
    10. ' ' → logprob: -20.258623123168945

Token 431: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. '('' → logprob: -16.62507438659668
    4. ' ("' → logprob: -16.75007438659668
    5. '("("' → logprob: -18.12507438659668
    6. '("")' → logprob: -18.25007438659668
    7. '()' → logprob: -19.12507438659668
    8. '(("' → logprob: -19.37507438659668
    9. '("""' → logprob: -20.00007438659668
    10. ')("' → logprob: -20.25007438659668

Token 432: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.9361264946837764e-07
    2. 'No' → logprob: -16.0
    3. ' Yes' → logprob: -17.25
    4. '")' → logprob: -17.5
    5. 'Oui' → logprob: -19.75
    6. '"' → logprob: -20.0
    7. 'Ye' → logprob: -20.125
    8. 'YES' → logprob: -22.125
    9. '""' → logprob: -22.25
    10. 'Good' → logprob: -22.5

Token 433: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.1994775377388578e-05
    2. ')")' → logprob: -11.375012397766113
    3. ')' → logprob: -15.125012397766113
    4. '")
' → logprob: -16.250011444091797
    5. '!")' → logprob: -17.500011444091797
    6. '()' → logprob: -18.250011444091797
    7. '"' → logprob: -18.375011444091797
    8. '')' → logprob: -18.500011444091797
    9. ' ")' → logprob: -18.625011444091797
    10. '}")' → logprob: -19.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 431
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 272
Précision stricte (1ère position): 27.61%
Précision adaptée (1ère position): 28.54%
Précision (top 10): 63.11%
================================================================================
