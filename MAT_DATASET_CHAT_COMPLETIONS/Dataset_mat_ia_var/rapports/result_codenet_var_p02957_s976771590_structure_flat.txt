================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a_b = input().split()
a = int(a_b[0])
b = int(a_b[1])
if (a + b) % 2 == 0:
    k = (a + b) // 2
    print(k)
else:
    print('IMPOSSIBLE')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '_b' (ID: 1535)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007377316243946552
    2. '1' → logprob: -5.5073771476745605
    3. '"' → logprob: -7.0073771476745605
    4. '42' → logprob: -7.5073771476745605
    5. ''' → logprob: -7.7573771476745605
    6. '0' → logprob: -7.7573771476745605
    7. '5' → logprob: -8.257377624511719
    8. '10' → logprob: -9.007377624511719
    9. ' "' → logprob: -9.132377624511719
    10. '3' → logprob: -9.507377624511719

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010475368238985538
    2. '('' → logprob: -5.010475158691406
    3. ''' → logprob: -6.010475158691406
    4. '"' → logprob: -7.385475158691406
    5. '("("' → logprob: -8.510475158691406
    6. '()' → logprob: -8.760475158691406
    7. '(
' → logprob: -8.885475158691406
    8. '`' → logprob: -10.635475158691406
    9. '[' → logprob: -10.635475158691406
    10. ' (' → logprob: -10.760475158691406

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6832422018051147
    2. '+' → logprob: -0.8082422018051147
    3. '.strip' → logprob: -4.308242321014404
    4. '*' → logprob: -4.933242321014404
    5. ' ' → logprob: -4.933242321014404
    6. '_' → logprob: -5.683242321014404
    7. '```' → logprob: -5.808242321014404
    8. '[' → logprob: -5.933242321014404
    9. '\n' → logprob: -6.308242321014404
    10. '(' → logprob: -6.558242321014404

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008527511963620782
    2. '()' → logprob: -8.000852584838867
    3. '('' → logprob: -8.500852584838867
    4. '"' → logprob: -9.375852584838867
    5. '`' → logprob: -9.750852584838867
    6. '("("' → logprob: -10.000852584838867
    7. '(
' → logprob: -10.500852584838867
    8. ''' → logprob: -10.500852584838867
    9. ' (' → logprob: -10.750852584838867
    10. '\(' → logprob: -11.625852584838867

Token 7: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007864855229854584
    2. '.' → logprob: -5.382864952087402
    3. 'a' → logprob: -7.132864952087402
    4. 'print' → logprob: -7.257864952087402
    5. '[a' → logprob: -7.757864952087402
    6. '\[' → logprob: -8.132864952087402
    7. '[
' → logprob: -8.257864952087402
    8. '#' → logprob: -8.757864952087402
    9. '_' → logprob: -8.882864952087402
    10. '+' → logprob: -9.507864952087402

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7486680746078491
    2. '_' → logprob: -0.8736680746078491
    3. '_b' → logprob: -2.2486681938171387
    4. '[_' → logprob: -5.873668193817139
    5. '[a' → logprob: -8.24866771697998
    6. '[]' → logprob: -8.49866771697998
    7. '_a' → logprob: -8.74866771697998
    8. '_[' → logprob: -8.87366771697998
    9. '\[' → logprob: -9.12366771697998
    10. 'b' → logprob: -9.24866771697998

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022121243178844452
    2. 'a' → logprob: -4.022121429443359
    3. ' int' → logprob: -5.647121429443359
    4. 'list' → logprob: -8.77212142944336
    5. ' a' → logprob: -9.14712142944336
    6. 'float' → logprob: -9.39712142944336
    7. '[int' → logprob: -9.64712142944336
    8. 'len' → logprob: -11.27212142944336
    9. ' list' → logprob: -12.77212142944336
    10. '(int' → logprob: -12.89712142944336

Token 10: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05665866658091545
    2. '(a' → logprob: -2.9316587448120117
    3. 'a' → logprob: -6.431658744812012
    4. '_a' → logprob: -9.556658744812012
    5. '('' → logprob: -9.931658744812012
    6. '("("' → logprob: -10.931658744812012
    7. '```' → logprob: -11.931658744812012
    8. ' (' → logprob: -12.556658744812012
    9. '40' → logprob: -13.431658744812012
    10. '((' → logprob: -13.556658744812012

Token 11: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03047308325767517
    2. '[' → logprob: -3.530472993850708
    3. '_a' → logprob: -8.530472755432129
    4. '[_' → logprob: -8.655472755432129
    5. 'b' → logprob: -9.280472755432129
    6. ')' → logprob: -9.280472755432129
    7. ' _' → logprob: -10.280472755432129
    8. 'a' → logprob: -10.655472755432129
    9. '[b' → logprob: -10.780472755432129
    10. ')_' → logprob: -10.780472755432129

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -16.0
    3. '\[' → logprob: -16.0
    4. '[a' → logprob: -16.125
    5. '0' → logprob: -17.75
    6. '[
' → logprob: -17.75
    7. ')' → logprob: -17.75
    8. '```' → logprob: -18.375
    9. 'a' → logprob: -19.25
    10. '(' → logprob: -20.125

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.125000953674316
    3. '1' → logprob: -14.500000953674316
    4. ''' → logprob: -18.500001907348633
    5. '"' → logprob: -20.875001907348633
    6. ')' → logprob: -21.000001907348633
    7. '۰' → logprob: -21.250001907348633
    8. '０' → logprob: -21.875001907348633
    9. '```' → logprob: -22.250001907348633
    10. '2' → logprob: -22.500001907348633

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10812211036682129
    2. ')' → logprob: -2.3581221103668213
    3. ']' → logprob: -4.858121871948242
    4. ')]' → logprob: -9.858121871948242
    5. ')])' → logprob: -10.483121871948242
    6. ' ])' → logprob: -11.608121871948242
    7. ''])' → logprob: -11.858121871948242
    8. '])
' → logprob: -12.483121871948242
    9. '))' → logprob: -12.733121871948242
    10. 'a' → logprob: -12.983121871948242

Token 15: 'b' (ID: 65)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17664150893688202
    2. '<|end|>' → logprob: -2.0516414642333984
    3. 'a' → logprob: -4.926641464233398
    4. ' ,' → logprob: -5.426641464233398
    5. '```' → logprob: -5.426641464233398
    6. ',' → logprob: -5.551641464233398
    7. 'b' → logprob: -5.801641464233398
    8. '_' → logprob: -6.426641464233398
    9. '+' → logprob: -6.551641464233398
    10. ')' → logprob: -6.676641464233398

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3797284960746765
    2. '_' → logprob: -1.7547285556793213
    3. ')' → logprob: -2.3797285556793213
    4. '<|end|>' → logprob: -4.004728317260742
    5. ' ' → logprob: -4.504728317260742
    6. '=' → logprob: -4.754728317260742
    7. ' =' → logprob: -5.129728317260742
    8. '  ' → logprob: -6.629728317260742
    9. '[]' → logprob: -7.129728317260742
    10. '_a' → logprob: -7.504728317260742

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858850687742233
    2. ' int' → logprob: -3.048588514328003
    3. 'a' → logprob: -14.423588752746582
    4. ' ' → logprob: -15.798588752746582
    5. '(int' → logprob: -15.798588752746582
    6. '=int' → logprob: -15.923588752746582
    7. ' a' → logprob: -16.298587799072266
    8. '<int' → logprob: -17.798587799072266
    9. '  ' → logprob: -18.173587799072266
    10. '	int' → logprob: -18.298587799072266

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16047920286655426
    2. '(a' → logprob: -1.910479187965393
    3. '(b' → logprob: -8.410479545593262
    4. ' (' → logprob: -11.410479545593262
    5. '((' → logprob: -11.910479545593262
    6. '(ab' → logprob: -13.035479545593262
    7. '('' → logprob: -13.285479545593262
    8. '(
' → logprob: -13.535479545593262
    9. '```' → logprob: -13.535479545593262
    10. '(

' → logprob: -14.035479545593262

Token 19: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.813969957875088e-05
    2. '[' → logprob: -9.625067710876465
    3. '_a' → logprob: -14.125067710876465
    4. '[_' → logprob: -15.250067710876465
    5. ')_' → logprob: -15.375067710876465
    6. '```' → logprob: -15.375067710876465
    7. ')' → logprob: -15.750067710876465
    8. ' _' → logprob: -15.875067710876465
    9. '])' → logprob: -16.37506866455078
    10. 'b' → logprob: -16.62506866455078

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. ' [' → logprob: -14.250000953674316
    3. '1' → logprob: -15.250000953674316
    4. ')' → logprob: -15.750000953674316
    5. ')[' → logprob: -16.125001907348633
    6. '\[' → logprob: -16.375001907348633
    7. '```' → logprob: -16.625001907348633
    8. '[
' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '][' → logprob: -18.500001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. '0' → logprob: -11.250025749206543
    3. '])' → logprob: -11.375025749206543
    4. ' ' → logprob: -14.250025749206543
    5. ']' → logprob: -16.250024795532227
    6. ')' → logprob: -17.000024795532227
    7. '2' → logprob: -18.000024795532227
    8. '   ' → logprob: -18.125024795532227
    9. '```' → logprob: -18.250024795532227
    10. '' → logprob: -18.812524795532227

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004781476687639952
    2. '])' → logprob: -5.379781246185303
    3. ']' → logprob: -9.004781723022461
    4. '))' → logprob: -11.629781723022461
    5. ')]' → logprob: -11.879781723022461
    6. ')])' → logprob: -12.254781723022461
    7. '`)' → logprob: -12.379781723022461
    8. '）' → logprob: -12.379781723022461
    9. ''])' → logprob: -12.629781723022461
    10. '')' → logprob: -13.379781723022461

Token 23: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004344310145825148
    2. '*' → logprob: -6.504344463348389
    3. 'c' → logprob: -7.004344463348389
    4. '+c' → logprob: -7.629344463348389
    5. '+
' → logprob: -7.754344463348389
    6. '#' → logprob: -7.879344463348389
    7. 'if' → logprob: -9.12934398651123
    8. '>' → logprob: -9.25434398651123
    9. '=' → logprob: -9.25434398651123
    10. 'print' → logprob: -10.00434398651123

Token 24: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.013782755471765995
    2. 'a' → logprob: -4.888782978057861
    3. ' ' → logprob: -5.138782978057861
    4. ' b' → logprob: -8.638782501220703
    5. ' ' → logprob: -9.513782501220703
    6. ' (' → logprob: -10.888782501220703
    7. '(' → logprob: -12.763782501220703
    8. '_a' → logprob: -12.888782501220703
    9. '_' → logprob: -13.013782501220703
    10. ' not' → logprob: -13.138782501220703

Token 25: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016056541353464127
    2. ' a' → logprob: -4.141056537628174
    3. ')' → logprob: -11.641057014465332
    4. 'b' → logprob: -11.891057014465332
    5. ' ' → logprob: -13.141057014465332
    6. ' b' → logprob: -13.766057014465332
    7. ' )' → logprob: -13.891057014465332
    8. '(a' → logprob: -14.016057014465332
    9. '	a' → logprob: -14.391057014465332
    10. ')a' → logprob: -14.516057014465332

Token 26: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09113682806491852
    2. '>' → logprob: -3.716136932373047
    3. ' ' → logprob: -3.716136932373047
    4. ' <' → logprob: -4.216136932373047
    5. ' >=' → logprob: -5.216136932373047
    6. ' ==' → logprob: -5.591136932373047
    7. ' <=' → logprob: -5.591136932373047
    8. ' )' → logprob: -6.091136932373047
    9. ' %' → logprob: -6.216136932373047
    10. '+' → logprob: -6.216136932373047

Token 27: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1269489973783493
    2. 'b' → logprob: -2.1269490718841553
    3. ' ' → logprob: -10.876949310302734
    4. '1' → logprob: -14.376949310302734
    5. ')' → logprob: -14.876949310302734
    6. ')b' → logprob: -15.126949310302734
    7. ' ' → logprob: -15.251949310302734
    8. ' )' → logprob: -16.376949310302734
    9. '	b' → logprob: -16.626949310302734
    10. '7' → logprob: -16.876949310302734

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20710445940494537
    2. ' )' → logprob: -1.7071044445037842
    3. ' >' → logprob: -5.582104682922363
    4. '>' → logprob: -7.457104682922363
    5. ')>' → logprob: -7.832104682922363
    6. ' <=' → logprob: -7.957104682922363
    7. ' ' → logprob: -8.707104682922363
    8. ' ==' → logprob: -9.457104682922363
    9. ' >=' → logprob: -9.457104682922363
    10. '%' → logprob: -9.582104682922363

Token 29: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0570765845477581
    2. '>' → logprob: -4.057076454162598
    3. ' <=' → logprob: -4.057076454162598
    4. ' ==' → logprob: -4.557076454162598
    5. ' >=' → logprob: -5.682076454162598
    6. ' ' → logprob: -5.932076454162598
    7. ' <' → logprob: -6.432076454162598
    8. '==' → logprob: -7.682076454162598
    9. ' %' → logprob: -7.932076454162598
    10. '%' → logprob: -8.057076454162598

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22548311948776245
    2. '2' → logprob: -1.6004831790924072
    3. '3' → logprob: -9.600482940673828
    4. '4' → logprob: -14.100482940673828
    5. '7' → logprob: -14.725482940673828
    6. '```' → logprob: -15.350482940673828
    7. '1' → logprob: -15.475482940673828
    8. '>' → logprob: -15.600482940673828
    9. ' ' → logprob: -15.600482940673828
    10. '10' → logprob: -15.662982940673828

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0048314305022358894
    2. '3' → logprob: -5.379831314086914
    3. ' ' → logprob: -8.504831314086914
    4. '5' → logprob: -12.879831314086914
    5. '10' → logprob: -13.129831314086914
    6. '7' → logprob: -13.254831314086914
    7. '4' → logprob: -14.004831314086914
    8. '>' → logprob: -15.254831314086914
    9. '1' → logprob: -15.504831314086914
    10. '0' → logprob: -15.504831314086914

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030281011015176773
    2. ' !=' → logprob: -4.155281066894531
    3. '==' → logprob: -4.530281066894531
    4. ':' → logprob: -6.905281066894531
    5. ' =' → logprob: -7.280281066894531
    6. ' ' → logprob: -7.405281066894531
    7. '=' → logprob: -7.655281066894531
    8. ' :' → logprob: -8.655281066894531
    9. '!=' → logprob: -8.655281066894531
    10. '0' → logprob: -9.030281066894531

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12796065211296082
    2. ' ' → logprob: -2.127960681915283
    3. '1' → logprob: -6.877960681915283
    4. ''' → logprob: -15.127960205078125
    5. '==' → logprob: -15.190460205078125
    6. ' ==' → logprob: -15.440460205078125
    7. ')' → logprob: -15.815460205078125
    8. '  ' → logprob: -15.940460205078125
    9. '"' → logprob: -16.065460205078125
    10. ' ' → logprob: -16.065460205078125

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005421938840299845
    2. ' ' → logprob: -5.380422115325928
    3. '1' → logprob: -7.130422115325928
    4. '==' → logprob: -15.63042163848877
    5. '  ' → logprob: -16.067922592163086
    6. ' ' → logprob: -16.817922592163086
    7. 'a' → logprob: -16.817922592163086
    8. ' ==' → logprob: -16.880422592163086
    9. ')' → logprob: -16.942922592163086
    10. '2' → logprob: -17.130422592163086

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.2166411478538066e-05
    2. ' :' → logprob: -10.000052452087402
    3. ':
' → logprob: -12.000052452087402
    4. ':**' → logprob: -15.375052452087402
    5. '):' → logprob: -16.250051498413086
    6. ':return' → logprob: -16.750051498413086
    7. ':

' → logprob: -17.125051498413086
    8. '':'' → logprob: -17.625051498413086
    9. '':' → logprob: -18.000051498413086
    10. '():' → logprob: -18.125051498413086

Token 36: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.49945223331451416
    2. '   ' → logprob: -1.3744522333145142
    3. ' print' → logprob: -3.2494521141052246
    4. '\' → logprob: -3.2494521141052246
    5. ' ' → logprob: -3.9994521141052246
    6. ' 
' → logprob: -4.124452114105225
    7. '    ' → logprob: -4.624452114105225
    8. 'print' → logprob: -4.999452114105225
    9. ' \' → logprob: -5.124452114105225
    10. '    
' → logprob: -6.374452114105225

Token 37: ' k' (ID: 372)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.29565227031707764
    2. '   ' → logprob: -2.420652389526367
    3. 'print' → logprob: -2.545652389526367
    4. '\n' → logprob: -3.295652389526367
    5. ' \' → logprob: -4.170652389526367
    6. ' 
' → logprob: -4.295652389526367
    7. '    ' → logprob: -4.920652389526367
    8. '\' → logprob: -5.170652389526367
    9. ' ' → logprob: -5.295652389526367
    10. '    
' → logprob: -6.420652389526367

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1637886762619019
    2. '=' → logprob: -1.4137886762619019
    3. 'print' → logprob: -1.4137886762619019
    4. '   ' → logprob: -2.9137887954711914
    5. ' ' → logprob: -2.9137887954711914
    6. ' print' → logprob: -3.7887887954711914
    7. 'p' → logprob: -4.038788795471191
    8. 'e' → logprob: -4.288788795471191
    9. ':' → logprob: -5.038788795471191
    10. 'ey' → logprob: -5.288788795471191

Token 39: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4670361280441284
    2. '(a' → logprob: -1.3420361280441284
    3. 'a' → logprob: -3.592036247253418
    4. ' a' → logprob: -3.842036247253418
    5. '0' → logprob: -3.842036247253418
    6. ' ' → logprob: -4.717036247253418
    7. '"' → logprob: -5.092036247253418
    8. '(' → logprob: -5.217036247253418
    9. '1' → logprob: -5.217036247253418
    10. ' "' → logprob: -5.467036247253418

Token 40: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012012135237455368
    2. '(a' → logprob: -5.137012004852295
    3. ' a' → logprob: -5.137012004852295
    4. ' (' → logprob: -8.762012481689453
    5. '   ' → logprob: -11.387012481689453
    6. ' ' → logprob: -12.012012481689453
    7. '(' → logprob: -12.262012481689453
    8. 'b' → logprob: -13.137012481689453
    9. '	a' → logprob: -13.387012481689453
    10. ')a' → logprob: -14.387012481689453

Token 41: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020814199000597
    2. '+' → logprob: -3.8958141803741455
    3. '+b' → logprob: -8.395813941955566
    4. ' ' → logprob: -10.145813941955566
    5. ' +
' → logprob: -13.020813941955566
    6. ' -' → logprob: -13.395813941955566
    7. ' ' → logprob: -13.895813941955566
    8. '-' → logprob: -14.145813941955566
    9. ' +
' → logprob: -15.020813941955566
    10. '+B' → logprob: -15.395813941955566

Token 42: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5231369733810425
    2. 'b' → logprob: -0.8981369733810425
    3. ' ' → logprob: -11.898137092590332
    4. '   ' → logprob: -13.273137092590332
    5. '	b' → logprob: -13.398137092590332
    6. '1' → logprob: -13.523137092590332
    7. '    ' → logprob: -13.898137092590332
    8. ')b' → logprob: -15.460637092590332
    9. '  ' → logprob: -15.648137092590332
    10. '_b' → logprob: -15.898137092590332

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006592093966901302
    2. ' )' → logprob: -5.381592273712158
    3. ')//' → logprob: -6.256592273712158
    4. '   ' → logprob: -11.256591796875
    5. ' ' → logprob: -11.506591796875
    6. '')' → logprob: -11.756591796875
    7. ' //' → logprob: -12.131591796875
    8. '//' → logprob: -12.256591796875
    9. '`)' → logprob: -12.631591796875
    10. '")' → logprob: -13.256591796875

Token 44: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.11406078189611435
    2. '//' → logprob: -2.239060878753662
    3. ' ' → logprob: -7.614060878753662
    4. '"' → logprob: -8.864060401916504
    5. '/' → logprob: -8.989060401916504
    6. ''' → logprob: -9.239060401916504
    7. '2' → logprob: -9.864060401916504
    8. '`' → logprob: -10.239060401916504
    9. '```' → logprob: -10.239060401916504
    10. '0' → logprob: -10.364060401916504

Token 45: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028071331325918436
    2. ' ' → logprob: -5.877807140350342
    3. '   ' → logprob: -14.127806663513184
    4. '  ' → logprob: -15.065306663513184
    5. '4' → logprob: -15.127806663513184
    6. '3' → logprob: -15.627806663513184
    7. '22' → logprob: -16.0653076171875
    8. ' ' → logprob: -16.2528076171875
    9. '1' → logprob: -16.3778076171875
    10. '۲' → logprob: -16.8153076171875

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.000059127807617
    4. '۲' → logprob: -16.875059127807617
    5. '２' → logprob: -17.125059127807617
    6. '```' → logprob: -17.750059127807617
    7. '  ' → logprob: -18.375059127807617
    8. '२' → logprob: -18.875059127807617
    9. '٢' → logprob: -18.937559127807617
    10. '২' → logprob: -19.375059127807617

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2884431481361389
    2. 'else' → logprob: -2.038443088531494
    3. '\n' → logprob: -2.663443088531494
    4. '    
' → logprob: -4.538443088531494
    5. '   ' → logprob: -4.538443088531494
    6. '<|end|>' → logprob: -4.913443088531494
    7. ' else' → logprob: -5.663443088531494
    8. '  
' → logprob: -5.788443088531494
    9. ')' → logprob: -5.913443088531494
    10. 'print' → logprob: -6.038443088531494

Token 48: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24917641282081604
    2. ':' → logprob: -2.499176502227783
    3. '   ' → logprob: -2.874176502227783
    4. '\n' → logprob: -3.374176502227783
    5. '
' → logprob: -3.499176502227783
    6. ':
' → logprob: -5.374176502227783
    7. 'else' → logprob: -5.749176502227783
    8. ')' → logprob: -6.749176502227783
    9. '<|end|>' → logprob: -6.749176502227783
    10. ' ' → logprob: -6.749176502227783

Token 49: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.010792534798383713
    2. '   ' → logprob: -5.2607927322387695
    3. 'if' → logprob: -6.0107927322387695
    4. 'for' → logprob: -6.7607927322387695
    5. 'a' → logprob: -7.1357927322387695
    6. ' print' → logprob: -7.8857927322387695
    7. 'else' → logprob: -8.01079273223877
    8. 'c' → logprob: -9.51079273223877
    9. 'while' → logprob: -9.51079273223877
    10. 'x' → logprob: -10.13579273223877

Token 50: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.16032232344150543
    2. '(' → logprob: -1.9103223085403442
    3. '('' → logprob: -10.160322189331055
    4. '("' → logprob: -10.660322189331055
    5. 'k' → logprob: -11.160322189331055
    6. ' (' → logprob: -11.535322189331055
    7. '((' → logprob: -12.285322189331055
    8. '()' → logprob: -12.785322189331055
    9. '("("' → logprob: -13.035322189331055
    10. '(f' → logprob: -14.035322189331055

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.125006675720215
    4. '))' → logprob: -15.625006675720215
    5. '')' → logprob: -16.2500057220459
    6. ')#' → logprob: -16.6250057220459
    7. '）' → logprob: -16.8750057220459
    8. ')`' → logprob: -17.3750057220459
    9. '}' → logprob: -17.6250057220459
    10. '   ' → logprob: -17.7500057220459

Token 52: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011733761057257652
    2. ' else' → logprob: -5.261733531951904
    3. 'e' → logprob: -5.386733531951904
    4. 'elif' → logprob: -6.386733531951904
    5. '```' → logprob: -9.511734008789062
    6. ')' → logprob: -10.136734008789062
    7. 'el' → logprob: -11.136734008789062
    8. '<|end|>' → logprob: -11.386734008789062
    9. '.' → logprob: -11.761734008789062
    10. ' ' → logprob: -11.761734008789062

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014358828775584698
    2. ':
' → logprob: -9.000144004821777
    3. ' :' → logprob: -11.000144004821777
    4. '   ' → logprob: -12.750144004821777
    5. ',' → logprob: -16.37514305114746
    6. ':**' → logprob: -16.62514305114746
    7. ' :
' → logprob: -16.75014305114746
    8. '):' → logprob: -17.25014305114746
    9. '    ' → logprob: -17.37514305114746
    10. '：' → logprob: -17.50014305114746

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011725161311915144
    2. '"' → logprob: -10.375117301940918
    3. '    
' → logprob: -10.625117301940918
    4. '    ' → logprob: -10.750117301940918
    5. ''' → logprob: -11.875117301940918
    6. 'print' → logprob: -12.125117301940918
    7. '```' → logprob: -12.250117301940918
    8. '<|end|>' → logprob: -13.000117301940918
    9. '   ' → logprob: -13.125117301940918
    10. ' ' → logprob: -13.125117301940918

Token 55: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05170869827270508
    2. '   ' → logprob: -3.051708698272705
    3. ' print' → logprob: -6.551708698272705
    4. 'k' → logprob: -7.926708698272705
    5. 'a' → logprob: -8.051708221435547
    6. 'pass' → logprob: -8.426708221435547
    7. '    
' → logprob: -9.551708221435547
    8. 'n' → logprob: -9.676708221435547
    9. '`' → logprob: -9.676708221435547
    10. '-' → logprob: -9.676708221435547

Token 56: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018599607050418854
    2. '()' → logprob: -4.268599510192871
    3. '("' → logprob: -6.268599510192871
    4. '('' → logprob: -6.768599510192871
    5. '((' → logprob: -7.893599510192871
    6. '(k' → logprob: -8.018599510192871
    7. '("("' → logprob: -8.518599510192871
    8. '(None' → logprob: -9.018599510192871
    9. '(-' → logprob: -9.018599510192871
    10. '(a' → logprob: -9.143599510192871

Token 57: 'IMP' (ID: 67171)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4120073914527893
    2. 'im' → logprob: -1.2870073318481445
    3. 'IMP' → logprob: -3.9120073318481445
    4. 'error' → logprob: -4.9120073318481445
    5. 'in' → logprob: -5.1620073318481445
    6. '0' → logprob: -5.5370073318481445
    7. 'invalid' → logprob: -5.5370073318481445
    8. 'Impossible' → logprob: -5.7870073318481445
    9. '"' → logprob: -6.4120073318481445
    10. '?' → logprob: -6.5370073318481445

Token 58: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.0012382064014673233
    2. 'OS' → logprob: -7.6262383460998535
    3. '')' → logprob: -7.8762383460998535
    4. 'O' → logprob: -8.501237869262695
    5. ''' → logprob: -9.501237869262695
    6. 'P' → logprob: -9.876237869262695
    7. 'oss' → logprob: -10.876237869262695
    8. 'S' → logprob: -12.751237869262695
    9. '}' → logprob: -13.376237869262695
    10. '')
' → logprob: -13.501237869262695

Token 59: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -9.729906196298543e-06
    2. 'IB' → logprob: -12.250009536743164
    3. 'ible' → logprob: -13.500009536743164
    4. 'I' → logprob: -13.875009536743164
    5. 'IBE' → logprob: -13.875009536743164
    6. '-' → logprob: -14.625009536743164
    7. 'ILE' → logprob: -15.625009536743164
    8. '1' → logprob: -15.750009536743164
    9. 'IBILITY' → logprob: -16.000009536743164
    10. '"' → logprob: -16.250009536743164

Token 60: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00043460296001285315
    2. ')' → logprob: -7.750434398651123
    3. ''' → logprob: -12.625434875488281
    4. '")' → logprob: -14.625434875488281
    5. '')
' → logprob: -16.00043487548828
    6. '`)' → logprob: -19.12543487548828
    7. '('' → logprob: -19.37543487548828
    8. ' ')' → logprob: -20.00043487548828
    9. '}')' → logprob: -20.00043487548828
    10. ')'' → logprob: -20.12543487548828


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 48.28%
Précision adaptée (1ère position): 51.72%
Précision (top 10): 86.21%
================================================================================
