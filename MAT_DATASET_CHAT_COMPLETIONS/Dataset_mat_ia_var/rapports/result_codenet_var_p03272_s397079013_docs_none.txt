================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, i = map(int, input().split())
print(N-i+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' i' (ID: 575)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09660979360342026
    2. '+' → logprob: -2.5966098308563232
    3. ',' → logprob: -4.471609592437744
    4. '[' → logprob: -5.721609592437744
    5. ' =' → logprob: -6.721609592437744
    6. ';' → logprob: -7.221609592437744
    7. '-' → logprob: -8.346610069274902
    8. '*' → logprob: -8.721610069274902
    9. '_' → logprob: -8.971610069274902
    10. '.' → logprob: -9.221610069274902

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20297619700431824
    2. '0' → logprob: -1.8279762268066406
    3. '1' → logprob: -4.577976226806641
    4. ' N' → logprob: -5.327976226806641
    5. ' n' → logprob: -6.327976226806641
    6. '10' → logprob: -6.452976226806641
    7. ' np' → logprob: -6.577976226806641
    8. 'N' → logprob: -7.327976226806641
    9. '`' → logprob: -8.20297622680664
    10. 'n' → logprob: -8.32797622680664

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032423049211502075
    2. '(lambda' → logprob: -4.15742301940918
    3. '<|end|>' → logprob: -4.53242301940918
    4. '```' → logprob: -6.28242301940918
    5. '(int' → logprob: -6.53242301940918
    6. '(str' → logprob: -7.90742301940918
    7. '(user' → logprob: -8.53242301940918
    8. '<|end|>' → logprob: -8.78242301940918
    9. '(
' → logprob: -9.15742301940918
    10. '(token' → logprob: -9.28242301940918

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23378095030784607
    2. ')' → logprob: -1.9837809801101685
    3. '(' → logprob: -2.858780860900879
    4. '```' → logprob: -5.483780860900879
    5. '(int' → logprob: -6.233780860900879
    6. '(user' → logprob: -6.483780860900879
    7. 'input' → logprob: -6.858780860900879
    8. '<|end|>' → logprob: -6.983780860900879
    9. '`)' → logprob: -7.108780860900879
    10. '(str' → logprob: -7.483780860900879

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20187276601791382
    2. ' input' → logprob: -1.7018728256225586
    3. '(input' → logprob: -7.701872825622559
    4. '=input' → logprob: -12.826872825622559
    5. ',input' → logprob: -12.826872825622559
    6. '[input' → logprob: -14.201872825622559
    7. ')' → logprob: -14.701872825622559
    8. '<input' → logprob: -14.701872825622559
    9. '	input' → logprob: -15.826872825622559
    10. '```' → logprob: -16.201871871948242

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5182543396949768
    2. '())' → logprob: -1.143254280090332
    3. '(' → logprob: -3.018254280090332
    4. ')' → logprob: -3.768254280090332
    5. '().' → logprob: -6.268254280090332
    6. '```' → logprob: -6.518254280090332
    7. '(()' → logprob: -6.768254280090332
    8. '('' → logprob: -6.893254280090332
    9. '());' → logprob: -6.893254280090332
    10. '();)' → logprob: -7.018254280090332

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015367622254416347
    2. 'strip' → logprob: -6.501536846160889
    3. 'rstrip' → logprob: -10.87653636932373
    4. ')' → logprob: -12.12653636932373
    5. ' split' → logprob: -12.12653636932373
    6. '(split' → logprob: -13.25153636932373
    7. 'read' → logprob: -13.37653636932373
    8. '```' → logprob: -14.00153636932373
    9. 'spl' → logprob: -16.001537322998047
    10. 'replace' → logprob: -16.126537322998047

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08907065540552139
    2. '())' → logprob: -2.9640705585479736
    3. '))' → logprob: -3.4640705585479736
    4. '`)' → logprob: -6.839070796966553
    5. '()' → logprob: -7.339070796966553
    6. '')' → logprob: -8.839070320129395
    7. '()))' → logprob: -8.964070320129395
    8. '('' → logprob: -9.964070320129395
    9. '(' → logprob: -10.214070320129395
    10. ')`' → logprob: -10.214070320129395

Token 11: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45052194595336914
    2. '+' → logprob: -2.950521945953369
    3. ',' → logprob: -2.950521945953369
    4. 'a' → logprob: -3.075521945953369
    5. '#' → logprob: -3.325521945953369
    6. '*' → logprob: -3.575521945953369
    7. 'x' → logprob: -4.200521945953369
    8. ' ' → logprob: -4.200521945953369
    9. ')' → logprob: -4.450521945953369
    10. 'if' → logprob: -4.575521945953369

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007064753444865346
    2. '("("' → logprob: -7.875706672668457
    3. '('' → logprob: -8.125706672668457
    4. '("""' → logprob: -11.750706672668457
    5. '(f' → logprob: -12.125706672668457
    6. '((' → logprob: -12.125706672668457
    7. '()' → logprob: -12.750706672668457
    8. '(**' → logprob: -13.625706672668457
    9. '(`' → logprob: -13.625706672668457
    10. '(
' → logprob: -14.000706672668457

Token 13: '-i' (ID: 18499)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09012162685394287
    2. '[' → logprob: -2.4651217460632324
    3. '[i' → logprob: -7.715121746063232
    4. ',' → logprob: -7.840121746063232
    5. ' )' → logprob: -9.340121269226074
    6. '[N' → logprob: -10.465121269226074
    7. '*' → logprob: -10.465121269226074
    8. '+' → logprob: -10.590121269226074
    9. '))' → logprob: -10.840121269226074
    10. '-' → logprob: -11.090121269226074

Token 14: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.862962229410186e-05
    2. '))' → logprob: -10.000078201293945
    3. '`)' → logprob: -10.750078201293945
    4. ' )' → logprob: -12.875078201293945
    5. '+' → logprob: -13.125078201293945
    6. '')' → logprob: -13.625078201293945
    7. ')`' → logprob: -13.625078201293945
    8. '```' → logprob: -14.000078201293945
    9. '-' → logprob: -14.250078201293945
    10. '*' → logprob: -14.500078201293945

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002016331272898242
    2. ' ' → logprob: -8.625201225280762
    3. ')' → logprob: -11.375201225280762
    4. '2' → logprob: -11.750201225280762
    5. '0' → logprob: -13.625201225280762
    6. '(' → logprob: -14.625201225280762
    7. '))' → logprob: -15.500201225280762
    8. '")' → logprob: -15.750201225280762
    9. '"' → logprob: -15.875201225280762
    10. 'i' → logprob: -16.500202178955078

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. '`)' → logprob: -12.12501335144043
    3. '))' → logprob: -12.25001335144043
    4. ')`' → logprob: -13.87501335144043
    5. '```' → logprob: -14.00001335144043
    6. ' )' → logprob: -14.25001335144043
    7. '')' → logprob: -14.62501335144043
    8. ')
' → logprob: -15.12501335144043
    9. '")' → logprob: -16.37501335144043
    10. '#' → logprob: -16.75001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 14
Tokens correctement prédits (1ère position, stricte): 3
Tokens correctement prédits (1ère position, avec adaptation): 3
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 21.43%
Précision adaptée (1ère position): 21.43%
Précision (top 10): 57.14%
================================================================================
