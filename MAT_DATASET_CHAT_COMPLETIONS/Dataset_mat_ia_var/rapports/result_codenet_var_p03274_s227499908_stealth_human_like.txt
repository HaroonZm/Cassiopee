================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, let's do it step by step... Variables pas top mais bon
n, k = map(int, input().split())
A = list(map(int, input().split())) # On met A en majuscules, pourquoi pas

minimum = 1e18 # Très grand nombre (presque l'infini lol)

for j in range(n - k + 1):
    first = A[j]
    last = A[j + k - 1] # espérons que l'indexation marche
    # Cas tout sur la gauche (derrière zéro)
    if last <= 0:
        temp = abs(first)
    # tout à droite ?
    elif first >= 0:
        temp = abs(last)
    else:
        # passage par zéro
        temp = abs(first)*2 + abs(last) # on va à gauche puis à droite
        temp2 = abs(last)*2 + abs(first) # inverse
        if temp2 < temp:
            temp = temp2
    # Peut-être minimum ici !
    if temp < minimum:
        minimum = temp

print(int(minimum))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' let's' (ID: 35717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1667102575302124
    2. ' je' → logprob: -3.166710376739502
    3. '```' → logprob: -3.291710376739502
    4. '  ' → logprob: -3.416710376739502
    5. ' e' → logprob: -5.291710376739502
    6. ' t' → logprob: -5.291710376739502
    7. 'jour' → logprob: -5.541710376739502
    8. '`' → logprob: -5.666710376739502
    9. 'e' → logprob: -6.041710376739502
    10. ' ```' → logprob: -6.291710376739502

Token 4: ' do' (ID: 621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5283350348472595
    2. ' continue' → logprob: -1.2783350944519043
    3. ' write' → logprob: -2.2783350944519043
    4. 'continue' → logprob: -4.528335094451904
    5. 'write' → logprob: -5.278335094451904
    6. ' start' → logprob: -6.153335094451904
    7. '```' → logprob: -6.278335094451904
    8. ' ```' → logprob: -6.528335094451904
    9. ' create' → logprob: -6.903335094451904
    10. 'a' → logprob: -7.403335094451904

Token 5: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21947869658470154
    2. ' something' → logprob: -2.8444786071777344
    3. '  ' → logprob: -3.8444786071777344
    4. 'n' → logprob: -3.8444786071777344
    5. ' a' → logprob: -4.344478607177734
    6. '`' → logprob: -4.344478607177734
    7. ' it' → logprob: -4.594478607177734
    8. 's' → logprob: -4.969478607177734
    9. ' some' → logprob: -4.969478607177734
    10. '#' → logprob: -4.969478607177734

Token 6: ' step' (ID: 5983)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4388107359409332
    2. '```' → logprob: -1.9388107061386108
    3. '!' → logprob: -2.5638108253479004
    4. '
' → logprob: -2.9388108253479004
    5. '#' → logprob: -3.1888108253479004
    6. '\' → logprob: -3.8138108253479004
    7. 'print' → logprob: -5.3138108253479
    8. '<|end|>' → logprob: -5.5638108253479
    9. ' ' → logprob: -5.9388108253479
    10. ' 
' → logprob: -6.5638108253479

Token 7: ' by' (ID: 656)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4897918105125427
    2. ' by' → logprob: -0.9897918105125427
    3. '1' → logprob: -5.4897918701171875
    4. '```' → logprob: -5.9897918701171875
    5. '-by' → logprob: -6.1147918701171875
    6. 'by' → logprob: -6.2397918701171875
    7. 'space' → logprob: -7.2397918701171875
    8. '2' → logprob: -7.6147918701171875
    9. 's' → logprob: -7.8647918701171875
    10. ' ```' → logprob: -8.114791870117188

Token 8: ' step' (ID: 5983)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26327869296073914
    2. ' ' → logprob: -1.8882787227630615
    3. '_' → logprob: -3.5132787227630615
    4. '-step' → logprob: -4.013278484344482
    5. 'step' → logprob: -4.263278484344482
    6. ' step' → logprob: -4.388278484344482
    7. '#' → logprob: -6.388278484344482
    8. 's' → logprob: -7.513278484344482
    9. 'n' → logprob: -7.763278484344482
    10. '>' → logprob: -7.888278484344482

Token 9: '...' (ID: 1008)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3706649839878082
    2. '\n' → logprob: -2.2456650733947754
    3. ':' → logprob: -2.4956650733947754
    4. '```' → logprob: -2.8706650733947754
    5. '!' → logprob: -3.1206650733947754
    6. '\' → logprob: -4.495665073394775
    7. '.' → logprob: -5.745665073394775
    8. '`' → logprob: -6.370665073394775
    9. 'n' → logprob: -7.245665073394775
    10. '
' → logprob: -7.245665073394775

Token 10: ' Variables' (ID: 46975)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6413801908493042
    2. '#' → logprob: -1.2663801908493042
    3. '\n' → logprob: -2.3913803100585938
    4. '`' → logprob: -3.1413803100585938
    5. '\' → logprob: -3.8913803100585938
    6. '
' → logprob: -5.016380310058594
    7. '``' → logprob: -5.266380310058594
    8. ':' → logprob: -5.266380310058594
    9. '.' → logprob: -5.516380310058594
    10. '!' → logprob: -5.766380310058594

Token 11: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0347442626953125
    2. ':' → logprob: -1.4097442626953125
    3. '=' → logprob: -2.4097442626953125
    4. 'a' → logprob: -2.4097442626953125
    5. '_' → logprob: -2.5347442626953125
    6. 'n' → logprob: -2.6597442626953125
    7. '`' → logprob: -4.2847442626953125
    8. 'i' → logprob: -4.6597442626953125
    9. ' =' → logprob: -4.6597442626953125
    10. 'x' → logprob: -4.7847442626953125

Token 12: ' top' (ID: 2344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00016611411410849541
    2. '=' → logprob: -8.875165939331055
    3. ' =' → logprob: -11.500165939331055
    4. 'sage' → logprob: -12.000165939331055
    5. 'space' → logprob: -12.750165939331055
    6. '#' → logprob: -13.000165939331055
    7. '   ' → logprob: -14.125165939331055
    8. '=s' → logprob: -14.375165939331055
    9. 'sed' → logprob: -14.750165939331055
    10. ' s' → logprob: -15.000165939331055

Token 13: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32952335476875305
    2. '_' → logprob: -2.0795233249664307
    3. ':' → logprob: -3.4545233249664307
    4. '```' → logprob: -3.7045233249664307
    5. ''' → logprob: -3.8295233249664307
    6. 'a' → logprob: -3.9545233249664307
    7. ',' → logprob: -4.20452356338501
    8. '.' → logprob: -4.57952356338501
    9. '=' → logprob: -4.95452356338501
    10. 'e' → logprob: -5.32952356338501

Token 14: ' bon' (ID: 4846)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.19521139562129974
    2. 'c' → logprob: -2.945211410522461
    3. ' ok' → logprob: -4.320211410522461
    4. ' OK' → logprob: -4.445211410522461
    5. ' okay' → logprob: -4.820211410522461
    6. ' ça' → logprob: -5.070211410522461
    7. ' correct' → logprob: -5.070211410522461
    8. 'bon' → logprob: -5.320211410522461
    9. 'cela' → logprob: -5.445211410522461
    10. ' j' → logprob: -5.570211410522461

Token 15: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26737141609191895
    2. '```' → logprob: -2.017371416091919
    3. ':' → logprob: -3.267371416091919
    4. ',' → logprob: -4.01737117767334
    5. 'a' → logprob: -4.39237117767334
    6. 'n' → logprob: -5.26737117767334
    7. '\' → logprob: -5.51737117767334
    8. '!' → logprob: -5.51737117767334
    9. '\n' → logprob: -5.89237117767334
    10. '`' → logprob: -5.89237117767334

Token 16: 'n' (ID: 77)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.41185736656188965
    2. ':' → logprob: -1.6618573665618896
    3. '#' → logprob: -2.9118573665618896
    4. 'a' → logprob: -3.6618573665618896
    5. '``' → logprob: -4.036857604980469
    6. ',' → logprob: -4.286857604980469
    7. '`' → logprob: -4.536857604980469
    8. '\' → logprob: -5.411857604980469
    9. 'n' → logprob: -5.661857604980469
    10. ' :' → logprob: -5.661857604980469

Token 17: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4586535692214966
    2. '=' → logprob: -1.8336535692214966
    3. ' =' → logprob: -2.458653450012207
    4. 'ombre' → logprob: -3.083653450012207
    5. 'e' → logprob: -3.958653450012207
    6. 'o' → logprob: -4.708653450012207
    7. 'ame' → logprob: -4.833653450012207
    8. '_' → logprob: -5.083653450012207
    9. 'u' → logprob: -5.208653450012207
    10. 'm' → logprob: -5.333653450012207

Token 18: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009228261187672615
    2. ' =' → logprob: -5.509228229522705
    3. 'm' → logprob: -6.634228229522705
    4. ' m' → logprob: -6.884228229522705
    5. '"' → logprob: -7.384228229522705
    6. 'space' → logprob: -7.509228229522705
    7. '_' → logprob: -8.009228706359863
    8. '=' → logprob: -8.759228706359863
    9. ' _' → logprob: -8.884228706359863
    10. ''' → logprob: -8.884228706359863

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006886815652251244
    2. '=' → logprob: -5.006886959075928
    3. ',' → logprob: -9.00688648223877
    4. ' ' → logprob: -10.38188648223877
    5. ' ,' → logprob: -11.63188648223877
    6. ' =
' → logprob: -12.75688648223877
    7. '<|end|>' → logprob: -12.88188648223877
    8. ')' → logprob: -14.00688648223877
    9. ' =[' → logprob: -14.88188648223877
    10. ' =
' → logprob: -15.00688648223877

Token 20: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19506163895130157
    2. ' map' → logprob: -1.8200616836547852
    3. 'map' → logprob: -4.570061683654785
    4. '10' → logprob: -6.445061683654785
    5. ' input' → logprob: -6.820061683654785
    6. '5' → logprob: -7.195061683654785
    7. '0' → logprob: -7.570061683654785
    8. 'input' → logprob: -7.695061683654785
    9. '20' → logprob: -8.820061683654785
    10. ' int' → logprob: -8.820061683654785

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.44152188301086426
    2. '(' → logprob: -1.1915218830108643
    3. '(str' → logprob: -3.0665218830108643
    4. '(lambda' → logprob: -5.191521644592285
    5. '(
' → logprob: -8.441521644592285
    6. '(input' → logprob: -8.816521644592285
    7. '[int' → logprob: -9.191521644592285
    8. '<int' → logprob: -9.191521644592285
    9. '<|end|>' → logprob: -9.191521644592285
    10. 'int' → logprob: -9.566521644592285

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023958034813404083
    2. 'input' → logprob: -4.148958206176758
    3. '(' → logprob: -5.648958206176758
    4. ')' → logprob: -5.648958206176758
    5. ' input' → logprob: -7.398958206176758
    6. '=input' → logprob: -9.273958206176758
    7. ',input' → logprob: -9.523958206176758
    8. '<input' → logprob: -11.273958206176758
    9. '[input' → logprob: -11.273958206176758
    10. '```' → logprob: -11.523958206176758

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602778434753418
    2. ' input' → logprob: -1.9102778434753418
    3. '(input' → logprob: -10.1602783203125
    4. ')' → logprob: -11.2852783203125
    5. '=input' → logprob: -14.2852783203125
    6. ',input' → logprob: -14.4102783203125
    7. ' )' → logprob: -14.5352783203125
    8. ' ' → logprob: -15.2852783203125
    9. '	input' → logprob: -15.7852783203125
    10. '```' → logprob: -16.2852783203125

Token 24: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3726333975791931
    2. '())' → logprob: -1.372633457183838
    3. '().' → logprob: -3.622633457183838
    4. '());' → logprob: -4.372633457183838
    5. '()>' → logprob: -4.872633457183838
    6. '(' → logprob: -6.247633457183838
    7. '()">' → logprob: -6.372633457183838
    8. '()</' → logprob: -6.622633457183838
    9. '()-' → logprob: -7.247633457183838
    10. '()));' → logprob: -7.372633457183838

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009148012613877654
    2. 'strip' → logprob: -7.000914573669434
    3. 'rstrip' → logprob: -13.375914573669434
    4. '(split' → logprob: -13.875914573669434
    5. ' split' → logprob: -14.125914573669434
    6. 'spl' → logprob: -16.62591552734375
    7. 'read' → logprob: -17.00091552734375
    8. ')' → logprob: -17.00091552734375
    9. 'plit' → logprob: -19.50091552734375
    10. 'replace' → logprob: -19.62591552734375

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0221652053296566
    2. '))' → logprob: -3.897165298461914
    3. '())' → logprob: -6.522165298461914
    4. '()' → logprob: -10.022165298461914
    5. '')' → logprob: -10.897165298461914
    6. '('' → logprob: -10.897165298461914
    7. '()))' → logprob: -11.397165298461914
    8. '(' → logprob: -11.397165298461914
    9. ')")' → logprob: -11.772165298461914
    10. ')))' → logprob: -11.897165298461914

Token 27: 'A' (ID: 32)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15421365201473236
    2. ')' → logprob: -2.5292136669158936
    3. '
' → logprob: -4.5292134284973145
    4. '<|end|>' → logprob: -4.7792134284973145
    5. '\n' → logprob: -5.0292134284973145
    6. '```' → logprob: -5.1542134284973145
    7. ' ' → logprob: -5.4042134284973145
    8. '#' → logprob: -5.4042134284973145
    9. 'n' → logprob: -5.5292134284973145
    10. ',' → logprob: -6.0292134284973145

Token 28: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04592541977763176
    2. '.' → logprob: -3.1709253787994385
    3. ' =' → logprob: -6.545925617218018
    4. '[:]' → logprob: -7.670925617218018
    5. '=' → logprob: -8.42092514038086
    6. '_' → logprob: -8.67092514038086
    7. ')' → logprob: -8.92092514038086
    8. '.append' → logprob: -9.29592514038086
    9. '[]' → logprob: -9.29592514038086
    10. '[A' → logprob: -10.04592514038086

Token 29: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10025077313184738
    2. 'list' → logprob: -2.350250720977783
    3. ' []' → logprob: -10.850251197814941
    4. ' [' → logprob: -11.350251197814941
    5. '[' → logprob: -12.225251197814941
    6. '[]' → logprob: -12.475251197814941
    7. '[list' → logprob: -13.600251197814941
    8. 'input' → logprob: -13.975251197814941
    9. ' input' → logprob: -14.225251197814941
    10. ' map' → logprob: -14.475251197814941

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006185336969792843
    2. '(int' → logprob: -5.381185531616211
    3. '(input' → logprob: -7.381185531616211
    4. '(range' → logprob: -7.381185531616211
    5. '(str' → logprob: -9.506185531616211
    6. '(eval' → logprob: -9.756185531616211
    7. '(map' → logprob: -10.006185531616211
    8. '(

' → logprob: -10.131185531616211
    9. '(.' → logprob: -10.381185531616211
    10. '(list' → logprob: -11.506185531616211

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026737738400697708
    2. '(' → logprob: -3.651737689971924
    3. '(str' → logprob: -8.151738166809082
    4. '(input' → logprob: -9.901738166809082
    5. '[int' → logprob: -10.401738166809082
    6. '<int' → logprob: -10.776738166809082
    7. '(lambda' → logprob: -10.901738166809082
    8. '```' → logprob: -11.901738166809082
    9. '=int' → logprob: -12.526738166809082
    10. 'int' → logprob: -12.526738166809082

Token 32: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4216187596321106
    2. '(' → logprob: -1.6716187000274658
    3. ',' → logprob: -2.171618700027466
    4. ',input' → logprob: -3.171618700027466
    5. ' ,' → logprob: -10.296618461608887
    6. '=input' → logprob: -10.671618461608887
    7. '(),' → logprob: -11.171618461608887
    8. ')' → logprob: -11.171618461608887
    9. ' (' → logprob: -11.671618461608887
    10. 'input' → logprob: -11.796618461608887

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06995344161987305
    2. ' input' → logprob: -2.694953441619873
    3. '(input' → logprob: -11.194953918457031
    4. ',input' → logprob: -13.694953918457031
    5. '=input' → logprob: -14.194953918457031
    6. '	input' → logprob: -14.569953918457031
    7. ')' → logprob: -14.944953918457031
    8. '<input' → logprob: -15.069953918457031
    9. '_input' → logprob: -15.694953918457031
    10. ' ' → logprob: -16.06995391845703

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009489760850556195
    2. '()' → logprob: -7.125948905944824
    3. '(' → logprob: -9.250948905944824
    4. '(.' → logprob: -11.250948905944824
    5. '())' → logprob: -11.250948905944824
    6. '()))' → logprob: -11.875948905944824
    7. ')' → logprob: -11.875948905944824
    8. ' ().' → logprob: -13.625948905944824
    9. '.' → logprob: -13.875948905944824
    10. '()));' → logprob: -14.000948905944824

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. '(split' → logprob: -15.000000953674316
    3. 'strip' → logprob: -15.125000953674316
    4. ' split' → logprob: -16.375
    5. 'spl' → logprob: -17.875
    6. 'rstrip' → logprob: -18.625
    7. 'plit' → logprob: -19.75
    8. '.split' → logprob: -19.875
    9. 'read' → logprob: -20.25
    10. '_split' → logprob: -21.125

Token 36: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.21392390131950378
    2. '())' → logprob: -1.9639239311218262
    3. '))' → logprob: -3.463923931121826
    4. ')' → logprob: -4.588923931121826
    5. '()' → logprob: -4.713923931121826
    6. '(' → logprob: -6.338923931121826
    7. '()));' → logprob: -10.713923454284668
    8. '()))
' → logprob: -10.838923454284668
    9. '()),' → logprob: -11.713923454284668
    10. '())))' → logprob: -11.963923454284668

Token 37: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17860735952854156
    2. '' → logprob: -3.17860746383667
    3. '#' → logprob: -3.55360746383667
    4. ')' → logprob: -4.05360746383667
    5. 'n' → logprob: -4.42860746383667
    6. 'for' → logprob: -4.42860746383667
    7. 'A' → logprob: -4.55360746383667
    8. 'a' → logprob: -4.67860746383667
    9. ' 
' → logprob: -5.30360746383667
    10. 'd' → logprob: -5.42860746383667

Token 38: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012760612182319164
    2. ' A' → logprob: -6.512760639190674
    3. 'sum' → logprob: -6.512760639190674
    4. '#' → logprob: -6.637760639190674
    5. ' sorted' → logprob: -6.637760639190674
    6. 'A' → logprob: -6.887760639190674
    7. '.' → logprob: -7.137760639190674
    8. ')' → logprob: -7.137760639190674
    9. ' #' → logprob: -7.262760639190674
    10. ' sum' → logprob: -7.262760639190674

Token 39: ' met' (ID: 1421)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.15882539749145508
    2. '.append' → logprob: -2.783825397491455
    3. '.copy' → logprob: -3.908825397491455
    4. '.' → logprob: -4.658825397491455
    5. 's' → logprob: -4.783825397491455
    6. 'A' → logprob: -5.283825397491455
    7. ' =' → logprob: -5.408825397491455
    8. ' .' → logprob: -6.283825397491455
    9. '.reverse' → logprob: -6.283825397491455
    10. '.extend' → logprob: -6.408825397491455

Token 40: ' A' (ID: 355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.09236741065979
    2. ' à' → logprob: -1.21736741065979
    3. 'tout' → logprob: -1.84236741065979
    4. ' tout' → logprob: -3.34236741065979
    5. ' les' → logprob: -3.46736741065979
    6. 's' → logprob: -4.342367172241211
    7. '_' → logprob: -4.467367172241211
    8. ' la' → logprob: -4.467367172241211
    9. 'à' → logprob: -4.592367172241211
    10. 'au' → logprob: -4.592367172241211

Token 41: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38082122802734375
    2. '[' → logprob: -2.1308212280273438
    3. '.sort' → logprob: -2.5058212280273438
    4. ' =' → logprob: -3.3808212280273438
    5. '[:]' → logprob: -3.6308212280273438
    6. '=' → logprob: -3.7558212280273438
    7. ')' → logprob: -4.005821228027344
    8. '[::-' → logprob: -6.380821228027344
    9. ',' → logprob: -6.505821228027344
    10. ' ' → logprob: -6.880821228027344

Token 42: ' maj' (ID: 15575)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.8858938217163086
    2. 'minus' → logprob: -2.0108938217163086
    3. 'val' → logprob: -2.3858938217163086
    4. 'ent' → logprob: -2.7608938217163086
    5. '[]' → logprob: -2.7608938217163086
    6. 'min' → logprob: -3.2608938217163086
    7. 's' → logprob: -3.3858938217163086
    8. 'place' → logprob: -3.6358938217163086
    9. 'input' → logprob: -3.6358938217163086
    10. 'liste' → logprob: -3.7608938217163086

Token 43: 'us' (ID: 385)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8731009364128113
    2. '#' → logprob: -1.873100996017456
    3. 'A' → logprob: -1.998100996017456
    4. '
' → logprob: -2.248100996017456
    5. 's' → logprob: -3.248100996017456
    6. 'for' → logprob: -3.373100996017456
    7. '' → logprob: -3.623100996017456
    8. '```' → logprob: -4.248100757598877
    9. ')' → logprob: -4.373100757598877
    10. 'n' → logprob: -4.748100757598877

Token 44: 'cules' (ID: 40805)
  Prédit: 'usc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usc' → logprob: -0.6254743933677673
    2. 'US' → logprob: -1.000474452972412
    3. '```' → logprob: -3.000474452972412
    4. 'us' → logprob: -4.250474452972412
    5. '#' → logprob: -5.125474452972412
    6. 'A' → logprob: -5.250474452972412
    7. 'ule' → logprob: -6.125474452972412
    8. '   ' → logprob: -6.125474452972412
    9. 'U' → logprob: -6.125474452972412
    10. '###' → logprob: -6.125474452972412

Token 45: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6315023899078369
    2. '#' → logprob: -1.881502389907837
    3. '' → logprob: -3.006502389907837
    4. ' 
' → logprob: -3.131502389907837
    5. 'for' → logprob: -3.131502389907837
    6. 'n' → logprob: -3.256502389907837
    7. 'A' → logprob: -3.506502389907837
    8. '.' → logprob: -3.631502389907837
    9. '<|end|>' → logprob: -4.256502151489258
    10. 'a' → logprob: -4.381502151489258

Token 46: ' pourquoi' (ID: 39224)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6598039269447327
    2. 'A' → logprob: -1.159803867340088
    3. '
' → logprob: -2.409803867340088
    4. '```' → logprob: -3.659803867340088
    5. '.' → logprob: -4.034803867340088
    6. 'n' → logprob: -4.659803867340088
    7. ')' → logprob: -4.784803867340088
    8. 'a' → logprob: -5.659803867340088
    9. 'C' → logprob: -6.159803867340088
    10. '

' → logprob: -6.284803867340088

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1976790726184845
    2. 'for' → logprob: -2.197679042816162
    3. '#' → logprob: -4.697679042816162
    4. 's' → logprob: -4.822679042816162
    5. 'n' → logprob: -4.822679042816162
    6. 'i' → logprob: -4.947679042816162
    7. '```' → logprob: -5.072679042816162
    8. 'A' → logprob: -5.197679042816162
    9. ' 
' → logprob: -5.322679042816162
    10. '' → logprob: -5.572679042816162

Token 49: 'minimum' (ID: 80931)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01759771816432476
    2. 'for' → logprob: -5.267597675323486
    3. 'A' → logprob: -5.517597675323486
    4. '
' → logprob: -6.267597675323486
    5. '```' → logprob: -7.017597675323486
    6. '#' → logprob: -7.142597675323486
    7. 'a' → logprob: -7.267597675323486
    8. '' → logprob: -7.267597675323486
    9. 's' → logprob: -7.642597675323486
    10. ' 
' → logprob: -7.767597675323486

Token 50: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06765633076429367
    2. ' =' → logprob: -3.4426562786102295
    3. '=' → logprob: -3.5676562786102295
    4. 's' → logprob: -5.942656517028809
    5. '_val' → logprob: -6.942656517028809
    6. ' ' → logprob: -8.067656517028809
    7. '_value' → logprob: -8.067656517028809
    8. '(' → logprob: -8.442656517028809
    9. ')' → logprob: -8.817656517028809
    10. ',' → logprob: -8.942656517028809

Token 51: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12183960527181625
    2. ' min' → logprob: -2.7468395233154297
    3. 'float' → logprob: -3.6218395233154297
    4. 'A' → logprob: -3.9968395233154297
    5. ' float' → logprob: -5.49683952331543
    6. ' A' → logprob: -6.87183952331543
    7. '0' → logprob: -8.87183952331543
    8. 'max' → logprob: -10.12183952331543
    9. '100' → logprob: -10.12183952331543
    10. 'None' → logprob: -10.74683952331543

Token 52: '1' (ID: 16)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0834420919418335
    2. 'float' → logprob: -2.708442211151123
    3. 'A' → logprob: -4.333442211151123
    4. '10' → logprob: -9.333441734313965
    5. 'max' → logprob: -9.833441734313965
    6. '1' → logprob: -10.458441734313965
    7. '0' → logprob: -10.708441734313965
    8. ' min' → logprob: -10.958441734313965
    9. '100' → logprob: -10.958441734313965
    10. 'abs' → logprob: -11.083441734313965

Token 53: 'e' (ID: 68)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0304219722747803
    2. '0' → logprob: -1.2804219722747803
    3. '
' → logprob: -1.7804219722747803
    4. 'e' → logprob: -2.0304219722747803
    5. '<|end|>' → logprob: -3.4054219722747803
    6. ' 
' → logprob: -4.780422210693359
    7. '+' → logprob: -5.155422210693359
    8. '#' → logprob: -6.155422210693359
    9. '2' → logprob: -6.530422210693359
    10. '_' → logprob: -6.655422210693359

Token 54: '18' (ID: 1157)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07725856453180313
    2. '-' → logprob: -3.327258586883545
    3. '09' → logprob: -3.452258586883545
    4. '8' → logprob: -6.077258586883545
    5. '+' → logprob: -6.202258586883545
    6. '6' → logprob: -7.327258586883545
    7. '18' → logprob: -7.327258586883545
    8. '10' → logprob: -8.202258110046387
    9. '7' → logprob: -8.577258110046387
    10. '0' → logprob: -9.077258110046387

Token 55: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5691704750061035
    2. '
' → logprob: -0.9441704750061035
    3. ' 
' → logprob: -4.1941704750061035
    4. ' for' → logprob: -4.5691704750061035
    5. '#' → logprob: -5.3191704750061035
    6. '' → logprob: -6.0691704750061035
    7. 'if' → logprob: -6.0691704750061035
    8. 'while' → logprob: -6.5691704750061035
    9. '<|end|>' → logprob: -6.6941704750061035
    10. '-' → logprob: -6.8191704750061035

Token 56: ' Très' (ID: 95281)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' grand' (ID: 6363)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.8530681729316711
    2. 'grand' → logprob: -1.2280681133270264
    3. ' large' → logprob: -2.1030681133270264
    4. '_' → logprob: -2.9780681133270264
    5. ' grand' → logprob: -3.7280681133270264
    6. 'long' → logprob: -4.3530683517456055
    7. '_large' → logprob: -4.4780683517456055
    8. ' grande' → logprob: -5.1030683517456055
    9. ' long' → logprob: -5.1030683517456055
    10. '```' → logprob: -5.2280683517456055

Token 58: ' nombre' (ID: 9733)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21169573068618774
    2. '
' → logprob: -2.086695671081543
    3. 'minimum' → logprob: -3.586695671081543
    4. 's' → logprob: -4.336695671081543
    5. ' for' → logprob: -4.711695671081543
    6. 'max' → logprob: -5.586695671081543
    7. '<|end|>' → logprob: -5.711695671081543
    8. 'min' → logprob: -6.461695671081543
    9. '' → logprob: -6.711695671081543
    10. 'm' → logprob: -6.961695671081543

Token 60: 'pres' (ID: 27252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032639806158840656
    2. ' )' → logprob: -5.7532639503479
    3. ' pour' → logprob: -9.878264427185059
    4. ',' → logprob: -11.878264427185059
    5. ' ' → logprob: -12.128264427185059
    6. 'pour' → logprob: -12.128264427185059
    7. '<|end|>' → logprob: -12.253264427185059
    8. ')
' → logprob: -13.253264427185059
    9. ' ' → logprob: -14.003264427185059
    10. ')#' → logprob: -14.003264427185059

Token 61: 'que' (ID: 1126)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5334661602973938
    2. 'que' → logprob: -2.033466100692749
    3. 'ving' → logprob: -2.533466100692749
    4. 't' → logprob: -3.033466100692749
    5. 'ved' → logprob: -3.158466100692749
    6. '#' → logprob: -3.783466100692749
    7. 've' → logprob: -4.033466339111328
    8. 'ue' → logprob: -5.033466339111328
    9. 'ented' → logprob: -5.033466339111328
    10. 'd' → logprob: -5.283466339111328

Token 62: ' l' (ID: 305)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.27625563740730286
    2. ' inf' → logprob: -1.9012556076049805
    3. 'in' → logprob: -3.0262556076049805
    4. '```' → logprob: -4.4012556076049805
    5. '_inf' → logprob: -4.4012556076049805
    6. ')' → logprob: -4.6512556076049805
    7. 'l' → logprob: -6.4012556076049805
    8. '-inf' → logprob: -6.5262556076049805
    9. ' infinity' → logprob: -6.5262556076049805
    10. ' infinito' → logprob: -7.0262556076049805

Token 63: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.7796056270599365
    2. 'inf' → logprob: -1.2796056270599365
    3. '_inf' → logprob: -2.0296056270599365
    4. 'a' → logprob: -3.1546056270599365
    5. 'imité' → logprob: -3.7796056270599365
    6. 'u' → logprob: -3.7796056270599365
    7. 'e' → logprob: -4.654605865478516
    8. '')' → logprob: -4.654605865478516
    9. 'imit' → logprob: -5.654605865478516
    10. ''' → logprob: -5.779605865478516

Token 64: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.012784150429069996
    2. 't' → logprob: -4.762784004211426
    3. 'fi' → logprob: -6.137784004211426
    4. 'finity' → logprob: -7.637784004211426
    5. 'fty' → logprob: -7.762784004211426
    6. 'fin' → logprob: -8.137784004211426
    7. '	f' → logprob: -9.512784004211426
    8. 'finite' → logprob: -9.637784004211426
    9. '```' → logprob: -9.887784004211426
    10. '}' → logprob: -10.012784004211426

Token 65: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.0032529314048588276
    2. 'i' → logprob: -6.253252983093262
    3. '```' → logprob: -7.753252983093262
    4. 'inity' → logprob: -8.128252983093262
    5. 'in' → logprob: -8.503252983093262
    6. 'inie' → logprob: -8.628252983093262
    7. 'iny' → logprob: -9.003252983093262
    8. '}' → logprob: -11.253252983093262
    9. 'inite' → logprob: -11.253252983093262
    10. 'inin' → logprob: -11.253252983093262

Token 66: ' lol' (ID: 27504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047869363334029913
    2. ' )' → logprob: -7.750478744506836
    3. ')
' → logprob: -10.125478744506836
    4. ')

' → logprob: -12.500478744506836
    5. '#' → logprob: -14.500478744506836
    6. '`)' → logprob: -14.750478744506836
    7. '
' → logprob: -14.750478744506836
    8. '```' → logprob: -14.750478744506836
    9. ',' → logprob: -14.875478744506836
    10. ')n' → logprob: -15.125478744506836

Token 67: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008354776655323803
    2. ' )' → logprob: -7.375835418701172
    3. ')
' → logprob: -8.625835418701172
    4. ')

' → logprob: -11.500835418701172
    5. '
' → logprob: -12.500835418701172
    6. ')n' → logprob: -12.625835418701172
    7. '```' → logprob: -12.875835418701172
    8. '`)' → logprob: -13.375835418701172
    9. ')
' → logprob: -13.750835418701172
    10. '#' → logprob: -13.875835418701172

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00644097663462162
    2. ' for' → logprob: -5.756441116333008
    3. '
' → logprob: -5.881441116333008
    4. ':' → logprob: -8.131441116333008
    5. 'def' → logprob: -10.256441116333008
    6. 'max' → logprob: -10.756441116333008
    7. 'while' → logprob: -11.256441116333008
    8. '' → logprob: -11.381441116333008
    9. ':
' → logprob: -11.381441116333008
    10. '=' → logprob: -11.381441116333008

Token 69: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05074431002140045
    2. ' ' → logprob: -3.3007442951202393
    3. ' _' → logprob: -4.550744533538818
    4. '_' → logprob: -6.425744533538818
    5. 'i' → logprob: -8.67574405670166
    6. ' x' → logprob: -8.92574405670166
    7. ' a' → logprob: -9.92574405670166
    8. '  ' → logprob: -10.30074405670166
    9. ' in' → logprob: -11.30074405670166
    10. ' ' → logprob: -11.67574405670166

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01781683787703514
    2. 'in' → logprob: -4.14281702041626
    3. ' ' → logprob: -6.39281702041626
    4. '  ' → logprob: -10.017816543579102
    5. 'n' → logprob: -10.517816543579102
    6. 'range' → logprob: -11.767816543579102
    7. ' i' → logprob: -12.267816543579102
    8. ' j' → logprob: -12.642816543579102
    9. '   ' → logprob: -12.767816543579102
    10. '_' → logprob: -13.142816543579102

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0021811923943459988
    2. 'range' → logprob: -6.377181053161621
    3. ' A' → logprob: -7.752181053161621
    4. 'A' → logprob: -10.127181053161621
    5. ' ' → logprob: -12.752181053161621
    6. '	range' → logprob: -13.627181053161621
    7. '(range' → logprob: -13.752181053161621
    8. '  ' → logprob: -14.377181053161621
    9. ' xrange' → logprob: -14.502181053161621
    10. ' k' → logprob: -14.752181053161621

Token 72: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03215954452753067
    2. '(' → logprob: -3.5321595668792725
    3. '(n' → logprob: -6.032159328460693
    4. '(j' → logprob: -13.282159805297852
    5. '(len' → logprob: -13.407159805297852
    6. ' (' → logprob: -13.657159805297852
    7. '(
' → logprob: -15.282159805297852
    8. '((' → logprob: -15.407159805297852
    9. '(K' → logprob: -15.532159805297852
    10. '(m' → logprob: -15.532159805297852

Token 73: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012044002069160342
    2. ' ):' → logprob: -7.126204490661621
    3. ')' → logprob: -8.751204490661621
    4. '+' → logprob: -9.251204490661621
    5. '):
' → logprob: -9.626204490661621
    6. '-' → logprob: -9.626204490661621
    7. ':' → logprob: -12.001204490661621
    8. ' -' → logprob: -13.501204490661621
    9. '   ' → logprob: -14.126204490661621
    10. ',' → logprob: -14.126204490661621

Token 74: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0286002159118652
    2. ' k' → logprob: -1.0286002159118652
    3. ' ' → logprob: -1.4036002159118652
    4. 'k' → logprob: -3.2786002159118652
    5. '2' → logprob: -6.778600215911865
    6. ')' → logprob: -8.778600692749023
    7. '-' → logprob: -8.903600692749023
    8. ' )' → logprob: -10.278600692749023
    9. '	k' → logprob: -10.778600692749023
    10. ' -' → logprob: -10.903600692749023

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07898089289665222
    2. '+' → logprob: -2.5789809226989746
    3. ' ' → logprob: -9.328980445861816
    4. ')' → logprob: -15.078980445861816
    5. '):' → logprob: -15.078980445861816
    6. '  ' → logprob: -15.453980445861816
    7. ' plus' → logprob: -15.578980445861816
    8. '1' → logprob: -15.703980445861816
    9. ' +
' → logprob: -15.703980445861816
    10. '```' → logprob: -15.703980445861816

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016035541892051697
    2. ' ' → logprob: -4.141035556793213
    3. ')' → logprob: -14.891035079956055
    4. '2' → logprob: -15.328535079956055
    5. '```' → logprob: -16.078535079956055
    6. '

' → logprob: -16.328535079956055
    7. '+' → logprob: -16.453535079956055
    8. '0' → logprob: -17.078535079956055
    9. '3' → logprob: -17.203535079956055
    10. ' )' → logprob: -17.266035079956055

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. ')' → logprob: -15.37508487701416
    4. '2' → logprob: -17.500085830688477
    5. '```' → logprob: -17.500085830688477
    6. '   ' → logprob: -18.625085830688477
    7. '  ' → logprob: -18.625085830688477
    8. '

' → logprob: -18.687585830688477
    9. '' → logprob: -18.937585830688477
    10. '
' → logprob: -19.000085830688477

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031251905020326376
    2. ')' → logprob: -5.878125190734863
    3. ':' → logprob: -8.378125190734863
    4. ' ):' → logprob: -9.378125190734863
    5. '):
' → logprob: -12.253125190734863
    6. ' )' → logprob: -15.503125190734863
    7. ':)' → logprob: -15.628125190734863
    8. '():' → logprob: -16.378124237060547
    9. ',' → logprob: -16.503124237060547
    10. ')：' → logprob: -16.503124237060547

Token 79: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.708648681640625
    2. ' ' → logprob: -0.833648681640625
    3. '   ' → logprob: -2.958648681640625
    4. ' :' → logprob: -4.458648681640625
    5. '<|end|>' → logprob: -5.208648681640625
    6. '    ' → logprob: -6.833648681640625
    7. '  ' → logprob: -7.208648681640625
    8. ')' → logprob: -8.333648681640625
    9. '<|end|>' → logprob: -8.458648681640625
    10. ' 
' → logprob: -8.458648681640625

Token 80: ' first' (ID: 1577)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0909241437911987
    2. 'minimum' → logprob: -1.7159241437911987
    3. 'window' → logprob: -2.4659242630004883
    4. 'segment' → logprob: -2.7159242630004883
    5. 'sum' → logprob: -2.8409242630004883
    6. 'sub' → logprob: -2.8409242630004883
    7. 'subset' → logprob: -3.3409242630004883
    8. 'min' → logprob: -3.4659242630004883
    9. 's' → logprob: -3.5909242630004883
    10. ' current' → logprob: -3.9659242630004883

Token 81: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.475014328956604
    2. '_min' → logprob: -1.725014328956604
    3. ' =' → logprob: -2.4750142097473145
    4. '_sum' → logprob: -2.6000142097473145
    5. '=' → logprob: -4.3500142097473145
    6. '_max' → logprob: -4.7250142097473145
    7. '_val' → logprob: -5.6000142097473145
    8. '_value' → logprob: -6.1000142097473145
    9. '_window' → logprob: -6.3500142097473145
    10. '_element' → logprob: -6.3500142097473145

Token 82: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1450643092393875
    2. 'min' → logprob: -2.145064353942871
    3. 'sum' → logprob: -4.395064353942871
    4. 'max' → logprob: -5.895064353942871
    5. ' A' → logprob: -6.895064353942871
    6. '0' → logprob: -7.520064353942871
    7. 'j' → logprob: -7.645064353942871
    8. ' min' → logprob: -7.770064353942871
    9. '   ' → logprob: -8.645064353942871
    10. ' ' → logprob: -9.770064353942871

Token 83: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00018911674851551652
    2. '[' → logprob: -8.625188827514648
    3. ' [' → logprob: -12.250188827514648
    4. '[i' → logprob: -13.125188827514648
    5. 'j' → logprob: -14.500188827514648
    6. '[min' → logprob: -14.750188827514648
    7. '   ' → logprob: -15.500188827514648
    8. 'index' → logprob: -15.750188827514648
    9. '[
' → logprob: -16.00018882751465
    10. ',j' → logprob: -16.25018882751465

Token 84: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011865478940308094
    2. '])' → logprob: -4.511865615844727
    3. ' ]' → logprob: -7.886865615844727
    4. ']+' → logprob: -9.136865615844727
    5. ']
' → logprob: -9.386865615844727
    6. '+' → logprob: -9.511865615844727
    7. ':j' → logprob: -9.761865615844727
    8. ':' → logprob: -10.511865615844727
    9. ')' → logprob: -10.636865615844727
    10. ' ])' → logprob: -11.011865615844727

Token 85: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24152812361717224
    2. '   ' → logprob: -2.491528034210205
    3. ' +' → logprob: -3.241528034210205
    4. ' ' → logprob: -3.866528034210205
    5. 'second' → logprob: -4.616528034210205
    6. '<|end|>' → logprob: -4.866528034210205
    7. 'for' → logprob: -5.116528034210205
    8. '    ' → logprob: -5.116528034210205
    9. '  ' → logprob: -5.491528034210205
    10. ',' → logprob: -5.491528034210205

Token 86: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.8477165699005127
    2. 'for' → logprob: -1.2227165699005127
    3. 'second' → logprob: -2.0977165699005127
    4. ' last' → logprob: -2.5977165699005127
    5. ' for' → logprob: -3.7227165699005127
    6. 'minimum' → logprob: -3.8477165699005127
    7. 'maximum' → logprob: -4.847716331481934
    8. 'max' → logprob: -5.347716331481934
    9. ' second' → logprob: -5.347716331481934
    10. '   ' → logprob: -5.722716331481934

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811666429042816
    2. '=' → logprob: -1.406166672706604
    3. ' ' → logprob: -11.781167030334473
    4. '=A' → logprob: -11.906167030334473
    5. '_' → logprob: -14.156167030334473
    6. 'A' → logprob: -15.031167030334473
    7. '  ' → logprob: -15.281167030334473
    8. '   ' → logprob: -15.406167030334473
    9. '_=' → logprob: -16.156166076660156
    10. 's' → logprob: -16.656166076660156

Token 88: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47472646832466125
    2. ' A' → logprob: -0.9747264385223389
    3. '   ' → logprob: -7.349726676940918
    4. ' ' → logprob: -12.474726676940918
    5. '  ' → logprob: -14.099726676940918
    6. '	A' → logprob: -14.099726676940918
    7. ' first' → logprob: -14.724726676940918
    8. '    ' → logprob: -14.849726676940918
    9. 'first' → logprob: -15.724726676940918
    10. ' ' → logprob: -16.4747257232666

Token 89: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. 'j' → logprob: -17.500001907348633
    4. '[k' → logprob: -17.750001907348633
    5. ' [' → logprob: -18.250001907348633
    6. '```' → logprob: -18.375001907348633
    7. '[
' → logprob: -19.125001907348633
    8. '[i' → logprob: -19.750001907348633
    9. '[min' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.875001907348633

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42343956232070923
    2. ' +' → logprob: -1.4234395027160645
    3. '+k' → logprob: -2.2984395027160645
    4. '+j' → logprob: -5.5484395027160645
    5. '   ' → logprob: -12.048439979553223
    6. '+
' → logprob: -12.923439979553223
    7. '+i' → logprob: -13.048439979553223
    8. ' ' → logprob: -13.173439979553223
    9. '＋' → logprob: -14.048439979553223
    10. ' plus' → logprob: -14.673439979553223

Token 91: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.639096970204264e-05
    2. ' k' → logprob: -9.250096321105957
    3. '(k' → logprob: -15.875096321105957
    4. '   ' → logprob: -17.000097274780273
    5. ' ' → logprob: -18.250097274780273
    6. '	k' → logprob: -19.625097274780273
    7. ' (' → logprob: -20.375097274780273
    8. '{k' → logprob: -21.000097274780273
    9. '(' → logprob: -21.125097274780273
    10. '  ' → logprob: -21.250097274780273

Token 92: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009757150895893574
    2. ' -' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.384757041931152
    4. '1' → logprob: -14.634757041931152
    5. '```' → logprob: -16.50975799560547
    6. ']' → logprob: -17.25975799560547
    7. ')' → logprob: -17.88475799560547
    8. '   ' → logprob: -18.00975799560547
    9. '−' → logprob: -18.00975799560547
    10. ']-' → logprob: -18.88475799560547

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. ']' → logprob: -15.625007629394531
    4. '   ' → logprob: -16.87500762939453
    5. '```' → logprob: -17.25000762939453
    6. '2' → logprob: -18.00000762939453
    7. '<|end|>' → logprob: -18.31250762939453
    8. '0' → logprob: -19.06250762939453
    9. ')' → logprob: -19.25000762939453
    10. '  ' → logprob: -19.31250762939453

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.375001907348633
    4. '2' → logprob: -16.812501907348633
    5. ']' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.312501907348633
    7. '۱' → logprob: -17.625001907348633
    8. ')' → logprob: -18.062501907348633
    9. '0' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.312501907348633

Token 95: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05819469690322876
    2. ']' → logprob: -2.933194637298584
    3. '   ' → logprob: -6.058194637298584
    4. ')
' → logprob: -7.183194637298584
    5. ' )' → logprob: -9.183195114135742
    6. '<|end|>' → logprob: -11.058195114135742
    7. ' ]' → logprob: -11.308195114135742
    8. '}' → logprob: -11.433195114135742
    9. '']' → logprob: -11.558195114135742
    10. ']
' → logprob: -11.558195114135742

Token 96: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012016603723168373
    2. '    
' → logprob: -4.887016773223877
    3. '
' → logprob: -5.512016773223877
    4. '<|end|>' → logprob: -8.762016296386719
    5. '   
' → logprob: -9.637016296386719
    6. ')' → logprob: -10.512016296386719
    7. '  
' → logprob: -10.637016296386719
    8. ' if' → logprob: -10.887016296386719
    9. 'if' → logprob: -11.262016296386719
    10. '  ' → logprob: -11.762016296386719

Token 97: ' esp' (ID: 7461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4280412793159485
    2. '
' → logprob: -1.6780412197113037
    3. ' if' → logprob: -2.5530412197113037
    4. '    
' → logprob: -3.6780412197113037
    5. 'if' → logprob: -3.8030412197113037
    6. 'minimum' → logprob: -4.553041458129883
    7. '   
' → logprob: -4.928041458129883
    8. '  
' → logprob: -5.428041458129883
    9. ' minimum' → logprob: -5.928041458129883
    10. ' for' → logprob: -6.678041458129883

Token 98: 'érons' (ID: 167835)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -1.6827338933944702
    2. 'acé' → logprob: -2.1827340126037598
    3. 'érons' → logprob: -2.1827340126037598
    4. 'ace' → logprob: -2.5577340126037598
    5. 'éré' → logprob: -2.5577340126037598
    6. 'oir' → logprob: -2.6827340126037598
    7. 'érée' → logprob: -2.8077340126037598
    8. 'érant' → logprob: -2.8077340126037598
    9. 'r' → logprob: -3.0577340126037598
    10. 'er' → logprob: -3.5577340126037598

Token 99: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.012641141191124916
    2. ' ' → logprob: -5.012640953063965
    3. 'que' → logprob: -6.012640953063965
    4. ' that' → logprob: -6.637640953063965
    5. '<|end|>' → logprob: -7.387640953063965
    6. ' qu' → logprob: -8.137640953063965
    7. '   ' → logprob: -8.262640953063965
    8. '  ' → logprob: -8.637640953063965
    9. ' #' → logprob: -9.387640953063965
    10. '#' → logprob: -9.387640953063965

Token 100: ' l' (ID: 305)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.2133666276931763
    2. 'first' → logprob: -1.2133666276931763
    3. ' first' → logprob: -1.9633666276931763
    4. ' last' → logprob: -2.4633665084838867
    5. 'A' → logprob: -2.9633665084838867
    6. ' A' → logprob: -3.4633665084838867
    7. ' True' → logprob: -3.9633665084838867
    8. 'minimum' → logprob: -3.9633665084838867
    9. ' minimum' → logprob: -4.463366508483887
    10. 'True' → logprob: -4.463366508483887

Token 101: ''' (ID: 6)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6332505941390991
    2. 'k' → logprob: -2.0082507133483887
    3. ' len' → logprob: -2.2582507133483887
    4. 'last' → logprob: -2.3832507133483887
    5. ' k' → logprob: -3.2582507133483887
    6. ' j' → logprob: -3.8832507133483887
    7. 'ast' → logprob: -4.383250713348389
    8. 'j' → logprob: -4.383250713348389
    9. 'first' → logprob: -4.508250713348389
    10. ' last' → logprob: -4.633250713348389

Token 102: 'index' (ID: 2257)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9219229817390442
    2. 'indice' → logprob: -1.7969229221343994
    3. 'indices' → logprob: -2.6719229221343994
    4. 'n' → logprob: -2.9219229221343994
    5. 'index' → logprob: -2.9219229221343994
    6. 'k' → logprob: -3.0469229221343994
    7. 'last' → logprob: -3.1719229221343994
    8. 'a' → logprob: -3.5469229221343994
    9. 'minimum' → logprob: -3.5469229221343994
    10. 'len' → logprob: -3.7969229221343994

Token 103: 'ation' (ID: 387)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1729408502578735
    2. 'ation' → logprob: -1.2979408502578735
    3. 'e' → logprob: -1.4229408502578735
    4. ' ne' → logprob: -2.922940731048584
    5. 's' → logprob: -3.797940731048584
    6. '   ' → logprob: -4.172940731048584
    7. 'es' → logprob: -4.297940731048584
    8. ' n' → logprob: -4.672940731048584
    9. ' +' → logprob: -4.672940731048584
    10. '+' → logprob: -5.172940731048584

Token 104: ' marche' (ID: 58191)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.830788791179657
    2. '[' → logprob: -1.7057888507843018
    3. '+' → logprob: -2.2057888507843018
    4. ' is' → logprob: -2.7057888507843018
    5. ']' → logprob: -3.5807888507843018
    6. ')' → logprob: -3.7057888507843018
    7. '    ' → logprob: -3.8307888507843018
    8. ' ' → logprob: -3.9557888507843018
    9. ' <=' → logprob: -4.080788612365723
    10. ' <' → logprob: -4.455788612365723

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010260997340083122
    2. '    
' → logprob: -4.635261058807373
    3. '   
' → logprob: -8.635260581970215
    4. '
' → logprob: -9.385260581970215
    5. '  
' → logprob: -9.885260581970215
    6. ' if' → logprob: -9.885260581970215
    7. '<|end|>' → logprob: -10.010260581970215
    8. 'if' → logprob: -10.510260581970215
    9. '  ' → logprob: -11.260260581970215
    10. ')' → logprob: -11.510260581970215

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051226308569312096
    2. '    
' → logprob: -5.755122661590576
    3. '
' → logprob: -6.630122661590576
    4. '   
' → logprob: -8.755122184753418
    5. 'minimum' → logprob: -9.130122184753418
    6. ' if' → logprob: -9.380122184753418
    7. 'if' → logprob: -9.505122184753418
    8. '  
' → logprob: -10.255122184753418
    9. '```' → logprob: -10.380122184753418
    10. '  ' → logprob: -10.505122184753418

Token 107: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16191256046295166
    2. 'minimum' → logprob: -2.161912441253662
    3. 'if' → logprob: -3.786912441253662
    4. 'current' → logprob: -5.661912441253662
    5. 'diff' → logprob: -6.286912441253662
    6. ' minimum' → logprob: -6.286912441253662
    7. ' if' → logprob: -6.286912441253662
    8. '    
' → logprob: -7.536912441253662
    9. 'distance' → logprob: -7.536912441253662
    10. 'for' → logprob: -7.786912441253662

Token 108: ' Cas' (ID: 8066)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9548549652099609
    2. ' minimum' → logprob: -2.204854965209961
    3. 'diff' → logprob: -2.329854965209961
    4. 'if' → logprob: -2.329854965209961
    5. 'minimum' → logprob: -2.329854965209961
    6. ' diff' → logprob: -2.579854965209961
    7. ' current' → logprob: -2.954854965209961
    8. 'distance' → logprob: -4.079854965209961
    9. 'current' → logprob: -4.079854965209961
    10. '   ' → logprob: -4.454854965209961

Token 109: ' tout' (ID: 5501)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0342146158218384
    2. ' où' → logprob: -1.7842146158218384
    3. ' where' → logprob: -1.9092146158218384
    4. ' if' → logprob: -2.034214496612549
    5. ' ' → logprob: -2.784214496612549
    6. ' du' → logprob: -3.034214496612549
    7. 's' → logprob: -3.784214496612549
    8. '1' → logprob: -4.784214496612549
    9. 'où' → logprob: -4.784214496612549
    10. '  ' → logprob: -4.784214496612549

Token 110: ' sur' (ID: 1512)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.22462217509746552
    2. ' à' → logprob: -2.5996222496032715
    3. 'dans' → logprob: -3.4746222496032715
    4. 'en' → logprob: -4.3496222496032715
    5. 'pour' → logprob: -4.4746222496032715
    6. '#' → logprob: -4.5996222496032715
    7. 'au' → logprob: -4.7246222496032715
    8. 's' → logprob: -5.2246222496032715
    9. '   ' → logprob: -5.4746222496032715
    10. 'simple' → logprob: -5.7246222496032715

Token 111: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.994331955909729
    2. 'une' → logprob: -1.744331955909729
    3. 'prem' → logprob: -1.994331955909729
    4. 'le' → logprob: -2.1193318367004395
    5. ' la' → logprob: -2.2443318367004395
    6. 'first' → logprob: -3.8693318367004395
    7. ' le' → logprob: -4.4943318367004395
    8. ' une' → logprob: -4.4943318367004395
    9. 'un' → logprob: -4.7443318367004395
    10. 'A' → logprob: -5.1193318367004395

Token 112: ' gauche' (ID: 58367)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.23781488835811615
    2. 'dro' → logprob: -2.2378149032592773
    3. 'prem' → logprob: -2.4878149032592773
    4. 'g' → logprob: -4.362814903259277
    5. 'ligne' → logprob: -5.237814903259277
    6. 'mem' → logprob: -6.862814903259277
    7. '```' → logprob: -7.987814903259277
    8. 'even' → logprob: -8.112814903259277
    9. 'left' → logprob: -8.112814903259277
    10. ' même' → logprob: -8.237814903259277

Token 113: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003278125775977969
    2. '    
' → logprob: -6.6282782554626465
    3. ':' → logprob: -7.5032782554626465
    4. 'if' → logprob: -7.7532782554626465
    5. ' if' → logprob: -8.003277778625488
    6. '   
' → logprob: -8.503277778625488
    7. '  ' → logprob: -8.503277778625488
    8. '
' → logprob: -10.003277778625488
    9. ',' → logprob: -10.503277778625488
    10. '    ' → logprob: -10.753277778625488

Token 114: 'der' (ID: 761)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7021486759185791
    2. 'minimum' → logprob: -1.202148675918579
    3. ' minimum' → logprob: -2.327148675918579
    4. 'distance' → logprob: -4.2021484375
    5. ' if' → logprob: -4.3271484375
    6. 'if' → logprob: -4.4521484375
    7. ')' → logprob: -4.9521484375
    8. 'min' → logprob: -5.0771484375
    9. ' for' → logprob: -5.2021484375
    10. ' distance' → logprob: -5.3271484375

Token 115: 'rière' (ID: 34908)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.6423308849334717
    2. 'rière' → logprob: -2.3923308849334717
    3. 'r' → logprob: -2.6423308849334717
    4. '```' → logprob: -3.3923308849334717
    5. 'min' → logprob: -3.5173308849334717
    6. '   ' → logprob: -3.7673308849334717
    7. 'jà' → logprob: -4.017331123352051
    8. 'ière' → logprob: -4.142331123352051
    9. 'first' → logprob: -4.142331123352051
    10. 'j' → logprob: -4.142331123352051

Token 116: ' zéro' (ID: 182040)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4566901922225952
    2. '):' → logprob: -1.3316901922225952
    3. ' la' → logprob: -3.9566903114318848
    4. ' le' → logprob: -4.206690311431885
    5. ' )' → logprob: -4.331690311431885
    6. ',' → logprob: -4.956690311431885
    7. 'la' → logprob: -4.956690311431885
    8. 'le' → logprob: -5.081690311431885
    9. '   ' → logprob: -5.331690311431885
    10. 'first' → logprob: -5.581690311431885

Token 117: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4508465826511383
    2. ')' → logprob: -1.325846552848816
    3. '):' → logprob: -2.7008466720581055
    4. ' if' → logprob: -5.0758466720581055
    5. 'if' → logprob: -5.2008466720581055
    6. ':' → logprob: -5.3258466720581055
    7. '):
' → logprob: -5.4508466720581055
    8. 'minimum' → logprob: -6.0758466720581055
    9. ',' → logprob: -6.7008466720581055
    10. ')
' → logprob: -7.0758466720581055

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013223844580352306
    2. 'minimum' → logprob: -8.001322746276855
    3. 'if' → logprob: -8.751322746276855
    4. 'for' → logprob: -8.876322746276855
    5. '    
' → logprob: -9.001322746276855
    6. 'distance' → logprob: -9.126322746276855
    7. ' if' → logprob: -9.251322746276855
    8. ' for' → logprob: -9.376322746276855
    9. 'possible' → logprob: -9.501322746276855
    10. 'min' → logprob: -10.376322746276855

Token 119: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1847776621580124
    2. 'if' (adapté à ' if') → logprob: -2.8097777366638184
    3. ' if' → logprob: -3.4347777366638184
    4. 'distance' → logprob: -3.8097777366638184
    5. 'minimum' → logprob: -4.059777736663818
    6. 'for' → logprob: -4.809777736663818
    7. 'diff' → logprob: -5.309777736663818
    8. ' for' → logprob: -5.434777736663818
    9. 'result' → logprob: -5.809777736663818
    10. 'possible' → logprob: -5.809777736663818

Token 120: ' last' (ID: 2174)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.323148638010025
    2. ' last' → logprob: -1.3231486082077026
    3. ' j' → logprob: -4.948148727416992
    4. 'first' → logprob: -6.823148727416992
    5. 'last' → logprob: -7.948148727416992
    6. ' ' → logprob: -8.073148727416992
    7. ' A' → logprob: -8.073148727416992
    8. ' abs' → logprob: -8.573148727416992
    9. ' k' → logprob: -8.823148727416992
    10. 'j' → logprob: -9.573148727416992

Token 121: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9612014293670654
    2. ' <' → logprob: -1.4612014293670654
    3. '<=' → logprob: -1.5862014293670654
    4. ' <=' → logprob: -1.7112014293670654
    5. '-' → logprob: -9.836201667785645
    6. ' ' → logprob: -9.961201667785645
    7. ' -' → logprob: -10.211201667785645
    8. '<n' → logprob: -10.711201667785645
    9. '>=' → logprob: -11.086201667785645
    10. '<int' → logprob: -11.336201667785645

Token 122: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6934669613838196
    2. ' ' → logprob: -0.6934669613838196
    3. ' first' → logprob: -8.818467140197754
    4. 'first' → logprob: -9.443467140197754
    5. 'minimum' → logprob: -10.943467140197754
    6. '  ' → logprob: -11.318467140197754
    7. '1' → logprob: -11.568467140197754
    8. ' ' → logprob: -11.818467140197754
    9. ' minimum' → logprob: -12.130967140197754
    10. 'k' → logprob: -12.193467140197754

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002718329895287752
    2. 'minimum' → logprob: -6.877718448638916
    3. 'first' → logprob: -7.127718448638916
    4. ' ' → logprob: -7.127718448638916
    5. '-' → logprob: -10.752717971801758
    6. ' first' → logprob: -11.377717971801758
    7. '1' → logprob: -11.377717971801758
    8. 'k' → logprob: -12.002717971801758
    9. 'min' → logprob: -12.502717971801758
    10. ' minimum' → logprob: -12.627717971801758

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002701089484617114
    2. ':
' → logprob: -6.002701282501221
    3. '   ' → logprob: -9.377700805664062
    4. ' :' → logprob: -9.502700805664062
    5. ' and' → logprob: -10.377700805664062
    6. ' or' → logprob: -10.627700805664062
    7. '       ' → logprob: -12.377700805664062
    8. 'and' → logprob: -13.377700805664062
    9. ':
' → logprob: -13.502700805664062
    10. ' :
' → logprob: -13.502700805664062

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45881178975105286
    2. ':' → logprob: -1.5838117599487305
    3. ':
' → logprob: -1.8338117599487305
    4. '   ' → logprob: -5.9588117599487305
    5. '):
' → logprob: -9.33381175994873
    6. 'minimum' → logprob: -9.33381175994873
    7. ' minimum' → logprob: -9.45881175994873
    8. ':

' → logprob: -10.83381175994873
    9. ' and' → logprob: -10.83381175994873
    10. ' :
' → logprob: -10.83381175994873

Token 126: ' temp' (ID: 5484)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.4391694664955139
    2. '   ' → logprob: -1.0641694068908691
    3. ' minimum' → logprob: -5.314169406890869
    4. '       ' → logprob: -5.939169406890869
    5. '
' → logprob: -6.189169406890869
    6. '    
' → logprob: -8.314169883728027
    7. ':' → logprob: -9.064169883728027
    8. '           ' → logprob: -9.439169883728027
    9. 'min' → logprob: -9.564169883728027
    10. '        
' → logprob: -9.564169883728027

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137032687664032
    2. '=' → logprob: -1.3137032985687256
    3. '=min' → logprob: -9.063703536987305
    4. '=max' → logprob: -9.938703536987305
    5. '_val' → logprob: -10.438703536987305
    6. 'min' → logprob: -10.688703536987305
    7. 't' → logprob: -10.938703536987305
    8. '_min' → logprob: -11.188703536987305
    9. 'imum' → logprob: -11.313703536987305
    10. 'val' → logprob: -11.313703536987305

Token 128: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5929579734802246
    2. 'first' → logprob: -1.8429579734802246
    3. 'min' → logprob: -2.4679579734802246
    4. '-' → logprob: -2.9679579734802246
    5. ' abs' → logprob: -3.0929579734802246
    6. '-min' → logprob: -3.5929579734802246
    7. ' first' → logprob: -4.092957973480225
    8. 'last' → logprob: -4.092957973480225
    9. '-first' → logprob: -4.217957973480225
    10. 'max' → logprob: -4.467957973480225

Token 129: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.5775842666625977
    2. '(last' → logprob: -0.8275842666625977
    3. '(' → logprob: -6.702584266662598
    4. '(min' → logprob: -8.577584266662598
    5. 'first' → logprob: -8.827584266662598
    6. 'last' → logprob: -9.827584266662598
    7. '(A' → logprob: -12.077584266662598
    8. '(left' → logprob: -12.077584266662598
    9. '(max' → logprob: -12.827584266662598
    10. '(abs' → logprob: -13.327584266662598

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030846670269966125
    2. ' )' → logprob: -6.003084659576416
    3. ')**' → logprob: -8.003085136413574
    4. ')+' → logprob: -9.128085136413574
    5. ' -' → logprob: -9.378085136413574
    6. '-' → logprob: -10.253085136413574
    7. '+' → logprob: -11.378085136413574
    8. ')*' → logprob: -12.503085136413574
    9. ')#' → logprob: -12.628085136413574
    10. ')-' → logprob: -12.628085136413574

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5677865147590637
    2. '       ' → logprob: -1.067786455154419
    3. '+' → logprob: -3.317786455154419
    4. '-' → logprob: -3.942786455154419
    5. '*' → logprob: -5.067786693572998
    6. 'if' → logprob: -5.567786693572998
    7. ' -' → logprob: -5.692786693572998
    8. ' if' → logprob: -5.692786693572998
    9. ' +' → logprob: -5.817786693572998
    10. 'else' → logprob: -5.942786693572998

Token 132: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6634305119514465
    2. '   ' → logprob: -0.7884305119514465
    3. 'elif' → logprob: -3.6634304523468018
    4. ' else' → logprob: -5.413430690765381
    5. ' elif' → logprob: -8.663430213928223
    6. '       ' → logprob: -10.163430213928223
    7. '.' → logprob: -11.288430213928223
    8. '  ' → logprob: -11.788430213928223
    9. ':' → logprob: -12.163430213928223
    10. '    
' → logprob: -12.163430213928223

Token 133: ' tout' (ID: 5501)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03210262209177017
    2. ' elif' → logprob: -3.782102584838867
    3. 'else' → logprob: -4.782102584838867
    4. ' else' → logprob: -7.782102584838867
    5. 'el' → logprob: -11.407102584838867
    6. '   ' → logprob: -11.907102584838867
    7. '	elif' → logprob: -14.032102584838867
    8. 'elseif' → logprob: -14.282102584838867
    9. ')' → logprob: -14.407102584838867
    10. 'e' → logprob: -15.032102584838867

Token 134: ' à' (ID: 1221)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.12157540768384933
    2. ' elif' → logprob: -2.246575355529785
    3. '   ' → logprob: -5.121575355529785
    4. 'el' → logprob: -7.246575355529785
    5. 'else' → logprob: -7.246575355529785
    6. '=' → logprob: -8.121575355529785
    7. ' else' → logprob: -8.621575355529785
    8. ' =' → logprob: -8.746575355529785
    9. ':' → logprob: -8.996575355529785
    10. '	elif' → logprob: -9.371575355529785

Token 135: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.015716060996055603
    2. ' droite' → logprob: -4.390716075897217
    3. 'd' → logprob: -5.890716075897217
    4. 'g' → logprob: -8.890715599060059
    5. ' gauche' → logprob: -9.765715599060059
    6. 'l' → logprob: -10.015715599060059
    7. '-dro' → logprob: -10.140715599060059
    8. ' ' → logprob: -10.515715599060059
    9. 'right' → logprob: -11.015715599060059
    10. '#' → logprob: -11.015715599060059

Token 136: ' ?
' (ID: 19740)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10328807681798935
    2. 'else' → logprob: -3.228288173675537
    3. '   ' → logprob: -3.353288173675537
    4. ':' → logprob: -4.478288173675537
    5. ' elif' → logprob: -4.478288173675537
    6. ' else' → logprob: -7.228288173675537
    7. '	elif' → logprob: -9.478287696838379
    8. 'elseif' → logprob: -11.853287696838379
    9. '  ' → logprob: -12.103287696838379
    10. '       ' → logprob: -12.353287696838379

Token 137: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.04993368685245514
    2. '   ' → logprob: -3.799933671951294
    3. ' elif' → logprob: -4.049933910369873
    4. 'else' → logprob: -4.799933910369873
    5. ':' → logprob: -8.049933433532715
    6. ' else' → logprob: -8.174933433532715
    7. '	elif' → logprob: -9.549933433532715
    8. '  ' → logprob: -13.174933433532715
    9. '=' → logprob: -14.049933433532715
    10. '```' → logprob: -14.049933433532715

Token 138: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0321485735476017
    2. '   ' → logprob: -4.157148361206055
    3. ' elif' → logprob: -4.782148361206055
    4. 'else' → logprob: -4.907148361206055
    5. ' else' → logprob: -8.532148361206055
    6. ':' → logprob: -11.907148361206055
    7. '	elif' → logprob: -12.532148361206055
    8. '```' → logprob: -13.657148361206055
    9. 'el' → logprob: -14.032148361206055
    10. 'elseif' → logprob: -14.282148361206055

Token 139: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.11334099620580673
    2. ' first' → logprob: -2.2383410930633545
    3. 'last' → logprob: -8.113341331481934
    4. ' last' → logprob: -9.488341331481934
    5. ' ' → logprob: -9.738341331481934
    6. '   ' → logprob: -10.613341331481934
    7. 'abs' → logprob: -11.238341331481934
    8. 'minimum' → logprob: -11.363341331481934
    9. '  ' → logprob: -12.363341331481934
    10. ' minimum' → logprob: -12.488341331481934

Token 140: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.18021729588508606
    2. ' >=' → logprob: -1.8052172660827637
    3. '<=' → logprob: -8.680217742919922
    4. '<' → logprob: -9.055217742919922
    5. '>' → logprob: -9.305217742919922
    6. ' <' → logprob: -10.180217742919922
    7. ' >' → logprob: -10.930217742919922
    8. ' <=' → logprob: -11.055217742919922
    9. ' ' → logprob: -11.555217742919922
    10. '   ' → logprob: -12.055217742919922

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00760698551312089
    2. ' ' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.132607460021973
    4. '  ' → logprob: -17.257606506347656
    5. '1' → logprob: -18.382606506347656
    6. '۰' → logprob: -18.632606506347656
    7. '    ' → logprob: -18.757606506347656
    8. '
' → logprob: -19.132606506347656
    9. '```' → logprob: -19.757606506347656
    10. ' ' → logprob: -19.820106506347656

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -18.625024795532227
    4. '۰' → logprob: -18.875024795532227
    5. '  ' → logprob: -19.750024795532227
    6. '<|end|>' → logprob: -20.125024795532227
    7. ')' → logprob: -20.375024795532227
    8. '   ' → logprob: -20.500024795532227
    9. '０' → logprob: -21.750024795532227
    10. '  ' → logprob: -22.000024795532227

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014210288412868977
    2. ':
' → logprob: -4.264210224151611
    3. '       ' → logprob: -10.26421070098877
    4. '   ' → logprob: -12.51421070098877
    5. ' :' → logprob: -12.51421070098877
    6. ':
' → logprob: -13.13921070098877
    7. '):' → logprob: -13.88921070098877
    8. '):
' → logprob: -14.51421070098877
    9. ':

' → logprob: -14.51421070098877
    10. ' :
' → logprob: -14.76421070098877

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06918440014123917
    2. 'temp' → logprob: -2.8191843032836914
    3. ':' → logprob: -5.569184303283691
    4. ':
' → logprob: -5.944184303283691
    5. '   ' → logprob: -7.319184303283691
    6. ' temp' → logprob: -9.819184303283691
    7. '	temp' → logprob: -11.819184303283691
    8. '):
' → logprob: -12.069184303283691
    9. '      ' → logprob: -12.569184303283691
    10. '           ' → logprob: -12.819184303283691

Token 145: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.0020027460996061563
    2. '       ' → logprob: -6.252002716064453
    3. ' temp' → logprob: -9.877002716064453
    4. '   ' → logprob: -11.377002716064453
    5. 'tmp' → logprob: -11.877002716064453
    6. '	temp' → logprob: -13.127002716064453
    7. 'temporary' → logprob: -14.252002716064453
    8. 'tem' → logprob: -14.752002716064453
    9. '           ' → logprob: -14.877002716064453
    10. 'temps' → logprob: -15.252002716064453

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022564470767975
    2. '=' → logprob: -1.9102256298065186
    3. ' +=' → logprob: -14.160225868225098
    4. '+=' → logprob: -14.910225868225098
    5. ' ' → logprob: -15.160225868225098
    6. '＝' → logprob: -17.03522491455078
    7. '=int' → logprob: -17.28522491455078
    8. '    ' → logprob: -17.78522491455078
    9. '   ' → logprob: -17.78522491455078
    10. ' *=' → logprob: -17.91022491455078

Token 147: ' abs' (ID: 8443)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0020554543007165194
    2. ' last' → logprob: -6.502055644989014
    3. 'abs' → logprob: -7.502055644989014
    4. ' abs' → logprob: -13.877055168151855
    5. 'first' → logprob: -16.752056121826172
    6. '	last' → logprob: -18.252056121826172
    7. '(last' → logprob: -18.377056121826172
    8. '   ' → logprob: -18.377056121826172
    9. 'Last' → logprob: -19.502056121826172
    10. ' ' → logprob: -19.627056121826172

Token 148: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.00020425561524461955
    2. 'last' → logprob: -8.500204086303711
    3. ' last' → logprob: -14.500204086303711
    4. '(first' → logprob: -16.25020408630371
    5. '(' → logprob: -16.75020408630371
    6. '[last' → logprob: -17.50020408630371
    7. 'Last' → logprob: -17.87520408630371
    8. '	last' → logprob: -18.25020408630371
    9. ',last' → logprob: -18.62520408630371
    10. ' (' → logprob: -19.37520408630371

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004176833899691701
    2. ' )' → logprob: -8.375417709350586
    3. '   ' → logprob: -9.125417709350586
    4. ')
' → logprob: -9.500417709350586
    5. ')#' → logprob: -13.625417709350586
    6. '  ' → logprob: -14.625417709350586
    7. ' ' → logprob: -14.750417709350586
    8. ')
' → logprob: -15.125417709350586
    9. ')+' → logprob: -15.500417709350586
    10. '))' → logprob: -16.125417709350586

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1273256540298462
    2. 'else' → logprob: -2.1273255348205566
    3. ' else' → logprob: -7.877325534820557
    4. ')' → logprob: -11.877326011657715
    5. '	else' → logprob: -12.502326011657715
    6. 'elif' → logprob: -12.877326011657715
    7. '<|end|>' → logprob: -13.002326011657715
    8. '_else' → logprob: -14.127326011657715
    9. '  ' → logprob: -14.377326011657715
    10. '    
' → logprob: -15.252326011657715

Token 151: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20265279710292816
    2. 'else' (adapté à ' else') → logprob: -1.7026528120040894
    3. ' else' → logprob: -6.702652931213379
    4. '	else' → logprob: -11.952652931213379
    5. '  ' → logprob: -13.827652931213379
    6. '_else' → logprob: -14.077652931213379
    7. '```' → logprob: -14.577652931213379
    8. ')' → logprob: -14.702652931213379
    9. '       ' → logprob: -14.827652931213379
    10. '.' → logprob: -15.077652931213379

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006654949975199997
    2. ':
' → logprob: -7.375665664672852
    3. ' :' → logprob: -10.375665664672852
    4. '       ' → logprob: -12.125665664672852
    5. '   ' → logprob: -13.625665664672852
    6. ':
' → logprob: -14.250665664672852
    7. ' :
' → logprob: -15.875665664672852
    8. ':

' → logprob: -16.00066566467285
    9. '):' → logprob: -16.12566566467285
    10. '=' → logprob: -17.37566566467285

Token 153: '       ' (ID: 309)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.14768461883068085
    2. '       ' → logprob: -2.3976845741271973
    3. '   ' → logprob: -3.5226845741271973
    4. ' temp' → logprob: -4.272684574127197
    5. 'abs' → logprob: -6.272684574127197
    6. 'min' → logprob: -7.147684574127197
    7. ' min' → logprob: -9.522685050964355
    8. '	temp' → logprob: -10.397685050964355
    9. ' abs' → logprob: -10.647685050964355
    10. 'tmp' → logprob: -10.897685050964355

Token 154: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.009648189879953861
    2. 'min' → logprob: -5.384648323059082
    3. ' temp' → logprob: -5.634648323059082
    4. 'abs' → logprob: -6.759648323059082
    5. '   ' → logprob: -8.759648323059082
    6. ' min' → logprob: -10.259648323059082
    7. 'tmp' → logprob: -10.509648323059082
    8. '2' → logprob: -10.634648323059082
    9. '       ' → logprob: -11.009648323059082
    10. 'temps' → logprob: -11.884648323059082

Token 155: ' passage' (ID: 26368)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.014121190644800663
    2. 'min' → logprob: -4.389121055603027
    3. 'abs' → logprob: -7.139121055603027
    4. '2' → logprob: -7.514121055603027
    5. ' temp' → logprob: -9.014121055603027
    6. '   ' → logprob: -9.264121055603027
    7. 'tmp' → logprob: -10.389121055603027
    8. 'temps' → logprob: -11.889121055603027
    9. ' min' → logprob: -12.139121055603027
    10. 'first' → logprob: -13.639121055603027

Token 156: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09093929082155228
    2. '=' → logprob: -2.9659392833709717
    3. '       ' → logprob: -4.465939521789551
    4. '   ' → logprob: -4.590939521789551
    5. 'temp' → logprob: -4.965939521789551
    6. ' à' → logprob: -6.590939521789551
    7. 'to' → logprob: -6.590939521789551
    8. 's' → logprob: -7.340939521789551
    9. 'à' → logprob: -7.465939521789551
    10. '_to' → logprob: -7.840939521789551

Token 157: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.724055290222168
    2. 'min' → logprob: -0.849055290222168
    3. 'abs' → logprob: -3.099055290222168
    4. 'zero' → logprob: -3.224055290222168
    5. 'first' → logprob: -6.599055290222168
    6. ' min' → logprob: -7.349055290222168
    7. ' zero' → logprob: -9.099055290222168
    8. ' zéro' → logprob: -9.849055290222168
    9. '2' → logprob: -10.349055290222168
    10. 'max' → logprob: -10.349055290222168

Token 158: '
' (ID: 198)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1922292560338974
    2. '       ' → logprob: -2.4422292709350586
    3. '   ' → logprob: -2.9422292709350586
    4. ' temp' → logprob: -4.317229270935059
    5. ':' → logprob: -5.067229270935059
    6. '=' → logprob: -5.317229270935059
    7. ' =' → logprob: -5.317229270935059
    8. '        
' → logprob: -6.192229270935059
    9. '    
' → logprob: -6.692229270935059
    10. '
' → logprob: -7.692229270935059

Token 159: '       ' (ID: 309)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.32562199234962463
    2. '       ' → logprob: -1.3256219625473022
    3. ' temp' → logprob: -4.575622081756592
    4. '   ' → logprob: -7.200622081756592
    5. '=' → logprob: -7.700622081756592
    6. '        
' → logprob: -8.825621604919434
    7. '
' → logprob: -8.950621604919434
    8. ' =' → logprob: -9.075621604919434
    9. '```' → logprob: -9.200621604919434
    10. ',' → logprob: -9.950621604919434

Token 160: ' temp' (ID: 5484)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.32503217458724976
    2. 'temp' (adapté à ' temp') → logprob: -1.3250322341918945
    3. '2' → logprob: -5.0750322341918945
    4. 'abs' → logprob: -5.3250322341918945
    5. ' min' → logprob: -7.7000322341918945
    6. ' temp' → logprob: -9.700032234191895
    7. 'tmp' → logprob: -10.200032234191895
    8. '   ' → logprob: -11.450032234191895
    9. 'temps' → logprob: -12.075032234191895
    10. 'minimum' → logprob: -12.075032234191895

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519311308860779
    2. ' =' → logprob: -1.5019311904907227
    3. '=min' → logprob: -13.876931190490723
    4. '=int' → logprob: -15.001931190490723
    5. ' ' → logprob: -15.376931190490723
    6. '＝' → logprob: -15.751931190490723
    7. '=max' → logprob: -16.001930236816406
    8. '   ' → logprob: -16.251930236816406
    9. '=

' → logprob: -16.751930236816406
    10. '=}' → logprob: -17.751930236816406

Token 162: ' abs' (ID: 8443)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004560426808893681
    2. ' min' → logprob: -5.754560470581055
    3. 'abs' → logprob: -7.004560470581055
    4. '2' → logprob: -7.754560470581055
    5. '-min' → logprob: -10.629560470581055
    6. ' abs' → logprob: -11.629560470581055
    7. '(min' → logprob: -12.629560470581055
    8. 'max' → logprob: -12.754560470581055
    9. '   ' → logprob: -13.379560470581055
    10. '	min' → logprob: -13.629560470581055

Token 163: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.00021307668066583574
    2. 'first' → logprob: -8.500212669372559
    3. '(last' → logprob: -11.750212669372559
    4. '(min' → logprob: -13.875212669372559
    5. '(' → logprob: -14.625212669372559
    6. '[first' → logprob: -15.625212669372559
    7. '(f' → logprob: -16.125213623046875
    8. '	first' → logprob: -17.750213623046875
    9. '(fi' → logprob: -18.500213623046875
    10. '(second' → logprob: -18.625213623046875

Token 164: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01263713650405407
    2. ')*' → logprob: -4.387637138366699
    3. ' )' → logprob: -9.6376371383667
    4. ')+' → logprob: -9.7626371383667
    5. '*' → logprob: -12.7626371383667
    6. '*)' → logprob: -13.5126371383667
    7. ')
' → logprob: -15.1376371383667
    8. '   ' → logprob: -16.762636184692383
    9. '）' → logprob: -16.762636184692383
    10. ')**' → logprob: -16.762636184692383

Token 165: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033284954261034727
    2. ' ' → logprob: -6.753328323364258
    3. '*' → logprob: -7.003328323364258
    4. '+' → logprob: -7.753328323364258
    5. ' +' → logprob: -8.128328323364258
    6. 'abs' → logprob: -8.628328323364258
    7. '1' → logprob: -9.378328323364258
    8. '
' → logprob: -9.753328323364258
    9. '(' → logprob: -10.378328323364258
    10. ')' → logprob: -10.503328323364258

Token 166: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269298940896988
    2. '+' → logprob: -2.126929998397827
    3. ' ' → logprob: -13.626930236816406
    4. ' ' → logprob: -15.126930236816406
    5. ' plus' → logprob: -15.501930236816406
    6. '＋' → logprob: -17.376930236816406
    7. ')' → logprob: -17.876930236816406
    8. '+r' → logprob: -18.001930236816406
    9. ' +
' → logprob: -18.126930236816406
    10. '    ' → logprob: -18.376930236816406

Token 167: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.25193870067596436
    2. 'abs' → logprob: -1.5019387006759644
    3. ' last' → logprob: -12.376938819885254
    4. 'last' → logprob: -12.751938819885254
    5. '(abs' → logprob: -13.501938819885254
    6. ' ' → logprob: -14.501938819885254
    7. ' ' → logprob: -15.001938819885254
    8. '_abs' → logprob: -15.626938819885254
    9. '   ' → logprob: -16.126937866210938
    10. '.abs' → logprob: -16.751937866210938

Token 168: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -1.1472419600977446e-06
    2. 'last' → logprob: -13.875000953674316
    3. '(' → logprob: -16.625001907348633
    4. ' last' → logprob: -17.750001907348633
    5. '[last' → logprob: -17.875001907348633
    6. ',last' → logprob: -19.250001907348633
    7. '	last' → logprob: -20.000001907348633
    8. ':last' → logprob: -20.500001907348633
    9. ' (' → logprob: -20.750001907348633
    10. '(l' → logprob: -21.125001907348633

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.480199954239652e-05
    2. ' )' → logprob: -9.750064849853516
    3. ')
' → logprob: -13.375064849853516
    4. '())' → logprob: -13.625064849853516
    5. ')*' → logprob: -13.750064849853516
    6. '*)' → logprob: -13.875064849853516
    7. '<|end|>' → logprob: -14.375064849853516
    8. ')#' → logprob: -14.750064849853516
    9. '))' → logprob: -14.875064849853516
    10. ')return' → logprob: -16.625064849853516

Token 170: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02825470082461834
    2. ' abs' → logprob: -4.403254508972168
    3. '2' → logprob: -4.903254508972168
    4. ' +' → logprob: -5.903254508972168
    5. '<|end|>' → logprob: -6.278254508972168
    6. ' *' → logprob: -6.403254508972168
    7. '*' → logprob: -6.653254508972168
    8. '  ' → logprob: -8.778254508972168
    9. ')' → logprob: -9.153254508972168
    10. 'abs' → logprob: -9.403254508972168

Token 172: ' va' (ID: 3423)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.07008504122495651
    2. '<|end|>' → logprob: -3.070085048675537
    3. '<|end|>' → logprob: -5.070085048675537
    4. 'continue' → logprob: -5.320085048675537
    5. ')' → logprob: -6.570085048675537
    6. '.' → logprob: -7.195085048675537
    7. ' ' → logprob: -7.320085048675537
    8. ' calculate' → logprob: -7.570085048675537
    9. ' continuer' → logprob: -7.820085048675537
    10. 'contin' → logprob: -7.820085048675537

Token 173: ' à' (ID: 1221)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0060476064682007
    2. ' revenir' → logprob: -1.7560476064682007
    3. 'back' → logprob: -2.2560477256774902
    4. ' back' → logprob: -2.3810477256774902
    5. 'à' → logprob: -3.0060477256774902
    6. ' à' → logprob: -3.2560477256774902
    7. ' first' → logprob: -3.2560477256774902
    8. ' vers' → logprob: -3.5060477256774902
    9. ' au' → logprob: -3.7560477256774902
    10. 'first' → logprob: -4.25604772567749

Token 174: ' gauche' (ID: 58367)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.32048583030700684
    2. 'zero' → logprob: -1.6954858303070068
    3. ' zero' → logprob: -3.445485830307007
    4. ' last' → logprob: -3.820485830307007
    5. ' zéro' → logprob: -3.945485830307007
    6. 'first' → logprob: -4.695486068725586
    7. 'la' → logprob: -5.570486068725586
    8. 'z' → logprob: -6.820486068725586
    9. '0' → logprob: -7.445486068725586
    10. ' la' → logprob: -7.445486068725586

Token 175: ' puis' (ID: 18766)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.002348411362618208
    2. '+' → logprob: -6.50234842300415
    3. ' ' → logprob: -7.37734842300415
    4. '<|end|>' → logprob: -9.002347946166992
    5. ' plus' → logprob: -9.877347946166992
    6. ' ' → logprob: -10.502347946166992
    7. ' *' → logprob: -12.502347946166992
    8. ' +
' → logprob: -12.502347946166992
    9. '   ' → logprob: -13.002347946166992
    10. '  ' → logprob: -13.127347946166992

Token 176: ' à' (ID: 1221)
  Prédit: ' revenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' revenir' → logprob: -0.238671213388443
    2. ' last' → logprob: -2.86367130279541
    3. 'last' → logprob: -2.86367130279541
    4. 'abs' → logprob: -3.48867130279541
    5. ' abs' → logprob: -4.23867130279541
    6. ' back' → logprob: -4.36367130279541
    7. 'right' → logprob: -4.48867130279541
    8. ' aller' → logprob: -4.61367130279541
    9. ' retourner' → logprob: -5.36367130279541
    10. ' right' → logprob: -5.61367130279541

Token 177: ' droite' (ID: 61428)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6765656471252441
    2. 'dro' → logprob: -1.6765656471252441
    3. 'abs' → logprob: -1.8015656471252441
    4. 'right' → logprob: -2.176565647125244
    5. ' droite' → logprob: -4.301565647125244
    6. 'la' → logprob: -4.676565647125244
    7. 'd' → logprob: -7.051565647125244
    8. ' ' → logprob: -7.551565647125244
    9. ' abs' → logprob: -7.926565647125244
    10. ' last' → logprob: -8.301565170288086

Token 178: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5583550930023193
    2. '+' → logprob: -1.5583550930023193
    3. '<|end|>' → logprob: -1.9333550930023193
    4. ' ' → logprob: -3.1833550930023193
    5. '*' → logprob: -4.558355331420898
    6. '   ' → logprob: -4.683355331420898
    7. '<|end|>' → logprob: -6.183355331420898
    8. ')' → logprob: -6.433355331420898
    9. ' or' → logprob: -6.808355331420898
    10. ' *' → logprob: -6.808355331420898

Token 180: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -1.2512375116348267
    2. '+' → logprob: -1.5012375116348267
    3. ' +' → logprob: -1.5012375116348267
    4. ' temp' → logprob: -2.251237392425537
    5. ' ' → logprob: -2.876237392425537
    6. '
' → logprob: -3.876237392425537
    7. '       ' → logprob: -4.001237392425537
    8. ' or' → logprob: -4.251237392425537
    9. '<|end|>' → logprob: -4.501237392425537
    10. ' 
' → logprob: -4.501237392425537

Token 181: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38707736134529114
    2. '=' → logprob: -1.1370773315429688
    3. '=min' → logprob: -8.512077331542969
    4. '+=' → logprob: -13.137077331542969
    5. 'min' → logprob: -13.512077331542969
    6. ',' → logprob: -14.262077331542969
    7. '=max' → logprob: -14.887077331542969
    8. ')' → logprob: -15.387077331542969
    9. ' +=' → logprob: -16.01207733154297
    10. '=}' → logprob: -16.38707733154297

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.451414108276367
    4. '=end' → logprob: -18.076414108276367
    5. '＝' → logprob: -18.201414108276367
    6. '=}' → logprob: -18.826414108276367
    7. ')' → logprob: -19.076414108276367
    8. '<|end|>' → logprob: -19.826414108276367
    9. ' ' → logprob: -19.951414108276367
    10. '=temp' → logprob: -19.951414108276367

Token 183: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12703152000904083
    2. ' abs' → logprob: -2.1270315647125244
    3. '2' → logprob: -9.627031326293945
    4. ' ' → logprob: -11.002031326293945
    5. '(abs' → logprob: -11.252031326293945
    6. '   ' → logprob: -12.127031326293945
    7. '  ' → logprob: -14.002031326293945
    8. 'last' → logprob: -15.002031326293945
    9. '    ' → logprob: -15.127031326293945
    10. ' last' → logprob: -15.627031326293945

Token 184: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.0009273029863834381
    2. '(first' → logprob: -7.000927448272705
    3. 'last' → logprob: -11.250926971435547
    4. '(' → logprob: -12.875926971435547
    5. '[last' → logprob: -16.125926971435547
    6. '(second' → logprob: -17.125926971435547
    7. 'first' → logprob: -17.375926971435547
    8. '(left' → logprob: -17.375926971435547
    9. '(l' → logprob: -17.375926971435547
    10. ' last' → logprob: -17.500926971435547

Token 185: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.011769580654799938
    2. ')' → logprob: -4.761769771575928
    3. '*' → logprob: -5.761769771575928
    4. ' )' → logprob: -12.76176929473877
    5. '*)' → logprob: -14.26176929473877
    6. ' *' → logprob: -14.76176929473877
    7. ']*' → logprob: -15.01176929473877
    8. '()*' → logprob: -16.261770248413086
    9. ')*(' → logprob: -17.886770248413086
    10. '2' → logprob: -17.886770248413086

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '۲' → logprob: -15.875012397766113
    4. ')' → logprob: -16.000011444091797
    5. '
' → logprob: -16.125011444091797
    6. '```' → logprob: -16.250011444091797
    7. '²' → logprob: -16.625011444091797
    8. '２' → logprob: -16.875011444091797
    9. '*' → logprob: -17.500011444091797
    10. '٢' → logprob: -17.812511444091797

Token 187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020699352025986
    2. '+' → logprob: -2.3502070903778076
    3. ' +
' → logprob: -15.850207328796387
    4. '<|end|>' → logprob: -16.47520637512207
    5. ' plus' → logprob: -16.72520637512207
    6. ' ' → logprob: -17.22520637512207
    7. ' ' → logprob: -17.22520637512207
    8. '+
' → logprob: -17.60020637512207
    9. '＋' → logprob: -18.22520637512207
    10. 'import' → logprob: -19.22520637512207

Token 188: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6931567788124084
    2. ' abs' → logprob: -0.6931567788124084
    3. '(abs' → logprob: -11.568157196044922
    4. '.abs' → logprob: -16.318157196044922
    5. '_abs' → logprob: -17.943157196044922
    6. ' first' → logprob: -18.443157196044922
    7. 'first' → logprob: -18.693157196044922
    8. ' ' → logprob: -18.693157196044922
    9. 'Abs' → logprob: -19.193157196044922
    10. ' ' → logprob: -19.568157196044922

Token 189: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -6.182190554682165e-05
    2. 'first' → logprob: -9.750061988830566
    3. '[first' → logprob: -12.625061988830566
    4. ' first' → logprob: -16.75006103515625
    5. ':first' → logprob: -16.87506103515625
    6. '(' → logprob: -17.87506103515625
    7. '(last' → logprob: -18.75006103515625
    8. '(front' → logprob: -18.87506103515625
    9. '	first' → logprob: -19.00006103515625
    10. '(f' → logprob: -19.37506103515625

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001352498889900744
    2. ' )' → logprob: -6.626352310180664
    3. '<|end|>' → logprob: -11.001352310180664
    4. ')#' → logprob: -12.001352310180664
    5. ')
' → logprob: -13.751352310180664
    6. '#' → logprob: -14.126352310180664
    7. ']' → logprob: -14.501352310180664
    8. ' ' → logprob: -15.251352310180664
    9. '}' → logprob: -16.251352310180664
    10. ')...' → logprob: -16.251352310180664

Token 191: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03906405344605446
    2. '   ' → logprob: -4.164063930511475
    3. '<|end|>' → logprob: -4.664063930511475
    4. '
' → logprob: -5.164063930511475
    5. 'temp' → logprob: -6.414063930511475
    6. ' temp' → logprob: -6.539063930511475
    7. ')' → logprob: -6.789063930511475
    8. '        
' → logprob: -7.414063930511475
    9. ',' → logprob: -7.789063930511475
    10. ' if' → logprob: -7.914063930511475

Token 192: ' inverse' (ID: 53743)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.4698867797851562
    2. ' temp' → logprob: -1.7198867797851562
    3. ' min' → logprob: -1.8448867797851562
    4. 'abs' → logprob: -1.8448867797851562
    5. 'temp' → logprob: -2.2198867797851562
    6. ' if' → logprob: -2.7198867797851562
    7. 'min' → logprob: -2.7198867797851562
    8. 'if' → logprob: -3.8448867797851562
    9. '<|end|>' → logprob: -5.469886779785156
    10. ' ' → logprob: -5.969886779785156

Token 193: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11037244647741318
    2. '
' → logprob: -2.485372543334961
    3. '   ' → logprob: -4.735372543334961
    4. '<|end|>' → logprob: -4.985372543334961
    5. '        
' → logprob: -6.235372543334961
    6. ' if' → logprob: -6.610372543334961
    7. '
' → logprob: -7.610372543334961
    8. ')' → logprob: -7.860372543334961
    9. ',' → logprob: -8.235372543334961
    10. '<|end|>' → logprob: -8.485372543334961

Token 194: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19917699694633484
    2. ' if' → logprob: -2.4491770267486572
    3. '<|end|>' → logprob: -2.8241770267486572
    4. 'temp' → logprob: -4.449176788330078
    5. '       ' → logprob: -4.574176788330078
    6. 'if' → logprob: -5.199176788330078
    7. ' ' → logprob: -6.449176788330078
    8. '<|end|>' → logprob: -6.949176788330078
    9. ')' → logprob: -7.324176788330078
    10. ' temp' → logprob: -7.449176788330078

Token 195: ' if' (ID: 538)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4306086599826813
    2. ' temp' → logprob: -1.3056086301803589
    3. ' if' → logprob: -2.6806087493896484
    4. 'if' (adapté à ' if') → logprob: -4.930608749389648
    5. '       ' → logprob: -6.305608749389648
    6. '   ' → logprob: -6.805608749389648
    7. '	temp' → logprob: -9.430608749389648
    8. '<|end|>' → logprob: -10.805608749389648
    9. ' ' → logprob: -11.055608749389648
    10. '[temp' → logprob: -11.430608749389648

Token 196: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.31326526403427124
    2. 'temp' → logprob: -1.313265323638916
    3. '(temp' → logprob: -13.438264846801758
    4. '	temp' → logprob: -13.438264846801758
    5. ' ' → logprob: -15.438264846801758
    6. '$temp' → logprob: -15.688264846801758
    7. '[temp' → logprob: -16.563264846801758
    8. 'Temp' → logprob: -16.813264846801758
    9. 'temps' → logprob: -17.188264846801758
    10. '_temp' → logprob: -17.438264846801758

Token 197: '2' (ID: 17)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4287107288837433
    2. ' >' → logprob: -1.053710699081421
    3. '()>' → logprob: -13.1787109375
    4. '<' → logprob: -13.6787109375
    5. '><' → logprob: -13.8037109375
    6. '2' → logprob: -13.8037109375
    7. '＞' → logprob: -13.9287109375
    8. '>=' → logprob: -14.8037109375
    9. ' <' → logprob: -15.0537109375
    10. '">' → logprob: -15.1787109375

Token 198: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6326280236244202
    2. '<' → logprob: -0.7576280236244202
    3. ' ' → logprob: -12.382628440856934
    4. '<|end|>' → logprob: -12.632628440856934
    5. '<n' → logprob: -12.757628440856934
    6. '<int' → logprob: -12.882628440856934
    7. '<size' → logprob: -13.382628440856934
    8. '<len' → logprob: -13.382628440856934
    9. ')' → logprob: -13.757628440856934
    10. '<m' → logprob: -13.882628440856934

Token 199: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.029751762747764587
    2. ' temp' → logprob: -3.529751777648926
    3. '(temp' → logprob: -14.779751777648926
    4. '	temp' → logprob: -14.904751777648926
    5. 'tmp' → logprob: -15.154751777648926
    6. 'temps' → logprob: -15.904751777648926
    7. '$temp' → logprob: -16.40475082397461
    8. '[temp' → logprob: -17.02975082397461
    9. '_temp' → logprob: -17.52975082397461
    10. 'tem' → logprob: -17.52975082397461

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22553697228431702
    2. ':
' → logprob: -1.6005369424819946
    3. ' :
' → logprob: -9.850537300109863
    4. ' :' → logprob: -10.725537300109863
    5. ':
' → logprob: -11.100537300109863
    6. '       ' → logprob: -11.475537300109863
    7. '):
' → logprob: -11.475537300109863
    8. '):' → logprob: -12.225537300109863
    9. '           ' → logprob: -12.475537300109863
    10. '   ' → logprob: -13.600537300109863

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28668901324272156
    2. 'temp' → logprob: -1.786689043045044
    3. ' temp' → logprob: -2.911689043045044
    4. '       ' → logprob: -3.661689043045044
    5. '   ' → logprob: -7.411688804626465
    6. '	temp' → logprob: -7.911688804626465
    7. ',temp' → logprob: -8.661688804626465
    8. '
' → logprob: -9.286688804626465
    9. '	       ' → logprob: -9.786688804626465
    10. '[temp' → logprob: -9.786688804626465

Token 202: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.4741673767566681
    2. 'temp' (adapté à ' temp') → logprob: -0.9741673469543457
    3. '	temp' → logprob: -9.849167823791504
    4. '
' → logprob: -11.474167823791504
    5. '           ' → logprob: -11.599167823791504
    6. '   ' → logprob: -11.849167823791504
    7. '       ' → logprob: -12.724167823791504
    8. '[temp' → logprob: -13.474167823791504
    9. ',temp' → logprob: -13.599167823791504
    10. '$temp' → logprob: -13.599167823791504

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17989331483840942
    2. '=' → logprob: -1.8048932552337646
    3. '2' → logprob: -8.929893493652344
    4. 's' → logprob: -12.679893493652344
    5. ',' → logprob: -12.929893493652344
    6. ' =)' → logprob: -13.054893493652344
    7. ' =
' → logprob: -13.429893493652344
    8. ' ' → logprob: -13.804893493652344
    9. '＝' → logprob: -13.929893493652344
    10. '=temp' → logprob: -14.054893493652344

Token 204: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.014164221473038197
    2. ' temp' → logprob: -4.264164447784424
    3. 'tmp' → logprob: -14.264163970947266
    4. '	temp' → logprob: -16.639163970947266
    5. 'tem' → logprob: -17.264163970947266
    6. 't' → logprob: -18.639163970947266
    7. '(temp' → logprob: -18.764163970947266
    8. 'temps' → logprob: -19.139163970947266
    9. '$temp' → logprob: -19.264163970947266
    10. '[temp' → logprob: -19.889163970947266

Token 205: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. 'temp' → logprob: -14.250000953674316
    3. 'else' → logprob: -17.000001907348633
    4. '_' → logprob: -17.000001907348633
    5. '₂' → logprob: -17.000001907348633
    6. 'elif' → logprob: -17.250001907348633
    7. '۲' → logprob: -17.500001907348633
    8. ' ' → logprob: -18.062501907348633
    9. '=' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.375001907348633

Token 206: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26827794313430786
    2. 'print' → logprob: -1.518277883529663
    3. ' print' → logprob: -4.768278121948242
    4. 'minimum' → logprob: -5.143278121948242
    5. ' minimum' → logprob: -6.393278121948242
    6. '    
' → logprob: -9.893278121948242
    7. '    ' → logprob: -10.393278121948242
    8. '       ' → logprob: -11.018278121948242
    9. '<|end|>' → logprob: -11.018278121948242
    10. 'min' → logprob: -11.143278121948242

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032863326370716095
    2. ' if' → logprob: -3.7828633785247803
    3. 'if' → logprob: -4.657863140106201
    4. 'minimum' → logprob: -10.53286361694336
    5. ' minimum' → logprob: -11.15786361694336
    6. '    
' → logprob: -11.15786361694336
    7. 'print' → logprob: -11.65786361694336
    8. '       ' → logprob: -12.15786361694336
    9. '<|end|>' → logprob: -12.28286361694336
    10. '	if' → logprob: -12.78286361694336

Token 208: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17066946625709534
    2. ' if' → logprob: -2.1706695556640625
    3. 'if' → logprob: -3.1706695556640625
    4. 'minimum' → logprob: -7.4206695556640625
    5. ' minimum' → logprob: -8.545669555664062
    6. '       ' → logprob: -11.920669555664062
    7. '	if' → logprob: -12.170669555664062
    8. '
' → logprob: -12.545669555664062
    9. '    
' → logprob: -12.545669555664062
    10. '  ' → logprob: -12.920669555664062

Token 209: ' Peut' (ID: 116891)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05267249792814255
    2. ' if' → logprob: -3.0526723861694336
    3. '   ' → logprob: -6.052672386169434
    4. 'minimum' → logprob: -6.427672386169434
    5. ' minimum' → logprob: -9.302672386169434
    6. '       ' → logprob: -12.052672386169434
    7. ' ' → logprob: -12.677672386169434
    8. '  ' → logprob: -13.302672386169434
    9. '
' → logprob: -13.427672386169434
    10. '```' → logprob: -13.552672386169434

Token 210: '-être' (ID: 33599)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1721736043691635
    2. '       ' → logprob: -3.297173500061035
    3. ' if' → logprob: -3.672173500061035
    4. '   ' → logprob: -4.297173500061035
    5. 'être' → logprob: -4.547173500061035
    6. '#' → logprob: -4.672173500061035
    7. '-être' → logprob: -4.672173500061035
    8. 'endre' → logprob: -4.797173500061035
    9. 'êt' → logprob: -5.297173500061035
    10. 's' → logprob: -5.547173500061035

Token 211: ' minimum' (ID: 11085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09418667107820511
    2. ' if' → logprob: -2.594186782836914
    3. 'minimum' → logprob: -4.344186782836914
    4. '   ' → logprob: -6.344186782836914
    5. ' minimum' → logprob: -8.469186782836914
    6. '       ' → logprob: -8.719186782836914
    7. 'min' → logprob: -10.219186782836914
    8. 'minimal' → logprob: -11.344186782836914
    9. '	if' → logprob: -11.969186782836914
    10. '
' → logprob: -12.469186782836914

Token 212: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2704334557056427
    2. ' if' → logprob: -1.5204334259033203
    3. ' =' → logprob: -4.27043342590332
    4. '=' → logprob: -6.64543342590332
    5. 'if' → logprob: -6.89543342590332
    6. '	if' → logprob: -7.02043342590332
    7. ',' → logprob: -8.39543342590332
    8. '       ' → logprob: -8.64543342590332
    9. ' minimum' → logprob: -8.64543342590332
    10. ':' → logprob: -8.77043342590332

Token 213: ' !
' (ID: 27498)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0579938106238842
    2. ' if' → logprob: -3.0579938888549805
    3. 'if' → logprob: -4.6829938888549805
    4. 'minimum' → logprob: -9.80799388885498
    5. ' minimum' → logprob: -9.93299388885498
    6. '	if' → logprob: -13.30799388885498
    7. '       ' → logprob: -13.30799388885498
    8. ',' → logprob: -13.30799388885498
    9. '    
' → logprob: -14.30799388885498
    10. '
' → logprob: -14.43299388885498

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022790769580751657
    2. ' if' → logprob: -6.127279281616211
    3. 'if' → logprob: -9.377279281616211
    4. ' minimum' → logprob: -12.002279281616211
    5. 'minimum' → logprob: -13.502279281616211
    6. '    
' → logprob: -14.877279281616211
    7. '
' → logprob: -15.002279281616211
    8. '       ' → logprob: -15.127279281616211
    9. '```' → logprob: -15.502279281616211
    10. '<|end|>' → logprob: -15.752279281616211

Token 215: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25197505950927734
    2. 'if' (adapté à ' if') → logprob: -1.7519750595092773
    3. ' if' → logprob: -3.3769750595092773
    4. 'minimum' → logprob: -4.251975059509277
    5. ' minimum' → logprob: -7.001975059509277
    6. 'min' → logprob: -12.876975059509277
    7. 'Minimum' → logprob: -13.501975059509277
    8. '       ' → logprob: -14.251975059509277
    9. 'minimal' → logprob: -14.251975059509277
    10. '	if' → logprob: -14.501975059509277

Token 216: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.011050998233258724
    2. 'temp' → logprob: -4.511051177978516
    3. '(temp' → logprob: -13.511051177978516
    4. '	temp' → logprob: -13.636051177978516
    5. '[temp' → logprob: -14.761051177978516
    6. '$temp' → logprob: -16.261051177978516
    7. ' ' → logprob: -16.636051177978516
    8. 'tempt' → logprob: -17.886051177978516
    9. '_temp' → logprob: -17.886051177978516
    10. '=temp' → logprob: -17.886051177978516

Token 217: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029751762747764587
    2. '<' → logprob: -3.529751777648926
    3. ' ' → logprob: -15.154751777648926
    4. '<n' → logprob: -15.154751777648926
    5. '<int' → logprob: -15.529751777648926
    6. '<|end|>' → logprob: -15.654751777648926
    7. '<size' → logprob: -16.52975082397461
    8. '<m' → logprob: -17.15475082397461
    9. '<th' → logprob: -17.27975082397461
    10. 'min' → logprob: -17.65475082397461

Token 218: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.004078639671206474
    2. ' minimum' → logprob: -5.5040788650512695
    3. 'minimal' → logprob: -16.254077911376953
    4. 'min' → logprob: -16.504077911376953
    5. '   ' → logprob: -17.379077911376953
    6. '.minimum' → logprob: -17.629077911376953
    7. ' ' → logprob: -18.254077911376953
    8. '  ' → logprob: -19.504077911376953
    9. 'maximum' → logprob: -19.629077911376953
    10. 'mini' → logprob: -19.879077911376953

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010155272670090199
    2. ':
' → logprob: -4.635155200958252
    3. 'minimum' → logprob: -8.63515567779541
    4. ' minimum' → logprob: -8.88515567779541
    5. '=' → logprob: -10.63515567779541
    6. ' :' → logprob: -11.01015567779541
    7. '       ' → logprob: -11.26015567779541
    8. '.minimum' → logprob: -11.76015567779541
    9. ' =' → logprob: -11.88515567779541
    10. 'Minimum' → logprob: -12.13515567779541

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0667300671339035
    2. 'minimum' → logprob: -3.31673002243042
    3. ' minimum' → logprob: -3.56673002243042
    4. '   ' → logprob: -10.566730499267578
    5. '.minimum' → logprob: -13.191730499267578
    6. '<|end|>' → logprob: -13.691730499267578
    7. '           ' → logprob: -13.941730499267578
    8. 'Minimum' → logprob: -13.941730499267578
    9. '	min' → logprob: -14.441730499267578
    10. 'min' → logprob: -15.066730499267578

Token 221: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5759990215301514
    2. 'minimum' (adapté à ' minimum') → logprob: -0.8259990215301514
    3. '   ' → logprob: -10.32599925994873
    4. '       ' → logprob: -10.70099925994873
    5. 'Minimum' → logprob: -13.45099925994873
    6. 'min' → logprob: -13.82599925994873
    7. '.minimum' → logprob: -14.07599925994873
    8. '           ' → logprob: -15.07599925994873
    9. ' mínimo' → logprob: -15.57599925994873
    10. ' minimo' → logprob: -16.200998306274414

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602245420217514
    2. '=' → logprob: -1.9102245569229126
    3. '＝' → logprob: -15.035224914550781
    4. ' ' → logprob: -16.41022491455078
    5. '.=' → logprob: -17.41022491455078
    6. '<|end|>' → logprob: -17.91022491455078
    7. ',' → logprob: -18.78522491455078
    8. '=temp' → logprob: -18.91022491455078
    9. ' =)' → logprob: -19.03522491455078
    10. 's' → logprob: -19.41022491455078

Token 223: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.10020667314529419
    2. ' temp' → logprob: -2.3502066135406494
    3. 'tem' → logprob: -17.10020637512207
    4. '	temp' → logprob: -17.72520637512207
    5. 'tmp' → logprob: -17.85020637512207
    6. '(temp' → logprob: -18.85020637512207
    7. '$temp' → logprob: -19.35020637512207
    8. 't' → logprob: -19.97520637512207
    9. '[temp' → logprob: -20.10020637512207
    10. '_temp' → logprob: -20.72520637512207

Token 224: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005283685750328004
    2. '
' → logprob: -7.750528335571289
    3. ' print' → logprob: -9.250528335571289
    4. ' 
' → logprob: -14.875528335571289
    5. '
' → logprob: -15.000528335571289
    6. ')' → logprob: -15.125528335571289
    7. '```' → logprob: -15.500528335571289
    8. '

' → logprob: -15.625528335571289
    9. '(print' → logprob: -16.37552833557129
    10. '    
' → logprob: -16.87552833557129

Token 225: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.643152740551159e-05
    2. ' print' → logprob: -10.750036239624023
    3. '
' → logprob: -11.125036239624023
    4. '
' → logprob: -16.375036239624023
    5. '(print' → logprob: -17.375036239624023
    6. ')' → logprob: -18.125036239624023
    7. ' 
' → logprob: -18.250036239624023
    8. '

' → logprob: -18.625036239624023
    9. '.print' → logprob: -18.750036239624023
    10. '#print' → logprob: -19.375036239624023

Token 226: '(int' (ID: 2742)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00043138445471413434
    2. '(' → logprob: -7.750431537628174
    3. 'minimum' → logprob: -15.375431060791016
    4. '()' → logprob: -15.625431060791016
    5. '(max' → logprob: -16.000431060791016
    6. ' (' → logprob: -17.625431060791016
    7. '(m' → logprob: -17.625431060791016
    8. '(int' → logprob: -17.750431060791016
    9. '(f' → logprob: -18.375431060791016
    10. '(
' → logprob: -18.625431060791016

Token 227: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. 'minimum' → logprob: -13.875004768371582
    4. ' minimum' → logprob: -17.500003814697266
    5. '(
' → logprob: -19.250003814697266
    6. ')' → logprob: -19.250003814697266
    7. ' (' → logprob: -19.250003814697266
    8. '(max' → logprob: -19.375003814697266
    9. '(round' → logprob: -19.500003814697266
    10. '	min' → logprob: -19.500003814697266

Token 228: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0003606104583013803
    2. 'um' → logprob: -8.125360488891602
    3. 'ium' → logprob: -10.000360488891602
    4. 'minimum' → logprob: -11.250360488891602
    5. 'inum' → logprob: -12.500360488891602
    6. 'inium' → logprob: -13.500360488891602
    7. 'im' → logprob: -14.750360488891602
    8. 'mum' → logprob: -15.625360488891602
    9. 'mium' → logprob: -15.875360488891602
    10. 'umin' → logprob: -16.1253604888916

Token 229: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020532844064291567
    2. '))' → logprob: -8.500205039978027
    3. ' )' → logprob: -13.500205039978027
    4. ')`' → logprob: -15.250205039978027
    5. '())' → logprob: -15.750205039978027
    6. ')))' → logprob: -16.500205993652344
    7. ')}' → logprob: -17.000205993652344
    8. ')
' → logprob: -18.125205993652344
    9. '})' → logprob: -18.375205993652344
    10. '()' → logprob: -18.750205993652344


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 227
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 151
Précision stricte (1ère position): 27.31%
Précision adaptée (1ère position): 29.07%
Précision (top 10): 66.52%
================================================================================
