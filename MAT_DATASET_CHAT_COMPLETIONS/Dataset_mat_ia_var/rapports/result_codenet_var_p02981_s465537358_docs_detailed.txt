================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Lit trois entiers de l'entrée standard :
    - n : le nombre d'éléments ou la quantité désirée.
    - a : le coût unitaire ou une valeur associée à chaque élément.
    - b : une valeur limite ou un plafond maximal.
    Affiche le minimum entre le coût total pour n éléments (a * n) et la limite b.
    """
    # Lecture de trois entiers séparés par des espaces depuis l'entrée standard
    n, a, b = map(int, input().split())

    # Calcul du coût total : coût unitaire multiplié par la quantité
    total_cost = a * n

    # Détermination de la valeur minimale entre le coût total et la limite imposée
    result = min(b, total_cost)

    # Affiche la valeur minimale calculée
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9445580244064331
    2. '    ' → logprob: -1.944558024406433
    3. 'print' → logprob: -2.0695581436157227
    4. ' ' → logprob: -2.1945581436157227
    5. ' pass' → logprob: -2.8195581436157227
    6. 'pass' → logprob: -3.0695581436157227
    7. 'return' → logprob: -3.4445581436157227
    8. '\' → logprob: -3.4445581436157227
    9. '\n' → logprob: -4.944558143615723
    10. '```' → logprob: -4.944558143615723

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.12107007205486298
    2. 'Returns' → logprob: -3.371070146560669
    3. 'This' → logprob: -4.49606990814209
    4. 'Calculate' → logprob: -4.62106990814209
    5. ''''' → logprob: -4.62106990814209
    6. '   ' → logprob: -4.87106990814209
    7. 'Initialize' → logprob: -5.24606990814209
    8. 'Doc' → logprob: -5.49606990814209
    9. 'Generate' → logprob: -5.99606990814209
    10. 'Return' → logprob: -5.99606990814209

Token 6: ' Lit' (ID: 45595)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'This' → logprob: -1.4658902883529663
    2. 'Run' → logprob: -1.7158902883529663
    3. 'Calculate' → logprob: -1.9658902883529663
    4. '"""' → logprob: -2.715890407562256
    5. 'Initialize' → logprob: -2.965890407562256
    6. 'Main' → logprob: -3.215890407562256
    7. 'Process' → logprob: -3.340890407562256
    8. '   ' → logprob: -3.715890407562256
    9. 'Start' → logprob: -4.090890407562256
    10. 'Runs' → logprob: -4.090890407562256

Token 7: ' trois' (ID: 25564)
  Prédit: 'tle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tle' → logprob: -0.29659557342529297
    2. 'er' → logprob: -1.671595573425293
    3. 'e' → logprob: -3.796595573425293
    4. 'ral' → logprob: -4.171595573425293
    5. '"""
' → logprob: -5.421595573425293
    6. 't' → logprob: -5.546595573425293
    7. 'def' → logprob: -5.671595573425293
    8. '   ' → logprob: -5.796595573425293
    9. 'eral' → logprob: -5.796595573425293
    10. 'doc' → logprob: -5.921595573425293

Token 8: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6819400191307068
    2. ' lignes' → logprob: -0.8069400191307068
    3. 'l' → logprob: -3.9319400787353516
    4. ' espaces' → logprob: -4.556940078735352
    5. '   ' → logprob: -4.806940078735352
    6. ' ' → logprob: -6.556940078735352
    7. 'f' → logprob: -6.556940078735352
    8. ' lines' → logprob: -6.806940078735352
    9. '  ' → logprob: -7.056940078735352
    10. ' fichiers' → logprob: -7.181940078735352

Token 9: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0934448316693306
    2. 'ières' → logprob: -2.84344482421875
    3. 'r' → logprob: -4.34344482421875
    4. 'êtes' → logprob: -4.71844482421875
    5. 'etes' → logprob: -5.21844482421875
    6. 'i' → logprob: -6.84344482421875
    7. 'ier' → logprob: -6.96844482421875
    8. 'ires' → logprob: -7.71844482421875
    9. 'ités' → logprob: -8.21844482421875
    10. 'ière' → logprob: -8.84344482421875

Token 10: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7094486951828003
    2. ' ' → logprob: -2.08444881439209
    3. '\n' → logprob: -2.45944881439209
    4. 's' → logprob: -2.70944881439209
    5. ',' → logprob: -2.83444881439209
    6. '  ' → logprob: -2.95944881439209
    7. '\' → logprob: -3.08444881439209
    8. ' ,' → logprob: -4.45944881439209
    9. ' et' → logprob: -4.95944881439209
    10. ' )' → logprob: -5.20944881439209

Token 11: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4232124388217926
    2. ' l' → logprob: -1.6732124090194702
    3. ' input' → logprob: -2.4232125282287598
    4. 'entrée' → logprob: -3.7982125282287598
    5. 'input' → logprob: -4.04821252822876
    6. ' ' → logprob: -5.67321252822876
    7. 'une' → logprob: -5.92321252822876
    8. ' standard' → logprob: -6.04821252822876
    9. 'cl' → logprob: -6.04821252822876
    10. ' la' → logprob: -6.29821252822876

Token 12: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20966103672981262
    2. 'e' → logprob: -2.4596610069274902
    3. ''entrée' → logprob: -2.5846610069274902
    4. ''' → logprob: -4.08466100692749
    5. ''espace' → logprob: -5.70966100692749
    6. ''utilisateur' → logprob: -6.20966100692749
    7. ''a' → logprob: -6.58466100692749
    8. 'entrée' → logprob: -6.95966100692749
    9. 'u' → logprob: -6.95966100692749
    10. 'es' → logprob: -7.08466100692749

Token 13: ' standard' (ID: 7024)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09940918534994125
    2. '   ' → logprob: -3.2244091033935547
    3. '\' → logprob: -3.9744091033935547
    4. ',' → logprob: -4.724409103393555
    5. 's' → logprob: -4.974409103393555
    6. ' ' → logprob: -5.474409103393555
    7. '\s' → logprob: -6.349409103393555
    8. ' \' → logprob: -6.474409103393555
    9. '`' → logprob: -6.599409103393555
    10. '    
' → logprob: -6.724409103393555

Token 14: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4264180660247803
    2. '\n' → logprob: -1.1764180660247803
    3. '\' → logprob: -4.176418304443359
    4. ',' → logprob: -4.426418304443359
    5. ' ' → logprob: -6.176418304443359
    6. '    
' → logprob: -6.176418304443359
    7. '    ' → logprob: -6.301418304443359
    8. '```' → logprob: -6.676418304443359
    9. '  ' → logprob: -7.426418304443359
    10. '`' → logprob: -7.551418304443359

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5758026838302612
    2. '    ' → logprob: -1.9508026838302612
    3. 'n' → logprob: -2.075802803039551
    4. 'a' → logprob: -2.950802803039551
    5. 'r' → logprob: -3.950802803039551
    6. ' ' → logprob: -4.325802803039551
    7. ' n' → logprob: -4.450802803039551
    8. ' a' → logprob: -4.950802803039551
    9. '     ' → logprob: -5.200802803039551
    10. ',' → logprob: -5.200802803039551

Token 16: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04362144321203232
    2. '    ' → logprob: -3.79362154006958
    3. 'n' → logprob: -5.04362154006958
    4. '\n' → logprob: -6.04362154006958
    5. '```' → logprob: -6.29362154006958
    6. 'a' → logprob: -6.54362154006958
    7. ' ' → logprob: -6.91862154006958
    8. '    
' → logprob: -7.04362154006958
    9. '     ' → logprob: -7.16862154006958
    10. '`' → logprob: -7.16862154006958

Token 17: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1054996252059937
    2. ' premier' → logprob: -1.7304996252059937
    3. 'n' → logprob: -2.355499744415283
    4. ' un' → logprob: -2.730499744415283
    5. ' a' → logprob: -2.855499744415283
    6. '   ' → logprob: -2.855499744415283
    7. 'prem' → logprob: -2.855499744415283
    8. ' n' → logprob: -3.355499744415283
    9. 'nombre' → logprob: -3.355499744415283
    10. ' nombre' → logprob: -3.855499744415283

Token 18: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10985924303531647
    2. ' ,' → logprob: -2.3598592281341553
    3. ')' → logprob: -5.734859466552734
    4. ' =' → logprob: -6.734859466552734
    5. '_' → logprob: -7.109859466552734
    6. ' )' → logprob: -7.359859466552734
    7. '<|end|>' → logprob: -7.484859466552734
    8. ' (' → logprob: -7.609859466552734
    9. ' ' → logprob: -7.609859466552734
    10. 'u' → logprob: -7.984859466552734

Token 19: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08177661895751953
    2. ' )' → logprob: -3.0817766189575195
    3. '  ' → logprob: -4.3317766189575195
    4. ')' → logprob: -4.9567766189575195
    5. ' n' → logprob: -5.7067766189575195
    6. '   ' → logprob: -6.3317766189575195
    7. 'n' → logprob: -6.4567766189575195
    8. ' ,' → logprob: -6.7067766189575195
    9. '    ' → logprob: -7.2067766189575195
    10. ' a' → logprob: -7.3317766189575195

Token 20: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2889386713504791
    2. 'nombre' → logprob: -1.4139386415481567
    3. ' ' → logprob: -5.163938522338867
    4. 'n' → logprob: -7.413938522338867
    5. ' nombres' → logprob: -7.788938522338867
    6. 's' → logprob: -8.538938522338867
    7. ' n' → logprob: -9.163938522338867
    8. ' espace' → logprob: -9.288938522338867
    9. 'Nombre' → logprob: -9.288938522338867
    10. '  ' → logprob: -9.413938522338867

Token 21: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14514297246932983
    2. ' d' → logprob: -2.3951430320739746
    3. '_' → logprob: -4.395143032073975
    4. ' de' → logprob: -4.895143032073975
    5. 'd' → logprob: -5.020143032073975
    6. 's' → logprob: -5.395143032073975
    7. ' )' → logprob: -6.020143032073975
    8. ')' → logprob: -6.520143032073975
    9. '_d' → logprob: -6.520143032073975
    10. ' total' → logprob: -6.645143032073975

Token 22: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3185881972312927
    2. '_' → logprob: -2.1935882568359375
    3. 'e' → logprob: -3.0685882568359375
    4. ' ' → logprob: -3.0685882568359375
    5. 'é' → logprob: -3.5685882568359375
    6. ' espaces' → logprob: -4.1935882568359375
    7. ''é' → logprob: -5.4435882568359375
    8. ''espace' → logprob: -5.9435882568359375
    9. 'u' → logprob: -6.0685882568359375
    10. 'a' → logprob: -6.5685882568359375

Token 23: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.19255654513835907
    2. ' ' → logprob: -2.817556619644165
    3. 'é' → logprob: -3.317556619644165
    4. 'ent' → logprob: -3.942556619644165
    5. ''ent' → logprob: -4.067556381225586
    6. ' éléments' → logprob: -4.567556381225586
    7. ''' → logprob: -4.817556381225586
    8. ''é' → logprob: -5.567556381225586
    9. ''él' → logprob: -5.817556381225586
    10. '_' → logprob: -6.067556381225586

Token 24: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.049297869205474854
    2. 'm' → logprob: -3.04929780960083
    3. 'ment' → logprob: -7.29929780960083
    4. '```' → logprob: -11.424298286437988
    5. '   ' → logprob: -12.174298286437988
    6. 'men' → logprob: -12.424298286437988
    7. 'me' → logprob: -12.799298286437988
    8. ' m' → logprob: -13.799298286437988
    9. 'phants' → logprob: -13.799298286437988
    10. 'mente' → logprob: -13.799298286437988

Token 25: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2317654937505722
    2. ',' → logprob: -2.1067655086517334
    3. ')' → logprob: -3.6067655086517334
    4. ' ' → logprob: -4.231765270233154
    5. 'n' → logprob: -4.981765270233154
    6. '\n' → logprob: -4.981765270233154
    7. '\' → logprob: -5.106765270233154
    8. '  ' → logprob: -5.481765270233154
    9. '    ' → logprob: -5.731765270233154
    10. '```' → logprob: -5.856765270233154

Token 26: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1559616327285767
    2. '   ' → logprob: -1.5309616327285767
    3. ' ' → logprob: -1.7809616327285767
    4. ' d' → logprob: -2.405961513519287
    5. ' de' → logprob: -4.405961513519287
    6. '  ' → logprob: -4.405961513519287
    7. 'd' → logprob: -4.405961513519287
    8. ' l' → logprob: -4.530961513519287
    9. 's' → logprob: -4.530961513519287
    10. 't' → logprob: -5.030961513519287

Token 27: ' quantité' (ID: 89219)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2977302074432373
    2. ' ' → logprob: -1.5477302074432373
    3. ' nombre' → logprob: -1.9227302074432373
    4. '   ' → logprob: -2.9227302074432373
    5. 'nombre' → logprob: -3.1727302074432373
    6. 'ur' → logprob: -3.2977302074432373
    7. 'n' → logprob: -3.2977302074432373
    8. 'r' → logprob: -3.6727302074432373
    9. 'u' → logprob: -3.9852302074432373
    10. ' tableau' → logprob: -4.172730445861816

Token 28: ' désir' (ID: 92342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10326560586690903
    2. '_' → logprob: -3.1032655239105225
    3. '   ' → logprob: -4.353265762329102
    4. ',' → logprob: -4.353265762329102
    5. ')' → logprob: -4.728265762329102
    6. '\' → logprob: -5.853265762329102
    7. ' ,' → logprob: -6.103265762329102
    8. 's' → logprob: -6.103265762329102
    9. ' )' → logprob: -6.228265762329102
    10. ''' → logprob: -6.353265762329102

Token 29: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3049316704273224
    2. 'é' → logprob: -1.554931640625
    3. 'd' → logprob: -3.429931640625
    4. 'ée' → logprob: -4.179931640625
    5. 'de' → logprob: -6.804931640625
    6. ' ' → logprob: -6.929931640625
    7. 'n' → logprob: -7.554931640625
    8. ' de' → logprob: -8.054931640625
    9. 'és' → logprob: -8.304931640625
    10. 'r' → logprob: -8.804931640625

Token 30: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2651354968547821
    2. '\n' → logprob: -2.3901355266571045
    3. '\' → logprob: -3.5151355266571045
    4. 'n' → logprob: -3.5151355266571045
    5. ',' → logprob: -3.6401355266571045
    6. ' ' → logprob: -4.390135288238525
    7. '```' → logprob: -4.640135288238525
    8. ',
' → logprob: -4.890135288238525
    9. '`' → logprob: -5.640135288238525
    10. ')' → logprob: -5.640135288238525

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7217427492141724
    2. '\n' → logprob: -1.3467427492141724
    3. '\' → logprob: -1.9717427492141724
    4. '"""' → logprob: -3.471742630004883
    5. '"' → logprob: -3.596742630004883
    6. ')' → logprob: -4.596742630004883
    7. 'n' → logprob: -4.721742630004883
    8. ',' → logprob: -5.096742630004883
    9. ' ' → logprob: -5.221742630004883
    10. '    ' → logprob: -5.721742630004883

Token 32: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1139470711350441
    2. '\n' → logprob: -3.1139471530914307
    3. '\' → logprob: -3.7389471530914307
    4. ')' → logprob: -4.613946914672852
    5. '"""' → logprob: -4.988946914672852
    6. '"' → logprob: -5.113946914672852
    7. ' ' → logprob: -5.613946914672852
    8. '    ' → logprob: -5.738946914672852
    9. 'n' → logprob: -6.613946914672852
    10. '    
' → logprob: -6.738946914672852

Token 33: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3358155488967896
    2. 'a' → logprob: -1.5858155488967896
    3. ' m' → logprob: -1.9608155488967896
    4. ' a' → logprob: -2.3358154296875
    5. 'x' → logprob: -2.7108154296875
    6. 'k' → logprob: -2.8358154296875
    7. ' k' → logprob: -2.9608154296875
    8. ' x' → logprob: -2.9608154296875
    9. 'q' → logprob: -4.2108154296875
    10. ' q' → logprob: -4.9608154296875

Token 34: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048036128282547
    2. ')' → logprob: -4.048036098480225
    3. ' ,' → logprob: -4.423036098480225
    4. ' ' → logprob: -5.548036098480225
    5. 'n' → logprob: -5.798036098480225
    6. '<|end|>' → logprob: -5.923036098480225
    7. ' =' → logprob: -6.173036098480225
    8. ',n' → logprob: -7.173036098480225
    9. ',b' → logprob: -7.298036098480225
    10. '_n' → logprob: -7.298036098480225

Token 35: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3971723318099976
    2. ' l' → logprob: -1.3971723318099976
    3. ' la' → logprob: -1.5221723318099976
    4. ' un' → logprob: -2.272172451019287
    5. 'l' → logprob: -2.772172451019287
    6. 'un' → logprob: -3.522172451019287
    7. ' le' → logprob: -3.647172451019287
    8. 'a' → logprob: -4.522172451019287
    9. 'n' → logprob: -4.897172451019287
    10. '  ' → logprob: -5.022172451019287

Token 36: ' coût' (ID: 73109)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.721319317817688
    2. ' premier' → logprob: -1.471319317817688
    3. 'nombre' → logprob: -2.7213191986083984
    4. ' troisième' → logprob: -3.2213191986083984
    5. 'prem' → logprob: -3.2213191986083984
    6. ' second' → logprob: -3.7213191986083984
    7. ' maximum' → logprob: -3.8463191986083984
    8. ' deuxième' → logprob: -3.9713191986083984
    9. ' ' → logprob: -5.096319198608398
    10. '   ' → logprob: -5.471319198608398

Token 37: ' un' (ID: 537)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6495286822319031
    2. ')' → logprob: -2.149528741836548
    3. ' par' → logprob: -2.274528741836548
    4. ' des' → logprob: -3.149528741836548
    5. ' d' → logprob: -3.774528741836548
    6. 'de' → logprob: -3.774528741836548
    7. '<|end|>' → logprob: -3.774528741836548
    8. ' ' → logprob: -3.899528741836548
    9. '   ' → logprob: -4.274528503417969
    10. ' )' → logprob: -4.399528503417969

Token 38: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.020294394344091415
    2. 'ité' → logprob: -4.020294189453125
    3. ' it' → logprob: -7.145294189453125
    4. 'i' → logprob: -7.520294189453125
    5. ' i' → logprob: -8.020294189453125
    6. 'it' → logprob: -8.770294189453125
    7. 'ique' → logprob: -9.395294189453125
    8. 'ième' → logprob: -10.270294189453125
    9. 'itai' → logprob: -10.395294189453125
    10. 'ié' → logprob: -10.520294189453125

Token 39: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29240304231643677
    2. '\' → logprob: -2.917402982711792
    3. ',' → logprob: -3.042402982711792
    4. ' ' → logprob: -3.417402982711792
    5. '<|end|>' → logprob: -3.667402982711792
    6. '\n' → logprob: -4.167403221130371
    7. ' )' → logprob: -4.542403221130371
    8. 's' → logprob: -4.542403221130371
    9. '_' → logprob: -4.792403221130371
    10. '   ' → logprob: -5.542403221130371

Token 40: ' une' (ID: 2463)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.24860157072544098
    2. ' le' → logprob: -2.2486016750335693
    3. ' la' → logprob: -3.2486016750335693
    4. 'l' → logprob: -3.7486016750335693
    5. 'la' → logprob: -3.9986016750335693
    6. 'a' → logprob: -5.12360143661499
    7. 'une' → logprob: -5.74860143661499
    8. 'leur' → logprob: -5.87360143661499
    9. ' l' → logprob: -6.12360143661499
    10. 'un' → logprob: -6.12360143661499

Token 41: ' valeur' (ID: 41664)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.20494462549686432
    2. ' ' → logprob: -2.454944610595703
    3. ' liste' → logprob: -3.954944610595703
    4. ' valeur' → logprob: -3.954944610595703
    5. '   ' → logprob: -4.579944610595703
    6. ' unité' → logprob: -5.204944610595703
    7. ' autre' → logprob: -5.329944610595703
    8. 'quant' → logprob: -5.704944610595703
    9. ' variable' → logprob: -5.704944610595703
    10. ' constante' → logprob: -5.829944610595703

Token 42: ' associ' (ID: 5516)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8779494762420654
    2. '   ' → logprob: -1.8779494762420654
    3. ')' → logprob: -2.5029494762420654
    4. '.' → logprob: -2.7529494762420654
    5. ' de' → logprob: -2.7529494762420654
    6. ',' → logprob: -2.7529494762420654
    7. '<|end|>' → logprob: -3.2529494762420654
    8. ' ' → logprob: -3.8779494762420654
    9. '\n' → logprob: -5.0029497146606445
    10. 'def' → logprob: -5.0029497146606445

Token 43: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4740894138813019
    2. 'é' → logprob: -0.9740893840789795
    3. 'è' → logprob: -11.599089622497559
    4. 'e' → logprob: -14.224089622497559
    5. 'és' → logprob: -14.474089622497559
    6. '#' → logprob: -14.974089622497559
    7. '```' → logprob: -15.099089622497559
    8. 'á' → logprob: -15.474089622497559
    9. 'ées' → logprob: -15.474089622497559
    10. 'ê' → logprob: -15.849089622497559

Token 44: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1389610469341278
    2. '\n' → logprob: -2.76396107673645
    3. ',' → logprob: -4.138960838317871
    4. '.' → logprob: -4.388960838317871
    5. '\' → logprob: -4.888960838317871
    6. '
' → logprob: -4.888960838317871
    7. ')' → logprob: -5.013960838317871
    8. 'n' → logprob: -5.638960838317871
    9. 'a' → logprob: -5.888960838317871
    10. '"""' → logprob: -6.388960838317871

Token 45: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6355046033859253
    2. ' chaque' → logprob: -1.2605046033859253
    3. 'l' → logprob: -2.760504722595215
    4. ' un' → logprob: -3.260504722595215
    5. ' la' → logprob: -3.635504722595215
    6. ' a' → logprob: -4.260504722595215
    7. ' acheter' → logprob: -4.885504722595215
    8. ' ' → logprob: -5.510504722595215
    9. ' n' → logprob: -5.635504722595215
    10. ' each' → logprob: -5.885504722595215

Token 46: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.11764932423830032
    2. ' élément' → logprob: -2.2426493167877197
    3. ' ' → logprob: -5.992649555206299
    4. ' element' → logprob: -7.492649555206299
    5. ' él' → logprob: -8.11764907836914
    6. 'element' → logprob: -8.61764907836914
    7. ' espace' → logprob: -8.74264907836914
    8. 'entrée' → logprob: -8.86764907836914
    9. ' item' → logprob: -8.99264907836914
    10. 'é' → logprob: -8.99264907836914

Token 47: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08783580362796783
    2. '\n' → logprob: -3.2128357887268066
    3. ')' → logprob: -3.9628357887268066
    4. '\' → logprob: -4.462835788726807
    5. ',' → logprob: -5.587835788726807
    6. '    
' → logprob: -6.212835788726807
    7. '"""' → logprob: -6.587835788726807
    8. 'n' → logprob: -6.962835788726807
    9. '```' → logprob: -6.962835788726807
    10. ')
' → logprob: -7.337835788726807

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00411959970369935
    2. '"""' → logprob: -6.629119396209717
    3. '"""
' → logprob: -7.254119396209717
    4. '\n' → logprob: -7.629119396209717
    5. '```' → logprob: -7.754119396209717
    6. '\' → logprob: -7.879119396209717
    7. '"' → logprob: -8.379119873046875
    8. '""' → logprob: -8.879119873046875
    9. '
' → logprob: -9.379119873046875
    10. 'def' → logprob: -9.379119873046875

Token 49: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009389739134348929
    2. '"""
' → logprob: -8.25093936920166
    3. '"""' → logprob: -8.25093936920166
    4. '\n' → logprob: -9.12593936920166
    5. '"' → logprob: -9.25093936920166
    6. '    ' → logprob: -9.62593936920166
    7. '\' → logprob: -10.00093936920166
    8. '
' → logprob: -10.25093936920166
    9. '```' → logprob: -11.25093936920166
    10. '    
' → logprob: -11.37593936920166

Token 50: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.32537442445755005
    2. 'b' → logprob: -1.3253743648529053
    3. ' ' → logprob: -5.075374603271484
    4. ' p' → logprob: -7.075374603271484
    5. ' m' → logprob: -7.575374603271484
    6. 'p' → logprob: -7.825374603271484
    7. 'n' → logprob: -8.075374603271484
    8. 'm' → logprob: -8.075374603271484
    9. ' t' → logprob: -8.075374603271484
    10. ' d' → logprob: -8.075374603271484

Token 51: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.01671641133725643
    2. ':' → logprob: -4.266716480255127
    3. ',' → logprob: -6.516716480255127
    4. ' ' → logprob: -8.016716003417969
    5. ' =' → logprob: -8.141716003417969
    6. ' ,' → logprob: -8.516716003417969
    7. '"""' → logprob: -10.016716003417969
    8. '   ' → logprob: -10.266716003417969
    9. '  ' → logprob: -10.516716003417969
    10. '<|end|>' → logprob: -10.641716003417969

Token 52: ' une' (ID: 2463)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0423336923122406
    2. 'le' → logprob: -3.7923336029052734
    3. ' un' → logprob: -4.667333602905273
    4. ' Le' → logprob: -6.292333602905273
    5. '  ' → logprob: -6.917333602905273
    6. ' ' → logprob: -6.917333602905273
    7. ' une' → logprob: -7.167333602905273
    8. ' la' → logprob: -7.292333602905273
    9. ''' → logprob: -7.417333602905273
    10. '"' → logprob: -7.417333602905273

Token 53: ' valeur' (ID: 41664)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.6148016452789307
    2. ' valeur' → logprob: -2.2398016452789307
    3. ' autre' → logprob: -2.3648016452789307
    4. 'val' → logprob: -2.7398016452789307
    5. 'co' → logprob: -3.3648016452789307
    6. 'aut' → logprob: -3.9898016452789307
    7. 'quant' → logprob: -4.239801406860352
    8. ' réduction' → logprob: -4.614801406860352
    9. 'const' → logprob: -4.739801406860352
    10. ' ' → logprob: -5.364801406860352

Token 54: ' limite' (ID: 48939)
  Prédit: ' associ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' associ' → logprob: -0.9015462398529053
    2. '_ass' → logprob: -1.5265462398529053
    3. '   ' → logprob: -1.9015462398529053
    4. ' ' → logprob: -3.7765462398529053
    5. '  ' → logprob: -4.026546478271484
    6. 'ass' → logprob: -4.151546478271484
    7. ' supplémentaire' → logprob: -4.526546478271484
    8. '_' → logprob: -4.651546478271484
    9. ' ou' → logprob: -4.776546478271484
    10. '_assoc' → logprob: -4.901546478271484

Token 55: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2641809582710266
    2. '.' → logprob: -2.514180898666382
    3. '
' → logprob: -3.014180898666382
    4. '"""
' → logprob: -3.514180898666382
    5. '"""' → logprob: -4.014181137084961
    6. '```' → logprob: -4.514181137084961
    7. '.
' → logprob: -4.764181137084961
    8. ':' → logprob: -4.764181137084961
    9. ' :' → logprob: -5.014181137084961
    10. '""' → logprob: -5.764181137084961

Token 56: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23452848196029663
    2. ' une' → logprob: -1.8595285415649414
    3. 'un' → logprob: -3.3595285415649414
    4. 'une' → logprob: -4.484528541564941
    5. '<|end|>' → logprob: -5.984528541564941
    6. 'a' → logprob: -6.609528541564941
    7. ' a' → logprob: -6.859528541564941
    8. ' d' → logprob: -6.859528541564941
    9. ' le' → logprob: -8.734528541564941
    10. ' ' → logprob: -9.109528541564941

Token 57: ' plafond' (ID: 114829)
  Prédit: ' coût'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.9362664818763733
    2. ' autre' → logprob: -1.1862664222717285
    3. ' seuil' → logprob: -2.4362664222717285
    4. ' maximum' → logprob: -2.9362664222717285
    5. 'co' → logprob: -3.6862664222717285
    6. ' budget' → logprob: -4.1862664222717285
    7. ' coefficient' → logprob: -4.3112664222717285
    8. ' montant' → logprob: -4.5612664222717285
    9. ' prix' → logprob: -4.5612664222717285
    10. ' plafond' → logprob: -4.5612664222717285

Token 58: ' maximal' (ID: 65414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24706649780273438
    2. '
' → logprob: -2.7470664978027344
    3. '.' → logprob: -2.8720664978027344
    4. '"""
' → logprob: -2.9970664978027344
    5. '.
' → logprob: -3.4970664978027344
    6. '"""' → logprob: -4.747066497802734
    7. '```' → logprob: -5.622066497802734
    8. '."""' → logprob: -7.247066497802734
    9. '""' → logprob: -7.372066497802734
    10. ',' → logprob: -7.497066497802734

Token 59: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22243158519268036
    2. '
' → logprob: -2.2224316596984863
    3. '"""
' → logprob: -2.7224316596984863
    4. '.
' → logprob: -5.097431659698486
    5. '```' → logprob: -5.097431659698486
    6. '"""' → logprob: -5.597431659698486
    7. '\n' → logprob: -6.222431659698486
    8. ')
' → logprob: -6.347431659698486
    9. '.' → logprob: -6.597431659698486
    10. ')' → logprob: -7.097431659698486

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08789379149675369
    2. '"""' → logprob: -3.2128937244415283
    3. '"""
' → logprob: -3.2128937244415283
    4. '"' → logprob: -6.587893962860107
    5. '```' → logprob: -7.087893962860107
    6. '""' → logprob: -7.587893962860107
    7. '
' → logprob: -8.21289348602295
    8. '\n' → logprob: -8.83789348602295
    9. '"""

' → logprob: -9.21289348602295
    10. ' """
' → logprob: -9.21289348602295

Token 61: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1383691132068634
    2. '"""' → logprob: -2.263369083404541
    3. '"' → logprob: -4.013369083404541
    4. '"""
' → logprob: -5.388369083404541
    5. '""' → logprob: -7.013369083404541
    6. '```' → logprob: -7.388369083404541
    7. '`' → logprob: -7.888369083404541
    8. ' """' → logprob: -8.7633695602417
    9. ' ' → logprob: -9.2633695602417
    10. '  ' → logprob: -9.5133695602417

Token 62: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0798259899020195
    2. 'ect' → logprob: -2.8298258781433105
    3. 'ic' → logprob: -4.5798258781433105
    4. 'fic' → logprob: -6.4548258781433105
    5. 'ine' → logprob: -6.8298258781433105
    6. 'icher' → logprob: -7.2048258781433105
    7. 'ich' → logprob: -7.4548258781433105
    8. 'f' → logprob: -7.8298258781433105
    9. 'ermit' → logprob: -7.8298258781433105
    10. '   ' → logprob: -7.9548258781433105

Token 63: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15152938663959503
    2. '(' → logprob: -2.901529312133789
    3. 'r' → logprob: -3.526529312133789
    4. ' :' → logprob: -3.901529312133789
    5. ' la' → logprob: -5.151529312133789
    6. '"' → logprob: -5.151529312133789
    7. '   ' → logprob: -5.776529312133789
    8. ' (' → logprob: -5.901529312133789
    9. '  ' → logprob: -5.901529312133789
    10. ':' → logprob: -6.401529312133789

Token 64: ' minimum' (ID: 11085)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7971190810203552
    2. ' nombre' → logprob: -1.547119140625
    3. ' résultat' → logprob: -2.797119140625
    4. ' ' → logprob: -3.047119140625
    5. ' maximum' → logprob: -3.297119140625
    6. ' coût' → logprob: -3.422119140625
    7. '   ' → logprob: -3.672119140625
    8. '"' → logprob: -4.172119140625
    9. ' meilleur' → logprob: -4.422119140625
    10. ''' → logprob: -4.797119140625

Token 65: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.49063462018966675
    2. ' between' → logprob: -1.7406346797943115
    3. '(' → logprob: -2.6156346797943115
    4. ' des' → logprob: -2.6156346797943115
    5. ' de' → logprob: -3.4906346797943115
    6. 'entre' → logprob: -4.740634441375732
    7. ' ' → logprob: -5.240634441375732
    8. '(
' → logprob: -5.240634441375732
    9. ' (' → logprob: -5.865634441375732
    10. ' possible' → logprob: -6.115634441375732

Token 66: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28688472509384155
    2. ' ' → logprob: -2.7868847846984863
    3. ' a' → logprob: -2.7868847846984863
    4. ' b' → logprob: -2.9118847846984863
    5. 'a' → logprob: -3.7868847846984863
    6. '(' → logprob: -4.536884784698486
    7. 'n' → logprob: -4.661884784698486
    8. ' la' → logprob: -5.161884784698486
    9. ' (' → logprob: -5.161884784698486
    10. ' ' → logprob: -5.411884784698486

Token 67: ' coût' (ID: 73109)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.527972400188446
    2. ' n' → logprob: -1.5279724597930908
    3. ' coût' → logprob: -2.402972459793091
    4. 'n' → logprob: -3.777972459793091
    5. ' nombre' → logprob: -4.277972221374512
    6. 's' → logprob: -4.652972221374512
    7. ' a' → logprob: -5.027972221374512
    8. ' b' → logprob: -5.027972221374512
    9. ' total' → logprob: -5.402972221374512
    10. ' résultat' → logprob: -5.652972221374512

Token 68: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.910374641418457
    2. ' ' → logprob: -1.285374641418457
    3. '_' → logprob: -2.035374641418457
    4. ' _' → logprob: -3.285374641418457
    5. ' entre' → logprob: -3.535374641418457
    6. ' d' → logprob: -4.160374641418457
    7. '_total' → logprob: -4.160374641418457
    8. ' un' → logprob: -4.285374641418457
    9. ' minimum' → logprob: -4.535374641418457
    10. ' de' → logprob: -4.910374641418457

Token 69: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06385063380002975
    2. ' total' → logprob: -4.313850402832031
    3. ' de' → logprob: -4.438850402832031
    4. ' du' → logprob: -5.188850402832031
    5. ' entre' → logprob: -5.563850402832031
    6. ' au' → logprob: -5.813850402832031
    7. ' des' → logprob: -5.813850402832031
    8. ' d' → logprob: -5.813850402832031
    9. '  ' → logprob: -6.063850402832031
    10. ' à' → logprob: -6.188850402832031

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10578887909650803
    2. ' acheter' → logprob: -2.8557889461517334
    3. 'n' → logprob: -4.105788707733154
    4. ' l' → logprob: -4.355788707733154
    5. 'acheter' → logprob: -5.230788707733154
    6. ' obtenir' → logprob: -5.855788707733154
    7. ' les' → logprob: -6.355788707733154
    8. 'l' → logprob: -7.605788707733154
    9. ' produire' → logprob: -7.855788707733154
    10. ' la' → logprob: -8.105789184570312

Token 71: ' éléments' (ID: 57375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31886783242225647
    2. ' fois' → logprob: -2.6938679218292236
    3. ' n' → logprob: -2.8188679218292236
    4. ' a' → logprob: -2.9438679218292236
    5. ' *' → logprob: -3.3188679218292236
    6. '*' → logprob: -4.8188676834106445
    7. ' éléments' → logprob: -4.9438676834106445
    8. ' espaces' → logprob: -5.0688676834106445
    9. ' ```' → logprob: -5.3188676834106445
    10. ' ' → logprob: -5.6938676834106445

Token 72: ' (' (ID: 350)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.33184564113616943
    2. ' ' → logprob: -2.081845760345459
    3. '   ' → logprob: -2.456845760345459
    4. ',' → logprob: -3.331845760345459
    5. 'et' → logprob: -5.081845760345459
    6. ' (' → logprob: -5.331845760345459
    7. ' ,' → logprob: -5.456845760345459
    8. ' and' → logprob: -5.706845760345459
    9. 'def' → logprob: -6.206845760345459
    10. '    ' → logprob: -6.331845760345459

Token 73: 'a' (ID: 64)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29003050923347473
    2. ' a' → logprob: -2.7900304794311523
    3. ' et' → logprob: -3.0400304794311523
    4. 'n' → logprob: -3.2900304794311523
    5. '   ' → logprob: -3.7900304794311523
    6. 'a' → logprob: -4.290030479431152
    7. ' )' → logprob: -4.415030479431152
    8. ')' → logprob: -4.415030479431152
    9. ' ' → logprob: -4.540030479431152
    10. ' au' → logprob: -5.290030479431152

Token 74: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3133978247642517
    2. '*' → logprob: -1.3133978843688965
    3. ' ' → logprob: -9.563397407531738
    4. ' ' → logprob: -10.313397407531738
    5. '*n' → logprob: -10.563397407531738
    6. '-' → logprob: -13.563397407531738
    7. '```' → logprob: -14.313397407531738
    8. '+' → logprob: -14.438397407531738
    9. ' **' → logprob: -14.688397407531738
    10. '  ' → logprob: -14.938397407531738

Token 75: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17977987229824066
    2. 'n' → logprob: -1.8047798871994019
    3. ' ' → logprob: -10.679780006408691
    4. '  ' → logprob: -13.054780006408691
    5. '   ' → logprob: -13.054780006408691
    6. '	n' → logprob: -13.179780006408691
    7. '    ' → logprob: -13.179780006408691
    8. ' ' → logprob: -14.179780006408691
    9. 'b' → logprob: -14.554780006408691
    10. ' b' → logprob: -14.679780006408691

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009058743715286255
    2. ' )' → logprob: -4.759058952331543
    3. ' et' → logprob: -8.509058952331543
    4. ' ' → logprob: -8.884058952331543
    5. 'et' → logprob: -10.634058952331543
    6. '),' → logprob: -10.634058952331543
    7. '   ' → logprob: -11.509058952331543
    8. '*' → logprob: -11.634058952331543
    9. '*)' → logprob: -11.884058952331543
    10. ' and' → logprob: -11.884058952331543

Token 77: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.17925716936588287
    2. '   ' → logprob: -2.8042571544647217
    3. ' ' → logprob: -2.9292571544647217
    4. ' and' → logprob: -4.054257392883301
    5. ')' → logprob: -4.304257392883301
    6. 'et' → logprob: -5.179257392883301
    7. ',' → logprob: -5.429257392883301
    8. '*' → logprob: -6.179257392883301
    9. ' )' → logprob: -6.554257392883301
    10. '    ' → logprob: -6.679257392883301

Token 78: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02114257961511612
    2. 'b' → logprob: -3.8961424827575684
    3. ' ' → logprob: -8.146142959594727
    4. ' ' → logprob: -9.271142959594727
    5. ' le' → logprob: -10.021142959594727
    6. ' la' → logprob: -10.021142959594727
    7. '```' → logprob: -10.271142959594727
    8. ' a' → logprob: -10.771142959594727
    9. ' the' → logprob: -10.896142959594727
    10. ' l' → logprob: -11.271142959594727

Token 79: ' limite' (ID: 48939)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0066636232659220695
    2. 'b' → logprob: -5.756663799285889
    3. ' ' → logprob: -6.131663799285889
    4. ' valeur' → logprob: -6.881663799285889
    5. ' ' → logprob: -9.13166332244873
    6. '```' → logprob: -10.63166332244873
    7. ' value' → logprob: -11.00666332244873
    8. ' space' → logprob: -11.50666332244873
    9. ' espace' → logprob: -11.50666332244873
    10. ' val' → logprob: -11.63166332244873

Token 80: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7839440107345581
    2. 'max' → logprob: -1.533944010734558
    3. 'b' → logprob: -1.908944010734558
    4. ' max' → logprob: -2.4089441299438477
    5. ' ' → logprob: -3.7839441299438477
    6. ' (' → logprob: -3.9089441299438477
    7. ' maximale' → logprob: -4.033944129943848
    8. '   ' → logprob: -4.533944129943848
    9. ' maximal' → logprob: -5.158944129943848
    10. ' n' → logprob: -6.158944129943848

Token 81: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24403734505176544
    2. '
' → logprob: -2.369037389755249
    3. '\n' → logprob: -2.494037389755249
    4. '    
' → logprob: -4.24403715133667
    5. '\' → logprob: -4.86903715133667
    6. '"""' → logprob: -4.86903715133667
    7. '"""
' → logprob: -6.36903715133667
    8. 'n' → logprob: -6.61903715133667
    9. '```' → logprob: -6.61903715133667
    10. '' → logprob: -6.74403715133667

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20340827107429504
    2. '"""' → logprob: -1.8284082412719727
    3. '"""
' → logprob: -3.9534082412719727
    4. '"' → logprob: -6.078408241271973
    5. '""' → logprob: -6.828408241271973
    6. '```' → logprob: -7.453408241271973
    7. ' """' → logprob: -9.453408241271973
    8. ' """
' → logprob: -9.703408241271973
    9. '`' → logprob: -10.328408241271973
    10. '"""

' → logprob: -10.953408241271973

Token 83: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3956494927406311
    2. '   ' → logprob: -1.1456494331359863
    3. '"""
' (adapté à ' """
') → logprob: -5.270649433135986
    4. '""' → logprob: -6.645649433135986
    5. '"' → logprob: -6.770649433135986
    6. '```' → logprob: -6.895649433135986
    7. ' """' → logprob: -9.395649909973145
    8. '`' → logprob: -10.770649909973145
    9. '"""

' → logprob: -11.895649909973145
    10. ' """
' → logprob: -12.020649909973145

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5198866724967957
    2. '
' → logprob: -1.6448867321014404
    3. 'n' → logprob: -2.1448867321014404
    4. '\n' → logprob: -2.6448867321014404
    5. '    
' → logprob: -3.8948867321014404
    6. '\' → logprob: -5.894886493682861
    7. '	n' → logprob: -8.14488697052002
    8. 'newline' → logprob: -8.89488697052002
    9. '```' → logprob: -9.01988697052002
    10. ' 
' → logprob: -9.01988697052002

Token 85: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02519240230321884
    2. '   ' → logprob: -4.1501922607421875
    3. '\n' → logprob: -4.7751922607421875
    4. '
' → logprob: -7.6501922607421875
    5. '    
' → logprob: -9.400192260742188
    6. '	n' → logprob: -10.025192260742188
    7. ' n' → logprob: -10.275192260742188
    8. '\' → logprob: -10.525192260742188
    9. ' 
' → logprob: -12.150192260742188
    10. '```' → logprob: -13.275192260742188

Token 86: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1273045539855957
    2. ' n' → logprob: -2.1273045539855957
    3. '   ' → logprob: -8.127304077148438
    4. '	n' → logprob: -10.752304077148438
    5. 'import' → logprob: -11.127304077148438
    6. '    
' → logprob: -11.377304077148438
    7. '```' → logprob: -11.877304077148438
    8. '#' → logprob: -12.377304077148438
    9. '
' → logprob: -12.877304077148438
    10. ' ' → logprob: -13.252304077148438

Token 87: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8543839454650879
    2. ' n' → logprob: -1.229383945465088
    3. 'n' → logprob: -1.729383945465088
    4. ' des' → logprob: -2.354383945465088
    5. ' =' → logprob: -6.104383945465088
    6. '    ' → logprob: -6.604383945465088
    7. 'des' → logprob: -6.729383945465088
    8. ' ' → logprob: -7.229383945465088
    9. '  ' → logprob: -7.604383945465088
    10. 's' → logprob: -7.854383945465088

Token 88: ' trois' (ID: 25564)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.032883170992136
    2. 'n' → logprob: -3.9078831672668457
    3. ' ' → logprob: -5.282883167266846
    4. ' la' → logprob: -5.532883167266846
    5. ' l' → logprob: -6.282883167266846
    6. 'l' → logprob: -7.907883167266846
    7. ' input' → logprob: -7.907883167266846
    8. 'input' → logprob: -9.157883644104004
    9. ' trois' → logprob: -9.282883644104004
    10. 'int' → logprob: -9.657883644104004

Token 89: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.18338243663311005
    2. ' ' → logprob: -2.058382511138916
    3. ' integers' → logprob: -3.683382511138916
    4. ' espaces' → logprob: -5.433382511138916
    5. ' int' → logprob: -6.058382511138916
    6. '  ' → logprob: -6.558382511138916
    7. ' n' → logprob: -6.558382511138916
    8. ' entr' → logprob: -6.808382511138916
    9. ' trip' → logprob: -7.558382511138916
    10. ' entier' → logprob: -7.683382511138916

Token 90: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4428216814994812
    2. 'iers' → logprob: -1.067821741104126
    3. 'e' → logprob: -5.067821502685547
    4. 'ier' → logprob: -5.567821502685547
    5. 'ières' → logprob: -6.192821502685547
    6. '   ' → logprob: -7.442821502685547
    7. 'ière' → logprob: -8.192821502685547
    8. 't' → logprob: -8.192821502685547
    9. ' i' → logprob: -8.942821502685547
    10. 'ers' → logprob: -9.067821502685547

Token 91: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05126280337572098
    2. '\n' → logprob: -3.426262855529785
    3. '   ' → logprob: -4.301262855529785
    4. '    
' → logprob: -6.426262855529785
    5. '
' → logprob: -6.551262855529785
    6. ' n' → logprob: -8.051262855529785
    7. '\' → logprob: -8.926262855529785
    8. '	n' → logprob: -8.926262855529785
    9. 'a' → logprob: -9.301262855529785
    10. '  
' → logprob: -9.926262855529785

Token 92: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.004687987733632326
    2. 'é' → logprob: -5.504687786102295
    3. 'es' → logprob: -8.004688262939453
    4. 'ès' → logprob: -8.754688262939453
    5. 'ées' → logprob: -9.629688262939453
    6. 's' → logprob: -10.379688262939453
    7. 'ée' → logprob: -11.504688262939453
    8. 'ÉS' → logprob: -12.504688262939453
    9. 'e' → logprob: -13.879688262939453
    10. 'è' → logprob: -14.379688262939453

Token 93: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7393147349357605
    2. 'par' → logprob: -0.7393147349357605
    3. 'es' → logprob: -4.864314556121826
    4. ' ' → logprob: -5.239314556121826
    5. '_par' → logprob: -5.489314556121826
    6. '=' → logprob: -5.739314556121826
    7. ',' → logprob: -5.739314556121826
    8. '   ' → logprob: -5.864314556121826
    9. ' =' → logprob: -5.989314556121826
    10. 'e' → logprob: -5.989314556121826

Token 94: ' des' (ID: 731)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9252428412437439
    2. ' des' → logprob: -1.9252429008483887
    3. 'un' → logprob: -2.1752429008483887
    4. ' espaces' → logprob: -2.5502429008483887
    5. ' espace' → logprob: -2.8002429008483887
    6. 'des' → logprob: -3.0502429008483887
    7. ''espace' → logprob: -3.1752429008483887
    8. ' ' → logprob: -3.3002429008483887
    9. 'es' → logprob: -3.6752429008483887
    10. ''un' → logprob: -4.175242900848389

Token 95: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.32004639506340027
    2. 'esp' → logprob: -1.5700464248657227
    3. 'es' → logprob: -3.3200464248657227
    4. ' ' → logprob: -4.070046424865723
    5. 'spaces' → logprob: -5.820046424865723
    6. ''espace' → logprob: -5.945046424865723
    7. ''esp' → logprob: -6.070046424865723
    8. ' espace' → logprob: -6.070046424865723
    9. ' espacios' → logprob: -7.820046424865723
    10. 'space' → logprob: -8.070046424865723

Token 96: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056670382618904114
    2. '   ' → logprob: -3.1816704273223877
    3. '    
' → logprob: -4.806670188903809
    4. '\n' → logprob: -5.931670188903809
    5. ' n' → logprob: -6.306670188903809
    6. ' 
' → logprob: -8.181670188903809
    7. '
' → logprob: -9.056670188903809
    8. '\' → logprob: -9.056670188903809
    9. '   
' → logprob: -9.056670188903809
    10. '	n' → logprob: -9.056670188903809

Token 97: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4052583575248718
    2. 'input' → logprob: -1.4052584171295166
    3. 'l' → logprob: -2.9052584171295166
    4. ' l' → logprob: -3.5302584171295166
    5. ' ' → logprob: -5.7802581787109375
    6. '=input' → logprob: -8.530258178710938
    7. '   ' → logprob: -9.405258178710938
    8. 'entrée' → logprob: -9.530258178710938
    9. 'stdin' → logprob: -9.905258178710938
    10. '	input' → logprob: -10.030258178710938

Token 98: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5965747833251953
    2. ''' → logprob: -1.3465747833251953
    3. 'a' → logprob: -2.0965747833251953
    4. 'e' → logprob: -3.0965747833251953
    5. 'input' → logprob: -4.096574783325195
    6. 'es' → logprob: -6.596574783325195
    7. 'entrée' → logprob: -7.346574783325195
    8. ' input' → logprob: -7.846574783325195
    9. 'l' → logprob: -7.971574783325195
    10. ''utilisateur' → logprob: -7.971574783325195

Token 99: ' standard' (ID: 7024)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5919972658157349
    2. 'n' → logprob: -0.8419972658157349
    3. '   ' → logprob: -4.841997146606445
    4. 'input' → logprob: -5.966997146606445
    5. ' input' → logprob: -6.591997146606445
    6. 'a' → logprob: -7.091997146606445
    7. ' ' → logprob: -7.216997146606445
    8. ' a' → logprob: -7.966997146606445
    9. ' )' → logprob: -7.966997146606445
    10. 's' → logprob: -8.216997146606445

Token 100: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01834975741803646
    2. '   ' → logprob: -4.518349647521973
    3. ' n' → logprob: -5.518349647521973
    4. '\n' → logprob: -6.393349647521973
    5. '    
' → logprob: -6.893349647521973
    6. '
' → logprob: -8.143349647521973
    7. ' 
' → logprob: -8.518349647521973
    8. '	n' → logprob: -11.018349647521973
    9. '   
' → logprob: -11.268349647521973
    10. '(n' → logprob: -11.268349647521973

Token 101: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04404519498348236
    2. '   ' → logprob: -3.2940452098846436
    3. ' n' → logprob: -5.5440449714660645
    4. '    
' → logprob: -6.6690449714660645
    5. ' 
' → logprob: -7.9190449714660645
    6. '\n' → logprob: -8.169045448303223
    7. '
' → logprob: -9.669045448303223
    8. '	n' → logprob: -10.544045448303223
    9. '   
' → logprob: -10.919045448303223
    10. '  
' → logprob: -11.419045448303223

Token 102: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.008738666772842407
    2. ' n' → logprob: -4.7587385177612305
    3. '   ' → logprob: -9.00873851776123
    4. '	n' → logprob: -14.13373851776123
    5. '    
' → logprob: -15.50873851776123
    6. '
' → logprob: -15.50873851776123
    7. '```' → logprob: -15.50873851776123
    8. 'import' → logprob: -16.008739471435547
    9. 'a' → logprob: -16.508739471435547
    10. ' ' → logprob: -16.883739471435547

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.496052371105179e-05
    2. ' ,' → logprob: -9.62509536743164
    3. ' =' → logprob: -10.75009536743164
    4. ',a' → logprob: -13.00009536743164
    5. ',n' → logprob: -13.00009536743164
    6. ',b' → logprob: -13.62509536743164
    7. '=' → logprob: -13.75009536743164
    8. ',s' → logprob: -16.25009536743164
    9. ')' → logprob: -16.50009536743164
    10. ',int' → logprob: -16.62509536743164

Token 104: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19845303893089294
    2. ' a' → logprob: -1.9484530687332153
    3. ' ' → logprob: -3.948452949523926
    4. '<|end|>' → logprob: -4.073452949523926
    5. '  ' → logprob: -7.573452949523926
    6. 'b' → logprob: -8.198452949523926
    7. ' b' → logprob: -8.448452949523926
    8. ' ' → logprob: -9.823452949523926
    9. 's' → logprob: -10.323452949523926
    10. '<|end|>' → logprob: -11.073452949523926

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002358409110456705
    2. ' ,' → logprob: -8.375235557556152
    3. ' =' → logprob: -12.625235557556152
    4. ',b' → logprob: -13.375235557556152
    5. '=' → logprob: -15.625235557556152
    6. '<|end|>' → logprob: -16.00023651123047
    7. ',a' → logprob: -17.25023651123047
    8. 'b' → logprob: -17.37523651123047
    9. ',input' → logprob: -17.75023651123047
    10. '‌,' → logprob: -18.12523651123047

Token 106: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0486326739192009
    2. 'b' → logprob: -3.0486326217651367
    3. ' ' → logprob: -10.048632621765137
    4. ' ' → logprob: -14.298632621765137
    5. '<|end|>' → logprob: -14.298632621765137
    6. '  ' → logprob: -15.048632621765137
    7. '	b' → logprob: -16.173633575439453
    8. ' =' → logprob: -16.298633575439453
    9. '    ' → logprob: -16.798633575439453
    10. '```' → logprob: -17.298633575439453

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01603507250547409
    2. '=' → logprob: -4.141035079956055
    3. '=input' → logprob: -15.016035079956055
    4. '=int' → logprob: -15.516035079956055
    5. ' =
' → logprob: -16.016035079956055
    6. ',' → logprob: -16.891035079956055
    7. ')' → logprob: -17.141035079956055
    8. ' ' → logprob: -18.516035079956055
    9. '<|end|>' → logprob: -19.016035079956055
    10. 's' → logprob: -19.328535079956055

Token 108: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10020925104618073
    2. 'map' → logprob: -2.3502092361450195
    3. '	map' → logprob: -13.72520923614502
    4. ' list' → logprob: -14.72520923614502
    5. ' ' → logprob: -14.85020923614502
    6. '[' → logprob: -15.10020923614502
    7. ' ' → logprob: -15.97520923614502
    8. '(map' → logprob: -16.475210189819336
    9. 'list' → logprob: -16.600210189819336
    10. ' [' → logprob: -16.600210189819336

Token 109: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0033532092347741127
    2. '(' → logprob: -5.753353118896484
    3. '(input' → logprob: -8.878353118896484
    4. 'int' → logprob: -11.003353118896484
    5. '(str' → logprob: -11.378353118896484
    6. '<int' → logprob: -12.753353118896484
    7. '(
' → logprob: -13.128353118896484
    8. '[int' → logprob: -13.628353118896484
    9. '(lambda' → logprob: -14.253353118896484
    10. '<|end|>' → logprob: -15.128353118896484

Token 110: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1352245807647705
    2. 'input' → logprob: -2.2602245807647705
    3. ',input' → logprob: -4.510224342346191
    4. '(' → logprob: -5.260224342346191
    5. ')' → logprob: -5.885224342346191
    6. ',' → logprob: -6.010224342346191
    7. ' input' → logprob: -7.885224342346191
    8. '   ' → logprob: -8.760224342346191
    9. ')(' → logprob: -9.635224342346191
    10. ' (' → logprob: -10.135224342346191

Token 111: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519460618495941
    2. ' input' → logprob: -1.5019460916519165
    3. ')' → logprob: -11.876946449279785
    4. '   ' → logprob: -12.001946449279785
    5. '(input' → logprob: -13.251946449279785
    6. '	input' → logprob: -14.251946449279785
    7. '=input' → logprob: -14.501946449279785
    8. ' ' → logprob: -15.001946449279785
    9. ',input' → logprob: -15.126946449279785
    10. '    ' → logprob: -16.87694549560547

Token 112: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09489685297012329
    2. '()' → logprob: -2.9698967933654785
    3. ')' → logprob: -3.7198967933654785
    4. '())' → logprob: -4.2198967933654785
    5. '(' → logprob: -9.969897270202637
    6. '());' → logprob: -10.469897270202637
    7. '()).' → logprob: -10.719897270202637
    8. ').' → logprob: -10.844897270202637
    9. '>()' → logprob: -10.844897270202637
    10. '>().' → logprob: -10.844897270202637

Token 113: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011052182875573635
    2. 'strip' → logprob: -4.511052131652832
    3. 'rstrip' → logprob: -12.511052131652832
    4. ' split' → logprob: -14.886052131652832
    5. 'read' → logprob: -16.01105308532715
    6. 'spl' → logprob: -16.51105308532715
    7. '(split' → logprob: -16.63605308532715
    8. '.split' → logprob: -17.26105308532715
    9. ')' → logprob: -17.38605308532715
    10. '```' → logprob: -18.26105308532715

Token 114: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6685768365859985
    2. ')' → logprob: -1.2935768365859985
    3. '))' → logprob: -2.168576717376709
    4. '()))' → logprob: -2.418576717376709
    5. '()' → logprob: -4.668576717376709
    6. '('' → logprob: -8.168577194213867
    7. '(' → logprob: -9.043577194213867
    8. ' ())' → logprob: -11.043577194213867
    9. ')))' → logprob: -11.168577194213867
    10. '()))
' → logprob: -11.668577194213867

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4880499839782715
    2. '
' → logprob: -0.9880499839782715
    3. '    
' → logprob: -4.7380499839782715
    4. '\n' → logprob: -6.7380499839782715
    5. 'result' → logprob: -7.1130499839782715
    6. 'return' → logprob: -7.4880499839782715
    7. 'n' → logprob: -7.6130499839782715
    8. '  
' → logprob: -7.6130499839782715
    9. 'print' → logprob: -7.9880499839782715
    10. '```' → logprob: -8.11305046081543

Token 116: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05528494343161583
    2. 'result' → logprob: -3.0552849769592285
    3. '   ' → logprob: -5.9302849769592285
    4. 'cost' → logprob: -6.4302849769592285
    5. '#' (adapté à ' #') → logprob: -6.6802849769592285
    6. 'c' → logprob: -8.68028450012207
    7. ' print' → logprob: -8.80528450012207
    8. 'return' → logprob: -8.93028450012207
    9. 'total' → logprob: -9.05528450012207
    10. '```' → logprob: -9.18028450012207

Token 117: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4252094328403473
    2. 'result' → logprob: -2.0502095222473145
    3. 'co' → logprob: -2.5502095222473145
    4. '#' → logprob: -2.8002095222473145
    5. 'cost' → logprob: -3.4252095222473145
    6. 'cout' → logprob: -4.0502095222473145
    7. ' print' → logprob: -4.0502095222473145
    8. ' result' → logprob: -6.3002095222473145
    9. ' #' → logprob: -6.4252095222473145
    10. ' cost' → logprob: -6.8002095222473145

Token 118: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5643216967582703
    2. ' du' → logprob: -2.064321756362915
    3. '<|end|>' → logprob: -2.189321756362915
    4. '_' → logprob: -2.564321756362915
    5. '<|end|>' → logprob: -3.314321756362915
    6. '    ' → logprob: -3.439321756362915
    7. ' de' → logprob: -4.939321517944336
    8. ' ' → logprob: -5.064321517944336
    9. ' =' → logprob: -5.189321517944336
    10. '  ' → logprob: -5.314321517944336

Token 119: ' coût' (ID: 73109)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.17288726568222046
    2. 'minimum' → logprob: -2.2978873252868652
    3. ' minimum' → logprob: -3.5478873252868652
    4. ' min' → logprob: -3.5478873252868652
    5. 'cost' → logprob: -8.672886848449707
    6. '<|end|>' → logprob: -8.672886848449707
    7. 'co' → logprob: -8.922886848449707
    8. ' coût' → logprob: -9.547886848449707
    9. ' cost' → logprob: -9.922886848449707
    10. 'max' → logprob: -11.047886848449707

Token 120: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5416228771209717
    2. '_total' → logprob: -1.2916228771209717
    3. 'total' → logprob: -2.0416228771209717
    4. '_' → logprob: -4.416623115539551
    5. '<|end|>' → logprob: -7.541623115539551
    6. ' totale' → logprob: -8.41662311553955
    7. ' _' → logprob: -9.16662311553955
    8. '_tot' → logprob: -9.54162311553955
    9. '	total' → logprob: -9.66662311553955
    10. '<|end|>' → logprob: -9.66662311553955

Token 121: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3603273630142212
    2. 'total' → logprob: -1.8603273630142212
    3. ' *' → logprob: -2.2353272438049316
    4. '*' → logprob: -2.2353272438049316
    5. ')' → logprob: -2.6103272438049316
    6. ' total' → logprob: -2.7353272438049316
    7. '   ' → logprob: -2.8603272438049316
    8. ',' → logprob: -3.1103272438049316
    9. '=' → logprob: -3.9853272438049316
    10. '    ' → logprob: -4.735327243804932

Token 122: ' coût' (ID: 73109)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6006444692611694
    2. ' a' → logprob: -0.8506444692611694
    3. ' min' → logprob: -3.975644588470459
    4. 'min' → logprob: -5.475644588470459
    5. ' cost' → logprob: -7.975644588470459
    6. ' n' → logprob: -8.1006441116333
    7. 'n' → logprob: -8.3506441116333
    8. 'cost' → logprob: -8.4756441116333
    9. ' ' → logprob: -9.1006441116333
    10. '   ' → logprob: -9.6006441116333

Token 123: ' un' (ID: 537)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3575000762939453
    2. '_total' → logprob: -1.9825000762939453
    3. 'total' → logprob: -2.4825000762939453
    4. ' *' → logprob: -3.1075000762939453
    5. ' =' → logprob: -4.107500076293945
    6. '*' → logprob: -5.232500076293945
    7. '<|end|>' → logprob: -5.732500076293945
    8. ' ' → logprob: -6.232500076293945
    9. '=' → logprob: -6.607500076293945
    10. ')' → logprob: -6.982500076293945

Token 124: 'itaire' (ID: 28335)
  Prédit: 'itaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaire' → logprob: -0.24392041563987732
    2. '   ' → logprob: -2.99392032623291
    3. 'total' → logprob: -3.24392032623291
    4. ' a' → logprob: -3.36892032623291
    5. ' total' → logprob: -3.74392032623291
    6. 'it' → logprob: -4.11892032623291
    7. 'ité' → logprob: -4.49392032623291
    8. '*' → logprob: -4.61892032623291
    9. 'a' → logprob: -4.61892032623291
    10. 't' → logprob: -5.36892032623291

Token 125: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2015416920185089
    2. '*' → logprob: -1.7015416622161865
    3. ')' → logprob: -9.951541900634766
    4. '   ' → logprob: -10.326541900634766
    5. ' ' → logprob: -10.951541900634766
    6. ' ' → logprob: -11.701541900634766
    7. '  ' → logprob: -11.826541900634766
    8. ',' → logprob: -12.576541900634766
    9. '    ' → logprob: -12.951541900634766
    10. '*)' → logprob: -13.951541900634766

Token 126: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.0003571535926312208
    2. 'li' → logprob: -8.625357627868652
    3. 'lic' → logprob: -8.875357627868652
    4. 'lication' → logprob: -10.750357627868652
    5. 'lé' → logprob: -12.000357627868652
    6. '  ' → logprob: -12.875357627868652
    7. '*' → logprob: -13.000357627868652
    8. '   ' → logprob: -13.500357627868652
    9. 'lik' → logprob: -14.875357627868652
    10. '

' → logprob: -14.875357627868652

Token 127: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.33264029026031494
    2. 'par' → logprob: -1.582640290260315
    3. '<|end|>' → logprob: -2.5826401710510254
    4. '<|end|>' → logprob: -7.582640171051025
    5. ')' → logprob: -8.207640647888184
    6. ',' → logprob: -8.207640647888184
    7. 'n' → logprob: -8.832640647888184
    8. '*' → logprob: -9.082640647888184
    9. '_par' → logprob: -9.457640647888184
    10. ' n' → logprob: -9.707640647888184

Token 128: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740997850894928
    2. 'n' → logprob: -0.9740997552871704
    3. 'le' → logprob: -11.849100112915039
    4. ' le' → logprob: -12.349100112915039
    5. '	n' → logprob: -12.474100112915039
    6. 'nombre' → logprob: -13.099100112915039
    7. ' ' → logprob: -13.349100112915039
    8. ' la' → logprob: -13.474100112915039
    9. ' ' → logprob: -14.349100112915039
    10. '(n' → logprob: -14.724100112915039

Token 129: ' quantité' (ID: 89219)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4222802519798279
    2. 'nombre' → logprob: -1.1722803115844727
    3. ' nombre' → logprob: -3.4222803115844727
    4. ' n' → logprob: -6.172280311584473
    5. '<|end|>' → logprob: -10.172280311584473
    6. ' quantité' → logprob: -11.797280311584473
    7. '_nombre' → logprob: -11.922280311584473
    8. ' ' → logprob: -12.797280311584473
    9. ' nombres' → logprob: -12.922280311584473
    10. 'Nombre' → logprob: -13.797280311584473

Token 130: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3727989196777344
    2. '   ' → logprob: -1.3727989196777344
    3. ')' → logprob: -1.4977989196777344
    4. '<|end|>' → logprob: -2.7477989196777344
    5. ' *' → logprob: -2.9977989196777344
    6. ',' → logprob: -3.1227989196777344
    7. 'total' → logprob: -4.247798919677734
    8. ' total' → logprob: -4.247798919677734
    9. '<|end|>' → logprob: -4.247798919677734
    10. ' cost' → logprob: -4.622798919677734

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02488604746758938
    2. ' total' → logprob: -4.899886131286621
    3. 'total' → logprob: -4.899886131286621
    4. 'cost' → logprob: -5.899886131286621
    5. ' cost' → logprob: -6.149886131286621
    6. '    
' → logprob: -6.149886131286621
    7. 'co' → logprob: -8.024886131286621
    8. ',' → logprob: -8.024886131286621
    9. '    ' → logprob: -8.274886131286621
    10. ')' → logprob: -8.524886131286621

Token 132: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3447205722332001
    2. ' cost' → logprob: -1.9697206020355225
    3. 'total' (adapté à ' total') → logprob: -2.2197206020355225
    4. 'cost' → logprob: -3.4697206020355225
    5. ' coût' → logprob: -5.344720363616943
    6. ' cout' → logprob: -5.594720363616943
    7. 'co' → logprob: -6.594720363616943
    8. 'c' → logprob: -7.469720363616943
    9. '   ' → logprob: -8.344720840454102
    10. ' c' → logprob: -8.469720840454102

Token 133: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.4486537277698517
    2. '_' → logprob: -1.4486536979675293
    3. ' =' → logprob: -2.4486536979675293
    4. '_co' → logprob: -3.3236536979675293
    5. '=' → logprob: -5.823653697967529
    6. ' _' → logprob: -7.323653697967529
    7. '_c' → logprob: -8.448654174804688
    8. 'cost' → logprob: -9.698654174804688
    9. '_price' → logprob: -9.823654174804688
    10. '_a' → logprob: -9.948654174804688

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048588961362838745
    2. '=' → logprob: -3.048588991165161
    3. ')' → logprob: -14.048588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '_' → logprob: -16.0485897064209
    6. ' =
' → logprob: -16.0485897064209
    7. ' ' → logprob: -16.1735897064209
    8. '   ' → logprob: -16.4235897064209
    9. 's' → logprob: -16.6735897064209
    10. '  ' → logprob: -17.1735897064209

Token 135: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47416532039642334
    2. 'a' → logprob: -0.9741653203964233
    3. ' n' → logprob: -9.724164962768555
    4. 'n' → logprob: -10.599164962768555
    5. '	a' → logprob: -13.099164962768555
    6. ' ' → logprob: -14.849164962768555
    7. '   ' → logprob: -14.849164962768555
    8. '_a' → logprob: -15.474164962768555
    9. ' ' → logprob: -15.599164962768555
    10. '(a' → logprob: -16.474164962768555

Token 136: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002815932035446167
    2. '*' → logprob: -5.8778157234191895
    3. ' ' → logprob: -12.002816200256348
    4. ' ' → logprob: -12.502816200256348
    5. '*n' → logprob: -14.252816200256348
    6. ' **' → logprob: -15.252816200256348
    7. ')' → logprob: -15.502816200256348
    8. ' *
' → logprob: -17.00281524658203
    9. ' ***' → logprob: -17.12781524658203
    10. '  ' → logprob: -17.25281524658203

Token 137: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31326204538345337
    2. ' n' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.688261985778809
    4. '	n' → logprob: -16.188262939453125
    5. '   ' → logprob: -17.188262939453125
    6. ' ' → logprob: -17.938262939453125
    7. '_n' → logprob: -18.438262939453125
    8. '  ' → logprob: -19.313262939453125
    9. ')n' → logprob: -19.688262939453125
    10. '    ' → logprob: -19.938262939453125

Token 138: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005349974613636732
    2. '   ' → logprob: -5.755350112915039
    3. '    
' → logprob: -7.005350112915039
    4. '<|end|>' → logprob: -7.380350112915039
    5. '  
' → logprob: -8.755350112915039
    6. '

' → logprob: -9.255350112915039
    7. '\n' → logprob: -9.255350112915039
    8. '
' → logprob: -9.630350112915039
    9. ')' → logprob: -10.505350112915039
    10. ' 
' → logprob: -10.755350112915039

Token 139: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4151943624019623
    2. '   ' → logprob: -1.1651943922042847
    3. '    
' → logprob: -3.665194272994995
    4. '<|end|>' → logprob: -7.165194511413574
    5. '  
' → logprob: -7.415194511413574
    6. '

' → logprob: -8.665194511413574
    7. '   
' → logprob: -8.790194511413574
    8. 'b' → logprob: -9.415194511413574
    9. ' 
' → logprob: -9.540194511413574
    10. '
' → logprob: -9.790194511413574

Token 140: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10054448246955872
    2. 'result' → logprob: -2.7255444526672363
    3. '#' (adapté à ' #') → logprob: -3.9755444526672363
    4. '   ' → logprob: -5.225544452667236
    5. 'if' → logprob: -5.975544452667236
    6. '
' → logprob: -6.600544452667236
    7. ' print' → logprob: -7.225544452667236
    8. 'min' → logprob: -7.850544452667236
    9. '    
' → logprob: -8.350544929504395
    10. 'minimum' → logprob: -8.725544929504395

Token 141: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9201142191886902
    2. 'result' → logprob: -0.9201142191886902
    3. '#' → logprob: -2.795114278793335
    4. 'cost' → logprob: -3.170114278793335
    5. ' result' → logprob: -3.670114278793335
    6. 'min' → logprob: -3.795114278793335
    7. 'minimum' → logprob: -3.920114278793335
    8. ' print' → logprob: -4.045114040374756
    9. ' cost' → logprob: -5.295114040374756
    10. ' min' → logprob: -6.670114040374756

Token 142: 'termination' (ID: 173292)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.06479541212320328
    2. 'termination' → logprob: -3.43979549407959
    3. 'f' → logprob: -3.93979549407959
    4. 'fin' → logprob: -4.68979549407959
    5. 'termin' → logprob: -6.43979549407959
    6. '#' → logprob: -9.81479549407959
    7. 'c' → logprob: -9.93979549407959
    8. 'fi' → logprob: -10.18979549407959
    9. 'tection' → logprob: -10.31479549407959
    10. ' termine' → logprob: -10.43979549407959

Token 143: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.26943063735961914
    2. '<|end|>' → logprob: -1.5194306373596191
    3. ' de' → logprob: -5.019430637359619
    4. 'du' → logprob: -5.769430637359619
    5. '<|end|>' → logprob: -5.769430637359619
    6. '   ' → logprob: -5.894430637359619
    7. ' of' → logprob: -7.144430637359619
    8. ' if' → logprob: -8.644430160522461
    9. 'de' → logprob: -9.019430160522461
    10. 'le' → logprob: -9.519430160522461

Token 144: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14282408356666565
    2. ' min' → logprob: -2.017824172973633
    3. ' la' → logprob: -10.017824172973633
    4. '(min' → logprob: -10.142824172973633
    5. 'la' → logprob: -11.267824172973633
    6. 'le' → logprob: -11.392824172973633
    7. 'max' → logprob: -11.767824172973633
    8. '=min' → logprob: -11.892824172973633
    9. 'minimum' → logprob: -12.142824172973633
    10. 'the' → logprob: -12.142824172973633

Token 145: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08416519314050674
    2. 'minimum' → logprob: -3.209165096282959
    3. ' min' → logprob: -3.334165096282959
    4. ' minimum' → logprob: -5.459165096282959
    5. 'result' → logprob: -8.334165573120117
    6. 'print' → logprob: -9.459165573120117
    7. 'cost' → logprob: -9.834165573120117
    8. 'co' → logprob: -11.334165573120117
    9. ' result' → logprob: -12.084165573120117
    10. '(min' → logprob: -12.209165573120117

Token 146: ' minimale' (ID: 143217)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.14341212809085846
    2. 'minimum' → logprob: -3.0184121131896973
    3. ' minimale' → logprob: -3.2684121131896973
    4. ' min' → logprob: -3.3934121131896973
    5. ' minimum' → logprob: -5.018412113189697
    6. '_min' → logprob: -6.143412113189697
    7. '   ' → logprob: -6.393412113189697
    8. ' à' → logprob: -7.393412113189697
    9. ' minimal' → logprob: -8.018412590026855
    10. 'max' → logprob: -8.143412590026855

Token 147: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.7654659152030945
    2. '   ' → logprob: -1.2654659748077393
    3. ',' → logprob: -2.5154659748077393
    4. ' between' → logprob: -2.6404659748077393
    5. ' =' → logprob: -2.8904659748077393
    6. 'result' → logprob: -4.76546573638916
    7. '    
' → logprob: -4.89046573638916
    8. 'between' → logprob: -5.26546573638916
    9. '<|end|>' → logprob: -5.39046573638916
    10. 'entre' → logprob: -5.76546573638916

Token 148: ' le' (ID: 505)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.01312634814530611
    2. 'total' → logprob: -4.388126373291016
    3. ' b' → logprob: -7.513126373291016
    4. 'b' → logprob: -9.763126373291016
    5. ' ' → logprob: -12.513126373291016
    6. ' ' → logprob: -12.888126373291016
    7. '(total' → logprob: -13.013126373291016
    8. ' la' → logprob: -13.638126373291016
    9. ' the' → logprob: -13.638126373291016
    10. '	total' → logprob: -14.513126373291016

Token 149: ' coût' (ID: 73109)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11401227116584778
    2. ' total' → logprob: -2.2390122413635254
    3. 'cost' → logprob: -7.614012241363525
    4. 'co' → logprob: -7.864012241363525
    5. 'b' → logprob: -8.614012718200684
    6. ' coût' → logprob: -9.989012718200684
    7. 'cout' → logprob: -10.739012718200684
    8. ' cost' → logprob: -10.864012718200684
    9. ' b' → logprob: -11.239012718200684
    10. '(total' → logprob: -12.239012718200684

Token 150: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3205801546573639
    2. ' total' → logprob: -1.3205801248550415
    3. '_total' → logprob: -4.945580005645752
    4. '   ' → logprob: -9.57058048248291
    5. '	total' → logprob: -10.94558048248291
    6. 'tot' → logprob: -11.07058048248291
    7. ' et' → logprob: -11.19558048248291
    8. ',' → logprob: -11.32058048248291
    9. '(total' → logprob: -11.57058048248291
    10. '_' → logprob: -11.69558048248291

Token 151: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8914937376976013
    2. ' et' → logprob: -1.516493797302246
    3. 'et' → logprob: -1.891493797302246
    4. ' and' → logprob: -2.141493797302246
    5. '   ' → logprob: -2.391493797302246
    6. 'and' → logprob: -5.516493797302246
    7. 'total' → logprob: -6.641493797302246
    8. '<|end|>' → logprob: -6.766493797302246
    9. ' ,' → logprob: -7.266493797302246
    10. ' и' → logprob: -7.266493797302246

Token 152: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04343872889876366
    2. 'b' → logprob: -3.168438673019409
    3. ' ' → logprob: -7.918438911437988
    4. ' la' → logprob: -9.793438911437988
    5. ' ' → logprob: -11.293438911437988
    6. ' le' → logprob: -12.918438911437988
    7. ' the' → logprob: -14.043438911437988
    8. 'le' → logprob: -14.293438911437988
    9. 'la' → logprob: -14.543438911437988
    10. 'the' → logprob: -14.543438911437988

Token 153: ' limite' (ID: 48939)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06204733997583389
    2. 'b' → logprob: -2.812047243118286
    3. ' ' → logprob: -9.687047004699707
    4. ' ' → logprob: -11.687047004699707
    5. '	b' → logprob: -13.687047004699707
    6. '```' → logprob: -13.812047004699707
    7. '_b' → logprob: -14.249547004699707
    8. '   ' → logprob: -14.374547004699707
    9. ' max' → logprob: -14.624547004699707
    10. 's' → logprob: -14.687047004699707

Token 154: ' impos' (ID: 12130)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9358776807785034
    2. '   ' → logprob: -1.1858776807785034
    3. ' min' → logprob: -1.3108776807785034
    4. 'result' → logprob: -4.435877799987793
    5. 'minimum' → logprob: -5.185877799987793
    6. ' minimum' → logprob: -5.310877799987793
    7. ' result' → logprob: -5.685877799987793
    8. 'b' → logprob: -6.560877799987793
    9. ',' → logprob: -6.560877799987793
    10. '_min' → logprob: -7.435877799987793

Token 155: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.014219094067811966
    2. 'ite' → logprob: -4.639219284057617
    3. 'e' → logprob: -5.764219284057617
    4. 'é' → logprob: -7.639219284057617
    5. 'ee' → logprob: -8.389219284057617
    6. '   ' → logprob: -8.639219284057617
    7. 'it' → logprob: -9.139219284057617
    8. 's' → logprob: -9.639219284057617
    9. '
' → logprob: -10.264219284057617
    10. 'b' → logprob: -10.639219284057617

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5845925807952881
    2. 'result' → logprob: -1.084592580795288
    3. ' result' → logprob: -2.709592580795288
    4. '
' → logprob: -4.084592819213867
    5. 'min' → logprob: -4.709592819213867
    6. ',' → logprob: -5.834592819213867
    7. '    
' → logprob: -6.084592819213867
    8. 'minimum' → logprob: -6.584592819213867
    9. '```' → logprob: -6.709592819213867
    10. 'print' → logprob: -6.834592819213867

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34270474314689636
    2. 'result' → logprob: -1.8427047729492188
    3. ' result' → logprob: -2.0927047729492188
    4. ' print' → logprob: -6.217704772949219
    5. 'print' → logprob: -6.592704772949219
    6. '    
' → logprob: -6.842704772949219
    7. 'min' → logprob: -6.842704772949219
    8. '
' → logprob: -6.842704772949219
    9. ' minimum' → logprob: -7.467704772949219
    10. ' min' → logprob: -7.842704772949219

Token 158: ' result' (ID: 1534)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6247178912162781
    2. ' min' → logprob: -1.1247179508209229
    3. 'result' (adapté à ' result') → logprob: -2.749717950820923
    4. 'print' → logprob: -3.249717950820923
    5. ' result' → logprob: -3.749717950820923
    6. ' print' → logprob: -4.499717712402344
    7. 'minimum' → logprob: -6.999717712402344
    8. 'cost' → logprob: -7.374717712402344
    9. ' minimum' → logprob: -7.874717712402344
    10. ' cost' → logprob: -8.124717712402344

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020542588084936142
    2. '=' → logprob: -3.895542621612549
    3. ' =
' → logprob: -15.52054214477539
    4. ')' → logprob: -15.64554214477539
    5. ' ' → logprob: -16.14554214477539
    6. ' ' → logprob: -16.14554214477539
    7. '   ' → logprob: -17.14554214477539
    8. '  ' → logprob: -17.14554214477539
    9. '_' → logprob: -17.39554214477539
    10. ' =
' → logprob: -17.39554214477539

Token 160: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.020542940124869347
    2. 'min' → logprob: -3.895542860031128
    3. '	min' → logprob: -15.520543098449707
    4. ' ' → logprob: -15.645543098449707
    5. ' minimum' → logprob: -15.895543098449707
    6. '   ' → logprob: -16.02054214477539
    7. '(min' → logprob: -16.14554214477539
    8. 'b' → logprob: -16.89554214477539
    9. ' ' → logprob: -16.89554214477539
    10. ' max' → logprob: -17.02054214477539

Token 161: '(b' (ID: 3229)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0015060516307130456
    2. '(' → logprob: -6.5015058517456055
    3. 'total' → logprob: -12.626505851745605
    4. '(t' → logprob: -15.626505851745605
    5. '(
' → logprob: -16.126506805419922
    6. ' total' → logprob: -16.501506805419922
    7. ' (' → logprob: -16.626506805419922
    8. '(a' → logprob: -16.751506805419922
    9. ',total' → logprob: -17.626506805419922
    10. '(b' → logprob: -18.501506805419922

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021962920436635613
    2. ' ,' → logprob: -8.625219345092773
    3. ')' → logprob: -10.500219345092773
    4. ',total' → logprob: -11.750219345092773
    5. ',
' → logprob: -13.125219345092773
    6. '   ' → logprob: -13.375219345092773
    7. ',)' → logprob: -14.750219345092773
    8. 'total' → logprob: -15.250219345092773
    9. ',n' → logprob: -15.500219345092773
    10. ' )' → logprob: -16.375219345092773

Token 163: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2519305646419525
    2. 'total' → logprob: -1.501930594444275
    3. ' ' → logprob: -14.501930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '	total' → logprob: -15.501930236816406
    6. '(total' → logprob: -15.626930236816406
    7. '   ' → logprob: -16.751930236816406
    8. ' tota' → logprob: -16.876930236816406
    9. ')' → logprob: -17.001930236816406
    10. ' tot' → logprob: -17.126930236816406

Token 164: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00016218038217630237
    2. 'cost' → logprob: -9.625162124633789
    3. '_co' → logprob: -10.000162124633789
    4. '_' → logprob: -10.750162124633789
    5. ')' → logprob: -11.000162124633789
    6. ' _' → logprob: -13.375162124633789
    7. '_total' → logprob: -13.500162124633789
    8. ')_' → logprob: -13.500162124633789
    9. 'Cost' → logprob: -14.000162124633789
    10. '_c' → logprob: -14.125162124633789

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.686778503237292e-05
    2. ')
' → logprob: -9.250097274780273
    3. ' )' → logprob: -15.125097274780273
    4. ')

' → logprob: -15.375097274780273
    5. '   ' → logprob: -15.625097274780273
    6. ')
' → logprob: -16.750097274780273
    7. '))' → logprob: -17.375097274780273
    8. '),' → logprob: -18.875097274780273
    9. ')`' → logprob: -19.250097274780273
    10. ')}' → logprob: -19.875097274780273

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010607603006064892
    2. 'print' → logprob: -5.010607719421387
    3. '
' → logprob: -5.635607719421387
    4. '    
' → logprob: -8.135607719421387
    5. '```' → logprob: -11.135607719421387
    6. ' print' → logprob: -12.385607719421387
    7. '  
' → logprob: -13.260607719421387
    8. '
' → logprob: -14.260607719421387
    9. '	print' → logprob: -14.635607719421387
    10. '<|end|>' → logprob: -15.135607719421387

Token 167: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12701787054538727
    2. '   ' → logprob: -2.1270179748535156
    3. ' print' → logprob: -9.377017974853516
    4. '
' → logprob: -12.877017974853516
    5. '```' → logprob: -13.502017974853516
    6. '    
' → logprob: -13.877017974853516
    7. '	print' → logprob: -15.752017974853516
    8. '#print' → logprob: -16.752017974853516
    9. '#' (adapté à ' #') → logprob: -17.002017974853516
    10. '  ' → logprob: -17.127017974853516

Token 168: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009518369333818555
    2. ' print' → logprob: -7.000951766967773
    3. '   ' → logprob: -10.125951766967773
    4. 'Print' → logprob: -16.375951766967773
    5. 'aff' → logprob: -16.500951766967773
    6. '#' → logprob: -16.875951766967773
    7. '```' → logprob: -17.125951766967773
    8. '  ' → logprob: -17.250951766967773
    9. 'pr' → logprob: -17.375951766967773
    10. 'return' → logprob: -17.500951766967773

Token 169: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.10096278786659241
    2. 'icher' → logprob: -2.3509628772735596
    3. 'ichage' → logprob: -7.3509626388549805
    4. '#' → logprob: -9.60096263885498
    5. 'ic' → logprob: -10.85096263885498
    6. 'ich' → logprob: -11.60096263885498
    7. '   ' → logprob: -12.47596263885498
    8. 'che' → logprob: -12.47596263885498
    9. 'ichier' → logprob: -13.60096263885498
    10. '

' → logprob: -13.60096263885498

Token 170: ' la' (ID: 557)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.1269908845424652
    2. '(' → logprob: -2.126990795135498
    3. '   ' → logprob: -10.876991271972656
    4. '()' → logprob: -11.001991271972656
    5. '(
' → logprob: -11.376991271972656
    6. 'result' → logprob: -12.376991271972656
    7. ' (' → logprob: -12.376991271972656
    8. '(res' → logprob: -13.251991271972656
    9. '(resultado' → logprob: -13.876991271972656
    10. ')' → logprob: -14.126991271972656

Token 171: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1362387239933014
    2. ' result' → logprob: -2.1362388134002686
    3. 'rés' → logprob: -5.5112385749816895
    4. '(result' → logprob: -5.8862385749816895
    5. ' résultat' → logprob: -6.2612385749816895
    6. 'r' → logprob: -8.261239051818848
    7. '   ' → logprob: -9.136239051818848
    8. ' resultat' → logprob: -9.636239051818848
    9. ' valeur' → logprob: -10.261239051818848
    10. ' résult' → logprob: -10.761239051818848

Token 172: ' minimale' (ID: 143217)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23692791163921356
    2. '(result' → logprob: -1.98692786693573
    3. ' result' → logprob: -3.2369279861450195
    4. '   ' → logprob: -3.4869279861450195
    5. ' finale' → logprob: -7.1119279861450195
    6. ')' → logprob: -7.4869279861450195
    7. ' ' → logprob: -7.7369279861450195
    8. ' minimale' → logprob: -7.9869279861450195
    9. '(' → logprob: -8.23692798614502
    10. ' résultat' → logprob: -8.61192798614502

Token 173: ' calcul' (ID: 7559)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.38897034525871277
    2. '   ' → logprob: -1.2639703750610352
    3. 'print' → logprob: -3.888970375061035
    4. '(' → logprob: -4.263970375061035
    5. 'result' → logprob: -6.013970375061035
    6. '()' → logprob: -6.638970375061035
    7. '(print' → logprob: -7.013970375061035
    8. ')' → logprob: -8.763970375061035
    9. ',' → logprob: -8.888970375061035
    10. '()
' → logprob: -9.888970375061035

Token 174: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00011915886716451496
    2. 'é' → logprob: -9.37511920928955
    3. 'ee' → logprob: -10.50011920928955
    4. 'e' → logprob: -12.25011920928955
    5. '   ' → logprob: -14.25011920928955
    6. 'è' → logprob: -14.25011920928955
    7. '#' → logprob: -15.12511920928955
    8. 'rée' → logprob: -16.375118255615234
    9. 'É' → logprob: -16.500118255615234
    10. 'lée' → logprob: -17.000118255615234

Token 175: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018559353426098824
    2. 'print' → logprob: -4.643559455871582
    3. '
' → logprob: -5.643559455871582
    4. '()' → logprob: -6.268559455871582
    5. '()
' → logprob: -6.518559455871582
    6. '(' → logprob: -6.768559455871582
    7. ' print' → logprob: -8.143559455871582
    8. '(print' → logprob: -8.518559455871582
    9. '(result' → logprob: -9.893559455871582
    10. '```' → logprob: -10.018559455871582

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1565430462360382
    2. 'print' → logprob: -2.281543016433716
    3. ' print' → logprob: -3.156543016433716
    4. '
' → logprob: -8.781542778015137
    5. '```' → logprob: -10.281542778015137
    6. '    
' → logprob: -12.281542778015137
    7. '	print' → logprob: -12.531542778015137
    8. '  ' → logprob: -12.781542778015137
    9. '(print' → logprob: -13.406542778015137
    10. ' ' → logprob: -14.156542778015137

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9027791495318525e-05
    2. ' print' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.000019073486328
    4. '```' → logprob: -19.375019073486328
    5. 'pr' → logprob: -21.750019073486328
    6. 'prin' → logprob: -22.750019073486328
    7. '	print' → logprob: -23.250019073486328
    8. '  ' → logprob: -23.875019073486328
    9. '(print' → logprob: -24.375019073486328
    10. 'pri' → logprob: -24.500019073486328

Token 178: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759737491607666
    2. '(result' → logprob: -0.8259737491607666
    3. ' (' → logprob: -11.200973510742188
    4. '()' → logprob: -11.825973510742188
    5. '(res' → logprob: -11.825973510742188
    6. '((' → logprob: -13.950973510742188
    7. '(
' → logprob: -13.950973510742188
    8. '(results' → logprob: -14.075973510742188
    9. '(resultado' → logprob: -14.200973510742188
    10. 'result' → logprob: -14.575973510742188

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.750000953674316
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -18.25
    6. '()' → logprob: -19.125
    7. '')' → logprob: -19.25
    8. '`)' → logprob: -19.75
    9. '())' → logprob: -20.0
    10. '")' → logprob: -20.5

Token 180: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7442691922187805
    2. 'if' → logprob: -0.7442691922187805
    3. '<|end|>' → logprob: -3.8692691326141357
    4. '```' → logprob: -4.369269371032715
    5. '\n' → logprob: -4.619269371032715
    6. ' if' → logprob: -6.244269371032715
    7. '#' → logprob: -6.869269371032715
    8. 'main' → logprob: -7.244269371032715
    9. '\' → logprob: -7.494269371032715
    10. '  
' → logprob: -7.744269371032715

Token 181: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011895394884049892
    2. '__' → logprob: -4.886895179748535
    3. ' ' → logprob: -5.511895179748535
    4. '_' → logprob: -9.386895179748535
    5. ' ' → logprob: -9.636895179748535
    6. ' _' → logprob: -9.761895179748535
    7. ' ' → logprob: -11.386895179748535
    8. ' ​' → logprob: -11.761895179748535
    9. ' main' → logprob: -12.386895179748535
    10. ' ‌' → logprob: -12.761895179748535

Token 182: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14239293336868286
    2. ' ==' → logprob: -2.142392873764038
    3. ' __' → logprob: -4.767393112182617
    4. '==' → logprob: -5.392393112182617
    5. 'name' → logprob: -6.267393112182617
    6. '_' → logprob: -9.392393112182617
    7. '[' → logprob: -9.767393112182617
    8. '=="' → logprob: -10.267393112182617
    9. ' =="' → logprob: -10.392393112182617
    10. '.__' → logprob: -10.517393112182617

Token 183: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '__.__' → logprob: -14.250000953674316
    3. '____' → logprob: -16.625
    4. '___' → logprob: -16.875
    5. '__
' → logprob: -17.375
    6. '==' → logprob: -17.375
    7. '_' → logprob: -17.625
    8. '__.' → logprob: -18.125
    9. ' __' → logprob: -18.5
    10. '__

' → logprob: -18.625

Token 184: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00846989918500185
    2. ' ==' → logprob: -5.258470058441162
    3. '==' → logprob: -5.758470058441162
    4. '=="' → logprob: -10.008469581604004
    5. '_' → logprob: -11.258469581604004
    6. '__.__' → logprob: -11.508469581604004
    7. ' __' → logprob: -13.633469581604004
    8. '___' → logprob: -13.883469581604004
    9. '=' → logprob: -14.008469581604004
    10. '"' → logprob: -14.258469581604004

Token 185: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006778253708034754
    2. ''' → logprob: -5.006778240203857
    3. ' "__' → logprob: -9.881778717041016
    4. '__' → logprob: -11.506778717041016
    5. ' '__' → logprob: -14.506778717041016
    6. '"user' → logprob: -14.756778717041016
    7. '"name' → logprob: -14.881778717041016
    8. ' "' → logprob: -15.256778717041016
    9. ''"' → logprob: -17.256778717041016
    10. '"class' → logprob: -17.256778717041016

Token 186: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019837100990116596
    2. '__' → logprob: -6.251983642578125
    3. '"' → logprob: -9.876983642578125
    4. ' main' → logprob: -13.126983642578125
    5. '_main' → logprob: -13.876983642578125
    6. ' "__' → logprob: -15.001983642578125
    7. 'name' → logprob: -15.751983642578125
    8. '	main' → logprob: -16.251983642578125
    9. '-main' → logprob: -16.626983642578125
    10. '"name' → logprob: -17.126983642578125

Token 187: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3868802487850189
    2. '__' → logprob: -1.1368802785873413
    3. '__':
' → logprob: -11.636879920959473
    4. '_' → logprob: -15.886879920959473
    5. '__["' → logprob: -16.38688087463379
    6. '__("' → logprob: -16.38688087463379
    7. '___' → logprob: -17.63688087463379
    8. '_"' → logprob: -17.76188087463379
    9. '"' → logprob: -18.01188087463379
    10. '__",' → logprob: -18.13688087463379

Token 188: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19616426527500153
    2. 'main' → logprob: -1.9461642503738403
    3. '   ' → logprob: -3.69616436958313
    4. '"' → logprob: -5.821164131164551
    5. '	main' → logprob: -6.196164131164551
    6. ' ' → logprob: -6.946164131164551
    7. '    
' → logprob: -7.071164131164551
    8. '    ' → logprob: -7.196164131164551
    9. ' 
' → logprob: -7.321164131164551
    10. ' ' → logprob: -7.321164131164551

Token 189: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.06197183206677437
    2. ' main' → logprob: -2.81197190284729
    3. '	main' → logprob: -12.686971664428711
    4. '   ' → logprob: -13.811971664428711
    5. ' ' → logprob: -17.81197166442871
    6. '(main' → logprob: -18.06197166442871
    7. '_main' → logprob: -18.18697166442871
    8. '  ' → logprob: -18.68697166442871
    9. ' ' → logprob: -18.68697166442871
    10. '.main' → logprob: -18.93697166442871

Token 190: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 66
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 35.11%
Précision adaptée (1ère position): 36.70%
Précision (top 10): 69.68%
================================================================================
